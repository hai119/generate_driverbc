; ModuleID = '../bcout/drivers/net/ethernet/mellanox/mlxsw/core.llvm.bc'
source_filename = "drivers/net/ethernet/mellanox/mlxsw/core.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_mlxsw_core_module_init6:\09\09\09"
module asm ".long\09mlxsw_core_module_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.spinlock = type { %union.anon }
%union.anon = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.mlxsw_reg_info = type { i16, i16, i8* }
%struct.workqueue_struct = type opaque
%struct.devlink_ops = type { i32, i64, i64, i32 (%struct.devlink*, i1, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32, i32, i32*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink_port*, i32)*, i32 (%struct.devlink*, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32, i16, %struct.devlink_sb_pool_info*)*, i32 (%struct.devlink*, i32, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink_port*, i32, i16, i32*)*, i32 (%struct.devlink_port*, i32, i16, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink_port*, i32, i16, i32, i16*, i32*)*, i32 (%struct.devlink_port*, i32, i16, i32, i16, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32)*, i32 (%struct.devlink*, i32)*, i32 (%struct.devlink_port*, i32, i16, i32*, i32*)*, i32 (%struct.devlink_port*, i32, i16, i32, i32*, i32*)*, i32 (%struct.devlink*, i16*)*, i32 (%struct.devlink*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i8*)*, i32 (%struct.devlink*, i8, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32*)*, i32 (%struct.devlink*, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_info_req*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_flash_update_params*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap*, i8*)*, void (%struct.devlink*, %struct.devlink_trap*, i8*)*, i32 (%struct.devlink*, %struct.devlink_trap*, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap_group*)*, i32 (%struct.devlink*, %struct.devlink_trap_group*, %struct.devlink_trap_policer*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap_group*, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap_policer*)*, void (%struct.devlink*, %struct.devlink_trap_policer*)*, i32 (%struct.devlink*, %struct.devlink_trap_policer*, i64, i64, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap_policer*, i64*)*, i32 (%struct.devlink*, %struct.devlink_port*, i8*, i32*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_port*, i8*, i32, %struct.netlink_ext_ack*)* }
%struct.devlink = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.devlink_dpipe_headers*, %struct.list_head, %struct.list_head, %struct.list_head, %struct.devlink_ops*, %struct.xarray, %struct.devlink_dev_stats, %struct.device*, %struct.possible_net_t, %struct.mutex, i8, [31 x i8], [0 x i8] }
%struct.devlink_dpipe_headers = type { %struct.devlink_dpipe_header**, i32 }
%struct.devlink_dpipe_header = type { i8*, i32, %struct.devlink_dpipe_field*, i32, i8 }
%struct.devlink_dpipe_field = type { i8*, i32, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.devlink_dev_stats = type { [6 x i32], [6 x i32] }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.86, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.atomic_t = type { i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.86 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.0, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.0 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.84, %struct.list_head, %struct.list_head, %union.anon.85 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.1, i8* }
%union.anon.1 = type { i64 }
%struct.lockref = type { %union.anon.82 }
%union.anon.82 = type { %struct.anon.83 }
%struct.anon.83 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.2, %union.anon.74, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.74 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.75, i32 }
%union.anon.75 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.67, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.18, [0 x i64] }
%struct.anon.18 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.19, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.19 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.20 }
%union.anon.20 = type { %struct.anon.21 }
%struct.anon.21 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.25, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.26, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.27, %union.anon.31, %struct.key_restriction* }
%union.anon.25 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.26 = type { i64 }
%union.anon.27 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.28, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.28 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.31 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type { %struct.refcount_struct, %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, %struct.key_tag*, %struct.user_namespace*, %struct.ucounts*, %struct.idr, %struct.ns_common, %struct.list_head, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.ctl_table_set, %struct.sock*, %struct.sock*, %struct.uevent_sock*, %struct.hlist_head*, %struct.hlist_head*, %struct.raw_notifier_head, i32, %struct.net_device*, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, %struct.netns_ipv4, %struct.netns_ipv6, %struct.sk_buff_head, %struct.net_generic*, %struct.netns_bpf, %struct.atomic64_t, %struct.netns_can, %struct.sock* }
%struct.llist_node = type { %struct.llist_node* }
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.proc_dir_entry = type opaque
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.35, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.35 = type { %struct.anon.36 }
%struct.anon.36 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.uevent_sock = type opaque
%struct.raw_notifier_head = type { %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.net_device = type { [16 x i8], %struct.netdev_name_node*, %struct.dev_ifalias*, i64, i64, i64, i32, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.88, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.net_device_stats, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.iw_handler_def*, %struct.iw_public_data*, %struct.net_device_ops*, %struct.ethtool_ops*, %struct.ndisc_ops*, %struct.header_ops*, i32, i32, i16, i16, i8, i8, i8, i8, i32, i32, i32, i16, i16, i8, i8, i16, i16, [32 x i8], i8, i8, i8, i8, i16, i16, i16, %struct.spinlock, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.kset*, i32, i32, i8, %struct.vlan_info*, %struct.in_device*, %struct.inet6_dev*, %struct.wireless_dev*, %struct.wpan_dev*, i8*, %struct.netdev_rx_queue*, i32, i32, %struct.bpf_prog*, i64, i32, i32 (%struct.sk_buff**)*, i8*, %struct.netdev_queue*, [32 x i8], %struct.hlist_node, %struct.netdev_queue*, i32, i32, %struct.Qdisc*, i32, %struct.spinlock, %struct.xdp_dev_bulk_queue*, %struct.timer_list, i32, i32, %struct.list_head, i32*, %struct.list_head, i8, i8, i16, i8, void (%struct.net_device*)*, %struct.possible_net_t, %union.anon.128, %struct.device, [4 x %struct.attribute_group*], %struct.attribute_group*, %struct.rtnl_link_ops*, i32, i16, i16, [16 x %struct.netdev_tc_txq], [16 x i8], %struct.phy_device*, %struct.sfp_bus*, %struct.lock_class_key*, %struct.lock_class_key*, i8, i8, %struct.list_head, %struct.udp_tunnel_nic_info*, %struct.udp_tunnel_nic*, [3 x %struct.bpf_xdp_entity] }
%struct.netdev_name_node = type { %struct.hlist_node, %struct.list_head, %struct.net_device*, i8* }
%struct.dev_ifalias = type { %struct.callback_head, [0 x i8] }
%struct.anon.88 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.iw_handler_def = type opaque
%struct.iw_public_data = type opaque
%struct.net_device_ops = type { i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.sk_buff*, %struct.net_device*, i64)*, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*)*, i32 (%struct.net_device*, i8*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ifreq*, i32)*, i32 (%struct.net_device*, %struct.ifmap*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.neigh_parms*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.rtnl_link_stats64*)*, i1 (%struct.net_device*, i32)*, i32 (i32, %struct.net_device*, i8*)*, %struct.net_device_stats* (%struct.net_device*)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32, i16, i8, i16)*, i32 (%struct.net_device*, i32, i32, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)*, i32 (%struct.net_device*, i32, %struct.nlattr**)*, i32 (%struct.net_device*, i32, %struct.sk_buff*)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)*, i32 (%struct.net_device*, i32, i64, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.net_device*)*, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)*, i64 (%struct.net_device*, i64)*, i32 (%struct.net_device*, i64)*, i32 (%struct.net_device*, %struct.neighbour*)*, void (%struct.net_device*, %struct.neighbour*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)*, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)*, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, i8*, i64)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, i8* (%struct.net_device*, %struct.net_device*)*, void (%struct.net_device*, i8*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.sk_buff*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.netdev_bpf*)*, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)*, i32 (%struct.net_device*, i32, i32)*, %struct.devlink_port* (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)*, %struct.net_device* (%struct.net_device*)* }
%struct.sk_buff = type { %union.anon.40, %union.anon.43, %union.anon.44, [48 x i8], %union.anon.45, i32, i32, i16, i16, i16, [0 x i8], i8, [0 x i32], [0 x i8], i16, [0 x i8], i16, %union.anon.47, i32, i32, i32, i16, i16, %union.anon.49, %union.anon.50, %union.anon.51, i16, i16, i16, i16, i16, i16, i16, [0 x i32], i32, i32, i8*, i8*, i32, %struct.refcount_struct }
%union.anon.40 = type { %struct.anon.41 }
%struct.anon.41 = type { %struct.sk_buff*, %struct.sk_buff*, %union.anon.42 }
%union.anon.42 = type { %struct.net_device* }
%union.anon.43 = type { %struct.sock* }
%union.anon.44 = type { i64 }
%union.anon.45 = type { %struct.anon.46 }
%struct.anon.46 = type { i64, void (%struct.sk_buff*)* }
%union.anon.47 = type { i32 }
%union.anon.49 = type { i32 }
%union.anon.50 = type { i32 }
%union.anon.51 = type { i16 }
%struct.ifreq = type { %union.anon.89, %union.anon.90 }
%union.anon.89 = type { [16 x i8] }
%union.anon.90 = type { %struct.ifmap }
%struct.ifmap = type { i64, i64, i16, i8, i8, i8 }
%struct.neigh_parms = type opaque
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_info = type { i32, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.ifla_vf_stats = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.nlattr = type { i16, i16 }
%struct.ifla_vf_guid = type { i32, i64 }
%struct.neighbour = type opaque
%struct.ndmsg = type { i8, i8, i16, i32, i16, i8, i8 }
%struct.netlink_callback = type { %struct.sk_buff*, %struct.nlmsghdr*, i32 (%struct.sk_buff*, %struct.netlink_callback*)*, i32 (%struct.netlink_callback*)*, i8*, %struct.module*, %struct.netlink_ext_ack*, i16, i16, i32, i32, i32, i8, %union.anon.92 }
%struct.nlmsghdr = type { i32, i16, i16, i32, i32 }
%union.anon.92 = type { [6 x i64] }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%struct.udp_tunnel_info = type opaque
%struct.netdev_bpf = type { i32, %union.anon.93 }
%union.anon.93 = type { %struct.anon.94 }
%struct.anon.94 = type { i32, %struct.bpf_prog*, %struct.netlink_ext_ack* }
%struct.xdp_frame = type { i8*, i16, i16, i32, %struct.xdp_mem_info, %struct.net_device* }
%struct.xdp_mem_info = type { i32, i32 }
%struct.devlink_port = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.devlink*, i32, i8, %struct.spinlock, i32, i32, i8*, %struct.devlink_port_attrs, i8, %struct.delayed_work, %struct.list_head, %struct.mutex }
%struct.devlink_port_attrs = type { i8, i32, i32, %struct.netdev_phys_item_id, %union.anon.87 }
%union.anon.87 = type { %struct.devlink_port_pci_vf_attrs }
%struct.devlink_port_pci_vf_attrs = type { i32, i16, i16, i8 }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.ip_tunnel_parm = type opaque
%struct.ethtool_ops = type { i32, void (%struct.net_device*, %struct.ethtool_drvinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, %struct.ethtool_regs*, i8*)*, void (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, void (%struct.net_device*, %struct.ethtool_ringparam*)*, i32 (%struct.net_device*, %struct.ethtool_ringparam*)*, void (%struct.net_device*, %struct.ethtool_pause_stats*)*, void (%struct.net_device*, %struct.ethtool_pauseparam*)*, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)*, void (%struct.net_device*, %struct.ethtool_test*, i64*)*, void (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)*, i32 (%struct.net_device*, %struct.ethtool_flash*)*, i32 (%struct.net_device*, i32*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32*, i8*, i8*)*, i32 (%struct.net_device*, i32*, i8*, i8)*, i32 (%struct.net_device*, i32*, i8*, i8*, i32)*, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)*, void (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_ts_info*)*, i32 (%struct.net_device*, %struct.ethtool_modinfo*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* }
%struct.ethtool_drvinfo = type { i32, [32 x i8], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [12 x i8], i32, i32, i32, i32, i32 }
%struct.ethtool_regs = type { i32, i32, i32, [0 x i8] }
%struct.ethtool_wolinfo = type { i32, i32, i32, [6 x i8] }
%struct.ethtool_link_ext_state_info = type { i32, %union.anon.125 }
%union.anon.125 = type { i32 }
%struct.ethtool_coalesce = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_ringparam = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_pause_stats = type { i64, i64 }
%struct.ethtool_pauseparam = type { i32, i32, i32, i32 }
%struct.ethtool_test = type { i32, i32, i32, i32, [0 x i64] }
%struct.ethtool_rxnfc = type { i32, i32, i64, %struct.ethtool_rx_flow_spec, %union.anon.126, [0 x i32] }
%struct.ethtool_rx_flow_spec = type { i32, %union.ethtool_flow_union, %struct.ethtool_flow_ext, %union.ethtool_flow_union, %struct.ethtool_flow_ext, i64, i32 }
%union.ethtool_flow_union = type { %struct.ethtool_tcpip6_spec, [12 x i8] }
%struct.ethtool_tcpip6_spec = type { [4 x i32], [4 x i32], i16, i16, i8 }
%struct.ethtool_flow_ext = type { [2 x i8], [6 x i8], i16, i16, [2 x i32] }
%union.anon.126 = type { i32 }
%struct.ethtool_flash = type { i32, i32, [128 x i8] }
%struct.ethtool_channels = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_dump = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_ts_info = type { i32, i32, i32, i32, [3 x i32], i32, [3 x i32] }
%struct.ethtool_modinfo = type { i32, i32, i32, [8 x i32] }
%struct.ethtool_eeprom = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_eee = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.ethtool_link_ksettings = type { %struct.ethtool_link_settings, %struct.anon.127 }
%struct.ethtool_link_settings = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [1 x i8], [7 x i32], [0 x i32] }
%struct.anon.127 = type { [2 x i64], [2 x i64], [2 x i64] }
%struct.ethtool_fecparam = type { i32, i32, i32, i32 }
%struct.ethtool_stats = type { i32, i32, [0 x i64] }
%struct.ethtool_tunable = type { i32, i32, i32, i32, [0 x i8*] }
%struct.ndisc_ops = type opaque
%struct.header_ops = type { i32 (%struct.sk_buff*, %struct.net_device*, i16, i8*, i8*, i32)*, i32 (%struct.sk_buff*, i8*)*, i32 (%struct.neighbour*, %struct.hh_cache*, i16)*, void (%struct.hh_cache*, %struct.net_device*, i8*)*, i1 (i8*, i32)*, i16 (%struct.sk_buff*)* }
%struct.hh_cache = type { i32, %struct.seqlock_t, [12 x i64] }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32 }
%struct.vlan_info = type opaque
%struct.in_device = type opaque
%struct.inet6_dev = type opaque
%struct.wireless_dev = type opaque
%struct.wpan_dev = type opaque
%struct.netdev_rx_queue = type { %struct.kobject, %struct.net_device*, [56 x i8], %struct.xdp_rxq_info }
%struct.xdp_rxq_info = type { %struct.net_device*, i32, i32, %struct.xdp_mem_info, [40 x i8] }
%struct.bpf_prog = type opaque
%struct.netdev_queue = type { %struct.net_device*, %struct.Qdisc*, %struct.Qdisc*, %struct.kobject, i64, i64, %struct.net_device*, %struct.spinlock, i32, i64, i64, %struct.dql }
%struct.dql = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32 }
%struct.Qdisc = type opaque
%struct.xdp_dev_bulk_queue = type opaque
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%union.anon.128 = type { i8* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.rtnl_link_ops = type opaque
%struct.netdev_tc_txq = type { i16, i16 }
%struct.phy_device = type opaque
%struct.sfp_bus = type opaque
%struct.udp_tunnel_nic_info = type opaque
%struct.udp_tunnel_nic = type opaque
%struct.bpf_xdp_entity = type { %struct.bpf_prog*, %struct.bpf_xdp_link* }
%struct.bpf_xdp_link = type opaque
%struct.netns_core = type { %struct.ctl_table_header*, i32, i32*, %struct.prot_inuse* }
%struct.prot_inuse = type opaque
%struct.netns_mib = type { %struct.tcp_mib*, %struct.ipstats_mib*, %struct.linux_mib*, %struct.udp_mib*, %struct.udp_mib*, %struct.icmp_mib*, %struct.icmpmsg_mib*, %struct.proc_dir_entry*, %struct.udp_mib*, %struct.udp_mib*, %struct.ipstats_mib*, %struct.icmpv6_mib*, %struct.icmpv6msg_mib* }
%struct.tcp_mib = type { [16 x i64] }
%struct.linux_mib = type { [124 x i64] }
%struct.icmp_mib = type { [28 x i64] }
%struct.icmpmsg_mib = type { [512 x %struct.atomic64_t] }
%struct.udp_mib = type { [9 x i64] }
%struct.ipstats_mib = type { [37 x i64], %struct.u64_stats_sync }
%struct.u64_stats_sync = type {}
%struct.icmpv6_mib = type { [6 x i64] }
%struct.icmpv6msg_mib = type { [512 x %struct.atomic64_t] }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, %struct.ctl_table_header* }
%struct.netns_nexthop = type { %struct.rb_root, %struct.hlist_head*, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.netns_ipv4 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ipv4_devconf*, %struct.ipv4_devconf*, %struct.ip_ra_chain*, %struct.mutex, i8, %struct.hlist_head*, i8, %struct.sock*, %struct.sock**, %struct.sock*, %struct.inet_peer_base*, %struct.sock**, %struct.fqdir*, i32, i32, i32, i32, i32, i32, %struct.local_ports, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, i64, i64, %struct.inet_timewait_death_row, i32, i32, %struct.tcp_congestion_ops*, %struct.tcp_fastopen_context*, %struct.spinlock, i32, %struct.atomic_t, i64, i32, i32, i32, i32, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, i64*, i32, %struct.fib_notifier_ops*, i32, %struct.fib_notifier_ops*, i32, %struct.atomic_t, %struct.siphash_key_t }
%struct.ipv4_devconf = type opaque
%struct.ip_ra_chain = type opaque
%struct.inet_peer_base = type opaque
%struct.fqdir = type { i64, i64, i32, i32, %struct.inet_frags*, %struct.net*, i8, %struct.rhashtable, %struct.atomic64_t, %struct.work_struct }
%struct.inet_frags = type { i32, void (%struct.inet_frag_queue*, i8*)*, void (%struct.inet_frag_queue*)*, void (%struct.timer_list*)*, %struct.kmem_cache*, i8*, %struct.rhashtable_params, %struct.refcount_struct, %struct.completion }
%struct.inet_frag_queue = type { %struct.rhash_head, %union.anon.38, %struct.timer_list, %struct.spinlock, %struct.refcount_struct, %struct.rb_root, %struct.sk_buff*, %struct.sk_buff*, i64, i32, i32, i8, i16, %struct.fqdir*, %struct.callback_head }
%struct.rhash_head = type { %struct.rhash_head* }
%union.anon.38 = type { %struct.frag_v6_compare_key }
%struct.frag_v6_compare_key = type { %struct.in6_addr, %struct.in6_addr, i32, i32, i32 }
%struct.in6_addr = type { %union.anon.39 }
%union.anon.39 = type { [4 x i32] }
%struct.kmem_cache = type opaque
%struct.rhashtable_params = type { i16, i16, i16, i16, i32, i16, i8, i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)*, i32 (%struct.rhashtable_compare_arg*, i8*)* }
%struct.rhashtable_compare_arg = type { %struct.rhashtable*, i8* }
%struct.rhashtable = type { %struct.bucket_table*, i32, i32, %struct.rhashtable_params, i8, %struct.work_struct, %struct.mutex, %struct.spinlock, %struct.atomic_t }
%struct.bucket_table = type opaque
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.inet_timewait_death_row = type { %struct.atomic_t, %struct.inet_hashinfo*, i32 }
%struct.inet_hashinfo = type opaque
%struct.tcp_congestion_ops = type opaque
%struct.tcp_fastopen_context = type opaque
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.fib_notifier_ops = type opaque
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.netns_sysctl_ipv6, %struct.ipv6_devconf*, %struct.ipv6_devconf*, %struct.inet_peer_base*, %struct.fqdir*, %struct.fib6_info*, %struct.rt6_info*, %struct.rt6_statistics*, %struct.timer_list, %struct.hlist_head*, %struct.fib6_table*, %struct.list_head, %struct.dst_ops, %struct.rwlock_t, %struct.spinlock, i32, i64, %struct.sock**, %struct.sock*, %struct.sock*, %struct.sock*, %struct.sock*, %struct.atomic_t, %struct.atomic_t, %struct.seg6_pernet_data*, %struct.fib_notifier_ops*, %struct.fib_notifier_ops*, i32, %struct.anon.52 }
%struct.netns_sysctl_ipv6 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i64], i64*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.ipv6_devconf = type opaque
%struct.fib6_info = type opaque
%struct.rt6_info = type opaque
%struct.rt6_statistics = type opaque
%struct.fib6_table = type opaque
%struct.dst_ops = type { i16, i32, i32 (%struct.dst_ops*)*, %struct.dst_entry* (%struct.dst_entry*, i32)*, i32 (%struct.dst_entry*)*, i32 (%struct.dst_entry*)*, i32* (%struct.dst_entry*, i64)*, void (%struct.dst_entry*)*, void (%struct.dst_entry*, %struct.net_device*, i32)*, %struct.dst_entry* (%struct.dst_entry*)*, void (%struct.sk_buff*)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*, i32, i1)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, %struct.neighbour* (%struct.dst_entry*, %struct.sk_buff*, i8*)*, void (%struct.dst_entry*, i8*)*, %struct.kmem_cache*, %struct.percpu_counter }
%struct.dst_entry = type opaque
%struct.percpu_counter = type { i64 }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.seg6_pernet_data = type opaque
%struct.anon.52 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.sk_buff_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.net_generic = type opaque
%struct.netns_bpf = type { [2 x %struct.bpf_prog_array*], [2 x %struct.bpf_prog*], [2 x %struct.list_head] }
%struct.bpf_prog_array = type { %struct.callback_head, [0 x %struct.bpf_prog_array_item] }
%struct.bpf_prog_array_item = type { %struct.bpf_prog*, [2 x %struct.bpf_cgroup_storage*] }
%struct.bpf_cgroup_storage = type opaque
%struct.netns_can = type { %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.can_dev_rcv_lists*, %struct.spinlock, %struct.timer_list, %struct.can_pkg_stats*, %struct.can_rcv_lists_stats*, %struct.hlist_head }
%struct.can_dev_rcv_lists = type opaque
%struct.can_pkg_stats = type opaque
%struct.can_rcv_lists_stats = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.53, %union.anon.54, i32 }
%struct.request_queue = type opaque
%union.anon.53 = type { %struct.list_head }
%union.anon.54 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.55 }
%struct.anon.55 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.59 }
%struct.anon.59 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.66, i32, [12 x i8] }
%union.anon.66 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.67 = type { %struct.callback_head }
%struct.pipe_inode_info = type { %struct.mutex, %struct.wait_queue_head, %struct.wait_queue_head, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.page*, %struct.fasync_struct*, %struct.fasync_struct*, %struct.pipe_buffer*, %struct.user_struct* }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.pipe_buffer = type { %struct.page*, i32, i32, %struct.pipe_buf_operations*, i32, i64 }
%struct.pipe_buf_operations = type { i32 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, void (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)* }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.68, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.71 }
%union.anon.68 = type { %struct.anon.69 }
%struct.anon.69 = type { i64, i64 }
%union.anon.71 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.33 }
%union.anon.33 = type { %struct.anon.34, [48 x i8] }
%struct.anon.34 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.84 = type { %struct.list_head }
%union.anon.85 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.76, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.77, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.78, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.81, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.76 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.77 = type { %struct.callback_head }
%union.anon.78 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type { i32, i64, i64, %union.anon.5, %union.anon.6 }
%union.anon.5 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.6 = type { i64 }
%struct.swap_info_struct = type opaque
%union.anon.81 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.79 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.79 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.37 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.37 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type opaque
%struct.acpi_device_id = type opaque
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.possible_net_t = type { %struct.net* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.netlink_ext_ack = type { i8*, %struct.nlattr*, %struct.nla_policy*, [20 x i8], i8 }
%struct.nla_policy = type opaque
%struct.devlink_sb_pool_info = type { i32, i32, i32, i32 }
%struct.devlink_info_req = type opaque
%struct.devlink_flash_update_params = type { i8*, i8*, i32 }
%struct.devlink_trap = type { i32, i32, i8, i16, i8*, i16, i32 }
%struct.devlink_trap_group = type { i8*, i16, i8, i32 }
%struct.devlink_trap_policer = type { i32, i64, i64, i64, i64, i64, i64 }
%struct.mlxsw_item = type { i16, i16, i16, i8, i8, i8, %union.anon.134, i8* }
%union.anon.134 = type { i16 }
%struct.mlxfw_dev_ops = type { i32 (%struct.mlxfw_dev*, i16, i32*, i8*, i16*)*, i32 (%struct.mlxfw_dev*, i32*)*, i32 (%struct.mlxfw_dev*, i32, i16, i32)*, i32 (%struct.mlxfw_dev*, i32, i8*, i16, i32)*, i32 (%struct.mlxfw_dev*, i32, i16)*, i32 (%struct.mlxfw_dev*, i32)*, i32 (%struct.mlxfw_dev*, i8*)*, i32 (%struct.mlxfw_dev*, i32, i32*, i32*)*, void (%struct.mlxfw_dev*, i32)*, void (%struct.mlxfw_dev*, i32)* }
%struct.mlxfw_dev = type { %struct.mlxfw_dev_ops*, i8*, i16, %struct.devlink* }
%struct.mlxsw_listener = type { i16, %union.anon.132, i32, i32, i8, i8, i8 }
%union.anon.132 = type { %struct.mlxsw_rx_listener }
%struct.mlxsw_rx_listener = type { void (%struct.sk_buff*, i8, i8*)*, i8, i8, i16 }
%struct.devlink_param = type { i32, i8*, i8, i32, i64, i32 (%struct.devlink*, i32, %struct.devlink_param_gset_ctx*)*, i32 (%struct.devlink*, i32, %struct.devlink_param_gset_ctx*)*, i32 (%struct.devlink*, i32, %union.devlink_param_value*, %struct.netlink_ext_ack*)* }
%struct.devlink_param_gset_ctx = type { %union.devlink_param_value, i32 }
%union.devlink_param_value = type { i32, [28 x i8] }
%struct.devlink_health_reporter_ops = type { i8*, i32 (%struct.devlink_health_reporter*, i8*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink_health_reporter*, %struct.devlink_fmsg*, i8*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink_health_reporter*, %struct.devlink_fmsg*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink_health_reporter*, %struct.netlink_ext_ack*)* }
%struct.devlink_health_reporter = type opaque
%struct.devlink_fmsg = type opaque
%struct.mlxsw_event_listener = type { void (%struct.mlxsw_reg_info*, i8*, i8*)*, i32 }
%struct.mlxsw_core_port = type { %struct.devlink_port, i8*, i8 }
%struct.mlxsw_core = type { %struct.mlxsw_driver*, %struct.mlxsw_bus*, i8*, %struct.mlxsw_bus_info*, %struct.workqueue_struct*, %struct.list_head, %struct.list_head, %struct.anon.129, %struct.anon.130, %struct.mlxsw_res, %struct.mlxsw_hwmon*, %struct.mlxsw_thermal*, %struct.mlxsw_core_port*, i32, i8, %struct.anon.131, %struct.mlxsw_env*, i8, [0 x i64] }
%struct.mlxsw_driver = type { %struct.list_head, i8*, i64, %struct.mlxsw_fw_rev*, i8*, i32 (%struct.mlxsw_core*, %struct.mlxsw_bus_info*, %struct.netlink_ext_ack*)*, void (%struct.mlxsw_core*)*, i32 (%struct.mlxsw_core*)*, i32 (%struct.mlxsw_core*, i8, i32)*, i32 (%struct.mlxsw_core*, i8, i32, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core*, i8, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core*, i32, i16, %struct.devlink_sb_pool_info*)*, i32 (%struct.mlxsw_core*, i32, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core_port*, i32, i16, i32*)*, i32 (%struct.mlxsw_core_port*, i32, i16, i32, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core_port*, i32, i16, i32, i16*, i32*)*, i32 (%struct.mlxsw_core_port*, i32, i16, i32, i16, i32, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core*, i32)*, i32 (%struct.mlxsw_core*, i32)*, i32 (%struct.mlxsw_core_port*, i32, i16, i32*, i32*)*, i32 (%struct.mlxsw_core_port*, i32, i16, i32, i32*, i32*)*, i32 (%struct.mlxsw_core*, %struct.devlink_trap*, i8*)*, void (%struct.mlxsw_core*, %struct.devlink_trap*, i8*)*, i32 (%struct.mlxsw_core*, %struct.devlink_trap*, i32, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core*, %struct.devlink_trap_group*)*, i32 (%struct.mlxsw_core*, %struct.devlink_trap_group*, %struct.devlink_trap_policer*, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core*, %struct.devlink_trap_policer*)*, void (%struct.mlxsw_core*, %struct.devlink_trap_policer*)*, i32 (%struct.mlxsw_core*, %struct.devlink_trap_policer*, i64, i64, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core*, %struct.devlink_trap_policer*, i64*)*, void (%struct.sk_buff*, %struct.mlxsw_tx_info*)*, i32 (%struct.mlxsw_core*)*, i32 (%struct.mlxsw_core*, %struct.mlxsw_config_profile*, i64*, i64*, i64*)*, i32 (%struct.mlxsw_core*)*, void (%struct.mlxsw_core*)*, void (%struct.mlxsw_core*, %struct.sk_buff*, i8)*, i8, %struct.mlxsw_config_profile*, i8, i8, i8 }
%struct.mlxsw_fw_rev = type { i16, i16, i16, i16 }
%struct.mlxsw_tx_info = type { i8, i8 }
%struct.mlxsw_config_profile = type { i16, i8, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i8, i16, i16, i16, i8, i16, i8, i32, i8, i8, [8 x %struct.mlxsw_swid_config] }
%struct.mlxsw_swid_config = type { i8, i8, i8 }
%struct.mlxsw_bus = type { i8*, i32 (i8*, %struct.mlxsw_core*, %struct.mlxsw_config_profile*, %struct.mlxsw_res*)*, void (i8*)*, i1 (i8*, %struct.mlxsw_tx_info*)*, i32 (i8*, %struct.sk_buff*, %struct.mlxsw_tx_info*)*, i32 (i8*, i16, i8, i32, i1, i8*, i64, i8*, i64, i8*)*, i32 (i8*)*, i32 (i8*)*, i8 }
%struct.mlxsw_bus_info = type { i8*, i8*, %struct.device*, %struct.mlxsw_fw_rev, [208 x i8], [16 x i8], i8 }
%struct.anon.129 = type { %struct.atomic64_t, %struct.list_head, %struct.spinlock, i8, i8 }
%struct.anon.130 = type { i8* }
%struct.mlxsw_res = type { [50 x i8], [50 x i64] }
%struct.mlxsw_hwmon = type opaque
%struct.mlxsw_thermal = type opaque
%struct.anon.131 = type { %struct.devlink_health_reporter* }
%struct.mlxsw_env = type opaque
%struct.devlink_resource = type { i8*, i64, i64, i64, i8, %struct.devlink_resource*, %struct.devlink_resource_size_params, %struct.list_head, %struct.list_head, i64 (i8*)*, i8* }
%struct.devlink_resource_size_params = type { i64, i64, i64, i32 }
%struct.mlxsw_rx_listener_item = type { %struct.list_head, %struct.mlxsw_rx_listener, i8*, i8 }
%struct.mlxsw_event_listener_item = type { %struct.list_head, %struct.mlxsw_event_listener, i8* }
%struct.mlxsw_reg_trans = type { %struct.list_head, %struct.list_head, %struct.mlxsw_core*, %struct.sk_buff*, %struct.mlxsw_tx_info, %struct.delayed_work, i32, i64, %struct.completion, %struct.atomic_t, void (%struct.mlxsw_core*, i8*, i64, i64)*, i64, %struct.mlxsw_reg_info*, i32, i32, i8*, i32, %struct.callback_head }
%struct.mlxsw_rx_info = type { i8, %union.anon.133, i8, i8, i32 }
%union.anon.133 = type { i16 }
%struct.devlink_port_phys_attrs = type { i32, i32 }
%struct.ib_device = type opaque
%struct.firmware = type { i64, i8*, i8* }
%struct.mlxsw_core_fw_info = type { %struct.mlxfw_dev, %struct.mlxsw_core* }
%struct.mlxsw_emad_tlv_offsets = type { i16, i16, i16 }
%struct.mlxsw_core_health_event = type { %struct.mlxsw_core*, [24 x i8], %struct.work_struct }

@mlxsw_core_driver_list_lock = internal global %struct.spinlock undef, align 1, !dbg !0
@mlxsw_core_driver_list = internal global %struct.list_head { %struct.list_head* @mlxsw_core_driver_list, %struct.list_head* @mlxsw_core_driver_list }, align 8, !dbg !8300
@mlxsw_reg_hpkt = internal constant %struct.mlxsw_reg_info { i16 28675, i16 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.134, i32 0, i32 0) }, align 8, !dbg !8512
@.str = private unnamed_addr constant [43 x i8] c"drivers/net/ethernet/mellanox/mlxsw/core.c\00", align 1
@mlxsw_reg_pmtm = internal constant %struct.mlxsw_reg_info { i16 20583, i16 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.313, i32 0, i32 0) }, align 8, !dbg !8810
@.str.1 = private unnamed_addr constant [71 x i8] c"Cmd exec failed (opcode=%x(%s),opcode_mod=%x,in_mod=%x,status=%x(%s))\0A\00", align 1
@.str.2 = private unnamed_addr constant [60 x i8] c"Cmd exec timed-out (opcode=%x(%s),opcode_mod=%x,in_mod=%x)\0A\00", align 1
@mlxsw_wq = internal global %struct.workqueue_struct* null, align 8, !dbg !8296
@mlxsw_owq = internal global %struct.workqueue_struct* null, align 8, !dbg !8298
@__UNIQUE_ID___addressable_mlxsw_core_module_init381 = internal global i8* bitcast (i32 ()* @mlxsw_core_module_init to i8*), section ".discard.addressable", align 8, !dbg !8271
@__exitcall_mlxsw_core_module_exit = internal global void ()* @mlxsw_core_module_exit, section ".exitcall.exit", align 8, !dbg !8273
@__UNIQUE_ID_file382 = internal constant [63 x i8] c"mlxsw_core.file=drivers/net/ethernet/mellanox/mlxsw/mlxsw_core\00", section ".modinfo", align 1, !dbg !8278
@__UNIQUE_ID_license383 = internal constant [32 x i8] c"mlxsw_core.license=Dual BSD/GPL\00", section ".modinfo", align 1, !dbg !8283
@__UNIQUE_ID_author384 = internal constant [49 x i8] c"mlxsw_core.author=Jiri Pirko <jiri@mellanox.com>\00", section ".modinfo", align 1, !dbg !8286
@__UNIQUE_ID_description385 = internal constant [58 x i8] c"mlxsw_core.description=Mellanox switch device core driver\00", section ".modinfo", align 1, !dbg !8291
@mlxsw_devlink_ops = internal constant %struct.devlink_ops { i32 0, i64 6, i64 0, i32 (%struct.devlink*, i1, i32, i32, %struct.netlink_ext_ack*)* @mlxsw_devlink_core_bus_device_reload_down, i32 (%struct.devlink*, i32, i32, i32*, %struct.netlink_ext_ack*)* @mlxsw_devlink_core_bus_device_reload_up, i32 (%struct.devlink_port*, i32)* @mlxsw_devlink_port_type_set, i32 (%struct.devlink*, i32, i32, %struct.netlink_ext_ack*)* @mlxsw_devlink_port_split, i32 (%struct.devlink*, i32, %struct.netlink_ext_ack*)* @mlxsw_devlink_port_unsplit, i32 (%struct.devlink*, i32, i16, %struct.devlink_sb_pool_info*)* @mlxsw_devlink_sb_pool_get, i32 (%struct.devlink*, i32, i16, i32, i32, %struct.netlink_ext_ack*)* @mlxsw_devlink_sb_pool_set, i32 (%struct.devlink_port*, i32, i16, i32*)* @mlxsw_devlink_sb_port_pool_get, i32 (%struct.devlink_port*, i32, i16, i32, %struct.netlink_ext_ack*)* @mlxsw_devlink_sb_port_pool_set, i32 (%struct.devlink_port*, i32, i16, i32, i16*, i32*)* @mlxsw_devlink_sb_tc_pool_bind_get, i32 (%struct.devlink_port*, i32, i16, i32, i16, i32, %struct.netlink_ext_ack*)* @mlxsw_devlink_sb_tc_pool_bind_set, i32 (%struct.devlink*, i32)* @mlxsw_devlink_sb_occ_snapshot, i32 (%struct.devlink*, i32)* @mlxsw_devlink_sb_occ_max_clear, i32 (%struct.devlink_port*, i32, i16, i32*, i32*)* @mlxsw_devlink_sb_occ_port_pool_get, i32 (%struct.devlink_port*, i32, i16, i32, i32*, i32*)* @mlxsw_devlink_sb_occ_tc_port_bind_get, i32 (%struct.devlink*, i16*)* null, i32 (%struct.devlink*, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.devlink*, i8*)* null, i32 (%struct.devlink*, i8, %struct.netlink_ext_ack*)* null, i32 (%struct.devlink*, i32*)* null, i32 (%struct.devlink*, i32, %struct.netlink_ext_ack*)* null, i32 (%struct.devlink*, %struct.devlink_info_req*, %struct.netlink_ext_ack*)* @mlxsw_devlink_info_get, i32 (%struct.devlink*, %struct.devlink_flash_update_params*, %struct.netlink_ext_ack*)* @mlxsw_devlink_flash_update, i32 (%struct.devlink*, %struct.devlink_trap*, i8*)* @mlxsw_devlink_trap_init, void (%struct.devlink*, %struct.devlink_trap*, i8*)* @mlxsw_devlink_trap_fini, i32 (%struct.devlink*, %struct.devlink_trap*, i32, %struct.netlink_ext_ack*)* @mlxsw_devlink_trap_action_set, i32 (%struct.devlink*, %struct.devlink_trap_group*)* @mlxsw_devlink_trap_group_init, i32 (%struct.devlink*, %struct.devlink_trap_group*, %struct.devlink_trap_policer*, %struct.netlink_ext_ack*)* @mlxsw_devlink_trap_group_set, i32 (%struct.devlink*, %struct.devlink_trap_group*, i32, %struct.netlink_ext_ack*)* null, i32 (%struct.devlink*, %struct.devlink_trap_policer*)* @mlxsw_devlink_trap_policer_init, void (%struct.devlink*, %struct.devlink_trap_policer*)* @mlxsw_devlink_trap_policer_fini, i32 (%struct.devlink*, %struct.devlink_trap_policer*, i64, i64, %struct.netlink_ext_ack*)* @mlxsw_devlink_trap_policer_set, i32 (%struct.devlink*, %struct.devlink_trap_policer*, i64*)* @mlxsw_devlink_trap_policer_counter_get, i32 (%struct.devlink*, %struct.devlink_port*, i8*, i32*, %struct.netlink_ext_ack*)* null, i32 (%struct.devlink*, %struct.devlink_port*, i8*, i32, %struct.netlink_ext_ack*)* null }, align 8, !dbg !8302
@mlxsw_devlink_port_split.__msg = internal constant [55 x i8] c"mlxsw_core: Port index exceeds maximum number of ports\00", align 16, !dbg !8304
@mlxsw_devlink_port_unsplit.__msg = internal constant [55 x i8] c"mlxsw_core: Port index exceeds maximum number of ports\00", align 16, !dbg !8310
@mlxsw_reg_mgir = internal constant %struct.mlxsw_reg_info { i16 -28640, i16 156, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0) }, align 8, !dbg !8313
@.str.3 = private unnamed_addr constant [3 x i8] c"%X\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"hw.revision\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"fw.psid\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"%d.%d.%d\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"fw.version\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"mgir\00", align 1
@.str.9 = private unnamed_addr constant [43 x i8] c"drivers/net/ethernet/mellanox/mlxsw/item.h\00", align 1
@.str.10 = private unnamed_addr constant [78 x i8] c"\013mlxsw: item bug (name=%s,offset=%x,step=%x,in_step_offset=%x,typesize=%zx)\0A\00", align 1
@.str.11 = private unnamed_addr constant [36 x i8] c"reg_mgir_hw_info_device_hw_revision\00", align 1
@mlxsw_reg_mgir_hw_info_device_hw_revision_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i32 0, i32 0) }, align 8, !dbg !8315
@mlxsw_reg_mgir_fw_info_psid_item = internal global %struct.mlxsw_item { i16 48, i16 0, i16 0, i8 0, i8 0, i8 0, %union.anon.134 { i16 16 }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i32 0, i32 0) }, align 8, !dbg !8332
@.str.13 = private unnamed_addr constant [22 x i8] c"reg_mgir_fw_info_psid\00", align 1
@.str.14 = private unnamed_addr constant [32 x i8] c"reg_mgir_fw_info_extended_major\00", align 1
@mlxsw_reg_mgir_fw_info_extended_major_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 68, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 32, i8 undef }, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.14, i32 0, i32 0) }, align 8, !dbg !8334
@.str.16 = private unnamed_addr constant [32 x i8] c"reg_mgir_fw_info_extended_minor\00", align 1
@mlxsw_reg_mgir_fw_info_extended_minor_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 72, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 32, i8 undef }, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.16, i32 0, i32 0) }, align 8, !dbg !8336
@.str.18 = private unnamed_addr constant [36 x i8] c"reg_mgir_fw_info_extended_sub_minor\00", align 1
@mlxsw_reg_mgir_fw_info_extended_sub_minor_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 76, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 32, i8 undef }, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0) }, align 8, !dbg !8338
@mlxsw_core_fw_mlxsw_dev_ops = internal constant %struct.mlxfw_dev_ops { i32 (%struct.mlxfw_dev*, i16, i32*, i8*, i16*)* @mlxsw_core_fw_component_query, i32 (%struct.mlxfw_dev*, i32*)* @mlxsw_core_fw_fsm_lock, i32 (%struct.mlxfw_dev*, i32, i16, i32)* @mlxsw_core_fw_fsm_component_update, i32 (%struct.mlxfw_dev*, i32, i8*, i16, i32)* @mlxsw_core_fw_fsm_block_download, i32 (%struct.mlxfw_dev*, i32, i16)* @mlxsw_core_fw_fsm_component_verify, i32 (%struct.mlxfw_dev*, i32)* @mlxsw_core_fw_fsm_activate, i32 (%struct.mlxfw_dev*, i8*)* null, i32 (%struct.mlxfw_dev*, i32, i32*, i32*)* @mlxsw_core_fw_fsm_query_state, void (%struct.mlxfw_dev*, i32)* @mlxsw_core_fw_fsm_cancel, void (%struct.mlxfw_dev*, i32)* @mlxsw_core_fw_fsm_release }, align 8, !dbg !8340
@mlxsw_reg_mcqi = internal constant %struct.mlxsw_reg_info { i16 -28575, i16 44, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0) }, align 8, !dbg !8350
@.str.20 = private unnamed_addr constant [25 x i8] c"reg_mcqi_component_index\00", align 1
@mlxsw_reg_mcqi_component_index_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i32 0, i32 0) }, align 8, !dbg !8342
@.str.22 = private unnamed_addr constant [19 x i8] c"reg_mcqi_info_type\00", align 1
@mlxsw_reg_mcqi_info_type_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 8, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 5, i8 undef }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22, i32 0, i32 0) }, align 8, !dbg !8344
@.str.24 = private unnamed_addr constant [16 x i8] c"reg_mcqi_offset\00", align 1
@mlxsw_reg_mcqi_offset_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 32, i8 undef }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.24, i32 0, i32 0) }, align 8, !dbg !8346
@.str.26 = private unnamed_addr constant [19 x i8] c"reg_mcqi_data_size\00", align 1
@mlxsw_reg_mcqi_data_size_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 20, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.26, i32 0, i32 0) }, align 8, !dbg !8348
@.str.28 = private unnamed_addr constant [5 x i8] c"mcqi\00", align 1
@.str.29 = private unnamed_addr constant [32 x i8] c"reg_mcqi_cap_max_component_size\00", align 1
@mlxsw_reg_mcqi_cap_max_component_size_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 32, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 32, i8 undef }, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.29, i32 0, i32 0) }, align 8, !dbg !8352
@.str.31 = private unnamed_addr constant [32 x i8] c"reg_mcqi_cap_log_mcda_word_size\00", align 1
@mlxsw_reg_mcqi_cap_log_mcda_word_size_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 36, i16 0, i16 0, i8 28, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.31, i32 0, i32 0) }, align 8, !dbg !8354
@.str.33 = private unnamed_addr constant [33 x i8] c"reg_mcqi_cap_mcda_max_write_size\00", align 1
@mlxsw_reg_mcqi_cap_mcda_max_write_size_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 36, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.33, i32 0, i32 0) }, align 8, !dbg !8356
@mlxsw_reg_mcc = internal constant %struct.mlxsw_reg_info { i16 -28574, i16 28, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i32 0, i32 0) }, align 8, !dbg !8366
@.str.35 = private unnamed_addr constant [20 x i8] c"reg_mcc_instruction\00", align 1
@mlxsw_reg_mcc_instruction_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.35, i32 0, i32 0) }, align 8, !dbg !8358
@.str.37 = private unnamed_addr constant [24 x i8] c"reg_mcc_component_index\00", align 1
@mlxsw_reg_mcc_component_index_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.37, i32 0, i32 0) }, align 8, !dbg !8360
@.str.39 = private unnamed_addr constant [22 x i8] c"reg_mcc_update_handle\00", align 1
@mlxsw_reg_mcc_update_handle_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 8, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 24, i8 undef }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.39, i32 0, i32 0) }, align 8, !dbg !8362
@.str.41 = private unnamed_addr constant [23 x i8] c"reg_mcc_component_size\00", align 1
@mlxsw_reg_mcc_component_size_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 32, i8 undef }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.41, i32 0, i32 0) }, align 8, !dbg !8364
@.str.43 = private unnamed_addr constant [4 x i8] c"mcc\00", align 1
@.str.44 = private unnamed_addr constant [19 x i8] c"reg_mcc_error_code\00", align 1
@mlxsw_reg_mcc_error_code_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 8, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.44, i32 0, i32 0) }, align 8, !dbg !8368
@.str.46 = private unnamed_addr constant [22 x i8] c"reg_mcc_control_state\00", align 1
@mlxsw_reg_mcc_control_state_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.46, i32 0, i32 0) }, align 8, !dbg !8370
@mlxsw_reg_mcda = internal constant %struct.mlxsw_reg_info { i16 -28573, i16 144, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i32 0, i32 0) }, align 8, !dbg !8380
@.str.48 = private unnamed_addr constant [23 x i8] c"reg_mcda_update_handle\00", align 1
@mlxsw_reg_mcda_update_handle_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 24, i8 undef }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.48, i32 0, i32 0) }, align 8, !dbg !8372
@.str.50 = private unnamed_addr constant [16 x i8] c"reg_mcda_offset\00", align 1
@mlxsw_reg_mcda_offset_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 32, i8 undef }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.50, i32 0, i32 0) }, align 8, !dbg !8374
@.str.52 = private unnamed_addr constant [14 x i8] c"reg_mcda_size\00", align 1
@mlxsw_reg_mcda_size_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 8, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.52, i32 0, i32 0) }, align 8, !dbg !8376
@.str.54 = private unnamed_addr constant [14 x i8] c"reg_mcda_data\00", align 1
@mlxsw_reg_mcda_data_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 4, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 32, i8 undef }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.54, i32 0, i32 0) }, align 8, !dbg !8378
@.str.56 = private unnamed_addr constant [5 x i8] c"mcda\00", align 1
@.str.57 = private unnamed_addr constant [22 x i8] c"include/net/devlink.h\00", align 1
@.str.58 = private unnamed_addr constant [16 x i8] c"mlxsw_core_emad\00", align 1
@mlxsw_emad_rx_listener = internal constant %struct.mlxsw_listener { i16 5, %union.anon.132 { %struct.mlxsw_rx_listener { void (%struct.sk_buff*, i8, i8*)* @mlxsw_emad_rx_listener_func, i8 -1, i8 0, i16 5 } }, i32 1, i32 3, i8 0, i8 0, i8 4 }, align 8, !dbg !8382
@.str.59 = private unnamed_addr constant [21 x i8] c"emad_string_tlv_type\00", align 1
@mlxsw_emad_string_tlv_type_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 27, i8 0, i8 0, i8 undef, { i8, i8 } { i8 5, i8 undef }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.59, i32 0, i32 0) }, align 8, !dbg !8400
@.str.61 = private unnamed_addr constant [14 x i8] c"emad_op_tlv_r\00", align 1
@mlxsw_emad_op_tlv_r_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 15, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.61, i32 0, i32 0) }, align 8, !dbg !8402
@.str.63 = private unnamed_addr constant [16 x i8] c"emad_op_tlv_tid\00", align 1
@mlxsw_emad_op_tlv_tid_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 8, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 64, i8 undef }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.63, i32 0, i32 0) }, align 8, !dbg !8404
@.str.65 = private unnamed_addr constant [19 x i8] c"emad_op_tlv_status\00", align 1
@mlxsw_emad_op_tlv_status_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 8, i8 0, i8 0, i8 undef, { i8, i8 } { i8 7, i8 undef }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.65, i32 0, i32 0) }, align 8, !dbg !8406
@mlxsw_emad_string_tlv_string_item = internal global %struct.mlxsw_item { i16 4, i16 0, i16 0, i8 0, i8 0, i8 0, %union.anon.134 { i16 128 }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.67, i32 0, i32 0) }, align 8, !dbg !8408
@.str.67 = private unnamed_addr constant [23 x i8] c"emad_string_tlv_string\00", align 1
@__preempt_count = external dso_local global i32, section ".data", align 4
@mlxsw_core_fw_devlink_params = internal constant [1 x %struct.devlink_param] [%struct.devlink_param { i32 7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.68, i32 0, i32 0), i8 1, i32 0, i64 2, i32 (%struct.devlink*, i32, %struct.devlink_param_gset_ctx*)* null, i32 (%struct.devlink*, i32, %struct.devlink_param_gset_ctx*)* null, i32 (%struct.devlink*, i32, %union.devlink_param_value*, %struct.netlink_ext_ack*)* @mlxsw_core_devlink_param_fw_load_policy_validate }], align 16, !dbg !8410
@.str.68 = private unnamed_addr constant [15 x i8] c"fw_load_policy\00", align 1
@mlxsw_core_devlink_param_fw_load_policy_validate.__msg = internal constant [57 x i8] c"mlxsw_core: 'fw_load_policy' must be 'driver' or 'flash'\00", align 16, !dbg !8442
@.str.69 = private unnamed_addr constant [80 x i8] c"Mismatch in major FW version [%d:%d] is never expected; Please contact support\0A\00", align 1
@.str.70 = private unnamed_addr constant [86 x i8] c"The firmware version %d.%d.%d is incompatible with the driver (required >= %d.%d.%d)\0A\00", align 1
@.str.71 = private unnamed_addr constant [33 x i8] c"Flashing firmware using file %s\0A\00", align 1
@.str.72 = private unnamed_addr constant [36 x i8] c"Could not request firmware file %s\0A\00", align 1
@.str.73 = private unnamed_addr constant [28 x i8] c"Could not upgrade firmware\0A\00", align 1
@mlxsw_core_health_fw_fatal_ops = internal constant %struct.devlink_health_reporter_ops { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), i32 (%struct.devlink_health_reporter*, i8*, %struct.netlink_ext_ack*)* null, i32 (%struct.devlink_health_reporter*, %struct.devlink_fmsg*, i8*, %struct.netlink_ext_ack*)* @mlxsw_core_health_fw_fatal_dump, i32 (%struct.devlink_health_reporter*, %struct.devlink_fmsg*, %struct.netlink_ext_ack*)* null, i32 (%struct.devlink_health_reporter*, %struct.netlink_ext_ack*)* @mlxsw_core_health_fw_fatal_test }, align 8, !dbg !8448
@.str.74 = private unnamed_addr constant [35 x i8] c"Failed to create fw fatal reporter\00", align 1
@.str.75 = private unnamed_addr constant [9 x i8] c"fw_fatal\00", align 1
@.str.76 = private unnamed_addr constant [9 x i8] c"irisc_id\00", align 1
@.str.77 = private unnamed_addr constant [6 x i8] c"event\00", align 1
@.str.78 = private unnamed_addr constant [3 x i8] c"id\00", align 1
@.str.79 = private unnamed_addr constant [17 x i8] c"CR space timeout\00", align 1
@.str.80 = private unnamed_addr constant [30 x i8] c"KVD insertion machine stopped\00", align 1
@.str.81 = private unnamed_addr constant [5 x i8] c"desc\00", align 1
@.str.82 = private unnamed_addr constant [6 x i8] c"query\00", align 1
@.str.83 = private unnamed_addr constant [6 x i8] c"write\00", align 1
@.str.84 = private unnamed_addr constant [7 x i8] c"method\00", align 1
@.str.85 = private unnamed_addr constant [13 x i8] c"long_process\00", align 1
@.str.86 = private unnamed_addr constant [4 x i8] c"mad\00", align 1
@.str.87 = private unnamed_addr constant [5 x i8] c"emad\00", align 1
@.str.88 = private unnamed_addr constant [6 x i8] c"cmdif\00", align 1
@.str.89 = private unnamed_addr constant [13 x i8] c"command_type\00", align 1
@.str.90 = private unnamed_addr constant [12 x i8] c"reg_attr_id\00", align 1
@.str.91 = private unnamed_addr constant [12 x i8] c"log_address\00", align 1
@.str.92 = private unnamed_addr constant [13 x i8] c"log_irisc_id\00", align 1
@.str.93 = private unnamed_addr constant [11 x i8] c"pipes_mask\00", align 1
@.str.94 = private unnamed_addr constant [18 x i8] c"reg_mfde_irisc_id\00", align 1
@mlxsw_reg_mfde_irisc_id_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 8, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.94, i32 0, i32 0) }, align 8, !dbg !8472
@.str.96 = private unnamed_addr constant [18 x i8] c"reg_mfde_event_id\00", align 1
@mlxsw_reg_mfde_event_id_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.96, i32 0, i32 0) }, align 8, !dbg !8474
@.str.98 = private unnamed_addr constant [16 x i8] c"reg_mfde_method\00", align 1
@mlxsw_reg_mfde_method_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 29, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.98, i32 0, i32 0) }, align 8, !dbg !8476
@.str.100 = private unnamed_addr constant [22 x i8] c"reg_mfde_long_process\00", align 1
@mlxsw_reg_mfde_long_process_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 28, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.100, i32 0, i32 0) }, align 8, !dbg !8478
@.str.102 = private unnamed_addr constant [22 x i8] c"reg_mfde_command_type\00", align 1
@mlxsw_reg_mfde_command_type_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 24, i8 0, i8 0, i8 undef, { i8, i8 } { i8 2, i8 undef }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.102, i32 0, i32 0) }, align 8, !dbg !8480
@.str.104 = private unnamed_addr constant [21 x i8] c"reg_mfde_reg_attr_id\00", align 1
@mlxsw_reg_mfde_reg_attr_id_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.104, i32 0, i32 0) }, align 8, !dbg !8482
@.str.106 = private unnamed_addr constant [21 x i8] c"reg_mfde_log_address\00", align 1
@mlxsw_reg_mfde_log_address_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 32, i8 undef }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.106, i32 0, i32 0) }, align 8, !dbg !8484
@.str.108 = private unnamed_addr constant [16 x i8] c"reg_mfde_log_id\00", align 1
@mlxsw_reg_mfde_log_id_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 20, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.108, i32 0, i32 0) }, align 8, !dbg !8486
@.str.110 = private unnamed_addr constant [20 x i8] c"reg_mfde_pipes_mask\00", align 1
@mlxsw_reg_mfde_pipes_mask_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.110, i32 0, i32 0) }, align 8, !dbg !8488
@mlxsw_reg_mfgd = internal constant %struct.mlxsw_reg_info { i16 -28432, i16 12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.112, i32 0, i32 0) }, align 8, !dbg !8490
@.str.112 = private unnamed_addr constant [5 x i8] c"mfgd\00", align 1
@.str.113 = private unnamed_addr constant [22 x i8] c"reg_mfgd_trigger_test\00", align 1
@mlxsw_reg_mfgd_trigger_test_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 11, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.113, i32 0, i32 0) }, align 8, !dbg !8492
@mlxsw_core_health_listener = internal constant { i16, { %struct.mlxsw_event_listener }, i32, i32, i8, i8, i8 } { i16 3, { %struct.mlxsw_event_listener } { %struct.mlxsw_event_listener { void (%struct.mlxsw_reg_info*, i8*, i8*)* @mlxsw_core_health_listener_func, i32 3 } }, i32 1, i32 0, i8 1, i8 0, i8 6 }, align 8, !dbg !8494
@.str.116 = private unnamed_addr constant [24 x i8] c"FW fatal event occurred\00", align 1
@.str.117 = private unnamed_addr constant [26 x i8] c"reg_mfgd_fatal_event_mode\00", align 1
@mlxsw_reg_mfgd_fatal_event_mode_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 9, i8 0, i8 0, i8 undef, { i8, i8 } { i8 2, i8 undef }, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.117, i32 0, i32 0) }, align 8, !dbg !8496
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.119 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.120 = private unnamed_addr constant [24 x i8] c"emad_op_tlv_register_id\00", align 1
@mlxsw_emad_op_tlv_register_id_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.120, i32 0, i32 0) }, align 8, !dbg !8498
@.str.122 = private unnamed_addr constant [17 x i8] c"emad_reg_tlv_len\00", align 1
@mlxsw_emad_reg_tlv_len_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 11, i8 undef }, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.122, i32 0, i32 0) }, align 8, !dbg !8500
@.str.124 = private unnamed_addr constant [13 x i8] c"reg_hpkt_ack\00", align 1
@mlxsw_reg_hpkt_ack_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 24, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.124, i32 0, i32 0) }, align 8, !dbg !8502
@.str.126 = private unnamed_addr constant [16 x i8] c"reg_hpkt_action\00", align 1
@mlxsw_reg_hpkt_action_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 20, i8 0, i8 0, i8 undef, { i8, i8 } { i8 3, i8 undef }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.126, i32 0, i32 0) }, align 8, !dbg !8504
@.str.128 = private unnamed_addr constant [20 x i8] c"reg_hpkt_trap_group\00", align 1
@mlxsw_reg_hpkt_trap_group_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 12, i8 0, i8 0, i8 undef, { i8, i8 } { i8 6, i8 undef }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.128, i32 0, i32 0) }, align 8, !dbg !8506
@.str.130 = private unnamed_addr constant [17 x i8] c"reg_hpkt_trap_id\00", align 1
@mlxsw_reg_hpkt_trap_id_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 10, i8 undef }, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.130, i32 0, i32 0) }, align 8, !dbg !8508
@.str.132 = private unnamed_addr constant [14 x i8] c"reg_hpkt_ctrl\00", align 1
@mlxsw_reg_hpkt_ctrl_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 2, i8 undef }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.132, i32 0, i32 0) }, align 8, !dbg !8510
@.str.134 = private unnamed_addr constant [5 x i8] c"hpkt\00", align 1
@__init_completion.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !8514
@.str.135 = private unnamed_addr constant [9 x i8] c"&x->wait\00", align 1
@.str.136 = private unnamed_addr constant [18 x i8] c"emad_end_tlv_type\00", align 1
@mlxsw_emad_end_tlv_type_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 27, i8 0, i8 0, i8 undef, { i8, i8 } { i8 5, i8 undef }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.136, i32 0, i32 0) }, align 8, !dbg !8519
@.str.138 = private unnamed_addr constant [17 x i8] c"emad_end_tlv_len\00", align 1
@mlxsw_emad_end_tlv_len_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 11, i8 undef }, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.138, i32 0, i32 0) }, align 8, !dbg !8521
@.str.140 = private unnamed_addr constant [18 x i8] c"emad_reg_tlv_type\00", align 1
@mlxsw_emad_reg_tlv_type_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 27, i8 0, i8 0, i8 undef, { i8, i8 } { i8 5, i8 undef }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.140, i32 0, i32 0) }, align 8, !dbg !8523
@.str.142 = private unnamed_addr constant [20 x i8] c"emad_string_tlv_len\00", align 1
@mlxsw_emad_string_tlv_len_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 11, i8 undef }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.142, i32 0, i32 0) }, align 8, !dbg !8525
@.str.144 = private unnamed_addr constant [17 x i8] c"emad_op_tlv_type\00", align 1
@mlxsw_emad_op_tlv_type_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 27, i8 0, i8 0, i8 undef, { i8, i8 } { i8 5, i8 undef }, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.144, i32 0, i32 0) }, align 8, !dbg !8527
@.str.146 = private unnamed_addr constant [16 x i8] c"emad_op_tlv_len\00", align 1
@mlxsw_emad_op_tlv_len_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 11, i8 undef }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.146, i32 0, i32 0) }, align 8, !dbg !8529
@.str.148 = private unnamed_addr constant [15 x i8] c"emad_op_tlv_dr\00", align 1
@mlxsw_emad_op_tlv_dr_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 15, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.148, i32 0, i32 0) }, align 8, !dbg !8531
@.str.150 = private unnamed_addr constant [19 x i8] c"emad_op_tlv_method\00", align 1
@mlxsw_emad_op_tlv_method_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 8, i8 0, i8 0, i8 undef, { i8, i8 } { i8 7, i8 undef }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.150, i32 0, i32 0) }, align 8, !dbg !8533
@.str.152 = private unnamed_addr constant [18 x i8] c"emad_op_tlv_class\00", align 1
@mlxsw_emad_op_tlv_class_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.152, i32 0, i32 0) }, align 8, !dbg !8535
@.str.154 = private unnamed_addr constant [7 x i8] c"\01\02\C9\00\00\01\00", align 1
@.str.155 = private unnamed_addr constant [7 x i8] c"\00\02\C9\01\02\03\00", align 1
@mlxsw_emad_eth_hdr_dmac_item = internal global %struct.mlxsw_item { i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, %union.anon.134 { i16 6 }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.156, i32 0, i32 0) }, align 8, !dbg !8537
@.str.156 = private unnamed_addr constant [18 x i8] c"emad_eth_hdr_dmac\00", align 1
@mlxsw_emad_eth_hdr_smac_item = internal global %struct.mlxsw_item { i16 6, i16 0, i16 0, i8 0, i8 0, i8 0, %union.anon.134 { i16 6 }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.157, i32 0, i32 0) }, align 8, !dbg !8539
@.str.157 = private unnamed_addr constant [18 x i8] c"emad_eth_hdr_smac\00", align 1
@.str.158 = private unnamed_addr constant [23 x i8] c"emad_eth_hdr_ethertype\00", align 1
@mlxsw_emad_eth_hdr_ethertype_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.158, i32 0, i32 0) }, align 8, !dbg !8541
@.str.160 = private unnamed_addr constant [23 x i8] c"emad_eth_hdr_mlx_proto\00", align 1
@mlxsw_emad_eth_hdr_mlx_proto_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 8, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.160, i32 0, i32 0) }, align 8, !dbg !8543
@.str.162 = private unnamed_addr constant [17 x i8] c"emad_eth_hdr_ver\00", align 1
@mlxsw_emad_eth_hdr_ver_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 4, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.162, i32 0, i32 0) }, align 8, !dbg !8545
@.str.164 = private unnamed_addr constant [33 x i8] c"EMAD retries (%d/%d) (tid=%llx)\0A\00", align 1
@.str.165 = private unnamed_addr constant [71 x i8] c"EMAD reg access failed (tid=%llx,reg_id=%x(%s),type=%s,status=%x(%s))\0A\00", align 1
@.str.166 = private unnamed_addr constant [34 x i8] c"(tid=%llx,reg_id=%x(%s)) %s (%s)\0A\00", align 1
@.str.167 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@mlxsw_reg_infos = internal global [135 x %struct.mlxsw_reg_info*] [%struct.mlxsw_reg_info* @mlxsw_reg_sgcr, %struct.mlxsw_reg_info* @mlxsw_reg_spad, %struct.mlxsw_reg_info* @mlxsw_reg_smid, %struct.mlxsw_reg_info* @mlxsw_reg_sspr, %struct.mlxsw_reg_info* @mlxsw_reg_sfdat, %struct.mlxsw_reg_info* @mlxsw_reg_sfd, %struct.mlxsw_reg_info* @mlxsw_reg_sfn, %struct.mlxsw_reg_info* @mlxsw_reg_spms, %struct.mlxsw_reg_info* @mlxsw_reg_spvid, %struct.mlxsw_reg_info* @mlxsw_reg_spvm, %struct.mlxsw_reg_info* @mlxsw_reg_spaft, %struct.mlxsw_reg_info* @mlxsw_reg_sfgc, %struct.mlxsw_reg_info* @mlxsw_reg_sftr, %struct.mlxsw_reg_info* @mlxsw_reg_sfdf, %struct.mlxsw_reg_info* @mlxsw_reg_sldr, %struct.mlxsw_reg_info* @mlxsw_reg_slcr, %struct.mlxsw_reg_info* @mlxsw_reg_slcor, %struct.mlxsw_reg_info* @mlxsw_reg_spmlr, %struct.mlxsw_reg_info* @mlxsw_reg_svfa, %struct.mlxsw_reg_info* @mlxsw_reg_svpe, %struct.mlxsw_reg_info* @mlxsw_reg_sfmr, %struct.mlxsw_reg_info* @mlxsw_reg_spvmlr, %struct.mlxsw_reg_info* @mlxsw_reg_cwtp, %struct.mlxsw_reg_info* @mlxsw_reg_cwtpm, %struct.mlxsw_reg_info* @mlxsw_reg_pgcr, %struct.mlxsw_reg_info* @mlxsw_reg_ppbt, %struct.mlxsw_reg_info* @mlxsw_reg_pacl, %struct.mlxsw_reg_info* @mlxsw_reg_pagt, %struct.mlxsw_reg_info* @mlxsw_reg_ptar, %struct.mlxsw_reg_info* @mlxsw_reg_ppbs, %struct.mlxsw_reg_info* @mlxsw_reg_prcr, %struct.mlxsw_reg_info* @mlxsw_reg_pefa, %struct.mlxsw_reg_info* @mlxsw_reg_pemrbt, %struct.mlxsw_reg_info* @mlxsw_reg_ptce2, %struct.mlxsw_reg_info* @mlxsw_reg_perpt, %struct.mlxsw_reg_info* @mlxsw_reg_peabfe, %struct.mlxsw_reg_info* @mlxsw_reg_perar, %struct.mlxsw_reg_info* @mlxsw_reg_ptce3, %struct.mlxsw_reg_info* @mlxsw_reg_percr, %struct.mlxsw_reg_info* @mlxsw_reg_pererp, %struct.mlxsw_reg_info* @mlxsw_reg_iedr, %struct.mlxsw_reg_info* @mlxsw_reg_qpts, %struct.mlxsw_reg_info* @mlxsw_reg_qpcr, %struct.mlxsw_reg_info* @mlxsw_reg_qtct, %struct.mlxsw_reg_info* @mlxsw_reg_qeec, %struct.mlxsw_reg_info* @mlxsw_reg_qrwe, %struct.mlxsw_reg_info* @mlxsw_reg_qpdsm, %struct.mlxsw_reg_info* @mlxsw_reg_qpdp, %struct.mlxsw_reg_info* @mlxsw_reg_qpdpm, %struct.mlxsw_reg_info* @mlxsw_reg_qtctm, %struct.mlxsw_reg_info* @mlxsw_reg_qpsc, %struct.mlxsw_reg_info* @mlxsw_reg_pmlp, %struct.mlxsw_reg_info* @mlxsw_reg_pmtu, %struct.mlxsw_reg_info* @mlxsw_reg_ptys, %struct.mlxsw_reg_info* @mlxsw_reg_ppad, %struct.mlxsw_reg_info* @mlxsw_reg_paos, %struct.mlxsw_reg_info* @mlxsw_reg_pfcc, %struct.mlxsw_reg_info* @mlxsw_reg_ppcnt, %struct.mlxsw_reg_info* @mlxsw_reg_plib, %struct.mlxsw_reg_info* @mlxsw_reg_pptb, %struct.mlxsw_reg_info* @mlxsw_reg_pbmc, %struct.mlxsw_reg_info* @mlxsw_reg_pspa, %struct.mlxsw_reg_info* @mlxsw_reg_pmaos, %struct.mlxsw_reg_info* @mlxsw_reg_pplr, %struct.mlxsw_reg_info* @mlxsw_reg_pmpe, %struct.mlxsw_reg_info* @mlxsw_reg_pddr, %struct.mlxsw_reg_info* @mlxsw_reg_pmtm, %struct.mlxsw_reg_info* @mlxsw_reg_htgt, %struct.mlxsw_reg_info* @mlxsw_reg_hpkt, %struct.mlxsw_reg_info* @mlxsw_reg_rgcr, %struct.mlxsw_reg_info* @mlxsw_reg_ritr, %struct.mlxsw_reg_info* @mlxsw_reg_rtar, %struct.mlxsw_reg_info* @mlxsw_reg_ratr, %struct.mlxsw_reg_info* @mlxsw_reg_rtdp, %struct.mlxsw_reg_info* @mlxsw_reg_rdpm, %struct.mlxsw_reg_info* @mlxsw_reg_ricnt, %struct.mlxsw_reg_info* @mlxsw_reg_rrcr, %struct.mlxsw_reg_info* @mlxsw_reg_ralta, %struct.mlxsw_reg_info* @mlxsw_reg_ralst, %struct.mlxsw_reg_info* @mlxsw_reg_raltb, %struct.mlxsw_reg_info* @mlxsw_reg_ralue, %struct.mlxsw_reg_info* @mlxsw_reg_rauht, %struct.mlxsw_reg_info* @mlxsw_reg_raleu, %struct.mlxsw_reg_info* @mlxsw_reg_rauhtd, %struct.mlxsw_reg_info* @mlxsw_reg_rigr2, %struct.mlxsw_reg_info* @mlxsw_reg_recr2, %struct.mlxsw_reg_info* @mlxsw_reg_rmft2, %struct.mlxsw_reg_info* @mlxsw_reg_mfcr, %struct.mlxsw_reg_info* @mlxsw_reg_mfsc, %struct.mlxsw_reg_info* @mlxsw_reg_mfsm, %struct.mlxsw_reg_info* @mlxsw_reg_mfsl, %struct.mlxsw_reg_info* @mlxsw_reg_fore, %struct.mlxsw_reg_info* @mlxsw_reg_mtcap, %struct.mlxsw_reg_info* @mlxsw_reg_mtmp, %struct.mlxsw_reg_info* @mlxsw_reg_mtwe, %struct.mlxsw_reg_info* @mlxsw_reg_mtbr, %struct.mlxsw_reg_info* @mlxsw_reg_mcia, %struct.mlxsw_reg_info* @mlxsw_reg_mpat, %struct.mlxsw_reg_info* @mlxsw_reg_mpar, %struct.mlxsw_reg_info* @mlxsw_reg_mgir, %struct.mlxsw_reg_info* @mlxsw_reg_mrsr, %struct.mlxsw_reg_info* @mlxsw_reg_mlcr, %struct.mlxsw_reg_info* @mlxsw_reg_mtpps, %struct.mlxsw_reg_info* @mlxsw_reg_mtutc, %struct.mlxsw_reg_info* @mlxsw_reg_mpsc, %struct.mlxsw_reg_info* @mlxsw_reg_mcqi, %struct.mlxsw_reg_info* @mlxsw_reg_mcc, %struct.mlxsw_reg_info* @mlxsw_reg_mcda, %struct.mlxsw_reg_info* @mlxsw_reg_mgpc, %struct.mlxsw_reg_info* @mlxsw_reg_mprs, %struct.mlxsw_reg_info* @mlxsw_reg_mogcr, %struct.mlxsw_reg_info* @mlxsw_reg_mpagr, %struct.mlxsw_reg_info* @mlxsw_reg_momte, %struct.mlxsw_reg_info* @mlxsw_reg_mtpppc, %struct.mlxsw_reg_info* @mlxsw_reg_mtpptr, %struct.mlxsw_reg_info* @mlxsw_reg_mtptpt, %struct.mlxsw_reg_info* @mlxsw_reg_mfgd, %struct.mlxsw_reg_info* @mlxsw_reg_mgpir, %struct.mlxsw_reg_info* @mlxsw_reg_mfde, %struct.mlxsw_reg_info* @mlxsw_reg_tngcr, %struct.mlxsw_reg_info* @mlxsw_reg_tnumt, %struct.mlxsw_reg_info* @mlxsw_reg_tnqcr, %struct.mlxsw_reg_info* @mlxsw_reg_tnqdr, %struct.mlxsw_reg_info* @mlxsw_reg_tneem, %struct.mlxsw_reg_info* @mlxsw_reg_tndem, %struct.mlxsw_reg_info* @mlxsw_reg_tnpc, %struct.mlxsw_reg_info* @mlxsw_reg_tigcr, %struct.mlxsw_reg_info* @mlxsw_reg_tieem, %struct.mlxsw_reg_info* @mlxsw_reg_tidem, %struct.mlxsw_reg_info* @mlxsw_reg_sbpr, %struct.mlxsw_reg_info* @mlxsw_reg_sbcm, %struct.mlxsw_reg_info* @mlxsw_reg_sbpm, %struct.mlxsw_reg_info* @mlxsw_reg_sbmm, %struct.mlxsw_reg_info* @mlxsw_reg_sbsr, %struct.mlxsw_reg_info* @mlxsw_reg_sbib], align 16, !dbg !8547
@.str.168 = private unnamed_addr constant [10 x i8] c"*UNKNOWN*\00", align 1
@mlxsw_reg_sgcr = internal constant %struct.mlxsw_reg_info { i16 8192, i16 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.169, i32 0, i32 0) }, align 8, !dbg !8552
@mlxsw_reg_spad = internal constant %struct.mlxsw_reg_info { i16 8194, i16 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.170, i32 0, i32 0) }, align 8, !dbg !8554
@mlxsw_reg_smid = internal constant %struct.mlxsw_reg_info { i16 8199, i16 576, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.171, i32 0, i32 0) }, align 8, !dbg !8556
@mlxsw_reg_sspr = internal constant %struct.mlxsw_reg_info { i16 8200, i16 8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.172, i32 0, i32 0) }, align 8, !dbg !8558
@mlxsw_reg_sfdat = internal constant %struct.mlxsw_reg_info { i16 8201, i16 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.173, i32 0, i32 0) }, align 8, !dbg !8560
@mlxsw_reg_sfd = internal constant %struct.mlxsw_reg_info { i16 8202, i16 1040, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.174, i32 0, i32 0) }, align 8, !dbg !8562
@mlxsw_reg_sfn = internal constant %struct.mlxsw_reg_info { i16 8203, i16 1040, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.175, i32 0, i32 0) }, align 8, !dbg !8564
@mlxsw_reg_spms = internal constant %struct.mlxsw_reg_info { i16 8205, i16 1028, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.176, i32 0, i32 0) }, align 8, !dbg !8566
@mlxsw_reg_spvid = internal constant %struct.mlxsw_reg_info { i16 8206, i16 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.177, i32 0, i32 0) }, align 8, !dbg !8568
@mlxsw_reg_spvm = internal constant %struct.mlxsw_reg_info { i16 8207, i16 1024, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.178, i32 0, i32 0) }, align 8, !dbg !8570
@mlxsw_reg_spaft = internal constant %struct.mlxsw_reg_info { i16 8208, i16 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.179, i32 0, i32 0) }, align 8, !dbg !8572
@mlxsw_reg_sfgc = internal constant %struct.mlxsw_reg_info { i16 8209, i16 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.180, i32 0, i32 0) }, align 8, !dbg !8574
@mlxsw_reg_sftr = internal constant %struct.mlxsw_reg_info { i16 8210, i16 1056, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.181, i32 0, i32 0) }, align 8, !dbg !8576
@mlxsw_reg_sfdf = internal constant %struct.mlxsw_reg_info { i16 8211, i16 20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.182, i32 0, i32 0) }, align 8, !dbg !8578
@mlxsw_reg_sldr = internal constant %struct.mlxsw_reg_info { i16 8212, i16 12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.183, i32 0, i32 0) }, align 8, !dbg !8580
@mlxsw_reg_slcr = internal constant %struct.mlxsw_reg_info { i16 8213, i16 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.184, i32 0, i32 0) }, align 8, !dbg !8582
@mlxsw_reg_slcor = internal constant %struct.mlxsw_reg_info { i16 8214, i16 16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.185, i32 0, i32 0) }, align 8, !dbg !8584
@mlxsw_reg_spmlr = internal constant %struct.mlxsw_reg_info { i16 8216, i16 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.186, i32 0, i32 0) }, align 8, !dbg !8586
@mlxsw_reg_svfa = internal constant %struct.mlxsw_reg_info { i16 8220, i16 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.187, i32 0, i32 0) }, align 8, !dbg !8588
@mlxsw_reg_svpe = internal constant %struct.mlxsw_reg_info { i16 8222, i16 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.188, i32 0, i32 0) }, align 8, !dbg !8590
@mlxsw_reg_sfmr = internal constant %struct.mlxsw_reg_info { i16 8223, i16 24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.189, i32 0, i32 0) }, align 8, !dbg !8592
@mlxsw_reg_spvmlr = internal constant %struct.mlxsw_reg_info { i16 8224, i16 1024, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.190, i32 0, i32 0) }, align 8, !dbg !8594
@mlxsw_reg_cwtp = internal constant %struct.mlxsw_reg_info { i16 10242, i16 64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.191, i32 0, i32 0) }, align 8, !dbg !8596
@mlxsw_reg_cwtpm = internal constant %struct.mlxsw_reg_info { i16 10243, i16 68, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.192, i32 0, i32 0) }, align 8, !dbg !8598
@mlxsw_reg_pgcr = internal constant %struct.mlxsw_reg_info { i16 12289, i16 32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.193, i32 0, i32 0) }, align 8, !dbg !8600
@mlxsw_reg_ppbt = internal constant %struct.mlxsw_reg_info { i16 12290, i16 20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.194, i32 0, i32 0) }, align 8, !dbg !8602
@mlxsw_reg_pacl = internal constant %struct.mlxsw_reg_info { i16 12292, i16 112, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.195, i32 0, i32 0) }, align 8, !dbg !8604
@mlxsw_reg_pagt = internal constant %struct.mlxsw_reg_info { i16 12293, i16 112, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.196, i32 0, i32 0) }, align 8, !dbg !8606
@mlxsw_reg_ptar = internal constant %struct.mlxsw_reg_info { i16 12294, i16 48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.197, i32 0, i32 0) }, align 8, !dbg !8608
@mlxsw_reg_ppbs = internal constant %struct.mlxsw_reg_info { i16 12300, i16 20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.198, i32 0, i32 0) }, align 8, !dbg !8610
@mlxsw_reg_prcr = internal constant %struct.mlxsw_reg_info { i16 12301, i16 64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.199, i32 0, i32 0) }, align 8, !dbg !8612
@mlxsw_reg_pefa = internal constant %struct.mlxsw_reg_info { i16 12303, i16 176, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.200, i32 0, i32 0) }, align 8, !dbg !8614
@mlxsw_reg_pemrbt = internal constant %struct.mlxsw_reg_info { i16 12308, i16 20, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.201, i32 0, i32 0) }, align 8, !dbg !8616
@mlxsw_reg_ptce2 = internal constant %struct.mlxsw_reg_info { i16 12311, i16 472, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.202, i32 0, i32 0) }, align 8, !dbg !8618
@mlxsw_reg_perpt = internal constant %struct.mlxsw_reg_info { i16 12321, i16 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.203, i32 0, i32 0) }, align 8, !dbg !8620
@mlxsw_reg_peabfe = internal constant %struct.mlxsw_reg_info { i16 12322, i16 1040, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.204, i32 0, i32 0) }, align 8, !dbg !8622
@mlxsw_reg_perar = internal constant %struct.mlxsw_reg_info { i16 12326, i16 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.205, i32 0, i32 0) }, align 8, !dbg !8624
@mlxsw_reg_ptce3 = internal constant %struct.mlxsw_reg_info { i16 12327, i16 240, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.206, i32 0, i32 0) }, align 8, !dbg !8626
@mlxsw_reg_percr = internal constant %struct.mlxsw_reg_info { i16 12330, i16 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.207, i32 0, i32 0) }, align 8, !dbg !8628
@mlxsw_reg_pererp = internal constant %struct.mlxsw_reg_info { i16 12331, i16 28, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.208, i32 0, i32 0) }, align 8, !dbg !8630
@mlxsw_reg_iedr = internal constant %struct.mlxsw_reg_info { i16 14340, i16 528, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.209, i32 0, i32 0) }, align 8, !dbg !8632
@mlxsw_reg_qpts = internal constant %struct.mlxsw_reg_info { i16 16386, i16 8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.210, i32 0, i32 0) }, align 8, !dbg !8634
@mlxsw_reg_qpcr = internal constant %struct.mlxsw_reg_info { i16 16388, i16 40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.211, i32 0, i32 0) }, align 8, !dbg !8636
@mlxsw_reg_qtct = internal constant %struct.mlxsw_reg_info { i16 16394, i16 8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.212, i32 0, i32 0) }, align 8, !dbg !8638
@mlxsw_reg_qeec = internal constant %struct.mlxsw_reg_info { i16 16397, i16 32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.213, i32 0, i32 0) }, align 8, !dbg !8640
@mlxsw_reg_qrwe = internal constant %struct.mlxsw_reg_info { i16 16399, i16 8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.214, i32 0, i32 0) }, align 8, !dbg !8642
@mlxsw_reg_qpdsm = internal constant %struct.mlxsw_reg_info { i16 16401, i16 68, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.215, i32 0, i32 0) }, align 8, !dbg !8644
@mlxsw_reg_qpdp = internal constant %struct.mlxsw_reg_info { i16 16391, i16 8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.216, i32 0, i32 0) }, align 8, !dbg !8646
@mlxsw_reg_qpdpm = internal constant %struct.mlxsw_reg_info { i16 16403, i16 132, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.217, i32 0, i32 0) }, align 8, !dbg !8648
@mlxsw_reg_qtctm = internal constant %struct.mlxsw_reg_info { i16 16410, i16 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.218, i32 0, i32 0) }, align 8, !dbg !8650
@mlxsw_reg_qpsc = internal constant %struct.mlxsw_reg_info { i16 16411, i16 40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.219, i32 0, i32 0) }, align 8, !dbg !8652
@mlxsw_reg_pmlp = internal constant %struct.mlxsw_reg_info { i16 20482, i16 64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.220, i32 0, i32 0) }, align 8, !dbg !8654
@mlxsw_reg_pmtu = internal constant %struct.mlxsw_reg_info { i16 20483, i16 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.221, i32 0, i32 0) }, align 8, !dbg !8656
@mlxsw_reg_ptys = internal constant %struct.mlxsw_reg_info { i16 20484, i16 64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.222, i32 0, i32 0) }, align 8, !dbg !8658
@mlxsw_reg_ppad = internal constant %struct.mlxsw_reg_info { i16 20485, i16 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.223, i32 0, i32 0) }, align 8, !dbg !8660
@mlxsw_reg_paos = internal constant %struct.mlxsw_reg_info { i16 20486, i16 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.224, i32 0, i32 0) }, align 8, !dbg !8662
@mlxsw_reg_pfcc = internal constant %struct.mlxsw_reg_info { i16 20487, i16 32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.225, i32 0, i32 0) }, align 8, !dbg !8664
@mlxsw_reg_ppcnt = internal constant %struct.mlxsw_reg_info { i16 20488, i16 256, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.226, i32 0, i32 0) }, align 8, !dbg !8666
@mlxsw_reg_plib = internal constant %struct.mlxsw_reg_info { i16 20490, i16 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.227, i32 0, i32 0) }, align 8, !dbg !8668
@mlxsw_reg_pptb = internal constant %struct.mlxsw_reg_info { i16 20491, i16 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.228, i32 0, i32 0) }, align 8, !dbg !8670
@mlxsw_reg_pbmc = internal constant %struct.mlxsw_reg_info { i16 20492, i16 108, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.229, i32 0, i32 0) }, align 8, !dbg !8672
@mlxsw_reg_pspa = internal constant %struct.mlxsw_reg_info { i16 20493, i16 8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.230, i32 0, i32 0) }, align 8, !dbg !8674
@mlxsw_reg_pmaos = internal constant %struct.mlxsw_reg_info { i16 20498, i16 16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.231, i32 0, i32 0) }, align 8, !dbg !8676
@mlxsw_reg_pplr = internal constant %struct.mlxsw_reg_info { i16 20504, i16 8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.232, i32 0, i32 0) }, align 8, !dbg !8678
@mlxsw_reg_pmpe = internal constant %struct.mlxsw_reg_info { i16 20516, i16 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.233, i32 0, i32 0) }, align 8, !dbg !8680
@mlxsw_reg_pddr = internal constant %struct.mlxsw_reg_info { i16 20529, i16 256, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.234, i32 0, i32 0) }, align 8, !dbg !8682
@mlxsw_reg_htgt = internal constant %struct.mlxsw_reg_info { i16 28674, i16 32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.235, i32 0, i32 0) }, align 8, !dbg !8684
@mlxsw_reg_rgcr = internal constant %struct.mlxsw_reg_info { i16 -32767, i16 40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.236, i32 0, i32 0) }, align 8, !dbg !8686
@mlxsw_reg_ritr = internal constant %struct.mlxsw_reg_info { i16 -32766, i16 64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.237, i32 0, i32 0) }, align 8, !dbg !8688
@mlxsw_reg_rtar = internal constant %struct.mlxsw_reg_info { i16 -32764, i16 32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.238, i32 0, i32 0) }, align 8, !dbg !8690
@mlxsw_reg_ratr = internal constant %struct.mlxsw_reg_info { i16 -32760, i16 44, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.239, i32 0, i32 0) }, align 8, !dbg !8692
@mlxsw_reg_rtdp = internal constant %struct.mlxsw_reg_info { i16 -32736, i16 68, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.240, i32 0, i32 0) }, align 8, !dbg !8694
@mlxsw_reg_rdpm = internal constant %struct.mlxsw_reg_info { i16 -32759, i16 64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.241, i32 0, i32 0) }, align 8, !dbg !8696
@mlxsw_reg_ricnt = internal constant %struct.mlxsw_reg_info { i16 -32757, i16 256, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.242, i32 0, i32 0) }, align 8, !dbg !8698
@mlxsw_reg_rrcr = internal constant %struct.mlxsw_reg_info { i16 -32753, i16 36, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.243, i32 0, i32 0) }, align 8, !dbg !8700
@mlxsw_reg_ralta = internal constant %struct.mlxsw_reg_info { i16 -32752, i16 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.244, i32 0, i32 0) }, align 8, !dbg !8702
@mlxsw_reg_ralst = internal constant %struct.mlxsw_reg_info { i16 -32751, i16 260, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.245, i32 0, i32 0) }, align 8, !dbg !8704
@mlxsw_reg_raltb = internal constant %struct.mlxsw_reg_info { i16 -32750, i16 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.246, i32 0, i32 0) }, align 8, !dbg !8706
@mlxsw_reg_ralue = internal constant %struct.mlxsw_reg_info { i16 -32749, i16 56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.247, i32 0, i32 0) }, align 8, !dbg !8708
@mlxsw_reg_rauht = internal constant %struct.mlxsw_reg_info { i16 -32748, i16 116, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.248, i32 0, i32 0) }, align 8, !dbg !8710
@mlxsw_reg_raleu = internal constant %struct.mlxsw_reg_info { i16 -32747, i16 40, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.249, i32 0, i32 0) }, align 8, !dbg !8712
@mlxsw_reg_rauhtd = internal constant %struct.mlxsw_reg_info { i16 -32744, i16 1056, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.250, i32 0, i32 0) }, align 8, !dbg !8714
@mlxsw_reg_rigr2 = internal constant %struct.mlxsw_reg_info { i16 -32733, i16 176, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.251, i32 0, i32 0) }, align 8, !dbg !8716
@mlxsw_reg_recr2 = internal constant %struct.mlxsw_reg_info { i16 -32731, i16 56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.252, i32 0, i32 0) }, align 8, !dbg !8718
@mlxsw_reg_rmft2 = internal constant %struct.mlxsw_reg_info { i16 -32729, i16 372, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.253, i32 0, i32 0) }, align 8, !dbg !8720
@mlxsw_reg_mfcr = internal constant %struct.mlxsw_reg_info { i16 -28671, i16 8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.254, i32 0, i32 0) }, align 8, !dbg !8722
@mlxsw_reg_mfsc = internal constant %struct.mlxsw_reg_info { i16 -28670, i16 8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.255, i32 0, i32 0) }, align 8, !dbg !8724
@mlxsw_reg_mfsm = internal constant %struct.mlxsw_reg_info { i16 -28669, i16 8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.256, i32 0, i32 0) }, align 8, !dbg !8726
@mlxsw_reg_mfsl = internal constant %struct.mlxsw_reg_info { i16 -28668, i16 12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.257, i32 0, i32 0) }, align 8, !dbg !8728
@mlxsw_reg_fore = internal constant %struct.mlxsw_reg_info { i16 -28665, i16 12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.258, i32 0, i32 0) }, align 8, !dbg !8730
@mlxsw_reg_mtcap = internal constant %struct.mlxsw_reg_info { i16 -28663, i16 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.259, i32 0, i32 0) }, align 8, !dbg !8732
@mlxsw_reg_mtmp = internal constant %struct.mlxsw_reg_info { i16 -28662, i16 32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.260, i32 0, i32 0) }, align 8, !dbg !8734
@mlxsw_reg_mtwe = internal constant %struct.mlxsw_reg_info { i16 -28661, i16 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.261, i32 0, i32 0) }, align 8, !dbg !8736
@mlxsw_reg_mtbr = internal constant %struct.mlxsw_reg_info { i16 -28657, i16 204, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.262, i32 0, i32 0) }, align 8, !dbg !8738
@mlxsw_reg_mcia = internal constant %struct.mlxsw_reg_info { i16 -28652, i16 64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.263, i32 0, i32 0) }, align 8, !dbg !8740
@mlxsw_reg_mpat = internal constant %struct.mlxsw_reg_info { i16 -28646, i16 120, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.264, i32 0, i32 0) }, align 8, !dbg !8742
@mlxsw_reg_mpar = internal constant %struct.mlxsw_reg_info { i16 -28645, i16 12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.265, i32 0, i32 0) }, align 8, !dbg !8744
@mlxsw_reg_mrsr = internal constant %struct.mlxsw_reg_info { i16 -28637, i16 8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.266, i32 0, i32 0) }, align 8, !dbg !8746
@mlxsw_reg_mlcr = internal constant %struct.mlxsw_reg_info { i16 -28629, i16 12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.267, i32 0, i32 0) }, align 8, !dbg !8748
@mlxsw_reg_mtpps = internal constant %struct.mlxsw_reg_info { i16 -28589, i16 60, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.268, i32 0, i32 0) }, align 8, !dbg !8750
@mlxsw_reg_mtutc = internal constant %struct.mlxsw_reg_info { i16 -28587, i16 28, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.269, i32 0, i32 0) }, align 8, !dbg !8752
@mlxsw_reg_mpsc = internal constant %struct.mlxsw_reg_info { i16 -28544, i16 28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.270, i32 0, i32 0) }, align 8, !dbg !8754
@mlxsw_reg_mgpc = internal constant %struct.mlxsw_reg_info { i16 -28543, i16 24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.271, i32 0, i32 0) }, align 8, !dbg !8756
@mlxsw_reg_mprs = internal constant %struct.mlxsw_reg_info { i16 -28541, i16 20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.272, i32 0, i32 0) }, align 8, !dbg !8758
@mlxsw_reg_mogcr = internal constant %struct.mlxsw_reg_info { i16 -28538, i16 32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.273, i32 0, i32 0) }, align 8, !dbg !8760
@mlxsw_reg_mpagr = internal constant %struct.mlxsw_reg_info { i16 -28535, i16 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.274, i32 0, i32 0) }, align 8, !dbg !8762
@mlxsw_reg_momte = internal constant %struct.mlxsw_reg_info { i16 -28531, i16 16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.275, i32 0, i32 0) }, align 8, !dbg !8764
@mlxsw_reg_mtpppc = internal constant %struct.mlxsw_reg_info { i16 -28528, i16 40, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.276, i32 0, i32 0) }, align 8, !dbg !8766
@mlxsw_reg_mtpptr = internal constant %struct.mlxsw_reg_info { i16 -28527, i16 80, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.277, i32 0, i32 0) }, align 8, !dbg !8768
@mlxsw_reg_mtptpt = internal constant %struct.mlxsw_reg_info { i16 -28526, i16 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.278, i32 0, i32 0) }, align 8, !dbg !8770
@mlxsw_reg_mgpir = internal constant %struct.mlxsw_reg_info { i16 -28416, i16 160, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.279, i32 0, i32 0) }, align 8, !dbg !8772
@mlxsw_reg_mfde = internal constant %struct.mlxsw_reg_info { i16 -28160, i16 24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.280, i32 0, i32 0) }, align 8, !dbg !8774
@mlxsw_reg_tngcr = internal constant %struct.mlxsw_reg_info { i16 -24575, i16 68, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.281, i32 0, i32 0) }, align 8, !dbg !8776
@mlxsw_reg_tnumt = internal constant %struct.mlxsw_reg_info { i16 -24573, i16 32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.282, i32 0, i32 0) }, align 8, !dbg !8778
@mlxsw_reg_tnqcr = internal constant %struct.mlxsw_reg_info { i16 -24560, i16 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.283, i32 0, i32 0) }, align 8, !dbg !8780
@mlxsw_reg_tnqdr = internal constant %struct.mlxsw_reg_info { i16 -24559, i16 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.284, i32 0, i32 0) }, align 8, !dbg !8782
@mlxsw_reg_tneem = internal constant %struct.mlxsw_reg_info { i16 -24558, i16 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.285, i32 0, i32 0) }, align 8, !dbg !8784
@mlxsw_reg_tndem = internal constant %struct.mlxsw_reg_info { i16 -24557, i16 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.286, i32 0, i32 0) }, align 8, !dbg !8786
@mlxsw_reg_tnpc = internal constant %struct.mlxsw_reg_info { i16 -24544, i16 24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.287, i32 0, i32 0) }, align 8, !dbg !8788
@mlxsw_reg_tigcr = internal constant %struct.mlxsw_reg_info { i16 -22527, i16 16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.288, i32 0, i32 0) }, align 8, !dbg !8790
@mlxsw_reg_tieem = internal constant %struct.mlxsw_reg_info { i16 -22510, i16 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.289, i32 0, i32 0) }, align 8, !dbg !8792
@mlxsw_reg_tidem = internal constant %struct.mlxsw_reg_info { i16 -22509, i16 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.290, i32 0, i32 0) }, align 8, !dbg !8794
@mlxsw_reg_sbpr = internal constant %struct.mlxsw_reg_info { i16 -20479, i16 20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.291, i32 0, i32 0) }, align 8, !dbg !8796
@mlxsw_reg_sbcm = internal constant %struct.mlxsw_reg_info { i16 -20478, i16 40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.292, i32 0, i32 0) }, align 8, !dbg !8798
@mlxsw_reg_sbpm = internal constant %struct.mlxsw_reg_info { i16 -20477, i16 40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.293, i32 0, i32 0) }, align 8, !dbg !8800
@mlxsw_reg_sbmm = internal constant %struct.mlxsw_reg_info { i16 -20476, i16 40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.294, i32 0, i32 0) }, align 8, !dbg !8802
@mlxsw_reg_sbsr = internal constant %struct.mlxsw_reg_info { i16 -20475, i16 1052, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.295, i32 0, i32 0) }, align 8, !dbg !8804
@mlxsw_reg_sbib = internal constant %struct.mlxsw_reg_info { i16 -20474, i16 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i32 0, i32 0) }, align 8, !dbg !8806
@.str.169 = private unnamed_addr constant [5 x i8] c"sgcr\00", align 1
@.str.170 = private unnamed_addr constant [5 x i8] c"spad\00", align 1
@.str.171 = private unnamed_addr constant [5 x i8] c"smid\00", align 1
@.str.172 = private unnamed_addr constant [5 x i8] c"sspr\00", align 1
@.str.173 = private unnamed_addr constant [6 x i8] c"sfdat\00", align 1
@.str.174 = private unnamed_addr constant [4 x i8] c"sfd\00", align 1
@.str.175 = private unnamed_addr constant [4 x i8] c"sfn\00", align 1
@.str.176 = private unnamed_addr constant [5 x i8] c"spms\00", align 1
@.str.177 = private unnamed_addr constant [6 x i8] c"spvid\00", align 1
@.str.178 = private unnamed_addr constant [5 x i8] c"spvm\00", align 1
@.str.179 = private unnamed_addr constant [6 x i8] c"spaft\00", align 1
@.str.180 = private unnamed_addr constant [5 x i8] c"sfgc\00", align 1
@.str.181 = private unnamed_addr constant [5 x i8] c"sftr\00", align 1
@.str.182 = private unnamed_addr constant [5 x i8] c"sfdf\00", align 1
@.str.183 = private unnamed_addr constant [5 x i8] c"sldr\00", align 1
@.str.184 = private unnamed_addr constant [5 x i8] c"slcr\00", align 1
@.str.185 = private unnamed_addr constant [6 x i8] c"slcor\00", align 1
@.str.186 = private unnamed_addr constant [6 x i8] c"spmlr\00", align 1
@.str.187 = private unnamed_addr constant [5 x i8] c"svfa\00", align 1
@.str.188 = private unnamed_addr constant [5 x i8] c"svpe\00", align 1
@.str.189 = private unnamed_addr constant [5 x i8] c"sfmr\00", align 1
@.str.190 = private unnamed_addr constant [7 x i8] c"spvmlr\00", align 1
@.str.191 = private unnamed_addr constant [5 x i8] c"cwtp\00", align 1
@.str.192 = private unnamed_addr constant [6 x i8] c"cwtpm\00", align 1
@.str.193 = private unnamed_addr constant [5 x i8] c"pgcr\00", align 1
@.str.194 = private unnamed_addr constant [5 x i8] c"ppbt\00", align 1
@.str.195 = private unnamed_addr constant [5 x i8] c"pacl\00", align 1
@.str.196 = private unnamed_addr constant [5 x i8] c"pagt\00", align 1
@.str.197 = private unnamed_addr constant [5 x i8] c"ptar\00", align 1
@.str.198 = private unnamed_addr constant [5 x i8] c"ppbs\00", align 1
@.str.199 = private unnamed_addr constant [5 x i8] c"prcr\00", align 1
@.str.200 = private unnamed_addr constant [5 x i8] c"pefa\00", align 1
@.str.201 = private unnamed_addr constant [7 x i8] c"pemrbt\00", align 1
@.str.202 = private unnamed_addr constant [6 x i8] c"ptce2\00", align 1
@.str.203 = private unnamed_addr constant [6 x i8] c"perpt\00", align 1
@.str.204 = private unnamed_addr constant [7 x i8] c"peabfe\00", align 1
@.str.205 = private unnamed_addr constant [6 x i8] c"perar\00", align 1
@.str.206 = private unnamed_addr constant [6 x i8] c"ptce3\00", align 1
@.str.207 = private unnamed_addr constant [6 x i8] c"percr\00", align 1
@.str.208 = private unnamed_addr constant [7 x i8] c"pererp\00", align 1
@.str.209 = private unnamed_addr constant [5 x i8] c"iedr\00", align 1
@.str.210 = private unnamed_addr constant [5 x i8] c"qpts\00", align 1
@.str.211 = private unnamed_addr constant [5 x i8] c"qpcr\00", align 1
@.str.212 = private unnamed_addr constant [5 x i8] c"qtct\00", align 1
@.str.213 = private unnamed_addr constant [5 x i8] c"qeec\00", align 1
@.str.214 = private unnamed_addr constant [5 x i8] c"qrwe\00", align 1
@.str.215 = private unnamed_addr constant [6 x i8] c"qpdsm\00", align 1
@.str.216 = private unnamed_addr constant [5 x i8] c"qpdp\00", align 1
@.str.217 = private unnamed_addr constant [6 x i8] c"qpdpm\00", align 1
@.str.218 = private unnamed_addr constant [6 x i8] c"qtctm\00", align 1
@.str.219 = private unnamed_addr constant [5 x i8] c"qpsc\00", align 1
@.str.220 = private unnamed_addr constant [5 x i8] c"pmlp\00", align 1
@.str.221 = private unnamed_addr constant [5 x i8] c"pmtu\00", align 1
@.str.222 = private unnamed_addr constant [5 x i8] c"ptys\00", align 1
@.str.223 = private unnamed_addr constant [5 x i8] c"ppad\00", align 1
@.str.224 = private unnamed_addr constant [5 x i8] c"paos\00", align 1
@.str.225 = private unnamed_addr constant [5 x i8] c"pfcc\00", align 1
@.str.226 = private unnamed_addr constant [6 x i8] c"ppcnt\00", align 1
@.str.227 = private unnamed_addr constant [5 x i8] c"plib\00", align 1
@.str.228 = private unnamed_addr constant [5 x i8] c"pptb\00", align 1
@.str.229 = private unnamed_addr constant [5 x i8] c"pbmc\00", align 1
@.str.230 = private unnamed_addr constant [5 x i8] c"pspa\00", align 1
@.str.231 = private unnamed_addr constant [6 x i8] c"pmaos\00", align 1
@.str.232 = private unnamed_addr constant [5 x i8] c"pplr\00", align 1
@.str.233 = private unnamed_addr constant [5 x i8] c"pmpe\00", align 1
@.str.234 = private unnamed_addr constant [5 x i8] c"pddr\00", align 1
@.str.235 = private unnamed_addr constant [5 x i8] c"htgt\00", align 1
@.str.236 = private unnamed_addr constant [5 x i8] c"rgcr\00", align 1
@.str.237 = private unnamed_addr constant [5 x i8] c"ritr\00", align 1
@.str.238 = private unnamed_addr constant [5 x i8] c"rtar\00", align 1
@.str.239 = private unnamed_addr constant [5 x i8] c"ratr\00", align 1
@.str.240 = private unnamed_addr constant [5 x i8] c"rtdp\00", align 1
@.str.241 = private unnamed_addr constant [5 x i8] c"rdpm\00", align 1
@.str.242 = private unnamed_addr constant [6 x i8] c"ricnt\00", align 1
@.str.243 = private unnamed_addr constant [5 x i8] c"rrcr\00", align 1
@.str.244 = private unnamed_addr constant [6 x i8] c"ralta\00", align 1
@.str.245 = private unnamed_addr constant [6 x i8] c"ralst\00", align 1
@.str.246 = private unnamed_addr constant [6 x i8] c"raltb\00", align 1
@.str.247 = private unnamed_addr constant [6 x i8] c"ralue\00", align 1
@.str.248 = private unnamed_addr constant [6 x i8] c"rauht\00", align 1
@.str.249 = private unnamed_addr constant [6 x i8] c"raleu\00", align 1
@.str.250 = private unnamed_addr constant [7 x i8] c"rauhtd\00", align 1
@.str.251 = private unnamed_addr constant [6 x i8] c"rigr2\00", align 1
@.str.252 = private unnamed_addr constant [6 x i8] c"recr2\00", align 1
@.str.253 = private unnamed_addr constant [6 x i8] c"rmft2\00", align 1
@.str.254 = private unnamed_addr constant [5 x i8] c"mfcr\00", align 1
@.str.255 = private unnamed_addr constant [5 x i8] c"mfsc\00", align 1
@.str.256 = private unnamed_addr constant [5 x i8] c"mfsm\00", align 1
@.str.257 = private unnamed_addr constant [5 x i8] c"mfsl\00", align 1
@.str.258 = private unnamed_addr constant [5 x i8] c"fore\00", align 1
@.str.259 = private unnamed_addr constant [6 x i8] c"mtcap\00", align 1
@.str.260 = private unnamed_addr constant [5 x i8] c"mtmp\00", align 1
@.str.261 = private unnamed_addr constant [5 x i8] c"mtwe\00", align 1
@.str.262 = private unnamed_addr constant [5 x i8] c"mtbr\00", align 1
@.str.263 = private unnamed_addr constant [5 x i8] c"mcia\00", align 1
@.str.264 = private unnamed_addr constant [5 x i8] c"mpat\00", align 1
@.str.265 = private unnamed_addr constant [5 x i8] c"mpar\00", align 1
@.str.266 = private unnamed_addr constant [5 x i8] c"mrsr\00", align 1
@.str.267 = private unnamed_addr constant [5 x i8] c"mlcr\00", align 1
@.str.268 = private unnamed_addr constant [6 x i8] c"mtpps\00", align 1
@.str.269 = private unnamed_addr constant [6 x i8] c"mtutc\00", align 1
@.str.270 = private unnamed_addr constant [5 x i8] c"mpsc\00", align 1
@.str.271 = private unnamed_addr constant [5 x i8] c"mgpc\00", align 1
@.str.272 = private unnamed_addr constant [5 x i8] c"mprs\00", align 1
@.str.273 = private unnamed_addr constant [6 x i8] c"mogcr\00", align 1
@.str.274 = private unnamed_addr constant [6 x i8] c"mpagr\00", align 1
@.str.275 = private unnamed_addr constant [6 x i8] c"momte\00", align 1
@.str.276 = private unnamed_addr constant [7 x i8] c"mtpppc\00", align 1
@.str.277 = private unnamed_addr constant [7 x i8] c"mtpptr\00", align 1
@.str.278 = private unnamed_addr constant [7 x i8] c"mtptpt\00", align 1
@.str.279 = private unnamed_addr constant [6 x i8] c"mgpir\00", align 1
@.str.280 = private unnamed_addr constant [5 x i8] c"mfde\00", align 1
@.str.281 = private unnamed_addr constant [6 x i8] c"tngcr\00", align 1
@.str.282 = private unnamed_addr constant [6 x i8] c"tnumt\00", align 1
@.str.283 = private unnamed_addr constant [6 x i8] c"tnqcr\00", align 1
@.str.284 = private unnamed_addr constant [6 x i8] c"tnqdr\00", align 1
@.str.285 = private unnamed_addr constant [6 x i8] c"tneem\00", align 1
@.str.286 = private unnamed_addr constant [6 x i8] c"tndem\00", align 1
@.str.287 = private unnamed_addr constant [5 x i8] c"tnpc\00", align 1
@.str.288 = private unnamed_addr constant [6 x i8] c"tigcr\00", align 1
@.str.289 = private unnamed_addr constant [6 x i8] c"tieem\00", align 1
@.str.290 = private unnamed_addr constant [6 x i8] c"tidem\00", align 1
@.str.291 = private unnamed_addr constant [5 x i8] c"sbpr\00", align 1
@.str.292 = private unnamed_addr constant [5 x i8] c"sbcm\00", align 1
@.str.293 = private unnamed_addr constant [5 x i8] c"sbpm\00", align 1
@.str.294 = private unnamed_addr constant [5 x i8] c"sbmm\00", align 1
@.str.295 = private unnamed_addr constant [5 x i8] c"sbsr\00", align 1
@.str.296 = private unnamed_addr constant [5 x i8] c"sbib\00", align 1
@.str.297 = private unnamed_addr constant [20 x i8] c"operation performed\00", align 1
@.str.298 = private unnamed_addr constant [15 x i8] c"device is busy\00", align 1
@.str.299 = private unnamed_addr constant [22 x i8] c"version not supported\00", align 1
@.str.300 = private unnamed_addr constant [12 x i8] c"unknown TLV\00", align 1
@.str.301 = private unnamed_addr constant [23 x i8] c"register not supported\00", align 1
@.str.302 = private unnamed_addr constant [20 x i8] c"class not supported\00", align 1
@.str.303 = private unnamed_addr constant [21 x i8] c"method not supported\00", align 1
@.str.304 = private unnamed_addr constant [14 x i8] c"bad parameter\00", align 1
@.str.305 = private unnamed_addr constant [23 x i8] c"resource not available\00", align 1
@.str.306 = private unnamed_addr constant [25 x i8] c"acknowledged. retransmit\00", align 1
@.str.307 = private unnamed_addr constant [15 x i8] c"internal error\00", align 1
@.str.308 = private unnamed_addr constant [46 x i8] c"Reg cmd access status failed (status=%x(%s))\0A\00", align 1
@.str.309 = private unnamed_addr constant [47 x i8] c"Reg cmd access failed (reg_id=%x(%s),type=%s)\0A\00", align 1
@.str.310 = private unnamed_addr constant [48 x i8] c"drivers/net/ethernet/mellanox/mlxsw/resources.h\00", align 1
@.str.311 = private unnamed_addr constant [16 x i8] c"reg_pmtm_module\00", align 1
@mlxsw_reg_pmtm_module_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.311, i32 0, i32 0) }, align 8, !dbg !8808
@.str.313 = private unnamed_addr constant [5 x i8] c"pmtm\00", align 1
@.str.314 = private unnamed_addr constant [21 x i8] c"reg_pmtm_module_type\00", align 1
@mlxsw_reg_pmtm_module_type_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.314, i32 0, i32 0) }, align 8, !dbg !8812
@.str.316 = private unnamed_addr constant [9 x i8] c"QUERY_FW\00", align 1
@.str.317 = private unnamed_addr constant [16 x i8] c"QUERY_BOARDINFO\00", align 1
@.str.318 = private unnamed_addr constant [13 x i8] c"QUERY_AQ_CAP\00", align 1
@.str.319 = private unnamed_addr constant [7 x i8] c"MAP_FA\00", align 1
@.str.320 = private unnamed_addr constant [9 x i8] c"UNMAP_FA\00", align 1
@.str.321 = private unnamed_addr constant [15 x i8] c"CONFIG_PROFILE\00", align 1
@.str.322 = private unnamed_addr constant [11 x i8] c"ACCESS_REG\00", align 1
@.str.323 = private unnamed_addr constant [9 x i8] c"SW2HW_DQ\00", align 1
@.str.324 = private unnamed_addr constant [9 x i8] c"HW2SW_DQ\00", align 1
@.str.325 = private unnamed_addr constant [8 x i8] c"2ERR_DQ\00", align 1
@.str.326 = private unnamed_addr constant [9 x i8] c"QUERY_DQ\00", align 1
@.str.327 = private unnamed_addr constant [9 x i8] c"SW2HW_CQ\00", align 1
@.str.328 = private unnamed_addr constant [9 x i8] c"HW2SW_CQ\00", align 1
@.str.329 = private unnamed_addr constant [9 x i8] c"QUERY_CQ\00", align 1
@.str.330 = private unnamed_addr constant [9 x i8] c"SW2HW_EQ\00", align 1
@.str.331 = private unnamed_addr constant [9 x i8] c"HW2SW_EQ\00", align 1
@.str.332 = private unnamed_addr constant [9 x i8] c"QUERY_EQ\00", align 1
@.str.333 = private unnamed_addr constant [16 x i8] c"QUERY_RESOURCES\00", align 1
@.str.334 = private unnamed_addr constant [3 x i8] c"OK\00", align 1
@.str.335 = private unnamed_addr constant [13 x i8] c"INTERNAL_ERR\00", align 1
@.str.336 = private unnamed_addr constant [7 x i8] c"BAD_OP\00", align 1
@.str.337 = private unnamed_addr constant [10 x i8] c"BAD_PARAM\00", align 1
@.str.338 = private unnamed_addr constant [14 x i8] c"BAD_SYS_STATE\00", align 1
@.str.339 = private unnamed_addr constant [13 x i8] c"BAD_RESOURCE\00", align 1
@.str.340 = private unnamed_addr constant [14 x i8] c"RESOURCE_BUSY\00", align 1
@.str.341 = private unnamed_addr constant [11 x i8] c"EXCEED_LIM\00", align 1
@.str.342 = private unnamed_addr constant [14 x i8] c"BAD_RES_STATE\00", align 1
@.str.343 = private unnamed_addr constant [10 x i8] c"BAD_INDEX\00", align 1
@.str.344 = private unnamed_addr constant [10 x i8] c"BAD_NVMEM\00", align 1
@.str.345 = private unnamed_addr constant [14 x i8] c"RUNNING_RESET\00", align 1
@.str.346 = private unnamed_addr constant [8 x i8] c"BAD_PKT\00", align 1
@.str.347 = private unnamed_addr constant [27 x i8] c"cmd_mbox_query_resource_id\00", align 1
@mlxsw_cmd_mbox_query_resource_id_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 8, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.347, i32 0, i32 0) }, align 8, !dbg !8814
@.str.349 = private unnamed_addr constant [29 x i8] c"cmd_mbox_query_resource_data\00", align 1
@mlxsw_cmd_mbox_query_resource_data_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 8, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 40, i8 undef }, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.349, i32 0, i32 0) }, align 8, !dbg !8816
@mlxsw_res_ids = internal global [47 x i16] [i16 4097, i16 4098, i16 4099, i16 4101, i16 4103, i16 8705, i16 8720, i16 8721, i16 8722, i16 9232, i16 9233, i16 9248, i16 9283, i16 9289, i16 9474, i16 9504, i16 9505, i16 9744, i16 9745, i16 9746, i16 10245, i16 10243, i16 10257, i16 10497, i16 10498, i16 10499, i16 10500, i16 10501, i16 10512, i16 10513, i16 10514, i16 10560, i16 10561, i16 10562, i16 10576, i16 10577, i16 10578, i16 10579, i16 10592, i16 10768, i16 10771, i16 11265, i16 11266, i16 11280, i16 11312, i16 11778, i16 11779], align 16, !dbg !8818
@mlxsw_core_driver_name = internal constant [11 x i8] c"mlxsw_core\00", align 1, !dbg !8823
@.str.351 = private unnamed_addr constant [11 x i8] c"%s_ordered\00", align 1
@llvm.used = appending global [7 x i8*] [i8* bitcast (void ()* @mlxsw_core_module_exit to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_mlxsw_core_module_init381 to i8*), i8* bitcast (void ()** @__exitcall_mlxsw_core_module_exit to i8*), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @__UNIQUE_ID_file382, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__UNIQUE_ID_license383, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__UNIQUE_ID_author384, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @__UNIQUE_ID_description385, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @mlxsw_core_port_driver_priv(%struct.mlxsw_core_port* %mlxsw_core_port) #0 !dbg !8833 {
entry:
  %mlxsw_core_port.addr = alloca %struct.mlxsw_core_port*, align 8
  store %struct.mlxsw_core_port* %mlxsw_core_port, %struct.mlxsw_core_port** %mlxsw_core_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core_port** %mlxsw_core_port.addr, metadata !8836, metadata !DIExpression()), !dbg !8837
  %0 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %mlxsw_core_port.addr, align 8, !dbg !8838
  %port_driver_priv = getelementptr inbounds %struct.mlxsw_core_port, %struct.mlxsw_core_port* %0, i32 0, i32 1, !dbg !8839
  %1 = load i8*, i8** %port_driver_priv, align 8, !dbg !8839
  ret i8* %1, !dbg !8840
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_core_max_ports(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !8841 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !8846, metadata !DIExpression()), !dbg !8847
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !8848
  %max_ports = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %0, i32 0, i32 13, !dbg !8849
  %1 = load i32, i32* %max_ports, align 8, !dbg !8849
  ret i32 %1, !dbg !8850
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @mlxsw_core_driver_priv(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !8851 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !8854, metadata !DIExpression()), !dbg !8855
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !8856
  %driver_priv = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %0, i32 0, i32 18, !dbg !8857
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %driver_priv, i64 0, i64 0, !dbg !8856
  %1 = bitcast i64* %arraydecay to i8*, !dbg !8856
  ret i8* %1, !dbg !8858
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @mlxsw_core_res_query_enabled(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !8859 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !8862, metadata !DIExpression()), !dbg !8863
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !8864
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %0, i32 0, i32 0, !dbg !8865
  %1 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !8865
  %res_query_enabled = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %1, i32 0, i32 38, !dbg !8866
  %2 = load i8, i8* %res_query_enabled, align 8, !dbg !8866
  %tobool = trunc i8 %2 to i1, !dbg !8866
  ret i1 %tobool, !dbg !8867
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @mlxsw_core_temp_warn_enabled(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !8868 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !8869, metadata !DIExpression()), !dbg !8870
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !8871
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %0, i32 0, i32 0, !dbg !8872
  %1 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !8872
  %temp_warn_enabled = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %1, i32 0, i32 40, !dbg !8873
  %2 = load i8, i8* %temp_warn_enabled, align 2, !dbg !8873
  %tobool = trunc i8 %2 to i1, !dbg !8873
  ret i1 %tobool, !dbg !8874
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @mlxsw_core_fw_rev_minor_subminor_validate(%struct.mlxsw_fw_rev* %rev, %struct.mlxsw_fw_rev* %req_rev) #0 !dbg !8875 {
entry:
  %rev.addr = alloca %struct.mlxsw_fw_rev*, align 8
  %req_rev.addr = alloca %struct.mlxsw_fw_rev*, align 8
  store %struct.mlxsw_fw_rev* %rev, %struct.mlxsw_fw_rev** %rev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_fw_rev** %rev.addr, metadata !8878, metadata !DIExpression()), !dbg !8879
  store %struct.mlxsw_fw_rev* %req_rev, %struct.mlxsw_fw_rev** %req_rev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_fw_rev** %req_rev.addr, metadata !8880, metadata !DIExpression()), !dbg !8881
  %0 = load %struct.mlxsw_fw_rev*, %struct.mlxsw_fw_rev** %rev.addr, align 8, !dbg !8882
  %minor = getelementptr inbounds %struct.mlxsw_fw_rev, %struct.mlxsw_fw_rev* %0, i32 0, i32 1, !dbg !8883
  %1 = load i16, i16* %minor, align 2, !dbg !8883
  %conv = zext i16 %1 to i32, !dbg !8882
  %2 = load %struct.mlxsw_fw_rev*, %struct.mlxsw_fw_rev** %req_rev.addr, align 8, !dbg !8884
  %minor1 = getelementptr inbounds %struct.mlxsw_fw_rev, %struct.mlxsw_fw_rev* %2, i32 0, i32 1, !dbg !8885
  %3 = load i16, i16* %minor1, align 2, !dbg !8885
  %conv2 = zext i16 %3 to i32, !dbg !8884
  %cmp = icmp sgt i32 %conv, %conv2, !dbg !8886
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !8887

lor.rhs:                                          ; preds = %entry
  %4 = load %struct.mlxsw_fw_rev*, %struct.mlxsw_fw_rev** %rev.addr, align 8, !dbg !8888
  %minor4 = getelementptr inbounds %struct.mlxsw_fw_rev, %struct.mlxsw_fw_rev* %4, i32 0, i32 1, !dbg !8889
  %5 = load i16, i16* %minor4, align 2, !dbg !8889
  %conv5 = zext i16 %5 to i32, !dbg !8888
  %6 = load %struct.mlxsw_fw_rev*, %struct.mlxsw_fw_rev** %req_rev.addr, align 8, !dbg !8890
  %minor6 = getelementptr inbounds %struct.mlxsw_fw_rev, %struct.mlxsw_fw_rev* %6, i32 0, i32 1, !dbg !8891
  %7 = load i16, i16* %minor6, align 2, !dbg !8891
  %conv7 = zext i16 %7 to i32, !dbg !8890
  %cmp8 = icmp eq i32 %conv5, %conv7, !dbg !8892
  br i1 %cmp8, label %land.rhs, label %land.end, !dbg !8893

land.rhs:                                         ; preds = %lor.rhs
  %8 = load %struct.mlxsw_fw_rev*, %struct.mlxsw_fw_rev** %rev.addr, align 8, !dbg !8894
  %subminor = getelementptr inbounds %struct.mlxsw_fw_rev, %struct.mlxsw_fw_rev* %8, i32 0, i32 2, !dbg !8895
  %9 = load i16, i16* %subminor, align 2, !dbg !8895
  %conv10 = zext i16 %9 to i32, !dbg !8894
  %10 = load %struct.mlxsw_fw_rev*, %struct.mlxsw_fw_rev** %req_rev.addr, align 8, !dbg !8896
  %subminor11 = getelementptr inbounds %struct.mlxsw_fw_rev, %struct.mlxsw_fw_rev* %10, i32 0, i32 2, !dbg !8897
  %11 = load i16, i16* %subminor11, align 2, !dbg !8897
  %conv12 = zext i16 %11 to i32, !dbg !8896
  %cmp13 = icmp sge i32 %conv10, %conv12, !dbg !8898
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %12 = phi i1 [ false, %lor.rhs ], [ %cmp13, %land.rhs ], !dbg !8899
  br label %lor.end, !dbg !8887

lor.end:                                          ; preds = %land.end, %entry
  %13 = phi i1 [ true, %entry ], [ %12, %land.end ]
  ret i1 %13, !dbg !8900
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_core_driver_register(%struct.mlxsw_driver* %mlxsw_driver) #0 !dbg !8901 {
entry:
  %lock.addr.i1 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i1, metadata !8904, metadata !DIExpression()), !dbg !8909
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8911, metadata !DIExpression()), !dbg !8913
  %mlxsw_driver.addr = alloca %struct.mlxsw_driver*, align 8
  store %struct.mlxsw_driver* %mlxsw_driver, %struct.mlxsw_driver** %mlxsw_driver.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_driver** %mlxsw_driver.addr, metadata !8915, metadata !DIExpression()), !dbg !8916
  store %struct.spinlock* @mlxsw_core_driver_list_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8917, !srcloc !8919
  %0 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8920
  %1 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %0, i32 0, i32 0, !dbg !8920
  %rlock.i = bitcast %union.anon* %1 to %struct.raw_spinlock*, !dbg !8920
  %2 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver.addr, align 8, !dbg !8922
  %list = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %2, i32 0, i32 0, !dbg !8923
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* @mlxsw_core_driver_list) #11, !dbg !8924
  store %struct.spinlock* @mlxsw_core_driver_list_lock, %struct.spinlock** %lock.addr.i1, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8925, !srcloc !8927
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i1, align 8, !dbg !8928
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !8928
  %rlock.i2 = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !8928
  ret i32 0, !dbg !8930
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !8931 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !8935, metadata !DIExpression()), !dbg !8936
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !8937, metadata !DIExpression()), !dbg !8938
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8939
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8940
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !8941
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !8941
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8942
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #11, !dbg !8943
  ret void, !dbg !8944
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlxsw_core_driver_unregister(%struct.mlxsw_driver* %mlxsw_driver) #0 !dbg !8945 {
entry:
  %lock.addr.i1 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i1, metadata !8904, metadata !DIExpression()), !dbg !8948
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8911, metadata !DIExpression()), !dbg !8950
  %mlxsw_driver.addr = alloca %struct.mlxsw_driver*, align 8
  store %struct.mlxsw_driver* %mlxsw_driver, %struct.mlxsw_driver** %mlxsw_driver.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_driver** %mlxsw_driver.addr, metadata !8952, metadata !DIExpression()), !dbg !8953
  store %struct.spinlock* @mlxsw_core_driver_list_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8954, !srcloc !8919
  %0 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8955
  %1 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %0, i32 0, i32 0, !dbg !8955
  %rlock.i = bitcast %union.anon* %1 to %struct.raw_spinlock*, !dbg !8955
  %2 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver.addr, align 8, !dbg !8956
  %list = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %2, i32 0, i32 0, !dbg !8957
  call void @list_del(%struct.list_head* %list) #11, !dbg !8958
  store %struct.spinlock* @mlxsw_core_driver_list_lock, %struct.spinlock** %lock.addr.i1, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8959, !srcloc !8927
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i1, align 8, !dbg !8960
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !8960
  %rlock.i2 = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !8960
  ret void, !dbg !8961
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !8962 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !8965, metadata !DIExpression()), !dbg !8966
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8967
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !8968
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8969
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !8970
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !8971
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8972
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !8973
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !8974
  ret void, !dbg !8975
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_core_bus_device_register(%struct.mlxsw_bus_info* %mlxsw_bus_info, %struct.mlxsw_bus* %mlxsw_bus, i8* %bus_priv, i1 zeroext %reload, %struct.devlink* %devlink, %struct.netlink_ext_ack* %extack) #0 !dbg !8976 {
entry:
  %mlxsw_bus_info.addr = alloca %struct.mlxsw_bus_info*, align 8
  %mlxsw_bus.addr = alloca %struct.mlxsw_bus*, align 8
  %bus_priv.addr = alloca i8*, align 8
  %reload.addr = alloca i8, align 1
  %devlink.addr = alloca %struct.devlink*, align 8
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %called_again = alloca i8, align 1
  %err = alloca i32, align 4
  store %struct.mlxsw_bus_info* %mlxsw_bus_info, %struct.mlxsw_bus_info** %mlxsw_bus_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_bus_info** %mlxsw_bus_info.addr, metadata !8979, metadata !DIExpression()), !dbg !8980
  store %struct.mlxsw_bus* %mlxsw_bus, %struct.mlxsw_bus** %mlxsw_bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_bus** %mlxsw_bus.addr, metadata !8981, metadata !DIExpression()), !dbg !8982
  store i8* %bus_priv, i8** %bus_priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bus_priv.addr, metadata !8983, metadata !DIExpression()), !dbg !8984
  %frombool = zext i1 %reload to i8
  store i8 %frombool, i8* %reload.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reload.addr, metadata !8985, metadata !DIExpression()), !dbg !8986
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !8987, metadata !DIExpression()), !dbg !8988
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !8989, metadata !DIExpression()), !dbg !8990
  call void @llvm.dbg.declare(metadata i8* %called_again, metadata !8991, metadata !DIExpression()), !dbg !8992
  store i8 0, i8* %called_again, align 1, !dbg !8992
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8993, metadata !DIExpression()), !dbg !8994
  br label %again, !dbg !8995

again:                                            ; preds = %if.then, %entry
  call void @llvm.dbg.label(metadata !8996), !dbg !8997
  %0 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %mlxsw_bus_info.addr, align 8, !dbg !8998
  %1 = load %struct.mlxsw_bus*, %struct.mlxsw_bus** %mlxsw_bus.addr, align 8, !dbg !8999
  %2 = load i8*, i8** %bus_priv.addr, align 8, !dbg !9000
  %3 = load i8, i8* %reload.addr, align 1, !dbg !9001
  %tobool = trunc i8 %3 to i1, !dbg !9001
  %4 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !9002
  %5 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !9003
  %call = call i32 @__mlxsw_core_bus_device_register(%struct.mlxsw_bus_info* %0, %struct.mlxsw_bus* %1, i8* %2, i1 zeroext %tobool, %struct.devlink* %4, %struct.netlink_ext_ack* %5) #11, !dbg !9004
  store i32 %call, i32* %err, align 4, !dbg !9005
  %6 = load i32, i32* %err, align 4, !dbg !9006
  %cmp = icmp eq i32 %6, -11, !dbg !9008
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !9009

land.lhs.true:                                    ; preds = %again
  %7 = load i8, i8* %called_again, align 1, !dbg !9010
  %tobool1 = trunc i8 %7 to i1, !dbg !9010
  br i1 %tobool1, label %if.end, label %if.then, !dbg !9011

if.then:                                          ; preds = %land.lhs.true
  store i8 1, i8* %called_again, align 1, !dbg !9012
  br label %again, !dbg !9014

if.end:                                           ; preds = %land.lhs.true, %again
  %8 = load i32, i32* %err, align 4, !dbg !9015
  ret i32 %8, !dbg !9016
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__mlxsw_core_bus_device_register(%struct.mlxsw_bus_info* %mlxsw_bus_info, %struct.mlxsw_bus* %mlxsw_bus, i8* %bus_priv, i1 zeroext %reload, %struct.devlink* %devlink, %struct.netlink_ext_ack* %extack) #0 !dbg !9017 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_bus_info.addr = alloca %struct.mlxsw_bus_info*, align 8
  %mlxsw_bus.addr = alloca %struct.mlxsw_bus*, align 8
  %bus_priv.addr = alloca i8*, align 8
  %reload.addr = alloca i8, align 1
  %devlink.addr = alloca %struct.devlink*, align 8
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %device_kind = alloca i8*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mlxsw_driver = alloca %struct.mlxsw_driver*, align 8
  %res = alloca %struct.mlxsw_res*, align 8
  %alloc_size = alloca i64, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_bus_info* %mlxsw_bus_info, %struct.mlxsw_bus_info** %mlxsw_bus_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_bus_info** %mlxsw_bus_info.addr, metadata !9018, metadata !DIExpression()), !dbg !9019
  store %struct.mlxsw_bus* %mlxsw_bus, %struct.mlxsw_bus** %mlxsw_bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_bus** %mlxsw_bus.addr, metadata !9020, metadata !DIExpression()), !dbg !9021
  store i8* %bus_priv, i8** %bus_priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bus_priv.addr, metadata !9022, metadata !DIExpression()), !dbg !9023
  %frombool = zext i1 %reload to i8
  store i8 %frombool, i8* %reload.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reload.addr, metadata !9024, metadata !DIExpression()), !dbg !9025
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !9026, metadata !DIExpression()), !dbg !9027
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !9028, metadata !DIExpression()), !dbg !9029
  call void @llvm.dbg.declare(metadata i8** %device_kind, metadata !9030, metadata !DIExpression()), !dbg !9031
  %0 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %mlxsw_bus_info.addr, align 8, !dbg !9032
  %device_kind1 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %0, i32 0, i32 0, !dbg !9033
  %1 = load i8*, i8** %device_kind1, align 8, !dbg !9033
  store i8* %1, i8** %device_kind, align 8, !dbg !9031
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !9034, metadata !DIExpression()), !dbg !9035
  call void @llvm.dbg.declare(metadata %struct.mlxsw_driver** %mlxsw_driver, metadata !9036, metadata !DIExpression()), !dbg !9037
  call void @llvm.dbg.declare(metadata %struct.mlxsw_res** %res, metadata !9038, metadata !DIExpression()), !dbg !9039
  call void @llvm.dbg.declare(metadata i64* %alloc_size, metadata !9040, metadata !DIExpression()), !dbg !9041
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9042, metadata !DIExpression()), !dbg !9043
  %2 = load i8*, i8** %device_kind, align 8, !dbg !9044
  %call = call %struct.mlxsw_driver* @mlxsw_core_driver_get(i8* %2) #11, !dbg !9045
  store %struct.mlxsw_driver* %call, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !9046
  %3 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !9047
  %tobool = icmp ne %struct.mlxsw_driver* %3, null, !dbg !9047
  br i1 %tobool, label %if.end, label %if.then, !dbg !9049

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9050
  br label %return, !dbg !9050

if.end:                                           ; preds = %entry
  %4 = load i8, i8* %reload.addr, align 1, !dbg !9051
  %tobool2 = trunc i8 %4 to i1, !dbg !9051
  br i1 %tobool2, label %if.end8, label %if.then3, !dbg !9053

if.then3:                                         ; preds = %if.end
  %5 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !9054
  %priv_size = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %5, i32 0, i32 2, !dbg !9056
  %6 = load i64, i64* %priv_size, align 8, !dbg !9056
  %add = add i64 624, %6, !dbg !9057
  store i64 %add, i64* %alloc_size, align 8, !dbg !9058
  %7 = load i64, i64* %alloc_size, align 8, !dbg !9059
  %call4 = call %struct.devlink* @devlink_alloc(%struct.devlink_ops* @mlxsw_devlink_ops, i64 %7) #11, !dbg !9060
  store %struct.devlink* %call4, %struct.devlink** %devlink.addr, align 8, !dbg !9061
  %8 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !9062
  %tobool5 = icmp ne %struct.devlink* %8, null, !dbg !9062
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !9064

if.then6:                                         ; preds = %if.then3
  store i32 -12, i32* %err, align 4, !dbg !9065
  br label %err_devlink_alloc, !dbg !9067

if.end7:                                          ; preds = %if.then3
  br label %if.end8, !dbg !9068

if.end8:                                          ; preds = %if.end7, %if.end
  %9 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !9069
  %call9 = call i8* @devlink_priv(%struct.devlink* %9) #11, !dbg !9070
  %10 = bitcast i8* %call9 to %struct.mlxsw_core*, !dbg !9070
  store %struct.mlxsw_core* %10, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9071
  %11 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9072
  %rx_listener_list = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %11, i32 0, i32 5, !dbg !9073
  call void @INIT_LIST_HEAD(%struct.list_head* %rx_listener_list) #11, !dbg !9074
  %12 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9075
  %event_listener_list = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %12, i32 0, i32 6, !dbg !9076
  call void @INIT_LIST_HEAD(%struct.list_head* %event_listener_list) #11, !dbg !9077
  %13 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !9078
  %14 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9079
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %14, i32 0, i32 0, !dbg !9080
  store %struct.mlxsw_driver* %13, %struct.mlxsw_driver** %driver, align 8, !dbg !9081
  %15 = load %struct.mlxsw_bus*, %struct.mlxsw_bus** %mlxsw_bus.addr, align 8, !dbg !9082
  %16 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9083
  %bus = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %16, i32 0, i32 1, !dbg !9084
  store %struct.mlxsw_bus* %15, %struct.mlxsw_bus** %bus, align 8, !dbg !9085
  %17 = load i8*, i8** %bus_priv.addr, align 8, !dbg !9086
  %18 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9087
  %bus_priv10 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %18, i32 0, i32 2, !dbg !9088
  store i8* %17, i8** %bus_priv10, align 8, !dbg !9089
  %19 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %mlxsw_bus_info.addr, align 8, !dbg !9090
  %20 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9091
  %bus_info = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %20, i32 0, i32 3, !dbg !9092
  store %struct.mlxsw_bus_info* %19, %struct.mlxsw_bus_info** %bus_info, align 8, !dbg !9093
  %21 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !9094
  %res_query_enabled = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %21, i32 0, i32 38, !dbg !9095
  %22 = load i8, i8* %res_query_enabled, align 8, !dbg !9095
  %tobool11 = trunc i8 %22 to i1, !dbg !9095
  br i1 %tobool11, label %cond.true, label %cond.false, !dbg !9094

cond.true:                                        ; preds = %if.end8
  %23 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9096
  %res12 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %23, i32 0, i32 9, !dbg !9097
  br label %cond.end, !dbg !9094

cond.false:                                       ; preds = %if.end8
  br label %cond.end, !dbg !9094

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.mlxsw_res* [ %res12, %cond.true ], [ null, %cond.false ], !dbg !9094
  store %struct.mlxsw_res* %cond, %struct.mlxsw_res** %res, align 8, !dbg !9098
  %24 = load %struct.mlxsw_bus*, %struct.mlxsw_bus** %mlxsw_bus.addr, align 8, !dbg !9099
  %init = getelementptr inbounds %struct.mlxsw_bus, %struct.mlxsw_bus* %24, i32 0, i32 1, !dbg !9100
  %25 = load i32 (i8*, %struct.mlxsw_core*, %struct.mlxsw_config_profile*, %struct.mlxsw_res*)*, i32 (i8*, %struct.mlxsw_core*, %struct.mlxsw_config_profile*, %struct.mlxsw_res*)** %init, align 8, !dbg !9100
  %26 = load i8*, i8** %bus_priv.addr, align 8, !dbg !9101
  %27 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9102
  %28 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !9103
  %profile = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %28, i32 0, i32 37, !dbg !9104
  %29 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile, align 8, !dbg !9104
  %30 = load %struct.mlxsw_res*, %struct.mlxsw_res** %res, align 8, !dbg !9105
  %call13 = call i32 %25(i8* %26, %struct.mlxsw_core* %27, %struct.mlxsw_config_profile* %29, %struct.mlxsw_res* %30) #11, !dbg !9099
  store i32 %call13, i32* %err, align 4, !dbg !9106
  %31 = load i32, i32* %err, align 4, !dbg !9107
  %tobool14 = icmp ne i32 %31, 0, !dbg !9107
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !9109

if.then15:                                        ; preds = %cond.end
  br label %err_bus_init, !dbg !9110

if.end16:                                         ; preds = %cond.end
  %32 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !9111
  %resources_register = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %32, i32 0, i32 31, !dbg !9113
  %33 = load i32 (%struct.mlxsw_core*)*, i32 (%struct.mlxsw_core*)** %resources_register, align 8, !dbg !9113
  %tobool17 = icmp ne i32 (%struct.mlxsw_core*)* %33, null, !dbg !9111
  br i1 %tobool17, label %land.lhs.true, label %if.end25, !dbg !9114

land.lhs.true:                                    ; preds = %if.end16
  %34 = load i8, i8* %reload.addr, align 1, !dbg !9115
  %tobool18 = trunc i8 %34 to i1, !dbg !9115
  br i1 %tobool18, label %if.end25, label %if.then19, !dbg !9116

if.then19:                                        ; preds = %land.lhs.true
  %35 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !9117
  %resources_register20 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %35, i32 0, i32 31, !dbg !9119
  %36 = load i32 (%struct.mlxsw_core*)*, i32 (%struct.mlxsw_core*)** %resources_register20, align 8, !dbg !9119
  %37 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9120
  %call21 = call i32 %36(%struct.mlxsw_core* %37) #11, !dbg !9117
  store i32 %call21, i32* %err, align 4, !dbg !9121
  %38 = load i32, i32* %err, align 4, !dbg !9122
  %tobool22 = icmp ne i32 %38, 0, !dbg !9122
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !9124

if.then23:                                        ; preds = %if.then19
  br label %err_register_resources, !dbg !9125

if.end24:                                         ; preds = %if.then19
  br label %if.end25, !dbg !9126

if.end25:                                         ; preds = %if.end24, %land.lhs.true, %if.end16
  %39 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9127
  %call26 = call i32 @mlxsw_ports_init(%struct.mlxsw_core* %39) #11, !dbg !9128
  store i32 %call26, i32* %err, align 4, !dbg !9129
  %40 = load i32, i32* %err, align 4, !dbg !9130
  %tobool27 = icmp ne i32 %40, 0, !dbg !9130
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !9132

if.then28:                                        ; preds = %if.end25
  br label %err_ports_init, !dbg !9133

if.end29:                                         ; preds = %if.end25
  %41 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9134
  %call30 = call zeroext i1 @mlxsw_core_res_valid(%struct.mlxsw_core* %41, i32 15) #11, !dbg !9134
  br i1 %call30, label %land.lhs.true31, label %if.end43, !dbg !9136

land.lhs.true31:                                  ; preds = %if.end29
  %42 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9137
  %call32 = call zeroext i1 @mlxsw_core_res_valid(%struct.mlxsw_core* %42, i32 16) #11, !dbg !9137
  br i1 %call32, label %if.then33, label %if.end43, !dbg !9138

if.then33:                                        ; preds = %land.lhs.true31
  %43 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9139
  %call34 = call i64 @mlxsw_core_res_get(%struct.mlxsw_core* %43, i32 15) #11, !dbg !9139
  %mul = mul i64 1, %call34, !dbg !9141
  %44 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9142
  %call35 = call i64 @mlxsw_core_res_get(%struct.mlxsw_core* %44, i32 16) #11, !dbg !9142
  %mul36 = mul i64 %mul, %call35, !dbg !9143
  store i64 %mul36, i64* %alloc_size, align 8, !dbg !9144
  %45 = load i64, i64* %alloc_size, align 8, !dbg !9145
  %call37 = call i8* @kzalloc(i64 %45, i32 3264) #11, !dbg !9146
  %46 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9147
  %lag = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %46, i32 0, i32 8, !dbg !9148
  %mapping = getelementptr inbounds %struct.anon.130, %struct.anon.130* %lag, i32 0, i32 0, !dbg !9149
  store i8* %call37, i8** %mapping, align 8, !dbg !9150
  %47 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9151
  %lag38 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %47, i32 0, i32 8, !dbg !9153
  %mapping39 = getelementptr inbounds %struct.anon.130, %struct.anon.130* %lag38, i32 0, i32 0, !dbg !9154
  %48 = load i8*, i8** %mapping39, align 8, !dbg !9154
  %tobool40 = icmp ne i8* %48, null, !dbg !9151
  br i1 %tobool40, label %if.end42, label %if.then41, !dbg !9155

if.then41:                                        ; preds = %if.then33
  store i32 -12, i32* %err, align 4, !dbg !9156
  br label %err_alloc_lag_mapping, !dbg !9158

if.end42:                                         ; preds = %if.then33
  br label %if.end43, !dbg !9159

if.end43:                                         ; preds = %if.end42, %land.lhs.true31, %if.end29
  %49 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9160
  %call44 = call i32 @mlxsw_emad_init(%struct.mlxsw_core* %49) #11, !dbg !9161
  store i32 %call44, i32* %err, align 4, !dbg !9162
  %50 = load i32, i32* %err, align 4, !dbg !9163
  %tobool45 = icmp ne i32 %50, 0, !dbg !9163
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !9165

if.then46:                                        ; preds = %if.end43
  br label %err_emad_init, !dbg !9166

if.end47:                                         ; preds = %if.end43
  %51 = load i8, i8* %reload.addr, align 1, !dbg !9167
  %tobool48 = trunc i8 %51 to i1, !dbg !9167
  br i1 %tobool48, label %if.end54, label %if.then49, !dbg !9169

if.then49:                                        ; preds = %if.end47
  %52 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !9170
  %53 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %mlxsw_bus_info.addr, align 8, !dbg !9172
  %dev = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %53, i32 0, i32 2, !dbg !9173
  %54 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9173
  %call50 = call i32 @devlink_register(%struct.devlink* %52, %struct.device* %54) #11, !dbg !9174
  store i32 %call50, i32* %err, align 4, !dbg !9175
  %55 = load i32, i32* %err, align 4, !dbg !9176
  %tobool51 = icmp ne i32 %55, 0, !dbg !9176
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !9178

if.then52:                                        ; preds = %if.then49
  br label %err_devlink_register, !dbg !9179

if.end53:                                         ; preds = %if.then49
  br label %if.end54, !dbg !9180

if.end54:                                         ; preds = %if.end53, %if.end47
  %56 = load i8, i8* %reload.addr, align 1, !dbg !9181
  %tobool55 = trunc i8 %56 to i1, !dbg !9181
  br i1 %tobool55, label %if.end61, label %if.then56, !dbg !9183

if.then56:                                        ; preds = %if.end54
  %57 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9184
  %call57 = call i32 @mlxsw_core_params_register(%struct.mlxsw_core* %57) #11, !dbg !9186
  store i32 %call57, i32* %err, align 4, !dbg !9187
  %58 = load i32, i32* %err, align 4, !dbg !9188
  %tobool58 = icmp ne i32 %58, 0, !dbg !9188
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !9190

if.then59:                                        ; preds = %if.then56
  br label %err_register_params, !dbg !9191

if.end60:                                         ; preds = %if.then56
  br label %if.end61, !dbg !9192

if.end61:                                         ; preds = %if.end60, %if.end54
  %59 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9193
  %60 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %mlxsw_bus_info.addr, align 8, !dbg !9194
  %61 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !9195
  %fw_req_rev = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %61, i32 0, i32 3, !dbg !9196
  %62 = load %struct.mlxsw_fw_rev*, %struct.mlxsw_fw_rev** %fw_req_rev, align 8, !dbg !9196
  %63 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !9197
  %fw_filename = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %63, i32 0, i32 4, !dbg !9198
  %64 = load i8*, i8** %fw_filename, align 8, !dbg !9198
  %call62 = call i32 @mlxsw_core_fw_rev_validate(%struct.mlxsw_core* %59, %struct.mlxsw_bus_info* %60, %struct.mlxsw_fw_rev* %62, i8* %64) #11, !dbg !9199
  store i32 %call62, i32* %err, align 4, !dbg !9200
  %65 = load i32, i32* %err, align 4, !dbg !9201
  %tobool63 = icmp ne i32 %65, 0, !dbg !9201
  br i1 %tobool63, label %if.then64, label %if.end65, !dbg !9203

if.then64:                                        ; preds = %if.end61
  br label %err_fw_rev_validate, !dbg !9204

if.end65:                                         ; preds = %if.end61
  %66 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9205
  %call66 = call i32 @mlxsw_core_health_init(%struct.mlxsw_core* %66) #11, !dbg !9206
  store i32 %call66, i32* %err, align 4, !dbg !9207
  %67 = load i32, i32* %err, align 4, !dbg !9208
  %tobool67 = icmp ne i32 %67, 0, !dbg !9208
  br i1 %tobool67, label %if.then68, label %if.end69, !dbg !9210

if.then68:                                        ; preds = %if.end65
  br label %err_health_init, !dbg !9211

if.end69:                                         ; preds = %if.end65
  %68 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !9212
  %init70 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %68, i32 0, i32 5, !dbg !9214
  %69 = load i32 (%struct.mlxsw_core*, %struct.mlxsw_bus_info*, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core*, %struct.mlxsw_bus_info*, %struct.netlink_ext_ack*)** %init70, align 8, !dbg !9214
  %tobool71 = icmp ne i32 (%struct.mlxsw_core*, %struct.mlxsw_bus_info*, %struct.netlink_ext_ack*)* %69, null, !dbg !9212
  br i1 %tobool71, label %if.then72, label %if.end78, !dbg !9215

if.then72:                                        ; preds = %if.end69
  %70 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !9216
  %init73 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %70, i32 0, i32 5, !dbg !9218
  %71 = load i32 (%struct.mlxsw_core*, %struct.mlxsw_bus_info*, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core*, %struct.mlxsw_bus_info*, %struct.netlink_ext_ack*)** %init73, align 8, !dbg !9218
  %72 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9219
  %73 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %mlxsw_bus_info.addr, align 8, !dbg !9220
  %74 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !9221
  %call74 = call i32 %71(%struct.mlxsw_core* %72, %struct.mlxsw_bus_info* %73, %struct.netlink_ext_ack* %74) #11, !dbg !9216
  store i32 %call74, i32* %err, align 4, !dbg !9222
  %75 = load i32, i32* %err, align 4, !dbg !9223
  %tobool75 = icmp ne i32 %75, 0, !dbg !9223
  br i1 %tobool75, label %if.then76, label %if.end77, !dbg !9225

if.then76:                                        ; preds = %if.then72
  br label %err_driver_init, !dbg !9226

if.end77:                                         ; preds = %if.then72
  br label %if.end78, !dbg !9227

if.end78:                                         ; preds = %if.end77, %if.end69
  %76 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9228
  %77 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %mlxsw_bus_info.addr, align 8, !dbg !9229
  %78 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9230
  %hwmon = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %78, i32 0, i32 10, !dbg !9231
  %call79 = call i32 @mlxsw_hwmon_init(%struct.mlxsw_core* %76, %struct.mlxsw_bus_info* %77, %struct.mlxsw_hwmon** %hwmon) #11, !dbg !9232
  store i32 %call79, i32* %err, align 4, !dbg !9233
  %79 = load i32, i32* %err, align 4, !dbg !9234
  %tobool80 = icmp ne i32 %79, 0, !dbg !9234
  br i1 %tobool80, label %if.then81, label %if.end82, !dbg !9236

if.then81:                                        ; preds = %if.end78
  br label %err_hwmon_init, !dbg !9237

if.end82:                                         ; preds = %if.end78
  %80 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9238
  %81 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %mlxsw_bus_info.addr, align 8, !dbg !9239
  %82 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9240
  %thermal = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %82, i32 0, i32 11, !dbg !9241
  %call83 = call i32 @mlxsw_thermal_init(%struct.mlxsw_core* %80, %struct.mlxsw_bus_info* %81, %struct.mlxsw_thermal** %thermal) #11, !dbg !9242
  store i32 %call83, i32* %err, align 4, !dbg !9243
  %83 = load i32, i32* %err, align 4, !dbg !9244
  %tobool84 = icmp ne i32 %83, 0, !dbg !9244
  br i1 %tobool84, label %if.then85, label %if.end86, !dbg !9246

if.then85:                                        ; preds = %if.end82
  br label %err_thermal_init, !dbg !9247

if.end86:                                         ; preds = %if.end82
  %84 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9248
  %85 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9249
  %env = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %85, i32 0, i32 16, !dbg !9250
  %call87 = call i32 @mlxsw_env_init(%struct.mlxsw_core* %84, %struct.mlxsw_env** %env) #11, !dbg !9251
  store i32 %call87, i32* %err, align 4, !dbg !9252
  %86 = load i32, i32* %err, align 4, !dbg !9253
  %tobool88 = icmp ne i32 %86, 0, !dbg !9253
  br i1 %tobool88, label %if.then89, label %if.end90, !dbg !9255

if.then89:                                        ; preds = %if.end86
  br label %err_env_init, !dbg !9256

if.end90:                                         ; preds = %if.end86
  %87 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9257
  %is_initialized = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %87, i32 0, i32 17, !dbg !9258
  store i8 1, i8* %is_initialized, align 8, !dbg !9259
  %88 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !9260
  call void @devlink_params_publish(%struct.devlink* %88) #11, !dbg !9261
  %89 = load i8, i8* %reload.addr, align 1, !dbg !9262
  %tobool91 = trunc i8 %89 to i1, !dbg !9262
  br i1 %tobool91, label %if.end93, label %if.then92, !dbg !9264

if.then92:                                        ; preds = %if.end90
  %90 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !9265
  call void @devlink_reload_enable(%struct.devlink* %90) #11, !dbg !9266
  br label %if.end93, !dbg !9266

if.end93:                                         ; preds = %if.then92, %if.end90
  store i32 0, i32* %retval, align 4, !dbg !9267
  br label %return, !dbg !9267

err_env_init:                                     ; preds = %if.then89
  call void @llvm.dbg.label(metadata !9268), !dbg !9269
  %91 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9270
  %thermal94 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %91, i32 0, i32 11, !dbg !9271
  %92 = load %struct.mlxsw_thermal*, %struct.mlxsw_thermal** %thermal94, align 8, !dbg !9271
  call void @mlxsw_thermal_fini(%struct.mlxsw_thermal* %92) #11, !dbg !9272
  br label %err_thermal_init, !dbg !9272

err_thermal_init:                                 ; preds = %err_env_init, %if.then85
  call void @llvm.dbg.label(metadata !9273), !dbg !9274
  %93 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9275
  %hwmon95 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %93, i32 0, i32 10, !dbg !9276
  %94 = load %struct.mlxsw_hwmon*, %struct.mlxsw_hwmon** %hwmon95, align 8, !dbg !9276
  call void @mlxsw_hwmon_fini(%struct.mlxsw_hwmon* %94) #11, !dbg !9277
  br label %err_hwmon_init, !dbg !9277

err_hwmon_init:                                   ; preds = %err_thermal_init, %if.then81
  call void @llvm.dbg.label(metadata !9278), !dbg !9279
  %95 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9280
  %driver96 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %95, i32 0, i32 0, !dbg !9282
  %96 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver96, align 8, !dbg !9282
  %fini = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %96, i32 0, i32 6, !dbg !9283
  %97 = load void (%struct.mlxsw_core*)*, void (%struct.mlxsw_core*)** %fini, align 8, !dbg !9283
  %tobool97 = icmp ne void (%struct.mlxsw_core*)* %97, null, !dbg !9280
  br i1 %tobool97, label %if.then98, label %if.end101, !dbg !9284

if.then98:                                        ; preds = %err_hwmon_init
  %98 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9285
  %driver99 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %98, i32 0, i32 0, !dbg !9286
  %99 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver99, align 8, !dbg !9286
  %fini100 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %99, i32 0, i32 6, !dbg !9287
  %100 = load void (%struct.mlxsw_core*)*, void (%struct.mlxsw_core*)** %fini100, align 8, !dbg !9287
  %101 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9288
  call void %100(%struct.mlxsw_core* %101) #11, !dbg !9285
  br label %if.end101, !dbg !9285

if.end101:                                        ; preds = %if.then98, %err_hwmon_init
  br label %err_driver_init, !dbg !9283

err_driver_init:                                  ; preds = %if.end101, %if.then76
  call void @llvm.dbg.label(metadata !9289), !dbg !9290
  %102 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9291
  call void @mlxsw_core_health_fini(%struct.mlxsw_core* %102) #11, !dbg !9292
  br label %err_health_init, !dbg !9292

err_health_init:                                  ; preds = %err_driver_init, %if.then68
  call void @llvm.dbg.label(metadata !9293), !dbg !9294
  br label %err_fw_rev_validate, !dbg !9292

err_fw_rev_validate:                              ; preds = %err_health_init, %if.then64
  call void @llvm.dbg.label(metadata !9295), !dbg !9296
  %103 = load i8, i8* %reload.addr, align 1, !dbg !9297
  %tobool102 = trunc i8 %103 to i1, !dbg !9297
  br i1 %tobool102, label %if.end104, label %if.then103, !dbg !9299

if.then103:                                       ; preds = %err_fw_rev_validate
  %104 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9300
  call void @mlxsw_core_params_unregister(%struct.mlxsw_core* %104) #11, !dbg !9301
  br label %if.end104, !dbg !9301

if.end104:                                        ; preds = %if.then103, %err_fw_rev_validate
  br label %err_register_params, !dbg !9297

err_register_params:                              ; preds = %if.end104, %if.then59
  call void @llvm.dbg.label(metadata !9302), !dbg !9303
  %105 = load i8, i8* %reload.addr, align 1, !dbg !9304
  %tobool105 = trunc i8 %105 to i1, !dbg !9304
  br i1 %tobool105, label %if.end107, label %if.then106, !dbg !9306

if.then106:                                       ; preds = %err_register_params
  %106 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !9307
  call void @devlink_unregister(%struct.devlink* %106) #11, !dbg !9308
  br label %if.end107, !dbg !9308

if.end107:                                        ; preds = %if.then106, %err_register_params
  br label %err_devlink_register, !dbg !9304

err_devlink_register:                             ; preds = %if.end107, %if.then52
  call void @llvm.dbg.label(metadata !9309), !dbg !9310
  %107 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9311
  call void @mlxsw_emad_fini(%struct.mlxsw_core* %107) #11, !dbg !9312
  br label %err_emad_init, !dbg !9312

err_emad_init:                                    ; preds = %err_devlink_register, %if.then46
  call void @llvm.dbg.label(metadata !9313), !dbg !9314
  %108 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9315
  %lag108 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %108, i32 0, i32 8, !dbg !9316
  %mapping109 = getelementptr inbounds %struct.anon.130, %struct.anon.130* %lag108, i32 0, i32 0, !dbg !9317
  %109 = load i8*, i8** %mapping109, align 8, !dbg !9317
  call void @kfree(i8* %109) #11, !dbg !9318
  br label %err_alloc_lag_mapping, !dbg !9318

err_alloc_lag_mapping:                            ; preds = %err_emad_init, %if.then41
  call void @llvm.dbg.label(metadata !9319), !dbg !9320
  %110 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !9321
  call void @mlxsw_ports_fini(%struct.mlxsw_core* %110) #11, !dbg !9322
  br label %err_ports_init, !dbg !9322

err_ports_init:                                   ; preds = %err_alloc_lag_mapping, %if.then28
  call void @llvm.dbg.label(metadata !9323), !dbg !9324
  %111 = load i8, i8* %reload.addr, align 1, !dbg !9325
  %tobool110 = trunc i8 %111 to i1, !dbg !9325
  br i1 %tobool110, label %if.end112, label %if.then111, !dbg !9327

if.then111:                                       ; preds = %err_ports_init
  %112 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !9328
  call void @devlink_resources_unregister(%struct.devlink* %112, %struct.devlink_resource* null) #11, !dbg !9329
  br label %if.end112, !dbg !9329

if.end112:                                        ; preds = %if.then111, %err_ports_init
  br label %err_register_resources, !dbg !9325

err_register_resources:                           ; preds = %if.end112, %if.then23
  call void @llvm.dbg.label(metadata !9330), !dbg !9331
  %113 = load %struct.mlxsw_bus*, %struct.mlxsw_bus** %mlxsw_bus.addr, align 8, !dbg !9332
  %fini113 = getelementptr inbounds %struct.mlxsw_bus, %struct.mlxsw_bus* %113, i32 0, i32 2, !dbg !9333
  %114 = load void (i8*)*, void (i8*)** %fini113, align 8, !dbg !9333
  %115 = load i8*, i8** %bus_priv.addr, align 8, !dbg !9334
  call void %114(i8* %115) #11, !dbg !9332
  br label %err_bus_init, !dbg !9332

err_bus_init:                                     ; preds = %err_register_resources, %if.then15
  call void @llvm.dbg.label(metadata !9335), !dbg !9336
  %116 = load i8, i8* %reload.addr, align 1, !dbg !9337
  %tobool114 = trunc i8 %116 to i1, !dbg !9337
  br i1 %tobool114, label %if.end116, label %if.then115, !dbg !9339

if.then115:                                       ; preds = %err_bus_init
  %117 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !9340
  call void @devlink_free(%struct.devlink* %117) #11, !dbg !9341
  br label %if.end116, !dbg !9341

if.end116:                                        ; preds = %if.then115, %err_bus_init
  br label %err_devlink_alloc, !dbg !9337

err_devlink_alloc:                                ; preds = %if.end116, %if.then6
  call void @llvm.dbg.label(metadata !9342), !dbg !9343
  %118 = load i32, i32* %err, align 4, !dbg !9344
  store i32 %118, i32* %retval, align 4, !dbg !9345
  br label %return, !dbg !9345

return:                                           ; preds = %err_devlink_alloc, %if.end93, %if.then
  %119 = load i32, i32* %retval, align 4, !dbg !9346
  ret i32 %119, !dbg !9346
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlxsw_core_bus_device_unregister(%struct.mlxsw_core* %mlxsw_core, i1 zeroext %reload) #0 !dbg !9347 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %reload.addr = alloca i8, align 1
  %devlink = alloca %struct.devlink*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !9350, metadata !DIExpression()), !dbg !9351
  %frombool = zext i1 %reload to i8
  store i8 %frombool, i8* %reload.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reload.addr, metadata !9352, metadata !DIExpression()), !dbg !9353
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink, metadata !9354, metadata !DIExpression()), !dbg !9355
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9356
  %1 = bitcast %struct.mlxsw_core* %0 to i8*, !dbg !9356
  %call = call %struct.devlink* @priv_to_devlink(i8* %1) #11, !dbg !9357
  store %struct.devlink* %call, %struct.devlink** %devlink, align 8, !dbg !9355
  %2 = load i8, i8* %reload.addr, align 1, !dbg !9358
  %tobool = trunc i8 %2 to i1, !dbg !9358
  br i1 %tobool, label %if.end, label %if.then, !dbg !9360

if.then:                                          ; preds = %entry
  %3 = load %struct.devlink*, %struct.devlink** %devlink, align 8, !dbg !9361
  call void @devlink_reload_disable(%struct.devlink* %3) #11, !dbg !9362
  br label %if.end, !dbg !9362

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.devlink*, %struct.devlink** %devlink, align 8, !dbg !9363
  %call1 = call zeroext i1 @devlink_is_reload_failed(%struct.devlink* %4) #11, !dbg !9365
  br i1 %call1, label %if.then2, label %if.end5, !dbg !9366

if.then2:                                         ; preds = %if.end
  %5 = load i8, i8* %reload.addr, align 1, !dbg !9367
  %tobool3 = trunc i8 %5 to i1, !dbg !9367
  br i1 %tobool3, label %if.else, label %if.then4, !dbg !9370

if.then4:                                         ; preds = %if.then2
  br label %reload_fail_deinit, !dbg !9371

if.else:                                          ; preds = %if.then2
  br label %return, !dbg !9372

if.end5:                                          ; preds = %if.end
  %6 = load %struct.devlink*, %struct.devlink** %devlink, align 8, !dbg !9373
  call void @devlink_params_unpublish(%struct.devlink* %6) #11, !dbg !9374
  %7 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9375
  %is_initialized = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %7, i32 0, i32 17, !dbg !9376
  store i8 0, i8* %is_initialized, align 8, !dbg !9377
  %8 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9378
  %env = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %8, i32 0, i32 16, !dbg !9379
  %9 = load %struct.mlxsw_env*, %struct.mlxsw_env** %env, align 8, !dbg !9379
  call void @mlxsw_env_fini(%struct.mlxsw_env* %9) #11, !dbg !9380
  %10 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9381
  %thermal = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %10, i32 0, i32 11, !dbg !9382
  %11 = load %struct.mlxsw_thermal*, %struct.mlxsw_thermal** %thermal, align 8, !dbg !9382
  call void @mlxsw_thermal_fini(%struct.mlxsw_thermal* %11) #11, !dbg !9383
  %12 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9384
  %hwmon = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %12, i32 0, i32 10, !dbg !9385
  %13 = load %struct.mlxsw_hwmon*, %struct.mlxsw_hwmon** %hwmon, align 8, !dbg !9385
  call void @mlxsw_hwmon_fini(%struct.mlxsw_hwmon* %13) #11, !dbg !9386
  %14 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9387
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %14, i32 0, i32 0, !dbg !9389
  %15 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !9389
  %fini = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %15, i32 0, i32 6, !dbg !9390
  %16 = load void (%struct.mlxsw_core*)*, void (%struct.mlxsw_core*)** %fini, align 8, !dbg !9390
  %tobool6 = icmp ne void (%struct.mlxsw_core*)* %16, null, !dbg !9387
  br i1 %tobool6, label %if.then7, label %if.end10, !dbg !9391

if.then7:                                         ; preds = %if.end5
  %17 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9392
  %driver8 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %17, i32 0, i32 0, !dbg !9393
  %18 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver8, align 8, !dbg !9393
  %fini9 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %18, i32 0, i32 6, !dbg !9394
  %19 = load void (%struct.mlxsw_core*)*, void (%struct.mlxsw_core*)** %fini9, align 8, !dbg !9394
  %20 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9395
  call void %19(%struct.mlxsw_core* %20) #11, !dbg !9392
  br label %if.end10, !dbg !9392

if.end10:                                         ; preds = %if.then7, %if.end5
  %21 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9396
  call void @mlxsw_core_health_fini(%struct.mlxsw_core* %21) #11, !dbg !9397
  %22 = load i8, i8* %reload.addr, align 1, !dbg !9398
  %tobool11 = trunc i8 %22 to i1, !dbg !9398
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !9400

if.then12:                                        ; preds = %if.end10
  %23 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9401
  call void @mlxsw_core_params_unregister(%struct.mlxsw_core* %23) #11, !dbg !9402
  br label %if.end13, !dbg !9402

if.end13:                                         ; preds = %if.then12, %if.end10
  %24 = load i8, i8* %reload.addr, align 1, !dbg !9403
  %tobool14 = trunc i8 %24 to i1, !dbg !9403
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !9405

if.then15:                                        ; preds = %if.end13
  %25 = load %struct.devlink*, %struct.devlink** %devlink, align 8, !dbg !9406
  call void @devlink_unregister(%struct.devlink* %25) #11, !dbg !9407
  br label %if.end16, !dbg !9407

if.end16:                                         ; preds = %if.then15, %if.end13
  %26 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9408
  call void @mlxsw_emad_fini(%struct.mlxsw_core* %26) #11, !dbg !9409
  %27 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9410
  %lag = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %27, i32 0, i32 8, !dbg !9411
  %mapping = getelementptr inbounds %struct.anon.130, %struct.anon.130* %lag, i32 0, i32 0, !dbg !9412
  %28 = load i8*, i8** %mapping, align 8, !dbg !9412
  call void @kfree(i8* %28) #11, !dbg !9413
  %29 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9414
  call void @mlxsw_ports_fini(%struct.mlxsw_core* %29) #11, !dbg !9415
  %30 = load i8, i8* %reload.addr, align 1, !dbg !9416
  %tobool17 = trunc i8 %30 to i1, !dbg !9416
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !9418

if.then18:                                        ; preds = %if.end16
  %31 = load %struct.devlink*, %struct.devlink** %devlink, align 8, !dbg !9419
  call void @devlink_resources_unregister(%struct.devlink* %31, %struct.devlink_resource* null) #11, !dbg !9420
  br label %if.end19, !dbg !9420

if.end19:                                         ; preds = %if.then18, %if.end16
  %32 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9421
  %bus = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %32, i32 0, i32 1, !dbg !9422
  %33 = load %struct.mlxsw_bus*, %struct.mlxsw_bus** %bus, align 8, !dbg !9422
  %fini20 = getelementptr inbounds %struct.mlxsw_bus, %struct.mlxsw_bus* %33, i32 0, i32 2, !dbg !9423
  %34 = load void (i8*)*, void (i8*)** %fini20, align 8, !dbg !9423
  %35 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9424
  %bus_priv = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %35, i32 0, i32 2, !dbg !9425
  %36 = load i8*, i8** %bus_priv, align 8, !dbg !9425
  call void %34(i8* %36) #11, !dbg !9421
  %37 = load i8, i8* %reload.addr, align 1, !dbg !9426
  %tobool21 = trunc i8 %37 to i1, !dbg !9426
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !9428

if.then22:                                        ; preds = %if.end19
  %38 = load %struct.devlink*, %struct.devlink** %devlink, align 8, !dbg !9429
  call void @devlink_free(%struct.devlink* %38) #11, !dbg !9430
  br label %if.end23, !dbg !9430

if.end23:                                         ; preds = %if.then22, %if.end19
  br label %return, !dbg !9431

reload_fail_deinit:                               ; preds = %if.then4
  call void @llvm.dbg.label(metadata !9432), !dbg !9433
  %39 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9434
  call void @mlxsw_core_params_unregister(%struct.mlxsw_core* %39) #11, !dbg !9435
  %40 = load %struct.devlink*, %struct.devlink** %devlink, align 8, !dbg !9436
  call void @devlink_unregister(%struct.devlink* %40) #11, !dbg !9437
  %41 = load %struct.devlink*, %struct.devlink** %devlink, align 8, !dbg !9438
  call void @devlink_resources_unregister(%struct.devlink* %41, %struct.devlink_resource* null) #11, !dbg !9439
  %42 = load %struct.devlink*, %struct.devlink** %devlink, align 8, !dbg !9440
  call void @devlink_free(%struct.devlink* %42) #11, !dbg !9441
  br label %return, !dbg !9442

return:                                           ; preds = %reload_fail_deinit, %if.end23, %if.else
  ret void, !dbg !9442
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.devlink* @priv_to_devlink(i8* %priv) #0 !dbg !9443 {
entry:
  %priv.addr = alloca i8*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devlink*, align 8
  store i8* %priv, i8** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %priv.addr, metadata !9446, metadata !DIExpression()), !dbg !9447
  br label %do.body, !dbg !9448

do.body:                                          ; preds = %entry
  %0 = load i8*, i8** %priv.addr, align 8, !dbg !9449
  %tobool = icmp ne i8* %0, null, !dbg !9449
  %lnot = xor i1 %tobool, true, !dbg !9449
  %lnot1 = xor i1 %lnot, true, !dbg !9449
  %lnot2 = xor i1 %lnot1, true, !dbg !9449
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !9449
  %conv = sext i32 %lnot.ext to i64, !dbg !9449
  %tobool3 = icmp ne i64 %conv, 0, !dbg !9449
  br i1 %tobool3, label %if.then, label %if.end, !dbg !9452

if.then:                                          ; preds = %do.body
  br label %do.body4, !dbg !9449

do.body4:                                         ; preds = %if.then
  br label %do.body5, !dbg !9453

do.body5:                                         ; preds = %do.body4
  br label %do.end, !dbg !9455

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !9453

do.body6:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.57, i64 0, i64 0), i32 1358, i32 0, i64 12) #10, !dbg !9457, !srcloc !9459
  br label %do.end7, !dbg !9457

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !9453

do.body8:                                         ; preds = %do.end7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 322) #10, !dbg !9460, !srcloc !9463
  unreachable, !dbg !9464

do.end9:                                          ; No predecessors!
  br label %do.end10, !dbg !9453

do.end10:                                         ; preds = %do.end9
  br label %if.end, !dbg !9453

if.end:                                           ; preds = %do.end10, %do.body
  br label %do.end11, !dbg !9452

do.end11:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9465, metadata !DIExpression()), !dbg !9467
  %1 = load i8*, i8** %priv.addr, align 8, !dbg !9467
  store i8* %1, i8** %__mptr, align 8, !dbg !9467
  br label %do.body12, !dbg !9467

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !9468

do.end13:                                         ; preds = %do.body12
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9467
  %add.ptr = getelementptr i8, i8* %2, i64 -352, !dbg !9467
  %3 = bitcast i8* %add.ptr to %struct.devlink*, !dbg !9467
  store %struct.devlink* %3, %struct.devlink** %tmp, align 8, !dbg !9468
  %4 = load %struct.devlink*, %struct.devlink** %tmp, align 8, !dbg !9467
  ret %struct.devlink* %4, !dbg !9470
}

; Function Attrs: noredzone
declare dso_local void @devlink_reload_disable(%struct.devlink*) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @devlink_is_reload_failed(%struct.devlink*) #2

; Function Attrs: noredzone
declare dso_local void @devlink_params_unpublish(%struct.devlink*) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_env_fini(%struct.mlxsw_env*) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_thermal_fini(%struct.mlxsw_thermal*) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_hwmon_fini(%struct.mlxsw_hwmon*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_core_health_fini(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !9471 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !9472, metadata !DIExpression()), !dbg !9473
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9474
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %0, i32 0, i32 0, !dbg !9476
  %1 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !9476
  %fw_fatal_enabled = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %1, i32 0, i32 39, !dbg !9477
  %2 = load i8, i8* %fw_fatal_enabled, align 1, !dbg !9477
  %tobool = trunc i8 %2 to i1, !dbg !9477
  br i1 %tobool, label %if.end, label %if.then, !dbg !9478

if.then:                                          ; preds = %entry
  br label %return, !dbg !9479

if.end:                                           ; preds = %entry
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9480
  %call = call i32 @mlxsw_core_health_fw_fatal_config(%struct.mlxsw_core* %3, i1 zeroext false) #11, !dbg !9481
  %4 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9482
  %5 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9483
  %6 = bitcast %struct.mlxsw_core* %5 to i8*, !dbg !9483
  call void @mlxsw_core_trap_unregister(%struct.mlxsw_core* %4, %struct.mlxsw_listener* bitcast ({ i16, { %struct.mlxsw_event_listener }, i32, i32, i8, i8, i8 }* @mlxsw_core_health_listener to %struct.mlxsw_listener*), i8* %6) #11, !dbg !9484
  call void @mlxsw_core_flush_owq() #11, !dbg !9485
  %7 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9486
  %health = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %7, i32 0, i32 15, !dbg !9487
  %fw_fatal = getelementptr inbounds %struct.anon.131, %struct.anon.131* %health, i32 0, i32 0, !dbg !9488
  %8 = load %struct.devlink_health_reporter*, %struct.devlink_health_reporter** %fw_fatal, align 8, !dbg !9488
  call void @devlink_health_reporter_destroy(%struct.devlink_health_reporter* %8) #11, !dbg !9489
  br label %return, !dbg !9490

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !9490
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_core_params_unregister(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !9491 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !9492, metadata !DIExpression()), !dbg !9493
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9494
  call void @mlxsw_core_fw_params_unregister(%struct.mlxsw_core* %0) #11, !dbg !9495
  %1 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9496
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %1, i32 0, i32 0, !dbg !9498
  %2 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !9498
  %params_register = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %2, i32 0, i32 33, !dbg !9499
  %3 = load i32 (%struct.mlxsw_core*)*, i32 (%struct.mlxsw_core*)** %params_register, align 8, !dbg !9499
  %tobool = icmp ne i32 (%struct.mlxsw_core*)* %3, null, !dbg !9496
  br i1 %tobool, label %if.then, label %if.end, !dbg !9500

if.then:                                          ; preds = %entry
  %4 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9501
  %driver1 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %4, i32 0, i32 0, !dbg !9502
  %5 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver1, align 8, !dbg !9502
  %params_unregister = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %5, i32 0, i32 34, !dbg !9503
  %6 = load void (%struct.mlxsw_core*)*, void (%struct.mlxsw_core*)** %params_unregister, align 8, !dbg !9503
  %7 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9504
  call void %6(%struct.mlxsw_core* %7) #11, !dbg !9501
  br label %if.end, !dbg !9501

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9505
}

; Function Attrs: noredzone
declare dso_local void @devlink_unregister(%struct.devlink*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_fini(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !9506 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !9507, metadata !DIExpression()), !dbg !9508
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9509
  %bus = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %0, i32 0, i32 1, !dbg !9511
  %1 = load %struct.mlxsw_bus*, %struct.mlxsw_bus** %bus, align 8, !dbg !9511
  %features = getelementptr inbounds %struct.mlxsw_bus, %struct.mlxsw_bus* %1, i32 0, i32 8, !dbg !9512
  %2 = load i8, i8* %features, align 8, !dbg !9512
  %conv = zext i8 %2 to i64, !dbg !9509
  %and = and i64 %conv, 1, !dbg !9513
  %tobool = icmp ne i64 %and, 0, !dbg !9513
  br i1 %tobool, label %if.end, label %if.then, !dbg !9514

if.then:                                          ; preds = %entry
  br label %return, !dbg !9515

if.end:                                           ; preds = %entry
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9516
  %emad = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %3, i32 0, i32 7, !dbg !9517
  %use_emad = getelementptr inbounds %struct.anon.129, %struct.anon.129* %emad, i32 0, i32 3, !dbg !9518
  store i8 0, i8* %use_emad, align 8, !dbg !9519
  %4 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9520
  %5 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9521
  %6 = bitcast %struct.mlxsw_core* %5 to i8*, !dbg !9521
  call void @mlxsw_core_trap_unregister(%struct.mlxsw_core* %4, %struct.mlxsw_listener* @mlxsw_emad_rx_listener, i8* %6) #11, !dbg !9522
  %7 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9523
  %emad_wq = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %7, i32 0, i32 4, !dbg !9524
  %8 = load %struct.workqueue_struct*, %struct.workqueue_struct** %emad_wq, align 8, !dbg !9524
  call void @destroy_workqueue(%struct.workqueue_struct* %8) #11, !dbg !9525
  br label %return, !dbg !9526

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !9526
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_ports_fini(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !9527 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !9528, metadata !DIExpression()), !dbg !9529
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9530
  %ports = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %0, i32 0, i32 12, !dbg !9531
  %1 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %ports, align 8, !dbg !9531
  %2 = bitcast %struct.mlxsw_core_port* %1 to i8*, !dbg !9530
  call void @kfree(i8* %2) #11, !dbg !9532
  ret void, !dbg !9533
}

; Function Attrs: noredzone
declare dso_local void @devlink_resources_unregister(%struct.devlink*, %struct.devlink_resource*) #2

; Function Attrs: noredzone
declare dso_local void @devlink_free(%struct.devlink*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @mlxsw_core_skb_transmit_busy(%struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_tx_info* %tx_info) #0 !dbg !9534 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %tx_info.addr = alloca %struct.mlxsw_tx_info*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !9537, metadata !DIExpression()), !dbg !9538
  store %struct.mlxsw_tx_info* %tx_info, %struct.mlxsw_tx_info** %tx_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_tx_info** %tx_info.addr, metadata !9539, metadata !DIExpression()), !dbg !9540
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9541
  %bus = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %0, i32 0, i32 1, !dbg !9542
  %1 = load %struct.mlxsw_bus*, %struct.mlxsw_bus** %bus, align 8, !dbg !9542
  %skb_transmit_busy = getelementptr inbounds %struct.mlxsw_bus, %struct.mlxsw_bus* %1, i32 0, i32 3, !dbg !9543
  %2 = load i1 (i8*, %struct.mlxsw_tx_info*)*, i1 (i8*, %struct.mlxsw_tx_info*)** %skb_transmit_busy, align 8, !dbg !9543
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9544
  %bus_priv = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %3, i32 0, i32 2, !dbg !9545
  %4 = load i8*, i8** %bus_priv, align 8, !dbg !9545
  %5 = load %struct.mlxsw_tx_info*, %struct.mlxsw_tx_info** %tx_info.addr, align 8, !dbg !9546
  %call = call zeroext i1 %2(i8* %4, %struct.mlxsw_tx_info* %5) #11, !dbg !9541
  ret i1 %call, !dbg !9547
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_core_skb_transmit(%struct.mlxsw_core* %mlxsw_core, %struct.sk_buff* %skb, %struct.mlxsw_tx_info* %tx_info) #0 !dbg !9548 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %tx_info.addr = alloca %struct.mlxsw_tx_info*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !9551, metadata !DIExpression()), !dbg !9552
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !9553, metadata !DIExpression()), !dbg !9554
  store %struct.mlxsw_tx_info* %tx_info, %struct.mlxsw_tx_info** %tx_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_tx_info** %tx_info.addr, metadata !9555, metadata !DIExpression()), !dbg !9556
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9557
  %bus = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %0, i32 0, i32 1, !dbg !9558
  %1 = load %struct.mlxsw_bus*, %struct.mlxsw_bus** %bus, align 8, !dbg !9558
  %skb_transmit = getelementptr inbounds %struct.mlxsw_bus, %struct.mlxsw_bus* %1, i32 0, i32 4, !dbg !9559
  %2 = load i32 (i8*, %struct.sk_buff*, %struct.mlxsw_tx_info*)*, i32 (i8*, %struct.sk_buff*, %struct.mlxsw_tx_info*)** %skb_transmit, align 8, !dbg !9559
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9560
  %bus_priv = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %3, i32 0, i32 2, !dbg !9561
  %4 = load i8*, i8** %bus_priv, align 8, !dbg !9561
  %5 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !9562
  %6 = load %struct.mlxsw_tx_info*, %struct.mlxsw_tx_info** %tx_info.addr, align 8, !dbg !9563
  %call = call i32 %2(i8* %4, %struct.sk_buff* %5, %struct.mlxsw_tx_info* %6) #11, !dbg !9557
  ret i32 %call, !dbg !9564
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlxsw_core_ptp_transmitted(%struct.mlxsw_core* %mlxsw_core, %struct.sk_buff* %skb, i8 zeroext %local_port) #0 !dbg !9565 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %local_port.addr = alloca i8, align 1
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !9566, metadata !DIExpression()), !dbg !9567
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !9568, metadata !DIExpression()), !dbg !9569
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !9570, metadata !DIExpression()), !dbg !9571
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9572
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %0, i32 0, i32 0, !dbg !9574
  %1 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !9574
  %ptp_transmitted = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %1, i32 0, i32 35, !dbg !9575
  %2 = load void (%struct.mlxsw_core*, %struct.sk_buff*, i8)*, void (%struct.mlxsw_core*, %struct.sk_buff*, i8)** %ptp_transmitted, align 8, !dbg !9575
  %tobool = icmp ne void (%struct.mlxsw_core*, %struct.sk_buff*, i8)* %2, null, !dbg !9572
  br i1 %tobool, label %if.then, label %if.end, !dbg !9576

if.then:                                          ; preds = %entry
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9577
  %driver1 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %3, i32 0, i32 0, !dbg !9578
  %4 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver1, align 8, !dbg !9578
  %ptp_transmitted2 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %4, i32 0, i32 35, !dbg !9579
  %5 = load void (%struct.mlxsw_core*, %struct.sk_buff*, i8)*, void (%struct.mlxsw_core*, %struct.sk_buff*, i8)** %ptp_transmitted2, align 8, !dbg !9579
  %6 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9580
  %7 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !9581
  %8 = load i8, i8* %local_port.addr, align 1, !dbg !9582
  call void %5(%struct.mlxsw_core* %6, %struct.sk_buff* %7, i8 zeroext %8) #11, !dbg !9577
  br label %if.end, !dbg !9577

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9583
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_core_rx_listener_register(%struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_rx_listener* %rxl, i8* %priv, i1 zeroext %enabled) #0 !dbg !9584 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !9589, metadata !DIExpression()), !dbg !9593
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !9601, metadata !DIExpression()), !dbg !9602
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !9603, metadata !DIExpression()), !dbg !9604
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !9605, metadata !DIExpression()), !dbg !9606
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !9607, metadata !DIExpression()), !dbg !9611
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !9613, metadata !DIExpression()), !dbg !9617
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !9619, metadata !DIExpression()), !dbg !9623
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !9628, metadata !DIExpression()), !dbg !9629
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !9630, metadata !DIExpression()), !dbg !9631
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !9632, metadata !DIExpression()), !dbg !9633
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !9634, metadata !DIExpression()), !dbg !9635
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !9636, metadata !DIExpression()), !dbg !9637
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9638, metadata !DIExpression()), !dbg !9639
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !9640, metadata !DIExpression()), !dbg !9641
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !9642, metadata !DIExpression()), !dbg !9643
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %rxl.addr = alloca %struct.mlxsw_rx_listener*, align 8
  %priv.addr = alloca i8*, align 8
  %enabled.addr = alloca i8, align 1
  %rxl_item = alloca %struct.mlxsw_rx_listener_item*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !9644, metadata !DIExpression()), !dbg !9645
  store %struct.mlxsw_rx_listener* %rxl, %struct.mlxsw_rx_listener** %rxl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_rx_listener** %rxl.addr, metadata !9646, metadata !DIExpression()), !dbg !9647
  store i8* %priv, i8** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %priv.addr, metadata !9648, metadata !DIExpression()), !dbg !9649
  %frombool = zext i1 %enabled to i8
  store i8 %frombool, i8* %enabled.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enabled.addr, metadata !9650, metadata !DIExpression()), !dbg !9651
  call void @llvm.dbg.declare(metadata %struct.mlxsw_rx_listener_item** %rxl_item, metadata !9652, metadata !DIExpression()), !dbg !9653
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9654
  %1 = load %struct.mlxsw_rx_listener*, %struct.mlxsw_rx_listener** %rxl.addr, align 8, !dbg !9655
  %call = call %struct.mlxsw_rx_listener_item* @__find_rx_listener_item(%struct.mlxsw_core* %0, %struct.mlxsw_rx_listener* %1) #11, !dbg !9656
  store %struct.mlxsw_rx_listener_item* %call, %struct.mlxsw_rx_listener_item** %rxl_item, align 8, !dbg !9657
  %2 = load %struct.mlxsw_rx_listener_item*, %struct.mlxsw_rx_listener_item** %rxl_item, align 8, !dbg !9658
  %tobool = icmp ne %struct.mlxsw_rx_listener_item* %2, null, !dbg !9658
  br i1 %tobool, label %if.then, label %if.end, !dbg !9660

if.then:                                          ; preds = %entry
  store i32 -17, i32* %retval, align 4, !dbg !9661
  br label %return, !dbg !9661

if.end:                                           ; preds = %entry
  store i64 48, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %3 = load i64, i64* %size.addr.i, align 8, !dbg !9662
  %4 = call i1 @llvm.is.constant.i64(i64 %3) #10, !dbg !9663
  br i1 %4, label %if.then.i, label %if.end9.i, !dbg !9664

if.then.i:                                        ; preds = %if.end
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !9665
  %cmp.i = icmp ugt i64 %5, 8192, !dbg !9666
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !9667

if.then1.i:                                       ; preds = %if.then.i
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !9668
  %7 = load i32, i32* %flags.addr.i, align 4, !dbg !9669
  store i64 %6, i64* %size.addr.i.i, align 8
  store i32 %7, i32* %flags.addr.i.i, align 4
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !9670
  %call.i.i = call i32 @get_order(i64 %8) #12, !dbg !9671
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !9637
  %9 = load i64, i64* %size.addr.i.i, align 8, !dbg !9672
  %10 = load i32, i32* %flags.addr.i.i, align 4, !dbg !9673
  %11 = load i32, i32* %order.i.i, align 4, !dbg !9674
  store i64 %9, i64* %size.addr.i.i.i, align 8
  store i32 %10, i32* %flags.addr.i.i.i, align 4
  store i32 %11, i32* %order.addr.i.i.i, align 4
  %12 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !9675
  %13 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !9676
  %14 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !9677
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %12, i32 %13, i32 %14) #13, !dbg !9678
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !9678
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !9678
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !9678
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !9678
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !9679
  br label %kmalloc.exit, !dbg !9679

if.end.i:                                         ; preds = %if.then.i
  %15 = load i64, i64* %size.addr.i, align 8, !dbg !9680
  store i64 %15, i64* %size.addr.i11.i, align 8
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9681
  %tobool.i.i = icmp ne i64 %16, 0, !dbg !9681
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !9683

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !9684
  br label %kmalloc_index.exit.i, !dbg !9684

if.end.i.i:                                       ; preds = %if.end.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9685
  %cmp.i.i = icmp ule i64 %17, 8, !dbg !9687
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !9688

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !9689
  br label %kmalloc_index.exit.i, !dbg !9689

if.end2.i.i:                                      ; preds = %if.end.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9690
  %cmp3.i.i = icmp ugt i64 %18, 64, !dbg !9692
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !9693

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9694
  %cmp4.i.i = icmp ule i64 %19, 96, !dbg !9695
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !9696

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !9697
  br label %kmalloc_index.exit.i, !dbg !9697

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9698
  %cmp7.i.i = icmp ugt i64 %20, 128, !dbg !9700
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !9701

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9702
  %cmp9.i.i = icmp ule i64 %21, 192, !dbg !9703
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !9704

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !9705
  br label %kmalloc_index.exit.i, !dbg !9705

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9706
  %cmp12.i.i = icmp ule i64 %22, 8, !dbg !9708
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !9709

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !9710
  br label %kmalloc_index.exit.i, !dbg !9710

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9711
  %cmp15.i.i = icmp ule i64 %23, 16, !dbg !9713
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !9714

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !9715
  br label %kmalloc_index.exit.i, !dbg !9715

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9716
  %cmp18.i.i = icmp ule i64 %24, 32, !dbg !9718
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !9719

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !9720
  br label %kmalloc_index.exit.i, !dbg !9720

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9721
  %cmp21.i.i = icmp ule i64 %25, 64, !dbg !9723
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !9724

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !9725
  br label %kmalloc_index.exit.i, !dbg !9725

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9726
  %cmp24.i.i = icmp ule i64 %26, 128, !dbg !9728
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !9729

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !9730
  br label %kmalloc_index.exit.i, !dbg !9730

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9731
  %cmp27.i.i = icmp ule i64 %27, 256, !dbg !9733
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !9734

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !9735
  br label %kmalloc_index.exit.i, !dbg !9735

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9736
  %cmp30.i.i = icmp ule i64 %28, 512, !dbg !9738
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !9739

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !9740
  br label %kmalloc_index.exit.i, !dbg !9740

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9741
  %cmp33.i.i = icmp ule i64 %29, 1024, !dbg !9743
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !9744

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !9745
  br label %kmalloc_index.exit.i, !dbg !9745

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9746
  %cmp36.i.i = icmp ule i64 %30, 2048, !dbg !9748
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !9749

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !9750
  br label %kmalloc_index.exit.i, !dbg !9750

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9751
  %cmp39.i.i = icmp ule i64 %31, 4096, !dbg !9753
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !9754

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !9755
  br label %kmalloc_index.exit.i, !dbg !9755

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9756
  %cmp42.i.i = icmp ule i64 %32, 8192, !dbg !9758
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !9759

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !9760
  br label %kmalloc_index.exit.i, !dbg !9760

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9761
  %cmp45.i.i = icmp ule i64 %33, 16384, !dbg !9763
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !9764

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !9765
  br label %kmalloc_index.exit.i, !dbg !9765

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9766
  %cmp48.i.i = icmp ule i64 %34, 32768, !dbg !9768
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !9769

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !9770
  br label %kmalloc_index.exit.i, !dbg !9770

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9771
  %cmp51.i.i = icmp ule i64 %35, 65536, !dbg !9773
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !9774

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !9775
  br label %kmalloc_index.exit.i, !dbg !9775

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9776
  %cmp54.i.i = icmp ule i64 %36, 131072, !dbg !9778
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !9779

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !9780
  br label %kmalloc_index.exit.i, !dbg !9780

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9781
  %cmp57.i.i = icmp ule i64 %37, 262144, !dbg !9783
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !9784

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !9785
  br label %kmalloc_index.exit.i, !dbg !9785

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9786
  %cmp60.i.i = icmp ule i64 %38, 524288, !dbg !9788
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !9789

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !9790
  br label %kmalloc_index.exit.i, !dbg !9790

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9791
  %cmp63.i.i = icmp ule i64 %39, 1048576, !dbg !9793
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !9794

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !9795
  br label %kmalloc_index.exit.i, !dbg !9795

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9796
  %cmp66.i.i = icmp ule i64 %40, 2097152, !dbg !9798
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !9799

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !9800
  br label %kmalloc_index.exit.i, !dbg !9800

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9801
  %cmp69.i.i = icmp ule i64 %41, 4194304, !dbg !9803
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !9804

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !9805
  br label %kmalloc_index.exit.i, !dbg !9805

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9806
  %cmp72.i.i = icmp ule i64 %42, 8388608, !dbg !9808
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !9809

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !9810
  br label %kmalloc_index.exit.i, !dbg !9810

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9811
  %cmp75.i.i = icmp ule i64 %43, 16777216, !dbg !9813
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !9814

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !9815
  br label %kmalloc_index.exit.i, !dbg !9815

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9816
  %cmp78.i.i = icmp ule i64 %44, 33554432, !dbg !9818
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !9819

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !9820
  br label %kmalloc_index.exit.i, !dbg !9820

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9821
  %cmp81.i.i = icmp ule i64 %45, 67108864, !dbg !9823
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !9824

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !9825
  br label %kmalloc_index.exit.i, !dbg !9825

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.119, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !9826, !srcloc !9829
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 233) #10, !dbg !9830, !srcloc !9833
  unreachable, !dbg !9834

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %46 = load i32, i32* %retval.i.i, align 4, !dbg !9835
  store i32 %46, i32* %index.i, align 4, !dbg !9836
  %47 = load i32, i32* %index.i, align 4, !dbg !9837
  %tobool.i = icmp ne i32 %47, 0, !dbg !9837
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !9839

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !9840
  br label %kmalloc.exit, !dbg !9840

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %48 = load i32, i32* %flags.addr.i, align 4, !dbg !9841
  store i32 %48, i32* %flags.addr.i13.i, align 4
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !9842
  %and.i.i = and i32 %49, 17, !dbg !9842
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !9842
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !9842
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !9842
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !9842
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !9844

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !9845
  br label %kmalloc_type.exit.i, !dbg !9845

if.end.i16.i:                                     ; preds = %if.end4.i
  %50 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !9846
  %and2.i.i = and i32 %50, 1, !dbg !9847
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !9846
  %51 = zext i1 %tobool3.i.i to i64, !dbg !9846
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !9846
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !9848
  br label %kmalloc_type.exit.i, !dbg !9848

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %52 = load i32, i32* %retval.i12.i, align 4, !dbg !9849
  %idxprom.i = zext i32 %52 to i64, !dbg !9850
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !9850
  %53 = load i32, i32* %index.i, align 4, !dbg !9851
  %idxprom6.i = zext i32 %53 to i64, !dbg !9850
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !9850
  %54 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !9850
  %55 = load i32, i32* %flags.addr.i, align 4, !dbg !9852
  %56 = load i64, i64* %size.addr.i, align 8, !dbg !9853
  store %struct.kmem_cache* %54, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %55, i32* %flags.addr.i17.i, align 4
  store i64 %56, i64* %size.addr.i18.i, align 8
  %57 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9854
  %58 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9855
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %57, i32 %58) #13, !dbg !9856
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !9856
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !9856
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !9856
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !9856
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !9606
  %59 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9857
  %60 = load i8*, i8** %ret.i.i, align 8, !dbg !9858
  %61 = load i64, i64* %size.addr.i18.i, align 8, !dbg !9859
  %62 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9860
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %59, i8* %60, i64 %61, i32 %62) #13, !dbg !9861
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !9862
  %63 = load i8*, i8** %ret.i.i, align 8, !dbg !9863
  store i8* %63, i8** %retval.i, align 8, !dbg !9864
  br label %kmalloc.exit, !dbg !9864

if.end9.i:                                        ; preds = %if.end
  %64 = load i64, i64* %size.addr.i, align 8, !dbg !9865
  %65 = load i32, i32* %flags.addr.i, align 4, !dbg !9866
  %call10.i = call noalias i8* @__kmalloc(i64 %64, i32 %65) #13, !dbg !9867
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !9867
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !9867
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !9867
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !9867
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !9868
  br label %kmalloc.exit, !dbg !9868

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %66 = load i8*, i8** %retval.i, align 8, !dbg !9869
  %67 = bitcast i8* %66 to %struct.mlxsw_rx_listener_item*, !dbg !9870
  store %struct.mlxsw_rx_listener_item* %67, %struct.mlxsw_rx_listener_item** %rxl_item, align 8, !dbg !9871
  %68 = load %struct.mlxsw_rx_listener_item*, %struct.mlxsw_rx_listener_item** %rxl_item, align 8, !dbg !9872
  %tobool2 = icmp ne %struct.mlxsw_rx_listener_item* %68, null, !dbg !9872
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !9874

if.then3:                                         ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !9875
  br label %return, !dbg !9875

if.end4:                                          ; preds = %kmalloc.exit
  %69 = load %struct.mlxsw_rx_listener_item*, %struct.mlxsw_rx_listener_item** %rxl_item, align 8, !dbg !9876
  %rxl5 = getelementptr inbounds %struct.mlxsw_rx_listener_item, %struct.mlxsw_rx_listener_item* %69, i32 0, i32 1, !dbg !9877
  %70 = load %struct.mlxsw_rx_listener*, %struct.mlxsw_rx_listener** %rxl.addr, align 8, !dbg !9878
  %71 = bitcast %struct.mlxsw_rx_listener* %rxl5 to i8*, !dbg !9879
  %72 = bitcast %struct.mlxsw_rx_listener* %70 to i8*, !dbg !9879
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 16, i1 false), !dbg !9879
  %73 = load i8*, i8** %priv.addr, align 8, !dbg !9880
  %74 = load %struct.mlxsw_rx_listener_item*, %struct.mlxsw_rx_listener_item** %rxl_item, align 8, !dbg !9881
  %priv6 = getelementptr inbounds %struct.mlxsw_rx_listener_item, %struct.mlxsw_rx_listener_item* %74, i32 0, i32 2, !dbg !9882
  store i8* %73, i8** %priv6, align 8, !dbg !9883
  %75 = load i8, i8* %enabled.addr, align 1, !dbg !9884
  %tobool7 = trunc i8 %75 to i1, !dbg !9884
  %76 = load %struct.mlxsw_rx_listener_item*, %struct.mlxsw_rx_listener_item** %rxl_item, align 8, !dbg !9885
  %enabled8 = getelementptr inbounds %struct.mlxsw_rx_listener_item, %struct.mlxsw_rx_listener_item* %76, i32 0, i32 3, !dbg !9886
  %frombool9 = zext i1 %tobool7 to i8, !dbg !9887
  store i8 %frombool9, i8* %enabled8, align 8, !dbg !9887
  %77 = load %struct.mlxsw_rx_listener_item*, %struct.mlxsw_rx_listener_item** %rxl_item, align 8, !dbg !9888
  %list = getelementptr inbounds %struct.mlxsw_rx_listener_item, %struct.mlxsw_rx_listener_item* %77, i32 0, i32 0, !dbg !9889
  %78 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9890
  %rx_listener_list = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %78, i32 0, i32 5, !dbg !9891
  call void @list_add_rcu(%struct.list_head* %list, %struct.list_head* %rx_listener_list) #11, !dbg !9892
  store i32 0, i32* %retval, align 4, !dbg !9893
  br label %return, !dbg !9893

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %79 = load i32, i32* %retval, align 4, !dbg !9894
  ret i32 %79, !dbg !9894
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_rx_listener_item* @__find_rx_listener_item(%struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_rx_listener* %rxl) #0 !dbg !9895 {
entry:
  %retval = alloca %struct.mlxsw_rx_listener_item*, align 8
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %rxl.addr = alloca %struct.mlxsw_rx_listener*, align 8
  %rxl_item = alloca %struct.mlxsw_rx_listener_item*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_rx_listener_item*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp8 = alloca %struct.mlxsw_rx_listener_item*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !9898, metadata !DIExpression()), !dbg !9899
  store %struct.mlxsw_rx_listener* %rxl, %struct.mlxsw_rx_listener** %rxl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_rx_listener** %rxl.addr, metadata !9900, metadata !DIExpression()), !dbg !9901
  call void @llvm.dbg.declare(metadata %struct.mlxsw_rx_listener_item** %rxl_item, metadata !9902, metadata !DIExpression()), !dbg !9903
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9904, metadata !DIExpression()), !dbg !9907
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9907
  %rx_listener_list = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %0, i32 0, i32 5, !dbg !9907
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %rx_listener_list, i32 0, i32 0, !dbg !9907
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9907
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !9907
  store i8* %2, i8** %__mptr, align 8, !dbg !9907
  br label %do.body, !dbg !9907

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9908

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !9907
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !9907
  %4 = bitcast i8* %add.ptr to %struct.mlxsw_rx_listener_item*, !dbg !9907
  store %struct.mlxsw_rx_listener_item* %4, %struct.mlxsw_rx_listener_item** %tmp, align 8, !dbg !9908
  %5 = load %struct.mlxsw_rx_listener_item*, %struct.mlxsw_rx_listener_item** %tmp, align 8, !dbg !9907
  store %struct.mlxsw_rx_listener_item* %5, %struct.mlxsw_rx_listener_item** %rxl_item, align 8, !dbg !9910
  br label %for.cond, !dbg !9910

for.cond:                                         ; preds = %do.end7, %do.end
  %6 = load %struct.mlxsw_rx_listener_item*, %struct.mlxsw_rx_listener_item** %rxl_item, align 8, !dbg !9911
  %list = getelementptr inbounds %struct.mlxsw_rx_listener_item, %struct.mlxsw_rx_listener_item* %6, i32 0, i32 0, !dbg !9911
  %7 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9911
  %rx_listener_list1 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %7, i32 0, i32 5, !dbg !9911
  %cmp = icmp eq %struct.list_head* %list, %rx_listener_list1, !dbg !9911
  %lnot = xor i1 %cmp, true, !dbg !9911
  br i1 %lnot, label %for.body, label %for.end, !dbg !9910

for.body:                                         ; preds = %for.cond
  %8 = load %struct.mlxsw_rx_listener_item*, %struct.mlxsw_rx_listener_item** %rxl_item, align 8, !dbg !9913
  %rxl2 = getelementptr inbounds %struct.mlxsw_rx_listener_item, %struct.mlxsw_rx_listener_item* %8, i32 0, i32 1, !dbg !9916
  %9 = load %struct.mlxsw_rx_listener*, %struct.mlxsw_rx_listener** %rxl.addr, align 8, !dbg !9917
  %call = call zeroext i1 @__is_rx_listener_equal(%struct.mlxsw_rx_listener* %rxl2, %struct.mlxsw_rx_listener* %9) #11, !dbg !9918
  br i1 %call, label %if.then, label %if.end, !dbg !9919

if.then:                                          ; preds = %for.body
  %10 = load %struct.mlxsw_rx_listener_item*, %struct.mlxsw_rx_listener_item** %rxl_item, align 8, !dbg !9920
  store %struct.mlxsw_rx_listener_item* %10, %struct.mlxsw_rx_listener_item** %retval, align 8, !dbg !9921
  br label %return, !dbg !9921

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !9922

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !9923, metadata !DIExpression()), !dbg !9925
  %11 = load %struct.mlxsw_rx_listener_item*, %struct.mlxsw_rx_listener_item** %rxl_item, align 8, !dbg !9925
  %list4 = getelementptr inbounds %struct.mlxsw_rx_listener_item, %struct.mlxsw_rx_listener_item* %11, i32 0, i32 0, !dbg !9925
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %list4, i32 0, i32 0, !dbg !9925
  %12 = load %struct.list_head*, %struct.list_head** %next5, align 8, !dbg !9925
  %13 = bitcast %struct.list_head* %12 to i8*, !dbg !9925
  store i8* %13, i8** %__mptr3, align 8, !dbg !9925
  br label %do.body6, !dbg !9925

do.body6:                                         ; preds = %for.inc
  br label %do.end7, !dbg !9926

do.end7:                                          ; preds = %do.body6
  %14 = load i8*, i8** %__mptr3, align 8, !dbg !9925
  %add.ptr9 = getelementptr i8, i8* %14, i64 0, !dbg !9925
  %15 = bitcast i8* %add.ptr9 to %struct.mlxsw_rx_listener_item*, !dbg !9925
  store %struct.mlxsw_rx_listener_item* %15, %struct.mlxsw_rx_listener_item** %tmp8, align 8, !dbg !9926
  %16 = load %struct.mlxsw_rx_listener_item*, %struct.mlxsw_rx_listener_item** %tmp8, align 8, !dbg !9925
  store %struct.mlxsw_rx_listener_item* %16, %struct.mlxsw_rx_listener_item** %rxl_item, align 8, !dbg !9911
  br label %for.cond, !dbg !9911, !llvm.loop !9928

for.end:                                          ; preds = %for.cond
  store %struct.mlxsw_rx_listener_item* null, %struct.mlxsw_rx_listener_item** %retval, align 8, !dbg !9930
  br label %return, !dbg !9930

return:                                           ; preds = %for.end, %if.then
  %17 = load %struct.mlxsw_rx_listener_item*, %struct.mlxsw_rx_listener_item** %retval, align 8, !dbg !9931
  ret %struct.mlxsw_rx_listener_item* %17, !dbg !9931
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_rcu(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !9932 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !9934, metadata !DIExpression()), !dbg !9935
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !9936, metadata !DIExpression()), !dbg !9937
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !9938
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !9939
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !9940
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !9941
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9941
  call void @__list_add_rcu(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %3) #11, !dbg !9942
  ret void, !dbg !9943
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlxsw_core_rx_listener_unregister(%struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_rx_listener* %rxl) #0 !dbg !9944 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %rxl.addr = alloca %struct.mlxsw_rx_listener*, align 8
  %rxl_item = alloca %struct.mlxsw_rx_listener_item*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !9947, metadata !DIExpression()), !dbg !9948
  store %struct.mlxsw_rx_listener* %rxl, %struct.mlxsw_rx_listener** %rxl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_rx_listener** %rxl.addr, metadata !9949, metadata !DIExpression()), !dbg !9950
  call void @llvm.dbg.declare(metadata %struct.mlxsw_rx_listener_item** %rxl_item, metadata !9951, metadata !DIExpression()), !dbg !9952
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9953
  %1 = load %struct.mlxsw_rx_listener*, %struct.mlxsw_rx_listener** %rxl.addr, align 8, !dbg !9954
  %call = call %struct.mlxsw_rx_listener_item* @__find_rx_listener_item(%struct.mlxsw_core* %0, %struct.mlxsw_rx_listener* %1) #11, !dbg !9955
  store %struct.mlxsw_rx_listener_item* %call, %struct.mlxsw_rx_listener_item** %rxl_item, align 8, !dbg !9956
  %2 = load %struct.mlxsw_rx_listener_item*, %struct.mlxsw_rx_listener_item** %rxl_item, align 8, !dbg !9957
  %tobool = icmp ne %struct.mlxsw_rx_listener_item* %2, null, !dbg !9957
  br i1 %tobool, label %if.end, label %if.then, !dbg !9959

if.then:                                          ; preds = %entry
  br label %return, !dbg !9960

if.end:                                           ; preds = %entry
  %3 = load %struct.mlxsw_rx_listener_item*, %struct.mlxsw_rx_listener_item** %rxl_item, align 8, !dbg !9961
  %list = getelementptr inbounds %struct.mlxsw_rx_listener_item, %struct.mlxsw_rx_listener_item* %3, i32 0, i32 0, !dbg !9962
  call void @list_del_rcu(%struct.list_head* %list) #11, !dbg !9963
  call void @synchronize_rcu() #11, !dbg !9964
  %4 = load %struct.mlxsw_rx_listener_item*, %struct.mlxsw_rx_listener_item** %rxl_item, align 8, !dbg !9965
  %5 = bitcast %struct.mlxsw_rx_listener_item* %4 to i8*, !dbg !9965
  call void @kfree(i8* %5) #11, !dbg !9966
  br label %return, !dbg !9967

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !9967
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del_rcu(%struct.list_head* %entry1) #0 !dbg !9968 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !9969, metadata !DIExpression()), !dbg !9970
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9971
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !9972
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9973
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !9974
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !9975
  ret void, !dbg !9976
}

; Function Attrs: noredzone
declare dso_local void @synchronize_rcu() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_core_event_listener_register(%struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_event_listener* %el, i8* %priv) #0 !dbg !9977 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !9589, metadata !DIExpression()), !dbg !9982
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !9601, metadata !DIExpression()), !dbg !9985
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !9603, metadata !DIExpression()), !dbg !9986
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !9605, metadata !DIExpression()), !dbg !9987
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !9607, metadata !DIExpression()), !dbg !9988
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !9613, metadata !DIExpression()), !dbg !9990
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !9619, metadata !DIExpression()), !dbg !9992
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !9628, metadata !DIExpression()), !dbg !9995
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !9630, metadata !DIExpression()), !dbg !9996
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !9632, metadata !DIExpression()), !dbg !9997
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !9634, metadata !DIExpression()), !dbg !9998
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !9636, metadata !DIExpression()), !dbg !9999
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9638, metadata !DIExpression()), !dbg !10000
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !9640, metadata !DIExpression()), !dbg !10001
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !9642, metadata !DIExpression()), !dbg !10002
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %el.addr = alloca %struct.mlxsw_event_listener*, align 8
  %priv.addr = alloca i8*, align 8
  %err = alloca i32, align 4
  %el_item = alloca %struct.mlxsw_event_listener_item*, align 8
  %rxl = alloca %struct.mlxsw_rx_listener, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !10003, metadata !DIExpression()), !dbg !10004
  store %struct.mlxsw_event_listener* %el, %struct.mlxsw_event_listener** %el.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_event_listener** %el.addr, metadata !10005, metadata !DIExpression()), !dbg !10006
  store i8* %priv, i8** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %priv.addr, metadata !10007, metadata !DIExpression()), !dbg !10008
  call void @llvm.dbg.declare(metadata i32* %err, metadata !10009, metadata !DIExpression()), !dbg !10010
  call void @llvm.dbg.declare(metadata %struct.mlxsw_event_listener_item** %el_item, metadata !10011, metadata !DIExpression()), !dbg !10012
  call void @llvm.dbg.declare(metadata %struct.mlxsw_rx_listener* %rxl, metadata !10013, metadata !DIExpression()), !dbg !10014
  %func = getelementptr inbounds %struct.mlxsw_rx_listener, %struct.mlxsw_rx_listener* %rxl, i32 0, i32 0, !dbg !10015
  store void (%struct.sk_buff*, i8, i8*)* @mlxsw_core_event_listener_func, void (%struct.sk_buff*, i8, i8*)** %func, align 8, !dbg !10015
  %local_port = getelementptr inbounds %struct.mlxsw_rx_listener, %struct.mlxsw_rx_listener* %rxl, i32 0, i32 1, !dbg !10015
  store i8 -1, i8* %local_port, align 8, !dbg !10015
  %mirror_reason = getelementptr inbounds %struct.mlxsw_rx_listener, %struct.mlxsw_rx_listener* %rxl, i32 0, i32 2, !dbg !10015
  store i8 0, i8* %mirror_reason, align 1, !dbg !10015
  %trap_id = getelementptr inbounds %struct.mlxsw_rx_listener, %struct.mlxsw_rx_listener* %rxl, i32 0, i32 3, !dbg !10015
  %0 = load %struct.mlxsw_event_listener*, %struct.mlxsw_event_listener** %el.addr, align 8, !dbg !10016
  %trap_id1 = getelementptr inbounds %struct.mlxsw_event_listener, %struct.mlxsw_event_listener* %0, i32 0, i32 1, !dbg !10017
  %1 = load i32, i32* %trap_id1, align 8, !dbg !10017
  %conv = trunc i32 %1 to i16, !dbg !10016
  store i16 %conv, i16* %trap_id, align 2, !dbg !10015
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !10018
  %3 = load %struct.mlxsw_event_listener*, %struct.mlxsw_event_listener** %el.addr, align 8, !dbg !10019
  %call = call %struct.mlxsw_event_listener_item* @__find_event_listener_item(%struct.mlxsw_core* %2, %struct.mlxsw_event_listener* %3) #11, !dbg !10020
  store %struct.mlxsw_event_listener_item* %call, %struct.mlxsw_event_listener_item** %el_item, align 8, !dbg !10021
  %4 = load %struct.mlxsw_event_listener_item*, %struct.mlxsw_event_listener_item** %el_item, align 8, !dbg !10022
  %tobool = icmp ne %struct.mlxsw_event_listener_item* %4, null, !dbg !10022
  br i1 %tobool, label %if.then, label %if.end, !dbg !10024

if.then:                                          ; preds = %entry
  store i32 -17, i32* %retval, align 4, !dbg !10025
  br label %return, !dbg !10025

if.end:                                           ; preds = %entry
  store i64 40, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !10026
  %6 = call i1 @llvm.is.constant.i64(i64 %5) #10, !dbg !10027
  br i1 %6, label %if.then.i, label %if.end9.i, !dbg !10028

if.then.i:                                        ; preds = %if.end
  %7 = load i64, i64* %size.addr.i, align 8, !dbg !10029
  %cmp.i = icmp ugt i64 %7, 8192, !dbg !10030
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !10031

if.then1.i:                                       ; preds = %if.then.i
  %8 = load i64, i64* %size.addr.i, align 8, !dbg !10032
  %9 = load i32, i32* %flags.addr.i, align 4, !dbg !10033
  store i64 %8, i64* %size.addr.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i, align 4
  %10 = load i64, i64* %size.addr.i.i, align 8, !dbg !10034
  %call.i.i = call i32 @get_order(i64 %10) #12, !dbg !10035
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !9999
  %11 = load i64, i64* %size.addr.i.i, align 8, !dbg !10036
  %12 = load i32, i32* %flags.addr.i.i, align 4, !dbg !10037
  %13 = load i32, i32* %order.i.i, align 4, !dbg !10038
  store i64 %11, i64* %size.addr.i.i.i, align 8
  store i32 %12, i32* %flags.addr.i.i.i, align 4
  store i32 %13, i32* %order.addr.i.i.i, align 4
  %14 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !10039
  %15 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !10040
  %16 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !10041
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %14, i32 %15, i32 %16) #13, !dbg !10042
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !10042
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !10042
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !10042
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !10042
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !10043
  br label %kmalloc.exit, !dbg !10043

if.end.i:                                         ; preds = %if.then.i
  %17 = load i64, i64* %size.addr.i, align 8, !dbg !10044
  store i64 %17, i64* %size.addr.i11.i, align 8
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10045
  %tobool.i.i = icmp ne i64 %18, 0, !dbg !10045
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !10046

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !10047
  br label %kmalloc_index.exit.i, !dbg !10047

if.end.i.i:                                       ; preds = %if.end.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10048
  %cmp.i.i = icmp ule i64 %19, 8, !dbg !10049
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !10050

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !10051
  br label %kmalloc_index.exit.i, !dbg !10051

if.end2.i.i:                                      ; preds = %if.end.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10052
  %cmp3.i.i = icmp ugt i64 %20, 64, !dbg !10053
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !10054

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10055
  %cmp4.i.i = icmp ule i64 %21, 96, !dbg !10056
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !10057

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !10058
  br label %kmalloc_index.exit.i, !dbg !10058

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10059
  %cmp7.i.i = icmp ugt i64 %22, 128, !dbg !10060
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !10061

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10062
  %cmp9.i.i = icmp ule i64 %23, 192, !dbg !10063
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !10064

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !10065
  br label %kmalloc_index.exit.i, !dbg !10065

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10066
  %cmp12.i.i = icmp ule i64 %24, 8, !dbg !10067
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !10068

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !10069
  br label %kmalloc_index.exit.i, !dbg !10069

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10070
  %cmp15.i.i = icmp ule i64 %25, 16, !dbg !10071
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !10072

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !10073
  br label %kmalloc_index.exit.i, !dbg !10073

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10074
  %cmp18.i.i = icmp ule i64 %26, 32, !dbg !10075
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !10076

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !10077
  br label %kmalloc_index.exit.i, !dbg !10077

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10078
  %cmp21.i.i = icmp ule i64 %27, 64, !dbg !10079
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !10080

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !10081
  br label %kmalloc_index.exit.i, !dbg !10081

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10082
  %cmp24.i.i = icmp ule i64 %28, 128, !dbg !10083
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !10084

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !10085
  br label %kmalloc_index.exit.i, !dbg !10085

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10086
  %cmp27.i.i = icmp ule i64 %29, 256, !dbg !10087
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !10088

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !10089
  br label %kmalloc_index.exit.i, !dbg !10089

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10090
  %cmp30.i.i = icmp ule i64 %30, 512, !dbg !10091
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !10092

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !10093
  br label %kmalloc_index.exit.i, !dbg !10093

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10094
  %cmp33.i.i = icmp ule i64 %31, 1024, !dbg !10095
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !10096

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !10097
  br label %kmalloc_index.exit.i, !dbg !10097

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10098
  %cmp36.i.i = icmp ule i64 %32, 2048, !dbg !10099
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !10100

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !10101
  br label %kmalloc_index.exit.i, !dbg !10101

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10102
  %cmp39.i.i = icmp ule i64 %33, 4096, !dbg !10103
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !10104

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !10105
  br label %kmalloc_index.exit.i, !dbg !10105

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10106
  %cmp42.i.i = icmp ule i64 %34, 8192, !dbg !10107
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !10108

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !10109
  br label %kmalloc_index.exit.i, !dbg !10109

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10110
  %cmp45.i.i = icmp ule i64 %35, 16384, !dbg !10111
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !10112

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !10113
  br label %kmalloc_index.exit.i, !dbg !10113

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10114
  %cmp48.i.i = icmp ule i64 %36, 32768, !dbg !10115
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !10116

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !10117
  br label %kmalloc_index.exit.i, !dbg !10117

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10118
  %cmp51.i.i = icmp ule i64 %37, 65536, !dbg !10119
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !10120

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !10121
  br label %kmalloc_index.exit.i, !dbg !10121

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10122
  %cmp54.i.i = icmp ule i64 %38, 131072, !dbg !10123
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !10124

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !10125
  br label %kmalloc_index.exit.i, !dbg !10125

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10126
  %cmp57.i.i = icmp ule i64 %39, 262144, !dbg !10127
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !10128

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !10129
  br label %kmalloc_index.exit.i, !dbg !10129

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10130
  %cmp60.i.i = icmp ule i64 %40, 524288, !dbg !10131
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !10132

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !10133
  br label %kmalloc_index.exit.i, !dbg !10133

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10134
  %cmp63.i.i = icmp ule i64 %41, 1048576, !dbg !10135
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !10136

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !10137
  br label %kmalloc_index.exit.i, !dbg !10137

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10138
  %cmp66.i.i = icmp ule i64 %42, 2097152, !dbg !10139
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !10140

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !10141
  br label %kmalloc_index.exit.i, !dbg !10141

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10142
  %cmp69.i.i = icmp ule i64 %43, 4194304, !dbg !10143
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !10144

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !10145
  br label %kmalloc_index.exit.i, !dbg !10145

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10146
  %cmp72.i.i = icmp ule i64 %44, 8388608, !dbg !10147
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !10148

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !10149
  br label %kmalloc_index.exit.i, !dbg !10149

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10150
  %cmp75.i.i = icmp ule i64 %45, 16777216, !dbg !10151
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !10152

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !10153
  br label %kmalloc_index.exit.i, !dbg !10153

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10154
  %cmp78.i.i = icmp ule i64 %46, 33554432, !dbg !10155
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !10156

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !10157
  br label %kmalloc_index.exit.i, !dbg !10157

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10158
  %cmp81.i.i = icmp ule i64 %47, 67108864, !dbg !10159
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !10160

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !10161
  br label %kmalloc_index.exit.i, !dbg !10161

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.119, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !10162, !srcloc !9829
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 233) #10, !dbg !10163, !srcloc !9833
  unreachable, !dbg !10164

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %48 = load i32, i32* %retval.i.i, align 4, !dbg !10165
  store i32 %48, i32* %index.i, align 4, !dbg !10166
  %49 = load i32, i32* %index.i, align 4, !dbg !10167
  %tobool.i = icmp ne i32 %49, 0, !dbg !10167
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !10168

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !10169
  br label %kmalloc.exit, !dbg !10169

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %50 = load i32, i32* %flags.addr.i, align 4, !dbg !10170
  store i32 %50, i32* %flags.addr.i13.i, align 4
  %51 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !10171
  %and.i.i = and i32 %51, 17, !dbg !10171
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !10171
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !10171
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !10171
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !10171
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !10172

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !10173
  br label %kmalloc_type.exit.i, !dbg !10173

if.end.i16.i:                                     ; preds = %if.end4.i
  %52 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !10174
  %and2.i.i = and i32 %52, 1, !dbg !10175
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !10174
  %53 = zext i1 %tobool3.i.i to i64, !dbg !10174
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !10174
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !10176
  br label %kmalloc_type.exit.i, !dbg !10176

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %54 = load i32, i32* %retval.i12.i, align 4, !dbg !10177
  %idxprom.i = zext i32 %54 to i64, !dbg !10178
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !10178
  %55 = load i32, i32* %index.i, align 4, !dbg !10179
  %idxprom6.i = zext i32 %55 to i64, !dbg !10178
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !10178
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !10178
  %57 = load i32, i32* %flags.addr.i, align 4, !dbg !10180
  %58 = load i64, i64* %size.addr.i, align 8, !dbg !10181
  store %struct.kmem_cache* %56, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %57, i32* %flags.addr.i17.i, align 4
  store i64 %58, i64* %size.addr.i18.i, align 8
  %59 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !10182
  %60 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !10183
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %59, i32 %60) #13, !dbg !10184
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !10184
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !10184
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !10184
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !10184
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !9987
  %61 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !10185
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !10186
  %63 = load i64, i64* %size.addr.i18.i, align 8, !dbg !10187
  %64 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !10188
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %61, i8* %62, i64 %63, i32 %64) #13, !dbg !10189
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !10190
  %65 = load i8*, i8** %ret.i.i, align 8, !dbg !10191
  store i8* %65, i8** %retval.i, align 8, !dbg !10192
  br label %kmalloc.exit, !dbg !10192

if.end9.i:                                        ; preds = %if.end
  %66 = load i64, i64* %size.addr.i, align 8, !dbg !10193
  %67 = load i32, i32* %flags.addr.i, align 4, !dbg !10194
  %call10.i = call noalias i8* @__kmalloc(i64 %66, i32 %67) #13, !dbg !10195
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !10195
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !10195
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !10195
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !10195
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !10196
  br label %kmalloc.exit, !dbg !10196

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %68 = load i8*, i8** %retval.i, align 8, !dbg !10197
  %69 = bitcast i8* %68 to %struct.mlxsw_event_listener_item*, !dbg !10198
  store %struct.mlxsw_event_listener_item* %69, %struct.mlxsw_event_listener_item** %el_item, align 8, !dbg !10199
  %70 = load %struct.mlxsw_event_listener_item*, %struct.mlxsw_event_listener_item** %el_item, align 8, !dbg !10200
  %tobool3 = icmp ne %struct.mlxsw_event_listener_item* %70, null, !dbg !10200
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !10202

if.then4:                                         ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !10203
  br label %return, !dbg !10203

if.end5:                                          ; preds = %kmalloc.exit
  %71 = load %struct.mlxsw_event_listener_item*, %struct.mlxsw_event_listener_item** %el_item, align 8, !dbg !10204
  %el6 = getelementptr inbounds %struct.mlxsw_event_listener_item, %struct.mlxsw_event_listener_item* %71, i32 0, i32 1, !dbg !10205
  %72 = load %struct.mlxsw_event_listener*, %struct.mlxsw_event_listener** %el.addr, align 8, !dbg !10206
  %73 = bitcast %struct.mlxsw_event_listener* %el6 to i8*, !dbg !10207
  %74 = bitcast %struct.mlxsw_event_listener* %72 to i8*, !dbg !10207
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 16, i1 false), !dbg !10207
  %75 = load i8*, i8** %priv.addr, align 8, !dbg !10208
  %76 = load %struct.mlxsw_event_listener_item*, %struct.mlxsw_event_listener_item** %el_item, align 8, !dbg !10209
  %priv7 = getelementptr inbounds %struct.mlxsw_event_listener_item, %struct.mlxsw_event_listener_item* %76, i32 0, i32 2, !dbg !10210
  store i8* %75, i8** %priv7, align 8, !dbg !10211
  %77 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !10212
  %78 = load %struct.mlxsw_event_listener_item*, %struct.mlxsw_event_listener_item** %el_item, align 8, !dbg !10213
  %79 = bitcast %struct.mlxsw_event_listener_item* %78 to i8*, !dbg !10213
  %call8 = call i32 @mlxsw_core_rx_listener_register(%struct.mlxsw_core* %77, %struct.mlxsw_rx_listener* %rxl, i8* %79, i1 zeroext true) #11, !dbg !10214
  store i32 %call8, i32* %err, align 4, !dbg !10215
  %80 = load i32, i32* %err, align 4, !dbg !10216
  %tobool9 = icmp ne i32 %80, 0, !dbg !10216
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !10218

if.then10:                                        ; preds = %if.end5
  br label %err_rx_listener_register, !dbg !10219

if.end11:                                         ; preds = %if.end5
  %81 = load %struct.mlxsw_event_listener_item*, %struct.mlxsw_event_listener_item** %el_item, align 8, !dbg !10220
  %list = getelementptr inbounds %struct.mlxsw_event_listener_item, %struct.mlxsw_event_listener_item* %81, i32 0, i32 0, !dbg !10221
  %82 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !10222
  %event_listener_list = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %82, i32 0, i32 6, !dbg !10223
  call void @list_add_rcu(%struct.list_head* %list, %struct.list_head* %event_listener_list) #11, !dbg !10224
  store i32 0, i32* %retval, align 4, !dbg !10225
  br label %return, !dbg !10225

err_rx_listener_register:                         ; preds = %if.then10
  call void @llvm.dbg.label(metadata !10226), !dbg !10227
  %83 = load %struct.mlxsw_event_listener_item*, %struct.mlxsw_event_listener_item** %el_item, align 8, !dbg !10228
  %84 = bitcast %struct.mlxsw_event_listener_item* %83 to i8*, !dbg !10228
  call void @kfree(i8* %84) #11, !dbg !10229
  %85 = load i32, i32* %err, align 4, !dbg !10230
  store i32 %85, i32* %retval, align 4, !dbg !10231
  br label %return, !dbg !10231

return:                                           ; preds = %err_rx_listener_register, %if.end11, %if.then4, %if.then
  %86 = load i32, i32* %retval, align 4, !dbg !10232
  ret i32 %86, !dbg !10232
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_core_event_listener_func(%struct.sk_buff* %skb, i8 zeroext %local_port, i8* %priv) #0 !dbg !10233 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %local_port.addr = alloca i8, align 1
  %priv.addr = alloca i8*, align 8
  %event_listener_item = alloca %struct.mlxsw_event_listener_item*, align 8
  %reg = alloca %struct.mlxsw_reg_info, align 8
  %payload = alloca i8*, align 8
  %reg_tlv = alloca i8*, align 8
  %op_tlv = alloca i8*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !10234, metadata !DIExpression()), !dbg !10235
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !10236, metadata !DIExpression()), !dbg !10237
  store i8* %priv, i8** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %priv.addr, metadata !10238, metadata !DIExpression()), !dbg !10239
  call void @llvm.dbg.declare(metadata %struct.mlxsw_event_listener_item** %event_listener_item, metadata !10240, metadata !DIExpression()), !dbg !10241
  %0 = load i8*, i8** %priv.addr, align 8, !dbg !10242
  %1 = bitcast i8* %0 to %struct.mlxsw_event_listener_item*, !dbg !10242
  store %struct.mlxsw_event_listener_item* %1, %struct.mlxsw_event_listener_item** %event_listener_item, align 8, !dbg !10241
  call void @llvm.dbg.declare(metadata %struct.mlxsw_reg_info* %reg, metadata !10243, metadata !DIExpression()), !dbg !10244
  call void @llvm.dbg.declare(metadata i8** %payload, metadata !10245, metadata !DIExpression()), !dbg !10246
  call void @llvm.dbg.declare(metadata i8** %reg_tlv, metadata !10247, metadata !DIExpression()), !dbg !10248
  call void @llvm.dbg.declare(metadata i8** %op_tlv, metadata !10249, metadata !DIExpression()), !dbg !10250
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !10251
  call void @mlxsw_emad_tlv_parse(%struct.sk_buff* %2) #11, !dbg !10252
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !10253
  %call = call i8* @mlxsw_emad_op_tlv(%struct.sk_buff* %3) #11, !dbg !10254
  store i8* %call, i8** %op_tlv, align 8, !dbg !10255
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !10256
  %call1 = call i8* @mlxsw_emad_reg_tlv(%struct.sk_buff* %4) #11, !dbg !10257
  store i8* %call1, i8** %reg_tlv, align 8, !dbg !10258
  %5 = load i8*, i8** %op_tlv, align 8, !dbg !10259
  %call2 = call i32 @mlxsw_emad_op_tlv_register_id_get(i8* %5) #11, !dbg !10260
  %conv = trunc i32 %call2 to i16, !dbg !10260
  %id = getelementptr inbounds %struct.mlxsw_reg_info, %struct.mlxsw_reg_info* %reg, i32 0, i32 0, !dbg !10261
  store i16 %conv, i16* %id, align 8, !dbg !10262
  %6 = load i8*, i8** %reg_tlv, align 8, !dbg !10263
  %call3 = call i32 @mlxsw_emad_reg_tlv_len_get(i8* %6) #11, !dbg !10264
  %sub = sub i32 %call3, 1, !dbg !10265
  %conv4 = zext i32 %sub to i64, !dbg !10266
  %mul = mul i64 %conv4, 4, !dbg !10267
  %conv5 = trunc i64 %mul to i16, !dbg !10266
  %len = getelementptr inbounds %struct.mlxsw_reg_info, %struct.mlxsw_reg_info* %reg, i32 0, i32 1, !dbg !10268
  store i16 %conv5, i16* %len, align 2, !dbg !10269
  %7 = load i8*, i8** %reg_tlv, align 8, !dbg !10270
  %call6 = call i8* @mlxsw_emad_reg_payload(i8* %7) #11, !dbg !10271
  store i8* %call6, i8** %payload, align 8, !dbg !10272
  %8 = load %struct.mlxsw_event_listener_item*, %struct.mlxsw_event_listener_item** %event_listener_item, align 8, !dbg !10273
  %el = getelementptr inbounds %struct.mlxsw_event_listener_item, %struct.mlxsw_event_listener_item* %8, i32 0, i32 1, !dbg !10274
  %func = getelementptr inbounds %struct.mlxsw_event_listener, %struct.mlxsw_event_listener* %el, i32 0, i32 0, !dbg !10275
  %9 = load void (%struct.mlxsw_reg_info*, i8*, i8*)*, void (%struct.mlxsw_reg_info*, i8*, i8*)** %func, align 8, !dbg !10275
  %10 = load i8*, i8** %payload, align 8, !dbg !10276
  %11 = load %struct.mlxsw_event_listener_item*, %struct.mlxsw_event_listener_item** %event_listener_item, align 8, !dbg !10277
  %priv7 = getelementptr inbounds %struct.mlxsw_event_listener_item, %struct.mlxsw_event_listener_item* %11, i32 0, i32 2, !dbg !10278
  %12 = load i8*, i8** %priv7, align 8, !dbg !10278
  call void %9(%struct.mlxsw_reg_info* %reg, i8* %10, i8* %12) #11, !dbg !10273
  %13 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !10279
  call void @consume_skb(%struct.sk_buff* %13) #11, !dbg !10279
  ret void, !dbg !10280
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_event_listener_item* @__find_event_listener_item(%struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_event_listener* %el) #0 !dbg !10281 {
entry:
  %retval = alloca %struct.mlxsw_event_listener_item*, align 8
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %el.addr = alloca %struct.mlxsw_event_listener*, align 8
  %el_item = alloca %struct.mlxsw_event_listener_item*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_event_listener_item*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp8 = alloca %struct.mlxsw_event_listener_item*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !10284, metadata !DIExpression()), !dbg !10285
  store %struct.mlxsw_event_listener* %el, %struct.mlxsw_event_listener** %el.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_event_listener** %el.addr, metadata !10286, metadata !DIExpression()), !dbg !10287
  call void @llvm.dbg.declare(metadata %struct.mlxsw_event_listener_item** %el_item, metadata !10288, metadata !DIExpression()), !dbg !10289
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10290, metadata !DIExpression()), !dbg !10293
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !10293
  %event_listener_list = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %0, i32 0, i32 6, !dbg !10293
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %event_listener_list, i32 0, i32 0, !dbg !10293
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10293
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !10293
  store i8* %2, i8** %__mptr, align 8, !dbg !10293
  br label %do.body, !dbg !10293

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10294

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !10293
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !10293
  %4 = bitcast i8* %add.ptr to %struct.mlxsw_event_listener_item*, !dbg !10293
  store %struct.mlxsw_event_listener_item* %4, %struct.mlxsw_event_listener_item** %tmp, align 8, !dbg !10294
  %5 = load %struct.mlxsw_event_listener_item*, %struct.mlxsw_event_listener_item** %tmp, align 8, !dbg !10293
  store %struct.mlxsw_event_listener_item* %5, %struct.mlxsw_event_listener_item** %el_item, align 8, !dbg !10296
  br label %for.cond, !dbg !10296

for.cond:                                         ; preds = %do.end7, %do.end
  %6 = load %struct.mlxsw_event_listener_item*, %struct.mlxsw_event_listener_item** %el_item, align 8, !dbg !10297
  %list = getelementptr inbounds %struct.mlxsw_event_listener_item, %struct.mlxsw_event_listener_item* %6, i32 0, i32 0, !dbg !10297
  %7 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !10297
  %event_listener_list1 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %7, i32 0, i32 6, !dbg !10297
  %cmp = icmp eq %struct.list_head* %list, %event_listener_list1, !dbg !10297
  %lnot = xor i1 %cmp, true, !dbg !10297
  br i1 %lnot, label %for.body, label %for.end, !dbg !10296

for.body:                                         ; preds = %for.cond
  %8 = load %struct.mlxsw_event_listener_item*, %struct.mlxsw_event_listener_item** %el_item, align 8, !dbg !10299
  %el2 = getelementptr inbounds %struct.mlxsw_event_listener_item, %struct.mlxsw_event_listener_item* %8, i32 0, i32 1, !dbg !10302
  %9 = load %struct.mlxsw_event_listener*, %struct.mlxsw_event_listener** %el.addr, align 8, !dbg !10303
  %call = call zeroext i1 @__is_event_listener_equal(%struct.mlxsw_event_listener* %el2, %struct.mlxsw_event_listener* %9) #11, !dbg !10304
  br i1 %call, label %if.then, label %if.end, !dbg !10305

if.then:                                          ; preds = %for.body
  %10 = load %struct.mlxsw_event_listener_item*, %struct.mlxsw_event_listener_item** %el_item, align 8, !dbg !10306
  store %struct.mlxsw_event_listener_item* %10, %struct.mlxsw_event_listener_item** %retval, align 8, !dbg !10307
  br label %return, !dbg !10307

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !10308

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !10309, metadata !DIExpression()), !dbg !10311
  %11 = load %struct.mlxsw_event_listener_item*, %struct.mlxsw_event_listener_item** %el_item, align 8, !dbg !10311
  %list4 = getelementptr inbounds %struct.mlxsw_event_listener_item, %struct.mlxsw_event_listener_item* %11, i32 0, i32 0, !dbg !10311
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %list4, i32 0, i32 0, !dbg !10311
  %12 = load %struct.list_head*, %struct.list_head** %next5, align 8, !dbg !10311
  %13 = bitcast %struct.list_head* %12 to i8*, !dbg !10311
  store i8* %13, i8** %__mptr3, align 8, !dbg !10311
  br label %do.body6, !dbg !10311

do.body6:                                         ; preds = %for.inc
  br label %do.end7, !dbg !10312

do.end7:                                          ; preds = %do.body6
  %14 = load i8*, i8** %__mptr3, align 8, !dbg !10311
  %add.ptr9 = getelementptr i8, i8* %14, i64 0, !dbg !10311
  %15 = bitcast i8* %add.ptr9 to %struct.mlxsw_event_listener_item*, !dbg !10311
  store %struct.mlxsw_event_listener_item* %15, %struct.mlxsw_event_listener_item** %tmp8, align 8, !dbg !10312
  %16 = load %struct.mlxsw_event_listener_item*, %struct.mlxsw_event_listener_item** %tmp8, align 8, !dbg !10311
  store %struct.mlxsw_event_listener_item* %16, %struct.mlxsw_event_listener_item** %el_item, align 8, !dbg !10297
  br label %for.cond, !dbg !10297, !llvm.loop !10314

for.end:                                          ; preds = %for.cond
  store %struct.mlxsw_event_listener_item* null, %struct.mlxsw_event_listener_item** %retval, align 8, !dbg !10316
  br label %return, !dbg !10316

return:                                           ; preds = %for.end, %if.then
  %17 = load %struct.mlxsw_event_listener_item*, %struct.mlxsw_event_listener_item** %retval, align 8, !dbg !10317
  ret %struct.mlxsw_event_listener_item* %17, !dbg !10317
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlxsw_core_event_listener_unregister(%struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_event_listener* %el) #0 !dbg !10318 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %el.addr = alloca %struct.mlxsw_event_listener*, align 8
  %el_item = alloca %struct.mlxsw_event_listener_item*, align 8
  %rxl = alloca %struct.mlxsw_rx_listener, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !10321, metadata !DIExpression()), !dbg !10322
  store %struct.mlxsw_event_listener* %el, %struct.mlxsw_event_listener** %el.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_event_listener** %el.addr, metadata !10323, metadata !DIExpression()), !dbg !10324
  call void @llvm.dbg.declare(metadata %struct.mlxsw_event_listener_item** %el_item, metadata !10325, metadata !DIExpression()), !dbg !10326
  call void @llvm.dbg.declare(metadata %struct.mlxsw_rx_listener* %rxl, metadata !10327, metadata !DIExpression()), !dbg !10328
  %func = getelementptr inbounds %struct.mlxsw_rx_listener, %struct.mlxsw_rx_listener* %rxl, i32 0, i32 0, !dbg !10329
  store void (%struct.sk_buff*, i8, i8*)* @mlxsw_core_event_listener_func, void (%struct.sk_buff*, i8, i8*)** %func, align 8, !dbg !10329
  %local_port = getelementptr inbounds %struct.mlxsw_rx_listener, %struct.mlxsw_rx_listener* %rxl, i32 0, i32 1, !dbg !10329
  store i8 -1, i8* %local_port, align 8, !dbg !10329
  %mirror_reason = getelementptr inbounds %struct.mlxsw_rx_listener, %struct.mlxsw_rx_listener* %rxl, i32 0, i32 2, !dbg !10329
  store i8 0, i8* %mirror_reason, align 1, !dbg !10329
  %trap_id = getelementptr inbounds %struct.mlxsw_rx_listener, %struct.mlxsw_rx_listener* %rxl, i32 0, i32 3, !dbg !10329
  %0 = load %struct.mlxsw_event_listener*, %struct.mlxsw_event_listener** %el.addr, align 8, !dbg !10330
  %trap_id1 = getelementptr inbounds %struct.mlxsw_event_listener, %struct.mlxsw_event_listener* %0, i32 0, i32 1, !dbg !10331
  %1 = load i32, i32* %trap_id1, align 8, !dbg !10331
  %conv = trunc i32 %1 to i16, !dbg !10330
  store i16 %conv, i16* %trap_id, align 2, !dbg !10329
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !10332
  %3 = load %struct.mlxsw_event_listener*, %struct.mlxsw_event_listener** %el.addr, align 8, !dbg !10333
  %call = call %struct.mlxsw_event_listener_item* @__find_event_listener_item(%struct.mlxsw_core* %2, %struct.mlxsw_event_listener* %3) #11, !dbg !10334
  store %struct.mlxsw_event_listener_item* %call, %struct.mlxsw_event_listener_item** %el_item, align 8, !dbg !10335
  %4 = load %struct.mlxsw_event_listener_item*, %struct.mlxsw_event_listener_item** %el_item, align 8, !dbg !10336
  %tobool = icmp ne %struct.mlxsw_event_listener_item* %4, null, !dbg !10336
  br i1 %tobool, label %if.end, label %if.then, !dbg !10338

if.then:                                          ; preds = %entry
  br label %return, !dbg !10339

if.end:                                           ; preds = %entry
  %5 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !10340
  call void @mlxsw_core_rx_listener_unregister(%struct.mlxsw_core* %5, %struct.mlxsw_rx_listener* %rxl) #11, !dbg !10341
  %6 = load %struct.mlxsw_event_listener_item*, %struct.mlxsw_event_listener_item** %el_item, align 8, !dbg !10342
  %list = getelementptr inbounds %struct.mlxsw_event_listener_item, %struct.mlxsw_event_listener_item* %6, i32 0, i32 0, !dbg !10343
  call void @list_del(%struct.list_head* %list) #11, !dbg !10344
  %7 = load %struct.mlxsw_event_listener_item*, %struct.mlxsw_event_listener_item** %el_item, align 8, !dbg !10345
  %8 = bitcast %struct.mlxsw_event_listener_item* %7 to i8*, !dbg !10345
  call void @kfree(i8* %8) #11, !dbg !10346
  br label %return, !dbg !10347

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !10347
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_core_trap_register(%struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_listener* %listener, i8* %priv) #0 !dbg !10348 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %listener.addr = alloca %struct.mlxsw_listener*, align 8
  %priv.addr = alloca i8*, align 8
  %trap_group = alloca i32, align 4
  %action = alloca i32, align 4
  %hpkt_pl = alloca [16 x i8], align 16
  %err = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !10352, metadata !DIExpression()), !dbg !10353
  store %struct.mlxsw_listener* %listener, %struct.mlxsw_listener** %listener.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_listener** %listener.addr, metadata !10354, metadata !DIExpression()), !dbg !10355
  store i8* %priv, i8** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %priv.addr, metadata !10356, metadata !DIExpression()), !dbg !10357
  call void @llvm.dbg.declare(metadata i32* %trap_group, metadata !10358, metadata !DIExpression()), !dbg !10359
  call void @llvm.dbg.declare(metadata i32* %action, metadata !10360, metadata !DIExpression()), !dbg !10361
  call void @llvm.dbg.declare(metadata [16 x i8]* %hpkt_pl, metadata !10362, metadata !DIExpression()), !dbg !10363
  call void @llvm.dbg.declare(metadata i32* %err, metadata !10364, metadata !DIExpression()), !dbg !10365
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !10366
  %1 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listener.addr, align 8, !dbg !10367
  %2 = load i8*, i8** %priv.addr, align 8, !dbg !10368
  %3 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listener.addr, align 8, !dbg !10369
  %enabled_on_register = getelementptr inbounds %struct.mlxsw_listener, %struct.mlxsw_listener* %3, i32 0, i32 6, !dbg !10370
  %bf.load = load i8, i8* %enabled_on_register, align 2, !dbg !10370
  %bf.lshr = lshr i8 %bf.load, 2, !dbg !10370
  %bf.clear = and i8 %bf.lshr, 1, !dbg !10370
  %tobool = icmp ne i8 %bf.clear, 0, !dbg !10369
  %call = call i32 @mlxsw_core_listener_register(%struct.mlxsw_core* %0, %struct.mlxsw_listener* %1, i8* %2, i1 zeroext %tobool) #11, !dbg !10371
  store i32 %call, i32* %err, align 4, !dbg !10372
  %4 = load i32, i32* %err, align 4, !dbg !10373
  %tobool1 = icmp ne i32 %4, 0, !dbg !10373
  br i1 %tobool1, label %if.then, label %if.end, !dbg !10375

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %err, align 4, !dbg !10376
  store i32 %5, i32* %retval, align 4, !dbg !10377
  br label %return, !dbg !10377

if.end:                                           ; preds = %entry
  %6 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listener.addr, align 8, !dbg !10378
  %enabled_on_register2 = getelementptr inbounds %struct.mlxsw_listener, %struct.mlxsw_listener* %6, i32 0, i32 6, !dbg !10379
  %bf.load3 = load i8, i8* %enabled_on_register2, align 2, !dbg !10379
  %bf.lshr4 = lshr i8 %bf.load3, 2, !dbg !10379
  %bf.clear5 = and i8 %bf.lshr4, 1, !dbg !10379
  %conv = zext i8 %bf.clear5 to i32, !dbg !10378
  %tobool6 = icmp ne i32 %conv, 0, !dbg !10378
  br i1 %tobool6, label %cond.true, label %cond.false, !dbg !10378

cond.true:                                        ; preds = %if.end
  %7 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listener.addr, align 8, !dbg !10380
  %en_action = getelementptr inbounds %struct.mlxsw_listener, %struct.mlxsw_listener* %7, i32 0, i32 2, !dbg !10381
  %8 = load i32, i32* %en_action, align 8, !dbg !10381
  br label %cond.end, !dbg !10378

cond.false:                                       ; preds = %if.end
  %9 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listener.addr, align 8, !dbg !10382
  %dis_action = getelementptr inbounds %struct.mlxsw_listener, %struct.mlxsw_listener* %9, i32 0, i32 3, !dbg !10383
  %10 = load i32, i32* %dis_action, align 4, !dbg !10383
  br label %cond.end, !dbg !10378

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %8, %cond.true ], [ %10, %cond.false ], !dbg !10378
  store i32 %cond, i32* %action, align 4, !dbg !10384
  %11 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listener.addr, align 8, !dbg !10385
  %enabled_on_register7 = getelementptr inbounds %struct.mlxsw_listener, %struct.mlxsw_listener* %11, i32 0, i32 6, !dbg !10386
  %bf.load8 = load i8, i8* %enabled_on_register7, align 2, !dbg !10386
  %bf.lshr9 = lshr i8 %bf.load8, 2, !dbg !10386
  %bf.clear10 = and i8 %bf.lshr9, 1, !dbg !10386
  %conv11 = zext i8 %bf.clear10 to i32, !dbg !10385
  %tobool12 = icmp ne i32 %conv11, 0, !dbg !10385
  br i1 %tobool12, label %cond.true13, label %cond.false15, !dbg !10385

cond.true13:                                      ; preds = %cond.end
  %12 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listener.addr, align 8, !dbg !10387
  %en_trap_group = getelementptr inbounds %struct.mlxsw_listener, %struct.mlxsw_listener* %12, i32 0, i32 4, !dbg !10388
  %13 = load i8, i8* %en_trap_group, align 8, !dbg !10388
  %conv14 = zext i8 %13 to i32, !dbg !10387
  br label %cond.end17, !dbg !10385

cond.false15:                                     ; preds = %cond.end
  %14 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listener.addr, align 8, !dbg !10389
  %dis_trap_group = getelementptr inbounds %struct.mlxsw_listener, %struct.mlxsw_listener* %14, i32 0, i32 5, !dbg !10390
  %15 = load i8, i8* %dis_trap_group, align 1, !dbg !10390
  %conv16 = zext i8 %15 to i32, !dbg !10389
  br label %cond.end17, !dbg !10385

cond.end17:                                       ; preds = %cond.false15, %cond.true13
  %cond18 = phi i32 [ %conv14, %cond.true13 ], [ %conv16, %cond.false15 ], !dbg !10385
  store i32 %cond18, i32* %trap_group, align 4, !dbg !10391
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %hpkt_pl, i64 0, i64 0, !dbg !10392
  %16 = load i32, i32* %action, align 4, !dbg !10393
  %conv19 = trunc i32 %16 to i8, !dbg !10393
  %17 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listener.addr, align 8, !dbg !10394
  %trap_id = getelementptr inbounds %struct.mlxsw_listener, %struct.mlxsw_listener* %17, i32 0, i32 0, !dbg !10395
  %18 = load i16, i16* %trap_id, align 8, !dbg !10395
  %19 = load i32, i32* %trap_group, align 4, !dbg !10396
  %20 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listener.addr, align 8, !dbg !10397
  %is_ctrl = getelementptr inbounds %struct.mlxsw_listener, %struct.mlxsw_listener* %20, i32 0, i32 6, !dbg !10398
  %bf.load20 = load i8, i8* %is_ctrl, align 2, !dbg !10398
  %bf.clear21 = and i8 %bf.load20, 1, !dbg !10398
  %tobool22 = icmp ne i8 %bf.clear21, 0, !dbg !10397
  call void @mlxsw_reg_hpkt_pack(i8* %arraydecay, i8 zeroext %conv19, i16 zeroext %18, i32 %19, i1 zeroext %tobool22) #11, !dbg !10399
  %21 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !10400
  %arraydecay23 = getelementptr inbounds [16 x i8], [16 x i8]* %hpkt_pl, i64 0, i64 0, !dbg !10401
  %call24 = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %21, %struct.mlxsw_reg_info* @mlxsw_reg_hpkt, i8* %arraydecay23) #11, !dbg !10402
  store i32 %call24, i32* %err, align 4, !dbg !10403
  %22 = load i32, i32* %err, align 4, !dbg !10404
  %tobool25 = icmp ne i32 %22, 0, !dbg !10404
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !10406

if.then26:                                        ; preds = %cond.end17
  br label %err_trap_set, !dbg !10407

if.end27:                                         ; preds = %cond.end17
  store i32 0, i32* %retval, align 4, !dbg !10408
  br label %return, !dbg !10408

err_trap_set:                                     ; preds = %if.then26
  call void @llvm.dbg.label(metadata !10409), !dbg !10410
  %23 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !10411
  %24 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listener.addr, align 8, !dbg !10412
  %25 = load i8*, i8** %priv.addr, align 8, !dbg !10413
  call void @mlxsw_core_listener_unregister(%struct.mlxsw_core* %23, %struct.mlxsw_listener* %24, i8* %25) #11, !dbg !10414
  %26 = load i32, i32* %err, align 4, !dbg !10415
  store i32 %26, i32* %retval, align 4, !dbg !10416
  br label %return, !dbg !10416

return:                                           ; preds = %err_trap_set, %if.end27, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !10417
  ret i32 %27, !dbg !10417
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_core_listener_register(%struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_listener* %listener, i8* %priv, i1 zeroext %enabled) #0 !dbg !10418 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %listener.addr = alloca %struct.mlxsw_listener*, align 8
  %priv.addr = alloca i8*, align 8
  %enabled.addr = alloca i8, align 1
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !10421, metadata !DIExpression()), !dbg !10422
  store %struct.mlxsw_listener* %listener, %struct.mlxsw_listener** %listener.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_listener** %listener.addr, metadata !10423, metadata !DIExpression()), !dbg !10424
  store i8* %priv, i8** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %priv.addr, metadata !10425, metadata !DIExpression()), !dbg !10426
  %frombool = zext i1 %enabled to i8
  store i8 %frombool, i8* %enabled.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enabled.addr, metadata !10427, metadata !DIExpression()), !dbg !10428
  %0 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listener.addr, align 8, !dbg !10429
  %is_event = getelementptr inbounds %struct.mlxsw_listener, %struct.mlxsw_listener* %0, i32 0, i32 6, !dbg !10431
  %bf.load = load i8, i8* %is_event, align 2, !dbg !10431
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !10431
  %bf.clear = and i8 %bf.lshr, 1, !dbg !10431
  %tobool = icmp ne i8 %bf.clear, 0, !dbg !10429
  br i1 %tobool, label %if.then, label %if.else, !dbg !10432

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10433, metadata !DIExpression()), !dbg !10436
  %1 = load i8, i8* %enabled.addr, align 1, !dbg !10436
  %tobool1 = trunc i8 %1 to i1, !dbg !10436
  %lnot = xor i1 %tobool1, true, !dbg !10436
  %lnot2 = xor i1 %lnot, true, !dbg !10436
  %lnot3 = xor i1 %lnot2, true, !dbg !10436
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !10436
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !10436
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !10437
  %tobool4 = icmp ne i32 %2, 0, !dbg !10437
  %lnot5 = xor i1 %tobool4, true, !dbg !10437
  %lnot7 = xor i1 %lnot5, true, !dbg !10437
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !10437
  %conv = sext i32 %lnot.ext8 to i64, !dbg !10437
  %tobool9 = icmp ne i64 %conv, 0, !dbg !10437
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !10436

if.then10:                                        ; preds = %if.then
  br label %do.body, !dbg !10437

do.body:                                          ; preds = %if.then10
  br label %do.body11, !dbg !10439

do.body11:                                        ; preds = %do.body
  br label %do.end, !dbg !10441

do.end:                                           ; preds = %do.body11
  br label %do.body12, !dbg !10439

do.body12:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 2281, i32 2305, i64 12) #10, !dbg !10443, !srcloc !10445
  br label %do.end13, !dbg !10443

do.end13:                                         ; preds = %do.body12
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 369) #10, !dbg !10446, !srcloc !10448
  br label %do.body14, !dbg !10439

do.body14:                                        ; preds = %do.end13
  br label %do.end15, !dbg !10449

do.end15:                                         ; preds = %do.body14
  br label %do.end16, !dbg !10439

do.end16:                                         ; preds = %do.end15
  br label %if.end, !dbg !10439

if.end:                                           ; preds = %do.end16, %if.then
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !10436
  %tobool17 = icmp ne i32 %3, 0, !dbg !10436
  %lnot18 = xor i1 %tobool17, true, !dbg !10436
  %lnot20 = xor i1 %lnot18, true, !dbg !10436
  %lnot.ext21 = zext i1 %lnot20 to i32, !dbg !10436
  %conv22 = sext i32 %lnot.ext21 to i64, !dbg !10436
  store i64 %conv22, i64* %tmp, align 8, !dbg !10437
  %4 = load i64, i64* %tmp, align 8, !dbg !10436
  %5 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !10451
  %6 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listener.addr, align 8, !dbg !10452
  %7 = getelementptr inbounds %struct.mlxsw_listener, %struct.mlxsw_listener* %6, i32 0, i32 1, !dbg !10453
  %event_listener = bitcast %union.anon.132* %7 to %struct.mlxsw_event_listener*, !dbg !10453
  %8 = load i8*, i8** %priv.addr, align 8, !dbg !10454
  %call = call i32 @mlxsw_core_event_listener_register(%struct.mlxsw_core* %5, %struct.mlxsw_event_listener* %event_listener, i8* %8) #11, !dbg !10455
  store i32 %call, i32* %retval, align 4, !dbg !10456
  br label %return, !dbg !10456

if.else:                                          ; preds = %entry
  %9 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !10457
  %10 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listener.addr, align 8, !dbg !10459
  %11 = getelementptr inbounds %struct.mlxsw_listener, %struct.mlxsw_listener* %10, i32 0, i32 1, !dbg !10460
  %rx_listener = bitcast %union.anon.132* %11 to %struct.mlxsw_rx_listener*, !dbg !10460
  %12 = load i8*, i8** %priv.addr, align 8, !dbg !10461
  %13 = load i8, i8* %enabled.addr, align 1, !dbg !10462
  %tobool23 = trunc i8 %13 to i1, !dbg !10462
  %call24 = call i32 @mlxsw_core_rx_listener_register(%struct.mlxsw_core* %9, %struct.mlxsw_rx_listener* %rx_listener, i8* %12, i1 zeroext %tobool23) #11, !dbg !10463
  store i32 %call24, i32* %retval, align 4, !dbg !10464
  br label %return, !dbg !10464

return:                                           ; preds = %if.else, %if.end
  %14 = load i32, i32* %retval, align 4, !dbg !10465
  ret i32 %14, !dbg !10465
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_hpkt_pack(i8* %payload, i8 zeroext %action, i16 zeroext %trap_id, i32 %trap_group, i1 zeroext %is_ctrl) #0 !dbg !10466 {
entry:
  %payload.addr = alloca i8*, align 8
  %action.addr = alloca i8, align 1
  %trap_id.addr = alloca i16, align 2
  %trap_group.addr = alloca i32, align 4
  %is_ctrl.addr = alloca i8, align 1
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !10469, metadata !DIExpression()), !dbg !10470
  store i8 %action, i8* %action.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %action.addr, metadata !10471, metadata !DIExpression()), !dbg !10472
  store i16 %trap_id, i16* %trap_id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %trap_id.addr, metadata !10473, metadata !DIExpression()), !dbg !10474
  store i32 %trap_group, i32* %trap_group.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %trap_group.addr, metadata !10475, metadata !DIExpression()), !dbg !10476
  %frombool = zext i1 %is_ctrl to i8
  store i8 %frombool, i8* %is_ctrl.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_ctrl.addr, metadata !10477, metadata !DIExpression()), !dbg !10478
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !10479
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_hpkt, i32 0, i32 1), align 2, !dbg !10479
  %conv = zext i16 %1 to i64, !dbg !10479
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !10479
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !10480
  call void @mlxsw_reg_hpkt_ack_set(i8* %2, i32 0) #11, !dbg !10481
  %3 = load i8*, i8** %payload.addr, align 8, !dbg !10482
  %4 = load i8, i8* %action.addr, align 1, !dbg !10483
  %conv1 = zext i8 %4 to i32, !dbg !10483
  call void @mlxsw_reg_hpkt_action_set(i8* %3, i32 %conv1) #11, !dbg !10484
  %5 = load i8*, i8** %payload.addr, align 8, !dbg !10485
  %6 = load i32, i32* %trap_group.addr, align 4, !dbg !10486
  call void @mlxsw_reg_hpkt_trap_group_set(i8* %5, i32 %6) #11, !dbg !10487
  %7 = load i8*, i8** %payload.addr, align 8, !dbg !10488
  %8 = load i16, i16* %trap_id.addr, align 2, !dbg !10489
  %conv2 = zext i16 %8 to i32, !dbg !10489
  call void @mlxsw_reg_hpkt_trap_id_set(i8* %7, i32 %conv2) #11, !dbg !10490
  %9 = load i8*, i8** %payload.addr, align 8, !dbg !10491
  %10 = load i8, i8* %is_ctrl.addr, align 1, !dbg !10492
  %tobool = trunc i8 %10 to i1, !dbg !10492
  %11 = zext i1 %tobool to i64, !dbg !10492
  %cond = select i1 %tobool, i32 2, i32 1, !dbg !10492
  call void @mlxsw_reg_hpkt_ctrl_set(i8* %9, i32 %cond) #11, !dbg !10493
  ret void, !dbg !10494
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_reg_write(%struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_reg_info* %reg, i8* %payload) #0 !dbg !10495 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %reg.addr = alloca %struct.mlxsw_reg_info*, align 8
  %payload.addr = alloca i8*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !10498, metadata !DIExpression()), !dbg !10499
  store %struct.mlxsw_reg_info* %reg, %struct.mlxsw_reg_info** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_reg_info** %reg.addr, metadata !10500, metadata !DIExpression()), !dbg !10501
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !10502, metadata !DIExpression()), !dbg !10503
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !10504
  %1 = load %struct.mlxsw_reg_info*, %struct.mlxsw_reg_info** %reg.addr, align 8, !dbg !10505
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !10506
  %call = call i32 @mlxsw_core_reg_access(%struct.mlxsw_core* %0, %struct.mlxsw_reg_info* %1, i8* %2, i32 1) #11, !dbg !10507
  ret i32 %call, !dbg !10508
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_core_listener_unregister(%struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_listener* %listener, i8* %priv) #0 !dbg !10509 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %listener.addr = alloca %struct.mlxsw_listener*, align 8
  %priv.addr = alloca i8*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !10512, metadata !DIExpression()), !dbg !10513
  store %struct.mlxsw_listener* %listener, %struct.mlxsw_listener** %listener.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_listener** %listener.addr, metadata !10514, metadata !DIExpression()), !dbg !10515
  store i8* %priv, i8** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %priv.addr, metadata !10516, metadata !DIExpression()), !dbg !10517
  %0 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listener.addr, align 8, !dbg !10518
  %is_event = getelementptr inbounds %struct.mlxsw_listener, %struct.mlxsw_listener* %0, i32 0, i32 6, !dbg !10520
  %bf.load = load i8, i8* %is_event, align 2, !dbg !10520
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !10520
  %bf.clear = and i8 %bf.lshr, 1, !dbg !10520
  %tobool = icmp ne i8 %bf.clear, 0, !dbg !10518
  br i1 %tobool, label %if.then, label %if.else, !dbg !10521

if.then:                                          ; preds = %entry
  %1 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !10522
  %2 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listener.addr, align 8, !dbg !10523
  %3 = getelementptr inbounds %struct.mlxsw_listener, %struct.mlxsw_listener* %2, i32 0, i32 1, !dbg !10524
  %event_listener = bitcast %union.anon.132* %3 to %struct.mlxsw_event_listener*, !dbg !10524
  call void @mlxsw_core_event_listener_unregister(%struct.mlxsw_core* %1, %struct.mlxsw_event_listener* %event_listener) #11, !dbg !10525
  br label %if.end, !dbg !10525

if.else:                                          ; preds = %entry
  %4 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !10526
  %5 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listener.addr, align 8, !dbg !10527
  %6 = getelementptr inbounds %struct.mlxsw_listener, %struct.mlxsw_listener* %5, i32 0, i32 1, !dbg !10528
  %rx_listener = bitcast %union.anon.132* %6 to %struct.mlxsw_rx_listener*, !dbg !10528
  call void @mlxsw_core_rx_listener_unregister(%struct.mlxsw_core* %4, %struct.mlxsw_rx_listener* %rx_listener) #11, !dbg !10529
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !10530
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlxsw_core_trap_unregister(%struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_listener* %listener, i8* %priv) #0 !dbg !10531 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %listener.addr = alloca %struct.mlxsw_listener*, align 8
  %priv.addr = alloca i8*, align 8
  %hpkt_pl = alloca [16 x i8], align 16
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !10532, metadata !DIExpression()), !dbg !10533
  store %struct.mlxsw_listener* %listener, %struct.mlxsw_listener** %listener.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_listener** %listener.addr, metadata !10534, metadata !DIExpression()), !dbg !10535
  store i8* %priv, i8** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %priv.addr, metadata !10536, metadata !DIExpression()), !dbg !10537
  call void @llvm.dbg.declare(metadata [16 x i8]* %hpkt_pl, metadata !10538, metadata !DIExpression()), !dbg !10539
  %0 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listener.addr, align 8, !dbg !10540
  %is_event = getelementptr inbounds %struct.mlxsw_listener, %struct.mlxsw_listener* %0, i32 0, i32 6, !dbg !10542
  %bf.load = load i8, i8* %is_event, align 2, !dbg !10542
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !10542
  %bf.clear = and i8 %bf.lshr, 1, !dbg !10542
  %tobool = icmp ne i8 %bf.clear, 0, !dbg !10540
  br i1 %tobool, label %if.end, label %if.then, !dbg !10543

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %hpkt_pl, i64 0, i64 0, !dbg !10544
  %1 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listener.addr, align 8, !dbg !10546
  %dis_action = getelementptr inbounds %struct.mlxsw_listener, %struct.mlxsw_listener* %1, i32 0, i32 3, !dbg !10547
  %2 = load i32, i32* %dis_action, align 4, !dbg !10547
  %conv = trunc i32 %2 to i8, !dbg !10546
  %3 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listener.addr, align 8, !dbg !10548
  %trap_id = getelementptr inbounds %struct.mlxsw_listener, %struct.mlxsw_listener* %3, i32 0, i32 0, !dbg !10549
  %4 = load i16, i16* %trap_id, align 8, !dbg !10549
  %5 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listener.addr, align 8, !dbg !10550
  %dis_trap_group = getelementptr inbounds %struct.mlxsw_listener, %struct.mlxsw_listener* %5, i32 0, i32 5, !dbg !10551
  %6 = load i8, i8* %dis_trap_group, align 1, !dbg !10551
  %conv1 = zext i8 %6 to i32, !dbg !10550
  %7 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listener.addr, align 8, !dbg !10552
  %is_ctrl = getelementptr inbounds %struct.mlxsw_listener, %struct.mlxsw_listener* %7, i32 0, i32 6, !dbg !10553
  %bf.load2 = load i8, i8* %is_ctrl, align 2, !dbg !10553
  %bf.clear3 = and i8 %bf.load2, 1, !dbg !10553
  %tobool4 = icmp ne i8 %bf.clear3, 0, !dbg !10552
  call void @mlxsw_reg_hpkt_pack(i8* %arraydecay, i8 zeroext %conv, i16 zeroext %4, i32 %conv1, i1 zeroext %tobool4) #11, !dbg !10554
  %8 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !10555
  %arraydecay5 = getelementptr inbounds [16 x i8], [16 x i8]* %hpkt_pl, i64 0, i64 0, !dbg !10556
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %8, %struct.mlxsw_reg_info* @mlxsw_reg_hpkt, i8* %arraydecay5) #11, !dbg !10557
  br label %if.end, !dbg !10558

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !10559
  %10 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listener.addr, align 8, !dbg !10560
  %11 = load i8*, i8** %priv.addr, align 8, !dbg !10561
  call void @mlxsw_core_listener_unregister(%struct.mlxsw_core* %9, %struct.mlxsw_listener* %10, i8* %11) #11, !dbg !10562
  ret void, !dbg !10563
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_core_trap_state_set(%struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_listener* %listener, i1 zeroext %enabled) #0 !dbg !10564 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %listener.addr = alloca %struct.mlxsw_listener*, align 8
  %enabled.addr = alloca i8, align 1
  %trap_group = alloca i32, align 4
  %action = alloca i32, align 4
  %hpkt_pl = alloca [16 x i8], align 16
  %err = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !10567, metadata !DIExpression()), !dbg !10568
  store %struct.mlxsw_listener* %listener, %struct.mlxsw_listener** %listener.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_listener** %listener.addr, metadata !10569, metadata !DIExpression()), !dbg !10570
  %frombool = zext i1 %enabled to i8
  store i8 %frombool, i8* %enabled.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enabled.addr, metadata !10571, metadata !DIExpression()), !dbg !10572
  call void @llvm.dbg.declare(metadata i32* %trap_group, metadata !10573, metadata !DIExpression()), !dbg !10574
  call void @llvm.dbg.declare(metadata i32* %action, metadata !10575, metadata !DIExpression()), !dbg !10576
  call void @llvm.dbg.declare(metadata [16 x i8]* %hpkt_pl, metadata !10577, metadata !DIExpression()), !dbg !10578
  call void @llvm.dbg.declare(metadata i32* %err, metadata !10579, metadata !DIExpression()), !dbg !10580
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10581, metadata !DIExpression()), !dbg !10584
  %0 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listener.addr, align 8, !dbg !10584
  %is_event = getelementptr inbounds %struct.mlxsw_listener, %struct.mlxsw_listener* %0, i32 0, i32 6, !dbg !10584
  %bf.load = load i8, i8* %is_event, align 2, !dbg !10584
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !10584
  %bf.clear = and i8 %bf.lshr, 1, !dbg !10584
  %tobool = icmp ne i8 %bf.clear, 0, !dbg !10584
  %lnot = xor i1 %tobool, true, !dbg !10584
  %lnot1 = xor i1 %lnot, true, !dbg !10584
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10584
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !10584
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !10585
  %tobool2 = icmp ne i32 %1, 0, !dbg !10585
  %lnot3 = xor i1 %tobool2, true, !dbg !10585
  %lnot5 = xor i1 %lnot3, true, !dbg !10585
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !10585
  %conv = sext i32 %lnot.ext6 to i64, !dbg !10585
  %tobool7 = icmp ne i64 %conv, 0, !dbg !10585
  br i1 %tobool7, label %if.then, label %if.end, !dbg !10584

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !10585

do.body:                                          ; preds = %if.then
  br label %do.body8, !dbg !10587

do.body8:                                         ; preds = %do.body
  br label %do.end, !dbg !10589

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !10587

do.body9:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 2362, i32 2305, i64 12) #10, !dbg !10591, !srcloc !10593
  br label %do.end10, !dbg !10591

do.end10:                                         ; preds = %do.body9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 370) #10, !dbg !10594, !srcloc !10596
  br label %do.body11, !dbg !10587

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !10597

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !10587

do.end13:                                         ; preds = %do.end12
  br label %if.end, !dbg !10587

if.end:                                           ; preds = %do.end13, %entry
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !10584
  %tobool14 = icmp ne i32 %2, 0, !dbg !10584
  %lnot15 = xor i1 %tobool14, true, !dbg !10584
  %lnot17 = xor i1 %lnot15, true, !dbg !10584
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !10584
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !10584
  store i64 %conv19, i64* %tmp, align 8, !dbg !10585
  %3 = load i64, i64* %tmp, align 8, !dbg !10584
  %tobool20 = icmp ne i64 %3, 0, !dbg !10599
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !10600

if.then21:                                        ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !10601
  br label %return, !dbg !10601

if.end22:                                         ; preds = %if.end
  %4 = load i8, i8* %enabled.addr, align 1, !dbg !10602
  %tobool23 = trunc i8 %4 to i1, !dbg !10602
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !10602

cond.true:                                        ; preds = %if.end22
  %5 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listener.addr, align 8, !dbg !10603
  %en_action = getelementptr inbounds %struct.mlxsw_listener, %struct.mlxsw_listener* %5, i32 0, i32 2, !dbg !10604
  %6 = load i32, i32* %en_action, align 8, !dbg !10604
  br label %cond.end, !dbg !10602

cond.false:                                       ; preds = %if.end22
  %7 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listener.addr, align 8, !dbg !10605
  %dis_action = getelementptr inbounds %struct.mlxsw_listener, %struct.mlxsw_listener* %7, i32 0, i32 3, !dbg !10606
  %8 = load i32, i32* %dis_action, align 4, !dbg !10606
  br label %cond.end, !dbg !10602

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %6, %cond.true ], [ %8, %cond.false ], !dbg !10602
  store i32 %cond, i32* %action, align 4, !dbg !10607
  %9 = load i8, i8* %enabled.addr, align 1, !dbg !10608
  %tobool25 = trunc i8 %9 to i1, !dbg !10608
  br i1 %tobool25, label %cond.true27, label %cond.false29, !dbg !10608

cond.true27:                                      ; preds = %cond.end
  %10 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listener.addr, align 8, !dbg !10609
  %en_trap_group = getelementptr inbounds %struct.mlxsw_listener, %struct.mlxsw_listener* %10, i32 0, i32 4, !dbg !10610
  %11 = load i8, i8* %en_trap_group, align 8, !dbg !10610
  %conv28 = zext i8 %11 to i32, !dbg !10609
  br label %cond.end31, !dbg !10608

cond.false29:                                     ; preds = %cond.end
  %12 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listener.addr, align 8, !dbg !10611
  %dis_trap_group = getelementptr inbounds %struct.mlxsw_listener, %struct.mlxsw_listener* %12, i32 0, i32 5, !dbg !10612
  %13 = load i8, i8* %dis_trap_group, align 1, !dbg !10612
  %conv30 = zext i8 %13 to i32, !dbg !10611
  br label %cond.end31, !dbg !10608

cond.end31:                                       ; preds = %cond.false29, %cond.true27
  %cond32 = phi i32 [ %conv28, %cond.true27 ], [ %conv30, %cond.false29 ], !dbg !10608
  store i32 %cond32, i32* %trap_group, align 4, !dbg !10613
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %hpkt_pl, i64 0, i64 0, !dbg !10614
  %14 = load i32, i32* %action, align 4, !dbg !10615
  %conv33 = trunc i32 %14 to i8, !dbg !10615
  %15 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listener.addr, align 8, !dbg !10616
  %trap_id = getelementptr inbounds %struct.mlxsw_listener, %struct.mlxsw_listener* %15, i32 0, i32 0, !dbg !10617
  %16 = load i16, i16* %trap_id, align 8, !dbg !10617
  %17 = load i32, i32* %trap_group, align 4, !dbg !10618
  %18 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listener.addr, align 8, !dbg !10619
  %is_ctrl = getelementptr inbounds %struct.mlxsw_listener, %struct.mlxsw_listener* %18, i32 0, i32 6, !dbg !10620
  %bf.load34 = load i8, i8* %is_ctrl, align 2, !dbg !10620
  %bf.clear35 = and i8 %bf.load34, 1, !dbg !10620
  %tobool36 = icmp ne i8 %bf.clear35, 0, !dbg !10619
  call void @mlxsw_reg_hpkt_pack(i8* %arraydecay, i8 zeroext %conv33, i16 zeroext %16, i32 %17, i1 zeroext %tobool36) #11, !dbg !10621
  %19 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !10622
  %arraydecay37 = getelementptr inbounds [16 x i8], [16 x i8]* %hpkt_pl, i64 0, i64 0, !dbg !10623
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %19, %struct.mlxsw_reg_info* @mlxsw_reg_hpkt, i8* %arraydecay37) #11, !dbg !10624
  store i32 %call, i32* %err, align 4, !dbg !10625
  %20 = load i32, i32* %err, align 4, !dbg !10626
  %tobool38 = icmp ne i32 %20, 0, !dbg !10626
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !10628

if.then39:                                        ; preds = %cond.end31
  %21 = load i32, i32* %err, align 4, !dbg !10629
  store i32 %21, i32* %retval, align 4, !dbg !10630
  br label %return, !dbg !10630

if.end40:                                         ; preds = %cond.end31
  %22 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !10631
  %23 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listener.addr, align 8, !dbg !10632
  %24 = getelementptr inbounds %struct.mlxsw_listener, %struct.mlxsw_listener* %23, i32 0, i32 1, !dbg !10633
  %rx_listener = bitcast %union.anon.132* %24 to %struct.mlxsw_rx_listener*, !dbg !10633
  %25 = load i8, i8* %enabled.addr, align 1, !dbg !10634
  %tobool41 = trunc i8 %25 to i1, !dbg !10634
  call void @mlxsw_core_rx_listener_state_set(%struct.mlxsw_core* %22, %struct.mlxsw_rx_listener* %rx_listener, i1 zeroext %tobool41) #11, !dbg !10635
  store i32 0, i32* %retval, align 4, !dbg !10636
  br label %return, !dbg !10636

return:                                           ; preds = %if.end40, %if.then39, %if.then21
  %26 = load i32, i32* %retval, align 4, !dbg !10637
  ret i32 %26, !dbg !10637
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_core_rx_listener_state_set(%struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_rx_listener* %rxl, i1 zeroext %enabled) #0 !dbg !10638 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %rxl.addr = alloca %struct.mlxsw_rx_listener*, align 8
  %enabled.addr = alloca i8, align 1
  %rxl_item = alloca %struct.mlxsw_rx_listener_item*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !10641, metadata !DIExpression()), !dbg !10642
  store %struct.mlxsw_rx_listener* %rxl, %struct.mlxsw_rx_listener** %rxl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_rx_listener** %rxl.addr, metadata !10643, metadata !DIExpression()), !dbg !10644
  %frombool = zext i1 %enabled to i8
  store i8 %frombool, i8* %enabled.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enabled.addr, metadata !10645, metadata !DIExpression()), !dbg !10646
  call void @llvm.dbg.declare(metadata %struct.mlxsw_rx_listener_item** %rxl_item, metadata !10647, metadata !DIExpression()), !dbg !10648
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !10649
  %1 = load %struct.mlxsw_rx_listener*, %struct.mlxsw_rx_listener** %rxl.addr, align 8, !dbg !10650
  %call = call %struct.mlxsw_rx_listener_item* @__find_rx_listener_item(%struct.mlxsw_core* %0, %struct.mlxsw_rx_listener* %1) #11, !dbg !10651
  store %struct.mlxsw_rx_listener_item* %call, %struct.mlxsw_rx_listener_item** %rxl_item, align 8, !dbg !10652
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10653, metadata !DIExpression()), !dbg !10656
  %2 = load %struct.mlxsw_rx_listener_item*, %struct.mlxsw_rx_listener_item** %rxl_item, align 8, !dbg !10656
  %tobool = icmp ne %struct.mlxsw_rx_listener_item* %2, null, !dbg !10656
  %lnot = xor i1 %tobool, true, !dbg !10656
  %lnot1 = xor i1 %lnot, true, !dbg !10656
  %lnot2 = xor i1 %lnot1, true, !dbg !10656
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !10656
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !10656
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !10657
  %tobool3 = icmp ne i32 %3, 0, !dbg !10657
  %lnot4 = xor i1 %tobool3, true, !dbg !10657
  %lnot6 = xor i1 %lnot4, true, !dbg !10657
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !10657
  %conv = sext i32 %lnot.ext7 to i64, !dbg !10657
  %tobool8 = icmp ne i64 %conv, 0, !dbg !10657
  br i1 %tobool8, label %if.then, label %if.end, !dbg !10656

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !10657

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !10659

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !10661

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !10659

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 2174, i32 2305, i64 12) #10, !dbg !10663, !srcloc !10665
  br label %do.end11, !dbg !10663

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 366) #10, !dbg !10666, !srcloc !10668
  br label %do.body12, !dbg !10659

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !10669

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !10659

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !10659

if.end:                                           ; preds = %do.end14, %entry
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !10656
  %tobool15 = icmp ne i32 %4, 0, !dbg !10656
  %lnot16 = xor i1 %tobool15, true, !dbg !10656
  %lnot18 = xor i1 %lnot16, true, !dbg !10656
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !10656
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !10656
  store i64 %conv20, i64* %tmp, align 8, !dbg !10657
  %5 = load i64, i64* %tmp, align 8, !dbg !10656
  %tobool21 = icmp ne i64 %5, 0, !dbg !10671
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !10672

if.then22:                                        ; preds = %if.end
  br label %return, !dbg !10673

if.end23:                                         ; preds = %if.end
  %6 = load i8, i8* %enabled.addr, align 1, !dbg !10674
  %tobool24 = trunc i8 %6 to i1, !dbg !10674
  %7 = load %struct.mlxsw_rx_listener_item*, %struct.mlxsw_rx_listener_item** %rxl_item, align 8, !dbg !10675
  %enabled25 = getelementptr inbounds %struct.mlxsw_rx_listener_item, %struct.mlxsw_rx_listener_item* %7, i32 0, i32 3, !dbg !10676
  %frombool26 = zext i1 %tobool24 to i8, !dbg !10677
  store i8 %frombool26, i8* %enabled25, align 8, !dbg !10677
  br label %return, !dbg !10678

return:                                           ; preds = %if.end23, %if.then22
  ret void, !dbg !10678
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_reg_trans_query(%struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_reg_info* %reg, i8* %payload, %struct.list_head* %bulk_list, void (%struct.mlxsw_core*, i8*, i64, i64)* %cb, i64 %cb_priv) #0 !dbg !10679 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %reg.addr = alloca %struct.mlxsw_reg_info*, align 8
  %payload.addr = alloca i8*, align 8
  %bulk_list.addr = alloca %struct.list_head*, align 8
  %cb.addr = alloca void (%struct.mlxsw_core*, i8*, i64, i64)*, align 8
  %cb_priv.addr = alloca i64, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !10682, metadata !DIExpression()), !dbg !10683
  store %struct.mlxsw_reg_info* %reg, %struct.mlxsw_reg_info** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_reg_info** %reg.addr, metadata !10684, metadata !DIExpression()), !dbg !10685
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !10686, metadata !DIExpression()), !dbg !10687
  store %struct.list_head* %bulk_list, %struct.list_head** %bulk_list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %bulk_list.addr, metadata !10688, metadata !DIExpression()), !dbg !10689
  store void (%struct.mlxsw_core*, i8*, i64, i64)* %cb, void (%struct.mlxsw_core*, i8*, i64, i64)** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.mlxsw_core*, i8*, i64, i64)** %cb.addr, metadata !10690, metadata !DIExpression()), !dbg !10691
  store i64 %cb_priv, i64* %cb_priv.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %cb_priv.addr, metadata !10692, metadata !DIExpression()), !dbg !10693
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !10694
  %1 = load %struct.mlxsw_reg_info*, %struct.mlxsw_reg_info** %reg.addr, align 8, !dbg !10695
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !10696
  %3 = load %struct.list_head*, %struct.list_head** %bulk_list.addr, align 8, !dbg !10697
  %4 = load void (%struct.mlxsw_core*, i8*, i64, i64)*, void (%struct.mlxsw_core*, i8*, i64, i64)** %cb.addr, align 8, !dbg !10698
  %5 = load i64, i64* %cb_priv.addr, align 8, !dbg !10699
  %call = call i32 @mlxsw_core_reg_access_emad(%struct.mlxsw_core* %0, %struct.mlxsw_reg_info* %1, i8* %2, i32 0, %struct.list_head* %3, void (%struct.mlxsw_core*, i8*, i64, i64)* %4, i64 %5) #11, !dbg !10700
  ret i32 %call, !dbg !10701
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_core_reg_access_emad(%struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_reg_info* %reg, i8* %payload, i32 %type, %struct.list_head* %bulk_list, void (%struct.mlxsw_core*, i8*, i64, i64)* %cb, i64 %cb_priv) #0 !dbg !10702 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %reg.addr = alloca %struct.mlxsw_reg_info*, align 8
  %payload.addr = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  %bulk_list.addr = alloca %struct.list_head*, align 8
  %cb.addr = alloca void (%struct.mlxsw_core*, i8*, i64, i64)*, align 8
  %cb_priv.addr = alloca i64, align 8
  %tid = alloca i64, align 8
  %trans = alloca %struct.mlxsw_reg_trans*, align 8
  %err = alloca i32, align 4
  %___p = alloca %struct.mlxsw_reg_trans*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !10705, metadata !DIExpression()), !dbg !10706
  store %struct.mlxsw_reg_info* %reg, %struct.mlxsw_reg_info** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_reg_info** %reg.addr, metadata !10707, metadata !DIExpression()), !dbg !10708
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !10709, metadata !DIExpression()), !dbg !10710
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !10711, metadata !DIExpression()), !dbg !10712
  store %struct.list_head* %bulk_list, %struct.list_head** %bulk_list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %bulk_list.addr, metadata !10713, metadata !DIExpression()), !dbg !10714
  store void (%struct.mlxsw_core*, i8*, i64, i64)* %cb, void (%struct.mlxsw_core*, i8*, i64, i64)** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.mlxsw_core*, i8*, i64, i64)** %cb.addr, metadata !10715, metadata !DIExpression()), !dbg !10716
  store i64 %cb_priv, i64* %cb_priv.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %cb_priv.addr, metadata !10717, metadata !DIExpression()), !dbg !10718
  call void @llvm.dbg.declare(metadata i64* %tid, metadata !10719, metadata !DIExpression()), !dbg !10720
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !10721
  %call = call i64 @mlxsw_core_tid_get(%struct.mlxsw_core* %0) #11, !dbg !10722
  store i64 %call, i64* %tid, align 8, !dbg !10720
  call void @llvm.dbg.declare(metadata %struct.mlxsw_reg_trans** %trans, metadata !10723, metadata !DIExpression()), !dbg !10724
  call void @llvm.dbg.declare(metadata i32* %err, metadata !10725, metadata !DIExpression()), !dbg !10726
  %call1 = call i8* @kzalloc(i64 256, i32 3264) #11, !dbg !10727
  %1 = bitcast i8* %call1 to %struct.mlxsw_reg_trans*, !dbg !10727
  store %struct.mlxsw_reg_trans* %1, %struct.mlxsw_reg_trans** %trans, align 8, !dbg !10728
  %2 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans, align 8, !dbg !10729
  %tobool = icmp ne %struct.mlxsw_reg_trans* %2, null, !dbg !10729
  br i1 %tobool, label %if.end, label %if.then, !dbg !10731

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !10732
  br label %return, !dbg !10732

if.end:                                           ; preds = %entry
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !10733
  %4 = load %struct.mlxsw_reg_info*, %struct.mlxsw_reg_info** %reg.addr, align 8, !dbg !10734
  %5 = load i8*, i8** %payload.addr, align 8, !dbg !10735
  %6 = load i32, i32* %type.addr, align 4, !dbg !10736
  %7 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans, align 8, !dbg !10737
  %8 = load %struct.list_head*, %struct.list_head** %bulk_list.addr, align 8, !dbg !10738
  %9 = load void (%struct.mlxsw_core*, i8*, i64, i64)*, void (%struct.mlxsw_core*, i8*, i64, i64)** %cb.addr, align 8, !dbg !10739
  %10 = load i64, i64* %cb_priv.addr, align 8, !dbg !10740
  %11 = load i64, i64* %tid, align 8, !dbg !10741
  %call2 = call i32 @mlxsw_emad_reg_access(%struct.mlxsw_core* %3, %struct.mlxsw_reg_info* %4, i8* %5, i32 %6, %struct.mlxsw_reg_trans* %7, %struct.list_head* %8, void (%struct.mlxsw_core*, i8*, i64, i64)* %9, i64 %10, i64 %11) #11, !dbg !10742
  store i32 %call2, i32* %err, align 4, !dbg !10743
  %12 = load i32, i32* %err, align 4, !dbg !10744
  %tobool3 = icmp ne i32 %12, 0, !dbg !10744
  br i1 %tobool3, label %if.then4, label %if.end12, !dbg !10746

if.then4:                                         ; preds = %if.end
  br label %do.body, !dbg !10747

do.body:                                          ; preds = %if.then4
  call void @llvm.dbg.declare(metadata %struct.mlxsw_reg_trans** %___p, metadata !10749, metadata !DIExpression()), !dbg !10751
  %13 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans, align 8, !dbg !10751
  store %struct.mlxsw_reg_trans* %13, %struct.mlxsw_reg_trans** %___p, align 8, !dbg !10751
  %14 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %___p, align 8, !dbg !10752
  %tobool5 = icmp ne %struct.mlxsw_reg_trans* %14, null, !dbg !10752
  br i1 %tobool5, label %if.then6, label %if.end10, !dbg !10751

if.then6:                                         ; preds = %do.body
  br label %do.body7, !dbg !10752

do.body7:                                         ; preds = %if.then6
  br label %do.body8, !dbg !10754

do.body8:                                         ; preds = %do.body7
  br label %do.end, !dbg !10756

do.end:                                           ; preds = %do.body8
  %15 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %___p, align 8, !dbg !10754
  %rcu = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %15, i32 0, i32 17, !dbg !10754
  call void @kvfree_call_rcu(%struct.callback_head* %rcu, void (%struct.callback_head*)* inttoptr (i64 240 to void (%struct.callback_head*)*)) #11, !dbg !10754
  br label %do.end9, !dbg !10754

do.end9:                                          ; preds = %do.end
  br label %if.end10, !dbg !10754

if.end10:                                         ; preds = %do.end9, %do.body
  br label %do.end11, !dbg !10751

do.end11:                                         ; preds = %if.end10
  %16 = load i32, i32* %err, align 4, !dbg !10758
  store i32 %16, i32* %retval, align 4, !dbg !10759
  br label %return, !dbg !10759

if.end12:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !10760
  br label %return, !dbg !10760

return:                                           ; preds = %if.end12, %do.end11, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !10761
  ret i32 %17, !dbg !10761
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_reg_trans_write(%struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_reg_info* %reg, i8* %payload, %struct.list_head* %bulk_list, void (%struct.mlxsw_core*, i8*, i64, i64)* %cb, i64 %cb_priv) #0 !dbg !10762 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %reg.addr = alloca %struct.mlxsw_reg_info*, align 8
  %payload.addr = alloca i8*, align 8
  %bulk_list.addr = alloca %struct.list_head*, align 8
  %cb.addr = alloca void (%struct.mlxsw_core*, i8*, i64, i64)*, align 8
  %cb_priv.addr = alloca i64, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !10763, metadata !DIExpression()), !dbg !10764
  store %struct.mlxsw_reg_info* %reg, %struct.mlxsw_reg_info** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_reg_info** %reg.addr, metadata !10765, metadata !DIExpression()), !dbg !10766
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !10767, metadata !DIExpression()), !dbg !10768
  store %struct.list_head* %bulk_list, %struct.list_head** %bulk_list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %bulk_list.addr, metadata !10769, metadata !DIExpression()), !dbg !10770
  store void (%struct.mlxsw_core*, i8*, i64, i64)* %cb, void (%struct.mlxsw_core*, i8*, i64, i64)** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.mlxsw_core*, i8*, i64, i64)** %cb.addr, metadata !10771, metadata !DIExpression()), !dbg !10772
  store i64 %cb_priv, i64* %cb_priv.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %cb_priv.addr, metadata !10773, metadata !DIExpression()), !dbg !10774
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !10775
  %1 = load %struct.mlxsw_reg_info*, %struct.mlxsw_reg_info** %reg.addr, align 8, !dbg !10776
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !10777
  %3 = load %struct.list_head*, %struct.list_head** %bulk_list.addr, align 8, !dbg !10778
  %4 = load void (%struct.mlxsw_core*, i8*, i64, i64)*, void (%struct.mlxsw_core*, i8*, i64, i64)** %cb.addr, align 8, !dbg !10779
  %5 = load i64, i64* %cb_priv.addr, align 8, !dbg !10780
  %call = call i32 @mlxsw_core_reg_access_emad(%struct.mlxsw_core* %0, %struct.mlxsw_reg_info* %1, i8* %2, i32 1, %struct.list_head* %3, void (%struct.mlxsw_core*, i8*, i64, i64)* %4, i64 %5) #11, !dbg !10781
  ret i32 %call, !dbg !10782
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_reg_trans_bulk_wait(%struct.list_head* %bulk_list) #0 !dbg !10783 {
entry:
  %bulk_list.addr = alloca %struct.list_head*, align 8
  %trans = alloca %struct.mlxsw_reg_trans*, align 8
  %tmp = alloca %struct.mlxsw_reg_trans*, align 8
  %sum_err = alloca i32, align 4
  %err = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp1 = alloca %struct.mlxsw_reg_trans*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp7 = alloca %struct.mlxsw_reg_trans*, align 8
  %__mptr11 = alloca i8*, align 8
  %tmp16 = alloca %struct.mlxsw_reg_trans*, align 8
  store %struct.list_head* %bulk_list, %struct.list_head** %bulk_list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %bulk_list.addr, metadata !10786, metadata !DIExpression()), !dbg !10787
  call void @llvm.dbg.declare(metadata %struct.mlxsw_reg_trans** %trans, metadata !10788, metadata !DIExpression()), !dbg !10789
  call void @llvm.dbg.declare(metadata %struct.mlxsw_reg_trans** %tmp, metadata !10790, metadata !DIExpression()), !dbg !10791
  call void @llvm.dbg.declare(metadata i32* %sum_err, metadata !10792, metadata !DIExpression()), !dbg !10793
  store i32 0, i32* %sum_err, align 4, !dbg !10793
  call void @llvm.dbg.declare(metadata i32* %err, metadata !10794, metadata !DIExpression()), !dbg !10795
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10796, metadata !DIExpression()), !dbg !10799
  %0 = load %struct.list_head*, %struct.list_head** %bulk_list.addr, align 8, !dbg !10799
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !10799
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10799
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !10799
  store i8* %2, i8** %__mptr, align 8, !dbg !10799
  br label %do.body, !dbg !10799

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10800

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !10799
  %add.ptr = getelementptr i8, i8* %3, i64 -16, !dbg !10799
  %4 = bitcast i8* %add.ptr to %struct.mlxsw_reg_trans*, !dbg !10799
  store %struct.mlxsw_reg_trans* %4, %struct.mlxsw_reg_trans** %tmp1, align 8, !dbg !10800
  %5 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %tmp1, align 8, !dbg !10799
  store %struct.mlxsw_reg_trans* %5, %struct.mlxsw_reg_trans** %trans, align 8, !dbg !10802
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !10803, metadata !DIExpression()), !dbg !10805
  %6 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans, align 8, !dbg !10805
  %bulk_list3 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %6, i32 0, i32 1, !dbg !10805
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %bulk_list3, i32 0, i32 0, !dbg !10805
  %7 = load %struct.list_head*, %struct.list_head** %next4, align 8, !dbg !10805
  %8 = bitcast %struct.list_head* %7 to i8*, !dbg !10805
  store i8* %8, i8** %__mptr2, align 8, !dbg !10805
  br label %do.body5, !dbg !10805

do.body5:                                         ; preds = %do.end
  br label %do.end6, !dbg !10806

do.end6:                                          ; preds = %do.body5
  %9 = load i8*, i8** %__mptr2, align 8, !dbg !10805
  %add.ptr8 = getelementptr i8, i8* %9, i64 -16, !dbg !10805
  %10 = bitcast i8* %add.ptr8 to %struct.mlxsw_reg_trans*, !dbg !10805
  store %struct.mlxsw_reg_trans* %10, %struct.mlxsw_reg_trans** %tmp7, align 8, !dbg !10806
  %11 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %tmp7, align 8, !dbg !10805
  store %struct.mlxsw_reg_trans* %11, %struct.mlxsw_reg_trans** %tmp, align 8, !dbg !10802
  br label %for.cond, !dbg !10802

for.cond:                                         ; preds = %do.end15, %do.end6
  %12 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans, align 8, !dbg !10808
  %bulk_list9 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %12, i32 0, i32 1, !dbg !10808
  %13 = load %struct.list_head*, %struct.list_head** %bulk_list.addr, align 8, !dbg !10808
  %cmp = icmp eq %struct.list_head* %bulk_list9, %13, !dbg !10808
  %lnot = xor i1 %cmp, true, !dbg !10808
  br i1 %lnot, label %for.body, label %for.end, !dbg !10802

for.body:                                         ; preds = %for.cond
  %14 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans, align 8, !dbg !10810
  %call = call i32 @mlxsw_reg_trans_wait(%struct.mlxsw_reg_trans* %14) #11, !dbg !10812
  store i32 %call, i32* %err, align 4, !dbg !10813
  %15 = load i32, i32* %err, align 4, !dbg !10814
  %tobool = icmp ne i32 %15, 0, !dbg !10814
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !10816

land.lhs.true:                                    ; preds = %for.body
  %16 = load i32, i32* %sum_err, align 4, !dbg !10817
  %cmp10 = icmp eq i32 %16, 0, !dbg !10818
  br i1 %cmp10, label %if.then, label %if.end, !dbg !10819

if.then:                                          ; preds = %land.lhs.true
  %17 = load i32, i32* %err, align 4, !dbg !10820
  store i32 %17, i32* %sum_err, align 4, !dbg !10821
  br label %if.end, !dbg !10822

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc, !dbg !10823

for.inc:                                          ; preds = %if.end
  %18 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %tmp, align 8, !dbg !10808
  store %struct.mlxsw_reg_trans* %18, %struct.mlxsw_reg_trans** %trans, align 8, !dbg !10808
  call void @llvm.dbg.declare(metadata i8** %__mptr11, metadata !10824, metadata !DIExpression()), !dbg !10826
  %19 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %tmp, align 8, !dbg !10826
  %bulk_list12 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %19, i32 0, i32 1, !dbg !10826
  %next13 = getelementptr inbounds %struct.list_head, %struct.list_head* %bulk_list12, i32 0, i32 0, !dbg !10826
  %20 = load %struct.list_head*, %struct.list_head** %next13, align 8, !dbg !10826
  %21 = bitcast %struct.list_head* %20 to i8*, !dbg !10826
  store i8* %21, i8** %__mptr11, align 8, !dbg !10826
  br label %do.body14, !dbg !10826

do.body14:                                        ; preds = %for.inc
  br label %do.end15, !dbg !10827

do.end15:                                         ; preds = %do.body14
  %22 = load i8*, i8** %__mptr11, align 8, !dbg !10826
  %add.ptr17 = getelementptr i8, i8* %22, i64 -16, !dbg !10826
  %23 = bitcast i8* %add.ptr17 to %struct.mlxsw_reg_trans*, !dbg !10826
  store %struct.mlxsw_reg_trans* %23, %struct.mlxsw_reg_trans** %tmp16, align 8, !dbg !10827
  %24 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %tmp16, align 8, !dbg !10826
  store %struct.mlxsw_reg_trans* %24, %struct.mlxsw_reg_trans** %tmp, align 8, !dbg !10808
  br label %for.cond, !dbg !10808, !llvm.loop !10829

for.end:                                          ; preds = %for.cond
  %25 = load i32, i32* %sum_err, align 4, !dbg !10831
  ret i32 %25, !dbg !10832
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_trans_wait(%struct.mlxsw_reg_trans* %trans) #0 !dbg !10833 {
entry:
  %trans.addr = alloca %struct.mlxsw_reg_trans*, align 8
  %err_string = alloca [256 x i8], align 16
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %err = alloca i32, align 4
  %___p = alloca %struct.mlxsw_reg_trans*, align 8
  store %struct.mlxsw_reg_trans* %trans, %struct.mlxsw_reg_trans** %trans.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_reg_trans** %trans.addr, metadata !10836, metadata !DIExpression()), !dbg !10837
  call void @llvm.dbg.declare(metadata [256 x i8]* %err_string, metadata !10838, metadata !DIExpression()), !dbg !10842
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !10843, metadata !DIExpression()), !dbg !10844
  %0 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !10845
  %core = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %0, i32 0, i32 2, !dbg !10846
  %1 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !10846
  store %struct.mlxsw_core* %1, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !10844
  call void @llvm.dbg.declare(metadata i32* %err, metadata !10847, metadata !DIExpression()), !dbg !10848
  %2 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !10849
  %completion = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %2, i32 0, i32 8, !dbg !10850
  call void @wait_for_completion(%struct.completion* %completion) #11, !dbg !10851
  %3 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !10852
  %timeout_dw = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %3, i32 0, i32 5, !dbg !10853
  %call = call zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work* %timeout_dw) #11, !dbg !10854
  %4 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !10855
  %err1 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %4, i32 0, i32 14, !dbg !10856
  %5 = load i32, i32* %err1, align 4, !dbg !10856
  store i32 %5, i32* %err, align 4, !dbg !10857
  %6 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !10858
  %retries = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %6, i32 0, i32 6, !dbg !10860
  %7 = load i32, i32* %retries, align 8, !dbg !10860
  %tobool = icmp ne i32 %7, 0, !dbg !10858
  br i1 %tobool, label %if.then, label %if.end, !dbg !10861

if.then:                                          ; preds = %entry
  %8 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !10862
  %bus_info = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %8, i32 0, i32 3, !dbg !10862
  %9 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info, align 8, !dbg !10862
  %dev = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %9, i32 0, i32 2, !dbg !10862
  %10 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10862
  %11 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !10862
  %retries2 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %11, i32 0, i32 6, !dbg !10862
  %12 = load i32, i32* %retries2, align 8, !dbg !10862
  %13 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !10862
  %tid = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %13, i32 0, i32 7, !dbg !10862
  %14 = load i64, i64* %tid, align 8, !dbg !10862
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %10, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.164, i64 0, i64 0), i32 %12, i32 5, i64 %14) #14, !dbg !10862
  br label %if.end, !dbg !10862

if.end:                                           ; preds = %if.then, %entry
  %15 = load i32, i32* %err, align 4, !dbg !10863
  %tobool3 = icmp ne i32 %15, 0, !dbg !10863
  br i1 %tobool3, label %if.then4, label %if.end32, !dbg !10865

if.then4:                                         ; preds = %if.end
  %16 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !10866
  %bus_info5 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %16, i32 0, i32 3, !dbg !10866
  %17 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info5, align 8, !dbg !10866
  %dev6 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %17, i32 0, i32 2, !dbg !10866
  %18 = load %struct.device*, %struct.device** %dev6, align 8, !dbg !10866
  %19 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !10866
  %tid7 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %19, i32 0, i32 7, !dbg !10866
  %20 = load i64, i64* %tid7, align 8, !dbg !10866
  %21 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !10866
  %reg = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %21, i32 0, i32 12, !dbg !10866
  %22 = load %struct.mlxsw_reg_info*, %struct.mlxsw_reg_info** %reg, align 8, !dbg !10866
  %id = getelementptr inbounds %struct.mlxsw_reg_info, %struct.mlxsw_reg_info* %22, i32 0, i32 0, !dbg !10866
  %23 = load i16, i16* %id, align 8, !dbg !10866
  %conv = zext i16 %23 to i32, !dbg !10866
  %24 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !10866
  %reg8 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %24, i32 0, i32 12, !dbg !10866
  %25 = load %struct.mlxsw_reg_info*, %struct.mlxsw_reg_info** %reg8, align 8, !dbg !10866
  %id9 = getelementptr inbounds %struct.mlxsw_reg_info, %struct.mlxsw_reg_info* %25, i32 0, i32 0, !dbg !10866
  %26 = load i16, i16* %id9, align 8, !dbg !10866
  %call10 = call i8* @mlxsw_reg_id_str(i16 zeroext %26) #11, !dbg !10866
  %27 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !10866
  %type = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %27, i32 0, i32 13, !dbg !10866
  %28 = load i32, i32* %type, align 8, !dbg !10866
  %call11 = call i8* @mlxsw_core_reg_access_type_str(i32 %28) #11, !dbg !10866
  %29 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !10866
  %emad_status = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %29, i32 0, i32 16, !dbg !10866
  %30 = load i32, i32* %emad_status, align 8, !dbg !10866
  %31 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !10866
  %emad_status12 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %31, i32 0, i32 16, !dbg !10866
  %32 = load i32, i32* %emad_status12, align 8, !dbg !10866
  %conv13 = trunc i32 %32 to i8, !dbg !10866
  %call14 = call i8* @mlxsw_emad_op_tlv_status_str(i8 zeroext %conv13) #11, !dbg !10866
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %18, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.165, i64 0, i64 0), i64 %20, i32 %conv, i8* %call10, i8* %call11, i32 %30, i8* %call14) #14, !dbg !10866
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %err_string, i64 0, i64 0, !dbg !10868
  %33 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !10869
  %tid15 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %33, i32 0, i32 7, !dbg !10870
  %34 = load i64, i64* %tid15, align 8, !dbg !10870
  %35 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !10871
  %reg16 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %35, i32 0, i32 12, !dbg !10872
  %36 = load %struct.mlxsw_reg_info*, %struct.mlxsw_reg_info** %reg16, align 8, !dbg !10872
  %id17 = getelementptr inbounds %struct.mlxsw_reg_info, %struct.mlxsw_reg_info* %36, i32 0, i32 0, !dbg !10873
  %37 = load i16, i16* %id17, align 8, !dbg !10873
  %conv18 = zext i16 %37 to i32, !dbg !10871
  %38 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !10874
  %reg19 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %38, i32 0, i32 12, !dbg !10875
  %39 = load %struct.mlxsw_reg_info*, %struct.mlxsw_reg_info** %reg19, align 8, !dbg !10875
  %id20 = getelementptr inbounds %struct.mlxsw_reg_info, %struct.mlxsw_reg_info* %39, i32 0, i32 0, !dbg !10876
  %40 = load i16, i16* %id20, align 8, !dbg !10876
  %call21 = call i8* @mlxsw_reg_id_str(i16 zeroext %40) #11, !dbg !10877
  %41 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !10878
  %emad_status22 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %41, i32 0, i32 16, !dbg !10879
  %42 = load i32, i32* %emad_status22, align 8, !dbg !10879
  %conv23 = trunc i32 %42 to i8, !dbg !10878
  %call24 = call i8* @mlxsw_emad_op_tlv_status_str(i8 zeroext %conv23) #11, !dbg !10880
  %43 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !10881
  %emad_err_string = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %43, i32 0, i32 15, !dbg !10882
  %44 = load i8*, i8** %emad_err_string, align 8, !dbg !10882
  %tobool25 = icmp ne i8* %44, null, !dbg !10881
  br i1 %tobool25, label %cond.true, label %cond.false, !dbg !10881

cond.true:                                        ; preds = %if.then4
  %45 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !10883
  %emad_err_string26 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %45, i32 0, i32 15, !dbg !10884
  %46 = load i8*, i8** %emad_err_string26, align 8, !dbg !10884
  br label %cond.end, !dbg !10881

cond.false:                                       ; preds = %if.then4
  br label %cond.end, !dbg !10881

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %46, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.167, i64 0, i64 0), %cond.false ], !dbg !10881
  %call27 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 256, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.166, i64 0, i64 0), i64 %34, i32 %conv18, i8* %call21, i8* %call24, i8* %cond) #11, !dbg !10885
  %47 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !10886
  %48 = bitcast %struct.mlxsw_core* %47 to i8*, !dbg !10886
  %call28 = call %struct.devlink* @priv_to_devlink(i8* %48) #11, !dbg !10887
  %49 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !10888
  %emad_status29 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %49, i32 0, i32 16, !dbg !10889
  %50 = load i32, i32* %emad_status29, align 8, !dbg !10889
  %arraydecay30 = getelementptr inbounds [256 x i8], [256 x i8]* %err_string, i64 0, i64 0, !dbg !10890
  call void @trace_devlink_hwerr(%struct.devlink* %call28, i32 %50, i8* %arraydecay30) #11, !dbg !10891
  %51 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !10892
  %emad_err_string31 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %51, i32 0, i32 15, !dbg !10893
  %52 = load i8*, i8** %emad_err_string31, align 8, !dbg !10893
  call void @kfree(i8* %52) #11, !dbg !10894
  br label %if.end32, !dbg !10895

if.end32:                                         ; preds = %cond.end, %if.end
  %53 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !10896
  %bulk_list = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %53, i32 0, i32 1, !dbg !10897
  call void @list_del(%struct.list_head* %bulk_list) #11, !dbg !10898
  br label %do.body, !dbg !10899

do.body:                                          ; preds = %if.end32
  call void @llvm.dbg.declare(metadata %struct.mlxsw_reg_trans** %___p, metadata !10900, metadata !DIExpression()), !dbg !10902
  %54 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !10902
  store %struct.mlxsw_reg_trans* %54, %struct.mlxsw_reg_trans** %___p, align 8, !dbg !10902
  %55 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %___p, align 8, !dbg !10903
  %tobool33 = icmp ne %struct.mlxsw_reg_trans* %55, null, !dbg !10903
  br i1 %tobool33, label %if.then34, label %if.end38, !dbg !10902

if.then34:                                        ; preds = %do.body
  br label %do.body35, !dbg !10903

do.body35:                                        ; preds = %if.then34
  br label %do.body36, !dbg !10905

do.body36:                                        ; preds = %do.body35
  br label %do.end, !dbg !10907

do.end:                                           ; preds = %do.body36
  %56 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %___p, align 8, !dbg !10905
  %rcu = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %56, i32 0, i32 17, !dbg !10905
  call void @kvfree_call_rcu(%struct.callback_head* %rcu, void (%struct.callback_head*)* inttoptr (i64 240 to void (%struct.callback_head*)*)) #11, !dbg !10905
  br label %do.end37, !dbg !10905

do.end37:                                         ; preds = %do.end
  br label %if.end38, !dbg !10905

if.end38:                                         ; preds = %do.end37, %do.body
  br label %do.end39, !dbg !10902

do.end39:                                         ; preds = %if.end38
  %57 = load i32, i32* %err, align 4, !dbg !10909
  ret i32 %57, !dbg !10910
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_reg_query(%struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_reg_info* %reg, i8* %payload) #0 !dbg !10911 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %reg.addr = alloca %struct.mlxsw_reg_info*, align 8
  %payload.addr = alloca i8*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !10912, metadata !DIExpression()), !dbg !10913
  store %struct.mlxsw_reg_info* %reg, %struct.mlxsw_reg_info** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_reg_info** %reg.addr, metadata !10914, metadata !DIExpression()), !dbg !10915
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !10916, metadata !DIExpression()), !dbg !10917
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !10918
  %1 = load %struct.mlxsw_reg_info*, %struct.mlxsw_reg_info** %reg.addr, align 8, !dbg !10919
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !10920
  %call = call i32 @mlxsw_core_reg_access(%struct.mlxsw_core* %0, %struct.mlxsw_reg_info* %1, i8* %2, i32 0) #11, !dbg !10921
  ret i32 %call, !dbg !10922
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_core_reg_access(%struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_reg_info* %reg, i8* %payload, i32 %type) #0 !dbg !10923 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %reg.addr = alloca %struct.mlxsw_reg_info*, align 8
  %payload.addr = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  %bulk_list = alloca %struct.list_head, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !10926, metadata !DIExpression()), !dbg !10927
  store %struct.mlxsw_reg_info* %reg, %struct.mlxsw_reg_info** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_reg_info** %reg.addr, metadata !10928, metadata !DIExpression()), !dbg !10929
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !10930, metadata !DIExpression()), !dbg !10931
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !10932, metadata !DIExpression()), !dbg !10933
  call void @llvm.dbg.declare(metadata %struct.list_head* %bulk_list, metadata !10934, metadata !DIExpression()), !dbg !10935
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %bulk_list, i32 0, i32 0, !dbg !10935
  store %struct.list_head* %bulk_list, %struct.list_head** %next, align 8, !dbg !10935
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %bulk_list, i32 0, i32 1, !dbg !10935
  store %struct.list_head* %bulk_list, %struct.list_head** %prev, align 8, !dbg !10935
  call void @llvm.dbg.declare(metadata i32* %err, metadata !10936, metadata !DIExpression()), !dbg !10937
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !10938
  %emad = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %0, i32 0, i32 7, !dbg !10940
  %use_emad = getelementptr inbounds %struct.anon.129, %struct.anon.129* %emad, i32 0, i32 3, !dbg !10941
  %1 = load i8, i8* %use_emad, align 8, !dbg !10941
  %tobool = trunc i8 %1 to i1, !dbg !10941
  br i1 %tobool, label %if.end, label %if.then, !dbg !10942

if.then:                                          ; preds = %entry
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !10943
  %3 = load %struct.mlxsw_reg_info*, %struct.mlxsw_reg_info** %reg.addr, align 8, !dbg !10944
  %4 = load i8*, i8** %payload.addr, align 8, !dbg !10945
  %5 = load i32, i32* %type.addr, align 4, !dbg !10946
  %call = call i32 @mlxsw_core_reg_access_cmd(%struct.mlxsw_core* %2, %struct.mlxsw_reg_info* %3, i8* %4, i32 %5) #11, !dbg !10947
  store i32 %call, i32* %retval, align 4, !dbg !10948
  br label %return, !dbg !10948

if.end:                                           ; preds = %entry
  %6 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !10949
  %7 = load %struct.mlxsw_reg_info*, %struct.mlxsw_reg_info** %reg.addr, align 8, !dbg !10950
  %8 = load i8*, i8** %payload.addr, align 8, !dbg !10951
  %9 = load i32, i32* %type.addr, align 4, !dbg !10952
  %10 = load i8*, i8** %payload.addr, align 8, !dbg !10953
  %11 = ptrtoint i8* %10 to i64, !dbg !10954
  %call1 = call i32 @mlxsw_core_reg_access_emad(%struct.mlxsw_core* %6, %struct.mlxsw_reg_info* %7, i8* %8, i32 %9, %struct.list_head* %bulk_list, void (%struct.mlxsw_core*, i8*, i64, i64)* @mlxsw_core_reg_access_cb, i64 %11) #11, !dbg !10955
  store i32 %call1, i32* %err, align 4, !dbg !10956
  %12 = load i32, i32* %err, align 4, !dbg !10957
  %tobool2 = icmp ne i32 %12, 0, !dbg !10957
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !10959

if.then3:                                         ; preds = %if.end
  %13 = load i32, i32* %err, align 4, !dbg !10960
  store i32 %13, i32* %retval, align 4, !dbg !10961
  br label %return, !dbg !10961

if.end4:                                          ; preds = %if.end
  %call5 = call i32 @mlxsw_reg_trans_bulk_wait(%struct.list_head* %bulk_list) #11, !dbg !10962
  store i32 %call5, i32* %retval, align 4, !dbg !10963
  br label %return, !dbg !10963

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !10964
  ret i32 %14, !dbg !10964
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlxsw_core_skb_receive(%struct.mlxsw_core* %mlxsw_core, %struct.sk_buff* %skb, %struct.mlxsw_rx_info* %rx_info) #0 !dbg !10965 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %rx_info.addr = alloca %struct.mlxsw_rx_info*, align 8
  %rxl_item = alloca %struct.mlxsw_rx_listener_item*, align 8
  %rxl = alloca %struct.mlxsw_rx_listener*, align 8
  %local_port = alloca i8, align 1
  %found = alloca i8, align 1
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.list_head*, align 8
  %tmp14 = alloca %struct.mlxsw_rx_listener_item*, align 8
  %__mptr45 = alloca i8*, align 8
  %tmp48 = alloca %struct.list_head*, align 8
  %tmp53 = alloca %struct.mlxsw_rx_listener_item*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !10980, metadata !DIExpression()), !dbg !10981
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !10982, metadata !DIExpression()), !dbg !10983
  store %struct.mlxsw_rx_info* %rx_info, %struct.mlxsw_rx_info** %rx_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_rx_info** %rx_info.addr, metadata !10984, metadata !DIExpression()), !dbg !10985
  call void @llvm.dbg.declare(metadata %struct.mlxsw_rx_listener_item** %rxl_item, metadata !10986, metadata !DIExpression()), !dbg !10987
  call void @llvm.dbg.declare(metadata %struct.mlxsw_rx_listener** %rxl, metadata !10988, metadata !DIExpression()), !dbg !10989
  call void @llvm.dbg.declare(metadata i8* %local_port, metadata !10990, metadata !DIExpression()), !dbg !10991
  call void @llvm.dbg.declare(metadata i8* %found, metadata !10992, metadata !DIExpression()), !dbg !10993
  store i8 0, i8* %found, align 1, !dbg !10993
  %0 = load %struct.mlxsw_rx_info*, %struct.mlxsw_rx_info** %rx_info.addr, align 8, !dbg !10994
  %is_lag = getelementptr inbounds %struct.mlxsw_rx_info, %struct.mlxsw_rx_info* %0, i32 0, i32 0, !dbg !10996
  %1 = load i8, i8* %is_lag, align 4, !dbg !10996
  %tobool = trunc i8 %1 to i1, !dbg !10996
  br i1 %tobool, label %if.then, label %if.else, !dbg !10997

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !10998

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !11000

do.end:                                           ; preds = %do.body
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11002
  %3 = load %struct.mlxsw_rx_info*, %struct.mlxsw_rx_info** %rx_info.addr, align 8, !dbg !11003
  %u = getelementptr inbounds %struct.mlxsw_rx_info, %struct.mlxsw_rx_info* %3, i32 0, i32 1, !dbg !11004
  %lag_id = bitcast %union.anon.133* %u to i16*, !dbg !11005
  %4 = load i16, i16* %lag_id, align 2, !dbg !11005
  %5 = load %struct.mlxsw_rx_info*, %struct.mlxsw_rx_info** %rx_info.addr, align 8, !dbg !11006
  %lag_port_index = getelementptr inbounds %struct.mlxsw_rx_info, %struct.mlxsw_rx_info* %5, i32 0, i32 2, !dbg !11007
  %6 = load i8, i8* %lag_port_index, align 4, !dbg !11007
  %call = call zeroext i8 @mlxsw_core_lag_mapping_get(%struct.mlxsw_core* %2, i16 zeroext %4, i8 zeroext %6) #11, !dbg !11008
  store i8 %call, i8* %local_port, align 1, !dbg !11009
  br label %if.end, !dbg !11010

if.else:                                          ; preds = %entry
  %7 = load %struct.mlxsw_rx_info*, %struct.mlxsw_rx_info** %rx_info.addr, align 8, !dbg !11011
  %u1 = getelementptr inbounds %struct.mlxsw_rx_info, %struct.mlxsw_rx_info* %7, i32 0, i32 1, !dbg !11013
  %sys_port = bitcast %union.anon.133* %u1 to i16*, !dbg !11014
  %8 = load i16, i16* %sys_port, align 2, !dbg !11014
  %conv = trunc i16 %8 to i8, !dbg !11011
  store i8 %conv, i8* %local_port, align 1, !dbg !11015
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  br label %do.body2, !dbg !11016

do.body2:                                         ; preds = %if.end
  br label %do.end3, !dbg !11017

do.end3:                                          ; preds = %do.body2
  %9 = load %struct.mlxsw_rx_info*, %struct.mlxsw_rx_info** %rx_info.addr, align 8, !dbg !11019
  %trap_id = getelementptr inbounds %struct.mlxsw_rx_info, %struct.mlxsw_rx_info* %9, i32 0, i32 4, !dbg !11021
  %10 = load i32, i32* %trap_id, align 4, !dbg !11021
  %cmp = icmp sge i32 %10, 1023, !dbg !11022
  br i1 %cmp, label %if.then8, label %lor.lhs.false, !dbg !11023

lor.lhs.false:                                    ; preds = %do.end3
  %11 = load i8, i8* %local_port, align 1, !dbg !11024
  %conv5 = zext i8 %11 to i32, !dbg !11024
  %12 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11025
  %max_ports = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %12, i32 0, i32 13, !dbg !11026
  %13 = load i32, i32* %max_ports, align 8, !dbg !11026
  %cmp6 = icmp uge i32 %conv5, %13, !dbg !11027
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !11028

if.then8:                                         ; preds = %lor.lhs.false, %do.end3
  br label %drop, !dbg !11029

if.end9:                                          ; preds = %lor.lhs.false
  call void @__rcu_read_lock() #13, !dbg !11030
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11034, metadata !DIExpression()), !dbg !11037
  br label %do.body10, !dbg !11038

do.body10:                                        ; preds = %if.end9
  br label %do.end11, !dbg !11040

do.end11:                                         ; preds = %do.body10
  %14 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11038
  %rx_listener_list = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %14, i32 0, i32 5, !dbg !11038
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %rx_listener_list, i32 0, i32 0, !dbg !11038
  %15 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11038
  store %struct.list_head* %15, %struct.list_head** %tmp, align 8, !dbg !11040
  %16 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !11038
  %17 = bitcast %struct.list_head* %16 to i8*, !dbg !11037
  store i8* %17, i8** %__mptr, align 8, !dbg !11037
  br label %do.body12, !dbg !11037

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !11042

do.end13:                                         ; preds = %do.body12
  %18 = load i8*, i8** %__mptr, align 8, !dbg !11037
  %add.ptr = getelementptr i8, i8* %18, i64 0, !dbg !11037
  %19 = bitcast i8* %add.ptr to %struct.mlxsw_rx_listener_item*, !dbg !11037
  store %struct.mlxsw_rx_listener_item* %19, %struct.mlxsw_rx_listener_item** %tmp14, align 8, !dbg !11042
  %20 = load %struct.mlxsw_rx_listener_item*, %struct.mlxsw_rx_listener_item** %tmp14, align 8, !dbg !11037
  store %struct.mlxsw_rx_listener_item* %20, %struct.mlxsw_rx_listener_item** %rxl_item, align 8, !dbg !11044
  br label %for.cond, !dbg !11044

for.cond:                                         ; preds = %do.end52, %do.end13
  %21 = load %struct.mlxsw_rx_listener_item*, %struct.mlxsw_rx_listener_item** %rxl_item, align 8, !dbg !11045
  %list = getelementptr inbounds %struct.mlxsw_rx_listener_item, %struct.mlxsw_rx_listener_item* %21, i32 0, i32 0, !dbg !11045
  %22 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11045
  %rx_listener_list15 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %22, i32 0, i32 5, !dbg !11045
  %cmp16 = icmp ne %struct.list_head* %list, %rx_listener_list15, !dbg !11045
  br i1 %cmp16, label %for.body, label %for.end, !dbg !11044

for.body:                                         ; preds = %for.cond
  %23 = load %struct.mlxsw_rx_listener_item*, %struct.mlxsw_rx_listener_item** %rxl_item, align 8, !dbg !11047
  %rxl18 = getelementptr inbounds %struct.mlxsw_rx_listener_item, %struct.mlxsw_rx_listener_item* %23, i32 0, i32 1, !dbg !11049
  store %struct.mlxsw_rx_listener* %rxl18, %struct.mlxsw_rx_listener** %rxl, align 8, !dbg !11050
  %24 = load %struct.mlxsw_rx_listener*, %struct.mlxsw_rx_listener** %rxl, align 8, !dbg !11051
  %local_port19 = getelementptr inbounds %struct.mlxsw_rx_listener, %struct.mlxsw_rx_listener* %24, i32 0, i32 1, !dbg !11053
  %25 = load i8, i8* %local_port19, align 8, !dbg !11053
  %conv20 = zext i8 %25 to i32, !dbg !11051
  %cmp21 = icmp eq i32 %conv20, 255, !dbg !11054
  br i1 %cmp21, label %land.lhs.true, label %lor.lhs.false23, !dbg !11055

lor.lhs.false23:                                  ; preds = %for.body
  %26 = load %struct.mlxsw_rx_listener*, %struct.mlxsw_rx_listener** %rxl, align 8, !dbg !11056
  %local_port24 = getelementptr inbounds %struct.mlxsw_rx_listener, %struct.mlxsw_rx_listener* %26, i32 0, i32 1, !dbg !11057
  %27 = load i8, i8* %local_port24, align 8, !dbg !11057
  %conv25 = zext i8 %27 to i32, !dbg !11056
  %28 = load i8, i8* %local_port, align 1, !dbg !11058
  %conv26 = zext i8 %28 to i32, !dbg !11058
  %cmp27 = icmp eq i32 %conv25, %conv26, !dbg !11059
  br i1 %cmp27, label %land.lhs.true, label %if.end44, !dbg !11060

land.lhs.true:                                    ; preds = %lor.lhs.false23, %for.body
  %29 = load %struct.mlxsw_rx_listener*, %struct.mlxsw_rx_listener** %rxl, align 8, !dbg !11061
  %trap_id29 = getelementptr inbounds %struct.mlxsw_rx_listener, %struct.mlxsw_rx_listener* %29, i32 0, i32 3, !dbg !11062
  %30 = load i16, i16* %trap_id29, align 2, !dbg !11062
  %conv30 = zext i16 %30 to i32, !dbg !11061
  %31 = load %struct.mlxsw_rx_info*, %struct.mlxsw_rx_info** %rx_info.addr, align 8, !dbg !11063
  %trap_id31 = getelementptr inbounds %struct.mlxsw_rx_info, %struct.mlxsw_rx_info* %31, i32 0, i32 4, !dbg !11064
  %32 = load i32, i32* %trap_id31, align 4, !dbg !11064
  %cmp32 = icmp eq i32 %conv30, %32, !dbg !11065
  br i1 %cmp32, label %land.lhs.true34, label %if.end44, !dbg !11066

land.lhs.true34:                                  ; preds = %land.lhs.true
  %33 = load %struct.mlxsw_rx_listener*, %struct.mlxsw_rx_listener** %rxl, align 8, !dbg !11067
  %mirror_reason = getelementptr inbounds %struct.mlxsw_rx_listener, %struct.mlxsw_rx_listener* %33, i32 0, i32 2, !dbg !11068
  %34 = load i8, i8* %mirror_reason, align 1, !dbg !11068
  %conv35 = zext i8 %34 to i32, !dbg !11067
  %35 = load %struct.mlxsw_rx_info*, %struct.mlxsw_rx_info** %rx_info.addr, align 8, !dbg !11069
  %mirror_reason36 = getelementptr inbounds %struct.mlxsw_rx_info, %struct.mlxsw_rx_info* %35, i32 0, i32 3, !dbg !11070
  %36 = load i8, i8* %mirror_reason36, align 1, !dbg !11070
  %conv37 = zext i8 %36 to i32, !dbg !11069
  %cmp38 = icmp eq i32 %conv35, %conv37, !dbg !11071
  br i1 %cmp38, label %if.then40, label %if.end44, !dbg !11072

if.then40:                                        ; preds = %land.lhs.true34
  %37 = load %struct.mlxsw_rx_listener_item*, %struct.mlxsw_rx_listener_item** %rxl_item, align 8, !dbg !11073
  %enabled = getelementptr inbounds %struct.mlxsw_rx_listener_item, %struct.mlxsw_rx_listener_item* %37, i32 0, i32 3, !dbg !11076
  %38 = load i8, i8* %enabled, align 8, !dbg !11076
  %tobool41 = trunc i8 %38 to i1, !dbg !11076
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !11077

if.then42:                                        ; preds = %if.then40
  store i8 1, i8* %found, align 1, !dbg !11078
  br label %if.end43, !dbg !11079

if.end43:                                         ; preds = %if.then42, %if.then40
  br label %for.end, !dbg !11080

if.end44:                                         ; preds = %land.lhs.true34, %land.lhs.true, %lor.lhs.false23
  br label %for.inc, !dbg !11081

for.inc:                                          ; preds = %if.end44
  call void @llvm.dbg.declare(metadata i8** %__mptr45, metadata !11082, metadata !DIExpression()), !dbg !11084
  br label %do.body46, !dbg !11085

do.body46:                                        ; preds = %for.inc
  br label %do.end47, !dbg !11087

do.end47:                                         ; preds = %do.body46
  %39 = load %struct.mlxsw_rx_listener_item*, %struct.mlxsw_rx_listener_item** %rxl_item, align 8, !dbg !11085
  %list49 = getelementptr inbounds %struct.mlxsw_rx_listener_item, %struct.mlxsw_rx_listener_item* %39, i32 0, i32 0, !dbg !11085
  %next50 = getelementptr inbounds %struct.list_head, %struct.list_head* %list49, i32 0, i32 0, !dbg !11085
  %40 = load volatile %struct.list_head*, %struct.list_head** %next50, align 8, !dbg !11085
  store %struct.list_head* %40, %struct.list_head** %tmp48, align 8, !dbg !11087
  %41 = load %struct.list_head*, %struct.list_head** %tmp48, align 8, !dbg !11085
  %42 = bitcast %struct.list_head* %41 to i8*, !dbg !11084
  store i8* %42, i8** %__mptr45, align 8, !dbg !11084
  br label %do.body51, !dbg !11084

do.body51:                                        ; preds = %do.end47
  br label %do.end52, !dbg !11089

do.end52:                                         ; preds = %do.body51
  %43 = load i8*, i8** %__mptr45, align 8, !dbg !11084
  %add.ptr54 = getelementptr i8, i8* %43, i64 0, !dbg !11084
  %44 = bitcast i8* %add.ptr54 to %struct.mlxsw_rx_listener_item*, !dbg !11084
  store %struct.mlxsw_rx_listener_item* %44, %struct.mlxsw_rx_listener_item** %tmp53, align 8, !dbg !11089
  %45 = load %struct.mlxsw_rx_listener_item*, %struct.mlxsw_rx_listener_item** %tmp53, align 8, !dbg !11084
  store %struct.mlxsw_rx_listener_item* %45, %struct.mlxsw_rx_listener_item** %rxl_item, align 8, !dbg !11045
  br label %for.cond, !dbg !11045, !llvm.loop !11091

for.end:                                          ; preds = %if.end43, %for.cond
  %46 = load i8, i8* %found, align 1, !dbg !11093
  %tobool55 = trunc i8 %46 to i1, !dbg !11093
  br i1 %tobool55, label %if.end57, label %if.then56, !dbg !11095

if.then56:                                        ; preds = %for.end
  call void @rcu_read_unlock() #11, !dbg !11096
  br label %drop, !dbg !11098

if.end57:                                         ; preds = %for.end
  %47 = load %struct.mlxsw_rx_listener*, %struct.mlxsw_rx_listener** %rxl, align 8, !dbg !11099
  %func = getelementptr inbounds %struct.mlxsw_rx_listener, %struct.mlxsw_rx_listener* %47, i32 0, i32 0, !dbg !11100
  %48 = load void (%struct.sk_buff*, i8, i8*)*, void (%struct.sk_buff*, i8, i8*)** %func, align 8, !dbg !11100
  %49 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11101
  %50 = load i8, i8* %local_port, align 1, !dbg !11102
  %51 = load %struct.mlxsw_rx_listener_item*, %struct.mlxsw_rx_listener_item** %rxl_item, align 8, !dbg !11103
  %priv = getelementptr inbounds %struct.mlxsw_rx_listener_item, %struct.mlxsw_rx_listener_item* %51, i32 0, i32 2, !dbg !11104
  %52 = load i8*, i8** %priv, align 8, !dbg !11104
  call void %48(%struct.sk_buff* %49, i8 zeroext %50, i8* %52) #11, !dbg !11099
  call void @rcu_read_unlock() #11, !dbg !11105
  br label %return, !dbg !11106

drop:                                             ; preds = %if.then56, %if.then8
  call void @llvm.dbg.label(metadata !11107), !dbg !11108
  %53 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11109
  call void @consume_skb(%struct.sk_buff* %53) #11, !dbg !11109
  br label %return, !dbg !11110

return:                                           ; preds = %drop, %if.end57
  ret void, !dbg !11110
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i8 @mlxsw_core_lag_mapping_get(%struct.mlxsw_core* %mlxsw_core, i16 zeroext %lag_id, i8 zeroext %port_index) #0 !dbg !11111 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %lag_id.addr = alloca i16, align 2
  %port_index.addr = alloca i8, align 1
  %index = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !11114, metadata !DIExpression()), !dbg !11115
  store i16 %lag_id, i16* %lag_id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %lag_id.addr, metadata !11116, metadata !DIExpression()), !dbg !11117
  store i8 %port_index, i8* %port_index.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %port_index.addr, metadata !11118, metadata !DIExpression()), !dbg !11119
  call void @llvm.dbg.declare(metadata i32* %index, metadata !11120, metadata !DIExpression()), !dbg !11121
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11122
  %1 = load i16, i16* %lag_id.addr, align 2, !dbg !11123
  %2 = load i8, i8* %port_index.addr, align 1, !dbg !11124
  %call = call i32 @mlxsw_core_lag_mapping_index(%struct.mlxsw_core* %0, i16 zeroext %1, i8 zeroext %2) #11, !dbg !11125
  store i32 %call, i32* %index, align 4, !dbg !11121
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11126
  %lag = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %3, i32 0, i32 8, !dbg !11127
  %mapping = getelementptr inbounds %struct.anon.130, %struct.anon.130* %lag, i32 0, i32 0, !dbg !11128
  %4 = load i8*, i8** %mapping, align 8, !dbg !11128
  %5 = load i32, i32* %index, align 4, !dbg !11129
  %idxprom = sext i32 %5 to i64, !dbg !11126
  %arrayidx = getelementptr i8, i8* %4, i64 %idxprom, !dbg !11126
  %6 = load i8, i8* %arrayidx, align 1, !dbg !11126
  ret i8 %6, !dbg !11130
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rcu_read_unlock() #0 !dbg !11131 {
entry:
  br label %do.body, !dbg !11132

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11133

do.end:                                           ; preds = %do.body
  call void @__rcu_read_unlock() #11, !dbg !11135
  br label %do.body1, !dbg !11136

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !11137

do.end2:                                          ; preds = %do.body1
  ret void, !dbg !11139
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @consume_skb(%struct.sk_buff* %skb) #0 !dbg !11140 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !11141, metadata !DIExpression()), !dbg !11142
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11143
  call void @kfree_skb(%struct.sk_buff* %0) #11, !dbg !11144
  ret void, !dbg !11145
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlxsw_core_lag_mapping_set(%struct.mlxsw_core* %mlxsw_core, i16 zeroext %lag_id, i8 zeroext %port_index, i8 zeroext %local_port) #0 !dbg !11146 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %lag_id.addr = alloca i16, align 2
  %port_index.addr = alloca i8, align 1
  %local_port.addr = alloca i8, align 1
  %index = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !11149, metadata !DIExpression()), !dbg !11150
  store i16 %lag_id, i16* %lag_id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %lag_id.addr, metadata !11151, metadata !DIExpression()), !dbg !11152
  store i8 %port_index, i8* %port_index.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %port_index.addr, metadata !11153, metadata !DIExpression()), !dbg !11154
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !11155, metadata !DIExpression()), !dbg !11156
  call void @llvm.dbg.declare(metadata i32* %index, metadata !11157, metadata !DIExpression()), !dbg !11158
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11159
  %1 = load i16, i16* %lag_id.addr, align 2, !dbg !11160
  %2 = load i8, i8* %port_index.addr, align 1, !dbg !11161
  %call = call i32 @mlxsw_core_lag_mapping_index(%struct.mlxsw_core* %0, i16 zeroext %1, i8 zeroext %2) #11, !dbg !11162
  store i32 %call, i32* %index, align 4, !dbg !11158
  %3 = load i8, i8* %local_port.addr, align 1, !dbg !11163
  %4 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11164
  %lag = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %4, i32 0, i32 8, !dbg !11165
  %mapping = getelementptr inbounds %struct.anon.130, %struct.anon.130* %lag, i32 0, i32 0, !dbg !11166
  %5 = load i8*, i8** %mapping, align 8, !dbg !11166
  %6 = load i32, i32* %index, align 4, !dbg !11167
  %idxprom = sext i32 %6 to i64, !dbg !11164
  %arrayidx = getelementptr i8, i8* %5, i64 %idxprom, !dbg !11164
  store i8 %3, i8* %arrayidx, align 1, !dbg !11168
  ret void, !dbg !11169
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_core_lag_mapping_index(%struct.mlxsw_core* %mlxsw_core, i16 zeroext %lag_id, i8 zeroext %port_index) #0 !dbg !11170 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %lag_id.addr = alloca i16, align 2
  %port_index.addr = alloca i8, align 1
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !11173, metadata !DIExpression()), !dbg !11174
  store i16 %lag_id, i16* %lag_id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %lag_id.addr, metadata !11175, metadata !DIExpression()), !dbg !11176
  store i8 %port_index, i8* %port_index.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %port_index.addr, metadata !11177, metadata !DIExpression()), !dbg !11178
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11179
  %call = call i64 @mlxsw_core_res_get(%struct.mlxsw_core* %0, i32 16) #11, !dbg !11179
  %1 = load i16, i16* %lag_id.addr, align 2, !dbg !11180
  %conv = zext i16 %1 to i64, !dbg !11180
  %mul = mul i64 %call, %conv, !dbg !11181
  %2 = load i8, i8* %port_index.addr, align 1, !dbg !11182
  %conv1 = zext i8 %2 to i64, !dbg !11182
  %add = add i64 %mul, %conv1, !dbg !11183
  %conv2 = trunc i64 %add to i32, !dbg !11179
  ret i32 %conv2, !dbg !11184
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlxsw_core_lag_mapping_clear(%struct.mlxsw_core* %mlxsw_core, i16 zeroext %lag_id, i8 zeroext %local_port) #0 !dbg !11185 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %lag_id.addr = alloca i16, align 2
  %local_port.addr = alloca i8, align 1
  %i = alloca i32, align 4
  %index = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !11188, metadata !DIExpression()), !dbg !11189
  store i16 %lag_id, i16* %lag_id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %lag_id.addr, metadata !11190, metadata !DIExpression()), !dbg !11191
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !11192, metadata !DIExpression()), !dbg !11193
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11194, metadata !DIExpression()), !dbg !11195
  store i32 0, i32* %i, align 4, !dbg !11196
  br label %for.cond, !dbg !11198

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11199
  %conv = sext i32 %0 to i64, !dbg !11199
  %1 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11201
  %call = call i64 @mlxsw_core_res_get(%struct.mlxsw_core* %1, i32 16) #11, !dbg !11201
  %cmp = icmp ult i64 %conv, %call, !dbg !11202
  br i1 %cmp, label %for.body, label %for.end, !dbg !11203

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %index, metadata !11204, metadata !DIExpression()), !dbg !11206
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11207
  %3 = load i16, i16* %lag_id.addr, align 2, !dbg !11208
  %4 = load i32, i32* %i, align 4, !dbg !11209
  %conv2 = trunc i32 %4 to i8, !dbg !11209
  %call3 = call i32 @mlxsw_core_lag_mapping_index(%struct.mlxsw_core* %2, i16 zeroext %3, i8 zeroext %conv2) #11, !dbg !11210
  store i32 %call3, i32* %index, align 4, !dbg !11206
  %5 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11211
  %lag = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %5, i32 0, i32 8, !dbg !11213
  %mapping = getelementptr inbounds %struct.anon.130, %struct.anon.130* %lag, i32 0, i32 0, !dbg !11214
  %6 = load i8*, i8** %mapping, align 8, !dbg !11214
  %7 = load i32, i32* %index, align 4, !dbg !11215
  %idxprom = sext i32 %7 to i64, !dbg !11211
  %arrayidx = getelementptr i8, i8* %6, i64 %idxprom, !dbg !11211
  %8 = load i8, i8* %arrayidx, align 1, !dbg !11211
  %conv4 = zext i8 %8 to i32, !dbg !11211
  %9 = load i8, i8* %local_port.addr, align 1, !dbg !11216
  %conv5 = zext i8 %9 to i32, !dbg !11216
  %cmp6 = icmp eq i32 %conv4, %conv5, !dbg !11217
  br i1 %cmp6, label %if.then, label %if.end, !dbg !11218

if.then:                                          ; preds = %for.body
  %10 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11219
  %lag8 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %10, i32 0, i32 8, !dbg !11220
  %mapping9 = getelementptr inbounds %struct.anon.130, %struct.anon.130* %lag8, i32 0, i32 0, !dbg !11221
  %11 = load i8*, i8** %mapping9, align 8, !dbg !11221
  %12 = load i32, i32* %index, align 4, !dbg !11222
  %idxprom10 = sext i32 %12 to i64, !dbg !11219
  %arrayidx11 = getelementptr i8, i8* %11, i64 %idxprom10, !dbg !11219
  store i8 0, i8* %arrayidx11, align 1, !dbg !11223
  br label %if.end, !dbg !11219

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !11224

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %i, align 4, !dbg !11225
  %inc = add i32 %13, 1, !dbg !11225
  store i32 %inc, i32* %i, align 4, !dbg !11225
  br label %for.cond, !dbg !11226, !llvm.loop !11227

for.end:                                          ; preds = %for.cond
  ret void, !dbg !11229
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @mlxsw_core_res_get(%struct.mlxsw_core* %mlxsw_core, i32 %res_id) #0 !dbg !11230 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %res_id.addr = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !11233, metadata !DIExpression()), !dbg !11234
  store i32 %res_id, i32* %res_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %res_id.addr, metadata !11235, metadata !DIExpression()), !dbg !11236
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11237
  %res = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %0, i32 0, i32 9, !dbg !11238
  %1 = load i32, i32* %res_id.addr, align 4, !dbg !11239
  %call = call i64 @mlxsw_res_get(%struct.mlxsw_res* %res, i32 %1) #11, !dbg !11240
  ret i64 %call, !dbg !11241
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @mlxsw_core_res_valid(%struct.mlxsw_core* %mlxsw_core, i32 %res_id) #0 !dbg !11242 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %res_id.addr = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !11245, metadata !DIExpression()), !dbg !11246
  store i32 %res_id, i32* %res_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %res_id.addr, metadata !11247, metadata !DIExpression()), !dbg !11248
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11249
  %res = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %0, i32 0, i32 9, !dbg !11250
  %1 = load i32, i32* %res_id.addr, align 4, !dbg !11251
  %call = call zeroext i1 @mlxsw_res_valid(%struct.mlxsw_res* %res, i32 %1) #11, !dbg !11252
  ret i1 %call, !dbg !11253
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mlxsw_res_valid(%struct.mlxsw_res* %res, i32 %res_id) #0 !dbg !11254 {
entry:
  %res.addr = alloca %struct.mlxsw_res*, align 8
  %res_id.addr = alloca i32, align 4
  store %struct.mlxsw_res* %res, %struct.mlxsw_res** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_res** %res.addr, metadata !11257, metadata !DIExpression()), !dbg !11258
  store i32 %res_id, i32* %res_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %res_id.addr, metadata !11259, metadata !DIExpression()), !dbg !11260
  %0 = load %struct.mlxsw_res*, %struct.mlxsw_res** %res.addr, align 8, !dbg !11261
  %valid = getelementptr inbounds %struct.mlxsw_res, %struct.mlxsw_res* %0, i32 0, i32 0, !dbg !11262
  %1 = load i32, i32* %res_id.addr, align 4, !dbg !11263
  %idxprom = zext i32 %1 to i64, !dbg !11261
  %arrayidx = getelementptr [50 x i8], [50 x i8]* %valid, i64 0, i64 %idxprom, !dbg !11261
  %2 = load i8, i8* %arrayidx, align 1, !dbg !11261
  %tobool = trunc i8 %2 to i1, !dbg !11261
  ret i1 %tobool, !dbg !11264
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mlxsw_res_get(%struct.mlxsw_res* %res, i32 %res_id) #0 !dbg !11265 {
entry:
  %retval = alloca i64, align 8
  %res.addr = alloca %struct.mlxsw_res*, align 8
  %res_id.addr = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mlxsw_res* %res, %struct.mlxsw_res** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_res** %res.addr, metadata !11268, metadata !DIExpression()), !dbg !11269
  store i32 %res_id, i32* %res_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %res_id.addr, metadata !11270, metadata !DIExpression()), !dbg !11271
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11272, metadata !DIExpression()), !dbg !11275
  %0 = load %struct.mlxsw_res*, %struct.mlxsw_res** %res.addr, align 8, !dbg !11275
  %valid = getelementptr inbounds %struct.mlxsw_res, %struct.mlxsw_res* %0, i32 0, i32 0, !dbg !11275
  %1 = load i32, i32* %res_id.addr, align 4, !dbg !11275
  %idxprom = zext i32 %1 to i64, !dbg !11275
  %arrayidx = getelementptr [50 x i8], [50 x i8]* %valid, i64 0, i64 %idxprom, !dbg !11275
  %2 = load i8, i8* %arrayidx, align 1, !dbg !11275
  %tobool = trunc i8 %2 to i1, !dbg !11275
  %lnot = xor i1 %tobool, true, !dbg !11275
  %lnot1 = xor i1 %lnot, true, !dbg !11275
  %lnot2 = xor i1 %lnot1, true, !dbg !11275
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !11275
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !11275
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !11276
  %tobool3 = icmp ne i32 %3, 0, !dbg !11276
  %lnot4 = xor i1 %tobool3, true, !dbg !11276
  %lnot6 = xor i1 %lnot4, true, !dbg !11276
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !11276
  %conv = sext i32 %lnot.ext7 to i64, !dbg !11276
  %tobool8 = icmp ne i64 %conv, 0, !dbg !11276
  br i1 %tobool8, label %if.then, label %if.end, !dbg !11275

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !11276

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !11278

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !11280

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !11278

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.310, i64 0, i64 0), i32 136, i32 2305, i64 12) #10, !dbg !11282, !srcloc !11284
  br label %do.end11, !dbg !11282

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 336) #10, !dbg !11285, !srcloc !11287
  br label %do.body12, !dbg !11278

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !11288

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !11278

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !11278

if.end:                                           ; preds = %do.end14, %entry
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !11275
  %tobool15 = icmp ne i32 %4, 0, !dbg !11275
  %lnot16 = xor i1 %tobool15, true, !dbg !11275
  %lnot18 = xor i1 %lnot16, true, !dbg !11275
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !11275
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !11275
  store i64 %conv20, i64* %tmp, align 8, !dbg !11276
  %5 = load i64, i64* %tmp, align 8, !dbg !11275
  %tobool21 = icmp ne i64 %5, 0, !dbg !11290
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !11291

if.then22:                                        ; preds = %if.end
  store i64 0, i64* %retval, align 8, !dbg !11292
  br label %return, !dbg !11292

if.end23:                                         ; preds = %if.end
  %6 = load %struct.mlxsw_res*, %struct.mlxsw_res** %res.addr, align 8, !dbg !11293
  %values = getelementptr inbounds %struct.mlxsw_res, %struct.mlxsw_res* %6, i32 0, i32 1, !dbg !11294
  %7 = load i32, i32* %res_id.addr, align 4, !dbg !11295
  %idxprom24 = zext i32 %7 to i64, !dbg !11293
  %arrayidx25 = getelementptr [50 x i64], [50 x i64]* %values, i64 0, i64 %idxprom24, !dbg !11293
  %8 = load i64, i64* %arrayidx25, align 8, !dbg !11293
  store i64 %8, i64* %retval, align 8, !dbg !11296
  br label %return, !dbg !11296

return:                                           ; preds = %if.end23, %if.then22
  %9 = load i64, i64* %retval, align 8, !dbg !11297
  ret i64 %9, !dbg !11297
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_core_port_init(%struct.mlxsw_core* %mlxsw_core, i8 zeroext %local_port, i32 %port_number, i1 zeroext %split, i32 %split_port_subnumber, i1 zeroext %splittable, i32 %lanes, i8* %switch_id, i8 zeroext %switch_id_len) #0 !dbg !11298 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %local_port.addr = alloca i8, align 1
  %port_number.addr = alloca i32, align 4
  %split.addr = alloca i8, align 1
  %split_port_subnumber.addr = alloca i32, align 4
  %splittable.addr = alloca i8, align 1
  %lanes.addr = alloca i32, align 4
  %switch_id.addr = alloca i8*, align 8
  %switch_id_len.addr = alloca i8, align 1
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !11301, metadata !DIExpression()), !dbg !11302
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !11303, metadata !DIExpression()), !dbg !11304
  store i32 %port_number, i32* %port_number.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port_number.addr, metadata !11305, metadata !DIExpression()), !dbg !11306
  %frombool = zext i1 %split to i8
  store i8 %frombool, i8* %split.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %split.addr, metadata !11307, metadata !DIExpression()), !dbg !11308
  store i32 %split_port_subnumber, i32* %split_port_subnumber.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %split_port_subnumber.addr, metadata !11309, metadata !DIExpression()), !dbg !11310
  %frombool1 = zext i1 %splittable to i8
  store i8 %frombool1, i8* %splittable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %splittable.addr, metadata !11311, metadata !DIExpression()), !dbg !11312
  store i32 %lanes, i32* %lanes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lanes.addr, metadata !11313, metadata !DIExpression()), !dbg !11314
  store i8* %switch_id, i8** %switch_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %switch_id.addr, metadata !11315, metadata !DIExpression()), !dbg !11316
  store i8 %switch_id_len, i8* %switch_id_len.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %switch_id_len.addr, metadata !11317, metadata !DIExpression()), !dbg !11318
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11319
  %1 = load i8, i8* %local_port.addr, align 1, !dbg !11320
  %2 = load i32, i32* %port_number.addr, align 4, !dbg !11321
  %3 = load i8, i8* %split.addr, align 1, !dbg !11322
  %tobool = trunc i8 %3 to i1, !dbg !11322
  %4 = load i32, i32* %split_port_subnumber.addr, align 4, !dbg !11323
  %5 = load i8, i8* %splittable.addr, align 1, !dbg !11324
  %tobool2 = trunc i8 %5 to i1, !dbg !11324
  %6 = load i32, i32* %lanes.addr, align 4, !dbg !11325
  %7 = load i8*, i8** %switch_id.addr, align 8, !dbg !11326
  %8 = load i8, i8* %switch_id_len.addr, align 1, !dbg !11327
  %call = call i32 @__mlxsw_core_port_init(%struct.mlxsw_core* %0, i8 zeroext %1, i32 0, i32 %2, i1 zeroext %tobool, i32 %4, i1 zeroext %tobool2, i32 %6, i8* %7, i8 zeroext %8) #11, !dbg !11328
  ret i32 %call, !dbg !11329
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__mlxsw_core_port_init(%struct.mlxsw_core* %mlxsw_core, i8 zeroext %local_port, i32 %flavour, i32 %port_number, i1 zeroext %split, i32 %split_port_subnumber, i1 zeroext %splittable, i32 %lanes, i8* %switch_id, i8 zeroext %switch_id_len) #0 !dbg !11330 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %local_port.addr = alloca i8, align 1
  %flavour.addr = alloca i32, align 4
  %port_number.addr = alloca i32, align 4
  %split.addr = alloca i8, align 1
  %split_port_subnumber.addr = alloca i32, align 4
  %splittable.addr = alloca i8, align 1
  %lanes.addr = alloca i32, align 4
  %switch_id.addr = alloca i8*, align 8
  %switch_id_len.addr = alloca i8, align 1
  %devlink = alloca %struct.devlink*, align 8
  %mlxsw_core_port = alloca %struct.mlxsw_core_port*, align 8
  %devlink_port = alloca %struct.devlink_port*, align 8
  %attrs = alloca %struct.devlink_port_attrs, align 4
  %err = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !11333, metadata !DIExpression()), !dbg !11334
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !11335, metadata !DIExpression()), !dbg !11336
  store i32 %flavour, i32* %flavour.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flavour.addr, metadata !11337, metadata !DIExpression()), !dbg !11338
  store i32 %port_number, i32* %port_number.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port_number.addr, metadata !11339, metadata !DIExpression()), !dbg !11340
  %frombool = zext i1 %split to i8
  store i8 %frombool, i8* %split.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %split.addr, metadata !11341, metadata !DIExpression()), !dbg !11342
  store i32 %split_port_subnumber, i32* %split_port_subnumber.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %split_port_subnumber.addr, metadata !11343, metadata !DIExpression()), !dbg !11344
  %frombool1 = zext i1 %splittable to i8
  store i8 %frombool1, i8* %splittable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %splittable.addr, metadata !11345, metadata !DIExpression()), !dbg !11346
  store i32 %lanes, i32* %lanes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lanes.addr, metadata !11347, metadata !DIExpression()), !dbg !11348
  store i8* %switch_id, i8** %switch_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %switch_id.addr, metadata !11349, metadata !DIExpression()), !dbg !11350
  store i8 %switch_id_len, i8* %switch_id_len.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %switch_id_len.addr, metadata !11351, metadata !DIExpression()), !dbg !11352
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink, metadata !11353, metadata !DIExpression()), !dbg !11354
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11355
  %1 = bitcast %struct.mlxsw_core* %0 to i8*, !dbg !11355
  %call = call %struct.devlink* @priv_to_devlink(i8* %1) #11, !dbg !11356
  store %struct.devlink* %call, %struct.devlink** %devlink, align 8, !dbg !11354
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core_port** %mlxsw_core_port, metadata !11357, metadata !DIExpression()), !dbg !11358
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11359
  %ports = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %2, i32 0, i32 12, !dbg !11360
  %3 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %ports, align 8, !dbg !11360
  %4 = load i8, i8* %local_port.addr, align 1, !dbg !11361
  %idxprom = zext i8 %4 to i64, !dbg !11359
  %arrayidx = getelementptr %struct.mlxsw_core_port, %struct.mlxsw_core_port* %3, i64 %idxprom, !dbg !11359
  store %struct.mlxsw_core_port* %arrayidx, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !11358
  call void @llvm.dbg.declare(metadata %struct.devlink_port** %devlink_port, metadata !11362, metadata !DIExpression()), !dbg !11363
  %5 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !11364
  %devlink_port2 = getelementptr inbounds %struct.mlxsw_core_port, %struct.mlxsw_core_port* %5, i32 0, i32 0, !dbg !11365
  store %struct.devlink_port* %devlink_port2, %struct.devlink_port** %devlink_port, align 8, !dbg !11363
  call void @llvm.dbg.declare(metadata %struct.devlink_port_attrs* %attrs, metadata !11366, metadata !DIExpression()), !dbg !11367
  %6 = bitcast %struct.devlink_port_attrs* %attrs to i8*, !dbg !11367
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 60, i1 false), !dbg !11367
  call void @llvm.dbg.declare(metadata i32* %err, metadata !11368, metadata !DIExpression()), !dbg !11369
  %7 = load i8, i8* %split.addr, align 1, !dbg !11370
  %tobool = trunc i8 %7 to i1, !dbg !11370
  %conv = zext i1 %tobool to i8, !dbg !11370
  %8 = bitcast %struct.devlink_port_attrs* %attrs to i8*, !dbg !11371
  %bf.load = load i8, i8* %8, align 4, !dbg !11372
  %bf.value = and i8 %conv, 1, !dbg !11372
  %bf.clear = and i8 %bf.load, -2, !dbg !11372
  %bf.set = or i8 %bf.clear, %bf.value, !dbg !11372
  store i8 %bf.set, i8* %8, align 4, !dbg !11372
  %9 = load i32, i32* %lanes.addr, align 4, !dbg !11373
  %lanes3 = getelementptr inbounds %struct.devlink_port_attrs, %struct.devlink_port_attrs* %attrs, i32 0, i32 1, !dbg !11374
  store i32 %9, i32* %lanes3, align 4, !dbg !11375
  %10 = load i8, i8* %splittable.addr, align 1, !dbg !11376
  %tobool4 = trunc i8 %10 to i1, !dbg !11376
  %conv5 = zext i1 %tobool4 to i8, !dbg !11376
  %11 = bitcast %struct.devlink_port_attrs* %attrs to i8*, !dbg !11377
  %bf.load6 = load i8, i8* %11, align 4, !dbg !11378
  %bf.value7 = and i8 %conv5, 1, !dbg !11378
  %bf.shl = shl i8 %bf.value7, 1, !dbg !11378
  %bf.clear8 = and i8 %bf.load6, -3, !dbg !11378
  %bf.set9 = or i8 %bf.clear8, %bf.shl, !dbg !11378
  store i8 %bf.set9, i8* %11, align 4, !dbg !11378
  %12 = load i32, i32* %flavour.addr, align 4, !dbg !11379
  %flavour10 = getelementptr inbounds %struct.devlink_port_attrs, %struct.devlink_port_attrs* %attrs, i32 0, i32 2, !dbg !11380
  store i32 %12, i32* %flavour10, align 4, !dbg !11381
  %13 = load i32, i32* %port_number.addr, align 4, !dbg !11382
  %14 = getelementptr inbounds %struct.devlink_port_attrs, %struct.devlink_port_attrs* %attrs, i32 0, i32 4, !dbg !11383
  %phys = bitcast %union.anon.87* %14 to %struct.devlink_port_phys_attrs*, !dbg !11383
  %port_number11 = getelementptr inbounds %struct.devlink_port_phys_attrs, %struct.devlink_port_phys_attrs* %phys, i32 0, i32 0, !dbg !11384
  store i32 %13, i32* %port_number11, align 4, !dbg !11385
  %15 = load i32, i32* %split_port_subnumber.addr, align 4, !dbg !11386
  %16 = getelementptr inbounds %struct.devlink_port_attrs, %struct.devlink_port_attrs* %attrs, i32 0, i32 4, !dbg !11387
  %phys12 = bitcast %union.anon.87* %16 to %struct.devlink_port_phys_attrs*, !dbg !11387
  %split_subport_number = getelementptr inbounds %struct.devlink_port_phys_attrs, %struct.devlink_port_phys_attrs* %phys12, i32 0, i32 1, !dbg !11388
  store i32 %15, i32* %split_subport_number, align 4, !dbg !11389
  %switch_id13 = getelementptr inbounds %struct.devlink_port_attrs, %struct.devlink_port_attrs* %attrs, i32 0, i32 3, !dbg !11390
  %id = getelementptr inbounds %struct.netdev_phys_item_id, %struct.netdev_phys_item_id* %switch_id13, i32 0, i32 0, !dbg !11391
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %id, i64 0, i64 0, !dbg !11392
  %17 = load i8*, i8** %switch_id.addr, align 8, !dbg !11393
  %18 = load i8, i8* %switch_id_len.addr, align 1, !dbg !11394
  %conv14 = zext i8 %18 to i64, !dbg !11394
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %arraydecay, i8* align 1 %17, i64 %conv14, i1 false), !dbg !11392
  %19 = load i8, i8* %switch_id_len.addr, align 1, !dbg !11395
  %switch_id15 = getelementptr inbounds %struct.devlink_port_attrs, %struct.devlink_port_attrs* %attrs, i32 0, i32 3, !dbg !11396
  %id_len = getelementptr inbounds %struct.netdev_phys_item_id, %struct.netdev_phys_item_id* %switch_id15, i32 0, i32 1, !dbg !11397
  store i8 %19, i8* %id_len, align 4, !dbg !11398
  %20 = load i8, i8* %local_port.addr, align 1, !dbg !11399
  %21 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !11400
  %local_port16 = getelementptr inbounds %struct.mlxsw_core_port, %struct.mlxsw_core_port* %21, i32 0, i32 2, !dbg !11401
  store i8 %20, i8* %local_port16, align 8, !dbg !11402
  %22 = load %struct.devlink_port*, %struct.devlink_port** %devlink_port, align 8, !dbg !11403
  call void @devlink_port_attrs_set(%struct.devlink_port* %22, %struct.devlink_port_attrs* %attrs) #11, !dbg !11404
  %23 = load %struct.devlink*, %struct.devlink** %devlink, align 8, !dbg !11405
  %24 = load %struct.devlink_port*, %struct.devlink_port** %devlink_port, align 8, !dbg !11406
  %25 = load i8, i8* %local_port.addr, align 1, !dbg !11407
  %conv17 = zext i8 %25 to i32, !dbg !11407
  %call18 = call i32 @devlink_port_register(%struct.devlink* %23, %struct.devlink_port* %24, i32 %conv17) #11, !dbg !11408
  store i32 %call18, i32* %err, align 4, !dbg !11409
  %26 = load i32, i32* %err, align 4, !dbg !11410
  %tobool19 = icmp ne i32 %26, 0, !dbg !11410
  br i1 %tobool19, label %if.then, label %if.end, !dbg !11412

if.then:                                          ; preds = %entry
  %27 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !11413
  %28 = bitcast %struct.mlxsw_core_port* %27 to i8*, !dbg !11414
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 288, i1 false), !dbg !11414
  br label %if.end, !dbg !11414

if.end:                                           ; preds = %if.then, %entry
  %29 = load i32, i32* %err, align 4, !dbg !11415
  ret i32 %29, !dbg !11416
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlxsw_core_port_fini(%struct.mlxsw_core* %mlxsw_core, i8 zeroext %local_port) #0 !dbg !11417 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %local_port.addr = alloca i8, align 1
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !11420, metadata !DIExpression()), !dbg !11421
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !11422, metadata !DIExpression()), !dbg !11423
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11424
  %1 = load i8, i8* %local_port.addr, align 1, !dbg !11425
  call void @__mlxsw_core_port_fini(%struct.mlxsw_core* %0, i8 zeroext %1) #11, !dbg !11426
  ret void, !dbg !11427
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__mlxsw_core_port_fini(%struct.mlxsw_core* %mlxsw_core, i8 zeroext %local_port) #0 !dbg !11428 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %local_port.addr = alloca i8, align 1
  %mlxsw_core_port = alloca %struct.mlxsw_core_port*, align 8
  %devlink_port = alloca %struct.devlink_port*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !11429, metadata !DIExpression()), !dbg !11430
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !11431, metadata !DIExpression()), !dbg !11432
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core_port** %mlxsw_core_port, metadata !11433, metadata !DIExpression()), !dbg !11434
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11435
  %ports = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %0, i32 0, i32 12, !dbg !11436
  %1 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %ports, align 8, !dbg !11436
  %2 = load i8, i8* %local_port.addr, align 1, !dbg !11437
  %idxprom = zext i8 %2 to i64, !dbg !11435
  %arrayidx = getelementptr %struct.mlxsw_core_port, %struct.mlxsw_core_port* %1, i64 %idxprom, !dbg !11435
  store %struct.mlxsw_core_port* %arrayidx, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !11434
  call void @llvm.dbg.declare(metadata %struct.devlink_port** %devlink_port, metadata !11438, metadata !DIExpression()), !dbg !11439
  %3 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !11440
  %devlink_port1 = getelementptr inbounds %struct.mlxsw_core_port, %struct.mlxsw_core_port* %3, i32 0, i32 0, !dbg !11441
  store %struct.devlink_port* %devlink_port1, %struct.devlink_port** %devlink_port, align 8, !dbg !11439
  %4 = load %struct.devlink_port*, %struct.devlink_port** %devlink_port, align 8, !dbg !11442
  call void @devlink_port_unregister(%struct.devlink_port* %4) #11, !dbg !11443
  %5 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !11444
  %6 = bitcast %struct.mlxsw_core_port* %5 to i8*, !dbg !11445
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 288, i1 false), !dbg !11445
  ret void, !dbg !11446
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_core_cpu_port_init(%struct.mlxsw_core* %mlxsw_core, i8* %port_driver_priv, i8* %switch_id, i8 zeroext %switch_id_len) #0 !dbg !11447 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %port_driver_priv.addr = alloca i8*, align 8
  %switch_id.addr = alloca i8*, align 8
  %switch_id_len.addr = alloca i8, align 1
  %mlxsw_core_port = alloca %struct.mlxsw_core_port*, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !11450, metadata !DIExpression()), !dbg !11451
  store i8* %port_driver_priv, i8** %port_driver_priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %port_driver_priv.addr, metadata !11452, metadata !DIExpression()), !dbg !11453
  store i8* %switch_id, i8** %switch_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %switch_id.addr, metadata !11454, metadata !DIExpression()), !dbg !11455
  store i8 %switch_id_len, i8* %switch_id_len.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %switch_id_len.addr, metadata !11456, metadata !DIExpression()), !dbg !11457
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core_port** %mlxsw_core_port, metadata !11458, metadata !DIExpression()), !dbg !11459
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11460
  %ports = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %0, i32 0, i32 12, !dbg !11461
  %1 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %ports, align 8, !dbg !11461
  %arrayidx = getelementptr %struct.mlxsw_core_port, %struct.mlxsw_core_port* %1, i64 0, !dbg !11460
  store %struct.mlxsw_core_port* %arrayidx, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !11459
  call void @llvm.dbg.declare(metadata i32* %err, metadata !11462, metadata !DIExpression()), !dbg !11463
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11464
  %3 = load i8*, i8** %switch_id.addr, align 8, !dbg !11465
  %4 = load i8, i8* %switch_id_len.addr, align 1, !dbg !11466
  %call = call i32 @__mlxsw_core_port_init(%struct.mlxsw_core* %2, i8 zeroext 0, i32 1, i32 0, i1 zeroext false, i32 0, i1 zeroext false, i32 0, i8* %3, i8 zeroext %4) #11, !dbg !11467
  store i32 %call, i32* %err, align 4, !dbg !11468
  %5 = load i32, i32* %err, align 4, !dbg !11469
  %tobool = icmp ne i32 %5, 0, !dbg !11469
  br i1 %tobool, label %if.then, label %if.end, !dbg !11471

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %err, align 4, !dbg !11472
  store i32 %6, i32* %retval, align 4, !dbg !11473
  br label %return, !dbg !11473

if.end:                                           ; preds = %entry
  %7 = load i8*, i8** %port_driver_priv.addr, align 8, !dbg !11474
  %8 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !11475
  %port_driver_priv1 = getelementptr inbounds %struct.mlxsw_core_port, %struct.mlxsw_core_port* %8, i32 0, i32 1, !dbg !11476
  store i8* %7, i8** %port_driver_priv1, align 8, !dbg !11477
  store i32 0, i32* %retval, align 4, !dbg !11478
  br label %return, !dbg !11478

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !11479
  ret i32 %9, !dbg !11479
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlxsw_core_cpu_port_fini(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !11480 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !11481, metadata !DIExpression()), !dbg !11482
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11483
  call void @__mlxsw_core_port_fini(%struct.mlxsw_core* %0, i8 zeroext 0) #11, !dbg !11484
  ret void, !dbg !11485
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlxsw_core_port_eth_set(%struct.mlxsw_core* %mlxsw_core, i8 zeroext %local_port, i8* %port_driver_priv, %struct.net_device* %dev) #0 !dbg !11486 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %local_port.addr = alloca i8, align 1
  %port_driver_priv.addr = alloca i8*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %mlxsw_core_port = alloca %struct.mlxsw_core_port*, align 8
  %devlink_port = alloca %struct.devlink_port*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !11489, metadata !DIExpression()), !dbg !11490
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !11491, metadata !DIExpression()), !dbg !11492
  store i8* %port_driver_priv, i8** %port_driver_priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %port_driver_priv.addr, metadata !11493, metadata !DIExpression()), !dbg !11494
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11495, metadata !DIExpression()), !dbg !11496
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core_port** %mlxsw_core_port, metadata !11497, metadata !DIExpression()), !dbg !11498
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11499
  %ports = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %0, i32 0, i32 12, !dbg !11500
  %1 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %ports, align 8, !dbg !11500
  %2 = load i8, i8* %local_port.addr, align 1, !dbg !11501
  %idxprom = zext i8 %2 to i64, !dbg !11499
  %arrayidx = getelementptr %struct.mlxsw_core_port, %struct.mlxsw_core_port* %1, i64 %idxprom, !dbg !11499
  store %struct.mlxsw_core_port* %arrayidx, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !11498
  call void @llvm.dbg.declare(metadata %struct.devlink_port** %devlink_port, metadata !11502, metadata !DIExpression()), !dbg !11503
  %3 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !11504
  %devlink_port1 = getelementptr inbounds %struct.mlxsw_core_port, %struct.mlxsw_core_port* %3, i32 0, i32 0, !dbg !11505
  store %struct.devlink_port* %devlink_port1, %struct.devlink_port** %devlink_port, align 8, !dbg !11503
  %4 = load i8*, i8** %port_driver_priv.addr, align 8, !dbg !11506
  %5 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !11507
  %port_driver_priv2 = getelementptr inbounds %struct.mlxsw_core_port, %struct.mlxsw_core_port* %5, i32 0, i32 1, !dbg !11508
  store i8* %4, i8** %port_driver_priv2, align 8, !dbg !11509
  %6 = load %struct.devlink_port*, %struct.devlink_port** %devlink_port, align 8, !dbg !11510
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11511
  call void @devlink_port_type_eth_set(%struct.devlink_port* %6, %struct.net_device* %7) #11, !dbg !11512
  ret void, !dbg !11513
}

; Function Attrs: noredzone
declare dso_local void @devlink_port_type_eth_set(%struct.devlink_port*, %struct.net_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlxsw_core_port_ib_set(%struct.mlxsw_core* %mlxsw_core, i8 zeroext %local_port, i8* %port_driver_priv) #0 !dbg !11514 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %local_port.addr = alloca i8, align 1
  %port_driver_priv.addr = alloca i8*, align 8
  %mlxsw_core_port = alloca %struct.mlxsw_core_port*, align 8
  %devlink_port = alloca %struct.devlink_port*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !11517, metadata !DIExpression()), !dbg !11518
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !11519, metadata !DIExpression()), !dbg !11520
  store i8* %port_driver_priv, i8** %port_driver_priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %port_driver_priv.addr, metadata !11521, metadata !DIExpression()), !dbg !11522
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core_port** %mlxsw_core_port, metadata !11523, metadata !DIExpression()), !dbg !11524
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11525
  %ports = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %0, i32 0, i32 12, !dbg !11526
  %1 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %ports, align 8, !dbg !11526
  %2 = load i8, i8* %local_port.addr, align 1, !dbg !11527
  %idxprom = zext i8 %2 to i64, !dbg !11525
  %arrayidx = getelementptr %struct.mlxsw_core_port, %struct.mlxsw_core_port* %1, i64 %idxprom, !dbg !11525
  store %struct.mlxsw_core_port* %arrayidx, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !11524
  call void @llvm.dbg.declare(metadata %struct.devlink_port** %devlink_port, metadata !11528, metadata !DIExpression()), !dbg !11529
  %3 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !11530
  %devlink_port1 = getelementptr inbounds %struct.mlxsw_core_port, %struct.mlxsw_core_port* %3, i32 0, i32 0, !dbg !11531
  store %struct.devlink_port* %devlink_port1, %struct.devlink_port** %devlink_port, align 8, !dbg !11529
  %4 = load i8*, i8** %port_driver_priv.addr, align 8, !dbg !11532
  %5 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !11533
  %port_driver_priv2 = getelementptr inbounds %struct.mlxsw_core_port, %struct.mlxsw_core_port* %5, i32 0, i32 1, !dbg !11534
  store i8* %4, i8** %port_driver_priv2, align 8, !dbg !11535
  %6 = load %struct.devlink_port*, %struct.devlink_port** %devlink_port, align 8, !dbg !11536
  call void @devlink_port_type_ib_set(%struct.devlink_port* %6, %struct.ib_device* null) #11, !dbg !11537
  ret void, !dbg !11538
}

; Function Attrs: noredzone
declare dso_local void @devlink_port_type_ib_set(%struct.devlink_port*, %struct.ib_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlxsw_core_port_clear(%struct.mlxsw_core* %mlxsw_core, i8 zeroext %local_port, i8* %port_driver_priv) #0 !dbg !11539 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %local_port.addr = alloca i8, align 1
  %port_driver_priv.addr = alloca i8*, align 8
  %mlxsw_core_port = alloca %struct.mlxsw_core_port*, align 8
  %devlink_port = alloca %struct.devlink_port*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !11540, metadata !DIExpression()), !dbg !11541
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !11542, metadata !DIExpression()), !dbg !11543
  store i8* %port_driver_priv, i8** %port_driver_priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %port_driver_priv.addr, metadata !11544, metadata !DIExpression()), !dbg !11545
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core_port** %mlxsw_core_port, metadata !11546, metadata !DIExpression()), !dbg !11547
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11548
  %ports = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %0, i32 0, i32 12, !dbg !11549
  %1 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %ports, align 8, !dbg !11549
  %2 = load i8, i8* %local_port.addr, align 1, !dbg !11550
  %idxprom = zext i8 %2 to i64, !dbg !11548
  %arrayidx = getelementptr %struct.mlxsw_core_port, %struct.mlxsw_core_port* %1, i64 %idxprom, !dbg !11548
  store %struct.mlxsw_core_port* %arrayidx, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !11547
  call void @llvm.dbg.declare(metadata %struct.devlink_port** %devlink_port, metadata !11551, metadata !DIExpression()), !dbg !11552
  %3 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !11553
  %devlink_port1 = getelementptr inbounds %struct.mlxsw_core_port, %struct.mlxsw_core_port* %3, i32 0, i32 0, !dbg !11554
  store %struct.devlink_port* %devlink_port1, %struct.devlink_port** %devlink_port, align 8, !dbg !11552
  %4 = load i8*, i8** %port_driver_priv.addr, align 8, !dbg !11555
  %5 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !11556
  %port_driver_priv2 = getelementptr inbounds %struct.mlxsw_core_port, %struct.mlxsw_core_port* %5, i32 0, i32 1, !dbg !11557
  store i8* %4, i8** %port_driver_priv2, align 8, !dbg !11558
  %6 = load %struct.devlink_port*, %struct.devlink_port** %devlink_port, align 8, !dbg !11559
  call void @devlink_port_type_clear(%struct.devlink_port* %6) #11, !dbg !11560
  ret void, !dbg !11561
}

; Function Attrs: noredzone
declare dso_local void @devlink_port_type_clear(%struct.devlink_port*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_core_port_type_get(%struct.mlxsw_core* %mlxsw_core, i8 zeroext %local_port) #0 !dbg !11562 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %local_port.addr = alloca i8, align 1
  %mlxsw_core_port = alloca %struct.mlxsw_core_port*, align 8
  %devlink_port = alloca %struct.devlink_port*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !11565, metadata !DIExpression()), !dbg !11566
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !11567, metadata !DIExpression()), !dbg !11568
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core_port** %mlxsw_core_port, metadata !11569, metadata !DIExpression()), !dbg !11570
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11571
  %ports = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %0, i32 0, i32 12, !dbg !11572
  %1 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %ports, align 8, !dbg !11572
  %2 = load i8, i8* %local_port.addr, align 1, !dbg !11573
  %idxprom = zext i8 %2 to i64, !dbg !11571
  %arrayidx = getelementptr %struct.mlxsw_core_port, %struct.mlxsw_core_port* %1, i64 %idxprom, !dbg !11571
  store %struct.mlxsw_core_port* %arrayidx, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !11570
  call void @llvm.dbg.declare(metadata %struct.devlink_port** %devlink_port, metadata !11574, metadata !DIExpression()), !dbg !11575
  %3 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !11576
  %devlink_port1 = getelementptr inbounds %struct.mlxsw_core_port, %struct.mlxsw_core_port* %3, i32 0, i32 0, !dbg !11577
  store %struct.devlink_port* %devlink_port1, %struct.devlink_port** %devlink_port, align 8, !dbg !11575
  %4 = load %struct.devlink_port*, %struct.devlink_port** %devlink_port, align 8, !dbg !11578
  %type = getelementptr inbounds %struct.devlink_port, %struct.devlink_port* %4, i32 0, i32 7, !dbg !11579
  %5 = load i32, i32* %type, align 8, !dbg !11579
  ret i32 %5, !dbg !11580
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.devlink_port* @mlxsw_core_port_devlink_port_get(%struct.mlxsw_core* %mlxsw_core, i8 zeroext %local_port) #0 !dbg !11581 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %local_port.addr = alloca i8, align 1
  %mlxsw_core_port = alloca %struct.mlxsw_core_port*, align 8
  %devlink_port = alloca %struct.devlink_port*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !11584, metadata !DIExpression()), !dbg !11585
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !11586, metadata !DIExpression()), !dbg !11587
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core_port** %mlxsw_core_port, metadata !11588, metadata !DIExpression()), !dbg !11589
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11590
  %ports = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %0, i32 0, i32 12, !dbg !11591
  %1 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %ports, align 8, !dbg !11591
  %2 = load i8, i8* %local_port.addr, align 1, !dbg !11592
  %idxprom = zext i8 %2 to i64, !dbg !11590
  %arrayidx = getelementptr %struct.mlxsw_core_port, %struct.mlxsw_core_port* %1, i64 %idxprom, !dbg !11590
  store %struct.mlxsw_core_port* %arrayidx, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !11589
  call void @llvm.dbg.declare(metadata %struct.devlink_port** %devlink_port, metadata !11593, metadata !DIExpression()), !dbg !11594
  %3 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !11595
  %devlink_port1 = getelementptr inbounds %struct.mlxsw_core_port, %struct.mlxsw_core_port* %3, i32 0, i32 0, !dbg !11596
  store %struct.devlink_port* %devlink_port1, %struct.devlink_port** %devlink_port, align 8, !dbg !11594
  %4 = load %struct.devlink_port*, %struct.devlink_port** %devlink_port, align 8, !dbg !11597
  ret %struct.devlink_port* %4, !dbg !11598
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.mlxsw_env* @mlxsw_core_env(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !11599 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !11602, metadata !DIExpression()), !dbg !11603
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11604
  %env = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %0, i32 0, i32 16, !dbg !11605
  %1 = load %struct.mlxsw_env*, %struct.mlxsw_env** %env, align 8, !dbg !11605
  ret %struct.mlxsw_env* %1, !dbg !11606
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @mlxsw_core_is_initialized(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !11607 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !11608, metadata !DIExpression()), !dbg !11609
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11610
  %is_initialized = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %0, i32 0, i32 17, !dbg !11611
  %1 = load i8, i8* %is_initialized, align 8, !dbg !11611
  %tobool = trunc i8 %1 to i1, !dbg !11611
  ret i1 %tobool, !dbg !11612
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_core_module_max_width(%struct.mlxsw_core* %mlxsw_core, i8 zeroext %module) #0 !dbg !11613 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %module.addr = alloca i8, align 1
  %module_type = alloca i32, align 4
  %pmtm_pl = alloca [16 x i8], align 16
  %err = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !11616, metadata !DIExpression()), !dbg !11617
  store i8 %module, i8* %module.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %module.addr, metadata !11618, metadata !DIExpression()), !dbg !11619
  call void @llvm.dbg.declare(metadata i32* %module_type, metadata !11620, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.declare(metadata [16 x i8]* %pmtm_pl, metadata !11622, metadata !DIExpression()), !dbg !11623
  call void @llvm.dbg.declare(metadata i32* %err, metadata !11624, metadata !DIExpression()), !dbg !11625
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %pmtm_pl, i64 0, i64 0, !dbg !11626
  %0 = load i8, i8* %module.addr, align 1, !dbg !11627
  call void @mlxsw_reg_pmtm_pack(i8* %arraydecay, i8 zeroext %0) #11, !dbg !11628
  %1 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11629
  %arraydecay1 = getelementptr inbounds [16 x i8], [16 x i8]* %pmtm_pl, i64 0, i64 0, !dbg !11630
  %call = call i32 @mlxsw_reg_query(%struct.mlxsw_core* %1, %struct.mlxsw_reg_info* @mlxsw_reg_pmtm, i8* %arraydecay1) #11, !dbg !11631
  store i32 %call, i32* %err, align 4, !dbg !11632
  %2 = load i32, i32* %err, align 4, !dbg !11633
  %tobool = icmp ne i32 %2, 0, !dbg !11633
  br i1 %tobool, label %if.then, label %if.end, !dbg !11635

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %err, align 4, !dbg !11636
  store i32 %3, i32* %retval, align 4, !dbg !11637
  br label %return, !dbg !11637

if.end:                                           ; preds = %entry
  %arraydecay2 = getelementptr inbounds [16 x i8], [16 x i8]* %pmtm_pl, i64 0, i64 0, !dbg !11638
  call void @mlxsw_reg_pmtm_unpack(i8* %arraydecay2, i32* %module_type) #11, !dbg !11639
  %4 = load i32, i32* %module_type, align 4, !dbg !11640
  switch i32 %4, label %sw.default [
    i32 18, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 10, label %sw.bb3
    i32 0, label %sw.bb3
    i32 1, label %sw.bb3
    i32 11, label %sw.bb4
    i32 8, label %sw.bb4
    i32 16, label %sw.bb4
    i32 17, label %sw.bb4
    i32 12, label %sw.bb5
    i32 4, label %sw.bb5
    i32 2, label %sw.bb5
  ], !dbg !11641

sw.bb:                                            ; preds = %if.end, %if.end, %if.end
  store i32 8, i32* %retval, align 4, !dbg !11642
  br label %return, !dbg !11642

sw.bb3:                                           ; preds = %if.end, %if.end, %if.end
  store i32 4, i32* %retval, align 4, !dbg !11644
  br label %return, !dbg !11644

sw.bb4:                                           ; preds = %if.end, %if.end, %if.end, %if.end
  store i32 2, i32* %retval, align 4, !dbg !11645
  br label %return, !dbg !11645

sw.bb5:                                           ; preds = %if.end, %if.end, %if.end
  store i32 1, i32* %retval, align 4, !dbg !11646
  br label %return, !dbg !11646

sw.default:                                       ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !11647
  br label %return, !dbg !11647

return:                                           ; preds = %sw.default, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !11648
  ret i32 %5, !dbg !11648
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_pmtm_pack(i8* %payload, i8 zeroext %module) #0 !dbg !11649 {
entry:
  %payload.addr = alloca i8*, align 8
  %module.addr = alloca i8, align 1
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !11652, metadata !DIExpression()), !dbg !11653
  store i8 %module, i8* %module.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %module.addr, metadata !11654, metadata !DIExpression()), !dbg !11655
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !11656
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_pmtm, i32 0, i32 1), align 2, !dbg !11656
  %conv = zext i16 %1 to i64, !dbg !11656
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !11656
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !11657
  %3 = load i8, i8* %module.addr, align 1, !dbg !11658
  %conv1 = zext i8 %3 to i32, !dbg !11658
  call void @mlxsw_reg_pmtm_module_set(i8* %2, i32 %conv1) #11, !dbg !11659
  ret void, !dbg !11660
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_pmtm_unpack(i8* %payload, i32* %module_type) #0 !dbg !11661 {
entry:
  %payload.addr = alloca i8*, align 8
  %module_type.addr = alloca i32*, align 8
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !11665, metadata !DIExpression()), !dbg !11666
  store i32* %module_type, i32** %module_type.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %module_type.addr, metadata !11667, metadata !DIExpression()), !dbg !11668
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !11669
  %call = call i32 @mlxsw_reg_pmtm_module_type_get(i8* %0) #11, !dbg !11670
  %1 = load i32*, i32** %module_type.addr, align 8, !dbg !11671
  store i32 %call, i32* %1, align 4, !dbg !11672
  ret void, !dbg !11673
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_cmd_exec(%struct.mlxsw_core* %mlxsw_core, i16 zeroext %opcode, i8 zeroext %opcode_mod, i32 %in_mod, i1 zeroext %out_mbox_direct, i1 zeroext %reset_ok, i8* %in_mbox, i64 %in_mbox_size, i8* %out_mbox, i64 %out_mbox_size) #0 !dbg !11674 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %opcode.addr = alloca i16, align 2
  %opcode_mod.addr = alloca i8, align 1
  %in_mod.addr = alloca i32, align 4
  %out_mbox_direct.addr = alloca i8, align 1
  %reset_ok.addr = alloca i8, align 1
  %in_mbox.addr = alloca i8*, align 8
  %in_mbox_size.addr = alloca i64, align 8
  %out_mbox.addr = alloca i8*, align 8
  %out_mbox_size.addr = alloca i64, align 8
  %status = alloca i8, align 1
  %err = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !11677, metadata !DIExpression()), !dbg !11678
  store i16 %opcode, i16* %opcode.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %opcode.addr, metadata !11679, metadata !DIExpression()), !dbg !11680
  store i8 %opcode_mod, i8* %opcode_mod.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %opcode_mod.addr, metadata !11681, metadata !DIExpression()), !dbg !11682
  store i32 %in_mod, i32* %in_mod.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %in_mod.addr, metadata !11683, metadata !DIExpression()), !dbg !11684
  %frombool = zext i1 %out_mbox_direct to i8
  store i8 %frombool, i8* %out_mbox_direct.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %out_mbox_direct.addr, metadata !11685, metadata !DIExpression()), !dbg !11686
  %frombool1 = zext i1 %reset_ok to i8
  store i8 %frombool1, i8* %reset_ok.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reset_ok.addr, metadata !11687, metadata !DIExpression()), !dbg !11688
  store i8* %in_mbox, i8** %in_mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %in_mbox.addr, metadata !11689, metadata !DIExpression()), !dbg !11690
  store i64 %in_mbox_size, i64* %in_mbox_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %in_mbox_size.addr, metadata !11691, metadata !DIExpression()), !dbg !11692
  store i8* %out_mbox, i8** %out_mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out_mbox.addr, metadata !11693, metadata !DIExpression()), !dbg !11694
  store i64 %out_mbox_size, i64* %out_mbox_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %out_mbox_size.addr, metadata !11695, metadata !DIExpression()), !dbg !11696
  call void @llvm.dbg.declare(metadata i8* %status, metadata !11697, metadata !DIExpression()), !dbg !11698
  call void @llvm.dbg.declare(metadata i32* %err, metadata !11699, metadata !DIExpression()), !dbg !11700
  br label %do.body, !dbg !11701

do.body:                                          ; preds = %entry
  %0 = load i64, i64* %in_mbox_size.addr, align 8, !dbg !11702
  %rem = urem i64 %0, 4, !dbg !11702
  %tobool = icmp ne i64 %rem, 0, !dbg !11702
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !11702

lor.rhs:                                          ; preds = %do.body
  %1 = load i64, i64* %out_mbox_size.addr, align 8, !dbg !11702
  %rem2 = urem i64 %1, 4, !dbg !11702
  %tobool3 = icmp ne i64 %rem2, 0, !dbg !11702
  br label %lor.end, !dbg !11702

lor.end:                                          ; preds = %lor.rhs, %do.body
  %2 = phi i1 [ true, %do.body ], [ %tobool3, %lor.rhs ]
  %lnot = xor i1 %2, true, !dbg !11702
  %lnot4 = xor i1 %lnot, true, !dbg !11702
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !11702
  %conv = sext i32 %lnot.ext to i64, !dbg !11702
  %tobool5 = icmp ne i64 %conv, 0, !dbg !11702
  br i1 %tobool5, label %if.then, label %if.end, !dbg !11705

if.then:                                          ; preds = %lor.end
  br label %do.body6, !dbg !11702

do.body6:                                         ; preds = %if.then
  br label %do.body7, !dbg !11706

do.body7:                                         ; preds = %do.body6
  br label %do.end, !dbg !11708

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !11706

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 2935, i32 0, i64 12) #10, !dbg !11710, !srcloc !11712
  br label %do.end9, !dbg !11710

do.end9:                                          ; preds = %do.body8
  br label %do.body10, !dbg !11706

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 380) #10, !dbg !11713, !srcloc !11716
  unreachable, !dbg !11717

do.end11:                                         ; No predecessors!
  br label %do.end12, !dbg !11706

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !11706

if.end:                                           ; preds = %do.end12, %lor.end
  br label %do.end13, !dbg !11705

do.end13:                                         ; preds = %if.end
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11718
  %bus = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %3, i32 0, i32 1, !dbg !11720
  %4 = load %struct.mlxsw_bus*, %struct.mlxsw_bus** %bus, align 8, !dbg !11720
  %cmd_exec = getelementptr inbounds %struct.mlxsw_bus, %struct.mlxsw_bus* %4, i32 0, i32 5, !dbg !11721
  %5 = load i32 (i8*, i16, i8, i32, i1, i8*, i64, i8*, i64, i8*)*, i32 (i8*, i16, i8, i32, i1, i8*, i64, i8*, i64, i8*)** %cmd_exec, align 8, !dbg !11721
  %tobool14 = icmp ne i32 (i8*, i16, i8, i32, i1, i8*, i64, i8*, i64, i8*)* %5, null, !dbg !11718
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !11722

if.then15:                                        ; preds = %do.end13
  store i32 -95, i32* %retval, align 4, !dbg !11723
  br label %return, !dbg !11723

if.end16:                                         ; preds = %do.end13
  %6 = load i8*, i8** %in_mbox.addr, align 8, !dbg !11724
  %tobool17 = icmp ne i8* %6, null, !dbg !11724
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !11726

if.then18:                                        ; preds = %if.end16
  %7 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11727
  %8 = load i8*, i8** %in_mbox.addr, align 8, !dbg !11729
  %9 = load i64, i64* %in_mbox_size.addr, align 8, !dbg !11730
  call void @mlxsw_core_buf_dump_dbg(%struct.mlxsw_core* %7, i8* %8, i64 %9) #11, !dbg !11731
  br label %if.end19, !dbg !11732

if.end19:                                         ; preds = %if.then18, %if.end16
  %10 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11733
  %bus20 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %10, i32 0, i32 1, !dbg !11734
  %11 = load %struct.mlxsw_bus*, %struct.mlxsw_bus** %bus20, align 8, !dbg !11734
  %cmd_exec21 = getelementptr inbounds %struct.mlxsw_bus, %struct.mlxsw_bus* %11, i32 0, i32 5, !dbg !11735
  %12 = load i32 (i8*, i16, i8, i32, i1, i8*, i64, i8*, i64, i8*)*, i32 (i8*, i16, i8, i32, i1, i8*, i64, i8*, i64, i8*)** %cmd_exec21, align 8, !dbg !11735
  %13 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11736
  %bus_priv = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %13, i32 0, i32 2, !dbg !11737
  %14 = load i8*, i8** %bus_priv, align 8, !dbg !11737
  %15 = load i16, i16* %opcode.addr, align 2, !dbg !11738
  %16 = load i8, i8* %opcode_mod.addr, align 1, !dbg !11739
  %17 = load i32, i32* %in_mod.addr, align 4, !dbg !11740
  %18 = load i8, i8* %out_mbox_direct.addr, align 1, !dbg !11741
  %tobool22 = trunc i8 %18 to i1, !dbg !11741
  %19 = load i8*, i8** %in_mbox.addr, align 8, !dbg !11742
  %20 = load i64, i64* %in_mbox_size.addr, align 8, !dbg !11743
  %21 = load i8*, i8** %out_mbox.addr, align 8, !dbg !11744
  %22 = load i64, i64* %out_mbox_size.addr, align 8, !dbg !11745
  %call = call i32 %12(i8* %14, i16 zeroext %15, i8 zeroext %16, i32 %17, i1 zeroext %tobool22, i8* %19, i64 %20, i8* %21, i64 %22, i8* %status) #11, !dbg !11733
  store i32 %call, i32* %err, align 4, !dbg !11746
  %23 = load i32, i32* %err, align 4, !dbg !11747
  %tobool23 = icmp ne i32 %23, 0, !dbg !11747
  br i1 %tobool23, label %if.end26, label %land.lhs.true, !dbg !11749

land.lhs.true:                                    ; preds = %if.end19
  %24 = load i8*, i8** %out_mbox.addr, align 8, !dbg !11750
  %tobool24 = icmp ne i8* %24, null, !dbg !11750
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !11751

if.then25:                                        ; preds = %land.lhs.true
  %25 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11752
  %26 = load i8*, i8** %out_mbox.addr, align 8, !dbg !11754
  %27 = load i64, i64* %out_mbox_size.addr, align 8, !dbg !11755
  call void @mlxsw_core_buf_dump_dbg(%struct.mlxsw_core* %25, i8* %26, i64 %27) #11, !dbg !11756
  br label %if.end26, !dbg !11757

if.end26:                                         ; preds = %if.then25, %land.lhs.true, %if.end19
  %28 = load i8, i8* %reset_ok.addr, align 1, !dbg !11758
  %tobool27 = trunc i8 %28 to i1, !dbg !11758
  br i1 %tobool27, label %land.lhs.true29, label %if.else, !dbg !11760

land.lhs.true29:                                  ; preds = %if.end26
  %29 = load i32, i32* %err, align 4, !dbg !11761
  %cmp = icmp eq i32 %29, -5, !dbg !11762
  br i1 %cmp, label %land.lhs.true31, label %if.else, !dbg !11763

land.lhs.true31:                                  ; preds = %land.lhs.true29
  %30 = load i8, i8* %status, align 1, !dbg !11764
  %conv32 = zext i8 %30 to i32, !dbg !11764
  %cmp33 = icmp eq i32 %conv32, 38, !dbg !11765
  br i1 %cmp33, label %if.then35, label %if.else, !dbg !11766

if.then35:                                        ; preds = %land.lhs.true31
  store i32 0, i32* %err, align 4, !dbg !11767
  br label %if.end59, !dbg !11769

if.else:                                          ; preds = %land.lhs.true31, %land.lhs.true29, %if.end26
  %31 = load i32, i32* %err, align 4, !dbg !11770
  %cmp36 = icmp eq i32 %31, -5, !dbg !11772
  br i1 %cmp36, label %land.lhs.true38, label %if.else48, !dbg !11773

land.lhs.true38:                                  ; preds = %if.else
  %32 = load i8, i8* %status, align 1, !dbg !11774
  %conv39 = zext i8 %32 to i32, !dbg !11774
  %cmp40 = icmp ne i32 %conv39, 0, !dbg !11775
  br i1 %cmp40, label %if.then42, label %if.else48, !dbg !11776

if.then42:                                        ; preds = %land.lhs.true38
  %33 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11777
  %bus_info = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %33, i32 0, i32 3, !dbg !11777
  %34 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info, align 8, !dbg !11777
  %dev = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %34, i32 0, i32 2, !dbg !11777
  %35 = load %struct.device*, %struct.device** %dev, align 8, !dbg !11777
  %36 = load i16, i16* %opcode.addr, align 2, !dbg !11777
  %conv43 = zext i16 %36 to i32, !dbg !11777
  %37 = load i16, i16* %opcode.addr, align 2, !dbg !11777
  %call44 = call i8* @mlxsw_cmd_opcode_str(i16 zeroext %37) #11, !dbg !11777
  %38 = load i8, i8* %opcode_mod.addr, align 1, !dbg !11777
  %conv45 = zext i8 %38 to i32, !dbg !11777
  %39 = load i32, i32* %in_mod.addr, align 4, !dbg !11777
  %40 = load i8, i8* %status, align 1, !dbg !11777
  %conv46 = zext i8 %40 to i32, !dbg !11777
  %41 = load i8, i8* %status, align 1, !dbg !11777
  %call47 = call i8* @mlxsw_cmd_status_str(i8 zeroext %41) #11, !dbg !11777
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %35, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1, i64 0, i64 0), i32 %conv43, i8* %call44, i32 %conv45, i32 %39, i32 %conv46, i8* %call47) #14, !dbg !11777
  br label %if.end58, !dbg !11779

if.else48:                                        ; preds = %land.lhs.true38, %if.else
  %42 = load i32, i32* %err, align 4, !dbg !11780
  %cmp49 = icmp eq i32 %42, -110, !dbg !11782
  br i1 %cmp49, label %if.then51, label %if.end57, !dbg !11783

if.then51:                                        ; preds = %if.else48
  %43 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11784
  %bus_info52 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %43, i32 0, i32 3, !dbg !11784
  %44 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info52, align 8, !dbg !11784
  %dev53 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %44, i32 0, i32 2, !dbg !11784
  %45 = load %struct.device*, %struct.device** %dev53, align 8, !dbg !11784
  %46 = load i16, i16* %opcode.addr, align 2, !dbg !11784
  %conv54 = zext i16 %46 to i32, !dbg !11784
  %47 = load i16, i16* %opcode.addr, align 2, !dbg !11784
  %call55 = call i8* @mlxsw_cmd_opcode_str(i16 zeroext %47) #11, !dbg !11784
  %48 = load i8, i8* %opcode_mod.addr, align 1, !dbg !11784
  %conv56 = zext i8 %48 to i32, !dbg !11784
  %49 = load i32, i32* %in_mod.addr, align 4, !dbg !11784
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %45, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.2, i64 0, i64 0), i32 %conv54, i8* %call55, i32 %conv56, i32 %49) #14, !dbg !11784
  br label %if.end57, !dbg !11786

if.end57:                                         ; preds = %if.then51, %if.else48
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.then42
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.then35
  %50 = load i32, i32* %err, align 4, !dbg !11787
  store i32 %50, i32* %retval, align 4, !dbg !11788
  br label %return, !dbg !11788

return:                                           ; preds = %if.end59, %if.then15
  %51 = load i32, i32* %retval, align 4, !dbg !11789
  ret i32 %51, !dbg !11789
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_core_buf_dump_dbg(%struct.mlxsw_core* %mlxsw_core, i8* %buf, i64 %size) #0 !dbg !11790 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %m = alloca i32*, align 8
  %i = alloca i32, align 4
  %count = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !11793, metadata !DIExpression()), !dbg !11794
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11795, metadata !DIExpression()), !dbg !11796
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11797, metadata !DIExpression()), !dbg !11798
  call void @llvm.dbg.declare(metadata i32** %m, metadata !11799, metadata !DIExpression()), !dbg !11800
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11801
  %1 = bitcast i8* %0 to i32*, !dbg !11802
  store i32* %1, i32** %m, align 8, !dbg !11800
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11803, metadata !DIExpression()), !dbg !11804
  call void @llvm.dbg.declare(metadata i32* %count, metadata !11805, metadata !DIExpression()), !dbg !11806
  %2 = load i64, i64* %size.addr, align 8, !dbg !11807
  %div = udiv i64 %2, 4, !dbg !11808
  %conv = trunc i64 %div to i32, !dbg !11807
  store i32 %conv, i32* %count, align 4, !dbg !11806
  %3 = load i32, i32* %count, align 4, !dbg !11809
  %sub = sub i32 %3, 1, !dbg !11811
  store i32 %sub, i32* %i, align 4, !dbg !11812
  br label %for.cond, !dbg !11813

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !11814
  %cmp = icmp sge i32 %4, 0, !dbg !11816
  br i1 %cmp, label %for.body, label %for.end, !dbg !11817

for.body:                                         ; preds = %for.cond
  %5 = load i32*, i32** %m, align 8, !dbg !11818
  %6 = load i32, i32* %i, align 4, !dbg !11820
  %idxprom = sext i32 %6 to i64, !dbg !11818
  %arrayidx = getelementptr i32, i32* %5, i64 %idxprom, !dbg !11818
  %7 = load i32, i32* %arrayidx, align 4, !dbg !11818
  %tobool = icmp ne i32 %7, 0, !dbg !11818
  br i1 %tobool, label %if.then, label %if.end, !dbg !11821

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !11822

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !11823

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4, !dbg !11824
  %dec = add i32 %8, -1, !dbg !11824
  store i32 %dec, i32* %i, align 4, !dbg !11824
  br label %for.cond, !dbg !11825, !llvm.loop !11826

for.end:                                          ; preds = %if.then, %for.cond
  %9 = load i32, i32* %i, align 4, !dbg !11828
  %inc = add i32 %9, 1, !dbg !11828
  store i32 %inc, i32* %i, align 4, !dbg !11828
  %10 = load i32, i32* %i, align 4, !dbg !11829
  %tobool2 = icmp ne i32 %10, 0, !dbg !11829
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !11829

cond.true:                                        ; preds = %for.end
  %11 = load i32, i32* %i, align 4, !dbg !11830
  br label %cond.end, !dbg !11829

cond.false:                                       ; preds = %for.end
  br label %cond.end, !dbg !11829

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %11, %cond.true ], [ 1, %cond.false ], !dbg !11829
  store i32 %cond, i32* %count, align 4, !dbg !11831
  store i32 0, i32* %i, align 4, !dbg !11832
  br label %for.cond3, !dbg !11834

for.cond3:                                        ; preds = %for.inc7, %cond.end
  %12 = load i32, i32* %i, align 4, !dbg !11835
  %13 = load i32, i32* %count, align 4, !dbg !11837
  %cmp4 = icmp slt i32 %12, %13, !dbg !11838
  br i1 %cmp4, label %for.body6, label %for.end8, !dbg !11839

for.body6:                                        ; preds = %for.cond3
  br label %for.inc7, !dbg !11840

for.inc7:                                         ; preds = %for.body6
  %14 = load i32, i32* %i, align 4, !dbg !11841
  %add = add i32 %14, 4, !dbg !11841
  store i32 %add, i32* %i, align 4, !dbg !11841
  br label %for.cond3, !dbg !11842, !llvm.loop !11843

for.end8:                                         ; preds = %for.cond3
  ret void, !dbg !11845
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @mlxsw_cmd_opcode_str(i16 zeroext %opcode) #0 !dbg !11846 {
entry:
  %retval = alloca i8*, align 8
  %opcode.addr = alloca i16, align 2
  store i16 %opcode, i16* %opcode.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %opcode.addr, metadata !11849, metadata !DIExpression()), !dbg !11850
  %0 = load i16, i16* %opcode.addr, align 2, !dbg !11851
  %conv = zext i16 %0 to i32, !dbg !11851
  switch i32 %conv, label %sw.default [
    i32 4, label %sw.bb
    i32 6, label %sw.bb1
    i32 3, label %sw.bb2
    i32 4095, label %sw.bb3
    i32 4094, label %sw.bb4
    i32 256, label %sw.bb5
    i32 64, label %sw.bb6
    i32 513, label %sw.bb7
    i32 514, label %sw.bb8
    i32 30, label %sw.bb9
    i32 34, label %sw.bb10
    i32 22, label %sw.bb11
    i32 23, label %sw.bb12
    i32 24, label %sw.bb13
    i32 19, label %sw.bb14
    i32 20, label %sw.bb15
    i32 21, label %sw.bb16
    i32 257, label %sw.bb17
  ], !dbg !11852

sw.bb:                                            ; preds = %entry
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.316, i64 0, i64 0), i8** %retval, align 8, !dbg !11853
  br label %return, !dbg !11853

sw.bb1:                                           ; preds = %entry
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.317, i64 0, i64 0), i8** %retval, align 8, !dbg !11855
  br label %return, !dbg !11855

sw.bb2:                                           ; preds = %entry
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.318, i64 0, i64 0), i8** %retval, align 8, !dbg !11856
  br label %return, !dbg !11856

sw.bb3:                                           ; preds = %entry
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.319, i64 0, i64 0), i8** %retval, align 8, !dbg !11857
  br label %return, !dbg !11857

sw.bb4:                                           ; preds = %entry
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.320, i64 0, i64 0), i8** %retval, align 8, !dbg !11858
  br label %return, !dbg !11858

sw.bb5:                                           ; preds = %entry
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.321, i64 0, i64 0), i8** %retval, align 8, !dbg !11859
  br label %return, !dbg !11859

sw.bb6:                                           ; preds = %entry
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.322, i64 0, i64 0), i8** %retval, align 8, !dbg !11860
  br label %return, !dbg !11860

sw.bb7:                                           ; preds = %entry
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.323, i64 0, i64 0), i8** %retval, align 8, !dbg !11861
  br label %return, !dbg !11861

sw.bb8:                                           ; preds = %entry
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.324, i64 0, i64 0), i8** %retval, align 8, !dbg !11862
  br label %return, !dbg !11862

sw.bb9:                                           ; preds = %entry
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.325, i64 0, i64 0), i8** %retval, align 8, !dbg !11863
  br label %return, !dbg !11863

sw.bb10:                                          ; preds = %entry
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.326, i64 0, i64 0), i8** %retval, align 8, !dbg !11864
  br label %return, !dbg !11864

sw.bb11:                                          ; preds = %entry
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.327, i64 0, i64 0), i8** %retval, align 8, !dbg !11865
  br label %return, !dbg !11865

sw.bb12:                                          ; preds = %entry
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i8** %retval, align 8, !dbg !11866
  br label %return, !dbg !11866

sw.bb13:                                          ; preds = %entry
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.329, i64 0, i64 0), i8** %retval, align 8, !dbg !11867
  br label %return, !dbg !11867

sw.bb14:                                          ; preds = %entry
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.330, i64 0, i64 0), i8** %retval, align 8, !dbg !11868
  br label %return, !dbg !11868

sw.bb15:                                          ; preds = %entry
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.331, i64 0, i64 0), i8** %retval, align 8, !dbg !11869
  br label %return, !dbg !11869

sw.bb16:                                          ; preds = %entry
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.332, i64 0, i64 0), i8** %retval, align 8, !dbg !11870
  br label %return, !dbg !11870

sw.bb17:                                          ; preds = %entry
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.333, i64 0, i64 0), i8** %retval, align 8, !dbg !11871
  br label %return, !dbg !11871

sw.default:                                       ; preds = %entry
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.168, i64 0, i64 0), i8** %retval, align 8, !dbg !11872
  br label %return, !dbg !11872

return:                                           ; preds = %sw.default, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb14, %sw.bb13, %sw.bb12, %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i8*, i8** %retval, align 8, !dbg !11873
  ret i8* %1, !dbg !11873
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @mlxsw_cmd_status_str(i8 zeroext %status) #0 !dbg !11874 {
entry:
  %retval = alloca i8*, align 8
  %status.addr = alloca i8, align 1
  store i8 %status, i8* %status.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %status.addr, metadata !11877, metadata !DIExpression()), !dbg !11878
  %0 = load i8, i8* %status.addr, align 1, !dbg !11879
  %conv = zext i8 %0 to i32, !dbg !11879
  switch i32 %conv, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
    i32 3, label %sw.bb3
    i32 4, label %sw.bb4
    i32 5, label %sw.bb5
    i32 6, label %sw.bb6
    i32 8, label %sw.bb7
    i32 9, label %sw.bb8
    i32 10, label %sw.bb9
    i32 11, label %sw.bb10
    i32 38, label %sw.bb11
    i32 48, label %sw.bb12
  ], !dbg !11880

sw.bb:                                            ; preds = %entry
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.334, i64 0, i64 0), i8** %retval, align 8, !dbg !11881
  br label %return, !dbg !11881

sw.bb1:                                           ; preds = %entry
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.335, i64 0, i64 0), i8** %retval, align 8, !dbg !11883
  br label %return, !dbg !11883

sw.bb2:                                           ; preds = %entry
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.336, i64 0, i64 0), i8** %retval, align 8, !dbg !11884
  br label %return, !dbg !11884

sw.bb3:                                           ; preds = %entry
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.337, i64 0, i64 0), i8** %retval, align 8, !dbg !11885
  br label %return, !dbg !11885

sw.bb4:                                           ; preds = %entry
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.338, i64 0, i64 0), i8** %retval, align 8, !dbg !11886
  br label %return, !dbg !11886

sw.bb5:                                           ; preds = %entry
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.339, i64 0, i64 0), i8** %retval, align 8, !dbg !11887
  br label %return, !dbg !11887

sw.bb6:                                           ; preds = %entry
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.340, i64 0, i64 0), i8** %retval, align 8, !dbg !11888
  br label %return, !dbg !11888

sw.bb7:                                           ; preds = %entry
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.341, i64 0, i64 0), i8** %retval, align 8, !dbg !11889
  br label %return, !dbg !11889

sw.bb8:                                           ; preds = %entry
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.342, i64 0, i64 0), i8** %retval, align 8, !dbg !11890
  br label %return, !dbg !11890

sw.bb9:                                           ; preds = %entry
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.343, i64 0, i64 0), i8** %retval, align 8, !dbg !11891
  br label %return, !dbg !11891

sw.bb10:                                          ; preds = %entry
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.344, i64 0, i64 0), i8** %retval, align 8, !dbg !11892
  br label %return, !dbg !11892

sw.bb11:                                          ; preds = %entry
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.345, i64 0, i64 0), i8** %retval, align 8, !dbg !11893
  br label %return, !dbg !11893

sw.bb12:                                          ; preds = %entry
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.346, i64 0, i64 0), i8** %retval, align 8, !dbg !11894
  br label %return, !dbg !11894

sw.default:                                       ; preds = %entry
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.168, i64 0, i64 0), i8** %retval, align 8, !dbg !11895
  br label %return, !dbg !11895

return:                                           ; preds = %sw.default, %sw.bb12, %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i8*, i8** %retval, align 8, !dbg !11896
  ret i8* %1, !dbg !11896
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_core_schedule_dw(%struct.delayed_work* %dwork, i64 %delay) #0 !dbg !11897 {
entry:
  %dwork.addr = alloca %struct.delayed_work*, align 8
  %delay.addr = alloca i64, align 8
  store %struct.delayed_work* %dwork, %struct.delayed_work** %dwork.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.delayed_work** %dwork.addr, metadata !11901, metadata !DIExpression()), !dbg !11902
  store i64 %delay, i64* %delay.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %delay.addr, metadata !11903, metadata !DIExpression()), !dbg !11904
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @mlxsw_wq, align 8, !dbg !11905
  %1 = load %struct.delayed_work*, %struct.delayed_work** %dwork.addr, align 8, !dbg !11906
  %2 = load i64, i64* %delay.addr, align 8, !dbg !11907
  %call = call zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %0, %struct.delayed_work* %1, i64 %2) #11, !dbg !11908
  %conv = zext i1 %call to i32, !dbg !11908
  ret i32 %conv, !dbg !11909
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %wq, %struct.delayed_work* %dwork, i64 %delay) #0 !dbg !11910 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %dwork.addr = alloca %struct.delayed_work*, align 8
  %delay.addr = alloca i64, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !11913, metadata !DIExpression()), !dbg !11914
  store %struct.delayed_work* %dwork, %struct.delayed_work** %dwork.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.delayed_work** %dwork.addr, metadata !11915, metadata !DIExpression()), !dbg !11916
  store i64 %delay, i64* %delay.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %delay.addr, metadata !11917, metadata !DIExpression()), !dbg !11918
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !11919
  %1 = load %struct.delayed_work*, %struct.delayed_work** %dwork.addr, align 8, !dbg !11920
  %2 = load i64, i64* %delay.addr, align 8, !dbg !11921
  %call = call zeroext i1 @queue_delayed_work_on(i32 1, %struct.workqueue_struct* %0, %struct.delayed_work* %1, i64 %2) #11, !dbg !11922
  ret i1 %call, !dbg !11923
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @mlxsw_core_schedule_work(%struct.work_struct* %work) #0 !dbg !11924 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !11927, metadata !DIExpression()), !dbg !11928
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @mlxsw_owq, align 8, !dbg !11929
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !11930
  %call = call zeroext i1 @queue_work(%struct.workqueue_struct* %0, %struct.work_struct* %1) #11, !dbg !11931
  ret i1 %call, !dbg !11932
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_work(%struct.workqueue_struct* %wq, %struct.work_struct* %work) #0 !dbg !11933 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !11936, metadata !DIExpression()), !dbg !11937
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !11938, metadata !DIExpression()), !dbg !11939
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !11940
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !11941
  %call = call zeroext i1 @queue_work_on(i32 1, %struct.workqueue_struct* %0, %struct.work_struct* %1) #11, !dbg !11942
  ret i1 %call, !dbg !11943
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlxsw_core_flush_owq() #0 !dbg !11944 {
entry:
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @mlxsw_owq, align 8, !dbg !11945
  call void @flush_workqueue(%struct.workqueue_struct* %0) #11, !dbg !11946
  ret void, !dbg !11947
}

; Function Attrs: noredzone
declare dso_local void @flush_workqueue(%struct.workqueue_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_core_kvd_sizes_get(%struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_config_profile* %profile, i64* %p_single_size, i64* %p_double_size, i64* %p_linear_size) #0 !dbg !11948 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %profile.addr = alloca %struct.mlxsw_config_profile*, align 8
  %p_single_size.addr = alloca i64*, align 8
  %p_double_size.addr = alloca i64*, align 8
  %p_linear_size.addr = alloca i64*, align 8
  %driver = alloca %struct.mlxsw_driver*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !11949, metadata !DIExpression()), !dbg !11950
  store %struct.mlxsw_config_profile* %profile, %struct.mlxsw_config_profile** %profile.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_config_profile** %profile.addr, metadata !11951, metadata !DIExpression()), !dbg !11952
  store i64* %p_single_size, i64** %p_single_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %p_single_size.addr, metadata !11953, metadata !DIExpression()), !dbg !11954
  store i64* %p_double_size, i64** %p_double_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %p_double_size.addr, metadata !11955, metadata !DIExpression()), !dbg !11956
  store i64* %p_linear_size, i64** %p_linear_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %p_linear_size.addr, metadata !11957, metadata !DIExpression()), !dbg !11958
  call void @llvm.dbg.declare(metadata %struct.mlxsw_driver** %driver, metadata !11959, metadata !DIExpression()), !dbg !11960
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11961
  %driver1 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %0, i32 0, i32 0, !dbg !11962
  %1 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver1, align 8, !dbg !11962
  store %struct.mlxsw_driver* %1, %struct.mlxsw_driver** %driver, align 8, !dbg !11960
  %2 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !11963
  %kvd_sizes_get = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %2, i32 0, i32 32, !dbg !11965
  %3 = load i32 (%struct.mlxsw_core*, %struct.mlxsw_config_profile*, i64*, i64*, i64*)*, i32 (%struct.mlxsw_core*, %struct.mlxsw_config_profile*, i64*, i64*, i64*)** %kvd_sizes_get, align 8, !dbg !11965
  %tobool = icmp ne i32 (%struct.mlxsw_core*, %struct.mlxsw_config_profile*, i64*, i64*, i64*)* %3, null, !dbg !11963
  br i1 %tobool, label %if.end, label %if.then, !dbg !11966

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !11967
  br label %return, !dbg !11967

if.end:                                           ; preds = %entry
  %4 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !11968
  %kvd_sizes_get2 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %4, i32 0, i32 32, !dbg !11969
  %5 = load i32 (%struct.mlxsw_core*, %struct.mlxsw_config_profile*, i64*, i64*, i64*)*, i32 (%struct.mlxsw_core*, %struct.mlxsw_config_profile*, i64*, i64*, i64*)** %kvd_sizes_get2, align 8, !dbg !11969
  %6 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11970
  %7 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !11971
  %8 = load i64*, i64** %p_single_size.addr, align 8, !dbg !11972
  %9 = load i64*, i64** %p_double_size.addr, align 8, !dbg !11973
  %10 = load i64*, i64** %p_linear_size.addr, align 8, !dbg !11974
  %call = call i32 %5(%struct.mlxsw_core* %6, %struct.mlxsw_config_profile* %7, i64* %8, i64* %9, i64* %10) #11, !dbg !11968
  store i32 %call, i32* %retval, align 4, !dbg !11975
  br label %return, !dbg !11975

return:                                           ; preds = %if.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !11976
  ret i32 %11, !dbg !11976
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_core_resources_query(%struct.mlxsw_core* %mlxsw_core, i8* %mbox, %struct.mlxsw_res* %res) #0 !dbg !11977 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %mbox.addr = alloca i8*, align 8
  %res.addr = alloca %struct.mlxsw_res*, align 8
  %index = alloca i32, align 4
  %i = alloca i32, align 4
  %data = alloca i64, align 8
  %id = alloca i16, align 2
  %err = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !11980, metadata !DIExpression()), !dbg !11981
  store i8* %mbox, i8** %mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mbox.addr, metadata !11982, metadata !DIExpression()), !dbg !11983
  store %struct.mlxsw_res* %res, %struct.mlxsw_res** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_res** %res.addr, metadata !11984, metadata !DIExpression()), !dbg !11985
  call void @llvm.dbg.declare(metadata i32* %index, metadata !11986, metadata !DIExpression()), !dbg !11987
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11988, metadata !DIExpression()), !dbg !11989
  call void @llvm.dbg.declare(metadata i64* %data, metadata !11990, metadata !DIExpression()), !dbg !11991
  call void @llvm.dbg.declare(metadata i16* %id, metadata !11992, metadata !DIExpression()), !dbg !11993
  call void @llvm.dbg.declare(metadata i32* %err, metadata !11994, metadata !DIExpression()), !dbg !11995
  %0 = load %struct.mlxsw_res*, %struct.mlxsw_res** %res.addr, align 8, !dbg !11996
  %tobool = icmp ne %struct.mlxsw_res* %0, null, !dbg !11996
  br i1 %tobool, label %if.end, label %if.then, !dbg !11998

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11999
  br label %return, !dbg !11999

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %mbox.addr, align 8, !dbg !12000
  call void @mlxsw_cmd_mbox_zero(i8* %1) #11, !dbg !12001
  store i32 0, i32* %index, align 4, !dbg !12002
  br label %for.cond, !dbg !12004

for.cond:                                         ; preds = %for.inc16, %if.end
  %2 = load i32, i32* %index, align 4, !dbg !12005
  %cmp = icmp slt i32 %2, 100, !dbg !12007
  br i1 %cmp, label %for.body, label %for.end18, !dbg !12008

for.body:                                         ; preds = %for.cond
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12009
  %4 = load i8*, i8** %mbox.addr, align 8, !dbg !12011
  %5 = load i32, i32* %index, align 4, !dbg !12012
  %call = call i32 @mlxsw_cmd_query_resources(%struct.mlxsw_core* %3, i8* %4, i32 %5) #11, !dbg !12013
  store i32 %call, i32* %err, align 4, !dbg !12014
  %6 = load i32, i32* %err, align 4, !dbg !12015
  %tobool1 = icmp ne i32 %6, 0, !dbg !12015
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !12017

if.then2:                                         ; preds = %for.body
  %7 = load i32, i32* %err, align 4, !dbg !12018
  store i32 %7, i32* %retval, align 4, !dbg !12019
  br label %return, !dbg !12019

if.end3:                                          ; preds = %for.body
  store i32 0, i32* %i, align 4, !dbg !12020
  br label %for.cond4, !dbg !12022

for.cond4:                                        ; preds = %for.inc, %if.end3
  %8 = load i32, i32* %i, align 4, !dbg !12023
  %cmp5 = icmp slt i32 %8, 32, !dbg !12025
  br i1 %cmp5, label %for.body6, label %for.end, !dbg !12026

for.body6:                                        ; preds = %for.cond4
  %9 = load i8*, i8** %mbox.addr, align 8, !dbg !12027
  %10 = load i32, i32* %i, align 4, !dbg !12029
  %conv = trunc i32 %10 to i16, !dbg !12029
  %call7 = call i32 @mlxsw_cmd_mbox_query_resource_id_get(i8* %9, i16 zeroext %conv) #11, !dbg !12030
  %conv8 = trunc i32 %call7 to i16, !dbg !12030
  store i16 %conv8, i16* %id, align 2, !dbg !12031
  %11 = load i8*, i8** %mbox.addr, align 8, !dbg !12032
  %12 = load i32, i32* %i, align 4, !dbg !12033
  %conv9 = trunc i32 %12 to i16, !dbg !12033
  %call10 = call i64 @mlxsw_cmd_mbox_query_resource_data_get(i8* %11, i16 zeroext %conv9) #11, !dbg !12034
  store i64 %call10, i64* %data, align 8, !dbg !12035
  %13 = load i16, i16* %id, align 2, !dbg !12036
  %conv11 = zext i16 %13 to i32, !dbg !12036
  %cmp12 = icmp eq i32 %conv11, 65535, !dbg !12038
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !12039

if.then14:                                        ; preds = %for.body6
  store i32 0, i32* %retval, align 4, !dbg !12040
  br label %return, !dbg !12040

if.end15:                                         ; preds = %for.body6
  %14 = load %struct.mlxsw_res*, %struct.mlxsw_res** %res.addr, align 8, !dbg !12041
  %15 = load i16, i16* %id, align 2, !dbg !12042
  %16 = load i64, i64* %data, align 8, !dbg !12043
  call void @mlxsw_res_parse(%struct.mlxsw_res* %14, i16 zeroext %15, i64 %16) #11, !dbg !12044
  br label %for.inc, !dbg !12045

for.inc:                                          ; preds = %if.end15
  %17 = load i32, i32* %i, align 4, !dbg !12046
  %inc = add i32 %17, 1, !dbg !12046
  store i32 %inc, i32* %i, align 4, !dbg !12046
  br label %for.cond4, !dbg !12047, !llvm.loop !12048

for.end:                                          ; preds = %for.cond4
  br label %for.inc16, !dbg !12050

for.inc16:                                        ; preds = %for.end
  %18 = load i32, i32* %index, align 4, !dbg !12051
  %inc17 = add i32 %18, 1, !dbg !12051
  store i32 %inc17, i32* %index, align 4, !dbg !12051
  br label %for.cond, !dbg !12052, !llvm.loop !12053

for.end18:                                        ; preds = %for.cond
  store i32 -5, i32* %retval, align 4, !dbg !12055
  br label %return, !dbg !12055

return:                                           ; preds = %for.end18, %if.then14, %if.then2, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !12056
  ret i32 %19, !dbg !12056
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_zero(i8* %mbox) #0 !dbg !12057 {
entry:
  %mbox.addr = alloca i8*, align 8
  store i8* %mbox, i8** %mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mbox.addr, metadata !12060, metadata !DIExpression()), !dbg !12061
  %0 = load i8*, i8** %mbox.addr, align 8, !dbg !12062
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 4096, i1 false), !dbg !12063
  ret void, !dbg !12064
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_query_resources(%struct.mlxsw_core* %mlxsw_core, i8* %out_mbox, i32 %index) #0 !dbg !12065 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %out_mbox.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !12068, metadata !DIExpression()), !dbg !12069
  store i8* %out_mbox, i8** %out_mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out_mbox.addr, metadata !12070, metadata !DIExpression()), !dbg !12071
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !12072, metadata !DIExpression()), !dbg !12073
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12074
  %1 = load i32, i32* %index.addr, align 4, !dbg !12075
  %2 = load i8*, i8** %out_mbox.addr, align 8, !dbg !12076
  %call = call i32 @mlxsw_cmd_exec_out(%struct.mlxsw_core* %0, i16 zeroext 257, i8 zeroext 0, i32 %1, i1 zeroext false, i8* %2, i64 4096) #11, !dbg !12077
  ret i32 %call, !dbg !12078
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_mbox_query_resource_id_get(i8* %buf, i16 zeroext %index) #0 !dbg !12079 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12082, metadata !DIExpression()), !dbg !12083
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !12084, metadata !DIExpression()), !dbg !12083
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !12083
  %1 = load i16, i16* %index.addr, align 2, !dbg !12083
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_query_resource_id_item to %struct.mlxsw_item*), i16 zeroext %1) #11, !dbg !12083
  ret i32 %call, !dbg !12083
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mlxsw_cmd_mbox_query_resource_data_get(i8* %buf, i16 zeroext %index) #0 !dbg !12085 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12088, metadata !DIExpression()), !dbg !12089
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !12090, metadata !DIExpression()), !dbg !12089
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !12089
  %1 = load i16, i16* %index.addr, align 2, !dbg !12089
  %call = call i64 @__mlxsw_item_get64(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_query_resource_data_item to %struct.mlxsw_item*), i16 zeroext %1) #11, !dbg !12089
  ret i64 %call, !dbg !12089
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_res_parse(%struct.mlxsw_res* %res, i16 zeroext %id, i64 %value) #0 !dbg !12091 {
entry:
  %res.addr = alloca %struct.mlxsw_res*, align 8
  %id.addr = alloca i16, align 2
  %value.addr = alloca i64, align 8
  %i = alloca i32, align 4
  store %struct.mlxsw_res* %res, %struct.mlxsw_res** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_res** %res.addr, metadata !12094, metadata !DIExpression()), !dbg !12095
  store i16 %id, i16* %id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %id.addr, metadata !12096, metadata !DIExpression()), !dbg !12097
  store i64 %value, i64* %value.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %value.addr, metadata !12098, metadata !DIExpression()), !dbg !12099
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12100, metadata !DIExpression()), !dbg !12101
  store i32 0, i32* %i, align 4, !dbg !12102
  br label %for.cond, !dbg !12104

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !12105
  %conv = sext i32 %0 to i64, !dbg !12105
  %cmp = icmp ult i64 %conv, 47, !dbg !12107
  br i1 %cmp, label %for.body, label %for.end, !dbg !12108

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !12109
  %idxprom = sext i32 %1 to i64, !dbg !12112
  %arrayidx = getelementptr [47 x i16], [47 x i16]* @mlxsw_res_ids, i64 0, i64 %idxprom, !dbg !12112
  %2 = load i16, i16* %arrayidx, align 2, !dbg !12112
  %conv2 = zext i16 %2 to i32, !dbg !12112
  %3 = load i16, i16* %id.addr, align 2, !dbg !12113
  %conv3 = zext i16 %3 to i32, !dbg !12113
  %cmp4 = icmp eq i32 %conv2, %conv3, !dbg !12114
  br i1 %cmp4, label %if.then, label %if.end, !dbg !12115

if.then:                                          ; preds = %for.body
  %4 = load %struct.mlxsw_res*, %struct.mlxsw_res** %res.addr, align 8, !dbg !12116
  %5 = load i32, i32* %i, align 4, !dbg !12118
  %6 = load i64, i64* %value.addr, align 8, !dbg !12119
  call void @mlxsw_res_set(%struct.mlxsw_res* %4, i32 %5, i64 %6) #11, !dbg !12120
  br label %for.end, !dbg !12121

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !12122

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %i, align 4, !dbg !12123
  %inc = add i32 %7, 1, !dbg !12123
  store i32 %inc, i32* %i, align 4, !dbg !12123
  br label %for.cond, !dbg !12124, !llvm.loop !12125

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !12127
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_core_read_frc_h(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !12128 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !12131, metadata !DIExpression()), !dbg !12132
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12133
  %bus = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %0, i32 0, i32 1, !dbg !12134
  %1 = load %struct.mlxsw_bus*, %struct.mlxsw_bus** %bus, align 8, !dbg !12134
  %read_frc_h = getelementptr inbounds %struct.mlxsw_bus, %struct.mlxsw_bus* %1, i32 0, i32 6, !dbg !12135
  %2 = load i32 (i8*)*, i32 (i8*)** %read_frc_h, align 8, !dbg !12135
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12136
  %bus_priv = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %3, i32 0, i32 2, !dbg !12137
  %4 = load i8*, i8** %bus_priv, align 8, !dbg !12137
  %call = call i32 %2(i8* %4) #11, !dbg !12133
  ret i32 %call, !dbg !12138
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_core_read_frc_l(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !12139 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !12140, metadata !DIExpression()), !dbg !12141
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12142
  %bus = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %0, i32 0, i32 1, !dbg !12143
  %1 = load %struct.mlxsw_bus*, %struct.mlxsw_bus** %bus, align 8, !dbg !12143
  %read_frc_l = getelementptr inbounds %struct.mlxsw_bus, %struct.mlxsw_bus* %1, i32 0, i32 7, !dbg !12144
  %2 = load i32 (i8*)*, i32 (i8*)** %read_frc_l, align 8, !dbg !12144
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12145
  %bus_priv = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %3, i32 0, i32 2, !dbg !12146
  %4 = load i8*, i8** %bus_priv, align 8, !dbg !12146
  %call = call i32 %2(i8* %4) #11, !dbg !12142
  ret i32 %call, !dbg !12147
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlxsw_core_emad_string_tlv_enable(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !12148 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !12149, metadata !DIExpression()), !dbg !12150
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12151
  %emad = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %0, i32 0, i32 7, !dbg !12152
  %enable_string_tlv = getelementptr inbounds %struct.anon.129, %struct.anon.129* %emad, i32 0, i32 4, !dbg !12153
  store i8 1, i8* %enable_string_tlv, align 1, !dbg !12154
  ret void, !dbg !12155
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_core_module_exit() #5 section ".exit.text" !dbg !12156 {
entry:
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @mlxsw_owq, align 8, !dbg !12157
  call void @destroy_workqueue(%struct.workqueue_struct* %0) #11, !dbg !12158
  %1 = load %struct.workqueue_struct*, %struct.workqueue_struct** @mlxsw_wq, align 8, !dbg !12159
  call void @destroy_workqueue(%struct.workqueue_struct* %1) #11, !dbg !12160
  ret void, !dbg !12161
}

; Function Attrs: noredzone
declare dso_local void @destroy_workqueue(%struct.workqueue_struct*) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_core_module_init() #5 section ".init.text" !dbg !12162 {
entry:
  %retval = alloca i32, align 4
  %err = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12165, metadata !DIExpression()), !dbg !12166
  %call = call %struct.workqueue_struct* (i8*, i32, i32, ...) @alloc_workqueue(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @mlxsw_core_driver_name, i64 0, i64 0), i32 0, i32 0) #11, !dbg !12167
  store %struct.workqueue_struct* %call, %struct.workqueue_struct** @mlxsw_wq, align 8, !dbg !12168
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @mlxsw_wq, align 8, !dbg !12169
  %tobool = icmp ne %struct.workqueue_struct* %0, null, !dbg !12169
  br i1 %tobool, label %if.end, label %if.then, !dbg !12171

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !12172
  br label %return, !dbg !12172

if.end:                                           ; preds = %entry
  %call1 = call %struct.workqueue_struct* (i8*, i32, i32, ...) @alloc_workqueue(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.351, i64 0, i64 0), i32 655362, i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @mlxsw_core_driver_name, i64 0, i64 0)) #11, !dbg !12173
  store %struct.workqueue_struct* %call1, %struct.workqueue_struct** @mlxsw_owq, align 8, !dbg !12174
  %1 = load %struct.workqueue_struct*, %struct.workqueue_struct** @mlxsw_owq, align 8, !dbg !12175
  %tobool2 = icmp ne %struct.workqueue_struct* %1, null, !dbg !12175
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !12177

if.then3:                                         ; preds = %if.end
  store i32 -12, i32* %err, align 4, !dbg !12178
  br label %err_alloc_ordered_workqueue, !dbg !12180

if.end4:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !12181
  br label %return, !dbg !12181

err_alloc_ordered_workqueue:                      ; preds = %if.then3
  call void @llvm.dbg.label(metadata !12182), !dbg !12183
  %2 = load %struct.workqueue_struct*, %struct.workqueue_struct** @mlxsw_wq, align 8, !dbg !12184
  call void @destroy_workqueue(%struct.workqueue_struct* %2) #11, !dbg !12185
  %3 = load i32, i32* %err, align 4, !dbg !12186
  store i32 %3, i32* %retval, align 4, !dbg !12187
  br label %return, !dbg !12187

return:                                           ; preds = %err_alloc_ordered_workqueue, %if.end4, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !12188
  ret i32 %4, !dbg !12188
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !12189 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !12192, metadata !DIExpression()), !dbg !12193
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !12194, metadata !DIExpression()), !dbg !12195
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !12196, metadata !DIExpression()), !dbg !12197
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !12198
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !12200
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !12201
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #11, !dbg !12202
  br i1 %call, label %if.end, label %if.then, !dbg !12203

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !12204

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !12205
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !12206
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !12207
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !12208
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !12209
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !12210
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !12211
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !12212
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !12213
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !12214
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !12215
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !12216
  br label %do.body, !dbg !12217

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !12218

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !12220

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !12218

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !12222
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !12222
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !12222
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !12222
  br label %do.end7, !dbg !12222

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !12218

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !12224
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !12225 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !12228, metadata !DIExpression()), !dbg !12229
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !12230, metadata !DIExpression()), !dbg !12231
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !12232, metadata !DIExpression()), !dbg !12233
  ret i1 true, !dbg !12234
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !12235 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !12236, metadata !DIExpression()), !dbg !12237
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !12238
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #11, !dbg !12240
  br i1 %call, label %if.end, label %if.then, !dbg !12241

if.then:                                          ; preds = %entry
  br label %return, !dbg !12242

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !12243
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !12244
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !12244
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !12245
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !12246
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !12246
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #11, !dbg !12247
  br label %return, !dbg !12248

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !12248
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !12249 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !12252, metadata !DIExpression()), !dbg !12253
  ret i1 true, !dbg !12254
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !12255 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !12256, metadata !DIExpression()), !dbg !12257
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !12258, metadata !DIExpression()), !dbg !12259
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !12260
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !12261
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !12262
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !12263
  br label %do.body, !dbg !12264

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !12265

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !12267

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !12265

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !12269
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !12269
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !12269
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !12269
  br label %do.end5, !dbg !12269

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !12265

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !12271
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_driver* @mlxsw_core_driver_get(i8* %kind) #0 !dbg !12272 {
entry:
  %lock.addr.i1 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i1, metadata !8904, metadata !DIExpression()), !dbg !12275
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8911, metadata !DIExpression()), !dbg !12277
  %kind.addr = alloca i8*, align 8
  %mlxsw_driver = alloca %struct.mlxsw_driver*, align 8
  store i8* %kind, i8** %kind.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %kind.addr, metadata !12279, metadata !DIExpression()), !dbg !12280
  call void @llvm.dbg.declare(metadata %struct.mlxsw_driver** %mlxsw_driver, metadata !12281, metadata !DIExpression()), !dbg !12282
  store %struct.spinlock* @mlxsw_core_driver_list_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12283, !srcloc !8919
  %0 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12284
  %1 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %0, i32 0, i32 0, !dbg !12284
  %rlock.i = bitcast %union.anon* %1 to %struct.raw_spinlock*, !dbg !12284
  %2 = load i8*, i8** %kind.addr, align 8, !dbg !12285
  %call = call %struct.mlxsw_driver* @__driver_find(i8* %2) #11, !dbg !12286
  store %struct.mlxsw_driver* %call, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !12287
  store %struct.spinlock* @mlxsw_core_driver_list_lock, %struct.spinlock** %lock.addr.i1, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12288, !srcloc !8927
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i1, align 8, !dbg !12289
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !12289
  %rlock.i2 = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !12289
  %5 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !12290
  ret %struct.mlxsw_driver* %5, !dbg !12291
}

; Function Attrs: noredzone
declare dso_local %struct.devlink* @devlink_alloc(%struct.devlink_ops*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devlink_priv(%struct.devlink* %devlink) #0 !dbg !12292 {
entry:
  %devlink.addr = alloca %struct.devlink*, align 8
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !12295, metadata !DIExpression()), !dbg !12296
  br label %do.body, !dbg !12297

do.body:                                          ; preds = %entry
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !12298
  %tobool = icmp ne %struct.devlink* %0, null, !dbg !12298
  %lnot = xor i1 %tobool, true, !dbg !12298
  %lnot1 = xor i1 %lnot, true, !dbg !12298
  %lnot2 = xor i1 %lnot1, true, !dbg !12298
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !12298
  %conv = sext i32 %lnot.ext to i64, !dbg !12298
  %tobool3 = icmp ne i64 %conv, 0, !dbg !12298
  br i1 %tobool3, label %if.then, label %if.end, !dbg !12301

if.then:                                          ; preds = %do.body
  br label %do.body4, !dbg !12298

do.body4:                                         ; preds = %if.then
  br label %do.body5, !dbg !12302

do.body5:                                         ; preds = %do.body4
  br label %do.end, !dbg !12304

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !12302

do.body6:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.57, i64 0, i64 0), i32 1352, i32 0, i64 12) #10, !dbg !12306, !srcloc !12308
  br label %do.end7, !dbg !12306

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !12302

do.body8:                                         ; preds = %do.end7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 321) #10, !dbg !12309, !srcloc !12312
  unreachable, !dbg !12313

do.end9:                                          ; No predecessors!
  br label %do.end10, !dbg !12302

do.end10:                                         ; preds = %do.end9
  br label %if.end, !dbg !12302

if.end:                                           ; preds = %do.end10, %do.body
  br label %do.end11, !dbg !12301

do.end11:                                         ; preds = %if.end
  %1 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !12314
  %priv = getelementptr inbounds %struct.devlink, %struct.devlink* %1, i32 0, i32 21, !dbg !12315
  %2 = bitcast [0 x i8]* %priv to i8*, !dbg !12316
  ret i8* %2, !dbg !12317
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !12318 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !12319, metadata !DIExpression()), !dbg !12320
  br label %do.body, !dbg !12321

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !12322

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !12324

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !12322

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !12326
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !12326
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !12326
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !12326
  br label %do.end3, !dbg !12326

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !12322

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !12328
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !12329
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !12330
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !12331
  ret void, !dbg !12332
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_ports_init(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !12333 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !12334, metadata !DIExpression()), !dbg !12335
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12336
  %call = call zeroext i1 @mlxsw_core_res_valid(%struct.mlxsw_core* %0, i32 14) #11, !dbg !12336
  br i1 %call, label %if.then, label %if.else, !dbg !12338

if.then:                                          ; preds = %entry
  %1 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12339
  %call1 = call i64 @mlxsw_core_res_get(%struct.mlxsw_core* %1, i32 14) #11, !dbg !12339
  %add = add i64 %call1, 1, !dbg !12340
  %conv = trunc i64 %add to i32, !dbg !12339
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12341
  %max_ports = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %2, i32 0, i32 13, !dbg !12342
  store i32 %conv, i32* %max_ports, align 8, !dbg !12343
  br label %if.end, !dbg !12341

if.else:                                          ; preds = %entry
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12344
  %max_ports2 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %3, i32 0, i32 13, !dbg !12345
  store i32 65, i32* %max_ports2, align 8, !dbg !12346
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12347
  %max_ports3 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %4, i32 0, i32 13, !dbg !12348
  %5 = load i32, i32* %max_ports3, align 8, !dbg !12348
  %conv4 = zext i32 %5 to i64, !dbg !12347
  %call5 = call i8* @kcalloc(i64 %conv4, i64 288, i32 3264) #11, !dbg !12349
  %6 = bitcast i8* %call5 to %struct.mlxsw_core_port*, !dbg !12349
  %7 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12350
  %ports = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %7, i32 0, i32 12, !dbg !12351
  store %struct.mlxsw_core_port* %6, %struct.mlxsw_core_port** %ports, align 8, !dbg !12352
  %8 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12353
  %ports6 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %8, i32 0, i32 12, !dbg !12355
  %9 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %ports6, align 8, !dbg !12355
  %tobool = icmp ne %struct.mlxsw_core_port* %9, null, !dbg !12353
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !12356

if.then7:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !12357
  br label %return, !dbg !12357

if.end8:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !12358
  br label %return, !dbg !12358

return:                                           ; preds = %if.end8, %if.then7
  %10 = load i32, i32* %retval, align 4, !dbg !12359
  ret i32 %10, !dbg !12359
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !12360 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !9589, metadata !DIExpression()), !dbg !12361
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !9601, metadata !DIExpression()), !dbg !12364
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !9603, metadata !DIExpression()), !dbg !12365
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !9605, metadata !DIExpression()), !dbg !12366
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !9607, metadata !DIExpression()), !dbg !12367
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !9613, metadata !DIExpression()), !dbg !12369
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !9619, metadata !DIExpression()), !dbg !12371
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !9628, metadata !DIExpression()), !dbg !12374
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !9630, metadata !DIExpression()), !dbg !12375
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !9632, metadata !DIExpression()), !dbg !12376
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !9634, metadata !DIExpression()), !dbg !12377
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !9636, metadata !DIExpression()), !dbg !12378
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9638, metadata !DIExpression()), !dbg !12379
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !9640, metadata !DIExpression()), !dbg !12380
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !9642, metadata !DIExpression()), !dbg !12381
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12382, metadata !DIExpression()), !dbg !12383
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !12384, metadata !DIExpression()), !dbg !12385
  %0 = load i64, i64* %size.addr, align 8, !dbg !12386
  %1 = load i32, i32* %flags.addr, align 4, !dbg !12387
  %or = or i32 %1, 256, !dbg !12388
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !12389
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #10, !dbg !12390
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !12391

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !12392
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !12393
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !12394

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !12395
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !12396
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !12397
  %call.i.i = call i32 @get_order(i64 %7) #12, !dbg !12398
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !12378
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !12399
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !12400
  %10 = load i32, i32* %order.i.i, align 4, !dbg !12401
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !12402
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !12403
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !12404
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #13, !dbg !12405
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !12405
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !12405
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !12405
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !12405
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !12406
  br label %kmalloc.exit, !dbg !12406

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !12407
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12408
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !12408
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !12409

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !12410
  br label %kmalloc_index.exit.i, !dbg !12410

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12411
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !12412
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !12413

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !12414
  br label %kmalloc_index.exit.i, !dbg !12414

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12415
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !12416
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !12417

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12418
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !12419
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !12420

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !12421
  br label %kmalloc_index.exit.i, !dbg !12421

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12422
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !12423
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !12424

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12425
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !12426
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !12427

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !12428
  br label %kmalloc_index.exit.i, !dbg !12428

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12429
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !12430
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !12431

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !12432
  br label %kmalloc_index.exit.i, !dbg !12432

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12433
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !12434
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !12435

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !12436
  br label %kmalloc_index.exit.i, !dbg !12436

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12437
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !12438
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !12439

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !12440
  br label %kmalloc_index.exit.i, !dbg !12440

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12441
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !12442
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !12443

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !12444
  br label %kmalloc_index.exit.i, !dbg !12444

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12445
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !12446
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !12447

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !12448
  br label %kmalloc_index.exit.i, !dbg !12448

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12449
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !12450
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !12451

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !12452
  br label %kmalloc_index.exit.i, !dbg !12452

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12453
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !12454
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !12455

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !12456
  br label %kmalloc_index.exit.i, !dbg !12456

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12457
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !12458
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !12459

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !12460
  br label %kmalloc_index.exit.i, !dbg !12460

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12461
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !12462
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !12463

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !12464
  br label %kmalloc_index.exit.i, !dbg !12464

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12465
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !12466
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !12467

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !12468
  br label %kmalloc_index.exit.i, !dbg !12468

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12469
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !12470
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !12471

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !12472
  br label %kmalloc_index.exit.i, !dbg !12472

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12473
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !12474
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !12475

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !12476
  br label %kmalloc_index.exit.i, !dbg !12476

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12477
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !12478
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !12479

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !12480
  br label %kmalloc_index.exit.i, !dbg !12480

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12481
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !12482
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !12483

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !12484
  br label %kmalloc_index.exit.i, !dbg !12484

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12485
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !12486
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !12487

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !12488
  br label %kmalloc_index.exit.i, !dbg !12488

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12489
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !12490
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !12491

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !12492
  br label %kmalloc_index.exit.i, !dbg !12492

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12493
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !12494
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !12495

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !12496
  br label %kmalloc_index.exit.i, !dbg !12496

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12497
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !12498
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !12499

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !12500
  br label %kmalloc_index.exit.i, !dbg !12500

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12501
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !12502
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !12503

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !12504
  br label %kmalloc_index.exit.i, !dbg !12504

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12505
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !12506
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !12507

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !12508
  br label %kmalloc_index.exit.i, !dbg !12508

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12509
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !12510
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !12511

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !12512
  br label %kmalloc_index.exit.i, !dbg !12512

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12513
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !12514
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !12515

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !12516
  br label %kmalloc_index.exit.i, !dbg !12516

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12517
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !12518
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !12519

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !12520
  br label %kmalloc_index.exit.i, !dbg !12520

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12521
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !12522
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !12523

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !12524
  br label %kmalloc_index.exit.i, !dbg !12524

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.119, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !12525, !srcloc !9829
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 233) #10, !dbg !12526, !srcloc !9833
  unreachable, !dbg !12527

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !12528
  store i32 %45, i32* %index.i, align 4, !dbg !12529
  %46 = load i32, i32* %index.i, align 4, !dbg !12530
  %tobool.i = icmp ne i32 %46, 0, !dbg !12530
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !12531

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !12532
  br label %kmalloc.exit, !dbg !12532

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !12533
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !12534
  %and.i.i = and i32 %48, 17, !dbg !12534
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !12534
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !12534
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !12534
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !12534
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !12535

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !12536
  br label %kmalloc_type.exit.i, !dbg !12536

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !12537
  %and2.i.i = and i32 %49, 1, !dbg !12538
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !12537
  %50 = zext i1 %tobool3.i.i to i64, !dbg !12537
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !12537
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !12539
  br label %kmalloc_type.exit.i, !dbg !12539

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !12540
  %idxprom.i = zext i32 %51 to i64, !dbg !12541
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !12541
  %52 = load i32, i32* %index.i, align 4, !dbg !12542
  %idxprom6.i = zext i32 %52 to i64, !dbg !12541
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !12541
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !12541
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !12543
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !12544
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !12545
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !12546
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #13, !dbg !12547
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !12547
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !12547
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !12547
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !12547
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !12366
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !12548
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !12549
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !12550
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !12551
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #13, !dbg !12552
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !12553
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !12554
  store i8* %62, i8** %retval.i, align 8, !dbg !12555
  br label %kmalloc.exit, !dbg !12555

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !12556
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !12557
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #13, !dbg !12558
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !12558
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !12558
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !12558
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !12558
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !12559
  br label %kmalloc.exit, !dbg !12559

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !12560
  ret i8* %65, !dbg !12561
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_emad_init(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !12562 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !12563, metadata !DIExpression()), !dbg !12568
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !12571, metadata !DIExpression()), !dbg !12579
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12587, metadata !DIExpression()), !dbg !12588
  %v.addr.i = alloca %struct.atomic64_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr.i, metadata !12589, metadata !DIExpression()), !dbg !12590
  %i.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %i.addr.i, metadata !12591, metadata !DIExpression()), !dbg !12592
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %emad_wq = alloca %struct.workqueue_struct*, align 8
  %tid = alloca i64, align 8
  %err = alloca i32, align 4
  %.compoundliteral = alloca %struct.spinlock, align 1
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !12593, metadata !DIExpression()), !dbg !12594
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %emad_wq, metadata !12595, metadata !DIExpression()), !dbg !12596
  call void @llvm.dbg.declare(metadata i64* %tid, metadata !12597, metadata !DIExpression()), !dbg !12598
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12599, metadata !DIExpression()), !dbg !12600
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12601
  %bus = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %0, i32 0, i32 1, !dbg !12603
  %1 = load %struct.mlxsw_bus*, %struct.mlxsw_bus** %bus, align 8, !dbg !12603
  %features = getelementptr inbounds %struct.mlxsw_bus, %struct.mlxsw_bus* %1, i32 0, i32 8, !dbg !12604
  %2 = load i8, i8* %features, align 8, !dbg !12604
  %conv = zext i8 %2 to i64, !dbg !12601
  %and = and i64 %conv, 1, !dbg !12605
  %tobool = icmp ne i64 %and, 0, !dbg !12605
  br i1 %tobool, label %if.end, label %if.then, !dbg !12606

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !12607
  br label %return, !dbg !12607

if.end:                                           ; preds = %entry
  %call = call %struct.workqueue_struct* (i8*, i32, i32, ...) @alloc_workqueue(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.58, i64 0, i64 0), i32 0, i32 0) #11, !dbg !12608
  store %struct.workqueue_struct* %call, %struct.workqueue_struct** %emad_wq, align 8, !dbg !12609
  %3 = load %struct.workqueue_struct*, %struct.workqueue_struct** %emad_wq, align 8, !dbg !12610
  %tobool1 = icmp ne %struct.workqueue_struct* %3, null, !dbg !12610
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !12612

if.then2:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !12613
  br label %return, !dbg !12613

if.end3:                                          ; preds = %if.end
  %4 = load %struct.workqueue_struct*, %struct.workqueue_struct** %emad_wq, align 8, !dbg !12614
  %5 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12615
  %emad_wq4 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %5, i32 0, i32 4, !dbg !12616
  store %struct.workqueue_struct* %4, %struct.workqueue_struct** %emad_wq4, align 8, !dbg !12617
  %6 = bitcast i64* %tid to i8*, !dbg !12618
  call void @get_random_bytes(i8* %6, i32 4) #11, !dbg !12619
  %7 = load i64, i64* %tid, align 8, !dbg !12620
  %shl = shl i64 %7, 32, !dbg !12620
  store i64 %shl, i64* %tid, align 8, !dbg !12620
  %8 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12621
  %emad = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %8, i32 0, i32 7, !dbg !12622
  %tid5 = getelementptr inbounds %struct.anon.129, %struct.anon.129* %emad, i32 0, i32 0, !dbg !12623
  %9 = load i64, i64* %tid, align 8, !dbg !12624
  store %struct.atomic64_t* %tid5, %struct.atomic64_t** %v.addr.i, align 8
  store i64 %9, i64* %i.addr.i, align 8
  %10 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i, align 8, !dbg !12625
  %11 = bitcast %struct.atomic64_t* %10 to i8*, !dbg !12625
  store i8* %11, i8** %v.addr.i.i, align 8
  store i64 8, i64* %size.addr.i.i, align 8
  %12 = load i8*, i8** %v.addr.i.i, align 8, !dbg !12626
  %13 = load i64, i64* %size.addr.i.i, align 8, !dbg !12627
  %conv.i.i = trunc i64 %13 to i32, !dbg !12627
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %12, i32 %conv.i.i) #13, !dbg !12628
  %14 = load i8*, i8** %v.addr.i.i, align 8, !dbg !12629
  %15 = load i64, i64* %size.addr.i.i, align 8, !dbg !12629
  call void @kcsan_check_access(i8* %14, i64 %15, i32 5) #13, !dbg !12629
  %16 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i, align 8, !dbg !12630
  %17 = load i64, i64* %i.addr.i, align 8, !dbg !12631
  call void @arch_atomic64_set(%struct.atomic64_t* %16, i64 %17) #13, !dbg !12632
  %18 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12633
  %emad6 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %18, i32 0, i32 7, !dbg !12634
  %trans_list = getelementptr inbounds %struct.anon.129, %struct.anon.129* %emad6, i32 0, i32 1, !dbg !12635
  call void @INIT_LIST_HEAD(%struct.list_head* %trans_list) #11, !dbg !12636
  br label %do.body, !dbg !12637

do.body:                                          ; preds = %if.end3
  %19 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12638
  %emad7 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %19, i32 0, i32 7, !dbg !12638
  %trans_list_lock = getelementptr inbounds %struct.anon.129, %struct.anon.129* %emad7, i32 0, i32 2, !dbg !12638
  store %struct.spinlock* %trans_list_lock, %struct.spinlock** %lock.addr.i, align 8
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12639
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !12640
  %rlock.i = bitcast %union.anon* %21 to %struct.raw_spinlock*, !dbg !12640
  %22 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12638
  %emad9 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %22, i32 0, i32 7, !dbg !12638
  %trans_list_lock10 = getelementptr inbounds %struct.anon.129, %struct.anon.129* %emad9, i32 0, i32 2, !dbg !12638
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !12638
  %rlock = bitcast %union.anon* %23 to %struct.raw_spinlock*, !dbg !12638
  %24 = bitcast %struct.spinlock* %trans_list_lock10 to i8*, !dbg !12638
  %25 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !12638
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 1 %25, i64 0, i1 false), !dbg !12638
  br label %do.end, !dbg !12638

do.end:                                           ; preds = %do.body
  %26 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12641
  %27 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12642
  %28 = bitcast %struct.mlxsw_core* %27 to i8*, !dbg !12642
  %call11 = call i32 @mlxsw_core_trap_register(%struct.mlxsw_core* %26, %struct.mlxsw_listener* @mlxsw_emad_rx_listener, i8* %28) #11, !dbg !12643
  store i32 %call11, i32* %err, align 4, !dbg !12644
  %29 = load i32, i32* %err, align 4, !dbg !12645
  %tobool12 = icmp ne i32 %29, 0, !dbg !12645
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !12647

if.then13:                                        ; preds = %do.end
  br label %err_trap_register, !dbg !12648

if.end14:                                         ; preds = %do.end
  %30 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12649
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %30, i32 0, i32 0, !dbg !12650
  %31 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !12650
  %basic_trap_groups_set = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %31, i32 0, i32 7, !dbg !12651
  %32 = load i32 (%struct.mlxsw_core*)*, i32 (%struct.mlxsw_core*)** %basic_trap_groups_set, align 8, !dbg !12651
  %33 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12652
  %call15 = call i32 %32(%struct.mlxsw_core* %33) #11, !dbg !12649
  store i32 %call15, i32* %err, align 4, !dbg !12653
  %34 = load i32, i32* %err, align 4, !dbg !12654
  %tobool16 = icmp ne i32 %34, 0, !dbg !12654
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !12656

if.then17:                                        ; preds = %if.end14
  br label %err_emad_trap_set, !dbg !12657

if.end18:                                         ; preds = %if.end14
  %35 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12658
  %emad19 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %35, i32 0, i32 7, !dbg !12659
  %use_emad = getelementptr inbounds %struct.anon.129, %struct.anon.129* %emad19, i32 0, i32 3, !dbg !12660
  store i8 1, i8* %use_emad, align 8, !dbg !12661
  store i32 0, i32* %retval, align 4, !dbg !12662
  br label %return, !dbg !12662

err_emad_trap_set:                                ; preds = %if.then17
  call void @llvm.dbg.label(metadata !12663), !dbg !12664
  %36 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12665
  %37 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12666
  %38 = bitcast %struct.mlxsw_core* %37 to i8*, !dbg !12666
  call void @mlxsw_core_trap_unregister(%struct.mlxsw_core* %36, %struct.mlxsw_listener* @mlxsw_emad_rx_listener, i8* %38) #11, !dbg !12667
  br label %err_trap_register, !dbg !12667

err_trap_register:                                ; preds = %err_emad_trap_set, %if.then13
  call void @llvm.dbg.label(metadata !12668), !dbg !12669
  %39 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12670
  %emad_wq20 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %39, i32 0, i32 4, !dbg !12671
  %40 = load %struct.workqueue_struct*, %struct.workqueue_struct** %emad_wq20, align 8, !dbg !12671
  call void @destroy_workqueue(%struct.workqueue_struct* %40) #11, !dbg !12672
  %41 = load i32, i32* %err, align 4, !dbg !12673
  store i32 %41, i32* %retval, align 4, !dbg !12674
  br label %return, !dbg !12674

return:                                           ; preds = %err_trap_register, %if.end18, %if.then2, %if.then
  %42 = load i32, i32* %retval, align 4, !dbg !12675
  ret i32 %42, !dbg !12675
}

; Function Attrs: noredzone
declare dso_local i32 @devlink_register(%struct.devlink*, %struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_core_params_register(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !12676 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !12677, metadata !DIExpression()), !dbg !12678
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12679, metadata !DIExpression()), !dbg !12680
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12681
  %call = call i32 @mlxsw_core_fw_params_register(%struct.mlxsw_core* %0) #11, !dbg !12682
  store i32 %call, i32* %err, align 4, !dbg !12683
  %1 = load i32, i32* %err, align 4, !dbg !12684
  %tobool = icmp ne i32 %1, 0, !dbg !12684
  br i1 %tobool, label %if.then, label %if.end, !dbg !12686

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %err, align 4, !dbg !12687
  store i32 %2, i32* %retval, align 4, !dbg !12688
  br label %return, !dbg !12688

if.end:                                           ; preds = %entry
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12689
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %3, i32 0, i32 0, !dbg !12691
  %4 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !12691
  %params_register = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %4, i32 0, i32 33, !dbg !12692
  %5 = load i32 (%struct.mlxsw_core*)*, i32 (%struct.mlxsw_core*)** %params_register, align 8, !dbg !12692
  %tobool1 = icmp ne i32 (%struct.mlxsw_core*)* %5, null, !dbg !12689
  br i1 %tobool1, label %if.then2, label %if.end9, !dbg !12693

if.then2:                                         ; preds = %if.end
  %6 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12694
  %driver3 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %6, i32 0, i32 0, !dbg !12696
  %7 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver3, align 8, !dbg !12696
  %params_register4 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %7, i32 0, i32 33, !dbg !12697
  %8 = load i32 (%struct.mlxsw_core*)*, i32 (%struct.mlxsw_core*)** %params_register4, align 8, !dbg !12697
  %9 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12698
  %call5 = call i32 %8(%struct.mlxsw_core* %9) #11, !dbg !12694
  store i32 %call5, i32* %err, align 4, !dbg !12699
  %10 = load i32, i32* %err, align 4, !dbg !12700
  %tobool6 = icmp ne i32 %10, 0, !dbg !12700
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !12702

if.then7:                                         ; preds = %if.then2
  br label %err_params_register, !dbg !12703

if.end8:                                          ; preds = %if.then2
  br label %if.end9, !dbg !12704

if.end9:                                          ; preds = %if.end8, %if.end
  store i32 0, i32* %retval, align 4, !dbg !12705
  br label %return, !dbg !12705

err_params_register:                              ; preds = %if.then7
  call void @llvm.dbg.label(metadata !12706), !dbg !12707
  %11 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12708
  call void @mlxsw_core_fw_params_unregister(%struct.mlxsw_core* %11) #11, !dbg !12709
  %12 = load i32, i32* %err, align 4, !dbg !12710
  store i32 %12, i32* %retval, align 4, !dbg !12711
  br label %return, !dbg !12711

return:                                           ; preds = %err_params_register, %if.end9, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !12712
  ret i32 %13, !dbg !12712
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_core_fw_rev_validate(%struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_bus_info* %mlxsw_bus_info, %struct.mlxsw_fw_rev* %req_rev, i8* %filename) #0 !dbg !12713 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %mlxsw_bus_info.addr = alloca %struct.mlxsw_bus_info*, align 8
  %req_rev.addr = alloca %struct.mlxsw_fw_rev*, align 8
  %filename.addr = alloca i8*, align 8
  %rev = alloca %struct.mlxsw_fw_rev*, align 8
  %value = alloca %union.devlink_param_value, align 4
  %firmware = alloca %struct.firmware*, align 8
  %err = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !12716, metadata !DIExpression()), !dbg !12717
  store %struct.mlxsw_bus_info* %mlxsw_bus_info, %struct.mlxsw_bus_info** %mlxsw_bus_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_bus_info** %mlxsw_bus_info.addr, metadata !12718, metadata !DIExpression()), !dbg !12719
  store %struct.mlxsw_fw_rev* %req_rev, %struct.mlxsw_fw_rev** %req_rev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_fw_rev** %req_rev.addr, metadata !12720, metadata !DIExpression()), !dbg !12721
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !12722, metadata !DIExpression()), !dbg !12723
  call void @llvm.dbg.declare(metadata %struct.mlxsw_fw_rev** %rev, metadata !12724, metadata !DIExpression()), !dbg !12725
  %0 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %mlxsw_bus_info.addr, align 8, !dbg !12726
  %fw_rev = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %0, i32 0, i32 3, !dbg !12727
  store %struct.mlxsw_fw_rev* %fw_rev, %struct.mlxsw_fw_rev** %rev, align 8, !dbg !12725
  call void @llvm.dbg.declare(metadata %union.devlink_param_value* %value, metadata !12728, metadata !DIExpression()), !dbg !12729
  call void @llvm.dbg.declare(metadata %struct.firmware** %firmware, metadata !12730, metadata !DIExpression()), !dbg !12739
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12740, metadata !DIExpression()), !dbg !12741
  %1 = load %struct.mlxsw_fw_rev*, %struct.mlxsw_fw_rev** %req_rev.addr, align 8, !dbg !12742
  %tobool = icmp ne %struct.mlxsw_fw_rev* %1, null, !dbg !12742
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !12744

lor.lhs.false:                                    ; preds = %entry
  %2 = load i8*, i8** %filename.addr, align 8, !dbg !12745
  %tobool1 = icmp ne i8* %2, null, !dbg !12745
  br i1 %tobool1, label %if.end, label %if.then, !dbg !12746

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !12747
  br label %return, !dbg !12747

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12748
  %4 = bitcast %struct.mlxsw_core* %3 to i8*, !dbg !12748
  %call = call %struct.devlink* @priv_to_devlink(i8* %4) #11, !dbg !12749
  %call2 = call i32 @devlink_param_driverinit_value_get(%struct.devlink* %call, i32 7, %union.devlink_param_value* %value) #11, !dbg !12750
  store i32 %call2, i32* %err, align 4, !dbg !12751
  %5 = load i32, i32* %err, align 4, !dbg !12752
  %tobool3 = icmp ne i32 %5, 0, !dbg !12752
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !12754

if.then4:                                         ; preds = %if.end
  %6 = load i32, i32* %err, align 4, !dbg !12755
  store i32 %6, i32* %retval, align 4, !dbg !12756
  br label %return, !dbg !12756

if.end5:                                          ; preds = %if.end
  %vu8 = bitcast %union.devlink_param_value* %value to i8*, !dbg !12757
  %7 = load i8, i8* %vu8, align 4, !dbg !12757
  %conv = zext i8 %7 to i32, !dbg !12759
  %cmp = icmp eq i32 %conv, 1, !dbg !12760
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !12761

if.then7:                                         ; preds = %if.end5
  store i32 0, i32* %retval, align 4, !dbg !12762
  br label %return, !dbg !12762

if.end8:                                          ; preds = %if.end5
  %8 = load %struct.mlxsw_fw_rev*, %struct.mlxsw_fw_rev** %rev, align 8, !dbg !12763
  %major = getelementptr inbounds %struct.mlxsw_fw_rev, %struct.mlxsw_fw_rev* %8, i32 0, i32 0, !dbg !12765
  %9 = load i16, i16* %major, align 2, !dbg !12765
  %conv9 = zext i16 %9 to i32, !dbg !12763
  %10 = load %struct.mlxsw_fw_rev*, %struct.mlxsw_fw_rev** %req_rev.addr, align 8, !dbg !12766
  %major10 = getelementptr inbounds %struct.mlxsw_fw_rev, %struct.mlxsw_fw_rev* %10, i32 0, i32 0, !dbg !12767
  %11 = load i16, i16* %major10, align 2, !dbg !12767
  %conv11 = zext i16 %11 to i32, !dbg !12766
  %cmp12 = icmp ne i32 %conv9, %conv11, !dbg !12768
  br i1 %cmp12, label %if.then14, label %if.end43, !dbg !12769

if.then14:                                        ; preds = %if.end8
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !12770, metadata !DIExpression()), !dbg !12773
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !12773
  %12 = load i32, i32* %__ret_warn_on, align 4, !dbg !12774
  %tobool15 = icmp ne i32 %12, 0, !dbg !12774
  %lnot = xor i1 %tobool15, true, !dbg !12774
  %lnot16 = xor i1 %lnot, true, !dbg !12774
  %lnot.ext = zext i1 %lnot16 to i32, !dbg !12774
  %conv17 = sext i32 %lnot.ext to i64, !dbg !12774
  %tobool18 = icmp ne i64 %conv17, 0, !dbg !12774
  br i1 %tobool18, label %if.then19, label %if.end36, !dbg !12773

if.then19:                                        ; preds = %if.then14
  br label %do.body, !dbg !12774

do.body:                                          ; preds = %if.then19
  br label %do.body20, !dbg !12776

do.body20:                                        ; preds = %do.body
  br label %do.end, !dbg !12778

do.end:                                           ; preds = %do.body20
  %13 = load %struct.mlxsw_fw_rev*, %struct.mlxsw_fw_rev** %rev, align 8, !dbg !12776
  %major21 = getelementptr inbounds %struct.mlxsw_fw_rev, %struct.mlxsw_fw_rev* %13, i32 0, i32 0, !dbg !12776
  %14 = load i16, i16* %major21, align 2, !dbg !12776
  %conv22 = zext i16 %14 to i32, !dbg !12776
  %15 = load %struct.mlxsw_fw_rev*, %struct.mlxsw_fw_rev** %req_rev.addr, align 8, !dbg !12776
  %major23 = getelementptr inbounds %struct.mlxsw_fw_rev, %struct.mlxsw_fw_rev* %15, i32 0, i32 0, !dbg !12776
  %16 = load i16, i16* %major23, align 2, !dbg !12776
  %conv24 = zext i16 %16 to i32, !dbg !12776
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.69, i64 0, i64 0), i32 %conv22, i32 %conv24) #11, !dbg !12776
  br label %do.body25, !dbg !12776

do.body25:                                        ; preds = %do.end
  br label %do.body26, !dbg !12780

do.body26:                                        ; preds = %do.body25
  br label %do.end27, !dbg !12782

do.end27:                                         ; preds = %do.body26
  br label %do.body28, !dbg !12780

do.body28:                                        ; preds = %do.end27
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 1085, i32 2313, i64 12) #10, !dbg !12784, !srcloc !12786
  br label %do.end29, !dbg !12784

do.end29:                                         ; preds = %do.body28
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 361) #10, !dbg !12787, !srcloc !12789
  br label %do.body30, !dbg !12780

do.body30:                                        ; preds = %do.end29
  br label %do.end31, !dbg !12790

do.end31:                                         ; preds = %do.body30
  br label %do.end32, !dbg !12780

do.end32:                                         ; preds = %do.end31
  br label %do.body33, !dbg !12776

do.body33:                                        ; preds = %do.end32
  br label %do.end34, !dbg !12792

do.end34:                                         ; preds = %do.body33
  br label %do.end35, !dbg !12776

do.end35:                                         ; preds = %do.end34
  br label %if.end36, !dbg !12776

if.end36:                                         ; preds = %do.end35, %if.then14
  %17 = load i32, i32* %__ret_warn_on, align 4, !dbg !12773
  %tobool37 = icmp ne i32 %17, 0, !dbg !12773
  %lnot38 = xor i1 %tobool37, true, !dbg !12773
  %lnot40 = xor i1 %lnot38, true, !dbg !12773
  %lnot.ext41 = zext i1 %lnot40 to i32, !dbg !12773
  %conv42 = sext i32 %lnot.ext41 to i64, !dbg !12773
  store i64 %conv42, i64* %tmp, align 8, !dbg !12774
  %18 = load i64, i64* %tmp, align 8, !dbg !12773
  store i32 -22, i32* %retval, align 4, !dbg !12794
  br label %return, !dbg !12794

if.end43:                                         ; preds = %if.end8
  %19 = load %struct.mlxsw_fw_rev*, %struct.mlxsw_fw_rev** %rev, align 8, !dbg !12795
  %20 = load %struct.mlxsw_fw_rev*, %struct.mlxsw_fw_rev** %req_rev.addr, align 8, !dbg !12797
  %call44 = call zeroext i1 @mlxsw_core_fw_rev_minor_subminor_validate(%struct.mlxsw_fw_rev* %19, %struct.mlxsw_fw_rev* %20) #11, !dbg !12798
  br i1 %call44, label %if.then45, label %if.end46, !dbg !12799

if.then45:                                        ; preds = %if.end43
  store i32 0, i32* %retval, align 4, !dbg !12800
  br label %return, !dbg !12800

if.end46:                                         ; preds = %if.end43
  %21 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %mlxsw_bus_info.addr, align 8, !dbg !12801
  %dev = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %21, i32 0, i32 2, !dbg !12801
  %22 = load %struct.device*, %struct.device** %dev, align 8, !dbg !12801
  %23 = load %struct.mlxsw_fw_rev*, %struct.mlxsw_fw_rev** %rev, align 8, !dbg !12801
  %major47 = getelementptr inbounds %struct.mlxsw_fw_rev, %struct.mlxsw_fw_rev* %23, i32 0, i32 0, !dbg !12801
  %24 = load i16, i16* %major47, align 2, !dbg !12801
  %conv48 = zext i16 %24 to i32, !dbg !12801
  %25 = load %struct.mlxsw_fw_rev*, %struct.mlxsw_fw_rev** %rev, align 8, !dbg !12801
  %minor = getelementptr inbounds %struct.mlxsw_fw_rev, %struct.mlxsw_fw_rev* %25, i32 0, i32 1, !dbg !12801
  %26 = load i16, i16* %minor, align 2, !dbg !12801
  %conv49 = zext i16 %26 to i32, !dbg !12801
  %27 = load %struct.mlxsw_fw_rev*, %struct.mlxsw_fw_rev** %rev, align 8, !dbg !12801
  %subminor = getelementptr inbounds %struct.mlxsw_fw_rev, %struct.mlxsw_fw_rev* %27, i32 0, i32 2, !dbg !12801
  %28 = load i16, i16* %subminor, align 2, !dbg !12801
  %conv50 = zext i16 %28 to i32, !dbg !12801
  %29 = load %struct.mlxsw_fw_rev*, %struct.mlxsw_fw_rev** %req_rev.addr, align 8, !dbg !12801
  %major51 = getelementptr inbounds %struct.mlxsw_fw_rev, %struct.mlxsw_fw_rev* %29, i32 0, i32 0, !dbg !12801
  %30 = load i16, i16* %major51, align 2, !dbg !12801
  %conv52 = zext i16 %30 to i32, !dbg !12801
  %31 = load %struct.mlxsw_fw_rev*, %struct.mlxsw_fw_rev** %req_rev.addr, align 8, !dbg !12801
  %minor53 = getelementptr inbounds %struct.mlxsw_fw_rev, %struct.mlxsw_fw_rev* %31, i32 0, i32 1, !dbg !12801
  %32 = load i16, i16* %minor53, align 2, !dbg !12801
  %conv54 = zext i16 %32 to i32, !dbg !12801
  %33 = load %struct.mlxsw_fw_rev*, %struct.mlxsw_fw_rev** %req_rev.addr, align 8, !dbg !12801
  %subminor55 = getelementptr inbounds %struct.mlxsw_fw_rev, %struct.mlxsw_fw_rev* %33, i32 0, i32 2, !dbg !12801
  %34 = load i16, i16* %subminor55, align 2, !dbg !12801
  %conv56 = zext i16 %34 to i32, !dbg !12801
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %22, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.70, i64 0, i64 0), i32 %conv48, i32 %conv49, i32 %conv50, i32 %conv52, i32 %conv54, i32 %conv56) #14, !dbg !12801
  %35 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %mlxsw_bus_info.addr, align 8, !dbg !12802
  %dev57 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %35, i32 0, i32 2, !dbg !12802
  %36 = load %struct.device*, %struct.device** %dev57, align 8, !dbg !12802
  %37 = load i8*, i8** %filename.addr, align 8, !dbg !12802
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %36, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.71, i64 0, i64 0), i8* %37) #14, !dbg !12802
  %38 = load i8*, i8** %filename.addr, align 8, !dbg !12803
  %39 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %mlxsw_bus_info.addr, align 8, !dbg !12804
  %dev58 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %39, i32 0, i32 2, !dbg !12805
  %40 = load %struct.device*, %struct.device** %dev58, align 8, !dbg !12805
  %call59 = call i32 @request_firmware_direct(%struct.firmware** %firmware, i8* %38, %struct.device* %40) #11, !dbg !12806
  store i32 %call59, i32* %err, align 4, !dbg !12807
  %41 = load i32, i32* %err, align 4, !dbg !12808
  %tobool60 = icmp ne i32 %41, 0, !dbg !12808
  br i1 %tobool60, label %if.then61, label %if.end63, !dbg !12810

if.then61:                                        ; preds = %if.end46
  %42 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %mlxsw_bus_info.addr, align 8, !dbg !12811
  %dev62 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %42, i32 0, i32 2, !dbg !12811
  %43 = load %struct.device*, %struct.device** %dev62, align 8, !dbg !12811
  %44 = load i8*, i8** %filename.addr, align 8, !dbg !12811
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %43, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.72, i64 0, i64 0), i8* %44) #14, !dbg !12811
  %45 = load i32, i32* %err, align 4, !dbg !12813
  store i32 %45, i32* %retval, align 4, !dbg !12814
  br label %return, !dbg !12814

if.end63:                                         ; preds = %if.end46
  %46 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12815
  %47 = load %struct.firmware*, %struct.firmware** %firmware, align 8, !dbg !12816
  %call64 = call i32 @mlxsw_core_fw_flash(%struct.mlxsw_core* %46, %struct.firmware* %47, %struct.netlink_ext_ack* null) #11, !dbg !12817
  store i32 %call64, i32* %err, align 4, !dbg !12818
  %48 = load %struct.firmware*, %struct.firmware** %firmware, align 8, !dbg !12819
  call void @release_firmware(%struct.firmware* %48) #11, !dbg !12820
  %49 = load i32, i32* %err, align 4, !dbg !12821
  %tobool65 = icmp ne i32 %49, 0, !dbg !12821
  br i1 %tobool65, label %if.then66, label %if.end68, !dbg !12823

if.then66:                                        ; preds = %if.end63
  %50 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %mlxsw_bus_info.addr, align 8, !dbg !12824
  %dev67 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %50, i32 0, i32 2, !dbg !12824
  %51 = load %struct.device*, %struct.device** %dev67, align 8, !dbg !12824
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %51, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.73, i64 0, i64 0)) #14, !dbg !12824
  br label %if.end68, !dbg !12824

if.end68:                                         ; preds = %if.then66, %if.end63
  %52 = load %struct.mlxsw_fw_rev*, %struct.mlxsw_fw_rev** %rev, align 8, !dbg !12825
  %minor69 = getelementptr inbounds %struct.mlxsw_fw_rev, %struct.mlxsw_fw_rev* %52, i32 0, i32 1, !dbg !12827
  %53 = load i16, i16* %minor69, align 2, !dbg !12827
  %conv70 = zext i16 %53 to i32, !dbg !12825
  %54 = load %struct.mlxsw_fw_rev*, %struct.mlxsw_fw_rev** %req_rev.addr, align 8, !dbg !12828
  %can_reset_minor = getelementptr inbounds %struct.mlxsw_fw_rev, %struct.mlxsw_fw_rev* %54, i32 0, i32 3, !dbg !12829
  %55 = load i16, i16* %can_reset_minor, align 2, !dbg !12829
  %conv71 = zext i16 %55 to i32, !dbg !12828
  %cmp72 = icmp sge i32 %conv70, %conv71, !dbg !12830
  br i1 %cmp72, label %if.then74, label %if.else, !dbg !12831

if.then74:                                        ; preds = %if.end68
  %56 = load i32, i32* %err, align 4, !dbg !12832
  %tobool75 = icmp ne i32 %56, 0, !dbg !12832
  br i1 %tobool75, label %cond.true, label %cond.false, !dbg !12832

cond.true:                                        ; preds = %if.then74
  %57 = load i32, i32* %err, align 4, !dbg !12833
  br label %cond.end, !dbg !12832

cond.false:                                       ; preds = %if.then74
  br label %cond.end, !dbg !12832

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %57, %cond.true ], [ -11, %cond.false ], !dbg !12832
  store i32 %cond, i32* %retval, align 4, !dbg !12834
  br label %return, !dbg !12834

if.else:                                          ; preds = %if.end68
  store i32 0, i32* %retval, align 4, !dbg !12835
  br label %return, !dbg !12835

return:                                           ; preds = %if.else, %cond.end, %if.then61, %if.then45, %if.end36, %if.then7, %if.then4, %if.then
  %58 = load i32, i32* %retval, align 4, !dbg !12836
  ret i32 %58, !dbg !12836
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_core_health_init(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !12837 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %devlink = alloca %struct.devlink*, align 8
  %fw_fatal = alloca %struct.devlink_health_reporter*, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !12838, metadata !DIExpression()), !dbg !12839
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink, metadata !12840, metadata !DIExpression()), !dbg !12841
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12842
  %1 = bitcast %struct.mlxsw_core* %0 to i8*, !dbg !12842
  %call = call %struct.devlink* @priv_to_devlink(i8* %1) #11, !dbg !12843
  store %struct.devlink* %call, %struct.devlink** %devlink, align 8, !dbg !12841
  call void @llvm.dbg.declare(metadata %struct.devlink_health_reporter** %fw_fatal, metadata !12844, metadata !DIExpression()), !dbg !12845
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12846, metadata !DIExpression()), !dbg !12847
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12848
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %2, i32 0, i32 0, !dbg !12850
  %3 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !12850
  %fw_fatal_enabled = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %3, i32 0, i32 39, !dbg !12851
  %4 = load i8, i8* %fw_fatal_enabled, align 1, !dbg !12851
  %tobool = trunc i8 %4 to i1, !dbg !12851
  br i1 %tobool, label %if.end, label %if.then, !dbg !12852

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !12853
  br label %return, !dbg !12853

if.end:                                           ; preds = %entry
  %5 = load %struct.devlink*, %struct.devlink** %devlink, align 8, !dbg !12854
  %6 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12855
  %7 = bitcast %struct.mlxsw_core* %6 to i8*, !dbg !12855
  %call1 = call %struct.devlink_health_reporter* @devlink_health_reporter_create(%struct.devlink* %5, %struct.devlink_health_reporter_ops* @mlxsw_core_health_fw_fatal_ops, i64 0, i8* %7) #11, !dbg !12856
  store %struct.devlink_health_reporter* %call1, %struct.devlink_health_reporter** %fw_fatal, align 8, !dbg !12857
  %8 = load %struct.devlink_health_reporter*, %struct.devlink_health_reporter** %fw_fatal, align 8, !dbg !12858
  %9 = bitcast %struct.devlink_health_reporter* %8 to i8*, !dbg !12858
  %call2 = call zeroext i1 @IS_ERR(i8* %9) #11, !dbg !12860
  br i1 %call2, label %if.then3, label %if.end5, !dbg !12861

if.then3:                                         ; preds = %if.end
  %10 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12862
  %bus_info = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %10, i32 0, i32 3, !dbg !12862
  %11 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info, align 8, !dbg !12862
  %dev = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %11, i32 0, i32 2, !dbg !12862
  %12 = load %struct.device*, %struct.device** %dev, align 8, !dbg !12862
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %12, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.74, i64 0, i64 0)) #14, !dbg !12862
  %13 = load %struct.devlink_health_reporter*, %struct.devlink_health_reporter** %fw_fatal, align 8, !dbg !12864
  %14 = bitcast %struct.devlink_health_reporter* %13 to i8*, !dbg !12864
  %call4 = call i64 @PTR_ERR(i8* %14) #11, !dbg !12865
  %conv = trunc i64 %call4 to i32, !dbg !12865
  store i32 %conv, i32* %retval, align 4, !dbg !12866
  br label %return, !dbg !12866

if.end5:                                          ; preds = %if.end
  %15 = load %struct.devlink_health_reporter*, %struct.devlink_health_reporter** %fw_fatal, align 8, !dbg !12867
  %16 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12868
  %health = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %16, i32 0, i32 15, !dbg !12869
  %fw_fatal6 = getelementptr inbounds %struct.anon.131, %struct.anon.131* %health, i32 0, i32 0, !dbg !12870
  store %struct.devlink_health_reporter* %15, %struct.devlink_health_reporter** %fw_fatal6, align 8, !dbg !12871
  %17 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12872
  %18 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12873
  %19 = bitcast %struct.mlxsw_core* %18 to i8*, !dbg !12873
  %call7 = call i32 @mlxsw_core_trap_register(%struct.mlxsw_core* %17, %struct.mlxsw_listener* bitcast ({ i16, { %struct.mlxsw_event_listener }, i32, i32, i8, i8, i8 }* @mlxsw_core_health_listener to %struct.mlxsw_listener*), i8* %19) #11, !dbg !12874
  store i32 %call7, i32* %err, align 4, !dbg !12875
  %20 = load i32, i32* %err, align 4, !dbg !12876
  %tobool8 = icmp ne i32 %20, 0, !dbg !12876
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !12878

if.then9:                                         ; preds = %if.end5
  br label %err_trap_register, !dbg !12879

if.end10:                                         ; preds = %if.end5
  %21 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12880
  %call11 = call i32 @mlxsw_core_health_fw_fatal_config(%struct.mlxsw_core* %21, i1 zeroext true) #11, !dbg !12881
  store i32 %call11, i32* %err, align 4, !dbg !12882
  %22 = load i32, i32* %err, align 4, !dbg !12883
  %tobool12 = icmp ne i32 %22, 0, !dbg !12883
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !12885

if.then13:                                        ; preds = %if.end10
  br label %err_fw_fatal_config, !dbg !12886

if.end14:                                         ; preds = %if.end10
  store i32 0, i32* %retval, align 4, !dbg !12887
  br label %return, !dbg !12887

err_fw_fatal_config:                              ; preds = %if.then13
  call void @llvm.dbg.label(metadata !12888), !dbg !12889
  %23 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12890
  %24 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12891
  %25 = bitcast %struct.mlxsw_core* %24 to i8*, !dbg !12891
  call void @mlxsw_core_trap_unregister(%struct.mlxsw_core* %23, %struct.mlxsw_listener* bitcast ({ i16, { %struct.mlxsw_event_listener }, i32, i32, i8, i8, i8 }* @mlxsw_core_health_listener to %struct.mlxsw_listener*), i8* %25) #11, !dbg !12892
  br label %err_trap_register, !dbg !12892

err_trap_register:                                ; preds = %err_fw_fatal_config, %if.then9
  call void @llvm.dbg.label(metadata !12893), !dbg !12894
  %26 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12895
  %health15 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %26, i32 0, i32 15, !dbg !12896
  %fw_fatal16 = getelementptr inbounds %struct.anon.131, %struct.anon.131* %health15, i32 0, i32 0, !dbg !12897
  %27 = load %struct.devlink_health_reporter*, %struct.devlink_health_reporter** %fw_fatal16, align 8, !dbg !12897
  call void @devlink_health_reporter_destroy(%struct.devlink_health_reporter* %27) #11, !dbg !12898
  %28 = load i32, i32* %err, align 4, !dbg !12899
  store i32 %28, i32* %retval, align 4, !dbg !12900
  br label %return, !dbg !12900

return:                                           ; preds = %err_trap_register, %if.end14, %if.then3, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !12901
  ret i32 %29, !dbg !12901
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_hwmon_init(%struct.mlxsw_core*, %struct.mlxsw_bus_info*, %struct.mlxsw_hwmon**) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_thermal_init(%struct.mlxsw_core*, %struct.mlxsw_bus_info*, %struct.mlxsw_thermal**) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_env_init(%struct.mlxsw_core*, %struct.mlxsw_env**) #2

; Function Attrs: noredzone
declare dso_local void @devlink_params_publish(%struct.devlink*) #2

; Function Attrs: noredzone
declare dso_local void @devlink_reload_enable(%struct.devlink*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_driver* @__driver_find(i8* %kind) #0 !dbg !12902 {
entry:
  %retval = alloca %struct.mlxsw_driver*, align 8
  %kind.addr = alloca i8*, align 8
  %mlxsw_driver = alloca %struct.mlxsw_driver*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_driver*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp7 = alloca %struct.mlxsw_driver*, align 8
  store i8* %kind, i8** %kind.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %kind.addr, metadata !12903, metadata !DIExpression()), !dbg !12904
  call void @llvm.dbg.declare(metadata %struct.mlxsw_driver** %mlxsw_driver, metadata !12905, metadata !DIExpression()), !dbg !12906
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12907, metadata !DIExpression()), !dbg !12910
  %0 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @mlxsw_core_driver_list, i32 0, i32 0), align 8, !dbg !12910
  %1 = bitcast %struct.list_head* %0 to i8*, !dbg !12910
  store i8* %1, i8** %__mptr, align 8, !dbg !12910
  br label %do.body, !dbg !12910

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12911

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12910
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !12910
  %3 = bitcast i8* %add.ptr to %struct.mlxsw_driver*, !dbg !12910
  store %struct.mlxsw_driver* %3, %struct.mlxsw_driver** %tmp, align 8, !dbg !12911
  %4 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %tmp, align 8, !dbg !12910
  store %struct.mlxsw_driver* %4, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !12913
  br label %for.cond, !dbg !12913

for.cond:                                         ; preds = %do.end6, %do.end
  %5 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !12914
  %list = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %5, i32 0, i32 0, !dbg !12914
  %cmp = icmp eq %struct.list_head* %list, @mlxsw_core_driver_list, !dbg !12914
  %lnot = xor i1 %cmp, true, !dbg !12914
  br i1 %lnot, label %for.body, label %for.end, !dbg !12913

for.body:                                         ; preds = %for.cond
  %6 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !12916
  %kind1 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %6, i32 0, i32 1, !dbg !12919
  %7 = load i8*, i8** %kind1, align 8, !dbg !12919
  %8 = load i8*, i8** %kind.addr, align 8, !dbg !12920
  %call = call i32 @strcmp(i8* %7, i8* %8) #11, !dbg !12921
  %cmp2 = icmp eq i32 %call, 0, !dbg !12922
  br i1 %cmp2, label %if.then, label %if.end, !dbg !12923

if.then:                                          ; preds = %for.body
  %9 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !12924
  store %struct.mlxsw_driver* %9, %struct.mlxsw_driver** %retval, align 8, !dbg !12925
  br label %return, !dbg !12925

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !12926

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !12927, metadata !DIExpression()), !dbg !12929
  %10 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !12929
  %list4 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %10, i32 0, i32 0, !dbg !12929
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list4, i32 0, i32 0, !dbg !12929
  %11 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !12929
  %12 = bitcast %struct.list_head* %11 to i8*, !dbg !12929
  store i8* %12, i8** %__mptr3, align 8, !dbg !12929
  br label %do.body5, !dbg !12929

do.body5:                                         ; preds = %for.inc
  br label %do.end6, !dbg !12930

do.end6:                                          ; preds = %do.body5
  %13 = load i8*, i8** %__mptr3, align 8, !dbg !12929
  %add.ptr8 = getelementptr i8, i8* %13, i64 0, !dbg !12929
  %14 = bitcast i8* %add.ptr8 to %struct.mlxsw_driver*, !dbg !12929
  store %struct.mlxsw_driver* %14, %struct.mlxsw_driver** %tmp7, align 8, !dbg !12930
  %15 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %tmp7, align 8, !dbg !12929
  store %struct.mlxsw_driver* %15, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !12914
  br label %for.cond, !dbg !12914, !llvm.loop !12932

for.end:                                          ; preds = %for.cond
  store %struct.mlxsw_driver* null, %struct.mlxsw_driver** %retval, align 8, !dbg !12934
  br label %return, !dbg !12934

return:                                           ; preds = %for.end, %if.then
  %16 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %retval, align 8, !dbg !12935
  ret %struct.mlxsw_driver* %16, !dbg !12935
}

; Function Attrs: noredzone
declare dso_local i32 @strcmp(i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_devlink_core_bus_device_reload_down(%struct.devlink* %devlink, i1 zeroext %netns_change, i32 %action, i32 %limit, %struct.netlink_ext_ack* %extack) #0 !dbg !12936 {
entry:
  %retval = alloca i32, align 4
  %devlink.addr = alloca %struct.devlink*, align 8
  %netns_change.addr = alloca i8, align 1
  %action.addr = alloca i32, align 4
  %limit.addr = alloca i32, align 4
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !12937, metadata !DIExpression()), !dbg !12938
  %frombool = zext i1 %netns_change to i8
  store i8 %frombool, i8* %netns_change.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %netns_change.addr, metadata !12939, metadata !DIExpression()), !dbg !12940
  store i32 %action, i32* %action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !12941, metadata !DIExpression()), !dbg !12942
  store i32 %limit, i32* %limit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %limit.addr, metadata !12943, metadata !DIExpression()), !dbg !12944
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !12945, metadata !DIExpression()), !dbg !12946
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !12947, metadata !DIExpression()), !dbg !12948
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !12949
  %call = call i8* @devlink_priv(%struct.devlink* %0) #11, !dbg !12950
  %1 = bitcast i8* %call to %struct.mlxsw_core*, !dbg !12950
  store %struct.mlxsw_core* %1, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !12948
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !12951
  %bus = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %2, i32 0, i32 1, !dbg !12953
  %3 = load %struct.mlxsw_bus*, %struct.mlxsw_bus** %bus, align 8, !dbg !12953
  %features = getelementptr inbounds %struct.mlxsw_bus, %struct.mlxsw_bus* %3, i32 0, i32 8, !dbg !12954
  %4 = load i8, i8* %features, align 8, !dbg !12954
  %conv = zext i8 %4 to i64, !dbg !12951
  %and = and i64 %conv, 2, !dbg !12955
  %tobool = icmp ne i64 %and, 0, !dbg !12955
  br i1 %tobool, label %if.end, label %if.then, !dbg !12956

if.then:                                          ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !12957
  br label %return, !dbg !12957

if.end:                                           ; preds = %entry
  %5 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !12958
  call void @mlxsw_core_bus_device_unregister(%struct.mlxsw_core* %5, i1 zeroext true) #11, !dbg !12959
  store i32 0, i32* %retval, align 4, !dbg !12960
  br label %return, !dbg !12960

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !12961
  ret i32 %6, !dbg !12961
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_devlink_core_bus_device_reload_up(%struct.devlink* %devlink, i32 %action, i32 %limit, i32* %actions_performed, %struct.netlink_ext_ack* %extack) #0 !dbg !12962 {
entry:
  %devlink.addr = alloca %struct.devlink*, align 8
  %action.addr = alloca i32, align 4
  %limit.addr = alloca i32, align 4
  %actions_performed.addr = alloca i32*, align 8
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !12963, metadata !DIExpression()), !dbg !12964
  store i32 %action, i32* %action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !12965, metadata !DIExpression()), !dbg !12966
  store i32 %limit, i32* %limit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %limit.addr, metadata !12967, metadata !DIExpression()), !dbg !12968
  store i32* %actions_performed, i32** %actions_performed.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %actions_performed.addr, metadata !12969, metadata !DIExpression()), !dbg !12970
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !12971, metadata !DIExpression()), !dbg !12972
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !12973, metadata !DIExpression()), !dbg !12974
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !12975
  %call = call i8* @devlink_priv(%struct.devlink* %0) #11, !dbg !12976
  %1 = bitcast i8* %call to %struct.mlxsw_core*, !dbg !12976
  store %struct.mlxsw_core* %1, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !12974
  %2 = load i32*, i32** %actions_performed.addr, align 8, !dbg !12977
  store i32 6, i32* %2, align 4, !dbg !12978
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !12979
  %bus_info = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %3, i32 0, i32 3, !dbg !12980
  %4 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info, align 8, !dbg !12980
  %5 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !12981
  %bus = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %5, i32 0, i32 1, !dbg !12982
  %6 = load %struct.mlxsw_bus*, %struct.mlxsw_bus** %bus, align 8, !dbg !12982
  %7 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !12983
  %bus_priv = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %7, i32 0, i32 2, !dbg !12984
  %8 = load i8*, i8** %bus_priv, align 8, !dbg !12984
  %9 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !12985
  %10 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !12986
  %call1 = call i32 @mlxsw_core_bus_device_register(%struct.mlxsw_bus_info* %4, %struct.mlxsw_bus* %6, i8* %8, i1 zeroext true, %struct.devlink* %9, %struct.netlink_ext_ack* %10) #11, !dbg !12987
  ret i32 %call1, !dbg !12988
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_devlink_port_type_set(%struct.devlink_port* %devlink_port, i32 %port_type) #0 !dbg !12989 {
entry:
  %retval = alloca i32, align 4
  %devlink_port.addr = alloca %struct.devlink_port*, align 8
  %port_type.addr = alloca i32, align 4
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mlxsw_driver = alloca %struct.mlxsw_driver*, align 8
  %mlxsw_core_port = alloca %struct.mlxsw_core_port*, align 8
  store %struct.devlink_port* %devlink_port, %struct.devlink_port** %devlink_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_port** %devlink_port.addr, metadata !12990, metadata !DIExpression()), !dbg !12991
  store i32 %port_type, i32* %port_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port_type.addr, metadata !12992, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !12994, metadata !DIExpression()), !dbg !12995
  %0 = load %struct.devlink_port*, %struct.devlink_port** %devlink_port.addr, align 8, !dbg !12996
  %devlink = getelementptr inbounds %struct.devlink_port, %struct.devlink_port* %0, i32 0, i32 3, !dbg !12997
  %1 = load %struct.devlink*, %struct.devlink** %devlink, align 8, !dbg !12997
  %call = call i8* @devlink_priv(%struct.devlink* %1) #11, !dbg !12998
  %2 = bitcast i8* %call to %struct.mlxsw_core*, !dbg !12998
  store %struct.mlxsw_core* %2, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !12995
  call void @llvm.dbg.declare(metadata %struct.mlxsw_driver** %mlxsw_driver, metadata !12999, metadata !DIExpression()), !dbg !13000
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13001
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %3, i32 0, i32 0, !dbg !13002
  %4 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !13002
  store %struct.mlxsw_driver* %4, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13000
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core_port** %mlxsw_core_port, metadata !13003, metadata !DIExpression()), !dbg !13004
  %5 = load %struct.devlink_port*, %struct.devlink_port** %devlink_port.addr, align 8, !dbg !13005
  %call1 = call i8* @__dl_port(%struct.devlink_port* %5) #11, !dbg !13006
  %6 = bitcast i8* %call1 to %struct.mlxsw_core_port*, !dbg !13006
  store %struct.mlxsw_core_port* %6, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !13004
  %7 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13007
  %port_type_set = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %7, i32 0, i32 8, !dbg !13009
  %8 = load i32 (%struct.mlxsw_core*, i8, i32)*, i32 (%struct.mlxsw_core*, i8, i32)** %port_type_set, align 8, !dbg !13009
  %tobool = icmp ne i32 (%struct.mlxsw_core*, i8, i32)* %8, null, !dbg !13007
  br i1 %tobool, label %if.end, label %if.then, !dbg !13010

if.then:                                          ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !13011
  br label %return, !dbg !13011

if.end:                                           ; preds = %entry
  %9 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13012
  %port_type_set2 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %9, i32 0, i32 8, !dbg !13013
  %10 = load i32 (%struct.mlxsw_core*, i8, i32)*, i32 (%struct.mlxsw_core*, i8, i32)** %port_type_set2, align 8, !dbg !13013
  %11 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13014
  %12 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !13015
  %local_port = getelementptr inbounds %struct.mlxsw_core_port, %struct.mlxsw_core_port* %12, i32 0, i32 2, !dbg !13016
  %13 = load i8, i8* %local_port, align 8, !dbg !13016
  %14 = load i32, i32* %port_type.addr, align 4, !dbg !13017
  %call3 = call i32 %10(%struct.mlxsw_core* %11, i8 zeroext %13, i32 %14) #11, !dbg !13012
  store i32 %call3, i32* %retval, align 4, !dbg !13018
  br label %return, !dbg !13018

return:                                           ; preds = %if.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !13019
  ret i32 %15, !dbg !13019
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_devlink_port_split(%struct.devlink* %devlink, i32 %port_index, i32 %count, %struct.netlink_ext_ack* %extack) #0 !dbg !8306 {
entry:
  %retval = alloca i32, align 4
  %devlink.addr = alloca %struct.devlink*, align 8
  %port_index.addr = alloca i32, align 4
  %count.addr = alloca i32, align 4
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %__extack = alloca %struct.netlink_ext_ack*, align 8
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !13020, metadata !DIExpression()), !dbg !13021
  store i32 %port_index, i32* %port_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port_index.addr, metadata !13022, metadata !DIExpression()), !dbg !13023
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !13024, metadata !DIExpression()), !dbg !13025
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !13026, metadata !DIExpression()), !dbg !13027
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !13028, metadata !DIExpression()), !dbg !13029
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !13030
  %call = call i8* @devlink_priv(%struct.devlink* %0) #11, !dbg !13031
  %1 = bitcast i8* %call to %struct.mlxsw_core*, !dbg !13031
  store %struct.mlxsw_core* %1, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13029
  %2 = load i32, i32* %port_index.addr, align 4, !dbg !13032
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13034
  %max_ports = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %3, i32 0, i32 13, !dbg !13035
  %4 = load i32, i32* %max_ports, align 8, !dbg !13035
  %cmp = icmp uge i32 %2, %4, !dbg !13036
  br i1 %cmp, label %if.then, label %if.end2, !dbg !13037

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !13038

do.body:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack, metadata !13040, metadata !DIExpression()), !dbg !13042
  %5 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !13042
  store %struct.netlink_ext_ack* %5, %struct.netlink_ext_ack** %__extack, align 8, !dbg !13042
  %6 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !13043
  %tobool = icmp ne %struct.netlink_ext_ack* %6, null, !dbg !13043
  br i1 %tobool, label %if.then1, label %if.end, !dbg !13042

if.then1:                                         ; preds = %do.body
  %7 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !13043
  %_msg = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %7, i32 0, i32 0, !dbg !13043
  store i8* getelementptr inbounds ([55 x i8], [55 x i8]* @mlxsw_devlink_port_split.__msg, i64 0, i64 0), i8** %_msg, align 8, !dbg !13043
  br label %if.end, !dbg !13043

if.end:                                           ; preds = %if.then1, %do.body
  br label %do.end, !dbg !13042

do.end:                                           ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !13045
  br label %return, !dbg !13045

if.end2:                                          ; preds = %entry
  %8 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13046
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %8, i32 0, i32 0, !dbg !13048
  %9 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !13048
  %port_split = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %9, i32 0, i32 9, !dbg !13049
  %10 = load i32 (%struct.mlxsw_core*, i8, i32, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core*, i8, i32, %struct.netlink_ext_ack*)** %port_split, align 8, !dbg !13049
  %tobool3 = icmp ne i32 (%struct.mlxsw_core*, i8, i32, %struct.netlink_ext_ack*)* %10, null, !dbg !13046
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !13050

if.then4:                                         ; preds = %if.end2
  store i32 -95, i32* %retval, align 4, !dbg !13051
  br label %return, !dbg !13051

if.end5:                                          ; preds = %if.end2
  %11 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13052
  %driver6 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %11, i32 0, i32 0, !dbg !13053
  %12 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver6, align 8, !dbg !13053
  %port_split7 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %12, i32 0, i32 9, !dbg !13054
  %13 = load i32 (%struct.mlxsw_core*, i8, i32, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core*, i8, i32, %struct.netlink_ext_ack*)** %port_split7, align 8, !dbg !13054
  %14 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13055
  %15 = load i32, i32* %port_index.addr, align 4, !dbg !13056
  %conv = trunc i32 %15 to i8, !dbg !13056
  %16 = load i32, i32* %count.addr, align 4, !dbg !13057
  %17 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !13058
  %call8 = call i32 %13(%struct.mlxsw_core* %14, i8 zeroext %conv, i32 %16, %struct.netlink_ext_ack* %17) #11, !dbg !13052
  store i32 %call8, i32* %retval, align 4, !dbg !13059
  br label %return, !dbg !13059

return:                                           ; preds = %if.end5, %if.then4, %do.end
  %18 = load i32, i32* %retval, align 4, !dbg !13060
  ret i32 %18, !dbg !13060
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_devlink_port_unsplit(%struct.devlink* %devlink, i32 %port_index, %struct.netlink_ext_ack* %extack) #0 !dbg !8312 {
entry:
  %retval = alloca i32, align 4
  %devlink.addr = alloca %struct.devlink*, align 8
  %port_index.addr = alloca i32, align 4
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %__extack = alloca %struct.netlink_ext_ack*, align 8
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !13061, metadata !DIExpression()), !dbg !13062
  store i32 %port_index, i32* %port_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port_index.addr, metadata !13063, metadata !DIExpression()), !dbg !13064
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !13065, metadata !DIExpression()), !dbg !13066
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !13067, metadata !DIExpression()), !dbg !13068
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !13069
  %call = call i8* @devlink_priv(%struct.devlink* %0) #11, !dbg !13070
  %1 = bitcast i8* %call to %struct.mlxsw_core*, !dbg !13070
  store %struct.mlxsw_core* %1, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13068
  %2 = load i32, i32* %port_index.addr, align 4, !dbg !13071
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13073
  %max_ports = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %3, i32 0, i32 13, !dbg !13074
  %4 = load i32, i32* %max_ports, align 8, !dbg !13074
  %cmp = icmp uge i32 %2, %4, !dbg !13075
  br i1 %cmp, label %if.then, label %if.end2, !dbg !13076

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !13077

do.body:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack, metadata !13079, metadata !DIExpression()), !dbg !13081
  %5 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !13081
  store %struct.netlink_ext_ack* %5, %struct.netlink_ext_ack** %__extack, align 8, !dbg !13081
  %6 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !13082
  %tobool = icmp ne %struct.netlink_ext_ack* %6, null, !dbg !13082
  br i1 %tobool, label %if.then1, label %if.end, !dbg !13081

if.then1:                                         ; preds = %do.body
  %7 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !13082
  %_msg = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %7, i32 0, i32 0, !dbg !13082
  store i8* getelementptr inbounds ([55 x i8], [55 x i8]* @mlxsw_devlink_port_unsplit.__msg, i64 0, i64 0), i8** %_msg, align 8, !dbg !13082
  br label %if.end, !dbg !13082

if.end:                                           ; preds = %if.then1, %do.body
  br label %do.end, !dbg !13081

do.end:                                           ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !13084
  br label %return, !dbg !13084

if.end2:                                          ; preds = %entry
  %8 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13085
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %8, i32 0, i32 0, !dbg !13087
  %9 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !13087
  %port_unsplit = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %9, i32 0, i32 10, !dbg !13088
  %10 = load i32 (%struct.mlxsw_core*, i8, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core*, i8, %struct.netlink_ext_ack*)** %port_unsplit, align 8, !dbg !13088
  %tobool3 = icmp ne i32 (%struct.mlxsw_core*, i8, %struct.netlink_ext_ack*)* %10, null, !dbg !13085
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !13089

if.then4:                                         ; preds = %if.end2
  store i32 -95, i32* %retval, align 4, !dbg !13090
  br label %return, !dbg !13090

if.end5:                                          ; preds = %if.end2
  %11 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13091
  %driver6 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %11, i32 0, i32 0, !dbg !13092
  %12 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver6, align 8, !dbg !13092
  %port_unsplit7 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %12, i32 0, i32 10, !dbg !13093
  %13 = load i32 (%struct.mlxsw_core*, i8, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core*, i8, %struct.netlink_ext_ack*)** %port_unsplit7, align 8, !dbg !13093
  %14 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13094
  %15 = load i32, i32* %port_index.addr, align 4, !dbg !13095
  %conv = trunc i32 %15 to i8, !dbg !13095
  %16 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !13096
  %call8 = call i32 %13(%struct.mlxsw_core* %14, i8 zeroext %conv, %struct.netlink_ext_ack* %16) #11, !dbg !13091
  store i32 %call8, i32* %retval, align 4, !dbg !13097
  br label %return, !dbg !13097

return:                                           ; preds = %if.end5, %if.then4, %do.end
  %17 = load i32, i32* %retval, align 4, !dbg !13098
  ret i32 %17, !dbg !13098
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_devlink_sb_pool_get(%struct.devlink* %devlink, i32 %sb_index, i16 zeroext %pool_index, %struct.devlink_sb_pool_info* %pool_info) #0 !dbg !13099 {
entry:
  %retval = alloca i32, align 4
  %devlink.addr = alloca %struct.devlink*, align 8
  %sb_index.addr = alloca i32, align 4
  %pool_index.addr = alloca i16, align 2
  %pool_info.addr = alloca %struct.devlink_sb_pool_info*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mlxsw_driver = alloca %struct.mlxsw_driver*, align 8
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !13100, metadata !DIExpression()), !dbg !13101
  store i32 %sb_index, i32* %sb_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sb_index.addr, metadata !13102, metadata !DIExpression()), !dbg !13103
  store i16 %pool_index, i16* %pool_index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %pool_index.addr, metadata !13104, metadata !DIExpression()), !dbg !13105
  store %struct.devlink_sb_pool_info* %pool_info, %struct.devlink_sb_pool_info** %pool_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_sb_pool_info** %pool_info.addr, metadata !13106, metadata !DIExpression()), !dbg !13107
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !13108, metadata !DIExpression()), !dbg !13109
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !13110
  %call = call i8* @devlink_priv(%struct.devlink* %0) #11, !dbg !13111
  %1 = bitcast i8* %call to %struct.mlxsw_core*, !dbg !13111
  store %struct.mlxsw_core* %1, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13109
  call void @llvm.dbg.declare(metadata %struct.mlxsw_driver** %mlxsw_driver, metadata !13112, metadata !DIExpression()), !dbg !13113
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13114
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %2, i32 0, i32 0, !dbg !13115
  %3 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !13115
  store %struct.mlxsw_driver* %3, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13113
  %4 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13116
  %sb_pool_get = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %4, i32 0, i32 11, !dbg !13118
  %5 = load i32 (%struct.mlxsw_core*, i32, i16, %struct.devlink_sb_pool_info*)*, i32 (%struct.mlxsw_core*, i32, i16, %struct.devlink_sb_pool_info*)** %sb_pool_get, align 8, !dbg !13118
  %tobool = icmp ne i32 (%struct.mlxsw_core*, i32, i16, %struct.devlink_sb_pool_info*)* %5, null, !dbg !13116
  br i1 %tobool, label %if.end, label %if.then, !dbg !13119

if.then:                                          ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !13120
  br label %return, !dbg !13120

if.end:                                           ; preds = %entry
  %6 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13121
  %sb_pool_get1 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %6, i32 0, i32 11, !dbg !13122
  %7 = load i32 (%struct.mlxsw_core*, i32, i16, %struct.devlink_sb_pool_info*)*, i32 (%struct.mlxsw_core*, i32, i16, %struct.devlink_sb_pool_info*)** %sb_pool_get1, align 8, !dbg !13122
  %8 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13123
  %9 = load i32, i32* %sb_index.addr, align 4, !dbg !13124
  %10 = load i16, i16* %pool_index.addr, align 2, !dbg !13125
  %11 = load %struct.devlink_sb_pool_info*, %struct.devlink_sb_pool_info** %pool_info.addr, align 8, !dbg !13126
  %call2 = call i32 %7(%struct.mlxsw_core* %8, i32 %9, i16 zeroext %10, %struct.devlink_sb_pool_info* %11) #11, !dbg !13121
  store i32 %call2, i32* %retval, align 4, !dbg !13127
  br label %return, !dbg !13127

return:                                           ; preds = %if.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !13128
  ret i32 %12, !dbg !13128
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_devlink_sb_pool_set(%struct.devlink* %devlink, i32 %sb_index, i16 zeroext %pool_index, i32 %size, i32 %threshold_type, %struct.netlink_ext_ack* %extack) #0 !dbg !13129 {
entry:
  %retval = alloca i32, align 4
  %devlink.addr = alloca %struct.devlink*, align 8
  %sb_index.addr = alloca i32, align 4
  %pool_index.addr = alloca i16, align 2
  %size.addr = alloca i32, align 4
  %threshold_type.addr = alloca i32, align 4
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mlxsw_driver = alloca %struct.mlxsw_driver*, align 8
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !13130, metadata !DIExpression()), !dbg !13131
  store i32 %sb_index, i32* %sb_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sb_index.addr, metadata !13132, metadata !DIExpression()), !dbg !13133
  store i16 %pool_index, i16* %pool_index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %pool_index.addr, metadata !13134, metadata !DIExpression()), !dbg !13135
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !13136, metadata !DIExpression()), !dbg !13137
  store i32 %threshold_type, i32* %threshold_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %threshold_type.addr, metadata !13138, metadata !DIExpression()), !dbg !13139
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !13140, metadata !DIExpression()), !dbg !13141
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !13142, metadata !DIExpression()), !dbg !13143
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !13144
  %call = call i8* @devlink_priv(%struct.devlink* %0) #11, !dbg !13145
  %1 = bitcast i8* %call to %struct.mlxsw_core*, !dbg !13145
  store %struct.mlxsw_core* %1, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13143
  call void @llvm.dbg.declare(metadata %struct.mlxsw_driver** %mlxsw_driver, metadata !13146, metadata !DIExpression()), !dbg !13147
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13148
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %2, i32 0, i32 0, !dbg !13149
  %3 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !13149
  store %struct.mlxsw_driver* %3, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13147
  %4 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13150
  %sb_pool_set = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %4, i32 0, i32 12, !dbg !13152
  %5 = load i32 (%struct.mlxsw_core*, i32, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core*, i32, i16, i32, i32, %struct.netlink_ext_ack*)** %sb_pool_set, align 8, !dbg !13152
  %tobool = icmp ne i32 (%struct.mlxsw_core*, i32, i16, i32, i32, %struct.netlink_ext_ack*)* %5, null, !dbg !13150
  br i1 %tobool, label %if.end, label %if.then, !dbg !13153

if.then:                                          ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !13154
  br label %return, !dbg !13154

if.end:                                           ; preds = %entry
  %6 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13155
  %sb_pool_set1 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %6, i32 0, i32 12, !dbg !13156
  %7 = load i32 (%struct.mlxsw_core*, i32, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core*, i32, i16, i32, i32, %struct.netlink_ext_ack*)** %sb_pool_set1, align 8, !dbg !13156
  %8 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13157
  %9 = load i32, i32* %sb_index.addr, align 4, !dbg !13158
  %10 = load i16, i16* %pool_index.addr, align 2, !dbg !13159
  %11 = load i32, i32* %size.addr, align 4, !dbg !13160
  %12 = load i32, i32* %threshold_type.addr, align 4, !dbg !13161
  %13 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !13162
  %call2 = call i32 %7(%struct.mlxsw_core* %8, i32 %9, i16 zeroext %10, i32 %11, i32 %12, %struct.netlink_ext_ack* %13) #11, !dbg !13155
  store i32 %call2, i32* %retval, align 4, !dbg !13163
  br label %return, !dbg !13163

return:                                           ; preds = %if.end, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !13164
  ret i32 %14, !dbg !13164
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_devlink_sb_port_pool_get(%struct.devlink_port* %devlink_port, i32 %sb_index, i16 zeroext %pool_index, i32* %p_threshold) #0 !dbg !13165 {
entry:
  %retval = alloca i32, align 4
  %devlink_port.addr = alloca %struct.devlink_port*, align 8
  %sb_index.addr = alloca i32, align 4
  %pool_index.addr = alloca i16, align 2
  %p_threshold.addr = alloca i32*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mlxsw_driver = alloca %struct.mlxsw_driver*, align 8
  %mlxsw_core_port = alloca %struct.mlxsw_core_port*, align 8
  store %struct.devlink_port* %devlink_port, %struct.devlink_port** %devlink_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_port** %devlink_port.addr, metadata !13166, metadata !DIExpression()), !dbg !13167
  store i32 %sb_index, i32* %sb_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sb_index.addr, metadata !13168, metadata !DIExpression()), !dbg !13169
  store i16 %pool_index, i16* %pool_index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %pool_index.addr, metadata !13170, metadata !DIExpression()), !dbg !13171
  store i32* %p_threshold, i32** %p_threshold.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p_threshold.addr, metadata !13172, metadata !DIExpression()), !dbg !13173
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !13174, metadata !DIExpression()), !dbg !13175
  %0 = load %struct.devlink_port*, %struct.devlink_port** %devlink_port.addr, align 8, !dbg !13176
  %devlink = getelementptr inbounds %struct.devlink_port, %struct.devlink_port* %0, i32 0, i32 3, !dbg !13177
  %1 = load %struct.devlink*, %struct.devlink** %devlink, align 8, !dbg !13177
  %call = call i8* @devlink_priv(%struct.devlink* %1) #11, !dbg !13178
  %2 = bitcast i8* %call to %struct.mlxsw_core*, !dbg !13178
  store %struct.mlxsw_core* %2, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13175
  call void @llvm.dbg.declare(metadata %struct.mlxsw_driver** %mlxsw_driver, metadata !13179, metadata !DIExpression()), !dbg !13180
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13181
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %3, i32 0, i32 0, !dbg !13182
  %4 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !13182
  store %struct.mlxsw_driver* %4, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13180
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core_port** %mlxsw_core_port, metadata !13183, metadata !DIExpression()), !dbg !13184
  %5 = load %struct.devlink_port*, %struct.devlink_port** %devlink_port.addr, align 8, !dbg !13185
  %call1 = call i8* @__dl_port(%struct.devlink_port* %5) #11, !dbg !13186
  %6 = bitcast i8* %call1 to %struct.mlxsw_core_port*, !dbg !13186
  store %struct.mlxsw_core_port* %6, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !13184
  %7 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13187
  %sb_port_pool_get = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %7, i32 0, i32 13, !dbg !13189
  %8 = load i32 (%struct.mlxsw_core_port*, i32, i16, i32*)*, i32 (%struct.mlxsw_core_port*, i32, i16, i32*)** %sb_port_pool_get, align 8, !dbg !13189
  %tobool = icmp ne i32 (%struct.mlxsw_core_port*, i32, i16, i32*)* %8, null, !dbg !13187
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !13190

lor.lhs.false:                                    ; preds = %entry
  %9 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !13191
  %call2 = call zeroext i1 @mlxsw_core_port_check(%struct.mlxsw_core_port* %9) #11, !dbg !13192
  br i1 %call2, label %if.end, label %if.then, !dbg !13193

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -95, i32* %retval, align 4, !dbg !13194
  br label %return, !dbg !13194

if.end:                                           ; preds = %lor.lhs.false
  %10 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13195
  %sb_port_pool_get3 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %10, i32 0, i32 13, !dbg !13196
  %11 = load i32 (%struct.mlxsw_core_port*, i32, i16, i32*)*, i32 (%struct.mlxsw_core_port*, i32, i16, i32*)** %sb_port_pool_get3, align 8, !dbg !13196
  %12 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !13197
  %13 = load i32, i32* %sb_index.addr, align 4, !dbg !13198
  %14 = load i16, i16* %pool_index.addr, align 2, !dbg !13199
  %15 = load i32*, i32** %p_threshold.addr, align 8, !dbg !13200
  %call4 = call i32 %11(%struct.mlxsw_core_port* %12, i32 %13, i16 zeroext %14, i32* %15) #11, !dbg !13195
  store i32 %call4, i32* %retval, align 4, !dbg !13201
  br label %return, !dbg !13201

return:                                           ; preds = %if.end, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !13202
  ret i32 %16, !dbg !13202
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_devlink_sb_port_pool_set(%struct.devlink_port* %devlink_port, i32 %sb_index, i16 zeroext %pool_index, i32 %threshold, %struct.netlink_ext_ack* %extack) #0 !dbg !13203 {
entry:
  %retval = alloca i32, align 4
  %devlink_port.addr = alloca %struct.devlink_port*, align 8
  %sb_index.addr = alloca i32, align 4
  %pool_index.addr = alloca i16, align 2
  %threshold.addr = alloca i32, align 4
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mlxsw_driver = alloca %struct.mlxsw_driver*, align 8
  %mlxsw_core_port = alloca %struct.mlxsw_core_port*, align 8
  store %struct.devlink_port* %devlink_port, %struct.devlink_port** %devlink_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_port** %devlink_port.addr, metadata !13204, metadata !DIExpression()), !dbg !13205
  store i32 %sb_index, i32* %sb_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sb_index.addr, metadata !13206, metadata !DIExpression()), !dbg !13207
  store i16 %pool_index, i16* %pool_index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %pool_index.addr, metadata !13208, metadata !DIExpression()), !dbg !13209
  store i32 %threshold, i32* %threshold.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %threshold.addr, metadata !13210, metadata !DIExpression()), !dbg !13211
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !13212, metadata !DIExpression()), !dbg !13213
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !13214, metadata !DIExpression()), !dbg !13215
  %0 = load %struct.devlink_port*, %struct.devlink_port** %devlink_port.addr, align 8, !dbg !13216
  %devlink = getelementptr inbounds %struct.devlink_port, %struct.devlink_port* %0, i32 0, i32 3, !dbg !13217
  %1 = load %struct.devlink*, %struct.devlink** %devlink, align 8, !dbg !13217
  %call = call i8* @devlink_priv(%struct.devlink* %1) #11, !dbg !13218
  %2 = bitcast i8* %call to %struct.mlxsw_core*, !dbg !13218
  store %struct.mlxsw_core* %2, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13215
  call void @llvm.dbg.declare(metadata %struct.mlxsw_driver** %mlxsw_driver, metadata !13219, metadata !DIExpression()), !dbg !13220
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13221
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %3, i32 0, i32 0, !dbg !13222
  %4 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !13222
  store %struct.mlxsw_driver* %4, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13220
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core_port** %mlxsw_core_port, metadata !13223, metadata !DIExpression()), !dbg !13224
  %5 = load %struct.devlink_port*, %struct.devlink_port** %devlink_port.addr, align 8, !dbg !13225
  %call1 = call i8* @__dl_port(%struct.devlink_port* %5) #11, !dbg !13226
  %6 = bitcast i8* %call1 to %struct.mlxsw_core_port*, !dbg !13226
  store %struct.mlxsw_core_port* %6, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !13224
  %7 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13227
  %sb_port_pool_set = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %7, i32 0, i32 14, !dbg !13229
  %8 = load i32 (%struct.mlxsw_core_port*, i32, i16, i32, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core_port*, i32, i16, i32, %struct.netlink_ext_ack*)** %sb_port_pool_set, align 8, !dbg !13229
  %tobool = icmp ne i32 (%struct.mlxsw_core_port*, i32, i16, i32, %struct.netlink_ext_ack*)* %8, null, !dbg !13227
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !13230

lor.lhs.false:                                    ; preds = %entry
  %9 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !13231
  %call2 = call zeroext i1 @mlxsw_core_port_check(%struct.mlxsw_core_port* %9) #11, !dbg !13232
  br i1 %call2, label %if.end, label %if.then, !dbg !13233

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -95, i32* %retval, align 4, !dbg !13234
  br label %return, !dbg !13234

if.end:                                           ; preds = %lor.lhs.false
  %10 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13235
  %sb_port_pool_set3 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %10, i32 0, i32 14, !dbg !13236
  %11 = load i32 (%struct.mlxsw_core_port*, i32, i16, i32, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core_port*, i32, i16, i32, %struct.netlink_ext_ack*)** %sb_port_pool_set3, align 8, !dbg !13236
  %12 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !13237
  %13 = load i32, i32* %sb_index.addr, align 4, !dbg !13238
  %14 = load i16, i16* %pool_index.addr, align 2, !dbg !13239
  %15 = load i32, i32* %threshold.addr, align 4, !dbg !13240
  %16 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !13241
  %call4 = call i32 %11(%struct.mlxsw_core_port* %12, i32 %13, i16 zeroext %14, i32 %15, %struct.netlink_ext_ack* %16) #11, !dbg !13235
  store i32 %call4, i32* %retval, align 4, !dbg !13242
  br label %return, !dbg !13242

return:                                           ; preds = %if.end, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !13243
  ret i32 %17, !dbg !13243
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_devlink_sb_tc_pool_bind_get(%struct.devlink_port* %devlink_port, i32 %sb_index, i16 zeroext %tc_index, i32 %pool_type, i16* %p_pool_index, i32* %p_threshold) #0 !dbg !13244 {
entry:
  %retval = alloca i32, align 4
  %devlink_port.addr = alloca %struct.devlink_port*, align 8
  %sb_index.addr = alloca i32, align 4
  %tc_index.addr = alloca i16, align 2
  %pool_type.addr = alloca i32, align 4
  %p_pool_index.addr = alloca i16*, align 8
  %p_threshold.addr = alloca i32*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mlxsw_driver = alloca %struct.mlxsw_driver*, align 8
  %mlxsw_core_port = alloca %struct.mlxsw_core_port*, align 8
  store %struct.devlink_port* %devlink_port, %struct.devlink_port** %devlink_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_port** %devlink_port.addr, metadata !13245, metadata !DIExpression()), !dbg !13246
  store i32 %sb_index, i32* %sb_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sb_index.addr, metadata !13247, metadata !DIExpression()), !dbg !13248
  store i16 %tc_index, i16* %tc_index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %tc_index.addr, metadata !13249, metadata !DIExpression()), !dbg !13250
  store i32 %pool_type, i32* %pool_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pool_type.addr, metadata !13251, metadata !DIExpression()), !dbg !13252
  store i16* %p_pool_index, i16** %p_pool_index.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %p_pool_index.addr, metadata !13253, metadata !DIExpression()), !dbg !13254
  store i32* %p_threshold, i32** %p_threshold.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p_threshold.addr, metadata !13255, metadata !DIExpression()), !dbg !13256
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !13257, metadata !DIExpression()), !dbg !13258
  %0 = load %struct.devlink_port*, %struct.devlink_port** %devlink_port.addr, align 8, !dbg !13259
  %devlink = getelementptr inbounds %struct.devlink_port, %struct.devlink_port* %0, i32 0, i32 3, !dbg !13260
  %1 = load %struct.devlink*, %struct.devlink** %devlink, align 8, !dbg !13260
  %call = call i8* @devlink_priv(%struct.devlink* %1) #11, !dbg !13261
  %2 = bitcast i8* %call to %struct.mlxsw_core*, !dbg !13261
  store %struct.mlxsw_core* %2, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13258
  call void @llvm.dbg.declare(metadata %struct.mlxsw_driver** %mlxsw_driver, metadata !13262, metadata !DIExpression()), !dbg !13263
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13264
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %3, i32 0, i32 0, !dbg !13265
  %4 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !13265
  store %struct.mlxsw_driver* %4, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13263
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core_port** %mlxsw_core_port, metadata !13266, metadata !DIExpression()), !dbg !13267
  %5 = load %struct.devlink_port*, %struct.devlink_port** %devlink_port.addr, align 8, !dbg !13268
  %call1 = call i8* @__dl_port(%struct.devlink_port* %5) #11, !dbg !13269
  %6 = bitcast i8* %call1 to %struct.mlxsw_core_port*, !dbg !13269
  store %struct.mlxsw_core_port* %6, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !13267
  %7 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13270
  %sb_tc_pool_bind_get = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %7, i32 0, i32 15, !dbg !13272
  %8 = load i32 (%struct.mlxsw_core_port*, i32, i16, i32, i16*, i32*)*, i32 (%struct.mlxsw_core_port*, i32, i16, i32, i16*, i32*)** %sb_tc_pool_bind_get, align 8, !dbg !13272
  %tobool = icmp ne i32 (%struct.mlxsw_core_port*, i32, i16, i32, i16*, i32*)* %8, null, !dbg !13270
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !13273

lor.lhs.false:                                    ; preds = %entry
  %9 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !13274
  %call2 = call zeroext i1 @mlxsw_core_port_check(%struct.mlxsw_core_port* %9) #11, !dbg !13275
  br i1 %call2, label %if.end, label %if.then, !dbg !13276

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -95, i32* %retval, align 4, !dbg !13277
  br label %return, !dbg !13277

if.end:                                           ; preds = %lor.lhs.false
  %10 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13278
  %sb_tc_pool_bind_get3 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %10, i32 0, i32 15, !dbg !13279
  %11 = load i32 (%struct.mlxsw_core_port*, i32, i16, i32, i16*, i32*)*, i32 (%struct.mlxsw_core_port*, i32, i16, i32, i16*, i32*)** %sb_tc_pool_bind_get3, align 8, !dbg !13279
  %12 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !13280
  %13 = load i32, i32* %sb_index.addr, align 4, !dbg !13281
  %14 = load i16, i16* %tc_index.addr, align 2, !dbg !13282
  %15 = load i32, i32* %pool_type.addr, align 4, !dbg !13283
  %16 = load i16*, i16** %p_pool_index.addr, align 8, !dbg !13284
  %17 = load i32*, i32** %p_threshold.addr, align 8, !dbg !13285
  %call4 = call i32 %11(%struct.mlxsw_core_port* %12, i32 %13, i16 zeroext %14, i32 %15, i16* %16, i32* %17) #11, !dbg !13278
  store i32 %call4, i32* %retval, align 4, !dbg !13286
  br label %return, !dbg !13286

return:                                           ; preds = %if.end, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !13287
  ret i32 %18, !dbg !13287
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_devlink_sb_tc_pool_bind_set(%struct.devlink_port* %devlink_port, i32 %sb_index, i16 zeroext %tc_index, i32 %pool_type, i16 zeroext %pool_index, i32 %threshold, %struct.netlink_ext_ack* %extack) #0 !dbg !13288 {
entry:
  %retval = alloca i32, align 4
  %devlink_port.addr = alloca %struct.devlink_port*, align 8
  %sb_index.addr = alloca i32, align 4
  %tc_index.addr = alloca i16, align 2
  %pool_type.addr = alloca i32, align 4
  %pool_index.addr = alloca i16, align 2
  %threshold.addr = alloca i32, align 4
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mlxsw_driver = alloca %struct.mlxsw_driver*, align 8
  %mlxsw_core_port = alloca %struct.mlxsw_core_port*, align 8
  store %struct.devlink_port* %devlink_port, %struct.devlink_port** %devlink_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_port** %devlink_port.addr, metadata !13289, metadata !DIExpression()), !dbg !13290
  store i32 %sb_index, i32* %sb_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sb_index.addr, metadata !13291, metadata !DIExpression()), !dbg !13292
  store i16 %tc_index, i16* %tc_index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %tc_index.addr, metadata !13293, metadata !DIExpression()), !dbg !13294
  store i32 %pool_type, i32* %pool_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pool_type.addr, metadata !13295, metadata !DIExpression()), !dbg !13296
  store i16 %pool_index, i16* %pool_index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %pool_index.addr, metadata !13297, metadata !DIExpression()), !dbg !13298
  store i32 %threshold, i32* %threshold.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %threshold.addr, metadata !13299, metadata !DIExpression()), !dbg !13300
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !13301, metadata !DIExpression()), !dbg !13302
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !13303, metadata !DIExpression()), !dbg !13304
  %0 = load %struct.devlink_port*, %struct.devlink_port** %devlink_port.addr, align 8, !dbg !13305
  %devlink = getelementptr inbounds %struct.devlink_port, %struct.devlink_port* %0, i32 0, i32 3, !dbg !13306
  %1 = load %struct.devlink*, %struct.devlink** %devlink, align 8, !dbg !13306
  %call = call i8* @devlink_priv(%struct.devlink* %1) #11, !dbg !13307
  %2 = bitcast i8* %call to %struct.mlxsw_core*, !dbg !13307
  store %struct.mlxsw_core* %2, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13304
  call void @llvm.dbg.declare(metadata %struct.mlxsw_driver** %mlxsw_driver, metadata !13308, metadata !DIExpression()), !dbg !13309
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13310
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %3, i32 0, i32 0, !dbg !13311
  %4 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !13311
  store %struct.mlxsw_driver* %4, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13309
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core_port** %mlxsw_core_port, metadata !13312, metadata !DIExpression()), !dbg !13313
  %5 = load %struct.devlink_port*, %struct.devlink_port** %devlink_port.addr, align 8, !dbg !13314
  %call1 = call i8* @__dl_port(%struct.devlink_port* %5) #11, !dbg !13315
  %6 = bitcast i8* %call1 to %struct.mlxsw_core_port*, !dbg !13315
  store %struct.mlxsw_core_port* %6, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !13313
  %7 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13316
  %sb_tc_pool_bind_set = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %7, i32 0, i32 16, !dbg !13318
  %8 = load i32 (%struct.mlxsw_core_port*, i32, i16, i32, i16, i32, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core_port*, i32, i16, i32, i16, i32, %struct.netlink_ext_ack*)** %sb_tc_pool_bind_set, align 8, !dbg !13318
  %tobool = icmp ne i32 (%struct.mlxsw_core_port*, i32, i16, i32, i16, i32, %struct.netlink_ext_ack*)* %8, null, !dbg !13316
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !13319

lor.lhs.false:                                    ; preds = %entry
  %9 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !13320
  %call2 = call zeroext i1 @mlxsw_core_port_check(%struct.mlxsw_core_port* %9) #11, !dbg !13321
  br i1 %call2, label %if.end, label %if.then, !dbg !13322

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -95, i32* %retval, align 4, !dbg !13323
  br label %return, !dbg !13323

if.end:                                           ; preds = %lor.lhs.false
  %10 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13324
  %sb_tc_pool_bind_set3 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %10, i32 0, i32 16, !dbg !13325
  %11 = load i32 (%struct.mlxsw_core_port*, i32, i16, i32, i16, i32, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core_port*, i32, i16, i32, i16, i32, %struct.netlink_ext_ack*)** %sb_tc_pool_bind_set3, align 8, !dbg !13325
  %12 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !13326
  %13 = load i32, i32* %sb_index.addr, align 4, !dbg !13327
  %14 = load i16, i16* %tc_index.addr, align 2, !dbg !13328
  %15 = load i32, i32* %pool_type.addr, align 4, !dbg !13329
  %16 = load i16, i16* %pool_index.addr, align 2, !dbg !13330
  %17 = load i32, i32* %threshold.addr, align 4, !dbg !13331
  %18 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !13332
  %call4 = call i32 %11(%struct.mlxsw_core_port* %12, i32 %13, i16 zeroext %14, i32 %15, i16 zeroext %16, i32 %17, %struct.netlink_ext_ack* %18) #11, !dbg !13324
  store i32 %call4, i32* %retval, align 4, !dbg !13333
  br label %return, !dbg !13333

return:                                           ; preds = %if.end, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !13334
  ret i32 %19, !dbg !13334
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_devlink_sb_occ_snapshot(%struct.devlink* %devlink, i32 %sb_index) #0 !dbg !13335 {
entry:
  %retval = alloca i32, align 4
  %devlink.addr = alloca %struct.devlink*, align 8
  %sb_index.addr = alloca i32, align 4
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mlxsw_driver = alloca %struct.mlxsw_driver*, align 8
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !13336, metadata !DIExpression()), !dbg !13337
  store i32 %sb_index, i32* %sb_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sb_index.addr, metadata !13338, metadata !DIExpression()), !dbg !13339
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !13340, metadata !DIExpression()), !dbg !13341
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !13342
  %call = call i8* @devlink_priv(%struct.devlink* %0) #11, !dbg !13343
  %1 = bitcast i8* %call to %struct.mlxsw_core*, !dbg !13343
  store %struct.mlxsw_core* %1, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13341
  call void @llvm.dbg.declare(metadata %struct.mlxsw_driver** %mlxsw_driver, metadata !13344, metadata !DIExpression()), !dbg !13345
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13346
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %2, i32 0, i32 0, !dbg !13347
  %3 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !13347
  store %struct.mlxsw_driver* %3, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13345
  %4 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13348
  %sb_occ_snapshot = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %4, i32 0, i32 17, !dbg !13350
  %5 = load i32 (%struct.mlxsw_core*, i32)*, i32 (%struct.mlxsw_core*, i32)** %sb_occ_snapshot, align 8, !dbg !13350
  %tobool = icmp ne i32 (%struct.mlxsw_core*, i32)* %5, null, !dbg !13348
  br i1 %tobool, label %if.end, label %if.then, !dbg !13351

if.then:                                          ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !13352
  br label %return, !dbg !13352

if.end:                                           ; preds = %entry
  %6 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13353
  %sb_occ_snapshot1 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %6, i32 0, i32 17, !dbg !13354
  %7 = load i32 (%struct.mlxsw_core*, i32)*, i32 (%struct.mlxsw_core*, i32)** %sb_occ_snapshot1, align 8, !dbg !13354
  %8 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13355
  %9 = load i32, i32* %sb_index.addr, align 4, !dbg !13356
  %call2 = call i32 %7(%struct.mlxsw_core* %8, i32 %9) #11, !dbg !13353
  store i32 %call2, i32* %retval, align 4, !dbg !13357
  br label %return, !dbg !13357

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !13358
  ret i32 %10, !dbg !13358
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_devlink_sb_occ_max_clear(%struct.devlink* %devlink, i32 %sb_index) #0 !dbg !13359 {
entry:
  %retval = alloca i32, align 4
  %devlink.addr = alloca %struct.devlink*, align 8
  %sb_index.addr = alloca i32, align 4
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mlxsw_driver = alloca %struct.mlxsw_driver*, align 8
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !13360, metadata !DIExpression()), !dbg !13361
  store i32 %sb_index, i32* %sb_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sb_index.addr, metadata !13362, metadata !DIExpression()), !dbg !13363
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !13364, metadata !DIExpression()), !dbg !13365
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !13366
  %call = call i8* @devlink_priv(%struct.devlink* %0) #11, !dbg !13367
  %1 = bitcast i8* %call to %struct.mlxsw_core*, !dbg !13367
  store %struct.mlxsw_core* %1, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13365
  call void @llvm.dbg.declare(metadata %struct.mlxsw_driver** %mlxsw_driver, metadata !13368, metadata !DIExpression()), !dbg !13369
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13370
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %2, i32 0, i32 0, !dbg !13371
  %3 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !13371
  store %struct.mlxsw_driver* %3, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13369
  %4 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13372
  %sb_occ_max_clear = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %4, i32 0, i32 18, !dbg !13374
  %5 = load i32 (%struct.mlxsw_core*, i32)*, i32 (%struct.mlxsw_core*, i32)** %sb_occ_max_clear, align 8, !dbg !13374
  %tobool = icmp ne i32 (%struct.mlxsw_core*, i32)* %5, null, !dbg !13372
  br i1 %tobool, label %if.end, label %if.then, !dbg !13375

if.then:                                          ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !13376
  br label %return, !dbg !13376

if.end:                                           ; preds = %entry
  %6 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13377
  %sb_occ_max_clear1 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %6, i32 0, i32 18, !dbg !13378
  %7 = load i32 (%struct.mlxsw_core*, i32)*, i32 (%struct.mlxsw_core*, i32)** %sb_occ_max_clear1, align 8, !dbg !13378
  %8 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13379
  %9 = load i32, i32* %sb_index.addr, align 4, !dbg !13380
  %call2 = call i32 %7(%struct.mlxsw_core* %8, i32 %9) #11, !dbg !13377
  store i32 %call2, i32* %retval, align 4, !dbg !13381
  br label %return, !dbg !13381

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !13382
  ret i32 %10, !dbg !13382
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_devlink_sb_occ_port_pool_get(%struct.devlink_port* %devlink_port, i32 %sb_index, i16 zeroext %pool_index, i32* %p_cur, i32* %p_max) #0 !dbg !13383 {
entry:
  %retval = alloca i32, align 4
  %devlink_port.addr = alloca %struct.devlink_port*, align 8
  %sb_index.addr = alloca i32, align 4
  %pool_index.addr = alloca i16, align 2
  %p_cur.addr = alloca i32*, align 8
  %p_max.addr = alloca i32*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mlxsw_driver = alloca %struct.mlxsw_driver*, align 8
  %mlxsw_core_port = alloca %struct.mlxsw_core_port*, align 8
  store %struct.devlink_port* %devlink_port, %struct.devlink_port** %devlink_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_port** %devlink_port.addr, metadata !13384, metadata !DIExpression()), !dbg !13385
  store i32 %sb_index, i32* %sb_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sb_index.addr, metadata !13386, metadata !DIExpression()), !dbg !13387
  store i16 %pool_index, i16* %pool_index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %pool_index.addr, metadata !13388, metadata !DIExpression()), !dbg !13389
  store i32* %p_cur, i32** %p_cur.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p_cur.addr, metadata !13390, metadata !DIExpression()), !dbg !13391
  store i32* %p_max, i32** %p_max.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p_max.addr, metadata !13392, metadata !DIExpression()), !dbg !13393
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !13394, metadata !DIExpression()), !dbg !13395
  %0 = load %struct.devlink_port*, %struct.devlink_port** %devlink_port.addr, align 8, !dbg !13396
  %devlink = getelementptr inbounds %struct.devlink_port, %struct.devlink_port* %0, i32 0, i32 3, !dbg !13397
  %1 = load %struct.devlink*, %struct.devlink** %devlink, align 8, !dbg !13397
  %call = call i8* @devlink_priv(%struct.devlink* %1) #11, !dbg !13398
  %2 = bitcast i8* %call to %struct.mlxsw_core*, !dbg !13398
  store %struct.mlxsw_core* %2, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13395
  call void @llvm.dbg.declare(metadata %struct.mlxsw_driver** %mlxsw_driver, metadata !13399, metadata !DIExpression()), !dbg !13400
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13401
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %3, i32 0, i32 0, !dbg !13402
  %4 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !13402
  store %struct.mlxsw_driver* %4, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13400
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core_port** %mlxsw_core_port, metadata !13403, metadata !DIExpression()), !dbg !13404
  %5 = load %struct.devlink_port*, %struct.devlink_port** %devlink_port.addr, align 8, !dbg !13405
  %call1 = call i8* @__dl_port(%struct.devlink_port* %5) #11, !dbg !13406
  %6 = bitcast i8* %call1 to %struct.mlxsw_core_port*, !dbg !13406
  store %struct.mlxsw_core_port* %6, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !13404
  %7 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13407
  %sb_occ_port_pool_get = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %7, i32 0, i32 19, !dbg !13409
  %8 = load i32 (%struct.mlxsw_core_port*, i32, i16, i32*, i32*)*, i32 (%struct.mlxsw_core_port*, i32, i16, i32*, i32*)** %sb_occ_port_pool_get, align 8, !dbg !13409
  %tobool = icmp ne i32 (%struct.mlxsw_core_port*, i32, i16, i32*, i32*)* %8, null, !dbg !13407
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !13410

lor.lhs.false:                                    ; preds = %entry
  %9 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !13411
  %call2 = call zeroext i1 @mlxsw_core_port_check(%struct.mlxsw_core_port* %9) #11, !dbg !13412
  br i1 %call2, label %if.end, label %if.then, !dbg !13413

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -95, i32* %retval, align 4, !dbg !13414
  br label %return, !dbg !13414

if.end:                                           ; preds = %lor.lhs.false
  %10 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13415
  %sb_occ_port_pool_get3 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %10, i32 0, i32 19, !dbg !13416
  %11 = load i32 (%struct.mlxsw_core_port*, i32, i16, i32*, i32*)*, i32 (%struct.mlxsw_core_port*, i32, i16, i32*, i32*)** %sb_occ_port_pool_get3, align 8, !dbg !13416
  %12 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !13417
  %13 = load i32, i32* %sb_index.addr, align 4, !dbg !13418
  %14 = load i16, i16* %pool_index.addr, align 2, !dbg !13419
  %15 = load i32*, i32** %p_cur.addr, align 8, !dbg !13420
  %16 = load i32*, i32** %p_max.addr, align 8, !dbg !13421
  %call4 = call i32 %11(%struct.mlxsw_core_port* %12, i32 %13, i16 zeroext %14, i32* %15, i32* %16) #11, !dbg !13415
  store i32 %call4, i32* %retval, align 4, !dbg !13422
  br label %return, !dbg !13422

return:                                           ; preds = %if.end, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !13423
  ret i32 %17, !dbg !13423
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_devlink_sb_occ_tc_port_bind_get(%struct.devlink_port* %devlink_port, i32 %sb_index, i16 zeroext %tc_index, i32 %pool_type, i32* %p_cur, i32* %p_max) #0 !dbg !13424 {
entry:
  %retval = alloca i32, align 4
  %devlink_port.addr = alloca %struct.devlink_port*, align 8
  %sb_index.addr = alloca i32, align 4
  %tc_index.addr = alloca i16, align 2
  %pool_type.addr = alloca i32, align 4
  %p_cur.addr = alloca i32*, align 8
  %p_max.addr = alloca i32*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mlxsw_driver = alloca %struct.mlxsw_driver*, align 8
  %mlxsw_core_port = alloca %struct.mlxsw_core_port*, align 8
  store %struct.devlink_port* %devlink_port, %struct.devlink_port** %devlink_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_port** %devlink_port.addr, metadata !13425, metadata !DIExpression()), !dbg !13426
  store i32 %sb_index, i32* %sb_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sb_index.addr, metadata !13427, metadata !DIExpression()), !dbg !13428
  store i16 %tc_index, i16* %tc_index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %tc_index.addr, metadata !13429, metadata !DIExpression()), !dbg !13430
  store i32 %pool_type, i32* %pool_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pool_type.addr, metadata !13431, metadata !DIExpression()), !dbg !13432
  store i32* %p_cur, i32** %p_cur.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p_cur.addr, metadata !13433, metadata !DIExpression()), !dbg !13434
  store i32* %p_max, i32** %p_max.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p_max.addr, metadata !13435, metadata !DIExpression()), !dbg !13436
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !13437, metadata !DIExpression()), !dbg !13438
  %0 = load %struct.devlink_port*, %struct.devlink_port** %devlink_port.addr, align 8, !dbg !13439
  %devlink = getelementptr inbounds %struct.devlink_port, %struct.devlink_port* %0, i32 0, i32 3, !dbg !13440
  %1 = load %struct.devlink*, %struct.devlink** %devlink, align 8, !dbg !13440
  %call = call i8* @devlink_priv(%struct.devlink* %1) #11, !dbg !13441
  %2 = bitcast i8* %call to %struct.mlxsw_core*, !dbg !13441
  store %struct.mlxsw_core* %2, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13438
  call void @llvm.dbg.declare(metadata %struct.mlxsw_driver** %mlxsw_driver, metadata !13442, metadata !DIExpression()), !dbg !13443
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13444
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %3, i32 0, i32 0, !dbg !13445
  %4 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !13445
  store %struct.mlxsw_driver* %4, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13443
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core_port** %mlxsw_core_port, metadata !13446, metadata !DIExpression()), !dbg !13447
  %5 = load %struct.devlink_port*, %struct.devlink_port** %devlink_port.addr, align 8, !dbg !13448
  %call1 = call i8* @__dl_port(%struct.devlink_port* %5) #11, !dbg !13449
  %6 = bitcast i8* %call1 to %struct.mlxsw_core_port*, !dbg !13449
  store %struct.mlxsw_core_port* %6, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !13447
  %7 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13450
  %sb_occ_tc_port_bind_get = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %7, i32 0, i32 20, !dbg !13452
  %8 = load i32 (%struct.mlxsw_core_port*, i32, i16, i32, i32*, i32*)*, i32 (%struct.mlxsw_core_port*, i32, i16, i32, i32*, i32*)** %sb_occ_tc_port_bind_get, align 8, !dbg !13452
  %tobool = icmp ne i32 (%struct.mlxsw_core_port*, i32, i16, i32, i32*, i32*)* %8, null, !dbg !13450
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !13453

lor.lhs.false:                                    ; preds = %entry
  %9 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !13454
  %call2 = call zeroext i1 @mlxsw_core_port_check(%struct.mlxsw_core_port* %9) #11, !dbg !13455
  br i1 %call2, label %if.end, label %if.then, !dbg !13456

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -95, i32* %retval, align 4, !dbg !13457
  br label %return, !dbg !13457

if.end:                                           ; preds = %lor.lhs.false
  %10 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13458
  %sb_occ_tc_port_bind_get3 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %10, i32 0, i32 20, !dbg !13459
  %11 = load i32 (%struct.mlxsw_core_port*, i32, i16, i32, i32*, i32*)*, i32 (%struct.mlxsw_core_port*, i32, i16, i32, i32*, i32*)** %sb_occ_tc_port_bind_get3, align 8, !dbg !13459
  %12 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %mlxsw_core_port, align 8, !dbg !13460
  %13 = load i32, i32* %sb_index.addr, align 4, !dbg !13461
  %14 = load i16, i16* %tc_index.addr, align 2, !dbg !13462
  %15 = load i32, i32* %pool_type.addr, align 4, !dbg !13463
  %16 = load i32*, i32** %p_cur.addr, align 8, !dbg !13464
  %17 = load i32*, i32** %p_max.addr, align 8, !dbg !13465
  %call4 = call i32 %11(%struct.mlxsw_core_port* %12, i32 %13, i16 zeroext %14, i32 %15, i32* %16, i32* %17) #11, !dbg !13458
  store i32 %call4, i32* %retval, align 4, !dbg !13466
  br label %return, !dbg !13466

return:                                           ; preds = %if.end, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !13467
  ret i32 %18, !dbg !13467
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_devlink_info_get(%struct.devlink* %devlink, %struct.devlink_info_req* %req, %struct.netlink_ext_ack* %extack) #0 !dbg !13468 {
entry:
  %retval = alloca i32, align 4
  %devlink.addr = alloca %struct.devlink*, align 8
  %req.addr = alloca %struct.devlink_info_req*, align 8
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %fw_info_psid = alloca [16 x i8], align 16
  %hw_rev = alloca i32, align 4
  %fw_major = alloca i32, align 4
  %fw_minor = alloca i32, align 4
  %fw_sub_minor = alloca i32, align 4
  %mgir_pl = alloca [156 x i8], align 16
  %buf = alloca [32 x i8], align 16
  %err = alloca i32, align 4
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !13469, metadata !DIExpression()), !dbg !13470
  store %struct.devlink_info_req* %req, %struct.devlink_info_req** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_info_req** %req.addr, metadata !13471, metadata !DIExpression()), !dbg !13472
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !13473, metadata !DIExpression()), !dbg !13474
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !13475, metadata !DIExpression()), !dbg !13476
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !13477
  %call = call i8* @devlink_priv(%struct.devlink* %0) #11, !dbg !13478
  %1 = bitcast i8* %call to %struct.mlxsw_core*, !dbg !13478
  store %struct.mlxsw_core* %1, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13476
  call void @llvm.dbg.declare(metadata [16 x i8]* %fw_info_psid, metadata !13479, metadata !DIExpression()), !dbg !13480
  call void @llvm.dbg.declare(metadata i32* %hw_rev, metadata !13481, metadata !DIExpression()), !dbg !13482
  call void @llvm.dbg.declare(metadata i32* %fw_major, metadata !13483, metadata !DIExpression()), !dbg !13484
  call void @llvm.dbg.declare(metadata i32* %fw_minor, metadata !13485, metadata !DIExpression()), !dbg !13486
  call void @llvm.dbg.declare(metadata i32* %fw_sub_minor, metadata !13487, metadata !DIExpression()), !dbg !13488
  call void @llvm.dbg.declare(metadata [156 x i8]* %mgir_pl, metadata !13489, metadata !DIExpression()), !dbg !13493
  call void @llvm.dbg.declare(metadata [32 x i8]* %buf, metadata !13494, metadata !DIExpression()), !dbg !13495
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13496, metadata !DIExpression()), !dbg !13497
  %2 = load %struct.devlink_info_req*, %struct.devlink_info_req** %req.addr, align 8, !dbg !13498
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13499
  %bus_info = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %3, i32 0, i32 3, !dbg !13500
  %4 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info, align 8, !dbg !13500
  %device_kind = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %4, i32 0, i32 0, !dbg !13501
  %5 = load i8*, i8** %device_kind, align 8, !dbg !13501
  %call1 = call i32 @devlink_info_driver_name_put(%struct.devlink_info_req* %2, i8* %5) #11, !dbg !13502
  store i32 %call1, i32* %err, align 4, !dbg !13503
  %6 = load i32, i32* %err, align 4, !dbg !13504
  %tobool = icmp ne i32 %6, 0, !dbg !13504
  br i1 %tobool, label %if.then, label %if.end, !dbg !13506

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %err, align 4, !dbg !13507
  store i32 %7, i32* %retval, align 4, !dbg !13508
  br label %return, !dbg !13508

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [156 x i8], [156 x i8]* %mgir_pl, i64 0, i64 0, !dbg !13509
  call void @mlxsw_reg_mgir_pack(i8* %arraydecay) #11, !dbg !13510
  %8 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13511
  %arraydecay2 = getelementptr inbounds [156 x i8], [156 x i8]* %mgir_pl, i64 0, i64 0, !dbg !13512
  %call3 = call i32 @mlxsw_reg_query(%struct.mlxsw_core* %8, %struct.mlxsw_reg_info* @mlxsw_reg_mgir, i8* %arraydecay2) #11, !dbg !13513
  store i32 %call3, i32* %err, align 4, !dbg !13514
  %9 = load i32, i32* %err, align 4, !dbg !13515
  %tobool4 = icmp ne i32 %9, 0, !dbg !13515
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !13517

if.then5:                                         ; preds = %if.end
  %10 = load i32, i32* %err, align 4, !dbg !13518
  store i32 %10, i32* %retval, align 4, !dbg !13519
  br label %return, !dbg !13519

if.end6:                                          ; preds = %if.end
  %arraydecay7 = getelementptr inbounds [156 x i8], [156 x i8]* %mgir_pl, i64 0, i64 0, !dbg !13520
  %arraydecay8 = getelementptr inbounds [16 x i8], [16 x i8]* %fw_info_psid, i64 0, i64 0, !dbg !13521
  call void @mlxsw_reg_mgir_unpack(i8* %arraydecay7, i32* %hw_rev, i8* %arraydecay8, i32* %fw_major, i32* %fw_minor, i32* %fw_sub_minor) #11, !dbg !13522
  %arraydecay9 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 0, !dbg !13523
  %11 = load i32, i32* %hw_rev, align 4, !dbg !13524
  %call10 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32 %11) #11, !dbg !13525
  %12 = load %struct.devlink_info_req*, %struct.devlink_info_req** %req.addr, align 8, !dbg !13526
  %arraydecay11 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 0, !dbg !13527
  %call12 = call i32 @devlink_info_version_fixed_put(%struct.devlink_info_req* %12, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay11) #11, !dbg !13528
  store i32 %call12, i32* %err, align 4, !dbg !13529
  %13 = load i32, i32* %err, align 4, !dbg !13530
  %tobool13 = icmp ne i32 %13, 0, !dbg !13530
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !13532

if.then14:                                        ; preds = %if.end6
  %14 = load i32, i32* %err, align 4, !dbg !13533
  store i32 %14, i32* %retval, align 4, !dbg !13534
  br label %return, !dbg !13534

if.end15:                                         ; preds = %if.end6
  %15 = load %struct.devlink_info_req*, %struct.devlink_info_req** %req.addr, align 8, !dbg !13535
  %arraydecay16 = getelementptr inbounds [16 x i8], [16 x i8]* %fw_info_psid, i64 0, i64 0, !dbg !13536
  %call17 = call i32 @devlink_info_version_fixed_put(%struct.devlink_info_req* %15, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i8* %arraydecay16) #11, !dbg !13537
  store i32 %call17, i32* %err, align 4, !dbg !13538
  %16 = load i32, i32* %err, align 4, !dbg !13539
  %tobool18 = icmp ne i32 %16, 0, !dbg !13539
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !13541

if.then19:                                        ; preds = %if.end15
  %17 = load i32, i32* %err, align 4, !dbg !13542
  store i32 %17, i32* %retval, align 4, !dbg !13543
  br label %return, !dbg !13543

if.end20:                                         ; preds = %if.end15
  %arraydecay21 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 0, !dbg !13544
  %18 = load i32, i32* %fw_major, align 4, !dbg !13545
  %19 = load i32, i32* %fw_minor, align 4, !dbg !13546
  %20 = load i32, i32* %fw_sub_minor, align 4, !dbg !13547
  %call22 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay21, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i32 %18, i32 %19, i32 %20) #11, !dbg !13548
  %21 = load %struct.devlink_info_req*, %struct.devlink_info_req** %req.addr, align 8, !dbg !13549
  %arraydecay23 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 0, !dbg !13550
  %call24 = call i32 @devlink_info_version_running_put(%struct.devlink_info_req* %21, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %arraydecay23) #11, !dbg !13551
  store i32 %call24, i32* %err, align 4, !dbg !13552
  %22 = load i32, i32* %err, align 4, !dbg !13553
  %tobool25 = icmp ne i32 %22, 0, !dbg !13553
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !13555

if.then26:                                        ; preds = %if.end20
  %23 = load i32, i32* %err, align 4, !dbg !13556
  store i32 %23, i32* %retval, align 4, !dbg !13557
  br label %return, !dbg !13557

if.end27:                                         ; preds = %if.end20
  store i32 0, i32* %retval, align 4, !dbg !13558
  br label %return, !dbg !13558

return:                                           ; preds = %if.end27, %if.then26, %if.then19, %if.then14, %if.then5, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !13559
  ret i32 %24, !dbg !13559
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_devlink_flash_update(%struct.devlink* %devlink, %struct.devlink_flash_update_params* %params, %struct.netlink_ext_ack* %extack) #0 !dbg !13560 {
entry:
  %devlink.addr = alloca %struct.devlink*, align 8
  %params.addr = alloca %struct.devlink_flash_update_params*, align 8
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !13561, metadata !DIExpression()), !dbg !13562
  store %struct.devlink_flash_update_params* %params, %struct.devlink_flash_update_params** %params.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_flash_update_params** %params.addr, metadata !13563, metadata !DIExpression()), !dbg !13564
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !13565, metadata !DIExpression()), !dbg !13566
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !13567, metadata !DIExpression()), !dbg !13568
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !13569
  %call = call i8* @devlink_priv(%struct.devlink* %0) #11, !dbg !13570
  %1 = bitcast i8* %call to %struct.mlxsw_core*, !dbg !13570
  store %struct.mlxsw_core* %1, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13568
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13571
  %3 = load %struct.devlink_flash_update_params*, %struct.devlink_flash_update_params** %params.addr, align 8, !dbg !13572
  %4 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !13573
  %call1 = call i32 @mlxsw_core_fw_flash_update(%struct.mlxsw_core* %2, %struct.devlink_flash_update_params* %3, %struct.netlink_ext_ack* %4) #11, !dbg !13574
  ret i32 %call1, !dbg !13575
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_devlink_trap_init(%struct.devlink* %devlink, %struct.devlink_trap* %trap, i8* %trap_ctx) #0 !dbg !13576 {
entry:
  %retval = alloca i32, align 4
  %devlink.addr = alloca %struct.devlink*, align 8
  %trap.addr = alloca %struct.devlink_trap*, align 8
  %trap_ctx.addr = alloca i8*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mlxsw_driver = alloca %struct.mlxsw_driver*, align 8
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !13577, metadata !DIExpression()), !dbg !13578
  store %struct.devlink_trap* %trap, %struct.devlink_trap** %trap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_trap** %trap.addr, metadata !13579, metadata !DIExpression()), !dbg !13580
  store i8* %trap_ctx, i8** %trap_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %trap_ctx.addr, metadata !13581, metadata !DIExpression()), !dbg !13582
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !13583, metadata !DIExpression()), !dbg !13584
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !13585
  %call = call i8* @devlink_priv(%struct.devlink* %0) #11, !dbg !13586
  %1 = bitcast i8* %call to %struct.mlxsw_core*, !dbg !13586
  store %struct.mlxsw_core* %1, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13584
  call void @llvm.dbg.declare(metadata %struct.mlxsw_driver** %mlxsw_driver, metadata !13587, metadata !DIExpression()), !dbg !13588
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13589
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %2, i32 0, i32 0, !dbg !13590
  %3 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !13590
  store %struct.mlxsw_driver* %3, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13588
  %4 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13591
  %trap_init = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %4, i32 0, i32 21, !dbg !13593
  %5 = load i32 (%struct.mlxsw_core*, %struct.devlink_trap*, i8*)*, i32 (%struct.mlxsw_core*, %struct.devlink_trap*, i8*)** %trap_init, align 8, !dbg !13593
  %tobool = icmp ne i32 (%struct.mlxsw_core*, %struct.devlink_trap*, i8*)* %5, null, !dbg !13591
  br i1 %tobool, label %if.end, label %if.then, !dbg !13594

if.then:                                          ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !13595
  br label %return, !dbg !13595

if.end:                                           ; preds = %entry
  %6 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13596
  %trap_init1 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %6, i32 0, i32 21, !dbg !13597
  %7 = load i32 (%struct.mlxsw_core*, %struct.devlink_trap*, i8*)*, i32 (%struct.mlxsw_core*, %struct.devlink_trap*, i8*)** %trap_init1, align 8, !dbg !13597
  %8 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13598
  %9 = load %struct.devlink_trap*, %struct.devlink_trap** %trap.addr, align 8, !dbg !13599
  %10 = load i8*, i8** %trap_ctx.addr, align 8, !dbg !13600
  %call2 = call i32 %7(%struct.mlxsw_core* %8, %struct.devlink_trap* %9, i8* %10) #11, !dbg !13596
  store i32 %call2, i32* %retval, align 4, !dbg !13601
  br label %return, !dbg !13601

return:                                           ; preds = %if.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !13602
  ret i32 %11, !dbg !13602
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_devlink_trap_fini(%struct.devlink* %devlink, %struct.devlink_trap* %trap, i8* %trap_ctx) #0 !dbg !13603 {
entry:
  %devlink.addr = alloca %struct.devlink*, align 8
  %trap.addr = alloca %struct.devlink_trap*, align 8
  %trap_ctx.addr = alloca i8*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mlxsw_driver = alloca %struct.mlxsw_driver*, align 8
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !13604, metadata !DIExpression()), !dbg !13605
  store %struct.devlink_trap* %trap, %struct.devlink_trap** %trap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_trap** %trap.addr, metadata !13606, metadata !DIExpression()), !dbg !13607
  store i8* %trap_ctx, i8** %trap_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %trap_ctx.addr, metadata !13608, metadata !DIExpression()), !dbg !13609
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !13610, metadata !DIExpression()), !dbg !13611
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !13612
  %call = call i8* @devlink_priv(%struct.devlink* %0) #11, !dbg !13613
  %1 = bitcast i8* %call to %struct.mlxsw_core*, !dbg !13613
  store %struct.mlxsw_core* %1, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13611
  call void @llvm.dbg.declare(metadata %struct.mlxsw_driver** %mlxsw_driver, metadata !13614, metadata !DIExpression()), !dbg !13615
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13616
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %2, i32 0, i32 0, !dbg !13617
  %3 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !13617
  store %struct.mlxsw_driver* %3, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13615
  %4 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13618
  %trap_fini = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %4, i32 0, i32 22, !dbg !13620
  %5 = load void (%struct.mlxsw_core*, %struct.devlink_trap*, i8*)*, void (%struct.mlxsw_core*, %struct.devlink_trap*, i8*)** %trap_fini, align 8, !dbg !13620
  %tobool = icmp ne void (%struct.mlxsw_core*, %struct.devlink_trap*, i8*)* %5, null, !dbg !13618
  br i1 %tobool, label %if.end, label %if.then, !dbg !13621

if.then:                                          ; preds = %entry
  br label %return, !dbg !13622

if.end:                                           ; preds = %entry
  %6 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13623
  %trap_fini1 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %6, i32 0, i32 22, !dbg !13624
  %7 = load void (%struct.mlxsw_core*, %struct.devlink_trap*, i8*)*, void (%struct.mlxsw_core*, %struct.devlink_trap*, i8*)** %trap_fini1, align 8, !dbg !13624
  %8 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13625
  %9 = load %struct.devlink_trap*, %struct.devlink_trap** %trap.addr, align 8, !dbg !13626
  %10 = load i8*, i8** %trap_ctx.addr, align 8, !dbg !13627
  call void %7(%struct.mlxsw_core* %8, %struct.devlink_trap* %9, i8* %10) #11, !dbg !13623
  br label %return, !dbg !13628

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !13628
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_devlink_trap_action_set(%struct.devlink* %devlink, %struct.devlink_trap* %trap, i32 %action, %struct.netlink_ext_ack* %extack) #0 !dbg !13629 {
entry:
  %retval = alloca i32, align 4
  %devlink.addr = alloca %struct.devlink*, align 8
  %trap.addr = alloca %struct.devlink_trap*, align 8
  %action.addr = alloca i32, align 4
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mlxsw_driver = alloca %struct.mlxsw_driver*, align 8
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !13630, metadata !DIExpression()), !dbg !13631
  store %struct.devlink_trap* %trap, %struct.devlink_trap** %trap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_trap** %trap.addr, metadata !13632, metadata !DIExpression()), !dbg !13633
  store i32 %action, i32* %action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !13634, metadata !DIExpression()), !dbg !13635
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !13636, metadata !DIExpression()), !dbg !13637
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !13638, metadata !DIExpression()), !dbg !13639
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !13640
  %call = call i8* @devlink_priv(%struct.devlink* %0) #11, !dbg !13641
  %1 = bitcast i8* %call to %struct.mlxsw_core*, !dbg !13641
  store %struct.mlxsw_core* %1, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13639
  call void @llvm.dbg.declare(metadata %struct.mlxsw_driver** %mlxsw_driver, metadata !13642, metadata !DIExpression()), !dbg !13643
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13644
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %2, i32 0, i32 0, !dbg !13645
  %3 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !13645
  store %struct.mlxsw_driver* %3, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13643
  %4 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13646
  %trap_action_set = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %4, i32 0, i32 23, !dbg !13648
  %5 = load i32 (%struct.mlxsw_core*, %struct.devlink_trap*, i32, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core*, %struct.devlink_trap*, i32, %struct.netlink_ext_ack*)** %trap_action_set, align 8, !dbg !13648
  %tobool = icmp ne i32 (%struct.mlxsw_core*, %struct.devlink_trap*, i32, %struct.netlink_ext_ack*)* %5, null, !dbg !13646
  br i1 %tobool, label %if.end, label %if.then, !dbg !13649

if.then:                                          ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !13650
  br label %return, !dbg !13650

if.end:                                           ; preds = %entry
  %6 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13651
  %trap_action_set1 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %6, i32 0, i32 23, !dbg !13652
  %7 = load i32 (%struct.mlxsw_core*, %struct.devlink_trap*, i32, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core*, %struct.devlink_trap*, i32, %struct.netlink_ext_ack*)** %trap_action_set1, align 8, !dbg !13652
  %8 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13653
  %9 = load %struct.devlink_trap*, %struct.devlink_trap** %trap.addr, align 8, !dbg !13654
  %10 = load i32, i32* %action.addr, align 4, !dbg !13655
  %11 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !13656
  %call2 = call i32 %7(%struct.mlxsw_core* %8, %struct.devlink_trap* %9, i32 %10, %struct.netlink_ext_ack* %11) #11, !dbg !13651
  store i32 %call2, i32* %retval, align 4, !dbg !13657
  br label %return, !dbg !13657

return:                                           ; preds = %if.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !13658
  ret i32 %12, !dbg !13658
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_devlink_trap_group_init(%struct.devlink* %devlink, %struct.devlink_trap_group* %group) #0 !dbg !13659 {
entry:
  %retval = alloca i32, align 4
  %devlink.addr = alloca %struct.devlink*, align 8
  %group.addr = alloca %struct.devlink_trap_group*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mlxsw_driver = alloca %struct.mlxsw_driver*, align 8
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !13660, metadata !DIExpression()), !dbg !13661
  store %struct.devlink_trap_group* %group, %struct.devlink_trap_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_trap_group** %group.addr, metadata !13662, metadata !DIExpression()), !dbg !13663
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !13664, metadata !DIExpression()), !dbg !13665
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !13666
  %call = call i8* @devlink_priv(%struct.devlink* %0) #11, !dbg !13667
  %1 = bitcast i8* %call to %struct.mlxsw_core*, !dbg !13667
  store %struct.mlxsw_core* %1, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13665
  call void @llvm.dbg.declare(metadata %struct.mlxsw_driver** %mlxsw_driver, metadata !13668, metadata !DIExpression()), !dbg !13669
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13670
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %2, i32 0, i32 0, !dbg !13671
  %3 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !13671
  store %struct.mlxsw_driver* %3, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13669
  %4 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13672
  %trap_group_init = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %4, i32 0, i32 24, !dbg !13674
  %5 = load i32 (%struct.mlxsw_core*, %struct.devlink_trap_group*)*, i32 (%struct.mlxsw_core*, %struct.devlink_trap_group*)** %trap_group_init, align 8, !dbg !13674
  %tobool = icmp ne i32 (%struct.mlxsw_core*, %struct.devlink_trap_group*)* %5, null, !dbg !13672
  br i1 %tobool, label %if.end, label %if.then, !dbg !13675

if.then:                                          ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !13676
  br label %return, !dbg !13676

if.end:                                           ; preds = %entry
  %6 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13677
  %trap_group_init1 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %6, i32 0, i32 24, !dbg !13678
  %7 = load i32 (%struct.mlxsw_core*, %struct.devlink_trap_group*)*, i32 (%struct.mlxsw_core*, %struct.devlink_trap_group*)** %trap_group_init1, align 8, !dbg !13678
  %8 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13679
  %9 = load %struct.devlink_trap_group*, %struct.devlink_trap_group** %group.addr, align 8, !dbg !13680
  %call2 = call i32 %7(%struct.mlxsw_core* %8, %struct.devlink_trap_group* %9) #11, !dbg !13677
  store i32 %call2, i32* %retval, align 4, !dbg !13681
  br label %return, !dbg !13681

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !13682
  ret i32 %10, !dbg !13682
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_devlink_trap_group_set(%struct.devlink* %devlink, %struct.devlink_trap_group* %group, %struct.devlink_trap_policer* %policer, %struct.netlink_ext_ack* %extack) #0 !dbg !13683 {
entry:
  %retval = alloca i32, align 4
  %devlink.addr = alloca %struct.devlink*, align 8
  %group.addr = alloca %struct.devlink_trap_group*, align 8
  %policer.addr = alloca %struct.devlink_trap_policer*, align 8
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mlxsw_driver = alloca %struct.mlxsw_driver*, align 8
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !13684, metadata !DIExpression()), !dbg !13685
  store %struct.devlink_trap_group* %group, %struct.devlink_trap_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_trap_group** %group.addr, metadata !13686, metadata !DIExpression()), !dbg !13687
  store %struct.devlink_trap_policer* %policer, %struct.devlink_trap_policer** %policer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_trap_policer** %policer.addr, metadata !13688, metadata !DIExpression()), !dbg !13689
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !13690, metadata !DIExpression()), !dbg !13691
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !13692, metadata !DIExpression()), !dbg !13693
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !13694
  %call = call i8* @devlink_priv(%struct.devlink* %0) #11, !dbg !13695
  %1 = bitcast i8* %call to %struct.mlxsw_core*, !dbg !13695
  store %struct.mlxsw_core* %1, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13693
  call void @llvm.dbg.declare(metadata %struct.mlxsw_driver** %mlxsw_driver, metadata !13696, metadata !DIExpression()), !dbg !13697
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13698
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %2, i32 0, i32 0, !dbg !13699
  %3 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !13699
  store %struct.mlxsw_driver* %3, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13697
  %4 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13700
  %trap_group_set = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %4, i32 0, i32 25, !dbg !13702
  %5 = load i32 (%struct.mlxsw_core*, %struct.devlink_trap_group*, %struct.devlink_trap_policer*, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core*, %struct.devlink_trap_group*, %struct.devlink_trap_policer*, %struct.netlink_ext_ack*)** %trap_group_set, align 8, !dbg !13702
  %tobool = icmp ne i32 (%struct.mlxsw_core*, %struct.devlink_trap_group*, %struct.devlink_trap_policer*, %struct.netlink_ext_ack*)* %5, null, !dbg !13700
  br i1 %tobool, label %if.end, label %if.then, !dbg !13703

if.then:                                          ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !13704
  br label %return, !dbg !13704

if.end:                                           ; preds = %entry
  %6 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13705
  %trap_group_set1 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %6, i32 0, i32 25, !dbg !13706
  %7 = load i32 (%struct.mlxsw_core*, %struct.devlink_trap_group*, %struct.devlink_trap_policer*, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core*, %struct.devlink_trap_group*, %struct.devlink_trap_policer*, %struct.netlink_ext_ack*)** %trap_group_set1, align 8, !dbg !13706
  %8 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13707
  %9 = load %struct.devlink_trap_group*, %struct.devlink_trap_group** %group.addr, align 8, !dbg !13708
  %10 = load %struct.devlink_trap_policer*, %struct.devlink_trap_policer** %policer.addr, align 8, !dbg !13709
  %11 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !13710
  %call2 = call i32 %7(%struct.mlxsw_core* %8, %struct.devlink_trap_group* %9, %struct.devlink_trap_policer* %10, %struct.netlink_ext_ack* %11) #11, !dbg !13705
  store i32 %call2, i32* %retval, align 4, !dbg !13711
  br label %return, !dbg !13711

return:                                           ; preds = %if.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !13712
  ret i32 %12, !dbg !13712
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_devlink_trap_policer_init(%struct.devlink* %devlink, %struct.devlink_trap_policer* %policer) #0 !dbg !13713 {
entry:
  %retval = alloca i32, align 4
  %devlink.addr = alloca %struct.devlink*, align 8
  %policer.addr = alloca %struct.devlink_trap_policer*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mlxsw_driver = alloca %struct.mlxsw_driver*, align 8
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !13714, metadata !DIExpression()), !dbg !13715
  store %struct.devlink_trap_policer* %policer, %struct.devlink_trap_policer** %policer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_trap_policer** %policer.addr, metadata !13716, metadata !DIExpression()), !dbg !13717
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !13718, metadata !DIExpression()), !dbg !13719
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !13720
  %call = call i8* @devlink_priv(%struct.devlink* %0) #11, !dbg !13721
  %1 = bitcast i8* %call to %struct.mlxsw_core*, !dbg !13721
  store %struct.mlxsw_core* %1, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13719
  call void @llvm.dbg.declare(metadata %struct.mlxsw_driver** %mlxsw_driver, metadata !13722, metadata !DIExpression()), !dbg !13723
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13724
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %2, i32 0, i32 0, !dbg !13725
  %3 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !13725
  store %struct.mlxsw_driver* %3, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13723
  %4 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13726
  %trap_policer_init = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %4, i32 0, i32 26, !dbg !13728
  %5 = load i32 (%struct.mlxsw_core*, %struct.devlink_trap_policer*)*, i32 (%struct.mlxsw_core*, %struct.devlink_trap_policer*)** %trap_policer_init, align 8, !dbg !13728
  %tobool = icmp ne i32 (%struct.mlxsw_core*, %struct.devlink_trap_policer*)* %5, null, !dbg !13726
  br i1 %tobool, label %if.end, label %if.then, !dbg !13729

if.then:                                          ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !13730
  br label %return, !dbg !13730

if.end:                                           ; preds = %entry
  %6 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13731
  %trap_policer_init1 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %6, i32 0, i32 26, !dbg !13732
  %7 = load i32 (%struct.mlxsw_core*, %struct.devlink_trap_policer*)*, i32 (%struct.mlxsw_core*, %struct.devlink_trap_policer*)** %trap_policer_init1, align 8, !dbg !13732
  %8 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13733
  %9 = load %struct.devlink_trap_policer*, %struct.devlink_trap_policer** %policer.addr, align 8, !dbg !13734
  %call2 = call i32 %7(%struct.mlxsw_core* %8, %struct.devlink_trap_policer* %9) #11, !dbg !13731
  store i32 %call2, i32* %retval, align 4, !dbg !13735
  br label %return, !dbg !13735

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !13736
  ret i32 %10, !dbg !13736
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_devlink_trap_policer_fini(%struct.devlink* %devlink, %struct.devlink_trap_policer* %policer) #0 !dbg !13737 {
entry:
  %devlink.addr = alloca %struct.devlink*, align 8
  %policer.addr = alloca %struct.devlink_trap_policer*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mlxsw_driver = alloca %struct.mlxsw_driver*, align 8
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !13738, metadata !DIExpression()), !dbg !13739
  store %struct.devlink_trap_policer* %policer, %struct.devlink_trap_policer** %policer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_trap_policer** %policer.addr, metadata !13740, metadata !DIExpression()), !dbg !13741
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !13742, metadata !DIExpression()), !dbg !13743
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !13744
  %call = call i8* @devlink_priv(%struct.devlink* %0) #11, !dbg !13745
  %1 = bitcast i8* %call to %struct.mlxsw_core*, !dbg !13745
  store %struct.mlxsw_core* %1, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13743
  call void @llvm.dbg.declare(metadata %struct.mlxsw_driver** %mlxsw_driver, metadata !13746, metadata !DIExpression()), !dbg !13747
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13748
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %2, i32 0, i32 0, !dbg !13749
  %3 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !13749
  store %struct.mlxsw_driver* %3, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13747
  %4 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13750
  %trap_policer_fini = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %4, i32 0, i32 27, !dbg !13752
  %5 = load void (%struct.mlxsw_core*, %struct.devlink_trap_policer*)*, void (%struct.mlxsw_core*, %struct.devlink_trap_policer*)** %trap_policer_fini, align 8, !dbg !13752
  %tobool = icmp ne void (%struct.mlxsw_core*, %struct.devlink_trap_policer*)* %5, null, !dbg !13750
  br i1 %tobool, label %if.end, label %if.then, !dbg !13753

if.then:                                          ; preds = %entry
  br label %return, !dbg !13754

if.end:                                           ; preds = %entry
  %6 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13755
  %trap_policer_fini1 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %6, i32 0, i32 27, !dbg !13756
  %7 = load void (%struct.mlxsw_core*, %struct.devlink_trap_policer*)*, void (%struct.mlxsw_core*, %struct.devlink_trap_policer*)** %trap_policer_fini1, align 8, !dbg !13756
  %8 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13757
  %9 = load %struct.devlink_trap_policer*, %struct.devlink_trap_policer** %policer.addr, align 8, !dbg !13758
  call void %7(%struct.mlxsw_core* %8, %struct.devlink_trap_policer* %9) #11, !dbg !13755
  br label %return, !dbg !13759

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !13759
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_devlink_trap_policer_set(%struct.devlink* %devlink, %struct.devlink_trap_policer* %policer, i64 %rate, i64 %burst, %struct.netlink_ext_ack* %extack) #0 !dbg !13760 {
entry:
  %retval = alloca i32, align 4
  %devlink.addr = alloca %struct.devlink*, align 8
  %policer.addr = alloca %struct.devlink_trap_policer*, align 8
  %rate.addr = alloca i64, align 8
  %burst.addr = alloca i64, align 8
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mlxsw_driver = alloca %struct.mlxsw_driver*, align 8
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !13761, metadata !DIExpression()), !dbg !13762
  store %struct.devlink_trap_policer* %policer, %struct.devlink_trap_policer** %policer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_trap_policer** %policer.addr, metadata !13763, metadata !DIExpression()), !dbg !13764
  store i64 %rate, i64* %rate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rate.addr, metadata !13765, metadata !DIExpression()), !dbg !13766
  store i64 %burst, i64* %burst.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %burst.addr, metadata !13767, metadata !DIExpression()), !dbg !13768
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !13769, metadata !DIExpression()), !dbg !13770
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !13771, metadata !DIExpression()), !dbg !13772
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !13773
  %call = call i8* @devlink_priv(%struct.devlink* %0) #11, !dbg !13774
  %1 = bitcast i8* %call to %struct.mlxsw_core*, !dbg !13774
  store %struct.mlxsw_core* %1, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13772
  call void @llvm.dbg.declare(metadata %struct.mlxsw_driver** %mlxsw_driver, metadata !13775, metadata !DIExpression()), !dbg !13776
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13777
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %2, i32 0, i32 0, !dbg !13778
  %3 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !13778
  store %struct.mlxsw_driver* %3, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13776
  %4 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13779
  %trap_policer_set = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %4, i32 0, i32 28, !dbg !13781
  %5 = load i32 (%struct.mlxsw_core*, %struct.devlink_trap_policer*, i64, i64, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core*, %struct.devlink_trap_policer*, i64, i64, %struct.netlink_ext_ack*)** %trap_policer_set, align 8, !dbg !13781
  %tobool = icmp ne i32 (%struct.mlxsw_core*, %struct.devlink_trap_policer*, i64, i64, %struct.netlink_ext_ack*)* %5, null, !dbg !13779
  br i1 %tobool, label %if.end, label %if.then, !dbg !13782

if.then:                                          ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !13783
  br label %return, !dbg !13783

if.end:                                           ; preds = %entry
  %6 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13784
  %trap_policer_set1 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %6, i32 0, i32 28, !dbg !13785
  %7 = load i32 (%struct.mlxsw_core*, %struct.devlink_trap_policer*, i64, i64, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core*, %struct.devlink_trap_policer*, i64, i64, %struct.netlink_ext_ack*)** %trap_policer_set1, align 8, !dbg !13785
  %8 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13786
  %9 = load %struct.devlink_trap_policer*, %struct.devlink_trap_policer** %policer.addr, align 8, !dbg !13787
  %10 = load i64, i64* %rate.addr, align 8, !dbg !13788
  %11 = load i64, i64* %burst.addr, align 8, !dbg !13789
  %12 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !13790
  %call2 = call i32 %7(%struct.mlxsw_core* %8, %struct.devlink_trap_policer* %9, i64 %10, i64 %11, %struct.netlink_ext_ack* %12) #11, !dbg !13784
  store i32 %call2, i32* %retval, align 4, !dbg !13791
  br label %return, !dbg !13791

return:                                           ; preds = %if.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !13792
  ret i32 %13, !dbg !13792
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_devlink_trap_policer_counter_get(%struct.devlink* %devlink, %struct.devlink_trap_policer* %policer, i64* %p_drops) #0 !dbg !13793 {
entry:
  %retval = alloca i32, align 4
  %devlink.addr = alloca %struct.devlink*, align 8
  %policer.addr = alloca %struct.devlink_trap_policer*, align 8
  %p_drops.addr = alloca i64*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mlxsw_driver = alloca %struct.mlxsw_driver*, align 8
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !13794, metadata !DIExpression()), !dbg !13795
  store %struct.devlink_trap_policer* %policer, %struct.devlink_trap_policer** %policer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_trap_policer** %policer.addr, metadata !13796, metadata !DIExpression()), !dbg !13797
  store i64* %p_drops, i64** %p_drops.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %p_drops.addr, metadata !13798, metadata !DIExpression()), !dbg !13799
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !13800, metadata !DIExpression()), !dbg !13801
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !13802
  %call = call i8* @devlink_priv(%struct.devlink* %0) #11, !dbg !13803
  %1 = bitcast i8* %call to %struct.mlxsw_core*, !dbg !13803
  store %struct.mlxsw_core* %1, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13801
  call void @llvm.dbg.declare(metadata %struct.mlxsw_driver** %mlxsw_driver, metadata !13804, metadata !DIExpression()), !dbg !13805
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13806
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %2, i32 0, i32 0, !dbg !13807
  %3 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !13807
  store %struct.mlxsw_driver* %3, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13805
  %4 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13808
  %trap_policer_counter_get = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %4, i32 0, i32 29, !dbg !13810
  %5 = load i32 (%struct.mlxsw_core*, %struct.devlink_trap_policer*, i64*)*, i32 (%struct.mlxsw_core*, %struct.devlink_trap_policer*, i64*)** %trap_policer_counter_get, align 8, !dbg !13810
  %tobool = icmp ne i32 (%struct.mlxsw_core*, %struct.devlink_trap_policer*, i64*)* %5, null, !dbg !13808
  br i1 %tobool, label %if.end, label %if.then, !dbg !13811

if.then:                                          ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !13812
  br label %return, !dbg !13812

if.end:                                           ; preds = %entry
  %6 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %mlxsw_driver, align 8, !dbg !13813
  %trap_policer_counter_get1 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %6, i32 0, i32 29, !dbg !13814
  %7 = load i32 (%struct.mlxsw_core*, %struct.devlink_trap_policer*, i64*)*, i32 (%struct.mlxsw_core*, %struct.devlink_trap_policer*, i64*)** %trap_policer_counter_get1, align 8, !dbg !13814
  %8 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !13815
  %9 = load %struct.devlink_trap_policer*, %struct.devlink_trap_policer** %policer.addr, align 8, !dbg !13816
  %10 = load i64*, i64** %p_drops.addr, align 8, !dbg !13817
  %call2 = call i32 %7(%struct.mlxsw_core* %8, %struct.devlink_trap_policer* %9, i64* %10) #11, !dbg !13813
  store i32 %call2, i32* %retval, align 4, !dbg !13818
  br label %return, !dbg !13818

return:                                           ; preds = %if.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !13819
  ret i32 %11, !dbg !13819
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @__dl_port(%struct.devlink_port* %devlink_port) #0 !dbg !13820 {
entry:
  %devlink_port.addr = alloca %struct.devlink_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_core_port*, align 8
  store %struct.devlink_port* %devlink_port, %struct.devlink_port** %devlink_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_port** %devlink_port.addr, metadata !13823, metadata !DIExpression()), !dbg !13824
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13825, metadata !DIExpression()), !dbg !13827
  %0 = load %struct.devlink_port*, %struct.devlink_port** %devlink_port.addr, align 8, !dbg !13827
  %1 = bitcast %struct.devlink_port* %0 to i8*, !dbg !13827
  store i8* %1, i8** %__mptr, align 8, !dbg !13827
  br label %do.body, !dbg !13827

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13828

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !13827
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !13827
  %3 = bitcast i8* %add.ptr to %struct.mlxsw_core_port*, !dbg !13827
  store %struct.mlxsw_core_port* %3, %struct.mlxsw_core_port** %tmp, align 8, !dbg !13828
  %4 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %tmp, align 8, !dbg !13827
  %5 = bitcast %struct.mlxsw_core_port* %4 to i8*, !dbg !13830
  ret i8* %5, !dbg !13831
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mlxsw_core_port_check(%struct.mlxsw_core_port* %mlxsw_core_port) #0 !dbg !13832 {
entry:
  %mlxsw_core_port.addr = alloca %struct.mlxsw_core_port*, align 8
  store %struct.mlxsw_core_port* %mlxsw_core_port, %struct.mlxsw_core_port** %mlxsw_core_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core_port** %mlxsw_core_port.addr, metadata !13835, metadata !DIExpression()), !dbg !13836
  %0 = load %struct.mlxsw_core_port*, %struct.mlxsw_core_port** %mlxsw_core_port.addr, align 8, !dbg !13837
  %port_driver_priv = getelementptr inbounds %struct.mlxsw_core_port, %struct.mlxsw_core_port* %0, i32 0, i32 1, !dbg !13838
  %1 = load i8*, i8** %port_driver_priv, align 8, !dbg !13838
  %cmp = icmp ne i8* %1, null, !dbg !13839
  ret i1 %cmp, !dbg !13840
}

; Function Attrs: noredzone
declare dso_local i32 @devlink_info_driver_name_put(%struct.devlink_info_req*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_mgir_pack(i8* %payload) #0 !dbg !13841 {
entry:
  %payload.addr = alloca i8*, align 8
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !13842, metadata !DIExpression()), !dbg !13843
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !13844
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_mgir, i32 0, i32 1), align 2, !dbg !13844
  %conv = zext i16 %1 to i64, !dbg !13844
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !13844
  ret void, !dbg !13845
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_mgir_unpack(i8* %payload, i32* %hw_rev, i8* %fw_info_psid, i32* %fw_major, i32* %fw_minor, i32* %fw_sub_minor) #0 !dbg !13846 {
entry:
  %payload.addr = alloca i8*, align 8
  %hw_rev.addr = alloca i32*, align 8
  %fw_info_psid.addr = alloca i8*, align 8
  %fw_major.addr = alloca i32*, align 8
  %fw_minor.addr = alloca i32*, align 8
  %fw_sub_minor.addr = alloca i32*, align 8
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !13849, metadata !DIExpression()), !dbg !13850
  store i32* %hw_rev, i32** %hw_rev.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %hw_rev.addr, metadata !13851, metadata !DIExpression()), !dbg !13852
  store i8* %fw_info_psid, i8** %fw_info_psid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fw_info_psid.addr, metadata !13853, metadata !DIExpression()), !dbg !13854
  store i32* %fw_major, i32** %fw_major.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %fw_major.addr, metadata !13855, metadata !DIExpression()), !dbg !13856
  store i32* %fw_minor, i32** %fw_minor.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %fw_minor.addr, metadata !13857, metadata !DIExpression()), !dbg !13858
  store i32* %fw_sub_minor, i32** %fw_sub_minor.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %fw_sub_minor.addr, metadata !13859, metadata !DIExpression()), !dbg !13860
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !13861
  %call = call i32 @mlxsw_reg_mgir_hw_info_device_hw_revision_get(i8* %0) #11, !dbg !13862
  %1 = load i32*, i32** %hw_rev.addr, align 8, !dbg !13863
  store i32 %call, i32* %1, align 4, !dbg !13864
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !13865
  %3 = load i8*, i8** %fw_info_psid.addr, align 8, !dbg !13866
  call void @mlxsw_reg_mgir_fw_info_psid_memcpy_from(i8* %2, i8* %3) #11, !dbg !13867
  %4 = load i8*, i8** %payload.addr, align 8, !dbg !13868
  %call1 = call i32 @mlxsw_reg_mgir_fw_info_extended_major_get(i8* %4) #11, !dbg !13869
  %5 = load i32*, i32** %fw_major.addr, align 8, !dbg !13870
  store i32 %call1, i32* %5, align 4, !dbg !13871
  %6 = load i8*, i8** %payload.addr, align 8, !dbg !13872
  %call2 = call i32 @mlxsw_reg_mgir_fw_info_extended_minor_get(i8* %6) #11, !dbg !13873
  %7 = load i32*, i32** %fw_minor.addr, align 8, !dbg !13874
  store i32 %call2, i32* %7, align 4, !dbg !13875
  %8 = load i8*, i8** %payload.addr, align 8, !dbg !13876
  %call3 = call i32 @mlxsw_reg_mgir_fw_info_extended_sub_minor_get(i8* %8) #11, !dbg !13877
  %9 = load i32*, i32** %fw_sub_minor.addr, align 8, !dbg !13878
  store i32 %call3, i32* %9, align 4, !dbg !13879
  ret void, !dbg !13880
}

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i32 @devlink_info_version_fixed_put(%struct.devlink_info_req*, i8*, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @devlink_info_version_running_put(%struct.devlink_info_req*, i8*, i8*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_mgir_hw_info_device_hw_revision_get(i8* %buf) #0 !dbg !13881 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13884, metadata !DIExpression()), !dbg !13885
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13885
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mgir_hw_info_device_hw_revision_item to %struct.mlxsw_item*), i16 zeroext 0) #11, !dbg !13885
  ret i32 %call, !dbg !13885
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_mgir_fw_info_psid_memcpy_from(i8* %buf, i8* %dst) #0 !dbg !13886 {
entry:
  %buf.addr = alloca i8*, align 8
  %dst.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13889, metadata !DIExpression()), !dbg !13890
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !13891, metadata !DIExpression()), !dbg !13890
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13890
  %1 = load i8*, i8** %dst.addr, align 8, !dbg !13890
  call void @__mlxsw_item_memcpy_from(i8* %0, i8* %1, %struct.mlxsw_item* @mlxsw_reg_mgir_fw_info_psid_item, i16 zeroext 0) #11, !dbg !13890
  ret void, !dbg !13890
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_mgir_fw_info_extended_major_get(i8* %buf) #0 !dbg !13892 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13893, metadata !DIExpression()), !dbg !13894
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13894
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mgir_fw_info_extended_major_item to %struct.mlxsw_item*), i16 zeroext 0) #11, !dbg !13894
  ret i32 %call, !dbg !13894
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_mgir_fw_info_extended_minor_get(i8* %buf) #0 !dbg !13895 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13896, metadata !DIExpression()), !dbg !13897
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13897
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mgir_fw_info_extended_minor_item to %struct.mlxsw_item*), i16 zeroext 0) #11, !dbg !13897
  ret i32 %call, !dbg !13897
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_mgir_fw_info_extended_sub_minor_get(i8* %buf) #0 !dbg !13898 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13899, metadata !DIExpression()), !dbg !13900
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13900
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mgir_fw_info_extended_sub_minor_item to %struct.mlxsw_item*), i16 zeroext 0) #11, !dbg !13900
  ret i32 %call, !dbg !13900
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__mlxsw_item_get32(i8* %buf, %struct.mlxsw_item* %item, i16 zeroext %index) #0 !dbg !13901 {
entry:
  %buf.addr = alloca i8*, align 8
  %item.addr = alloca %struct.mlxsw_item*, align 8
  %index.addr = alloca i16, align 2
  %offset = alloca i32, align 4
  %b = alloca i32*, align 8
  %tmp = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13906, metadata !DIExpression()), !dbg !13907
  store %struct.mlxsw_item* %item, %struct.mlxsw_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_item** %item.addr, metadata !13908, metadata !DIExpression()), !dbg !13909
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !13910, metadata !DIExpression()), !dbg !13911
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !13912, metadata !DIExpression()), !dbg !13913
  %0 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13914
  %1 = load i16, i16* %index.addr, align 2, !dbg !13915
  %call = call i32 @__mlxsw_item_offset(%struct.mlxsw_item* %0, i16 zeroext %1, i64 4) #11, !dbg !13916
  store i32 %call, i32* %offset, align 4, !dbg !13913
  call void @llvm.dbg.declare(metadata i32** %b, metadata !13917, metadata !DIExpression()), !dbg !13918
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !13919
  %3 = bitcast i8* %2 to i32*, !dbg !13920
  store i32* %3, i32** %b, align 8, !dbg !13918
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !13921, metadata !DIExpression()), !dbg !13922
  %4 = load i32*, i32** %b, align 8, !dbg !13923
  %5 = load i32, i32* %offset, align 4, !dbg !13923
  %idxprom = zext i32 %5 to i64, !dbg !13923
  %arrayidx = getelementptr i32, i32* %4, i64 %idxprom, !dbg !13923
  %6 = load i32, i32* %arrayidx, align 4, !dbg !13923
  %7 = call i1 @llvm.is.constant.i32(i32 %6), !dbg !13923
  br i1 %7, label %cond.true, label %cond.false, !dbg !13923

cond.true:                                        ; preds = %entry
  %8 = load i32*, i32** %b, align 8, !dbg !13923
  %9 = load i32, i32* %offset, align 4, !dbg !13923
  %idxprom1 = zext i32 %9 to i64, !dbg !13923
  %arrayidx2 = getelementptr i32, i32* %8, i64 %idxprom1, !dbg !13923
  %10 = load i32, i32* %arrayidx2, align 4, !dbg !13923
  %and = and i32 %10, 255, !dbg !13923
  %shl = shl i32 %and, 24, !dbg !13923
  %11 = load i32*, i32** %b, align 8, !dbg !13923
  %12 = load i32, i32* %offset, align 4, !dbg !13923
  %idxprom3 = zext i32 %12 to i64, !dbg !13923
  %arrayidx4 = getelementptr i32, i32* %11, i64 %idxprom3, !dbg !13923
  %13 = load i32, i32* %arrayidx4, align 4, !dbg !13923
  %and5 = and i32 %13, 65280, !dbg !13923
  %shl6 = shl i32 %and5, 8, !dbg !13923
  %or = or i32 %shl, %shl6, !dbg !13923
  %14 = load i32*, i32** %b, align 8, !dbg !13923
  %15 = load i32, i32* %offset, align 4, !dbg !13923
  %idxprom7 = zext i32 %15 to i64, !dbg !13923
  %arrayidx8 = getelementptr i32, i32* %14, i64 %idxprom7, !dbg !13923
  %16 = load i32, i32* %arrayidx8, align 4, !dbg !13923
  %and9 = and i32 %16, 16711680, !dbg !13923
  %shr = lshr i32 %and9, 8, !dbg !13923
  %or10 = or i32 %or, %shr, !dbg !13923
  %17 = load i32*, i32** %b, align 8, !dbg !13923
  %18 = load i32, i32* %offset, align 4, !dbg !13923
  %idxprom11 = zext i32 %18 to i64, !dbg !13923
  %arrayidx12 = getelementptr i32, i32* %17, i64 %idxprom11, !dbg !13923
  %19 = load i32, i32* %arrayidx12, align 4, !dbg !13923
  %and13 = and i32 %19, -16777216, !dbg !13923
  %shr14 = lshr i32 %and13, 24, !dbg !13923
  %or15 = or i32 %or10, %shr14, !dbg !13923
  br label %cond.end, !dbg !13923

cond.false:                                       ; preds = %entry
  %20 = load i32*, i32** %b, align 8, !dbg !13923
  %21 = load i32, i32* %offset, align 4, !dbg !13923
  %idxprom16 = zext i32 %21 to i64, !dbg !13923
  %arrayidx17 = getelementptr i32, i32* %20, i64 %idxprom16, !dbg !13923
  %22 = load i32, i32* %arrayidx17, align 4, !dbg !13923
  %call18 = call i32 @__fswab32(i32 %22) #12, !dbg !13923
  br label %cond.end, !dbg !13923

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or15, %cond.true ], [ %call18, %cond.false ], !dbg !13923
  store i32 %cond, i32* %tmp, align 4, !dbg !13924
  %23 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13925
  %shift = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %23, i32 0, i32 3, !dbg !13926
  %24 = load i8, i8* %shift, align 2, !dbg !13926
  %conv = zext i8 %24 to i32, !dbg !13925
  %25 = load i32, i32* %tmp, align 4, !dbg !13927
  %shr19 = lshr i32 %25, %conv, !dbg !13927
  store i32 %shr19, i32* %tmp, align 4, !dbg !13927
  %26 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13928
  %size = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %26, i32 0, i32 6, !dbg !13928
  %bits = bitcast %union.anon.134* %size to i8*, !dbg !13928
  %27 = load i8, i8* %bits, align 2, !dbg !13928
  %conv20 = zext i8 %27 to i32, !dbg !13928
  %sub = sub i32 %conv20, 1, !dbg !13928
  %sub21 = sub i32 63, %sub, !dbg !13928
  %sh_prom = zext i32 %sub21 to i64, !dbg !13928
  %shr22 = lshr i64 -1, %sh_prom, !dbg !13928
  %and23 = and i64 -1, %shr22, !dbg !13928
  %add = add i64 0, %and23, !dbg !13928
  %28 = load i32, i32* %tmp, align 4, !dbg !13929
  %conv24 = zext i32 %28 to i64, !dbg !13929
  %and25 = and i64 %conv24, %add, !dbg !13929
  %conv26 = trunc i64 %and25 to i32, !dbg !13929
  store i32 %conv26, i32* %tmp, align 4, !dbg !13929
  %29 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13930
  %no_real_shift = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %29, i32 0, i32 5, !dbg !13932
  %30 = load i8, i8* %no_real_shift, align 8, !dbg !13932
  %tobool = trunc i8 %30 to i1, !dbg !13932
  br i1 %tobool, label %if.then, label %if.end, !dbg !13933

if.then:                                          ; preds = %cond.end
  %31 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13934
  %shift27 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %31, i32 0, i32 3, !dbg !13935
  %32 = load i8, i8* %shift27, align 2, !dbg !13935
  %conv28 = zext i8 %32 to i32, !dbg !13934
  %33 = load i32, i32* %tmp, align 4, !dbg !13936
  %shl29 = shl i32 %33, %conv28, !dbg !13936
  store i32 %shl29, i32* %tmp, align 4, !dbg !13936
  br label %if.end, !dbg !13937

if.end:                                           ; preds = %if.then, %cond.end
  %34 = load i32, i32* %tmp, align 4, !dbg !13938
  ret i32 %34, !dbg !13939
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__mlxsw_item_offset(%struct.mlxsw_item* %item, i16 zeroext %index, i64 %typesize) #0 !dbg !13940 {
entry:
  %item.addr = alloca %struct.mlxsw_item*, align 8
  %index.addr = alloca i16, align 2
  %typesize.addr = alloca i64, align 8
  store %struct.mlxsw_item* %item, %struct.mlxsw_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_item** %item.addr, metadata !13943, metadata !DIExpression()), !dbg !13944
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !13945, metadata !DIExpression()), !dbg !13946
  store i64 %typesize, i64* %typesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %typesize.addr, metadata !13947, metadata !DIExpression()), !dbg !13948
  br label %do.body, !dbg !13949

do.body:                                          ; preds = %entry
  %0 = load i16, i16* %index.addr, align 2, !dbg !13950
  %conv = zext i16 %0 to i32, !dbg !13950
  %tobool = icmp ne i32 %conv, 0, !dbg !13950
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !13950

land.rhs:                                         ; preds = %do.body
  %1 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13950
  %step = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %1, i32 0, i32 1, !dbg !13950
  %2 = load i16, i16* %step, align 2, !dbg !13950
  %tobool1 = icmp ne i16 %2, 0, !dbg !13950
  %lnot = xor i1 %tobool1, true, !dbg !13950
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.body
  %3 = phi i1 [ false, %do.body ], [ %lnot, %land.rhs ], !dbg !13953
  %lnot2 = xor i1 %3, true, !dbg !13950
  %lnot3 = xor i1 %lnot2, true, !dbg !13950
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !13950
  %conv4 = sext i32 %lnot.ext to i64, !dbg !13950
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !13950
  br i1 %tobool5, label %if.then, label %if.end, !dbg !13954

if.then:                                          ; preds = %land.end
  br label %do.body6, !dbg !13950

do.body6:                                         ; preds = %if.then
  br label %do.body7, !dbg !13955

do.body7:                                         ; preds = %do.body6
  br label %do.end, !dbg !13957

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !13955

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9, i64 0, i64 0), i32 29, i32 0, i64 12) #10, !dbg !13959, !srcloc !13961
  br label %do.end9, !dbg !13959

do.end9:                                          ; preds = %do.body8
  br label %do.body10, !dbg !13955

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 331) #10, !dbg !13962, !srcloc !13965
  unreachable, !dbg !13966

do.end11:                                         ; No predecessors!
  br label %do.end12, !dbg !13955

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !13955

if.end:                                           ; preds = %do.end12, %land.end
  br label %do.end13, !dbg !13954

do.end13:                                         ; preds = %if.end
  %4 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13967
  %offset = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %4, i32 0, i32 0, !dbg !13969
  %5 = load i16, i16* %offset, align 8, !dbg !13969
  %conv14 = zext i16 %5 to i64, !dbg !13967
  %6 = load i64, i64* %typesize.addr, align 8, !dbg !13970
  %rem = urem i64 %conv14, %6, !dbg !13971
  %cmp = icmp ne i64 %rem, 0, !dbg !13972
  br i1 %cmp, label %if.then26, label %lor.lhs.false, !dbg !13973

lor.lhs.false:                                    ; preds = %do.end13
  %7 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13974
  %step16 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %7, i32 0, i32 1, !dbg !13975
  %8 = load i16, i16* %step16, align 2, !dbg !13975
  %conv17 = sext i16 %8 to i64, !dbg !13974
  %9 = load i64, i64* %typesize.addr, align 8, !dbg !13976
  %rem18 = urem i64 %conv17, %9, !dbg !13977
  %cmp19 = icmp ne i64 %rem18, 0, !dbg !13978
  br i1 %cmp19, label %if.then26, label %lor.lhs.false21, !dbg !13979

lor.lhs.false21:                                  ; preds = %lor.lhs.false
  %10 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13980
  %in_step_offset = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %10, i32 0, i32 2, !dbg !13981
  %11 = load i16, i16* %in_step_offset, align 4, !dbg !13981
  %conv22 = zext i16 %11 to i64, !dbg !13980
  %12 = load i64, i64* %typesize.addr, align 8, !dbg !13982
  %rem23 = urem i64 %conv22, %12, !dbg !13983
  %cmp24 = icmp ne i64 %rem23, 0, !dbg !13984
  br i1 %cmp24, label %if.then26, label %if.end41, !dbg !13985

if.then26:                                        ; preds = %lor.lhs.false21, %lor.lhs.false, %do.end13
  %13 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13986
  %name = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %13, i32 0, i32 7, !dbg !13986
  %14 = load i8*, i8** %name, align 8, !dbg !13986
  %15 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13986
  %offset27 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %15, i32 0, i32 0, !dbg !13986
  %16 = load i16, i16* %offset27, align 8, !dbg !13986
  %conv28 = zext i16 %16 to i32, !dbg !13986
  %17 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13986
  %step29 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %17, i32 0, i32 1, !dbg !13986
  %18 = load i16, i16* %step29, align 2, !dbg !13986
  %conv30 = sext i16 %18 to i32, !dbg !13986
  %19 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13986
  %in_step_offset31 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %19, i32 0, i32 2, !dbg !13986
  %20 = load i16, i16* %in_step_offset31, align 4, !dbg !13986
  %conv32 = zext i16 %20 to i32, !dbg !13986
  %21 = load i64, i64* %typesize.addr, align 8, !dbg !13986
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.10, i64 0, i64 0), i8* %14, i32 %conv28, i32 %conv30, i32 %conv32, i64 %21) #14, !dbg !13986
  br label %do.body33, !dbg !13988

do.body33:                                        ; preds = %if.then26
  br label %do.body34, !dbg !13989

do.body34:                                        ; preds = %do.body33
  br label %do.end35, !dbg !13991

do.end35:                                         ; preds = %do.body34
  br label %do.body36, !dbg !13989

do.body36:                                        ; preds = %do.end35
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9, i64 0, i64 0), i32 36, i32 0, i64 12) #10, !dbg !13993, !srcloc !13995
  br label %do.end37, !dbg !13993

do.end37:                                         ; preds = %do.body36
  br label %do.body38, !dbg !13989

do.body38:                                        ; preds = %do.end37
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 332) #10, !dbg !13996, !srcloc !13999
  unreachable, !dbg !14000

do.end39:                                         ; No predecessors!
  br label %do.end40, !dbg !13989

do.end40:                                         ; preds = %do.end39
  br label %if.end41, !dbg !14001

if.end41:                                         ; preds = %do.end40, %lor.lhs.false21
  %22 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14002
  %offset42 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %22, i32 0, i32 0, !dbg !14003
  %23 = load i16, i16* %offset42, align 8, !dbg !14003
  %conv43 = zext i16 %23 to i32, !dbg !14002
  %24 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14004
  %step44 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %24, i32 0, i32 1, !dbg !14005
  %25 = load i16, i16* %step44, align 2, !dbg !14005
  %conv45 = sext i16 %25 to i32, !dbg !14004
  %26 = load i16, i16* %index.addr, align 2, !dbg !14006
  %conv46 = zext i16 %26 to i32, !dbg !14006
  %mul = mul i32 %conv45, %conv46, !dbg !14007
  %add = add i32 %conv43, %mul, !dbg !14008
  %27 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14009
  %in_step_offset47 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %27, i32 0, i32 2, !dbg !14010
  %28 = load i16, i16* %in_step_offset47, align 4, !dbg !14010
  %conv48 = zext i16 %28 to i32, !dbg !14009
  %add49 = add i32 %add, %conv48, !dbg !14011
  %conv50 = sext i32 %add49 to i64, !dbg !14012
  %29 = load i64, i64* %typesize.addr, align 8, !dbg !14013
  %div = udiv i64 %conv50, %29, !dbg !14014
  %conv51 = trunc i64 %div to i32, !dbg !14015
  ret i32 %conv51, !dbg !14016
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #6

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__fswab32(i32 %val) #7 !dbg !14017 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14021, metadata !DIExpression()), !dbg !14022
  %0 = load i32, i32* %val.addr, align 4, !dbg !14023
  %call = call i32 @__arch_swab32(i32 %0) #12, !dbg !14024
  ret i32 %call, !dbg !14025
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__arch_swab32(i32 %val) #7 !dbg !14026 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14028, metadata !DIExpression()), !dbg !14029
  %0 = load i32, i32* %val.addr, align 4, !dbg !14030
  %1 = call i32 asm "bswapl $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %0) #15, !dbg !14031, !srcloc !14032
  store i32 %1, i32* %val.addr, align 4, !dbg !14031
  %2 = load i32, i32* %val.addr, align 4, !dbg !14033
  ret i32 %2, !dbg !14034
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__mlxsw_item_memcpy_from(i8* %buf, i8* %dst, %struct.mlxsw_item* %item, i16 zeroext %index) #0 !dbg !14035 {
entry:
  %buf.addr = alloca i8*, align 8
  %dst.addr = alloca i8*, align 8
  %item.addr = alloca %struct.mlxsw_item*, align 8
  %index.addr = alloca i16, align 2
  %offset = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14038, metadata !DIExpression()), !dbg !14039
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !14040, metadata !DIExpression()), !dbg !14041
  store %struct.mlxsw_item* %item, %struct.mlxsw_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_item** %item.addr, metadata !14042, metadata !DIExpression()), !dbg !14043
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !14044, metadata !DIExpression()), !dbg !14045
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !14046, metadata !DIExpression()), !dbg !14047
  %0 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14048
  %1 = load i16, i16* %index.addr, align 2, !dbg !14049
  %call = call i32 @__mlxsw_item_offset(%struct.mlxsw_item* %0, i16 zeroext %1, i64 1) #11, !dbg !14050
  store i32 %call, i32* %offset, align 4, !dbg !14047
  %2 = load i8*, i8** %dst.addr, align 8, !dbg !14051
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !14052
  %4 = load i32, i32* %offset, align 4, !dbg !14053
  %idxprom = zext i32 %4 to i64, !dbg !14052
  %arrayidx = getelementptr i8, i8* %3, i64 %idxprom, !dbg !14052
  %5 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14054
  %size = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %5, i32 0, i32 6, !dbg !14055
  %bytes = bitcast %union.anon.134* %size to i16*, !dbg !14056
  %6 = load i16, i16* %bytes, align 2, !dbg !14056
  %conv = zext i16 %6 to i64, !dbg !14054
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %arrayidx, i64 %conv, i1 false), !dbg !14057
  ret void, !dbg !14058
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_core_fw_flash_update(%struct.mlxsw_core* %mlxsw_core, %struct.devlink_flash_update_params* %params, %struct.netlink_ext_ack* %extack) #0 !dbg !14059 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %params.addr = alloca %struct.devlink_flash_update_params*, align 8
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %firmware = alloca %struct.firmware*, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !14062, metadata !DIExpression()), !dbg !14063
  store %struct.devlink_flash_update_params* %params, %struct.devlink_flash_update_params** %params.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_flash_update_params** %params.addr, metadata !14064, metadata !DIExpression()), !dbg !14065
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !14066, metadata !DIExpression()), !dbg !14067
  call void @llvm.dbg.declare(metadata %struct.firmware** %firmware, metadata !14068, metadata !DIExpression()), !dbg !14069
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14070, metadata !DIExpression()), !dbg !14071
  %0 = load %struct.devlink_flash_update_params*, %struct.devlink_flash_update_params** %params.addr, align 8, !dbg !14072
  %file_name = getelementptr inbounds %struct.devlink_flash_update_params, %struct.devlink_flash_update_params* %0, i32 0, i32 0, !dbg !14073
  %1 = load i8*, i8** %file_name, align 8, !dbg !14073
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !14074
  %bus_info = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %2, i32 0, i32 3, !dbg !14075
  %3 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info, align 8, !dbg !14075
  %dev = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %3, i32 0, i32 2, !dbg !14076
  %4 = load %struct.device*, %struct.device** %dev, align 8, !dbg !14076
  %call = call i32 @request_firmware_direct(%struct.firmware** %firmware, i8* %1, %struct.device* %4) #11, !dbg !14077
  store i32 %call, i32* %err, align 4, !dbg !14078
  %5 = load i32, i32* %err, align 4, !dbg !14079
  %tobool = icmp ne i32 %5, 0, !dbg !14079
  br i1 %tobool, label %if.then, label %if.end, !dbg !14081

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %err, align 4, !dbg !14082
  store i32 %6, i32* %retval, align 4, !dbg !14083
  br label %return, !dbg !14083

if.end:                                           ; preds = %entry
  %7 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !14084
  %8 = load %struct.firmware*, %struct.firmware** %firmware, align 8, !dbg !14085
  %9 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !14086
  %call1 = call i32 @mlxsw_core_fw_flash(%struct.mlxsw_core* %7, %struct.firmware* %8, %struct.netlink_ext_ack* %9) #11, !dbg !14087
  store i32 %call1, i32* %err, align 4, !dbg !14088
  %10 = load %struct.firmware*, %struct.firmware** %firmware, align 8, !dbg !14089
  call void @release_firmware(%struct.firmware* %10) #11, !dbg !14090
  %11 = load i32, i32* %err, align 4, !dbg !14091
  store i32 %11, i32* %retval, align 4, !dbg !14092
  br label %return, !dbg !14092

return:                                           ; preds = %if.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !14093
  ret i32 %12, !dbg !14093
}

; Function Attrs: noredzone
declare dso_local i32 @request_firmware_direct(%struct.firmware**, i8*, %struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_core_fw_flash(%struct.mlxsw_core* %mlxsw_core, %struct.firmware* %firmware, %struct.netlink_ext_ack* %extack) #0 !dbg !14094 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %firmware.addr = alloca %struct.firmware*, align 8
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %mlxsw_core_fw_info = alloca %struct.mlxsw_core_fw_info, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !14097, metadata !DIExpression()), !dbg !14098
  store %struct.firmware* %firmware, %struct.firmware** %firmware.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.firmware** %firmware.addr, metadata !14099, metadata !DIExpression()), !dbg !14100
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !14101, metadata !DIExpression()), !dbg !14102
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core_fw_info* %mlxsw_core_fw_info, metadata !14103, metadata !DIExpression()), !dbg !14104
  %mlxfw_dev = getelementptr inbounds %struct.mlxsw_core_fw_info, %struct.mlxsw_core_fw_info* %mlxsw_core_fw_info, i32 0, i32 0, !dbg !14105
  %ops = getelementptr inbounds %struct.mlxfw_dev, %struct.mlxfw_dev* %mlxfw_dev, i32 0, i32 0, !dbg !14106
  store %struct.mlxfw_dev_ops* @mlxsw_core_fw_mlxsw_dev_ops, %struct.mlxfw_dev_ops** %ops, align 8, !dbg !14106
  %psid = getelementptr inbounds %struct.mlxfw_dev, %struct.mlxfw_dev* %mlxfw_dev, i32 0, i32 1, !dbg !14106
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !14107
  %bus_info = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %0, i32 0, i32 3, !dbg !14108
  %1 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info, align 8, !dbg !14108
  %psid1 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %1, i32 0, i32 5, !dbg !14109
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %psid1, i64 0, i64 0, !dbg !14107
  store i8* %arraydecay, i8** %psid, align 8, !dbg !14106
  %psid_size = getelementptr inbounds %struct.mlxfw_dev, %struct.mlxfw_dev* %mlxfw_dev, i32 0, i32 2, !dbg !14106
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !14110
  %bus_info2 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %2, i32 0, i32 3, !dbg !14111
  %3 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info2, align 8, !dbg !14111
  %psid3 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %3, i32 0, i32 5, !dbg !14112
  %arraydecay4 = getelementptr inbounds [16 x i8], [16 x i8]* %psid3, i64 0, i64 0, !dbg !14110
  %call = call i64 @strlen(i8* %arraydecay4) #11, !dbg !14113
  %conv = trunc i64 %call to i16, !dbg !14113
  store i16 %conv, i16* %psid_size, align 8, !dbg !14106
  %devlink = getelementptr inbounds %struct.mlxfw_dev, %struct.mlxfw_dev* %mlxfw_dev, i32 0, i32 3, !dbg !14106
  %4 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !14114
  %5 = bitcast %struct.mlxsw_core* %4 to i8*, !dbg !14114
  %call5 = call %struct.devlink* @priv_to_devlink(i8* %5) #11, !dbg !14115
  store %struct.devlink* %call5, %struct.devlink** %devlink, align 8, !dbg !14106
  %mlxsw_core6 = getelementptr inbounds %struct.mlxsw_core_fw_info, %struct.mlxsw_core_fw_info* %mlxsw_core_fw_info, i32 0, i32 1, !dbg !14105
  %6 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !14116
  store %struct.mlxsw_core* %6, %struct.mlxsw_core** %mlxsw_core6, align 8, !dbg !14105
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14117, metadata !DIExpression()), !dbg !14118
  %7 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !14119
  %fw_flash_in_progress = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %7, i32 0, i32 14, !dbg !14120
  store i8 1, i8* %fw_flash_in_progress, align 4, !dbg !14121
  %mlxfw_dev7 = getelementptr inbounds %struct.mlxsw_core_fw_info, %struct.mlxsw_core_fw_info* %mlxsw_core_fw_info, i32 0, i32 0, !dbg !14122
  %8 = load %struct.firmware*, %struct.firmware** %firmware.addr, align 8, !dbg !14123
  %9 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !14124
  %call8 = call i32 @mlxfw_firmware_flash(%struct.mlxfw_dev* %mlxfw_dev7, %struct.firmware* %8, %struct.netlink_ext_ack* %9) #11, !dbg !14125
  store i32 %call8, i32* %err, align 4, !dbg !14126
  %10 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !14127
  %fw_flash_in_progress9 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %10, i32 0, i32 14, !dbg !14128
  store i8 0, i8* %fw_flash_in_progress9, align 4, !dbg !14129
  %11 = load i32, i32* %err, align 4, !dbg !14130
  ret i32 %11, !dbg !14131
}

; Function Attrs: noredzone
declare dso_local void @release_firmware(%struct.firmware*) #2

; Function Attrs: noredzone
declare dso_local i64 @strlen(i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxfw_firmware_flash(%struct.mlxfw_dev*, %struct.firmware*, %struct.netlink_ext_ack*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_core_fw_component_query(%struct.mlxfw_dev* %mlxfw_dev, i16 zeroext %component_index, i32* %p_max_size, i8* %p_align_bits, i16* %p_max_write_size) #0 !dbg !14132 {
entry:
  %retval = alloca i32, align 4
  %mlxfw_dev.addr = alloca %struct.mlxfw_dev*, align 8
  %component_index.addr = alloca i16, align 2
  %p_max_size.addr = alloca i32*, align 8
  %p_align_bits.addr = alloca i8*, align 8
  %p_max_write_size.addr = alloca i16*, align 8
  %mlxsw_core_fw_info = alloca %struct.mlxsw_core_fw_info*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_core_fw_info*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mcqi_pl = alloca [44 x i8], align 16
  %err = alloca i32, align 4
  %__UNIQUE_ID___x347 = alloca i8, align 1
  %__UNIQUE_ID___y348 = alloca i8, align 1
  %tmp4 = alloca i32, align 4
  %__UNIQUE_ID___x349 = alloca i16, align 2
  %__UNIQUE_ID___y350 = alloca i16, align 2
  %tmp10 = alloca i32, align 4
  store %struct.mlxfw_dev* %mlxfw_dev, %struct.mlxfw_dev** %mlxfw_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxfw_dev** %mlxfw_dev.addr, metadata !14133, metadata !DIExpression()), !dbg !14134
  store i16 %component_index, i16* %component_index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %component_index.addr, metadata !14135, metadata !DIExpression()), !dbg !14136
  store i32* %p_max_size, i32** %p_max_size.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p_max_size.addr, metadata !14137, metadata !DIExpression()), !dbg !14138
  store i8* %p_align_bits, i8** %p_align_bits.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p_align_bits.addr, metadata !14139, metadata !DIExpression()), !dbg !14140
  store i16* %p_max_write_size, i16** %p_max_write_size.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %p_max_write_size.addr, metadata !14141, metadata !DIExpression()), !dbg !14142
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core_fw_info** %mlxsw_core_fw_info, metadata !14143, metadata !DIExpression()), !dbg !14144
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14145, metadata !DIExpression()), !dbg !14147
  %0 = load %struct.mlxfw_dev*, %struct.mlxfw_dev** %mlxfw_dev.addr, align 8, !dbg !14147
  %1 = bitcast %struct.mlxfw_dev* %0 to i8*, !dbg !14147
  store i8* %1, i8** %__mptr, align 8, !dbg !14147
  br label %do.body, !dbg !14147

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14148

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !14147
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !14147
  %3 = bitcast i8* %add.ptr to %struct.mlxsw_core_fw_info*, !dbg !14147
  store %struct.mlxsw_core_fw_info* %3, %struct.mlxsw_core_fw_info** %tmp, align 8, !dbg !14148
  %4 = load %struct.mlxsw_core_fw_info*, %struct.mlxsw_core_fw_info** %tmp, align 8, !dbg !14147
  store %struct.mlxsw_core_fw_info* %4, %struct.mlxsw_core_fw_info** %mlxsw_core_fw_info, align 8, !dbg !14144
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !14150, metadata !DIExpression()), !dbg !14151
  %5 = load %struct.mlxsw_core_fw_info*, %struct.mlxsw_core_fw_info** %mlxsw_core_fw_info, align 8, !dbg !14152
  %mlxsw_core1 = getelementptr inbounds %struct.mlxsw_core_fw_info, %struct.mlxsw_core_fw_info* %5, i32 0, i32 1, !dbg !14153
  %6 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core1, align 8, !dbg !14153
  store %struct.mlxsw_core* %6, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !14151
  call void @llvm.dbg.declare(metadata [44 x i8]* %mcqi_pl, metadata !14154, metadata !DIExpression()), !dbg !14156
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14157, metadata !DIExpression()), !dbg !14158
  %arraydecay = getelementptr inbounds [44 x i8], [44 x i8]* %mcqi_pl, i64 0, i64 0, !dbg !14159
  %7 = load i16, i16* %component_index.addr, align 2, !dbg !14160
  call void @mlxsw_reg_mcqi_pack(i8* %arraydecay, i16 zeroext %7) #11, !dbg !14161
  %8 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !14162
  %arraydecay2 = getelementptr inbounds [44 x i8], [44 x i8]* %mcqi_pl, i64 0, i64 0, !dbg !14163
  %call = call i32 @mlxsw_reg_query(%struct.mlxsw_core* %8, %struct.mlxsw_reg_info* @mlxsw_reg_mcqi, i8* %arraydecay2) #11, !dbg !14164
  store i32 %call, i32* %err, align 4, !dbg !14165
  %9 = load i32, i32* %err, align 4, !dbg !14166
  %tobool = icmp ne i32 %9, 0, !dbg !14166
  br i1 %tobool, label %if.then, label %if.end, !dbg !14168

if.then:                                          ; preds = %do.end
  %10 = load i32, i32* %err, align 4, !dbg !14169
  store i32 %10, i32* %retval, align 4, !dbg !14170
  br label %return, !dbg !14170

if.end:                                           ; preds = %do.end
  %arraydecay3 = getelementptr inbounds [44 x i8], [44 x i8]* %mcqi_pl, i64 0, i64 0, !dbg !14171
  %11 = load i32*, i32** %p_max_size.addr, align 8, !dbg !14172
  %12 = load i8*, i8** %p_align_bits.addr, align 8, !dbg !14173
  %13 = load i16*, i16** %p_max_write_size.addr, align 8, !dbg !14174
  call void @mlxsw_reg_mcqi_unpack(i8* %arraydecay3, i32* %11, i8* %12, i16* %13) #11, !dbg !14175
  call void @llvm.dbg.declare(metadata i8* %__UNIQUE_ID___x347, metadata !14176, metadata !DIExpression()), !dbg !14178
  %14 = load i8*, i8** %p_align_bits.addr, align 8, !dbg !14178
  %15 = load i8, i8* %14, align 1, !dbg !14178
  store i8 %15, i8* %__UNIQUE_ID___x347, align 1, !dbg !14178
  call void @llvm.dbg.declare(metadata i8* %__UNIQUE_ID___y348, metadata !14179, metadata !DIExpression()), !dbg !14178
  store i8 2, i8* %__UNIQUE_ID___y348, align 1, !dbg !14178
  %16 = load i8, i8* %__UNIQUE_ID___x347, align 1, !dbg !14178
  %conv = zext i8 %16 to i32, !dbg !14178
  %17 = load i8, i8* %__UNIQUE_ID___y348, align 1, !dbg !14178
  %conv5 = zext i8 %17 to i32, !dbg !14178
  %cmp = icmp sgt i32 %conv, %conv5, !dbg !14178
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !14178

cond.true:                                        ; preds = %if.end
  %18 = load i8, i8* %__UNIQUE_ID___x347, align 1, !dbg !14178
  %conv7 = zext i8 %18 to i32, !dbg !14178
  br label %cond.end, !dbg !14178

cond.false:                                       ; preds = %if.end
  %19 = load i8, i8* %__UNIQUE_ID___y348, align 1, !dbg !14178
  %conv8 = zext i8 %19 to i32, !dbg !14178
  br label %cond.end, !dbg !14178

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv7, %cond.true ], [ %conv8, %cond.false ], !dbg !14178
  store i32 %cond, i32* %tmp4, align 4, !dbg !14178
  %20 = load i32, i32* %tmp4, align 4, !dbg !14178
  %conv9 = trunc i32 %20 to i8, !dbg !14180
  %21 = load i8*, i8** %p_align_bits.addr, align 8, !dbg !14181
  store i8 %conv9, i8* %21, align 1, !dbg !14182
  call void @llvm.dbg.declare(metadata i16* %__UNIQUE_ID___x349, metadata !14183, metadata !DIExpression()), !dbg !14185
  %22 = load i16*, i16** %p_max_write_size.addr, align 8, !dbg !14185
  %23 = load i16, i16* %22, align 2, !dbg !14185
  store i16 %23, i16* %__UNIQUE_ID___x349, align 2, !dbg !14185
  call void @llvm.dbg.declare(metadata i16* %__UNIQUE_ID___y350, metadata !14186, metadata !DIExpression()), !dbg !14185
  store i16 128, i16* %__UNIQUE_ID___y350, align 2, !dbg !14185
  %24 = load i16, i16* %__UNIQUE_ID___x349, align 2, !dbg !14185
  %conv11 = zext i16 %24 to i32, !dbg !14185
  %25 = load i16, i16* %__UNIQUE_ID___y350, align 2, !dbg !14185
  %conv12 = zext i16 %25 to i32, !dbg !14185
  %cmp13 = icmp slt i32 %conv11, %conv12, !dbg !14185
  br i1 %cmp13, label %cond.true15, label %cond.false17, !dbg !14185

cond.true15:                                      ; preds = %cond.end
  %26 = load i16, i16* %__UNIQUE_ID___x349, align 2, !dbg !14185
  %conv16 = zext i16 %26 to i32, !dbg !14185
  br label %cond.end19, !dbg !14185

cond.false17:                                     ; preds = %cond.end
  %27 = load i16, i16* %__UNIQUE_ID___y350, align 2, !dbg !14185
  %conv18 = zext i16 %27 to i32, !dbg !14185
  br label %cond.end19, !dbg !14185

cond.end19:                                       ; preds = %cond.false17, %cond.true15
  %cond20 = phi i32 [ %conv16, %cond.true15 ], [ %conv18, %cond.false17 ], !dbg !14185
  store i32 %cond20, i32* %tmp10, align 4, !dbg !14185
  %28 = load i32, i32* %tmp10, align 4, !dbg !14185
  %conv21 = trunc i32 %28 to i16, !dbg !14187
  %29 = load i16*, i16** %p_max_write_size.addr, align 8, !dbg !14188
  store i16 %conv21, i16* %29, align 2, !dbg !14189
  store i32 0, i32* %retval, align 4, !dbg !14190
  br label %return, !dbg !14190

return:                                           ; preds = %cond.end19, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !14191
  ret i32 %30, !dbg !14191
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_core_fw_fsm_lock(%struct.mlxfw_dev* %mlxfw_dev, i32* %fwhandle) #0 !dbg !14192 {
entry:
  %retval = alloca i32, align 4
  %mlxfw_dev.addr = alloca %struct.mlxfw_dev*, align 8
  %fwhandle.addr = alloca i32*, align 8
  %mlxsw_core_fw_info = alloca %struct.mlxsw_core_fw_info*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_core_fw_info*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mcc_pl = alloca [28 x i8], align 16
  %control_state = alloca i8, align 1
  %err = alloca i32, align 4
  store %struct.mlxfw_dev* %mlxfw_dev, %struct.mlxfw_dev** %mlxfw_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxfw_dev** %mlxfw_dev.addr, metadata !14193, metadata !DIExpression()), !dbg !14194
  store i32* %fwhandle, i32** %fwhandle.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %fwhandle.addr, metadata !14195, metadata !DIExpression()), !dbg !14196
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core_fw_info** %mlxsw_core_fw_info, metadata !14197, metadata !DIExpression()), !dbg !14198
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14199, metadata !DIExpression()), !dbg !14201
  %0 = load %struct.mlxfw_dev*, %struct.mlxfw_dev** %mlxfw_dev.addr, align 8, !dbg !14201
  %1 = bitcast %struct.mlxfw_dev* %0 to i8*, !dbg !14201
  store i8* %1, i8** %__mptr, align 8, !dbg !14201
  br label %do.body, !dbg !14201

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14202

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !14201
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !14201
  %3 = bitcast i8* %add.ptr to %struct.mlxsw_core_fw_info*, !dbg !14201
  store %struct.mlxsw_core_fw_info* %3, %struct.mlxsw_core_fw_info** %tmp, align 8, !dbg !14202
  %4 = load %struct.mlxsw_core_fw_info*, %struct.mlxsw_core_fw_info** %tmp, align 8, !dbg !14201
  store %struct.mlxsw_core_fw_info* %4, %struct.mlxsw_core_fw_info** %mlxsw_core_fw_info, align 8, !dbg !14198
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !14204, metadata !DIExpression()), !dbg !14205
  %5 = load %struct.mlxsw_core_fw_info*, %struct.mlxsw_core_fw_info** %mlxsw_core_fw_info, align 8, !dbg !14206
  %mlxsw_core1 = getelementptr inbounds %struct.mlxsw_core_fw_info, %struct.mlxsw_core_fw_info* %5, i32 0, i32 1, !dbg !14207
  %6 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core1, align 8, !dbg !14207
  store %struct.mlxsw_core* %6, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !14205
  call void @llvm.dbg.declare(metadata [28 x i8]* %mcc_pl, metadata !14208, metadata !DIExpression()), !dbg !14210
  call void @llvm.dbg.declare(metadata i8* %control_state, metadata !14211, metadata !DIExpression()), !dbg !14212
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14213, metadata !DIExpression()), !dbg !14214
  %arraydecay = getelementptr inbounds [28 x i8], [28 x i8]* %mcc_pl, i64 0, i64 0, !dbg !14215
  call void @mlxsw_reg_mcc_pack(i8* %arraydecay, i32 0, i16 zeroext 0, i32 0, i32 0) #11, !dbg !14216
  %7 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !14217
  %arraydecay2 = getelementptr inbounds [28 x i8], [28 x i8]* %mcc_pl, i64 0, i64 0, !dbg !14218
  %call = call i32 @mlxsw_reg_query(%struct.mlxsw_core* %7, %struct.mlxsw_reg_info* @mlxsw_reg_mcc, i8* %arraydecay2) #11, !dbg !14219
  store i32 %call, i32* %err, align 4, !dbg !14220
  %8 = load i32, i32* %err, align 4, !dbg !14221
  %tobool = icmp ne i32 %8, 0, !dbg !14221
  br i1 %tobool, label %if.then, label %if.end, !dbg !14223

if.then:                                          ; preds = %do.end
  %9 = load i32, i32* %err, align 4, !dbg !14224
  store i32 %9, i32* %retval, align 4, !dbg !14225
  br label %return, !dbg !14225

if.end:                                           ; preds = %do.end
  %arraydecay3 = getelementptr inbounds [28 x i8], [28 x i8]* %mcc_pl, i64 0, i64 0, !dbg !14226
  %10 = load i32*, i32** %fwhandle.addr, align 8, !dbg !14227
  call void @mlxsw_reg_mcc_unpack(i8* %arraydecay3, i32* %10, i8* null, i8* %control_state) #11, !dbg !14228
  %11 = load i8, i8* %control_state, align 1, !dbg !14229
  %conv = zext i8 %11 to i32, !dbg !14229
  %cmp = icmp ne i32 %conv, 0, !dbg !14231
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !14232

if.then5:                                         ; preds = %if.end
  store i32 -16, i32* %retval, align 4, !dbg !14233
  br label %return, !dbg !14233

if.end6:                                          ; preds = %if.end
  %arraydecay7 = getelementptr inbounds [28 x i8], [28 x i8]* %mcc_pl, i64 0, i64 0, !dbg !14234
  %12 = load i32*, i32** %fwhandle.addr, align 8, !dbg !14235
  %13 = load i32, i32* %12, align 4, !dbg !14236
  call void @mlxsw_reg_mcc_pack(i8* %arraydecay7, i32 1, i16 zeroext 0, i32 %13, i32 0) #11, !dbg !14237
  %14 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !14238
  %arraydecay8 = getelementptr inbounds [28 x i8], [28 x i8]* %mcc_pl, i64 0, i64 0, !dbg !14239
  %call9 = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %14, %struct.mlxsw_reg_info* @mlxsw_reg_mcc, i8* %arraydecay8) #11, !dbg !14240
  store i32 %call9, i32* %retval, align 4, !dbg !14241
  br label %return, !dbg !14241

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !14242
  ret i32 %15, !dbg !14242
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_core_fw_fsm_component_update(%struct.mlxfw_dev* %mlxfw_dev, i32 %fwhandle, i16 zeroext %component_index, i32 %component_size) #0 !dbg !14243 {
entry:
  %mlxfw_dev.addr = alloca %struct.mlxfw_dev*, align 8
  %fwhandle.addr = alloca i32, align 4
  %component_index.addr = alloca i16, align 2
  %component_size.addr = alloca i32, align 4
  %mlxsw_core_fw_info = alloca %struct.mlxsw_core_fw_info*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_core_fw_info*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mcc_pl = alloca [28 x i8], align 16
  store %struct.mlxfw_dev* %mlxfw_dev, %struct.mlxfw_dev** %mlxfw_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxfw_dev** %mlxfw_dev.addr, metadata !14244, metadata !DIExpression()), !dbg !14245
  store i32 %fwhandle, i32* %fwhandle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fwhandle.addr, metadata !14246, metadata !DIExpression()), !dbg !14247
  store i16 %component_index, i16* %component_index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %component_index.addr, metadata !14248, metadata !DIExpression()), !dbg !14249
  store i32 %component_size, i32* %component_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %component_size.addr, metadata !14250, metadata !DIExpression()), !dbg !14251
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core_fw_info** %mlxsw_core_fw_info, metadata !14252, metadata !DIExpression()), !dbg !14253
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14254, metadata !DIExpression()), !dbg !14256
  %0 = load %struct.mlxfw_dev*, %struct.mlxfw_dev** %mlxfw_dev.addr, align 8, !dbg !14256
  %1 = bitcast %struct.mlxfw_dev* %0 to i8*, !dbg !14256
  store i8* %1, i8** %__mptr, align 8, !dbg !14256
  br label %do.body, !dbg !14256

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14257

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !14256
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !14256
  %3 = bitcast i8* %add.ptr to %struct.mlxsw_core_fw_info*, !dbg !14256
  store %struct.mlxsw_core_fw_info* %3, %struct.mlxsw_core_fw_info** %tmp, align 8, !dbg !14257
  %4 = load %struct.mlxsw_core_fw_info*, %struct.mlxsw_core_fw_info** %tmp, align 8, !dbg !14256
  store %struct.mlxsw_core_fw_info* %4, %struct.mlxsw_core_fw_info** %mlxsw_core_fw_info, align 8, !dbg !14253
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !14259, metadata !DIExpression()), !dbg !14260
  %5 = load %struct.mlxsw_core_fw_info*, %struct.mlxsw_core_fw_info** %mlxsw_core_fw_info, align 8, !dbg !14261
  %mlxsw_core1 = getelementptr inbounds %struct.mlxsw_core_fw_info, %struct.mlxsw_core_fw_info* %5, i32 0, i32 1, !dbg !14262
  %6 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core1, align 8, !dbg !14262
  store %struct.mlxsw_core* %6, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !14260
  call void @llvm.dbg.declare(metadata [28 x i8]* %mcc_pl, metadata !14263, metadata !DIExpression()), !dbg !14264
  %arraydecay = getelementptr inbounds [28 x i8], [28 x i8]* %mcc_pl, i64 0, i64 0, !dbg !14265
  %7 = load i16, i16* %component_index.addr, align 2, !dbg !14266
  %8 = load i32, i32* %fwhandle.addr, align 4, !dbg !14267
  %9 = load i32, i32* %component_size.addr, align 4, !dbg !14268
  call void @mlxsw_reg_mcc_pack(i8* %arraydecay, i32 3, i16 zeroext %7, i32 %8, i32 %9) #11, !dbg !14269
  %10 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !14270
  %arraydecay2 = getelementptr inbounds [28 x i8], [28 x i8]* %mcc_pl, i64 0, i64 0, !dbg !14271
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %10, %struct.mlxsw_reg_info* @mlxsw_reg_mcc, i8* %arraydecay2) #11, !dbg !14272
  ret i32 %call, !dbg !14273
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_core_fw_fsm_block_download(%struct.mlxfw_dev* %mlxfw_dev, i32 %fwhandle, i8* %data, i16 zeroext %size, i32 %offset) #0 !dbg !14274 {
entry:
  %mlxfw_dev.addr = alloca %struct.mlxfw_dev*, align 8
  %fwhandle.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %size.addr = alloca i16, align 2
  %offset.addr = alloca i32, align 4
  %mlxsw_core_fw_info = alloca %struct.mlxsw_core_fw_info*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_core_fw_info*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mcda_pl = alloca [144 x i8], align 16
  store %struct.mlxfw_dev* %mlxfw_dev, %struct.mlxfw_dev** %mlxfw_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxfw_dev** %mlxfw_dev.addr, metadata !14275, metadata !DIExpression()), !dbg !14276
  store i32 %fwhandle, i32* %fwhandle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fwhandle.addr, metadata !14277, metadata !DIExpression()), !dbg !14278
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !14279, metadata !DIExpression()), !dbg !14280
  store i16 %size, i16* %size.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %size.addr, metadata !14281, metadata !DIExpression()), !dbg !14282
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !14283, metadata !DIExpression()), !dbg !14284
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core_fw_info** %mlxsw_core_fw_info, metadata !14285, metadata !DIExpression()), !dbg !14286
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14287, metadata !DIExpression()), !dbg !14289
  %0 = load %struct.mlxfw_dev*, %struct.mlxfw_dev** %mlxfw_dev.addr, align 8, !dbg !14289
  %1 = bitcast %struct.mlxfw_dev* %0 to i8*, !dbg !14289
  store i8* %1, i8** %__mptr, align 8, !dbg !14289
  br label %do.body, !dbg !14289

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14290

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !14289
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !14289
  %3 = bitcast i8* %add.ptr to %struct.mlxsw_core_fw_info*, !dbg !14289
  store %struct.mlxsw_core_fw_info* %3, %struct.mlxsw_core_fw_info** %tmp, align 8, !dbg !14290
  %4 = load %struct.mlxsw_core_fw_info*, %struct.mlxsw_core_fw_info** %tmp, align 8, !dbg !14289
  store %struct.mlxsw_core_fw_info* %4, %struct.mlxsw_core_fw_info** %mlxsw_core_fw_info, align 8, !dbg !14286
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !14292, metadata !DIExpression()), !dbg !14293
  %5 = load %struct.mlxsw_core_fw_info*, %struct.mlxsw_core_fw_info** %mlxsw_core_fw_info, align 8, !dbg !14294
  %mlxsw_core1 = getelementptr inbounds %struct.mlxsw_core_fw_info, %struct.mlxsw_core_fw_info* %5, i32 0, i32 1, !dbg !14295
  %6 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core1, align 8, !dbg !14295
  store %struct.mlxsw_core* %6, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !14293
  call void @llvm.dbg.declare(metadata [144 x i8]* %mcda_pl, metadata !14296, metadata !DIExpression()), !dbg !14300
  %arraydecay = getelementptr inbounds [144 x i8], [144 x i8]* %mcda_pl, i64 0, i64 0, !dbg !14301
  %7 = load i32, i32* %fwhandle.addr, align 4, !dbg !14302
  %8 = load i32, i32* %offset.addr, align 4, !dbg !14303
  %9 = load i16, i16* %size.addr, align 2, !dbg !14304
  %10 = load i8*, i8** %data.addr, align 8, !dbg !14305
  call void @mlxsw_reg_mcda_pack(i8* %arraydecay, i32 %7, i32 %8, i16 zeroext %9, i8* %10) #11, !dbg !14306
  %11 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !14307
  %arraydecay2 = getelementptr inbounds [144 x i8], [144 x i8]* %mcda_pl, i64 0, i64 0, !dbg !14308
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %11, %struct.mlxsw_reg_info* @mlxsw_reg_mcda, i8* %arraydecay2) #11, !dbg !14309
  ret i32 %call, !dbg !14310
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_core_fw_fsm_component_verify(%struct.mlxfw_dev* %mlxfw_dev, i32 %fwhandle, i16 zeroext %component_index) #0 !dbg !14311 {
entry:
  %mlxfw_dev.addr = alloca %struct.mlxfw_dev*, align 8
  %fwhandle.addr = alloca i32, align 4
  %component_index.addr = alloca i16, align 2
  %mlxsw_core_fw_info = alloca %struct.mlxsw_core_fw_info*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_core_fw_info*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mcc_pl = alloca [28 x i8], align 16
  store %struct.mlxfw_dev* %mlxfw_dev, %struct.mlxfw_dev** %mlxfw_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxfw_dev** %mlxfw_dev.addr, metadata !14312, metadata !DIExpression()), !dbg !14313
  store i32 %fwhandle, i32* %fwhandle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fwhandle.addr, metadata !14314, metadata !DIExpression()), !dbg !14315
  store i16 %component_index, i16* %component_index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %component_index.addr, metadata !14316, metadata !DIExpression()), !dbg !14317
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core_fw_info** %mlxsw_core_fw_info, metadata !14318, metadata !DIExpression()), !dbg !14319
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14320, metadata !DIExpression()), !dbg !14322
  %0 = load %struct.mlxfw_dev*, %struct.mlxfw_dev** %mlxfw_dev.addr, align 8, !dbg !14322
  %1 = bitcast %struct.mlxfw_dev* %0 to i8*, !dbg !14322
  store i8* %1, i8** %__mptr, align 8, !dbg !14322
  br label %do.body, !dbg !14322

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14323

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !14322
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !14322
  %3 = bitcast i8* %add.ptr to %struct.mlxsw_core_fw_info*, !dbg !14322
  store %struct.mlxsw_core_fw_info* %3, %struct.mlxsw_core_fw_info** %tmp, align 8, !dbg !14323
  %4 = load %struct.mlxsw_core_fw_info*, %struct.mlxsw_core_fw_info** %tmp, align 8, !dbg !14322
  store %struct.mlxsw_core_fw_info* %4, %struct.mlxsw_core_fw_info** %mlxsw_core_fw_info, align 8, !dbg !14319
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !14325, metadata !DIExpression()), !dbg !14326
  %5 = load %struct.mlxsw_core_fw_info*, %struct.mlxsw_core_fw_info** %mlxsw_core_fw_info, align 8, !dbg !14327
  %mlxsw_core1 = getelementptr inbounds %struct.mlxsw_core_fw_info, %struct.mlxsw_core_fw_info* %5, i32 0, i32 1, !dbg !14328
  %6 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core1, align 8, !dbg !14328
  store %struct.mlxsw_core* %6, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !14326
  call void @llvm.dbg.declare(metadata [28 x i8]* %mcc_pl, metadata !14329, metadata !DIExpression()), !dbg !14330
  %arraydecay = getelementptr inbounds [28 x i8], [28 x i8]* %mcc_pl, i64 0, i64 0, !dbg !14331
  %7 = load i16, i16* %component_index.addr, align 2, !dbg !14332
  %8 = load i32, i32* %fwhandle.addr, align 4, !dbg !14333
  call void @mlxsw_reg_mcc_pack(i8* %arraydecay, i32 4, i16 zeroext %7, i32 %8, i32 0) #11, !dbg !14334
  %9 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !14335
  %arraydecay2 = getelementptr inbounds [28 x i8], [28 x i8]* %mcc_pl, i64 0, i64 0, !dbg !14336
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %9, %struct.mlxsw_reg_info* @mlxsw_reg_mcc, i8* %arraydecay2) #11, !dbg !14337
  ret i32 %call, !dbg !14338
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_core_fw_fsm_activate(%struct.mlxfw_dev* %mlxfw_dev, i32 %fwhandle) #0 !dbg !14339 {
entry:
  %mlxfw_dev.addr = alloca %struct.mlxfw_dev*, align 8
  %fwhandle.addr = alloca i32, align 4
  %mlxsw_core_fw_info = alloca %struct.mlxsw_core_fw_info*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_core_fw_info*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mcc_pl = alloca [28 x i8], align 16
  store %struct.mlxfw_dev* %mlxfw_dev, %struct.mlxfw_dev** %mlxfw_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxfw_dev** %mlxfw_dev.addr, metadata !14340, metadata !DIExpression()), !dbg !14341
  store i32 %fwhandle, i32* %fwhandle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fwhandle.addr, metadata !14342, metadata !DIExpression()), !dbg !14343
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core_fw_info** %mlxsw_core_fw_info, metadata !14344, metadata !DIExpression()), !dbg !14345
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14346, metadata !DIExpression()), !dbg !14348
  %0 = load %struct.mlxfw_dev*, %struct.mlxfw_dev** %mlxfw_dev.addr, align 8, !dbg !14348
  %1 = bitcast %struct.mlxfw_dev* %0 to i8*, !dbg !14348
  store i8* %1, i8** %__mptr, align 8, !dbg !14348
  br label %do.body, !dbg !14348

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14349

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !14348
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !14348
  %3 = bitcast i8* %add.ptr to %struct.mlxsw_core_fw_info*, !dbg !14348
  store %struct.mlxsw_core_fw_info* %3, %struct.mlxsw_core_fw_info** %tmp, align 8, !dbg !14349
  %4 = load %struct.mlxsw_core_fw_info*, %struct.mlxsw_core_fw_info** %tmp, align 8, !dbg !14348
  store %struct.mlxsw_core_fw_info* %4, %struct.mlxsw_core_fw_info** %mlxsw_core_fw_info, align 8, !dbg !14345
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !14351, metadata !DIExpression()), !dbg !14352
  %5 = load %struct.mlxsw_core_fw_info*, %struct.mlxsw_core_fw_info** %mlxsw_core_fw_info, align 8, !dbg !14353
  %mlxsw_core1 = getelementptr inbounds %struct.mlxsw_core_fw_info, %struct.mlxsw_core_fw_info* %5, i32 0, i32 1, !dbg !14354
  %6 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core1, align 8, !dbg !14354
  store %struct.mlxsw_core* %6, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !14352
  call void @llvm.dbg.declare(metadata [28 x i8]* %mcc_pl, metadata !14355, metadata !DIExpression()), !dbg !14356
  %arraydecay = getelementptr inbounds [28 x i8], [28 x i8]* %mcc_pl, i64 0, i64 0, !dbg !14357
  %7 = load i32, i32* %fwhandle.addr, align 4, !dbg !14358
  call void @mlxsw_reg_mcc_pack(i8* %arraydecay, i32 6, i16 zeroext 0, i32 %7, i32 0) #11, !dbg !14359
  %8 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !14360
  %arraydecay2 = getelementptr inbounds [28 x i8], [28 x i8]* %mcc_pl, i64 0, i64 0, !dbg !14361
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %8, %struct.mlxsw_reg_info* @mlxsw_reg_mcc, i8* %arraydecay2) #11, !dbg !14362
  ret i32 %call, !dbg !14363
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_core_fw_fsm_query_state(%struct.mlxfw_dev* %mlxfw_dev, i32 %fwhandle, i32* %fsm_state, i32* %fsm_state_err) #0 !dbg !14364 {
entry:
  %retval = alloca i32, align 4
  %mlxfw_dev.addr = alloca %struct.mlxfw_dev*, align 8
  %fwhandle.addr = alloca i32, align 4
  %fsm_state.addr = alloca i32*, align 8
  %fsm_state_err.addr = alloca i32*, align 8
  %mlxsw_core_fw_info = alloca %struct.mlxsw_core_fw_info*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_core_fw_info*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mcc_pl = alloca [28 x i8], align 16
  %control_state = alloca i8, align 1
  %error_code = alloca i8, align 1
  %err = alloca i32, align 4
  %__UNIQUE_ID___x357 = alloca i32, align 4
  %__UNIQUE_ID___y358 = alloca i32, align 4
  %tmp5 = alloca i32, align 4
  store %struct.mlxfw_dev* %mlxfw_dev, %struct.mlxfw_dev** %mlxfw_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxfw_dev** %mlxfw_dev.addr, metadata !14365, metadata !DIExpression()), !dbg !14366
  store i32 %fwhandle, i32* %fwhandle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fwhandle.addr, metadata !14367, metadata !DIExpression()), !dbg !14368
  store i32* %fsm_state, i32** %fsm_state.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %fsm_state.addr, metadata !14369, metadata !DIExpression()), !dbg !14370
  store i32* %fsm_state_err, i32** %fsm_state_err.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %fsm_state_err.addr, metadata !14371, metadata !DIExpression()), !dbg !14372
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core_fw_info** %mlxsw_core_fw_info, metadata !14373, metadata !DIExpression()), !dbg !14374
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14375, metadata !DIExpression()), !dbg !14377
  %0 = load %struct.mlxfw_dev*, %struct.mlxfw_dev** %mlxfw_dev.addr, align 8, !dbg !14377
  %1 = bitcast %struct.mlxfw_dev* %0 to i8*, !dbg !14377
  store i8* %1, i8** %__mptr, align 8, !dbg !14377
  br label %do.body, !dbg !14377

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14378

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !14377
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !14377
  %3 = bitcast i8* %add.ptr to %struct.mlxsw_core_fw_info*, !dbg !14377
  store %struct.mlxsw_core_fw_info* %3, %struct.mlxsw_core_fw_info** %tmp, align 8, !dbg !14378
  %4 = load %struct.mlxsw_core_fw_info*, %struct.mlxsw_core_fw_info** %tmp, align 8, !dbg !14377
  store %struct.mlxsw_core_fw_info* %4, %struct.mlxsw_core_fw_info** %mlxsw_core_fw_info, align 8, !dbg !14374
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !14380, metadata !DIExpression()), !dbg !14381
  %5 = load %struct.mlxsw_core_fw_info*, %struct.mlxsw_core_fw_info** %mlxsw_core_fw_info, align 8, !dbg !14382
  %mlxsw_core1 = getelementptr inbounds %struct.mlxsw_core_fw_info, %struct.mlxsw_core_fw_info* %5, i32 0, i32 1, !dbg !14383
  %6 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core1, align 8, !dbg !14383
  store %struct.mlxsw_core* %6, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !14381
  call void @llvm.dbg.declare(metadata [28 x i8]* %mcc_pl, metadata !14384, metadata !DIExpression()), !dbg !14385
  call void @llvm.dbg.declare(metadata i8* %control_state, metadata !14386, metadata !DIExpression()), !dbg !14387
  call void @llvm.dbg.declare(metadata i8* %error_code, metadata !14388, metadata !DIExpression()), !dbg !14389
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14390, metadata !DIExpression()), !dbg !14391
  %arraydecay = getelementptr inbounds [28 x i8], [28 x i8]* %mcc_pl, i64 0, i64 0, !dbg !14392
  %7 = load i32, i32* %fwhandle.addr, align 4, !dbg !14393
  call void @mlxsw_reg_mcc_pack(i8* %arraydecay, i32 0, i16 zeroext 0, i32 %7, i32 0) #11, !dbg !14394
  %8 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !14395
  %arraydecay2 = getelementptr inbounds [28 x i8], [28 x i8]* %mcc_pl, i64 0, i64 0, !dbg !14396
  %call = call i32 @mlxsw_reg_query(%struct.mlxsw_core* %8, %struct.mlxsw_reg_info* @mlxsw_reg_mcc, i8* %arraydecay2) #11, !dbg !14397
  store i32 %call, i32* %err, align 4, !dbg !14398
  %9 = load i32, i32* %err, align 4, !dbg !14399
  %tobool = icmp ne i32 %9, 0, !dbg !14399
  br i1 %tobool, label %if.then, label %if.end, !dbg !14401

if.then:                                          ; preds = %do.end
  %10 = load i32, i32* %err, align 4, !dbg !14402
  store i32 %10, i32* %retval, align 4, !dbg !14403
  br label %return, !dbg !14403

if.end:                                           ; preds = %do.end
  %arraydecay3 = getelementptr inbounds [28 x i8], [28 x i8]* %mcc_pl, i64 0, i64 0, !dbg !14404
  call void @mlxsw_reg_mcc_unpack(i8* %arraydecay3, i32* null, i8* %error_code, i8* %control_state) #11, !dbg !14405
  %11 = load i8, i8* %control_state, align 1, !dbg !14406
  %conv = zext i8 %11 to i32, !dbg !14406
  %12 = load i32*, i32** %fsm_state.addr, align 8, !dbg !14407
  store i32 %conv, i32* %12, align 4, !dbg !14408
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x357, metadata !14409, metadata !DIExpression()), !dbg !14411
  %13 = load i8, i8* %error_code, align 1, !dbg !14411
  %conv4 = zext i8 %13 to i32, !dbg !14411
  store i32 %conv4, i32* %__UNIQUE_ID___x357, align 4, !dbg !14411
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y358, metadata !14412, metadata !DIExpression()), !dbg !14411
  store i32 10, i32* %__UNIQUE_ID___y358, align 4, !dbg !14411
  %14 = load i32, i32* %__UNIQUE_ID___x357, align 4, !dbg !14411
  %15 = load i32, i32* %__UNIQUE_ID___y358, align 4, !dbg !14411
  %cmp = icmp ult i32 %14, %15, !dbg !14411
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !14411

cond.true:                                        ; preds = %if.end
  %16 = load i32, i32* %__UNIQUE_ID___x357, align 4, !dbg !14411
  br label %cond.end, !dbg !14411

cond.false:                                       ; preds = %if.end
  %17 = load i32, i32* %__UNIQUE_ID___y358, align 4, !dbg !14411
  br label %cond.end, !dbg !14411

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %16, %cond.true ], [ %17, %cond.false ], !dbg !14411
  store i32 %cond, i32* %tmp5, align 4, !dbg !14411
  %18 = load i32, i32* %tmp5, align 4, !dbg !14411
  %19 = load i32*, i32** %fsm_state_err.addr, align 8, !dbg !14413
  store i32 %18, i32* %19, align 4, !dbg !14414
  store i32 0, i32* %retval, align 4, !dbg !14415
  br label %return, !dbg !14415

return:                                           ; preds = %cond.end, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !14416
  ret i32 %20, !dbg !14416
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_core_fw_fsm_cancel(%struct.mlxfw_dev* %mlxfw_dev, i32 %fwhandle) #0 !dbg !14417 {
entry:
  %mlxfw_dev.addr = alloca %struct.mlxfw_dev*, align 8
  %fwhandle.addr = alloca i32, align 4
  %mlxsw_core_fw_info = alloca %struct.mlxsw_core_fw_info*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_core_fw_info*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mcc_pl = alloca [28 x i8], align 16
  store %struct.mlxfw_dev* %mlxfw_dev, %struct.mlxfw_dev** %mlxfw_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxfw_dev** %mlxfw_dev.addr, metadata !14418, metadata !DIExpression()), !dbg !14419
  store i32 %fwhandle, i32* %fwhandle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fwhandle.addr, metadata !14420, metadata !DIExpression()), !dbg !14421
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core_fw_info** %mlxsw_core_fw_info, metadata !14422, metadata !DIExpression()), !dbg !14423
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14424, metadata !DIExpression()), !dbg !14426
  %0 = load %struct.mlxfw_dev*, %struct.mlxfw_dev** %mlxfw_dev.addr, align 8, !dbg !14426
  %1 = bitcast %struct.mlxfw_dev* %0 to i8*, !dbg !14426
  store i8* %1, i8** %__mptr, align 8, !dbg !14426
  br label %do.body, !dbg !14426

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14427

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !14426
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !14426
  %3 = bitcast i8* %add.ptr to %struct.mlxsw_core_fw_info*, !dbg !14426
  store %struct.mlxsw_core_fw_info* %3, %struct.mlxsw_core_fw_info** %tmp, align 8, !dbg !14427
  %4 = load %struct.mlxsw_core_fw_info*, %struct.mlxsw_core_fw_info** %tmp, align 8, !dbg !14426
  store %struct.mlxsw_core_fw_info* %4, %struct.mlxsw_core_fw_info** %mlxsw_core_fw_info, align 8, !dbg !14423
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !14429, metadata !DIExpression()), !dbg !14430
  %5 = load %struct.mlxsw_core_fw_info*, %struct.mlxsw_core_fw_info** %mlxsw_core_fw_info, align 8, !dbg !14431
  %mlxsw_core1 = getelementptr inbounds %struct.mlxsw_core_fw_info, %struct.mlxsw_core_fw_info* %5, i32 0, i32 1, !dbg !14432
  %6 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core1, align 8, !dbg !14432
  store %struct.mlxsw_core* %6, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !14430
  call void @llvm.dbg.declare(metadata [28 x i8]* %mcc_pl, metadata !14433, metadata !DIExpression()), !dbg !14434
  %arraydecay = getelementptr inbounds [28 x i8], [28 x i8]* %mcc_pl, i64 0, i64 0, !dbg !14435
  %7 = load i32, i32* %fwhandle.addr, align 4, !dbg !14436
  call void @mlxsw_reg_mcc_pack(i8* %arraydecay, i32 8, i16 zeroext 0, i32 %7, i32 0) #11, !dbg !14437
  %8 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !14438
  %arraydecay2 = getelementptr inbounds [28 x i8], [28 x i8]* %mcc_pl, i64 0, i64 0, !dbg !14439
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %8, %struct.mlxsw_reg_info* @mlxsw_reg_mcc, i8* %arraydecay2) #11, !dbg !14440
  ret void, !dbg !14441
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_core_fw_fsm_release(%struct.mlxfw_dev* %mlxfw_dev, i32 %fwhandle) #0 !dbg !14442 {
entry:
  %mlxfw_dev.addr = alloca %struct.mlxfw_dev*, align 8
  %fwhandle.addr = alloca i32, align 4
  %mlxsw_core_fw_info = alloca %struct.mlxsw_core_fw_info*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_core_fw_info*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mcc_pl = alloca [28 x i8], align 16
  store %struct.mlxfw_dev* %mlxfw_dev, %struct.mlxfw_dev** %mlxfw_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxfw_dev** %mlxfw_dev.addr, metadata !14443, metadata !DIExpression()), !dbg !14444
  store i32 %fwhandle, i32* %fwhandle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fwhandle.addr, metadata !14445, metadata !DIExpression()), !dbg !14446
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core_fw_info** %mlxsw_core_fw_info, metadata !14447, metadata !DIExpression()), !dbg !14448
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14449, metadata !DIExpression()), !dbg !14451
  %0 = load %struct.mlxfw_dev*, %struct.mlxfw_dev** %mlxfw_dev.addr, align 8, !dbg !14451
  %1 = bitcast %struct.mlxfw_dev* %0 to i8*, !dbg !14451
  store i8* %1, i8** %__mptr, align 8, !dbg !14451
  br label %do.body, !dbg !14451

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14452

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !14451
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !14451
  %3 = bitcast i8* %add.ptr to %struct.mlxsw_core_fw_info*, !dbg !14451
  store %struct.mlxsw_core_fw_info* %3, %struct.mlxsw_core_fw_info** %tmp, align 8, !dbg !14452
  %4 = load %struct.mlxsw_core_fw_info*, %struct.mlxsw_core_fw_info** %tmp, align 8, !dbg !14451
  store %struct.mlxsw_core_fw_info* %4, %struct.mlxsw_core_fw_info** %mlxsw_core_fw_info, align 8, !dbg !14448
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !14454, metadata !DIExpression()), !dbg !14455
  %5 = load %struct.mlxsw_core_fw_info*, %struct.mlxsw_core_fw_info** %mlxsw_core_fw_info, align 8, !dbg !14456
  %mlxsw_core1 = getelementptr inbounds %struct.mlxsw_core_fw_info, %struct.mlxsw_core_fw_info* %5, i32 0, i32 1, !dbg !14457
  %6 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core1, align 8, !dbg !14457
  store %struct.mlxsw_core* %6, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !14455
  call void @llvm.dbg.declare(metadata [28 x i8]* %mcc_pl, metadata !14458, metadata !DIExpression()), !dbg !14459
  %arraydecay = getelementptr inbounds [28 x i8], [28 x i8]* %mcc_pl, i64 0, i64 0, !dbg !14460
  %7 = load i32, i32* %fwhandle.addr, align 4, !dbg !14461
  call void @mlxsw_reg_mcc_pack(i8* %arraydecay, i32 2, i16 zeroext 0, i32 %7, i32 0) #11, !dbg !14462
  %8 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !14463
  %arraydecay2 = getelementptr inbounds [28 x i8], [28 x i8]* %mcc_pl, i64 0, i64 0, !dbg !14464
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %8, %struct.mlxsw_reg_info* @mlxsw_reg_mcc, i8* %arraydecay2) #11, !dbg !14465
  ret void, !dbg !14466
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_mcqi_pack(i8* %payload, i16 zeroext %component_index) #0 !dbg !14467 {
entry:
  %payload.addr = alloca i8*, align 8
  %component_index.addr = alloca i16, align 2
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !14470, metadata !DIExpression()), !dbg !14471
  store i16 %component_index, i16* %component_index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %component_index.addr, metadata !14472, metadata !DIExpression()), !dbg !14473
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !14474
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_mcqi, i32 0, i32 1), align 2, !dbg !14474
  %conv = zext i16 %1 to i64, !dbg !14474
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !14474
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !14475
  %3 = load i16, i16* %component_index.addr, align 2, !dbg !14476
  %conv1 = zext i16 %3 to i32, !dbg !14476
  call void @mlxsw_reg_mcqi_component_index_set(i8* %2, i32 %conv1) #11, !dbg !14477
  %4 = load i8*, i8** %payload.addr, align 8, !dbg !14478
  call void @mlxsw_reg_mcqi_info_type_set(i8* %4, i32 0) #11, !dbg !14479
  %5 = load i8*, i8** %payload.addr, align 8, !dbg !14480
  call void @mlxsw_reg_mcqi_offset_set(i8* %5, i32 0) #11, !dbg !14481
  %6 = load i8*, i8** %payload.addr, align 8, !dbg !14482
  call void @mlxsw_reg_mcqi_data_size_set(i8* %6, i32 20) #11, !dbg !14483
  ret void, !dbg !14484
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_mcqi_unpack(i8* %payload, i32* %p_cap_max_component_size, i8* %p_cap_log_mcda_word_size, i16* %p_cap_mcda_max_write_size) #0 !dbg !14485 {
entry:
  %payload.addr = alloca i8*, align 8
  %p_cap_max_component_size.addr = alloca i32*, align 8
  %p_cap_log_mcda_word_size.addr = alloca i8*, align 8
  %p_cap_mcda_max_write_size.addr = alloca i16*, align 8
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !14488, metadata !DIExpression()), !dbg !14489
  store i32* %p_cap_max_component_size, i32** %p_cap_max_component_size.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p_cap_max_component_size.addr, metadata !14490, metadata !DIExpression()), !dbg !14491
  store i8* %p_cap_log_mcda_word_size, i8** %p_cap_log_mcda_word_size.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p_cap_log_mcda_word_size.addr, metadata !14492, metadata !DIExpression()), !dbg !14493
  store i16* %p_cap_mcda_max_write_size, i16** %p_cap_mcda_max_write_size.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %p_cap_mcda_max_write_size.addr, metadata !14494, metadata !DIExpression()), !dbg !14495
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !14496
  %call = call i32 @mlxsw_reg_mcqi_cap_max_component_size_get(i8* %0) #11, !dbg !14497
  %1 = load i32*, i32** %p_cap_max_component_size.addr, align 8, !dbg !14498
  store i32 %call, i32* %1, align 4, !dbg !14499
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !14500
  %call1 = call i32 @mlxsw_reg_mcqi_cap_log_mcda_word_size_get(i8* %2) #11, !dbg !14501
  %conv = trunc i32 %call1 to i8, !dbg !14501
  %3 = load i8*, i8** %p_cap_log_mcda_word_size.addr, align 8, !dbg !14502
  store i8 %conv, i8* %3, align 1, !dbg !14503
  %4 = load i8*, i8** %payload.addr, align 8, !dbg !14504
  %call2 = call i32 @mlxsw_reg_mcqi_cap_mcda_max_write_size_get(i8* %4) #11, !dbg !14505
  %conv3 = trunc i32 %call2 to i16, !dbg !14505
  %5 = load i16*, i16** %p_cap_mcda_max_write_size.addr, align 8, !dbg !14506
  store i16 %conv3, i16* %5, align 2, !dbg !14507
  ret void, !dbg !14508
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_mcqi_component_index_set(i8* %buf, i32 %val) #0 !dbg !14509 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14512, metadata !DIExpression()), !dbg !14513
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14514, metadata !DIExpression()), !dbg !14513
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14513
  %1 = load i32, i32* %val.addr, align 4, !dbg !14513
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mcqi_component_index_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !14513
  ret void, !dbg !14513
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_mcqi_info_type_set(i8* %buf, i32 %val) #0 !dbg !14515 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14516, metadata !DIExpression()), !dbg !14517
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14518, metadata !DIExpression()), !dbg !14517
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14517
  %1 = load i32, i32* %val.addr, align 4, !dbg !14517
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mcqi_info_type_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !14517
  ret void, !dbg !14517
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_mcqi_offset_set(i8* %buf, i32 %val) #0 !dbg !14519 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14520, metadata !DIExpression()), !dbg !14521
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14522, metadata !DIExpression()), !dbg !14521
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14521
  %1 = load i32, i32* %val.addr, align 4, !dbg !14521
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mcqi_offset_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !14521
  ret void, !dbg !14521
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_mcqi_data_size_set(i8* %buf, i32 %val) #0 !dbg !14523 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14524, metadata !DIExpression()), !dbg !14525
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14526, metadata !DIExpression()), !dbg !14525
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14525
  %1 = load i32, i32* %val.addr, align 4, !dbg !14525
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mcqi_data_size_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !14525
  ret void, !dbg !14525
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__mlxsw_item_set32(i8* %buf, %struct.mlxsw_item* %item, i16 zeroext %index, i32 %val) #0 !dbg !14527 {
entry:
  %buf.addr = alloca i8*, align 8
  %item.addr = alloca %struct.mlxsw_item*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  %offset = alloca i32, align 4
  %b = alloca i32*, align 8
  %mask = alloca i32, align 4
  %tmp = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14530, metadata !DIExpression()), !dbg !14531
  store %struct.mlxsw_item* %item, %struct.mlxsw_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_item** %item.addr, metadata !14532, metadata !DIExpression()), !dbg !14533
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !14534, metadata !DIExpression()), !dbg !14535
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14536, metadata !DIExpression()), !dbg !14537
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !14538, metadata !DIExpression()), !dbg !14539
  %0 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14540
  %1 = load i16, i16* %index.addr, align 2, !dbg !14541
  %call = call i32 @__mlxsw_item_offset(%struct.mlxsw_item* %0, i16 zeroext %1, i64 4) #11, !dbg !14542
  store i32 %call, i32* %offset, align 4, !dbg !14539
  call void @llvm.dbg.declare(metadata i32** %b, metadata !14543, metadata !DIExpression()), !dbg !14544
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !14545
  %3 = bitcast i8* %2 to i32*, !dbg !14546
  store i32* %3, i32** %b, align 8, !dbg !14544
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !14547, metadata !DIExpression()), !dbg !14548
  %4 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14549
  %size = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %4, i32 0, i32 6, !dbg !14549
  %bits = bitcast %union.anon.134* %size to i8*, !dbg !14549
  %5 = load i8, i8* %bits, align 2, !dbg !14549
  %conv = zext i8 %5 to i32, !dbg !14549
  %sub = sub i32 %conv, 1, !dbg !14549
  %sub1 = sub i32 63, %sub, !dbg !14549
  %sh_prom = zext i32 %sub1 to i64, !dbg !14549
  %shr = lshr i64 -1, %sh_prom, !dbg !14549
  %and = and i64 -1, %shr, !dbg !14549
  %add = add i64 0, %and, !dbg !14549
  %6 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14550
  %shift = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %6, i32 0, i32 3, !dbg !14551
  %7 = load i8, i8* %shift, align 2, !dbg !14551
  %conv2 = zext i8 %7 to i32, !dbg !14550
  %sh_prom3 = zext i32 %conv2 to i64, !dbg !14552
  %shl = shl i64 %add, %sh_prom3, !dbg !14552
  %conv4 = trunc i64 %shl to i32, !dbg !14549
  store i32 %conv4, i32* %mask, align 4, !dbg !14548
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !14553, metadata !DIExpression()), !dbg !14554
  %8 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14555
  %no_real_shift = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %8, i32 0, i32 5, !dbg !14557
  %9 = load i8, i8* %no_real_shift, align 8, !dbg !14557
  %tobool = trunc i8 %9 to i1, !dbg !14557
  br i1 %tobool, label %if.end, label %if.then, !dbg !14558

if.then:                                          ; preds = %entry
  %10 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14559
  %shift5 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %10, i32 0, i32 3, !dbg !14560
  %11 = load i8, i8* %shift5, align 2, !dbg !14560
  %conv6 = zext i8 %11 to i32, !dbg !14559
  %12 = load i32, i32* %val.addr, align 4, !dbg !14561
  %shl7 = shl i32 %12, %conv6, !dbg !14561
  store i32 %shl7, i32* %val.addr, align 4, !dbg !14561
  br label %if.end, !dbg !14562

if.end:                                           ; preds = %if.then, %entry
  %13 = load i32, i32* %mask, align 4, !dbg !14563
  %14 = load i32, i32* %val.addr, align 4, !dbg !14564
  %and8 = and i32 %14, %13, !dbg !14564
  store i32 %and8, i32* %val.addr, align 4, !dbg !14564
  %15 = load i32*, i32** %b, align 8, !dbg !14565
  %16 = load i32, i32* %offset, align 4, !dbg !14565
  %idxprom = zext i32 %16 to i64, !dbg !14565
  %arrayidx = getelementptr i32, i32* %15, i64 %idxprom, !dbg !14565
  %17 = load i32, i32* %arrayidx, align 4, !dbg !14565
  %18 = call i1 @llvm.is.constant.i32(i32 %17), !dbg !14565
  br i1 %18, label %cond.true, label %cond.false, !dbg !14565

cond.true:                                        ; preds = %if.end
  %19 = load i32*, i32** %b, align 8, !dbg !14565
  %20 = load i32, i32* %offset, align 4, !dbg !14565
  %idxprom9 = zext i32 %20 to i64, !dbg !14565
  %arrayidx10 = getelementptr i32, i32* %19, i64 %idxprom9, !dbg !14565
  %21 = load i32, i32* %arrayidx10, align 4, !dbg !14565
  %and11 = and i32 %21, 255, !dbg !14565
  %shl12 = shl i32 %and11, 24, !dbg !14565
  %22 = load i32*, i32** %b, align 8, !dbg !14565
  %23 = load i32, i32* %offset, align 4, !dbg !14565
  %idxprom13 = zext i32 %23 to i64, !dbg !14565
  %arrayidx14 = getelementptr i32, i32* %22, i64 %idxprom13, !dbg !14565
  %24 = load i32, i32* %arrayidx14, align 4, !dbg !14565
  %and15 = and i32 %24, 65280, !dbg !14565
  %shl16 = shl i32 %and15, 8, !dbg !14565
  %or = or i32 %shl12, %shl16, !dbg !14565
  %25 = load i32*, i32** %b, align 8, !dbg !14565
  %26 = load i32, i32* %offset, align 4, !dbg !14565
  %idxprom17 = zext i32 %26 to i64, !dbg !14565
  %arrayidx18 = getelementptr i32, i32* %25, i64 %idxprom17, !dbg !14565
  %27 = load i32, i32* %arrayidx18, align 4, !dbg !14565
  %and19 = and i32 %27, 16711680, !dbg !14565
  %shr20 = lshr i32 %and19, 8, !dbg !14565
  %or21 = or i32 %or, %shr20, !dbg !14565
  %28 = load i32*, i32** %b, align 8, !dbg !14565
  %29 = load i32, i32* %offset, align 4, !dbg !14565
  %idxprom22 = zext i32 %29 to i64, !dbg !14565
  %arrayidx23 = getelementptr i32, i32* %28, i64 %idxprom22, !dbg !14565
  %30 = load i32, i32* %arrayidx23, align 4, !dbg !14565
  %and24 = and i32 %30, -16777216, !dbg !14565
  %shr25 = lshr i32 %and24, 24, !dbg !14565
  %or26 = or i32 %or21, %shr25, !dbg !14565
  br label %cond.end, !dbg !14565

cond.false:                                       ; preds = %if.end
  %31 = load i32*, i32** %b, align 8, !dbg !14565
  %32 = load i32, i32* %offset, align 4, !dbg !14565
  %idxprom27 = zext i32 %32 to i64, !dbg !14565
  %arrayidx28 = getelementptr i32, i32* %31, i64 %idxprom27, !dbg !14565
  %33 = load i32, i32* %arrayidx28, align 4, !dbg !14565
  %call29 = call i32 @__fswab32(i32 %33) #12, !dbg !14565
  br label %cond.end, !dbg !14565

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or26, %cond.true ], [ %call29, %cond.false ], !dbg !14565
  store i32 %cond, i32* %tmp, align 4, !dbg !14566
  %34 = load i32, i32* %mask, align 4, !dbg !14567
  %neg = xor i32 %34, -1, !dbg !14568
  %35 = load i32, i32* %tmp, align 4, !dbg !14569
  %and30 = and i32 %35, %neg, !dbg !14569
  store i32 %and30, i32* %tmp, align 4, !dbg !14569
  %36 = load i32, i32* %val.addr, align 4, !dbg !14570
  %37 = load i32, i32* %tmp, align 4, !dbg !14571
  %or31 = or i32 %37, %36, !dbg !14571
  store i32 %or31, i32* %tmp, align 4, !dbg !14571
  %38 = load i32, i32* %tmp, align 4, !dbg !14572
  %39 = call i1 @llvm.is.constant.i32(i32 %38), !dbg !14572
  br i1 %39, label %cond.true32, label %cond.false44, !dbg !14572

cond.true32:                                      ; preds = %cond.end
  %40 = load i32, i32* %tmp, align 4, !dbg !14572
  %and33 = and i32 %40, 255, !dbg !14572
  %shl34 = shl i32 %and33, 24, !dbg !14572
  %41 = load i32, i32* %tmp, align 4, !dbg !14572
  %and35 = and i32 %41, 65280, !dbg !14572
  %shl36 = shl i32 %and35, 8, !dbg !14572
  %or37 = or i32 %shl34, %shl36, !dbg !14572
  %42 = load i32, i32* %tmp, align 4, !dbg !14572
  %and38 = and i32 %42, 16711680, !dbg !14572
  %shr39 = lshr i32 %and38, 8, !dbg !14572
  %or40 = or i32 %or37, %shr39, !dbg !14572
  %43 = load i32, i32* %tmp, align 4, !dbg !14572
  %and41 = and i32 %43, -16777216, !dbg !14572
  %shr42 = lshr i32 %and41, 24, !dbg !14572
  %or43 = or i32 %or40, %shr42, !dbg !14572
  br label %cond.end46, !dbg !14572

cond.false44:                                     ; preds = %cond.end
  %44 = load i32, i32* %tmp, align 4, !dbg !14572
  %call45 = call i32 @__fswab32(i32 %44) #12, !dbg !14572
  br label %cond.end46, !dbg !14572

cond.end46:                                       ; preds = %cond.false44, %cond.true32
  %cond47 = phi i32 [ %or43, %cond.true32 ], [ %call45, %cond.false44 ], !dbg !14572
  %45 = load i32*, i32** %b, align 8, !dbg !14573
  %46 = load i32, i32* %offset, align 4, !dbg !14574
  %idxprom48 = zext i32 %46 to i64, !dbg !14573
  %arrayidx49 = getelementptr i32, i32* %45, i64 %idxprom48, !dbg !14573
  store i32 %cond47, i32* %arrayidx49, align 4, !dbg !14575
  ret void, !dbg !14576
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_mcqi_cap_max_component_size_get(i8* %buf) #0 !dbg !14577 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14578, metadata !DIExpression()), !dbg !14579
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14579
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mcqi_cap_max_component_size_item to %struct.mlxsw_item*), i16 zeroext 0) #11, !dbg !14579
  ret i32 %call, !dbg !14579
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_mcqi_cap_log_mcda_word_size_get(i8* %buf) #0 !dbg !14580 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14581, metadata !DIExpression()), !dbg !14582
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14582
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mcqi_cap_log_mcda_word_size_item to %struct.mlxsw_item*), i16 zeroext 0) #11, !dbg !14582
  ret i32 %call, !dbg !14582
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_mcqi_cap_mcda_max_write_size_get(i8* %buf) #0 !dbg !14583 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14584, metadata !DIExpression()), !dbg !14585
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14585
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mcqi_cap_mcda_max_write_size_item to %struct.mlxsw_item*), i16 zeroext 0) #11, !dbg !14585
  ret i32 %call, !dbg !14585
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_mcc_pack(i8* %payload, i32 %instr, i16 zeroext %component_index, i32 %update_handle, i32 %component_size) #0 !dbg !14586 {
entry:
  %payload.addr = alloca i8*, align 8
  %instr.addr = alloca i32, align 4
  %component_index.addr = alloca i16, align 2
  %update_handle.addr = alloca i32, align 4
  %component_size.addr = alloca i32, align 4
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !14589, metadata !DIExpression()), !dbg !14590
  store i32 %instr, i32* %instr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %instr.addr, metadata !14591, metadata !DIExpression()), !dbg !14592
  store i16 %component_index, i16* %component_index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %component_index.addr, metadata !14593, metadata !DIExpression()), !dbg !14594
  store i32 %update_handle, i32* %update_handle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %update_handle.addr, metadata !14595, metadata !DIExpression()), !dbg !14596
  store i32 %component_size, i32* %component_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %component_size.addr, metadata !14597, metadata !DIExpression()), !dbg !14598
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !14599
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_mcc, i32 0, i32 1), align 2, !dbg !14599
  %conv = zext i16 %1 to i64, !dbg !14599
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !14599
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !14600
  %3 = load i32, i32* %instr.addr, align 4, !dbg !14601
  call void @mlxsw_reg_mcc_instruction_set(i8* %2, i32 %3) #11, !dbg !14602
  %4 = load i8*, i8** %payload.addr, align 8, !dbg !14603
  %5 = load i16, i16* %component_index.addr, align 2, !dbg !14604
  %conv1 = zext i16 %5 to i32, !dbg !14604
  call void @mlxsw_reg_mcc_component_index_set(i8* %4, i32 %conv1) #11, !dbg !14605
  %6 = load i8*, i8** %payload.addr, align 8, !dbg !14606
  %7 = load i32, i32* %update_handle.addr, align 4, !dbg !14607
  call void @mlxsw_reg_mcc_update_handle_set(i8* %6, i32 %7) #11, !dbg !14608
  %8 = load i8*, i8** %payload.addr, align 8, !dbg !14609
  %9 = load i32, i32* %component_size.addr, align 4, !dbg !14610
  call void @mlxsw_reg_mcc_component_size_set(i8* %8, i32 %9) #11, !dbg !14611
  ret void, !dbg !14612
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_mcc_unpack(i8* %payload, i32* %p_update_handle, i8* %p_error_code, i8* %p_control_state) #0 !dbg !14613 {
entry:
  %payload.addr = alloca i8*, align 8
  %p_update_handle.addr = alloca i32*, align 8
  %p_error_code.addr = alloca i8*, align 8
  %p_control_state.addr = alloca i8*, align 8
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !14616, metadata !DIExpression()), !dbg !14617
  store i32* %p_update_handle, i32** %p_update_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p_update_handle.addr, metadata !14618, metadata !DIExpression()), !dbg !14619
  store i8* %p_error_code, i8** %p_error_code.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p_error_code.addr, metadata !14620, metadata !DIExpression()), !dbg !14621
  store i8* %p_control_state, i8** %p_control_state.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p_control_state.addr, metadata !14622, metadata !DIExpression()), !dbg !14623
  %0 = load i32*, i32** %p_update_handle.addr, align 8, !dbg !14624
  %tobool = icmp ne i32* %0, null, !dbg !14624
  br i1 %tobool, label %if.then, label %if.end, !dbg !14626

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %payload.addr, align 8, !dbg !14627
  %call = call i32 @mlxsw_reg_mcc_update_handle_get(i8* %1) #11, !dbg !14628
  %2 = load i32*, i32** %p_update_handle.addr, align 8, !dbg !14629
  store i32 %call, i32* %2, align 4, !dbg !14630
  br label %if.end, !dbg !14631

if.end:                                           ; preds = %if.then, %entry
  %3 = load i8*, i8** %p_error_code.addr, align 8, !dbg !14632
  %tobool1 = icmp ne i8* %3, null, !dbg !14632
  br i1 %tobool1, label %if.then2, label %if.end4, !dbg !14634

if.then2:                                         ; preds = %if.end
  %4 = load i8*, i8** %payload.addr, align 8, !dbg !14635
  %call3 = call i32 @mlxsw_reg_mcc_error_code_get(i8* %4) #11, !dbg !14636
  %conv = trunc i32 %call3 to i8, !dbg !14636
  %5 = load i8*, i8** %p_error_code.addr, align 8, !dbg !14637
  store i8 %conv, i8* %5, align 1, !dbg !14638
  br label %if.end4, !dbg !14639

if.end4:                                          ; preds = %if.then2, %if.end
  %6 = load i8*, i8** %p_control_state.addr, align 8, !dbg !14640
  %tobool5 = icmp ne i8* %6, null, !dbg !14640
  br i1 %tobool5, label %if.then6, label %if.end9, !dbg !14642

if.then6:                                         ; preds = %if.end4
  %7 = load i8*, i8** %payload.addr, align 8, !dbg !14643
  %call7 = call i32 @mlxsw_reg_mcc_control_state_get(i8* %7) #11, !dbg !14644
  %conv8 = trunc i32 %call7 to i8, !dbg !14644
  %8 = load i8*, i8** %p_control_state.addr, align 8, !dbg !14645
  store i8 %conv8, i8* %8, align 1, !dbg !14646
  br label %if.end9, !dbg !14647

if.end9:                                          ; preds = %if.then6, %if.end4
  ret void, !dbg !14648
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_mcc_instruction_set(i8* %buf, i32 %val) #0 !dbg !14649 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14650, metadata !DIExpression()), !dbg !14651
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14652, metadata !DIExpression()), !dbg !14651
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14651
  %1 = load i32, i32* %val.addr, align 4, !dbg !14651
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mcc_instruction_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !14651
  ret void, !dbg !14651
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_mcc_component_index_set(i8* %buf, i32 %val) #0 !dbg !14653 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14654, metadata !DIExpression()), !dbg !14655
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14656, metadata !DIExpression()), !dbg !14655
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14655
  %1 = load i32, i32* %val.addr, align 4, !dbg !14655
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mcc_component_index_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !14655
  ret void, !dbg !14655
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_mcc_update_handle_set(i8* %buf, i32 %val) #0 !dbg !14657 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14658, metadata !DIExpression()), !dbg !14659
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14660, metadata !DIExpression()), !dbg !14659
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14659
  %1 = load i32, i32* %val.addr, align 4, !dbg !14659
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mcc_update_handle_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !14659
  ret void, !dbg !14659
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_mcc_component_size_set(i8* %buf, i32 %val) #0 !dbg !14661 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14662, metadata !DIExpression()), !dbg !14663
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14664, metadata !DIExpression()), !dbg !14663
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14663
  %1 = load i32, i32* %val.addr, align 4, !dbg !14663
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mcc_component_size_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !14663
  ret void, !dbg !14663
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_mcc_update_handle_get(i8* %buf) #0 !dbg !14665 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14666, metadata !DIExpression()), !dbg !14667
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14667
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mcc_update_handle_item to %struct.mlxsw_item*), i16 zeroext 0) #11, !dbg !14667
  ret i32 %call, !dbg !14667
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_mcc_error_code_get(i8* %buf) #0 !dbg !14668 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14669, metadata !DIExpression()), !dbg !14670
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14670
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mcc_error_code_item to %struct.mlxsw_item*), i16 zeroext 0) #11, !dbg !14670
  ret i32 %call, !dbg !14670
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_mcc_control_state_get(i8* %buf) #0 !dbg !14671 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14672, metadata !DIExpression()), !dbg !14673
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14673
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mcc_control_state_item to %struct.mlxsw_item*), i16 zeroext 0) #11, !dbg !14673
  ret i32 %call, !dbg !14673
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_mcda_pack(i8* %payload, i32 %update_handle, i32 %offset, i16 zeroext %size, i8* %data) #0 !dbg !14674 {
entry:
  %payload.addr = alloca i8*, align 8
  %update_handle.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %size.addr = alloca i16, align 2
  %data.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !14677, metadata !DIExpression()), !dbg !14678
  store i32 %update_handle, i32* %update_handle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %update_handle.addr, metadata !14679, metadata !DIExpression()), !dbg !14680
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !14681, metadata !DIExpression()), !dbg !14682
  store i16 %size, i16* %size.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %size.addr, metadata !14683, metadata !DIExpression()), !dbg !14684
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !14685, metadata !DIExpression()), !dbg !14686
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14687, metadata !DIExpression()), !dbg !14688
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !14689
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_mcda, i32 0, i32 1), align 2, !dbg !14689
  %conv = zext i16 %1 to i64, !dbg !14689
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !14689
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !14690
  %3 = load i32, i32* %update_handle.addr, align 4, !dbg !14691
  call void @mlxsw_reg_mcda_update_handle_set(i8* %2, i32 %3) #11, !dbg !14692
  %4 = load i8*, i8** %payload.addr, align 8, !dbg !14693
  %5 = load i32, i32* %offset.addr, align 4, !dbg !14694
  call void @mlxsw_reg_mcda_offset_set(i8* %4, i32 %5) #11, !dbg !14695
  %6 = load i8*, i8** %payload.addr, align 8, !dbg !14696
  %7 = load i16, i16* %size.addr, align 2, !dbg !14697
  %conv1 = zext i16 %7 to i32, !dbg !14697
  call void @mlxsw_reg_mcda_size_set(i8* %6, i32 %conv1) #11, !dbg !14698
  store i32 0, i32* %i, align 4, !dbg !14699
  br label %for.cond, !dbg !14701

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %i, align 4, !dbg !14702
  %9 = load i16, i16* %size.addr, align 2, !dbg !14704
  %conv2 = zext i16 %9 to i32, !dbg !14704
  %div = sdiv i32 %conv2, 4, !dbg !14705
  %cmp = icmp slt i32 %8, %div, !dbg !14706
  br i1 %cmp, label %for.body, label %for.end, !dbg !14707

for.body:                                         ; preds = %for.cond
  %10 = load i8*, i8** %payload.addr, align 8, !dbg !14708
  %11 = load i32, i32* %i, align 4, !dbg !14709
  %conv4 = trunc i32 %11 to i16, !dbg !14709
  %12 = load i8*, i8** %data.addr, align 8, !dbg !14710
  %13 = load i32, i32* %i, align 4, !dbg !14711
  %mul = mul i32 %13, 4, !dbg !14712
  %idxprom = sext i32 %mul to i64, !dbg !14710
  %arrayidx = getelementptr i8, i8* %12, i64 %idxprom, !dbg !14710
  %14 = bitcast i8* %arrayidx to i32*, !dbg !14713
  %15 = load i32, i32* %14, align 4, !dbg !14713
  call void @mlxsw_reg_mcda_data_set(i8* %10, i16 zeroext %conv4, i32 %15) #11, !dbg !14714
  br label %for.inc, !dbg !14714

for.inc:                                          ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !dbg !14715
  %inc = add i32 %16, 1, !dbg !14715
  store i32 %inc, i32* %i, align 4, !dbg !14715
  br label %for.cond, !dbg !14716, !llvm.loop !14717

for.end:                                          ; preds = %for.cond
  ret void, !dbg !14719
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_mcda_update_handle_set(i8* %buf, i32 %val) #0 !dbg !14720 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14721, metadata !DIExpression()), !dbg !14722
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14723, metadata !DIExpression()), !dbg !14722
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14722
  %1 = load i32, i32* %val.addr, align 4, !dbg !14722
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mcda_update_handle_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !14722
  ret void, !dbg !14722
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_mcda_offset_set(i8* %buf, i32 %val) #0 !dbg !14724 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14725, metadata !DIExpression()), !dbg !14726
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14727, metadata !DIExpression()), !dbg !14726
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14726
  %1 = load i32, i32* %val.addr, align 4, !dbg !14726
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mcda_offset_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !14726
  ret void, !dbg !14726
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_mcda_size_set(i8* %buf, i32 %val) #0 !dbg !14728 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14729, metadata !DIExpression()), !dbg !14730
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14731, metadata !DIExpression()), !dbg !14730
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14730
  %1 = load i32, i32* %val.addr, align 4, !dbg !14730
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mcda_size_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !14730
  ret void, !dbg !14730
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_mcda_data_set(i8* %buf, i16 zeroext %index, i32 %val) #0 !dbg !14732 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14735, metadata !DIExpression()), !dbg !14736
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !14737, metadata !DIExpression()), !dbg !14736
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14738, metadata !DIExpression()), !dbg !14736
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14736
  %1 = load i16, i16* %index.addr, align 2, !dbg !14736
  %2 = load i32, i32* %val.addr, align 4, !dbg !14736
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mcda_data_item to %struct.mlxsw_item*), i16 zeroext %1, i32 %2) #11, !dbg !14736
  ret void, !dbg !14736
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #0 !dbg !14739 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !14742, metadata !DIExpression()), !dbg !14743
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14744, metadata !DIExpression()), !dbg !14745
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !14746, metadata !DIExpression()), !dbg !14747
  %0 = load i64, i64* %n.addr, align 8, !dbg !14748
  %1 = load i64, i64* %size.addr, align 8, !dbg !14749
  %2 = load i32, i32* %flags.addr, align 4, !dbg !14750
  %or = or i32 %2, 256, !dbg !14751
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #11, !dbg !14752
  ret i8* %call, !dbg !14753
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #0 !dbg !14754 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !9589, metadata !DIExpression()), !dbg !14755
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !9601, metadata !DIExpression()), !dbg !14759
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !9603, metadata !DIExpression()), !dbg !14760
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !9605, metadata !DIExpression()), !dbg !14761
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !9607, metadata !DIExpression()), !dbg !14762
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !9613, metadata !DIExpression()), !dbg !14764
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !9619, metadata !DIExpression()), !dbg !14766
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !9628, metadata !DIExpression()), !dbg !14769
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !9630, metadata !DIExpression()), !dbg !14770
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !9632, metadata !DIExpression()), !dbg !14771
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !9634, metadata !DIExpression()), !dbg !14772
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !9636, metadata !DIExpression()), !dbg !14773
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9638, metadata !DIExpression()), !dbg !14774
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !9640, metadata !DIExpression()), !dbg !14775
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !9642, metadata !DIExpression()), !dbg !14776
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !14777, metadata !DIExpression()), !dbg !14778
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14779, metadata !DIExpression()), !dbg !14780
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !14781, metadata !DIExpression()), !dbg !14782
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !14783, metadata !DIExpression()), !dbg !14784
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !14785, metadata !DIExpression()), !dbg !14788
  %0 = load i64, i64* %n.addr, align 8, !dbg !14788
  store i64 %0, i64* %__a, align 8, !dbg !14788
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !14789, metadata !DIExpression()), !dbg !14788
  %1 = load i64, i64* %size.addr, align 8, !dbg !14788
  store i64 %1, i64* %__b, align 8, !dbg !14788
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !14790, metadata !DIExpression()), !dbg !14788
  store i64* %bytes, i64** %__d, align 8, !dbg !14788
  %cmp = icmp eq i64* %__a, %__b, !dbg !14788
  %conv = zext i1 %cmp to i32, !dbg !14788
  %2 = load i64*, i64** %__d, align 8, !dbg !14788
  %cmp1 = icmp eq i64* %__a, %2, !dbg !14788
  %conv2 = zext i1 %cmp1 to i32, !dbg !14788
  %3 = load i64, i64* %__a, align 8, !dbg !14788
  %4 = load i64, i64* %__b, align 8, !dbg !14788
  %5 = load i64*, i64** %__d, align 8, !dbg !14788
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !14788
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !14788
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !14788
  store i64 %8, i64* %5, align 8, !dbg !14788
  %frombool = zext i1 %7 to i8, !dbg !14788
  store i8 %frombool, i8* %tmp, align 1, !dbg !14788
  %9 = load i8, i8* %tmp, align 1, !dbg !14788
  %tobool = trunc i8 %9 to i1, !dbg !14788
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #11, !dbg !14791
  %lnot = xor i1 %call, true, !dbg !14791
  %lnot3 = xor i1 %lnot, true, !dbg !14791
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !14791
  %conv4 = sext i32 %lnot.ext to i64, !dbg !14791
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !14791
  br i1 %tobool5, label %if.then, label %if.end, !dbg !14792

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !14793
  br label %return, !dbg !14793

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !14794
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !14795
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !14796

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !14797
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !14798
  br i1 %13, label %if.then6, label %if.end8, !dbg !14799

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !14800
  %15 = load i32, i32* %flags.addr, align 4, !dbg !14801
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !14802
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #10, !dbg !14803
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !14804

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !14805
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !14806
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !14807

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !14808
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !14809
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !14810
  %call.i.i = call i32 @get_order(i64 %21) #12, !dbg !14811
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !14773
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !14812
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !14813
  %24 = load i32, i32* %order.i.i, align 4, !dbg !14814
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !14815
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !14816
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !14817
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #13, !dbg !14818
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !14818
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !14818
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !14818
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !14818
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !14819
  br label %kmalloc.exit, !dbg !14819

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !14820
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14821
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !14821
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !14822

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !14823
  br label %kmalloc_index.exit.i, !dbg !14823

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14824
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !14825
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !14826

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !14827
  br label %kmalloc_index.exit.i, !dbg !14827

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14828
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !14829
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !14830

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14831
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !14832
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !14833

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !14834
  br label %kmalloc_index.exit.i, !dbg !14834

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14835
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !14836
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !14837

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14838
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !14839
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !14840

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !14841
  br label %kmalloc_index.exit.i, !dbg !14841

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14842
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !14843
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !14844

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !14845
  br label %kmalloc_index.exit.i, !dbg !14845

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14846
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !14847
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !14848

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !14849
  br label %kmalloc_index.exit.i, !dbg !14849

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14850
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !14851
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !14852

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !14853
  br label %kmalloc_index.exit.i, !dbg !14853

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14854
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !14855
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !14856

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !14857
  br label %kmalloc_index.exit.i, !dbg !14857

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14858
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !14859
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !14860

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !14861
  br label %kmalloc_index.exit.i, !dbg !14861

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14862
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !14863
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !14864

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !14865
  br label %kmalloc_index.exit.i, !dbg !14865

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14866
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !14867
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !14868

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !14869
  br label %kmalloc_index.exit.i, !dbg !14869

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14870
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !14871
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !14872

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !14873
  br label %kmalloc_index.exit.i, !dbg !14873

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14874
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !14875
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !14876

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !14877
  br label %kmalloc_index.exit.i, !dbg !14877

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14878
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !14879
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !14880

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !14881
  br label %kmalloc_index.exit.i, !dbg !14881

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14882
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !14883
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !14884

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !14885
  br label %kmalloc_index.exit.i, !dbg !14885

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14886
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !14887
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !14888

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !14889
  br label %kmalloc_index.exit.i, !dbg !14889

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14890
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !14891
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !14892

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !14893
  br label %kmalloc_index.exit.i, !dbg !14893

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14894
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !14895
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !14896

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !14897
  br label %kmalloc_index.exit.i, !dbg !14897

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14898
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !14899
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !14900

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !14901
  br label %kmalloc_index.exit.i, !dbg !14901

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14902
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !14903
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !14904

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !14905
  br label %kmalloc_index.exit.i, !dbg !14905

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14906
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !14907
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !14908

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !14909
  br label %kmalloc_index.exit.i, !dbg !14909

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14910
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !14911
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !14912

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !14913
  br label %kmalloc_index.exit.i, !dbg !14913

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14914
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !14915
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !14916

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !14917
  br label %kmalloc_index.exit.i, !dbg !14917

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14918
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !14919
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !14920

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !14921
  br label %kmalloc_index.exit.i, !dbg !14921

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14922
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !14923
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !14924

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !14925
  br label %kmalloc_index.exit.i, !dbg !14925

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14926
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !14927
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !14928

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !14929
  br label %kmalloc_index.exit.i, !dbg !14929

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14930
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !14931
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !14932

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !14933
  br label %kmalloc_index.exit.i, !dbg !14933

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14934
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !14935
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !14936

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !14937
  br label %kmalloc_index.exit.i, !dbg !14937

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.119, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !14938, !srcloc !9829
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 233) #10, !dbg !14939, !srcloc !9833
  unreachable, !dbg !14940

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !14941
  store i32 %59, i32* %index.i, align 4, !dbg !14942
  %60 = load i32, i32* %index.i, align 4, !dbg !14943
  %tobool.i = icmp ne i32 %60, 0, !dbg !14943
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !14944

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !14945
  br label %kmalloc.exit, !dbg !14945

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !14946
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !14947
  %and.i.i = and i32 %62, 17, !dbg !14947
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !14947
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !14947
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !14947
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !14947
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !14948

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !14949
  br label %kmalloc_type.exit.i, !dbg !14949

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !14950
  %and2.i.i = and i32 %63, 1, !dbg !14951
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !14950
  %64 = zext i1 %tobool3.i.i to i64, !dbg !14950
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !14950
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !14952
  br label %kmalloc_type.exit.i, !dbg !14952

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !14953
  %idxprom.i = zext i32 %65 to i64, !dbg !14954
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !14954
  %66 = load i32, i32* %index.i, align 4, !dbg !14955
  %idxprom6.i = zext i32 %66 to i64, !dbg !14954
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !14954
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !14954
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !14956
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !14957
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !14958
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !14959
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #13, !dbg !14960
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !14960
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !14960
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !14960
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !14960
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !14761
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !14961
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !14962
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !14963
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !14964
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #13, !dbg !14965
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !14966
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !14967
  store i8* %76, i8** %retval.i, align 8, !dbg !14968
  br label %kmalloc.exit, !dbg !14968

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !14969
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !14970
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #13, !dbg !14971
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !14971
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !14971
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !14971
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !14971
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !14972
  br label %kmalloc.exit, !dbg !14972

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !14973
  store i8* %79, i8** %retval, align 8, !dbg !14974
  br label %return, !dbg !14974

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !14975
  %81 = load i32, i32* %flags.addr, align 4, !dbg !14976
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #11, !dbg !14977
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !14977
  %maskedptr = and i64 %ptrint, 7, !dbg !14977
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !14977
  call void @llvm.assume(i1 %maskcond), !dbg !14977
  store i8* %call9, i8** %retval, align 8, !dbg !14978
  br label %return, !dbg !14978

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !14979
  ret i8* %82, !dbg !14979
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #0 !dbg !14980 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !14984, metadata !DIExpression()), !dbg !14985
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !14986
  %tobool = trunc i8 %0 to i1, !dbg !14986
  %lnot = xor i1 %tobool, true, !dbg !14986
  %lnot1 = xor i1 %lnot, true, !dbg !14986
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !14986
  %conv = sext i32 %lnot.ext to i64, !dbg !14986
  %tobool2 = icmp ne i64 %conv, 0, !dbg !14986
  ret i1 %tobool2, !dbg !14987
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #8

; Function Attrs: noredzone
declare dso_local %struct.workqueue_struct* @alloc_workqueue(i8*, i32, i32, ...) #2

; Function Attrs: noredzone
declare dso_local void @get_random_bytes(i8*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_atomic64_set(%struct.atomic64_t* %v, i64 %i) #0 !dbg !14988 {
entry:
  %v.addr = alloca %struct.atomic64_t*, align 8
  %i.addr = alloca i64, align 8
  store %struct.atomic64_t* %v, %struct.atomic64_t** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr, metadata !14990, metadata !DIExpression()), !dbg !14991
  store i64 %i, i64* %i.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %i.addr, metadata !14992, metadata !DIExpression()), !dbg !14993
  br label %do.body, !dbg !14994

do.body:                                          ; preds = %entry
  %0 = load i64, i64* %i.addr, align 8, !dbg !14995
  %1 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr, align 8, !dbg !14995
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %1, i32 0, i32 0, !dbg !14995
  store volatile i64 %0, i64* %counter, align 8, !dbg !14995
  br label %do.end, !dbg !14995

do.end:                                           ; preds = %do.body
  ret void, !dbg !14997
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !14998 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !15002, metadata !DIExpression()), !dbg !15003
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !15004, metadata !DIExpression()), !dbg !15005
  ret i1 true, !dbg !15006
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !15007 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !15011, metadata !DIExpression()), !dbg !15012
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !15013, metadata !DIExpression()), !dbg !15014
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !15015, metadata !DIExpression()), !dbg !15016
  ret void, !dbg !15017
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_rx_listener_func(%struct.sk_buff* %skb, i8 zeroext %local_port, i8* %priv) #0 !dbg !15018 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %local_port.addr = alloca i8, align 1
  %priv.addr = alloca i8*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %trans = alloca %struct.mlxsw_reg_trans*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.list_head*, align 8
  %tmp4 = alloca %struct.mlxsw_reg_trans*, align 8
  %__mptr13 = alloca i8*, align 8
  %tmp16 = alloca %struct.list_head*, align 8
  %tmp21 = alloca %struct.mlxsw_reg_trans*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !15019, metadata !DIExpression()), !dbg !15020
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !15021, metadata !DIExpression()), !dbg !15022
  store i8* %priv, i8** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %priv.addr, metadata !15023, metadata !DIExpression()), !dbg !15024
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !15025, metadata !DIExpression()), !dbg !15026
  %0 = load i8*, i8** %priv.addr, align 8, !dbg !15027
  %1 = bitcast i8* %0 to %struct.mlxsw_core*, !dbg !15027
  store %struct.mlxsw_core* %1, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !15026
  call void @llvm.dbg.declare(metadata %struct.mlxsw_reg_trans** %trans, metadata !15028, metadata !DIExpression()), !dbg !15029
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !15030
  %3 = bitcast %struct.mlxsw_core* %2 to i8*, !dbg !15030
  %call = call %struct.devlink* @priv_to_devlink(i8* %3) #11, !dbg !15031
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15032
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %4, i32 0, i32 37, !dbg !15033
  %5 = load i8*, i8** %data, align 8, !dbg !15033
  %6 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15034
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %6, i32 0, i32 5, !dbg !15035
  %7 = load i32, i32* %len, align 8, !dbg !15035
  %conv = zext i32 %7 to i64, !dbg !15034
  call void @trace_devlink_hwmsg(%struct.devlink* %call, i1 zeroext true, i64 0, i8* %5, i64 %conv) #11, !dbg !15036
  %8 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15037
  call void @mlxsw_emad_tlv_parse(%struct.sk_buff* %8) #11, !dbg !15038
  %9 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15039
  %call1 = call zeroext i1 @mlxsw_emad_is_resp(%struct.sk_buff* %9) #11, !dbg !15041
  br i1 %call1, label %if.end, label %if.then, !dbg !15042

if.then:                                          ; preds = %entry
  br label %free_skb, !dbg !15043

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15044, metadata !DIExpression()), !dbg !15047
  br label %do.body, !dbg !15048

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !15050

do.end:                                           ; preds = %do.body
  %10 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !15048
  %emad = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %10, i32 0, i32 7, !dbg !15048
  %trans_list = getelementptr inbounds %struct.anon.129, %struct.anon.129* %emad, i32 0, i32 1, !dbg !15048
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %trans_list, i32 0, i32 0, !dbg !15048
  %11 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !15048
  store %struct.list_head* %11, %struct.list_head** %tmp, align 8, !dbg !15050
  %12 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !15048
  %13 = bitcast %struct.list_head* %12 to i8*, !dbg !15047
  store i8* %13, i8** %__mptr, align 8, !dbg !15047
  br label %do.body2, !dbg !15047

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !15052

do.end3:                                          ; preds = %do.body2
  %14 = load i8*, i8** %__mptr, align 8, !dbg !15047
  %add.ptr = getelementptr i8, i8* %14, i64 0, !dbg !15047
  %15 = bitcast i8* %add.ptr to %struct.mlxsw_reg_trans*, !dbg !15047
  store %struct.mlxsw_reg_trans* %15, %struct.mlxsw_reg_trans** %tmp4, align 8, !dbg !15052
  %16 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %tmp4, align 8, !dbg !15047
  store %struct.mlxsw_reg_trans* %16, %struct.mlxsw_reg_trans** %trans, align 8, !dbg !15054
  br label %for.cond, !dbg !15054

for.cond:                                         ; preds = %do.end20, %do.end3
  %17 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans, align 8, !dbg !15055
  %list = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %17, i32 0, i32 0, !dbg !15055
  %18 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !15055
  %emad5 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %18, i32 0, i32 7, !dbg !15055
  %trans_list6 = getelementptr inbounds %struct.anon.129, %struct.anon.129* %emad5, i32 0, i32 1, !dbg !15055
  %cmp = icmp ne %struct.list_head* %list, %trans_list6, !dbg !15055
  br i1 %cmp, label %for.body, label %for.end, !dbg !15054

for.body:                                         ; preds = %for.cond
  %19 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15057
  %call8 = call i64 @mlxsw_emad_get_tid(%struct.sk_buff* %19) #11, !dbg !15060
  %20 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans, align 8, !dbg !15061
  %tid = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %20, i32 0, i32 7, !dbg !15062
  %21 = load i64, i64* %tid, align 8, !dbg !15062
  %cmp9 = icmp eq i64 %call8, %21, !dbg !15063
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !15064

if.then11:                                        ; preds = %for.body
  %22 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !15065
  %23 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans, align 8, !dbg !15067
  %24 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15068
  call void @mlxsw_emad_process_response(%struct.mlxsw_core* %22, %struct.mlxsw_reg_trans* %23, %struct.sk_buff* %24) #11, !dbg !15069
  br label %for.end, !dbg !15070

if.end12:                                         ; preds = %for.body
  br label %for.inc, !dbg !15071

for.inc:                                          ; preds = %if.end12
  call void @llvm.dbg.declare(metadata i8** %__mptr13, metadata !15072, metadata !DIExpression()), !dbg !15074
  br label %do.body14, !dbg !15075

do.body14:                                        ; preds = %for.inc
  br label %do.end15, !dbg !15077

do.end15:                                         ; preds = %do.body14
  %25 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans, align 8, !dbg !15075
  %list17 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %25, i32 0, i32 0, !dbg !15075
  %next18 = getelementptr inbounds %struct.list_head, %struct.list_head* %list17, i32 0, i32 0, !dbg !15075
  %26 = load volatile %struct.list_head*, %struct.list_head** %next18, align 8, !dbg !15075
  store %struct.list_head* %26, %struct.list_head** %tmp16, align 8, !dbg !15077
  %27 = load %struct.list_head*, %struct.list_head** %tmp16, align 8, !dbg !15075
  %28 = bitcast %struct.list_head* %27 to i8*, !dbg !15074
  store i8* %28, i8** %__mptr13, align 8, !dbg !15074
  br label %do.body19, !dbg !15074

do.body19:                                        ; preds = %do.end15
  br label %do.end20, !dbg !15079

do.end20:                                         ; preds = %do.body19
  %29 = load i8*, i8** %__mptr13, align 8, !dbg !15074
  %add.ptr22 = getelementptr i8, i8* %29, i64 0, !dbg !15074
  %30 = bitcast i8* %add.ptr22 to %struct.mlxsw_reg_trans*, !dbg !15074
  store %struct.mlxsw_reg_trans* %30, %struct.mlxsw_reg_trans** %tmp21, align 8, !dbg !15079
  %31 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %tmp21, align 8, !dbg !15074
  store %struct.mlxsw_reg_trans* %31, %struct.mlxsw_reg_trans** %trans, align 8, !dbg !15055
  br label %for.cond, !dbg !15055, !llvm.loop !15081

for.end:                                          ; preds = %if.then11, %for.cond
  br label %free_skb, !dbg !15082

free_skb:                                         ; preds = %for.end, %if.then
  call void @llvm.dbg.label(metadata !15083), !dbg !15084
  %32 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15085
  call void @consume_skb(%struct.sk_buff* %32) #11, !dbg !15085
  ret void, !dbg !15086
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_devlink_hwmsg(%struct.devlink* %devlink, i1 zeroext %incoming, i64 %type, i8* %buf, i64 %len) #0 !dbg !15087 {
entry:
  %devlink.addr = alloca %struct.devlink*, align 8
  %incoming.addr = alloca i8, align 1
  %type.addr = alloca i64, align 8
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !15093, metadata !DIExpression()), !dbg !15094
  %frombool = zext i1 %incoming to i8
  store i8 %frombool, i8* %incoming.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %incoming.addr, metadata !15095, metadata !DIExpression()), !dbg !15094
  store i64 %type, i64* %type.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %type.addr, metadata !15096, metadata !DIExpression()), !dbg !15094
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15097, metadata !DIExpression()), !dbg !15094
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !15098, metadata !DIExpression()), !dbg !15094
  ret void, !dbg !15094
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_tlv_parse(%struct.sk_buff* %skb) #0 !dbg !15099 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %offsets = alloca %struct.mlxsw_emad_tlv_offsets*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !15100, metadata !DIExpression()), !dbg !15101
  call void @llvm.dbg.declare(metadata %struct.mlxsw_emad_tlv_offsets** %offsets, metadata !15102, metadata !DIExpression()), !dbg !15103
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15104
  %cb = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 3, !dbg !15105
  %arraydecay = getelementptr inbounds [48 x i8], [48 x i8]* %cb, i64 0, i64 0, !dbg !15104
  %1 = bitcast i8* %arraydecay to %struct.mlxsw_emad_tlv_offsets*, !dbg !15106
  store %struct.mlxsw_emad_tlv_offsets* %1, %struct.mlxsw_emad_tlv_offsets** %offsets, align 8, !dbg !15103
  %2 = load %struct.mlxsw_emad_tlv_offsets*, %struct.mlxsw_emad_tlv_offsets** %offsets, align 8, !dbg !15107
  %op_tlv = getelementptr inbounds %struct.mlxsw_emad_tlv_offsets, %struct.mlxsw_emad_tlv_offsets* %2, i32 0, i32 0, !dbg !15108
  store i16 16, i16* %op_tlv, align 2, !dbg !15109
  %3 = load %struct.mlxsw_emad_tlv_offsets*, %struct.mlxsw_emad_tlv_offsets** %offsets, align 8, !dbg !15110
  %string_tlv = getelementptr inbounds %struct.mlxsw_emad_tlv_offsets, %struct.mlxsw_emad_tlv_offsets* %3, i32 0, i32 1, !dbg !15111
  store i16 0, i16* %string_tlv, align 2, !dbg !15112
  %4 = load %struct.mlxsw_emad_tlv_offsets*, %struct.mlxsw_emad_tlv_offsets** %offsets, align 8, !dbg !15113
  %reg_tlv = getelementptr inbounds %struct.mlxsw_emad_tlv_offsets, %struct.mlxsw_emad_tlv_offsets* %4, i32 0, i32 2, !dbg !15114
  store i16 32, i16* %reg_tlv, align 2, !dbg !15115
  %5 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15116
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %5, i32 0, i32 37, !dbg !15118
  %6 = load i8*, i8** %data, align 8, !dbg !15118
  %7 = load %struct.mlxsw_emad_tlv_offsets*, %struct.mlxsw_emad_tlv_offsets** %offsets, align 8, !dbg !15119
  %reg_tlv1 = getelementptr inbounds %struct.mlxsw_emad_tlv_offsets, %struct.mlxsw_emad_tlv_offsets* %7, i32 0, i32 2, !dbg !15120
  %8 = load i16, i16* %reg_tlv1, align 2, !dbg !15120
  %conv = zext i16 %8 to i32, !dbg !15119
  %idx.ext = sext i32 %conv to i64, !dbg !15121
  %add.ptr = getelementptr i8, i8* %6, i64 %idx.ext, !dbg !15121
  %call = call zeroext i1 @mlxsw_emad_tlv_is_string_tlv(i8* %add.ptr) #11, !dbg !15122
  br i1 %call, label %if.then, label %if.end, !dbg !15123

if.then:                                          ; preds = %entry
  %9 = load %struct.mlxsw_emad_tlv_offsets*, %struct.mlxsw_emad_tlv_offsets** %offsets, align 8, !dbg !15124
  %reg_tlv2 = getelementptr inbounds %struct.mlxsw_emad_tlv_offsets, %struct.mlxsw_emad_tlv_offsets* %9, i32 0, i32 2, !dbg !15126
  %10 = load i16, i16* %reg_tlv2, align 2, !dbg !15126
  %11 = load %struct.mlxsw_emad_tlv_offsets*, %struct.mlxsw_emad_tlv_offsets** %offsets, align 8, !dbg !15127
  %string_tlv3 = getelementptr inbounds %struct.mlxsw_emad_tlv_offsets, %struct.mlxsw_emad_tlv_offsets* %11, i32 0, i32 1, !dbg !15128
  store i16 %10, i16* %string_tlv3, align 2, !dbg !15129
  %12 = load %struct.mlxsw_emad_tlv_offsets*, %struct.mlxsw_emad_tlv_offsets** %offsets, align 8, !dbg !15130
  %reg_tlv4 = getelementptr inbounds %struct.mlxsw_emad_tlv_offsets, %struct.mlxsw_emad_tlv_offsets* %12, i32 0, i32 2, !dbg !15131
  %13 = load i16, i16* %reg_tlv4, align 2, !dbg !15132
  %conv5 = zext i16 %13 to i64, !dbg !15132
  %add = add i64 %conv5, 132, !dbg !15132
  %conv6 = trunc i64 %add to i16, !dbg !15132
  store i16 %conv6, i16* %reg_tlv4, align 2, !dbg !15132
  br label %if.end, !dbg !15133

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !15134
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mlxsw_emad_is_resp(%struct.sk_buff* %skb) #0 !dbg !15135 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %op_tlv = alloca i8*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !15138, metadata !DIExpression()), !dbg !15139
  call void @llvm.dbg.declare(metadata i8** %op_tlv, metadata !15140, metadata !DIExpression()), !dbg !15141
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15142
  %call = call i8* @mlxsw_emad_op_tlv(%struct.sk_buff* %0) #11, !dbg !15143
  store i8* %call, i8** %op_tlv, align 8, !dbg !15144
  %1 = load i8*, i8** %op_tlv, align 8, !dbg !15145
  %call1 = call i32 @mlxsw_emad_op_tlv_r_get(i8* %1) #11, !dbg !15146
  %cmp = icmp eq i32 %call1, 1, !dbg !15147
  ret i1 %cmp, !dbg !15148
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mlxsw_emad_get_tid(%struct.sk_buff* %skb) #0 !dbg !15149 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %op_tlv = alloca i8*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !15152, metadata !DIExpression()), !dbg !15153
  call void @llvm.dbg.declare(metadata i8** %op_tlv, metadata !15154, metadata !DIExpression()), !dbg !15155
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15156
  %call = call i8* @mlxsw_emad_op_tlv(%struct.sk_buff* %0) #11, !dbg !15157
  store i8* %call, i8** %op_tlv, align 8, !dbg !15158
  %1 = load i8*, i8** %op_tlv, align 8, !dbg !15159
  %call1 = call i64 @mlxsw_emad_op_tlv_tid_get(i8* %1) #11, !dbg !15160
  ret i64 %call1, !dbg !15161
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_process_response(%struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_reg_trans* %trans, %struct.sk_buff* %skb) #0 !dbg !15162 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !15165, metadata !DIExpression()), !dbg !15171
  %c.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i.i, metadata !15176, metadata !DIExpression()), !dbg !15178
  %tmp.i.i = alloca i8, align 1
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !15179, metadata !DIExpression()), !dbg !15181
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !15183, metadata !DIExpression()), !dbg !15184
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !15185, metadata !DIExpression()), !dbg !15186
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %trans.addr = alloca %struct.mlxsw_reg_trans*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %err = alloca i32, align 4
  %reg_tlv = alloca i8*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !15187, metadata !DIExpression()), !dbg !15188
  store %struct.mlxsw_reg_trans* %trans, %struct.mlxsw_reg_trans** %trans.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_reg_trans** %trans.addr, metadata !15189, metadata !DIExpression()), !dbg !15190
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !15191, metadata !DIExpression()), !dbg !15192
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15193, metadata !DIExpression()), !dbg !15194
  %0 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !15195
  %active = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %0, i32 0, i32 9, !dbg !15196
  store %struct.atomic_t* %active, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !15197
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !15197
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !15198
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !15199
  %conv.i.i = trunc i64 %4 to i32, !dbg !15199
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #13, !dbg !15200
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !15201
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !15201
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #13, !dbg !15201
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !15202
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !15178
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !15178
  %9 = call i8 asm sideeffect "decl $0\0A\09/* output condition code e*/\0A", "=*m,={@cce},*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #10, !dbg !15178, !srcloc !15203
  store i8 %9, i8* %c.i.i, align 1, !dbg !15178
  %10 = load i8, i8* %c.i.i, align 1, !dbg !15178
  %tobool.i.i = trunc i8 %10 to i1, !dbg !15178
  %frombool.i.i = zext i1 %tobool.i.i to i8, !dbg !15178
  store i8 %frombool.i.i, i8* %tmp.i.i, align 1, !dbg !15178
  %11 = load i8, i8* %tmp.i.i, align 1, !dbg !15178
  %tobool1.i.i = trunc i8 %11 to i1, !dbg !15178
  br i1 %tobool1.i.i, label %if.end, label %if.then, !dbg !15204

if.then:                                          ; preds = %entry
  br label %if.end12, !dbg !15205

if.end:                                           ; preds = %entry
  %12 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15206
  %13 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !15207
  %emad_status = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %13, i32 0, i32 16, !dbg !15208
  %call1 = call i32 @mlxsw_emad_process_status_skb(%struct.sk_buff* %12, i32* %emad_status) #11, !dbg !15209
  store i32 %call1, i32* %err, align 4, !dbg !15210
  %14 = load i32, i32* %err, align 4, !dbg !15211
  %cmp = icmp eq i32 %14, -11, !dbg !15213
  br i1 %cmp, label %if.then2, label %if.else, !dbg !15214

if.then2:                                         ; preds = %if.end
  %15 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !15215
  %16 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !15217
  call void @mlxsw_emad_transmit_retry(%struct.mlxsw_core* %15, %struct.mlxsw_reg_trans* %16) #11, !dbg !15218
  br label %if.end12, !dbg !15219

if.else:                                          ; preds = %if.end
  %17 = load i32, i32* %err, align 4, !dbg !15220
  %cmp3 = icmp eq i32 %17, 0, !dbg !15223
  br i1 %cmp3, label %if.then4, label %if.else10, !dbg !15224

if.then4:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i8** %reg_tlv, metadata !15225, metadata !DIExpression()), !dbg !15227
  %18 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15228
  %call5 = call i8* @mlxsw_emad_reg_tlv(%struct.sk_buff* %18) #11, !dbg !15229
  store i8* %call5, i8** %reg_tlv, align 8, !dbg !15227
  %19 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !15230
  %cb = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %19, i32 0, i32 10, !dbg !15232
  %20 = load void (%struct.mlxsw_core*, i8*, i64, i64)*, void (%struct.mlxsw_core*, i8*, i64, i64)** %cb, align 8, !dbg !15232
  %tobool = icmp ne void (%struct.mlxsw_core*, i8*, i64, i64)* %20, null, !dbg !15230
  br i1 %tobool, label %if.then6, label %if.end9, !dbg !15233

if.then6:                                         ; preds = %if.then4
  %21 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !15234
  %cb7 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %21, i32 0, i32 10, !dbg !15235
  %22 = load void (%struct.mlxsw_core*, i8*, i64, i64)*, void (%struct.mlxsw_core*, i8*, i64, i64)** %cb7, align 8, !dbg !15235
  %23 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !15236
  %24 = load i8*, i8** %reg_tlv, align 8, !dbg !15237
  %call8 = call i8* @mlxsw_emad_reg_payload(i8* %24) #11, !dbg !15238
  %25 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !15239
  %reg = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %25, i32 0, i32 12, !dbg !15240
  %26 = load %struct.mlxsw_reg_info*, %struct.mlxsw_reg_info** %reg, align 8, !dbg !15240
  %len = getelementptr inbounds %struct.mlxsw_reg_info, %struct.mlxsw_reg_info* %26, i32 0, i32 1, !dbg !15241
  %27 = load i16, i16* %len, align 2, !dbg !15241
  %conv = zext i16 %27 to i64, !dbg !15239
  %28 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !15242
  %cb_priv = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %28, i32 0, i32 11, !dbg !15243
  %29 = load i64, i64* %cb_priv, align 8, !dbg !15243
  call void %22(%struct.mlxsw_core* %23, i8* %call8, i64 %conv, i64 %29) #11, !dbg !15234
  br label %if.end9, !dbg !15234

if.end9:                                          ; preds = %if.then6, %if.then4
  br label %if.end11, !dbg !15244

if.else10:                                        ; preds = %if.else
  %30 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15245
  %31 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !15247
  call void @mlxsw_emad_process_string_tlv(%struct.sk_buff* %30, %struct.mlxsw_reg_trans* %31) #11, !dbg !15248
  br label %if.end11

if.end11:                                         ; preds = %if.else10, %if.end9
  %32 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !15249
  %33 = load i32, i32* %err, align 4, !dbg !15250
  call void @mlxsw_emad_trans_finish(%struct.mlxsw_reg_trans* %32, i32 %33) #11, !dbg !15251
  br label %if.end12

if.end12:                                         ; preds = %if.then, %if.end11, %if.then2
  ret void, !dbg !15252
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mlxsw_emad_tlv_is_string_tlv(i8* %tlv) #0 !dbg !15253 {
entry:
  %tlv.addr = alloca i8*, align 8
  %tlv_type = alloca i8, align 1
  store i8* %tlv, i8** %tlv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tlv.addr, metadata !15256, metadata !DIExpression()), !dbg !15257
  call void @llvm.dbg.declare(metadata i8* %tlv_type, metadata !15258, metadata !DIExpression()), !dbg !15259
  %0 = load i8*, i8** %tlv.addr, align 8, !dbg !15260
  %call = call i32 @mlxsw_emad_string_tlv_type_get(i8* %0) #11, !dbg !15261
  %conv = trunc i32 %call to i8, !dbg !15261
  store i8 %conv, i8* %tlv_type, align 1, !dbg !15259
  %1 = load i8, i8* %tlv_type, align 1, !dbg !15262
  %conv1 = zext i8 %1 to i32, !dbg !15262
  %cmp = icmp eq i32 %conv1, 2, !dbg !15263
  ret i1 %cmp, !dbg !15264
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_emad_string_tlv_type_get(i8* %buf) #0 !dbg !15265 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15266, metadata !DIExpression()), !dbg !15267
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15267
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_emad_string_tlv_type_item to %struct.mlxsw_item*), i16 zeroext 0) #11, !dbg !15267
  ret i32 %call, !dbg !15267
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @mlxsw_emad_op_tlv(%struct.sk_buff* %skb) #0 !dbg !15268 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %offsets = alloca %struct.mlxsw_emad_tlv_offsets*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !15271, metadata !DIExpression()), !dbg !15272
  call void @llvm.dbg.declare(metadata %struct.mlxsw_emad_tlv_offsets** %offsets, metadata !15273, metadata !DIExpression()), !dbg !15274
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15275
  %cb = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 3, !dbg !15276
  %arraydecay = getelementptr inbounds [48 x i8], [48 x i8]* %cb, i64 0, i64 0, !dbg !15275
  %1 = bitcast i8* %arraydecay to %struct.mlxsw_emad_tlv_offsets*, !dbg !15277
  store %struct.mlxsw_emad_tlv_offsets* %1, %struct.mlxsw_emad_tlv_offsets** %offsets, align 8, !dbg !15274
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15278
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 37, !dbg !15279
  %3 = load i8*, i8** %data, align 8, !dbg !15279
  %4 = load %struct.mlxsw_emad_tlv_offsets*, %struct.mlxsw_emad_tlv_offsets** %offsets, align 8, !dbg !15280
  %op_tlv = getelementptr inbounds %struct.mlxsw_emad_tlv_offsets, %struct.mlxsw_emad_tlv_offsets* %4, i32 0, i32 0, !dbg !15281
  %5 = load i16, i16* %op_tlv, align 2, !dbg !15281
  %conv = zext i16 %5 to i32, !dbg !15280
  %idx.ext = sext i32 %conv to i64, !dbg !15282
  %add.ptr = getelementptr i8, i8* %3, i64 %idx.ext, !dbg !15282
  ret i8* %add.ptr, !dbg !15283
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_emad_op_tlv_r_get(i8* %buf) #0 !dbg !15284 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15285, metadata !DIExpression()), !dbg !15286
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15286
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_emad_op_tlv_r_item to %struct.mlxsw_item*), i16 zeroext 0) #11, !dbg !15286
  ret i32 %call, !dbg !15286
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mlxsw_emad_op_tlv_tid_get(i8* %buf) #0 !dbg !15287 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15290, metadata !DIExpression()), !dbg !15291
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15291
  %call = call i64 @__mlxsw_item_get64(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_emad_op_tlv_tid_item to %struct.mlxsw_item*), i16 zeroext 0) #11, !dbg !15291
  ret i64 %call, !dbg !15291
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__mlxsw_item_get64(i8* %buf, %struct.mlxsw_item* %item, i16 zeroext %index) #0 !dbg !15292 {
entry:
  %buf.addr = alloca i8*, align 8
  %item.addr = alloca %struct.mlxsw_item*, align 8
  %index.addr = alloca i16, align 2
  %offset = alloca i32, align 4
  %b = alloca i64*, align 8
  %tmp = alloca i64, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15295, metadata !DIExpression()), !dbg !15296
  store %struct.mlxsw_item* %item, %struct.mlxsw_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_item** %item.addr, metadata !15297, metadata !DIExpression()), !dbg !15298
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !15299, metadata !DIExpression()), !dbg !15300
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !15301, metadata !DIExpression()), !dbg !15302
  %0 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15303
  %1 = load i16, i16* %index.addr, align 2, !dbg !15304
  %call = call i32 @__mlxsw_item_offset(%struct.mlxsw_item* %0, i16 zeroext %1, i64 8) #11, !dbg !15305
  store i32 %call, i32* %offset, align 4, !dbg !15302
  call void @llvm.dbg.declare(metadata i64** %b, metadata !15306, metadata !DIExpression()), !dbg !15307
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !15308
  %3 = bitcast i8* %2 to i64*, !dbg !15309
  store i64* %3, i64** %b, align 8, !dbg !15307
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !15310, metadata !DIExpression()), !dbg !15311
  %4 = load i64*, i64** %b, align 8, !dbg !15312
  %5 = load i32, i32* %offset, align 4, !dbg !15312
  %idxprom = zext i32 %5 to i64, !dbg !15312
  %arrayidx = getelementptr i64, i64* %4, i64 %idxprom, !dbg !15312
  %6 = load i64, i64* %arrayidx, align 8, !dbg !15312
  %7 = call i1 @llvm.is.constant.i64(i64 %6), !dbg !15312
  br i1 %7, label %cond.true, label %cond.false, !dbg !15312

cond.true:                                        ; preds = %entry
  %8 = load i64*, i64** %b, align 8, !dbg !15312
  %9 = load i32, i32* %offset, align 4, !dbg !15312
  %idxprom1 = zext i32 %9 to i64, !dbg !15312
  %arrayidx2 = getelementptr i64, i64* %8, i64 %idxprom1, !dbg !15312
  %10 = load i64, i64* %arrayidx2, align 8, !dbg !15312
  %and = and i64 %10, 255, !dbg !15312
  %shl = shl i64 %and, 56, !dbg !15312
  %11 = load i64*, i64** %b, align 8, !dbg !15312
  %12 = load i32, i32* %offset, align 4, !dbg !15312
  %idxprom3 = zext i32 %12 to i64, !dbg !15312
  %arrayidx4 = getelementptr i64, i64* %11, i64 %idxprom3, !dbg !15312
  %13 = load i64, i64* %arrayidx4, align 8, !dbg !15312
  %and5 = and i64 %13, 65280, !dbg !15312
  %shl6 = shl i64 %and5, 40, !dbg !15312
  %or = or i64 %shl, %shl6, !dbg !15312
  %14 = load i64*, i64** %b, align 8, !dbg !15312
  %15 = load i32, i32* %offset, align 4, !dbg !15312
  %idxprom7 = zext i32 %15 to i64, !dbg !15312
  %arrayidx8 = getelementptr i64, i64* %14, i64 %idxprom7, !dbg !15312
  %16 = load i64, i64* %arrayidx8, align 8, !dbg !15312
  %and9 = and i64 %16, 16711680, !dbg !15312
  %shl10 = shl i64 %and9, 24, !dbg !15312
  %or11 = or i64 %or, %shl10, !dbg !15312
  %17 = load i64*, i64** %b, align 8, !dbg !15312
  %18 = load i32, i32* %offset, align 4, !dbg !15312
  %idxprom12 = zext i32 %18 to i64, !dbg !15312
  %arrayidx13 = getelementptr i64, i64* %17, i64 %idxprom12, !dbg !15312
  %19 = load i64, i64* %arrayidx13, align 8, !dbg !15312
  %and14 = and i64 %19, 4278190080, !dbg !15312
  %shl15 = shl i64 %and14, 8, !dbg !15312
  %or16 = or i64 %or11, %shl15, !dbg !15312
  %20 = load i64*, i64** %b, align 8, !dbg !15312
  %21 = load i32, i32* %offset, align 4, !dbg !15312
  %idxprom17 = zext i32 %21 to i64, !dbg !15312
  %arrayidx18 = getelementptr i64, i64* %20, i64 %idxprom17, !dbg !15312
  %22 = load i64, i64* %arrayidx18, align 8, !dbg !15312
  %and19 = and i64 %22, 1095216660480, !dbg !15312
  %shr = lshr i64 %and19, 8, !dbg !15312
  %or20 = or i64 %or16, %shr, !dbg !15312
  %23 = load i64*, i64** %b, align 8, !dbg !15312
  %24 = load i32, i32* %offset, align 4, !dbg !15312
  %idxprom21 = zext i32 %24 to i64, !dbg !15312
  %arrayidx22 = getelementptr i64, i64* %23, i64 %idxprom21, !dbg !15312
  %25 = load i64, i64* %arrayidx22, align 8, !dbg !15312
  %and23 = and i64 %25, 280375465082880, !dbg !15312
  %shr24 = lshr i64 %and23, 24, !dbg !15312
  %or25 = or i64 %or20, %shr24, !dbg !15312
  %26 = load i64*, i64** %b, align 8, !dbg !15312
  %27 = load i32, i32* %offset, align 4, !dbg !15312
  %idxprom26 = zext i32 %27 to i64, !dbg !15312
  %arrayidx27 = getelementptr i64, i64* %26, i64 %idxprom26, !dbg !15312
  %28 = load i64, i64* %arrayidx27, align 8, !dbg !15312
  %and28 = and i64 %28, 71776119061217280, !dbg !15312
  %shr29 = lshr i64 %and28, 40, !dbg !15312
  %or30 = or i64 %or25, %shr29, !dbg !15312
  %29 = load i64*, i64** %b, align 8, !dbg !15312
  %30 = load i32, i32* %offset, align 4, !dbg !15312
  %idxprom31 = zext i32 %30 to i64, !dbg !15312
  %arrayidx32 = getelementptr i64, i64* %29, i64 %idxprom31, !dbg !15312
  %31 = load i64, i64* %arrayidx32, align 8, !dbg !15312
  %and33 = and i64 %31, -72057594037927936, !dbg !15312
  %shr34 = lshr i64 %and33, 56, !dbg !15312
  %or35 = or i64 %or30, %shr34, !dbg !15312
  br label %cond.end, !dbg !15312

cond.false:                                       ; preds = %entry
  %32 = load i64*, i64** %b, align 8, !dbg !15312
  %33 = load i32, i32* %offset, align 4, !dbg !15312
  %idxprom36 = zext i32 %33 to i64, !dbg !15312
  %arrayidx37 = getelementptr i64, i64* %32, i64 %idxprom36, !dbg !15312
  %34 = load i64, i64* %arrayidx37, align 8, !dbg !15312
  %call38 = call i64 @__fswab64(i64 %34) #12, !dbg !15312
  br label %cond.end, !dbg !15312

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %or35, %cond.true ], [ %call38, %cond.false ], !dbg !15312
  store i64 %cond, i64* %tmp, align 8, !dbg !15313
  %35 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15314
  %shift = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %35, i32 0, i32 3, !dbg !15315
  %36 = load i8, i8* %shift, align 2, !dbg !15315
  %conv = zext i8 %36 to i32, !dbg !15314
  %37 = load i64, i64* %tmp, align 8, !dbg !15316
  %sh_prom = zext i32 %conv to i64, !dbg !15316
  %shr39 = lshr i64 %37, %sh_prom, !dbg !15316
  store i64 %shr39, i64* %tmp, align 8, !dbg !15316
  %38 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15317
  %size = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %38, i32 0, i32 6, !dbg !15317
  %bits = bitcast %union.anon.134* %size to i8*, !dbg !15317
  %39 = load i8, i8* %bits, align 2, !dbg !15317
  %conv40 = zext i8 %39 to i32, !dbg !15317
  %sub = sub i32 %conv40, 1, !dbg !15317
  %sub41 = sub i32 63, %sub, !dbg !15317
  %sh_prom42 = zext i32 %sub41 to i64, !dbg !15317
  %shr43 = lshr i64 -1, %sh_prom42, !dbg !15317
  %and44 = and i64 -1, %shr43, !dbg !15317
  %add = add i64 0, %and44, !dbg !15317
  %40 = load i64, i64* %tmp, align 8, !dbg !15318
  %and45 = and i64 %40, %add, !dbg !15318
  store i64 %and45, i64* %tmp, align 8, !dbg !15318
  %41 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15319
  %no_real_shift = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %41, i32 0, i32 5, !dbg !15321
  %42 = load i8, i8* %no_real_shift, align 8, !dbg !15321
  %tobool = trunc i8 %42 to i1, !dbg !15321
  br i1 %tobool, label %if.then, label %if.end, !dbg !15322

if.then:                                          ; preds = %cond.end
  %43 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15323
  %shift46 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %43, i32 0, i32 3, !dbg !15324
  %44 = load i8, i8* %shift46, align 2, !dbg !15324
  %conv47 = zext i8 %44 to i32, !dbg !15323
  %45 = load i64, i64* %tmp, align 8, !dbg !15325
  %sh_prom48 = zext i32 %conv47 to i64, !dbg !15325
  %shl49 = shl i64 %45, %sh_prom48, !dbg !15325
  store i64 %shl49, i64* %tmp, align 8, !dbg !15325
  br label %if.end, !dbg !15326

if.end:                                           ; preds = %if.then, %cond.end
  %46 = load i64, i64* %tmp, align 8, !dbg !15327
  ret i64 %46, !dbg !15328
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i64 @__fswab64(i64 %val) #7 !dbg !15329 {
entry:
  %val.addr = alloca i64, align 8
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !15332, metadata !DIExpression()), !dbg !15333
  %0 = load i64, i64* %val.addr, align 8, !dbg !15334
  %call = call i64 @__arch_swab64(i64 %0) #12, !dbg !15335
  ret i64 %call, !dbg !15336
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i64 @__arch_swab64(i64 %val) #7 !dbg !15337 {
entry:
  %val.addr = alloca i64, align 8
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !15338, metadata !DIExpression()), !dbg !15339
  %0 = load i64, i64* %val.addr, align 8, !dbg !15340
  %1 = call i64 asm "bswapq $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i64 %0) #15, !dbg !15341, !srcloc !15342
  store i64 %1, i64* %val.addr, align 8, !dbg !15341
  %2 = load i64, i64* %val.addr, align 8, !dbg !15343
  ret i64 %2, !dbg !15344
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_emad_process_status_skb(%struct.sk_buff* %skb, i32* %p_status) #0 !dbg !15345 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %p_status.addr = alloca i32*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !15349, metadata !DIExpression()), !dbg !15350
  store i32* %p_status, i32** %p_status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p_status.addr, metadata !15351, metadata !DIExpression()), !dbg !15352
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15353
  %call = call i8* @mlxsw_emad_op_tlv(%struct.sk_buff* %0) #11, !dbg !15354
  %1 = load i32*, i32** %p_status.addr, align 8, !dbg !15355
  %call1 = call i32 @mlxsw_emad_process_status(i8* %call, i32* %1) #11, !dbg !15356
  ret i32 %call1, !dbg !15357
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_transmit_retry(%struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_reg_trans* %trans) #0 !dbg !15358 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !15165, metadata !DIExpression()), !dbg !15361
  %c.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i.i, metadata !15176, metadata !DIExpression()), !dbg !15367
  %tmp.i.i = alloca i8, align 1
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !15179, metadata !DIExpression()), !dbg !15368
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !15183, metadata !DIExpression()), !dbg !15370
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !15185, metadata !DIExpression()), !dbg !15371
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %trans.addr = alloca %struct.mlxsw_reg_trans*, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !15372, metadata !DIExpression()), !dbg !15373
  store %struct.mlxsw_reg_trans* %trans, %struct.mlxsw_reg_trans** %trans.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_reg_trans** %trans.addr, metadata !15374, metadata !DIExpression()), !dbg !15375
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15376, metadata !DIExpression()), !dbg !15377
  %0 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !15378
  %retries = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %0, i32 0, i32 6, !dbg !15379
  %1 = load i32, i32* %retries, align 8, !dbg !15379
  %cmp = icmp ult i32 %1, 5, !dbg !15380
  br i1 %cmp, label %if.then, label %if.else, !dbg !15381

if.then:                                          ; preds = %entry
  %2 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !15382
  %retries1 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %2, i32 0, i32 6, !dbg !15383
  %3 = load i32, i32* %retries1, align 8, !dbg !15384
  %inc = add i32 %3, 1, !dbg !15384
  store i32 %inc, i32* %retries1, align 8, !dbg !15384
  %4 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !15385
  %core = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %4, i32 0, i32 2, !dbg !15386
  %5 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !15386
  %6 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !15387
  %call = call i32 @mlxsw_emad_transmit(%struct.mlxsw_core* %5, %struct.mlxsw_reg_trans* %6) #11, !dbg !15388
  store i32 %call, i32* %err, align 4, !dbg !15389
  %7 = load i32, i32* %err, align 4, !dbg !15390
  %cmp2 = icmp eq i32 %7, 0, !dbg !15392
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !15393

if.then3:                                         ; preds = %if.then
  br label %return, !dbg !15394

if.end:                                           ; preds = %if.then
  %8 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !15395
  %active = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %8, i32 0, i32 9, !dbg !15396
  store %struct.atomic_t* %active, %struct.atomic_t** %v.addr.i, align 8
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !15397
  %10 = bitcast %struct.atomic_t* %9 to i8*, !dbg !15397
  store i8* %10, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %11 = load i8*, i8** %v.addr.i.i, align 8, !dbg !15398
  %12 = load i64, i64* %size.addr.i.i, align 8, !dbg !15399
  %conv.i.i = trunc i64 %12 to i32, !dbg !15399
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %11, i32 %conv.i.i) #13, !dbg !15400
  %13 = load i8*, i8** %v.addr.i.i, align 8, !dbg !15401
  %14 = load i64, i64* %size.addr.i.i, align 8, !dbg !15401
  call void @kcsan_check_access(i8* %13, i64 %14, i32 7) #13, !dbg !15401
  %15 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !15402
  store %struct.atomic_t* %15, %struct.atomic_t** %v.addr.i1.i, align 8
  %16 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !15367
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %16, i32 0, i32 0, !dbg !15367
  %17 = call i8 asm sideeffect "decl $0\0A\09/* output condition code e*/\0A", "=*m,={@cce},*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #10, !dbg !15367, !srcloc !15203
  store i8 %17, i8* %c.i.i, align 1, !dbg !15367
  %18 = load i8, i8* %c.i.i, align 1, !dbg !15367
  %tobool.i.i = trunc i8 %18 to i1, !dbg !15367
  %frombool.i.i = zext i1 %tobool.i.i to i8, !dbg !15367
  store i8 %frombool.i.i, i8* %tmp.i.i, align 1, !dbg !15367
  %19 = load i8, i8* %tmp.i.i, align 1, !dbg !15367
  %tobool1.i.i = trunc i8 %19 to i1, !dbg !15367
  br i1 %tobool1.i.i, label %if.end6, label %if.then5, !dbg !15403

if.then5:                                         ; preds = %if.end
  br label %return, !dbg !15404

if.end6:                                          ; preds = %if.end
  br label %if.end7, !dbg !15405

if.else:                                          ; preds = %entry
  store i32 -5, i32* %err, align 4, !dbg !15406
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.end6
  %20 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !15408
  %21 = load i32, i32* %err, align 4, !dbg !15409
  call void @mlxsw_emad_trans_finish(%struct.mlxsw_reg_trans* %20, i32 %21) #11, !dbg !15410
  br label %return, !dbg !15411

return:                                           ; preds = %if.end7, %if.then5, %if.then3
  ret void, !dbg !15411
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @mlxsw_emad_reg_tlv(%struct.sk_buff* %skb) #0 !dbg !15412 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %offsets = alloca %struct.mlxsw_emad_tlv_offsets*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !15413, metadata !DIExpression()), !dbg !15414
  call void @llvm.dbg.declare(metadata %struct.mlxsw_emad_tlv_offsets** %offsets, metadata !15415, metadata !DIExpression()), !dbg !15416
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15417
  %cb = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 3, !dbg !15418
  %arraydecay = getelementptr inbounds [48 x i8], [48 x i8]* %cb, i64 0, i64 0, !dbg !15417
  %1 = bitcast i8* %arraydecay to %struct.mlxsw_emad_tlv_offsets*, !dbg !15419
  store %struct.mlxsw_emad_tlv_offsets* %1, %struct.mlxsw_emad_tlv_offsets** %offsets, align 8, !dbg !15416
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15420
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 37, !dbg !15421
  %3 = load i8*, i8** %data, align 8, !dbg !15421
  %4 = load %struct.mlxsw_emad_tlv_offsets*, %struct.mlxsw_emad_tlv_offsets** %offsets, align 8, !dbg !15422
  %reg_tlv = getelementptr inbounds %struct.mlxsw_emad_tlv_offsets, %struct.mlxsw_emad_tlv_offsets* %4, i32 0, i32 2, !dbg !15423
  %5 = load i16, i16* %reg_tlv, align 2, !dbg !15423
  %conv = zext i16 %5 to i32, !dbg !15422
  %idx.ext = sext i32 %conv to i64, !dbg !15424
  %add.ptr = getelementptr i8, i8* %3, i64 %idx.ext, !dbg !15424
  ret i8* %add.ptr, !dbg !15425
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @mlxsw_emad_reg_payload(i8* %reg_tlv) #0 !dbg !15426 {
entry:
  %reg_tlv.addr = alloca i8*, align 8
  store i8* %reg_tlv, i8** %reg_tlv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %reg_tlv.addr, metadata !15429, metadata !DIExpression()), !dbg !15430
  %0 = load i8*, i8** %reg_tlv.addr, align 8, !dbg !15431
  %add.ptr = getelementptr i8, i8* %0, i64 4, !dbg !15432
  ret i8* %add.ptr, !dbg !15433
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_process_string_tlv(%struct.sk_buff* %skb, %struct.mlxsw_reg_trans* %trans) #0 !dbg !15434 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %trans.addr = alloca %struct.mlxsw_reg_trans*, align 8
  %string_tlv = alloca i8*, align 8
  %string = alloca i8*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !15437, metadata !DIExpression()), !dbg !15438
  store %struct.mlxsw_reg_trans* %trans, %struct.mlxsw_reg_trans** %trans.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_reg_trans** %trans.addr, metadata !15439, metadata !DIExpression()), !dbg !15440
  call void @llvm.dbg.declare(metadata i8** %string_tlv, metadata !15441, metadata !DIExpression()), !dbg !15442
  call void @llvm.dbg.declare(metadata i8** %string, metadata !15443, metadata !DIExpression()), !dbg !15444
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15445
  %call = call i8* @mlxsw_emad_string_tlv(%struct.sk_buff* %0) #11, !dbg !15446
  store i8* %call, i8** %string_tlv, align 8, !dbg !15447
  %1 = load i8*, i8** %string_tlv, align 8, !dbg !15448
  %tobool = icmp ne i8* %1, null, !dbg !15448
  br i1 %tobool, label %if.end, label %if.then, !dbg !15450

if.then:                                          ; preds = %entry
  br label %return, !dbg !15451

if.end:                                           ; preds = %entry
  %call1 = call i8* @kzalloc(i64 128, i32 2592) #11, !dbg !15452
  %2 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !15453
  %emad_err_string = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %2, i32 0, i32 15, !dbg !15454
  store i8* %call1, i8** %emad_err_string, align 8, !dbg !15455
  %3 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !15456
  %emad_err_string2 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %3, i32 0, i32 15, !dbg !15458
  %4 = load i8*, i8** %emad_err_string2, align 8, !dbg !15458
  %tobool3 = icmp ne i8* %4, null, !dbg !15456
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !15459

if.then4:                                         ; preds = %if.end
  br label %return, !dbg !15460

if.end5:                                          ; preds = %if.end
  %5 = load i8*, i8** %string_tlv, align 8, !dbg !15461
  %call6 = call i8* @mlxsw_emad_string_tlv_string_data(i8* %5) #11, !dbg !15462
  store i8* %call6, i8** %string, align 8, !dbg !15463
  %6 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !15464
  %emad_err_string7 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %6, i32 0, i32 15, !dbg !15465
  %7 = load i8*, i8** %emad_err_string7, align 8, !dbg !15465
  %8 = load i8*, i8** %string, align 8, !dbg !15466
  %call8 = call i64 @strlcpy(i8* %7, i8* %8, i64 128) #11, !dbg !15467
  br label %return, !dbg !15468

return:                                           ; preds = %if.end5, %if.then4, %if.then
  ret void, !dbg !15468
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_trans_finish(%struct.mlxsw_reg_trans* %trans, i32 %err) #0 !dbg !15469 {
entry:
  %trans.addr = alloca %struct.mlxsw_reg_trans*, align 8
  %err.addr = alloca i32, align 4
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  store %struct.mlxsw_reg_trans* %trans, %struct.mlxsw_reg_trans** %trans.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_reg_trans** %trans.addr, metadata !15472, metadata !DIExpression()), !dbg !15473
  store i32 %err, i32* %err.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !15474, metadata !DIExpression()), !dbg !15475
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !15476, metadata !DIExpression()), !dbg !15477
  %0 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !15478
  %core = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %0, i32 0, i32 2, !dbg !15479
  %1 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !15479
  store %struct.mlxsw_core* %1, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !15477
  %2 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !15480
  %tx_skb = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %2, i32 0, i32 3, !dbg !15480
  %3 = load %struct.sk_buff*, %struct.sk_buff** %tx_skb, align 8, !dbg !15480
  call void @consume_skb(%struct.sk_buff* %3) #11, !dbg !15480
  %4 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !15481
  %emad = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %4, i32 0, i32 7, !dbg !15482
  %trans_list_lock = getelementptr inbounds %struct.anon.129, %struct.anon.129* %emad, i32 0, i32 2, !dbg !15483
  call void @spin_lock_bh(%struct.spinlock* %trans_list_lock) #11, !dbg !15484
  %5 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !15485
  %list = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %5, i32 0, i32 0, !dbg !15486
  call void @list_del_rcu(%struct.list_head* %list) #11, !dbg !15487
  %6 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !15488
  %emad1 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %6, i32 0, i32 7, !dbg !15489
  %trans_list_lock2 = getelementptr inbounds %struct.anon.129, %struct.anon.129* %emad1, i32 0, i32 2, !dbg !15490
  call void @spin_unlock_bh(%struct.spinlock* %trans_list_lock2) #11, !dbg !15491
  %7 = load i32, i32* %err.addr, align 4, !dbg !15492
  %8 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !15493
  %err3 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %8, i32 0, i32 14, !dbg !15494
  store i32 %7, i32* %err3, align 4, !dbg !15495
  %9 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !15496
  %completion = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %9, i32 0, i32 8, !dbg !15497
  call void @complete(%struct.completion* %completion) #11, !dbg !15498
  ret void, !dbg !15499
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_emad_process_status(i8* %op_tlv, i32* %p_status) #0 !dbg !15500 {
entry:
  %retval = alloca i32, align 4
  %op_tlv.addr = alloca i8*, align 8
  %p_status.addr = alloca i32*, align 8
  store i8* %op_tlv, i8** %op_tlv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %op_tlv.addr, metadata !15503, metadata !DIExpression()), !dbg !15504
  store i32* %p_status, i32** %p_status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p_status.addr, metadata !15505, metadata !DIExpression()), !dbg !15506
  %0 = load i8*, i8** %op_tlv.addr, align 8, !dbg !15507
  %call = call i32 @mlxsw_emad_op_tlv_status_get(i8* %0) #11, !dbg !15508
  %1 = load i32*, i32** %p_status.addr, align 8, !dbg !15509
  store i32 %call, i32* %1, align 4, !dbg !15510
  %2 = load i32*, i32** %p_status.addr, align 8, !dbg !15511
  %3 = load i32, i32* %2, align 4, !dbg !15512
  switch i32 %3, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 9, label %sw.bb1
    i32 2, label %sw.bb2
    i32 3, label %sw.bb2
    i32 4, label %sw.bb2
    i32 5, label %sw.bb2
    i32 6, label %sw.bb2
    i32 7, label %sw.bb2
    i32 8, label %sw.bb2
    i32 112, label %sw.bb2
  ], !dbg !15513

sw.bb:                                            ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !15514
  br label %return, !dbg !15514

sw.bb1:                                           ; preds = %entry, %entry
  store i32 -11, i32* %retval, align 4, !dbg !15516
  br label %return, !dbg !15516

sw.bb2:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %sw.default, !dbg !15516

sw.default:                                       ; preds = %entry, %sw.bb2
  store i32 -5, i32* %retval, align 4, !dbg !15517
  br label %return, !dbg !15517

return:                                           ; preds = %sw.default, %sw.bb1, %sw.bb
  %4 = load i32, i32* %retval, align 4, !dbg !15518
  ret i32 %4, !dbg !15518
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_emad_op_tlv_status_get(i8* %buf) #0 !dbg !15519 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15520, metadata !DIExpression()), !dbg !15521
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15521
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_emad_op_tlv_status_item to %struct.mlxsw_item*), i16 zeroext 0) #11, !dbg !15521
  ret i32 %call, !dbg !15521
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_emad_transmit(%struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_reg_trans* %trans) #0 !dbg !15522 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !15525, metadata !DIExpression()), !dbg !15529
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !15533, metadata !DIExpression()), !dbg !15534
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !12571, metadata !DIExpression()), !dbg !15535
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12587, metadata !DIExpression()), !dbg !15537
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !15538, metadata !DIExpression()), !dbg !15539
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !15540, metadata !DIExpression()), !dbg !15541
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %trans.addr = alloca %struct.mlxsw_reg_trans*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !15542, metadata !DIExpression()), !dbg !15543
  store %struct.mlxsw_reg_trans* %trans, %struct.mlxsw_reg_trans** %trans.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_reg_trans** %trans.addr, metadata !15544, metadata !DIExpression()), !dbg !15545
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !15546, metadata !DIExpression()), !dbg !15547
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15548, metadata !DIExpression()), !dbg !15549
  %0 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !15550
  %tx_skb = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %0, i32 0, i32 3, !dbg !15551
  %1 = load %struct.sk_buff*, %struct.sk_buff** %tx_skb, align 8, !dbg !15551
  %call = call %struct.sk_buff* @skb_copy(%struct.sk_buff* %1, i32 3264) #11, !dbg !15552
  store %struct.sk_buff* %call, %struct.sk_buff** %skb, align 8, !dbg !15553
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15554
  %tobool = icmp ne %struct.sk_buff* %2, null, !dbg !15554
  br i1 %tobool, label %if.end, label %if.then, !dbg !15556

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !15557
  br label %return, !dbg !15557

if.end:                                           ; preds = %entry
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !15558
  %4 = bitcast %struct.mlxsw_core* %3 to i8*, !dbg !15558
  %call1 = call %struct.devlink* @priv_to_devlink(i8* %4) #11, !dbg !15559
  %5 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15560
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %5, i32 0, i32 37, !dbg !15561
  %6 = load i8*, i8** %data, align 8, !dbg !15561
  %7 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !15562
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %7, i32 0, i32 0, !dbg !15563
  %8 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !15563
  %txhdr_len = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %8, i32 0, i32 36, !dbg !15564
  %9 = load i8, i8* %txhdr_len, align 8, !dbg !15564
  %conv = zext i8 %9 to i32, !dbg !15562
  %idx.ext = sext i32 %conv to i64, !dbg !15565
  %add.ptr = getelementptr i8, i8* %6, i64 %idx.ext, !dbg !15565
  %10 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15566
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %10, i32 0, i32 5, !dbg !15567
  %11 = load i32, i32* %len, align 8, !dbg !15567
  %12 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !15568
  %driver2 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %12, i32 0, i32 0, !dbg !15569
  %13 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver2, align 8, !dbg !15569
  %txhdr_len3 = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %13, i32 0, i32 36, !dbg !15570
  %14 = load i8, i8* %txhdr_len3, align 8, !dbg !15570
  %conv4 = zext i8 %14 to i32, !dbg !15568
  %sub = sub i32 %11, %conv4, !dbg !15571
  %conv5 = zext i32 %sub to i64, !dbg !15566
  call void @trace_devlink_hwmsg(%struct.devlink* %call1, i1 zeroext false, i64 0, i8* %add.ptr, i64 %conv5) #11, !dbg !15572
  %15 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !15573
  %active = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %15, i32 0, i32 9, !dbg !15574
  store %struct.atomic_t* %active, %struct.atomic_t** %v.addr.i, align 8
  store i32 1, i32* %i.addr.i, align 4
  %16 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !15575
  %17 = bitcast %struct.atomic_t* %16 to i8*, !dbg !15575
  store i8* %17, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %18 = load i8*, i8** %v.addr.i.i, align 8, !dbg !15576
  %19 = load i64, i64* %size.addr.i.i, align 8, !dbg !15577
  %conv.i.i = trunc i64 %19 to i32, !dbg !15577
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %18, i32 %conv.i.i) #13, !dbg !15578
  %20 = load i8*, i8** %v.addr.i.i, align 8, !dbg !15579
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !15579
  call void @kcsan_check_access(i8* %20, i64 %21, i32 5) #13, !dbg !15579
  %22 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !15580
  %23 = load i32, i32* %i.addr.i, align 4, !dbg !15581
  store %struct.atomic_t* %22, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %23, i32* %i.addr.i.i, align 4
  %24 = load i32, i32* %i.addr.i.i, align 4, !dbg !15582
  %25 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !15582
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %25, i32 0, i32 0, !dbg !15582
  store volatile i32 %24, i32* %counter.i.i, align 4, !dbg !15582
  %26 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !15584
  %27 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15585
  %28 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !15586
  %tx_info = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %28, i32 0, i32 4, !dbg !15587
  %call6 = call i32 @mlxsw_core_skb_transmit(%struct.mlxsw_core* %26, %struct.sk_buff* %27, %struct.mlxsw_tx_info* %tx_info) #11, !dbg !15588
  store i32 %call6, i32* %err, align 4, !dbg !15589
  %29 = load i32, i32* %err, align 4, !dbg !15590
  %tobool7 = icmp ne i32 %29, 0, !dbg !15590
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !15592

if.then8:                                         ; preds = %if.end
  %30 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15593
  call void @consume_skb(%struct.sk_buff* %30) #11, !dbg !15593
  %31 = load i32, i32* %err, align 4, !dbg !15595
  store i32 %31, i32* %retval, align 4, !dbg !15596
  br label %return, !dbg !15596

if.end9:                                          ; preds = %if.end
  %32 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !15597
  call void @mlxsw_emad_trans_timeout_schedule(%struct.mlxsw_reg_trans* %32) #11, !dbg !15598
  store i32 0, i32* %retval, align 4, !dbg !15599
  br label %return, !dbg !15599

return:                                           ; preds = %if.end9, %if.then8, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !15600
  ret i32 %33, !dbg !15600
}

; Function Attrs: noredzone
declare dso_local %struct.sk_buff* @skb_copy(%struct.sk_buff*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_trans_timeout_schedule(%struct.mlxsw_reg_trans* %trans) #0 !dbg !15601 {
entry:
  %retval.i4 = alloca i64, align 8
  %m.addr.i5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i5, metadata !15604, metadata !DIExpression()), !dbg !15609
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !15604, metadata !DIExpression()), !dbg !15612
  %trans.addr = alloca %struct.mlxsw_reg_trans*, align 8
  %timeout = alloca i64, align 8
  store %struct.mlxsw_reg_trans* %trans, %struct.mlxsw_reg_trans** %trans.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_reg_trans** %trans.addr, metadata !15614, metadata !DIExpression()), !dbg !15615
  call void @llvm.dbg.declare(metadata i64* %timeout, metadata !15616, metadata !DIExpression()), !dbg !15617
  store i32 200, i32* %m.addr.i, align 4
  %0 = load i32, i32* %m.addr.i, align 4, !dbg !15618
  %1 = call i1 @llvm.is.constant.i32(i32 %0) #10, !dbg !15620
  br i1 %1, label %if.then.i, label %if.else.i, !dbg !15621

if.then.i:                                        ; preds = %entry
  %2 = load i32, i32* %m.addr.i, align 4, !dbg !15622
  %cmp.i = icmp slt i32 %2, 0, !dbg !15625
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !15626

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !15627
  br label %msecs_to_jiffies.exit, !dbg !15627

if.end.i:                                         ; preds = %if.then.i
  %3 = load i32, i32* %m.addr.i, align 4, !dbg !15628
  %call.i = call i64 @_msecs_to_jiffies(i32 %3) #13, !dbg !15629
  store i64 %call.i, i64* %retval.i, align 8, !dbg !15630
  br label %msecs_to_jiffies.exit, !dbg !15630

if.else.i:                                        ; preds = %entry
  %4 = load i32, i32* %m.addr.i, align 4, !dbg !15631
  %call2.i = call i64 @__msecs_to_jiffies(i32 %4) #13, !dbg !15633
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !15634
  br label %msecs_to_jiffies.exit, !dbg !15634

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %5 = load i64, i64* %retval.i, align 8, !dbg !15635
  store i64 %5, i64* %timeout, align 8, !dbg !15617
  %6 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !15636
  %core = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %6, i32 0, i32 2, !dbg !15637
  %7 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !15637
  %fw_flash_in_progress = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %7, i32 0, i32 14, !dbg !15638
  %8 = load i8, i8* %fw_flash_in_progress, align 4, !dbg !15638
  %tobool = trunc i8 %8 to i1, !dbg !15638
  br i1 %tobool, label %if.then, label %if.end, !dbg !15639

if.then:                                          ; preds = %msecs_to_jiffies.exit
  store i32 3000, i32* %m.addr.i5, align 4
  %9 = load i32, i32* %m.addr.i5, align 4, !dbg !15640
  %10 = call i1 @llvm.is.constant.i32(i32 %9) #10, !dbg !15641
  br i1 %10, label %if.then.i7, label %if.else.i12, !dbg !15642

if.then.i7:                                       ; preds = %if.then
  %11 = load i32, i32* %m.addr.i5, align 4, !dbg !15643
  %cmp.i6 = icmp slt i32 %11, 0, !dbg !15644
  br i1 %cmp.i6, label %if.then1.i8, label %if.end.i10, !dbg !15645

if.then1.i8:                                      ; preds = %if.then.i7
  store i64 4611686018427387902, i64* %retval.i4, align 8, !dbg !15646
  br label %msecs_to_jiffies.exit13, !dbg !15646

if.end.i10:                                       ; preds = %if.then.i7
  %12 = load i32, i32* %m.addr.i5, align 4, !dbg !15647
  %call.i9 = call i64 @_msecs_to_jiffies(i32 %12) #13, !dbg !15648
  store i64 %call.i9, i64* %retval.i4, align 8, !dbg !15649
  br label %msecs_to_jiffies.exit13, !dbg !15649

if.else.i12:                                      ; preds = %if.then
  %13 = load i32, i32* %m.addr.i5, align 4, !dbg !15650
  %call2.i11 = call i64 @__msecs_to_jiffies(i32 %13) #13, !dbg !15651
  store i64 %call2.i11, i64* %retval.i4, align 8, !dbg !15652
  br label %msecs_to_jiffies.exit13, !dbg !15652

msecs_to_jiffies.exit13:                          ; preds = %if.then1.i8, %if.end.i10, %if.else.i12
  %14 = load i64, i64* %retval.i4, align 8, !dbg !15653
  store i64 %14, i64* %timeout, align 8, !dbg !15654
  br label %if.end, !dbg !15655

if.end:                                           ; preds = %msecs_to_jiffies.exit13, %msecs_to_jiffies.exit
  %15 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !15656
  %core2 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %15, i32 0, i32 2, !dbg !15657
  %16 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core2, align 8, !dbg !15657
  %emad_wq = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %16, i32 0, i32 4, !dbg !15658
  %17 = load %struct.workqueue_struct*, %struct.workqueue_struct** %emad_wq, align 8, !dbg !15658
  %18 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !15659
  %timeout_dw = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %18, i32 0, i32 5, !dbg !15660
  %19 = load i64, i64* %timeout, align 8, !dbg !15661
  %20 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !15662
  %retries = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %20, i32 0, i32 6, !dbg !15663
  %21 = load i32, i32* %retries, align 8, !dbg !15663
  %sh_prom = zext i32 %21 to i64, !dbg !15664
  %shl = shl i64 %19, %sh_prom, !dbg !15664
  %call3 = call zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %17, %struct.delayed_work* %timeout_dw, i64 %shl) #11, !dbg !15665
  ret void, !dbg !15666
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #0 !dbg !15667 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !15668, metadata !DIExpression()), !dbg !15669
  %0 = load i32, i32* %m.addr, align 4, !dbg !15670
  %conv = zext i32 %0 to i64, !dbg !15670
  %add = add i64 %conv, 4, !dbg !15671
  %sub = sub i64 %add, 1, !dbg !15672
  %div = sdiv i64 %sub, 4, !dbg !15673
  ret i64 %div, !dbg !15674
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @mlxsw_emad_string_tlv(%struct.sk_buff* %skb) #0 !dbg !15675 {
entry:
  %retval = alloca i8*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %offsets = alloca %struct.mlxsw_emad_tlv_offsets*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !15676, metadata !DIExpression()), !dbg !15677
  call void @llvm.dbg.declare(metadata %struct.mlxsw_emad_tlv_offsets** %offsets, metadata !15678, metadata !DIExpression()), !dbg !15679
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15680
  %cb = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 3, !dbg !15681
  %arraydecay = getelementptr inbounds [48 x i8], [48 x i8]* %cb, i64 0, i64 0, !dbg !15680
  %1 = bitcast i8* %arraydecay to %struct.mlxsw_emad_tlv_offsets*, !dbg !15682
  store %struct.mlxsw_emad_tlv_offsets* %1, %struct.mlxsw_emad_tlv_offsets** %offsets, align 8, !dbg !15679
  %2 = load %struct.mlxsw_emad_tlv_offsets*, %struct.mlxsw_emad_tlv_offsets** %offsets, align 8, !dbg !15683
  %string_tlv = getelementptr inbounds %struct.mlxsw_emad_tlv_offsets, %struct.mlxsw_emad_tlv_offsets* %2, i32 0, i32 1, !dbg !15685
  %3 = load i16, i16* %string_tlv, align 2, !dbg !15685
  %tobool = icmp ne i16 %3, 0, !dbg !15683
  br i1 %tobool, label %if.end, label %if.then, !dbg !15686

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !15687
  br label %return, !dbg !15687

if.end:                                           ; preds = %entry
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15688
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %4, i32 0, i32 37, !dbg !15689
  %5 = load i8*, i8** %data, align 8, !dbg !15689
  %6 = load %struct.mlxsw_emad_tlv_offsets*, %struct.mlxsw_emad_tlv_offsets** %offsets, align 8, !dbg !15690
  %string_tlv1 = getelementptr inbounds %struct.mlxsw_emad_tlv_offsets, %struct.mlxsw_emad_tlv_offsets* %6, i32 0, i32 1, !dbg !15691
  %7 = load i16, i16* %string_tlv1, align 2, !dbg !15691
  %conv = zext i16 %7 to i32, !dbg !15690
  %idx.ext = sext i32 %conv to i64, !dbg !15692
  %add.ptr = getelementptr i8, i8* %5, i64 %idx.ext, !dbg !15692
  store i8* %add.ptr, i8** %retval, align 8, !dbg !15693
  br label %return, !dbg !15693

return:                                           ; preds = %if.end, %if.then
  %8 = load i8*, i8** %retval, align 8, !dbg !15694
  ret i8* %8, !dbg !15694
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @mlxsw_emad_string_tlv_string_data(i8* %buf) #0 !dbg !15695 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15698, metadata !DIExpression()), !dbg !15699
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15699
  %call = call i8* @__mlxsw_item_data(i8* %0, %struct.mlxsw_item* @mlxsw_emad_string_tlv_string_item, i16 zeroext 0) #11, !dbg !15699
  ret i8* %call, !dbg !15699
}

; Function Attrs: noredzone
declare dso_local i64 @strlcpy(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @__mlxsw_item_data(i8* %buf, %struct.mlxsw_item* %item, i16 zeroext %index) #0 !dbg !15700 {
entry:
  %buf.addr = alloca i8*, align 8
  %item.addr = alloca %struct.mlxsw_item*, align 8
  %index.addr = alloca i16, align 2
  %offset = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15703, metadata !DIExpression()), !dbg !15704
  store %struct.mlxsw_item* %item, %struct.mlxsw_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_item** %item.addr, metadata !15705, metadata !DIExpression()), !dbg !15706
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !15707, metadata !DIExpression()), !dbg !15708
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !15709, metadata !DIExpression()), !dbg !15710
  %0 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15711
  %1 = load i16, i16* %index.addr, align 2, !dbg !15712
  %call = call i32 @__mlxsw_item_offset(%struct.mlxsw_item* %0, i16 zeroext %1, i64 1) #11, !dbg !15713
  store i32 %call, i32* %offset, align 4, !dbg !15710
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !15714
  %3 = load i32, i32* %offset, align 4, !dbg !15715
  %idxprom = zext i32 %3 to i64, !dbg !15714
  %arrayidx = getelementptr i8, i8* %2, i64 %idxprom, !dbg !15714
  ret i8* %arrayidx, !dbg !15716
}

; Function Attrs: alwaysinline noredzone nounwind sspstrong
define internal void @spin_lock_bh(%struct.spinlock* %lock) #9 !dbg !15717 {
entry:
  %val.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i.i, metadata !15718, metadata !DIExpression()), !dbg !15721
  %pao_ID__.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pao_ID__.i.i, metadata !15729, metadata !DIExpression()), !dbg !15732
  %pto_val__.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pto_val__.i.i, metadata !15733, metadata !DIExpression()), !dbg !15737
  %ip.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %ip.addr.i, metadata !15738, metadata !DIExpression()), !dbg !15739
  %cnt.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr.i, metadata !15740, metadata !DIExpression()), !dbg !15741
  %lock.addr = alloca %struct.spinlock*, align 8
  %tmp = alloca i64, align 8
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr, metadata !15742, metadata !DIExpression()), !dbg !15743
  br label %do.body, !dbg !15744

do.body:                                          ; preds = %entry
  br label %__here, !dbg !15745

__here:                                           ; preds = %indirectgoto, %do.body
  call void @llvm.dbg.label(metadata !15747), !dbg !15745
  store i64 ptrtoint (i8* blockaddress(@spin_lock_bh, %__here) to i64), i64* %tmp, align 8, !dbg !15745
  %0 = load i64, i64* %tmp, align 8, !dbg !15745
  store i64 %0, i64* %ip.addr.i, align 8
  store i32 512, i32* %cnt.addr.i, align 4
  %1 = load i32, i32* %cnt.addr.i, align 4, !dbg !15748
  store i32 %1, i32* %val.addr.i.i, align 4
  %2 = load i32, i32* %val.addr.i.i, align 4, !dbg !15732
  %3 = call i1 @llvm.is.constant.i32(i32 %2) #10, !dbg !15732
  br i1 %3, label %land.lhs.true.i.i, label %cond.false.i.i, !dbg !15732

land.lhs.true.i.i:                                ; preds = %__here
  %4 = load i32, i32* %val.addr.i.i, align 4, !dbg !15732
  %cmp.i.i = icmp eq i32 %4, 1, !dbg !15732
  br i1 %cmp.i.i, label %cond.true.i.i, label %lor.lhs.false.i.i, !dbg !15732

lor.lhs.false.i.i:                                ; preds = %land.lhs.true.i.i
  %5 = load i32, i32* %val.addr.i.i, align 4, !dbg !15732
  %cmp1.i.i = icmp eq i32 %5, -1, !dbg !15732
  br i1 %cmp1.i.i, label %cond.true.i.i, label %cond.false.i.i, !dbg !15732

cond.true.i.i:                                    ; preds = %lor.lhs.false.i.i, %land.lhs.true.i.i
  %6 = load i32, i32* %val.addr.i.i, align 4, !dbg !15732
  br label %__local_bh_disable_ip.exit, !dbg !15732

cond.false.i.i:                                   ; preds = %lor.lhs.false.i.i, %__here
  br label %__local_bh_disable_ip.exit, !dbg !15732

__local_bh_disable_ip.exit:                       ; preds = %cond.true.i.i, %cond.false.i.i
  %cond.i.i = phi i32 [ %6, %cond.true.i.i ], [ 0, %cond.false.i.i ], !dbg !15732
  store i32 %cond.i.i, i32* %pao_ID__.i.i, align 4, !dbg !15732
  %7 = load i32, i32* %val.addr.i.i, align 4, !dbg !15737
  %conv.i.i = sext i32 %7 to i64, !dbg !15737
  %and.i.i = and i64 %conv.i.i, 4294967295, !dbg !15737
  %conv3.i.i = trunc i64 %and.i.i to i32, !dbg !15737
  store i32 %conv3.i.i, i32* %pto_val__.i.i, align 4, !dbg !15737
  %8 = load i32, i32* %pto_val__.i.i, align 4, !dbg !15737
  call void asm "addl $1, $0", "=*m,ri,*m,~{dirflag},~{fpsr},~{flags}"(i32* @__preempt_count, i32 %8, i32* @__preempt_count) #10, !dbg !15737, !srcloc !15749
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !15750, !srcloc !15751
  br label %do.body1, !dbg !15752

do.body1:                                         ; preds = %__local_bh_disable_ip.exit
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr, align 8, !dbg !15753
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !15753
  %rlock = bitcast %union.anon* %10 to %struct.raw_spinlock*, !dbg !15753
  br label %do.end, !dbg !15753

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !15752

do.end2:                                          ; preds = %do.end
  ret void, !dbg !15755

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here]
}

; Function Attrs: alwaysinline noredzone nounwind sspstrong
define internal void @spin_unlock_bh(%struct.spinlock* %lock) #9 !dbg !15756 {
entry:
  %lock.addr = alloca %struct.spinlock*, align 8
  %tmp = alloca i64, align 8
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr, metadata !15757, metadata !DIExpression()), !dbg !15758
  br label %do.body, !dbg !15759

do.body:                                          ; preds = %entry
  br label %__here, !dbg !15760

__here:                                           ; preds = %indirectgoto, %do.body
  call void @llvm.dbg.label(metadata !15763), !dbg !15760
  store i64 ptrtoint (i8* blockaddress(@spin_unlock_bh, %__here) to i64), i64* %tmp, align 8, !dbg !15760
  %0 = load i64, i64* %tmp, align 8, !dbg !15760
  call void @__local_bh_enable_ip(i64 %0, i32 512) #11, !dbg !15764
  br label %do.body1, !dbg !15764

do.body1:                                         ; preds = %__here
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr, align 8, !dbg !15765
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !15765
  %rlock = bitcast %union.anon* %2 to %struct.raw_spinlock*, !dbg !15765
  br label %do.end, !dbg !15765

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !15764

do.end2:                                          ; preds = %do.end
  ret void, !dbg !15767

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here]
}

; Function Attrs: noredzone
declare dso_local void @complete(%struct.completion*) #2

; Function Attrs: noredzone
declare dso_local void @__local_bh_enable_ip(i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_core_fw_params_register(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !15768 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %devlink = alloca %struct.devlink*, align 8
  %value = alloca %union.devlink_param_value, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !15769, metadata !DIExpression()), !dbg !15770
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink, metadata !15771, metadata !DIExpression()), !dbg !15772
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !15773
  %1 = bitcast %struct.mlxsw_core* %0 to i8*, !dbg !15773
  %call = call %struct.devlink* @priv_to_devlink(i8* %1) #11, !dbg !15774
  store %struct.devlink* %call, %struct.devlink** %devlink, align 8, !dbg !15772
  call void @llvm.dbg.declare(metadata %union.devlink_param_value* %value, metadata !15775, metadata !DIExpression()), !dbg !15776
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15777, metadata !DIExpression()), !dbg !15778
  %2 = load %struct.devlink*, %struct.devlink** %devlink, align 8, !dbg !15779
  %call1 = call i32 @devlink_params_register(%struct.devlink* %2, %struct.devlink_param* getelementptr inbounds ([1 x %struct.devlink_param], [1 x %struct.devlink_param]* @mlxsw_core_fw_devlink_params, i64 0, i64 0), i64 1) #11, !dbg !15780
  store i32 %call1, i32* %err, align 4, !dbg !15781
  %3 = load i32, i32* %err, align 4, !dbg !15782
  %tobool = icmp ne i32 %3, 0, !dbg !15782
  br i1 %tobool, label %if.then, label %if.end, !dbg !15784

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %err, align 4, !dbg !15785
  store i32 %4, i32* %retval, align 4, !dbg !15786
  br label %return, !dbg !15786

if.end:                                           ; preds = %entry
  %vu8 = bitcast %union.devlink_param_value* %value to i8*, !dbg !15787
  store i8 0, i8* %vu8, align 4, !dbg !15788
  %5 = load %struct.devlink*, %struct.devlink** %devlink, align 8, !dbg !15789
  %call2 = call i32 @devlink_param_driverinit_value_set(%struct.devlink* %5, i32 7, %union.devlink_param_value* byval(%union.devlink_param_value) align 8 %value) #11, !dbg !15790
  store i32 0, i32* %retval, align 4, !dbg !15791
  br label %return, !dbg !15791

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !15792
  ret i32 %6, !dbg !15792
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_core_fw_params_unregister(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !15793 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !15794, metadata !DIExpression()), !dbg !15795
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !15796
  %1 = bitcast %struct.mlxsw_core* %0 to i8*, !dbg !15796
  %call = call %struct.devlink* @priv_to_devlink(i8* %1) #11, !dbg !15797
  call void @devlink_params_unregister(%struct.devlink* %call, %struct.devlink_param* getelementptr inbounds ([1 x %struct.devlink_param], [1 x %struct.devlink_param]* @mlxsw_core_fw_devlink_params, i64 0, i64 0), i64 1) #11, !dbg !15798
  ret void, !dbg !15799
}

; Function Attrs: noredzone
declare dso_local i32 @devlink_params_register(%struct.devlink*, %struct.devlink_param*, i64) #2

; Function Attrs: noredzone
declare dso_local i32 @devlink_param_driverinit_value_set(%struct.devlink*, i32, %union.devlink_param_value* byval(%union.devlink_param_value) align 8) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_core_devlink_param_fw_load_policy_validate(%struct.devlink* %devlink, i32 %id, %union.devlink_param_value* byval(%union.devlink_param_value) align 8 %val, %struct.netlink_ext_ack* %extack) #0 !dbg !8444 {
entry:
  %retval = alloca i32, align 4
  %devlink.addr = alloca %struct.devlink*, align 8
  %id.addr = alloca i32, align 4
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %__extack = alloca %struct.netlink_ext_ack*, align 8
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !15800, metadata !DIExpression()), !dbg !15801
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !15802, metadata !DIExpression()), !dbg !15803
  call void @llvm.dbg.declare(metadata %union.devlink_param_value* %val, metadata !15804, metadata !DIExpression()), !dbg !15805
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !15806, metadata !DIExpression()), !dbg !15807
  %vu8 = bitcast %union.devlink_param_value* %val to i8*, !dbg !15808
  %0 = load i8, i8* %vu8, align 8, !dbg !15808
  %conv = zext i8 %0 to i32, !dbg !15810
  %cmp = icmp ne i32 %conv, 0, !dbg !15811
  br i1 %cmp, label %land.lhs.true, label %if.end7, !dbg !15812

land.lhs.true:                                    ; preds = %entry
  %vu82 = bitcast %union.devlink_param_value* %val to i8*, !dbg !15813
  %1 = load i8, i8* %vu82, align 8, !dbg !15813
  %conv3 = zext i8 %1 to i32, !dbg !15814
  %cmp4 = icmp ne i32 %conv3, 1, !dbg !15815
  br i1 %cmp4, label %if.then, label %if.end7, !dbg !15816

if.then:                                          ; preds = %land.lhs.true
  br label %do.body, !dbg !15817

do.body:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack, metadata !15819, metadata !DIExpression()), !dbg !15821
  %2 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !15821
  store %struct.netlink_ext_ack* %2, %struct.netlink_ext_ack** %__extack, align 8, !dbg !15821
  %3 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !15822
  %tobool = icmp ne %struct.netlink_ext_ack* %3, null, !dbg !15822
  br i1 %tobool, label %if.then6, label %if.end, !dbg !15821

if.then6:                                         ; preds = %do.body
  %4 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !15822
  %_msg = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %4, i32 0, i32 0, !dbg !15822
  store i8* getelementptr inbounds ([57 x i8], [57 x i8]* @mlxsw_core_devlink_param_fw_load_policy_validate.__msg, i64 0, i64 0), i8** %_msg, align 8, !dbg !15822
  br label %if.end, !dbg !15822

if.end:                                           ; preds = %if.then6, %do.body
  br label %do.end, !dbg !15821

do.end:                                           ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !15824
  br label %return, !dbg !15824

if.end7:                                          ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !15825
  br label %return, !dbg !15825

return:                                           ; preds = %if.end7, %do.end
  %5 = load i32, i32* %retval, align 4, !dbg !15826
  ret i32 %5, !dbg !15826
}

; Function Attrs: noredzone
declare dso_local void @devlink_params_unregister(%struct.devlink*, %struct.devlink_param*, i64) #2

; Function Attrs: noredzone
declare dso_local i32 @devlink_param_driverinit_value_get(%struct.devlink*, i32, %union.devlink_param_value*) #2

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #2

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local %struct.devlink_health_reporter* @devlink_health_reporter_create(%struct.devlink*, %struct.devlink_health_reporter_ops*, i64, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !15827 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !15831, metadata !DIExpression()), !dbg !15832
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !15833
  %1 = ptrtoint i8* %0 to i64, !dbg !15833
  %2 = inttoptr i64 %1 to i8*, !dbg !15833
  %3 = ptrtoint i8* %2 to i64, !dbg !15833
  %cmp = icmp uge i64 %3, -4095, !dbg !15833
  %lnot = xor i1 %cmp, true, !dbg !15833
  %lnot1 = xor i1 %lnot, true, !dbg !15833
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !15833
  %conv = sext i32 %lnot.ext to i64, !dbg !15833
  %tobool = icmp ne i64 %conv, 0, !dbg !15833
  ret i1 %tobool, !dbg !15834
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !15835 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !15838, metadata !DIExpression()), !dbg !15839
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !15840
  %1 = ptrtoint i8* %0 to i64, !dbg !15841
  ret i64 %1, !dbg !15842
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_core_health_fw_fatal_config(%struct.mlxsw_core* %mlxsw_core, i1 zeroext %enable) #0 !dbg !15843 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %enable.addr = alloca i8, align 1
  %mfgd_pl = alloca [12 x i8], align 1
  %err = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !15846, metadata !DIExpression()), !dbg !15847
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !15848, metadata !DIExpression()), !dbg !15849
  call void @llvm.dbg.declare(metadata [12 x i8]* %mfgd_pl, metadata !15850, metadata !DIExpression()), !dbg !15851
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15852, metadata !DIExpression()), !dbg !15853
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !15854
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %mfgd_pl, i64 0, i64 0, !dbg !15855
  %call = call i32 @mlxsw_reg_query(%struct.mlxsw_core* %0, %struct.mlxsw_reg_info* @mlxsw_reg_mfgd, i8* %arraydecay) #11, !dbg !15856
  store i32 %call, i32* %err, align 4, !dbg !15857
  %1 = load i32, i32* %err, align 4, !dbg !15858
  %tobool = icmp ne i32 %1, 0, !dbg !15858
  br i1 %tobool, label %if.then, label %if.end, !dbg !15860

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %err, align 4, !dbg !15861
  store i32 %2, i32* %retval, align 4, !dbg !15862
  br label %return, !dbg !15862

if.end:                                           ; preds = %entry
  %arraydecay1 = getelementptr inbounds [12 x i8], [12 x i8]* %mfgd_pl, i64 0, i64 0, !dbg !15863
  %3 = load i8, i8* %enable.addr, align 1, !dbg !15864
  %tobool2 = trunc i8 %3 to i1, !dbg !15864
  %conv = zext i1 %tobool2 to i32, !dbg !15864
  call void @mlxsw_reg_mfgd_fatal_event_mode_set(i8* %arraydecay1, i32 %conv) #11, !dbg !15865
  %4 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !15866
  %arraydecay3 = getelementptr inbounds [12 x i8], [12 x i8]* %mfgd_pl, i64 0, i64 0, !dbg !15867
  %call4 = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %4, %struct.mlxsw_reg_info* @mlxsw_reg_mfgd, i8* %arraydecay3) #11, !dbg !15868
  store i32 %call4, i32* %retval, align 4, !dbg !15869
  br label %return, !dbg !15869

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !15870
  ret i32 %5, !dbg !15870
}

; Function Attrs: noredzone
declare dso_local void @devlink_health_reporter_destroy(%struct.devlink_health_reporter*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_core_health_fw_fatal_dump(%struct.devlink_health_reporter* %reporter, %struct.devlink_fmsg* %fmsg, i8* %priv_ctx, %struct.netlink_ext_ack* %extack) #0 !dbg !15871 {
entry:
  %retval = alloca i32, align 4
  %reporter.addr = alloca %struct.devlink_health_reporter*, align 8
  %fmsg.addr = alloca %struct.devlink_fmsg*, align 8
  %priv_ctx.addr = alloca i8*, align 8
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %mfde_pl = alloca i8*, align 8
  %val_str = alloca i8*, align 8
  %event_id = alloca i8, align 1
  %val = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.devlink_health_reporter* %reporter, %struct.devlink_health_reporter** %reporter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_health_reporter** %reporter.addr, metadata !15872, metadata !DIExpression()), !dbg !15873
  store %struct.devlink_fmsg* %fmsg, %struct.devlink_fmsg** %fmsg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_fmsg** %fmsg.addr, metadata !15874, metadata !DIExpression()), !dbg !15875
  store i8* %priv_ctx, i8** %priv_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %priv_ctx.addr, metadata !15876, metadata !DIExpression()), !dbg !15877
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !15878, metadata !DIExpression()), !dbg !15879
  call void @llvm.dbg.declare(metadata i8** %mfde_pl, metadata !15880, metadata !DIExpression()), !dbg !15881
  %0 = load i8*, i8** %priv_ctx.addr, align 8, !dbg !15882
  store i8* %0, i8** %mfde_pl, align 8, !dbg !15881
  call void @llvm.dbg.declare(metadata i8** %val_str, metadata !15883, metadata !DIExpression()), !dbg !15884
  call void @llvm.dbg.declare(metadata i8* %event_id, metadata !15885, metadata !DIExpression()), !dbg !15886
  call void @llvm.dbg.declare(metadata i32* %val, metadata !15887, metadata !DIExpression()), !dbg !15888
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15889, metadata !DIExpression()), !dbg !15890
  %1 = load i8*, i8** %priv_ctx.addr, align 8, !dbg !15891
  %tobool = icmp ne i8* %1, null, !dbg !15891
  br i1 %tobool, label %if.end, label %if.then, !dbg !15893

if.then:                                          ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !15894
  br label %return, !dbg !15894

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %mfde_pl, align 8, !dbg !15895
  %call = call i32 @mlxsw_reg_mfde_irisc_id_get(i8* %2) #11, !dbg !15896
  store i32 %call, i32* %val, align 4, !dbg !15897
  %3 = load %struct.devlink_fmsg*, %struct.devlink_fmsg** %fmsg.addr, align 8, !dbg !15898
  %4 = load i32, i32* %val, align 4, !dbg !15899
  %conv = trunc i32 %4 to i8, !dbg !15899
  %call1 = call i32 @devlink_fmsg_u8_pair_put(%struct.devlink_fmsg* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.76, i64 0, i64 0), i8 zeroext %conv) #11, !dbg !15900
  store i32 %call1, i32* %err, align 4, !dbg !15901
  %5 = load i32, i32* %err, align 4, !dbg !15902
  %tobool2 = icmp ne i32 %5, 0, !dbg !15902
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !15904

if.then3:                                         ; preds = %if.end
  %6 = load i32, i32* %err, align 4, !dbg !15905
  store i32 %6, i32* %retval, align 4, !dbg !15906
  br label %return, !dbg !15906

if.end4:                                          ; preds = %if.end
  %7 = load %struct.devlink_fmsg*, %struct.devlink_fmsg** %fmsg.addr, align 8, !dbg !15907
  %call5 = call i32 @devlink_fmsg_arr_pair_nest_start(%struct.devlink_fmsg* %7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.77, i64 0, i64 0)) #11, !dbg !15908
  store i32 %call5, i32* %err, align 4, !dbg !15909
  %8 = load i32, i32* %err, align 4, !dbg !15910
  %tobool6 = icmp ne i32 %8, 0, !dbg !15910
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !15912

if.then7:                                         ; preds = %if.end4
  %9 = load i32, i32* %err, align 4, !dbg !15913
  store i32 %9, i32* %retval, align 4, !dbg !15914
  br label %return, !dbg !15914

if.end8:                                          ; preds = %if.end4
  %10 = load i8*, i8** %mfde_pl, align 8, !dbg !15915
  %call9 = call i32 @mlxsw_reg_mfde_event_id_get(i8* %10) #11, !dbg !15916
  %conv10 = trunc i32 %call9 to i8, !dbg !15916
  store i8 %conv10, i8* %event_id, align 1, !dbg !15917
  %11 = load %struct.devlink_fmsg*, %struct.devlink_fmsg** %fmsg.addr, align 8, !dbg !15918
  %12 = load i8, i8* %event_id, align 1, !dbg !15919
  %call11 = call i32 @devlink_fmsg_u8_pair_put(%struct.devlink_fmsg* %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.78, i64 0, i64 0), i8 zeroext %12) #11, !dbg !15920
  store i32 %call11, i32* %err, align 4, !dbg !15921
  %13 = load i32, i32* %err, align 4, !dbg !15922
  %tobool12 = icmp ne i32 %13, 0, !dbg !15922
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !15924

if.then13:                                        ; preds = %if.end8
  %14 = load i32, i32* %err, align 4, !dbg !15925
  store i32 %14, i32* %retval, align 4, !dbg !15926
  br label %return, !dbg !15926

if.end14:                                         ; preds = %if.end8
  %15 = load i8, i8* %event_id, align 1, !dbg !15927
  %conv15 = zext i8 %15 to i32, !dbg !15927
  switch i32 %conv15, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb16
  ], !dbg !15928

sw.bb:                                            ; preds = %if.end14
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.79, i64 0, i64 0), i8** %val_str, align 8, !dbg !15929
  br label %sw.epilog, !dbg !15931

sw.bb16:                                          ; preds = %if.end14
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.80, i64 0, i64 0), i8** %val_str, align 8, !dbg !15932
  br label %sw.epilog, !dbg !15933

sw.default:                                       ; preds = %if.end14
  store i8* null, i8** %val_str, align 8, !dbg !15934
  br label %sw.epilog, !dbg !15935

sw.epilog:                                        ; preds = %sw.default, %sw.bb16, %sw.bb
  %16 = load i8*, i8** %val_str, align 8, !dbg !15936
  %tobool17 = icmp ne i8* %16, null, !dbg !15936
  br i1 %tobool17, label %if.then18, label %if.end23, !dbg !15938

if.then18:                                        ; preds = %sw.epilog
  %17 = load %struct.devlink_fmsg*, %struct.devlink_fmsg** %fmsg.addr, align 8, !dbg !15939
  %18 = load i8*, i8** %val_str, align 8, !dbg !15941
  %call19 = call i32 @devlink_fmsg_string_pair_put(%struct.devlink_fmsg* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.81, i64 0, i64 0), i8* %18) #11, !dbg !15942
  store i32 %call19, i32* %err, align 4, !dbg !15943
  %19 = load i32, i32* %err, align 4, !dbg !15944
  %tobool20 = icmp ne i32 %19, 0, !dbg !15944
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !15946

if.then21:                                        ; preds = %if.then18
  %20 = load i32, i32* %err, align 4, !dbg !15947
  store i32 %20, i32* %retval, align 4, !dbg !15948
  br label %return, !dbg !15948

if.end22:                                         ; preds = %if.then18
  br label %if.end23, !dbg !15949

if.end23:                                         ; preds = %if.end22, %sw.epilog
  %21 = load %struct.devlink_fmsg*, %struct.devlink_fmsg** %fmsg.addr, align 8, !dbg !15950
  %call24 = call i32 @devlink_fmsg_arr_pair_nest_end(%struct.devlink_fmsg* %21) #11, !dbg !15951
  store i32 %call24, i32* %err, align 4, !dbg !15952
  %22 = load i32, i32* %err, align 4, !dbg !15953
  %tobool25 = icmp ne i32 %22, 0, !dbg !15953
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !15955

if.then26:                                        ; preds = %if.end23
  %23 = load i32, i32* %err, align 4, !dbg !15956
  store i32 %23, i32* %retval, align 4, !dbg !15957
  br label %return, !dbg !15957

if.end27:                                         ; preds = %if.end23
  %24 = load i8*, i8** %mfde_pl, align 8, !dbg !15958
  %call28 = call i32 @mlxsw_reg_mfde_method_get(i8* %24) #11, !dbg !15959
  store i32 %call28, i32* %val, align 4, !dbg !15960
  %25 = load i32, i32* %val, align 4, !dbg !15961
  switch i32 %25, label %sw.default31 [
    i32 0, label %sw.bb29
    i32 1, label %sw.bb30
  ], !dbg !15962

sw.bb29:                                          ; preds = %if.end27
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.82, i64 0, i64 0), i8** %val_str, align 8, !dbg !15963
  br label %sw.epilog32, !dbg !15965

sw.bb30:                                          ; preds = %if.end27
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.83, i64 0, i64 0), i8** %val_str, align 8, !dbg !15966
  br label %sw.epilog32, !dbg !15967

sw.default31:                                     ; preds = %if.end27
  store i8* null, i8** %val_str, align 8, !dbg !15968
  br label %sw.epilog32, !dbg !15969

sw.epilog32:                                      ; preds = %sw.default31, %sw.bb30, %sw.bb29
  %26 = load i8*, i8** %val_str, align 8, !dbg !15970
  %tobool33 = icmp ne i8* %26, null, !dbg !15970
  br i1 %tobool33, label %if.then34, label %if.end39, !dbg !15972

if.then34:                                        ; preds = %sw.epilog32
  %27 = load %struct.devlink_fmsg*, %struct.devlink_fmsg** %fmsg.addr, align 8, !dbg !15973
  %28 = load i8*, i8** %val_str, align 8, !dbg !15975
  %call35 = call i32 @devlink_fmsg_string_pair_put(%struct.devlink_fmsg* %27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.84, i64 0, i64 0), i8* %28) #11, !dbg !15976
  store i32 %call35, i32* %err, align 4, !dbg !15977
  %29 = load i32, i32* %err, align 4, !dbg !15978
  %tobool36 = icmp ne i32 %29, 0, !dbg !15978
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !15980

if.then37:                                        ; preds = %if.then34
  %30 = load i32, i32* %err, align 4, !dbg !15981
  store i32 %30, i32* %retval, align 4, !dbg !15982
  br label %return, !dbg !15982

if.end38:                                         ; preds = %if.then34
  br label %if.end39, !dbg !15983

if.end39:                                         ; preds = %if.end38, %sw.epilog32
  %31 = load i8*, i8** %mfde_pl, align 8, !dbg !15984
  %call40 = call i32 @mlxsw_reg_mfde_long_process_get(i8* %31) #11, !dbg !15985
  store i32 %call40, i32* %val, align 4, !dbg !15986
  %32 = load %struct.devlink_fmsg*, %struct.devlink_fmsg** %fmsg.addr, align 8, !dbg !15987
  %33 = load i32, i32* %val, align 4, !dbg !15988
  %tobool41 = icmp ne i32 %33, 0, !dbg !15988
  %call42 = call i32 @devlink_fmsg_bool_pair_put(%struct.devlink_fmsg* %32, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.85, i64 0, i64 0), i1 zeroext %tobool41) #11, !dbg !15989
  store i32 %call42, i32* %err, align 4, !dbg !15990
  %34 = load i32, i32* %err, align 4, !dbg !15991
  %tobool43 = icmp ne i32 %34, 0, !dbg !15991
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !15993

if.then44:                                        ; preds = %if.end39
  %35 = load i32, i32* %err, align 4, !dbg !15994
  store i32 %35, i32* %retval, align 4, !dbg !15995
  br label %return, !dbg !15995

if.end45:                                         ; preds = %if.end39
  %36 = load i8*, i8** %mfde_pl, align 8, !dbg !15996
  %call46 = call i32 @mlxsw_reg_mfde_command_type_get(i8* %36) #11, !dbg !15997
  store i32 %call46, i32* %val, align 4, !dbg !15998
  %37 = load i32, i32* %val, align 4, !dbg !15999
  switch i32 %37, label %sw.default50 [
    i32 0, label %sw.bb47
    i32 1, label %sw.bb48
    i32 2, label %sw.bb49
  ], !dbg !16000

sw.bb47:                                          ; preds = %if.end45
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.86, i64 0, i64 0), i8** %val_str, align 8, !dbg !16001
  br label %sw.epilog51, !dbg !16003

sw.bb48:                                          ; preds = %if.end45
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i64 0, i64 0), i8** %val_str, align 8, !dbg !16004
  br label %sw.epilog51, !dbg !16005

sw.bb49:                                          ; preds = %if.end45
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.88, i64 0, i64 0), i8** %val_str, align 8, !dbg !16006
  br label %sw.epilog51, !dbg !16007

sw.default50:                                     ; preds = %if.end45
  store i8* null, i8** %val_str, align 8, !dbg !16008
  br label %sw.epilog51, !dbg !16009

sw.epilog51:                                      ; preds = %sw.default50, %sw.bb49, %sw.bb48, %sw.bb47
  %38 = load i8*, i8** %val_str, align 8, !dbg !16010
  %tobool52 = icmp ne i8* %38, null, !dbg !16010
  br i1 %tobool52, label %if.then53, label %if.end58, !dbg !16012

if.then53:                                        ; preds = %sw.epilog51
  %39 = load %struct.devlink_fmsg*, %struct.devlink_fmsg** %fmsg.addr, align 8, !dbg !16013
  %40 = load i8*, i8** %val_str, align 8, !dbg !16015
  %call54 = call i32 @devlink_fmsg_string_pair_put(%struct.devlink_fmsg* %39, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.89, i64 0, i64 0), i8* %40) #11, !dbg !16016
  store i32 %call54, i32* %err, align 4, !dbg !16017
  %41 = load i32, i32* %err, align 4, !dbg !16018
  %tobool55 = icmp ne i32 %41, 0, !dbg !16018
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !16020

if.then56:                                        ; preds = %if.then53
  %42 = load i32, i32* %err, align 4, !dbg !16021
  store i32 %42, i32* %retval, align 4, !dbg !16022
  br label %return, !dbg !16022

if.end57:                                         ; preds = %if.then53
  br label %if.end58, !dbg !16023

if.end58:                                         ; preds = %if.end57, %sw.epilog51
  %43 = load i8*, i8** %mfde_pl, align 8, !dbg !16024
  %call59 = call i32 @mlxsw_reg_mfde_reg_attr_id_get(i8* %43) #11, !dbg !16025
  store i32 %call59, i32* %val, align 4, !dbg !16026
  %44 = load %struct.devlink_fmsg*, %struct.devlink_fmsg** %fmsg.addr, align 8, !dbg !16027
  %45 = load i32, i32* %val, align 4, !dbg !16028
  %call60 = call i32 @devlink_fmsg_u32_pair_put(%struct.devlink_fmsg* %44, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.90, i64 0, i64 0), i32 %45) #11, !dbg !16029
  store i32 %call60, i32* %err, align 4, !dbg !16030
  %46 = load i32, i32* %err, align 4, !dbg !16031
  %tobool61 = icmp ne i32 %46, 0, !dbg !16031
  br i1 %tobool61, label %if.then62, label %if.end63, !dbg !16033

if.then62:                                        ; preds = %if.end58
  %47 = load i32, i32* %err, align 4, !dbg !16034
  store i32 %47, i32* %retval, align 4, !dbg !16035
  br label %return, !dbg !16035

if.end63:                                         ; preds = %if.end58
  %48 = load i8, i8* %event_id, align 1, !dbg !16036
  %conv64 = zext i8 %48 to i32, !dbg !16036
  %cmp = icmp eq i32 %conv64, 1, !dbg !16038
  br i1 %cmp, label %if.then66, label %if.else, !dbg !16039

if.then66:                                        ; preds = %if.end63
  %49 = load i8*, i8** %mfde_pl, align 8, !dbg !16040
  %call67 = call i32 @mlxsw_reg_mfde_log_address_get(i8* %49) #11, !dbg !16042
  store i32 %call67, i32* %val, align 4, !dbg !16043
  %50 = load %struct.devlink_fmsg*, %struct.devlink_fmsg** %fmsg.addr, align 8, !dbg !16044
  %51 = load i32, i32* %val, align 4, !dbg !16045
  %call68 = call i32 @devlink_fmsg_u32_pair_put(%struct.devlink_fmsg* %50, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.91, i64 0, i64 0), i32 %51) #11, !dbg !16046
  store i32 %call68, i32* %err, align 4, !dbg !16047
  %52 = load i32, i32* %err, align 4, !dbg !16048
  %tobool69 = icmp ne i32 %52, 0, !dbg !16048
  br i1 %tobool69, label %if.then70, label %if.end71, !dbg !16050

if.then70:                                        ; preds = %if.then66
  %53 = load i32, i32* %err, align 4, !dbg !16051
  store i32 %53, i32* %retval, align 4, !dbg !16052
  br label %return, !dbg !16052

if.end71:                                         ; preds = %if.then66
  %54 = load i8*, i8** %mfde_pl, align 8, !dbg !16053
  %call72 = call i32 @mlxsw_reg_mfde_log_id_get(i8* %54) #11, !dbg !16054
  store i32 %call72, i32* %val, align 4, !dbg !16055
  %55 = load %struct.devlink_fmsg*, %struct.devlink_fmsg** %fmsg.addr, align 8, !dbg !16056
  %56 = load i32, i32* %val, align 4, !dbg !16057
  %conv73 = trunc i32 %56 to i8, !dbg !16057
  %call74 = call i32 @devlink_fmsg_u8_pair_put(%struct.devlink_fmsg* %55, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.92, i64 0, i64 0), i8 zeroext %conv73) #11, !dbg !16058
  store i32 %call74, i32* %err, align 4, !dbg !16059
  %57 = load i32, i32* %err, align 4, !dbg !16060
  %tobool75 = icmp ne i32 %57, 0, !dbg !16060
  br i1 %tobool75, label %if.then76, label %if.end77, !dbg !16062

if.then76:                                        ; preds = %if.end71
  %58 = load i32, i32* %err, align 4, !dbg !16063
  store i32 %58, i32* %retval, align 4, !dbg !16064
  br label %return, !dbg !16064

if.end77:                                         ; preds = %if.end71
  br label %if.end88, !dbg !16065

if.else:                                          ; preds = %if.end63
  %59 = load i8, i8* %event_id, align 1, !dbg !16066
  %conv78 = zext i8 %59 to i32, !dbg !16066
  %cmp79 = icmp eq i32 %conv78, 2, !dbg !16068
  br i1 %cmp79, label %if.then81, label %if.end87, !dbg !16069

if.then81:                                        ; preds = %if.else
  %60 = load i8*, i8** %mfde_pl, align 8, !dbg !16070
  %call82 = call i32 @mlxsw_reg_mfde_pipes_mask_get(i8* %60) #11, !dbg !16072
  store i32 %call82, i32* %val, align 4, !dbg !16073
  %61 = load %struct.devlink_fmsg*, %struct.devlink_fmsg** %fmsg.addr, align 8, !dbg !16074
  %62 = load i32, i32* %val, align 4, !dbg !16075
  %call83 = call i32 @devlink_fmsg_u32_pair_put(%struct.devlink_fmsg* %61, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.93, i64 0, i64 0), i32 %62) #11, !dbg !16076
  store i32 %call83, i32* %err, align 4, !dbg !16077
  %63 = load i32, i32* %err, align 4, !dbg !16078
  %tobool84 = icmp ne i32 %63, 0, !dbg !16078
  br i1 %tobool84, label %if.then85, label %if.end86, !dbg !16080

if.then85:                                        ; preds = %if.then81
  %64 = load i32, i32* %err, align 4, !dbg !16081
  store i32 %64, i32* %retval, align 4, !dbg !16082
  br label %return, !dbg !16082

if.end86:                                         ; preds = %if.then81
  br label %if.end87, !dbg !16083

if.end87:                                         ; preds = %if.end86, %if.else
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.end77
  store i32 0, i32* %retval, align 4, !dbg !16084
  br label %return, !dbg !16084

return:                                           ; preds = %if.end88, %if.then85, %if.then76, %if.then70, %if.then62, %if.then56, %if.then44, %if.then37, %if.then26, %if.then21, %if.then13, %if.then7, %if.then3, %if.then
  %65 = load i32, i32* %retval, align 4, !dbg !16085
  ret i32 %65, !dbg !16085
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_core_health_fw_fatal_test(%struct.devlink_health_reporter* %reporter, %struct.netlink_ext_ack* %extack) #0 !dbg !16086 {
entry:
  %retval = alloca i32, align 4
  %reporter.addr = alloca %struct.devlink_health_reporter*, align 8
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mfgd_pl = alloca [12 x i8], align 1
  %err = alloca i32, align 4
  store %struct.devlink_health_reporter* %reporter, %struct.devlink_health_reporter** %reporter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_health_reporter** %reporter.addr, metadata !16087, metadata !DIExpression()), !dbg !16088
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !16089, metadata !DIExpression()), !dbg !16090
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !16091, metadata !DIExpression()), !dbg !16092
  %0 = load %struct.devlink_health_reporter*, %struct.devlink_health_reporter** %reporter.addr, align 8, !dbg !16093
  %call = call i8* @devlink_health_reporter_priv(%struct.devlink_health_reporter* %0) #11, !dbg !16094
  %1 = bitcast i8* %call to %struct.mlxsw_core*, !dbg !16094
  store %struct.mlxsw_core* %1, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !16092
  call void @llvm.dbg.declare(metadata [12 x i8]* %mfgd_pl, metadata !16095, metadata !DIExpression()), !dbg !16096
  call void @llvm.dbg.declare(metadata i32* %err, metadata !16097, metadata !DIExpression()), !dbg !16098
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !16099
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %mfgd_pl, i64 0, i64 0, !dbg !16100
  %call1 = call i32 @mlxsw_reg_query(%struct.mlxsw_core* %2, %struct.mlxsw_reg_info* @mlxsw_reg_mfgd, i8* %arraydecay) #11, !dbg !16101
  store i32 %call1, i32* %err, align 4, !dbg !16102
  %3 = load i32, i32* %err, align 4, !dbg !16103
  %tobool = icmp ne i32 %3, 0, !dbg !16103
  br i1 %tobool, label %if.then, label %if.end, !dbg !16105

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %err, align 4, !dbg !16106
  store i32 %4, i32* %retval, align 4, !dbg !16107
  br label %return, !dbg !16107

if.end:                                           ; preds = %entry
  %arraydecay2 = getelementptr inbounds [12 x i8], [12 x i8]* %mfgd_pl, i64 0, i64 0, !dbg !16108
  call void @mlxsw_reg_mfgd_trigger_test_set(i8* %arraydecay2, i32 1) #11, !dbg !16109
  %5 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !16110
  %arraydecay3 = getelementptr inbounds [12 x i8], [12 x i8]* %mfgd_pl, i64 0, i64 0, !dbg !16111
  %call4 = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %5, %struct.mlxsw_reg_info* @mlxsw_reg_mfgd, i8* %arraydecay3) #11, !dbg !16112
  store i32 %call4, i32* %retval, align 4, !dbg !16113
  br label %return, !dbg !16113

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !16114
  ret i32 %6, !dbg !16114
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_mfde_irisc_id_get(i8* %buf) #0 !dbg !16115 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16116, metadata !DIExpression()), !dbg !16117
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16117
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mfde_irisc_id_item to %struct.mlxsw_item*), i16 zeroext 0) #11, !dbg !16117
  ret i32 %call, !dbg !16117
}

; Function Attrs: noredzone
declare dso_local i32 @devlink_fmsg_u8_pair_put(%struct.devlink_fmsg*, i8*, i8 zeroext) #2

; Function Attrs: noredzone
declare dso_local i32 @devlink_fmsg_arr_pair_nest_start(%struct.devlink_fmsg*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_mfde_event_id_get(i8* %buf) #0 !dbg !16118 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16119, metadata !DIExpression()), !dbg !16120
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16120
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mfde_event_id_item to %struct.mlxsw_item*), i16 zeroext 0) #11, !dbg !16120
  ret i32 %call, !dbg !16120
}

; Function Attrs: noredzone
declare dso_local i32 @devlink_fmsg_string_pair_put(%struct.devlink_fmsg*, i8*, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @devlink_fmsg_arr_pair_nest_end(%struct.devlink_fmsg*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_mfde_method_get(i8* %buf) #0 !dbg !16121 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16122, metadata !DIExpression()), !dbg !16123
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16123
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mfde_method_item to %struct.mlxsw_item*), i16 zeroext 0) #11, !dbg !16123
  ret i32 %call, !dbg !16123
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_mfde_long_process_get(i8* %buf) #0 !dbg !16124 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16125, metadata !DIExpression()), !dbg !16126
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16126
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mfde_long_process_item to %struct.mlxsw_item*), i16 zeroext 0) #11, !dbg !16126
  ret i32 %call, !dbg !16126
}

; Function Attrs: noredzone
declare dso_local i32 @devlink_fmsg_bool_pair_put(%struct.devlink_fmsg*, i8*, i1 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_mfde_command_type_get(i8* %buf) #0 !dbg !16127 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16128, metadata !DIExpression()), !dbg !16129
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16129
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mfde_command_type_item to %struct.mlxsw_item*), i16 zeroext 0) #11, !dbg !16129
  ret i32 %call, !dbg !16129
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_mfde_reg_attr_id_get(i8* %buf) #0 !dbg !16130 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16131, metadata !DIExpression()), !dbg !16132
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16132
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mfde_reg_attr_id_item to %struct.mlxsw_item*), i16 zeroext 0) #11, !dbg !16132
  ret i32 %call, !dbg !16132
}

; Function Attrs: noredzone
declare dso_local i32 @devlink_fmsg_u32_pair_put(%struct.devlink_fmsg*, i8*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_mfde_log_address_get(i8* %buf) #0 !dbg !16133 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16134, metadata !DIExpression()), !dbg !16135
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16135
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mfde_log_address_item to %struct.mlxsw_item*), i16 zeroext 0) #11, !dbg !16135
  ret i32 %call, !dbg !16135
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_mfde_log_id_get(i8* %buf) #0 !dbg !16136 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16137, metadata !DIExpression()), !dbg !16138
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16138
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mfde_log_id_item to %struct.mlxsw_item*), i16 zeroext 0) #11, !dbg !16138
  ret i32 %call, !dbg !16138
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_mfde_pipes_mask_get(i8* %buf) #0 !dbg !16139 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16140, metadata !DIExpression()), !dbg !16141
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16141
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mfde_pipes_mask_item to %struct.mlxsw_item*), i16 zeroext 0) #11, !dbg !16141
  ret i32 %call, !dbg !16141
}

; Function Attrs: noredzone
declare dso_local i8* @devlink_health_reporter_priv(%struct.devlink_health_reporter*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_mfgd_trigger_test_set(i8* %buf, i32 %val) #0 !dbg !16142 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16143, metadata !DIExpression()), !dbg !16144
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !16145, metadata !DIExpression()), !dbg !16144
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16144
  %1 = load i32, i32* %val.addr, align 4, !dbg !16144
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mfgd_trigger_test_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !16144
  ret void, !dbg !16144
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_core_health_listener_func(%struct.mlxsw_reg_info* %reg, i8* %mfde_pl, i8* %priv) #0 !dbg !16146 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !9589, metadata !DIExpression()), !dbg !16147
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !9601, metadata !DIExpression()), !dbg !16150
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !9603, metadata !DIExpression()), !dbg !16151
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !9605, metadata !DIExpression()), !dbg !16152
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !9607, metadata !DIExpression()), !dbg !16153
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !9613, metadata !DIExpression()), !dbg !16155
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !9619, metadata !DIExpression()), !dbg !16157
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !9628, metadata !DIExpression()), !dbg !16160
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !9630, metadata !DIExpression()), !dbg !16161
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !9632, metadata !DIExpression()), !dbg !16162
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !9634, metadata !DIExpression()), !dbg !16163
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !9636, metadata !DIExpression()), !dbg !16164
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9638, metadata !DIExpression()), !dbg !16165
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !9640, metadata !DIExpression()), !dbg !16166
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !9642, metadata !DIExpression()), !dbg !16167
  %reg.addr = alloca %struct.mlxsw_reg_info*, align 8
  %mfde_pl.addr = alloca i8*, align 8
  %priv.addr = alloca i8*, align 8
  %event = alloca %struct.mlxsw_core_health_event*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  store %struct.mlxsw_reg_info* %reg, %struct.mlxsw_reg_info** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_reg_info** %reg.addr, metadata !16168, metadata !DIExpression()), !dbg !16169
  store i8* %mfde_pl, i8** %mfde_pl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mfde_pl.addr, metadata !16170, metadata !DIExpression()), !dbg !16171
  store i8* %priv, i8** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %priv.addr, metadata !16172, metadata !DIExpression()), !dbg !16173
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core_health_event** %event, metadata !16174, metadata !DIExpression()), !dbg !16175
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !16176, metadata !DIExpression()), !dbg !16177
  %0 = load i8*, i8** %priv.addr, align 8, !dbg !16178
  %1 = bitcast i8* %0 to %struct.mlxsw_core*, !dbg !16178
  store %struct.mlxsw_core* %1, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !16177
  store i64 64, i64* %size.addr.i, align 8
  store i32 2592, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !16179
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #10, !dbg !16180
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !16181

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !16182
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !16183
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !16184

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !16185
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !16186
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !16187
  %call.i.i = call i32 @get_order(i64 %7) #12, !dbg !16188
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !16164
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !16189
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !16190
  %10 = load i32, i32* %order.i.i, align 4, !dbg !16191
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !16192
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !16193
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !16194
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #13, !dbg !16195
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !16195
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !16195
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !16195
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !16195
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !16196
  br label %kmalloc.exit, !dbg !16196

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !16197
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16198
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !16198
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !16199

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !16200
  br label %kmalloc_index.exit.i, !dbg !16200

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16201
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !16202
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !16203

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !16204
  br label %kmalloc_index.exit.i, !dbg !16204

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16205
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !16206
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !16207

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16208
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !16209
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !16210

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !16211
  br label %kmalloc_index.exit.i, !dbg !16211

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16212
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !16213
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !16214

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16215
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !16216
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !16217

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !16218
  br label %kmalloc_index.exit.i, !dbg !16218

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16219
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !16220
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !16221

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !16222
  br label %kmalloc_index.exit.i, !dbg !16222

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16223
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !16224
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !16225

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !16226
  br label %kmalloc_index.exit.i, !dbg !16226

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16227
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !16228
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !16229

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !16230
  br label %kmalloc_index.exit.i, !dbg !16230

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16231
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !16232
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !16233

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !16234
  br label %kmalloc_index.exit.i, !dbg !16234

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16235
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !16236
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !16237

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !16238
  br label %kmalloc_index.exit.i, !dbg !16238

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16239
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !16240
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !16241

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !16242
  br label %kmalloc_index.exit.i, !dbg !16242

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16243
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !16244
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !16245

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !16246
  br label %kmalloc_index.exit.i, !dbg !16246

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16247
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !16248
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !16249

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !16250
  br label %kmalloc_index.exit.i, !dbg !16250

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16251
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !16252
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !16253

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !16254
  br label %kmalloc_index.exit.i, !dbg !16254

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16255
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !16256
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !16257

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !16258
  br label %kmalloc_index.exit.i, !dbg !16258

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16259
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !16260
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !16261

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !16262
  br label %kmalloc_index.exit.i, !dbg !16262

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16263
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !16264
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !16265

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !16266
  br label %kmalloc_index.exit.i, !dbg !16266

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16267
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !16268
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !16269

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !16270
  br label %kmalloc_index.exit.i, !dbg !16270

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16271
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !16272
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !16273

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !16274
  br label %kmalloc_index.exit.i, !dbg !16274

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16275
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !16276
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !16277

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !16278
  br label %kmalloc_index.exit.i, !dbg !16278

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16279
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !16280
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !16281

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !16282
  br label %kmalloc_index.exit.i, !dbg !16282

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16283
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !16284
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !16285

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !16286
  br label %kmalloc_index.exit.i, !dbg !16286

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16287
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !16288
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !16289

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !16290
  br label %kmalloc_index.exit.i, !dbg !16290

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16291
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !16292
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !16293

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !16294
  br label %kmalloc_index.exit.i, !dbg !16294

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16295
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !16296
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !16297

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !16298
  br label %kmalloc_index.exit.i, !dbg !16298

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16299
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !16300
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !16301

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !16302
  br label %kmalloc_index.exit.i, !dbg !16302

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16303
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !16304
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !16305

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !16306
  br label %kmalloc_index.exit.i, !dbg !16306

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16307
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !16308
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !16309

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !16310
  br label %kmalloc_index.exit.i, !dbg !16310

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16311
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !16312
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !16313

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !16314
  br label %kmalloc_index.exit.i, !dbg !16314

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.119, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !16315, !srcloc !9829
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 233) #10, !dbg !16316, !srcloc !9833
  unreachable, !dbg !16317

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !16318
  store i32 %45, i32* %index.i, align 4, !dbg !16319
  %46 = load i32, i32* %index.i, align 4, !dbg !16320
  %tobool.i = icmp ne i32 %46, 0, !dbg !16320
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !16321

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !16322
  br label %kmalloc.exit, !dbg !16322

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !16323
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !16324
  %and.i.i = and i32 %48, 17, !dbg !16324
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !16324
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !16324
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !16324
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !16324
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !16325

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !16326
  br label %kmalloc_type.exit.i, !dbg !16326

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !16327
  %and2.i.i = and i32 %49, 1, !dbg !16328
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !16327
  %50 = zext i1 %tobool3.i.i to i64, !dbg !16327
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !16327
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !16329
  br label %kmalloc_type.exit.i, !dbg !16329

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !16330
  %idxprom.i = zext i32 %51 to i64, !dbg !16331
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !16331
  %52 = load i32, i32* %index.i, align 4, !dbg !16332
  %idxprom6.i = zext i32 %52 to i64, !dbg !16331
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !16331
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !16331
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !16333
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !16334
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !16335
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !16336
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #13, !dbg !16337
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !16337
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !16337
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !16337
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !16337
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !16152
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !16338
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !16339
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !16340
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !16341
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #13, !dbg !16342
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !16343
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !16344
  store i8* %62, i8** %retval.i, align 8, !dbg !16345
  br label %kmalloc.exit, !dbg !16345

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !16346
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !16347
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #13, !dbg !16348
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !16348
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !16348
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !16348
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !16348
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !16349
  br label %kmalloc.exit, !dbg !16349

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !16350
  %66 = bitcast i8* %65 to %struct.mlxsw_core_health_event*, !dbg !16351
  store %struct.mlxsw_core_health_event* %66, %struct.mlxsw_core_health_event** %event, align 8, !dbg !16352
  %67 = load %struct.mlxsw_core_health_event*, %struct.mlxsw_core_health_event** %event, align 8, !dbg !16353
  %tobool = icmp ne %struct.mlxsw_core_health_event* %67, null, !dbg !16353
  br i1 %tobool, label %if.end, label %if.then, !dbg !16355

if.then:                                          ; preds = %kmalloc.exit
  br label %return, !dbg !16356

if.end:                                           ; preds = %kmalloc.exit
  %68 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !16357
  %69 = load %struct.mlxsw_core_health_event*, %struct.mlxsw_core_health_event** %event, align 8, !dbg !16358
  %mlxsw_core1 = getelementptr inbounds %struct.mlxsw_core_health_event, %struct.mlxsw_core_health_event* %69, i32 0, i32 0, !dbg !16359
  store %struct.mlxsw_core* %68, %struct.mlxsw_core** %mlxsw_core1, align 8, !dbg !16360
  %70 = load %struct.mlxsw_core_health_event*, %struct.mlxsw_core_health_event** %event, align 8, !dbg !16361
  %mfde_pl2 = getelementptr inbounds %struct.mlxsw_core_health_event, %struct.mlxsw_core_health_event* %70, i32 0, i32 1, !dbg !16362
  %arraydecay = getelementptr inbounds [24 x i8], [24 x i8]* %mfde_pl2, i64 0, i64 0, !dbg !16363
  %71 = load i8*, i8** %mfde_pl.addr, align 8, !dbg !16364
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %arraydecay, i8* align 1 %71, i64 24, i1 false), !dbg !16363
  br label %do.body, !dbg !16365

do.body:                                          ; preds = %if.end
  %72 = load %struct.mlxsw_core_health_event*, %struct.mlxsw_core_health_event** %event, align 8, !dbg !16366
  %work = getelementptr inbounds %struct.mlxsw_core_health_event, %struct.mlxsw_core_health_event* %72, i32 0, i32 2, !dbg !16366
  call void @__init_work(%struct.work_struct* %work, i32 0) #11, !dbg !16366
  %73 = load %struct.mlxsw_core_health_event*, %struct.mlxsw_core_health_event** %event, align 8, !dbg !16366
  %work3 = getelementptr inbounds %struct.mlxsw_core_health_event, %struct.mlxsw_core_health_event* %73, i32 0, i32 2, !dbg !16366
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work3, i32 0, i32 0, !dbg !16366
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !16366
  store i64 68719476704, i64* %counter, align 8, !dbg !16366
  %74 = bitcast %struct.atomic64_t* %data to i8*, !dbg !16366
  %75 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !16366
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 8, i1 false), !dbg !16366
  %76 = load %struct.mlxsw_core_health_event*, %struct.mlxsw_core_health_event** %event, align 8, !dbg !16366
  %work4 = getelementptr inbounds %struct.mlxsw_core_health_event, %struct.mlxsw_core_health_event* %76, i32 0, i32 2, !dbg !16366
  %entry5 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work4, i32 0, i32 1, !dbg !16366
  call void @INIT_LIST_HEAD(%struct.list_head* %entry5) #11, !dbg !16366
  %77 = load %struct.mlxsw_core_health_event*, %struct.mlxsw_core_health_event** %event, align 8, !dbg !16366
  %work6 = getelementptr inbounds %struct.mlxsw_core_health_event, %struct.mlxsw_core_health_event* %77, i32 0, i32 2, !dbg !16366
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work6, i32 0, i32 2, !dbg !16366
  store void (%struct.work_struct*)* @mlxsw_core_health_event_work, void (%struct.work_struct*)** %func, align 8, !dbg !16366
  br label %do.end, !dbg !16366

do.end:                                           ; preds = %do.body
  %78 = load %struct.mlxsw_core_health_event*, %struct.mlxsw_core_health_event** %event, align 8, !dbg !16368
  %work7 = getelementptr inbounds %struct.mlxsw_core_health_event, %struct.mlxsw_core_health_event* %78, i32 0, i32 2, !dbg !16369
  %call8 = call zeroext i1 @mlxsw_core_schedule_work(%struct.work_struct* %work7) #11, !dbg !16370
  br label %return, !dbg !16371

return:                                           ; preds = %do.end, %if.then
  ret void, !dbg !16371
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #0 !dbg !16372 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !16375, metadata !DIExpression()), !dbg !16376
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !16377, metadata !DIExpression()), !dbg !16378
  ret void, !dbg !16379
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_core_health_event_work(%struct.work_struct* %work) #0 !dbg !16380 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %event = alloca %struct.mlxsw_core_health_event*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_core_health_event*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !16381, metadata !DIExpression()), !dbg !16382
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core_health_event** %event, metadata !16383, metadata !DIExpression()), !dbg !16384
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !16385, metadata !DIExpression()), !dbg !16386
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !16387, metadata !DIExpression()), !dbg !16389
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !16389
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !16389
  store i8* %1, i8** %__mptr, align 8, !dbg !16389
  br label %do.body, !dbg !16389

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !16390

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !16389
  %add.ptr = getelementptr i8, i8* %2, i64 -32, !dbg !16389
  %3 = bitcast i8* %add.ptr to %struct.mlxsw_core_health_event*, !dbg !16389
  store %struct.mlxsw_core_health_event* %3, %struct.mlxsw_core_health_event** %tmp, align 8, !dbg !16390
  %4 = load %struct.mlxsw_core_health_event*, %struct.mlxsw_core_health_event** %tmp, align 8, !dbg !16389
  store %struct.mlxsw_core_health_event* %4, %struct.mlxsw_core_health_event** %event, align 8, !dbg !16392
  %5 = load %struct.mlxsw_core_health_event*, %struct.mlxsw_core_health_event** %event, align 8, !dbg !16393
  %mlxsw_core1 = getelementptr inbounds %struct.mlxsw_core_health_event, %struct.mlxsw_core_health_event* %5, i32 0, i32 0, !dbg !16394
  %6 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core1, align 8, !dbg !16394
  store %struct.mlxsw_core* %6, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !16395
  %7 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !16396
  %health = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %7, i32 0, i32 15, !dbg !16397
  %fw_fatal = getelementptr inbounds %struct.anon.131, %struct.anon.131* %health, i32 0, i32 0, !dbg !16398
  %8 = load %struct.devlink_health_reporter*, %struct.devlink_health_reporter** %fw_fatal, align 8, !dbg !16398
  %9 = load %struct.mlxsw_core_health_event*, %struct.mlxsw_core_health_event** %event, align 8, !dbg !16399
  %mfde_pl = getelementptr inbounds %struct.mlxsw_core_health_event, %struct.mlxsw_core_health_event* %9, i32 0, i32 1, !dbg !16400
  %arraydecay = getelementptr inbounds [24 x i8], [24 x i8]* %mfde_pl, i64 0, i64 0, !dbg !16399
  %call = call i32 @devlink_health_report(%struct.devlink_health_reporter* %8, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.116, i64 0, i64 0), i8* %arraydecay) #11, !dbg !16401
  %10 = load %struct.mlxsw_core_health_event*, %struct.mlxsw_core_health_event** %event, align 8, !dbg !16402
  %11 = bitcast %struct.mlxsw_core_health_event* %10 to i8*, !dbg !16402
  call void @kfree(i8* %11) #11, !dbg !16403
  ret void, !dbg !16404
}

; Function Attrs: noredzone
declare dso_local i32 @devlink_health_report(%struct.devlink_health_reporter*, i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_mfgd_fatal_event_mode_set(i8* %buf, i32 %val) #0 !dbg !16405 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16406, metadata !DIExpression()), !dbg !16407
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !16408, metadata !DIExpression()), !dbg !16407
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16407
  %1 = load i32, i32* %val.addr, align 4, !dbg !16407
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mfgd_fatal_event_mode_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !16407
  ret void, !dbg !16407
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__is_rx_listener_equal(%struct.mlxsw_rx_listener* %rxl_a, %struct.mlxsw_rx_listener* %rxl_b) #0 !dbg !16409 {
entry:
  %rxl_a.addr = alloca %struct.mlxsw_rx_listener*, align 8
  %rxl_b.addr = alloca %struct.mlxsw_rx_listener*, align 8
  store %struct.mlxsw_rx_listener* %rxl_a, %struct.mlxsw_rx_listener** %rxl_a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_rx_listener** %rxl_a.addr, metadata !16412, metadata !DIExpression()), !dbg !16413
  store %struct.mlxsw_rx_listener* %rxl_b, %struct.mlxsw_rx_listener** %rxl_b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_rx_listener** %rxl_b.addr, metadata !16414, metadata !DIExpression()), !dbg !16415
  %0 = load %struct.mlxsw_rx_listener*, %struct.mlxsw_rx_listener** %rxl_a.addr, align 8, !dbg !16416
  %func = getelementptr inbounds %struct.mlxsw_rx_listener, %struct.mlxsw_rx_listener* %0, i32 0, i32 0, !dbg !16417
  %1 = load void (%struct.sk_buff*, i8, i8*)*, void (%struct.sk_buff*, i8, i8*)** %func, align 8, !dbg !16417
  %2 = load %struct.mlxsw_rx_listener*, %struct.mlxsw_rx_listener** %rxl_b.addr, align 8, !dbg !16418
  %func1 = getelementptr inbounds %struct.mlxsw_rx_listener, %struct.mlxsw_rx_listener* %2, i32 0, i32 0, !dbg !16419
  %3 = load void (%struct.sk_buff*, i8, i8*)*, void (%struct.sk_buff*, i8, i8*)** %func1, align 8, !dbg !16419
  %cmp = icmp eq void (%struct.sk_buff*, i8, i8*)* %1, %3, !dbg !16420
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !16421

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.mlxsw_rx_listener*, %struct.mlxsw_rx_listener** %rxl_a.addr, align 8, !dbg !16422
  %local_port = getelementptr inbounds %struct.mlxsw_rx_listener, %struct.mlxsw_rx_listener* %4, i32 0, i32 1, !dbg !16423
  %5 = load i8, i8* %local_port, align 8, !dbg !16423
  %conv = zext i8 %5 to i32, !dbg !16422
  %6 = load %struct.mlxsw_rx_listener*, %struct.mlxsw_rx_listener** %rxl_b.addr, align 8, !dbg !16424
  %local_port2 = getelementptr inbounds %struct.mlxsw_rx_listener, %struct.mlxsw_rx_listener* %6, i32 0, i32 1, !dbg !16425
  %7 = load i8, i8* %local_port2, align 8, !dbg !16425
  %conv3 = zext i8 %7 to i32, !dbg !16424
  %cmp4 = icmp eq i32 %conv, %conv3, !dbg !16426
  br i1 %cmp4, label %land.lhs.true6, label %land.end, !dbg !16427

land.lhs.true6:                                   ; preds = %land.lhs.true
  %8 = load %struct.mlxsw_rx_listener*, %struct.mlxsw_rx_listener** %rxl_a.addr, align 8, !dbg !16428
  %trap_id = getelementptr inbounds %struct.mlxsw_rx_listener, %struct.mlxsw_rx_listener* %8, i32 0, i32 3, !dbg !16429
  %9 = load i16, i16* %trap_id, align 2, !dbg !16429
  %conv7 = zext i16 %9 to i32, !dbg !16428
  %10 = load %struct.mlxsw_rx_listener*, %struct.mlxsw_rx_listener** %rxl_b.addr, align 8, !dbg !16430
  %trap_id8 = getelementptr inbounds %struct.mlxsw_rx_listener, %struct.mlxsw_rx_listener* %10, i32 0, i32 3, !dbg !16431
  %11 = load i16, i16* %trap_id8, align 2, !dbg !16431
  %conv9 = zext i16 %11 to i32, !dbg !16430
  %cmp10 = icmp eq i32 %conv7, %conv9, !dbg !16432
  br i1 %cmp10, label %land.rhs, label %land.end, !dbg !16433

land.rhs:                                         ; preds = %land.lhs.true6
  %12 = load %struct.mlxsw_rx_listener*, %struct.mlxsw_rx_listener** %rxl_a.addr, align 8, !dbg !16434
  %mirror_reason = getelementptr inbounds %struct.mlxsw_rx_listener, %struct.mlxsw_rx_listener* %12, i32 0, i32 2, !dbg !16435
  %13 = load i8, i8* %mirror_reason, align 1, !dbg !16435
  %conv12 = zext i8 %13 to i32, !dbg !16434
  %14 = load %struct.mlxsw_rx_listener*, %struct.mlxsw_rx_listener** %rxl_b.addr, align 8, !dbg !16436
  %mirror_reason13 = getelementptr inbounds %struct.mlxsw_rx_listener, %struct.mlxsw_rx_listener* %14, i32 0, i32 2, !dbg !16437
  %15 = load i8, i8* %mirror_reason13, align 1, !dbg !16437
  %conv14 = zext i8 %15 to i32, !dbg !16436
  %cmp15 = icmp eq i32 %conv12, %conv14, !dbg !16438
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true6, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true6 ], [ false, %land.lhs.true ], [ false, %entry ], [ %cmp15, %land.rhs ], !dbg !16439
  ret i1 %16, !dbg !16440
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #7 !dbg !16441 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !16445, metadata !DIExpression()), !dbg !16450
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !16452, metadata !DIExpression()), !dbg !16453
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !16454, metadata !DIExpression()), !dbg !16455
  %0 = load i64, i64* %size.addr, align 8, !dbg !16456
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !16458
  br i1 %1, label %if.then, label %if.end447, !dbg !16459

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !16460
  %tobool = icmp ne i64 %2, 0, !dbg !16460
  br i1 %tobool, label %if.end, label %if.then1, !dbg !16463

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !16464
  br label %return, !dbg !16464

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !16465
  %cmp = icmp ult i64 %3, 4096, !dbg !16467
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !16468

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !16469
  br label %return, !dbg !16469

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub = sub i64 %4, 1, !dbg !16470
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !16470
  br i1 %5, label %cond.true, label %cond.false442, !dbg !16470

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub4 = sub i64 %6, 1, !dbg !16470
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !16470
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !16470

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub6 = sub i64 %8, 1, !dbg !16470
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !16470
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !16470

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !16470

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub9 = sub i64 %9, 1, !dbg !16470
  %and = and i64 %sub9, -9223372036854775808, !dbg !16470
  %tobool10 = icmp ne i64 %and, 0, !dbg !16470
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !16470

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !16470

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub13 = sub i64 %10, 1, !dbg !16470
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !16470
  %tobool15 = icmp ne i64 %and14, 0, !dbg !16470
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !16470

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !16470

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub18 = sub i64 %11, 1, !dbg !16470
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !16470
  %tobool20 = icmp ne i64 %and19, 0, !dbg !16470
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !16470

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !16470

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub23 = sub i64 %12, 1, !dbg !16470
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !16470
  %tobool25 = icmp ne i64 %and24, 0, !dbg !16470
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !16470

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !16470

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub28 = sub i64 %13, 1, !dbg !16470
  %and29 = and i64 %sub28, 576460752303423488, !dbg !16470
  %tobool30 = icmp ne i64 %and29, 0, !dbg !16470
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !16470

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !16470

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub33 = sub i64 %14, 1, !dbg !16470
  %and34 = and i64 %sub33, 288230376151711744, !dbg !16470
  %tobool35 = icmp ne i64 %and34, 0, !dbg !16470
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !16470

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !16470

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub38 = sub i64 %15, 1, !dbg !16470
  %and39 = and i64 %sub38, 144115188075855872, !dbg !16470
  %tobool40 = icmp ne i64 %and39, 0, !dbg !16470
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !16470

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !16470

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub43 = sub i64 %16, 1, !dbg !16470
  %and44 = and i64 %sub43, 72057594037927936, !dbg !16470
  %tobool45 = icmp ne i64 %and44, 0, !dbg !16470
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !16470

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !16470

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub48 = sub i64 %17, 1, !dbg !16470
  %and49 = and i64 %sub48, 36028797018963968, !dbg !16470
  %tobool50 = icmp ne i64 %and49, 0, !dbg !16470
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !16470

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !16470

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub53 = sub i64 %18, 1, !dbg !16470
  %and54 = and i64 %sub53, 18014398509481984, !dbg !16470
  %tobool55 = icmp ne i64 %and54, 0, !dbg !16470
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !16470

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !16470

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub58 = sub i64 %19, 1, !dbg !16470
  %and59 = and i64 %sub58, 9007199254740992, !dbg !16470
  %tobool60 = icmp ne i64 %and59, 0, !dbg !16470
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !16470

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !16470

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub63 = sub i64 %20, 1, !dbg !16470
  %and64 = and i64 %sub63, 4503599627370496, !dbg !16470
  %tobool65 = icmp ne i64 %and64, 0, !dbg !16470
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !16470

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !16470

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub68 = sub i64 %21, 1, !dbg !16470
  %and69 = and i64 %sub68, 2251799813685248, !dbg !16470
  %tobool70 = icmp ne i64 %and69, 0, !dbg !16470
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !16470

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !16470

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub73 = sub i64 %22, 1, !dbg !16470
  %and74 = and i64 %sub73, 1125899906842624, !dbg !16470
  %tobool75 = icmp ne i64 %and74, 0, !dbg !16470
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !16470

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !16470

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub78 = sub i64 %23, 1, !dbg !16470
  %and79 = and i64 %sub78, 562949953421312, !dbg !16470
  %tobool80 = icmp ne i64 %and79, 0, !dbg !16470
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !16470

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !16470

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub83 = sub i64 %24, 1, !dbg !16470
  %and84 = and i64 %sub83, 281474976710656, !dbg !16470
  %tobool85 = icmp ne i64 %and84, 0, !dbg !16470
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !16470

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !16470

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub88 = sub i64 %25, 1, !dbg !16470
  %and89 = and i64 %sub88, 140737488355328, !dbg !16470
  %tobool90 = icmp ne i64 %and89, 0, !dbg !16470
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !16470

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !16470

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub93 = sub i64 %26, 1, !dbg !16470
  %and94 = and i64 %sub93, 70368744177664, !dbg !16470
  %tobool95 = icmp ne i64 %and94, 0, !dbg !16470
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !16470

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !16470

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub98 = sub i64 %27, 1, !dbg !16470
  %and99 = and i64 %sub98, 35184372088832, !dbg !16470
  %tobool100 = icmp ne i64 %and99, 0, !dbg !16470
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !16470

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !16470

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub103 = sub i64 %28, 1, !dbg !16470
  %and104 = and i64 %sub103, 17592186044416, !dbg !16470
  %tobool105 = icmp ne i64 %and104, 0, !dbg !16470
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !16470

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !16470

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub108 = sub i64 %29, 1, !dbg !16470
  %and109 = and i64 %sub108, 8796093022208, !dbg !16470
  %tobool110 = icmp ne i64 %and109, 0, !dbg !16470
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !16470

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !16470

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub113 = sub i64 %30, 1, !dbg !16470
  %and114 = and i64 %sub113, 4398046511104, !dbg !16470
  %tobool115 = icmp ne i64 %and114, 0, !dbg !16470
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !16470

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !16470

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub118 = sub i64 %31, 1, !dbg !16470
  %and119 = and i64 %sub118, 2199023255552, !dbg !16470
  %tobool120 = icmp ne i64 %and119, 0, !dbg !16470
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !16470

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !16470

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub123 = sub i64 %32, 1, !dbg !16470
  %and124 = and i64 %sub123, 1099511627776, !dbg !16470
  %tobool125 = icmp ne i64 %and124, 0, !dbg !16470
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !16470

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !16470

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub128 = sub i64 %33, 1, !dbg !16470
  %and129 = and i64 %sub128, 549755813888, !dbg !16470
  %tobool130 = icmp ne i64 %and129, 0, !dbg !16470
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !16470

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !16470

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub133 = sub i64 %34, 1, !dbg !16470
  %and134 = and i64 %sub133, 274877906944, !dbg !16470
  %tobool135 = icmp ne i64 %and134, 0, !dbg !16470
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !16470

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !16470

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub138 = sub i64 %35, 1, !dbg !16470
  %and139 = and i64 %sub138, 137438953472, !dbg !16470
  %tobool140 = icmp ne i64 %and139, 0, !dbg !16470
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !16470

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !16470

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub143 = sub i64 %36, 1, !dbg !16470
  %and144 = and i64 %sub143, 68719476736, !dbg !16470
  %tobool145 = icmp ne i64 %and144, 0, !dbg !16470
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !16470

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !16470

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub148 = sub i64 %37, 1, !dbg !16470
  %and149 = and i64 %sub148, 34359738368, !dbg !16470
  %tobool150 = icmp ne i64 %and149, 0, !dbg !16470
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !16470

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !16470

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub153 = sub i64 %38, 1, !dbg !16470
  %and154 = and i64 %sub153, 17179869184, !dbg !16470
  %tobool155 = icmp ne i64 %and154, 0, !dbg !16470
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !16470

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !16470

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub158 = sub i64 %39, 1, !dbg !16470
  %and159 = and i64 %sub158, 8589934592, !dbg !16470
  %tobool160 = icmp ne i64 %and159, 0, !dbg !16470
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !16470

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !16470

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub163 = sub i64 %40, 1, !dbg !16470
  %and164 = and i64 %sub163, 4294967296, !dbg !16470
  %tobool165 = icmp ne i64 %and164, 0, !dbg !16470
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !16470

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !16470

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub168 = sub i64 %41, 1, !dbg !16470
  %and169 = and i64 %sub168, 2147483648, !dbg !16470
  %tobool170 = icmp ne i64 %and169, 0, !dbg !16470
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !16470

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !16470

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub173 = sub i64 %42, 1, !dbg !16470
  %and174 = and i64 %sub173, 1073741824, !dbg !16470
  %tobool175 = icmp ne i64 %and174, 0, !dbg !16470
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !16470

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !16470

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub178 = sub i64 %43, 1, !dbg !16470
  %and179 = and i64 %sub178, 536870912, !dbg !16470
  %tobool180 = icmp ne i64 %and179, 0, !dbg !16470
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !16470

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !16470

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub183 = sub i64 %44, 1, !dbg !16470
  %and184 = and i64 %sub183, 268435456, !dbg !16470
  %tobool185 = icmp ne i64 %and184, 0, !dbg !16470
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !16470

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !16470

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub188 = sub i64 %45, 1, !dbg !16470
  %and189 = and i64 %sub188, 134217728, !dbg !16470
  %tobool190 = icmp ne i64 %and189, 0, !dbg !16470
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !16470

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !16470

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub193 = sub i64 %46, 1, !dbg !16470
  %and194 = and i64 %sub193, 67108864, !dbg !16470
  %tobool195 = icmp ne i64 %and194, 0, !dbg !16470
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !16470

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !16470

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub198 = sub i64 %47, 1, !dbg !16470
  %and199 = and i64 %sub198, 33554432, !dbg !16470
  %tobool200 = icmp ne i64 %and199, 0, !dbg !16470
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !16470

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !16470

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub203 = sub i64 %48, 1, !dbg !16470
  %and204 = and i64 %sub203, 16777216, !dbg !16470
  %tobool205 = icmp ne i64 %and204, 0, !dbg !16470
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !16470

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !16470

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub208 = sub i64 %49, 1, !dbg !16470
  %and209 = and i64 %sub208, 8388608, !dbg !16470
  %tobool210 = icmp ne i64 %and209, 0, !dbg !16470
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !16470

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !16470

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub213 = sub i64 %50, 1, !dbg !16470
  %and214 = and i64 %sub213, 4194304, !dbg !16470
  %tobool215 = icmp ne i64 %and214, 0, !dbg !16470
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !16470

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !16470

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub218 = sub i64 %51, 1, !dbg !16470
  %and219 = and i64 %sub218, 2097152, !dbg !16470
  %tobool220 = icmp ne i64 %and219, 0, !dbg !16470
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !16470

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !16470

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub223 = sub i64 %52, 1, !dbg !16470
  %and224 = and i64 %sub223, 1048576, !dbg !16470
  %tobool225 = icmp ne i64 %and224, 0, !dbg !16470
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !16470

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !16470

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub228 = sub i64 %53, 1, !dbg !16470
  %and229 = and i64 %sub228, 524288, !dbg !16470
  %tobool230 = icmp ne i64 %and229, 0, !dbg !16470
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !16470

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !16470

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub233 = sub i64 %54, 1, !dbg !16470
  %and234 = and i64 %sub233, 262144, !dbg !16470
  %tobool235 = icmp ne i64 %and234, 0, !dbg !16470
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !16470

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !16470

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub238 = sub i64 %55, 1, !dbg !16470
  %and239 = and i64 %sub238, 131072, !dbg !16470
  %tobool240 = icmp ne i64 %and239, 0, !dbg !16470
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !16470

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !16470

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub243 = sub i64 %56, 1, !dbg !16470
  %and244 = and i64 %sub243, 65536, !dbg !16470
  %tobool245 = icmp ne i64 %and244, 0, !dbg !16470
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !16470

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !16470

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub248 = sub i64 %57, 1, !dbg !16470
  %and249 = and i64 %sub248, 32768, !dbg !16470
  %tobool250 = icmp ne i64 %and249, 0, !dbg !16470
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !16470

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !16470

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub253 = sub i64 %58, 1, !dbg !16470
  %and254 = and i64 %sub253, 16384, !dbg !16470
  %tobool255 = icmp ne i64 %and254, 0, !dbg !16470
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !16470

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !16470

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub258 = sub i64 %59, 1, !dbg !16470
  %and259 = and i64 %sub258, 8192, !dbg !16470
  %tobool260 = icmp ne i64 %and259, 0, !dbg !16470
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !16470

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !16470

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub263 = sub i64 %60, 1, !dbg !16470
  %and264 = and i64 %sub263, 4096, !dbg !16470
  %tobool265 = icmp ne i64 %and264, 0, !dbg !16470
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !16470

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !16470

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub268 = sub i64 %61, 1, !dbg !16470
  %and269 = and i64 %sub268, 2048, !dbg !16470
  %tobool270 = icmp ne i64 %and269, 0, !dbg !16470
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !16470

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !16470

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub273 = sub i64 %62, 1, !dbg !16470
  %and274 = and i64 %sub273, 1024, !dbg !16470
  %tobool275 = icmp ne i64 %and274, 0, !dbg !16470
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !16470

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !16470

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub278 = sub i64 %63, 1, !dbg !16470
  %and279 = and i64 %sub278, 512, !dbg !16470
  %tobool280 = icmp ne i64 %and279, 0, !dbg !16470
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !16470

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !16470

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub283 = sub i64 %64, 1, !dbg !16470
  %and284 = and i64 %sub283, 256, !dbg !16470
  %tobool285 = icmp ne i64 %and284, 0, !dbg !16470
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !16470

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !16470

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub288 = sub i64 %65, 1, !dbg !16470
  %and289 = and i64 %sub288, 128, !dbg !16470
  %tobool290 = icmp ne i64 %and289, 0, !dbg !16470
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !16470

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !16470

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub293 = sub i64 %66, 1, !dbg !16470
  %and294 = and i64 %sub293, 64, !dbg !16470
  %tobool295 = icmp ne i64 %and294, 0, !dbg !16470
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !16470

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !16470

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub298 = sub i64 %67, 1, !dbg !16470
  %and299 = and i64 %sub298, 32, !dbg !16470
  %tobool300 = icmp ne i64 %and299, 0, !dbg !16470
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !16470

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !16470

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub303 = sub i64 %68, 1, !dbg !16470
  %and304 = and i64 %sub303, 16, !dbg !16470
  %tobool305 = icmp ne i64 %and304, 0, !dbg !16470
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !16470

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !16470

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub308 = sub i64 %69, 1, !dbg !16470
  %and309 = and i64 %sub308, 8, !dbg !16470
  %tobool310 = icmp ne i64 %and309, 0, !dbg !16470
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !16470

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !16470

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub313 = sub i64 %70, 1, !dbg !16470
  %and314 = and i64 %sub313, 4, !dbg !16470
  %tobool315 = icmp ne i64 %and314, 0, !dbg !16470
  %71 = zext i1 %tobool315 to i64, !dbg !16470
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !16470
  br label %cond.end, !dbg !16470

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !16470
  br label %cond.end317, !dbg !16470

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !16470
  br label %cond.end319, !dbg !16470

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !16470
  br label %cond.end321, !dbg !16470

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !16470
  br label %cond.end323, !dbg !16470

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !16470
  br label %cond.end325, !dbg !16470

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !16470
  br label %cond.end327, !dbg !16470

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !16470
  br label %cond.end329, !dbg !16470

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !16470
  br label %cond.end331, !dbg !16470

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !16470
  br label %cond.end333, !dbg !16470

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !16470
  br label %cond.end335, !dbg !16470

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !16470
  br label %cond.end337, !dbg !16470

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !16470
  br label %cond.end339, !dbg !16470

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !16470
  br label %cond.end341, !dbg !16470

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !16470
  br label %cond.end343, !dbg !16470

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !16470
  br label %cond.end345, !dbg !16470

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !16470
  br label %cond.end347, !dbg !16470

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !16470
  br label %cond.end349, !dbg !16470

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !16470
  br label %cond.end351, !dbg !16470

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !16470
  br label %cond.end353, !dbg !16470

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !16470
  br label %cond.end355, !dbg !16470

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !16470
  br label %cond.end357, !dbg !16470

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !16470
  br label %cond.end359, !dbg !16470

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !16470
  br label %cond.end361, !dbg !16470

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !16470
  br label %cond.end363, !dbg !16470

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !16470
  br label %cond.end365, !dbg !16470

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !16470
  br label %cond.end367, !dbg !16470

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !16470
  br label %cond.end369, !dbg !16470

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !16470
  br label %cond.end371, !dbg !16470

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !16470
  br label %cond.end373, !dbg !16470

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !16470
  br label %cond.end375, !dbg !16470

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !16470
  br label %cond.end377, !dbg !16470

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !16470
  br label %cond.end379, !dbg !16470

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !16470
  br label %cond.end381, !dbg !16470

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !16470
  br label %cond.end383, !dbg !16470

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !16470
  br label %cond.end385, !dbg !16470

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !16470
  br label %cond.end387, !dbg !16470

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !16470
  br label %cond.end389, !dbg !16470

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !16470
  br label %cond.end391, !dbg !16470

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !16470
  br label %cond.end393, !dbg !16470

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !16470
  br label %cond.end395, !dbg !16470

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !16470
  br label %cond.end397, !dbg !16470

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !16470
  br label %cond.end399, !dbg !16470

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !16470
  br label %cond.end401, !dbg !16470

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !16470
  br label %cond.end403, !dbg !16470

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !16470
  br label %cond.end405, !dbg !16470

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !16470
  br label %cond.end407, !dbg !16470

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !16470
  br label %cond.end409, !dbg !16470

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !16470
  br label %cond.end411, !dbg !16470

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !16470
  br label %cond.end413, !dbg !16470

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !16470
  br label %cond.end415, !dbg !16470

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !16470
  br label %cond.end417, !dbg !16470

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !16470
  br label %cond.end419, !dbg !16470

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !16470
  br label %cond.end421, !dbg !16470

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !16470
  br label %cond.end423, !dbg !16470

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !16470
  br label %cond.end425, !dbg !16470

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !16470
  br label %cond.end427, !dbg !16470

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !16470
  br label %cond.end429, !dbg !16470

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !16470
  br label %cond.end431, !dbg !16470

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !16470
  br label %cond.end433, !dbg !16470

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !16470
  br label %cond.end435, !dbg !16470

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !16470
  br label %cond.end437, !dbg !16470

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !16470
  br label %cond.end440, !dbg !16470

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !16470

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !16470
  br label %cond.end444, !dbg !16470

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !16470
  %sub443 = sub i64 %72, 1, !dbg !16470
  %call = call i32 @__ilog2_u64(i64 %sub443) #12, !dbg !16470
  br label %cond.end444, !dbg !16470

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !16470
  %sub446 = sub i32 %cond445, 12, !dbg !16471
  %add = add i32 %sub446, 1, !dbg !16472
  store i32 %add, i32* %retval, align 4, !dbg !16473
  br label %return, !dbg !16473

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !16474
  %dec = add i64 %73, -1, !dbg !16474
  store i64 %dec, i64* %size.addr, align 8, !dbg !16474
  %74 = load i64, i64* %size.addr, align 8, !dbg !16475
  %shr = lshr i64 %74, 12, !dbg !16475
  store i64 %shr, i64* %size.addr, align 8, !dbg !16475
  %75 = load i64, i64* %size.addr, align 8, !dbg !16476
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !16453
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !16477
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !16478
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #16, !dbg !16477, !srcloc !16479
  store i32 %78, i32* %bitpos.i, align 4, !dbg !16477
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !16480
  %add.i = add i32 %79, 1, !dbg !16481
  store i32 %add.i, i32* %retval, align 4, !dbg !16482
  br label %return, !dbg !16482

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !16483
  ret i32 %80, !dbg !16483
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #7 !dbg !16484 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !16445, metadata !DIExpression()), !dbg !16488
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !16452, metadata !DIExpression()), !dbg !16490
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !16491, metadata !DIExpression()), !dbg !16492
  %0 = load i64, i64* %n.addr, align 8, !dbg !16493
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !16490
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !16494
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !16495
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #16, !dbg !16494, !srcloc !16479
  store i32 %3, i32* %bitpos.i, align 4, !dbg !16494
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !16496
  %add.i = add i32 %4, 1, !dbg !16497
  %sub = sub i32 %add.i, 1, !dbg !16498
  ret i32 %sub, !dbg !16499
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !16500 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !16504, metadata !DIExpression()), !dbg !16505
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !16506, metadata !DIExpression()), !dbg !16507
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !16508, metadata !DIExpression()), !dbg !16509
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !16510, metadata !DIExpression()), !dbg !16511
  %0 = load i8*, i8** %object.addr, align 8, !dbg !16512
  ret i8* %0, !dbg !16513
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add_rcu(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !16514 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  %_r_a_p__v = alloca i64, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !16515, metadata !DIExpression()), !dbg !16516
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !16517, metadata !DIExpression()), !dbg !16518
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !16519, metadata !DIExpression()), !dbg !16520
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !16521
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !16523
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !16524
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #11, !dbg !16525
  br i1 %call, label %if.end, label %if.then, !dbg !16526

if.then:                                          ; preds = %entry
  br label %return, !dbg !16527

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !16528
  %4 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !16529
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 0, !dbg !16530
  store %struct.list_head* %3, %struct.list_head** %next1, align 8, !dbg !16531
  %5 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !16532
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !16533
  %prev2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 1, !dbg !16534
  store %struct.list_head* %5, %struct.list_head** %prev2, align 8, !dbg !16535
  br label %do.body, !dbg !16536

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %_r_a_p__v, metadata !16537, metadata !DIExpression()), !dbg !16539
  %7 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !16539
  %8 = ptrtoint %struct.list_head* %7 to i64, !dbg !16539
  store i64 %8, i64* %_r_a_p__v, align 8, !dbg !16539
  br i1 false, label %land.lhs.true, label %if.else, !dbg !16540

land.lhs.true:                                    ; preds = %do.body
  %9 = load i64, i64* %_r_a_p__v, align 8, !dbg !16540
  %cmp = icmp eq i64 %9, 0, !dbg !16540
  br i1 %cmp, label %if.then3, label %if.else, !dbg !16539

if.then3:                                         ; preds = %land.lhs.true
  br label %do.body4, !dbg !16540

do.body4:                                         ; preds = %if.then3
  br label %do.body5, !dbg !16542

do.body5:                                         ; preds = %do.body4
  br label %do.end, !dbg !16544

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !16542

do.body6:                                         ; preds = %do.end
  %10 = load i64, i64* %_r_a_p__v, align 8, !dbg !16546
  %11 = inttoptr i64 %10 to %struct.list_head*, !dbg !16546
  %12 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !16546
  %next7 = getelementptr inbounds %struct.list_head, %struct.list_head* %12, i32 0, i32 0, !dbg !16546
  store volatile %struct.list_head* %11, %struct.list_head** %next7, align 8, !dbg !16546
  br label %do.end8, !dbg !16546

do.end8:                                          ; preds = %do.body6
  br label %do.end9, !dbg !16542

do.end9:                                          ; preds = %do.end8
  br label %if.end21, !dbg !16542

if.else:                                          ; preds = %land.lhs.true, %do.body
  br label %do.body10, !dbg !16540

do.body10:                                        ; preds = %if.else
  br label %do.body11, !dbg !16548

do.body11:                                        ; preds = %do.body10
  br label %do.end12, !dbg !16550

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16548, !srcloc !16552
  br label %do.body13, !dbg !16548

do.body13:                                        ; preds = %do.end12
  br label %do.body14, !dbg !16553

do.body14:                                        ; preds = %do.body13
  br label %do.end15, !dbg !16555

do.end15:                                         ; preds = %do.body14
  br label %do.body16, !dbg !16553

do.body16:                                        ; preds = %do.end15
  %13 = load i64, i64* %_r_a_p__v, align 8, !dbg !16557
  %14 = inttoptr i64 %13 to %struct.list_head*, !dbg !16557
  %15 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !16557
  %next17 = getelementptr inbounds %struct.list_head, %struct.list_head* %15, i32 0, i32 0, !dbg !16557
  store volatile %struct.list_head* %14, %struct.list_head** %next17, align 8, !dbg !16557
  br label %do.end18, !dbg !16557

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !16553

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !16548

do.end20:                                         ; preds = %do.end19
  br label %if.end21

if.end21:                                         ; preds = %do.end20, %do.end9
  br label %do.end22, !dbg !16539

do.end22:                                         ; preds = %if.end21
  %16 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !16559
  %17 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !16560
  %prev23 = getelementptr inbounds %struct.list_head, %struct.list_head* %17, i32 0, i32 1, !dbg !16561
  store %struct.list_head* %16, %struct.list_head** %prev23, align 8, !dbg !16562
  br label %return, !dbg !16563

return:                                           ; preds = %do.end22, %if.then
  ret void, !dbg !16563
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_emad_op_tlv_register_id_get(i8* %buf) #0 !dbg !16564 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16565, metadata !DIExpression()), !dbg !16566
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16566
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_emad_op_tlv_register_id_item to %struct.mlxsw_item*), i16 zeroext 0) #11, !dbg !16566
  ret i32 %call, !dbg !16566
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_emad_reg_tlv_len_get(i8* %buf) #0 !dbg !16567 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16568, metadata !DIExpression()), !dbg !16569
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16569
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_emad_reg_tlv_len_item to %struct.mlxsw_item*), i16 zeroext 0) #11, !dbg !16569
  ret i32 %call, !dbg !16569
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__is_event_listener_equal(%struct.mlxsw_event_listener* %el_a, %struct.mlxsw_event_listener* %el_b) #0 !dbg !16570 {
entry:
  %el_a.addr = alloca %struct.mlxsw_event_listener*, align 8
  %el_b.addr = alloca %struct.mlxsw_event_listener*, align 8
  store %struct.mlxsw_event_listener* %el_a, %struct.mlxsw_event_listener** %el_a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_event_listener** %el_a.addr, metadata !16573, metadata !DIExpression()), !dbg !16574
  store %struct.mlxsw_event_listener* %el_b, %struct.mlxsw_event_listener** %el_b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_event_listener** %el_b.addr, metadata !16575, metadata !DIExpression()), !dbg !16576
  %0 = load %struct.mlxsw_event_listener*, %struct.mlxsw_event_listener** %el_a.addr, align 8, !dbg !16577
  %func = getelementptr inbounds %struct.mlxsw_event_listener, %struct.mlxsw_event_listener* %0, i32 0, i32 0, !dbg !16578
  %1 = load void (%struct.mlxsw_reg_info*, i8*, i8*)*, void (%struct.mlxsw_reg_info*, i8*, i8*)** %func, align 8, !dbg !16578
  %2 = load %struct.mlxsw_event_listener*, %struct.mlxsw_event_listener** %el_b.addr, align 8, !dbg !16579
  %func1 = getelementptr inbounds %struct.mlxsw_event_listener, %struct.mlxsw_event_listener* %2, i32 0, i32 0, !dbg !16580
  %3 = load void (%struct.mlxsw_reg_info*, i8*, i8*)*, void (%struct.mlxsw_reg_info*, i8*, i8*)** %func1, align 8, !dbg !16580
  %cmp = icmp eq void (%struct.mlxsw_reg_info*, i8*, i8*)* %1, %3, !dbg !16581
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !16582

land.rhs:                                         ; preds = %entry
  %4 = load %struct.mlxsw_event_listener*, %struct.mlxsw_event_listener** %el_a.addr, align 8, !dbg !16583
  %trap_id = getelementptr inbounds %struct.mlxsw_event_listener, %struct.mlxsw_event_listener* %4, i32 0, i32 1, !dbg !16584
  %5 = load i32, i32* %trap_id, align 8, !dbg !16584
  %6 = load %struct.mlxsw_event_listener*, %struct.mlxsw_event_listener** %el_b.addr, align 8, !dbg !16585
  %trap_id2 = getelementptr inbounds %struct.mlxsw_event_listener, %struct.mlxsw_event_listener* %6, i32 0, i32 1, !dbg !16586
  %7 = load i32, i32* %trap_id2, align 8, !dbg !16586
  %cmp3 = icmp eq i32 %5, %7, !dbg !16587
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %8 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !16588
  ret i1 %8, !dbg !16589
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_hpkt_ack_set(i8* %buf, i32 %val) #0 !dbg !16590 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16591, metadata !DIExpression()), !dbg !16592
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !16593, metadata !DIExpression()), !dbg !16592
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16592
  %1 = load i32, i32* %val.addr, align 4, !dbg !16592
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_hpkt_ack_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !16592
  ret void, !dbg !16592
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_hpkt_action_set(i8* %buf, i32 %val) #0 !dbg !16594 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16595, metadata !DIExpression()), !dbg !16596
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !16597, metadata !DIExpression()), !dbg !16596
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16596
  %1 = load i32, i32* %val.addr, align 4, !dbg !16596
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_hpkt_action_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !16596
  ret void, !dbg !16596
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_hpkt_trap_group_set(i8* %buf, i32 %val) #0 !dbg !16598 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16599, metadata !DIExpression()), !dbg !16600
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !16601, metadata !DIExpression()), !dbg !16600
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16600
  %1 = load i32, i32* %val.addr, align 4, !dbg !16600
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_hpkt_trap_group_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !16600
  ret void, !dbg !16600
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_hpkt_trap_id_set(i8* %buf, i32 %val) #0 !dbg !16602 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16603, metadata !DIExpression()), !dbg !16604
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !16605, metadata !DIExpression()), !dbg !16604
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16604
  %1 = load i32, i32* %val.addr, align 4, !dbg !16604
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_hpkt_trap_id_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !16604
  ret void, !dbg !16604
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_hpkt_ctrl_set(i8* %buf, i32 %val) #0 !dbg !16606 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16607, metadata !DIExpression()), !dbg !16608
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !16609, metadata !DIExpression()), !dbg !16608
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16608
  %1 = load i32, i32* %val.addr, align 4, !dbg !16608
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_hpkt_ctrl_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !16608
  ret void, !dbg !16608
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mlxsw_core_tid_get(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !16610 {
entry:
  %i.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %i.addr.i.i.i, metadata !16613, metadata !DIExpression()), !dbg !16617
  %v.addr.i.i.i = alloca %struct.atomic64_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr.i.i.i, metadata !16626, metadata !DIExpression()), !dbg !16627
  %__ret.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret.i.i.i, metadata !16628, metadata !DIExpression()), !dbg !16630
  %tmp.i.i.i = alloca i64, align 8
  %v.addr.i1.i = alloca %struct.atomic64_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr.i1.i, metadata !16631, metadata !DIExpression()), !dbg !16632
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !15179, metadata !DIExpression()), !dbg !16633
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !15183, metadata !DIExpression()), !dbg !16635
  %v.addr.i = alloca %struct.atomic64_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr.i, metadata !16636, metadata !DIExpression()), !dbg !16637
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !16638, metadata !DIExpression()), !dbg !16639
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !16640
  %emad = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %0, i32 0, i32 7, !dbg !16641
  %tid = getelementptr inbounds %struct.anon.129, %struct.anon.129* %emad, i32 0, i32 0, !dbg !16642
  store %struct.atomic64_t* %tid, %struct.atomic64_t** %v.addr.i, align 8
  %1 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i, align 8, !dbg !16643
  %2 = bitcast %struct.atomic64_t* %1 to i8*, !dbg !16643
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 8, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !16644
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !16645
  %conv.i.i = trunc i64 %4 to i32, !dbg !16645
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #13, !dbg !16646
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !16647
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !16647
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #13, !dbg !16647
  %7 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i, align 8, !dbg !16648
  store %struct.atomic64_t* %7, %struct.atomic64_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i1.i, align 8, !dbg !16649
  store i64 1, i64* %i.addr.i.i.i, align 8
  store %struct.atomic64_t* %8, %struct.atomic64_t** %v.addr.i.i.i, align 8
  %9 = load i64, i64* %i.addr.i.i.i, align 8, !dbg !16650
  %10 = load i64, i64* %i.addr.i.i.i, align 8, !dbg !16630
  store i64 %10, i64* %__ret.i.i.i, align 8, !dbg !16630
  %11 = load i64, i64* %__ret.i.i.i, align 8, !dbg !16630
  %12 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i.i.i, align 8, !dbg !16630
  %counter.i.i.i = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %12, i32 0, i32 0, !dbg !16630
  %13 = call i64 asm sideeffect "xaddq ${0:q}, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64* %counter.i.i.i, i64 %11, i64* %counter.i.i.i) #10, !dbg !16630, !srcloc !16651
  store i64 %13, i64* %__ret.i.i.i, align 8, !dbg !16630
  %14 = load i64, i64* %__ret.i.i.i, align 8, !dbg !16630
  store i64 %14, i64* %tmp.i.i.i, align 8, !dbg !16630
  %15 = load i64, i64* %tmp.i.i.i, align 8, !dbg !16630
  %add.i.i.i = add i64 %9, %15, !dbg !16652
  ret i64 %add.i.i.i, !dbg !16653
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_emad_reg_access(%struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_reg_info* %reg, i8* %payload, i32 %type, %struct.mlxsw_reg_trans* %trans, %struct.list_head* %bulk_list, void (%struct.mlxsw_core*, i8*, i64, i64)* %cb, i64 %cb_priv, i64 %tid) #0 !dbg !16654 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %reg.addr = alloca %struct.mlxsw_reg_info*, align 8
  %payload.addr = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  %trans.addr = alloca %struct.mlxsw_reg_trans*, align 8
  %bulk_list.addr = alloca %struct.list_head*, align 8
  %cb.addr = alloca void (%struct.mlxsw_core*, i8*, i64, i64)*, align 8
  %cb_priv.addr = alloca i64, align 8
  %tid.addr = alloca i64, align 8
  %enable_string_tlv = alloca i8, align 1
  %skb = alloca %struct.sk_buff*, align 8
  %err = alloca i32, align 4
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !16657, metadata !DIExpression()), !dbg !16658
  store %struct.mlxsw_reg_info* %reg, %struct.mlxsw_reg_info** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_reg_info** %reg.addr, metadata !16659, metadata !DIExpression()), !dbg !16660
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !16661, metadata !DIExpression()), !dbg !16662
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !16663, metadata !DIExpression()), !dbg !16664
  store %struct.mlxsw_reg_trans* %trans, %struct.mlxsw_reg_trans** %trans.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_reg_trans** %trans.addr, metadata !16665, metadata !DIExpression()), !dbg !16666
  store %struct.list_head* %bulk_list, %struct.list_head** %bulk_list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %bulk_list.addr, metadata !16667, metadata !DIExpression()), !dbg !16668
  store void (%struct.mlxsw_core*, i8*, i64, i64)* %cb, void (%struct.mlxsw_core*, i8*, i64, i64)** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.mlxsw_core*, i8*, i64, i64)** %cb.addr, metadata !16669, metadata !DIExpression()), !dbg !16670
  store i64 %cb_priv, i64* %cb_priv.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %cb_priv.addr, metadata !16671, metadata !DIExpression()), !dbg !16672
  store i64 %tid, i64* %tid.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %tid.addr, metadata !16673, metadata !DIExpression()), !dbg !16674
  call void @llvm.dbg.declare(metadata i8* %enable_string_tlv, metadata !16675, metadata !DIExpression()), !dbg !16676
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !16677, metadata !DIExpression()), !dbg !16678
  call void @llvm.dbg.declare(metadata i32* %err, metadata !16679, metadata !DIExpression()), !dbg !16680
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !16681
  %emad = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %0, i32 0, i32 7, !dbg !16682
  %enable_string_tlv1 = getelementptr inbounds %struct.anon.129, %struct.anon.129* %emad, i32 0, i32 4, !dbg !16683
  %1 = load i8, i8* %enable_string_tlv1, align 1, !dbg !16683
  %tobool = trunc i8 %1 to i1, !dbg !16683
  %frombool = zext i1 %tobool to i8, !dbg !16684
  store i8 %frombool, i8* %enable_string_tlv, align 1, !dbg !16684
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !16685
  %3 = load %struct.mlxsw_reg_info*, %struct.mlxsw_reg_info** %reg.addr, align 8, !dbg !16686
  %len = getelementptr inbounds %struct.mlxsw_reg_info, %struct.mlxsw_reg_info* %3, i32 0, i32 1, !dbg !16687
  %4 = load i16, i16* %len, align 2, !dbg !16687
  %5 = load i8, i8* %enable_string_tlv, align 1, !dbg !16688
  %tobool2 = trunc i8 %5 to i1, !dbg !16688
  %call = call %struct.sk_buff* @mlxsw_emad_alloc(%struct.mlxsw_core* %2, i16 zeroext %4, i1 zeroext %tobool2) #11, !dbg !16689
  store %struct.sk_buff* %call, %struct.sk_buff** %skb, align 8, !dbg !16690
  %6 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16691
  %tobool3 = icmp ne %struct.sk_buff* %6, null, !dbg !16691
  br i1 %tobool3, label %if.end, label %if.then, !dbg !16693

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !16694
  br label %return, !dbg !16694

if.end:                                           ; preds = %entry
  %7 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !16695
  %bulk_list4 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %7, i32 0, i32 1, !dbg !16696
  %8 = load %struct.list_head*, %struct.list_head** %bulk_list.addr, align 8, !dbg !16697
  call void @list_add_tail(%struct.list_head* %bulk_list4, %struct.list_head* %8) #11, !dbg !16698
  %9 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !16699
  %10 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !16700
  %core = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %10, i32 0, i32 2, !dbg !16701
  store %struct.mlxsw_core* %9, %struct.mlxsw_core** %core, align 8, !dbg !16702
  %11 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16703
  %12 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !16704
  %tx_skb = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %12, i32 0, i32 3, !dbg !16705
  store %struct.sk_buff* %11, %struct.sk_buff** %tx_skb, align 8, !dbg !16706
  %13 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !16707
  %tx_info = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %13, i32 0, i32 4, !dbg !16708
  %local_port = getelementptr inbounds %struct.mlxsw_tx_info, %struct.mlxsw_tx_info* %tx_info, i32 0, i32 0, !dbg !16709
  store i8 0, i8* %local_port, align 8, !dbg !16710
  %14 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !16711
  %tx_info5 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %14, i32 0, i32 4, !dbg !16712
  %is_emad = getelementptr inbounds %struct.mlxsw_tx_info, %struct.mlxsw_tx_info* %tx_info5, i32 0, i32 1, !dbg !16713
  store i8 1, i8* %is_emad, align 1, !dbg !16714
  br label %do.body, !dbg !16715

do.body:                                          ; preds = %if.end
  br label %do.body6, !dbg !16716

do.body6:                                         ; preds = %do.body
  %15 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !16718
  %timeout_dw = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %15, i32 0, i32 5, !dbg !16718
  %work = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %timeout_dw, i32 0, i32 0, !dbg !16718
  call void @__init_work(%struct.work_struct* %work, i32 0) #11, !dbg !16718
  %16 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !16718
  %timeout_dw7 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %16, i32 0, i32 5, !dbg !16718
  %work8 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %timeout_dw7, i32 0, i32 0, !dbg !16718
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work8, i32 0, i32 0, !dbg !16718
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !16718
  store i64 68719476704, i64* %counter, align 8, !dbg !16718
  %17 = bitcast %struct.atomic64_t* %data to i8*, !dbg !16718
  %18 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !16718
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 8, i1 false), !dbg !16718
  %19 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !16718
  %timeout_dw9 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %19, i32 0, i32 5, !dbg !16718
  %work10 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %timeout_dw9, i32 0, i32 0, !dbg !16718
  %entry11 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work10, i32 0, i32 1, !dbg !16718
  call void @INIT_LIST_HEAD(%struct.list_head* %entry11) #11, !dbg !16718
  %20 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !16718
  %timeout_dw12 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %20, i32 0, i32 5, !dbg !16718
  %work13 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %timeout_dw12, i32 0, i32 0, !dbg !16718
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work13, i32 0, i32 2, !dbg !16718
  store void (%struct.work_struct*)* @mlxsw_emad_trans_timeout_work, void (%struct.work_struct*)** %func, align 8, !dbg !16718
  br label %do.end, !dbg !16718

do.end:                                           ; preds = %do.body6
  %21 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !16716
  %timeout_dw14 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %21, i32 0, i32 5, !dbg !16716
  %timer = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %timeout_dw14, i32 0, i32 1, !dbg !16716
  call void @init_timer_key(%struct.timer_list* %timer, void (%struct.timer_list*)* @delayed_work_timer_fn, i32 2097152, i8* null, %struct.lock_class_key* null) #11, !dbg !16716
  br label %do.end15, !dbg !16716

do.end15:                                         ; preds = %do.end
  %22 = load i64, i64* %tid.addr, align 8, !dbg !16720
  %23 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !16721
  %tid16 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %23, i32 0, i32 7, !dbg !16722
  store i64 %22, i64* %tid16, align 8, !dbg !16723
  %24 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !16724
  %completion = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %24, i32 0, i32 8, !dbg !16724
  call void @__init_completion(%struct.completion* %completion) #11, !dbg !16724
  %25 = load void (%struct.mlxsw_core*, i8*, i64, i64)*, void (%struct.mlxsw_core*, i8*, i64, i64)** %cb.addr, align 8, !dbg !16725
  %26 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !16726
  %cb17 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %26, i32 0, i32 10, !dbg !16727
  store void (%struct.mlxsw_core*, i8*, i64, i64)* %25, void (%struct.mlxsw_core*, i8*, i64, i64)** %cb17, align 8, !dbg !16728
  %27 = load i64, i64* %cb_priv.addr, align 8, !dbg !16729
  %28 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !16730
  %cb_priv18 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %28, i32 0, i32 11, !dbg !16731
  store i64 %27, i64* %cb_priv18, align 8, !dbg !16732
  %29 = load %struct.mlxsw_reg_info*, %struct.mlxsw_reg_info** %reg.addr, align 8, !dbg !16733
  %30 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !16734
  %reg19 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %30, i32 0, i32 12, !dbg !16735
  store %struct.mlxsw_reg_info* %29, %struct.mlxsw_reg_info** %reg19, align 8, !dbg !16736
  %31 = load i32, i32* %type.addr, align 4, !dbg !16737
  %32 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !16738
  %type20 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %32, i32 0, i32 13, !dbg !16739
  store i32 %31, i32* %type20, align 8, !dbg !16740
  %33 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16741
  %34 = load %struct.mlxsw_reg_info*, %struct.mlxsw_reg_info** %reg.addr, align 8, !dbg !16742
  %35 = load i8*, i8** %payload.addr, align 8, !dbg !16743
  %36 = load i32, i32* %type.addr, align 4, !dbg !16744
  %37 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !16745
  %tid21 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %37, i32 0, i32 7, !dbg !16746
  %38 = load i64, i64* %tid21, align 8, !dbg !16746
  %39 = load i8, i8* %enable_string_tlv, align 1, !dbg !16747
  %tobool22 = trunc i8 %39 to i1, !dbg !16747
  call void @mlxsw_emad_construct(%struct.sk_buff* %33, %struct.mlxsw_reg_info* %34, i8* %35, i32 %36, i64 %38, i1 zeroext %tobool22) #11, !dbg !16748
  %40 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !16749
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %40, i32 0, i32 0, !dbg !16750
  %41 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !16750
  %txhdr_construct = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %41, i32 0, i32 30, !dbg !16751
  %42 = load void (%struct.sk_buff*, %struct.mlxsw_tx_info*)*, void (%struct.sk_buff*, %struct.mlxsw_tx_info*)** %txhdr_construct, align 8, !dbg !16751
  %43 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16752
  %44 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !16753
  %tx_info23 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %44, i32 0, i32 4, !dbg !16754
  call void %42(%struct.sk_buff* %43, %struct.mlxsw_tx_info* %tx_info23) #11, !dbg !16749
  %45 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !16755
  %emad24 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %45, i32 0, i32 7, !dbg !16756
  %trans_list_lock = getelementptr inbounds %struct.anon.129, %struct.anon.129* %emad24, i32 0, i32 2, !dbg !16757
  call void @spin_lock_bh(%struct.spinlock* %trans_list_lock) #11, !dbg !16758
  %46 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !16759
  %list = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %46, i32 0, i32 0, !dbg !16760
  %47 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !16761
  %emad25 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %47, i32 0, i32 7, !dbg !16762
  %trans_list = getelementptr inbounds %struct.anon.129, %struct.anon.129* %emad25, i32 0, i32 1, !dbg !16763
  call void @list_add_tail_rcu(%struct.list_head* %list, %struct.list_head* %trans_list) #11, !dbg !16764
  %48 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !16765
  %emad26 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %48, i32 0, i32 7, !dbg !16766
  %trans_list_lock27 = getelementptr inbounds %struct.anon.129, %struct.anon.129* %emad26, i32 0, i32 2, !dbg !16767
  call void @spin_unlock_bh(%struct.spinlock* %trans_list_lock27) #11, !dbg !16768
  %49 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !16769
  %50 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !16770
  %call28 = call i32 @mlxsw_emad_transmit(%struct.mlxsw_core* %49, %struct.mlxsw_reg_trans* %50) #11, !dbg !16771
  store i32 %call28, i32* %err, align 4, !dbg !16772
  %51 = load i32, i32* %err, align 4, !dbg !16773
  %tobool29 = icmp ne i32 %51, 0, !dbg !16773
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !16775

if.then30:                                        ; preds = %do.end15
  br label %err_out, !dbg !16776

if.end31:                                         ; preds = %do.end15
  store i32 0, i32* %retval, align 4, !dbg !16777
  br label %return, !dbg !16777

err_out:                                          ; preds = %if.then30
  call void @llvm.dbg.label(metadata !16778), !dbg !16779
  %52 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !16780
  %emad32 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %52, i32 0, i32 7, !dbg !16781
  %trans_list_lock33 = getelementptr inbounds %struct.anon.129, %struct.anon.129* %emad32, i32 0, i32 2, !dbg !16782
  call void @spin_lock_bh(%struct.spinlock* %trans_list_lock33) #11, !dbg !16783
  %53 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !16784
  %list34 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %53, i32 0, i32 0, !dbg !16785
  call void @list_del_rcu(%struct.list_head* %list34) #11, !dbg !16786
  %54 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !16787
  %emad35 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %54, i32 0, i32 7, !dbg !16788
  %trans_list_lock36 = getelementptr inbounds %struct.anon.129, %struct.anon.129* %emad35, i32 0, i32 2, !dbg !16789
  call void @spin_unlock_bh(%struct.spinlock* %trans_list_lock36) #11, !dbg !16790
  %55 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !16791
  %bulk_list37 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %55, i32 0, i32 1, !dbg !16792
  call void @list_del(%struct.list_head* %bulk_list37) #11, !dbg !16793
  %56 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans.addr, align 8, !dbg !16794
  %tx_skb38 = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %56, i32 0, i32 3, !dbg !16794
  %57 = load %struct.sk_buff*, %struct.sk_buff** %tx_skb38, align 8, !dbg !16794
  call void @consume_skb(%struct.sk_buff* %57) #11, !dbg !16794
  %58 = load i32, i32* %err, align 4, !dbg !16795
  store i32 %58, i32* %retval, align 4, !dbg !16796
  br label %return, !dbg !16796

return:                                           ; preds = %err_out, %if.end31, %if.then
  %59 = load i32, i32* %retval, align 4, !dbg !16797
  ret i32 %59, !dbg !16797
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kvfree_call_rcu(%struct.callback_head* %head, void (%struct.callback_head*)* %func) #0 !dbg !16798 {
entry:
  %head.addr = alloca %struct.callback_head*, align 8
  %func.addr = alloca void (%struct.callback_head*)*, align 8
  store %struct.callback_head* %head, %struct.callback_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.callback_head** %head.addr, metadata !16802, metadata !DIExpression()), !dbg !16803
  store void (%struct.callback_head*)* %func, void (%struct.callback_head*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.callback_head*)** %func.addr, metadata !16804, metadata !DIExpression()), !dbg !16805
  %0 = load %struct.callback_head*, %struct.callback_head** %head.addr, align 8, !dbg !16806
  %tobool = icmp ne %struct.callback_head* %0, null, !dbg !16806
  br i1 %tobool, label %if.then, label %if.end, !dbg !16808

if.then:                                          ; preds = %entry
  %1 = load %struct.callback_head*, %struct.callback_head** %head.addr, align 8, !dbg !16809
  %2 = load void (%struct.callback_head*)*, void (%struct.callback_head*)** %func.addr, align 8, !dbg !16811
  call void @call_rcu(%struct.callback_head* %1, void (%struct.callback_head*)* %2) #11, !dbg !16812
  br label %return, !dbg !16813

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !16814

do.body:                                          ; preds = %if.end
  br label %do.body1, !dbg !16815

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !16817

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !16815

do.end2:                                          ; preds = %do.end
  call void @synchronize_rcu() #11, !dbg !16819
  %3 = load void (%struct.callback_head*)*, void (%struct.callback_head*)** %func.addr, align 8, !dbg !16820
  %4 = bitcast void (%struct.callback_head*)* %3 to i8*, !dbg !16821
  call void @kvfree(i8* %4) #11, !dbg !16822
  br label %return, !dbg !16823

return:                                           ; preds = %do.end2, %if.then
  ret void, !dbg !16823
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @mlxsw_emad_alloc(%struct.mlxsw_core* %mlxsw_core, i16 zeroext %reg_len, i1 zeroext %enable_string_tlv) #0 !dbg !16824 {
entry:
  %retval = alloca %struct.sk_buff*, align 8
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %reg_len.addr = alloca i16, align 2
  %enable_string_tlv.addr = alloca i8, align 1
  %skb = alloca %struct.sk_buff*, align 8
  %emad_len = alloca i16, align 2
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !16827, metadata !DIExpression()), !dbg !16828
  store i16 %reg_len, i16* %reg_len.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %reg_len.addr, metadata !16829, metadata !DIExpression()), !dbg !16830
  %frombool = zext i1 %enable_string_tlv to i8
  store i8 %frombool, i8* %enable_string_tlv.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable_string_tlv.addr, metadata !16831, metadata !DIExpression()), !dbg !16832
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !16833, metadata !DIExpression()), !dbg !16834
  call void @llvm.dbg.declare(metadata i16* %emad_len, metadata !16835, metadata !DIExpression()), !dbg !16836
  %0 = load i16, i16* %reg_len.addr, align 2, !dbg !16837
  %conv = zext i16 %0 to i64, !dbg !16837
  %add = add i64 %conv, 4, !dbg !16838
  %add1 = add i64 %add, 16, !dbg !16839
  %add2 = add i64 %add1, 20, !dbg !16840
  %1 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !16841
  %driver = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %1, i32 0, i32 0, !dbg !16842
  %2 = load %struct.mlxsw_driver*, %struct.mlxsw_driver** %driver, align 8, !dbg !16842
  %txhdr_len = getelementptr inbounds %struct.mlxsw_driver, %struct.mlxsw_driver* %2, i32 0, i32 36, !dbg !16843
  %3 = load i8, i8* %txhdr_len, align 8, !dbg !16843
  %conv3 = zext i8 %3 to i64, !dbg !16841
  %add4 = add i64 %add2, %conv3, !dbg !16844
  %conv5 = trunc i64 %add4 to i16, !dbg !16845
  store i16 %conv5, i16* %emad_len, align 2, !dbg !16846
  %4 = load i8, i8* %enable_string_tlv.addr, align 1, !dbg !16847
  %tobool = trunc i8 %4 to i1, !dbg !16847
  br i1 %tobool, label %if.then, label %if.end, !dbg !16849

if.then:                                          ; preds = %entry
  %5 = load i16, i16* %emad_len, align 2, !dbg !16850
  %conv6 = zext i16 %5 to i64, !dbg !16850
  %add7 = add i64 %conv6, 132, !dbg !16850
  %conv8 = trunc i64 %add7 to i16, !dbg !16850
  store i16 %conv8, i16* %emad_len, align 2, !dbg !16850
  br label %if.end, !dbg !16851

if.end:                                           ; preds = %if.then, %entry
  %6 = load i16, i16* %emad_len, align 2, !dbg !16852
  %conv9 = zext i16 %6 to i32, !dbg !16852
  %cmp = icmp sgt i32 %conv9, 1518, !dbg !16854
  br i1 %cmp, label %if.then11, label %if.end12, !dbg !16855

if.then11:                                        ; preds = %if.end
  store %struct.sk_buff* null, %struct.sk_buff** %retval, align 8, !dbg !16856
  br label %return, !dbg !16856

if.end12:                                         ; preds = %if.end
  %7 = load i16, i16* %emad_len, align 2, !dbg !16857
  %conv13 = zext i16 %7 to i32, !dbg !16857
  %call = call %struct.sk_buff* @netdev_alloc_skb(%struct.net_device* null, i32 %conv13) #11, !dbg !16858
  store %struct.sk_buff* %call, %struct.sk_buff** %skb, align 8, !dbg !16859
  %8 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16860
  %tobool14 = icmp ne %struct.sk_buff* %8, null, !dbg !16860
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !16862

if.then15:                                        ; preds = %if.end12
  store %struct.sk_buff* null, %struct.sk_buff** %retval, align 8, !dbg !16863
  br label %return, !dbg !16863

if.end16:                                         ; preds = %if.end12
  %9 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16864
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %9, i32 0, i32 37, !dbg !16865
  %10 = load i8*, i8** %data, align 8, !dbg !16865
  %11 = load i16, i16* %emad_len, align 2, !dbg !16866
  %conv17 = zext i16 %11 to i64, !dbg !16866
  call void @llvm.memset.p0i8.i64(i8* align 1 %10, i8 0, i64 %conv17, i1 false), !dbg !16867
  %12 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16868
  %13 = load i16, i16* %emad_len, align 2, !dbg !16869
  %conv18 = zext i16 %13 to i32, !dbg !16869
  call void @skb_reserve(%struct.sk_buff* %12, i32 %conv18) #11, !dbg !16870
  %14 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16871
  store %struct.sk_buff* %14, %struct.sk_buff** %retval, align 8, !dbg !16872
  br label %return, !dbg !16872

return:                                           ; preds = %if.end16, %if.then15, %if.then11
  %15 = load %struct.sk_buff*, %struct.sk_buff** %retval, align 8, !dbg !16873
  ret %struct.sk_buff* %15, !dbg !16873
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_trans_timeout_work(%struct.work_struct* %work) #0 !dbg !16874 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !15165, metadata !DIExpression()), !dbg !16875
  %c.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i.i, metadata !15176, metadata !DIExpression()), !dbg !16879
  %tmp.i.i = alloca i8, align 1
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !15179, metadata !DIExpression()), !dbg !16880
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !15183, metadata !DIExpression()), !dbg !16882
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !15185, metadata !DIExpression()), !dbg !16883
  %work.addr = alloca %struct.work_struct*, align 8
  %trans = alloca %struct.mlxsw_reg_trans*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_reg_trans*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !16884, metadata !DIExpression()), !dbg !16885
  call void @llvm.dbg.declare(metadata %struct.mlxsw_reg_trans** %trans, metadata !16886, metadata !DIExpression()), !dbg !16887
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !16888, metadata !DIExpression()), !dbg !16890
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !16890
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !16890
  store i8* %1, i8** %__mptr, align 8, !dbg !16890
  br label %do.body, !dbg !16890

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !16891

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !16890
  %add.ptr = getelementptr i8, i8* %2, i64 -56, !dbg !16890
  %3 = bitcast i8* %add.ptr to %struct.mlxsw_reg_trans*, !dbg !16890
  store %struct.mlxsw_reg_trans* %3, %struct.mlxsw_reg_trans** %tmp, align 8, !dbg !16891
  %4 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %tmp, align 8, !dbg !16890
  store %struct.mlxsw_reg_trans* %4, %struct.mlxsw_reg_trans** %trans, align 8, !dbg !16887
  %5 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans, align 8, !dbg !16893
  %active = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %5, i32 0, i32 9, !dbg !16894
  store %struct.atomic_t* %active, %struct.atomic_t** %v.addr.i, align 8
  %6 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !16895
  %7 = bitcast %struct.atomic_t* %6 to i8*, !dbg !16895
  store i8* %7, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %8 = load i8*, i8** %v.addr.i.i, align 8, !dbg !16896
  %9 = load i64, i64* %size.addr.i.i, align 8, !dbg !16897
  %conv.i.i = trunc i64 %9 to i32, !dbg !16897
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %8, i32 %conv.i.i) #13, !dbg !16898
  %10 = load i8*, i8** %v.addr.i.i, align 8, !dbg !16899
  %11 = load i64, i64* %size.addr.i.i, align 8, !dbg !16899
  call void @kcsan_check_access(i8* %10, i64 %11, i32 7) #13, !dbg !16899
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !16900
  store %struct.atomic_t* %12, %struct.atomic_t** %v.addr.i1.i, align 8
  %13 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !16879
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %13, i32 0, i32 0, !dbg !16879
  %14 = call i8 asm sideeffect "decl $0\0A\09/* output condition code e*/\0A", "=*m,={@cce},*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #10, !dbg !16879, !srcloc !15203
  store i8 %14, i8* %c.i.i, align 1, !dbg !16879
  %15 = load i8, i8* %c.i.i, align 1, !dbg !16879
  %tobool.i.i = trunc i8 %15 to i1, !dbg !16879
  %frombool.i.i = zext i1 %tobool.i.i to i8, !dbg !16879
  store i8 %frombool.i.i, i8* %tmp.i.i, align 1, !dbg !16879
  %16 = load i8, i8* %tmp.i.i, align 1, !dbg !16879
  %tobool1.i.i = trunc i8 %16 to i1, !dbg !16879
  br i1 %tobool1.i.i, label %if.end, label %if.then, !dbg !16901

if.then:                                          ; preds = %do.end
  br label %return, !dbg !16902

if.end:                                           ; preds = %do.end
  %17 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans, align 8, !dbg !16903
  %core = getelementptr inbounds %struct.mlxsw_reg_trans, %struct.mlxsw_reg_trans* %17, i32 0, i32 2, !dbg !16904
  %18 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !16904
  %19 = load %struct.mlxsw_reg_trans*, %struct.mlxsw_reg_trans** %trans, align 8, !dbg !16905
  call void @mlxsw_emad_transmit_retry(%struct.mlxsw_core* %18, %struct.mlxsw_reg_trans* %19) #11, !dbg !16906
  br label %return, !dbg !16907

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !16907
}

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #2

; Function Attrs: noredzone
declare dso_local void @delayed_work_timer_fn(%struct.timer_list*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_completion(%struct.completion* %x) #0 !dbg !8516 {
entry:
  %x.addr = alloca %struct.completion*, align 8
  store %struct.completion* %x, %struct.completion** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.completion** %x.addr, metadata !16908, metadata !DIExpression()), !dbg !16909
  %0 = load %struct.completion*, %struct.completion** %x.addr, align 8, !dbg !16910
  %done = getelementptr inbounds %struct.completion, %struct.completion* %0, i32 0, i32 0, !dbg !16911
  store i32 0, i32* %done, align 8, !dbg !16912
  br label %do.body, !dbg !16913

do.body:                                          ; preds = %entry
  %1 = load %struct.completion*, %struct.completion** %x.addr, align 8, !dbg !16914
  %wait = getelementptr inbounds %struct.completion, %struct.completion* %1, i32 0, i32 1, !dbg !16914
  call void @__init_swait_queue_head(%struct.swait_queue_head* %wait, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.135, i64 0, i64 0), %struct.lock_class_key* @__init_completion.__key) #11, !dbg !16914
  br label %do.end, !dbg !16914

do.end:                                           ; preds = %do.body
  ret void, !dbg !16916
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_construct(%struct.sk_buff* %skb, %struct.mlxsw_reg_info* %reg, i8* %payload, i32 %type, i64 %tid, i1 zeroext %enable_string_tlv) #0 !dbg !16917 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %reg.addr = alloca %struct.mlxsw_reg_info*, align 8
  %payload.addr = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  %tid.addr = alloca i64, align 8
  %enable_string_tlv.addr = alloca i8, align 1
  %buf = alloca i8*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16920, metadata !DIExpression()), !dbg !16921
  store %struct.mlxsw_reg_info* %reg, %struct.mlxsw_reg_info** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_reg_info** %reg.addr, metadata !16922, metadata !DIExpression()), !dbg !16923
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !16924, metadata !DIExpression()), !dbg !16925
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !16926, metadata !DIExpression()), !dbg !16927
  store i64 %tid, i64* %tid.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %tid.addr, metadata !16928, metadata !DIExpression()), !dbg !16929
  %frombool = zext i1 %enable_string_tlv to i8
  store i8 %frombool, i8* %enable_string_tlv.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable_string_tlv.addr, metadata !16930, metadata !DIExpression()), !dbg !16931
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !16932, metadata !DIExpression()), !dbg !16933
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16934
  %call = call i8* @skb_push(%struct.sk_buff* %0, i32 4) #11, !dbg !16935
  store i8* %call, i8** %buf, align 8, !dbg !16936
  %1 = load i8*, i8** %buf, align 8, !dbg !16937
  call void @mlxsw_emad_pack_end_tlv(i8* %1) #11, !dbg !16938
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16939
  %3 = load %struct.mlxsw_reg_info*, %struct.mlxsw_reg_info** %reg.addr, align 8, !dbg !16940
  %len = getelementptr inbounds %struct.mlxsw_reg_info, %struct.mlxsw_reg_info* %3, i32 0, i32 1, !dbg !16941
  %4 = load i16, i16* %len, align 2, !dbg !16941
  %conv = zext i16 %4 to i64, !dbg !16940
  %add = add i64 %conv, 4, !dbg !16942
  %conv1 = trunc i64 %add to i32, !dbg !16940
  %call2 = call i8* @skb_push(%struct.sk_buff* %2, i32 %conv1) #11, !dbg !16943
  store i8* %call2, i8** %buf, align 8, !dbg !16944
  %5 = load i8*, i8** %buf, align 8, !dbg !16945
  %6 = load %struct.mlxsw_reg_info*, %struct.mlxsw_reg_info** %reg.addr, align 8, !dbg !16946
  %7 = load i8*, i8** %payload.addr, align 8, !dbg !16947
  call void @mlxsw_emad_pack_reg_tlv(i8* %5, %struct.mlxsw_reg_info* %6, i8* %7) #11, !dbg !16948
  %8 = load i8, i8* %enable_string_tlv.addr, align 1, !dbg !16949
  %tobool = trunc i8 %8 to i1, !dbg !16949
  br i1 %tobool, label %if.then, label %if.end, !dbg !16951

if.then:                                          ; preds = %entry
  %9 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16952
  %call3 = call i8* @skb_push(%struct.sk_buff* %9, i32 132) #11, !dbg !16954
  store i8* %call3, i8** %buf, align 8, !dbg !16955
  %10 = load i8*, i8** %buf, align 8, !dbg !16956
  call void @mlxsw_emad_pack_string_tlv(i8* %10) #11, !dbg !16957
  br label %if.end, !dbg !16958

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16959
  %call4 = call i8* @skb_push(%struct.sk_buff* %11, i32 16) #11, !dbg !16960
  store i8* %call4, i8** %buf, align 8, !dbg !16961
  %12 = load i8*, i8** %buf, align 8, !dbg !16962
  %13 = load %struct.mlxsw_reg_info*, %struct.mlxsw_reg_info** %reg.addr, align 8, !dbg !16963
  %14 = load i32, i32* %type.addr, align 4, !dbg !16964
  %15 = load i64, i64* %tid.addr, align 8, !dbg !16965
  call void @mlxsw_emad_pack_op_tlv(i8* %12, %struct.mlxsw_reg_info* %13, i32 %14, i64 %15) #11, !dbg !16966
  %16 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16967
  %call5 = call i32 @mlxsw_emad_construct_eth_hdr(%struct.sk_buff* %16) #11, !dbg !16968
  ret void, !dbg !16969
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail_rcu(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !16970 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !16971, metadata !DIExpression()), !dbg !16972
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !16973, metadata !DIExpression()), !dbg !16974
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !16975
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !16976
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !16977
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !16977
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !16978
  call void @__list_add_rcu(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #11, !dbg !16979
  ret void, !dbg !16980
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @netdev_alloc_skb(%struct.net_device* %dev, i32 %length) #0 !dbg !16981 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %length.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16984, metadata !DIExpression()), !dbg !16985
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !16986, metadata !DIExpression()), !dbg !16987
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16988
  %1 = load i32, i32* %length.addr, align 4, !dbg !16989
  %call = call %struct.sk_buff* @__netdev_alloc_skb(%struct.net_device* %0, i32 %1, i32 2592) #11, !dbg !16990
  ret %struct.sk_buff* %call, !dbg !16991
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_reserve(%struct.sk_buff* %skb, i32 %len) #0 !dbg !16992 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %len.addr = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16995, metadata !DIExpression()), !dbg !16996
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !16997, metadata !DIExpression()), !dbg !16998
  %0 = load i32, i32* %len.addr, align 4, !dbg !16999
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17000
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 37, !dbg !17001
  %2 = load i8*, i8** %data, align 8, !dbg !17002
  %idx.ext = sext i32 %0 to i64, !dbg !17002
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !17002
  store i8* %add.ptr, i8** %data, align 8, !dbg !17002
  %3 = load i32, i32* %len.addr, align 4, !dbg !17003
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17004
  %tail = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %4, i32 0, i32 34, !dbg !17005
  %5 = load i32, i32* %tail, align 8, !dbg !17006
  %add = add i32 %5, %3, !dbg !17006
  store i32 %add, i32* %tail, align 8, !dbg !17006
  ret void, !dbg !17007
}

; Function Attrs: noredzone
declare dso_local %struct.sk_buff* @__netdev_alloc_skb(%struct.net_device*, i32, i32) #2

; Function Attrs: noredzone
declare dso_local void @__init_swait_queue_head(%struct.swait_queue_head*, i8*, %struct.lock_class_key*) #2

; Function Attrs: noredzone
declare dso_local i8* @skb_push(%struct.sk_buff*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_pack_end_tlv(i8* %end_tlv) #0 !dbg !17008 {
entry:
  %end_tlv.addr = alloca i8*, align 8
  store i8* %end_tlv, i8** %end_tlv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end_tlv.addr, metadata !17009, metadata !DIExpression()), !dbg !17010
  %0 = load i8*, i8** %end_tlv.addr, align 8, !dbg !17011
  call void @mlxsw_emad_end_tlv_type_set(i8* %0, i32 0) #11, !dbg !17012
  %1 = load i8*, i8** %end_tlv.addr, align 8, !dbg !17013
  call void @mlxsw_emad_end_tlv_len_set(i8* %1, i32 1) #11, !dbg !17014
  ret void, !dbg !17015
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_pack_reg_tlv(i8* %reg_tlv, %struct.mlxsw_reg_info* %reg, i8* %payload) #0 !dbg !17016 {
entry:
  %reg_tlv.addr = alloca i8*, align 8
  %reg.addr = alloca %struct.mlxsw_reg_info*, align 8
  %payload.addr = alloca i8*, align 8
  store i8* %reg_tlv, i8** %reg_tlv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %reg_tlv.addr, metadata !17019, metadata !DIExpression()), !dbg !17020
  store %struct.mlxsw_reg_info* %reg, %struct.mlxsw_reg_info** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_reg_info** %reg.addr, metadata !17021, metadata !DIExpression()), !dbg !17022
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !17023, metadata !DIExpression()), !dbg !17024
  %0 = load i8*, i8** %reg_tlv.addr, align 8, !dbg !17025
  call void @mlxsw_emad_reg_tlv_type_set(i8* %0, i32 3) #11, !dbg !17026
  %1 = load i8*, i8** %reg_tlv.addr, align 8, !dbg !17027
  %2 = load %struct.mlxsw_reg_info*, %struct.mlxsw_reg_info** %reg.addr, align 8, !dbg !17028
  %len = getelementptr inbounds %struct.mlxsw_reg_info, %struct.mlxsw_reg_info* %2, i32 0, i32 1, !dbg !17029
  %3 = load i16, i16* %len, align 2, !dbg !17029
  %conv = zext i16 %3 to i64, !dbg !17028
  %div = udiv i64 %conv, 4, !dbg !17030
  %add = add i64 %div, 1, !dbg !17031
  %conv1 = trunc i64 %add to i32, !dbg !17028
  call void @mlxsw_emad_reg_tlv_len_set(i8* %1, i32 %conv1) #11, !dbg !17032
  %4 = load i8*, i8** %reg_tlv.addr, align 8, !dbg !17033
  %add.ptr = getelementptr i8, i8* %4, i64 4, !dbg !17034
  %5 = load i8*, i8** %payload.addr, align 8, !dbg !17035
  %6 = load %struct.mlxsw_reg_info*, %struct.mlxsw_reg_info** %reg.addr, align 8, !dbg !17036
  %len2 = getelementptr inbounds %struct.mlxsw_reg_info, %struct.mlxsw_reg_info* %6, i32 0, i32 1, !dbg !17037
  %7 = load i16, i16* %len2, align 2, !dbg !17037
  %conv3 = zext i16 %7 to i64, !dbg !17036
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 %5, i64 %conv3, i1 false), !dbg !17038
  ret void, !dbg !17039
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_pack_string_tlv(i8* %string_tlv) #0 !dbg !17040 {
entry:
  %string_tlv.addr = alloca i8*, align 8
  store i8* %string_tlv, i8** %string_tlv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string_tlv.addr, metadata !17041, metadata !DIExpression()), !dbg !17042
  %0 = load i8*, i8** %string_tlv.addr, align 8, !dbg !17043
  call void @mlxsw_emad_string_tlv_type_set(i8* %0, i32 2) #11, !dbg !17044
  %1 = load i8*, i8** %string_tlv.addr, align 8, !dbg !17045
  call void @mlxsw_emad_string_tlv_len_set(i8* %1, i32 33) #11, !dbg !17046
  ret void, !dbg !17047
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_pack_op_tlv(i8* %op_tlv, %struct.mlxsw_reg_info* %reg, i32 %type, i64 %tid) #0 !dbg !17048 {
entry:
  %op_tlv.addr = alloca i8*, align 8
  %reg.addr = alloca %struct.mlxsw_reg_info*, align 8
  %type.addr = alloca i32, align 4
  %tid.addr = alloca i64, align 8
  store i8* %op_tlv, i8** %op_tlv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %op_tlv.addr, metadata !17051, metadata !DIExpression()), !dbg !17052
  store %struct.mlxsw_reg_info* %reg, %struct.mlxsw_reg_info** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_reg_info** %reg.addr, metadata !17053, metadata !DIExpression()), !dbg !17054
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !17055, metadata !DIExpression()), !dbg !17056
  store i64 %tid, i64* %tid.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %tid.addr, metadata !17057, metadata !DIExpression()), !dbg !17058
  %0 = load i8*, i8** %op_tlv.addr, align 8, !dbg !17059
  call void @mlxsw_emad_op_tlv_type_set(i8* %0, i32 1) #11, !dbg !17060
  %1 = load i8*, i8** %op_tlv.addr, align 8, !dbg !17061
  call void @mlxsw_emad_op_tlv_len_set(i8* %1, i32 4) #11, !dbg !17062
  %2 = load i8*, i8** %op_tlv.addr, align 8, !dbg !17063
  call void @mlxsw_emad_op_tlv_dr_set(i8* %2, i32 0) #11, !dbg !17064
  %3 = load i8*, i8** %op_tlv.addr, align 8, !dbg !17065
  call void @mlxsw_emad_op_tlv_status_set(i8* %3, i32 0) #11, !dbg !17066
  %4 = load i8*, i8** %op_tlv.addr, align 8, !dbg !17067
  %5 = load %struct.mlxsw_reg_info*, %struct.mlxsw_reg_info** %reg.addr, align 8, !dbg !17068
  %id = getelementptr inbounds %struct.mlxsw_reg_info, %struct.mlxsw_reg_info* %5, i32 0, i32 0, !dbg !17069
  %6 = load i16, i16* %id, align 8, !dbg !17069
  %conv = zext i16 %6 to i32, !dbg !17068
  call void @mlxsw_emad_op_tlv_register_id_set(i8* %4, i32 %conv) #11, !dbg !17070
  %7 = load i8*, i8** %op_tlv.addr, align 8, !dbg !17071
  call void @mlxsw_emad_op_tlv_r_set(i8* %7, i32 0) #11, !dbg !17072
  %8 = load i32, i32* %type.addr, align 4, !dbg !17073
  %cmp = icmp eq i32 %8, 0, !dbg !17075
  br i1 %cmp, label %if.then, label %if.else, !dbg !17076

if.then:                                          ; preds = %entry
  %9 = load i8*, i8** %op_tlv.addr, align 8, !dbg !17077
  call void @mlxsw_emad_op_tlv_method_set(i8* %9, i32 1) #11, !dbg !17078
  br label %if.end, !dbg !17078

if.else:                                          ; preds = %entry
  %10 = load i8*, i8** %op_tlv.addr, align 8, !dbg !17079
  call void @mlxsw_emad_op_tlv_method_set(i8* %10, i32 2) #11, !dbg !17080
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load i8*, i8** %op_tlv.addr, align 8, !dbg !17081
  call void @mlxsw_emad_op_tlv_class_set(i8* %11, i32 1) #11, !dbg !17082
  %12 = load i8*, i8** %op_tlv.addr, align 8, !dbg !17083
  %13 = load i64, i64* %tid.addr, align 8, !dbg !17084
  call void @mlxsw_emad_op_tlv_tid_set(i8* %12, i64 %13) #11, !dbg !17085
  ret void, !dbg !17086
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_emad_construct_eth_hdr(%struct.sk_buff* %skb) #0 !dbg !17087 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %eth_hdr = alloca i8*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17090, metadata !DIExpression()), !dbg !17091
  call void @llvm.dbg.declare(metadata i8** %eth_hdr, metadata !17092, metadata !DIExpression()), !dbg !17093
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17094
  %call = call i8* @skb_push(%struct.sk_buff* %0, i32 16) #11, !dbg !17095
  store i8* %call, i8** %eth_hdr, align 8, !dbg !17093
  %1 = load i8*, i8** %eth_hdr, align 8, !dbg !17096
  call void @mlxsw_emad_eth_hdr_dmac_memcpy_to(i8* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.154, i64 0, i64 0)) #11, !dbg !17097
  %2 = load i8*, i8** %eth_hdr, align 8, !dbg !17098
  call void @mlxsw_emad_eth_hdr_smac_memcpy_to(i8* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.155, i64 0, i64 0)) #11, !dbg !17099
  %3 = load i8*, i8** %eth_hdr, align 8, !dbg !17100
  call void @mlxsw_emad_eth_hdr_ethertype_set(i8* %3, i32 35122) #11, !dbg !17101
  %4 = load i8*, i8** %eth_hdr, align 8, !dbg !17102
  call void @mlxsw_emad_eth_hdr_mlx_proto_set(i8* %4, i32 0) #11, !dbg !17103
  %5 = load i8*, i8** %eth_hdr, align 8, !dbg !17104
  call void @mlxsw_emad_eth_hdr_ver_set(i8* %5, i32 0) #11, !dbg !17105
  %6 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17106
  call void @skb_reset_mac_header(%struct.sk_buff* %6) #11, !dbg !17107
  ret i32 0, !dbg !17108
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_end_tlv_type_set(i8* %buf, i32 %val) #0 !dbg !17109 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !17110, metadata !DIExpression()), !dbg !17111
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !17112, metadata !DIExpression()), !dbg !17111
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !17111
  %1 = load i32, i32* %val.addr, align 4, !dbg !17111
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_emad_end_tlv_type_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !17111
  ret void, !dbg !17111
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_end_tlv_len_set(i8* %buf, i32 %val) #0 !dbg !17113 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !17114, metadata !DIExpression()), !dbg !17115
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !17116, metadata !DIExpression()), !dbg !17115
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !17115
  %1 = load i32, i32* %val.addr, align 4, !dbg !17115
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_emad_end_tlv_len_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !17115
  ret void, !dbg !17115
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_reg_tlv_type_set(i8* %buf, i32 %val) #0 !dbg !17117 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !17118, metadata !DIExpression()), !dbg !17119
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !17120, metadata !DIExpression()), !dbg !17119
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !17119
  %1 = load i32, i32* %val.addr, align 4, !dbg !17119
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_emad_reg_tlv_type_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !17119
  ret void, !dbg !17119
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_reg_tlv_len_set(i8* %buf, i32 %val) #0 !dbg !17121 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !17122, metadata !DIExpression()), !dbg !17123
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !17124, metadata !DIExpression()), !dbg !17123
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !17123
  %1 = load i32, i32* %val.addr, align 4, !dbg !17123
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_emad_reg_tlv_len_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !17123
  ret void, !dbg !17123
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_string_tlv_type_set(i8* %buf, i32 %val) #0 !dbg !17125 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !17126, metadata !DIExpression()), !dbg !17127
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !17128, metadata !DIExpression()), !dbg !17127
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !17127
  %1 = load i32, i32* %val.addr, align 4, !dbg !17127
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_emad_string_tlv_type_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !17127
  ret void, !dbg !17127
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_string_tlv_len_set(i8* %buf, i32 %val) #0 !dbg !17129 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !17130, metadata !DIExpression()), !dbg !17131
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !17132, metadata !DIExpression()), !dbg !17131
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !17131
  %1 = load i32, i32* %val.addr, align 4, !dbg !17131
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_emad_string_tlv_len_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !17131
  ret void, !dbg !17131
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_op_tlv_type_set(i8* %buf, i32 %val) #0 !dbg !17133 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !17134, metadata !DIExpression()), !dbg !17135
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !17136, metadata !DIExpression()), !dbg !17135
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !17135
  %1 = load i32, i32* %val.addr, align 4, !dbg !17135
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_emad_op_tlv_type_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !17135
  ret void, !dbg !17135
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_op_tlv_len_set(i8* %buf, i32 %val) #0 !dbg !17137 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !17138, metadata !DIExpression()), !dbg !17139
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !17140, metadata !DIExpression()), !dbg !17139
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !17139
  %1 = load i32, i32* %val.addr, align 4, !dbg !17139
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_emad_op_tlv_len_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !17139
  ret void, !dbg !17139
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_op_tlv_dr_set(i8* %buf, i32 %val) #0 !dbg !17141 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !17142, metadata !DIExpression()), !dbg !17143
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !17144, metadata !DIExpression()), !dbg !17143
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !17143
  %1 = load i32, i32* %val.addr, align 4, !dbg !17143
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_emad_op_tlv_dr_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !17143
  ret void, !dbg !17143
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_op_tlv_status_set(i8* %buf, i32 %val) #0 !dbg !17145 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !17146, metadata !DIExpression()), !dbg !17147
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !17148, metadata !DIExpression()), !dbg !17147
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !17147
  %1 = load i32, i32* %val.addr, align 4, !dbg !17147
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_emad_op_tlv_status_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !17147
  ret void, !dbg !17147
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_op_tlv_register_id_set(i8* %buf, i32 %val) #0 !dbg !17149 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !17150, metadata !DIExpression()), !dbg !17151
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !17152, metadata !DIExpression()), !dbg !17151
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !17151
  %1 = load i32, i32* %val.addr, align 4, !dbg !17151
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_emad_op_tlv_register_id_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !17151
  ret void, !dbg !17151
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_op_tlv_r_set(i8* %buf, i32 %val) #0 !dbg !17153 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !17154, metadata !DIExpression()), !dbg !17155
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !17156, metadata !DIExpression()), !dbg !17155
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !17155
  %1 = load i32, i32* %val.addr, align 4, !dbg !17155
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_emad_op_tlv_r_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !17155
  ret void, !dbg !17155
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_op_tlv_method_set(i8* %buf, i32 %val) #0 !dbg !17157 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !17158, metadata !DIExpression()), !dbg !17159
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !17160, metadata !DIExpression()), !dbg !17159
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !17159
  %1 = load i32, i32* %val.addr, align 4, !dbg !17159
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_emad_op_tlv_method_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !17159
  ret void, !dbg !17159
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_op_tlv_class_set(i8* %buf, i32 %val) #0 !dbg !17161 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !17162, metadata !DIExpression()), !dbg !17163
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !17164, metadata !DIExpression()), !dbg !17163
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !17163
  %1 = load i32, i32* %val.addr, align 4, !dbg !17163
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_emad_op_tlv_class_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !17163
  ret void, !dbg !17163
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_op_tlv_tid_set(i8* %buf, i64 %val) #0 !dbg !17165 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i64, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !17168, metadata !DIExpression()), !dbg !17169
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !17170, metadata !DIExpression()), !dbg !17169
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !17169
  %1 = load i64, i64* %val.addr, align 8, !dbg !17169
  call void @__mlxsw_item_set64(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_emad_op_tlv_tid_item to %struct.mlxsw_item*), i16 zeroext 0, i64 %1) #11, !dbg !17169
  ret void, !dbg !17169
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__mlxsw_item_set64(i8* %buf, %struct.mlxsw_item* %item, i16 zeroext %index, i64 %val) #0 !dbg !17171 {
entry:
  %buf.addr = alloca i8*, align 8
  %item.addr = alloca %struct.mlxsw_item*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i64, align 8
  %offset = alloca i32, align 4
  %b = alloca i64*, align 8
  %mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !17174, metadata !DIExpression()), !dbg !17175
  store %struct.mlxsw_item* %item, %struct.mlxsw_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_item** %item.addr, metadata !17176, metadata !DIExpression()), !dbg !17177
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !17178, metadata !DIExpression()), !dbg !17179
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !17180, metadata !DIExpression()), !dbg !17181
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !17182, metadata !DIExpression()), !dbg !17183
  %0 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !17184
  %1 = load i16, i16* %index.addr, align 2, !dbg !17185
  %call = call i32 @__mlxsw_item_offset(%struct.mlxsw_item* %0, i16 zeroext %1, i64 8) #11, !dbg !17186
  store i32 %call, i32* %offset, align 4, !dbg !17183
  call void @llvm.dbg.declare(metadata i64** %b, metadata !17187, metadata !DIExpression()), !dbg !17188
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !17189
  %3 = bitcast i8* %2 to i64*, !dbg !17190
  store i64* %3, i64** %b, align 8, !dbg !17188
  call void @llvm.dbg.declare(metadata i64* %mask, metadata !17191, metadata !DIExpression()), !dbg !17192
  %4 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !17193
  %size = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %4, i32 0, i32 6, !dbg !17193
  %bits = bitcast %union.anon.134* %size to i8*, !dbg !17193
  %5 = load i8, i8* %bits, align 2, !dbg !17193
  %conv = zext i8 %5 to i32, !dbg !17193
  %sub = sub i32 %conv, 1, !dbg !17193
  %sub1 = sub i32 63, %sub, !dbg !17193
  %sh_prom = zext i32 %sub1 to i64, !dbg !17193
  %shr = lshr i64 -1, %sh_prom, !dbg !17193
  %and = and i64 -1, %shr, !dbg !17193
  %add = add i64 0, %and, !dbg !17193
  %6 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !17194
  %shift = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %6, i32 0, i32 3, !dbg !17195
  %7 = load i8, i8* %shift, align 2, !dbg !17195
  %conv2 = zext i8 %7 to i32, !dbg !17194
  %sh_prom3 = zext i32 %conv2 to i64, !dbg !17196
  %shl = shl i64 %add, %sh_prom3, !dbg !17196
  store i64 %shl, i64* %mask, align 8, !dbg !17192
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !17197, metadata !DIExpression()), !dbg !17198
  %8 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !17199
  %no_real_shift = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %8, i32 0, i32 5, !dbg !17201
  %9 = load i8, i8* %no_real_shift, align 8, !dbg !17201
  %tobool = trunc i8 %9 to i1, !dbg !17201
  br i1 %tobool, label %if.end, label %if.then, !dbg !17202

if.then:                                          ; preds = %entry
  %10 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !17203
  %shift4 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %10, i32 0, i32 3, !dbg !17204
  %11 = load i8, i8* %shift4, align 2, !dbg !17204
  %conv5 = zext i8 %11 to i32, !dbg !17203
  %12 = load i64, i64* %val.addr, align 8, !dbg !17205
  %sh_prom6 = zext i32 %conv5 to i64, !dbg !17205
  %shl7 = shl i64 %12, %sh_prom6, !dbg !17205
  store i64 %shl7, i64* %val.addr, align 8, !dbg !17205
  br label %if.end, !dbg !17206

if.end:                                           ; preds = %if.then, %entry
  %13 = load i64, i64* %mask, align 8, !dbg !17207
  %14 = load i64, i64* %val.addr, align 8, !dbg !17208
  %and8 = and i64 %14, %13, !dbg !17208
  store i64 %and8, i64* %val.addr, align 8, !dbg !17208
  %15 = load i64*, i64** %b, align 8, !dbg !17209
  %16 = load i32, i32* %offset, align 4, !dbg !17209
  %idxprom = zext i32 %16 to i64, !dbg !17209
  %arrayidx = getelementptr i64, i64* %15, i64 %idxprom, !dbg !17209
  %17 = load i64, i64* %arrayidx, align 8, !dbg !17209
  %18 = call i1 @llvm.is.constant.i64(i64 %17), !dbg !17209
  br i1 %18, label %cond.true, label %cond.false, !dbg !17209

cond.true:                                        ; preds = %if.end
  %19 = load i64*, i64** %b, align 8, !dbg !17209
  %20 = load i32, i32* %offset, align 4, !dbg !17209
  %idxprom9 = zext i32 %20 to i64, !dbg !17209
  %arrayidx10 = getelementptr i64, i64* %19, i64 %idxprom9, !dbg !17209
  %21 = load i64, i64* %arrayidx10, align 8, !dbg !17209
  %and11 = and i64 %21, 255, !dbg !17209
  %shl12 = shl i64 %and11, 56, !dbg !17209
  %22 = load i64*, i64** %b, align 8, !dbg !17209
  %23 = load i32, i32* %offset, align 4, !dbg !17209
  %idxprom13 = zext i32 %23 to i64, !dbg !17209
  %arrayidx14 = getelementptr i64, i64* %22, i64 %idxprom13, !dbg !17209
  %24 = load i64, i64* %arrayidx14, align 8, !dbg !17209
  %and15 = and i64 %24, 65280, !dbg !17209
  %shl16 = shl i64 %and15, 40, !dbg !17209
  %or = or i64 %shl12, %shl16, !dbg !17209
  %25 = load i64*, i64** %b, align 8, !dbg !17209
  %26 = load i32, i32* %offset, align 4, !dbg !17209
  %idxprom17 = zext i32 %26 to i64, !dbg !17209
  %arrayidx18 = getelementptr i64, i64* %25, i64 %idxprom17, !dbg !17209
  %27 = load i64, i64* %arrayidx18, align 8, !dbg !17209
  %and19 = and i64 %27, 16711680, !dbg !17209
  %shl20 = shl i64 %and19, 24, !dbg !17209
  %or21 = or i64 %or, %shl20, !dbg !17209
  %28 = load i64*, i64** %b, align 8, !dbg !17209
  %29 = load i32, i32* %offset, align 4, !dbg !17209
  %idxprom22 = zext i32 %29 to i64, !dbg !17209
  %arrayidx23 = getelementptr i64, i64* %28, i64 %idxprom22, !dbg !17209
  %30 = load i64, i64* %arrayidx23, align 8, !dbg !17209
  %and24 = and i64 %30, 4278190080, !dbg !17209
  %shl25 = shl i64 %and24, 8, !dbg !17209
  %or26 = or i64 %or21, %shl25, !dbg !17209
  %31 = load i64*, i64** %b, align 8, !dbg !17209
  %32 = load i32, i32* %offset, align 4, !dbg !17209
  %idxprom27 = zext i32 %32 to i64, !dbg !17209
  %arrayidx28 = getelementptr i64, i64* %31, i64 %idxprom27, !dbg !17209
  %33 = load i64, i64* %arrayidx28, align 8, !dbg !17209
  %and29 = and i64 %33, 1095216660480, !dbg !17209
  %shr30 = lshr i64 %and29, 8, !dbg !17209
  %or31 = or i64 %or26, %shr30, !dbg !17209
  %34 = load i64*, i64** %b, align 8, !dbg !17209
  %35 = load i32, i32* %offset, align 4, !dbg !17209
  %idxprom32 = zext i32 %35 to i64, !dbg !17209
  %arrayidx33 = getelementptr i64, i64* %34, i64 %idxprom32, !dbg !17209
  %36 = load i64, i64* %arrayidx33, align 8, !dbg !17209
  %and34 = and i64 %36, 280375465082880, !dbg !17209
  %shr35 = lshr i64 %and34, 24, !dbg !17209
  %or36 = or i64 %or31, %shr35, !dbg !17209
  %37 = load i64*, i64** %b, align 8, !dbg !17209
  %38 = load i32, i32* %offset, align 4, !dbg !17209
  %idxprom37 = zext i32 %38 to i64, !dbg !17209
  %arrayidx38 = getelementptr i64, i64* %37, i64 %idxprom37, !dbg !17209
  %39 = load i64, i64* %arrayidx38, align 8, !dbg !17209
  %and39 = and i64 %39, 71776119061217280, !dbg !17209
  %shr40 = lshr i64 %and39, 40, !dbg !17209
  %or41 = or i64 %or36, %shr40, !dbg !17209
  %40 = load i64*, i64** %b, align 8, !dbg !17209
  %41 = load i32, i32* %offset, align 4, !dbg !17209
  %idxprom42 = zext i32 %41 to i64, !dbg !17209
  %arrayidx43 = getelementptr i64, i64* %40, i64 %idxprom42, !dbg !17209
  %42 = load i64, i64* %arrayidx43, align 8, !dbg !17209
  %and44 = and i64 %42, -72057594037927936, !dbg !17209
  %shr45 = lshr i64 %and44, 56, !dbg !17209
  %or46 = or i64 %or41, %shr45, !dbg !17209
  br label %cond.end, !dbg !17209

cond.false:                                       ; preds = %if.end
  %43 = load i64*, i64** %b, align 8, !dbg !17209
  %44 = load i32, i32* %offset, align 4, !dbg !17209
  %idxprom47 = zext i32 %44 to i64, !dbg !17209
  %arrayidx48 = getelementptr i64, i64* %43, i64 %idxprom47, !dbg !17209
  %45 = load i64, i64* %arrayidx48, align 8, !dbg !17209
  %call49 = call i64 @__fswab64(i64 %45) #12, !dbg !17209
  br label %cond.end, !dbg !17209

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %or46, %cond.true ], [ %call49, %cond.false ], !dbg !17209
  store i64 %cond, i64* %tmp, align 8, !dbg !17210
  %46 = load i64, i64* %mask, align 8, !dbg !17211
  %neg = xor i64 %46, -1, !dbg !17212
  %47 = load i64, i64* %tmp, align 8, !dbg !17213
  %and50 = and i64 %47, %neg, !dbg !17213
  store i64 %and50, i64* %tmp, align 8, !dbg !17213
  %48 = load i64, i64* %val.addr, align 8, !dbg !17214
  %49 = load i64, i64* %tmp, align 8, !dbg !17215
  %or51 = or i64 %49, %48, !dbg !17215
  store i64 %or51, i64* %tmp, align 8, !dbg !17215
  %50 = load i64, i64* %tmp, align 8, !dbg !17216
  %51 = call i1 @llvm.is.constant.i64(i64 %50), !dbg !17216
  br i1 %51, label %cond.true52, label %cond.false76, !dbg !17216

cond.true52:                                      ; preds = %cond.end
  %52 = load i64, i64* %tmp, align 8, !dbg !17216
  %and53 = and i64 %52, 255, !dbg !17216
  %shl54 = shl i64 %and53, 56, !dbg !17216
  %53 = load i64, i64* %tmp, align 8, !dbg !17216
  %and55 = and i64 %53, 65280, !dbg !17216
  %shl56 = shl i64 %and55, 40, !dbg !17216
  %or57 = or i64 %shl54, %shl56, !dbg !17216
  %54 = load i64, i64* %tmp, align 8, !dbg !17216
  %and58 = and i64 %54, 16711680, !dbg !17216
  %shl59 = shl i64 %and58, 24, !dbg !17216
  %or60 = or i64 %or57, %shl59, !dbg !17216
  %55 = load i64, i64* %tmp, align 8, !dbg !17216
  %and61 = and i64 %55, 4278190080, !dbg !17216
  %shl62 = shl i64 %and61, 8, !dbg !17216
  %or63 = or i64 %or60, %shl62, !dbg !17216
  %56 = load i64, i64* %tmp, align 8, !dbg !17216
  %and64 = and i64 %56, 1095216660480, !dbg !17216
  %shr65 = lshr i64 %and64, 8, !dbg !17216
  %or66 = or i64 %or63, %shr65, !dbg !17216
  %57 = load i64, i64* %tmp, align 8, !dbg !17216
  %and67 = and i64 %57, 280375465082880, !dbg !17216
  %shr68 = lshr i64 %and67, 24, !dbg !17216
  %or69 = or i64 %or66, %shr68, !dbg !17216
  %58 = load i64, i64* %tmp, align 8, !dbg !17216
  %and70 = and i64 %58, 71776119061217280, !dbg !17216
  %shr71 = lshr i64 %and70, 40, !dbg !17216
  %or72 = or i64 %or69, %shr71, !dbg !17216
  %59 = load i64, i64* %tmp, align 8, !dbg !17216
  %and73 = and i64 %59, -72057594037927936, !dbg !17216
  %shr74 = lshr i64 %and73, 56, !dbg !17216
  %or75 = or i64 %or72, %shr74, !dbg !17216
  br label %cond.end78, !dbg !17216

cond.false76:                                     ; preds = %cond.end
  %60 = load i64, i64* %tmp, align 8, !dbg !17216
  %call77 = call i64 @__fswab64(i64 %60) #12, !dbg !17216
  br label %cond.end78, !dbg !17216

cond.end78:                                       ; preds = %cond.false76, %cond.true52
  %cond79 = phi i64 [ %or75, %cond.true52 ], [ %call77, %cond.false76 ], !dbg !17216
  %61 = load i64*, i64** %b, align 8, !dbg !17217
  %62 = load i32, i32* %offset, align 4, !dbg !17218
  %idxprom80 = zext i32 %62 to i64, !dbg !17217
  %arrayidx81 = getelementptr i64, i64* %61, i64 %idxprom80, !dbg !17217
  store i64 %cond79, i64* %arrayidx81, align 8, !dbg !17219
  ret void, !dbg !17220
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_eth_hdr_dmac_memcpy_to(i8* %buf, i8* %src) #0 !dbg !17221 {
entry:
  %buf.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !17224, metadata !DIExpression()), !dbg !17225
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !17226, metadata !DIExpression()), !dbg !17225
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !17225
  %1 = load i8*, i8** %src.addr, align 8, !dbg !17225
  call void @__mlxsw_item_memcpy_to(i8* %0, i8* %1, %struct.mlxsw_item* @mlxsw_emad_eth_hdr_dmac_item, i16 zeroext 0) #11, !dbg !17225
  ret void, !dbg !17225
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_eth_hdr_smac_memcpy_to(i8* %buf, i8* %src) #0 !dbg !17227 {
entry:
  %buf.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !17228, metadata !DIExpression()), !dbg !17229
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !17230, metadata !DIExpression()), !dbg !17229
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !17229
  %1 = load i8*, i8** %src.addr, align 8, !dbg !17229
  call void @__mlxsw_item_memcpy_to(i8* %0, i8* %1, %struct.mlxsw_item* @mlxsw_emad_eth_hdr_smac_item, i16 zeroext 0) #11, !dbg !17229
  ret void, !dbg !17229
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_eth_hdr_ethertype_set(i8* %buf, i32 %val) #0 !dbg !17231 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !17232, metadata !DIExpression()), !dbg !17233
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !17234, metadata !DIExpression()), !dbg !17233
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !17233
  %1 = load i32, i32* %val.addr, align 4, !dbg !17233
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_emad_eth_hdr_ethertype_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !17233
  ret void, !dbg !17233
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_eth_hdr_mlx_proto_set(i8* %buf, i32 %val) #0 !dbg !17235 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !17236, metadata !DIExpression()), !dbg !17237
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !17238, metadata !DIExpression()), !dbg !17237
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !17237
  %1 = load i32, i32* %val.addr, align 4, !dbg !17237
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_emad_eth_hdr_mlx_proto_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !17237
  ret void, !dbg !17237
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_emad_eth_hdr_ver_set(i8* %buf, i32 %val) #0 !dbg !17239 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !17240, metadata !DIExpression()), !dbg !17241
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !17242, metadata !DIExpression()), !dbg !17241
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !17241
  %1 = load i32, i32* %val.addr, align 4, !dbg !17241
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_emad_eth_hdr_ver_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !17241
  ret void, !dbg !17241
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_reset_mac_header(%struct.sk_buff* %skb) #0 !dbg !17243 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17244, metadata !DIExpression()), !dbg !17245
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17246
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 37, !dbg !17247
  %1 = load i8*, i8** %data, align 8, !dbg !17247
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17248
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 36, !dbg !17249
  %3 = load i8*, i8** %head, align 8, !dbg !17249
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !17250
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !17250
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !17250
  %conv = trunc i64 %sub.ptr.sub to i16, !dbg !17246
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17251
  %mac_header = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %4, i32 0, i32 32, !dbg !17252
  store i16 %conv, i16* %mac_header, align 2, !dbg !17253
  ret void, !dbg !17254
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__mlxsw_item_memcpy_to(i8* %buf, i8* %src, %struct.mlxsw_item* %item, i16 zeroext %index) #0 !dbg !17255 {
entry:
  %buf.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %item.addr = alloca %struct.mlxsw_item*, align 8
  %index.addr = alloca i16, align 2
  %offset = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !17258, metadata !DIExpression()), !dbg !17259
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !17260, metadata !DIExpression()), !dbg !17261
  store %struct.mlxsw_item* %item, %struct.mlxsw_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_item** %item.addr, metadata !17262, metadata !DIExpression()), !dbg !17263
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !17264, metadata !DIExpression()), !dbg !17265
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !17266, metadata !DIExpression()), !dbg !17267
  %0 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !17268
  %1 = load i16, i16* %index.addr, align 2, !dbg !17269
  %call = call i32 @__mlxsw_item_offset(%struct.mlxsw_item* %0, i16 zeroext %1, i64 1) #11, !dbg !17270
  store i32 %call, i32* %offset, align 4, !dbg !17267
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !17271
  %3 = load i32, i32* %offset, align 4, !dbg !17272
  %idxprom = zext i32 %3 to i64, !dbg !17271
  %arrayidx = getelementptr i8, i8* %2, i64 %idxprom, !dbg !17271
  %4 = load i8*, i8** %src.addr, align 8, !dbg !17273
  %5 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !17274
  %size = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %5, i32 0, i32 6, !dbg !17275
  %bytes = bitcast %union.anon.134* %size to i16*, !dbg !17276
  %6 = load i16, i16* %bytes, align 2, !dbg !17276
  %conv = zext i16 %6 to i64, !dbg !17274
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx, i8* align 1 %4, i64 %conv, i1 false), !dbg !17277
  ret void, !dbg !17278
}

; Function Attrs: noredzone
declare dso_local void @call_rcu(%struct.callback_head*, void (%struct.callback_head*)*) #2

; Function Attrs: noredzone
declare dso_local void @kvfree(i8*) #2

; Function Attrs: noredzone
declare dso_local void @wait_for_completion(%struct.completion*) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work*) #2

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @mlxsw_reg_id_str(i16 zeroext %reg_id) #0 !dbg !17279 {
entry:
  %retval = alloca i8*, align 8
  %reg_id.addr = alloca i16, align 2
  %reg_info = alloca %struct.mlxsw_reg_info*, align 8
  %i = alloca i32, align 4
  store i16 %reg_id, i16* %reg_id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %reg_id.addr, metadata !17280, metadata !DIExpression()), !dbg !17281
  call void @llvm.dbg.declare(metadata %struct.mlxsw_reg_info** %reg_info, metadata !17282, metadata !DIExpression()), !dbg !17283
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17284, metadata !DIExpression()), !dbg !17285
  store i32 0, i32* %i, align 4, !dbg !17286
  br label %for.cond, !dbg !17288

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !17289
  %conv = sext i32 %0 to i64, !dbg !17289
  %cmp = icmp ult i64 %conv, 135, !dbg !17291
  br i1 %cmp, label %for.body, label %for.end, !dbg !17292

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !17293
  %idxprom = sext i32 %1 to i64, !dbg !17295
  %arrayidx = getelementptr [135 x %struct.mlxsw_reg_info*], [135 x %struct.mlxsw_reg_info*]* @mlxsw_reg_infos, i64 0, i64 %idxprom, !dbg !17295
  %2 = load %struct.mlxsw_reg_info*, %struct.mlxsw_reg_info** %arrayidx, align 8, !dbg !17295
  store %struct.mlxsw_reg_info* %2, %struct.mlxsw_reg_info** %reg_info, align 8, !dbg !17296
  %3 = load %struct.mlxsw_reg_info*, %struct.mlxsw_reg_info** %reg_info, align 8, !dbg !17297
  %id = getelementptr inbounds %struct.mlxsw_reg_info, %struct.mlxsw_reg_info* %3, i32 0, i32 0, !dbg !17299
  %4 = load i16, i16* %id, align 8, !dbg !17299
  %conv2 = zext i16 %4 to i32, !dbg !17297
  %5 = load i16, i16* %reg_id.addr, align 2, !dbg !17300
  %conv3 = zext i16 %5 to i32, !dbg !17300
  %cmp4 = icmp eq i32 %conv2, %conv3, !dbg !17301
  br i1 %cmp4, label %if.then, label %if.end, !dbg !17302

if.then:                                          ; preds = %for.body
  %6 = load %struct.mlxsw_reg_info*, %struct.mlxsw_reg_info** %reg_info, align 8, !dbg !17303
  %name = getelementptr inbounds %struct.mlxsw_reg_info, %struct.mlxsw_reg_info* %6, i32 0, i32 2, !dbg !17304
  %7 = load i8*, i8** %name, align 8, !dbg !17304
  store i8* %7, i8** %retval, align 8, !dbg !17305
  br label %return, !dbg !17305

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !17306

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4, !dbg !17307
  %inc = add i32 %8, 1, !dbg !17307
  store i32 %inc, i32* %i, align 4, !dbg !17307
  br label %for.cond, !dbg !17308, !llvm.loop !17309

for.end:                                          ; preds = %for.cond
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.168, i64 0, i64 0), i8** %retval, align 8, !dbg !17311
  br label %return, !dbg !17311

return:                                           ; preds = %for.end, %if.then
  %9 = load i8*, i8** %retval, align 8, !dbg !17312
  ret i8* %9, !dbg !17312
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @mlxsw_core_reg_access_type_str(i32 %type) #0 !dbg !17313 {
entry:
  %retval = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !17316, metadata !DIExpression()), !dbg !17317
  %0 = load i32, i32* %type.addr, align 4, !dbg !17318
  switch i32 %0, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !17319

sw.bb:                                            ; preds = %entry
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.82, i64 0, i64 0), i8** %retval, align 8, !dbg !17320
  br label %do.end7, !dbg !17320

sw.bb1:                                           ; preds = %entry
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.83, i64 0, i64 0), i8** %retval, align 8, !dbg !17322
  br label %do.end7, !dbg !17322

sw.epilog:                                        ; preds = %entry
  br label %do.body, !dbg !17323

do.body:                                          ; preds = %sw.epilog
  br label %do.body2, !dbg !17324

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !17326

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !17324

do.body3:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 323, i32 0, i64 12) #10, !dbg !17328, !srcloc !17330
  br label %do.end4, !dbg !17328

do.end4:                                          ; preds = %do.body3
  br label %do.body5, !dbg !17324

do.body5:                                         ; preds = %do.end4
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 338) #10, !dbg !17331, !srcloc !17334
  unreachable, !dbg !17335

do.end6:                                          ; No predecessors!
  br label %do.end7, !dbg !17324

do.end7:                                          ; preds = %sw.bb, %sw.bb1, %do.end6
  %1 = load i8*, i8** %retval, align 8, !dbg !17336
  ret i8* %1, !dbg !17336
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @mlxsw_emad_op_tlv_status_str(i8 zeroext %status) #0 !dbg !17337 {
entry:
  %retval = alloca i8*, align 8
  %status.addr = alloca i8, align 1
  store i8 %status, i8* %status.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %status.addr, metadata !17340, metadata !DIExpression()), !dbg !17341
  %0 = load i8, i8* %status.addr, align 1, !dbg !17342
  %conv = zext i8 %0 to i32, !dbg !17342
  switch i32 %conv, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
    i32 3, label %sw.bb3
    i32 4, label %sw.bb4
    i32 5, label %sw.bb5
    i32 6, label %sw.bb6
    i32 7, label %sw.bb7
    i32 8, label %sw.bb8
    i32 9, label %sw.bb9
    i32 112, label %sw.bb10
  ], !dbg !17343

sw.bb:                                            ; preds = %entry
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.297, i64 0, i64 0), i8** %retval, align 8, !dbg !17344
  br label %return, !dbg !17344

sw.bb1:                                           ; preds = %entry
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.298, i64 0, i64 0), i8** %retval, align 8, !dbg !17346
  br label %return, !dbg !17346

sw.bb2:                                           ; preds = %entry
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.299, i64 0, i64 0), i8** %retval, align 8, !dbg !17347
  br label %return, !dbg !17347

sw.bb3:                                           ; preds = %entry
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.300, i64 0, i64 0), i8** %retval, align 8, !dbg !17348
  br label %return, !dbg !17348

sw.bb4:                                           ; preds = %entry
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.301, i64 0, i64 0), i8** %retval, align 8, !dbg !17349
  br label %return, !dbg !17349

sw.bb5:                                           ; preds = %entry
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.302, i64 0, i64 0), i8** %retval, align 8, !dbg !17350
  br label %return, !dbg !17350

sw.bb6:                                           ; preds = %entry
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.303, i64 0, i64 0), i8** %retval, align 8, !dbg !17351
  br label %return, !dbg !17351

sw.bb7:                                           ; preds = %entry
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.304, i64 0, i64 0), i8** %retval, align 8, !dbg !17352
  br label %return, !dbg !17352

sw.bb8:                                           ; preds = %entry
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.305, i64 0, i64 0), i8** %retval, align 8, !dbg !17353
  br label %return, !dbg !17353

sw.bb9:                                           ; preds = %entry
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.306, i64 0, i64 0), i8** %retval, align 8, !dbg !17354
  br label %return, !dbg !17354

sw.bb10:                                          ; preds = %entry
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.307, i64 0, i64 0), i8** %retval, align 8, !dbg !17355
  br label %return, !dbg !17355

sw.default:                                       ; preds = %entry
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.168, i64 0, i64 0), i8** %retval, align 8, !dbg !17356
  br label %return, !dbg !17356

return:                                           ; preds = %sw.default, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i8*, i8** %retval, align 8, !dbg !17357
  ret i8* %1, !dbg !17357
}

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_devlink_hwerr(%struct.devlink* %devlink, i32 %err, i8* %msg) #0 !dbg !17358 {
entry:
  %devlink.addr = alloca %struct.devlink*, align 8
  %err.addr = alloca i32, align 4
  %msg.addr = alloca i8*, align 8
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !17361, metadata !DIExpression()), !dbg !17362
  store i32 %err, i32* %err.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !17363, metadata !DIExpression()), !dbg !17362
  store i8* %msg, i8** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %msg.addr, metadata !17364, metadata !DIExpression()), !dbg !17362
  ret void, !dbg !17362
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_core_reg_access_cmd(%struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_reg_info* %reg, i8* %payload, i32 %type) #0 !dbg !17365 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %reg.addr = alloca %struct.mlxsw_reg_info*, align 8
  %payload.addr = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  %status = alloca i32, align 4
  %err = alloca i32, align 4
  %n_retry = alloca i32, align 4
  %reset_ok = alloca i8, align 1
  %in_mbox = alloca i8*, align 8
  %out_mbox = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !17366, metadata !DIExpression()), !dbg !17367
  store %struct.mlxsw_reg_info* %reg, %struct.mlxsw_reg_info** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_reg_info** %reg.addr, metadata !17368, metadata !DIExpression()), !dbg !17369
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !17370, metadata !DIExpression()), !dbg !17371
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !17372, metadata !DIExpression()), !dbg !17373
  call void @llvm.dbg.declare(metadata i32* %status, metadata !17374, metadata !DIExpression()), !dbg !17375
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17376, metadata !DIExpression()), !dbg !17377
  call void @llvm.dbg.declare(metadata i32* %n_retry, metadata !17378, metadata !DIExpression()), !dbg !17379
  call void @llvm.dbg.declare(metadata i8* %reset_ok, metadata !17380, metadata !DIExpression()), !dbg !17381
  call void @llvm.dbg.declare(metadata i8** %in_mbox, metadata !17382, metadata !DIExpression()), !dbg !17383
  call void @llvm.dbg.declare(metadata i8** %out_mbox, metadata !17384, metadata !DIExpression()), !dbg !17385
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !17386, metadata !DIExpression()), !dbg !17387
  %call = call i8* @mlxsw_cmd_mbox_alloc() #11, !dbg !17388
  store i8* %call, i8** %in_mbox, align 8, !dbg !17389
  %0 = load i8*, i8** %in_mbox, align 8, !dbg !17390
  %tobool = icmp ne i8* %0, null, !dbg !17390
  br i1 %tobool, label %if.end, label %if.then, !dbg !17392

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !17393
  br label %return, !dbg !17393

if.end:                                           ; preds = %entry
  %call1 = call i8* @mlxsw_cmd_mbox_alloc() #11, !dbg !17394
  store i8* %call1, i8** %out_mbox, align 8, !dbg !17395
  %1 = load i8*, i8** %out_mbox, align 8, !dbg !17396
  %tobool2 = icmp ne i8* %1, null, !dbg !17396
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !17398

if.then3:                                         ; preds = %if.end
  store i32 -12, i32* %err, align 4, !dbg !17399
  br label %free_in_mbox, !dbg !17401

if.end4:                                          ; preds = %if.end
  %2 = load i8*, i8** %in_mbox, align 8, !dbg !17402
  %3 = load %struct.mlxsw_reg_info*, %struct.mlxsw_reg_info** %reg.addr, align 8, !dbg !17403
  %4 = load i32, i32* %type.addr, align 4, !dbg !17404
  %5 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !17405
  %call5 = call i64 @mlxsw_core_tid_get(%struct.mlxsw_core* %5) #11, !dbg !17406
  call void @mlxsw_emad_pack_op_tlv(i8* %2, %struct.mlxsw_reg_info* %3, i32 %4, i64 %call5) #11, !dbg !17407
  %6 = load i8*, i8** %in_mbox, align 8, !dbg !17408
  %add.ptr = getelementptr i8, i8* %6, i64 16, !dbg !17409
  store i8* %add.ptr, i8** %tmp, align 8, !dbg !17410
  %7 = load i8*, i8** %tmp, align 8, !dbg !17411
  %8 = load %struct.mlxsw_reg_info*, %struct.mlxsw_reg_info** %reg.addr, align 8, !dbg !17412
  %9 = load i8*, i8** %payload.addr, align 8, !dbg !17413
  call void @mlxsw_emad_pack_reg_tlv(i8* %7, %struct.mlxsw_reg_info* %8, i8* %9) #11, !dbg !17414
  %10 = load %struct.mlxsw_reg_info*, %struct.mlxsw_reg_info** %reg.addr, align 8, !dbg !17415
  %id = getelementptr inbounds %struct.mlxsw_reg_info, %struct.mlxsw_reg_info* %10, i32 0, i32 0, !dbg !17416
  %11 = load i16, i16* %id, align 8, !dbg !17416
  %conv = zext i16 %11 to i32, !dbg !17415
  %cmp = icmp eq i32 %conv, 36899, !dbg !17417
  %frombool = zext i1 %cmp to i8, !dbg !17418
  store i8 %frombool, i8* %reset_ok, align 1, !dbg !17418
  store i32 0, i32* %n_retry, align 4, !dbg !17419
  br label %retry, !dbg !17420

retry:                                            ; preds = %if.then18, %if.end4
  call void @llvm.dbg.label(metadata !17421), !dbg !17422
  %12 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !17423
  %13 = load i8, i8* %reset_ok, align 1, !dbg !17424
  %tobool7 = trunc i8 %13 to i1, !dbg !17424
  %14 = load i8*, i8** %in_mbox, align 8, !dbg !17425
  %15 = load i8*, i8** %out_mbox, align 8, !dbg !17426
  %call8 = call i32 @mlxsw_cmd_access_reg(%struct.mlxsw_core* %12, i1 zeroext %tobool7, i8* %14, i8* %15) #11, !dbg !17427
  store i32 %call8, i32* %err, align 4, !dbg !17428
  %16 = load i32, i32* %err, align 4, !dbg !17429
  %tobool9 = icmp ne i32 %16, 0, !dbg !17429
  br i1 %tobool9, label %if.end23, label %if.then10, !dbg !17431

if.then10:                                        ; preds = %retry
  %17 = load i8*, i8** %out_mbox, align 8, !dbg !17432
  %call11 = call i32 @mlxsw_emad_process_status(i8* %17, i32* %status) #11, !dbg !17434
  store i32 %call11, i32* %err, align 4, !dbg !17435
  %18 = load i32, i32* %err, align 4, !dbg !17436
  %tobool12 = icmp ne i32 %18, 0, !dbg !17436
  br i1 %tobool12, label %if.then13, label %if.end22, !dbg !17438

if.then13:                                        ; preds = %if.then10
  %19 = load i32, i32* %err, align 4, !dbg !17439
  %cmp14 = icmp eq i32 %19, -11, !dbg !17442
  br i1 %cmp14, label %land.lhs.true, label %if.end19, !dbg !17443

land.lhs.true:                                    ; preds = %if.then13
  %20 = load i32, i32* %n_retry, align 4, !dbg !17444
  %inc = add i32 %20, 1, !dbg !17444
  store i32 %inc, i32* %n_retry, align 4, !dbg !17444
  %cmp16 = icmp slt i32 %20, 5, !dbg !17445
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !17446

if.then18:                                        ; preds = %land.lhs.true
  br label %retry, !dbg !17447

if.end19:                                         ; preds = %land.lhs.true, %if.then13
  %21 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !17448
  %bus_info = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %21, i32 0, i32 3, !dbg !17448
  %22 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info, align 8, !dbg !17448
  %dev = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %22, i32 0, i32 2, !dbg !17448
  %23 = load %struct.device*, %struct.device** %dev, align 8, !dbg !17448
  %24 = load i32, i32* %status, align 4, !dbg !17448
  %25 = load i32, i32* %status, align 4, !dbg !17448
  %conv20 = trunc i32 %25 to i8, !dbg !17448
  %call21 = call i8* @mlxsw_emad_op_tlv_status_str(i8 zeroext %conv20) #11, !dbg !17448
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %23, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.308, i64 0, i64 0), i32 %24, i8* %call21) #14, !dbg !17448
  br label %if.end22, !dbg !17449

if.end22:                                         ; preds = %if.end19, %if.then10
  br label %if.end23, !dbg !17450

if.end23:                                         ; preds = %if.end22, %retry
  %26 = load i32, i32* %err, align 4, !dbg !17451
  %tobool24 = icmp ne i32 %26, 0, !dbg !17451
  br i1 %tobool24, label %if.end28, label %if.then25, !dbg !17453

if.then25:                                        ; preds = %if.end23
  %27 = load i8*, i8** %payload.addr, align 8, !dbg !17454
  %28 = load i8*, i8** %out_mbox, align 8, !dbg !17455
  %call26 = call i8* @mlxsw_emad_reg_payload_cmd(i8* %28) #11, !dbg !17456
  %29 = load %struct.mlxsw_reg_info*, %struct.mlxsw_reg_info** %reg.addr, align 8, !dbg !17457
  %len = getelementptr inbounds %struct.mlxsw_reg_info, %struct.mlxsw_reg_info* %29, i32 0, i32 1, !dbg !17458
  %30 = load i16, i16* %len, align 2, !dbg !17458
  %conv27 = zext i16 %30 to i64, !dbg !17457
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %call26, i64 %conv27, i1 false), !dbg !17459
  br label %if.end28, !dbg !17459

if.end28:                                         ; preds = %if.then25, %if.end23
  %31 = load i8*, i8** %out_mbox, align 8, !dbg !17460
  call void @mlxsw_cmd_mbox_free(i8* %31) #11, !dbg !17461
  br label %free_in_mbox, !dbg !17461

free_in_mbox:                                     ; preds = %if.end28, %if.then3
  call void @llvm.dbg.label(metadata !17462), !dbg !17463
  %32 = load i8*, i8** %in_mbox, align 8, !dbg !17464
  call void @mlxsw_cmd_mbox_free(i8* %32) #11, !dbg !17465
  %33 = load i32, i32* %err, align 4, !dbg !17466
  %tobool29 = icmp ne i32 %33, 0, !dbg !17466
  br i1 %tobool29, label %if.then30, label %if.end38, !dbg !17468

if.then30:                                        ; preds = %free_in_mbox
  %34 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !17469
  %bus_info31 = getelementptr inbounds %struct.mlxsw_core, %struct.mlxsw_core* %34, i32 0, i32 3, !dbg !17469
  %35 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info31, align 8, !dbg !17469
  %dev32 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %35, i32 0, i32 2, !dbg !17469
  %36 = load %struct.device*, %struct.device** %dev32, align 8, !dbg !17469
  %37 = load %struct.mlxsw_reg_info*, %struct.mlxsw_reg_info** %reg.addr, align 8, !dbg !17469
  %id33 = getelementptr inbounds %struct.mlxsw_reg_info, %struct.mlxsw_reg_info* %37, i32 0, i32 0, !dbg !17469
  %38 = load i16, i16* %id33, align 8, !dbg !17469
  %conv34 = zext i16 %38 to i32, !dbg !17469
  %39 = load %struct.mlxsw_reg_info*, %struct.mlxsw_reg_info** %reg.addr, align 8, !dbg !17469
  %id35 = getelementptr inbounds %struct.mlxsw_reg_info, %struct.mlxsw_reg_info* %39, i32 0, i32 0, !dbg !17469
  %40 = load i16, i16* %id35, align 8, !dbg !17469
  %call36 = call i8* @mlxsw_reg_id_str(i16 zeroext %40) #11, !dbg !17469
  %41 = load i32, i32* %type.addr, align 4, !dbg !17469
  %call37 = call i8* @mlxsw_core_reg_access_type_str(i32 %41) #11, !dbg !17469
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %36, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.309, i64 0, i64 0), i32 %conv34, i8* %call36, i8* %call37) #14, !dbg !17469
  br label %if.end38, !dbg !17469

if.end38:                                         ; preds = %if.then30, %free_in_mbox
  %42 = load i32, i32* %err, align 4, !dbg !17470
  store i32 %42, i32* %retval, align 4, !dbg !17471
  br label %return, !dbg !17471

return:                                           ; preds = %if.end38, %if.then
  %43 = load i32, i32* %retval, align 4, !dbg !17472
  ret i32 %43, !dbg !17472
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_core_reg_access_cb(%struct.mlxsw_core* %mlxsw_core, i8* %payload, i64 %payload_len, i64 %cb_priv) #0 !dbg !17473 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %payload.addr = alloca i8*, align 8
  %payload_len.addr = alloca i64, align 8
  %cb_priv.addr = alloca i64, align 8
  %orig_payload = alloca i8*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !17474, metadata !DIExpression()), !dbg !17475
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !17476, metadata !DIExpression()), !dbg !17477
  store i64 %payload_len, i64* %payload_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %payload_len.addr, metadata !17478, metadata !DIExpression()), !dbg !17479
  store i64 %cb_priv, i64* %cb_priv.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %cb_priv.addr, metadata !17480, metadata !DIExpression()), !dbg !17481
  call void @llvm.dbg.declare(metadata i8** %orig_payload, metadata !17482, metadata !DIExpression()), !dbg !17483
  %0 = load i64, i64* %cb_priv.addr, align 8, !dbg !17484
  %1 = inttoptr i64 %0 to i8*, !dbg !17485
  store i8* %1, i8** %orig_payload, align 8, !dbg !17483
  %2 = load i8*, i8** %orig_payload, align 8, !dbg !17486
  %3 = load i8*, i8** %payload.addr, align 8, !dbg !17487
  %4 = load i64, i64* %payload_len.addr, align 8, !dbg !17488
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 %4, i1 false), !dbg !17489
  ret void, !dbg !17490
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @mlxsw_cmd_mbox_alloc() #0 !dbg !17491 {
entry:
  %call = call i8* @kzalloc(i64 4096, i32 3264) #11, !dbg !17494
  ret i8* %call, !dbg !17495
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_access_reg(%struct.mlxsw_core* %mlxsw_core, i1 zeroext %reset_ok, i8* %in_mbox, i8* %out_mbox) #0 !dbg !17496 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %reset_ok.addr = alloca i8, align 1
  %in_mbox.addr = alloca i8*, align 8
  %out_mbox.addr = alloca i8*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !17499, metadata !DIExpression()), !dbg !17500
  %frombool = zext i1 %reset_ok to i8
  store i8 %frombool, i8* %reset_ok.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reset_ok.addr, metadata !17501, metadata !DIExpression()), !dbg !17502
  store i8* %in_mbox, i8** %in_mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %in_mbox.addr, metadata !17503, metadata !DIExpression()), !dbg !17504
  store i8* %out_mbox, i8** %out_mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out_mbox.addr, metadata !17505, metadata !DIExpression()), !dbg !17506
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !17507
  %1 = load i8, i8* %reset_ok.addr, align 1, !dbg !17508
  %tobool = trunc i8 %1 to i1, !dbg !17508
  %2 = load i8*, i8** %in_mbox.addr, align 8, !dbg !17509
  %3 = load i8*, i8** %out_mbox.addr, align 8, !dbg !17510
  %call = call i32 @mlxsw_cmd_exec(%struct.mlxsw_core* %0, i16 zeroext 64, i8 zeroext 0, i32 0, i1 zeroext false, i1 zeroext %tobool, i8* %2, i64 4096, i8* %3, i64 4096) #11, !dbg !17511
  ret i32 %call, !dbg !17512
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @mlxsw_emad_reg_payload_cmd(i8* %mbox) #0 !dbg !17513 {
entry:
  %mbox.addr = alloca i8*, align 8
  store i8* %mbox, i8** %mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mbox.addr, metadata !17514, metadata !DIExpression()), !dbg !17515
  %0 = load i8*, i8** %mbox.addr, align 8, !dbg !17516
  %add.ptr = getelementptr i8, i8* %0, i64 20, !dbg !17517
  ret i8* %add.ptr, !dbg !17518
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_free(i8* %mbox) #0 !dbg !17519 {
entry:
  %mbox.addr = alloca i8*, align 8
  store i8* %mbox, i8** %mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mbox.addr, metadata !17520, metadata !DIExpression()), !dbg !17521
  %0 = load i8*, i8** %mbox.addr, align 8, !dbg !17522
  call void @kfree(i8* %0) #11, !dbg !17523
  ret void, !dbg !17524
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__rcu_read_lock() #0 !dbg !17525 {
entry:
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17526, !srcloc !17527
  ret void, !dbg !17528
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__rcu_read_unlock() #0 !dbg !17529 {
entry:
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17530, !srcloc !17531
  br label %do.body, !dbg !17532

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !17533

do.end:                                           ; preds = %do.body
  ret void, !dbg !17535
}

; Function Attrs: noredzone
declare dso_local void @kfree_skb(%struct.sk_buff*) #2

; Function Attrs: noredzone
declare dso_local void @devlink_port_attrs_set(%struct.devlink_port*, %struct.devlink_port_attrs*) #2

; Function Attrs: noredzone
declare dso_local i32 @devlink_port_register(%struct.devlink*, %struct.devlink_port*, i32) #2

; Function Attrs: noredzone
declare dso_local void @devlink_port_unregister(%struct.devlink_port*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_pmtm_module_set(i8* %buf, i32 %val) #0 !dbg !17536 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !17537, metadata !DIExpression()), !dbg !17538
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !17539, metadata !DIExpression()), !dbg !17538
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !17538
  %1 = load i32, i32* %val.addr, align 4, !dbg !17538
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_pmtm_module_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #11, !dbg !17538
  ret void, !dbg !17538
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_pmtm_module_type_get(i8* %buf) #0 !dbg !17540 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !17541, metadata !DIExpression()), !dbg !17542
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !17542
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_pmtm_module_type_item to %struct.mlxsw_item*), i16 zeroext 0) #11, !dbg !17542
  ret i32 %call, !dbg !17542
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_delayed_work_on(i32, %struct.workqueue_struct*, %struct.delayed_work*, i64) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_work_on(i32, %struct.workqueue_struct*, %struct.work_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_exec_out(%struct.mlxsw_core* %mlxsw_core, i16 zeroext %opcode, i8 zeroext %opcode_mod, i32 %in_mod, i1 zeroext %out_mbox_direct, i8* %out_mbox, i64 %out_mbox_size) #0 !dbg !17543 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %opcode.addr = alloca i16, align 2
  %opcode_mod.addr = alloca i8, align 1
  %in_mod.addr = alloca i32, align 4
  %out_mbox_direct.addr = alloca i8, align 1
  %out_mbox.addr = alloca i8*, align 8
  %out_mbox_size.addr = alloca i64, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !17546, metadata !DIExpression()), !dbg !17547
  store i16 %opcode, i16* %opcode.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %opcode.addr, metadata !17548, metadata !DIExpression()), !dbg !17549
  store i8 %opcode_mod, i8* %opcode_mod.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %opcode_mod.addr, metadata !17550, metadata !DIExpression()), !dbg !17551
  store i32 %in_mod, i32* %in_mod.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %in_mod.addr, metadata !17552, metadata !DIExpression()), !dbg !17553
  %frombool = zext i1 %out_mbox_direct to i8
  store i8 %frombool, i8* %out_mbox_direct.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %out_mbox_direct.addr, metadata !17554, metadata !DIExpression()), !dbg !17555
  store i8* %out_mbox, i8** %out_mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out_mbox.addr, metadata !17556, metadata !DIExpression()), !dbg !17557
  store i64 %out_mbox_size, i64* %out_mbox_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %out_mbox_size.addr, metadata !17558, metadata !DIExpression()), !dbg !17559
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !17560
  %1 = load i16, i16* %opcode.addr, align 2, !dbg !17561
  %2 = load i8, i8* %opcode_mod.addr, align 1, !dbg !17562
  %3 = load i32, i32* %in_mod.addr, align 4, !dbg !17563
  %4 = load i8, i8* %out_mbox_direct.addr, align 1, !dbg !17564
  %tobool = trunc i8 %4 to i1, !dbg !17564
  %5 = load i8*, i8** %out_mbox.addr, align 8, !dbg !17565
  %6 = load i64, i64* %out_mbox_size.addr, align 8, !dbg !17566
  %call = call i32 @mlxsw_cmd_exec(%struct.mlxsw_core* %0, i16 zeroext %1, i8 zeroext %2, i32 %3, i1 zeroext %tobool, i1 zeroext false, i8* null, i64 0, i8* %5, i64 %6) #11, !dbg !17567
  ret i32 %call, !dbg !17568
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_res_set(%struct.mlxsw_res* %res, i32 %res_id, i64 %value) #0 !dbg !17569 {
entry:
  %res.addr = alloca %struct.mlxsw_res*, align 8
  %res_id.addr = alloca i32, align 4
  %value.addr = alloca i64, align 8
  store %struct.mlxsw_res* %res, %struct.mlxsw_res** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_res** %res.addr, metadata !17572, metadata !DIExpression()), !dbg !17573
  store i32 %res_id, i32* %res_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %res_id.addr, metadata !17574, metadata !DIExpression()), !dbg !17575
  store i64 %value, i64* %value.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %value.addr, metadata !17576, metadata !DIExpression()), !dbg !17577
  %0 = load %struct.mlxsw_res*, %struct.mlxsw_res** %res.addr, align 8, !dbg !17578
  %valid = getelementptr inbounds %struct.mlxsw_res, %struct.mlxsw_res* %0, i32 0, i32 0, !dbg !17579
  %1 = load i32, i32* %res_id.addr, align 4, !dbg !17580
  %idxprom = zext i32 %1 to i64, !dbg !17578
  %arrayidx = getelementptr [50 x i8], [50 x i8]* %valid, i64 0, i64 %idxprom, !dbg !17578
  store i8 1, i8* %arrayidx, align 1, !dbg !17581
  %2 = load i64, i64* %value.addr, align 8, !dbg !17582
  %3 = load %struct.mlxsw_res*, %struct.mlxsw_res** %res.addr, align 8, !dbg !17583
  %values = getelementptr inbounds %struct.mlxsw_res, %struct.mlxsw_res* %3, i32 0, i32 1, !dbg !17584
  %4 = load i32, i32* %res_id.addr, align 4, !dbg !17585
  %idxprom1 = zext i32 %4 to i64, !dbg !17583
  %arrayidx2 = getelementptr [50 x i64], [50 x i64]* %values, i64 0, i64 %idxprom1, !dbg !17583
  store i64 %2, i64* %arrayidx2, align 8, !dbg !17586
  ret void, !dbg !17587
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind willreturn }
attributes #9 = { alwaysinline noredzone nounwind sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noredzone }
attributes #12 = { noredzone nounwind readnone }
attributes #13 = { noredzone nounwind }
attributes #14 = { cold noredzone }
attributes #15 = { nounwind readnone }
attributes #16 = { nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!8828, !8829, !8830, !8831}
!llvm.ident = !{!8832}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "mlxsw_core_driver_list_lock", scope: !2, file: !3, line: 40, type: !1716, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !7840, globals: !8270, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/core.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !11, !18, !24, !30, !34, !38, !42, !47, !52, !59, !65, !70, !76, !83, !103, !110, !141, !175, !216, !223, !254, !267, !275, !281, !288, !292, !296, !303, !309, !7292, !4334, !4429, !5096, !5115, !5922, !6165, !6232, !6308, !6316, !6549, !7389, !7394, !7403, !7414, !7452, !7456, !7470, !7579, !7633, !7648, !7664, !7674, !7687, !7690, !7698, !7704, !7708, !7714, !7729, !7736, !7743, !7747, !7778, !7785, !7789, !7794, !7800, !7804, !7824}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_dpipe_field_mapping_type", file: !6, line: 541, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/uapi/linux/devlink.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "DEVLINK_DPIPE_FIELD_MAPPING_TYPE_NONE", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "DEVLINK_DPIPE_FIELD_MAPPING_TYPE_IFINDEX", value: 1, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_reload_action", file: !6, line: 304, baseType: !7, size: 32, elements: !12)
!12 = !{!13, !14, !15, !16, !17}
!13 = !DIEnumerator(name: "DEVLINK_RELOAD_ACTION_UNSPEC", value: 0, isUnsigned: true)
!14 = !DIEnumerator(name: "DEVLINK_RELOAD_ACTION_DRIVER_REINIT", value: 1, isUnsigned: true)
!15 = !DIEnumerator(name: "DEVLINK_RELOAD_ACTION_FW_ACTIVATE", value: 2, isUnsigned: true)
!16 = !DIEnumerator(name: "__DEVLINK_RELOAD_ACTION_MAX", value: 3, isUnsigned: true)
!17 = !DIEnumerator(name: "DEVLINK_RELOAD_ACTION_MAX", value: 2, isUnsigned: true)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_reload_limit", file: !6, line: 314, baseType: !7, size: 32, elements: !19)
!19 = !{!20, !21, !22, !23}
!20 = !DIEnumerator(name: "DEVLINK_RELOAD_LIMIT_UNSPEC", value: 0, isUnsigned: true)
!21 = !DIEnumerator(name: "DEVLINK_RELOAD_LIMIT_NO_RESET", value: 1, isUnsigned: true)
!22 = !DIEnumerator(name: "__DEVLINK_RELOAD_LIMIT_MAX", value: 2, isUnsigned: true)
!23 = !DIEnumerator(name: "DEVLINK_RELOAD_LIMIT_MAX", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_port_type", file: !6, line: 134, baseType: !7, size: 32, elements: !25)
!25 = !{!26, !27, !28, !29}
!26 = !DIEnumerator(name: "DEVLINK_PORT_TYPE_NOTSET", value: 0, isUnsigned: true)
!27 = !DIEnumerator(name: "DEVLINK_PORT_TYPE_AUTO", value: 1, isUnsigned: true)
!28 = !DIEnumerator(name: "DEVLINK_PORT_TYPE_ETH", value: 2, isUnsigned: true)
!29 = !DIEnumerator(name: "DEVLINK_PORT_TYPE_IB", value: 3, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_sb_pool_type", file: !6, line: 141, baseType: !7, size: 32, elements: !31)
!31 = !{!32, !33}
!32 = !DIEnumerator(name: "DEVLINK_SB_POOL_TYPE_INGRESS", value: 0, isUnsigned: true)
!33 = !DIEnumerator(name: "DEVLINK_SB_POOL_TYPE_EGRESS", value: 1, isUnsigned: true)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_sb_threshold_type", file: !6, line: 159, baseType: !7, size: 32, elements: !35)
!35 = !{!36, !37}
!36 = !DIEnumerator(name: "DEVLINK_SB_THRESHOLD_TYPE_STATIC", value: 0, isUnsigned: true)
!37 = !DIEnumerator(name: "DEVLINK_SB_THRESHOLD_TYPE_DYNAMIC", value: 1, isUnsigned: true)
!38 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_eswitch_encap_mode", file: !6, line: 178, baseType: !7, size: 32, elements: !39)
!39 = !{!40, !41}
!40 = !DIEnumerator(name: "DEVLINK_ESWITCH_ENCAP_MODE_NONE", value: 0, isUnsigned: true)
!41 = !DIEnumerator(name: "DEVLINK_ESWITCH_ENCAP_MODE_BASIC", value: 1, isUnsigned: true)
!42 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_trap_type", file: !6, line: 291, baseType: !7, size: 32, elements: !43)
!43 = !{!44, !45, !46}
!44 = !DIEnumerator(name: "DEVLINK_TRAP_TYPE_DROP", value: 0, isUnsigned: true)
!45 = !DIEnumerator(name: "DEVLINK_TRAP_TYPE_EXCEPTION", value: 1, isUnsigned: true)
!46 = !DIEnumerator(name: "DEVLINK_TRAP_TYPE_CONTROL", value: 2, isUnsigned: true)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_trap_action", file: !6, line: 268, baseType: !7, size: 32, elements: !48)
!48 = !{!49, !50, !51}
!49 = !DIEnumerator(name: "DEVLINK_TRAP_ACTION_DROP", value: 0, isUnsigned: true)
!50 = !DIEnumerator(name: "DEVLINK_TRAP_ACTION_TRAP", value: 1, isUnsigned: true)
!51 = !DIEnumerator(name: "DEVLINK_TRAP_ACTION_MIRROR", value: 2, isUnsigned: true)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !53, line: 15, baseType: !7, size: 32, elements: !54)
!53 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!54 = !{!55, !56, !57, !58}
!55 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!59 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !60, line: 546, baseType: !7, size: 32, elements: !61)
!60 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!61 = !{!62, !63, !64}
!62 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!63 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!64 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!65 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !66, line: 65, baseType: !7, size: 32, elements: !67)
!66 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!67 = !{!68, !69}
!68 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!69 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!70 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !71, line: 16, baseType: !7, size: 32, elements: !72)
!71 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!72 = !{!73, !74, !75}
!73 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!74 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!75 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!76 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_tx", file: !77, line: 115, baseType: !78, size: 32, elements: !79)
!77 = !DIFile(filename: "./include/linux/netdevice.h", directory: "/home/lizy2001/genbc/linux")
!78 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!79 = !{!80, !81, !82}
!80 = !DIEnumerator(name: "__NETDEV_TX_MIN", value: -2147483648)
!81 = !DIEnumerator(name: "NETDEV_TX_OK", value: 0)
!82 = !DIEnumerator(name: "NETDEV_TX_BUSY", value: 16)
!83 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tc_setup_type", file: !77, line: 836, baseType: !7, size: 32, elements: !84)
!84 = !{!85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102}
!85 = !DIEnumerator(name: "TC_SETUP_QDISC_MQPRIO", value: 0, isUnsigned: true)
!86 = !DIEnumerator(name: "TC_SETUP_CLSU32", value: 1, isUnsigned: true)
!87 = !DIEnumerator(name: "TC_SETUP_CLSFLOWER", value: 2, isUnsigned: true)
!88 = !DIEnumerator(name: "TC_SETUP_CLSMATCHALL", value: 3, isUnsigned: true)
!89 = !DIEnumerator(name: "TC_SETUP_CLSBPF", value: 4, isUnsigned: true)
!90 = !DIEnumerator(name: "TC_SETUP_BLOCK", value: 5, isUnsigned: true)
!91 = !DIEnumerator(name: "TC_SETUP_QDISC_CBS", value: 6, isUnsigned: true)
!92 = !DIEnumerator(name: "TC_SETUP_QDISC_RED", value: 7, isUnsigned: true)
!93 = !DIEnumerator(name: "TC_SETUP_QDISC_PRIO", value: 8, isUnsigned: true)
!94 = !DIEnumerator(name: "TC_SETUP_QDISC_MQ", value: 9, isUnsigned: true)
!95 = !DIEnumerator(name: "TC_SETUP_QDISC_ETF", value: 10, isUnsigned: true)
!96 = !DIEnumerator(name: "TC_SETUP_ROOT_QDISC", value: 11, isUnsigned: true)
!97 = !DIEnumerator(name: "TC_SETUP_QDISC_GRED", value: 12, isUnsigned: true)
!98 = !DIEnumerator(name: "TC_SETUP_QDISC_TAPRIO", value: 13, isUnsigned: true)
!99 = !DIEnumerator(name: "TC_SETUP_FT", value: 14, isUnsigned: true)
!100 = !DIEnumerator(name: "TC_SETUP_QDISC_ETS", value: 15, isUnsigned: true)
!101 = !DIEnumerator(name: "TC_SETUP_QDISC_TBF", value: 16, isUnsigned: true)
!102 = !DIEnumerator(name: "TC_SETUP_QDISC_FIFO", value: 17, isUnsigned: true)
!103 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_netdev_command", file: !77, line: 860, baseType: !7, size: 32, elements: !104)
!104 = !{!105, !106, !107, !108, !109}
!105 = !DIEnumerator(name: "XDP_SETUP_PROG", value: 0, isUnsigned: true)
!106 = !DIEnumerator(name: "XDP_SETUP_PROG_HW", value: 1, isUnsigned: true)
!107 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_ALLOC", value: 2, isUnsigned: true)
!108 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_FREE", value: 3, isUnsigned: true)
!109 = !DIEnumerator(name: "XDP_SETUP_XSK_POOL", value: 4, isUnsigned: true)
!110 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_reg_type", file: !111, line: 369, baseType: !7, size: 32, elements: !112)
!111 = !DIFile(filename: "./include/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!112 = !{!113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140}
!113 = !DIEnumerator(name: "NOT_INIT", value: 0, isUnsigned: true)
!114 = !DIEnumerator(name: "SCALAR_VALUE", value: 1, isUnsigned: true)
!115 = !DIEnumerator(name: "PTR_TO_CTX", value: 2, isUnsigned: true)
!116 = !DIEnumerator(name: "CONST_PTR_TO_MAP", value: 3, isUnsigned: true)
!117 = !DIEnumerator(name: "PTR_TO_MAP_VALUE", value: 4, isUnsigned: true)
!118 = !DIEnumerator(name: "PTR_TO_MAP_VALUE_OR_NULL", value: 5, isUnsigned: true)
!119 = !DIEnumerator(name: "PTR_TO_STACK", value: 6, isUnsigned: true)
!120 = !DIEnumerator(name: "PTR_TO_PACKET_META", value: 7, isUnsigned: true)
!121 = !DIEnumerator(name: "PTR_TO_PACKET", value: 8, isUnsigned: true)
!122 = !DIEnumerator(name: "PTR_TO_PACKET_END", value: 9, isUnsigned: true)
!123 = !DIEnumerator(name: "PTR_TO_FLOW_KEYS", value: 10, isUnsigned: true)
!124 = !DIEnumerator(name: "PTR_TO_SOCKET", value: 11, isUnsigned: true)
!125 = !DIEnumerator(name: "PTR_TO_SOCKET_OR_NULL", value: 12, isUnsigned: true)
!126 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON", value: 13, isUnsigned: true)
!127 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON_OR_NULL", value: 14, isUnsigned: true)
!128 = !DIEnumerator(name: "PTR_TO_TCP_SOCK", value: 15, isUnsigned: true)
!129 = !DIEnumerator(name: "PTR_TO_TCP_SOCK_OR_NULL", value: 16, isUnsigned: true)
!130 = !DIEnumerator(name: "PTR_TO_TP_BUFFER", value: 17, isUnsigned: true)
!131 = !DIEnumerator(name: "PTR_TO_XDP_SOCK", value: 18, isUnsigned: true)
!132 = !DIEnumerator(name: "PTR_TO_BTF_ID", value: 19, isUnsigned: true)
!133 = !DIEnumerator(name: "PTR_TO_BTF_ID_OR_NULL", value: 20, isUnsigned: true)
!134 = !DIEnumerator(name: "PTR_TO_MEM", value: 21, isUnsigned: true)
!135 = !DIEnumerator(name: "PTR_TO_MEM_OR_NULL", value: 22, isUnsigned: true)
!136 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF", value: 23, isUnsigned: true)
!137 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF_OR_NULL", value: 24, isUnsigned: true)
!138 = !DIEnumerator(name: "PTR_TO_RDWR_BUF", value: 25, isUnsigned: true)
!139 = !DIEnumerator(name: "PTR_TO_RDWR_BUF_OR_NULL", value: 26, isUnsigned: true)
!140 = !DIEnumerator(name: "PTR_TO_PERCPU_BTF_ID", value: 27, isUnsigned: true)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_prog_type", file: !142, line: 170, baseType: !7, size: 32, elements: !143)
!142 = !DIFile(filename: "./include/uapi/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!143 = !{!144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174}
!144 = !DIEnumerator(name: "BPF_PROG_TYPE_UNSPEC", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCKET_FILTER", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "BPF_PROG_TYPE_KPROBE", value: 2, isUnsigned: true)
!147 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_CLS", value: 3, isUnsigned: true)
!148 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_ACT", value: 4, isUnsigned: true)
!149 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACEPOINT", value: 5, isUnsigned: true)
!150 = !DIEnumerator(name: "BPF_PROG_TYPE_XDP", value: 6, isUnsigned: true)
!151 = !DIEnumerator(name: "BPF_PROG_TYPE_PERF_EVENT", value: 7, isUnsigned: true)
!152 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SKB", value: 8, isUnsigned: true)
!153 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK", value: 9, isUnsigned: true)
!154 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_IN", value: 10, isUnsigned: true)
!155 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_OUT", value: 11, isUnsigned: true)
!156 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_XMIT", value: 12, isUnsigned: true)
!157 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCK_OPS", value: 13, isUnsigned: true)
!158 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_SKB", value: 14, isUnsigned: true)
!159 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_DEVICE", value: 15, isUnsigned: true)
!160 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_MSG", value: 16, isUnsigned: true)
!161 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT", value: 17, isUnsigned: true)
!162 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK_ADDR", value: 18, isUnsigned: true)
!163 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_SEG6LOCAL", value: 19, isUnsigned: true)
!164 = !DIEnumerator(name: "BPF_PROG_TYPE_LIRC_MODE2", value: 20, isUnsigned: true)
!165 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_REUSEPORT", value: 21, isUnsigned: true)
!166 = !DIEnumerator(name: "BPF_PROG_TYPE_FLOW_DISSECTOR", value: 22, isUnsigned: true)
!167 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SYSCTL", value: 23, isUnsigned: true)
!168 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE", value: 24, isUnsigned: true)
!169 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCKOPT", value: 25, isUnsigned: true)
!170 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACING", value: 26, isUnsigned: true)
!171 = !DIEnumerator(name: "BPF_PROG_TYPE_STRUCT_OPS", value: 27, isUnsigned: true)
!172 = !DIEnumerator(name: "BPF_PROG_TYPE_EXT", value: 28, isUnsigned: true)
!173 = !DIEnumerator(name: "BPF_PROG_TYPE_LSM", value: 29, isUnsigned: true)
!174 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_LOOKUP", value: 30, isUnsigned: true)
!175 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_attach_type", file: !142, line: 204, baseType: !7, size: 32, elements: !176)
!176 = !{!177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215}
!177 = !DIEnumerator(name: "BPF_CGROUP_INET_INGRESS", value: 0, isUnsigned: true)
!178 = !DIEnumerator(name: "BPF_CGROUP_INET_EGRESS", value: 1, isUnsigned: true)
!179 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_CREATE", value: 2, isUnsigned: true)
!180 = !DIEnumerator(name: "BPF_CGROUP_SOCK_OPS", value: 3, isUnsigned: true)
!181 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_PARSER", value: 4, isUnsigned: true)
!182 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_VERDICT", value: 5, isUnsigned: true)
!183 = !DIEnumerator(name: "BPF_CGROUP_DEVICE", value: 6, isUnsigned: true)
!184 = !DIEnumerator(name: "BPF_SK_MSG_VERDICT", value: 7, isUnsigned: true)
!185 = !DIEnumerator(name: "BPF_CGROUP_INET4_BIND", value: 8, isUnsigned: true)
!186 = !DIEnumerator(name: "BPF_CGROUP_INET6_BIND", value: 9, isUnsigned: true)
!187 = !DIEnumerator(name: "BPF_CGROUP_INET4_CONNECT", value: 10, isUnsigned: true)
!188 = !DIEnumerator(name: "BPF_CGROUP_INET6_CONNECT", value: 11, isUnsigned: true)
!189 = !DIEnumerator(name: "BPF_CGROUP_INET4_POST_BIND", value: 12, isUnsigned: true)
!190 = !DIEnumerator(name: "BPF_CGROUP_INET6_POST_BIND", value: 13, isUnsigned: true)
!191 = !DIEnumerator(name: "BPF_CGROUP_UDP4_SENDMSG", value: 14, isUnsigned: true)
!192 = !DIEnumerator(name: "BPF_CGROUP_UDP6_SENDMSG", value: 15, isUnsigned: true)
!193 = !DIEnumerator(name: "BPF_LIRC_MODE2", value: 16, isUnsigned: true)
!194 = !DIEnumerator(name: "BPF_FLOW_DISSECTOR", value: 17, isUnsigned: true)
!195 = !DIEnumerator(name: "BPF_CGROUP_SYSCTL", value: 18, isUnsigned: true)
!196 = !DIEnumerator(name: "BPF_CGROUP_UDP4_RECVMSG", value: 19, isUnsigned: true)
!197 = !DIEnumerator(name: "BPF_CGROUP_UDP6_RECVMSG", value: 20, isUnsigned: true)
!198 = !DIEnumerator(name: "BPF_CGROUP_GETSOCKOPT", value: 21, isUnsigned: true)
!199 = !DIEnumerator(name: "BPF_CGROUP_SETSOCKOPT", value: 22, isUnsigned: true)
!200 = !DIEnumerator(name: "BPF_TRACE_RAW_TP", value: 23, isUnsigned: true)
!201 = !DIEnumerator(name: "BPF_TRACE_FENTRY", value: 24, isUnsigned: true)
!202 = !DIEnumerator(name: "BPF_TRACE_FEXIT", value: 25, isUnsigned: true)
!203 = !DIEnumerator(name: "BPF_MODIFY_RETURN", value: 26, isUnsigned: true)
!204 = !DIEnumerator(name: "BPF_LSM_MAC", value: 27, isUnsigned: true)
!205 = !DIEnumerator(name: "BPF_TRACE_ITER", value: 28, isUnsigned: true)
!206 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETPEERNAME", value: 29, isUnsigned: true)
!207 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETPEERNAME", value: 30, isUnsigned: true)
!208 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETSOCKNAME", value: 31, isUnsigned: true)
!209 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETSOCKNAME", value: 32, isUnsigned: true)
!210 = !DIEnumerator(name: "BPF_XDP_DEVMAP", value: 33, isUnsigned: true)
!211 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_RELEASE", value: 34, isUnsigned: true)
!212 = !DIEnumerator(name: "BPF_XDP_CPUMAP", value: 35, isUnsigned: true)
!213 = !DIEnumerator(name: "BPF_SK_LOOKUP", value: 36, isUnsigned: true)
!214 = !DIEnumerator(name: "BPF_XDP", value: 37, isUnsigned: true)
!215 = !DIEnumerator(name: "__MAX_BPF_ATTACH_TYPE", value: 38, isUnsigned: true)
!216 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_tramp_prog_type", file: !111, line: 578, baseType: !7, size: 32, elements: !217)
!217 = !{!218, !219, !220, !221, !222}
!218 = !DIEnumerator(name: "BPF_TRAMP_FENTRY", value: 0, isUnsigned: true)
!219 = !DIEnumerator(name: "BPF_TRAMP_FEXIT", value: 1, isUnsigned: true)
!220 = !DIEnumerator(name: "BPF_TRAMP_MODIFY_RETURN", value: 2, isUnsigned: true)
!221 = !DIEnumerator(name: "BPF_TRAMP_MAX", value: 3, isUnsigned: true)
!222 = !DIEnumerator(name: "BPF_TRAMP_REPLACE", value: 4, isUnsigned: true)
!223 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_map_type", file: !142, line: 130, baseType: !7, size: 32, elements: !224)
!224 = !{!225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253}
!225 = !DIEnumerator(name: "BPF_MAP_TYPE_UNSPEC", value: 0, isUnsigned: true)
!226 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH", value: 1, isUnsigned: true)
!227 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY", value: 2, isUnsigned: true)
!228 = !DIEnumerator(name: "BPF_MAP_TYPE_PROG_ARRAY", value: 3, isUnsigned: true)
!229 = !DIEnumerator(name: "BPF_MAP_TYPE_PERF_EVENT_ARRAY", value: 4, isUnsigned: true)
!230 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_HASH", value: 5, isUnsigned: true)
!231 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_ARRAY", value: 6, isUnsigned: true)
!232 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK_TRACE", value: 7, isUnsigned: true)
!233 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_ARRAY", value: 8, isUnsigned: true)
!234 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_HASH", value: 9, isUnsigned: true)
!235 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_PERCPU_HASH", value: 10, isUnsigned: true)
!236 = !DIEnumerator(name: "BPF_MAP_TYPE_LPM_TRIE", value: 11, isUnsigned: true)
!237 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY_OF_MAPS", value: 12, isUnsigned: true)
!238 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH_OF_MAPS", value: 13, isUnsigned: true)
!239 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP", value: 14, isUnsigned: true)
!240 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKMAP", value: 15, isUnsigned: true)
!241 = !DIEnumerator(name: "BPF_MAP_TYPE_CPUMAP", value: 16, isUnsigned: true)
!242 = !DIEnumerator(name: "BPF_MAP_TYPE_XSKMAP", value: 17, isUnsigned: true)
!243 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKHASH", value: 18, isUnsigned: true)
!244 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_STORAGE", value: 19, isUnsigned: true)
!245 = !DIEnumerator(name: "BPF_MAP_TYPE_REUSEPORT_SOCKARRAY", value: 20, isUnsigned: true)
!246 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE", value: 21, isUnsigned: true)
!247 = !DIEnumerator(name: "BPF_MAP_TYPE_QUEUE", value: 22, isUnsigned: true)
!248 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK", value: 23, isUnsigned: true)
!249 = !DIEnumerator(name: "BPF_MAP_TYPE_SK_STORAGE", value: 24, isUnsigned: true)
!250 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP_HASH", value: 25, isUnsigned: true)
!251 = !DIEnumerator(name: "BPF_MAP_TYPE_STRUCT_OPS", value: 26, isUnsigned: true)
!252 = !DIEnumerator(name: "BPF_MAP_TYPE_RINGBUF", value: 27, isUnsigned: true)
!253 = !DIEnumerator(name: "BPF_MAP_TYPE_INODE_STORAGE", value: 28, isUnsigned: true)
!254 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_state", file: !255, line: 585, baseType: !7, size: 32, elements: !256)
!255 = !DIFile(filename: "./include/uapi/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!256 = !{!257, !258, !259, !260, !261, !262, !263, !264, !265, !266}
!257 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_AUTONEG", value: 0, isUnsigned: true)
!258 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_TRAINING_FAILURE", value: 1, isUnsigned: true)
!259 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_LOGICAL_MISMATCH", value: 2, isUnsigned: true)
!260 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_BAD_SIGNAL_INTEGRITY", value: 3, isUnsigned: true)
!261 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_NO_CABLE", value: 4, isUnsigned: true)
!262 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CABLE_ISSUE", value: 5, isUnsigned: true)
!263 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_EEPROM_ISSUE", value: 6, isUnsigned: true)
!264 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CALIBRATION_FAILURE", value: 7, isUnsigned: true)
!265 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_POWER_BUDGET_EXCEEDED", value: 8, isUnsigned: true)
!266 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_OVERHEAT", value: 9, isUnsigned: true)
!267 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_autoneg", file: !255, line: 602, baseType: !7, size: 32, elements: !268)
!268 = !{!269, !270, !271, !272, !273, !274}
!269 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED", value: 1, isUnsigned: true)
!270 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_ACK_NOT_RECEIVED", value: 2, isUnsigned: true)
!271 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NEXT_PAGE_EXCHANGE_FAILED", value: 3, isUnsigned: true)
!272 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED_FORCE_MODE", value: 4, isUnsigned: true)
!273 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_FEC_MISMATCH_DURING_OVERRIDE", value: 5, isUnsigned: true)
!274 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_HCD", value: 6, isUnsigned: true)
!275 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_training", file: !255, line: 615, baseType: !7, size: 32, elements: !276)
!276 = !{!277, !278, !279, !280}
!277 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_FRAME_LOCK_NOT_ACQUIRED", value: 1, isUnsigned: true)
!278 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_INHIBIT_TIMEOUT", value: 2, isUnsigned: true)
!279 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_PARTNER_DID_NOT_SET_RECEIVER_READY", value: 3, isUnsigned: true)
!280 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_REMOTE_FAULT", value: 4, isUnsigned: true)
!281 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_logical_mismatch", file: !255, line: 626, baseType: !7, size: 32, elements: !282)
!282 = !{!283, !284, !285, !286, !287}
!283 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_BLOCK_LOCK", value: 1, isUnsigned: true)
!284 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_AM_LOCK", value: 2, isUnsigned: true)
!285 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_GET_ALIGN_STATUS", value: 3, isUnsigned: true)
!286 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_FC_FEC_IS_NOT_LOCKED", value: 4, isUnsigned: true)
!287 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_RS_FEC_IS_NOT_LOCKED", value: 5, isUnsigned: true)
!288 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_bad_signal_integrity", file: !255, line: 638, baseType: !7, size: 32, elements: !289)
!289 = !{!290, !291}
!290 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_LARGE_NUMBER_OF_PHYSICAL_ERRORS", value: 1, isUnsigned: true)
!291 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_UNSUPPORTED_RATE", value: 2, isUnsigned: true)
!292 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_cable_issue", file: !255, line: 647, baseType: !7, size: 32, elements: !293)
!293 = !{!294, !295}
!294 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_UNSUPPORTED_CABLE", value: 1, isUnsigned: true)
!295 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_CABLE_TEST_FAILURE", value: 2, isUnsigned: true)
!296 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_phys_id_state", file: !297, line: 54, baseType: !7, size: 32, elements: !298)
!297 = !DIFile(filename: "./include/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!298 = !{!299, !300, !301, !302}
!299 = !DIEnumerator(name: "ETHTOOL_ID_INACTIVE", value: 0, isUnsigned: true)
!300 = !DIEnumerator(name: "ETHTOOL_ID_ACTIVE", value: 1, isUnsigned: true)
!301 = !DIEnumerator(name: "ETHTOOL_ID_ON", value: 2, isUnsigned: true)
!302 = !DIEnumerator(name: "ETHTOOL_ID_OFF", value: 3, isUnsigned: true)
!303 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rx_handler_result", file: !77, line: 423, baseType: !7, size: 32, elements: !304)
!304 = !{!305, !306, !307, !308}
!305 = !DIEnumerator(name: "RX_HANDLER_CONSUMED", value: 0, isUnsigned: true)
!306 = !DIEnumerator(name: "RX_HANDLER_ANOTHER", value: 1, isUnsigned: true)
!307 = !DIEnumerator(name: "RX_HANDLER_EXACT", value: 2, isUnsigned: true)
!308 = !DIEnumerator(name: "RX_HANDLER_PASS", value: 3, isUnsigned: true)
!309 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !310, file: !77, line: 2085, baseType: !7, size: 32, elements: !7382)
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device", file: !77, line: 1858, size: 15808, elements: !311)
!311 = !{!312, !317, !340, !357, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !374, !382, !383, !384, !385, !386, !387, !388, !389, !390, !416, !426, !427, !428, !433, !434, !438, !441, !6601, !7115, !7119, !7159, !7160, !7161, !7162, !7163, !7164, !7165, !7166, !7167, !7168, !7169, !7170, !7171, !7172, !7173, !7174, !7175, !7176, !7177, !7178, !7179, !7180, !7181, !7182, !7183, !7184, !7185, !7190, !7191, !7192, !7193, !7194, !7195, !7196, !7199, !7202, !7205, !7208, !7211, !7212, !7225, !7226, !7227, !7228, !7229, !7230, !7237, !7238, !7272, !7273, !7274, !7275, !7276, !7277, !7278, !7279, !7280, !7283, !7284, !7285, !7286, !7287, !7288, !7289, !7290, !7291, !7296, !7297, !7298, !7299, !7336, !7337, !7339, !7340, !7344, !7345, !7346, !7347, !7353, !7355, !7358, !7361, !7363, !7364, !7365, !7366, !7367, !7371, !7374}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !310, file: !77, line: 1859, baseType: !313, size: 128)
!313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 128, elements: !315)
!314 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!315 = !{!316}
!316 = !DISubrange(count: 16)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "name_node", scope: !310, file: !77, line: 1860, baseType: !318, size: 64, offset: 128)
!318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 64)
!319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_name_node", file: !77, line: 938, size: 384, elements: !320)
!320 = !{!321, !329, !335, !337}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !319, file: !77, line: 939, baseType: !322, size: 128)
!322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !323, line: 186, size: 128, elements: !324)
!323 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!324 = !{!325, !327}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !322, file: !323, line: 187, baseType: !326, size: 64)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 64)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !322, file: !323, line: 187, baseType: !328, size: 64, offset: 64)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 64)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !319, file: !77, line: 940, baseType: !330, size: 128, offset: 128)
!330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !323, line: 178, size: 128, elements: !331)
!331 = !{!332, !334}
!332 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !330, file: !323, line: 179, baseType: !333, size: 64)
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 64)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !330, file: !323, line: 179, baseType: !333, size: 64, offset: 64)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !319, file: !77, line: 941, baseType: !336, size: 64, offset: 256)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !310, size: 64)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !319, file: !77, line: 942, baseType: !338, size: 64, offset: 320)
!338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !339, size: 64)
!339 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !314)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !310, file: !77, line: 1861, baseType: !341, size: 64, offset: 192)
!341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !342, size: 64)
!342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ifalias", file: !77, line: 930, size: 128, elements: !343)
!343 = !{!344, !353}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "rcuhead", scope: !342, file: !77, line: 931, baseType: !345, size: 128, align: 64)
!345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !323, line: 216, size: 128, align: 64, elements: !346)
!346 = !{!347, !349}
!347 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !345, file: !323, line: 217, baseType: !348, size: 64)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !345, file: !323, line: 218, baseType: !350, size: 64, offset: 64)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64)
!351 = !DISubroutineType(types: !352)
!352 = !{null, !348}
!353 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !342, file: !77, line: 932, baseType: !354, offset: 128)
!354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, elements: !355)
!355 = !{!356}
!356 = !DISubrange(count: -1)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !310, file: !77, line: 1866, baseType: !358, size: 64, offset: 256)
!358 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !310, file: !77, line: 1867, baseType: !358, size: 64, offset: 320)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !310, file: !77, line: 1868, baseType: !358, size: 64, offset: 384)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !310, file: !77, line: 1869, baseType: !78, size: 32, offset: 448)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !310, file: !77, line: 1877, baseType: !358, size: 64, offset: 512)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !310, file: !77, line: 1879, baseType: !330, size: 128, offset: 576)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "napi_list", scope: !310, file: !77, line: 1880, baseType: !330, size: 128, offset: 704)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "unreg_list", scope: !310, file: !77, line: 1881, baseType: !330, size: 128, offset: 832)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "close_list", scope: !310, file: !77, line: 1882, baseType: !330, size: 128, offset: 960)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_all", scope: !310, file: !77, line: 1883, baseType: !330, size: 128, offset: 1088)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_specific", scope: !310, file: !77, line: 1884, baseType: !330, size: 128, offset: 1216)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "adj_list", scope: !310, file: !77, line: 1889, baseType: !370, size: 256, offset: 1344)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !310, file: !77, line: 1886, size: 256, elements: !371)
!371 = !{!372, !373}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "upper", scope: !370, file: !77, line: 1887, baseType: !330, size: 128)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "lower", scope: !370, file: !77, line: 1888, baseType: !330, size: 128, offset: 128)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !310, file: !77, line: 1891, baseType: !375, size: 64, offset: 1600)
!375 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_features_t", file: !376, line: 12, baseType: !377)
!376 = !DIFile(filename: "./include/linux/netdev_features.h", directory: "/home/lizy2001/genbc/linux")
!377 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !378, line: 23, baseType: !379)
!378 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !380, line: 31, baseType: !381)
!380 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!381 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "hw_features", scope: !310, file: !77, line: 1892, baseType: !375, size: 64, offset: 1664)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "wanted_features", scope: !310, file: !77, line: 1893, baseType: !375, size: 64, offset: 1728)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_features", scope: !310, file: !77, line: 1894, baseType: !375, size: 64, offset: 1792)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "hw_enc_features", scope: !310, file: !77, line: 1895, baseType: !375, size: 64, offset: 1856)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "mpls_features", scope: !310, file: !77, line: 1896, baseType: !375, size: 64, offset: 1920)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "gso_partial_features", scope: !310, file: !77, line: 1897, baseType: !375, size: 64, offset: 1984)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !310, file: !77, line: 1899, baseType: !78, size: 32, offset: 2048)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !310, file: !77, line: 1900, baseType: !78, size: 32, offset: 2080)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !310, file: !77, line: 1902, baseType: !391, size: 1472, offset: 2112)
!391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_stats", file: !77, line: 169, size: 1472, elements: !392)
!392 = !{!393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415}
!393 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !391, file: !77, line: 170, baseType: !358, size: 64)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !391, file: !77, line: 171, baseType: !358, size: 64, offset: 64)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !391, file: !77, line: 172, baseType: !358, size: 64, offset: 128)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !391, file: !77, line: 173, baseType: !358, size: 64, offset: 192)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !391, file: !77, line: 174, baseType: !358, size: 64, offset: 256)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !391, file: !77, line: 175, baseType: !358, size: 64, offset: 320)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !391, file: !77, line: 176, baseType: !358, size: 64, offset: 384)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !391, file: !77, line: 177, baseType: !358, size: 64, offset: 448)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !391, file: !77, line: 178, baseType: !358, size: 64, offset: 512)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !391, file: !77, line: 179, baseType: !358, size: 64, offset: 576)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !391, file: !77, line: 180, baseType: !358, size: 64, offset: 640)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !391, file: !77, line: 181, baseType: !358, size: 64, offset: 704)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !391, file: !77, line: 182, baseType: !358, size: 64, offset: 768)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !391, file: !77, line: 183, baseType: !358, size: 64, offset: 832)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !391, file: !77, line: 184, baseType: !358, size: 64, offset: 896)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !391, file: !77, line: 185, baseType: !358, size: 64, offset: 960)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !391, file: !77, line: 186, baseType: !358, size: 64, offset: 1024)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !391, file: !77, line: 187, baseType: !358, size: 64, offset: 1088)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !391, file: !77, line: 188, baseType: !358, size: 64, offset: 1152)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !391, file: !77, line: 189, baseType: !358, size: 64, offset: 1216)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !391, file: !77, line: 190, baseType: !358, size: 64, offset: 1280)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !391, file: !77, line: 191, baseType: !358, size: 64, offset: 1344)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !391, file: !77, line: 192, baseType: !358, size: 64, offset: 1408)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !310, file: !77, line: 1904, baseType: !417, size: 64, offset: 3584)
!417 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !418, line: 13, baseType: !419)
!418 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!419 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !323, line: 175, baseType: !420)
!420 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !323, line: 173, size: 64, elements: !421)
!421 = !{!422}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !420, file: !323, line: 174, baseType: !423, size: 64)
!423 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !378, line: 22, baseType: !424)
!424 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !380, line: 30, baseType: !425)
!425 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !310, file: !77, line: 1905, baseType: !417, size: 64, offset: 3648)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !310, file: !77, line: 1906, baseType: !417, size: 64, offset: 3712)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_up_count", scope: !310, file: !77, line: 1909, baseType: !429, size: 32, offset: 3776)
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !323, line: 168, baseType: !430)
!430 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !323, line: 166, size: 32, elements: !431)
!431 = !{!432}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !430, file: !323, line: 167, baseType: !78, size: 32)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_down_count", scope: !310, file: !77, line: 1910, baseType: !429, size: 32, offset: 3808)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_handlers", scope: !310, file: !77, line: 1913, baseType: !435, size: 64, offset: 3840)
!435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 64)
!436 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !437)
!437 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_handler_def", file: !77, line: 1913, flags: DIFlagFwdDecl)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_data", scope: !310, file: !77, line: 1914, baseType: !439, size: 64, offset: 3904)
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 64)
!440 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_public_data", file: !77, line: 1914, flags: DIFlagFwdDecl)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_ops", scope: !310, file: !77, line: 1916, baseType: !442, size: 64, offset: 3968)
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 64)
!443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !444)
!444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_ops", file: !77, line: 1283, size: 4416, elements: !445)
!445 = !{!446, !450, !454, !455, !456, !619, !623, !628, !632, !633, !638, !639, !762, !767, !771, !777, !781, !813, !821, !825, !830, !834, !835, !841, !845, !849, !853, !854, !876, !880, !895, !906, !910, !919, !923, !924, !928, !949, !953, !957, !961, !965, !972, !976, !994, !998, !1048, !1052, !1057, !1061, !1065, !1069, !1079, !1080, !1089, !1095, !1096, !1100, !1104, !1108, !1112, !1113, !1117, !1118, !5524, !5544, !5548, !6591, !6597}
!446 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_init", scope: !444, file: !77, line: 1284, baseType: !447, size: 64)
!447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 64)
!448 = !DISubroutineType(types: !449)
!449 = !{!78, !336}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_uninit", scope: !444, file: !77, line: 1285, baseType: !451, size: 64, offset: 64)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 64)
!452 = !DISubroutineType(types: !453)
!453 = !{null, !336}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_open", scope: !444, file: !77, line: 1286, baseType: !447, size: 64, offset: 128)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_stop", scope: !444, file: !77, line: 1287, baseType: !447, size: 64, offset: 192)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_start_xmit", scope: !444, file: !77, line: 1288, baseType: !457, size: 64, offset: 256)
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 64)
!458 = !DISubroutineType(types: !459)
!459 = !{!460, !461, !336}
!460 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_tx_t", file: !77, line: 120, baseType: !76)
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 64)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff", file: !463, line: 713, size: 1600, elements: !464)
!463 = !DIFile(filename: "./include/linux/skbuff.h", directory: "/home/lizy2001/genbc/linux")
!464 = !{!465, !487, !495, !502, !506, !518, !519, !520, !523, !524, !525, !531, !532, !533, !534, !535, !536, !537, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !577, !578, !579, !580, !582, !583, !588, !593, !598, !599, !600, !601, !602, !603, !604, !605, !606, !608, !609, !611, !612, !613}
!465 = !DIDerivedType(tag: DW_TAG_member, scope: !462, file: !463, line: 714, baseType: !466, size: 192)
!466 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !462, file: !463, line: 714, size: 192, elements: !467)
!467 = !{!468, !478, !486}
!468 = !DIDerivedType(tag: DW_TAG_member, scope: !466, file: !463, line: 715, baseType: !469, size: 192)
!469 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !466, file: !463, line: 715, size: 192, elements: !470)
!470 = !{!471, !472, !473}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !469, file: !463, line: 717, baseType: !461, size: 64)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !469, file: !463, line: 718, baseType: !461, size: 64, offset: 64)
!473 = !DIDerivedType(tag: DW_TAG_member, scope: !469, file: !463, line: 720, baseType: !474, size: 64, offset: 128)
!474 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !469, file: !463, line: 720, size: 64, elements: !475)
!475 = !{!476, !477}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !474, file: !463, line: 721, baseType: !336, size: 64)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "dev_scratch", scope: !474, file: !463, line: 726, baseType: !358, size: 64)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "rbnode", scope: !466, file: !463, line: 729, baseType: !479, size: 192, align: 64)
!479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !480, line: 24, size: 192, align: 64, elements: !481)
!480 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!481 = !{!482, !483, !485}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !479, file: !480, line: 25, baseType: !358, size: 64)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !479, file: !480, line: 26, baseType: !484, size: 64, offset: 64)
!484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !479, file: !480, line: 27, baseType: !484, size: 64, offset: 128)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !466, file: !463, line: 730, baseType: !330, size: 128)
!487 = !DIDerivedType(tag: DW_TAG_member, scope: !462, file: !463, line: 733, baseType: !488, size: 64, offset: 192)
!488 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !462, file: !463, line: 733, size: 64, elements: !489)
!489 = !{!490, !494}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !488, file: !463, line: 734, baseType: !491, size: 64)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 64)
!492 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !493, line: 19, flags: DIFlagFwdDecl)
!493 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!494 = !DIDerivedType(tag: DW_TAG_member, name: "ip_defrag_offset", scope: !488, file: !463, line: 735, baseType: !78, size: 32)
!495 = !DIDerivedType(tag: DW_TAG_member, scope: !462, file: !463, line: 738, baseType: !496, size: 64, offset: 256)
!496 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !462, file: !463, line: 738, size: 64, elements: !497)
!497 = !{!498, !501}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !496, file: !463, line: 739, baseType: !499, size: 64)
!499 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !500, line: 29, baseType: !423)
!500 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!501 = !DIDerivedType(tag: DW_TAG_member, name: "skb_mstamp_ns", scope: !496, file: !463, line: 740, baseType: !377, size: 64)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !462, file: !463, line: 748, baseType: !503, size: 384, align: 64, offset: 320)
!503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 384, elements: !504)
!504 = !{!505}
!505 = !DISubrange(count: 48)
!506 = !DIDerivedType(tag: DW_TAG_member, scope: !462, file: !463, line: 750, baseType: !507, size: 128, offset: 704)
!507 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !462, file: !463, line: 750, size: 128, elements: !508)
!508 = !{!509, !517}
!509 = !DIDerivedType(tag: DW_TAG_member, scope: !507, file: !463, line: 751, baseType: !510, size: 128)
!510 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !507, file: !463, line: 751, size: 128, elements: !511)
!511 = !{!512, !513}
!512 = !DIDerivedType(tag: DW_TAG_member, name: "_skb_refdst", scope: !510, file: !463, line: 752, baseType: !358, size: 64)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !510, file: !463, line: 753, baseType: !514, size: 64, offset: 64)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 64)
!515 = !DISubroutineType(types: !516)
!516 = !{null, !461}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_tsorted_anchor", scope: !507, file: !463, line: 755, baseType: !330, size: 128)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !462, file: !463, line: 761, baseType: !7, size: 32, offset: 832)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !462, file: !463, line: 762, baseType: !7, size: 32, offset: 864)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "mac_len", scope: !462, file: !463, line: 763, baseType: !521, size: 16, offset: 896)
!521 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !380, line: 24, baseType: !522)
!522 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_len", scope: !462, file: !463, line: 764, baseType: !521, size: 16, offset: 912)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "queue_mapping", scope: !462, file: !463, line: 769, baseType: !521, size: 16, offset: 928)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "__cloned_offset", scope: !462, file: !463, line: 780, baseType: !526, offset: 944)
!526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !527, elements: !529)
!527 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !380, line: 21, baseType: !528)
!528 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!529 = !{!530}
!530 = !DISubrange(count: 0)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "cloned", scope: !462, file: !463, line: 782, baseType: !527, size: 1, offset: 944, flags: DIFlagBitField, extraData: i64 944)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "nohdr", scope: !462, file: !463, line: 783, baseType: !527, size: 1, offset: 945, flags: DIFlagBitField, extraData: i64 944)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "fclone", scope: !462, file: !463, line: 784, baseType: !527, size: 2, offset: 946, flags: DIFlagBitField, extraData: i64 944)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "peeked", scope: !462, file: !463, line: 785, baseType: !527, size: 1, offset: 948, flags: DIFlagBitField, extraData: i64 944)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "head_frag", scope: !462, file: !463, line: 786, baseType: !527, size: 1, offset: 949, flags: DIFlagBitField, extraData: i64 944)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "pfmemalloc", scope: !462, file: !463, line: 787, baseType: !527, size: 1, offset: 950, flags: DIFlagBitField, extraData: i64 944)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "headers_start", scope: !462, file: !463, line: 795, baseType: !538, offset: 960)
!538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, elements: !529)
!539 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !380, line: 27, baseType: !7)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_type_offset", scope: !462, file: !463, line: 807, baseType: !526, offset: 960)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_type", scope: !462, file: !463, line: 809, baseType: !527, size: 3, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_df", scope: !462, file: !463, line: 810, baseType: !527, size: 1, offset: 963, flags: DIFlagBitField, extraData: i64 960)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "nf_trace", scope: !462, file: !463, line: 811, baseType: !527, size: 1, offset: 964, flags: DIFlagBitField, extraData: i64 960)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "ip_summed", scope: !462, file: !463, line: 812, baseType: !527, size: 2, offset: 965, flags: DIFlagBitField, extraData: i64 960)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "ooo_okay", scope: !462, file: !463, line: 813, baseType: !527, size: 1, offset: 967, flags: DIFlagBitField, extraData: i64 960)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "l4_hash", scope: !462, file: !463, line: 815, baseType: !527, size: 1, offset: 968, flags: DIFlagBitField, extraData: i64 960)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "sw_hash", scope: !462, file: !463, line: 816, baseType: !527, size: 1, offset: 969, flags: DIFlagBitField, extraData: i64 960)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked_valid", scope: !462, file: !463, line: 817, baseType: !527, size: 1, offset: 970, flags: DIFlagBitField, extraData: i64 960)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked", scope: !462, file: !463, line: 818, baseType: !527, size: 1, offset: 971, flags: DIFlagBitField, extraData: i64 960)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "no_fcs", scope: !462, file: !463, line: 819, baseType: !527, size: 1, offset: 972, flags: DIFlagBitField, extraData: i64 960)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "encapsulation", scope: !462, file: !463, line: 821, baseType: !527, size: 1, offset: 973, flags: DIFlagBitField, extraData: i64 960)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "encap_hdr_csum", scope: !462, file: !463, line: 822, baseType: !527, size: 1, offset: 974, flags: DIFlagBitField, extraData: i64 960)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "csum_valid", scope: !462, file: !463, line: 823, baseType: !527, size: 1, offset: 975, flags: DIFlagBitField, extraData: i64 960)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_vlan_present_offset", scope: !462, file: !463, line: 832, baseType: !526, offset: 976)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_present", scope: !462, file: !463, line: 834, baseType: !527, size: 1, offset: 976, flags: DIFlagBitField, extraData: i64 976)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "csum_complete_sw", scope: !462, file: !463, line: 835, baseType: !527, size: 1, offset: 977, flags: DIFlagBitField, extraData: i64 976)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "csum_level", scope: !462, file: !463, line: 836, baseType: !527, size: 2, offset: 978, flags: DIFlagBitField, extraData: i64 976)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "csum_not_inet", scope: !462, file: !463, line: 837, baseType: !527, size: 1, offset: 980, flags: DIFlagBitField, extraData: i64 976)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "dst_pending_confirm", scope: !462, file: !463, line: 838, baseType: !527, size: 1, offset: 981, flags: DIFlagBitField, extraData: i64 976)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_nodetype", scope: !462, file: !463, line: 840, baseType: !527, size: 2, offset: 982, flags: DIFlagBitField, extraData: i64 976)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "ipvs_property", scope: !462, file: !463, line: 843, baseType: !527, size: 1, offset: 984, flags: DIFlagBitField, extraData: i64 976)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol_type", scope: !462, file: !463, line: 844, baseType: !527, size: 1, offset: 985, flags: DIFlagBitField, extraData: i64 976)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "remcsum_offload", scope: !462, file: !463, line: 845, baseType: !527, size: 1, offset: 986, flags: DIFlagBitField, extraData: i64 976)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "offload_fwd_mark", scope: !462, file: !463, line: 847, baseType: !527, size: 1, offset: 987, flags: DIFlagBitField, extraData: i64 976)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "offload_l3_fwd_mark", scope: !462, file: !463, line: 848, baseType: !527, size: 1, offset: 988, flags: DIFlagBitField, extraData: i64 976)
!566 = !DIDerivedType(tag: DW_TAG_member, scope: !462, file: !463, line: 866, baseType: !567, size: 32, offset: 992)
!567 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !462, file: !463, line: 866, size: 32, elements: !568)
!568 = !{!569, !572}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "csum", scope: !567, file: !463, line: 867, baseType: !570, size: 32)
!570 = !DIDerivedType(tag: DW_TAG_typedef, name: "__wsum", file: !571, line: 37, baseType: !539)
!571 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!572 = !DIDerivedType(tag: DW_TAG_member, scope: !567, file: !463, line: 868, baseType: !573, size: 32)
!573 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !567, file: !463, line: 868, size: 32, elements: !574)
!574 = !{!575, !576}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "csum_start", scope: !573, file: !463, line: 869, baseType: !521, size: 16)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "csum_offset", scope: !573, file: !463, line: 870, baseType: !521, size: 16, offset: 16)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !462, file: !463, line: 873, baseType: !539, size: 32, offset: 1024)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "skb_iif", scope: !462, file: !463, line: 874, baseType: !78, size: 32, offset: 1056)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !462, file: !463, line: 875, baseType: !539, size: 32, offset: 1088)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !462, file: !463, line: 876, baseType: !581, size: 16, offset: 1120)
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be16", file: !571, line: 30, baseType: !521)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !462, file: !463, line: 877, baseType: !521, size: 16, offset: 1136)
!583 = !DIDerivedType(tag: DW_TAG_member, scope: !462, file: !463, line: 879, baseType: !584, size: 32, offset: 1152)
!584 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !462, file: !463, line: 879, size: 32, elements: !585)
!585 = !{!586, !587}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !584, file: !463, line: 880, baseType: !7, size: 32)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "sender_cpu", scope: !584, file: !463, line: 881, baseType: !7, size: 32)
!588 = !DIDerivedType(tag: DW_TAG_member, scope: !462, file: !463, line: 888, baseType: !589, size: 32, offset: 1184)
!589 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !462, file: !463, line: 888, size: 32, elements: !590)
!590 = !{!591, !592}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !589, file: !463, line: 889, baseType: !539, size: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tailroom", scope: !589, file: !463, line: 890, baseType: !539, size: 32)
!593 = !DIDerivedType(tag: DW_TAG_member, scope: !462, file: !463, line: 893, baseType: !594, size: 16, offset: 1216)
!594 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !462, file: !463, line: 893, size: 16, elements: !595)
!595 = !{!596, !597}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol", scope: !594, file: !463, line: 894, baseType: !581, size: 16)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "inner_ipproto", scope: !594, file: !463, line: 895, baseType: !527, size: 8)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "inner_transport_header", scope: !462, file: !463, line: 898, baseType: !521, size: 16, offset: 1232)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "inner_network_header", scope: !462, file: !463, line: 899, baseType: !521, size: 16, offset: 1248)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "inner_mac_header", scope: !462, file: !463, line: 900, baseType: !521, size: 16, offset: 1264)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !462, file: !463, line: 902, baseType: !581, size: 16, offset: 1280)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "transport_header", scope: !462, file: !463, line: 903, baseType: !521, size: 16, offset: 1296)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "network_header", scope: !462, file: !463, line: 904, baseType: !521, size: 16, offset: 1312)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "mac_header", scope: !462, file: !463, line: 905, baseType: !521, size: 16, offset: 1328)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "headers_end", scope: !462, file: !463, line: 908, baseType: !538, offset: 1344)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !462, file: !463, line: 912, baseType: !607, size: 32, offset: 1344)
!607 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_buff_data_t", file: !463, line: 606, baseType: !7)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !462, file: !463, line: 913, baseType: !607, size: 32, offset: 1376)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !462, file: !463, line: 914, baseType: !610, size: 64, offset: 1408)
!610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !528, size: 64)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !462, file: !463, line: 915, baseType: !610, size: 64, offset: 1472)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "truesize", scope: !462, file: !463, line: 916, baseType: !7, size: 32, offset: 1536)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !462, file: !463, line: 917, baseType: !614, size: 32, offset: 1568)
!614 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !615, line: 113, baseType: !616)
!615 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !615, line: 111, size: 32, elements: !617)
!617 = !{!618}
!618 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !616, file: !615, line: 112, baseType: !429, size: 32)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_features_check", scope: !444, file: !77, line: 1290, baseType: !620, size: 64, offset: 320)
!620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !621, size: 64)
!621 = !DISubroutineType(types: !622)
!622 = !{!375, !461, !336, !375}
!623 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_select_queue", scope: !444, file: !77, line: 1293, baseType: !624, size: 64, offset: 384)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!625 = !DISubroutineType(types: !626)
!626 = !{!627, !336, !461, !336}
!627 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !378, line: 19, baseType: !521)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_rx_flags", scope: !444, file: !77, line: 1296, baseType: !629, size: 64, offset: 448)
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!630 = !DISubroutineType(types: !631)
!631 = !{null, !336, !78}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_mode", scope: !444, file: !77, line: 1298, baseType: !451, size: 64, offset: 512)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_mac_address", scope: !444, file: !77, line: 1299, baseType: !634, size: 64, offset: 576)
!634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 64)
!635 = !DISubroutineType(types: !636)
!636 = !{!78, !336, !637}
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_validate_addr", scope: !444, file: !77, line: 1301, baseType: !447, size: 64, offset: 640)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_do_ioctl", scope: !444, file: !77, line: 1302, baseType: !640, size: 64, offset: 704)
!640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !641, size: 64)
!641 = !DISubroutineType(types: !642)
!642 = !{!78, !336, !643, !78}
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64)
!644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifreq", file: !645, line: 234, size: 320, elements: !646)
!645 = !DIFile(filename: "./include/uapi/linux/if.h", directory: "/home/lizy2001/genbc/linux")
!646 = !{!647, !651}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifrn", scope: !644, file: !645, line: 239, baseType: !648, size: 128)
!648 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !644, file: !645, line: 236, size: 128, elements: !649)
!649 = !{!650}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "ifrn_name", scope: !648, file: !645, line: 238, baseType: !313, size: 128)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifru", scope: !644, file: !645, line: 255, baseType: !652, size: 192, offset: 128)
!652 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !644, file: !645, line: 241, size: 192, elements: !653)
!653 = !{!654, !666, !667, !668, !669, !670, !672, !673, !674, !683, !684, !685, !686}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_addr", scope: !652, file: !645, line: 242, baseType: !655, size: 128)
!655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !656, line: 32, size: 128, elements: !657)
!656 = !DIFile(filename: "./include/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!657 = !{!658, !662}
!658 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !655, file: !656, line: 33, baseType: !659, size: 16)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !656, line: 26, baseType: !660)
!660 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_sa_family_t", file: !661, line: 10, baseType: !522)
!661 = !DIFile(filename: "./include/uapi/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!662 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !655, file: !656, line: 34, baseType: !663, size: 112, offset: 16)
!663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 112, elements: !664)
!664 = !{!665}
!665 = !DISubrange(count: 14)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_dstaddr", scope: !652, file: !645, line: 243, baseType: !655, size: 128)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_broadaddr", scope: !652, file: !645, line: 244, baseType: !655, size: 128)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_netmask", scope: !652, file: !645, line: 245, baseType: !655, size: 128)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_hwaddr", scope: !652, file: !645, line: 246, baseType: !655, size: 128)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_flags", scope: !652, file: !645, line: 247, baseType: !671, size: 16)
!671 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_ivalue", scope: !652, file: !645, line: 248, baseType: !78, size: 32)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_mtu", scope: !652, file: !645, line: 249, baseType: !78, size: 32)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_map", scope: !652, file: !645, line: 250, baseType: !675, size: 192)
!675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmap", file: !645, line: 196, size: 192, elements: !676)
!676 = !{!677, !678, !679, !680, !681, !682}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !675, file: !645, line: 197, baseType: !358, size: 64)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !675, file: !645, line: 198, baseType: !358, size: 64, offset: 64)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !675, file: !645, line: 199, baseType: !522, size: 16, offset: 128)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !675, file: !645, line: 200, baseType: !528, size: 8, offset: 144)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !675, file: !645, line: 201, baseType: !528, size: 8, offset: 152)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !675, file: !645, line: 202, baseType: !528, size: 8, offset: 160)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_slave", scope: !652, file: !645, line: 251, baseType: !313, size: 128)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_newname", scope: !652, file: !645, line: 252, baseType: !313, size: 128)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_data", scope: !652, file: !645, line: 253, baseType: !637, size: 64)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_settings", scope: !652, file: !645, line: 254, baseType: !687, size: 128)
!687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "if_settings", file: !645, line: 207, size: 128, elements: !688)
!688 = !{!689, !690, !691}
!689 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !687, file: !645, line: 208, baseType: !7, size: 32)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !687, file: !645, line: 209, baseType: !7, size: 32, offset: 32)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "ifs_ifsu", scope: !687, file: !645, line: 222, baseType: !692, size: 64, offset: 64)
!692 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !687, file: !645, line: 210, size: 64, elements: !693)
!693 = !{!694, !702, !709, !721, !727, !734, !745, !753}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hdlc", scope: !692, file: !645, line: 212, baseType: !695, size: 64)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64)
!696 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_hdlc_proto", file: !697, line: 56, baseType: !698)
!697 = !DIFile(filename: "./include/uapi/linux/hdlc/ioctl.h", directory: "/home/lizy2001/genbc/linux")
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !697, line: 53, size: 32, elements: !699)
!699 = !{!700, !701}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !698, file: !697, line: 54, baseType: !522, size: 16)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !698, file: !697, line: 55, baseType: !522, size: 16, offset: 16)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "cisco", scope: !692, file: !645, line: 213, baseType: !703, size: 64)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "cisco_proto", file: !697, line: 80, baseType: !705)
!705 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !697, line: 77, size: 64, elements: !706)
!706 = !{!707, !708}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !705, file: !697, line: 78, baseType: !7, size: 32)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !705, file: !697, line: 79, baseType: !7, size: 32, offset: 32)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "fr", scope: !692, file: !645, line: 214, baseType: !710, size: 64)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!711 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto", file: !697, line: 66, baseType: !712)
!712 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !697, line: 58, size: 192, elements: !713)
!713 = !{!714, !715, !716, !717, !718, !719, !720}
!714 = !DIDerivedType(tag: DW_TAG_member, name: "t391", scope: !712, file: !697, line: 59, baseType: !7, size: 32)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "t392", scope: !712, file: !697, line: 60, baseType: !7, size: 32, offset: 32)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "n391", scope: !712, file: !697, line: 61, baseType: !7, size: 32, offset: 64)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "n392", scope: !712, file: !697, line: 62, baseType: !7, size: 32, offset: 96)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "n393", scope: !712, file: !697, line: 63, baseType: !7, size: 32, offset: 128)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "lmi", scope: !712, file: !697, line: 64, baseType: !522, size: 16, offset: 160)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !712, file: !697, line: 65, baseType: !522, size: 16, offset: 176)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc", scope: !692, file: !645, line: 215, baseType: !722, size: 64)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!723 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc", file: !697, line: 70, baseType: !724)
!724 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !697, line: 68, size: 32, elements: !725)
!725 = !{!726}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !724, file: !697, line: 69, baseType: !7, size: 32)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc_info", scope: !692, file: !645, line: 216, baseType: !728, size: 64)
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 64)
!729 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc_info", file: !697, line: 75, baseType: !730)
!730 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !697, line: 72, size: 160, elements: !731)
!731 = !{!732, !733}
!732 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !730, file: !697, line: 73, baseType: !7, size: 32)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !730, file: !697, line: 74, baseType: !313, size: 128, offset: 32)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "x25", scope: !692, file: !645, line: 217, baseType: !735, size: 64)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 64)
!736 = !DIDerivedType(tag: DW_TAG_typedef, name: "x25_hdlc_proto", file: !697, line: 89, baseType: !737)
!737 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !697, line: 82, size: 192, elements: !738)
!738 = !{!739, !740, !741, !742, !743, !744}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !737, file: !697, line: 83, baseType: !522, size: 16)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "modulo", scope: !737, file: !697, line: 84, baseType: !7, size: 32, offset: 32)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !737, file: !697, line: 85, baseType: !7, size: 32, offset: 64)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !737, file: !697, line: 86, baseType: !7, size: 32, offset: 96)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "t2", scope: !737, file: !697, line: 87, baseType: !7, size: 32, offset: 128)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !737, file: !697, line: 88, baseType: !7, size: 32, offset: 160)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !692, file: !645, line: 220, baseType: !746, size: 64)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 64)
!747 = !DIDerivedType(tag: DW_TAG_typedef, name: "sync_serial_settings", file: !697, line: 44, baseType: !748)
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !697, line: 40, size: 96, elements: !749)
!749 = !{!750, !751, !752}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !748, file: !697, line: 41, baseType: !7, size: 32)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !748, file: !697, line: 42, baseType: !7, size: 32, offset: 32)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !748, file: !697, line: 43, baseType: !522, size: 16, offset: 64)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "te1", scope: !692, file: !645, line: 221, baseType: !754, size: 64)
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 64)
!755 = !DIDerivedType(tag: DW_TAG_typedef, name: "te1_settings", file: !697, line: 51, baseType: !756)
!756 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !697, line: 46, size: 128, elements: !757)
!757 = !{!758, !759, !760, !761}
!758 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !756, file: !697, line: 47, baseType: !7, size: 32)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !756, file: !697, line: 48, baseType: !7, size: 32, offset: 32)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !756, file: !697, line: 49, baseType: !522, size: 16, offset: 64)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "slot_map", scope: !756, file: !697, line: 50, baseType: !7, size: 32, offset: 96)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_config", scope: !444, file: !77, line: 1304, baseType: !763, size: 64, offset: 768)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 64)
!764 = !DISubroutineType(types: !765)
!765 = !{!78, !336, !766}
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !675, size: 64)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_mtu", scope: !444, file: !77, line: 1306, baseType: !768, size: 64, offset: 832)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = !DISubroutineType(types: !770)
!770 = !{!78, !336, !78}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_setup", scope: !444, file: !77, line: 1308, baseType: !772, size: 64, offset: 896)
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 64)
!773 = !DISubroutineType(types: !774)
!774 = !{!78, !336, !775}
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64)
!776 = !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_parms", file: !77, line: 206, flags: DIFlagFwdDecl)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tx_timeout", scope: !444, file: !77, line: 1310, baseType: !778, size: 64, offset: 960)
!778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !779, size: 64)
!779 = !DISubroutineType(types: !780)
!780 = !{null, !336, !7}
!781 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats64", scope: !444, file: !77, line: 1313, baseType: !782, size: 64, offset: 1024)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = !DISubroutineType(types: !784)
!784 = !{null, !336, !785}
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_stats64", file: !787, line: 214, size: 1536, elements: !788)
!787 = !DIFile(filename: "./include/uapi/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!788 = !{!789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !786, file: !787, line: 215, baseType: !379, size: 64)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !786, file: !787, line: 216, baseType: !379, size: 64, offset: 64)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !786, file: !787, line: 217, baseType: !379, size: 64, offset: 128)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !786, file: !787, line: 218, baseType: !379, size: 64, offset: 192)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !786, file: !787, line: 219, baseType: !379, size: 64, offset: 256)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !786, file: !787, line: 220, baseType: !379, size: 64, offset: 320)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !786, file: !787, line: 221, baseType: !379, size: 64, offset: 384)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !786, file: !787, line: 222, baseType: !379, size: 64, offset: 448)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !786, file: !787, line: 223, baseType: !379, size: 64, offset: 512)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !786, file: !787, line: 224, baseType: !379, size: 64, offset: 576)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !786, file: !787, line: 227, baseType: !379, size: 64, offset: 640)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !786, file: !787, line: 228, baseType: !379, size: 64, offset: 704)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !786, file: !787, line: 229, baseType: !379, size: 64, offset: 768)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !786, file: !787, line: 230, baseType: !379, size: 64, offset: 832)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !786, file: !787, line: 231, baseType: !379, size: 64, offset: 896)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !786, file: !787, line: 232, baseType: !379, size: 64, offset: 960)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !786, file: !787, line: 235, baseType: !379, size: 64, offset: 1024)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !786, file: !787, line: 236, baseType: !379, size: 64, offset: 1088)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !786, file: !787, line: 237, baseType: !379, size: 64, offset: 1152)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !786, file: !787, line: 238, baseType: !379, size: 64, offset: 1216)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !786, file: !787, line: 239, baseType: !379, size: 64, offset: 1280)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !786, file: !787, line: 242, baseType: !379, size: 64, offset: 1344)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !786, file: !787, line: 243, baseType: !379, size: 64, offset: 1408)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !786, file: !787, line: 244, baseType: !379, size: 64, offset: 1472)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_has_offload_stats", scope: !444, file: !77, line: 1315, baseType: !814, size: 64, offset: 1088)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 64)
!815 = !DISubroutineType(types: !816)
!816 = !{!817, !819, !78}
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !323, line: 30, baseType: !818)
!818 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !310)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_offload_stats", scope: !444, file: !77, line: 1316, baseType: !822, size: 64, offset: 1152)
!822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !823, size: 64)
!823 = !DISubroutineType(types: !824)
!824 = !{!78, !78, !819, !637}
!825 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats", scope: !444, file: !77, line: 1319, baseType: !826, size: 64, offset: 1216)
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 64)
!827 = !DISubroutineType(types: !828)
!828 = !{!829, !336}
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 64)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_add_vid", scope: !444, file: !77, line: 1321, baseType: !831, size: 64, offset: 1280)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = !DISubroutineType(types: !833)
!833 = !{!78, !336, !581, !627}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_kill_vid", scope: !444, file: !77, line: 1323, baseType: !831, size: 64, offset: 1344)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_mac", scope: !444, file: !77, line: 1331, baseType: !836, size: 64, offset: 1408)
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!837 = !DISubroutineType(types: !838)
!838 = !{!78, !336, !78, !839}
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!840 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !378, line: 17, baseType: !527)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_vlan", scope: !444, file: !77, line: 1333, baseType: !842, size: 64, offset: 1472)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64)
!843 = !DISubroutineType(types: !844)
!844 = !{!78, !336, !78, !627, !840, !581}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rate", scope: !444, file: !77, line: 1336, baseType: !846, size: 64, offset: 1536)
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 64)
!847 = !DISubroutineType(types: !848)
!848 = !{!78, !336, !78, !78, !78}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_spoofchk", scope: !444, file: !77, line: 1339, baseType: !850, size: 64, offset: 1600)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = !DISubroutineType(types: !852)
!852 = !{!78, !336, !78, !817}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_trust", scope: !444, file: !77, line: 1341, baseType: !850, size: 64, offset: 1664)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_config", scope: !444, file: !77, line: 1343, baseType: !855, size: 64, offset: 1728)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 64)
!856 = !DISubroutineType(types: !857)
!857 = !{!78, !336, !78, !858}
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 64)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_info", file: !860, line: 20, size: 576, elements: !861)
!860 = !DIFile(filename: "./include/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!861 = !{!862, !863, !867, !868, !869, !870, !871, !872, !873, !874, !875}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !859, file: !860, line: 21, baseType: !539, size: 32)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "mac", scope: !859, file: !860, line: 22, baseType: !864, size: 256, offset: 32)
!864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !527, size: 256, elements: !865)
!865 = !{!866}
!866 = !DISubrange(count: 32)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "vlan", scope: !859, file: !860, line: 23, baseType: !539, size: 32, offset: 288)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !859, file: !860, line: 24, baseType: !539, size: 32, offset: 320)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "spoofchk", scope: !859, file: !860, line: 25, baseType: !539, size: 32, offset: 352)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "linkstate", scope: !859, file: !860, line: 26, baseType: !539, size: 32, offset: 384)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "min_tx_rate", scope: !859, file: !860, line: 27, baseType: !539, size: 32, offset: 416)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx_rate", scope: !859, file: !860, line: 28, baseType: !539, size: 32, offset: 448)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "rss_query_en", scope: !859, file: !860, line: 29, baseType: !539, size: 32, offset: 480)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "trusted", scope: !859, file: !860, line: 30, baseType: !539, size: 32, offset: 512)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !859, file: !860, line: 31, baseType: !581, size: 16, offset: 544)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_link_state", scope: !444, file: !77, line: 1346, baseType: !877, size: 64, offset: 1792)
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 64)
!878 = !DISubroutineType(types: !879)
!879 = !{!78, !336, !78, !78}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_stats", scope: !444, file: !77, line: 1348, baseType: !881, size: 64, offset: 1856)
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 64)
!882 = !DISubroutineType(types: !883)
!883 = !{!78, !336, !78, !884}
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64)
!885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_stats", file: !860, line: 9, size: 512, elements: !886)
!886 = !{!887, !888, !889, !890, !891, !892, !893, !894}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !885, file: !860, line: 10, baseType: !379, size: 64)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !885, file: !860, line: 11, baseType: !379, size: 64, offset: 64)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !885, file: !860, line: 12, baseType: !379, size: 64, offset: 128)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !885, file: !860, line: 13, baseType: !379, size: 64, offset: 192)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !885, file: !860, line: 14, baseType: !379, size: 64, offset: 256)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !885, file: !860, line: 15, baseType: !379, size: 64, offset: 320)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !885, file: !860, line: 16, baseType: !379, size: 64, offset: 384)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !885, file: !860, line: 17, baseType: !379, size: 64, offset: 448)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_port", scope: !444, file: !77, line: 1352, baseType: !896, size: 64, offset: 1920)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!897 = !DISubroutineType(types: !898)
!898 = !{!78, !336, !78, !899}
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 64)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlattr", file: !902, line: 213, size: 32, elements: !903)
!902 = !DIFile(filename: "./include/uapi/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!903 = !{!904, !905}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "nla_len", scope: !901, file: !902, line: 214, baseType: !521, size: 16)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "nla_type", scope: !901, file: !902, line: 215, baseType: !521, size: 16, offset: 16)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_port", scope: !444, file: !77, line: 1355, baseType: !907, size: 64, offset: 1984)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = !DISubroutineType(types: !909)
!909 = !{!78, !336, !78, !461}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_guid", scope: !444, file: !77, line: 1357, baseType: !911, size: 64, offset: 2048)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = !DISubroutineType(types: !913)
!913 = !{!78, !336, !78, !914, !914}
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_guid", file: !787, line: 956, size: 128, elements: !916)
!916 = !{!917, !918}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !915, file: !787, line: 957, baseType: !539, size: 32)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "guid", scope: !915, file: !787, line: 958, baseType: !379, size: 64, offset: 64)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_guid", scope: !444, file: !77, line: 1361, baseType: !920, size: 64, offset: 2112)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!921 = !DISubroutineType(types: !922)
!922 = !{!78, !336, !78, !377, !78}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rss_query_en", scope: !444, file: !77, line: 1364, baseType: !850, size: 64, offset: 2176)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_setup_tc", scope: !444, file: !77, line: 1367, baseType: !925, size: 64, offset: 2240)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64)
!926 = !DISubroutineType(types: !927)
!927 = !{!78, !336, !83, !637}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_add_slave", scope: !444, file: !77, line: 1400, baseType: !929, size: 64, offset: 2304)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!930 = !DISubroutineType(types: !931)
!931 = !{!78, !336, !336, !932}
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 64)
!933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_ext_ack", file: !934, line: 75, size: 384, elements: !935)
!934 = !DIFile(filename: "./include/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!935 = !{!936, !937, !940, !944, !948}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "_msg", scope: !933, file: !934, line: 76, baseType: !338, size: 64)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "bad_attr", scope: !933, file: !934, line: 77, baseType: !938, size: 64, offset: 64)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64)
!939 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !901)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !933, file: !934, line: 78, baseType: !941, size: 64, offset: 128)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64)
!942 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !943)
!943 = !DICompositeType(tag: DW_TAG_structure_type, name: "nla_policy", file: !934, line: 78, flags: DIFlagFwdDecl)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !933, file: !934, line: 79, baseType: !945, size: 160, offset: 192)
!945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !840, size: 160, elements: !946)
!946 = !{!947}
!947 = !DISubrange(count: 20)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "cookie_len", scope: !933, file: !934, line: 80, baseType: !840, size: 8, offset: 352)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_del_slave", scope: !444, file: !77, line: 1403, baseType: !950, size: 64, offset: 2368)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!951 = !DISubroutineType(types: !952)
!952 = !{!78, !336, !336}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_xmit_slave", scope: !444, file: !77, line: 1405, baseType: !954, size: 64, offset: 2432)
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 64)
!955 = !DISubroutineType(types: !956)
!956 = !{!336, !336, !461, !817}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fix_features", scope: !444, file: !77, line: 1408, baseType: !958, size: 64, offset: 2496)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64)
!959 = !DISubroutineType(types: !960)
!960 = !{!375, !336, !375}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_features", scope: !444, file: !77, line: 1410, baseType: !962, size: 64, offset: 2560)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!963 = !DISubroutineType(types: !964)
!964 = !{!78, !336, !375}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_construct", scope: !444, file: !77, line: 1412, baseType: !966, size: 64, offset: 2624)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64)
!967 = !DISubroutineType(types: !968)
!968 = !{!78, !336, !969}
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64)
!970 = !DICompositeType(tag: DW_TAG_structure_type, name: "neighbour", file: !971, line: 35, flags: DIFlagFwdDecl)
!971 = !DIFile(filename: "./include/net/dst_ops.h", directory: "/home/lizy2001/genbc/linux")
!972 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_destroy", scope: !444, file: !77, line: 1414, baseType: !973, size: 64, offset: 2688)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64)
!974 = !DISubroutineType(types: !975)
!975 = !{null, !336, !969}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_add", scope: !444, file: !77, line: 1417, baseType: !977, size: 64, offset: 2752)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 64)
!978 = !DISubroutineType(types: !979)
!979 = !{!78, !980, !899, !336, !992, !627, !627, !932}
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64)
!981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndmsg", file: !982, line: 8, size: 96, elements: !983)
!982 = !DIFile(filename: "./include/uapi/linux/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!983 = !{!984, !985, !986, !987, !989, !990, !991}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_family", scope: !981, file: !982, line: 9, baseType: !527, size: 8)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad1", scope: !981, file: !982, line: 10, baseType: !527, size: 8, offset: 8)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad2", scope: !981, file: !982, line: 11, baseType: !521, size: 16, offset: 16)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_ifindex", scope: !981, file: !982, line: 12, baseType: !988, size: 32, offset: 32)
!988 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !380, line: 26, baseType: !78)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_state", scope: !981, file: !982, line: 13, baseType: !521, size: 16, offset: 64)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_flags", scope: !981, file: !982, line: 14, baseType: !527, size: 8, offset: 80)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_type", scope: !981, file: !982, line: 15, baseType: !527, size: 8, offset: 88)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 64)
!993 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !528)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_del", scope: !444, file: !77, line: 1424, baseType: !995, size: 64, offset: 2816)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64)
!996 = !DISubroutineType(types: !997)
!997 = !{!78, !980, !899, !336, !992, !627}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_dump", scope: !444, file: !77, line: 1429, baseType: !999, size: 64, offset: 2880)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 64)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{!78, !461, !1002, !336, !336, !1047}
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 64)
!1003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_callback", file: !934, line: 203, size: 1024, elements: !1004)
!1004 = !{!1005, !1006, !1016, !1020, !1024, !1025, !1029, !1030, !1031, !1032, !1034, !1035, !1036, !1037}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !1003, file: !934, line: 204, baseType: !461, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "nlh", scope: !1003, file: !934, line: 205, baseType: !1007, size: 64, offset: 64)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1009)
!1009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlmsghdr", file: !902, line: 44, size: 128, elements: !1010)
!1010 = !{!1011, !1012, !1013, !1014, !1015}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_len", scope: !1009, file: !902, line: 45, baseType: !539, size: 32)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_type", scope: !1009, file: !902, line: 46, baseType: !521, size: 16, offset: 32)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_flags", scope: !1009, file: !902, line: 47, baseType: !521, size: 16, offset: 48)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_seq", scope: !1009, file: !902, line: 48, baseType: !539, size: 32, offset: 64)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_pid", scope: !1009, file: !902, line: 49, baseType: !539, size: 32, offset: 96)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !1003, file: !934, line: 206, baseType: !1017, size: 64, offset: 128)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64)
!1018 = !DISubroutineType(types: !1019)
!1019 = !{!78, !461, !1002}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1003, file: !934, line: 208, baseType: !1021, size: 64, offset: 192)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64)
!1022 = !DISubroutineType(types: !1023)
!1023 = !{!78, !1002}
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1003, file: !934, line: 209, baseType: !637, size: 64, offset: 256)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !1003, file: !934, line: 211, baseType: !1026, size: 64, offset: 320)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64)
!1027 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !1028, line: 76, flags: DIFlagFwdDecl)
!1028 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !1003, file: !934, line: 212, baseType: !932, size: 64, offset: 384)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !1003, file: !934, line: 213, baseType: !627, size: 16, offset: 448)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "answer_flags", scope: !1003, file: !934, line: 214, baseType: !627, size: 16, offset: 464)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "min_dump_alloc", scope: !1003, file: !934, line: 215, baseType: !1033, size: 32, offset: 480)
!1033 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !378, line: 21, baseType: !539)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "prev_seq", scope: !1003, file: !934, line: 216, baseType: !7, size: 32, offset: 512)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1003, file: !934, line: 216, baseType: !7, size: 32, offset: 544)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "strict_check", scope: !1003, file: !934, line: 217, baseType: !817, size: 8, offset: 576)
!1037 = !DIDerivedType(tag: DW_TAG_member, scope: !1003, file: !934, line: 218, baseType: !1038, size: 384, offset: 640)
!1038 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1003, file: !934, line: 218, size: 384, elements: !1039)
!1039 = !{!1040, !1042}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !1038, file: !934, line: 219, baseType: !1041, size: 384)
!1041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !840, size: 384, elements: !504)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1038, file: !934, line: 224, baseType: !1043, size: 384)
!1043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1044, size: 384, elements: !1045)
!1044 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!1045 = !{!1046}
!1046 = !DISubrange(count: 6)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !78, size: 64)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_get", scope: !444, file: !77, line: 1434, baseType: !1049, size: 64, offset: 2944)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64)
!1050 = !DISubroutineType(types: !1051)
!1051 = !{!78, !461, !899, !336, !992, !627, !1033, !1033, !932}
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_setlink", scope: !444, file: !77, line: 1440, baseType: !1053, size: 64, offset: 3008)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 64)
!1054 = !DISubroutineType(types: !1055)
!1055 = !{!78, !336, !1056, !627, !932}
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_getlink", scope: !444, file: !77, line: 1444, baseType: !1058, size: 64, offset: 3072)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 64)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{!78, !461, !1033, !1033, !336, !1033, !78}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_dellink", scope: !444, file: !77, line: 1449, baseType: !1062, size: 64, offset: 3136)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 64)
!1063 = !DISubroutineType(types: !1064)
!1064 = !{!78, !336, !1056, !627}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_carrier", scope: !444, file: !77, line: 1452, baseType: !1066, size: 64, offset: 3200)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{!78, !336, !817}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_id", scope: !444, file: !77, line: 1454, baseType: !1070, size: 64, offset: 3264)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64)
!1071 = !DISubroutineType(types: !1072)
!1072 = !{!78, !336, !1073}
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_phys_item_id", file: !77, line: 820, size: 264, elements: !1075)
!1075 = !{!1076, !1078}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1074, file: !77, line: 821, baseType: !1077, size: 256)
!1077 = !DICompositeType(tag: DW_TAG_array_type, baseType: !528, size: 256, elements: !865)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "id_len", scope: !1074, file: !77, line: 822, baseType: !528, size: 8, offset: 256)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_port_parent_id", scope: !444, file: !77, line: 1456, baseType: !1070, size: 64, offset: 3328)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_name", scope: !444, file: !77, line: 1458, baseType: !1081, size: 64, offset: 3392)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64)
!1082 = !DISubroutineType(types: !1083)
!1083 = !{!78, !336, !1084, !1085}
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 64)
!1085 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !323, line: 55, baseType: !1086)
!1086 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !1087, line: 72, baseType: !1088)
!1087 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !1087, line: 16, baseType: !358)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_add", scope: !444, file: !77, line: 1460, baseType: !1090, size: 64, offset: 3456)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64)
!1091 = !DISubroutineType(types: !1092)
!1092 = !{null, !336, !1093}
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64)
!1094 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_info", file: !77, line: 67, flags: DIFlagFwdDecl)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_del", scope: !444, file: !77, line: 1462, baseType: !1090, size: 64, offset: 3520)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_add_station", scope: !444, file: !77, line: 1464, baseType: !1097, size: 64, offset: 3584)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64)
!1098 = !DISubroutineType(types: !1099)
!1099 = !{!637, !336, !336}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_del_station", scope: !444, file: !77, line: 1466, baseType: !1101, size: 64, offset: 3648)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64)
!1102 = !DISubroutineType(types: !1103)
!1103 = !{null, !336, !637}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_tx_maxrate", scope: !444, file: !77, line: 1469, baseType: !1105, size: 64, offset: 3712)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64)
!1106 = !DISubroutineType(types: !1107)
!1107 = !{!78, !336, !78, !1033}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_iflink", scope: !444, file: !77, line: 1472, baseType: !1109, size: 64, offset: 3776)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64)
!1110 = !DISubroutineType(types: !1111)
!1111 = !{!78, !819}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_proto_down", scope: !444, file: !77, line: 1473, baseType: !1066, size: 64, offset: 3840)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fill_metadata_dst", scope: !444, file: !77, line: 1475, baseType: !1114, size: 64, offset: 3904)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!78, !336, !461}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_headroom", scope: !444, file: !77, line: 1477, baseType: !629, size: 64, offset: 3968)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bpf", scope: !444, file: !77, line: 1479, baseType: !1119, size: 64, offset: 4032)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64)
!1120 = !DISubroutineType(types: !1121)
!1121 = !{!78, !336, !1122}
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64)
!1123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_bpf", file: !77, line: 894, size: 256, elements: !1124)
!1124 = !{!1125, !1126}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !1123, file: !77, line: 895, baseType: !103, size: 32)
!1126 = !DIDerivedType(tag: DW_TAG_member, scope: !1123, file: !77, line: 896, baseType: !1127, size: 192, offset: 64)
!1127 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1123, file: !77, line: 896, size: 192, elements: !1128)
!1128 = !{!1129, !1138, !5517}
!1129 = !DIDerivedType(tag: DW_TAG_member, scope: !1127, file: !77, line: 898, baseType: !1130, size: 192)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1127, file: !77, line: 898, size: 192, elements: !1131)
!1131 = !{!1132, !1133, !1137}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1130, file: !77, line: 899, baseType: !1033, size: 32)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !1130, file: !77, line: 900, baseType: !1134, size: 64, offset: 64)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 64)
!1135 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog", file: !1136, line: 11, flags: DIFlagFwdDecl)
!1136 = !DIFile(filename: "./include/net/flow_dissector.h", directory: "/home/lizy2001/genbc/linux")
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !1130, file: !77, line: 901, baseType: !932, size: 64, offset: 128)
!1138 = !DIDerivedType(tag: DW_TAG_member, scope: !1127, file: !77, line: 904, baseType: !1139, size: 64)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1127, file: !77, line: 904, size: 64, elements: !1140)
!1140 = !{!1141}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "offmap", scope: !1139, file: !77, line: 905, baseType: !1142, size: 64)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 64)
!1143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offloaded_map", file: !111, line: 222, size: 2560, elements: !1144)
!1144 = !{!1145, !5496, !5497, !5515, !5516}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !1143, file: !111, line: 223, baseType: !1146, size: 2048)
!1146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map", file: !111, line: 141, size: 2048, elements: !1147)
!1147 = !{!1148, !5470, !5471, !5472, !5473, !5474, !5475, !5476, !5477, !5478, !5479, !5480, !5481, !5482, !5487, !5488, !5489, !5490, !5491, !5492, !5493, !5494, !5495}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1146, file: !111, line: 145, baseType: !1149, size: 64, align: 512)
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 64)
!1150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1151)
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_ops", file: !111, line: 54, size: 2368, elements: !1152)
!1152 = !{!1153, !1352, !1357, !5142, !5146, !5150, !5151, !5155, !5161, !5162, !5163, !5164, !5165, !5169, !5173, !5177, !5178, !5179, !5183, !5184, !5196, !5200, !5204, !5216, !5405, !5409, !5413, !5418, !5422, !5426, !5430, !5436, !5440, !5447, !5451, !5453, !5454}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc_check", scope: !1151, file: !111, line: 56, baseType: !1154, size: 64)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 64)
!1155 = !DISubroutineType(types: !1156)
!1156 = !{!78, !1157}
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64)
!1158 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "bpf_attr", file: !142, line: 483, size: 960, align: 64, elements: !1159)
!1159 = !{!1160, !1176, !1187, !1198, !1222, !1228, !1236, !1253, !1266, !1272, !1281, !1286, !1294, !1306, !1326, !1333, !1337, !1341, !1346}
!1160 = !DIDerivedType(tag: DW_TAG_member, scope: !1158, file: !142, line: 484, baseType: !1161, size: 512)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1158, file: !142, line: 484, size: 512, elements: !1162)
!1162 = !{!1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !1161, file: !142, line: 485, baseType: !539, size: 32)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !1161, file: !142, line: 486, baseType: !539, size: 32, offset: 32)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !1161, file: !142, line: 487, baseType: !539, size: 32, offset: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !1161, file: !142, line: 488, baseType: !539, size: 32, offset: 96)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !1161, file: !142, line: 489, baseType: !539, size: 32, offset: 128)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_fd", scope: !1161, file: !142, line: 492, baseType: !539, size: 32, offset: 160)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !1161, file: !142, line: 493, baseType: !539, size: 32, offset: 192)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "map_name", scope: !1161, file: !142, line: 496, baseType: !313, size: 128, offset: 224)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "map_ifindex", scope: !1161, file: !142, line: 497, baseType: !539, size: 32, offset: 352)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "btf_fd", scope: !1161, file: !142, line: 498, baseType: !539, size: 32, offset: 384)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !1161, file: !142, line: 499, baseType: !539, size: 32, offset: 416)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !1161, file: !142, line: 500, baseType: !539, size: 32, offset: 448)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !1161, file: !142, line: 501, baseType: !539, size: 32, offset: 480)
!1176 = !DIDerivedType(tag: DW_TAG_member, scope: !1158, file: !142, line: 507, baseType: !1177, size: 256)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1158, file: !142, line: 507, size: 256, elements: !1178)
!1178 = !{!1179, !1180, !1181, !1186}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1177, file: !142, line: 508, baseType: !539, size: 32)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1177, file: !142, line: 509, baseType: !379, size: 64, align: 64, offset: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, scope: !1177, file: !142, line: 510, baseType: !1182, size: 64, offset: 128)
!1182 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1177, file: !142, line: 510, size: 64, elements: !1183)
!1183 = !{!1184, !1185}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1182, file: !142, line: 511, baseType: !379, size: 64, align: 64)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "next_key", scope: !1182, file: !142, line: 512, baseType: !379, size: 64, align: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1177, file: !142, line: 514, baseType: !379, size: 64, offset: 192)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !1158, file: !142, line: 532, baseType: !1188, size: 448)
!1188 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1158, file: !142, line: 517, size: 448, elements: !1189)
!1189 = !{!1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "in_batch", scope: !1188, file: !142, line: 518, baseType: !379, size: 64, align: 64)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "out_batch", scope: !1188, file: !142, line: 521, baseType: !379, size: 64, align: 64, offset: 64)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1188, file: !142, line: 522, baseType: !379, size: 64, align: 64, offset: 128)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1188, file: !142, line: 523, baseType: !379, size: 64, align: 64, offset: 192)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1188, file: !142, line: 524, baseType: !539, size: 32, offset: 256)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1188, file: !142, line: 529, baseType: !539, size: 32, offset: 288)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "elem_flags", scope: !1188, file: !142, line: 530, baseType: !379, size: 64, offset: 320)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1188, file: !142, line: 531, baseType: !379, size: 64, offset: 384)
!1198 = !DIDerivedType(tag: DW_TAG_member, scope: !1158, file: !142, line: 534, baseType: !1199, size: 960)
!1199 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1158, file: !142, line: 534, size: 960, elements: !1200)
!1200 = !{!1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "prog_type", scope: !1199, file: !142, line: 535, baseType: !539, size: 32)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "insn_cnt", scope: !1199, file: !142, line: 536, baseType: !539, size: 32, offset: 32)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1199, file: !142, line: 537, baseType: !379, size: 64, align: 64, offset: 64)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "license", scope: !1199, file: !142, line: 538, baseType: !379, size: 64, align: 64, offset: 128)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "log_level", scope: !1199, file: !142, line: 539, baseType: !539, size: 32, offset: 192)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "log_size", scope: !1199, file: !142, line: 540, baseType: !539, size: 32, offset: 224)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "log_buf", scope: !1199, file: !142, line: 541, baseType: !379, size: 64, align: 64, offset: 256)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "kern_version", scope: !1199, file: !142, line: 542, baseType: !539, size: 32, offset: 320)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "prog_flags", scope: !1199, file: !142, line: 543, baseType: !539, size: 32, offset: 352)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "prog_name", scope: !1199, file: !142, line: 544, baseType: !313, size: 128, offset: 384)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ifindex", scope: !1199, file: !142, line: 545, baseType: !539, size: 32, offset: 512)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !1199, file: !142, line: 550, baseType: !539, size: 32, offset: 544)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "prog_btf_fd", scope: !1199, file: !142, line: 551, baseType: !539, size: 32, offset: 576)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_rec_size", scope: !1199, file: !142, line: 552, baseType: !539, size: 32, offset: 608)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !1199, file: !142, line: 553, baseType: !379, size: 64, align: 64, offset: 640)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !1199, file: !142, line: 554, baseType: !539, size: 32, offset: 704)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_rec_size", scope: !1199, file: !142, line: 555, baseType: !539, size: 32, offset: 736)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "line_info", scope: !1199, file: !142, line: 556, baseType: !379, size: 64, align: 64, offset: 768)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_cnt", scope: !1199, file: !142, line: 557, baseType: !539, size: 32, offset: 832)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !1199, file: !142, line: 558, baseType: !539, size: 32, offset: 864)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "attach_prog_fd", scope: !1199, file: !142, line: 559, baseType: !539, size: 32, offset: 896)
!1222 = !DIDerivedType(tag: DW_TAG_member, scope: !1158, file: !142, line: 562, baseType: !1223, size: 128)
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1158, file: !142, line: 562, size: 128, elements: !1224)
!1224 = !{!1225, !1226, !1227}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "pathname", scope: !1223, file: !142, line: 563, baseType: !379, size: 64, align: 64)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !1223, file: !142, line: 564, baseType: !539, size: 32, offset: 64)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "file_flags", scope: !1223, file: !142, line: 565, baseType: !539, size: 32, offset: 96)
!1228 = !DIDerivedType(tag: DW_TAG_member, scope: !1158, file: !142, line: 568, baseType: !1229, size: 160)
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1158, file: !142, line: 568, size: 160, elements: !1230)
!1230 = !{!1231, !1232, !1233, !1234, !1235}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1229, file: !142, line: 569, baseType: !539, size: 32)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "attach_bpf_fd", scope: !1229, file: !142, line: 570, baseType: !539, size: 32, offset: 32)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1229, file: !142, line: 571, baseType: !539, size: 32, offset: 64)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !1229, file: !142, line: 572, baseType: !539, size: 32, offset: 96)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "replace_bpf_fd", scope: !1229, file: !142, line: 573, baseType: !539, size: 32, offset: 128)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !1158, file: !142, line: 600, baseType: !1237, size: 576)
!1237 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1158, file: !142, line: 579, size: 576, elements: !1238)
!1238 = !{!1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1237, file: !142, line: 580, baseType: !539, size: 32)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !1237, file: !142, line: 581, baseType: !539, size: 32, offset: 32)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_in", scope: !1237, file: !142, line: 582, baseType: !539, size: 32, offset: 64)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_out", scope: !1237, file: !142, line: 583, baseType: !539, size: 32, offset: 96)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "data_in", scope: !1237, file: !142, line: 587, baseType: !379, size: 64, align: 64, offset: 128)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "data_out", scope: !1237, file: !142, line: 588, baseType: !379, size: 64, align: 64, offset: 192)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !1237, file: !142, line: 589, baseType: !539, size: 32, offset: 256)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1237, file: !142, line: 590, baseType: !539, size: 32, offset: 288)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_in", scope: !1237, file: !142, line: 591, baseType: !539, size: 32, offset: 320)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_out", scope: !1237, file: !142, line: 592, baseType: !539, size: 32, offset: 352)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_in", scope: !1237, file: !142, line: 596, baseType: !379, size: 64, align: 64, offset: 384)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_out", scope: !1237, file: !142, line: 597, baseType: !379, size: 64, align: 64, offset: 448)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1237, file: !142, line: 598, baseType: !539, size: 32, offset: 512)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1237, file: !142, line: 599, baseType: !539, size: 32, offset: 544)
!1253 = !DIDerivedType(tag: DW_TAG_member, scope: !1158, file: !142, line: 602, baseType: !1254, size: 96)
!1254 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1158, file: !142, line: 602, size: 96, elements: !1255)
!1255 = !{!1256, !1264, !1265}
!1256 = !DIDerivedType(tag: DW_TAG_member, scope: !1254, file: !142, line: 603, baseType: !1257, size: 32)
!1257 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1254, file: !142, line: 603, size: 32, elements: !1258)
!1258 = !{!1259, !1260, !1261, !1262, !1263}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "start_id", scope: !1257, file: !142, line: 604, baseType: !539, size: 32)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !1257, file: !142, line: 605, baseType: !539, size: 32)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "map_id", scope: !1257, file: !142, line: 606, baseType: !539, size: 32)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !1257, file: !142, line: 607, baseType: !539, size: 32)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "link_id", scope: !1257, file: !142, line: 608, baseType: !539, size: 32)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "next_id", scope: !1254, file: !142, line: 610, baseType: !539, size: 32, offset: 32)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "open_flags", scope: !1254, file: !142, line: 611, baseType: !539, size: 32, offset: 64)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1158, file: !142, line: 618, baseType: !1267, size: 128)
!1267 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1158, file: !142, line: 614, size: 128, elements: !1268)
!1268 = !{!1269, !1270, !1271}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !1267, file: !142, line: 615, baseType: !539, size: 32)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "info_len", scope: !1267, file: !142, line: 616, baseType: !539, size: 32, offset: 32)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1267, file: !142, line: 617, baseType: !379, size: 64, align: 64, offset: 64)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "query", scope: !1158, file: !142, line: 627, baseType: !1273, size: 256)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1158, file: !142, line: 620, size: 256, elements: !1274)
!1274 = !{!1275, !1276, !1277, !1278, !1279, !1280}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1273, file: !142, line: 621, baseType: !539, size: 32)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1273, file: !142, line: 622, baseType: !539, size: 32, offset: 32)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "query_flags", scope: !1273, file: !142, line: 623, baseType: !539, size: 32, offset: 64)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !1273, file: !142, line: 624, baseType: !539, size: 32, offset: 96)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ids", scope: !1273, file: !142, line: 625, baseType: !379, size: 64, align: 64, offset: 128)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "prog_cnt", scope: !1273, file: !142, line: 626, baseType: !539, size: 32, offset: 192)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "raw_tracepoint", scope: !1158, file: !142, line: 632, baseType: !1282, size: 128)
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1158, file: !142, line: 629, size: 128, elements: !1283)
!1283 = !{!1284, !1285}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1282, file: !142, line: 630, baseType: !379, size: 64)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1282, file: !142, line: 631, baseType: !539, size: 32, offset: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, scope: !1158, file: !142, line: 634, baseType: !1287, size: 256)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1158, file: !142, line: 634, size: 256, elements: !1288)
!1288 = !{!1289, !1290, !1291, !1292, !1293}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !1287, file: !142, line: 635, baseType: !379, size: 64, align: 64)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_buf", scope: !1287, file: !142, line: 636, baseType: !379, size: 64, align: 64, offset: 64)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "btf_size", scope: !1287, file: !142, line: 637, baseType: !539, size: 32, offset: 128)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_size", scope: !1287, file: !142, line: 638, baseType: !539, size: 32, offset: 160)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_level", scope: !1287, file: !142, line: 639, baseType: !539, size: 32, offset: 192)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "task_fd_query", scope: !1158, file: !142, line: 656, baseType: !1295, size: 384)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1158, file: !142, line: 642, size: 384, elements: !1296)
!1296 = !{!1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1295, file: !142, line: 643, baseType: !539, size: 32)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1295, file: !142, line: 644, baseType: !539, size: 32, offset: 32)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1295, file: !142, line: 645, baseType: !539, size: 32, offset: 64)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !1295, file: !142, line: 646, baseType: !539, size: 32, offset: 96)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1295, file: !142, line: 647, baseType: !379, size: 64, align: 64, offset: 128)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !1295, file: !142, line: 652, baseType: !539, size: 32, offset: 192)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "fd_type", scope: !1295, file: !142, line: 653, baseType: !539, size: 32, offset: 224)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "probe_offset", scope: !1295, file: !142, line: 654, baseType: !379, size: 64, offset: 256)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "probe_addr", scope: !1295, file: !142, line: 655, baseType: !379, size: 64, offset: 320)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "link_create", scope: !1158, file: !142, line: 673, baseType: !1307, size: 256)
!1307 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1158, file: !142, line: 658, size: 256, elements: !1308)
!1308 = !{!1309, !1310, !1315, !1316, !1317}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1307, file: !142, line: 659, baseType: !539, size: 32)
!1310 = !DIDerivedType(tag: DW_TAG_member, scope: !1307, file: !142, line: 660, baseType: !1311, size: 32, offset: 32)
!1311 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1307, file: !142, line: 660, size: 32, elements: !1312)
!1312 = !{!1313, !1314}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1311, file: !142, line: 661, baseType: !539, size: 32)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "target_ifindex", scope: !1311, file: !142, line: 662, baseType: !539, size: 32)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1307, file: !142, line: 664, baseType: !539, size: 32, offset: 64)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1307, file: !142, line: 665, baseType: !539, size: 32, offset: 96)
!1317 = !DIDerivedType(tag: DW_TAG_member, scope: !1307, file: !142, line: 666, baseType: !1318, size: 128, offset: 128)
!1318 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1307, file: !142, line: 666, size: 128, elements: !1319)
!1319 = !{!1320, !1321}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "target_btf_id", scope: !1318, file: !142, line: 667, baseType: !539, size: 32)
!1321 = !DIDerivedType(tag: DW_TAG_member, scope: !1318, file: !142, line: 668, baseType: !1322, size: 128)
!1322 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1318, file: !142, line: 668, size: 128, elements: !1323)
!1323 = !{!1324, !1325}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info", scope: !1322, file: !142, line: 669, baseType: !379, size: 64, align: 64)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info_len", scope: !1322, file: !142, line: 670, baseType: !539, size: 32, offset: 64)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "link_update", scope: !1158, file: !142, line: 683, baseType: !1327, size: 128)
!1327 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1158, file: !142, line: 675, size: 128, elements: !1328)
!1328 = !{!1329, !1330, !1331, !1332}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1327, file: !142, line: 676, baseType: !539, size: 32)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "new_prog_fd", scope: !1327, file: !142, line: 678, baseType: !539, size: 32, offset: 32)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1327, file: !142, line: 679, baseType: !539, size: 32, offset: 64)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "old_prog_fd", scope: !1327, file: !142, line: 682, baseType: !539, size: 32, offset: 96)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "link_detach", scope: !1158, file: !142, line: 687, baseType: !1334, size: 32)
!1334 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1158, file: !142, line: 685, size: 32, elements: !1335)
!1335 = !{!1336}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1334, file: !142, line: 686, baseType: !539, size: 32)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "enable_stats", scope: !1158, file: !142, line: 691, baseType: !1338, size: 32)
!1338 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1158, file: !142, line: 689, size: 32, elements: !1339)
!1339 = !{!1340}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1338, file: !142, line: 690, baseType: !539, size: 32)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "iter_create", scope: !1158, file: !142, line: 696, baseType: !1342, size: 64)
!1342 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1158, file: !142, line: 693, size: 64, elements: !1343)
!1343 = !{!1344, !1345}
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1342, file: !142, line: 694, baseType: !539, size: 32)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1342, file: !142, line: 695, baseType: !539, size: 32, offset: 32)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "prog_bind_map", scope: !1158, file: !142, line: 702, baseType: !1347, size: 96)
!1347 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1158, file: !142, line: 698, size: 96, elements: !1348)
!1348 = !{!1349, !1350, !1351}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1347, file: !142, line: 699, baseType: !539, size: 32)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1347, file: !142, line: 700, baseType: !539, size: 32, offset: 32)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1347, file: !142, line: 701, baseType: !539, size: 32, offset: 64)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc", scope: !1151, file: !111, line: 57, baseType: !1353, size: 64, offset: 64)
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 64)
!1354 = !DISubroutineType(types: !1355)
!1355 = !{!1356, !1157}
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 64)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "map_release", scope: !1151, file: !111, line: 58, baseType: !1358, size: 64, offset: 128)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 64)
!1359 = !DISubroutineType(types: !1360)
!1360 = !{null, !1356, !1361}
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !1363, line: 916, size: 1856, align: 32, elements: !1364)
!1363 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!1364 = !{!1365, !1375, !5092, !5093, !5094, !5095, !5104, !5105, !5106, !5107, !5108, !5109, !5125, !5126, !5135, !5136, !5137, !5138, !5139, !5140, !5141}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !1362, file: !1363, line: 920, baseType: !1366, size: 128)
!1366 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1362, file: !1363, line: 917, size: 128, elements: !1367)
!1367 = !{!1368, !1374}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !1366, file: !1363, line: 918, baseType: !1369, size: 64)
!1369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !1370, line: 58, size: 64, elements: !1371)
!1370 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1371 = !{!1372}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1369, file: !1370, line: 59, baseType: !1373, size: 64)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 64)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !1366, file: !1363, line: 919, baseType: !345, size: 128, align: 64)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !1362, file: !1363, line: 921, baseType: !1376, size: 128, offset: 128)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !1377, line: 8, size: 128, elements: !1378)
!1377 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!1378 = !{!1379, !1383}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !1376, file: !1377, line: 9, baseType: !1380, size: 64)
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 64)
!1381 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !1382, line: 18, flags: DIFlagFwdDecl)
!1382 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !1376, file: !1377, line: 10, baseType: !1384, size: 64, offset: 64)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 64)
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !1382, line: 89, size: 1536, elements: !1386)
!1386 = !{!1387, !1388, !1398, !1406, !1407, !1420, !5061, !5062, !5074, !5075, !5076, !5077, !5078, !5084, !5085, !5086}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !1385, file: !1382, line: 91, baseType: !7, size: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !1385, file: !1382, line: 92, baseType: !1389, size: 32, offset: 32)
!1389 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !1390, line: 277, baseType: !1391)
!1390 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !1390, line: 277, size: 32, elements: !1392)
!1392 = !{!1393}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1391, file: !1390, line: 277, baseType: !1394, size: 32)
!1394 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !1390, line: 70, baseType: !1395)
!1395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !1390, line: 65, size: 32, elements: !1396)
!1396 = !{!1397}
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !1395, file: !1390, line: 66, baseType: !7, size: 32)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !1385, file: !1382, line: 93, baseType: !1399, size: 128, offset: 64)
!1399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !1400, line: 38, size: 128, elements: !1401)
!1400 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!1401 = !{!1402, !1404}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1399, file: !1400, line: 39, baseType: !1403, size: 64)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 64)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !1399, file: !1400, line: 39, baseType: !1405, size: 64, offset: 64)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 64)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !1385, file: !1382, line: 94, baseType: !1384, size: 64, offset: 192)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1385, file: !1382, line: 95, baseType: !1408, size: 128, offset: 256)
!1408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !1382, line: 47, size: 128, elements: !1409)
!1409 = !{!1410, !1419}
!1410 = !DIDerivedType(tag: DW_TAG_member, scope: !1408, file: !1382, line: 48, baseType: !1411, size: 64)
!1411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1408, file: !1382, line: 48, size: 64, elements: !1412)
!1412 = !{!1413, !1418}
!1413 = !DIDerivedType(tag: DW_TAG_member, scope: !1411, file: !1382, line: 49, baseType: !1414, size: 64)
!1414 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1411, file: !1382, line: 49, size: 64, elements: !1415)
!1415 = !{!1416, !1417}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1414, file: !1382, line: 50, baseType: !1033, size: 32)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1414, file: !1382, line: 50, baseType: !1033, size: 32, offset: 32)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !1411, file: !1382, line: 52, baseType: !377, size: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1408, file: !1382, line: 54, baseType: !992, size: 64, offset: 64)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !1385, file: !1382, line: 96, baseType: !1421, size: 64, offset: 384)
!1421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1422, size: 64)
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !1363, line: 610, size: 4224, elements: !1423)
!1423 = !{!1424, !1426, !1427, !1435, !1442, !1443, !1590, !4790, !4791, !4792, !4798, !4799, !4800, !4801, !4802, !4803, !4804, !4805, !4806, !4807, !4808, !4809, !4810, !4811, !4812, !4813, !4814, !4815, !4816, !4817, !4822, !4823, !4824, !4825, !4826, !4827, !4828, !5037, !5045, !5046, !5047, !5057, !5058, !5059, !5060}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !1422, file: !1363, line: 611, baseType: !1425, size: 16)
!1425 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !323, line: 19, baseType: !522)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !1422, file: !1363, line: 612, baseType: !522, size: 16, offset: 16)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !1422, file: !1363, line: 613, baseType: !1428, size: 32, offset: 32)
!1428 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !1429, line: 23, baseType: !1430)
!1429 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1429, line: 21, size: 32, elements: !1431)
!1431 = !{!1432}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1430, file: !1429, line: 22, baseType: !1433, size: 32)
!1433 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !323, line: 32, baseType: !1434)
!1434 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !1087, line: 49, baseType: !7)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !1422, file: !1363, line: 614, baseType: !1436, size: 32, offset: 64)
!1436 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !1429, line: 28, baseType: !1437)
!1437 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1429, line: 26, size: 32, elements: !1438)
!1438 = !{!1439}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1437, file: !1429, line: 27, baseType: !1440, size: 32)
!1440 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !323, line: 33, baseType: !1441)
!1441 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !1087, line: 50, baseType: !7)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1422, file: !1363, line: 615, baseType: !7, size: 32, offset: 96)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !1422, file: !1363, line: 622, baseType: !1444, size: 64, offset: 128)
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 64)
!1445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1446)
!1446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !1363, line: 1864, size: 1536, align: 512, elements: !1447)
!1447 = !{!1448, !1452, !1465, !1469, !1475, !1479, !1483, !1487, !1491, !1495, !1499, !1500, !1506, !1510, !1534, !1563, !1570, !1576, !1581, !1585, !1586}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1446, file: !1363, line: 1865, baseType: !1449, size: 64)
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 64)
!1450 = !DISubroutineType(types: !1451)
!1451 = !{!1384, !1421, !1384, !7}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !1446, file: !1363, line: 1866, baseType: !1453, size: 64, offset: 64)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64)
!1454 = !DISubroutineType(types: !1455)
!1455 = !{!338, !1384, !1421, !1456}
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 64)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !1458, line: 10, size: 128, elements: !1459)
!1458 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!1459 = !{!1460, !1464}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1457, file: !1458, line: 11, baseType: !1461, size: 64)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 64)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{null, !637}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !1457, file: !1458, line: 12, baseType: !637, size: 64, offset: 64)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !1446, file: !1363, line: 1867, baseType: !1466, size: 64, offset: 128)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 64)
!1467 = !DISubroutineType(types: !1468)
!1468 = !{!78, !1421, !78}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !1446, file: !1363, line: 1868, baseType: !1470, size: 64, offset: 192)
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 64)
!1471 = !DISubroutineType(types: !1472)
!1472 = !{!1473, !1421, !78}
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 64)
!1474 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !1363, line: 581, flags: DIFlagFwdDecl)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !1446, file: !1363, line: 1870, baseType: !1476, size: 64, offset: 256)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 64)
!1477 = !DISubroutineType(types: !1478)
!1478 = !{!78, !1384, !1084, !78}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !1446, file: !1363, line: 1872, baseType: !1480, size: 64, offset: 320)
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 64)
!1481 = !DISubroutineType(types: !1482)
!1482 = !{!78, !1421, !1384, !1425, !817}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1446, file: !1363, line: 1873, baseType: !1484, size: 64, offset: 384)
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 64)
!1485 = !DISubroutineType(types: !1486)
!1486 = !{!78, !1384, !1421, !1384}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !1446, file: !1363, line: 1874, baseType: !1488, size: 64, offset: 448)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 64)
!1489 = !DISubroutineType(types: !1490)
!1490 = !{!78, !1421, !1384}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1446, file: !1363, line: 1875, baseType: !1492, size: 64, offset: 512)
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 64)
!1493 = !DISubroutineType(types: !1494)
!1494 = !{!78, !1421, !1384, !338}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1446, file: !1363, line: 1876, baseType: !1496, size: 64, offset: 576)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 64)
!1497 = !DISubroutineType(types: !1498)
!1498 = !{!78, !1421, !1384, !1425}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1446, file: !1363, line: 1877, baseType: !1488, size: 64, offset: 640)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !1446, file: !1363, line: 1878, baseType: !1501, size: 64, offset: 704)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64)
!1502 = !DISubroutineType(types: !1503)
!1503 = !{!78, !1421, !1384, !1425, !1504}
!1504 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !323, line: 16, baseType: !1505)
!1505 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !323, line: 13, baseType: !1033)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1446, file: !1363, line: 1879, baseType: !1507, size: 64, offset: 768)
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1508, size: 64)
!1508 = !DISubroutineType(types: !1509)
!1509 = !{!78, !1421, !1384, !1421, !1384, !7}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !1446, file: !1363, line: 1881, baseType: !1511, size: 64, offset: 832)
!1511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 64)
!1512 = !DISubroutineType(types: !1513)
!1513 = !{!78, !1384, !1514}
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 64)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !1363, line: 219, size: 640, elements: !1516)
!1516 = !{!1517, !1518, !1519, !1520, !1521, !1524, !1531, !1532, !1533}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !1515, file: !1363, line: 220, baseType: !7, size: 32)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !1515, file: !1363, line: 221, baseType: !1425, size: 16, offset: 32)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !1515, file: !1363, line: 222, baseType: !1428, size: 32, offset: 64)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !1515, file: !1363, line: 223, baseType: !1436, size: 32, offset: 96)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !1515, file: !1363, line: 224, baseType: !1522, size: 64, offset: 128)
!1522 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !323, line: 46, baseType: !1523)
!1523 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !1087, line: 88, baseType: !425)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !1515, file: !1363, line: 225, baseType: !1525, size: 128, offset: 192)
!1525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1526, line: 13, size: 128, elements: !1527)
!1526 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1527 = !{!1528, !1530}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1525, file: !1526, line: 14, baseType: !1529, size: 64)
!1529 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1526, line: 8, baseType: !424)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1525, file: !1526, line: 15, baseType: !1044, size: 64, offset: 64)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !1515, file: !1363, line: 226, baseType: !1525, size: 128, offset: 320)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !1515, file: !1363, line: 227, baseType: !1525, size: 128, offset: 448)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !1515, file: !1363, line: 234, baseType: !1361, size: 64, offset: 576)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !1446, file: !1363, line: 1882, baseType: !1535, size: 64, offset: 896)
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 64)
!1536 = !DISubroutineType(types: !1537)
!1537 = !{!78, !1538, !1540, !1033, !7}
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 64)
!1539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1376)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 64)
!1541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !1542, line: 22, size: 1152, elements: !1543)
!1542 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!1543 = !{!1544, !1545, !1546, !1547, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !1541, file: !1542, line: 23, baseType: !1033, size: 32)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1541, file: !1542, line: 24, baseType: !1425, size: 16, offset: 32)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !1541, file: !1542, line: 25, baseType: !7, size: 32, offset: 64)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !1541, file: !1542, line: 26, baseType: !1548, size: 32, offset: 96)
!1548 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !323, line: 104, baseType: !1033)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1541, file: !1542, line: 27, baseType: !377, size: 64, offset: 128)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !1541, file: !1542, line: 28, baseType: !377, size: 64, offset: 192)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1541, file: !1542, line: 37, baseType: !377, size: 64, offset: 256)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1541, file: !1542, line: 38, baseType: !1504, size: 32, offset: 320)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !1541, file: !1542, line: 39, baseType: !1504, size: 32, offset: 352)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1541, file: !1542, line: 40, baseType: !1428, size: 32, offset: 384)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1541, file: !1542, line: 41, baseType: !1436, size: 32, offset: 416)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1541, file: !1542, line: 42, baseType: !1522, size: 64, offset: 448)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !1541, file: !1542, line: 43, baseType: !1525, size: 128, offset: 512)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !1541, file: !1542, line: 44, baseType: !1525, size: 128, offset: 640)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1541, file: !1542, line: 45, baseType: !1525, size: 128, offset: 768)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !1541, file: !1542, line: 46, baseType: !1525, size: 128, offset: 896)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1541, file: !1542, line: 47, baseType: !377, size: 64, offset: 1024)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !1541, file: !1542, line: 48, baseType: !377, size: 64, offset: 1088)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !1446, file: !1363, line: 1883, baseType: !1564, size: 64, offset: 960)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 64)
!1565 = !DISubroutineType(types: !1566)
!1566 = !{!1567, !1384, !1084, !1085}
!1567 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !323, line: 60, baseType: !1568)
!1568 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !1087, line: 73, baseType: !1569)
!1569 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !1087, line: 15, baseType: !1044)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !1446, file: !1363, line: 1884, baseType: !1571, size: 64, offset: 1024)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!1572 = !DISubroutineType(types: !1573)
!1573 = !{!78, !1421, !1574, !377, !377}
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 64)
!1575 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !1363, line: 50, flags: DIFlagFwdDecl)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !1446, file: !1363, line: 1886, baseType: !1577, size: 64, offset: 1088)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 64)
!1578 = !DISubroutineType(types: !1579)
!1579 = !{!78, !1421, !1580, !78}
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 64)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !1446, file: !1363, line: 1887, baseType: !1582, size: 64, offset: 1152)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 64)
!1583 = !DISubroutineType(types: !1584)
!1584 = !{!78, !1421, !1384, !1361, !7, !1425}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !1446, file: !1363, line: 1890, baseType: !1496, size: 64, offset: 1216)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !1446, file: !1363, line: 1891, baseType: !1587, size: 64, offset: 1280)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 64)
!1588 = !DISubroutineType(types: !1589)
!1589 = !{!78, !1421, !1473, !78}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !1422, file: !1363, line: 623, baseType: !1591, size: 64, offset: 192)
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 64)
!1592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !1363, line: 1416, size: 9472, elements: !1593)
!1593 = !{!1594, !1595, !1596, !1597, !1598, !1599, !1643, !4392, !4480, !4563, !4567, !4568, !4569, !4570, !4571, !4572, !4573, !4574, !4579, !4583, !4584, !4587, !4588, !4591, !4592, !4593, !4634, !4661, !4662, !4663, !4664, !4665, !4666, !4669, !4671, !4677, !4678, !4680, !4681, !4682, !4741, !4742, !4757, !4758, !4759, !4760, !4761, !4764, !4765, !4766, !4781, !4782, !4783, !4784, !4785, !4786, !4787, !4788, !4789}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !1592, file: !1363, line: 1417, baseType: !330, size: 128)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !1592, file: !1363, line: 1418, baseType: !1504, size: 32, offset: 128)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !1592, file: !1363, line: 1419, baseType: !528, size: 8, offset: 160)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !1592, file: !1363, line: 1420, baseType: !358, size: 64, offset: 192)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !1592, file: !1363, line: 1421, baseType: !1522, size: 64, offset: 256)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !1592, file: !1363, line: 1422, baseType: !1600, size: 64, offset: 320)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 64)
!1601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !1363, line: 2228, size: 576, elements: !1602)
!1602 = !{!1603, !1604, !1605, !1612, !1616, !1620, !1624, !1625, !1626, !1630, !1634, !1635, !1636, !1640, !1641, !1642}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1601, file: !1363, line: 2229, baseType: !338, size: 64)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !1601, file: !1363, line: 2230, baseType: !78, size: 32, offset: 64)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !1601, file: !1363, line: 2238, baseType: !1606, size: 64, offset: 128)
!1606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1607, size: 64)
!1607 = !DISubroutineType(types: !1608)
!1608 = !{!78, !1609}
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 64)
!1610 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !1611, line: 28, flags: DIFlagFwdDecl)
!1611 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !1601, file: !1363, line: 2239, baseType: !1613, size: 64, offset: 192)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 64)
!1614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1615)
!1615 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !1363, line: 70, flags: DIFlagFwdDecl)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !1601, file: !1363, line: 2240, baseType: !1617, size: 64, offset: 256)
!1617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1618, size: 64)
!1618 = !DISubroutineType(types: !1619)
!1619 = !{!1384, !1600, !78, !338, !637}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !1601, file: !1363, line: 2242, baseType: !1621, size: 64, offset: 320)
!1621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1622, size: 64)
!1622 = !DISubroutineType(types: !1623)
!1623 = !{null, !1591}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1601, file: !1363, line: 2243, baseType: !1026, size: 64, offset: 384)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1601, file: !1363, line: 2244, baseType: !1600, size: 64, offset: 448)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !1601, file: !1363, line: 2245, baseType: !1627, size: 64, offset: 512)
!1627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !323, line: 182, size: 64, elements: !1628)
!1628 = !{!1629}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1627, file: !323, line: 183, baseType: !326, size: 64)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !1601, file: !1363, line: 2247, baseType: !1631, offset: 576)
!1631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !1632, line: 187, elements: !1633)
!1632 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!1633 = !{}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !1601, file: !1363, line: 2248, baseType: !1631, offset: 576)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !1601, file: !1363, line: 2249, baseType: !1631, offset: 576)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !1601, file: !1363, line: 2250, baseType: !1637, offset: 576)
!1637 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1631, elements: !1638)
!1638 = !{!1639}
!1639 = !DISubrange(count: 3)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !1601, file: !1363, line: 2252, baseType: !1631, offset: 576)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !1601, file: !1363, line: 2253, baseType: !1631, offset: 576)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !1601, file: !1363, line: 2254, baseType: !1631, offset: 576)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !1592, file: !1363, line: 1423, baseType: !1644, size: 64, offset: 384)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64)
!1645 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1646)
!1646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !1363, line: 1935, size: 1472, elements: !1647)
!1647 = !{!1648, !1652, !1656, !1657, !1661, !1667, !1671, !1672, !1673, !1677, !1681, !1682, !1683, !1684, !1690, !1694, !1695, !1758, !1759, !1760, !1761, !4376, !4391}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !1646, file: !1363, line: 1936, baseType: !1649, size: 64)
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 64)
!1650 = !DISubroutineType(types: !1651)
!1651 = !{!1421, !1591}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !1646, file: !1363, line: 1937, baseType: !1653, size: 64, offset: 64)
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 64)
!1654 = !DISubroutineType(types: !1655)
!1655 = !{null, !1421}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !1646, file: !1363, line: 1938, baseType: !1653, size: 64, offset: 128)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !1646, file: !1363, line: 1940, baseType: !1658, size: 64, offset: 192)
!1658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1659, size: 64)
!1659 = !DISubroutineType(types: !1660)
!1660 = !{null, !1421, !78}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !1646, file: !1363, line: 1941, baseType: !1662, size: 64, offset: 256)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 64)
!1663 = !DISubroutineType(types: !1664)
!1664 = !{!78, !1421, !1665}
!1665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1666, size: 64)
!1666 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !60, line: 40, flags: DIFlagFwdDecl)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !1646, file: !1363, line: 1942, baseType: !1668, size: 64, offset: 320)
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 64)
!1669 = !DISubroutineType(types: !1670)
!1670 = !{!78, !1421}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !1646, file: !1363, line: 1943, baseType: !1653, size: 64, offset: 384)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !1646, file: !1363, line: 1944, baseType: !1621, size: 64, offset: 448)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !1646, file: !1363, line: 1945, baseType: !1674, size: 64, offset: 512)
!1674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1675, size: 64)
!1675 = !DISubroutineType(types: !1676)
!1676 = !{!78, !1591, !78}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !1646, file: !1363, line: 1946, baseType: !1678, size: 64, offset: 576)
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 64)
!1679 = !DISubroutineType(types: !1680)
!1680 = !{!78, !1591}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !1646, file: !1363, line: 1947, baseType: !1678, size: 64, offset: 640)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !1646, file: !1363, line: 1948, baseType: !1678, size: 64, offset: 704)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !1646, file: !1363, line: 1949, baseType: !1678, size: 64, offset: 768)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !1646, file: !1363, line: 1950, baseType: !1685, size: 64, offset: 832)
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 64)
!1686 = !DISubroutineType(types: !1687)
!1687 = !{!78, !1384, !1688}
!1688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 64)
!1689 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !1363, line: 57, flags: DIFlagFwdDecl)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !1646, file: !1363, line: 1951, baseType: !1691, size: 64, offset: 896)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64)
!1692 = !DISubroutineType(types: !1693)
!1693 = !{!78, !1591, !1047, !1084}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !1646, file: !1363, line: 1952, baseType: !1621, size: 64, offset: 960)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1646, file: !1363, line: 1954, baseType: !1696, size: 64, offset: 1024)
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 64)
!1697 = !DISubroutineType(types: !1698)
!1698 = !{!78, !1699, !1384}
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 64)
!1700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !1701, line: 16, size: 896, elements: !1702)
!1701 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!1702 = !{!1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1731, !1753, !1754, !1757}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1700, file: !1701, line: 17, baseType: !1084, size: 64)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1700, file: !1701, line: 18, baseType: !1085, size: 64, offset: 64)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1700, file: !1701, line: 19, baseType: !1085, size: 64, offset: 128)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1700, file: !1701, line: 20, baseType: !1085, size: 64, offset: 192)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !1700, file: !1701, line: 21, baseType: !1085, size: 64, offset: 256)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1700, file: !1701, line: 22, baseType: !1522, size: 64, offset: 320)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !1700, file: !1701, line: 23, baseType: !1522, size: 64, offset: 384)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1700, file: !1701, line: 24, baseType: !1711, size: 192, offset: 448)
!1711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1712, line: 53, size: 192, elements: !1713)
!1712 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1713 = !{!1714, !1715, !1730}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1711, file: !1712, line: 54, baseType: !417, size: 64)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1711, file: !1712, line: 55, baseType: !1716, offset: 64)
!1716 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !1717, line: 83, baseType: !1718)
!1717 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !1717, line: 71, elements: !1719)
!1719 = !{!1720}
!1720 = !DIDerivedType(tag: DW_TAG_member, scope: !1718, file: !1717, line: 72, baseType: !1721)
!1721 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1718, file: !1717, line: 72, elements: !1722)
!1722 = !{!1723}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !1721, file: !1717, line: 73, baseType: !1724)
!1724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !1717, line: 20, elements: !1725)
!1725 = !{!1726}
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1724, file: !1717, line: 21, baseType: !1727)
!1727 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !1728, line: 25, baseType: !1729)
!1728 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!1729 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1728, line: 25, elements: !1633)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1711, file: !1712, line: 59, baseType: !330, size: 128, offset: 64)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1700, file: !1701, line: 25, baseType: !1732, size: 64, offset: 640)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 64)
!1733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1734)
!1734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !1701, line: 31, size: 256, elements: !1735)
!1735 = !{!1736, !1741, !1745, !1749}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1734, file: !1701, line: 32, baseType: !1737, size: 64)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 64)
!1738 = !DISubroutineType(types: !1739)
!1739 = !{!637, !1699, !1740}
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1734, file: !1701, line: 33, baseType: !1742, size: 64, offset: 64)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 64)
!1743 = !DISubroutineType(types: !1744)
!1744 = !{null, !1699, !637}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1734, file: !1701, line: 34, baseType: !1746, size: 64, offset: 128)
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 64)
!1747 = !DISubroutineType(types: !1748)
!1748 = !{!637, !1699, !637, !1740}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1734, file: !1701, line: 35, baseType: !1750, size: 64, offset: 192)
!1750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1751, size: 64)
!1751 = !DISubroutineType(types: !1752)
!1752 = !{!78, !1699, !637}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !1700, file: !1701, line: 26, baseType: !78, size: 32, offset: 704)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1700, file: !1701, line: 27, baseType: !1755, size: 64, offset: 768)
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1756, size: 64)
!1756 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1362)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1700, file: !1701, line: 28, baseType: !637, size: 64, offset: 832)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !1646, file: !1363, line: 1955, baseType: !1696, size: 64, offset: 1088)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1646, file: !1363, line: 1956, baseType: !1696, size: 64, offset: 1152)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !1646, file: !1363, line: 1957, baseType: !1696, size: 64, offset: 1216)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !1646, file: !1363, line: 1963, baseType: !1762, size: 64, offset: 1280)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 64)
!1763 = !DISubroutineType(types: !1764)
!1764 = !{!78, !1591, !1765, !1788}
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 64)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !1767, line: 68, size: 512, align: 128, elements: !1768)
!1767 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!1768 = !{!1769, !1770, !4368, !4375}
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1766, file: !1767, line: 69, baseType: !358, size: 64)
!1770 = !DIDerivedType(tag: DW_TAG_member, scope: !1766, file: !1767, line: 77, baseType: !1771, size: 320, offset: 64)
!1771 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1766, file: !1767, line: 77, size: 320, elements: !1772)
!1772 = !{!1773, !2078, !2083, !2111, !2119, !2125, !4292, !4367}
!1773 = !DIDerivedType(tag: DW_TAG_member, scope: !1771, file: !1767, line: 78, baseType: !1774, size: 320)
!1774 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1771, file: !1767, line: 78, size: 320, elements: !1775)
!1775 = !{!1776, !1777, !2076, !2077}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1774, file: !1767, line: 84, baseType: !330, size: 128)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1774, file: !1767, line: 86, baseType: !1778, size: 64, offset: 128)
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 64)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !1363, line: 451, size: 1216, align: 64, elements: !1780)
!1780 = !{!1781, !1782, !1790, !1791, !1792, !1800, !1809, !1810, !1811, !1812, !2069, !2070, !2073, !2074, !2075}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1779, file: !1363, line: 452, baseType: !1421, size: 64)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !1779, file: !1363, line: 453, baseType: !1783, size: 128, offset: 64)
!1783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1784, line: 292, size: 128, elements: !1785)
!1784 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1785 = !{!1786, !1787, !1789}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1783, file: !1784, line: 293, baseType: !1716)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1783, file: !1784, line: 295, baseType: !1788, size: 32)
!1788 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !323, line: 148, baseType: !7)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1783, file: !1784, line: 296, baseType: !637, size: 64, offset: 64)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1779, file: !1363, line: 454, baseType: !1788, size: 32, offset: 192)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !1779, file: !1363, line: 455, baseType: !429, size: 32, offset: 224)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !1779, file: !1363, line: 460, baseType: !1793, size: 128, offset: 256)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !480, line: 125, size: 128, elements: !1794)
!1794 = !{!1795, !1799}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1793, file: !480, line: 126, baseType: !1796, size: 64)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !480, line: 31, size: 64, elements: !1797)
!1797 = !{!1798}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1796, file: !480, line: 32, baseType: !484, size: 64)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1793, file: !480, line: 127, baseType: !484, size: 64, offset: 64)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !1779, file: !1363, line: 461, baseType: !1801, size: 256, offset: 384)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1802, line: 35, size: 256, elements: !1803)
!1802 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1803 = !{!1804, !1805, !1806, !1808}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1801, file: !1802, line: 36, baseType: !417, size: 64)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1801, file: !1802, line: 42, baseType: !417, size: 64, offset: 64)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1801, file: !1802, line: 46, baseType: !1807, offset: 128)
!1807 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !1717, line: 29, baseType: !1724)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1801, file: !1802, line: 47, baseType: !330, size: 128, offset: 128)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !1779, file: !1363, line: 462, baseType: !358, size: 64, offset: 640)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !1779, file: !1363, line: 463, baseType: !358, size: 64, offset: 704)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !1779, file: !1363, line: 464, baseType: !358, size: 64, offset: 768)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !1779, file: !1363, line: 465, baseType: !1813, size: 64, offset: 832)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 64)
!1814 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1815)
!1815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !1363, line: 367, size: 1408, elements: !1816)
!1816 = !{!1817, !1821, !1825, !1829, !1833, !1837, !1843, !1849, !1853, !1858, !1862, !1866, !1870, !2033, !2037, !2043, !2044, !2045, !2049, !2054, !2058, !2065}
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !1815, file: !1363, line: 368, baseType: !1818, size: 64)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64)
!1819 = !DISubroutineType(types: !1820)
!1820 = !{!78, !1765, !1665}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !1815, file: !1363, line: 369, baseType: !1822, size: 64, offset: 64)
!1822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1823, size: 64)
!1823 = !DISubroutineType(types: !1824)
!1824 = !{!78, !1361, !1765}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !1815, file: !1363, line: 372, baseType: !1826, size: 64, offset: 128)
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 64)
!1827 = !DISubroutineType(types: !1828)
!1828 = !{!78, !1778, !1665}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !1815, file: !1363, line: 375, baseType: !1830, size: 64, offset: 192)
!1830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1831, size: 64)
!1831 = !DISubroutineType(types: !1832)
!1832 = !{!78, !1765}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !1815, file: !1363, line: 381, baseType: !1834, size: 64, offset: 256)
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 64)
!1835 = !DISubroutineType(types: !1836)
!1836 = !{!78, !1361, !1778, !333, !7}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !1815, file: !1363, line: 383, baseType: !1838, size: 64, offset: 320)
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 64)
!1839 = !DISubroutineType(types: !1840)
!1840 = !{null, !1841}
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 64)
!1842 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1363, line: 290, flags: DIFlagFwdDecl)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !1815, file: !1363, line: 385, baseType: !1844, size: 64, offset: 384)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 64)
!1845 = !DISubroutineType(types: !1846)
!1846 = !{!78, !1361, !1778, !1522, !7, !7, !1847, !1848}
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 64)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !637, size: 64)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !1815, file: !1363, line: 388, baseType: !1850, size: 64, offset: 448)
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 64)
!1851 = !DISubroutineType(types: !1852)
!1852 = !{!78, !1361, !1778, !1522, !7, !7, !1765, !637}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !1815, file: !1363, line: 393, baseType: !1854, size: 64, offset: 512)
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 64)
!1855 = !DISubroutineType(types: !1856)
!1856 = !{!1857, !1778, !1857}
!1857 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !323, line: 125, baseType: !377)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !1815, file: !1363, line: 394, baseType: !1859, size: 64, offset: 576)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 64)
!1860 = !DISubroutineType(types: !1861)
!1861 = !{null, !1765, !7, !7}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !1815, file: !1363, line: 395, baseType: !1863, size: 64, offset: 640)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 64)
!1864 = !DISubroutineType(types: !1865)
!1865 = !{!78, !1765, !1788}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !1815, file: !1363, line: 396, baseType: !1867, size: 64, offset: 704)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 64)
!1868 = !DISubroutineType(types: !1869)
!1869 = !{null, !1765}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !1815, file: !1363, line: 397, baseType: !1871, size: 64, offset: 768)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 64)
!1872 = !DISubroutineType(types: !1873)
!1873 = !{!1567, !1874, !1894}
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 64)
!1875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !1363, line: 320, size: 384, elements: !1876)
!1876 = !{!1877, !1878, !1879, !1883, !1884, !1885, !1886, !1887}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1875, file: !1363, line: 321, baseType: !1361, size: 64)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1875, file: !1363, line: 326, baseType: !1522, size: 64, offset: 64)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1875, file: !1363, line: 327, baseType: !1880, size: 64, offset: 128)
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 64)
!1881 = !DISubroutineType(types: !1882)
!1882 = !{null, !1874, !1044, !1044}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1875, file: !1363, line: 328, baseType: !637, size: 64, offset: 192)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1875, file: !1363, line: 329, baseType: !78, size: 32, offset: 256)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1875, file: !1363, line: 330, baseType: !627, size: 16, offset: 288)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1875, file: !1363, line: 331, baseType: !627, size: 16, offset: 304)
!1887 = !DIDerivedType(tag: DW_TAG_member, scope: !1875, file: !1363, line: 332, baseType: !1888, size: 64, offset: 320)
!1888 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1875, file: !1363, line: 332, size: 64, elements: !1889)
!1889 = !{!1890, !1891}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1888, file: !1363, line: 333, baseType: !7, size: 32)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1888, file: !1363, line: 334, baseType: !1892, size: 64)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 64)
!1893 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1363, line: 334, flags: DIFlagFwdDecl)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 64)
!1895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !1896, line: 29, size: 320, elements: !1897)
!1896 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1897 = !{!1898, !1899, !1900, !1901, !2024}
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1895, file: !1896, line: 35, baseType: !7, size: 32)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !1895, file: !1896, line: 36, baseType: !1085, size: 64, offset: 64)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1895, file: !1896, line: 37, baseType: !1085, size: 64, offset: 128)
!1901 = !DIDerivedType(tag: DW_TAG_member, scope: !1895, file: !1896, line: 38, baseType: !1902, size: 64, offset: 192)
!1902 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1895, file: !1896, line: 38, size: 64, elements: !1903)
!1903 = !{!1904, !1912, !1919, !1928}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !1902, file: !1896, line: 39, baseType: !1905, size: 64)
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 64)
!1906 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1907)
!1907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !1908, line: 17, size: 128, elements: !1909)
!1908 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1909 = !{!1910, !1911}
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1907, file: !1908, line: 19, baseType: !637, size: 64)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1907, file: !1908, line: 20, baseType: !1086, size: 64, offset: 64)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !1902, file: !1896, line: 40, baseType: !1913, size: 64)
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1914, size: 64)
!1914 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1915)
!1915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !1896, line: 15, size: 128, elements: !1916)
!1916 = !{!1917, !1918}
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1915, file: !1896, line: 16, baseType: !637, size: 64)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1915, file: !1896, line: 17, baseType: !1085, size: 64, offset: 64)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !1902, file: !1896, line: 41, baseType: !1920, size: 64)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64)
!1921 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1922)
!1922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !1923, line: 31, size: 128, elements: !1924)
!1923 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!1924 = !{!1925, !1926, !1927}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !1922, file: !1923, line: 32, baseType: !1765, size: 64)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !1922, file: !1923, line: 33, baseType: !7, size: 32, offset: 64)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !1922, file: !1923, line: 34, baseType: !7, size: 32, offset: 96)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !1902, file: !1896, line: 42, baseType: !1929, size: 64)
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 64)
!1930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1931, line: 57, size: 1088, elements: !1932)
!1931 = !DIFile(filename: "./include/linux/pipe_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!1932 = !{!1933, !1934, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1970, !1971, !1998}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1930, file: !1931, line: 58, baseType: !1711, size: 192)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "rd_wait", scope: !1930, file: !1931, line: 59, baseType: !1935, size: 128, offset: 192)
!1935 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1936, line: 40, baseType: !1937)
!1936 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1936, line: 36, size: 128, elements: !1938)
!1938 = !{!1939, !1940}
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1937, file: !1936, line: 37, baseType: !1716)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1937, file: !1936, line: 38, baseType: !330, size: 128)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "wr_wait", scope: !1930, file: !1931, line: 59, baseType: !1935, size: 128, offset: 320)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1930, file: !1931, line: 60, baseType: !7, size: 32, offset: 448)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1930, file: !1931, line: 61, baseType: !7, size: 32, offset: 480)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "max_usage", scope: !1930, file: !1931, line: 62, baseType: !7, size: 32, offset: 512)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "ring_size", scope: !1930, file: !1931, line: 63, baseType: !7, size: 32, offset: 544)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "nr_accounted", scope: !1930, file: !1931, line: 67, baseType: !7, size: 32, offset: 576)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !1930, file: !1931, line: 68, baseType: !7, size: 32, offset: 608)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !1930, file: !1931, line: 69, baseType: !7, size: 32, offset: 640)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1930, file: !1931, line: 70, baseType: !7, size: 32, offset: 672)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "r_counter", scope: !1930, file: !1931, line: 71, baseType: !7, size: 32, offset: 704)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "w_counter", scope: !1930, file: !1931, line: 72, baseType: !7, size: 32, offset: 736)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_page", scope: !1930, file: !1931, line: 73, baseType: !1765, size: 64, offset: 768)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_readers", scope: !1930, file: !1931, line: 74, baseType: !1954, size: 64, offset: 832)
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 64)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !1363, line: 1314, size: 320, elements: !1956)
!1956 = !{!1957, !1965, !1966, !1967, !1968, !1969}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !1955, file: !1363, line: 1315, baseType: !1958)
!1958 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !1959, line: 20, baseType: !1960)
!1959 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1960 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1959, line: 11, elements: !1961)
!1961 = !{!1962}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1960, file: !1959, line: 12, baseType: !1963)
!1963 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !1728, line: 33, baseType: !1964)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1728, line: 31, elements: !1633)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1955, file: !1363, line: 1316, baseType: !78, size: 32)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !1955, file: !1363, line: 1317, baseType: !78, size: 32, offset: 32)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !1955, file: !1363, line: 1318, baseType: !1954, size: 64, offset: 64)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !1955, file: !1363, line: 1319, baseType: !1361, size: 64, offset: 128)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !1955, file: !1363, line: 1320, baseType: !345, size: 128, align: 64, offset: 192)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_writers", scope: !1930, file: !1931, line: 75, baseType: !1954, size: 64, offset: 896)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "bufs", scope: !1930, file: !1931, line: 76, baseType: !1972, size: 64, offset: 960)
!1972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1973, size: 64)
!1973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buffer", file: !1931, line: 26, size: 320, elements: !1974)
!1974 = !{!1975, !1976, !1977, !1978, !1996, !1997}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1973, file: !1931, line: 27, baseType: !1765, size: 64)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1973, file: !1931, line: 28, baseType: !7, size: 32, offset: 64)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1973, file: !1931, line: 28, baseType: !7, size: 32, offset: 96)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1973, file: !1931, line: 29, baseType: !1979, size: 64, offset: 128)
!1979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1980, size: 64)
!1980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1981)
!1981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buf_operations", file: !1931, line: 93, size: 256, elements: !1982)
!1982 = !{!1983, !1987, !1991, !1995}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "confirm", scope: !1981, file: !1931, line: 101, baseType: !1984, size: 64)
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 64)
!1985 = !DISubroutineType(types: !1986)
!1986 = !{!78, !1929, !1972}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1981, file: !1931, line: 107, baseType: !1988, size: 64, offset: 64)
!1988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 64)
!1989 = !DISubroutineType(types: !1990)
!1990 = !{null, !1929, !1972}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "try_steal", scope: !1981, file: !1931, line: 117, baseType: !1992, size: 64, offset: 128)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!1993 = !DISubroutineType(types: !1994)
!1994 = !{!817, !1929, !1972}
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !1981, file: !1931, line: 122, baseType: !1992, size: 64, offset: 192)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1973, file: !1931, line: 30, baseType: !7, size: 32, offset: 192)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1973, file: !1931, line: 31, baseType: !358, size: 64, offset: 256)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1930, file: !1931, line: 77, baseType: !1999, size: 64, offset: 1024)
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 64)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !2001, line: 13, size: 896, elements: !2002)
!2001 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!2002 = !{!2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2000, file: !2001, line: 14, baseType: !614, size: 32)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !2000, file: !2001, line: 15, baseType: !429, size: 32, offset: 32)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !2000, file: !2001, line: 16, baseType: !429, size: 32, offset: 64)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !2000, file: !2001, line: 21, baseType: !417, size: 64, offset: 128)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !2000, file: !2001, line: 27, baseType: !358, size: 64, offset: 192)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !2000, file: !2001, line: 28, baseType: !358, size: 64, offset: 256)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !2000, file: !2001, line: 29, baseType: !417, size: 64, offset: 320)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !2000, file: !2001, line: 32, baseType: !322, size: 128, offset: 384)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2000, file: !2001, line: 33, baseType: !1428, size: 32, offset: 512)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2000, file: !2001, line: 37, baseType: !417, size: 64, offset: 576)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !2000, file: !2001, line: 44, baseType: !2014, size: 256, offset: 640)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !2015, line: 15, size: 256, elements: !2016)
!2015 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!2016 = !{!2017, !2018, !2019, !2020, !2021, !2022, !2023}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2014, file: !2015, line: 16, baseType: !1807)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !2014, file: !2015, line: 18, baseType: !78, size: 32)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !2014, file: !2015, line: 19, baseType: !78, size: 32, offset: 32)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !2014, file: !2015, line: 20, baseType: !78, size: 32, offset: 64)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !2014, file: !2015, line: 21, baseType: !78, size: 32, offset: 96)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !2014, file: !2015, line: 22, baseType: !358, size: 64, offset: 128)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2014, file: !2015, line: 23, baseType: !358, size: 64, offset: 192)
!2024 = !DIDerivedType(tag: DW_TAG_member, scope: !1895, file: !1896, line: 44, baseType: !2025, size: 64, offset: 256)
!2025 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1895, file: !1896, line: 44, size: 64, elements: !2026)
!2026 = !{!2027, !2028}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !2025, file: !1896, line: 45, baseType: !358, size: 64)
!2028 = !DIDerivedType(tag: DW_TAG_member, scope: !2025, file: !1896, line: 46, baseType: !2029, size: 64)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2025, file: !1896, line: 46, size: 64, elements: !2030)
!2030 = !{!2031, !2032}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2029, file: !1896, line: 47, baseType: !7, size: 32)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !2029, file: !1896, line: 48, baseType: !7, size: 32, offset: 32)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !1815, file: !1363, line: 402, baseType: !2034, size: 64, offset: 832)
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 64)
!2035 = !DISubroutineType(types: !2036)
!2036 = !{!78, !1778, !1765, !1765, !52}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !1815, file: !1363, line: 404, baseType: !2038, size: 64, offset: 896)
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 64)
!2039 = !DISubroutineType(types: !2040)
!2040 = !{!817, !1765, !2041}
!2041 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !2042, line: 305, baseType: !7)
!2042 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !1815, file: !1363, line: 405, baseType: !1867, size: 64, offset: 960)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !1815, file: !1363, line: 406, baseType: !1830, size: 64, offset: 1024)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !1815, file: !1363, line: 407, baseType: !2046, size: 64, offset: 1088)
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 64)
!2047 = !DISubroutineType(types: !2048)
!2048 = !{!78, !1765, !358, !358}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !1815, file: !1363, line: 409, baseType: !2050, size: 64, offset: 1152)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 64)
!2051 = !DISubroutineType(types: !2052)
!2052 = !{null, !1765, !2053, !2053}
!2053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 64)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !1815, file: !1363, line: 410, baseType: !2055, size: 64, offset: 1216)
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 64)
!2056 = !DISubroutineType(types: !2057)
!2057 = !{!78, !1778, !1765}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !1815, file: !1363, line: 413, baseType: !2059, size: 64, offset: 1280)
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 64)
!2060 = !DISubroutineType(types: !2061)
!2061 = !{!78, !2062, !1361, !2064}
!2062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2063, size: 64)
!2063 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !1363, line: 61, flags: DIFlagFwdDecl)
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 64)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !1815, file: !1363, line: 415, baseType: !2066, size: 64, offset: 1344)
!2066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2067, size: 64)
!2067 = !DISubroutineType(types: !2068)
!2068 = !{null, !1361}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1779, file: !1363, line: 466, baseType: !358, size: 64, offset: 896)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !1779, file: !1363, line: 467, baseType: !2071, size: 32, offset: 960)
!2071 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !2072, line: 8, baseType: !1033)
!2072 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !1779, file: !1363, line: 468, baseType: !1716, offset: 992)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !1779, file: !1363, line: 469, baseType: !330, size: 128, offset: 1024)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1779, file: !1363, line: 470, baseType: !637, size: 64, offset: 1152)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1774, file: !1767, line: 87, baseType: !358, size: 64, offset: 192)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1774, file: !1767, line: 94, baseType: !358, size: 64, offset: 256)
!2078 = !DIDerivedType(tag: DW_TAG_member, scope: !1771, file: !1767, line: 96, baseType: !2079, size: 64)
!2079 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1771, file: !1767, line: 96, size: 64, elements: !2080)
!2080 = !{!2081}
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !2079, file: !1767, line: 101, baseType: !2082, size: 64)
!2082 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !323, line: 143, baseType: !377)
!2083 = !DIDerivedType(tag: DW_TAG_member, scope: !1771, file: !1767, line: 103, baseType: !2084, size: 320)
!2084 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1771, file: !1767, line: 103, size: 320, elements: !2085)
!2085 = !{!2086, !2096, !2099, !2100}
!2086 = !DIDerivedType(tag: DW_TAG_member, scope: !2084, file: !1767, line: 104, baseType: !2087, size: 128)
!2087 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2084, file: !1767, line: 104, size: 128, elements: !2088)
!2088 = !{!2089, !2090}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !2087, file: !1767, line: 105, baseType: !330, size: 128)
!2090 = !DIDerivedType(tag: DW_TAG_member, scope: !2087, file: !1767, line: 106, baseType: !2091, size: 128)
!2091 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2087, file: !1767, line: 106, size: 128, elements: !2092)
!2092 = !{!2093, !2094, !2095}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2091, file: !1767, line: 107, baseType: !1765, size: 64)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2091, file: !1767, line: 109, baseType: !78, size: 32, offset: 64)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !2091, file: !1767, line: 110, baseType: !78, size: 32, offset: 96)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !2084, file: !1767, line: 117, baseType: !2097, size: 64, offset: 128)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 64)
!2098 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !1767, line: 117, flags: DIFlagFwdDecl)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !2084, file: !1767, line: 119, baseType: !637, size: 64, offset: 192)
!2100 = !DIDerivedType(tag: DW_TAG_member, scope: !2084, file: !1767, line: 120, baseType: !2101, size: 64, offset: 256)
!2101 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2084, file: !1767, line: 120, size: 64, elements: !2102)
!2102 = !{!2103, !2104, !2105}
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !2101, file: !1767, line: 121, baseType: !637, size: 64)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !2101, file: !1767, line: 122, baseType: !358, size: 64)
!2105 = !DIDerivedType(tag: DW_TAG_member, scope: !2101, file: !1767, line: 123, baseType: !2106, size: 32)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2101, file: !1767, line: 123, size: 32, elements: !2107)
!2107 = !{!2108, !2109, !2110}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !2106, file: !1767, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2106, file: !1767, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2106, file: !1767, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2111 = !DIDerivedType(tag: DW_TAG_member, scope: !1771, file: !1767, line: 130, baseType: !2112, size: 192)
!2112 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1771, file: !1767, line: 130, size: 192, elements: !2113)
!2113 = !{!2114, !2115, !2116, !2117, !2118}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !2112, file: !1767, line: 131, baseType: !358, size: 64)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !2112, file: !1767, line: 134, baseType: !528, size: 8, offset: 64)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !2112, file: !1767, line: 135, baseType: !528, size: 8, offset: 72)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !2112, file: !1767, line: 136, baseType: !429, size: 32, offset: 96)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !2112, file: !1767, line: 137, baseType: !7, size: 32, offset: 128)
!2119 = !DIDerivedType(tag: DW_TAG_member, scope: !1771, file: !1767, line: 139, baseType: !2120, size: 256)
!2120 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1771, file: !1767, line: 139, size: 256, elements: !2121)
!2121 = !{!2122, !2123, !2124}
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !2120, file: !1767, line: 140, baseType: !358, size: 64)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !2120, file: !1767, line: 141, baseType: !429, size: 32, offset: 64)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !2120, file: !1767, line: 143, baseType: !330, size: 128, offset: 128)
!2125 = !DIDerivedType(tag: DW_TAG_member, scope: !1771, file: !1767, line: 145, baseType: !2126, size: 256)
!2126 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1771, file: !1767, line: 145, size: 256, elements: !2127)
!2127 = !{!2128, !2129, !2132, !2133, !4291}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !2126, file: !1767, line: 146, baseType: !358, size: 64)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !2126, file: !1767, line: 147, baseType: !2130, size: 64, offset: 64)
!2130 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !2131, line: 509, baseType: !1765)
!2131 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !2126, file: !1767, line: 148, baseType: !358, size: 64, offset: 128)
!2133 = !DIDerivedType(tag: DW_TAG_member, scope: !2126, file: !1767, line: 149, baseType: !2134, size: 64, offset: 192)
!2134 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2126, file: !1767, line: 149, size: 64, elements: !2135)
!2135 = !{!2136, !4290}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !2134, file: !1767, line: 150, baseType: !2137, size: 64)
!2137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2138, size: 64)
!2138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !1767, line: 388, size: 7296, elements: !2139)
!2139 = !{!2140, !4288}
!2140 = !DIDerivedType(tag: DW_TAG_member, scope: !2138, file: !1767, line: 389, baseType: !2141, size: 7296)
!2141 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2138, file: !1767, line: 389, size: 7296, elements: !2142)
!2142 = !{!2143, !2261, !2262, !2263, !2267, !2268, !2269, !2270, !2271, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2312, !2320, !2323, !2362, !2363, !4272, !4273, !4276, !4277, !4278, !4281, !4282, !4283, !4286, !4287}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2141, file: !1767, line: 390, baseType: !2144, size: 64)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 64)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !1767, line: 305, size: 1472, elements: !2146)
!2146 = !{!2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2161, !2162, !2167, !2168, !2171, !2255, !2256, !2257, !2258, !2259}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !2145, file: !1767, line: 308, baseType: !358, size: 64)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !2145, file: !1767, line: 309, baseType: !358, size: 64, offset: 64)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !2145, file: !1767, line: 313, baseType: !2144, size: 64, offset: 128)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !2145, file: !1767, line: 313, baseType: !2144, size: 64, offset: 192)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !2145, file: !1767, line: 315, baseType: !479, size: 192, align: 64, offset: 256)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !2145, file: !1767, line: 323, baseType: !358, size: 64, offset: 448)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !2145, file: !1767, line: 327, baseType: !2137, size: 64, offset: 512)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !2145, file: !1767, line: 333, baseType: !2155, size: 64, offset: 576)
!2155 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !2131, line: 284, baseType: !2156)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !2131, line: 284, size: 64, elements: !2157)
!2157 = !{!2158}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !2156, file: !2131, line: 284, baseType: !2159, size: 64)
!2159 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !2160, line: 19, baseType: !358)
!2160 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !2145, file: !1767, line: 334, baseType: !358, size: 64, offset: 640)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !2145, file: !1767, line: 343, baseType: !2163, size: 256, offset: 704)
!2163 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2145, file: !1767, line: 340, size: 256, elements: !2164)
!2164 = !{!2165, !2166}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !2163, file: !1767, line: 341, baseType: !479, size: 192, align: 64)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !2163, file: !1767, line: 342, baseType: !358, size: 64, offset: 192)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !2145, file: !1767, line: 351, baseType: !330, size: 128, offset: 960)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !2145, file: !1767, line: 353, baseType: !2169, size: 64, offset: 1088)
!2169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2170, size: 64)
!2170 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !1767, line: 353, flags: DIFlagFwdDecl)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !2145, file: !1767, line: 356, baseType: !2172, size: 64, offset: 1152)
!2172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2173, size: 64)
!2173 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2174)
!2174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !60, line: 557, size: 832, elements: !2175)
!2175 = !{!2176, !2180, !2181, !2185, !2189, !2229, !2233, !2237, !2241, !2242, !2243, !2247, !2251}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2174, file: !60, line: 558, baseType: !2177, size: 64)
!2177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2178, size: 64)
!2178 = !DISubroutineType(types: !2179)
!2179 = !{null, !2144}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !2174, file: !60, line: 559, baseType: !2177, size: 64, offset: 64)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !2174, file: !60, line: 560, baseType: !2182, size: 64, offset: 128)
!2182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2183, size: 64)
!2183 = !DISubroutineType(types: !2184)
!2184 = !{!78, !2144, !358}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !2174, file: !60, line: 561, baseType: !2186, size: 64, offset: 192)
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2187, size: 64)
!2187 = !DISubroutineType(types: !2188)
!2188 = !{!78, !2144}
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !2174, file: !60, line: 562, baseType: !2190, size: 64, offset: 256)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2191, size: 64)
!2191 = !DISubroutineType(types: !2192)
!2192 = !{!2193, !2194}
!2193 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !1767, line: 682, baseType: !7)
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 64)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !60, line: 508, size: 768, elements: !2196)
!2196 = !{!2197, !2198, !2199, !2200, !2201, !2202, !2209, !2216, !2222, !2223, !2224, !2226, !2228}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !2195, file: !60, line: 509, baseType: !2144, size: 64)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2195, file: !60, line: 510, baseType: !7, size: 32, offset: 64)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2195, file: !60, line: 511, baseType: !1788, size: 32, offset: 96)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !2195, file: !60, line: 512, baseType: !358, size: 64, offset: 128)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !2195, file: !60, line: 513, baseType: !358, size: 64, offset: 192)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2195, file: !60, line: 514, baseType: !2203, size: 64, offset: 256)
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 64)
!2204 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !2131, line: 385, baseType: !2205)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2131, line: 385, size: 64, elements: !2206)
!2206 = !{!2207}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2205, file: !2131, line: 385, baseType: !2208, size: 64)
!2208 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !2160, line: 15, baseType: !358)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2195, file: !60, line: 516, baseType: !2210, size: 64, offset: 320)
!2210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2211, size: 64)
!2211 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !2131, line: 359, baseType: !2212)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2131, line: 359, size: 64, elements: !2213)
!2213 = !{!2214}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2212, file: !2131, line: 359, baseType: !2215, size: 64)
!2215 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !2160, line: 16, baseType: !358)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !2195, file: !60, line: 519, baseType: !2217, size: 64, offset: 384)
!2217 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !2160, line: 21, baseType: !2218)
!2218 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2160, line: 21, size: 64, elements: !2219)
!2219 = !{!2220}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2218, file: !2160, line: 21, baseType: !2221, size: 64)
!2221 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !2160, line: 14, baseType: !358)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !2195, file: !60, line: 521, baseType: !1765, size: 64, offset: 448)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2195, file: !60, line: 522, baseType: !1765, size: 64, offset: 512)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2195, file: !60, line: 528, baseType: !2225, size: 64, offset: 576)
!2225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 64)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2195, file: !60, line: 532, baseType: !2227, size: 64, offset: 640)
!2227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 64)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !2195, file: !60, line: 536, baseType: !2130, size: 64, offset: 704)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !2174, file: !60, line: 563, baseType: !2230, size: 64, offset: 320)
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 64)
!2231 = !DISubroutineType(types: !2232)
!2232 = !{!2193, !2194, !59}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !2174, file: !60, line: 565, baseType: !2234, size: 64, offset: 384)
!2234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2235, size: 64)
!2235 = !DISubroutineType(types: !2236)
!2236 = !{null, !2194, !358, !358}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !2174, file: !60, line: 567, baseType: !2238, size: 64, offset: 448)
!2238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2239, size: 64)
!2239 = !DISubroutineType(types: !2240)
!2240 = !{!358, !2144}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !2174, file: !60, line: 571, baseType: !2190, size: 64, offset: 512)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !2174, file: !60, line: 574, baseType: !2190, size: 64, offset: 576)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !2174, file: !60, line: 579, baseType: !2244, size: 64, offset: 640)
!2244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2245, size: 64)
!2245 = !DISubroutineType(types: !2246)
!2246 = !{!78, !2144, !358, !637, !78, !78}
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2174, file: !60, line: 585, baseType: !2248, size: 64, offset: 704)
!2248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2249, size: 64)
!2249 = !DISubroutineType(types: !2250)
!2250 = !{!338, !2144}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !2174, file: !60, line: 615, baseType: !2252, size: 64, offset: 768)
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 64)
!2253 = !DISubroutineType(types: !2254)
!2254 = !{!1765, !2144, !358}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !2145, file: !1767, line: 359, baseType: !358, size: 64, offset: 1216)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !2145, file: !1767, line: 361, baseType: !1361, size: 64, offset: 1280)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !2145, file: !1767, line: 362, baseType: !637, size: 64, offset: 1344)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !2145, file: !1767, line: 365, baseType: !417, size: 64, offset: 1408)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !2145, file: !1767, line: 373, baseType: !2260, offset: 1472)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !1767, line: 296, elements: !1633)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !2141, file: !1767, line: 391, baseType: !1796, size: 64, offset: 64)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !2141, file: !1767, line: 392, baseType: !377, size: 64, offset: 128)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2141, file: !1767, line: 394, baseType: !2264, size: 64, offset: 192)
!2264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2265, size: 64)
!2265 = !DISubroutineType(types: !2266)
!2266 = !{!358, !1361, !358, !358, !358, !358}
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !2141, file: !1767, line: 398, baseType: !358, size: 64, offset: 256)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !2141, file: !1767, line: 399, baseType: !358, size: 64, offset: 320)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !2141, file: !1767, line: 405, baseType: !358, size: 64, offset: 384)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !2141, file: !1767, line: 406, baseType: !358, size: 64, offset: 448)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2141, file: !1767, line: 407, baseType: !2272, size: 64, offset: 512)
!2272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 64)
!2273 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !2131, line: 286, baseType: !2274)
!2274 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2131, line: 286, size: 64, elements: !2275)
!2275 = !{!2276}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2274, file: !2131, line: 286, baseType: !2277, size: 64)
!2277 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !2160, line: 18, baseType: !358)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !2141, file: !1767, line: 416, baseType: !429, size: 32, offset: 576)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !2141, file: !1767, line: 428, baseType: !429, size: 32, offset: 608)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !2141, file: !1767, line: 437, baseType: !429, size: 32, offset: 640)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !2141, file: !1767, line: 447, baseType: !429, size: 32, offset: 672)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !2141, file: !1767, line: 450, baseType: !417, size: 64, offset: 704)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !2141, file: !1767, line: 452, baseType: !78, size: 32, offset: 768)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !2141, file: !1767, line: 454, baseType: !1716, offset: 800)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !2141, file: !1767, line: 457, baseType: !1801, size: 256, offset: 832)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !2141, file: !1767, line: 459, baseType: !330, size: 128, offset: 1088)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !2141, file: !1767, line: 466, baseType: !358, size: 64, offset: 1216)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !2141, file: !1767, line: 467, baseType: !358, size: 64, offset: 1280)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !2141, file: !1767, line: 469, baseType: !358, size: 64, offset: 1344)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2141, file: !1767, line: 470, baseType: !358, size: 64, offset: 1408)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !2141, file: !1767, line: 471, baseType: !419, size: 64, offset: 1472)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !2141, file: !1767, line: 472, baseType: !358, size: 64, offset: 1536)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !2141, file: !1767, line: 473, baseType: !358, size: 64, offset: 1600)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !2141, file: !1767, line: 474, baseType: !358, size: 64, offset: 1664)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !2141, file: !1767, line: 475, baseType: !358, size: 64, offset: 1728)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !2141, file: !1767, line: 477, baseType: !1716, offset: 1792)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !2141, file: !1767, line: 478, baseType: !358, size: 64, offset: 1792)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !2141, file: !1767, line: 478, baseType: !358, size: 64, offset: 1856)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !2141, file: !1767, line: 478, baseType: !358, size: 64, offset: 1920)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !2141, file: !1767, line: 478, baseType: !358, size: 64, offset: 1984)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !2141, file: !1767, line: 479, baseType: !358, size: 64, offset: 2048)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !2141, file: !1767, line: 479, baseType: !358, size: 64, offset: 2112)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !2141, file: !1767, line: 479, baseType: !358, size: 64, offset: 2176)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !2141, file: !1767, line: 480, baseType: !358, size: 64, offset: 2240)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !2141, file: !1767, line: 480, baseType: !358, size: 64, offset: 2304)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !2141, file: !1767, line: 480, baseType: !358, size: 64, offset: 2368)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !2141, file: !1767, line: 480, baseType: !358, size: 64, offset: 2432)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !2141, file: !1767, line: 482, baseType: !2309, size: 2816, offset: 2496)
!2309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 2816, elements: !2310)
!2310 = !{!2311}
!2311 = !DISubrange(count: 44)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !2141, file: !1767, line: 488, baseType: !2313, size: 256, offset: 5312)
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !2314, line: 60, size: 256, elements: !2315)
!2314 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!2315 = !{!2316}
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2313, file: !2314, line: 61, baseType: !2317, size: 256)
!2317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !417, size: 256, elements: !2318)
!2318 = !{!2319}
!2319 = !DISubrange(count: 4)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !2141, file: !1767, line: 490, baseType: !2321, size: 64, offset: 5568)
!2321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2322, size: 64)
!2322 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !1767, line: 490, flags: DIFlagFwdDecl)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2141, file: !1767, line: 493, baseType: !2324, size: 896, offset: 5632)
!2324 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !2325, line: 53, baseType: !2326)
!2325 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!2326 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2325, line: 13, size: 896, elements: !2327)
!2327 = !{!2328, !2329, !2330, !2331, !2334, !2335, !2336, !2337, !2357, !2358, !2359}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !2326, file: !2325, line: 18, baseType: !377, size: 64)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !2326, file: !2325, line: 28, baseType: !419, size: 64, offset: 64)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !2326, file: !2325, line: 31, baseType: !1801, size: 256, offset: 128)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !2326, file: !2325, line: 32, baseType: !2332, size: 64, offset: 384)
!2332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2333, size: 64)
!2333 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !2325, line: 32, flags: DIFlagFwdDecl)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !2326, file: !2325, line: 37, baseType: !522, size: 16, offset: 448)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2326, file: !2325, line: 40, baseType: !1711, size: 192, offset: 512)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !2326, file: !2325, line: 41, baseType: !637, size: 64, offset: 704)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !2326, file: !2325, line: 42, baseType: !2338, size: 64, offset: 768)
!2338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2339, size: 64)
!2339 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2340)
!2340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !2341, line: 13, size: 896, elements: !2342)
!2341 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!2342 = !{!2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2340, file: !2341, line: 14, baseType: !637, size: 64)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2340, file: !2341, line: 15, baseType: !358, size: 64, offset: 64)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2340, file: !2341, line: 17, baseType: !358, size: 64, offset: 128)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !2340, file: !2341, line: 17, baseType: !358, size: 64, offset: 192)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !2340, file: !2341, line: 19, baseType: !1044, size: 64, offset: 256)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !2340, file: !2341, line: 21, baseType: !1044, size: 64, offset: 320)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !2340, file: !2341, line: 22, baseType: !1044, size: 64, offset: 384)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !2340, file: !2341, line: 23, baseType: !1044, size: 64, offset: 448)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !2340, file: !2341, line: 24, baseType: !1044, size: 64, offset: 512)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !2340, file: !2341, line: 25, baseType: !1044, size: 64, offset: 576)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !2340, file: !2341, line: 26, baseType: !1044, size: 64, offset: 640)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !2340, file: !2341, line: 27, baseType: !1044, size: 64, offset: 704)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !2340, file: !2341, line: 28, baseType: !1044, size: 64, offset: 768)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !2340, file: !2341, line: 29, baseType: !1044, size: 64, offset: 832)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !2326, file: !2325, line: 44, baseType: !429, size: 32, offset: 832)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !2326, file: !2325, line: 50, baseType: !627, size: 16, offset: 864)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !2326, file: !2325, line: 51, baseType: !2360, size: 16, offset: 880)
!2360 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !378, line: 18, baseType: !2361)
!2361 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !380, line: 23, baseType: !671)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2141, file: !1767, line: 495, baseType: !358, size: 64, offset: 6528)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !2141, file: !1767, line: 497, baseType: !2364, size: 64, offset: 6592)
!2364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2365, size: 64)
!2365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !1767, line: 381, size: 384, elements: !2366)
!2366 = !{!2367, !2368, !4271}
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2365, file: !1767, line: 382, baseType: !429, size: 32)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !2365, file: !1767, line: 383, baseType: !2369, size: 128, offset: 64)
!2369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !1767, line: 376, size: 128, elements: !2370)
!2370 = !{!2371, !4269}
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2369, file: !1767, line: 377, baseType: !2372, size: 64)
!2372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2373, size: 64)
!2373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !2374, line: 640, size: 48640, elements: !2375)
!2374 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!2375 = !{!2376, !2382, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2397, !2415, !2426, !2507, !2508, !2509, !2520, !2521, !2523, !2524, !2525, !2526, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2604, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2637, !2639, !2640, !2641, !2653, !2654, !2655, !2656, !2657, !2658, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2682, !2687, !2995, !2996, !2997, !2998, !2999, !3002, !3005, !3008, !3011, !3732, !3828, !3859, !3860, !3861, !3862, !3863, !3864, !3865, !3866, !3867, !3876, !3877, !3878, !3879, !3880, !3885, !3886, !3887, !3890, !3891, !3894, !3897, !3900, !3903, !3935, !3938, !3939, !4018, !4019, !4022, !4023, !4026, !4027, !4028, !4032, !4033, !4034, !4047, !4048, !4049, !4059, !4064, !4065, !4071, !4072, !4073, !4074, !4075, !4076, !4077, !4078, !4092, !4093, !4094, !4095, !4096, !4097, !4098, !4099, !4100}
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !2373, file: !2374, line: 646, baseType: !2377, size: 128)
!2377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !2378, line: 56, size: 128, elements: !2379)
!2378 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!2379 = !{!2380, !2381}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2377, file: !2378, line: 57, baseType: !358, size: 64)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2377, file: !2378, line: 58, baseType: !1033, size: 32, offset: 64)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2373, file: !2374, line: 649, baseType: !2383, size: 64, offset: 128)
!2383 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1044)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2373, file: !2374, line: 657, baseType: !637, size: 64, offset: 192)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2373, file: !2374, line: 658, baseType: !614, size: 32, offset: 256)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2373, file: !2374, line: 660, baseType: !7, size: 32, offset: 288)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !2373, file: !2374, line: 661, baseType: !7, size: 32, offset: 320)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2373, file: !2374, line: 684, baseType: !78, size: 32, offset: 352)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2373, file: !2374, line: 686, baseType: !78, size: 32, offset: 384)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !2373, file: !2374, line: 687, baseType: !78, size: 32, offset: 416)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !2373, file: !2374, line: 688, baseType: !78, size: 32, offset: 448)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !2373, file: !2374, line: 689, baseType: !7, size: 32, offset: 480)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !2373, file: !2374, line: 691, baseType: !2394, size: 64, offset: 512)
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2395, size: 64)
!2395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2396)
!2396 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !2374, line: 691, flags: DIFlagFwdDecl)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !2373, file: !2374, line: 692, baseType: !2398, size: 832, offset: 576)
!2398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !2374, line: 451, size: 832, elements: !2399)
!2399 = !{!2400, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413}
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !2398, file: !2374, line: 453, baseType: !2401, size: 128)
!2401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !2374, line: 325, size: 128, elements: !2402)
!2402 = !{!2403, !2404}
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2401, file: !2374, line: 326, baseType: !358, size: 64)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !2401, file: !2374, line: 327, baseType: !1033, size: 32, offset: 64)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !2398, file: !2374, line: 454, baseType: !479, size: 192, align: 64, offset: 128)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !2398, file: !2374, line: 455, baseType: !330, size: 128, offset: 320)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2398, file: !2374, line: 456, baseType: !7, size: 32, offset: 448)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !2398, file: !2374, line: 458, baseType: !377, size: 64, offset: 512)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2398, file: !2374, line: 459, baseType: !377, size: 64, offset: 576)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !2398, file: !2374, line: 460, baseType: !377, size: 64, offset: 640)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !2398, file: !2374, line: 461, baseType: !377, size: 64, offset: 704)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !2398, file: !2374, line: 463, baseType: !377, size: 64, offset: 768)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !2398, file: !2374, line: 465, baseType: !2414, offset: 832)
!2414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !2374, line: 415, elements: !1633)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2373, file: !2374, line: 693, baseType: !2416, size: 384, offset: 1408)
!2416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !2374, line: 489, size: 384, elements: !2417)
!2417 = !{!2418, !2419, !2420, !2421, !2422, !2423, !2424}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !2416, file: !2374, line: 490, baseType: !330, size: 128)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2416, file: !2374, line: 491, baseType: !358, size: 64, offset: 128)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !2416, file: !2374, line: 492, baseType: !358, size: 64, offset: 192)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !2416, file: !2374, line: 493, baseType: !7, size: 32, offset: 256)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2416, file: !2374, line: 494, baseType: !522, size: 16, offset: 288)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !2416, file: !2374, line: 495, baseType: !522, size: 16, offset: 304)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2416, file: !2374, line: 497, baseType: !2425, size: 64, offset: 320)
!2425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2416, size: 64)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !2373, file: !2374, line: 697, baseType: !2427, size: 1792, offset: 1792)
!2427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !2374, line: 507, size: 1792, elements: !2428)
!2428 = !{!2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2504, !2505}
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2427, file: !2374, line: 508, baseType: !479, size: 192, align: 64)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !2427, file: !2374, line: 515, baseType: !377, size: 64, offset: 192)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !2427, file: !2374, line: 516, baseType: !377, size: 64, offset: 256)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !2427, file: !2374, line: 517, baseType: !377, size: 64, offset: 320)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !2427, file: !2374, line: 518, baseType: !377, size: 64, offset: 384)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !2427, file: !2374, line: 519, baseType: !377, size: 64, offset: 448)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !2427, file: !2374, line: 526, baseType: !423, size: 64, offset: 512)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2427, file: !2374, line: 527, baseType: !377, size: 64, offset: 576)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2427, file: !2374, line: 528, baseType: !7, size: 32, offset: 640)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !2427, file: !2374, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !2427, file: !2374, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !2427, file: !2374, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !2427, file: !2374, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !2427, file: !2374, line: 563, baseType: !2443, size: 512, offset: 704)
!2443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !66, line: 118, size: 512, elements: !2444)
!2444 = !{!2445, !2451, !2452, !2457, !2500, !2501, !2502, !2503}
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2443, file: !66, line: 119, baseType: !2446, size: 256)
!2446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !2447, line: 9, size: 256, elements: !2448)
!2447 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!2448 = !{!2449, !2450}
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2446, file: !2447, line: 10, baseType: !479, size: 192, align: 64)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2446, file: !2447, line: 11, baseType: !499, size: 64, offset: 192)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !2443, file: !66, line: 120, baseType: !499, size: 64, offset: 256)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2443, file: !66, line: 121, baseType: !2453, size: 64, offset: 320)
!2453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2454, size: 64)
!2454 = !DISubroutineType(types: !2455)
!2455 = !{!65, !2456}
!2456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2443, size: 64)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2443, file: !66, line: 122, baseType: !2458, size: 64, offset: 384)
!2458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2459, size: 64)
!2459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !66, line: 159, size: 512, align: 512, elements: !2460)
!2460 = !{!2461, !2481, !2482, !2485, !2490, !2491, !2495, !2499}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !2459, file: !66, line: 160, baseType: !2462, size: 64)
!2462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2463, size: 64)
!2463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !66, line: 214, size: 4608, align: 512, elements: !2464)
!2464 = !{!2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477}
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2463, file: !66, line: 215, baseType: !1807)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2463, file: !66, line: 216, baseType: !7, size: 32)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !2463, file: !66, line: 217, baseType: !7, size: 32, offset: 32)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !2463, file: !66, line: 218, baseType: !7, size: 32, offset: 64)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !2463, file: !66, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !2463, file: !66, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !2463, file: !66, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !2463, file: !66, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !2463, file: !66, line: 233, baseType: !499, size: 64, offset: 128)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !2463, file: !66, line: 234, baseType: !2456, size: 64, offset: 192)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !2463, file: !66, line: 235, baseType: !499, size: 64, offset: 256)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !2463, file: !66, line: 236, baseType: !2456, size: 64, offset: 320)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !2463, file: !66, line: 237, baseType: !2478, size: 4096, offset: 512)
!2478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2459, size: 4096, elements: !2479)
!2479 = !{!2480}
!2480 = !DISubrange(count: 8)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2459, file: !66, line: 161, baseType: !7, size: 32, offset: 64)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2459, file: !66, line: 162, baseType: !2483, size: 32, offset: 96)
!2483 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !323, line: 27, baseType: !2484)
!2484 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !1087, line: 96, baseType: !78)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2459, file: !66, line: 163, baseType: !2486, size: 32, offset: 128)
!2486 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !1390, line: 276, baseType: !2487)
!2487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !1390, line: 276, size: 32, elements: !2488)
!2488 = !{!2489}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2487, file: !1390, line: 276, baseType: !1394, size: 32)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !2459, file: !66, line: 164, baseType: !2456, size: 64, offset: 192)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2459, file: !66, line: 165, baseType: !2492, size: 128, offset: 256)
!2492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !2447, line: 14, size: 128, elements: !2493)
!2493 = !{!2494}
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2492, file: !2447, line: 15, baseType: !1793, size: 128)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !2459, file: !66, line: 166, baseType: !2496, size: 64, offset: 384)
!2496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 64)
!2497 = !DISubroutineType(types: !2498)
!2498 = !{!499}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2459, file: !66, line: 167, baseType: !499, size: 64, offset: 448)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2443, file: !66, line: 123, baseType: !840, size: 8, offset: 448)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !2443, file: !66, line: 124, baseType: !840, size: 8, offset: 456)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !2443, file: !66, line: 125, baseType: !840, size: 8, offset: 464)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !2443, file: !66, line: 126, baseType: !840, size: 8, offset: 472)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !2427, file: !2374, line: 572, baseType: !2443, size: 512, offset: 1216)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !2427, file: !2374, line: 580, baseType: !2506, size: 64, offset: 1728)
!2506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 64)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2373, file: !2374, line: 721, baseType: !7, size: 32, offset: 3584)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !2373, file: !2374, line: 722, baseType: !78, size: 32, offset: 3616)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !2373, file: !2374, line: 723, baseType: !2510, size: 64, offset: 3648)
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 64)
!2511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2512)
!2512 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !2513, line: 17, baseType: !2514)
!2513 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!2514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !2513, line: 17, size: 64, elements: !2515)
!2515 = !{!2516}
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2514, file: !2513, line: 17, baseType: !2517, size: 64)
!2517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 64, elements: !2518)
!2518 = !{!2519}
!2519 = !DISubrange(count: 1)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !2373, file: !2374, line: 724, baseType: !2512, size: 64, offset: 3712)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !2373, file: !2374, line: 749, baseType: !2522, offset: 3776)
!2522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !2374, line: 290, elements: !1633)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2373, file: !2374, line: 751, baseType: !330, size: 128, offset: 3776)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !2373, file: !2374, line: 757, baseType: !2137, size: 64, offset: 3904)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !2373, file: !2374, line: 758, baseType: !2137, size: 64, offset: 3968)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !2373, file: !2374, line: 761, baseType: !2527, size: 320, offset: 4032)
!2527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !2314, line: 34, size: 320, elements: !2528)
!2528 = !{!2529, !2530}
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !2527, file: !2314, line: 35, baseType: !377, size: 64)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !2527, file: !2314, line: 36, baseType: !2531, size: 256, offset: 64)
!2531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2144, size: 256, elements: !2318)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !2373, file: !2374, line: 766, baseType: !78, size: 32, offset: 4352)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !2373, file: !2374, line: 767, baseType: !78, size: 32, offset: 4384)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !2373, file: !2374, line: 768, baseType: !78, size: 32, offset: 4416)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !2373, file: !2374, line: 770, baseType: !78, size: 32, offset: 4448)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !2373, file: !2374, line: 772, baseType: !358, size: 64, offset: 4480)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !2373, file: !2374, line: 775, baseType: !7, size: 32, offset: 4544)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !2373, file: !2374, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !2373, file: !2374, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !2373, file: !2374, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !2373, file: !2374, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !2373, file: !2374, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !2373, file: !2374, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !2373, file: !2374, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !2373, file: !2374, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !2373, file: !2374, line: 831, baseType: !358, size: 64, offset: 4672)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !2373, file: !2374, line: 833, baseType: !2548, size: 384, offset: 4736)
!2548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !71, line: 25, size: 384, elements: !2549)
!2549 = !{!2550, !2555}
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2548, file: !71, line: 26, baseType: !2551, size: 64)
!2551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2552, size: 64)
!2552 = !DISubroutineType(types: !2553)
!2553 = !{!1044, !2554}
!2554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2548, size: 64)
!2555 = !DIDerivedType(tag: DW_TAG_member, scope: !2548, file: !71, line: 27, baseType: !2556, size: 320, offset: 64)
!2556 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2548, file: !71, line: 27, size: 320, elements: !2557)
!2557 = !{!2558, !2568, !2594}
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !2556, file: !71, line: 36, baseType: !2559, size: 320)
!2559 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2556, file: !71, line: 29, size: 320, elements: !2560)
!2560 = !{!2561, !2563, !2564, !2565, !2566, !2567}
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !2559, file: !71, line: 30, baseType: !2562, size: 64)
!2562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2559, file: !71, line: 31, baseType: !1033, size: 32, offset: 64)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2559, file: !71, line: 32, baseType: !1033, size: 32, offset: 96)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !2559, file: !71, line: 33, baseType: !1033, size: 32, offset: 128)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2559, file: !71, line: 34, baseType: !377, size: 64, offset: 192)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !2559, file: !71, line: 35, baseType: !2562, size: 64, offset: 256)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !2556, file: !71, line: 46, baseType: !2569, size: 192)
!2569 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2556, file: !71, line: 38, size: 192, elements: !2570)
!2570 = !{!2571, !2572, !2573, !2593}
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2569, file: !71, line: 39, baseType: !2483, size: 32)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2569, file: !71, line: 40, baseType: !70, size: 32, offset: 32)
!2573 = !DIDerivedType(tag: DW_TAG_member, scope: !2569, file: !71, line: 41, baseType: !2574, size: 64, offset: 64)
!2574 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2569, file: !71, line: 41, size: 64, elements: !2575)
!2575 = !{!2576, !2584}
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !2574, file: !71, line: 42, baseType: !2577, size: 64)
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 64)
!2578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !2579, line: 7, size: 128, elements: !2580)
!2579 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!2580 = !{!2581, !2583}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2578, file: !2579, line: 8, baseType: !2582, size: 64)
!2582 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !1087, line: 93, baseType: !425)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2578, file: !2579, line: 9, baseType: !425, size: 64, offset: 64)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !2574, file: !71, line: 43, baseType: !2585, size: 64)
!2585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2586, size: 64)
!2586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !2587, line: 7, size: 64, elements: !2588)
!2587 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!2588 = !{!2589, !2592}
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2586, file: !2587, line: 8, baseType: !2590, size: 32)
!2590 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !2587, line: 5, baseType: !2591)
!2591 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !378, line: 20, baseType: !988)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2586, file: !2587, line: 9, baseType: !2591, size: 32, offset: 32)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2569, file: !71, line: 45, baseType: !377, size: 64, offset: 128)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2556, file: !71, line: 54, baseType: !2595, size: 256)
!2595 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2556, file: !71, line: 48, size: 256, elements: !2596)
!2596 = !{!2597, !2600, !2601, !2602, !2603}
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !2595, file: !71, line: 49, baseType: !2598, size: 64)
!2598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2599, size: 64)
!2599 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !71, line: 14, flags: DIFlagFwdDecl)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !2595, file: !71, line: 50, baseType: !78, size: 32, offset: 64)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !2595, file: !71, line: 51, baseType: !78, size: 32, offset: 96)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2595, file: !71, line: 52, baseType: !358, size: 64, offset: 128)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2595, file: !71, line: 53, baseType: !358, size: 64, offset: 192)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2373, file: !2374, line: 835, baseType: !2605, size: 32, offset: 5120)
!2605 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !323, line: 22, baseType: !2606)
!2606 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !1087, line: 28, baseType: !78)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !2373, file: !2374, line: 836, baseType: !2605, size: 32, offset: 5152)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !2373, file: !2374, line: 840, baseType: !358, size: 64, offset: 5184)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !2373, file: !2374, line: 849, baseType: !2372, size: 64, offset: 5248)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2373, file: !2374, line: 852, baseType: !2372, size: 64, offset: 5312)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2373, file: !2374, line: 857, baseType: !330, size: 128, offset: 5376)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !2373, file: !2374, line: 858, baseType: !330, size: 128, offset: 5504)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !2373, file: !2374, line: 859, baseType: !2372, size: 64, offset: 5632)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !2373, file: !2374, line: 867, baseType: !330, size: 128, offset: 5696)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !2373, file: !2374, line: 868, baseType: !330, size: 128, offset: 5824)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !2373, file: !2374, line: 871, baseType: !2617, size: 64, offset: 5952)
!2617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2618, size: 64)
!2618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !2619, line: 59, size: 768, elements: !2620)
!2619 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!2620 = !{!2621, !2622, !2623, !2624, !2626, !2627, !2628, !2629}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2618, file: !2619, line: 61, baseType: !614, size: 32)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2618, file: !2619, line: 62, baseType: !7, size: 32, offset: 32)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2618, file: !2619, line: 63, baseType: !1716, offset: 64)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2618, file: !2619, line: 65, baseType: !2625, size: 256, offset: 64)
!2625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1627, size: 256, elements: !2318)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2618, file: !2619, line: 66, baseType: !1627, size: 64, offset: 320)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !2618, file: !2619, line: 68, baseType: !1935, size: 128, offset: 384)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2618, file: !2619, line: 69, baseType: !345, size: 128, align: 64, offset: 512)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !2618, file: !2619, line: 70, baseType: !2630, size: 128, offset: 640)
!2630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2631, size: 128, elements: !2518)
!2631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !2619, line: 54, size: 128, elements: !2632)
!2632 = !{!2633, !2634}
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !2631, file: !2619, line: 55, baseType: !78, size: 32)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2631, file: !2619, line: 56, baseType: !2635, size: 64, offset: 64)
!2635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2636, size: 64)
!2636 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !2619, line: 56, flags: DIFlagFwdDecl)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !2373, file: !2374, line: 872, baseType: !2638, size: 512, offset: 6016)
!2638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !322, size: 512, elements: !2318)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !2373, file: !2374, line: 873, baseType: !330, size: 128, offset: 6528)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !2373, file: !2374, line: 874, baseType: !330, size: 128, offset: 6656)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !2373, file: !2374, line: 876, baseType: !2642, size: 64, offset: 6784)
!2642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2643, size: 64)
!2643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2644, line: 26, size: 192, elements: !2645)
!2644 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2645 = !{!2646, !2647}
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2643, file: !2644, line: 27, baseType: !7, size: 32)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2643, file: !2644, line: 28, baseType: !2648, size: 128, offset: 64)
!2648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2649, line: 43, size: 128, elements: !2650)
!2649 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2650 = !{!2651, !2652}
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2648, file: !2649, line: 44, baseType: !1807)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2648, file: !2649, line: 45, baseType: !330, size: 128)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !2373, file: !2374, line: 879, baseType: !1047, size: 64, offset: 6848)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !2373, file: !2374, line: 882, baseType: !1047, size: 64, offset: 6912)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2373, file: !2374, line: 884, baseType: !377, size: 64, offset: 6976)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2373, file: !2374, line: 885, baseType: !377, size: 64, offset: 7040)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2373, file: !2374, line: 890, baseType: !377, size: 64, offset: 7104)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2373, file: !2374, line: 891, baseType: !2659, size: 128, offset: 7168)
!2659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !2374, line: 242, size: 128, elements: !2660)
!2660 = !{!2661, !2662, !2663}
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2659, file: !2374, line: 244, baseType: !377, size: 64)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2659, file: !2374, line: 245, baseType: !377, size: 64, offset: 64)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2659, file: !2374, line: 246, baseType: !1807, offset: 128)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2373, file: !2374, line: 900, baseType: !358, size: 64, offset: 7296)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2373, file: !2374, line: 901, baseType: !358, size: 64, offset: 7360)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2373, file: !2374, line: 904, baseType: !377, size: 64, offset: 7424)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !2373, file: !2374, line: 907, baseType: !377, size: 64, offset: 7488)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2373, file: !2374, line: 910, baseType: !358, size: 64, offset: 7552)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2373, file: !2374, line: 911, baseType: !358, size: 64, offset: 7616)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2373, file: !2374, line: 914, baseType: !2671, size: 640, offset: 7680)
!2671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !2672, line: 123, size: 640, elements: !2673)
!2672 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!2673 = !{!2674, !2680, !2681}
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !2671, file: !2672, line: 124, baseType: !2675, size: 576)
!2675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2676, size: 576, elements: !1638)
!2676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !2672, line: 108, size: 192, elements: !2677)
!2677 = !{!2678, !2679}
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !2676, file: !2672, line: 109, baseType: !377, size: 64)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !2676, file: !2672, line: 110, baseType: !2492, size: 128, offset: 64)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !2671, file: !2672, line: 125, baseType: !7, size: 32, offset: 576)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !2671, file: !2672, line: 126, baseType: !7, size: 32, offset: 608)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !2373, file: !2374, line: 917, baseType: !2683, size: 192, offset: 8320)
!2683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !2672, line: 134, size: 192, elements: !2684)
!2684 = !{!2685, !2686}
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2683, file: !2672, line: 135, baseType: !345, size: 128, align: 64)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !2683, file: !2672, line: 136, baseType: !7, size: 32, offset: 128)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !2373, file: !2374, line: 923, baseType: !2688, size: 64, offset: 8512)
!2688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2689, size: 64)
!2689 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2690)
!2690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !2691, line: 111, size: 1280, elements: !2692)
!2691 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!2692 = !{!2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2712, !2713, !2714, !2715, !2716, !2717, !2822, !2823, !2824, !2825, !2826, !2982, !2990}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2690, file: !2691, line: 112, baseType: !429, size: 32)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2690, file: !2691, line: 120, baseType: !1428, size: 32, offset: 32)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2690, file: !2691, line: 121, baseType: !1436, size: 32, offset: 64)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !2690, file: !2691, line: 122, baseType: !1428, size: 32, offset: 96)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !2690, file: !2691, line: 123, baseType: !1436, size: 32, offset: 128)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2690, file: !2691, line: 124, baseType: !1428, size: 32, offset: 160)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !2690, file: !2691, line: 125, baseType: !1436, size: 32, offset: 192)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !2690, file: !2691, line: 126, baseType: !1428, size: 32, offset: 224)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !2690, file: !2691, line: 127, baseType: !1436, size: 32, offset: 256)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !2690, file: !2691, line: 128, baseType: !7, size: 32, offset: 288)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !2690, file: !2691, line: 129, baseType: !2704, size: 64, offset: 320)
!2704 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !2705, line: 26, baseType: !2706)
!2705 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!2706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !2705, line: 24, size: 64, elements: !2707)
!2707 = !{!2708}
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2706, file: !2705, line: 25, baseType: !2709, size: 64)
!2709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 64, elements: !2710)
!2710 = !{!2711}
!2711 = !DISubrange(count: 2)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !2690, file: !2691, line: 130, baseType: !2704, size: 64, offset: 384)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !2690, file: !2691, line: 131, baseType: !2704, size: 64, offset: 448)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !2690, file: !2691, line: 132, baseType: !2704, size: 64, offset: 512)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !2690, file: !2691, line: 133, baseType: !2704, size: 64, offset: 576)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !2690, file: !2691, line: 135, baseType: !528, size: 8, offset: 640)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !2690, file: !2691, line: 137, baseType: !2718, size: 64, offset: 704)
!2718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2719, size: 64)
!2719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !2720, line: 189, size: 1664, elements: !2721)
!2720 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!2721 = !{!2722, !2723, !2726, !2731, !2732, !2735, !2736, !2741, !2742, !2743, !2744, !2746, !2747, !2748, !2749, !2750, !2786, !2807}
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2719, file: !2720, line: 190, baseType: !614, size: 32)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !2719, file: !2720, line: 191, baseType: !2724, size: 32, offset: 32)
!2724 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !2720, line: 28, baseType: !2725)
!2725 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !323, line: 98, baseType: !2591)
!2726 = !DIDerivedType(tag: DW_TAG_member, scope: !2719, file: !2720, line: 192, baseType: !2727, size: 192, offset: 64)
!2727 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2719, file: !2720, line: 192, size: 192, elements: !2728)
!2728 = !{!2729, !2730}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !2727, file: !2720, line: 193, baseType: !330, size: 128)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !2727, file: !2720, line: 194, baseType: !479, size: 192, align: 64)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !2719, file: !2720, line: 199, baseType: !1801, size: 256, offset: 256)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2719, file: !2720, line: 200, baseType: !2733, size: 64, offset: 512)
!2733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2734, size: 64)
!2734 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !2720, line: 200, flags: DIFlagFwdDecl)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !2719, file: !2720, line: 201, baseType: !637, size: 64, offset: 576)
!2736 = !DIDerivedType(tag: DW_TAG_member, scope: !2719, file: !2720, line: 202, baseType: !2737, size: 64, offset: 640)
!2737 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2719, file: !2720, line: 202, size: 64, elements: !2738)
!2738 = !{!2739, !2740}
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !2737, file: !2720, line: 203, baseType: !1529, size: 64)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !2737, file: !2720, line: 204, baseType: !1529, size: 64)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !2719, file: !2720, line: 206, baseType: !1529, size: 64, offset: 704)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2719, file: !2720, line: 207, baseType: !1428, size: 32, offset: 768)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2719, file: !2720, line: 208, baseType: !1436, size: 32, offset: 800)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !2719, file: !2720, line: 209, baseType: !2745, size: 32, offset: 832)
!2745 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !2720, line: 31, baseType: !1548)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !2719, file: !2720, line: 210, baseType: !522, size: 16, offset: 864)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !2719, file: !2720, line: 211, baseType: !522, size: 16, offset: 880)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2719, file: !2720, line: 215, baseType: !671, size: 16, offset: 896)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2719, file: !2720, line: 222, baseType: !358, size: 64, offset: 960)
!2750 = !DIDerivedType(tag: DW_TAG_member, scope: !2719, file: !2720, line: 239, baseType: !2751, size: 320, offset: 1024)
!2751 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2719, file: !2720, line: 239, size: 320, elements: !2752)
!2752 = !{!2753, !2778}
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !2751, file: !2720, line: 240, baseType: !2754, size: 320)
!2754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !2720, line: 108, size: 320, elements: !2755)
!2755 = !{!2756, !2757, !2767, !2770, !2777}
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2754, file: !2720, line: 110, baseType: !358, size: 64)
!2757 = !DIDerivedType(tag: DW_TAG_member, scope: !2754, file: !2720, line: 111, baseType: !2758, size: 64, offset: 64)
!2758 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2754, file: !2720, line: 111, size: 64, elements: !2759)
!2759 = !{!2760, !2766}
!2760 = !DIDerivedType(tag: DW_TAG_member, scope: !2758, file: !2720, line: 112, baseType: !2761, size: 64)
!2761 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2758, file: !2720, line: 112, size: 64, elements: !2762)
!2762 = !{!2763, !2764}
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !2761, file: !2720, line: 114, baseType: !627, size: 16)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !2761, file: !2720, line: 115, baseType: !2765, size: 48, offset: 16)
!2765 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 48, elements: !1045)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2758, file: !2720, line: 121, baseType: !358, size: 64)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2754, file: !2720, line: 123, baseType: !2768, size: 64, offset: 128)
!2768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2769, size: 64)
!2769 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !2720, line: 96, flags: DIFlagFwdDecl)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2754, file: !2720, line: 124, baseType: !2771, size: 64, offset: 192)
!2771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2772, size: 64)
!2772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !2720, line: 102, size: 192, elements: !2773)
!2773 = !{!2774, !2775, !2776}
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2772, file: !2720, line: 103, baseType: !345, size: 128, align: 64)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2772, file: !2720, line: 104, baseType: !614, size: 32, offset: 128)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !2772, file: !2720, line: 105, baseType: !817, size: 8, offset: 160)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2754, file: !2720, line: 125, baseType: !338, size: 64, offset: 256)
!2778 = !DIDerivedType(tag: DW_TAG_member, scope: !2751, file: !2720, line: 241, baseType: !2779, size: 320)
!2779 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2751, file: !2720, line: 241, size: 320, elements: !2780)
!2780 = !{!2781, !2782, !2783, !2784, !2785}
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2779, file: !2720, line: 242, baseType: !358, size: 64)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !2779, file: !2720, line: 243, baseType: !358, size: 64, offset: 64)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2779, file: !2720, line: 244, baseType: !2768, size: 64, offset: 128)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2779, file: !2720, line: 245, baseType: !2771, size: 64, offset: 192)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2779, file: !2720, line: 246, baseType: !1084, size: 64, offset: 256)
!2786 = !DIDerivedType(tag: DW_TAG_member, scope: !2719, file: !2720, line: 254, baseType: !2787, size: 256, offset: 1344)
!2787 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2719, file: !2720, line: 254, size: 256, elements: !2788)
!2788 = !{!2789, !2795}
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !2787, file: !2720, line: 255, baseType: !2790, size: 256)
!2790 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !2720, line: 128, size: 256, elements: !2791)
!2791 = !{!2792, !2793}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !2790, file: !2720, line: 129, baseType: !637, size: 64)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2790, file: !2720, line: 130, baseType: !2794, size: 256)
!2794 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 256, elements: !2318)
!2795 = !DIDerivedType(tag: DW_TAG_member, scope: !2787, file: !2720, line: 256, baseType: !2796, size: 256)
!2796 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2787, file: !2720, line: 256, size: 256, elements: !2797)
!2797 = !{!2798, !2799}
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !2796, file: !2720, line: 258, baseType: !330, size: 128)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !2796, file: !2720, line: 259, baseType: !2800, size: 128, offset: 128)
!2800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !2801, line: 22, size: 128, elements: !2802)
!2801 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!2802 = !{!2803, !2806}
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2800, file: !2801, line: 23, baseType: !2804, size: 64)
!2804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2805, size: 64)
!2805 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !2801, line: 23, flags: DIFlagFwdDecl)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !2800, file: !2801, line: 24, baseType: !358, size: 64, offset: 64)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !2719, file: !2720, line: 274, baseType: !2808, size: 64, offset: 1600)
!2808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2809, size: 64)
!2809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !2720, line: 170, size: 192, elements: !2810)
!2810 = !{!2811, !2820, !2821}
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2809, file: !2720, line: 171, baseType: !2812, size: 64)
!2812 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !2720, line: 165, baseType: !2813)
!2813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2814, size: 64)
!2814 = !DISubroutineType(types: !2815)
!2815 = !{!78, !2718, !2816, !2818, !2718}
!2816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 64)
!2817 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2769)
!2818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2819, size: 64)
!2819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2790)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2809, file: !2720, line: 172, baseType: !2718, size: 64, offset: 64)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !2809, file: !2720, line: 173, baseType: !2768, size: 64, offset: 128)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !2690, file: !2691, line: 138, baseType: !2718, size: 64, offset: 768)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !2690, file: !2691, line: 139, baseType: !2718, size: 64, offset: 832)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !2690, file: !2691, line: 140, baseType: !2718, size: 64, offset: 896)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2690, file: !2691, line: 145, baseType: !1999, size: 64, offset: 960)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2690, file: !2691, line: 146, baseType: !2827, size: 64, offset: 1024)
!2827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2828, size: 64)
!2828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !2829, line: 56, size: 4160, elements: !2830)
!2829 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2830 = !{!2831, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2870, !2871, !2872, !2873, !2874, !2886, !2967, !2968, !2980}
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !2828, file: !2829, line: 57, baseType: !2832, size: 576)
!2832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !2829, line: 23, size: 576, elements: !2833)
!2833 = !{!2834, !2835}
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !2832, file: !2829, line: 24, baseType: !1033, size: 32)
!2835 = !DIDerivedType(tag: DW_TAG_member, scope: !2832, file: !2829, line: 25, baseType: !2836, size: 512, offset: 64)
!2836 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2832, file: !2829, line: 25, size: 512, elements: !2837)
!2837 = !{!2838, !2847}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !2836, file: !2829, line: 26, baseType: !2839, size: 480)
!2839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2840, size: 480, elements: !2845)
!2840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !2829, line: 17, size: 96, elements: !2841)
!2841 = !{!2842, !2843, !2844}
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2840, file: !2829, line: 18, baseType: !1033, size: 32)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !2840, file: !2829, line: 19, baseType: !1033, size: 32, offset: 32)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2840, file: !2829, line: 20, baseType: !1033, size: 32, offset: 64)
!2845 = !{!2846}
!2846 = !DISubrange(count: 5)
!2847 = !DIDerivedType(tag: DW_TAG_member, scope: !2836, file: !2829, line: 27, baseType: !2848, size: 128)
!2848 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2836, file: !2829, line: 27, size: 128, elements: !2849)
!2849 = !{!2850, !2852}
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !2848, file: !2829, line: 28, baseType: !2851, size: 64)
!2851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2840, size: 64)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !2848, file: !2829, line: 29, baseType: !2851, size: 64, offset: 64)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !2828, file: !2829, line: 58, baseType: !2832, size: 576, offset: 576)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !2828, file: !2829, line: 59, baseType: !2832, size: 576, offset: 1152)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2828, file: !2829, line: 60, baseType: !429, size: 32, offset: 1728)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2828, file: !2829, line: 61, baseType: !2827, size: 64, offset: 1792)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2828, file: !2829, line: 62, baseType: !78, size: 32, offset: 1856)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2828, file: !2829, line: 63, baseType: !1428, size: 32, offset: 1888)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2828, file: !2829, line: 64, baseType: !1436, size: 32, offset: 1920)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2828, file: !2829, line: 65, baseType: !2861, size: 192, offset: 1984)
!2861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !2862, line: 7, size: 192, elements: !2863)
!2862 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!2863 = !{!2864, !2865, !2869}
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !2861, file: !2862, line: 8, baseType: !417, size: 64)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2861, file: !2862, line: 9, baseType: !2866, size: 64, offset: 64)
!2866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2867, size: 64)
!2867 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2868)
!2868 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !2862, line: 5, flags: DIFlagFwdDecl)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !2861, file: !2862, line: 10, baseType: !7, size: 32, offset: 128)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2828, file: !2829, line: 66, baseType: !358, size: 64, offset: 2176)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !2828, file: !2829, line: 74, baseType: !330, size: 128, offset: 2240)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !2828, file: !2829, line: 75, baseType: !2718, size: 64, offset: 2368)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !2828, file: !2829, line: 76, baseType: !1801, size: 256, offset: 2432)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2828, file: !2829, line: 83, baseType: !2875, size: 256, offset: 2688)
!2875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2876, line: 102, size: 256, elements: !2877)
!2876 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2877 = !{!2878, !2879, !2880}
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2875, file: !2876, line: 103, baseType: !417, size: 64)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2875, file: !2876, line: 104, baseType: !330, size: 128, offset: 64)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2875, file: !2876, line: 105, baseType: !2881, size: 64, offset: 192)
!2881 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2876, line: 21, baseType: !2882)
!2882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2883, size: 64)
!2883 = !DISubroutineType(types: !2884)
!2884 = !{null, !2885}
!2885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2875, size: 64)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2828, file: !2829, line: 85, baseType: !2887, size: 768, offset: 2944)
!2887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !2888, line: 156, size: 768, elements: !2889)
!2888 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!2889 = !{!2890, !2895}
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !2887, file: !2888, line: 157, baseType: !2891, size: 64)
!2891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2892, size: 64)
!2892 = !DISubroutineType(types: !2893)
!2893 = !{!78, !2894}
!2894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2887, size: 64)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2887, file: !2888, line: 158, baseType: !2896, size: 704, offset: 64)
!2896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !2888, line: 150, size: 704, elements: !2897)
!2897 = !{!2898, !2966}
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2896, file: !2888, line: 152, baseType: !2899, size: 640)
!2899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !2888, line: 131, size: 640, elements: !2900)
!2900 = !{!2901, !2934, !2935, !2936, !2956, !2957, !2959, !2965}
!2901 = !DIDerivedType(tag: DW_TAG_member, scope: !2899, file: !2888, line: 132, baseType: !2902, size: 192)
!2902 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2899, file: !2888, line: 132, size: 192, elements: !2903)
!2903 = !{!2904, !2933}
!2904 = !DIDerivedType(tag: DW_TAG_member, scope: !2902, file: !2888, line: 133, baseType: !2905, size: 192)
!2905 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2902, file: !2888, line: 133, size: 192, elements: !2906)
!2906 = !{!2907, !2930, !2931, !2932}
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !2905, file: !2888, line: 134, baseType: !2908, size: 64)
!2908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2909, size: 64)
!2909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !2888, line: 112, size: 512, elements: !2910)
!2910 = !{!2911, !2912, !2913, !2914, !2915, !2916, !2922, !2928, !2929}
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !2909, file: !2888, line: 113, baseType: !338, size: 64)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2909, file: !2888, line: 114, baseType: !637, size: 64, offset: 64)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !2909, file: !2888, line: 115, baseType: !78, size: 32, offset: 128)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2909, file: !2888, line: 116, baseType: !1425, size: 16, offset: 160)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !2909, file: !2888, line: 117, baseType: !2908, size: 64, offset: 192)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !2909, file: !2888, line: 118, baseType: !2917, size: 64, offset: 256)
!2917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2918, size: 64)
!2918 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !2888, line: 47, baseType: !2919)
!2919 = !DISubroutineType(types: !2920)
!2920 = !{!78, !2908, !78, !637, !2921, !1740}
!2921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 64)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2909, file: !2888, line: 119, baseType: !2923, size: 64, offset: 320)
!2923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2924, size: 64)
!2924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !2888, line: 94, size: 192, elements: !2925)
!2925 = !{!2926, !2927}
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2924, file: !2888, line: 95, baseType: !429, size: 32)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2924, file: !2888, line: 96, baseType: !1935, size: 128, offset: 64)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !2909, file: !2888, line: 120, baseType: !637, size: 64, offset: 384)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !2909, file: !2888, line: 121, baseType: !637, size: 64, offset: 448)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2905, file: !2888, line: 135, baseType: !78, size: 32, offset: 64)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2905, file: !2888, line: 136, baseType: !78, size: 32, offset: 96)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !2905, file: !2888, line: 137, baseType: !78, size: 32, offset: 128)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2902, file: !2888, line: 139, baseType: !345, size: 128, align: 64)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !2899, file: !2888, line: 141, baseType: !2642, size: 64, offset: 192)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !2899, file: !2888, line: 142, baseType: !2908, size: 64, offset: 256)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2899, file: !2888, line: 143, baseType: !2937, size: 64, offset: 320)
!2937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2938, size: 64)
!2938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !2888, line: 161, size: 960, elements: !2939)
!2939 = !{!2940, !2941, !2945, !2952}
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !2938, file: !2888, line: 162, baseType: !2887, size: 768)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !2938, file: !2888, line: 163, baseType: !2942, size: 64, offset: 768)
!2942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2943, size: 64)
!2943 = !DISubroutineType(types: !2944)
!2944 = !{!2894, !2937}
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !2938, file: !2888, line: 164, baseType: !2946, size: 64, offset: 832)
!2946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2947, size: 64)
!2947 = !DISubroutineType(types: !2948)
!2948 = !{null, !2949, !2908, !2950, !2951}
!2949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2899, size: 64)
!2950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64)
!2951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1436, size: 64)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !2938, file: !2888, line: 167, baseType: !2953, size: 64, offset: 896)
!2953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2954, size: 64)
!2954 = !DISubroutineType(types: !2955)
!2955 = !{!78, !2949, !2908}
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2899, file: !2888, line: 144, baseType: !2894, size: 64, offset: 384)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2899, file: !2888, line: 145, baseType: !2958, size: 64, offset: 448)
!2958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2896, size: 64)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2899, file: !2888, line: 146, baseType: !2960, size: 64, offset: 512)
!2960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 64)
!2961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !2888, line: 124, size: 256, elements: !2962)
!2962 = !{!2963, !2964}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2961, file: !2888, line: 125, baseType: !479, size: 192, align: 64)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2961, file: !2888, line: 126, baseType: !2949, size: 64, offset: 192)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2899, file: !2888, line: 147, baseType: !1627, size: 64, offset: 576)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2896, file: !2888, line: 153, baseType: !1796, size: 64, offset: 640)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2828, file: !2829, line: 86, baseType: !2949, size: 64, offset: 3712)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2828, file: !2829, line: 88, baseType: !2969, size: 64, offset: 3776)
!2969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2970, size: 64)
!2970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !2829, line: 92, size: 576, elements: !2971)
!2971 = !{!2972, !2973, !2974, !2975, !2976}
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2970, file: !2829, line: 93, baseType: !322, size: 128)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2970, file: !2829, line: 94, baseType: !2827, size: 64, offset: 128)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2970, file: !2829, line: 95, baseType: !1428, size: 32, offset: 192)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2970, file: !2829, line: 96, baseType: !78, size: 32, offset: 224)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !2970, file: !2829, line: 97, baseType: !2977, size: 320, offset: 256)
!2977 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 320, elements: !2978)
!2978 = !{!2979}
!2979 = !DISubrange(count: 10)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !2828, file: !2829, line: 89, baseType: !2981, size: 320, offset: 3840)
!2981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !78, size: 320, elements: !2978)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !2690, file: !2691, line: 147, baseType: !2983, size: 64, offset: 1088)
!2983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2984, size: 64)
!2984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !2691, line: 25, size: 64, elements: !2985)
!2985 = !{!2986, !2987, !2988}
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2984, file: !2691, line: 26, baseType: !429, size: 32)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2984, file: !2691, line: 27, baseType: !78, size: 32, offset: 32)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2984, file: !2691, line: 28, baseType: !2989, offset: 64)
!2989 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1436, elements: !529)
!2990 = !DIDerivedType(tag: DW_TAG_member, scope: !2690, file: !2691, line: 149, baseType: !2991, size: 128, offset: 1152)
!2991 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2690, file: !2691, line: 149, size: 128, elements: !2992)
!2992 = !{!2993, !2994}
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2991, file: !2691, line: 150, baseType: !78, size: 32)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2991, file: !2691, line: 151, baseType: !345, size: 128, align: 64)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !2373, file: !2374, line: 926, baseType: !2688, size: 64, offset: 8576)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !2373, file: !2374, line: 929, baseType: !2688, size: 64, offset: 8640)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !2373, file: !2374, line: 933, baseType: !2718, size: 64, offset: 8704)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !2373, file: !2374, line: 943, baseType: !313, size: 128, offset: 8768)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !2373, file: !2374, line: 945, baseType: !3000, size: 64, offset: 8896)
!3000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3001, size: 64)
!3001 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !2374, line: 49, flags: DIFlagFwdDecl)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !2373, file: !2374, line: 956, baseType: !3003, size: 64, offset: 8960)
!3003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3004, size: 64)
!3004 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !2374, line: 45, flags: DIFlagFwdDecl)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2373, file: !2374, line: 959, baseType: !3006, size: 64, offset: 9024)
!3006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3007, size: 64)
!3007 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !2374, line: 959, flags: DIFlagFwdDecl)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !2373, file: !2374, line: 962, baseType: !3009, size: 64, offset: 9088)
!3009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3010, size: 64)
!3010 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !2374, line: 66, flags: DIFlagFwdDecl)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !2373, file: !2374, line: 966, baseType: !3012, size: 64, offset: 9152)
!3012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3013, size: 64)
!3013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !3014, line: 31, size: 576, elements: !3015)
!3014 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!3015 = !{!3016, !3017, !3020, !3023, !3026, !3027, !3715, !3718, !3719}
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3013, file: !3014, line: 32, baseType: !429, size: 32)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !3013, file: !3014, line: 33, baseType: !3018, size: 64, offset: 64)
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 64)
!3019 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !3014, line: 9, flags: DIFlagFwdDecl)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !3013, file: !3014, line: 34, baseType: !3021, size: 64, offset: 128)
!3021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3022, size: 64)
!3022 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !3014, line: 10, flags: DIFlagFwdDecl)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !3013, file: !3014, line: 35, baseType: !3024, size: 64, offset: 192)
!3024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3025, size: 64)
!3025 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !3014, line: 8, flags: DIFlagFwdDecl)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !3013, file: !3014, line: 36, baseType: !2635, size: 64, offset: 256)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !3013, file: !3014, line: 37, baseType: !3028, size: 64, offset: 320)
!3028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3029, size: 64)
!3029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !3030, line: 56, size: 16896, elements: !3031)
!3030 = !DIFile(filename: "./include/net/net_namespace.h", directory: "/home/lizy2001/genbc/linux")
!3031 = !{!3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3053, !3054, !3055, !3059, !3060, !3061, !3062, !3063, !3066, !3068, !3069, !3084, !3085, !3086, !3087, !3097, !3166, !3172, !3178, !3191, !3500, !3654, !3661, !3664, !3687, !3688, !3714}
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "passive", scope: !3029, file: !3030, line: 60, baseType: !614, size: 32)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3029, file: !3030, line: 63, baseType: !614, size: 32, offset: 32)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "rules_mod_lock", scope: !3029, file: !3030, line: 66, baseType: !1716, offset: 64)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "dev_unreg_count", scope: !3029, file: !3030, line: 68, baseType: !7, size: 32, offset: 64)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_seq", scope: !3029, file: !3030, line: 70, baseType: !7, size: 32, offset: 96)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !3029, file: !3030, line: 71, baseType: !78, size: 32, offset: 128)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "nsid_lock", scope: !3029, file: !3030, line: 73, baseType: !1716, offset: 160)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_genid", scope: !3029, file: !3030, line: 74, baseType: !429, size: 32, offset: 160)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3029, file: !3030, line: 76, baseType: !330, size: 128, offset: 192)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "exit_list", scope: !3029, file: !3030, line: 77, baseType: !330, size: 128, offset: 320)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_list", scope: !3029, file: !3030, line: 83, baseType: !1369, size: 64, offset: 448)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "key_domain", scope: !3029, file: !3030, line: 86, baseType: !2771, size: 64, offset: 512)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !3029, file: !3030, line: 88, baseType: !2827, size: 64, offset: 576)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !3029, file: !3030, line: 89, baseType: !2969, size: 64, offset: 640)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "netns_ids", scope: !3029, file: !3030, line: 90, baseType: !3047, size: 192, offset: 704)
!3047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3048, line: 19, size: 192, elements: !3049)
!3048 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3049 = !{!3050, !3051, !3052}
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3047, file: !3048, line: 20, baseType: !1783, size: 128)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3047, file: !3048, line: 21, baseType: !7, size: 32, offset: 128)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3047, file: !3048, line: 22, baseType: !7, size: 32, offset: 160)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3029, file: !3030, line: 92, baseType: !2861, size: 192, offset: 896)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_head", scope: !3029, file: !3030, line: 94, baseType: !330, size: 128, offset: 1088)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net", scope: !3029, file: !3030, line: 95, baseType: !3056, size: 64, offset: 1216)
!3056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3057, size: 64)
!3057 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !3058, line: 17, flags: DIFlagFwdDecl)
!3058 = !DIFile(filename: "./include/net/netns/mib.h", directory: "/home/lizy2001/genbc/linux")
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_stat", scope: !3029, file: !3030, line: 96, baseType: !3056, size: 64, offset: 1280)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !3029, file: !3030, line: 99, baseType: !2887, size: 768, offset: 1344)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl", scope: !3029, file: !3030, line: 102, baseType: !491, size: 64, offset: 2112)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "genl_sock", scope: !3029, file: !3030, line: 103, baseType: !491, size: 64, offset: 2176)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_sock", scope: !3029, file: !3030, line: 105, baseType: !3064, size: 64, offset: 2240)
!3064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3065, size: 64)
!3065 = !DICompositeType(tag: DW_TAG_structure_type, name: "uevent_sock", file: !3030, line: 48, flags: DIFlagFwdDecl)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name_head", scope: !3029, file: !3030, line: 107, baseType: !3067, size: 64, offset: 2304)
!3067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 64)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "dev_index_head", scope: !3029, file: !3030, line: 108, baseType: !3067, size: 64, offset: 2368)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_chain", scope: !3029, file: !3030, line: 109, baseType: !3070, size: 64, offset: 2432)
!3070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_notifier_head", file: !3071, line: 70, size: 64, elements: !3072)
!3071 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!3072 = !{!3073}
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3070, file: !3071, line: 71, baseType: !3074, size: 64)
!3074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3075, size: 64)
!3075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !3071, line: 54, size: 192, elements: !3076)
!3076 = !{!3077, !3082, !3083}
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !3075, file: !3071, line: 55, baseType: !3078, size: 64)
!3078 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !3071, line: 51, baseType: !3079)
!3079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3080, size: 64)
!3080 = !DISubroutineType(types: !3081)
!3081 = !{!78, !3074, !358, !637}
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3075, file: !3071, line: 56, baseType: !3074, size: 64, offset: 64)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !3075, file: !3071, line: 57, baseType: !78, size: 32, offset: 128)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "hash_mix", scope: !3029, file: !3030, line: 114, baseType: !1033, size: 32, offset: 2496)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "loopback_dev", scope: !3029, file: !3030, line: 116, baseType: !336, size: 64, offset: 2560)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "rules_ops", scope: !3029, file: !3030, line: 119, baseType: !330, size: 128, offset: 2624)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !3029, file: !3030, line: 121, baseType: !3088, size: 256, offset: 2752)
!3088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_core", file: !3089, line: 8, size: 256, elements: !3090)
!3089 = !DIFile(filename: "./include/net/netns/core.h", directory: "/home/lizy2001/genbc/linux")
!3090 = !{!3091, !3092, !3093, !3094}
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_hdr", scope: !3088, file: !3089, line: 10, baseType: !2949, size: 64)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_somaxconn", scope: !3088, file: !3089, line: 12, baseType: !78, size: 32, offset: 64)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "sock_inuse", scope: !3088, file: !3089, line: 15, baseType: !1047, size: 64, offset: 128)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "prot_inuse", scope: !3088, file: !3089, line: 16, baseType: !3095, size: 64, offset: 192)
!3095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3096, size: 64)
!3096 = !DICompositeType(tag: DW_TAG_structure_type, name: "prot_inuse", file: !3089, line: 6, flags: DIFlagFwdDecl)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "mib", scope: !3029, file: !3030, line: 122, baseType: !3098, size: 832, offset: 3008)
!3098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_mib", file: !3058, line: 7, size: 832, elements: !3099)
!3099 = !{!3100, !3107, !3118, !3126, !3134, !3135, !3143, !3151, !3152, !3153, !3154, !3155, !3161}
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_statistics", scope: !3098, file: !3058, line: 8, baseType: !3101, size: 64)
!3101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3102, size: 64)
!3102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_mib", file: !3103, line: 92, size: 1024, elements: !3104)
!3103 = !DIFile(filename: "./include/net/snmp.h", directory: "/home/lizy2001/genbc/linux")
!3104 = !{!3105}
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3102, file: !3103, line: 93, baseType: !3106, size: 1024)
!3106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 1024, elements: !315)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "ip_statistics", scope: !3098, file: !3058, line: 9, baseType: !3108, size: 64, offset: 64)
!3108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3109, size: 64)
!3109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipstats_mib", file: !3103, line: 51, size: 2368, elements: !3110)
!3110 = !{!3111, !3115}
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3109, file: !3103, line: 53, baseType: !3112, size: 2368)
!3112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !377, size: 2368, elements: !3113)
!3113 = !{!3114}
!3114 = !DISubrange(count: 37)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !3109, file: !3103, line: 54, baseType: !3116, offset: 2368)
!3116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "u64_stats_sync", file: !3117, line: 68, elements: !1633)
!3117 = !DIFile(filename: "./include/linux/u64_stats_sync.h", directory: "/home/lizy2001/genbc/linux")
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "net_statistics", scope: !3098, file: !3058, line: 10, baseType: !3119, size: 64, offset: 128)
!3119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3120, size: 64)
!3120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "linux_mib", file: !3103, line: 104, size: 7936, elements: !3121)
!3121 = !{!3122}
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3120, file: !3103, line: 105, baseType: !3123, size: 7936)
!3123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 7936, elements: !3124)
!3124 = !{!3125}
!3125 = !DISubrange(count: 124)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "udp_statistics", scope: !3098, file: !3058, line: 11, baseType: !3127, size: 64, offset: 192)
!3127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3128, size: 64)
!3128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_mib", file: !3103, line: 98, size: 576, elements: !3129)
!3129 = !{!3130}
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3128, file: !3103, line: 99, baseType: !3131, size: 576)
!3131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 576, elements: !3132)
!3132 = !{!3133}
!3133 = !DISubrange(count: 9)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_statistics", scope: !3098, file: !3058, line: 12, baseType: !3127, size: 64, offset: 256)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_statistics", scope: !3098, file: !3058, line: 13, baseType: !3136, size: 64, offset: 320)
!3136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3137, size: 64)
!3137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmp_mib", file: !3103, line: 59, size: 1792, elements: !3138)
!3138 = !{!3139}
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3137, file: !3103, line: 60, baseType: !3140, size: 1792)
!3140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 1792, elements: !3141)
!3141 = !{!3142}
!3142 = !DISubrange(count: 28)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "icmpmsg_statistics", scope: !3098, file: !3058, line: 14, baseType: !3144, size: 64, offset: 384)
!3144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3145, size: 64)
!3145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpmsg_mib", file: !3103, line: 64, size: 32768, elements: !3146)
!3146 = !{!3147}
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3145, file: !3103, line: 65, baseType: !3148, size: 32768)
!3148 = !DICompositeType(tag: DW_TAG_array_type, baseType: !417, size: 32768, elements: !3149)
!3149 = !{!3150}
!3150 = !DISubrange(count: 512)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_devsnmp6", scope: !3098, file: !3058, line: 17, baseType: !3056, size: 64, offset: 448)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "udp_stats_in6", scope: !3098, file: !3058, line: 18, baseType: !3127, size: 64, offset: 512)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_stats_in6", scope: !3098, file: !3058, line: 19, baseType: !3127, size: 64, offset: 576)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6_statistics", scope: !3098, file: !3058, line: 20, baseType: !3108, size: 64, offset: 640)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_statistics", scope: !3098, file: !3058, line: 21, baseType: !3156, size: 64, offset: 704)
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3157, size: 64)
!3157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib", file: !3103, line: 71, size: 384, elements: !3158)
!3158 = !{!3159}
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3157, file: !3103, line: 72, baseType: !3160, size: 384)
!3160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 384, elements: !1045)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msg_statistics", scope: !3098, file: !3058, line: 22, baseType: !3162, size: 64, offset: 768)
!3162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3163, size: 64)
!3163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib", file: !3103, line: 81, size: 32768, elements: !3164)
!3164 = !{!3165}
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3163, file: !3103, line: 82, baseType: !3148, size: 32768)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !3029, file: !3030, line: 123, baseType: !3167, size: 256, offset: 3840)
!3167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_packet", file: !3168, line: 11, size: 256, elements: !3169)
!3168 = !DIFile(filename: "./include/net/netns/packet.h", directory: "/home/lizy2001/genbc/linux")
!3169 = !{!3170, !3171}
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "sklist_lock", scope: !3167, file: !3168, line: 12, baseType: !1711, size: 192)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "sklist", scope: !3167, file: !3168, line: 13, baseType: !1627, size: 64, offset: 192)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "unx", scope: !3029, file: !3030, line: 124, baseType: !3173, size: 128, offset: 4096)
!3173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_unix", file: !3174, line: 9, size: 128, elements: !3175)
!3174 = !DIFile(filename: "./include/net/netns/unix.h", directory: "/home/lizy2001/genbc/linux")
!3175 = !{!3176, !3177}
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_dgram_qlen", scope: !3173, file: !3174, line: 10, baseType: !78, size: 32)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !3173, file: !3174, line: 11, baseType: !2949, size: 64, offset: 64)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop", scope: !3029, file: !3030, line: 125, baseType: !3179, size: 512, offset: 4224)
!3179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_nexthop", file: !3180, line: 11, size: 512, elements: !3181)
!3180 = !DIFile(filename: "./include/net/netns/nexthop.h", directory: "/home/lizy2001/genbc/linux")
!3181 = !{!3182, !3183, !3184, !3185, !3186}
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !3179, file: !3180, line: 12, baseType: !1796, size: 64)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "devhash", scope: !3179, file: !3180, line: 13, baseType: !3067, size: 64, offset: 64)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3179, file: !3180, line: 15, baseType: !7, size: 32, offset: 128)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_allocated", scope: !3179, file: !3180, line: 16, baseType: !1033, size: 32, offset: 160)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_chain", scope: !3179, file: !3180, line: 17, baseType: !3187, size: 320, offset: 192)
!3187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !3071, line: 65, size: 320, elements: !3188)
!3188 = !{!3189, !3190}
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !3187, file: !3071, line: 66, baseType: !1801, size: 256)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3187, file: !3071, line: 67, baseType: !3074, size: 64, offset: 256)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !3029, file: !3030, line: 126, baseType: !3192, size: 5440, offset: 4736)
!3192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv4", file: !3193, line: 43, size: 5440, elements: !3194)
!3193 = !DIFile(filename: "./include/net/netns/ipv4.h", directory: "/home/lizy2001/genbc/linux")
!3194 = !{!3195, !3196, !3197, !3198, !3199, !3200, !3203, !3204, !3207, !3208, !3209, !3210, !3211, !3212, !3214, !3215, !3218, !3219, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3400, !3401, !3402, !3403, !3404, !3405, !3406, !3407, !3408, !3409, !3410, !3411, !3412, !3413, !3414, !3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422, !3423, !3424, !3425, !3426, !3427, !3428, !3429, !3430, !3431, !3432, !3433, !3434, !3435, !3436, !3437, !3438, !3439, !3440, !3441, !3442, !3444, !3445, !3446, !3447, !3448, !3456, !3457, !3458, !3462, !3465, !3466, !3467, !3468, !3469, !3470, !3471, !3472, !3473, !3474, !3475, !3476, !3482, !3483, !3485, !3486, !3489, !3490, !3491, !3492, !3493}
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "forw_hdr", scope: !3192, file: !3193, line: 45, baseType: !2949, size: 64)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !3192, file: !3193, line: 46, baseType: !2949, size: 64, offset: 64)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4_hdr", scope: !3192, file: !3193, line: 47, baseType: !2949, size: 64, offset: 128)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !3192, file: !3193, line: 48, baseType: !2949, size: 64, offset: 192)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm4_hdr", scope: !3192, file: !3193, line: 49, baseType: !2949, size: 64, offset: 256)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !3192, file: !3193, line: 51, baseType: !3201, size: 64, offset: 320)
!3201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3202, size: 64)
!3202 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv4_devconf", file: !3193, line: 16, flags: DIFlagFwdDecl)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !3192, file: !3193, line: 52, baseType: !3201, size: 64, offset: 384)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "ra_chain", scope: !3192, file: !3193, line: 53, baseType: !3205, size: 64, offset: 448)
!3205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3206, size: 64)
!3206 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_ra_chain", file: !3193, line: 53, flags: DIFlagFwdDecl)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "ra_mutex", scope: !3192, file: !3193, line: 54, baseType: !1711, size: 192, offset: 512)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "fib_has_custom_local_routes", scope: !3192, file: !3193, line: 62, baseType: !817, size: 8, offset: 704)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !3192, file: !3193, line: 66, baseType: !3067, size: 64, offset: 768)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "fib_offload_disabled", scope: !3192, file: !3193, line: 67, baseType: !817, size: 8, offset: 832)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "fibnl", scope: !3192, file: !3193, line: 68, baseType: !491, size: 64, offset: 896)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !3192, file: !3193, line: 70, baseType: !3213, size: 64, offset: 960)
!3213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !491, size: 64)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !3192, file: !3193, line: 71, baseType: !491, size: 64, offset: 1024)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !3192, file: !3193, line: 73, baseType: !3216, size: 64, offset: 1088)
!3216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3217, size: 64)
!3217 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_peer_base", file: !3193, line: 73, flags: DIFlagFwdDecl)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !3192, file: !3193, line: 74, baseType: !3213, size: 64, offset: 1152)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3192, file: !3193, line: 75, baseType: !3220, size: 64, offset: 1216)
!3220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3221, size: 64)
!3221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fqdir", file: !3222, line: 9, size: 1728, elements: !3223)
!3222 = !DIFile(filename: "./include/net/inet_frag.h", directory: "/home/lizy2001/genbc/linux")
!3223 = !{!3224, !3225, !3226, !3227, !3228, !3355, !3356, !3357, !3358, !3359}
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "high_thresh", scope: !3221, file: !3222, line: 11, baseType: !1044, size: 64)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "low_thresh", scope: !3221, file: !3222, line: 12, baseType: !1044, size: 64, offset: 64)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3221, file: !3222, line: 13, baseType: !78, size: 32, offset: 128)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "max_dist", scope: !3221, file: !3222, line: 14, baseType: !78, size: 32, offset: 160)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !3221, file: !3222, line: 15, baseType: !3229, size: 64, offset: 192)
!3229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3230, size: 64)
!3230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frags", file: !3222, line: 98, size: 960, elements: !3231)
!3231 = !{!3232, !3233, !3305, !3309, !3310, !3311, !3312, !3353, !3354}
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "qsize", scope: !3230, file: !3222, line: 99, baseType: !7, size: 32)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !3230, file: !3222, line: 101, baseType: !3234, size: 64, offset: 64)
!3234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3235, size: 64)
!3235 = !DISubroutineType(types: !3236)
!3236 = !{null, !3237, !3303}
!3237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3238, size: 64)
!3238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frag_queue", file: !3222, line: 77, size: 1408, elements: !3239)
!3239 = !{!3240, !3246, !3279, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300, !3301, !3302}
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3238, file: !3222, line: 78, baseType: !3241, size: 64)
!3241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhash_head", file: !3242, line: 17, size: 64, elements: !3243)
!3242 = !DIFile(filename: "./include/linux/rhashtable-types.h", directory: "/home/lizy2001/genbc/linux")
!3243 = !{!3244}
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3241, file: !3242, line: 18, baseType: !3245, size: 64)
!3245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3241, size: 64)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3238, file: !3222, line: 82, baseType: !3247, size: 352, offset: 64)
!3247 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3238, file: !3222, line: 79, size: 352, elements: !3248)
!3248 = !{!3249, !3259}
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3247, file: !3222, line: 80, baseType: !3250, size: 160)
!3250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v4_compare_key", file: !3222, line: 41, size: 160, elements: !3251)
!3251 = !{!3252, !3254, !3255, !3256, !3257, !3258}
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !3250, file: !3222, line: 42, baseType: !3253, size: 32)
!3253 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !571, line: 32, baseType: !539)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !3250, file: !3222, line: 43, baseType: !3253, size: 32, offset: 32)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3250, file: !3222, line: 44, baseType: !1033, size: 32, offset: 64)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !3250, file: !3222, line: 45, baseType: !1033, size: 32, offset: 96)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3250, file: !3222, line: 46, baseType: !581, size: 16, offset: 128)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !3250, file: !3222, line: 47, baseType: !627, size: 16, offset: 144)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3247, file: !3222, line: 81, baseType: !3260, size: 352)
!3260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v6_compare_key", file: !3222, line: 50, size: 352, elements: !3261)
!3261 = !{!3262, !3275, !3276, !3277, !3278}
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !3260, file: !3222, line: 51, baseType: !3263, size: 128)
!3263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !3264, line: 33, size: 128, elements: !3265)
!3264 = !DIFile(filename: "./include/uapi/linux/in6.h", directory: "/home/lizy2001/genbc/linux")
!3265 = !{!3266}
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "in6_u", scope: !3263, file: !3264, line: 40, baseType: !3267, size: 128)
!3267 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3263, file: !3264, line: 34, size: 128, elements: !3268)
!3268 = !{!3269, !3271, !3273}
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr8", scope: !3267, file: !3264, line: 35, baseType: !3270, size: 128)
!3270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !527, size: 128, elements: !315)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr16", scope: !3267, file: !3264, line: 37, baseType: !3272, size: 128)
!3272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !581, size: 128, elements: !2479)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr32", scope: !3267, file: !3264, line: 38, baseType: !3274, size: 128)
!3274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3253, size: 128, elements: !2318)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !3260, file: !3222, line: 52, baseType: !3263, size: 128, offset: 128)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3260, file: !3222, line: 53, baseType: !1033, size: 32, offset: 256)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3260, file: !3222, line: 54, baseType: !3253, size: 32, offset: 288)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "iif", scope: !3260, file: !3222, line: 55, baseType: !1033, size: 32, offset: 320)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3238, file: !3222, line: 83, baseType: !3280, size: 320, offset: 448)
!3280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3281, line: 11, size: 320, elements: !3282)
!3281 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3282 = !{!3283, !3284, !3285, !3290}
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3280, file: !3281, line: 16, baseType: !322, size: 128)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3280, file: !3281, line: 17, baseType: !358, size: 64, offset: 128)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3280, file: !3281, line: 18, baseType: !3286, size: 64, offset: 192)
!3286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3287, size: 64)
!3287 = !DISubroutineType(types: !3288)
!3288 = !{null, !3289}
!3289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3280, size: 64)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3280, file: !3281, line: 19, baseType: !1033, size: 32, offset: 256)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3238, file: !3222, line: 84, baseType: !1716, offset: 768)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3238, file: !3222, line: 85, baseType: !614, size: 32, offset: 768)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "rb_fragments", scope: !3238, file: !3222, line: 86, baseType: !1796, size: 64, offset: 832)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "fragments_tail", scope: !3238, file: !3222, line: 87, baseType: !461, size: 64, offset: 896)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "last_run_head", scope: !3238, file: !3222, line: 88, baseType: !461, size: 64, offset: 960)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !3238, file: !3222, line: 89, baseType: !499, size: 64, offset: 1024)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3238, file: !3222, line: 90, baseType: !78, size: 32, offset: 1088)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "meat", scope: !3238, file: !3222, line: 91, baseType: !78, size: 32, offset: 1120)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3238, file: !3222, line: 92, baseType: !527, size: 8, offset: 1152)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !3238, file: !3222, line: 93, baseType: !627, size: 16, offset: 1168)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3238, file: !3222, line: 94, baseType: !3220, size: 64, offset: 1216)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3238, file: !3222, line: 95, baseType: !345, size: 128, align: 64, offset: 1280)
!3303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3304, size: 64)
!3304 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !3230, file: !3222, line: 103, baseType: !3306, size: 64, offset: 128)
!3306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3307, size: 64)
!3307 = !DISubroutineType(types: !3308)
!3308 = !{null, !3237}
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "frag_expire", scope: !3230, file: !3222, line: 104, baseType: !3286, size: 64, offset: 192)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cachep", scope: !3230, file: !3222, line: 105, baseType: !2097, size: 64, offset: 256)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cache_name", scope: !3230, file: !3222, line: 106, baseType: !338, size: 64, offset: 320)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "rhash_params", scope: !3230, file: !3222, line: 107, baseType: !3313, size: 320, offset: 384)
!3313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_params", file: !3242, line: 56, size: 320, elements: !3314)
!3314 = !{!3315, !3316, !3317, !3318, !3319, !3320, !3321, !3322, !3327, !3329}
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "nelem_hint", scope: !3313, file: !3242, line: 57, baseType: !627, size: 16)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !3313, file: !3242, line: 58, baseType: !627, size: 16, offset: 16)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "key_offset", scope: !3313, file: !3242, line: 59, baseType: !627, size: 16, offset: 32)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "head_offset", scope: !3313, file: !3242, line: 60, baseType: !627, size: 16, offset: 48)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !3313, file: !3242, line: 61, baseType: !7, size: 32, offset: 64)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "min_size", scope: !3313, file: !3242, line: 62, baseType: !627, size: 16, offset: 96)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "automatic_shrinking", scope: !3313, file: !3242, line: 63, baseType: !817, size: 8, offset: 112)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "hashfn", scope: !3313, file: !3242, line: 64, baseType: !3323, size: 64, offset: 128)
!3323 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_hashfn_t", file: !3242, line: 38, baseType: !3324)
!3324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3325, size: 64)
!3325 = !DISubroutineType(types: !3326)
!3326 = !{!1033, !3303, !1033, !1033}
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "obj_hashfn", scope: !3313, file: !3242, line: 65, baseType: !3328, size: 64, offset: 192)
!3328 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_hashfn_t", file: !3242, line: 39, baseType: !3324)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "obj_cmpfn", scope: !3313, file: !3242, line: 66, baseType: !3330, size: 64, offset: 256)
!3330 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_cmpfn_t", file: !3242, line: 40, baseType: !3331)
!3331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3332, size: 64)
!3332 = !DISubroutineType(types: !3333)
!3333 = !{!78, !3334, !3303}
!3334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3335, size: 64)
!3335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_compare_arg", file: !3242, line: 33, size: 128, elements: !3336)
!3336 = !{!3337, !3352}
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !3335, file: !3242, line: 34, baseType: !3338, size: 64)
!3338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3339, size: 64)
!3339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable", file: !3242, line: 81, size: 1024, elements: !3340)
!3340 = !{!3341, !3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351}
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !3339, file: !3242, line: 82, baseType: !3342, size: 64)
!3342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3343, size: 64)
!3343 = !DICompositeType(tag: DW_TAG_structure_type, name: "bucket_table", file: !3242, line: 26, flags: DIFlagFwdDecl)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !3339, file: !3242, line: 83, baseType: !7, size: 32, offset: 64)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "max_elems", scope: !3339, file: !3242, line: 84, baseType: !7, size: 32, offset: 96)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3339, file: !3242, line: 85, baseType: !3313, size: 320, offset: 128)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "rhlist", scope: !3339, file: !3242, line: 86, baseType: !817, size: 8, offset: 448)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !3339, file: !3242, line: 87, baseType: !2875, size: 256, offset: 512)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3339, file: !3242, line: 88, baseType: !1711, size: 192, offset: 768)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3339, file: !3242, line: 89, baseType: !1716, offset: 960)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "nelems", scope: !3339, file: !3242, line: 90, baseType: !429, size: 32, offset: 960)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3335, file: !3242, line: 35, baseType: !3303, size: 64, offset: 64)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3230, file: !3222, line: 108, baseType: !614, size: 32, offset: 704)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3230, file: !3222, line: 109, baseType: !2643, size: 192, offset: 768)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !3221, file: !3222, line: 16, baseType: !3028, size: 64, offset: 256)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !3221, file: !3222, line: 17, baseType: !817, size: 8, offset: 320)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "rhashtable", scope: !3221, file: !3222, line: 19, baseType: !3339, size: 1024, offset: 384)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !3221, file: !3222, line: 22, baseType: !417, size: 64, offset: 1408)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !3221, file: !3222, line: 23, baseType: !2875, size: 256, offset: 1472)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_all", scope: !3192, file: !3193, line: 87, baseType: !78, size: 32, offset: 1280)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_broadcasts", scope: !3192, file: !3193, line: 88, baseType: !78, size: 32, offset: 1312)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ignore_bogus_error_responses", scope: !3192, file: !3193, line: 89, baseType: !78, size: 32, offset: 1344)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratelimit", scope: !3192, file: !3193, line: 90, baseType: !78, size: 32, offset: 1376)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratemask", scope: !3192, file: !3193, line: 91, baseType: !78, size: 32, offset: 1408)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_errors_use_inbound_ifaddr", scope: !3192, file: !3193, line: 92, baseType: !78, size: 32, offset: 1440)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "ip_local_ports", scope: !3192, file: !3193, line: 94, baseType: !3367, size: 128, offset: 1472)
!3367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "local_ports", file: !3193, line: 21, size: 128, elements: !3368)
!3368 = !{!3369, !3375, !3377}
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3367, file: !3193, line: 22, baseType: !3370, size: 32)
!3370 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !1390, line: 805, baseType: !3371)
!3371 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 798, size: 32, elements: !3372)
!3372 = !{!3373, !3374}
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !3371, file: !1390, line: 803, baseType: !1389, size: 32)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3371, file: !1390, line: 804, baseType: !1716, offset: 32)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3367, file: !3193, line: 23, baseType: !3376, size: 64, offset: 32)
!3376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !78, size: 64, elements: !2710)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "warned", scope: !3367, file: !3193, line: 24, baseType: !817, size: 8, offset: 96)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn", scope: !3192, file: !3193, line: 96, baseType: !78, size: 32, offset: 1600)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn_fallback", scope: !3192, file: !3193, line: 97, baseType: !78, size: 32, offset: 1632)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_default_ttl", scope: !3192, file: !3193, line: 99, baseType: !78, size: 32, offset: 1664)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_no_pmtu_disc", scope: !3192, file: !3193, line: 100, baseType: !78, size: 32, offset: 1696)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_use_pmtu", scope: !3192, file: !3193, line: 101, baseType: !78, size: 32, offset: 1728)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_update_priority", scope: !3192, file: !3193, line: 102, baseType: !78, size: 32, offset: 1760)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_nonlocal_bind", scope: !3192, file: !3193, line: 103, baseType: !78, size: 32, offset: 1792)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_autobind_reuse", scope: !3192, file: !3193, line: 104, baseType: !78, size: 32, offset: 1824)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_dynaddr", scope: !3192, file: !3193, line: 106, baseType: !78, size: 32, offset: 1856)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_early_demux", scope: !3192, file: !3193, line: 107, baseType: !78, size: 32, offset: 1888)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_demux", scope: !3192, file: !3193, line: 111, baseType: !78, size: 32, offset: 1920)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_early_demux", scope: !3192, file: !3193, line: 112, baseType: !78, size: 32, offset: 1952)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_nexthop_compat_mode", scope: !3192, file: !3193, line: 114, baseType: !78, size: 32, offset: 1984)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_fwmark_reflect", scope: !3192, file: !3193, line: 116, baseType: !78, size: 32, offset: 2016)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fwmark_accept", scope: !3192, file: !3193, line: 117, baseType: !78, size: 32, offset: 2048)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probing", scope: !3192, file: !3193, line: 121, baseType: !78, size: 32, offset: 2080)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probe_floor", scope: !3192, file: !3193, line: 122, baseType: !78, size: 32, offset: 2112)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_base_mss", scope: !3192, file: !3193, line: 123, baseType: !78, size: 32, offset: 2144)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_snd_mss", scope: !3192, file: !3193, line: 124, baseType: !78, size: 32, offset: 2176)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_threshold", scope: !3192, file: !3193, line: 125, baseType: !78, size: 32, offset: 2208)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_interval", scope: !3192, file: !3193, line: 126, baseType: !1033, size: 32, offset: 2240)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_time", scope: !3192, file: !3193, line: 128, baseType: !78, size: 32, offset: 2272)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_probes", scope: !3192, file: !3193, line: 129, baseType: !78, size: 32, offset: 2304)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_intvl", scope: !3192, file: !3193, line: 130, baseType: !78, size: 32, offset: 2336)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syn_retries", scope: !3192, file: !3193, line: 132, baseType: !78, size: 32, offset: 2368)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_synack_retries", scope: !3192, file: !3193, line: 133, baseType: !78, size: 32, offset: 2400)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syncookies", scope: !3192, file: !3193, line: 134, baseType: !78, size: 32, offset: 2432)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reordering", scope: !3192, file: !3193, line: 135, baseType: !78, size: 32, offset: 2464)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries1", scope: !3192, file: !3193, line: 136, baseType: !78, size: 32, offset: 2496)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries2", scope: !3192, file: !3193, line: 137, baseType: !78, size: 32, offset: 2528)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_orphan_retries", scope: !3192, file: !3193, line: 138, baseType: !78, size: 32, offset: 2560)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fin_timeout", scope: !3192, file: !3193, line: 139, baseType: !78, size: 32, offset: 2592)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_notsent_lowat", scope: !3192, file: !3193, line: 140, baseType: !7, size: 32, offset: 2624)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tw_reuse", scope: !3192, file: !3193, line: 141, baseType: !78, size: 32, offset: 2656)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_sack", scope: !3192, file: !3193, line: 142, baseType: !78, size: 32, offset: 2688)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_window_scaling", scope: !3192, file: !3193, line: 143, baseType: !78, size: 32, offset: 2720)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_timestamps", scope: !3192, file: !3193, line: 144, baseType: !78, size: 32, offset: 2752)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_retrans", scope: !3192, file: !3193, line: 145, baseType: !78, size: 32, offset: 2784)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_recovery", scope: !3192, file: !3193, line: 146, baseType: !78, size: 32, offset: 2816)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_thin_linear_timeouts", scope: !3192, file: !3193, line: 147, baseType: !78, size: 32, offset: 2848)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_slow_start_after_idle", scope: !3192, file: !3193, line: 148, baseType: !78, size: 32, offset: 2880)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retrans_collapse", scope: !3192, file: !3193, line: 149, baseType: !78, size: 32, offset: 2912)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_stdurg", scope: !3192, file: !3193, line: 150, baseType: !78, size: 32, offset: 2944)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rfc1337", scope: !3192, file: !3193, line: 151, baseType: !78, size: 32, offset: 2976)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_abort_on_overflow", scope: !3192, file: !3193, line: 152, baseType: !78, size: 32, offset: 3008)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fack", scope: !3192, file: !3193, line: 153, baseType: !78, size: 32, offset: 3040)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_max_reordering", scope: !3192, file: !3193, line: 154, baseType: !78, size: 32, offset: 3072)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_dsack", scope: !3192, file: !3193, line: 155, baseType: !78, size: 32, offset: 3104)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_app_win", scope: !3192, file: !3193, line: 156, baseType: !78, size: 32, offset: 3136)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_adv_win_scale", scope: !3192, file: !3193, line: 157, baseType: !78, size: 32, offset: 3168)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_frto", scope: !3192, file: !3193, line: 158, baseType: !78, size: 32, offset: 3200)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_nometrics_save", scope: !3192, file: !3193, line: 159, baseType: !78, size: 32, offset: 3232)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_no_ssthresh_metrics_save", scope: !3192, file: !3193, line: 160, baseType: !78, size: 32, offset: 3264)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_moderate_rcvbuf", scope: !3192, file: !3193, line: 161, baseType: !78, size: 32, offset: 3296)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tso_win_divisor", scope: !3192, file: !3193, line: 162, baseType: !78, size: 32, offset: 3328)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_workaround_signed_windows", scope: !3192, file: !3193, line: 163, baseType: !78, size: 32, offset: 3360)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_limit_output_bytes", scope: !3192, file: !3193, line: 164, baseType: !78, size: 32, offset: 3392)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_challenge_ack_limit", scope: !3192, file: !3193, line: 165, baseType: !78, size: 32, offset: 3424)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_tso_segs", scope: !3192, file: !3193, line: 166, baseType: !78, size: 32, offset: 3456)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_rtt_wlen", scope: !3192, file: !3193, line: 167, baseType: !78, size: 32, offset: 3488)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_autocorking", scope: !3192, file: !3193, line: 168, baseType: !78, size: 32, offset: 3520)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_invalid_ratelimit", scope: !3192, file: !3193, line: 169, baseType: !78, size: 32, offset: 3552)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ss_ratio", scope: !3192, file: !3193, line: 170, baseType: !78, size: 32, offset: 3584)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ca_ratio", scope: !3192, file: !3193, line: 171, baseType: !78, size: 32, offset: 3616)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_wmem", scope: !3192, file: !3193, line: 172, baseType: !3443, size: 96, offset: 3648)
!3443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !78, size: 96, elements: !1638)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rmem", scope: !3192, file: !3193, line: 173, baseType: !3443, size: 96, offset: 3744)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_nr", scope: !3192, file: !3193, line: 174, baseType: !78, size: 32, offset: 3840)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_delay_ns", scope: !3192, file: !3193, line: 175, baseType: !358, size: 64, offset: 3904)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_slack_ns", scope: !3192, file: !3193, line: 176, baseType: !358, size: 64, offset: 3968)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_death_row", scope: !3192, file: !3193, line: 177, baseType: !3449, size: 192, offset: 4032)
!3449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_timewait_death_row", file: !3193, line: 34, size: 192, elements: !3450)
!3450 = !{!3451, !3452, !3455}
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "tw_count", scope: !3449, file: !3193, line: 35, baseType: !429, size: 32)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !3449, file: !3193, line: 37, baseType: !3453, size: 64, offset: 64)
!3453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3454, size: 64)
!3454 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_hashinfo", file: !3193, line: 32, flags: DIFlagFwdDecl)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_tw_buckets", scope: !3449, file: !3193, line: 38, baseType: !78, size: 32, offset: 128)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_syn_backlog", scope: !3192, file: !3193, line: 178, baseType: !78, size: 32, offset: 4224)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen", scope: !3192, file: !3193, line: 179, baseType: !78, size: 32, offset: 4256)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_congestion_control", scope: !3192, file: !3193, line: 180, baseType: !3459, size: 64, offset: 4288)
!3459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3460, size: 64)
!3460 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3461)
!3461 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_congestion_ops", file: !3193, line: 180, flags: DIFlagFwdDecl)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx", scope: !3192, file: !3193, line: 181, baseType: !3463, size: 64, offset: 4352)
!3463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3464, size: 64)
!3464 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_fastopen_context", file: !3193, line: 41, flags: DIFlagFwdDecl)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx_lock", scope: !3192, file: !3193, line: 182, baseType: !1716, offset: 4416)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen_blackhole_timeout", scope: !3192, file: !3193, line: 183, baseType: !7, size: 32, offset: 4416)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_times", scope: !3192, file: !3193, line: 184, baseType: !429, size: 32, offset: 4448)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_stamp", scope: !3192, file: !3193, line: 185, baseType: !358, size: 64, offset: 4480)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reflect_tos", scope: !3192, file: !3193, line: 186, baseType: !78, size: 32, offset: 4544)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_wmem_min", scope: !3192, file: !3193, line: 188, baseType: !78, size: 32, offset: 4576)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_rmem_min", scope: !3192, file: !3193, line: 189, baseType: !78, size: 32, offset: 4608)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_memberships", scope: !3192, file: !3193, line: 195, baseType: !78, size: 32, offset: 4640)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_msf", scope: !3192, file: !3193, line: 196, baseType: !78, size: 32, offset: 4672)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_llm_reports", scope: !3192, file: !3193, line: 197, baseType: !78, size: 32, offset: 4704)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_qrv", scope: !3192, file: !3193, line: 198, baseType: !78, size: 32, offset: 4736)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "ping_group_range", scope: !3192, file: !3193, line: 200, baseType: !3477, size: 96, offset: 4768)
!3477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ping_group_range", file: !3193, line: 27, size: 96, elements: !3478)
!3478 = !{!3479, !3480}
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3477, file: !3193, line: 28, baseType: !3370, size: 32)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3477, file: !3193, line: 29, baseType: !3481, size: 64, offset: 32)
!3481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1436, size: 64, elements: !2710)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !3192, file: !3193, line: 202, baseType: !429, size: 32, offset: 4864)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_local_reserved_ports", scope: !3192, file: !3193, line: 205, baseType: !3484, size: 64, offset: 4928)
!3484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_prot_sock", scope: !3192, file: !3193, line: 206, baseType: !78, size: 32, offset: 4992)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !3192, file: !3193, line: 222, baseType: !3487, size: 64, offset: 5056)
!3487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3488, size: 64)
!3488 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib_notifier_ops", file: !3193, line: 222, flags: DIFlagFwdDecl)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq", scope: !3192, file: !3193, line: 223, baseType: !7, size: 32, offset: 5120)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_notifier_ops", scope: !3192, file: !3193, line: 225, baseType: !3487, size: 64, offset: 5184)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !3192, file: !3193, line: 226, baseType: !7, size: 32, offset: 5248)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "rt_genid", scope: !3192, file: !3193, line: 228, baseType: !429, size: 32, offset: 5280)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "ip_id_key", scope: !3192, file: !3193, line: 229, baseType: !3494, size: 128, offset: 5312)
!3494 = !DIDerivedType(tag: DW_TAG_typedef, name: "siphash_key_t", file: !3495, line: 22, baseType: !3496)
!3495 = !DIFile(filename: "./include/linux/siphash.h", directory: "/home/lizy2001/genbc/linux")
!3496 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3495, line: 20, size: 128, elements: !3497)
!3497 = !{!3498}
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3496, file: !3495, line: 21, baseType: !3499, size: 128)
!3499 = !DICompositeType(tag: DW_TAG_array_type, baseType: !377, size: 128, elements: !2710)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !3029, file: !3030, line: 128, baseType: !3501, size: 4608, offset: 10176)
!3501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv6", file: !3502, line: 56, size: 4608, elements: !3503)
!3502 = !DIFile(filename: "./include/net/netns/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!3503 = !{!3504, !3544, !3547, !3548, !3549, !3550, !3553, !3556, !3559, !3560, !3561, !3564, !3565, !3631, !3632, !3633, !3634, !3635, !3636, !3637, !3638, !3639, !3640, !3641, !3642, !3645, !3646, !3647, !3648}
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl", scope: !3501, file: !3502, line: 57, baseType: !3505, size: 1600)
!3505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_sysctl_ipv6", file: !3502, line: 15, size: 1600, elements: !3506)
!3506 = !{!3507, !3508, !3509, !3510, !3511, !3512, !3513, !3514, !3515, !3516, !3517, !3518, !3519, !3520, !3521, !3522, !3523, !3524, !3525, !3526, !3527, !3528, !3530, !3531, !3532, !3533, !3534, !3535, !3536, !3537, !3538, !3539, !3540, !3541, !3542, !3543}
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3505, file: !3502, line: 17, baseType: !2949, size: 64)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !3505, file: !3502, line: 18, baseType: !2949, size: 64, offset: 64)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_hdr", scope: !3505, file: !3502, line: 19, baseType: !2949, size: 64, offset: 128)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !3505, file: !3502, line: 20, baseType: !2949, size: 64, offset: 192)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm6_hdr", scope: !3505, file: !3502, line: 21, baseType: !2949, size: 64, offset: 256)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "bindv6only", scope: !3505, file: !3502, line: 23, baseType: !78, size: 32, offset: 320)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "flush_delay", scope: !3505, file: !3502, line: 24, baseType: !78, size: 32, offset: 352)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_max_size", scope: !3505, file: !3502, line: 25, baseType: !78, size: 32, offset: 384)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_min_interval", scope: !3505, file: !3502, line: 26, baseType: !78, size: 32, offset: 416)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_timeout", scope: !3505, file: !3502, line: 27, baseType: !78, size: 32, offset: 448)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_interval", scope: !3505, file: !3502, line: 28, baseType: !78, size: 32, offset: 480)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_elasticity", scope: !3505, file: !3502, line: 29, baseType: !78, size: 32, offset: 512)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_mtu_expires", scope: !3505, file: !3502, line: 30, baseType: !78, size: 32, offset: 544)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_min_advmss", scope: !3505, file: !3502, line: 31, baseType: !78, size: 32, offset: 576)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "multipath_hash_policy", scope: !3505, file: !3502, line: 32, baseType: !78, size: 32, offset: 608)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_consistency", scope: !3505, file: !3502, line: 33, baseType: !78, size: 32, offset: 640)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "auto_flowlabels", scope: !3505, file: !3502, line: 34, baseType: !78, size: 32, offset: 672)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_time", scope: !3505, file: !3502, line: 35, baseType: !78, size: 32, offset: 704)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_all", scope: !3505, file: !3502, line: 36, baseType: !78, size: 32, offset: 736)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_multicast", scope: !3505, file: !3502, line: 37, baseType: !78, size: 32, offset: 768)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_anycast", scope: !3505, file: !3502, line: 38, baseType: !78, size: 32, offset: 800)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask", scope: !3505, file: !3502, line: 39, baseType: !3529, size: 256, offset: 832)
!3529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 256, elements: !2318)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask_ptr", scope: !3505, file: !3502, line: 40, baseType: !3484, size: 64, offset: 1088)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "anycast_src_echo_reply", scope: !3505, file: !3502, line: 41, baseType: !78, size: 32, offset: 1152)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "ip_nonlocal_bind", scope: !3505, file: !3502, line: 42, baseType: !78, size: 32, offset: 1184)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "fwmark_reflect", scope: !3505, file: !3502, line: 43, baseType: !78, size: 32, offset: 1216)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_retries", scope: !3505, file: !3502, line: 44, baseType: !78, size: 32, offset: 1248)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_delay", scope: !3505, file: !3502, line: 45, baseType: !78, size: 32, offset: 1280)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_state_ranges", scope: !3505, file: !3502, line: 46, baseType: !78, size: 32, offset: 1312)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_reflect", scope: !3505, file: !3502, line: 47, baseType: !78, size: 32, offset: 1344)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_cnt", scope: !3505, file: !3502, line: 48, baseType: !78, size: 32, offset: 1376)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_cnt", scope: !3505, file: !3502, line: 49, baseType: !78, size: 32, offset: 1408)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_len", scope: !3505, file: !3502, line: 50, baseType: !78, size: 32, offset: 1440)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_len", scope: !3505, file: !3502, line: 51, baseType: !78, size: 32, offset: 1472)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_flowlabel", scope: !3505, file: !3502, line: 52, baseType: !78, size: 32, offset: 1504)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "skip_notify_on_dev_down", scope: !3505, file: !3502, line: 53, baseType: !817, size: 8, offset: 1536)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !3501, file: !3502, line: 58, baseType: !3545, size: 64, offset: 1600)
!3545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3546, size: 64)
!3546 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devconf", file: !3502, line: 58, flags: DIFlagFwdDecl)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !3501, file: !3502, line: 59, baseType: !3545, size: 64, offset: 1664)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !3501, file: !3502, line: 60, baseType: !3216, size: 64, offset: 1728)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3501, file: !3502, line: 61, baseType: !3220, size: 64, offset: 1792)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_null_entry", scope: !3501, file: !3502, line: 71, baseType: !3551, size: 64, offset: 1856)
!3551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3552, size: 64)
!3552 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_info", file: !3502, line: 71, flags: DIFlagFwdDecl)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_null_entry", scope: !3501, file: !3502, line: 72, baseType: !3554, size: 64, offset: 1920)
!3554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3555, size: 64)
!3555 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_info", file: !3502, line: 72, flags: DIFlagFwdDecl)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "rt6_stats", scope: !3501, file: !3502, line: 73, baseType: !3557, size: 64, offset: 1984)
!3557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3558, size: 64)
!3558 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_statistics", file: !3502, line: 73, flags: DIFlagFwdDecl)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_fib_timer", scope: !3501, file: !3502, line: 74, baseType: !3280, size: 320, offset: 2048)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !3501, file: !3502, line: 75, baseType: !3067, size: 64, offset: 2368)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_main_tbl", scope: !3501, file: !3502, line: 76, baseType: !3562, size: 64, offset: 2432)
!3562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3563, size: 64)
!3563 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_table", file: !3502, line: 76, flags: DIFlagFwdDecl)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walkers", scope: !3501, file: !3502, line: 77, baseType: !330, size: 128, offset: 2496)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_dst_ops", scope: !3501, file: !3502, line: 78, baseType: !3566, size: 1088, offset: 2624)
!3566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_ops", file: !971, line: 15, size: 1088, elements: !3567)
!3567 = !{!3568, !3569, !3570, !3575, !3581, !3587, !3588, !3592, !3596, !3600, !3604, !3605, !3609, !3613, !3617, !3621, !3625, !3626}
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !3566, file: !971, line: 16, baseType: !522, size: 16)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh", scope: !3566, file: !971, line: 17, baseType: !7, size: 32, offset: 32)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3566, file: !971, line: 19, baseType: !3571, size: 64, offset: 64)
!3571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3572, size: 64)
!3572 = !DISubroutineType(types: !3573)
!3573 = !{!78, !3574}
!3574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3566, size: 64)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !3566, file: !971, line: 20, baseType: !3576, size: 64, offset: 128)
!3576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3577, size: 64)
!3577 = !DISubroutineType(types: !3578)
!3578 = !{!3579, !3579, !539}
!3579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3580, size: 64)
!3580 = !DICompositeType(tag: DW_TAG_structure_type, name: "dst_entry", file: !463, line: 956, flags: DIFlagFwdDecl)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "default_advmss", scope: !3566, file: !971, line: 21, baseType: !3582, size: 64, offset: 192)
!3582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3583, size: 64)
!3583 = !DISubroutineType(types: !3584)
!3584 = !{!7, !3585}
!3585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3586, size: 64)
!3586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3580)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !3566, file: !971, line: 22, baseType: !3582, size: 64, offset: 256)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "cow_metrics", scope: !3566, file: !971, line: 23, baseType: !3589, size: 64, offset: 320)
!3589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3590, size: 64)
!3590 = !DISubroutineType(types: !3591)
!3591 = !{!2562, !3579, !358}
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !3566, file: !971, line: 24, baseType: !3593, size: 64, offset: 384)
!3593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3594, size: 64)
!3594 = !DISubroutineType(types: !3595)
!3595 = !{null, !3579}
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "ifdown", scope: !3566, file: !971, line: 25, baseType: !3597, size: 64, offset: 448)
!3597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3598, size: 64)
!3598 = !DISubroutineType(types: !3599)
!3599 = !{null, !3579, !336, !78}
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "negative_advice", scope: !3566, file: !971, line: 27, baseType: !3601, size: 64, offset: 512)
!3601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3602, size: 64)
!3602 = !DISubroutineType(types: !3603)
!3603 = !{!3579, !3579}
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "link_failure", scope: !3566, file: !971, line: 28, baseType: !514, size: 64, offset: 576)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "update_pmtu", scope: !3566, file: !971, line: 29, baseType: !3606, size: 64, offset: 640)
!3606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3607, size: 64)
!3607 = !DISubroutineType(types: !3608)
!3608 = !{null, !3579, !491, !461, !1033, !817}
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "redirect", scope: !3566, file: !971, line: 32, baseType: !3610, size: 64, offset: 704)
!3610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3611, size: 64)
!3611 = !DISubroutineType(types: !3612)
!3612 = !{null, !3579, !491, !461}
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "local_out", scope: !3566, file: !971, line: 34, baseType: !3614, size: 64, offset: 768)
!3614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3615, size: 64)
!3615 = !DISubroutineType(types: !3616)
!3616 = !{!78, !3028, !491, !461}
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_lookup", scope: !3566, file: !971, line: 35, baseType: !3618, size: 64, offset: 832)
!3618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3619, size: 64)
!3619 = !DISubroutineType(types: !3620)
!3620 = !{!969, !3585, !461, !3303}
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_neigh", scope: !3566, file: !971, line: 38, baseType: !3622, size: 64, offset: 896)
!3622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3623, size: 64)
!3623 = !DISubroutineType(types: !3624)
!3624 = !{null, !3585, !3303}
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "kmem_cachep", scope: !3566, file: !971, line: 41, baseType: !2097, size: 64, offset: 960)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "pcpuc_entries", scope: !3566, file: !971, line: 43, baseType: !3627, size: 64, offset: 1024)
!3627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !3628, line: 97, size: 64, elements: !3629)
!3628 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!3629 = !{!3630}
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3627, file: !3628, line: 98, baseType: !423, size: 64)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walker_lock", scope: !3501, file: !3502, line: 79, baseType: !1958, offset: 3712)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_gc_lock", scope: !3501, file: !3502, line: 80, baseType: !1716, offset: 3712)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_expire", scope: !3501, file: !3502, line: 81, baseType: !7, size: 32, offset: 3712)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_last_gc", scope: !3501, file: !3502, line: 82, baseType: !358, size: 64, offset: 3776)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !3501, file: !3502, line: 94, baseType: !3213, size: 64, offset: 3840)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_sk", scope: !3501, file: !3502, line: 95, baseType: !491, size: 64, offset: 3904)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !3501, file: !3502, line: 96, baseType: !491, size: 64, offset: 3968)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "igmp_sk", scope: !3501, file: !3502, line: 97, baseType: !491, size: 64, offset: 4032)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !3501, file: !3502, line: 98, baseType: !491, size: 64, offset: 4096)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !3501, file: !3502, line: 107, baseType: !429, size: 32, offset: 4160)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_sernum", scope: !3501, file: !3502, line: 108, baseType: !429, size: 32, offset: 4192)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_data", scope: !3501, file: !3502, line: 109, baseType: !3643, size: 64, offset: 4224)
!3643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3644, size: 64)
!3644 = !DICompositeType(tag: DW_TAG_structure_type, name: "seg6_pernet_data", file: !3502, line: 109, flags: DIFlagFwdDecl)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !3501, file: !3502, line: 110, baseType: !3487, size: 64, offset: 4288)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "ip6mr_notifier_ops", scope: !3501, file: !3502, line: 111, baseType: !3487, size: 64, offset: 4352)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !3501, file: !3502, line: 112, baseType: !7, size: 32, offset: 4416)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "ip6addrlbl_table", scope: !3501, file: !3502, line: 117, baseType: !3649, size: 128, offset: 4480)
!3649 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3501, file: !3502, line: 113, size: 128, elements: !3650)
!3650 = !{!3651, !3652, !3653}
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3649, file: !3502, line: 114, baseType: !1627, size: 64)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3649, file: !3502, line: 115, baseType: !1716, offset: 64)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3649, file: !3502, line: 116, baseType: !1033, size: 32, offset: 64)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "wext_nlevents", scope: !3029, file: !3030, line: 162, baseType: !3655, size: 192, offset: 14784)
!3655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff_head", file: !463, line: 291, size: 192, elements: !3656)
!3656 = !{!3657, !3658, !3659, !3660}
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3655, file: !463, line: 293, baseType: !461, size: 64)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3655, file: !463, line: 294, baseType: !461, size: 64, offset: 64)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !3655, file: !463, line: 296, baseType: !539, size: 32, offset: 128)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3655, file: !463, line: 297, baseType: !1716, offset: 160)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !3029, file: !3030, line: 164, baseType: !3662, size: 64, offset: 14976)
!3662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3663, size: 64)
!3663 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_generic", file: !3030, line: 47, flags: DIFlagFwdDecl)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "bpf", scope: !3029, file: !3030, line: 167, baseType: !3665, size: 512, offset: 15040)
!3665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_bpf", file: !3666, line: 14, size: 512, elements: !3667)
!3666 = !DIFile(filename: "./include/net/netns/bpf.h", directory: "/home/lizy2001/genbc/linux")
!3667 = !{!3668, !3683, !3685}
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "run_array", scope: !3665, file: !3666, line: 16, baseType: !3669, size: 128)
!3669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3670, size: 128, elements: !2710)
!3670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3671, size: 64)
!3671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array", file: !111, line: 1037, size: 128, elements: !3672)
!3672 = !{!3673, !3674}
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3671, file: !111, line: 1038, baseType: !345, size: 128, align: 64)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !3671, file: !111, line: 1039, baseType: !3675, offset: 128)
!3675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3676, elements: !355)
!3676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array_item", file: !111, line: 1032, size: 192, elements: !3677)
!3677 = !{!3678, !3679}
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3676, file: !111, line: 1033, baseType: !1134, size: 64)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !3676, file: !111, line: 1034, baseType: !3680, size: 128, offset: 64)
!3680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3681, size: 128, elements: !2710)
!3681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3682, size: 64)
!3682 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_cgroup_storage", file: !111, line: 1034, flags: DIFlagFwdDecl)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "progs", scope: !3665, file: !3666, line: 17, baseType: !3684, size: 128, offset: 128)
!3684 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1134, size: 128, elements: !2710)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3665, file: !3666, line: 18, baseType: !3686, size: 256, offset: 256)
!3686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !330, size: 256, elements: !2710)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "net_cookie", scope: !3029, file: !3030, line: 174, baseType: !419, size: 64, offset: 15552)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "can", scope: !3029, file: !3030, line: 183, baseType: !3689, size: 1216, offset: 15616)
!3689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_can", file: !3690, line: 15, size: 1216, elements: !3691)
!3690 = !DIFile(filename: "./include/net/netns/can.h", directory: "/home/lizy2001/genbc/linux")
!3691 = !{!3692, !3693, !3694, !3695, !3696, !3697, !3698, !3699, !3700, !3701, !3702, !3705, !3706, !3707, !3710, !3713}
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !3689, file: !3690, line: 17, baseType: !3056, size: 64)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "pde_stats", scope: !3689, file: !3690, line: 18, baseType: !3056, size: 64, offset: 64)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "pde_reset_stats", scope: !3689, file: !3690, line: 19, baseType: !3056, size: 64, offset: 128)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_all", scope: !3689, file: !3690, line: 20, baseType: !3056, size: 64, offset: 192)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_fil", scope: !3689, file: !3690, line: 21, baseType: !3056, size: 64, offset: 256)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_inv", scope: !3689, file: !3690, line: 22, baseType: !3056, size: 64, offset: 320)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_sff", scope: !3689, file: !3690, line: 23, baseType: !3056, size: 64, offset: 384)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_eff", scope: !3689, file: !3690, line: 24, baseType: !3056, size: 64, offset: 448)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_err", scope: !3689, file: !3690, line: 25, baseType: !3056, size: 64, offset: 512)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "bcmproc_dir", scope: !3689, file: !3690, line: 26, baseType: !3056, size: 64, offset: 576)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "rx_alldev_list", scope: !3689, file: !3690, line: 30, baseType: !3703, size: 64, offset: 640)
!3703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3704, size: 64)
!3704 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_dev_rcv_lists", file: !3690, line: 11, flags: DIFlagFwdDecl)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "rcvlists_lock", scope: !3689, file: !3690, line: 31, baseType: !1716, offset: 704)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "stattimer", scope: !3689, file: !3690, line: 32, baseType: !3280, size: 320, offset: 704)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "pkg_stats", scope: !3689, file: !3690, line: 33, baseType: !3708, size: 64, offset: 1024)
!3708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3709, size: 64)
!3709 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_pkg_stats", file: !3690, line: 12, flags: DIFlagFwdDecl)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_lists_stats", scope: !3689, file: !3690, line: 34, baseType: !3711, size: 64, offset: 1088)
!3711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3712, size: 64)
!3712 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_rcv_lists_stats", file: !3690, line: 13, flags: DIFlagFwdDecl)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "cgw_list", scope: !3689, file: !3690, line: 37, baseType: !1627, size: 64, offset: 1152)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "diag_nlsk", scope: !3029, file: !3030, line: 191, baseType: !491, size: 64, offset: 16832)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !3013, file: !3014, line: 38, baseType: !3716, size: 64, offset: 384)
!3716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3717, size: 64)
!3717 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !3014, line: 38, flags: DIFlagFwdDecl)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !3013, file: !3014, line: 39, baseType: !3716, size: 64, offset: 448)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !3013, file: !3014, line: 40, baseType: !3720, size: 64, offset: 512)
!3720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3721, size: 64)
!3721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !3722, line: 856, size: 448, elements: !3723)
!3722 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!3723 = !{!3724, !3725, !3726, !3727, !3728}
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3721, file: !3722, line: 857, baseType: !614, size: 32)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3721, file: !3722, line: 858, baseType: !2861, size: 192, offset: 64)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !3721, file: !3722, line: 859, baseType: !2827, size: 64, offset: 256)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !3721, file: !3722, line: 860, baseType: !2969, size: 64, offset: 320)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !3721, file: !3722, line: 861, baseType: !3729, size: 64, offset: 384)
!3729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3730, size: 64)
!3730 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !3731, line: 16, flags: DIFlagFwdDecl)
!3731 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2373, file: !2374, line: 969, baseType: !3733, size: 64, offset: 9216)
!3733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3734, size: 64)
!3734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !3735, line: 82, size: 7296, elements: !3736)
!3735 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!3736 = !{!3737, !3738, !3739, !3740, !3741, !3742, !3743, !3754, !3755, !3756, !3757, !3758, !3759, !3760, !3761, !3762, !3763, !3764, !3765, !3766, !3772, !3781, !3782, !3784, !3785, !3786, !3789, !3790, !3791, !3792, !3793, !3794, !3795, !3796, !3797, !3798, !3799, !3800, !3801, !3802, !3803, !3804, !3805, !3806, !3807, !3808, !3809, !3810, !3811, !3814, !3815, !3822, !3823, !3824, !3825, !3826, !3827}
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !3734, file: !3735, line: 83, baseType: !614, size: 32)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !3734, file: !3735, line: 84, baseType: !429, size: 32, offset: 32)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !3734, file: !3735, line: 85, baseType: !78, size: 32, offset: 64)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !3734, file: !3735, line: 86, baseType: !330, size: 128, offset: 128)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !3734, file: !3735, line: 88, baseType: !1935, size: 128, offset: 256)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !3734, file: !3735, line: 91, baseType: !2372, size: 64, offset: 384)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !3734, file: !3735, line: 94, baseType: !3744, size: 192, offset: 448)
!3744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !3745, line: 30, size: 192, elements: !3746)
!3745 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!3746 = !{!3747, !3748}
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3744, file: !3745, line: 31, baseType: !330, size: 128)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !3744, file: !3745, line: 32, baseType: !3749, size: 64, offset: 128)
!3749 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !3750, line: 25, baseType: !3751)
!3750 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!3751 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3750, line: 23, size: 64, elements: !3752)
!3752 = !{!3753}
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !3751, file: !3750, line: 24, baseType: !2517, size: 64)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !3734, file: !3735, line: 97, baseType: !1627, size: 64, offset: 640)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !3734, file: !3735, line: 100, baseType: !78, size: 32, offset: 704)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !3734, file: !3735, line: 106, baseType: !78, size: 32, offset: 736)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !3734, file: !3735, line: 107, baseType: !2372, size: 64, offset: 768)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !3734, file: !3735, line: 110, baseType: !78, size: 32, offset: 832)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3734, file: !3735, line: 111, baseType: !7, size: 32, offset: 864)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !3734, file: !3735, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !3734, file: !3735, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !3734, file: !3735, line: 128, baseType: !78, size: 32, offset: 928)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !3734, file: !3735, line: 129, baseType: !330, size: 128, offset: 960)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !3734, file: !3735, line: 132, baseType: !2443, size: 512, offset: 1088)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !3734, file: !3735, line: 133, baseType: !499, size: 64, offset: 1600)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !3734, file: !3735, line: 140, baseType: !3767, size: 256, offset: 1664)
!3767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3768, size: 256, elements: !2710)
!3768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !3735, line: 38, size: 128, elements: !3769)
!3769 = !{!3770, !3771}
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3768, file: !3735, line: 39, baseType: !377, size: 64)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !3768, file: !3735, line: 40, baseType: !377, size: 64, offset: 64)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !3734, file: !3735, line: 146, baseType: !3773, size: 192, offset: 1920)
!3773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !3735, line: 66, size: 192, elements: !3774)
!3774 = !{!3775}
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !3773, file: !3735, line: 67, baseType: !3776, size: 192)
!3776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !3735, line: 47, size: 192, elements: !3777)
!3777 = !{!3778, !3779, !3780}
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3776, file: !3735, line: 48, baseType: !419, size: 64)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3776, file: !3735, line: 49, baseType: !419, size: 64, offset: 64)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !3776, file: !3735, line: 50, baseType: !419, size: 64, offset: 128)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !3734, file: !3735, line: 150, baseType: !2671, size: 640, offset: 2112)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !3734, file: !3735, line: 153, baseType: !3783, size: 256, offset: 2752)
!3783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2617, size: 256, elements: !2318)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !3734, file: !3735, line: 159, baseType: !2617, size: 64, offset: 3008)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !3734, file: !3735, line: 162, baseType: !78, size: 32, offset: 3072)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !3734, file: !3735, line: 164, baseType: !3787, size: 64, offset: 3136)
!3787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3788, size: 64)
!3788 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !3735, line: 164, flags: DIFlagFwdDecl)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !3734, file: !3735, line: 175, baseType: !3370, size: 32, offset: 3200)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3734, file: !3735, line: 176, baseType: !377, size: 64, offset: 3264)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3734, file: !3735, line: 176, baseType: !377, size: 64, offset: 3328)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !3734, file: !3735, line: 176, baseType: !377, size: 64, offset: 3392)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !3734, file: !3735, line: 176, baseType: !377, size: 64, offset: 3456)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !3734, file: !3735, line: 177, baseType: !377, size: 64, offset: 3520)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !3734, file: !3735, line: 178, baseType: !377, size: 64, offset: 3584)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !3734, file: !3735, line: 179, baseType: !2659, size: 128, offset: 3648)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !3734, file: !3735, line: 180, baseType: !358, size: 64, offset: 3776)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !3734, file: !3735, line: 180, baseType: !358, size: 64, offset: 3840)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !3734, file: !3735, line: 180, baseType: !358, size: 64, offset: 3904)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !3734, file: !3735, line: 180, baseType: !358, size: 64, offset: 3968)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !3734, file: !3735, line: 181, baseType: !358, size: 64, offset: 4032)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !3734, file: !3735, line: 181, baseType: !358, size: 64, offset: 4096)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !3734, file: !3735, line: 181, baseType: !358, size: 64, offset: 4160)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !3734, file: !3735, line: 181, baseType: !358, size: 64, offset: 4224)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !3734, file: !3735, line: 182, baseType: !358, size: 64, offset: 4288)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !3734, file: !3735, line: 182, baseType: !358, size: 64, offset: 4352)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !3734, file: !3735, line: 182, baseType: !358, size: 64, offset: 4416)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !3734, file: !3735, line: 182, baseType: !358, size: 64, offset: 4480)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !3734, file: !3735, line: 183, baseType: !358, size: 64, offset: 4544)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !3734, file: !3735, line: 183, baseType: !358, size: 64, offset: 4608)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !3734, file: !3735, line: 184, baseType: !3812, offset: 4672)
!3812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !3813, line: 12, elements: !1633)
!3813 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !3734, file: !3735, line: 192, baseType: !381, size: 64, offset: 4672)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !3734, file: !3735, line: 203, baseType: !3816, size: 2048, offset: 4736)
!3816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3817, size: 2048, elements: !315)
!3817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !3818, line: 43, size: 128, elements: !3819)
!3818 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!3819 = !{!3820, !3821}
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !3817, file: !3818, line: 44, baseType: !1088, size: 64)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !3817, file: !3818, line: 45, baseType: !1088, size: 64, offset: 64)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !3734, file: !3735, line: 220, baseType: !817, size: 8, offset: 6784)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !3734, file: !3735, line: 221, baseType: !671, size: 16, offset: 6800)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !3734, file: !3735, line: 222, baseType: !671, size: 16, offset: 6816)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !3734, file: !3735, line: 224, baseType: !2137, size: 64, offset: 6848)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !3734, file: !3735, line: 227, baseType: !1711, size: 192, offset: 6912)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !3734, file: !3735, line: 233, baseType: !1711, size: 192, offset: 7104)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !2373, file: !2374, line: 970, baseType: !3829, size: 64, offset: 9280)
!3829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3830, size: 64)
!3830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !3735, line: 20, size: 16576, elements: !3831)
!3831 = !{!3832, !3833, !3834, !3835}
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !3830, file: !3735, line: 21, baseType: !1716)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3830, file: !3735, line: 22, baseType: !614, size: 32)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !3830, file: !3735, line: 23, baseType: !1935, size: 128, offset: 64)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3830, file: !3735, line: 24, baseType: !3836, size: 16384, offset: 192)
!3836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3837, size: 16384, elements: !3857)
!3837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !3745, line: 49, size: 256, elements: !3838)
!3838 = !{!3839}
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !3837, file: !3745, line: 50, baseType: !3840, size: 256)
!3840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !3745, line: 35, size: 256, elements: !3841)
!3841 = !{!3842, !3849, !3850, !3856}
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !3840, file: !3745, line: 37, baseType: !3843, size: 64)
!3843 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !3844, line: 19, baseType: !3845)
!3844 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!3845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3846, size: 64)
!3846 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !3844, line: 18, baseType: !3847)
!3847 = !DISubroutineType(types: !3848)
!3848 = !{null, !78}
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !3840, file: !3745, line: 38, baseType: !358, size: 64, offset: 64)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !3840, file: !3745, line: 44, baseType: !3851, size: 64, offset: 128)
!3851 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !3844, line: 22, baseType: !3852)
!3852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3853, size: 64)
!3853 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !3844, line: 21, baseType: !3854)
!3854 = !DISubroutineType(types: !3855)
!3855 = !{null}
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !3840, file: !3745, line: 46, baseType: !3749, size: 64, offset: 192)
!3857 = !{!3858}
!3858 = !DISubrange(count: 64)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !2373, file: !2374, line: 971, baseType: !3749, size: 64, offset: 9344)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !2373, file: !2374, line: 972, baseType: !3749, size: 64, offset: 9408)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !2373, file: !2374, line: 974, baseType: !3749, size: 64, offset: 9472)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !2373, file: !2374, line: 975, baseType: !3744, size: 192, offset: 9536)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !2373, file: !2374, line: 976, baseType: !358, size: 64, offset: 9728)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !2373, file: !2374, line: 977, baseType: !1085, size: 64, offset: 9792)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !2373, file: !2374, line: 978, baseType: !7, size: 32, offset: 9856)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !2373, file: !2374, line: 980, baseType: !348, size: 64, offset: 9920)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !2373, file: !2374, line: 989, baseType: !3868, size: 128, offset: 9984)
!3868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !3869, line: 35, size: 128, elements: !3870)
!3869 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!3870 = !{!3871, !3872, !3873}
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3868, file: !3869, line: 36, baseType: !78, size: 32)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !3868, file: !3869, line: 37, baseType: !429, size: 32, offset: 32)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3868, file: !3869, line: 38, baseType: !3874, size: 64, offset: 64)
!3874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3875, size: 64)
!3875 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !3869, line: 23, flags: DIFlagFwdDecl)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !2373, file: !2374, line: 992, baseType: !377, size: 64, offset: 10112)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !2373, file: !2374, line: 993, baseType: !377, size: 64, offset: 10176)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !2373, file: !2374, line: 996, baseType: !1716, offset: 10240)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !2373, file: !2374, line: 999, baseType: !1807, offset: 10240)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !2373, file: !2374, line: 1001, baseType: !3881, size: 64, offset: 10240)
!3881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !2374, line: 636, size: 64, elements: !3882)
!3882 = !{!3883}
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3881, file: !2374, line: 637, baseType: !3884, size: 64)
!3884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3881, size: 64)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !2373, file: !2374, line: 1005, baseType: !1793, size: 128, offset: 10304)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !2373, file: !2374, line: 1007, baseType: !2372, size: 64, offset: 10432)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !2373, file: !2374, line: 1009, baseType: !3888, size: 64, offset: 10496)
!3888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3889, size: 64)
!3889 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !2374, line: 1009, flags: DIFlagFwdDecl)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !2373, file: !2374, line: 1043, baseType: !637, size: 64, offset: 10560)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !2373, file: !2374, line: 1046, baseType: !3892, size: 64, offset: 10624)
!3892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3893, size: 64)
!3893 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !2374, line: 41, flags: DIFlagFwdDecl)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !2373, file: !2374, line: 1050, baseType: !3895, size: 64, offset: 10688)
!3895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3896, size: 64)
!3896 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !2374, line: 42, flags: DIFlagFwdDecl)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !2373, file: !2374, line: 1054, baseType: !3898, size: 64, offset: 10752)
!3898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3899, size: 64)
!3899 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !2374, line: 55, flags: DIFlagFwdDecl)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2373, file: !2374, line: 1056, baseType: !3901, size: 64, offset: 10816)
!3901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3902, size: 64)
!3902 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !2374, line: 40, flags: DIFlagFwdDecl)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !2373, file: !2374, line: 1058, baseType: !3904, size: 64, offset: 10880)
!3904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3905, size: 64)
!3905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !3906, line: 99, size: 704, elements: !3907)
!3906 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!3907 = !{!3908, !3909, !3910, !3911, !3912, !3913, !3914, !3933, !3934}
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3905, file: !3906, line: 100, baseType: !417, size: 64)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !3905, file: !3906, line: 101, baseType: !429, size: 32, offset: 64)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !3905, file: !3906, line: 102, baseType: !429, size: 32, offset: 96)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3905, file: !3906, line: 105, baseType: !1716, offset: 128)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !3905, file: !3906, line: 107, baseType: !522, size: 16, offset: 128)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !3905, file: !3906, line: 109, baseType: !1783, size: 128, offset: 192)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !3905, file: !3906, line: 110, baseType: !3915, size: 64, offset: 320)
!3915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3916, size: 64)
!3916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !3906, line: 73, size: 448, elements: !3917)
!3917 = !{!3918, !3921, !3922, !3927, !3932}
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !3916, file: !3906, line: 74, baseType: !3919, size: 64)
!3919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3920, size: 64)
!3920 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !3906, line: 74, flags: DIFlagFwdDecl)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !3916, file: !3906, line: 75, baseType: !3904, size: 64, offset: 64)
!3922 = !DIDerivedType(tag: DW_TAG_member, scope: !3916, file: !3906, line: 83, baseType: !3923, size: 128, offset: 128)
!3923 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3916, file: !3906, line: 83, size: 128, elements: !3924)
!3924 = !{!3925, !3926}
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !3923, file: !3906, line: 84, baseType: !330, size: 128)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !3923, file: !3906, line: 85, baseType: !2097, size: 64)
!3927 = !DIDerivedType(tag: DW_TAG_member, scope: !3916, file: !3906, line: 87, baseType: !3928, size: 128, offset: 256)
!3928 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3916, file: !3906, line: 87, size: 128, elements: !3929)
!3929 = !{!3930, !3931}
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !3928, file: !3906, line: 88, baseType: !322, size: 128)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !3928, file: !3906, line: 89, baseType: !345, size: 128, align: 64)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3916, file: !3906, line: 92, baseType: !7, size: 32, offset: 384)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !3905, file: !3906, line: 111, baseType: !1627, size: 64, offset: 384)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !3905, file: !3906, line: 113, baseType: !2875, size: 256, offset: 448)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !2373, file: !2374, line: 1061, baseType: !3936, size: 64, offset: 10944)
!3936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3937, size: 64)
!3937 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !2374, line: 43, flags: DIFlagFwdDecl)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !2373, file: !2374, line: 1064, baseType: !358, size: 64, offset: 11008)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !2373, file: !2374, line: 1065, baseType: !3940, size: 64, offset: 11072)
!3940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3941, size: 64)
!3941 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !3745, line: 14, baseType: !3942)
!3942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !3745, line: 12, size: 384, elements: !3943)
!3943 = !{!3944}
!3944 = !DIDerivedType(tag: DW_TAG_member, scope: !3942, file: !3745, line: 13, baseType: !3945, size: 384)
!3945 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3942, file: !3745, line: 13, size: 384, elements: !3946)
!3946 = !{!3947, !3948, !3949, !3950}
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !3945, file: !3745, line: 13, baseType: !78, size: 32)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !3945, file: !3745, line: 13, baseType: !78, size: 32, offset: 32)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !3945, file: !3745, line: 13, baseType: !78, size: 32, offset: 64)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !3945, file: !3745, line: 13, baseType: !3951, size: 256, offset: 128)
!3951 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !3952, line: 32, size: 256, elements: !3953)
!3952 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!3953 = !{!3954, !3959, !3972, !3978, !3987, !4007, !4012}
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !3951, file: !3952, line: 37, baseType: !3955, size: 64)
!3955 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3951, file: !3952, line: 34, size: 64, elements: !3956)
!3956 = !{!3957, !3958}
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3955, file: !3952, line: 35, baseType: !2606, size: 32)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3955, file: !3952, line: 36, baseType: !1434, size: 32, offset: 32)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !3951, file: !3952, line: 45, baseType: !3960, size: 192)
!3960 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3951, file: !3952, line: 40, size: 192, elements: !3961)
!3961 = !{!3962, !3964, !3965, !3971}
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !3960, file: !3952, line: 41, baseType: !3963, size: 32)
!3963 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !1087, line: 95, baseType: !78)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !3960, file: !3952, line: 42, baseType: !78, size: 32, offset: 32)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3960, file: !3952, line: 43, baseType: !3966, size: 64, offset: 64)
!3966 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !3952, line: 11, baseType: !3967)
!3967 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !3952, line: 8, size: 64, elements: !3968)
!3968 = !{!3969, !3970}
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !3967, file: !3952, line: 9, baseType: !78, size: 32)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !3967, file: !3952, line: 10, baseType: !637, size: 64)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !3960, file: !3952, line: 44, baseType: !78, size: 32, offset: 128)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !3951, file: !3952, line: 52, baseType: !3973, size: 128)
!3973 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3951, file: !3952, line: 48, size: 128, elements: !3974)
!3974 = !{!3975, !3976, !3977}
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3973, file: !3952, line: 49, baseType: !2606, size: 32)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3973, file: !3952, line: 50, baseType: !1434, size: 32, offset: 32)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3973, file: !3952, line: 51, baseType: !3966, size: 64, offset: 64)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !3951, file: !3952, line: 61, baseType: !3979, size: 256)
!3979 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3951, file: !3952, line: 55, size: 256, elements: !3980)
!3980 = !{!3981, !3982, !3983, !3984, !3986}
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3979, file: !3952, line: 56, baseType: !2606, size: 32)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3979, file: !3952, line: 57, baseType: !1434, size: 32, offset: 32)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !3979, file: !3952, line: 58, baseType: !78, size: 32, offset: 64)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !3979, file: !3952, line: 59, baseType: !3985, size: 64, offset: 128)
!3985 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !1087, line: 94, baseType: !1569)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !3979, file: !3952, line: 60, baseType: !3985, size: 64, offset: 192)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !3951, file: !3952, line: 95, baseType: !3988, size: 256)
!3988 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3951, file: !3952, line: 64, size: 256, elements: !3989)
!3989 = !{!3990, !3991}
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !3988, file: !3952, line: 65, baseType: !637, size: 64)
!3991 = !DIDerivedType(tag: DW_TAG_member, scope: !3988, file: !3952, line: 77, baseType: !3992, size: 192, offset: 64)
!3992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3988, file: !3952, line: 77, size: 192, elements: !3993)
!3993 = !{!3994, !3995, !4002}
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !3992, file: !3952, line: 82, baseType: !671, size: 16)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !3992, file: !3952, line: 88, baseType: !3996, size: 192)
!3996 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3992, file: !3952, line: 84, size: 192, elements: !3997)
!3997 = !{!3998, !4000, !4001}
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !3996, file: !3952, line: 85, baseType: !3999, size: 64)
!3999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 64, elements: !2479)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !3996, file: !3952, line: 86, baseType: !637, size: 64, offset: 64)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !3996, file: !3952, line: 87, baseType: !637, size: 64, offset: 128)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !3992, file: !3952, line: 93, baseType: !4003, size: 96)
!4003 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3992, file: !3952, line: 90, size: 96, elements: !4004)
!4004 = !{!4005, !4006}
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !4003, file: !3952, line: 91, baseType: !3999, size: 64)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !4003, file: !3952, line: 92, baseType: !539, size: 32, offset: 64)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !3951, file: !3952, line: 101, baseType: !4008, size: 128)
!4008 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3951, file: !3952, line: 98, size: 128, elements: !4009)
!4009 = !{!4010, !4011}
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !4008, file: !3952, line: 99, baseType: !1044, size: 64)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !4008, file: !3952, line: 100, baseType: !78, size: 32, offset: 64)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !3951, file: !3952, line: 108, baseType: !4013, size: 128)
!4013 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3951, file: !3952, line: 104, size: 128, elements: !4014)
!4014 = !{!4015, !4016, !4017}
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !4013, file: !3952, line: 105, baseType: !637, size: 64)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !4013, file: !3952, line: 106, baseType: !78, size: 32, offset: 64)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !4013, file: !3952, line: 107, baseType: !7, size: 32, offset: 96)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2373, file: !2374, line: 1067, baseType: !3812, offset: 11136)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !2373, file: !2374, line: 1099, baseType: !4020, size: 64, offset: 11136)
!4020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4021, size: 64)
!4021 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !2374, line: 56, flags: DIFlagFwdDecl)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !2373, file: !2374, line: 1103, baseType: !330, size: 128, offset: 11200)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !2373, file: !2374, line: 1104, baseType: !4024, size: 64, offset: 11328)
!4024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4025, size: 64)
!4025 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !2374, line: 46, flags: DIFlagFwdDecl)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !2373, file: !2374, line: 1105, baseType: !1711, size: 192, offset: 11392)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !2373, file: !2374, line: 1106, baseType: !7, size: 32, offset: 11584)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !2373, file: !2374, line: 1109, baseType: !4029, size: 128, offset: 11648)
!4029 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4030, size: 128, elements: !2710)
!4030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4031, size: 64)
!4031 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !2374, line: 51, flags: DIFlagFwdDecl)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !2373, file: !2374, line: 1110, baseType: !1711, size: 192, offset: 11776)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !2373, file: !2374, line: 1111, baseType: !330, size: 128, offset: 11968)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !2373, file: !2374, line: 1173, baseType: !4035, size: 64, offset: 12096)
!4035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4036, size: 64)
!4036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !4037, line: 62, size: 256, align: 256, elements: !4038)
!4037 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!4038 = !{!4039, !4040, !4041, !4046}
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !4036, file: !4037, line: 75, baseType: !539, size: 32)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !4036, file: !4037, line: 90, baseType: !539, size: 32, offset: 32)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !4036, file: !4037, line: 124, baseType: !4042, size: 64, offset: 64)
!4042 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4036, file: !4037, line: 109, size: 64, elements: !4043)
!4043 = !{!4044, !4045}
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !4042, file: !4037, line: 110, baseType: !379, size: 64)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4042, file: !4037, line: 112, baseType: !379, size: 64)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4036, file: !4037, line: 144, baseType: !539, size: 32, offset: 128)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !2373, file: !2374, line: 1174, baseType: !1033, size: 32, offset: 12160)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !2373, file: !2374, line: 1179, baseType: !358, size: 64, offset: 12224)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !2373, file: !2374, line: 1182, baseType: !4050, size: 128, offset: 12288)
!4050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !2314, line: 76, size: 128, elements: !4051)
!4051 = !{!4052, !4057, !4058}
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4050, file: !2314, line: 85, baseType: !4053, size: 64)
!4053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !4054, line: 7, size: 64, elements: !4055)
!4054 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!4055 = !{!4056}
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !4053, file: !4054, line: 12, baseType: !2514, size: 64)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !4050, file: !2314, line: 88, baseType: !817, size: 8, offset: 64)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !4050, file: !2314, line: 95, baseType: !817, size: 8, offset: 72)
!4059 = !DIDerivedType(tag: DW_TAG_member, scope: !2373, file: !2374, line: 1184, baseType: !4060, size: 128, offset: 12416)
!4060 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2373, file: !2374, line: 1184, size: 128, elements: !4061)
!4061 = !{!4062, !4063}
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !4060, file: !2374, line: 1185, baseType: !614, size: 32)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4060, file: !2374, line: 1186, baseType: !345, size: 128, align: 64)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !2373, file: !2374, line: 1190, baseType: !1929, size: 64, offset: 12544)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !2373, file: !2374, line: 1192, baseType: !4066, size: 128, offset: 12608)
!4066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !2314, line: 64, size: 128, elements: !4067)
!4067 = !{!4068, !4069, !4070}
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !4066, file: !2314, line: 65, baseType: !1765, size: 64)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4066, file: !2314, line: 67, baseType: !539, size: 32, offset: 64)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4066, file: !2314, line: 68, baseType: !539, size: 32, offset: 96)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !2373, file: !2374, line: 1206, baseType: !78, size: 32, offset: 12736)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !2373, file: !2374, line: 1207, baseType: !78, size: 32, offset: 12768)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !2373, file: !2374, line: 1209, baseType: !358, size: 64, offset: 12800)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !2373, file: !2374, line: 1219, baseType: !377, size: 64, offset: 12864)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !2373, file: !2374, line: 1220, baseType: !377, size: 64, offset: 12928)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !2373, file: !2374, line: 1317, baseType: !78, size: 32, offset: 12992)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !2373, file: !2374, line: 1319, baseType: !2372, size: 64, offset: 13056)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !2373, file: !2374, line: 1322, baseType: !4079, size: 64, offset: 13120)
!4079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4080, size: 64)
!4080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !4081, line: 56, size: 512, elements: !4082)
!4081 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!4082 = !{!4083, !4084, !4085, !4086, !4087, !4088, !4089, !4091}
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4080, file: !4081, line: 57, baseType: !4079, size: 64)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4080, file: !4081, line: 58, baseType: !637, size: 64, offset: 64)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4080, file: !4081, line: 59, baseType: !358, size: 64, offset: 128)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4080, file: !4081, line: 60, baseType: !358, size: 64, offset: 192)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !4080, file: !4081, line: 61, baseType: !1847, size: 64, offset: 256)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !4080, file: !4081, line: 62, baseType: !7, size: 32, offset: 320)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !4080, file: !4081, line: 63, baseType: !4090, size: 64, offset: 384)
!4090 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !323, line: 153, baseType: !377)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !4080, file: !4081, line: 64, baseType: !3303, size: 64, offset: 448)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !2373, file: !2374, line: 1326, baseType: !614, size: 32, offset: 13184)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !2373, file: !2374, line: 1342, baseType: !637, size: 64, offset: 13248)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !2373, file: !2374, line: 1343, baseType: !379, size: 64, offset: 13312)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !2373, file: !2374, line: 1344, baseType: !377, size: 64, offset: 13376)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !2373, file: !2374, line: 1345, baseType: !379, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !2373, file: !2374, line: 1346, baseType: !379, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !2373, file: !2374, line: 1347, baseType: !379, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !2373, file: !2374, line: 1348, baseType: !345, size: 128, align: 64, offset: 13504)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !2373, file: !2374, line: 1358, baseType: !4101, size: 34816, offset: 13824)
!4101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !4102, line: 485, size: 34816, elements: !4103)
!4102 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!4103 = !{!4104, !4122, !4123, !4124, !4125, !4126, !4127, !4128, !4129, !4133, !4134, !4135, !4136, !4137, !4138, !4141, !4142, !4143}
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !4101, file: !4102, line: 487, baseType: !4105, size: 192)
!4105 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4106, size: 192, elements: !1638)
!4106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !4107, line: 16, size: 64, elements: !4108)
!4107 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!4108 = !{!4109, !4110, !4111, !4112, !4113, !4114, !4115, !4116, !4117, !4118, !4119, !4120, !4121}
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !4106, file: !4107, line: 17, baseType: !627, size: 16)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !4106, file: !4107, line: 18, baseType: !627, size: 16, offset: 16)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !4106, file: !4107, line: 19, baseType: !627, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4106, file: !4107, line: 19, baseType: !627, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !4106, file: !4107, line: 19, baseType: !627, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !4106, file: !4107, line: 19, baseType: !627, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4106, file: !4107, line: 19, baseType: !627, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !4106, file: !4107, line: 20, baseType: !627, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !4106, file: !4107, line: 20, baseType: !627, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !4106, file: !4107, line: 20, baseType: !627, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4106, file: !4107, line: 20, baseType: !627, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4106, file: !4107, line: 20, baseType: !627, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !4106, file: !4107, line: 20, baseType: !627, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4101, file: !4102, line: 491, baseType: !358, size: 64, offset: 192)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !4101, file: !4102, line: 495, baseType: !522, size: 16, offset: 256)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !4101, file: !4102, line: 496, baseType: !522, size: 16, offset: 272)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !4101, file: !4102, line: 497, baseType: !522, size: 16, offset: 288)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !4101, file: !4102, line: 498, baseType: !522, size: 16, offset: 304)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !4101, file: !4102, line: 502, baseType: !358, size: 64, offset: 320)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !4101, file: !4102, line: 503, baseType: !358, size: 64, offset: 384)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !4101, file: !4102, line: 514, baseType: !4130, size: 256, offset: 448)
!4130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4131, size: 256, elements: !2318)
!4131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4132, size: 64)
!4132 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !4102, line: 483, flags: DIFlagFwdDecl)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !4101, file: !4102, line: 516, baseType: !358, size: 64, offset: 704)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !4101, file: !4102, line: 518, baseType: !358, size: 64, offset: 768)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !4101, file: !4102, line: 520, baseType: !358, size: 64, offset: 832)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !4101, file: !4102, line: 521, baseType: !358, size: 64, offset: 896)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !4101, file: !4102, line: 522, baseType: !358, size: 64, offset: 960)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !4101, file: !4102, line: 528, baseType: !4139, size: 64, offset: 1024)
!4139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4140, size: 64)
!4140 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !4102, line: 10, flags: DIFlagFwdDecl)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !4101, file: !4102, line: 535, baseType: !358, size: 64, offset: 1088)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !4101, file: !4102, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !4101, file: !4102, line: 540, baseType: !4144, size: 33280, offset: 1536)
!4144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !4145, line: 317, size: 33280, elements: !4146)
!4145 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!4146 = !{!4147, !4148, !4149}
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !4144, file: !4145, line: 330, baseType: !7, size: 32)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !4144, file: !4145, line: 337, baseType: !358, size: 64, offset: 64)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4144, file: !4145, line: 348, baseType: !4150, size: 32768, offset: 512)
!4150 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !4145, line: 304, size: 32768, elements: !4151)
!4151 = !{!4152, !4165, !4202, !4252, !4265}
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !4150, file: !4145, line: 305, baseType: !4153, size: 896)
!4153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !4145, line: 12, size: 896, elements: !4154)
!4154 = !{!4155, !4156, !4157, !4158, !4159, !4160, !4161, !4162, !4164}
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4153, file: !4145, line: 13, baseType: !1033, size: 32)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4153, file: !4145, line: 14, baseType: !1033, size: 32, offset: 32)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4153, file: !4145, line: 15, baseType: !1033, size: 32, offset: 64)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4153, file: !4145, line: 16, baseType: !1033, size: 32, offset: 96)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4153, file: !4145, line: 17, baseType: !1033, size: 32, offset: 128)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4153, file: !4145, line: 18, baseType: !1033, size: 32, offset: 160)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4153, file: !4145, line: 19, baseType: !1033, size: 32, offset: 192)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4153, file: !4145, line: 22, baseType: !4163, size: 640, offset: 224)
!4163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1033, size: 640, elements: !946)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4153, file: !4145, line: 25, baseType: !1033, size: 32, offset: 864)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !4150, file: !4145, line: 306, baseType: !4166, size: 4096, align: 128)
!4166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !4145, line: 34, size: 4096, align: 128, elements: !4167)
!4167 = !{!4168, !4169, !4170, !4171, !4172, !4187, !4188, !4189, !4191, !4193, !4197}
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4166, file: !4145, line: 35, baseType: !627, size: 16)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4166, file: !4145, line: 36, baseType: !627, size: 16, offset: 16)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4166, file: !4145, line: 37, baseType: !627, size: 16, offset: 32)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !4166, file: !4145, line: 38, baseType: !627, size: 16, offset: 48)
!4172 = !DIDerivedType(tag: DW_TAG_member, scope: !4166, file: !4145, line: 39, baseType: !4173, size: 128, offset: 64)
!4173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4166, file: !4145, line: 39, size: 128, elements: !4174)
!4174 = !{!4175, !4180}
!4175 = !DIDerivedType(tag: DW_TAG_member, scope: !4173, file: !4145, line: 40, baseType: !4176, size: 128)
!4176 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4173, file: !4145, line: 40, size: 128, elements: !4177)
!4177 = !{!4178, !4179}
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !4176, file: !4145, line: 41, baseType: !377, size: 64)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !4176, file: !4145, line: 42, baseType: !377, size: 64, offset: 64)
!4180 = !DIDerivedType(tag: DW_TAG_member, scope: !4173, file: !4145, line: 44, baseType: !4181, size: 128)
!4181 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4173, file: !4145, line: 44, size: 128, elements: !4182)
!4182 = !{!4183, !4184, !4185, !4186}
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4181, file: !4145, line: 45, baseType: !1033, size: 32)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4181, file: !4145, line: 46, baseType: !1033, size: 32, offset: 32)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4181, file: !4145, line: 47, baseType: !1033, size: 32, offset: 64)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4181, file: !4145, line: 48, baseType: !1033, size: 32, offset: 96)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !4166, file: !4145, line: 51, baseType: !1033, size: 32, offset: 192)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !4166, file: !4145, line: 52, baseType: !1033, size: 32, offset: 224)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4166, file: !4145, line: 55, baseType: !4190, size: 1024, offset: 256)
!4190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1033, size: 1024, elements: !865)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !4166, file: !4145, line: 58, baseType: !4192, size: 2048, offset: 1280)
!4192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1033, size: 2048, elements: !3857)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4166, file: !4145, line: 60, baseType: !4194, size: 384, offset: 3328)
!4194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1033, size: 384, elements: !4195)
!4195 = !{!4196}
!4196 = !DISubrange(count: 12)
!4197 = !DIDerivedType(tag: DW_TAG_member, scope: !4166, file: !4145, line: 62, baseType: !4198, size: 384, offset: 3712)
!4198 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4166, file: !4145, line: 62, size: 384, elements: !4199)
!4199 = !{!4200, !4201}
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !4198, file: !4145, line: 63, baseType: !4194, size: 384)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !4198, file: !4145, line: 64, baseType: !4194, size: 384)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !4150, file: !4145, line: 307, baseType: !4203, size: 1088)
!4203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !4145, line: 79, size: 1088, elements: !4204)
!4204 = !{!4205, !4206, !4207, !4208, !4209, !4210, !4211, !4212, !4213, !4214, !4215, !4216, !4217, !4218, !4219, !4251}
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4203, file: !4145, line: 80, baseType: !1033, size: 32)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4203, file: !4145, line: 81, baseType: !1033, size: 32, offset: 32)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4203, file: !4145, line: 82, baseType: !1033, size: 32, offset: 64)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4203, file: !4145, line: 83, baseType: !1033, size: 32, offset: 96)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4203, file: !4145, line: 84, baseType: !1033, size: 32, offset: 128)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4203, file: !4145, line: 85, baseType: !1033, size: 32, offset: 160)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4203, file: !4145, line: 86, baseType: !1033, size: 32, offset: 192)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4203, file: !4145, line: 88, baseType: !4163, size: 640, offset: 224)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !4203, file: !4145, line: 89, baseType: !840, size: 8, offset: 864)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !4203, file: !4145, line: 90, baseType: !840, size: 8, offset: 872)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !4203, file: !4145, line: 91, baseType: !840, size: 8, offset: 880)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !4203, file: !4145, line: 92, baseType: !840, size: 8, offset: 888)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !4203, file: !4145, line: 93, baseType: !840, size: 8, offset: 896)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !4203, file: !4145, line: 94, baseType: !840, size: 8, offset: 904)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4203, file: !4145, line: 95, baseType: !4220, size: 64, offset: 960)
!4220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4221, size: 64)
!4221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !4222, line: 11, size: 128, elements: !4223)
!4222 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!4223 = !{!4224, !4225}
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !4221, file: !4222, line: 12, baseType: !1044, size: 64)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4221, file: !4222, line: 13, baseType: !4226, size: 64, offset: 64)
!4226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4227, size: 64)
!4227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !4228, line: 56, size: 1344, elements: !4229)
!4228 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!4229 = !{!4230, !4231, !4232, !4233, !4234, !4235, !4236, !4237, !4238, !4239, !4240, !4241, !4242, !4243, !4244, !4245, !4246, !4247, !4248, !4249, !4250}
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !4227, file: !4228, line: 61, baseType: !358, size: 64)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !4227, file: !4228, line: 62, baseType: !358, size: 64, offset: 64)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !4227, file: !4228, line: 63, baseType: !358, size: 64, offset: 128)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !4227, file: !4228, line: 64, baseType: !358, size: 64, offset: 192)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !4227, file: !4228, line: 65, baseType: !358, size: 64, offset: 256)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !4227, file: !4228, line: 66, baseType: !358, size: 64, offset: 320)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !4227, file: !4228, line: 68, baseType: !358, size: 64, offset: 384)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !4227, file: !4228, line: 69, baseType: !358, size: 64, offset: 448)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !4227, file: !4228, line: 70, baseType: !358, size: 64, offset: 512)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !4227, file: !4228, line: 71, baseType: !358, size: 64, offset: 576)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !4227, file: !4228, line: 72, baseType: !358, size: 64, offset: 640)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !4227, file: !4228, line: 73, baseType: !358, size: 64, offset: 704)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !4227, file: !4228, line: 74, baseType: !358, size: 64, offset: 768)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !4227, file: !4228, line: 75, baseType: !358, size: 64, offset: 832)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !4227, file: !4228, line: 76, baseType: !358, size: 64, offset: 896)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !4227, file: !4228, line: 81, baseType: !358, size: 64, offset: 960)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4227, file: !4228, line: 83, baseType: !358, size: 64, offset: 1024)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !4227, file: !4228, line: 84, baseType: !358, size: 64, offset: 1088)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4227, file: !4228, line: 85, baseType: !358, size: 64, offset: 1152)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4227, file: !4228, line: 86, baseType: !358, size: 64, offset: 1216)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !4227, file: !4228, line: 87, baseType: !358, size: 64, offset: 1280)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !4203, file: !4145, line: 96, baseType: !1033, size: 32, offset: 1024)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !4150, file: !4145, line: 308, baseType: !4253, size: 4608, align: 512)
!4253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !4145, line: 289, size: 4608, align: 512, elements: !4254)
!4254 = !{!4255, !4256, !4263}
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !4253, file: !4145, line: 290, baseType: !4166, size: 4096, align: 128)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !4253, file: !4145, line: 291, baseType: !4257, size: 512, offset: 4096)
!4257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !4145, line: 268, size: 512, elements: !4258)
!4258 = !{!4259, !4260, !4261}
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !4257, file: !4145, line: 269, baseType: !377, size: 64)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !4257, file: !4145, line: 270, baseType: !377, size: 64, offset: 64)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4257, file: !4145, line: 271, baseType: !4262, size: 384, offset: 128)
!4262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !377, size: 384, elements: !1045)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !4253, file: !4145, line: 292, baseType: !4264, offset: 4608)
!4264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !840, elements: !529)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !4150, file: !4145, line: 309, baseType: !4266, size: 32768)
!4266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !840, size: 32768, elements: !4267)
!4267 = !{!4268}
!4268 = !DISubrange(count: 4096)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2369, file: !1767, line: 378, baseType: !4270, size: 64, offset: 64)
!4270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2369, size: 64)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !2365, file: !1767, line: 384, baseType: !2643, size: 192, offset: 192)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !2141, file: !1767, line: 500, baseType: !1716, offset: 6656)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !2141, file: !1767, line: 501, baseType: !4274, size: 64, offset: 6656)
!4274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4275, size: 64)
!4275 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !1767, line: 387, flags: DIFlagFwdDecl)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2141, file: !1767, line: 516, baseType: !2827, size: 64, offset: 6720)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !2141, file: !1767, line: 519, baseType: !1361, size: 64, offset: 6784)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !2141, file: !1767, line: 521, baseType: !4279, size: 64, offset: 6848)
!4279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4280, size: 64)
!4280 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !1767, line: 521, flags: DIFlagFwdDecl)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !2141, file: !1767, line: 545, baseType: !429, size: 32, offset: 6912)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !2141, file: !1767, line: 548, baseType: !817, size: 8, offset: 6944)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !2141, file: !1767, line: 550, baseType: !4284, offset: 6952)
!4284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !4285, line: 142, elements: !1633)
!4285 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !2141, file: !1767, line: 554, baseType: !2875, size: 256, offset: 6976)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !2141, file: !1767, line: 557, baseType: !1033, size: 32, offset: 7232)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !2138, file: !1767, line: 565, baseType: !4289, offset: 7296)
!4289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, elements: !355)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !2134, file: !1767, line: 151, baseType: !429, size: 32)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2126, file: !1767, line: 156, baseType: !1716, offset: 256)
!4292 = !DIDerivedType(tag: DW_TAG_member, scope: !1771, file: !1767, line: 159, baseType: !4293, size: 128)
!4293 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1771, file: !1767, line: 159, size: 128, elements: !4294)
!4294 = !{!4295, !4366}
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !4293, file: !1767, line: 161, baseType: !4296, size: 64)
!4296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4297, size: 64)
!4297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !4298, line: 110, size: 1152, elements: !4299)
!4298 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!4299 = !{!4300, !4310, !4331, !4332, !4333, !4340, !4341, !4353, !4354, !4355}
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !4297, file: !4298, line: 111, baseType: !4301, size: 384)
!4301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !4298, line: 19, size: 384, elements: !4302)
!4302 = !{!4303, !4305, !4306, !4307, !4308, !4309}
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !4301, file: !4298, line: 20, baseType: !4304, size: 64)
!4304 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !358)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !4301, file: !4298, line: 21, baseType: !4304, size: 64, offset: 64)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !4301, file: !4298, line: 22, baseType: !4304, size: 64, offset: 128)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4301, file: !4298, line: 23, baseType: !358, size: 64, offset: 192)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !4301, file: !4298, line: 24, baseType: !358, size: 64, offset: 256)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4301, file: !4298, line: 25, baseType: !358, size: 64, offset: 320)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4297, file: !4298, line: 112, baseType: !4311, size: 64, offset: 384)
!4311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4312, size: 64)
!4312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !4313, line: 105, size: 128, elements: !4314)
!4313 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!4314 = !{!4315, !4316}
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !4312, file: !4313, line: 110, baseType: !358, size: 64)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4312, file: !4313, line: 118, baseType: !4317, size: 64, offset: 64)
!4317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4318, size: 64)
!4318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !4313, line: 95, size: 448, elements: !4319)
!4319 = !{!4320, !4321, !4326, !4327, !4328, !4329, !4330}
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4318, file: !4313, line: 96, baseType: !417, size: 64)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4318, file: !4313, line: 97, baseType: !4322, size: 64, offset: 64)
!4322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4323, size: 64)
!4323 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !4313, line: 60, baseType: !4324)
!4324 = !DISubroutineType(types: !4325)
!4325 = !{null, !4311}
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !4318, file: !4313, line: 98, baseType: !4322, size: 64, offset: 128)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !4318, file: !4313, line: 99, baseType: !817, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !4318, file: !4313, line: 100, baseType: !817, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4318, file: !4313, line: 101, baseType: !345, size: 128, align: 64, offset: 256)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4318, file: !4313, line: 102, baseType: !4311, size: 64, offset: 384)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !4297, file: !4298, line: 113, baseType: !4312, size: 128, offset: 448)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !4297, file: !4298, line: 114, baseType: !2643, size: 192, offset: 576)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4297, file: !4298, line: 115, baseType: !4334, size: 32, offset: 768)
!4334 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !4298, line: 59, baseType: !7, size: 32, elements: !4335)
!4335 = !{!4336, !4337, !4338, !4339}
!4336 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!4337 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!4338 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!4339 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4297, file: !4298, line: 116, baseType: !7, size: 32, offset: 800)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4297, file: !4298, line: 117, baseType: !4342, size: 64, offset: 832)
!4342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4343, size: 64)
!4343 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4344)
!4344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !4298, line: 67, size: 256, elements: !4345)
!4345 = !{!4346, !4347, !4351, !4352}
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !4344, file: !4298, line: 73, baseType: !1867, size: 64)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !4344, file: !4298, line: 78, baseType: !4348, size: 64, offset: 64)
!4348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4349, size: 64)
!4349 = !DISubroutineType(types: !4350)
!4350 = !{null, !4296}
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !4344, file: !4298, line: 83, baseType: !4348, size: 64, offset: 128)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !4344, file: !4298, line: 89, baseType: !2190, size: 64, offset: 192)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4297, file: !4298, line: 118, baseType: !637, size: 64, offset: 896)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !4297, file: !4298, line: 119, baseType: !78, size: 32, offset: 960)
!4355 = !DIDerivedType(tag: DW_TAG_member, scope: !4297, file: !4298, line: 120, baseType: !4356, size: 128, offset: 1024)
!4356 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4297, file: !4298, line: 120, size: 128, elements: !4357)
!4357 = !{!4358, !4364}
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !4356, file: !4298, line: 121, baseType: !4359, size: 128)
!4359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !4360, line: 6, size: 128, elements: !4361)
!4360 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!4361 = !{!4362, !4363}
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4359, file: !4360, line: 7, baseType: !377, size: 64)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4359, file: !4360, line: 8, baseType: !377, size: 64, offset: 64)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !4356, file: !4298, line: 122, baseType: !4365)
!4365 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4359, elements: !529)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !4293, file: !1767, line: 162, baseType: !637, size: 64, offset: 64)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1771, file: !1767, line: 176, baseType: !345, size: 128, align: 64)
!4368 = !DIDerivedType(tag: DW_TAG_member, scope: !1766, file: !1767, line: 179, baseType: !4369, size: 32, offset: 384)
!4369 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1766, file: !1767, line: 179, size: 32, elements: !4370)
!4370 = !{!4371, !4372, !4373, !4374}
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !4369, file: !1767, line: 184, baseType: !429, size: 32)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !4369, file: !1767, line: 192, baseType: !7, size: 32)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4369, file: !1767, line: 194, baseType: !7, size: 32)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !4369, file: !1767, line: 195, baseType: !78, size: 32)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !1766, file: !1767, line: 199, baseType: !429, size: 32, offset: 416)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !1646, file: !1363, line: 1964, baseType: !4377, size: 64, offset: 1344)
!4377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4378, size: 64)
!4378 = !DISubroutineType(types: !4379)
!4379 = !{!1044, !1591, !4380}
!4380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4381, size: 64)
!4381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !4382, line: 12, size: 256, elements: !4383)
!4382 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!4383 = !{!4384, !4385, !4386, !4387, !4388}
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !4381, file: !4382, line: 13, baseType: !1788, size: 32)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !4381, file: !4382, line: 16, baseType: !78, size: 32, offset: 32)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !4381, file: !4382, line: 23, baseType: !358, size: 64, offset: 64)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !4381, file: !4382, line: 30, baseType: !358, size: 64, offset: 128)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !4381, file: !4382, line: 33, baseType: !4389, size: 64, offset: 192)
!4389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4390, size: 64)
!4390 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !1767, line: 27, flags: DIFlagFwdDecl)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !1646, file: !1363, line: 1966, baseType: !4377, size: 64, offset: 1408)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !1592, file: !1363, line: 1424, baseType: !4393, size: 64, offset: 448)
!4393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4394, size: 64)
!4394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4395)
!4395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !4396, line: 322, size: 704, elements: !4397)
!4396 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!4397 = !{!4398, !4449, !4453, !4457, !4458, !4459, !4460, !4461, !4466, !4471, !4475}
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !4395, file: !4396, line: 323, baseType: !4399, size: 64)
!4399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4400, size: 64)
!4400 = !DISubroutineType(types: !4401)
!4401 = !{!78, !4402}
!4402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4403, size: 64)
!4403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !4396, line: 294, size: 1600, elements: !4404)
!4404 = !{!4405, !4406, !4407, !4408, !4409, !4410, !4411, !4412, !4413, !4434, !4435, !4436}
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !4403, file: !4396, line: 295, baseType: !322, size: 128)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !4403, file: !4396, line: 296, baseType: !330, size: 128, offset: 128)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !4403, file: !4396, line: 297, baseType: !330, size: 128, offset: 256)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !4403, file: !4396, line: 298, baseType: !330, size: 128, offset: 384)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !4403, file: !4396, line: 299, baseType: !1711, size: 192, offset: 512)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !4403, file: !4396, line: 300, baseType: !1716, offset: 704)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !4403, file: !4396, line: 301, baseType: !429, size: 32, offset: 704)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !4403, file: !4396, line: 302, baseType: !1591, size: 64, offset: 768)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !4403, file: !4396, line: 303, baseType: !4414, size: 64, offset: 832)
!4414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !4396, line: 68, size: 64, elements: !4415)
!4415 = !{!4416, !4428}
!4416 = !DIDerivedType(tag: DW_TAG_member, scope: !4414, file: !4396, line: 69, baseType: !4417, size: 32)
!4417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4414, file: !4396, line: 69, size: 32, elements: !4418)
!4418 = !{!4419, !4420, !4421}
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4417, file: !4396, line: 70, baseType: !1428, size: 32)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !4417, file: !4396, line: 71, baseType: !1436, size: 32)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !4417, file: !4396, line: 72, baseType: !4422, size: 32)
!4422 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !4423, line: 24, baseType: !4424)
!4423 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!4424 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4423, line: 22, size: 32, elements: !4425)
!4425 = !{!4426}
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4424, file: !4423, line: 23, baseType: !4427, size: 32)
!4427 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !4423, line: 20, baseType: !1434)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4414, file: !4396, line: 74, baseType: !4429, size: 32, offset: 32)
!4429 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !4396, line: 54, baseType: !7, size: 32, elements: !4430)
!4430 = !{!4431, !4432, !4433}
!4431 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!4432 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!4433 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !4403, file: !4396, line: 304, baseType: !1522, size: 64, offset: 896)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !4403, file: !4396, line: 305, baseType: !358, size: 64, offset: 960)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !4403, file: !4396, line: 306, baseType: !4437, size: 576, offset: 1024)
!4437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !4396, line: 205, size: 576, elements: !4438)
!4438 = !{!4439, !4441, !4442, !4443, !4444, !4445, !4446, !4447, !4448}
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !4437, file: !4396, line: 206, baseType: !4440, size: 64)
!4440 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !4396, line: 66, baseType: !425)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !4437, file: !4396, line: 207, baseType: !4440, size: 64, offset: 64)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !4437, file: !4396, line: 208, baseType: !4440, size: 64, offset: 128)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !4437, file: !4396, line: 209, baseType: !4440, size: 64, offset: 192)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !4437, file: !4396, line: 210, baseType: !4440, size: 64, offset: 256)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !4437, file: !4396, line: 211, baseType: !4440, size: 64, offset: 320)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !4437, file: !4396, line: 212, baseType: !4440, size: 64, offset: 384)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !4437, file: !4396, line: 213, baseType: !1529, size: 64, offset: 448)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !4437, file: !4396, line: 214, baseType: !1529, size: 64, offset: 512)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !4395, file: !4396, line: 324, baseType: !4450, size: 64, offset: 64)
!4450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4451, size: 64)
!4451 = !DISubroutineType(types: !4452)
!4452 = !{!4402, !1591, !78}
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !4395, file: !4396, line: 325, baseType: !4454, size: 64, offset: 128)
!4454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4455, size: 64)
!4455 = !DISubroutineType(types: !4456)
!4456 = !{null, !4402}
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !4395, file: !4396, line: 326, baseType: !4399, size: 64, offset: 192)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !4395, file: !4396, line: 327, baseType: !4399, size: 64, offset: 256)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !4395, file: !4396, line: 328, baseType: !4399, size: 64, offset: 320)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !4395, file: !4396, line: 329, baseType: !1674, size: 64, offset: 384)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !4395, file: !4396, line: 332, baseType: !4462, size: 64, offset: 448)
!4462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4463, size: 64)
!4463 = !DISubroutineType(types: !4464)
!4464 = !{!4465, !1421}
!4465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4440, size: 64)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !4395, file: !4396, line: 333, baseType: !4467, size: 64, offset: 512)
!4467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4468, size: 64)
!4468 = !DISubroutineType(types: !4469)
!4469 = !{!78, !1421, !4470}
!4470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4422, size: 64)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !4395, file: !4396, line: 335, baseType: !4472, size: 64, offset: 576)
!4472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4473, size: 64)
!4473 = !DISubroutineType(types: !4474)
!4474 = !{!78, !1421, !4465}
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4395, file: !4396, line: 337, baseType: !4476, size: 64, offset: 640)
!4476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4477, size: 64)
!4477 = !DISubroutineType(types: !4478)
!4478 = !{!78, !1591, !4479}
!4479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4414, size: 64)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !1592, file: !1363, line: 1425, baseType: !4481, size: 64, offset: 512)
!4481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4482, size: 64)
!4482 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4483)
!4483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !4396, line: 428, size: 704, elements: !4484)
!4484 = !{!4485, !4489, !4490, !4494, !4495, !4496, !4511, !4534, !4538, !4539, !4562}
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !4483, file: !4396, line: 429, baseType: !4486, size: 64)
!4486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4487, size: 64)
!4487 = !DISubroutineType(types: !4488)
!4488 = !{!78, !1591, !78, !78, !1538}
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !4483, file: !4396, line: 430, baseType: !1674, size: 64, offset: 64)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !4483, file: !4396, line: 431, baseType: !4491, size: 64, offset: 128)
!4491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4492, size: 64)
!4492 = !DISubroutineType(types: !4493)
!4493 = !{!78, !1591, !7}
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !4483, file: !4396, line: 432, baseType: !4491, size: 64, offset: 192)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !4483, file: !4396, line: 433, baseType: !1674, size: 64, offset: 256)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !4483, file: !4396, line: 434, baseType: !4497, size: 64, offset: 320)
!4497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4498, size: 64)
!4498 = !DISubroutineType(types: !4499)
!4499 = !{!78, !1591, !78, !4500}
!4500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4501, size: 64)
!4501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !4396, line: 415, size: 256, elements: !4502)
!4502 = !{!4503, !4504, !4505, !4506, !4507, !4508, !4509, !4510}
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !4501, file: !4396, line: 416, baseType: !78, size: 32)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !4501, file: !4396, line: 417, baseType: !7, size: 32, offset: 32)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !4501, file: !4396, line: 418, baseType: !7, size: 32, offset: 64)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !4501, file: !4396, line: 420, baseType: !7, size: 32, offset: 96)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !4501, file: !4396, line: 421, baseType: !7, size: 32, offset: 128)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !4501, file: !4396, line: 422, baseType: !7, size: 32, offset: 160)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !4501, file: !4396, line: 423, baseType: !7, size: 32, offset: 192)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !4501, file: !4396, line: 424, baseType: !7, size: 32, offset: 224)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !4483, file: !4396, line: 435, baseType: !4512, size: 64, offset: 384)
!4512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4513, size: 64)
!4513 = !DISubroutineType(types: !4514)
!4514 = !{!78, !1591, !4414, !4515}
!4515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4516, size: 64)
!4516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !4396, line: 343, size: 960, elements: !4517)
!4517 = !{!4518, !4519, !4520, !4521, !4522, !4523, !4524, !4525, !4526, !4527, !4528, !4529, !4530, !4531, !4532, !4533}
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !4516, file: !4396, line: 344, baseType: !78, size: 32)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !4516, file: !4396, line: 345, baseType: !377, size: 64, offset: 64)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !4516, file: !4396, line: 346, baseType: !377, size: 64, offset: 128)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !4516, file: !4396, line: 347, baseType: !377, size: 64, offset: 192)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !4516, file: !4396, line: 348, baseType: !377, size: 64, offset: 256)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !4516, file: !4396, line: 349, baseType: !377, size: 64, offset: 320)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !4516, file: !4396, line: 350, baseType: !377, size: 64, offset: 384)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !4516, file: !4396, line: 351, baseType: !423, size: 64, offset: 448)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !4516, file: !4396, line: 353, baseType: !423, size: 64, offset: 512)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !4516, file: !4396, line: 354, baseType: !78, size: 32, offset: 576)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !4516, file: !4396, line: 355, baseType: !78, size: 32, offset: 608)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !4516, file: !4396, line: 356, baseType: !377, size: 64, offset: 640)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !4516, file: !4396, line: 357, baseType: !377, size: 64, offset: 704)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !4516, file: !4396, line: 358, baseType: !377, size: 64, offset: 768)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !4516, file: !4396, line: 359, baseType: !423, size: 64, offset: 832)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !4516, file: !4396, line: 360, baseType: !78, size: 32, offset: 896)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !4483, file: !4396, line: 436, baseType: !4535, size: 64, offset: 448)
!4535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4536, size: 64)
!4536 = !DISubroutineType(types: !4537)
!4537 = !{!78, !1591, !4479, !4515}
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !4483, file: !4396, line: 438, baseType: !4512, size: 64, offset: 512)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !4483, file: !4396, line: 439, baseType: !4540, size: 64, offset: 576)
!4540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4541, size: 64)
!4541 = !DISubroutineType(types: !4542)
!4542 = !{!78, !1591, !4543}
!4543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4544, size: 64)
!4544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !4396, line: 409, size: 1408, elements: !4545)
!4545 = !{!4546, !4547}
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !4544, file: !4396, line: 410, baseType: !7, size: 32)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !4544, file: !4396, line: 411, baseType: !4548, size: 1344, offset: 64)
!4548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4549, size: 1344, elements: !1638)
!4549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !4396, line: 395, size: 448, elements: !4550)
!4550 = !{!4551, !4552, !4553, !4554, !4555, !4556, !4557, !4558, !4559, !4561}
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4549, file: !4396, line: 396, baseType: !7, size: 32)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !4549, file: !4396, line: 397, baseType: !7, size: 32, offset: 32)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !4549, file: !4396, line: 399, baseType: !7, size: 32, offset: 64)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !4549, file: !4396, line: 400, baseType: !7, size: 32, offset: 96)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !4549, file: !4396, line: 401, baseType: !7, size: 32, offset: 128)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !4549, file: !4396, line: 402, baseType: !7, size: 32, offset: 160)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !4549, file: !4396, line: 403, baseType: !7, size: 32, offset: 192)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !4549, file: !4396, line: 404, baseType: !381, size: 64, offset: 256)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !4549, file: !4396, line: 405, baseType: !4560, size: 64, offset: 320)
!4560 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !323, line: 126, baseType: !377)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !4549, file: !4396, line: 406, baseType: !4560, size: 64, offset: 384)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !4483, file: !4396, line: 440, baseType: !4491, size: 64, offset: 640)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !1592, file: !1363, line: 1426, baseType: !4564, size: 64, offset: 576)
!4564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4565, size: 64)
!4565 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4566)
!4566 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !1363, line: 49, flags: DIFlagFwdDecl)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !1592, file: !1363, line: 1427, baseType: !358, size: 64, offset: 640)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !1592, file: !1363, line: 1428, baseType: !358, size: 64, offset: 704)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !1592, file: !1363, line: 1429, baseType: !358, size: 64, offset: 768)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !1592, file: !1363, line: 1430, baseType: !1384, size: 64, offset: 832)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !1592, file: !1363, line: 1431, baseType: !1801, size: 256, offset: 896)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !1592, file: !1363, line: 1432, baseType: !78, size: 32, offset: 1152)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !1592, file: !1363, line: 1433, baseType: !429, size: 32, offset: 1184)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !1592, file: !1363, line: 1437, baseType: !4575, size: 64, offset: 1216)
!4575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4576, size: 64)
!4576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4577, size: 64)
!4577 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4578)
!4578 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !1363, line: 1437, flags: DIFlagFwdDecl)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !1592, file: !1363, line: 1449, baseType: !4580, size: 64, offset: 1280)
!4580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !1400, line: 34, size: 64, elements: !4581)
!4581 = !{!4582}
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !4580, file: !1400, line: 35, baseType: !1403, size: 64)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !1592, file: !1363, line: 1450, baseType: !330, size: 128, offset: 1344)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !1592, file: !1363, line: 1451, baseType: !4585, size: 64, offset: 1472)
!4585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4586, size: 64)
!4586 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !1363, line: 699, flags: DIFlagFwdDecl)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !1592, file: !1363, line: 1452, baseType: !3901, size: 64, offset: 1536)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !1592, file: !1363, line: 1453, baseType: !4589, size: 64, offset: 1600)
!4589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4590, size: 64)
!4590 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !1363, line: 1453, flags: DIFlagFwdDecl)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !1592, file: !1363, line: 1454, baseType: !322, size: 128, offset: 1664)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !1592, file: !1363, line: 1455, baseType: !7, size: 32, offset: 1792)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !1592, file: !1363, line: 1456, baseType: !4594, size: 2432, offset: 1856)
!4594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !4396, line: 518, size: 2432, elements: !4595)
!4595 = !{!4596, !4597, !4598, !4600, !4632}
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4594, file: !4396, line: 519, baseType: !7, size: 32)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !4594, file: !4396, line: 520, baseType: !1801, size: 256, offset: 64)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !4594, file: !4396, line: 521, baseType: !4599, size: 192, offset: 320)
!4599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1421, size: 192, elements: !1638)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4594, file: !4396, line: 522, baseType: !4601, size: 1728, offset: 512)
!4601 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4602, size: 1728, elements: !1638)
!4602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !4396, line: 222, size: 576, elements: !4603)
!4603 = !{!4604, !4624, !4625, !4626, !4627, !4628, !4629, !4630, !4631}
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !4602, file: !4396, line: 223, baseType: !4605, size: 64)
!4605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4606, size: 64)
!4606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !4396, line: 443, size: 256, elements: !4607)
!4607 = !{!4608, !4609, !4622, !4623}
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !4606, file: !4396, line: 444, baseType: !78, size: 32)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !4606, file: !4396, line: 445, baseType: !4610, size: 64, offset: 64)
!4610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4611, size: 64)
!4611 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4612)
!4612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !4396, line: 310, size: 512, elements: !4613)
!4613 = !{!4614, !4615, !4616, !4617, !4618, !4619, !4620, !4621}
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !4612, file: !4396, line: 311, baseType: !1674, size: 64)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !4612, file: !4396, line: 312, baseType: !1674, size: 64, offset: 64)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !4612, file: !4396, line: 313, baseType: !1674, size: 64, offset: 128)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !4612, file: !4396, line: 314, baseType: !1674, size: 64, offset: 192)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !4612, file: !4396, line: 315, baseType: !4399, size: 64, offset: 256)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !4612, file: !4396, line: 316, baseType: !4399, size: 64, offset: 320)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !4612, file: !4396, line: 317, baseType: !4399, size: 64, offset: 384)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4612, file: !4396, line: 318, baseType: !4476, size: 64, offset: 448)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !4606, file: !4396, line: 446, baseType: !1026, size: 64, offset: 128)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !4606, file: !4396, line: 447, baseType: !4605, size: 64, offset: 192)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !4602, file: !4396, line: 224, baseType: !78, size: 32, offset: 64)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !4602, file: !4396, line: 226, baseType: !330, size: 128, offset: 128)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !4602, file: !4396, line: 227, baseType: !358, size: 64, offset: 256)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !4602, file: !4396, line: 228, baseType: !7, size: 32, offset: 320)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !4602, file: !4396, line: 229, baseType: !7, size: 32, offset: 352)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !4602, file: !4396, line: 230, baseType: !4440, size: 64, offset: 384)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !4602, file: !4396, line: 231, baseType: !4440, size: 64, offset: 448)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !4602, file: !4396, line: 232, baseType: !637, size: 64, offset: 512)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4594, file: !4396, line: 523, baseType: !4633, size: 192, offset: 2240)
!4633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4610, size: 192, elements: !1638)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !1592, file: !1363, line: 1458, baseType: !4635, size: 2112, offset: 4288)
!4635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !1363, line: 1410, size: 2112, elements: !4636)
!4636 = !{!4637, !4638, !4639}
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !4635, file: !1363, line: 1411, baseType: !78, size: 32)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !4635, file: !1363, line: 1412, baseType: !1935, size: 128, offset: 64)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !4635, file: !1363, line: 1413, baseType: !4640, size: 1920, offset: 192)
!4640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4641, size: 1920, elements: !1638)
!4641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !4642, line: 12, size: 640, elements: !4643)
!4642 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!4643 = !{!4644, !4652, !4654, !4659, !4660}
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !4641, file: !4642, line: 13, baseType: !4645, size: 320)
!4645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !4646, line: 17, size: 320, elements: !4647)
!4646 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!4647 = !{!4648, !4649, !4650, !4651}
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !4645, file: !4646, line: 18, baseType: !78, size: 32)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !4645, file: !4646, line: 19, baseType: !78, size: 32, offset: 32)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !4645, file: !4646, line: 20, baseType: !1935, size: 128, offset: 64)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !4645, file: !4646, line: 22, baseType: !345, size: 128, align: 64, offset: 192)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !4641, file: !4642, line: 14, baseType: !4653, size: 64, offset: 320)
!4653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !4641, file: !4642, line: 15, baseType: !4655, size: 64, offset: 384)
!4655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !4656, line: 16, size: 64, elements: !4657)
!4656 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!4657 = !{!4658}
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !4655, file: !4656, line: 17, baseType: !2372, size: 64)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !4641, file: !4642, line: 16, baseType: !1935, size: 128, offset: 448)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !4641, file: !4642, line: 17, baseType: !429, size: 32, offset: 576)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !1592, file: !1363, line: 1465, baseType: !637, size: 64, offset: 6400)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !1592, file: !1363, line: 1468, baseType: !1033, size: 32, offset: 6464)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !1592, file: !1363, line: 1470, baseType: !1529, size: 64, offset: 6528)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !1592, file: !1363, line: 1471, baseType: !1529, size: 64, offset: 6592)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !1592, file: !1363, line: 1473, baseType: !539, size: 32, offset: 6656)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !1592, file: !1363, line: 1474, baseType: !4667, size: 64, offset: 6720)
!4667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4668, size: 64)
!4668 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !1363, line: 603, flags: DIFlagFwdDecl)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !1592, file: !1363, line: 1477, baseType: !4670, size: 256, offset: 6784)
!4670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 256, elements: !865)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !1592, file: !1363, line: 1478, baseType: !4672, size: 128, offset: 7040)
!4672 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !4673, line: 18, baseType: !4674)
!4673 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!4674 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4673, line: 16, size: 128, elements: !4675)
!4675 = !{!4676}
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !4674, file: !4673, line: 17, baseType: !3270, size: 128)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !1592, file: !1363, line: 1480, baseType: !7, size: 32, offset: 7168)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !1592, file: !1363, line: 1481, baseType: !4679, size: 32, offset: 7200)
!4679 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !323, line: 150, baseType: !7)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !1592, file: !1363, line: 1487, baseType: !1711, size: 192, offset: 7232)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !1592, file: !1363, line: 1493, baseType: !338, size: 64, offset: 7424)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !1592, file: !1363, line: 1495, baseType: !4683, size: 64, offset: 7488)
!4683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4684, size: 64)
!4684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4685)
!4685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !1382, line: 135, size: 1024, align: 512, elements: !4686)
!4686 = !{!4687, !4691, !4692, !4699, !4705, !4709, !4713, !4717, !4718, !4722, !4726, !4731, !4735}
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !4685, file: !1382, line: 136, baseType: !4688, size: 64)
!4688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4689, size: 64)
!4689 = !DISubroutineType(types: !4690)
!4690 = !{!78, !1384, !7}
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !4685, file: !1382, line: 137, baseType: !4688, size: 64, offset: 64)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !4685, file: !1382, line: 138, baseType: !4693, size: 64, offset: 128)
!4693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4694, size: 64)
!4694 = !DISubroutineType(types: !4695)
!4695 = !{!78, !4696, !4698}
!4696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4697, size: 64)
!4697 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1385)
!4698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !4685, file: !1382, line: 139, baseType: !4700, size: 64, offset: 192)
!4700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4701, size: 64)
!4701 = !DISubroutineType(types: !4702)
!4702 = !{!78, !4696, !7, !338, !4703}
!4703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4704, size: 64)
!4704 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1408)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !4685, file: !1382, line: 141, baseType: !4706, size: 64, offset: 256)
!4706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4707, size: 64)
!4707 = !DISubroutineType(types: !4708)
!4708 = !{!78, !4696}
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !4685, file: !1382, line: 142, baseType: !4710, size: 64, offset: 320)
!4710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4711, size: 64)
!4711 = !DISubroutineType(types: !4712)
!4712 = !{!78, !1384}
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !4685, file: !1382, line: 143, baseType: !4714, size: 64, offset: 384)
!4714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4715, size: 64)
!4715 = !DISubroutineType(types: !4716)
!4716 = !{null, !1384}
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !4685, file: !1382, line: 144, baseType: !4714, size: 64, offset: 448)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !4685, file: !1382, line: 145, baseType: !4719, size: 64, offset: 512)
!4719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4720, size: 64)
!4720 = !DISubroutineType(types: !4721)
!4721 = !{null, !1384, !1421}
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !4685, file: !1382, line: 146, baseType: !4723, size: 64, offset: 576)
!4723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4724, size: 64)
!4724 = !DISubroutineType(types: !4725)
!4725 = !{!1084, !1384, !1084, !78}
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !4685, file: !1382, line: 147, baseType: !4727, size: 64, offset: 640)
!4727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4728, size: 64)
!4728 = !DISubroutineType(types: !4729)
!4729 = !{!1380, !4730}
!4730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !4685, file: !1382, line: 148, baseType: !4732, size: 64, offset: 704)
!4732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4733, size: 64)
!4733 = !DISubroutineType(types: !4734)
!4734 = !{!78, !1538, !817}
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !4685, file: !1382, line: 149, baseType: !4736, size: 64, offset: 768)
!4736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4737, size: 64)
!4737 = !DISubroutineType(types: !4738)
!4738 = !{!1384, !1384, !4739}
!4739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4740, size: 64)
!4740 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1422)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !1592, file: !1363, line: 1500, baseType: !78, size: 32, offset: 7552)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !1592, file: !1363, line: 1502, baseType: !4743, size: 448, offset: 7616)
!4743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !4382, line: 60, size: 448, elements: !4744)
!4744 = !{!4745, !4750, !4751, !4752, !4753, !4754, !4755}
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !4743, file: !4382, line: 61, baseType: !4746, size: 64)
!4746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4747, size: 64)
!4747 = !DISubroutineType(types: !4748)
!4748 = !{!358, !4749, !4380}
!4749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4743, size: 64)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !4743, file: !4382, line: 63, baseType: !4746, size: 64, offset: 64)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !4743, file: !4382, line: 66, baseType: !1044, size: 64, offset: 128)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !4743, file: !4382, line: 67, baseType: !78, size: 32, offset: 192)
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4743, file: !4382, line: 68, baseType: !7, size: 32, offset: 224)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4743, file: !4382, line: 71, baseType: !330, size: 128, offset: 256)
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !4743, file: !4382, line: 77, baseType: !4756, size: 64, offset: 384)
!4756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !1592, file: !1363, line: 1505, baseType: !417, size: 64, offset: 8064)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !1592, file: !1363, line: 1508, baseType: !417, size: 64, offset: 8128)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !1592, file: !1363, line: 1511, baseType: !78, size: 32, offset: 8192)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !1592, file: !1363, line: 1514, baseType: !2071, size: 32, offset: 8224)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !1592, file: !1363, line: 1517, baseType: !4762, size: 64, offset: 8256)
!4762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4763, size: 64)
!4763 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2876, line: 18, flags: DIFlagFwdDecl)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !1592, file: !1363, line: 1518, baseType: !1627, size: 64, offset: 8320)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !1592, file: !1363, line: 1525, baseType: !2827, size: 64, offset: 8384)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !1592, file: !1363, line: 1532, baseType: !4767, size: 64, offset: 8448)
!4767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !4768, line: 52, size: 64, elements: !4769)
!4768 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!4769 = !{!4770}
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4767, file: !4768, line: 53, baseType: !4771, size: 64)
!4771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4772, size: 64)
!4772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !4768, line: 40, size: 256, elements: !4773)
!4773 = !{!4774, !4775, !4780}
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4772, file: !4768, line: 42, baseType: !1716)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !4772, file: !4768, line: 44, baseType: !4776, size: 192)
!4776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !4768, line: 28, size: 192, elements: !4777)
!4777 = !{!4778, !4779}
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4776, file: !4768, line: 29, baseType: !330, size: 128)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4776, file: !4768, line: 31, baseType: !1044, size: 64, offset: 128)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4772, file: !4768, line: 49, baseType: !1044, size: 64, offset: 192)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !1592, file: !1363, line: 1533, baseType: !4767, size: 64, offset: 8512)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1592, file: !1363, line: 1534, baseType: !345, size: 128, align: 64, offset: 8576)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !1592, file: !1363, line: 1535, baseType: !2875, size: 256, offset: 8704)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !1592, file: !1363, line: 1537, baseType: !1711, size: 192, offset: 8960)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !1592, file: !1363, line: 1542, baseType: !78, size: 32, offset: 9152)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !1592, file: !1363, line: 1545, baseType: !1716, offset: 9184)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !1592, file: !1363, line: 1546, baseType: !330, size: 128, offset: 9216)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !1592, file: !1363, line: 1548, baseType: !1716, offset: 9344)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !1592, file: !1363, line: 1549, baseType: !330, size: 128, offset: 9344)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !1422, file: !1363, line: 624, baseType: !1778, size: 64, offset: 256)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !1422, file: !1363, line: 631, baseType: !358, size: 64, offset: 320)
!4792 = !DIDerivedType(tag: DW_TAG_member, scope: !1422, file: !1363, line: 639, baseType: !4793, size: 32, offset: 384)
!4793 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1422, file: !1363, line: 639, size: 32, elements: !4794)
!4794 = !{!4795, !4797}
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !4793, file: !1363, line: 640, baseType: !4796, size: 32)
!4796 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !4793, file: !1363, line: 641, baseType: !7, size: 32)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !1422, file: !1363, line: 643, baseType: !1504, size: 32, offset: 416)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !1422, file: !1363, line: 644, baseType: !1522, size: 64, offset: 448)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !1422, file: !1363, line: 645, baseType: !1525, size: 128, offset: 512)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !1422, file: !1363, line: 646, baseType: !1525, size: 128, offset: 640)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !1422, file: !1363, line: 647, baseType: !1525, size: 128, offset: 768)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !1422, file: !1363, line: 648, baseType: !1716, offset: 896)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !1422, file: !1363, line: 649, baseType: !522, size: 16, offset: 896)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !1422, file: !1363, line: 650, baseType: !840, size: 8, offset: 912)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !1422, file: !1363, line: 651, baseType: !840, size: 8, offset: 920)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !1422, file: !1363, line: 652, baseType: !4560, size: 64, offset: 960)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !1422, file: !1363, line: 659, baseType: !358, size: 64, offset: 1024)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !1422, file: !1363, line: 660, baseType: !1801, size: 256, offset: 1088)
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !1422, file: !1363, line: 662, baseType: !358, size: 64, offset: 1344)
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !1422, file: !1363, line: 663, baseType: !358, size: 64, offset: 1408)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !1422, file: !1363, line: 665, baseType: !322, size: 128, offset: 1472)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !1422, file: !1363, line: 666, baseType: !330, size: 128, offset: 1600)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !1422, file: !1363, line: 675, baseType: !330, size: 128, offset: 1728)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !1422, file: !1363, line: 676, baseType: !330, size: 128, offset: 1856)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !1422, file: !1363, line: 677, baseType: !330, size: 128, offset: 1984)
!4817 = !DIDerivedType(tag: DW_TAG_member, scope: !1422, file: !1363, line: 678, baseType: !4818, size: 128, offset: 2112)
!4818 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1422, file: !1363, line: 678, size: 128, elements: !4819)
!4819 = !{!4820, !4821}
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !4818, file: !1363, line: 679, baseType: !1627, size: 64)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !4818, file: !1363, line: 680, baseType: !345, size: 128, align: 64)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !1422, file: !1363, line: 682, baseType: !419, size: 64, offset: 2240)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !1422, file: !1363, line: 683, baseType: !419, size: 64, offset: 2304)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1422, file: !1363, line: 684, baseType: !429, size: 32, offset: 2368)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !1422, file: !1363, line: 685, baseType: !429, size: 32, offset: 2400)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !1422, file: !1363, line: 686, baseType: !429, size: 32, offset: 2432)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !1422, file: !1363, line: 688, baseType: !429, size: 32, offset: 2464)
!4828 = !DIDerivedType(tag: DW_TAG_member, scope: !1422, file: !1363, line: 690, baseType: !4829, size: 64, offset: 2496)
!4829 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1422, file: !1363, line: 690, size: 64, elements: !4830)
!4830 = !{!4831, !5036}
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !4829, file: !1363, line: 691, baseType: !4832, size: 64)
!4832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4833, size: 64)
!4833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4834)
!4834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !1363, line: 1822, size: 2048, elements: !4835)
!4835 = !{!4836, !4837, !4841, !4845, !4849, !4850, !4851, !4855, !4868, !4869, !4876, !4880, !4881, !4885, !4886, !4890, !4895, !4896, !4900, !4904, !4996, !5000, !5001, !5005, !5006, !5010, !5014, !5019, !5023, !5027, !5031, !5035}
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4834, file: !1363, line: 1823, baseType: !1026, size: 64)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !4834, file: !1363, line: 1824, baseType: !4838, size: 64, offset: 64)
!4838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4839, size: 64)
!4839 = !DISubroutineType(types: !4840)
!4840 = !{!1522, !1361, !1522, !78}
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4834, file: !1363, line: 1825, baseType: !4842, size: 64, offset: 128)
!4842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4843, size: 64)
!4843 = !DISubroutineType(types: !4844)
!4844 = !{!1567, !1361, !1084, !1085, !1740}
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4834, file: !1363, line: 1826, baseType: !4846, size: 64, offset: 192)
!4846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4847, size: 64)
!4847 = !DISubroutineType(types: !4848)
!4848 = !{!1567, !1361, !338, !1085, !1740}
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !4834, file: !1363, line: 1827, baseType: !1871, size: 64, offset: 256)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !4834, file: !1363, line: 1828, baseType: !1871, size: 64, offset: 320)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !4834, file: !1363, line: 1829, baseType: !4852, size: 64, offset: 384)
!4852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4853, size: 64)
!4853 = !DISubroutineType(types: !4854)
!4854 = !{!78, !1874, !817}
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !4834, file: !1363, line: 1830, baseType: !4856, size: 64, offset: 448)
!4856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4857, size: 64)
!4857 = !DISubroutineType(types: !4858)
!4858 = !{!78, !1361, !4859}
!4859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4860, size: 64)
!4860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !1363, line: 1776, size: 128, elements: !4861)
!4861 = !{!4862, !4867}
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !4860, file: !1363, line: 1777, baseType: !4863, size: 64)
!4863 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !1363, line: 1773, baseType: !4864)
!4864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4865, size: 64)
!4865 = !DISubroutineType(types: !4866)
!4866 = !{!78, !4859, !338, !78, !1522, !377, !7}
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4860, file: !1363, line: 1778, baseType: !1522, size: 64, offset: 64)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !4834, file: !1363, line: 1831, baseType: !4856, size: 64, offset: 512)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4834, file: !1363, line: 1832, baseType: !4870, size: 64, offset: 576)
!4870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4871, size: 64)
!4871 = !DISubroutineType(types: !4872)
!4872 = !{!4873, !1361, !4874}
!4873 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !571, line: 52, baseType: !7)
!4874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4875, size: 64)
!4875 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1611, line: 27, flags: DIFlagFwdDecl)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !4834, file: !1363, line: 1833, baseType: !4877, size: 64, offset: 640)
!4877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4878, size: 64)
!4878 = !DISubroutineType(types: !4879)
!4879 = !{!1044, !1361, !7, !358}
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4834, file: !1363, line: 1834, baseType: !4877, size: 64, offset: 704)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4834, file: !1363, line: 1835, baseType: !4882, size: 64, offset: 768)
!4882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4883, size: 64)
!4883 = !DISubroutineType(types: !4884)
!4884 = !{!78, !1361, !2144}
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !4834, file: !1363, line: 1836, baseType: !358, size: 64, offset: 832)
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4834, file: !1363, line: 1837, baseType: !4887, size: 64, offset: 896)
!4887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4888, size: 64)
!4888 = !DISubroutineType(types: !4889)
!4889 = !{!78, !1421, !1361}
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !4834, file: !1363, line: 1838, baseType: !4891, size: 64, offset: 960)
!4891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4892, size: 64)
!4892 = !DISubroutineType(types: !4893)
!4893 = !{!78, !1361, !4894}
!4894 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !1363, line: 1007, baseType: !637)
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4834, file: !1363, line: 1839, baseType: !4887, size: 64, offset: 1024)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !4834, file: !1363, line: 1840, baseType: !4897, size: 64, offset: 1088)
!4897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4898, size: 64)
!4898 = !DISubroutineType(types: !4899)
!4899 = !{!78, !1361, !1522, !1522, !78}
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !4834, file: !1363, line: 1841, baseType: !4901, size: 64, offset: 1152)
!4901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4902, size: 64)
!4902 = !DISubroutineType(types: !4903)
!4903 = !{!78, !78, !1361, !78}
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4834, file: !1363, line: 1842, baseType: !4905, size: 64, offset: 1216)
!4905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4906, size: 64)
!4906 = !DISubroutineType(types: !4907)
!4907 = !{!78, !1361, !78, !4908}
!4908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4909, size: 64)
!4909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !1363, line: 1062, size: 1664, elements: !4910)
!4910 = !{!4911, !4912, !4913, !4914, !4915, !4916, !4917, !4918, !4919, !4920, !4921, !4922, !4923, !4924, !4925, !4926, !4927, !4928, !4941, !4972}
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !4909, file: !1363, line: 1063, baseType: !4908, size: 64)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !4909, file: !1363, line: 1064, baseType: !330, size: 128, offset: 64)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !4909, file: !1363, line: 1065, baseType: !322, size: 128, offset: 192)
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !4909, file: !1363, line: 1066, baseType: !330, size: 128, offset: 320)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !4909, file: !1363, line: 1069, baseType: !330, size: 128, offset: 448)
!4916 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !4909, file: !1363, line: 1072, baseType: !4894, size: 64, offset: 576)
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !4909, file: !1363, line: 1073, baseType: !7, size: 32, offset: 640)
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !4909, file: !1363, line: 1074, baseType: !528, size: 8, offset: 672)
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !4909, file: !1363, line: 1075, baseType: !7, size: 32, offset: 704)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !4909, file: !1363, line: 1076, baseType: !78, size: 32, offset: 736)
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !4909, file: !1363, line: 1077, baseType: !1935, size: 128, offset: 768)
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !4909, file: !1363, line: 1078, baseType: !1361, size: 64, offset: 896)
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !4909, file: !1363, line: 1079, baseType: !1522, size: 64, offset: 960)
!4924 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !4909, file: !1363, line: 1080, baseType: !1522, size: 64, offset: 1024)
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !4909, file: !1363, line: 1082, baseType: !1954, size: 64, offset: 1088)
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !4909, file: !1363, line: 1084, baseType: !358, size: 64, offset: 1152)
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !4909, file: !1363, line: 1085, baseType: !358, size: 64, offset: 1216)
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !4909, file: !1363, line: 1087, baseType: !4929, size: 64, offset: 1280)
!4929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4930, size: 64)
!4930 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4931)
!4931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !1363, line: 1011, size: 128, elements: !4932)
!4932 = !{!4933, !4937}
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !4931, file: !1363, line: 1012, baseType: !4934, size: 64)
!4934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4935, size: 64)
!4935 = !DISubroutineType(types: !4936)
!4936 = !{null, !4908, !4908}
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !4931, file: !1363, line: 1013, baseType: !4938, size: 64, offset: 64)
!4938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4939, size: 64)
!4939 = !DISubroutineType(types: !4940)
!4940 = !{null, !4908}
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !4909, file: !1363, line: 1088, baseType: !4942, size: 64, offset: 1344)
!4942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4943, size: 64)
!4943 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4944)
!4944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !1363, line: 1016, size: 512, elements: !4945)
!4945 = !{!4946, !4950, !4954, !4955, !4959, !4963, !4967, !4971}
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !4944, file: !1363, line: 1017, baseType: !4947, size: 64)
!4947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4948, size: 64)
!4948 = !DISubroutineType(types: !4949)
!4949 = !{!4894, !4894}
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !4944, file: !1363, line: 1018, baseType: !4951, size: 64, offset: 64)
!4951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4952, size: 64)
!4952 = !DISubroutineType(types: !4953)
!4953 = !{null, !4894}
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !4944, file: !1363, line: 1019, baseType: !4938, size: 64, offset: 128)
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !4944, file: !1363, line: 1020, baseType: !4956, size: 64, offset: 192)
!4956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4957, size: 64)
!4957 = !DISubroutineType(types: !4958)
!4958 = !{!78, !4908, !78}
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !4944, file: !1363, line: 1021, baseType: !4960, size: 64, offset: 256)
!4960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4961, size: 64)
!4961 = !DISubroutineType(types: !4962)
!4962 = !{!817, !4908}
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !4944, file: !1363, line: 1022, baseType: !4964, size: 64, offset: 320)
!4964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4965, size: 64)
!4965 = !DISubroutineType(types: !4966)
!4966 = !{!78, !4908, !78, !333}
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !4944, file: !1363, line: 1023, baseType: !4968, size: 64, offset: 384)
!4968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4969, size: 64)
!4969 = !DISubroutineType(types: !4970)
!4970 = !{null, !4908, !1848}
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !4944, file: !1363, line: 1024, baseType: !4960, size: 64, offset: 448)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !4909, file: !1363, line: 1097, baseType: !4973, size: 256, offset: 1408)
!4973 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4909, file: !1363, line: 1089, size: 256, elements: !4974)
!4974 = !{!4975, !4984, !4990}
!4975 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !4973, file: !1363, line: 1090, baseType: !4976, size: 256)
!4976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !4977, line: 10, size: 256, elements: !4978)
!4977 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!4978 = !{!4979, !4980, !4983}
!4979 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4976, file: !4977, line: 11, baseType: !1033, size: 32)
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4976, file: !4977, line: 12, baseType: !4981, size: 64, offset: 64)
!4981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4982, size: 64)
!4982 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !4977, line: 5, flags: DIFlagFwdDecl)
!4983 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4976, file: !4977, line: 13, baseType: !330, size: 128, offset: 128)
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !4973, file: !1363, line: 1091, baseType: !4985, size: 64)
!4985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !4977, line: 17, size: 64, elements: !4986)
!4986 = !{!4987}
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4985, file: !4977, line: 18, baseType: !4988, size: 64)
!4988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4989, size: 64)
!4989 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !4977, line: 16, flags: DIFlagFwdDecl)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !4973, file: !1363, line: 1096, baseType: !4991, size: 192)
!4991 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4973, file: !1363, line: 1092, size: 192, elements: !4992)
!4992 = !{!4993, !4994, !4995}
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4991, file: !1363, line: 1093, baseType: !330, size: 128)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4991, file: !1363, line: 1094, baseType: !78, size: 32, offset: 128)
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !4991, file: !1363, line: 1095, baseType: !7, size: 32, offset: 160)
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !4834, file: !1363, line: 1843, baseType: !4997, size: 64, offset: 1280)
!4997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4998, size: 64)
!4998 = !DISubroutineType(types: !4999)
!4999 = !{!1567, !1361, !1765, !78, !1085, !1740, !78}
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !4834, file: !1363, line: 1844, baseType: !2264, size: 64, offset: 1344)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !4834, file: !1363, line: 1845, baseType: !5002, size: 64, offset: 1408)
!5002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5003, size: 64)
!5003 = !DISubroutineType(types: !5004)
!5004 = !{!78, !78}
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !4834, file: !1363, line: 1846, baseType: !4905, size: 64, offset: 1472)
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !4834, file: !1363, line: 1847, baseType: !5007, size: 64, offset: 1536)
!5007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5008, size: 64)
!5008 = !DISubroutineType(types: !5009)
!5009 = !{!1567, !1929, !1361, !1740, !1085, !7}
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !4834, file: !1363, line: 1848, baseType: !5011, size: 64, offset: 1600)
!5011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5012, size: 64)
!5012 = !DISubroutineType(types: !5013)
!5013 = !{!1567, !1361, !1740, !1929, !1085, !7}
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !4834, file: !1363, line: 1849, baseType: !5015, size: 64, offset: 1664)
!5015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5016, size: 64)
!5016 = !DISubroutineType(types: !5017)
!5017 = !{!78, !1361, !1044, !5018, !1848}
!5018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4908, size: 64)
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !4834, file: !1363, line: 1850, baseType: !5020, size: 64, offset: 1728)
!5020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5021, size: 64)
!5021 = !DISubroutineType(types: !5022)
!5022 = !{!1044, !1361, !78, !1522, !1522}
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !4834, file: !1363, line: 1852, baseType: !5024, size: 64, offset: 1792)
!5024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5025, size: 64)
!5025 = !DISubroutineType(types: !5026)
!5026 = !{null, !1699, !1361}
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !4834, file: !1363, line: 1856, baseType: !5028, size: 64, offset: 1856)
!5028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5029, size: 64)
!5029 = !DISubroutineType(types: !5030)
!5030 = !{!1567, !1361, !1522, !1361, !1522, !1085, !7}
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !4834, file: !1363, line: 1858, baseType: !5032, size: 64, offset: 1920)
!5032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5033, size: 64)
!5033 = !DISubroutineType(types: !5034)
!5034 = !{!1522, !1361, !1522, !1361, !1522, !1522, !7}
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !4834, file: !1363, line: 1861, baseType: !4897, size: 64, offset: 1984)
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !4829, file: !1363, line: 692, baseType: !1653, size: 64)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !1422, file: !1363, line: 694, baseType: !5038, size: 64, offset: 2560)
!5038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5039, size: 64)
!5039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !1363, line: 1100, size: 384, elements: !5040)
!5040 = !{!5041, !5042, !5043, !5044}
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !5039, file: !1363, line: 1101, baseType: !1716)
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !5039, file: !1363, line: 1102, baseType: !330, size: 128)
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !5039, file: !1363, line: 1103, baseType: !330, size: 128, offset: 128)
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !5039, file: !1363, line: 1104, baseType: !330, size: 128, offset: 256)
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !1422, file: !1363, line: 695, baseType: !1779, size: 1216, align: 64, offset: 2624)
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !1422, file: !1363, line: 696, baseType: !330, size: 128, offset: 3840)
!5047 = !DIDerivedType(tag: DW_TAG_member, scope: !1422, file: !1363, line: 697, baseType: !5048, size: 64, offset: 3968)
!5048 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1422, file: !1363, line: 697, size: 64, elements: !5049)
!5049 = !{!5050, !5051, !5052, !5055, !5056}
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !5048, file: !1363, line: 698, baseType: !1929, size: 64)
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !5048, file: !1363, line: 699, baseType: !4585, size: 64)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !5048, file: !1363, line: 700, baseType: !5053, size: 64)
!5053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5054, size: 64)
!5054 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !1363, line: 700, flags: DIFlagFwdDecl)
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !5048, file: !1363, line: 701, baseType: !1084, size: 64)
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !5048, file: !1363, line: 702, baseType: !7, size: 32)
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !1422, file: !1363, line: 705, baseType: !539, size: 32, offset: 4032)
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !1422, file: !1363, line: 708, baseType: !539, size: 32, offset: 4064)
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !1422, file: !1363, line: 709, baseType: !4667, size: 64, offset: 4096)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !1422, file: !1363, line: 720, baseType: !637, size: 64, offset: 4160)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !1385, file: !1382, line: 98, baseType: !1077, size: 256, offset: 448)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !1385, file: !1382, line: 101, baseType: !5063, size: 32, offset: 704)
!5063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !5064, line: 25, size: 32, elements: !5065)
!5064 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!5065 = !{!5066}
!5066 = !DIDerivedType(tag: DW_TAG_member, scope: !5063, file: !5064, line: 26, baseType: !5067, size: 32)
!5067 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5063, file: !5064, line: 26, size: 32, elements: !5068)
!5068 = !{!5069}
!5069 = !DIDerivedType(tag: DW_TAG_member, scope: !5067, file: !5064, line: 30, baseType: !5070, size: 32)
!5070 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5067, file: !5064, line: 30, size: 32, elements: !5071)
!5071 = !{!5072, !5073}
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5070, file: !5064, line: 31, baseType: !1716)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5070, file: !5064, line: 32, baseType: !78, size: 32)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !1385, file: !1382, line: 102, baseType: !4683, size: 64, offset: 768)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !1385, file: !1382, line: 103, baseType: !1591, size: 64, offset: 832)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !1385, file: !1382, line: 104, baseType: !358, size: 64, offset: 896)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !1385, file: !1382, line: 105, baseType: !637, size: 64, offset: 960)
!5078 = !DIDerivedType(tag: DW_TAG_member, scope: !1385, file: !1382, line: 107, baseType: !5079, size: 128, offset: 1024)
!5079 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1385, file: !1382, line: 107, size: 128, elements: !5080)
!5080 = !{!5081, !5082}
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !5079, file: !1382, line: 108, baseType: !330, size: 128)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !5079, file: !1382, line: 109, baseType: !5083, size: 64)
!5083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !1385, file: !1382, line: 111, baseType: !330, size: 128, offset: 1152)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !1385, file: !1382, line: 112, baseType: !330, size: 128, offset: 1280)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !1385, file: !1382, line: 120, baseType: !5087, size: 128, offset: 1408)
!5087 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1385, file: !1382, line: 116, size: 128, elements: !5088)
!5088 = !{!5089, !5090, !5091}
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !5087, file: !1382, line: 117, baseType: !322, size: 128)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !5087, file: !1382, line: 118, baseType: !1399, size: 128)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !5087, file: !1382, line: 119, baseType: !345, size: 128, align: 64)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !1362, file: !1363, line: 922, baseType: !1421, size: 64, offset: 256)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !1362, file: !1363, line: 923, baseType: !4832, size: 64, offset: 320)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !1362, file: !1363, line: 929, baseType: !1716, offset: 384)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !1362, file: !1363, line: 930, baseType: !5096, size: 32, offset: 384)
!5096 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !1363, line: 296, baseType: !7, size: 32, elements: !5097)
!5097 = !{!5098, !5099, !5100, !5101, !5102, !5103}
!5098 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!5099 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!5100 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!5101 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!5102 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!5103 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1362, file: !1363, line: 931, baseType: !417, size: 64, offset: 448)
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1362, file: !1363, line: 932, baseType: !7, size: 32, offset: 512)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !1362, file: !1363, line: 933, baseType: !4679, size: 32, offset: 544)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !1362, file: !1363, line: 934, baseType: !1711, size: 192, offset: 576)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !1362, file: !1363, line: 935, baseType: !1522, size: 64, offset: 768)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !1362, file: !1363, line: 936, baseType: !5110, size: 192, offset: 832)
!5110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !1363, line: 885, size: 192, elements: !5111)
!5111 = !{!5112, !5113, !5114, !5122, !5123, !5124}
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5110, file: !1363, line: 886, baseType: !1958)
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !5110, file: !1363, line: 887, baseType: !2617, size: 64)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !5110, file: !1363, line: 888, baseType: !5115, size: 32, offset: 64)
!5115 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !2619, line: 9, baseType: !7, size: 32, elements: !5116)
!5116 = !{!5117, !5118, !5119, !5120, !5121}
!5117 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!5118 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!5119 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!5120 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!5121 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !5110, file: !1363, line: 889, baseType: !1428, size: 32, offset: 96)
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !5110, file: !1363, line: 889, baseType: !1428, size: 32, offset: 128)
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !5110, file: !1363, line: 890, baseType: !78, size: 32, offset: 160)
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !1362, file: !1363, line: 937, baseType: !2688, size: 64, offset: 1024)
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !1362, file: !1363, line: 938, baseType: !5127, size: 256, offset: 1088)
!5127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !1363, line: 896, size: 256, elements: !5128)
!5128 = !{!5129, !5130, !5131, !5132, !5133, !5134}
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5127, file: !1363, line: 897, baseType: !358, size: 64)
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5127, file: !1363, line: 898, baseType: !7, size: 32, offset: 64)
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !5127, file: !1363, line: 899, baseType: !7, size: 32, offset: 96)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !5127, file: !1363, line: 902, baseType: !7, size: 32, offset: 128)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !5127, file: !1363, line: 903, baseType: !7, size: 32, offset: 160)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !5127, file: !1363, line: 904, baseType: !1522, size: 64, offset: 192)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !1362, file: !1363, line: 940, baseType: !377, size: 64, offset: 1344)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1362, file: !1363, line: 945, baseType: !637, size: 64, offset: 1408)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !1362, file: !1363, line: 949, baseType: !330, size: 128, offset: 1472)
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !1362, file: !1363, line: 950, baseType: !330, size: 128, offset: 1600)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !1362, file: !1363, line: 952, baseType: !1778, size: 64, offset: 1728)
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !1362, file: !1363, line: 953, baseType: !2071, size: 32, offset: 1792)
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !1362, file: !1363, line: 954, baseType: !2071, size: 32, offset: 1824)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "map_free", scope: !1151, file: !111, line: 59, baseType: !5143, size: 64, offset: 192)
!5143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5144, size: 64)
!5144 = !DISubroutineType(types: !5145)
!5145 = !{null, !1356}
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !1151, file: !111, line: 60, baseType: !5147, size: 64, offset: 256)
!5147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5148, size: 64)
!5148 = !DISubroutineType(types: !5149)
!5149 = !{!78, !1356, !637, !637}
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "map_release_uref", scope: !1151, file: !111, line: 61, baseType: !5143, size: 64, offset: 320)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem_sys_only", scope: !1151, file: !111, line: 62, baseType: !5152, size: 64, offset: 384)
!5152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5153, size: 64)
!5153 = !DISubroutineType(types: !5154)
!5154 = !{!637, !1356, !637}
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_batch", scope: !1151, file: !111, line: 63, baseType: !5156, size: 64, offset: 448)
!5156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5157, size: 64)
!5157 = !DISubroutineType(types: !5158)
!5158 = !{!78, !1356, !5159, !1157}
!5159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5160, size: 64)
!5160 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1158)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_and_delete_batch", scope: !1151, file: !111, line: 65, baseType: !5156, size: 64, offset: 512)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_batch", scope: !1151, file: !111, line: 68, baseType: !5156, size: 64, offset: 576)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_batch", scope: !1151, file: !111, line: 70, baseType: !5156, size: 64, offset: 640)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !1151, file: !111, line: 74, baseType: !5152, size: 64, offset: 704)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !1151, file: !111, line: 75, baseType: !5166, size: 64, offset: 768)
!5166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5167, size: 64)
!5167 = !DISubroutineType(types: !5168)
!5168 = !{!78, !1356, !637, !637, !377}
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !1151, file: !111, line: 76, baseType: !5170, size: 64, offset: 832)
!5170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5171, size: 64)
!5171 = !DISubroutineType(types: !5172)
!5172 = !{!78, !1356, !637}
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "map_push_elem", scope: !1151, file: !111, line: 77, baseType: !5174, size: 64, offset: 896)
!5174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5175, size: 64)
!5175 = !DISubroutineType(types: !5176)
!5176 = !{!78, !1356, !637, !377}
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "map_pop_elem", scope: !1151, file: !111, line: 78, baseType: !5170, size: 64, offset: 960)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "map_peek_elem", scope: !1151, file: !111, line: 79, baseType: !5170, size: 64, offset: 1024)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_get_ptr", scope: !1151, file: !111, line: 82, baseType: !5180, size: 64, offset: 1088)
!5180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5181, size: 64)
!5181 = !DISubroutineType(types: !5182)
!5182 = !{!637, !1356, !1361, !78}
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_put_ptr", scope: !1151, file: !111, line: 84, baseType: !1461, size: 64, offset: 1152)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "map_gen_lookup", scope: !1151, file: !111, line: 85, baseType: !5185, size: 64, offset: 1216)
!5185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5186, size: 64)
!5186 = !DISubroutineType(types: !5187)
!5187 = !{!78, !1356, !5188}
!5188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5189, size: 64)
!5189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_insn", file: !142, line: 65, size: 64, elements: !5190)
!5190 = !{!5191, !5192, !5193, !5194, !5195}
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !5189, file: !142, line: 66, baseType: !527, size: 8)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "dst_reg", scope: !5189, file: !142, line: 67, baseType: !527, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "src_reg", scope: !5189, file: !142, line: 68, baseType: !527, size: 4, offset: 12, flags: DIFlagBitField, extraData: i64 8)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !5189, file: !142, line: 69, baseType: !2361, size: 16, offset: 16)
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "imm", scope: !5189, file: !142, line: 70, baseType: !988, size: 32, offset: 32)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_sys_lookup_elem", scope: !1151, file: !111, line: 86, baseType: !5197, size: 64, offset: 1280)
!5197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5198, size: 64)
!5198 = !DISubroutineType(types: !5199)
!5199 = !{!1033, !637}
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "map_seq_show_elem", scope: !1151, file: !111, line: 87, baseType: !5201, size: 64, offset: 1344)
!5201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5202, size: 64)
!5202 = !DISubroutineType(types: !5203)
!5203 = !{null, !1356, !637, !1699}
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "map_check_btf", scope: !1151, file: !111, line: 89, baseType: !5205, size: 64, offset: 1408)
!5205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5206, size: 64)
!5206 = !DISubroutineType(types: !5207)
!5207 = !{!78, !5208, !5210, !5213, !5213}
!5208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5209, size: 64)
!5209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1146)
!5210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5211, size: 64)
!5211 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5212)
!5212 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf", file: !111, line: 32, flags: DIFlagFwdDecl)
!5213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5214, size: 64)
!5214 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5215)
!5215 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf_type", file: !111, line: 33, flags: DIFlagFwdDecl)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_track", scope: !1151, file: !111, line: 95, baseType: !5217, size: 64, offset: 1472)
!5217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5218, size: 64)
!5218 = !DISubroutineType(types: !5219)
!5219 = !{!78, !1356, !5220}
!5220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5221, size: 64)
!5221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_aux", file: !111, line: 757, size: 4928, elements: !5222)
!5222 = !{!5223, !5224, !5225, !5226, !5227, !5228, !5229, !5230, !5231, !5232, !5233, !5234, !5235, !5236, !5244, !5245, !5246, !5289, !5290, !5291, !5292, !5293, !5294, !5295, !5296, !5297, !5298, !5299, !5300, !5301, !5303, !5304, !5323, !5324, !5325, !5334, !5336, !5337, !5338, !5339, !5340, !5342, !5343, !5358, !5360, !5366, !5372, !5380, !5381, !5382, !5383, !5384, !5385, !5393, !5400}
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5221, file: !111, line: 758, baseType: !419, size: 64)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "used_map_cnt", scope: !5221, file: !111, line: 759, baseType: !1033, size: 32, offset: 64)
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "max_ctx_offset", scope: !5221, file: !111, line: 760, baseType: !1033, size: 32, offset: 96)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "max_pkt_offset", scope: !5221, file: !111, line: 761, baseType: !1033, size: 32, offset: 128)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "max_tp_access", scope: !5221, file: !111, line: 762, baseType: !1033, size: 32, offset: 160)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "stack_depth", scope: !5221, file: !111, line: 763, baseType: !1033, size: 32, offset: 192)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5221, file: !111, line: 764, baseType: !1033, size: 32, offset: 224)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "func_cnt", scope: !5221, file: !111, line: 765, baseType: !1033, size: 32, offset: 256)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "func_idx", scope: !5221, file: !111, line: 766, baseType: !1033, size: 32, offset: 288)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !5221, file: !111, line: 767, baseType: !1033, size: 32, offset: 320)
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info_size", scope: !5221, file: !111, line: 768, baseType: !1033, size: 32, offset: 352)
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdonly_access", scope: !5221, file: !111, line: 769, baseType: !1033, size: 32, offset: 384)
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdwr_access", scope: !5221, file: !111, line: 770, baseType: !1033, size: 32, offset: 416)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info", scope: !5221, file: !111, line: 771, baseType: !5237, size: 64, offset: 448)
!5237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5238, size: 64)
!5238 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5239)
!5239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ctx_arg_aux", file: !111, line: 751, size: 96, elements: !5240)
!5240 = !{!5241, !5242, !5243}
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5239, file: !111, line: 752, baseType: !1033, size: 32)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "reg_type", scope: !5239, file: !111, line: 753, baseType: !110, size: 32, offset: 32)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !5239, file: !111, line: 754, baseType: !1033, size: 32, offset: 64)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "dst_mutex", scope: !5221, file: !111, line: 772, baseType: !1711, size: 192, offset: 512)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "dst_prog", scope: !5221, file: !111, line: 773, baseType: !1134, size: 64, offset: 704)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "dst_trampoline", scope: !5221, file: !111, line: 774, baseType: !5247, size: 64, offset: 768)
!5247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5248, size: 64)
!5248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_trampoline", file: !111, line: 586, size: 2944, elements: !5249)
!5249 = !{!5250, !5251, !5252, !5253, !5254, !5266, !5267, !5269, !5270, !5271, !5272}
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !5248, file: !111, line: 588, baseType: !322, size: 128)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !5248, file: !111, line: 590, baseType: !1711, size: 192, offset: 128)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5248, file: !111, line: 591, baseType: !614, size: 32, offset: 320)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !5248, file: !111, line: 592, baseType: !377, size: 64, offset: 384)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5248, file: !111, line: 597, baseType: !5255, size: 256, offset: 448)
!5255 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5248, file: !111, line: 593, size: 256, elements: !5256)
!5256 = !{!5257, !5264, !5265}
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !5255, file: !111, line: 594, baseType: !5258, size: 112)
!5258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "btf_func_model", file: !111, line: 509, size: 112, elements: !5259)
!5259 = !{!5260, !5261, !5262}
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "ret_size", scope: !5258, file: !111, line: 510, baseType: !840, size: 8)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "nr_args", scope: !5258, file: !111, line: 511, baseType: !840, size: 8, offset: 8)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !5258, file: !111, line: 512, baseType: !5263, size: 96, offset: 16)
!5263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !840, size: 96, elements: !4195)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !5255, file: !111, line: 595, baseType: !637, size: 64, offset: 128)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "ftrace_managed", scope: !5255, file: !111, line: 596, baseType: !817, size: 8, offset: 192)
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "extension_prog", scope: !5248, file: !111, line: 602, baseType: !1134, size: 64, offset: 704)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "progs_hlist", scope: !5248, file: !111, line: 604, baseType: !5268, size: 192, offset: 768)
!5268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1627, size: 192, elements: !1638)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "progs_cnt", scope: !5248, file: !111, line: 606, baseType: !3443, size: 96, offset: 960)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !5248, file: !111, line: 608, baseType: !637, size: 64, offset: 1088)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "selector", scope: !5248, file: !111, line: 609, baseType: !377, size: 64, offset: 1152)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !5248, file: !111, line: 610, baseType: !5273, size: 1728, offset: 1216)
!5273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ksym", file: !111, line: 569, size: 1728, elements: !5274)
!5274 = !{!5275, !5276, !5277, !5281, !5282, !5288}
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5273, file: !111, line: 570, baseType: !358, size: 64)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !5273, file: !111, line: 571, baseType: !358, size: 64, offset: 64)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5273, file: !111, line: 572, baseType: !5278, size: 1024, offset: 128)
!5278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 1024, elements: !5279)
!5279 = !{!5280}
!5280 = !DISubrange(count: 128)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "lnode", scope: !5273, file: !111, line: 573, baseType: !330, size: 128, offset: 1152)
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "tnode", scope: !5273, file: !111, line: 574, baseType: !5283, size: 384, offset: 1280)
!5283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "latch_tree_node", file: !5284, line: 40, size: 384, elements: !5285)
!5284 = !DIFile(filename: "./include/linux/rbtree_latch.h", directory: "/home/lizy2001/genbc/linux")
!5285 = !{!5286}
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5283, file: !5284, line: 41, baseType: !5287, size: 384)
!5287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !479, size: 384, elements: !2710)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !5273, file: !111, line: 575, baseType: !817, size: 8, offset: 1664)
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_prog_type", scope: !5221, file: !111, line: 775, baseType: !141, size: 32, offset: 832)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_attach_type", scope: !5221, file: !111, line: 776, baseType: !175, size: 32, offset: 864)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "verifier_zext", scope: !5221, file: !111, line: 777, baseType: !817, size: 8, offset: 896)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "offload_requested", scope: !5221, file: !111, line: 778, baseType: !817, size: 8, offset: 904)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_trace", scope: !5221, file: !111, line: 779, baseType: !817, size: 8, offset: 912)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "func_proto_unreliable", scope: !5221, file: !111, line: 780, baseType: !817, size: 8, offset: 920)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "sleepable", scope: !5221, file: !111, line: 781, baseType: !817, size: 8, offset: 928)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call_reachable", scope: !5221, file: !111, line: 782, baseType: !817, size: 8, offset: 936)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "trampoline_prog_type", scope: !5221, file: !111, line: 783, baseType: !216, size: 32, offset: 960)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "tramp_hlist", scope: !5221, file: !111, line: 784, baseType: !322, size: 128, offset: 1024)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_proto", scope: !5221, file: !111, line: 786, baseType: !5213, size: 64, offset: 1152)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_name", scope: !5221, file: !111, line: 788, baseType: !338, size: 64, offset: 1216)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5221, file: !111, line: 789, baseType: !5302, size: 64, offset: 1280)
!5302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 64)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "jit_data", scope: !5221, file: !111, line: 790, baseType: !637, size: 64, offset: 1344)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "poke_tab", scope: !5221, file: !111, line: 791, baseType: !5305, size: 64, offset: 1408)
!5305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5306, size: 64)
!5306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_jit_poke_descriptor", file: !111, line: 734, size: 384, elements: !5307)
!5307 = !{!5308, !5309, !5310, !5311, !5319, !5320, !5321, !5322}
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target", scope: !5306, file: !111, line: 735, baseType: !637, size: 64)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_bypass", scope: !5306, file: !111, line: 736, baseType: !637, size: 64, offset: 64)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_addr", scope: !5306, file: !111, line: 737, baseType: !637, size: 64, offset: 128)
!5311 = !DIDerivedType(tag: DW_TAG_member, scope: !5306, file: !111, line: 738, baseType: !5312, size: 128, offset: 192)
!5312 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5306, file: !111, line: 738, size: 128, elements: !5313)
!5313 = !{!5314}
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call", scope: !5312, file: !111, line: 742, baseType: !5315, size: 128)
!5315 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5312, file: !111, line: 739, size: 128, elements: !5316)
!5316 = !{!5317, !5318}
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !5315, file: !111, line: 740, baseType: !1356, size: 64)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !5315, file: !111, line: 741, baseType: !1033, size: 32, offset: 64)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target_stable", scope: !5306, file: !111, line: 744, baseType: !817, size: 8, offset: 320)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "adj_off", scope: !5306, file: !111, line: 745, baseType: !840, size: 8, offset: 328)
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !5306, file: !111, line: 746, baseType: !627, size: 16, offset: 336)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "insn_idx", scope: !5306, file: !111, line: 747, baseType: !1033, size: 32, offset: 352)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "size_poke_tab", scope: !5221, file: !111, line: 792, baseType: !1033, size: 32, offset: 1472)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !5221, file: !111, line: 793, baseType: !5273, size: 1728, offset: 1536)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5221, file: !111, line: 794, baseType: !5326, size: 64, offset: 3264)
!5326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5327, size: 64)
!5327 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5328)
!5328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_ops", file: !111, line: 432, size: 64, elements: !5329)
!5329 = !{!5330}
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "test_run", scope: !5328, file: !111, line: 433, baseType: !5331, size: 64)
!5331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5332, size: 64)
!5332 = !DISubroutineType(types: !5333)
!5333 = !{!78, !1134, !5159, !1157}
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps", scope: !5221, file: !111, line: 795, baseType: !5335, size: 64, offset: 3328)
!5335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps_mutex", scope: !5221, file: !111, line: 796, baseType: !1711, size: 192, offset: 3392)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !5221, file: !111, line: 797, baseType: !1134, size: 64, offset: 3584)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !5221, file: !111, line: 798, baseType: !1999, size: 64, offset: 3648)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "load_time", scope: !5221, file: !111, line: 799, baseType: !377, size: 64, offset: 3712)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !5221, file: !111, line: 800, baseType: !5341, size: 128, offset: 3776)
!5341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1356, size: 128, elements: !2710)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5221, file: !111, line: 801, baseType: !313, size: 128, offset: 3904)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "offload", scope: !5221, file: !111, line: 805, baseType: !5344, size: 64, offset: 4032)
!5344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5345, size: 64)
!5345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_offload", file: !111, line: 478, size: 576, elements: !5346)
!5346 = !{!5347, !5348, !5349, !5352, !5353, !5354, !5355, !5356, !5357}
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !5345, file: !111, line: 479, baseType: !1134, size: 64)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !5345, file: !111, line: 480, baseType: !336, size: 64, offset: 64)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "offdev", scope: !5345, file: !111, line: 481, baseType: !5350, size: 64, offset: 128)
!5350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5351, size: 64)
!5351 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offload_dev", file: !111, line: 209, flags: DIFlagFwdDecl)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !5345, file: !111, line: 482, baseType: !637, size: 64, offset: 192)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !5345, file: !111, line: 483, baseType: !330, size: 128, offset: 256)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "dev_state", scope: !5345, file: !111, line: 484, baseType: !817, size: 8, offset: 384)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "opt_failed", scope: !5345, file: !111, line: 485, baseType: !817, size: 8, offset: 392)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "jited_image", scope: !5345, file: !111, line: 486, baseType: !637, size: 64, offset: 448)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !5345, file: !111, line: 487, baseType: !1033, size: 32, offset: 512)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !5221, file: !111, line: 806, baseType: !5359, size: 64, offset: 4096)
!5359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5212, size: 64)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !5221, file: !111, line: 807, baseType: !5361, size: 64, offset: 4160)
!5361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5362, size: 64)
!5362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info", file: !142, line: 4963, size: 64, elements: !5363)
!5363 = !{!5364, !5365}
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !5362, file: !142, line: 4964, baseType: !539, size: 32)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !5362, file: !142, line: 4965, baseType: !539, size: 32, offset: 32)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_aux", scope: !5221, file: !111, line: 808, baseType: !5367, size: 64, offset: 4224)
!5367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5368, size: 64)
!5368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info_aux", file: !111, line: 724, size: 32, elements: !5369)
!5369 = !{!5370, !5371}
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "linkage", scope: !5368, file: !111, line: 725, baseType: !627, size: 16)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "unreliable", scope: !5368, file: !111, line: 726, baseType: !817, size: 8, offset: 16)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "linfo", scope: !5221, file: !111, line: 815, baseType: !5373, size: 64, offset: 4288)
!5373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5374, size: 64)
!5374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_line_info", file: !142, line: 4971, size: 128, elements: !5375)
!5375 = !{!5376, !5377, !5378, !5379}
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !5374, file: !142, line: 4972, baseType: !539, size: 32)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "file_name_off", scope: !5374, file: !142, line: 4973, baseType: !539, size: 32, offset: 32)
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "line_off", scope: !5374, file: !142, line: 4974, baseType: !539, size: 32, offset: 64)
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !5374, file: !142, line: 4975, baseType: !539, size: 32, offset: 96)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "jited_linfo", scope: !5221, file: !111, line: 823, baseType: !1848, size: 64, offset: 4352)
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !5221, file: !111, line: 824, baseType: !1033, size: 32, offset: 4416)
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "nr_linfo", scope: !5221, file: !111, line: 825, baseType: !1033, size: 32, offset: 4448)
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "linfo_idx", scope: !5221, file: !111, line: 830, baseType: !1033, size: 32, offset: 4480)
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "num_exentries", scope: !5221, file: !111, line: 831, baseType: !1033, size: 32, offset: 4512)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "extable", scope: !5221, file: !111, line: 832, baseType: !5386, size: 64, offset: 4544)
!5386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5387, size: 64)
!5387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "exception_table_entry", file: !5388, line: 17, size: 96, elements: !5389)
!5388 = !DIFile(filename: "./arch/x86/include/asm/extable.h", directory: "/home/lizy2001/genbc/linux")
!5389 = !{!5390, !5391, !5392}
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !5387, file: !5388, line: 18, baseType: !78, size: 32)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !5387, file: !5388, line: 18, baseType: !78, size: 32, offset: 32)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !5387, file: !5388, line: 18, baseType: !78, size: 32, offset: 64)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !5221, file: !111, line: 833, baseType: !5394, size: 64, offset: 4608)
!5394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5395, size: 64)
!5395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_stats", file: !111, line: 503, size: 128, align: 128, elements: !5396)
!5396 = !{!5397, !5398, !5399}
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !5395, file: !111, line: 504, baseType: !377, size: 64)
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "nsecs", scope: !5395, file: !111, line: 505, baseType: !377, size: 64, offset: 64)
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !5395, file: !111, line: 506, baseType: !3116, offset: 128)
!5400 = !DIDerivedType(tag: DW_TAG_member, scope: !5221, file: !111, line: 834, baseType: !5401, size: 256, offset: 4672)
!5401 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5221, file: !111, line: 834, size: 256, elements: !5402)
!5402 = !{!5403, !5404}
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5401, file: !111, line: 835, baseType: !2875, size: 256)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5401, file: !111, line: 836, baseType: !345, size: 128, align: 64)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_untrack", scope: !1151, file: !111, line: 96, baseType: !5406, size: 64, offset: 1536)
!5406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5407, size: 64)
!5407 = !DISubroutineType(types: !5408)
!5408 = !{null, !1356, !5220}
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_run", scope: !1151, file: !111, line: 97, baseType: !5410, size: 64, offset: 1600)
!5410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5411, size: 64)
!5411 = !DISubroutineType(types: !5412)
!5412 = !{null, !1356, !1033, !1134, !1134}
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_addr", scope: !1151, file: !111, line: 101, baseType: !5414, size: 64, offset: 1664)
!5414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5415, size: 64)
!5415 = !DISubroutineType(types: !5416)
!5416 = !{!78, !5208, !5417, !1033}
!5417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 64)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_meta", scope: !1151, file: !111, line: 103, baseType: !5419, size: 64, offset: 1728)
!5419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5420, size: 64)
!5420 = !DISubroutineType(types: !5421)
!5421 = !{!78, !5208, !377, !2562}
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "map_mmap", scope: !1151, file: !111, line: 105, baseType: !5423, size: 64, offset: 1792)
!5423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5424, size: 64)
!5424 = !DISubroutineType(types: !5425)
!5425 = !{!78, !1356, !2144}
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "map_poll", scope: !1151, file: !111, line: 106, baseType: !5427, size: 64, offset: 1856)
!5427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5428, size: 64)
!5428 = !DISubroutineType(types: !5429)
!5429 = !{!4873, !1356, !1361, !4874}
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_charge", scope: !1151, file: !111, line: 110, baseType: !5431, size: 64, offset: 1920)
!5431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5432, size: 64)
!5432 = !DISubroutineType(types: !5433)
!5433 = !{!78, !5434, !637, !1033}
!5434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5435, size: 64)
!5435 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage_map", file: !111, line: 38, flags: DIFlagFwdDecl)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_uncharge", scope: !1151, file: !111, line: 112, baseType: !5437, size: 64, offset: 1984)
!5437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5438, size: 64)
!5438 = !DISubroutineType(types: !5439)
!5439 = !{null, !5434, !637, !1033}
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "map_owner_storage_ptr", scope: !1151, file: !111, line: 114, baseType: !5441, size: 64, offset: 2048)
!5441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5442, size: 64)
!5442 = !DISubroutineType(types: !5443)
!5443 = !{!5444, !637}
!5444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5445, size: 64)
!5445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5446, size: 64)
!5446 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage", file: !111, line: 37, flags: DIFlagFwdDecl)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "map_meta_equal", scope: !1151, file: !111, line: 125, baseType: !5448, size: 64, offset: 2112)
!5448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5449, size: 64)
!5449 = !DISubroutineType(types: !5450)
!5450 = !{!817, !5208, !5208}
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_name", scope: !1151, file: !111, line: 129, baseType: !5452, size: 64, offset: 2176)
!5452 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !338)
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_id", scope: !1151, file: !111, line: 130, baseType: !1047, size: 64, offset: 2240)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "iter_seq_info", scope: !1151, file: !111, line: 133, baseType: !5455, size: 64, offset: 2304)
!5455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5456, size: 64)
!5456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5457)
!5457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_seq_info", file: !111, line: 46, size: 256, elements: !5458)
!5458 = !{!5459, !5460, !5467, !5469}
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "seq_ops", scope: !5457, file: !111, line: 47, baseType: !1732, size: 64)
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "init_seq_private", scope: !5457, file: !111, line: 48, baseType: !5461, size: 64, offset: 64)
!5461 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_init_seq_priv_t", file: !111, line: 43, baseType: !5462)
!5462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5463, size: 64)
!5463 = !DISubroutineType(types: !5464)
!5464 = !{!78, !637, !5465}
!5465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5466, size: 64)
!5466 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_aux_info", file: !111, line: 36, flags: DIFlagFwdDecl)
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "fini_seq_private", scope: !5457, file: !111, line: 49, baseType: !5468, size: 64, offset: 128)
!5468 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_fini_seq_priv_t", file: !111, line: 45, baseType: !1461)
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "seq_priv_size", scope: !5457, file: !111, line: 50, baseType: !1033, size: 32, offset: 192)
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_meta", scope: !1146, file: !111, line: 146, baseType: !1356, size: 64, offset: 64)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !1146, file: !111, line: 150, baseType: !223, size: 32, offset: 128)
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !1146, file: !111, line: 151, baseType: !1033, size: 32, offset: 160)
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !1146, file: !111, line: 152, baseType: !1033, size: 32, offset: 192)
!5474 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !1146, file: !111, line: 153, baseType: !1033, size: 32, offset: 224)
!5475 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !1146, file: !111, line: 154, baseType: !1033, size: 32, offset: 256)
!5476 = !DIDerivedType(tag: DW_TAG_member, name: "spin_lock_off", scope: !1146, file: !111, line: 155, baseType: !78, size: 32, offset: 288)
!5477 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1146, file: !111, line: 156, baseType: !1033, size: 32, offset: 320)
!5478 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !1146, file: !111, line: 157, baseType: !78, size: 32, offset: 352)
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !1146, file: !111, line: 158, baseType: !1033, size: 32, offset: 384)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !1146, file: !111, line: 159, baseType: !1033, size: 32, offset: 416)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !1146, file: !111, line: 160, baseType: !5359, size: 64, offset: 448)
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !1146, file: !111, line: 161, baseType: !5483, size: 128, offset: 512)
!5483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_memory", file: !111, line: 136, size: 128, elements: !5484)
!5484 = !{!5485, !5486}
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !5483, file: !111, line: 137, baseType: !1033, size: 32)
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !5483, file: !111, line: 138, baseType: !1999, size: 64, offset: 64)
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1146, file: !111, line: 162, baseType: !313, size: 128, offset: 640)
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !1146, file: !111, line: 163, baseType: !1033, size: 32, offset: 768)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_spec_v1", scope: !1146, file: !111, line: 164, baseType: !817, size: 8, offset: 800)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1146, file: !111, line: 165, baseType: !817, size: 8, offset: 808)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !1146, file: !111, line: 171, baseType: !419, size: 64, align: 512, offset: 1024)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "usercnt", scope: !1146, file: !111, line: 172, baseType: !419, size: 64, offset: 1088)
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1146, file: !111, line: 173, baseType: !2875, size: 256, offset: 1152)
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_mutex", scope: !1146, file: !111, line: 174, baseType: !1711, size: 192, offset: 1408)
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "writecnt", scope: !1146, file: !111, line: 175, baseType: !377, size: 64, offset: 1600)
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !1143, file: !111, line: 224, baseType: !336, size: 64, offset: 2048)
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ops", scope: !1143, file: !111, line: 225, baseType: !5498, size: 64, offset: 2112)
!5498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5499, size: 64)
!5499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5500)
!5500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_dev_ops", file: !111, line: 212, size: 256, elements: !5501)
!5501 = !{!5502, !5506, !5507, !5511}
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !5500, file: !111, line: 213, baseType: !5503, size: 64)
!5503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5504, size: 64)
!5504 = !DISubroutineType(types: !5505)
!5505 = !{!78, !1142, !637, !637}
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !5500, file: !111, line: 215, baseType: !5503, size: 64, offset: 64)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !5500, file: !111, line: 217, baseType: !5508, size: 64, offset: 128)
!5508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5509, size: 64)
!5509 = !DISubroutineType(types: !5510)
!5510 = !{!78, !1142, !637, !637, !377}
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !5500, file: !111, line: 219, baseType: !5512, size: 64, offset: 192)
!5512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5513, size: 64)
!5513 = !DISubroutineType(types: !5514)
!5514 = !{!78, !1142, !637}
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !1143, file: !111, line: 226, baseType: !637, size: 64, offset: 2176)
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !1143, file: !111, line: 227, baseType: !330, size: 128, offset: 2240)
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "xsk", scope: !1127, file: !77, line: 911, baseType: !5518, size: 128)
!5518 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1127, file: !77, line: 908, size: 128, elements: !5519)
!5519 = !{!5520, !5523}
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !5518, file: !77, line: 909, baseType: !5521, size: 64)
!5521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5522, size: 64)
!5522 = !DICompositeType(tag: DW_TAG_structure_type, name: "xsk_buff_pool", file: !77, line: 909, flags: DIFlagFwdDecl)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "queue_id", scope: !5518, file: !77, line: 910, baseType: !627, size: 16, offset: 64)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xdp_xmit", scope: !444, file: !77, line: 1481, baseType: !5525, size: 64, offset: 4096)
!5525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5526, size: 64)
!5526 = !DISubroutineType(types: !5527)
!5527 = !{!78, !336, !78, !5528, !1033}
!5528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5529, size: 64)
!5529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5530, size: 64)
!5530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_frame", file: !5531, line: 94, size: 256, elements: !5532)
!5531 = !DIFile(filename: "./include/net/xdp.h", directory: "/home/lizy2001/genbc/linux")
!5532 = !{!5533, !5534, !5535, !5536, !5537, !5538, !5543}
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5530, file: !5531, line: 95, baseType: !637, size: 64)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5530, file: !5531, line: 96, baseType: !627, size: 16, offset: 64)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "headroom", scope: !5530, file: !5531, line: 97, baseType: !627, size: 16, offset: 80)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "metasize", scope: !5530, file: !5531, line: 98, baseType: !1033, size: 8, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "frame_sz", scope: !5530, file: !5531, line: 99, baseType: !1033, size: 24, offset: 104, flags: DIFlagBitField, extraData: i64 96)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !5530, file: !5531, line: 103, baseType: !5539, size: 64, offset: 128)
!5539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_mem_info", file: !5531, line: 50, size: 64, elements: !5540)
!5540 = !{!5541, !5542}
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5539, file: !5531, line: 51, baseType: !1033, size: 32)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5539, file: !5531, line: 52, baseType: !1033, size: 32, offset: 32)
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "dev_rx", scope: !5530, file: !5531, line: 104, baseType: !336, size: 64, offset: 192)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xsk_wakeup", scope: !444, file: !77, line: 1484, baseType: !5545, size: 64, offset: 4160)
!5545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5546, size: 64)
!5546 = !DISubroutineType(types: !5547)
!5547 = !{!78, !336, !1033, !1033}
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_devlink_port", scope: !444, file: !77, line: 1486, baseType: !5549, size: 64, offset: 4224)
!5549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5550, size: 64)
!5550 = !DISubroutineType(types: !5551)
!5551 = !{!5552, !336}
!5552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5553, size: 64)
!5553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port", file: !5554, line: 119, size: 2176, elements: !5555)
!5554 = !DIFile(filename: "./include/net/devlink.h", directory: "/home/lizy2001/genbc/linux")
!5555 = !{!5556, !5557, !5558, !5559, !6536, !6537, !6538, !6539, !6540, !6541, !6542, !6580, !6581, !6582, !6589, !6590}
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5553, file: !5554, line: 120, baseType: !330, size: 128)
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "param_list", scope: !5553, file: !5554, line: 121, baseType: !330, size: 128, offset: 128)
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "region_list", scope: !5553, file: !5554, line: 122, baseType: !330, size: 128, offset: 256)
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "devlink", scope: !5553, file: !5554, line: 123, baseType: !5560, size: 64, offset: 384)
!5560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5561, size: 64)
!5561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink", file: !5554, line: 33, size: 2816, elements: !5562)
!5562 = !{!5563, !5564, !5565, !5566, !5567, !5568, !5569, !5570, !5571, !5572, !5594, !5595, !5596, !5597, !5791, !5792, !5798, !6525, !6530, !6531, !6532, !6533, !6534}
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5561, file: !5554, line: 34, baseType: !330, size: 128)
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "port_list", scope: !5561, file: !5554, line: 35, baseType: !330, size: 128, offset: 128)
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "sb_list", scope: !5561, file: !5554, line: 36, baseType: !330, size: 128, offset: 256)
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "dpipe_table_list", scope: !5561, file: !5554, line: 37, baseType: !330, size: 128, offset: 384)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "resource_list", scope: !5561, file: !5554, line: 38, baseType: !330, size: 128, offset: 512)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "param_list", scope: !5561, file: !5554, line: 39, baseType: !330, size: 128, offset: 640)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "region_list", scope: !5561, file: !5554, line: 40, baseType: !330, size: 128, offset: 768)
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "reporter_list", scope: !5561, file: !5554, line: 41, baseType: !330, size: 128, offset: 896)
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "reporters_lock", scope: !5561, file: !5554, line: 42, baseType: !1711, size: 192, offset: 1024)
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "dpipe_headers", scope: !5561, file: !5554, line: 43, baseType: !5573, size: 64, offset: 1216)
!5573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5574, size: 64)
!5574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_dpipe_headers", file: !5554, line: 320, size: 128, elements: !5575)
!5575 = !{!5576, !5593}
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "headers", scope: !5574, file: !5554, line: 321, baseType: !5577, size: 64)
!5577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5578, size: 64)
!5578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5579, size: 64)
!5579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_dpipe_header", file: !5554, line: 170, size: 256, elements: !5580)
!5580 = !{!5581, !5582, !5583, !5591, !5592}
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5579, file: !5554, line: 171, baseType: !338, size: 64)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5579, file: !5554, line: 172, baseType: !7, size: 32, offset: 64)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "fields", scope: !5579, file: !5554, line: 173, baseType: !5584, size: 64, offset: 128)
!5584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5585, size: 64)
!5585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_dpipe_field", file: !5554, line: 154, size: 192, elements: !5586)
!5586 = !{!5587, !5588, !5589, !5590}
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5585, file: !5554, line: 155, baseType: !338, size: 64)
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5585, file: !5554, line: 156, baseType: !7, size: 32, offset: 64)
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "bitwidth", scope: !5585, file: !5554, line: 157, baseType: !7, size: 32, offset: 96)
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "mapping_type", scope: !5585, file: !5554, line: 158, baseType: !5, size: 32, offset: 128)
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "fields_count", scope: !5579, file: !5554, line: 174, baseType: !7, size: 32, offset: 192)
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "global", scope: !5579, file: !5554, line: 175, baseType: !817, size: 8, offset: 224)
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "headers_count", scope: !5574, file: !5554, line: 322, baseType: !7, size: 32, offset: 64)
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "trap_list", scope: !5561, file: !5554, line: 44, baseType: !330, size: 128, offset: 1280)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "trap_group_list", scope: !5561, file: !5554, line: 45, baseType: !330, size: 128, offset: 1408)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_list", scope: !5561, file: !5554, line: 46, baseType: !330, size: 128, offset: 1536)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5561, file: !5554, line: 47, baseType: !5598, size: 64, offset: 1664)
!5598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5599, size: 64)
!5599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5600)
!5600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_ops", file: !5554, line: 1159, size: 2432, elements: !5601)
!5601 = !{!5602, !5603, !5604, !5605, !5609, !5613, !5617, !5621, !5625, !5636, !5640, !5644, !5648, !5653, !5657, !5661, !5662, !5666, !5670, !5674, !5678, !5682, !5686, !5691, !5695, !5701, !5711, !5726, !5730, !5734, !5746, !5761, !5765, !5769, !5773, !5777, !5781, !5785}
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "supported_flash_update_params", scope: !5600, file: !5554, line: 1165, baseType: !1033, size: 32)
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "reload_actions", scope: !5600, file: !5554, line: 1166, baseType: !358, size: 64, offset: 64)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "reload_limits", scope: !5600, file: !5554, line: 1167, baseType: !358, size: 64, offset: 128)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "reload_down", scope: !5600, file: !5554, line: 1168, baseType: !5606, size: 64, offset: 192)
!5606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5607, size: 64)
!5607 = !DISubroutineType(types: !5608)
!5608 = !{!78, !5560, !817, !11, !18, !932}
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "reload_up", scope: !5600, file: !5554, line: 1172, baseType: !5610, size: 64, offset: 256)
!5610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5611, size: 64)
!5611 = !DISubroutineType(types: !5612)
!5612 = !{!78, !5560, !11, !18, !2562, !932}
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "port_type_set", scope: !5600, file: !5554, line: 1175, baseType: !5614, size: 64, offset: 320)
!5614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5615, size: 64)
!5615 = !DISubroutineType(types: !5616)
!5616 = !{!78, !5552, !24}
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "port_split", scope: !5600, file: !5554, line: 1177, baseType: !5618, size: 64, offset: 384)
!5618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5619, size: 64)
!5619 = !DISubroutineType(types: !5620)
!5620 = !{!78, !5560, !7, !7, !932}
!5621 = !DIDerivedType(tag: DW_TAG_member, name: "port_unsplit", scope: !5600, file: !5554, line: 1179, baseType: !5622, size: 64, offset: 448)
!5622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5623, size: 64)
!5623 = !DISubroutineType(types: !5624)
!5624 = !{!78, !5560, !7, !932}
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "sb_pool_get", scope: !5600, file: !5554, line: 1181, baseType: !5626, size: 64, offset: 512)
!5626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5627, size: 64)
!5627 = !DISubroutineType(types: !5628)
!5628 = !{!78, !5560, !7, !627, !5629}
!5629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5630, size: 64)
!5630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_sb_pool_info", file: !5554, line: 140, size: 128, elements: !5631)
!5631 = !{!5632, !5633, !5634, !5635}
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "pool_type", scope: !5630, file: !5554, line: 141, baseType: !30, size: 32)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5630, file: !5554, line: 142, baseType: !1033, size: 32, offset: 32)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "threshold_type", scope: !5630, file: !5554, line: 143, baseType: !34, size: 32, offset: 64)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "cell_size", scope: !5630, file: !5554, line: 144, baseType: !1033, size: 32, offset: 96)
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "sb_pool_set", scope: !5600, file: !5554, line: 1184, baseType: !5637, size: 64, offset: 576)
!5637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5638, size: 64)
!5638 = !DISubroutineType(types: !5639)
!5639 = !{!78, !5560, !7, !627, !1033, !34, !932}
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "sb_port_pool_get", scope: !5600, file: !5554, line: 1188, baseType: !5641, size: 64, offset: 640)
!5641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5642, size: 64)
!5642 = !DISubroutineType(types: !5643)
!5643 = !{!78, !5552, !7, !627, !2562}
!5644 = !DIDerivedType(tag: DW_TAG_member, name: "sb_port_pool_set", scope: !5600, file: !5554, line: 1191, baseType: !5645, size: 64, offset: 704)
!5645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5646, size: 64)
!5646 = !DISubroutineType(types: !5647)
!5647 = !{!78, !5552, !7, !627, !1033, !932}
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "sb_tc_pool_bind_get", scope: !5600, file: !5554, line: 1194, baseType: !5649, size: 64, offset: 768)
!5649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5650, size: 64)
!5650 = !DISubroutineType(types: !5651)
!5651 = !{!78, !5552, !7, !627, !30, !5652, !2562}
!5652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 64)
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "sb_tc_pool_bind_set", scope: !5600, file: !5554, line: 1199, baseType: !5654, size: 64, offset: 832)
!5654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5655, size: 64)
!5655 = !DISubroutineType(types: !5656)
!5656 = !{!78, !5552, !7, !627, !30, !627, !1033, !932}
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_snapshot", scope: !5600, file: !5554, line: 1205, baseType: !5658, size: 64, offset: 896)
!5658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5659, size: 64)
!5659 = !DISubroutineType(types: !5660)
!5660 = !{!78, !5560, !7}
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_max_clear", scope: !5600, file: !5554, line: 1207, baseType: !5658, size: 64, offset: 960)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_port_pool_get", scope: !5600, file: !5554, line: 1209, baseType: !5663, size: 64, offset: 1024)
!5663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5664, size: 64)
!5664 = !DISubroutineType(types: !5665)
!5665 = !{!78, !5552, !7, !627, !2562, !2562}
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_tc_port_bind_get", scope: !5600, file: !5554, line: 1212, baseType: !5667, size: 64, offset: 1088)
!5667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5668, size: 64)
!5668 = !DISubroutineType(types: !5669)
!5669 = !{!78, !5552, !7, !627, !30, !2562, !2562}
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_mode_get", scope: !5600, file: !5554, line: 1218, baseType: !5671, size: 64, offset: 1152)
!5671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5672, size: 64)
!5672 = !DISubroutineType(types: !5673)
!5673 = !{!78, !5560, !5652}
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_mode_set", scope: !5600, file: !5554, line: 1219, baseType: !5675, size: 64, offset: 1216)
!5675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5676, size: 64)
!5676 = !DISubroutineType(types: !5677)
!5677 = !{!78, !5560, !627, !932}
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_inline_mode_get", scope: !5600, file: !5554, line: 1221, baseType: !5679, size: 64, offset: 1280)
!5679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5680, size: 64)
!5680 = !DISubroutineType(types: !5681)
!5681 = !{!78, !5560, !839}
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_inline_mode_set", scope: !5600, file: !5554, line: 1222, baseType: !5683, size: 64, offset: 1344)
!5683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5684, size: 64)
!5684 = !DISubroutineType(types: !5685)
!5685 = !{!78, !5560, !840, !932}
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_encap_mode_get", scope: !5600, file: !5554, line: 1224, baseType: !5687, size: 64, offset: 1408)
!5687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5688, size: 64)
!5688 = !DISubroutineType(types: !5689)
!5689 = !{!78, !5560, !5690}
!5690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !38, size: 64)
!5691 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_encap_mode_set", scope: !5600, file: !5554, line: 1226, baseType: !5692, size: 64, offset: 1472)
!5692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5693, size: 64)
!5693 = !DISubroutineType(types: !5694)
!5694 = !{!78, !5560, !38, !932}
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "info_get", scope: !5600, file: !5554, line: 1229, baseType: !5696, size: 64, offset: 1536)
!5696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5697, size: 64)
!5697 = !DISubroutineType(types: !5698)
!5698 = !{!78, !5560, !5699, !932}
!5699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5700, size: 64)
!5700 = !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_info_req", file: !5554, line: 586, flags: DIFlagFwdDecl)
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "flash_update", scope: !5600, file: !5554, line: 1238, baseType: !5702, size: 64, offset: 1600)
!5702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5703, size: 64)
!5703 = !DISubroutineType(types: !5704)
!5704 = !{!78, !5560, !5705, !932}
!5705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5706, size: 64)
!5706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_flash_update_params", file: !5554, line: 576, size: 192, elements: !5707)
!5707 = !{!5708, !5709, !5710}
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "file_name", scope: !5706, file: !5554, line: 577, baseType: !338, size: 64)
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "component", scope: !5706, file: !5554, line: 578, baseType: !338, size: 64, offset: 64)
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "overwrite_mask", scope: !5706, file: !5554, line: 579, baseType: !1033, size: 32, offset: 128)
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "trap_init", scope: !5600, file: !5554, line: 1249, baseType: !5712, size: 64, offset: 1664)
!5712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5713, size: 64)
!5713 = !DISubroutineType(types: !5714)
!5714 = !{!78, !5560, !5715, !637}
!5715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5716, size: 64)
!5716 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5717)
!5717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_trap", file: !5554, line: 733, size: 256, elements: !5718)
!5718 = !{!5719, !5720, !5721, !5722, !5723, !5724, !5725}
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5717, file: !5554, line: 734, baseType: !42, size: 32)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "init_action", scope: !5717, file: !5554, line: 735, baseType: !47, size: 32, offset: 32)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "generic", scope: !5717, file: !5554, line: 736, baseType: !817, size: 8, offset: 64)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5717, file: !5554, line: 737, baseType: !627, size: 16, offset: 80)
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5717, file: !5554, line: 738, baseType: !338, size: 64, offset: 128)
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "init_group_id", scope: !5717, file: !5554, line: 739, baseType: !627, size: 16, offset: 192)
!5725 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_cap", scope: !5717, file: !5554, line: 740, baseType: !1033, size: 32, offset: 224)
!5726 = !DIDerivedType(tag: DW_TAG_member, name: "trap_fini", scope: !5600, file: !5554, line: 1257, baseType: !5727, size: 64, offset: 1728)
!5727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5728, size: 64)
!5728 = !DISubroutineType(types: !5729)
!5729 = !{null, !5560, !5715, !637}
!5730 = !DIDerivedType(tag: DW_TAG_member, name: "trap_action_set", scope: !5600, file: !5554, line: 1262, baseType: !5731, size: 64, offset: 1792)
!5731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5732, size: 64)
!5732 = !DISubroutineType(types: !5733)
!5733 = !{!78, !5560, !5715, !47, !932}
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "trap_group_init", scope: !5600, file: !5554, line: 1272, baseType: !5735, size: 64, offset: 1856)
!5735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5736, size: 64)
!5736 = !DISubroutineType(types: !5737)
!5737 = !{!78, !5560, !5738}
!5738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5739, size: 64)
!5739 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5740)
!5740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_trap_group", file: !5554, line: 710, size: 128, elements: !5741)
!5741 = !{!5742, !5743, !5744, !5745}
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5740, file: !5554, line: 711, baseType: !338, size: 64)
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5740, file: !5554, line: 712, baseType: !627, size: 16, offset: 64)
!5744 = !DIDerivedType(tag: DW_TAG_member, name: "generic", scope: !5740, file: !5554, line: 713, baseType: !817, size: 8, offset: 80)
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "init_policer_id", scope: !5740, file: !5554, line: 714, baseType: !1033, size: 32, offset: 96)
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "trap_group_set", scope: !5600, file: !5554, line: 1280, baseType: !5747, size: 64, offset: 1920)
!5747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5748, size: 64)
!5748 = !DISubroutineType(types: !5749)
!5749 = !{!78, !5560, !5738, !5750, !932}
!5750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5751, size: 64)
!5751 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5752)
!5752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_trap_policer", file: !5554, line: 690, size: 448, elements: !5753)
!5753 = !{!5754, !5755, !5756, !5757, !5758, !5759, !5760}
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5752, file: !5554, line: 691, baseType: !1033, size: 32)
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "init_rate", scope: !5752, file: !5554, line: 692, baseType: !377, size: 64, offset: 64)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "init_burst", scope: !5752, file: !5554, line: 693, baseType: !377, size: 64, offset: 128)
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "max_rate", scope: !5752, file: !5554, line: 694, baseType: !377, size: 64, offset: 192)
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "min_rate", scope: !5752, file: !5554, line: 695, baseType: !377, size: 64, offset: 256)
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "max_burst", scope: !5752, file: !5554, line: 696, baseType: !377, size: 64, offset: 320)
!5760 = !DIDerivedType(tag: DW_TAG_member, name: "min_burst", scope: !5752, file: !5554, line: 697, baseType: !377, size: 64, offset: 384)
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "trap_group_action_set", scope: !5600, file: !5554, line: 1290, baseType: !5762, size: 64, offset: 1984)
!5762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5763, size: 64)
!5763 = !DISubroutineType(types: !5764)
!5764 = !{!78, !5560, !5738, !47, !932}
!5765 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_init", scope: !5600, file: !5554, line: 1300, baseType: !5766, size: 64, offset: 2048)
!5766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5767, size: 64)
!5767 = !DISubroutineType(types: !5768)
!5768 = !{!78, !5560, !5750}
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_fini", scope: !5600, file: !5554, line: 1308, baseType: !5770, size: 64, offset: 2112)
!5770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5771, size: 64)
!5771 = !DISubroutineType(types: !5772)
!5772 = !{null, !5560, !5750}
!5773 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_set", scope: !5600, file: !5554, line: 1313, baseType: !5774, size: 64, offset: 2176)
!5774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5775, size: 64)
!5775 = !DISubroutineType(types: !5776)
!5776 = !{!78, !5560, !5750, !377, !377, !932}
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_counter_get", scope: !5600, file: !5554, line: 1323, baseType: !5778, size: 64, offset: 2240)
!5778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5779, size: 64)
!5779 = !DISubroutineType(types: !5780)
!5780 = !{!78, !5560, !5750, !5417}
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "port_function_hw_addr_get", scope: !5600, file: !5554, line: 1335, baseType: !5782, size: 64, offset: 2304)
!5782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5783, size: 64)
!5783 = !DISubroutineType(types: !5784)
!5784 = !{!78, !5560, !5552, !839, !1047, !932}
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "port_function_hw_addr_set", scope: !5600, file: !5554, line: 1345, baseType: !5786, size: 64, offset: 2368)
!5786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5787, size: 64)
!5787 = !DISubroutineType(types: !5788)
!5788 = !{!78, !5560, !5552, !5789, !78, !932}
!5789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5790, size: 64)
!5790 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !840)
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "snapshot_ids", scope: !5561, file: !5554, line: 48, baseType: !1783, size: 128, offset: 1728)
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !5561, file: !5554, line: 49, baseType: !5793, size: 384, offset: 1856)
!5793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_dev_stats", file: !5554, line: 26, size: 384, elements: !5794)
!5794 = !{!5795, !5797}
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "reload_stats", scope: !5793, file: !5554, line: 27, baseType: !5796, size: 192)
!5796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1033, size: 192, elements: !1045)
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "remote_reload_stats", scope: !5793, file: !5554, line: 28, baseType: !5796, size: 192, offset: 192)
!5798 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5561, file: !5554, line: 50, baseType: !5799, size: 64, offset: 2240)
!5799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5800, size: 64)
!5800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !5801, line: 461, size: 5568, elements: !5802)
!5801 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!5802 = !{!5803, !6083, !6084, !6087, !6088, !6140, !6219, !6220, !6221, !6222, !6223, !6238, !6345, !6358, !6361, !6362, !6366, !6367, !6368, !6369, !6373, !6379, !6380, !6383, !6387, !6477, !6478, !6479, !6480, !6481, !6513, !6514, !6515, !6518, !6521, !6522, !6523, !6524}
!5803 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5800, file: !5801, line: 462, baseType: !5804, size: 512)
!5804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !5805, line: 64, size: 512, elements: !5806)
!5805 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!5806 = !{!5807, !5808, !5809, !5811, !5851, !5952, !6073, !6078, !6079, !6080, !6081, !6082}
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5804, file: !5805, line: 65, baseType: !338, size: 64)
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !5804, file: !5805, line: 66, baseType: !330, size: 128, offset: 64)
!5809 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5804, file: !5805, line: 67, baseType: !5810, size: 64, offset: 192)
!5810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5804, size: 64)
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !5804, file: !5805, line: 68, baseType: !5812, size: 64, offset: 256)
!5812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5813, size: 64)
!5813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !5805, line: 192, size: 704, elements: !5814)
!5814 = !{!5815, !5816, !5817, !5818}
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5813, file: !5805, line: 193, baseType: !330, size: 128)
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !5813, file: !5805, line: 194, baseType: !1716, offset: 128)
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5813, file: !5805, line: 195, baseType: !5804, size: 512, offset: 128)
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !5813, file: !5805, line: 196, baseType: !5819, size: 64, offset: 640)
!5819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5820, size: 64)
!5820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5821)
!5821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !5805, line: 156, size: 192, elements: !5822)
!5822 = !{!5823, !5828, !5833}
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !5821, file: !5805, line: 157, baseType: !5824, size: 64)
!5824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5825)
!5825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5826, size: 64)
!5826 = !DISubroutineType(types: !5827)
!5827 = !{!78, !5812, !5810}
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5821, file: !5805, line: 158, baseType: !5829, size: 64, offset: 64)
!5829 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5830)
!5830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5831, size: 64)
!5831 = !DISubroutineType(types: !5832)
!5832 = !{!338, !5812, !5810}
!5833 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !5821, file: !5805, line: 159, baseType: !5834, size: 64, offset: 128)
!5834 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5835)
!5835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5836, size: 64)
!5836 = !DISubroutineType(types: !5837)
!5837 = !{!78, !5812, !5810, !5838}
!5838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5839, size: 64)
!5839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !5805, line: 148, size: 20736, elements: !5840)
!5840 = !{!5841, !5843, !5845, !5846, !5850}
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !5839, file: !5805, line: 149, baseType: !5842, size: 192)
!5842 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1084, size: 192, elements: !1638)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !5839, file: !5805, line: 150, baseType: !5844, size: 4096, offset: 192)
!5844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1084, size: 4096, elements: !3857)
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !5839, file: !5805, line: 151, baseType: !78, size: 32, offset: 4288)
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !5839, file: !5805, line: 152, baseType: !5847, size: 16384, offset: 4320)
!5847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 16384, elements: !5848)
!5848 = !{!5849}
!5849 = !DISubrange(count: 2048)
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !5839, file: !5805, line: 153, baseType: !78, size: 32, offset: 20704)
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !5804, file: !5805, line: 69, baseType: !5852, size: 64, offset: 320)
!5852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5853, size: 64)
!5853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !5805, line: 138, size: 448, elements: !5854)
!5854 = !{!5855, !5859, !5878, !5880, !5913, !5944, !5948}
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5853, file: !5805, line: 139, baseType: !5856, size: 64)
!5856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5857, size: 64)
!5857 = !DISubroutineType(types: !5858)
!5858 = !{null, !5810}
!5859 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !5853, file: !5805, line: 140, baseType: !5860, size: 64, offset: 64)
!5860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5861, size: 64)
!5861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5862)
!5862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !5863, line: 230, size: 128, elements: !5864)
!5863 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!5864 = !{!5865, !5874}
!5865 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !5862, file: !5863, line: 231, baseType: !5866, size: 64)
!5866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5867, size: 64)
!5867 = !DISubroutineType(types: !5868)
!5868 = !{!1567, !5810, !5869, !1084}
!5869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5870, size: 64)
!5870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !5863, line: 30, size: 128, elements: !5871)
!5871 = !{!5872, !5873}
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5870, file: !5863, line: 31, baseType: !338, size: 64)
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5870, file: !5863, line: 32, baseType: !1425, size: 16, offset: 64)
!5874 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !5862, file: !5863, line: 232, baseType: !5875, size: 64, offset: 64)
!5875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5876, size: 64)
!5876 = !DISubroutineType(types: !5877)
!5877 = !{!1567, !5810, !5869, !338, !1085}
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !5853, file: !5805, line: 141, baseType: !5879, size: 64, offset: 128)
!5879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5869, size: 64)
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !5853, file: !5805, line: 142, baseType: !5881, size: 64, offset: 192)
!5881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5882, size: 64)
!5882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5883, size: 64)
!5883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5884)
!5884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !5863, line: 84, size: 320, elements: !5885)
!5885 = !{!5886, !5887, !5891, !5910, !5911}
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5884, file: !5863, line: 85, baseType: !338, size: 64)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !5884, file: !5863, line: 86, baseType: !5888, size: 64, offset: 64)
!5888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5889, size: 64)
!5889 = !DISubroutineType(types: !5890)
!5890 = !{!1425, !5810, !5869, !78}
!5891 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !5884, file: !5863, line: 88, baseType: !5892, size: 64, offset: 128)
!5892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5893, size: 64)
!5893 = !DISubroutineType(types: !5894)
!5894 = !{!1425, !5810, !5895, !78}
!5895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5896, size: 64)
!5896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !5863, line: 168, size: 448, elements: !5897)
!5897 = !{!5898, !5899, !5900, !5901, !5905, !5906}
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5896, file: !5863, line: 169, baseType: !5870, size: 128)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5896, file: !5863, line: 170, baseType: !1085, size: 64, offset: 128)
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !5896, file: !5863, line: 171, baseType: !637, size: 64, offset: 192)
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !5896, file: !5863, line: 172, baseType: !5902, size: 64, offset: 256)
!5902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5903, size: 64)
!5903 = !DISubroutineType(types: !5904)
!5904 = !{!1567, !1361, !5810, !5895, !1084, !1522, !1085}
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !5896, file: !5863, line: 174, baseType: !5902, size: 64, offset: 320)
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !5896, file: !5863, line: 176, baseType: !5907, size: 64, offset: 384)
!5907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5908, size: 64)
!5908 = !DISubroutineType(types: !5909)
!5909 = !{!78, !1361, !5810, !5895, !2144}
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !5884, file: !5863, line: 90, baseType: !5879, size: 64, offset: 192)
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !5884, file: !5863, line: 91, baseType: !5912, size: 64, offset: 256)
!5912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5895, size: 64)
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !5853, file: !5805, line: 143, baseType: !5914, size: 64, offset: 256)
!5914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5915, size: 64)
!5915 = !DISubroutineType(types: !5916)
!5916 = !{!5917, !5810}
!5917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5918, size: 64)
!5918 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5919)
!5919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !493, line: 39, size: 384, elements: !5920)
!5920 = !{!5921, !5927, !5931, !5935, !5939, !5943}
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5919, file: !493, line: 40, baseType: !5922, size: 32)
!5922 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !493, line: 26, baseType: !7, size: 32, elements: !5923)
!5923 = !{!5924, !5925, !5926}
!5924 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!5925 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!5926 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !5919, file: !493, line: 41, baseType: !5928, size: 64, offset: 64)
!5928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5929, size: 64)
!5929 = !DISubroutineType(types: !5930)
!5930 = !{!817}
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !5919, file: !493, line: 42, baseType: !5932, size: 64, offset: 128)
!5932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5933, size: 64)
!5933 = !DISubroutineType(types: !5934)
!5934 = !{!637}
!5935 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !5919, file: !493, line: 43, baseType: !5936, size: 64, offset: 192)
!5936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5937, size: 64)
!5937 = !DISubroutineType(types: !5938)
!5938 = !{!3303, !491}
!5939 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !5919, file: !493, line: 44, baseType: !5940, size: 64, offset: 256)
!5940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5941, size: 64)
!5941 = !DISubroutineType(types: !5942)
!5942 = !{!3303}
!5943 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !5919, file: !493, line: 45, baseType: !1461, size: 64, offset: 320)
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !5853, file: !5805, line: 144, baseType: !5945, size: 64, offset: 320)
!5945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5946, size: 64)
!5946 = !DISubroutineType(types: !5947)
!5947 = !{!3303, !5810}
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !5853, file: !5805, line: 145, baseType: !5949, size: 64, offset: 384)
!5949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5950, size: 64)
!5950 = !DISubroutineType(types: !5951)
!5951 = !{null, !5810, !2950, !2951}
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !5804, file: !5805, line: 70, baseType: !5953, size: 64, offset: 384)
!5953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5954, size: 64)
!5954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !1611, line: 123, size: 1024, elements: !5955)
!5955 = !{!5956, !5957, !5958, !5959, !5960, !5961, !5962, !5963, !6066, !6067, !6068, !6069, !6070}
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5954, file: !1611, line: 124, baseType: !429, size: 32)
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !5954, file: !1611, line: 125, baseType: !429, size: 32, offset: 32)
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5954, file: !1611, line: 135, baseType: !5953, size: 64, offset: 64)
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5954, file: !1611, line: 136, baseType: !338, size: 64, offset: 128)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !5954, file: !1611, line: 138, baseType: !479, size: 192, align: 64, offset: 192)
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !5954, file: !1611, line: 140, baseType: !3303, size: 64, offset: 384)
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !5954, file: !1611, line: 141, baseType: !7, size: 32, offset: 448)
!5963 = !DIDerivedType(tag: DW_TAG_member, scope: !5954, file: !1611, line: 142, baseType: !5964, size: 256, offset: 512)
!5964 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5954, file: !1611, line: 142, size: 256, elements: !5965)
!5965 = !{!5966, !6006, !6010}
!5966 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !5964, file: !1611, line: 143, baseType: !5967, size: 192)
!5967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !1611, line: 91, size: 192, elements: !5968)
!5968 = !{!5969, !5970, !5971}
!5969 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !5967, file: !1611, line: 92, baseType: !358, size: 64)
!5970 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5967, file: !1611, line: 94, baseType: !1796, size: 64, offset: 64)
!5971 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !5967, file: !1611, line: 100, baseType: !5972, size: 64, offset: 128)
!5972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5973, size: 64)
!5973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !1611, line: 180, size: 704, elements: !5974)
!5974 = !{!5975, !5976, !5977, !5978, !5979, !5980, !6004, !6005}
!5975 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !5973, file: !1611, line: 182, baseType: !5953, size: 64)
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5973, file: !1611, line: 183, baseType: !7, size: 32, offset: 64)
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !5973, file: !1611, line: 186, baseType: !3047, size: 192, offset: 128)
!5978 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !5973, file: !1611, line: 187, baseType: !1033, size: 32, offset: 320)
!5979 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !5973, file: !1611, line: 188, baseType: !1033, size: 32, offset: 352)
!5980 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !5973, file: !1611, line: 189, baseType: !5981, size: 64, offset: 384)
!5981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5982, size: 64)
!5982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !1611, line: 168, size: 320, elements: !5983)
!5983 = !{!5984, !5988, !5992, !5996, !6000}
!5984 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !5982, file: !1611, line: 169, baseType: !5985, size: 64)
!5985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5986, size: 64)
!5986 = !DISubroutineType(types: !5987)
!5987 = !{!78, !1699, !5972}
!5988 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !5982, file: !1611, line: 171, baseType: !5989, size: 64, offset: 64)
!5989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5990, size: 64)
!5990 = !DISubroutineType(types: !5991)
!5991 = !{!78, !5953, !338, !1425}
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !5982, file: !1611, line: 173, baseType: !5993, size: 64, offset: 128)
!5993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5994, size: 64)
!5994 = !DISubroutineType(types: !5995)
!5995 = !{!78, !5953}
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !5982, file: !1611, line: 174, baseType: !5997, size: 64, offset: 192)
!5997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5998, size: 64)
!5998 = !DISubroutineType(types: !5999)
!5999 = !{!78, !5953, !5953, !338}
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !5982, file: !1611, line: 176, baseType: !6001, size: 64, offset: 256)
!6001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6002, size: 64)
!6002 = !DISubroutineType(types: !6003)
!6003 = !{!78, !1699, !5953, !5972}
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !5973, file: !1611, line: 192, baseType: !330, size: 128, offset: 448)
!6005 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !5973, file: !1611, line: 194, baseType: !1935, size: 128, offset: 576)
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !5964, file: !1611, line: 144, baseType: !6007, size: 64)
!6007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !1611, line: 103, size: 64, elements: !6008)
!6008 = !{!6009}
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !6007, file: !1611, line: 104, baseType: !5953, size: 64)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5964, file: !1611, line: 145, baseType: !6011, size: 256)
!6011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !1611, line: 107, size: 256, elements: !6012)
!6012 = !{!6013, !6061, !6064, !6065}
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6011, file: !1611, line: 108, baseType: !6014, size: 64)
!6014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6015, size: 64)
!6015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6016)
!6016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !1611, line: 217, size: 768, elements: !6017)
!6017 = !{!6018, !6038, !6042, !6043, !6044, !6045, !6046, !6050, !6051, !6052, !6053, !6057}
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !6016, file: !1611, line: 222, baseType: !6019, size: 64)
!6019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6020, size: 64)
!6020 = !DISubroutineType(types: !6021)
!6021 = !{!78, !6022}
!6022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6023, size: 64)
!6023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !1611, line: 197, size: 1088, elements: !6024)
!6024 = !{!6025, !6026, !6027, !6028, !6029, !6030, !6031, !6032, !6033, !6034, !6035, !6036, !6037}
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !6023, file: !1611, line: 199, baseType: !5953, size: 64)
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !6023, file: !1611, line: 200, baseType: !1361, size: 64, offset: 64)
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !6023, file: !1611, line: 201, baseType: !1699, size: 64, offset: 128)
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !6023, file: !1611, line: 202, baseType: !637, size: 64, offset: 192)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !6023, file: !1611, line: 205, baseType: !1711, size: 192, offset: 256)
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !6023, file: !1611, line: 206, baseType: !1711, size: 192, offset: 448)
!6031 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !6023, file: !1611, line: 207, baseType: !78, size: 32, offset: 640)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6023, file: !1611, line: 208, baseType: !330, size: 128, offset: 704)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !6023, file: !1611, line: 209, baseType: !1084, size: 64, offset: 832)
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !6023, file: !1611, line: 211, baseType: !1085, size: 64, offset: 896)
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !6023, file: !1611, line: 212, baseType: !817, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !6023, file: !1611, line: 213, baseType: !817, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !6023, file: !1611, line: 214, baseType: !2172, size: 64, offset: 1024)
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6016, file: !1611, line: 223, baseType: !6039, size: 64, offset: 64)
!6039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6040, size: 64)
!6040 = !DISubroutineType(types: !6041)
!6041 = !{null, !6022}
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !6016, file: !1611, line: 236, baseType: !1750, size: 64, offset: 128)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !6016, file: !1611, line: 238, baseType: !1737, size: 64, offset: 192)
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !6016, file: !1611, line: 239, baseType: !1746, size: 64, offset: 256)
!6045 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !6016, file: !1611, line: 240, baseType: !1742, size: 64, offset: 320)
!6046 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !6016, file: !1611, line: 242, baseType: !6047, size: 64, offset: 384)
!6047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6048, size: 64)
!6048 = !DISubroutineType(types: !6049)
!6049 = !{!1567, !6022, !1084, !1085, !1522}
!6050 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !6016, file: !1611, line: 252, baseType: !1085, size: 64, offset: 448)
!6051 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !6016, file: !1611, line: 259, baseType: !817, size: 8, offset: 512)
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !6016, file: !1611, line: 260, baseType: !6047, size: 64, offset: 576)
!6053 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !6016, file: !1611, line: 263, baseType: !6054, size: 64, offset: 640)
!6054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6055, size: 64)
!6055 = !DISubroutineType(types: !6056)
!6056 = !{!4873, !6022, !4874}
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !6016, file: !1611, line: 266, baseType: !6058, size: 64, offset: 704)
!6058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6059, size: 64)
!6059 = !DISubroutineType(types: !6060)
!6060 = !{!78, !6022, !2144}
!6061 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !6011, file: !1611, line: 109, baseType: !6062, size: 64, offset: 64)
!6062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6063, size: 64)
!6063 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !1611, line: 31, flags: DIFlagFwdDecl)
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6011, file: !1611, line: 110, baseType: !1522, size: 64, offset: 128)
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !6011, file: !1611, line: 111, baseType: !5953, size: 64, offset: 192)
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !5954, file: !1611, line: 148, baseType: !637, size: 64, offset: 768)
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5954, file: !1611, line: 154, baseType: !377, size: 64, offset: 832)
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5954, file: !1611, line: 156, baseType: !522, size: 16, offset: 896)
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5954, file: !1611, line: 157, baseType: !1425, size: 16, offset: 912)
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !5954, file: !1611, line: 158, baseType: !6071, size: 64, offset: 960)
!6071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6072, size: 64)
!6072 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !1611, line: 32, flags: DIFlagFwdDecl)
!6073 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !5804, file: !5805, line: 71, baseType: !6074, size: 32, offset: 448)
!6074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !6075, line: 19, size: 32, elements: !6076)
!6075 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!6076 = !{!6077}
!6077 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !6074, file: !6075, line: 20, baseType: !614, size: 32)
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !5804, file: !5805, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !5804, file: !5805, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !5804, file: !5805, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !5804, file: !5805, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !5804, file: !5805, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5800, file: !5801, line: 463, baseType: !5799, size: 64, offset: 512)
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5800, file: !5801, line: 465, baseType: !6085, size: 64, offset: 576)
!6085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6086, size: 64)
!6086 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !5801, line: 36, flags: DIFlagFwdDecl)
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !5800, file: !5801, line: 467, baseType: !338, size: 64, offset: 640)
!6088 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5800, file: !5801, line: 468, baseType: !6089, size: 64, offset: 704)
!6089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6090, size: 64)
!6090 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6091)
!6091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !5801, line: 87, size: 384, elements: !6092)
!6092 = !{!6093, !6094, !6095, !6099, !6104, !6108}
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6091, file: !5801, line: 88, baseType: !338, size: 64)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !6091, file: !5801, line: 89, baseType: !5881, size: 64, offset: 64)
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !6091, file: !5801, line: 90, baseType: !6096, size: 64, offset: 128)
!6096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6097, size: 64)
!6097 = !DISubroutineType(types: !6098)
!6098 = !{!78, !5799, !5838}
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !6091, file: !5801, line: 91, baseType: !6100, size: 64, offset: 192)
!6100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6101, size: 64)
!6101 = !DISubroutineType(types: !6102)
!6102 = !{!1084, !5799, !6103, !2950, !2951}
!6103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64)
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6091, file: !5801, line: 93, baseType: !6105, size: 64, offset: 256)
!6105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6106, size: 64)
!6106 = !DISubroutineType(types: !6107)
!6107 = !{null, !5799}
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6091, file: !5801, line: 95, baseType: !6109, size: 64, offset: 320)
!6109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6110, size: 64)
!6110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6111)
!6111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !6112, line: 278, size: 1472, elements: !6113)
!6112 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!6113 = !{!6114, !6118, !6119, !6120, !6121, !6122, !6123, !6124, !6125, !6126, !6127, !6128, !6129, !6130, !6131, !6132, !6133, !6134, !6135, !6136, !6137, !6138, !6139}
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !6111, file: !6112, line: 279, baseType: !6115, size: 64)
!6115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6116, size: 64)
!6116 = !DISubroutineType(types: !6117)
!6117 = !{!78, !5799}
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !6111, file: !6112, line: 280, baseType: !6105, size: 64, offset: 64)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6111, file: !6112, line: 281, baseType: !6115, size: 64, offset: 128)
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6111, file: !6112, line: 282, baseType: !6115, size: 64, offset: 192)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !6111, file: !6112, line: 283, baseType: !6115, size: 64, offset: 256)
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !6111, file: !6112, line: 284, baseType: !6115, size: 64, offset: 320)
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !6111, file: !6112, line: 285, baseType: !6115, size: 64, offset: 384)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !6111, file: !6112, line: 286, baseType: !6115, size: 64, offset: 448)
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !6111, file: !6112, line: 287, baseType: !6115, size: 64, offset: 512)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !6111, file: !6112, line: 288, baseType: !6115, size: 64, offset: 576)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !6111, file: !6112, line: 289, baseType: !6115, size: 64, offset: 640)
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !6111, file: !6112, line: 290, baseType: !6115, size: 64, offset: 704)
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !6111, file: !6112, line: 291, baseType: !6115, size: 64, offset: 768)
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !6111, file: !6112, line: 292, baseType: !6115, size: 64, offset: 832)
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !6111, file: !6112, line: 293, baseType: !6115, size: 64, offset: 896)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !6111, file: !6112, line: 294, baseType: !6115, size: 64, offset: 960)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !6111, file: !6112, line: 295, baseType: !6115, size: 64, offset: 1024)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !6111, file: !6112, line: 296, baseType: !6115, size: 64, offset: 1088)
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !6111, file: !6112, line: 297, baseType: !6115, size: 64, offset: 1152)
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !6111, file: !6112, line: 298, baseType: !6115, size: 64, offset: 1216)
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !6111, file: !6112, line: 299, baseType: !6115, size: 64, offset: 1280)
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !6111, file: !6112, line: 300, baseType: !6115, size: 64, offset: 1344)
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !6111, file: !6112, line: 301, baseType: !6115, size: 64, offset: 1408)
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !5800, file: !5801, line: 470, baseType: !6141, size: 64, offset: 768)
!6141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6142, size: 64)
!6142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !6143, line: 82, size: 1408, elements: !6144)
!6143 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!6144 = !{!6145, !6146, !6147, !6148, !6149, !6150, !6151, !6198, !6199, !6200, !6201, !6202, !6203, !6204, !6205, !6206, !6207, !6208, !6209, !6210, !6214, !6217, !6218}
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6142, file: !6143, line: 83, baseType: !338, size: 64)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !6142, file: !6143, line: 84, baseType: !338, size: 64, offset: 64)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !6142, file: !6143, line: 85, baseType: !5799, size: 64, offset: 128)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !6142, file: !6143, line: 86, baseType: !5881, size: 64, offset: 192)
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !6142, file: !6143, line: 87, baseType: !5881, size: 64, offset: 256)
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !6142, file: !6143, line: 88, baseType: !5881, size: 64, offset: 320)
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !6142, file: !6143, line: 90, baseType: !6152, size: 64, offset: 384)
!6152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6153, size: 64)
!6153 = !DISubroutineType(types: !6154)
!6154 = !{!78, !5799, !6155}
!6155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6156, size: 64)
!6156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !6157, line: 95, size: 1152, elements: !6158)
!6157 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!6158 = !{!6159, !6160, !6161, !6162, !6163, !6164, !6170, !6174, !6178, !6179, !6180, !6181, !6182, !6190, !6191, !6192, !6193, !6194, !6195}
!6159 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6156, file: !6157, line: 96, baseType: !338, size: 64)
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !6156, file: !6157, line: 97, baseType: !6141, size: 64, offset: 64)
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6156, file: !6157, line: 99, baseType: !1026, size: 64, offset: 128)
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !6156, file: !6157, line: 100, baseType: !338, size: 64, offset: 192)
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !6156, file: !6157, line: 102, baseType: !817, size: 8, offset: 256)
!6164 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !6156, file: !6157, line: 103, baseType: !6165, size: 32, offset: 288)
!6165 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !6157, line: 44, baseType: !7, size: 32, elements: !6166)
!6166 = !{!6167, !6168, !6169}
!6167 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!6168 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!6169 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !6156, file: !6157, line: 105, baseType: !6171, size: 64, offset: 320)
!6171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6172, size: 64)
!6172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6173)
!6173 = !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !6157, line: 105, flags: DIFlagFwdDecl)
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !6156, file: !6157, line: 106, baseType: !6175, size: 64, offset: 384)
!6175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6176, size: 64)
!6176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6177)
!6177 = !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !6157, line: 106, flags: DIFlagFwdDecl)
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !6156, file: !6157, line: 108, baseType: !6115, size: 64, offset: 448)
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !6156, file: !6157, line: 109, baseType: !6105, size: 64, offset: 512)
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !6156, file: !6157, line: 110, baseType: !6115, size: 64, offset: 576)
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !6156, file: !6157, line: 111, baseType: !6105, size: 64, offset: 640)
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6156, file: !6157, line: 112, baseType: !6183, size: 64, offset: 704)
!6183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6184, size: 64)
!6184 = !DISubroutineType(types: !6185)
!6185 = !{!78, !5799, !6186}
!6186 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !6112, line: 52, baseType: !6187)
!6187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !6112, line: 50, size: 32, elements: !6188)
!6188 = !{!6189}
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !6187, file: !6112, line: 51, baseType: !78, size: 32)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6156, file: !6157, line: 113, baseType: !6115, size: 64, offset: 768)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !6156, file: !6157, line: 114, baseType: !5881, size: 64, offset: 832)
!6192 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !6156, file: !6157, line: 115, baseType: !5881, size: 64, offset: 896)
!6193 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6156, file: !6157, line: 117, baseType: !6109, size: 64, offset: 960)
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !6156, file: !6157, line: 118, baseType: !6105, size: 64, offset: 1024)
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6156, file: !6157, line: 120, baseType: !6196, size: 64, offset: 1088)
!6196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6197, size: 64)
!6197 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !6157, line: 120, flags: DIFlagFwdDecl)
!6198 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !6142, file: !6143, line: 91, baseType: !6096, size: 64, offset: 448)
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !6142, file: !6143, line: 92, baseType: !6115, size: 64, offset: 512)
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !6142, file: !6143, line: 93, baseType: !6105, size: 64, offset: 576)
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !6142, file: !6143, line: 94, baseType: !6115, size: 64, offset: 640)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !6142, file: !6143, line: 95, baseType: !6105, size: 64, offset: 704)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !6142, file: !6143, line: 97, baseType: !6115, size: 64, offset: 768)
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !6142, file: !6143, line: 98, baseType: !6115, size: 64, offset: 832)
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6142, file: !6143, line: 100, baseType: !6183, size: 64, offset: 896)
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6142, file: !6143, line: 101, baseType: !6115, size: 64, offset: 960)
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !6142, file: !6143, line: 103, baseType: !6115, size: 64, offset: 1024)
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !6142, file: !6143, line: 105, baseType: !6115, size: 64, offset: 1088)
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6142, file: !6143, line: 107, baseType: !6109, size: 64, offset: 1152)
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !6142, file: !6143, line: 109, baseType: !6211, size: 64, offset: 1216)
!6211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6212, size: 64)
!6212 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6213)
!6213 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !6143, line: 109, flags: DIFlagFwdDecl)
!6214 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6142, file: !6143, line: 111, baseType: !6215, size: 64, offset: 1280)
!6215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6216, size: 64)
!6216 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !6143, line: 111, flags: DIFlagFwdDecl)
!6217 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !6142, file: !6143, line: 112, baseType: !1631, offset: 1344)
!6218 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !6142, file: !6143, line: 114, baseType: !817, size: 8, offset: 1344)
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !5800, file: !5801, line: 471, baseType: !6155, size: 64, offset: 832)
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !5800, file: !5801, line: 473, baseType: !637, size: 64, offset: 896)
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !5800, file: !5801, line: 475, baseType: !637, size: 64, offset: 960)
!6222 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !5800, file: !5801, line: 480, baseType: !1711, size: 192, offset: 1024)
!6223 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !5800, file: !5801, line: 484, baseType: !6224, size: 576, offset: 1216)
!6224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !5801, line: 361, size: 576, elements: !6225)
!6225 = !{!6226, !6227, !6228, !6229, !6230, !6231}
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !6224, file: !5801, line: 362, baseType: !330, size: 128)
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !6224, file: !5801, line: 363, baseType: !330, size: 128, offset: 128)
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !6224, file: !5801, line: 364, baseType: !330, size: 128, offset: 256)
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !6224, file: !5801, line: 365, baseType: !330, size: 128, offset: 384)
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !6224, file: !5801, line: 366, baseType: !817, size: 8, offset: 512)
!6231 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !6224, file: !5801, line: 367, baseType: !6232, size: 32, offset: 544)
!6232 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !5801, line: 343, baseType: !7, size: 32, elements: !6233)
!6233 = !{!6234, !6235, !6236, !6237}
!6234 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!6235 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!6236 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!6237 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !5800, file: !5801, line: 485, baseType: !6239, size: 2304, offset: 1792)
!6239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !6112, line: 565, size: 2304, elements: !6240)
!6240 = !{!6241, !6242, !6243, !6244, !6245, !6246, !6247, !6248, !6249, !6250, !6251, !6252, !6253, !6254, !6255, !6256, !6283, !6284, !6285, !6286, !6287, !6288, !6289, !6290, !6291, !6292, !6293, !6294, !6295, !6296, !6297, !6298, !6299, !6300, !6301, !6302, !6303, !6304, !6305, !6306, !6307, !6315, !6322, !6323, !6324, !6325, !6326, !6327, !6328, !6338, !6342}
!6241 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !6239, file: !6112, line: 566, baseType: !6186, size: 32)
!6242 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !6239, file: !6112, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!6243 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !6239, file: !6112, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !6239, file: !6112, line: 569, baseType: !817, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !6239, file: !6112, line: 570, baseType: !817, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !6239, file: !6112, line: 571, baseType: !817, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !6239, file: !6112, line: 572, baseType: !817, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!6248 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !6239, file: !6112, line: 573, baseType: !817, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !6239, file: !6112, line: 574, baseType: !817, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !6239, file: !6112, line: 575, baseType: !817, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !6239, file: !6112, line: 576, baseType: !817, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !6239, file: !6112, line: 577, baseType: !1033, size: 32, offset: 64)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6239, file: !6112, line: 578, baseType: !1716, offset: 96)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6239, file: !6112, line: 580, baseType: !330, size: 128, offset: 128)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !6239, file: !6112, line: 581, baseType: !2643, size: 192, offset: 256)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !6239, file: !6112, line: 582, baseType: !6257, size: 64, offset: 448)
!6257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6258, size: 64)
!6258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !6259, line: 43, size: 1472, elements: !6260)
!6259 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!6260 = !{!6261, !6262, !6263, !6264, !6265, !6268, !6269, !6270, !6271, !6272, !6273, !6274, !6275, !6276, !6277, !6278, !6279, !6280, !6281, !6282}
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6258, file: !6259, line: 44, baseType: !338, size: 64)
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6258, file: !6259, line: 45, baseType: !78, size: 32, offset: 64)
!6263 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6258, file: !6259, line: 46, baseType: !330, size: 128, offset: 128)
!6264 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6258, file: !6259, line: 47, baseType: !1716, offset: 256)
!6265 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !6258, file: !6259, line: 48, baseType: !6266, size: 64, offset: 256)
!6266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6267, size: 64)
!6267 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !6112, line: 533, flags: DIFlagFwdDecl)
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !6258, file: !6259, line: 49, baseType: !3280, size: 320, offset: 320)
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !6258, file: !6259, line: 50, baseType: !358, size: 64, offset: 640)
!6270 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !6258, file: !6259, line: 51, baseType: !499, size: 64, offset: 704)
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !6258, file: !6259, line: 52, baseType: !499, size: 64, offset: 768)
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !6258, file: !6259, line: 53, baseType: !499, size: 64, offset: 832)
!6273 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !6258, file: !6259, line: 54, baseType: !499, size: 64, offset: 896)
!6274 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !6258, file: !6259, line: 55, baseType: !499, size: 64, offset: 960)
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !6258, file: !6259, line: 56, baseType: !358, size: 64, offset: 1024)
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !6258, file: !6259, line: 57, baseType: !358, size: 64, offset: 1088)
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !6258, file: !6259, line: 58, baseType: !358, size: 64, offset: 1152)
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !6258, file: !6259, line: 59, baseType: !358, size: 64, offset: 1216)
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !6258, file: !6259, line: 60, baseType: !358, size: 64, offset: 1280)
!6280 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6258, file: !6259, line: 61, baseType: !5799, size: 64, offset: 1344)
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !6258, file: !6259, line: 62, baseType: !817, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !6258, file: !6259, line: 63, baseType: !817, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !6239, file: !6112, line: 583, baseType: !817, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !6239, file: !6112, line: 584, baseType: !817, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!6285 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !6239, file: !6112, line: 585, baseType: !817, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !6239, file: !6112, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !6239, file: !6112, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !6239, file: !6112, line: 592, baseType: !2443, size: 512, offset: 576)
!6289 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !6239, file: !6112, line: 593, baseType: !377, size: 64, offset: 1088)
!6290 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !6239, file: !6112, line: 594, baseType: !2875, size: 256, offset: 1152)
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !6239, file: !6112, line: 595, baseType: !1935, size: 128, offset: 1408)
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !6239, file: !6112, line: 596, baseType: !6266, size: 64, offset: 1536)
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !6239, file: !6112, line: 597, baseType: !429, size: 32, offset: 1600)
!6294 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !6239, file: !6112, line: 598, baseType: !429, size: 32, offset: 1632)
!6295 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !6239, file: !6112, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!6296 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !6239, file: !6112, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!6297 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !6239, file: !6112, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!6298 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !6239, file: !6112, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!6299 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !6239, file: !6112, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!6300 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !6239, file: !6112, line: 604, baseType: !817, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!6301 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !6239, file: !6112, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !6239, file: !6112, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !6239, file: !6112, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !6239, file: !6112, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !6239, file: !6112, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !6239, file: !6112, line: 610, baseType: !7, size: 32, offset: 1696)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !6239, file: !6112, line: 611, baseType: !6308, size: 32, offset: 1728)
!6308 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !6112, line: 524, baseType: !7, size: 32, elements: !6309)
!6309 = !{!6310, !6311, !6312, !6313, !6314}
!6310 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!6311 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!6312 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!6313 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!6314 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!6315 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !6239, file: !6112, line: 612, baseType: !6316, size: 32, offset: 1760)
!6316 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !6112, line: 502, baseType: !7, size: 32, elements: !6317)
!6317 = !{!6318, !6319, !6320, !6321}
!6318 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!6319 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!6320 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!6321 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!6322 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !6239, file: !6112, line: 613, baseType: !78, size: 32, offset: 1792)
!6323 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !6239, file: !6112, line: 614, baseType: !78, size: 32, offset: 1824)
!6324 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !6239, file: !6112, line: 615, baseType: !377, size: 64, offset: 1856)
!6325 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !6239, file: !6112, line: 616, baseType: !377, size: 64, offset: 1920)
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !6239, file: !6112, line: 617, baseType: !377, size: 64, offset: 1984)
!6327 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !6239, file: !6112, line: 618, baseType: !377, size: 64, offset: 2048)
!6328 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !6239, file: !6112, line: 620, baseType: !6329, size: 64, offset: 2112)
!6329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6330, size: 64)
!6330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !6112, line: 536, size: 256, elements: !6331)
!6331 = !{!6332, !6333, !6334, !6335}
!6332 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6330, file: !6112, line: 537, baseType: !1716)
!6333 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !6330, file: !6112, line: 538, baseType: !7, size: 32)
!6334 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !6330, file: !6112, line: 540, baseType: !330, size: 128, offset: 64)
!6335 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !6330, file: !6112, line: 543, baseType: !6336, size: 64, offset: 192)
!6336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6337, size: 64)
!6337 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !6112, line: 534, flags: DIFlagFwdDecl)
!6338 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !6239, file: !6112, line: 621, baseType: !6339, size: 64, offset: 2176)
!6339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6340, size: 64)
!6340 = !DISubroutineType(types: !6341)
!6341 = !{null, !5799, !2591}
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !6239, file: !6112, line: 622, baseType: !6343, size: 64, offset: 2240)
!6343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6344, size: 64)
!6344 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !6112, line: 622, flags: DIFlagFwdDecl)
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !5800, file: !5801, line: 486, baseType: !6346, size: 64, offset: 4096)
!6346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6347, size: 64)
!6347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !6112, line: 642, size: 1792, elements: !6348)
!6348 = !{!6349, !6350, !6351, !6355, !6356, !6357}
!6349 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6347, file: !6112, line: 643, baseType: !6111, size: 1472)
!6350 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6347, file: !6112, line: 644, baseType: !6115, size: 64, offset: 1472)
!6351 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !6347, file: !6112, line: 645, baseType: !6352, size: 64, offset: 1536)
!6352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6353, size: 64)
!6353 = !DISubroutineType(types: !6354)
!6354 = !{null, !5799, !817}
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !6347, file: !6112, line: 646, baseType: !6115, size: 64, offset: 1600)
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !6347, file: !6112, line: 647, baseType: !6105, size: 64, offset: 1664)
!6357 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !6347, file: !6112, line: 648, baseType: !6105, size: 64, offset: 1728)
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !5800, file: !5801, line: 493, baseType: !6359, size: 64, offset: 4160)
!6359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6360, size: 64)
!6360 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !5801, line: 493, flags: DIFlagFwdDecl)
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !5800, file: !5801, line: 499, baseType: !330, size: 128, offset: 4224)
!6362 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !5800, file: !5801, line: 502, baseType: !6363, size: 64, offset: 4352)
!6363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6364, size: 64)
!6364 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6365)
!6365 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !5801, line: 502, flags: DIFlagFwdDecl)
!6366 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !5800, file: !5801, line: 504, baseType: !5417, size: 64, offset: 4416)
!6367 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !5800, file: !5801, line: 505, baseType: !377, size: 64, offset: 4480)
!6368 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !5800, file: !5801, line: 510, baseType: !377, size: 64, offset: 4544)
!6369 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !5800, file: !5801, line: 511, baseType: !6370, size: 64, offset: 4608)
!6370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6371, size: 64)
!6371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6372)
!6372 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !5801, line: 511, flags: DIFlagFwdDecl)
!6373 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !5800, file: !5801, line: 513, baseType: !6374, size: 64, offset: 4672)
!6374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6375, size: 64)
!6375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !5801, line: 288, size: 128, elements: !6376)
!6376 = !{!6377, !6378}
!6377 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !6375, file: !5801, line: 293, baseType: !7, size: 32)
!6378 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !6375, file: !5801, line: 294, baseType: !358, size: 64, offset: 64)
!6379 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !5800, file: !5801, line: 515, baseType: !330, size: 128, offset: 4736)
!6380 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !5800, file: !5801, line: 526, baseType: !6381, offset: 4864)
!6381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !6382, line: 5, elements: !1633)
!6382 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!6383 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !5800, file: !5801, line: 528, baseType: !6384, size: 64, offset: 4864)
!6384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6385, size: 64)
!6385 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !6386, line: 14, flags: DIFlagFwdDecl)
!6386 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!6387 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !5800, file: !5801, line: 529, baseType: !6388, size: 64, offset: 4928)
!6388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6389, size: 64)
!6389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !6390, line: 17, size: 192, elements: !6391)
!6390 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!6391 = !{!6392, !6393, !6476}
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !6389, file: !6390, line: 18, baseType: !6388, size: 64)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6389, file: !6390, line: 19, baseType: !6394, size: 64, offset: 64)
!6394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6395, size: 64)
!6395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6396)
!6396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !6390, line: 110, size: 1152, elements: !6397)
!6397 = !{!6398, !6402, !6406, !6412, !6418, !6422, !6426, !6431, !6435, !6436, !6440, !6444, !6448, !6459, !6460, !6461, !6462, !6472}
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !6396, file: !6390, line: 111, baseType: !6399, size: 64)
!6399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6400, size: 64)
!6400 = !DISubroutineType(types: !6401)
!6401 = !{!6388, !6388}
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !6396, file: !6390, line: 112, baseType: !6403, size: 64, offset: 64)
!6403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6404, size: 64)
!6404 = !DISubroutineType(types: !6405)
!6405 = !{null, !6388}
!6406 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !6396, file: !6390, line: 113, baseType: !6407, size: 64, offset: 128)
!6407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6408, size: 64)
!6408 = !DISubroutineType(types: !6409)
!6409 = !{!817, !6410}
!6410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6411, size: 64)
!6411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6389)
!6412 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !6396, file: !6390, line: 114, baseType: !6413, size: 64, offset: 192)
!6413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6414, size: 64)
!6414 = !DISubroutineType(types: !6415)
!6415 = !{!3303, !6410, !6416}
!6416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6417, size: 64)
!6417 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5800)
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !6396, file: !6390, line: 116, baseType: !6419, size: 64, offset: 256)
!6419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6420, size: 64)
!6420 = !DISubroutineType(types: !6421)
!6421 = !{!817, !6410, !338}
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !6396, file: !6390, line: 118, baseType: !6423, size: 64, offset: 320)
!6423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6424, size: 64)
!6424 = !DISubroutineType(types: !6425)
!6425 = !{!78, !6410, !338, !7, !637, !1085}
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !6396, file: !6390, line: 123, baseType: !6427, size: 64, offset: 384)
!6427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6428, size: 64)
!6428 = !DISubroutineType(types: !6429)
!6429 = !{!78, !6410, !338, !6430, !1085}
!6430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 64)
!6431 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !6396, file: !6390, line: 126, baseType: !6432, size: 64, offset: 448)
!6432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6433, size: 64)
!6433 = !DISubroutineType(types: !6434)
!6434 = !{!338, !6410}
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !6396, file: !6390, line: 127, baseType: !6432, size: 64, offset: 512)
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !6396, file: !6390, line: 128, baseType: !6437, size: 64, offset: 576)
!6437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6438, size: 64)
!6438 = !DISubroutineType(types: !6439)
!6439 = !{!6388, !6410}
!6440 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !6396, file: !6390, line: 130, baseType: !6441, size: 64, offset: 640)
!6441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6442, size: 64)
!6442 = !DISubroutineType(types: !6443)
!6443 = !{!6388, !6410, !6388}
!6444 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !6396, file: !6390, line: 133, baseType: !6445, size: 64, offset: 704)
!6445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6446, size: 64)
!6446 = !DISubroutineType(types: !6447)
!6447 = !{!6388, !6410, !338}
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !6396, file: !6390, line: 135, baseType: !6449, size: 64, offset: 768)
!6449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6450, size: 64)
!6450 = !DISubroutineType(types: !6451)
!6451 = !{!78, !6410, !338, !338, !7, !7, !6452}
!6452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6453, size: 64)
!6453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !6390, line: 43, size: 640, elements: !6454)
!6454 = !{!6455, !6456, !6457}
!6455 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !6453, file: !6390, line: 44, baseType: !6388, size: 64)
!6456 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !6453, file: !6390, line: 45, baseType: !7, size: 32, offset: 64)
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !6453, file: !6390, line: 46, baseType: !6458, size: 512, offset: 128)
!6458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !377, size: 512, elements: !2479)
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !6396, file: !6390, line: 140, baseType: !6441, size: 64, offset: 832)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !6396, file: !6390, line: 143, baseType: !6437, size: 64, offset: 896)
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !6396, file: !6390, line: 145, baseType: !6399, size: 64, offset: 960)
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !6396, file: !6390, line: 146, baseType: !6463, size: 64, offset: 1024)
!6463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6464, size: 64)
!6464 = !DISubroutineType(types: !6465)
!6465 = !{!78, !6410, !6466}
!6466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6467, size: 64)
!6467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !6390, line: 29, size: 128, elements: !6468)
!6468 = !{!6469, !6470, !6471}
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !6467, file: !6390, line: 30, baseType: !7, size: 32)
!6470 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6467, file: !6390, line: 31, baseType: !7, size: 32, offset: 32)
!6471 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !6467, file: !6390, line: 32, baseType: !6410, size: 64, offset: 64)
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !6396, file: !6390, line: 148, baseType: !6473, size: 64, offset: 1088)
!6473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6474, size: 64)
!6474 = !DISubroutineType(types: !6475)
!6475 = !{!78, !6410, !5799}
!6476 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6389, file: !6390, line: 20, baseType: !5799, size: 64, offset: 128)
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !5800, file: !5801, line: 534, baseType: !1504, size: 32, offset: 4992)
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5800, file: !5801, line: 535, baseType: !1033, size: 32, offset: 5024)
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !5800, file: !5801, line: 537, baseType: !1716, offset: 5056)
!6480 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !5800, file: !5801, line: 538, baseType: !330, size: 128, offset: 5056)
!6481 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !5800, file: !5801, line: 540, baseType: !6482, size: 64, offset: 5184)
!6482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6483, size: 64)
!6483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !6484, line: 54, size: 960, elements: !6485)
!6484 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!6485 = !{!6486, !6487, !6488, !6489, !6490, !6491, !6492, !6496, !6500, !6501, !6502, !6503, !6507, !6511, !6512}
!6486 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6483, file: !6484, line: 55, baseType: !338, size: 64)
!6487 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6483, file: !6484, line: 56, baseType: !1026, size: 64, offset: 64)
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !6483, file: !6484, line: 58, baseType: !5881, size: 64, offset: 128)
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !6483, file: !6484, line: 59, baseType: !5881, size: 64, offset: 192)
!6490 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !6483, file: !6484, line: 60, baseType: !5810, size: 64, offset: 256)
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !6483, file: !6484, line: 62, baseType: !6096, size: 64, offset: 320)
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !6483, file: !6484, line: 63, baseType: !6493, size: 64, offset: 384)
!6493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6494, size: 64)
!6494 = !DISubroutineType(types: !6495)
!6495 = !{!1084, !5799, !6103}
!6496 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !6483, file: !6484, line: 65, baseType: !6497, size: 64, offset: 448)
!6497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6498, size: 64)
!6498 = !DISubroutineType(types: !6499)
!6499 = !{null, !6482}
!6500 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !6483, file: !6484, line: 66, baseType: !6105, size: 64, offset: 512)
!6501 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !6483, file: !6484, line: 68, baseType: !6115, size: 64, offset: 576)
!6502 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !6483, file: !6484, line: 70, baseType: !5917, size: 64, offset: 640)
!6503 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !6483, file: !6484, line: 71, baseType: !6504, size: 64, offset: 704)
!6504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6505, size: 64)
!6505 = !DISubroutineType(types: !6506)
!6506 = !{!3303, !5799}
!6507 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !6483, file: !6484, line: 73, baseType: !6508, size: 64, offset: 768)
!6508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6509, size: 64)
!6509 = !DISubroutineType(types: !6510)
!6510 = !{null, !5799, !2950, !2951}
!6511 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6483, file: !6484, line: 75, baseType: !6109, size: 64, offset: 832)
!6512 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6483, file: !6484, line: 77, baseType: !6215, size: 64, offset: 896)
!6513 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !5800, file: !5801, line: 541, baseType: !5881, size: 64, offset: 5248)
!6514 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5800, file: !5801, line: 543, baseType: !6105, size: 64, offset: 5312)
!6515 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !5800, file: !5801, line: 544, baseType: !6516, size: 64, offset: 5376)
!6516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6517, size: 64)
!6517 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !5801, line: 45, flags: DIFlagFwdDecl)
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !5800, file: !5801, line: 545, baseType: !6519, size: 64, offset: 5440)
!6519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6520, size: 64)
!6520 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !5801, line: 47, flags: DIFlagFwdDecl)
!6521 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !5800, file: !5801, line: 547, baseType: !817, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!6522 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !5800, file: !5801, line: 548, baseType: !817, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!6523 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !5800, file: !5801, line: 549, baseType: !817, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!6524 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !5800, file: !5801, line: 550, baseType: !817, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "_net", scope: !5561, file: !5554, line: 51, baseType: !6526, size: 64, offset: 2304)
!6526 = !DIDerivedType(tag: DW_TAG_typedef, name: "possible_net_t", file: !3030, line: 318, baseType: !6527)
!6527 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3030, line: 314, size: 64, elements: !6528)
!6528 = !{!6529}
!6529 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !6527, file: !3030, line: 316, baseType: !3028, size: 64)
!6530 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5561, file: !5554, line: 52, baseType: !1711, size: 192, offset: 2368)
!6531 = !DIDerivedType(tag: DW_TAG_member, name: "reload_failed", scope: !5561, file: !5554, line: 55, baseType: !840, size: 1, offset: 2560, flags: DIFlagBitField, extraData: i64 2560)
!6532 = !DIDerivedType(tag: DW_TAG_member, name: "reload_enabled", scope: !5561, file: !5554, line: 56, baseType: !840, size: 1, offset: 2561, flags: DIFlagBitField, extraData: i64 2560)
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !5561, file: !5554, line: 57, baseType: !840, size: 1, offset: 2562, flags: DIFlagBitField, extraData: i64 2560)
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !5561, file: !5554, line: 58, baseType: !6535, align: 256, offset: 2816)
!6535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, elements: !529)
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !5553, file: !5554, line: 124, baseType: !7, size: 32, offset: 448)
!6537 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !5553, file: !5554, line: 125, baseType: !817, size: 8, offset: 480)
!6538 = !DIDerivedType(tag: DW_TAG_member, name: "type_lock", scope: !5553, file: !5554, line: 126, baseType: !1716, offset: 488)
!6539 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5553, file: !5554, line: 129, baseType: !24, size: 32, offset: 512)
!6540 = !DIDerivedType(tag: DW_TAG_member, name: "desired_type", scope: !5553, file: !5554, line: 130, baseType: !24, size: 32, offset: 544)
!6541 = !DIDerivedType(tag: DW_TAG_member, name: "type_dev", scope: !5553, file: !5554, line: 131, baseType: !637, size: 64, offset: 576)
!6542 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !5553, file: !5554, line: 132, baseType: !6543, size: 480, offset: 640)
!6543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port_attrs", file: !5554, line: 106, size: 480, elements: !6544)
!6544 = !{!6545, !6546, !6547, !6548, !6558, !6559}
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !6543, file: !5554, line: 107, baseType: !840, size: 1, flags: DIFlagBitField, extraData: i64 0)
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "splittable", scope: !6543, file: !5554, line: 108, baseType: !840, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!6547 = !DIDerivedType(tag: DW_TAG_member, name: "lanes", scope: !6543, file: !5554, line: 109, baseType: !1033, size: 32, offset: 32)
!6548 = !DIDerivedType(tag: DW_TAG_member, name: "flavour", scope: !6543, file: !5554, line: 110, baseType: !6549, size: 32, offset: 64)
!6549 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_port_flavour", file: !6, line: 183, baseType: !7, size: 32, elements: !6550)
!6550 = !{!6551, !6552, !6553, !6554, !6555, !6556, !6557}
!6551 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_PHYSICAL", value: 0, isUnsigned: true)
!6552 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_CPU", value: 1, isUnsigned: true)
!6553 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_DSA", value: 2, isUnsigned: true)
!6554 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_PCI_PF", value: 3, isUnsigned: true)
!6555 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_PCI_VF", value: 4, isUnsigned: true)
!6556 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_VIRTUAL", value: 5, isUnsigned: true)
!6557 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_UNUSED", value: 6, isUnsigned: true)
!6558 = !DIDerivedType(tag: DW_TAG_member, name: "switch_id", scope: !6543, file: !5554, line: 111, baseType: !1074, size: 264, offset: 96)
!6559 = !DIDerivedType(tag: DW_TAG_member, scope: !6543, file: !5554, line: 112, baseType: !6560, size: 96, offset: 384)
!6560 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6543, file: !5554, line: 112, size: 96, elements: !6561)
!6561 = !{!6562, !6567, !6573}
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "phys", scope: !6560, file: !5554, line: 113, baseType: !6563, size: 64)
!6563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port_phys_attrs", file: !5554, line: 61, size: 64, elements: !6564)
!6564 = !{!6565, !6566}
!6565 = !DIDerivedType(tag: DW_TAG_member, name: "port_number", scope: !6563, file: !5554, line: 62, baseType: !1033, size: 32)
!6566 = !DIDerivedType(tag: DW_TAG_member, name: "split_subport_number", scope: !6563, file: !5554, line: 66, baseType: !1033, size: 32, offset: 32)
!6567 = !DIDerivedType(tag: DW_TAG_member, name: "pci_pf", scope: !6560, file: !5554, line: 114, baseType: !6568, size: 64)
!6568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port_pci_pf_attrs", file: !5554, line: 75, size: 64, elements: !6569)
!6569 = !{!6570, !6571, !6572}
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "controller", scope: !6568, file: !5554, line: 76, baseType: !1033, size: 32)
!6571 = !DIDerivedType(tag: DW_TAG_member, name: "pf", scope: !6568, file: !5554, line: 77, baseType: !627, size: 16, offset: 32)
!6572 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !6568, file: !5554, line: 78, baseType: !840, size: 1, offset: 48, flags: DIFlagBitField, extraData: i64 48)
!6573 = !DIDerivedType(tag: DW_TAG_member, name: "pci_vf", scope: !6560, file: !5554, line: 115, baseType: !6574, size: 96)
!6574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port_pci_vf_attrs", file: !5554, line: 88, size: 96, elements: !6575)
!6575 = !{!6576, !6577, !6578, !6579}
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "controller", scope: !6574, file: !5554, line: 89, baseType: !1033, size: 32)
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "pf", scope: !6574, file: !5554, line: 90, baseType: !627, size: 16, offset: 32)
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !6574, file: !5554, line: 91, baseType: !627, size: 16, offset: 48)
!6579 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !6574, file: !5554, line: 92, baseType: !840, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "attrs_set", scope: !5553, file: !5554, line: 133, baseType: !840, size: 1, offset: 1120, flags: DIFlagBitField, extraData: i64 1120)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "switch_port", scope: !5553, file: !5554, line: 134, baseType: !840, size: 1, offset: 1121, flags: DIFlagBitField, extraData: i64 1120)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "type_warn_dw", scope: !5553, file: !5554, line: 135, baseType: !6583, size: 704, offset: 1152)
!6583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !2876, line: 115, size: 704, elements: !6584)
!6584 = !{!6585, !6586, !6587, !6588}
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !6583, file: !2876, line: 116, baseType: !2875, size: 256)
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !6583, file: !2876, line: 117, baseType: !3280, size: 320, offset: 256)
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !6583, file: !2876, line: 120, baseType: !4762, size: 64, offset: 576)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !6583, file: !2876, line: 121, baseType: !78, size: 32, offset: 640)
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "reporter_list", scope: !5553, file: !5554, line: 136, baseType: !330, size: 128, offset: 1856)
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "reporters_lock", scope: !5553, file: !5554, line: 137, baseType: !1711, size: 192, offset: 1984)
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tunnel_ctl", scope: !444, file: !77, line: 1487, baseType: !6592, size: 64, offset: 4288)
!6592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6593, size: 64)
!6593 = !DISubroutineType(types: !6594)
!6594 = !{!78, !336, !6595, !78}
!6595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6596, size: 64)
!6596 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_tunnel_parm", file: !77, line: 56, flags: DIFlagFwdDecl)
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_peer_dev", scope: !444, file: !77, line: 1489, baseType: !6598, size: 64, offset: 4352)
!6598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6599, size: 64)
!6599 = !DISubroutineType(types: !6600)
!6600 = !{!336, !336}
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "ethtool_ops", scope: !310, file: !77, line: 1917, baseType: !6602, size: 64, offset: 4032)
!6602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6603, size: 64)
!6603 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6604)
!6604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ops", file: !297, line: 421, size: 3904, elements: !6605)
!6605 = !{!6606, !6607, !6627, !6628, !6639, !6651, !6655, !6659, !6663, !6664, !6665, !6682, !6683, !6695, !6696, !6726, !6727, !6743, !6747, !6756, !6767, !6771, !6784, !6788, !6792, !6802, !6803, !6804, !6805, !6809, !6810, !6912, !6916, !6926, !6930, !6931, !6932, !6936, !6942, !6946, !6950, !6966, !6970, !6982, !6986, !6987, !7002, !7014, !7015, !7031, !7032, !7046, !7050, !7054, !7055, !7094, !7100, !7111, !7112, !7113, !7114}
!6606 = !DIDerivedType(tag: DW_TAG_member, name: "supported_coalesce_params", scope: !6604, file: !297, line: 422, baseType: !1033, size: 32)
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "get_drvinfo", scope: !6604, file: !297, line: 423, baseType: !6608, size: 64, offset: 64)
!6608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6609, size: 64)
!6609 = !DISubroutineType(types: !6610)
!6610 = !{null, !336, !6611}
!6611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6612, size: 64)
!6612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_drvinfo", file: !255, line: 177, size: 1568, elements: !6613)
!6613 = !{!6614, !6615, !6616, !6617, !6618, !6619, !6620, !6622, !6623, !6624, !6625, !6626}
!6614 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6612, file: !255, line: 178, baseType: !539, size: 32)
!6615 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !6612, file: !255, line: 179, baseType: !4670, size: 256, offset: 32)
!6616 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !6612, file: !255, line: 180, baseType: !4670, size: 256, offset: 288)
!6617 = !DIDerivedType(tag: DW_TAG_member, name: "fw_version", scope: !6612, file: !255, line: 181, baseType: !4670, size: 256, offset: 544)
!6618 = !DIDerivedType(tag: DW_TAG_member, name: "bus_info", scope: !6612, file: !255, line: 182, baseType: !4670, size: 256, offset: 800)
!6619 = !DIDerivedType(tag: DW_TAG_member, name: "erom_version", scope: !6612, file: !255, line: 183, baseType: !4670, size: 256, offset: 1056)
!6620 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !6612, file: !255, line: 184, baseType: !6621, size: 96, offset: 1312)
!6621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 96, elements: !4195)
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "n_priv_flags", scope: !6612, file: !255, line: 185, baseType: !539, size: 32, offset: 1408)
!6623 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !6612, file: !255, line: 186, baseType: !539, size: 32, offset: 1440)
!6624 = !DIDerivedType(tag: DW_TAG_member, name: "testinfo_len", scope: !6612, file: !255, line: 187, baseType: !539, size: 32, offset: 1472)
!6625 = !DIDerivedType(tag: DW_TAG_member, name: "eedump_len", scope: !6612, file: !255, line: 188, baseType: !539, size: 32, offset: 1504)
!6626 = !DIDerivedType(tag: DW_TAG_member, name: "regdump_len", scope: !6612, file: !255, line: 189, baseType: !539, size: 32, offset: 1536)
!6627 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs_len", scope: !6604, file: !297, line: 424, baseType: !447, size: 64, offset: 128)
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs", scope: !6604, file: !297, line: 425, baseType: !6629, size: 64, offset: 192)
!6629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6630, size: 64)
!6630 = !DISubroutineType(types: !6631)
!6631 = !{null, !336, !6632, !637}
!6632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6633, size: 64)
!6633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_regs", file: !255, line: 310, size: 96, elements: !6634)
!6634 = !{!6635, !6636, !6637, !6638}
!6635 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6633, file: !255, line: 311, baseType: !539, size: 32)
!6636 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !6633, file: !255, line: 312, baseType: !539, size: 32, offset: 32)
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6633, file: !255, line: 313, baseType: !539, size: 32, offset: 64)
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6633, file: !255, line: 314, baseType: !526, offset: 96)
!6639 = !DIDerivedType(tag: DW_TAG_member, name: "get_wol", scope: !6604, file: !297, line: 426, baseType: !6640, size: 64, offset: 256)
!6640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6641, size: 64)
!6641 = !DISubroutineType(types: !6642)
!6642 = !{null, !336, !6643}
!6643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6644, size: 64)
!6644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_wolinfo", file: !255, line: 203, size: 160, elements: !6645)
!6645 = !{!6646, !6647, !6648, !6649}
!6646 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6644, file: !255, line: 204, baseType: !539, size: 32)
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !6644, file: !255, line: 205, baseType: !539, size: 32, offset: 32)
!6648 = !DIDerivedType(tag: DW_TAG_member, name: "wolopts", scope: !6644, file: !255, line: 206, baseType: !539, size: 32, offset: 64)
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "sopass", scope: !6644, file: !255, line: 207, baseType: !6650, size: 48, offset: 96)
!6650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !527, size: 48, elements: !1045)
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "set_wol", scope: !6604, file: !297, line: 427, baseType: !6652, size: 64, offset: 320)
!6652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6653, size: 64)
!6653 = !DISubroutineType(types: !6654)
!6654 = !{!78, !336, !6643}
!6655 = !DIDerivedType(tag: DW_TAG_member, name: "get_msglevel", scope: !6604, file: !297, line: 428, baseType: !6656, size: 64, offset: 384)
!6656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6657, size: 64)
!6657 = !DISubroutineType(types: !6658)
!6658 = !{!1033, !336}
!6659 = !DIDerivedType(tag: DW_TAG_member, name: "set_msglevel", scope: !6604, file: !297, line: 429, baseType: !6660, size: 64, offset: 448)
!6660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6661, size: 64)
!6661 = !DISubroutineType(types: !6662)
!6662 = !{null, !336, !1033}
!6663 = !DIDerivedType(tag: DW_TAG_member, name: "nway_reset", scope: !6604, file: !297, line: 430, baseType: !447, size: 64, offset: 512)
!6664 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !6604, file: !297, line: 431, baseType: !6656, size: 64, offset: 576)
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ext_state", scope: !6604, file: !297, line: 432, baseType: !6666, size: 64, offset: 640)
!6666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6667, size: 64)
!6667 = !DISubroutineType(types: !6668)
!6668 = !{!78, !336, !6669}
!6669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6670, size: 64)
!6670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ext_state_info", file: !297, line: 93, size: 64, elements: !6671)
!6671 = !{!6672, !6673}
!6672 = !DIDerivedType(tag: DW_TAG_member, name: "link_ext_state", scope: !6670, file: !297, line: 94, baseType: !254, size: 32)
!6673 = !DIDerivedType(tag: DW_TAG_member, scope: !6670, file: !297, line: 95, baseType: !6674, size: 32, offset: 32)
!6674 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6670, file: !297, line: 95, size: 32, elements: !6675)
!6675 = !{!6676, !6677, !6678, !6679, !6680, !6681}
!6676 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !6674, file: !297, line: 96, baseType: !267, size: 32)
!6677 = !DIDerivedType(tag: DW_TAG_member, name: "link_training", scope: !6674, file: !297, line: 97, baseType: !275, size: 32)
!6678 = !DIDerivedType(tag: DW_TAG_member, name: "link_logical_mismatch", scope: !6674, file: !297, line: 98, baseType: !281, size: 32)
!6679 = !DIDerivedType(tag: DW_TAG_member, name: "bad_signal_integrity", scope: !6674, file: !297, line: 99, baseType: !288, size: 32)
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "cable_issue", scope: !6674, file: !297, line: 100, baseType: !292, size: 32)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "__link_ext_substate", scope: !6674, file: !297, line: 101, baseType: !840, size: 8)
!6682 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom_len", scope: !6604, file: !297, line: 434, baseType: !447, size: 64, offset: 704)
!6683 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom", scope: !6604, file: !297, line: 435, baseType: !6684, size: 64, offset: 768)
!6684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6685, size: 64)
!6685 = !DISubroutineType(types: !6686)
!6686 = !{!78, !336, !6687, !839}
!6687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6688, size: 64)
!6688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eeprom", file: !255, line: 335, size: 128, elements: !6689)
!6689 = !{!6690, !6691, !6692, !6693, !6694}
!6690 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6688, file: !255, line: 336, baseType: !539, size: 32)
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !6688, file: !255, line: 337, baseType: !539, size: 32, offset: 32)
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !6688, file: !255, line: 338, baseType: !539, size: 32, offset: 64)
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6688, file: !255, line: 339, baseType: !539, size: 32, offset: 96)
!6694 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6688, file: !255, line: 340, baseType: !526, offset: 128)
!6695 = !DIDerivedType(tag: DW_TAG_member, name: "set_eeprom", scope: !6604, file: !297, line: 437, baseType: !6684, size: 64, offset: 832)
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "get_coalesce", scope: !6604, file: !297, line: 439, baseType: !6697, size: 64, offset: 896)
!6697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6698, size: 64)
!6698 = !DISubroutineType(types: !6699)
!6699 = !{!78, !336, !6700}
!6700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6701, size: 64)
!6701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_coalesce", file: !255, line: 462, size: 736, elements: !6702)
!6702 = !{!6703, !6704, !6705, !6706, !6707, !6708, !6709, !6710, !6711, !6712, !6713, !6714, !6715, !6716, !6717, !6718, !6719, !6720, !6721, !6722, !6723, !6724, !6725}
!6703 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6701, file: !255, line: 463, baseType: !539, size: 32)
!6704 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs", scope: !6701, file: !255, line: 464, baseType: !539, size: 32, offset: 32)
!6705 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames", scope: !6701, file: !255, line: 465, baseType: !539, size: 32, offset: 64)
!6706 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_irq", scope: !6701, file: !255, line: 466, baseType: !539, size: 32, offset: 96)
!6707 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_irq", scope: !6701, file: !255, line: 467, baseType: !539, size: 32, offset: 128)
!6708 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs", scope: !6701, file: !255, line: 468, baseType: !539, size: 32, offset: 160)
!6709 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames", scope: !6701, file: !255, line: 469, baseType: !539, size: 32, offset: 192)
!6710 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_irq", scope: !6701, file: !255, line: 470, baseType: !539, size: 32, offset: 224)
!6711 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_irq", scope: !6701, file: !255, line: 471, baseType: !539, size: 32, offset: 256)
!6712 = !DIDerivedType(tag: DW_TAG_member, name: "stats_block_coalesce_usecs", scope: !6701, file: !255, line: 472, baseType: !539, size: 32, offset: 288)
!6713 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_rx_coalesce", scope: !6701, file: !255, line: 473, baseType: !539, size: 32, offset: 320)
!6714 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_tx_coalesce", scope: !6701, file: !255, line: 474, baseType: !539, size: 32, offset: 352)
!6715 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_low", scope: !6701, file: !255, line: 475, baseType: !539, size: 32, offset: 384)
!6716 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_low", scope: !6701, file: !255, line: 476, baseType: !539, size: 32, offset: 416)
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_low", scope: !6701, file: !255, line: 477, baseType: !539, size: 32, offset: 448)
!6718 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_low", scope: !6701, file: !255, line: 478, baseType: !539, size: 32, offset: 480)
!6719 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_low", scope: !6701, file: !255, line: 479, baseType: !539, size: 32, offset: 512)
!6720 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_high", scope: !6701, file: !255, line: 480, baseType: !539, size: 32, offset: 544)
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_high", scope: !6701, file: !255, line: 481, baseType: !539, size: 32, offset: 576)
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_high", scope: !6701, file: !255, line: 482, baseType: !539, size: 32, offset: 608)
!6723 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_high", scope: !6701, file: !255, line: 483, baseType: !539, size: 32, offset: 640)
!6724 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_high", scope: !6701, file: !255, line: 484, baseType: !539, size: 32, offset: 672)
!6725 = !DIDerivedType(tag: DW_TAG_member, name: "rate_sample_interval", scope: !6701, file: !255, line: 485, baseType: !539, size: 32, offset: 704)
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "set_coalesce", scope: !6604, file: !297, line: 440, baseType: !6697, size: 64, offset: 960)
!6727 = !DIDerivedType(tag: DW_TAG_member, name: "get_ringparam", scope: !6604, file: !297, line: 441, baseType: !6728, size: 64, offset: 1024)
!6728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6729, size: 64)
!6729 = !DISubroutineType(types: !6730)
!6730 = !{null, !336, !6731}
!6731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6732, size: 64)
!6732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ringparam", file: !255, line: 513, size: 288, elements: !6733)
!6733 = !{!6734, !6735, !6736, !6737, !6738, !6739, !6740, !6741, !6742}
!6734 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6732, file: !255, line: 514, baseType: !539, size: 32)
!6735 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_pending", scope: !6732, file: !255, line: 515, baseType: !539, size: 32, offset: 32)
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_max_pending", scope: !6732, file: !255, line: 516, baseType: !539, size: 32, offset: 64)
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_max_pending", scope: !6732, file: !255, line: 517, baseType: !539, size: 32, offset: 96)
!6738 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_pending", scope: !6732, file: !255, line: 518, baseType: !539, size: 32, offset: 128)
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pending", scope: !6732, file: !255, line: 519, baseType: !539, size: 32, offset: 160)
!6740 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_pending", scope: !6732, file: !255, line: 520, baseType: !539, size: 32, offset: 192)
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_pending", scope: !6732, file: !255, line: 521, baseType: !539, size: 32, offset: 224)
!6742 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pending", scope: !6732, file: !255, line: 522, baseType: !539, size: 32, offset: 256)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "set_ringparam", scope: !6604, file: !297, line: 443, baseType: !6744, size: 64, offset: 1088)
!6744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6745, size: 64)
!6745 = !DISubroutineType(types: !6746)
!6746 = !{!78, !336, !6731}
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "get_pause_stats", scope: !6604, file: !297, line: 445, baseType: !6748, size: 64, offset: 1152)
!6748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6749, size: 64)
!6749 = !DISubroutineType(types: !6750)
!6750 = !{null, !336, !6751}
!6751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6752, size: 64)
!6752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pause_stats", file: !297, line: 260, size: 128, elements: !6753)
!6753 = !{!6754, !6755}
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause_frames", scope: !6752, file: !297, line: 261, baseType: !377, size: 64)
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause_frames", scope: !6752, file: !297, line: 262, baseType: !377, size: 64, offset: 64)
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "get_pauseparam", scope: !6604, file: !297, line: 447, baseType: !6757, size: 64, offset: 1216)
!6757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6758, size: 64)
!6758 = !DISubroutineType(types: !6759)
!6759 = !{null, !336, !6760}
!6760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6761, size: 64)
!6761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pauseparam", file: !255, line: 575, size: 128, elements: !6762)
!6762 = !{!6763, !6764, !6765, !6766}
!6763 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6761, file: !255, line: 576, baseType: !539, size: 32)
!6764 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !6761, file: !255, line: 577, baseType: !539, size: 32, offset: 32)
!6765 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause", scope: !6761, file: !255, line: 578, baseType: !539, size: 32, offset: 64)
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause", scope: !6761, file: !255, line: 579, baseType: !539, size: 32, offset: 96)
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "set_pauseparam", scope: !6604, file: !297, line: 449, baseType: !6768, size: 64, offset: 1280)
!6768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6769, size: 64)
!6769 = !DISubroutineType(types: !6770)
!6770 = !{!78, !336, !6760}
!6771 = !DIDerivedType(tag: DW_TAG_member, name: "self_test", scope: !6604, file: !297, line: 451, baseType: !6772, size: 64, offset: 1344)
!6772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6773, size: 64)
!6773 = !DISubroutineType(types: !6774)
!6774 = !{null, !336, !6775, !5417}
!6775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6776, size: 64)
!6776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_test", file: !255, line: 770, size: 128, elements: !6777)
!6777 = !{!6778, !6779, !6780, !6781, !6782}
!6778 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6776, file: !255, line: 771, baseType: !539, size: 32)
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6776, file: !255, line: 772, baseType: !539, size: 32, offset: 32)
!6780 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !6776, file: !255, line: 773, baseType: !539, size: 32, offset: 64)
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6776, file: !255, line: 774, baseType: !539, size: 32, offset: 96)
!6782 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6776, file: !255, line: 775, baseType: !6783, offset: 128)
!6783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !379, elements: !529)
!6784 = !DIDerivedType(tag: DW_TAG_member, name: "get_strings", scope: !6604, file: !297, line: 452, baseType: !6785, size: 64, offset: 1408)
!6785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6786, size: 64)
!6786 = !DISubroutineType(types: !6787)
!6787 = !{null, !336, !1033, !839}
!6788 = !DIDerivedType(tag: DW_TAG_member, name: "set_phys_id", scope: !6604, file: !297, line: 453, baseType: !6789, size: 64, offset: 1472)
!6789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6790, size: 64)
!6790 = !DISubroutineType(types: !6791)
!6791 = !{!78, !336, !296}
!6792 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_stats", scope: !6604, file: !297, line: 454, baseType: !6793, size: 64, offset: 1536)
!6793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6794, size: 64)
!6794 = !DISubroutineType(types: !6795)
!6795 = !{null, !336, !6796, !5417}
!6796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6797, size: 64)
!6797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_stats", file: !255, line: 789, size: 64, elements: !6798)
!6798 = !{!6799, !6800, !6801}
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6797, file: !255, line: 790, baseType: !539, size: 32)
!6800 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !6797, file: !255, line: 791, baseType: !539, size: 32, offset: 32)
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6797, file: !255, line: 792, baseType: !6783, offset: 64)
!6802 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !6604, file: !297, line: 456, baseType: !447, size: 64, offset: 1600)
!6803 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !6604, file: !297, line: 457, baseType: !451, size: 64, offset: 1664)
!6804 = !DIDerivedType(tag: DW_TAG_member, name: "get_priv_flags", scope: !6604, file: !297, line: 458, baseType: !6656, size: 64, offset: 1728)
!6805 = !DIDerivedType(tag: DW_TAG_member, name: "set_priv_flags", scope: !6604, file: !297, line: 459, baseType: !6806, size: 64, offset: 1792)
!6806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6807, size: 64)
!6807 = !DISubroutineType(types: !6808)
!6808 = !{!78, !336, !1033}
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "get_sset_count", scope: !6604, file: !297, line: 460, baseType: !768, size: 64, offset: 1856)
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxnfc", scope: !6604, file: !297, line: 461, baseType: !6811, size: 64, offset: 1920)
!6811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6812, size: 64)
!6812 = !DISubroutineType(types: !6813)
!6813 = !{!78, !336, !6814, !2562}
!6814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6815, size: 64)
!6815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rxnfc", file: !255, line: 1088, size: 1536, elements: !6816)
!6816 = !{!6817, !6818, !6819, !6820, !6906, !6911}
!6817 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6815, file: !255, line: 1089, baseType: !539, size: 32)
!6818 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !6815, file: !255, line: 1090, baseType: !539, size: 32, offset: 32)
!6819 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6815, file: !255, line: 1091, baseType: !379, size: 64, offset: 64)
!6820 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !6815, file: !255, line: 1092, baseType: !6821, size: 1344, offset: 128)
!6821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rx_flow_spec", file: !255, line: 992, size: 1344, elements: !6822)
!6822 = !{!6823, !6824, !6892, !6902, !6903, !6904, !6905}
!6823 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !6821, file: !255, line: 993, baseType: !539, size: 32)
!6824 = !DIDerivedType(tag: DW_TAG_member, name: "h_u", scope: !6821, file: !255, line: 994, baseType: !6825, size: 416, offset: 32)
!6825 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ethtool_flow_union", file: !255, line: 939, size: 416, elements: !6826)
!6826 = !{!6827, !6835, !6836, !6837, !6844, !6845, !6854, !6862, !6863, !6864, !6871, !6872, !6880, !6888}
!6827 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip4_spec", scope: !6825, file: !255, line: 940, baseType: !6828, size: 128)
!6828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip4_spec", file: !255, line: 845, size: 128, elements: !6829)
!6829 = !{!6830, !6831, !6832, !6833, !6834}
!6830 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !6828, file: !255, line: 846, baseType: !3253, size: 32)
!6831 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !6828, file: !255, line: 847, baseType: !3253, size: 32, offset: 32)
!6832 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !6828, file: !255, line: 848, baseType: !581, size: 16, offset: 64)
!6833 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !6828, file: !255, line: 849, baseType: !581, size: 16, offset: 80)
!6834 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !6828, file: !255, line: 850, baseType: !527, size: 8, offset: 96)
!6835 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip4_spec", scope: !6825, file: !255, line: 941, baseType: !6828, size: 128)
!6836 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip4_spec", scope: !6825, file: !255, line: 942, baseType: !6828, size: 128)
!6837 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip4_spec", scope: !6825, file: !255, line: 943, baseType: !6838, size: 128)
!6838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip4_spec", file: !255, line: 862, size: 128, elements: !6839)
!6839 = !{!6840, !6841, !6842, !6843}
!6840 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !6838, file: !255, line: 863, baseType: !3253, size: 32)
!6841 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !6838, file: !255, line: 864, baseType: !3253, size: 32, offset: 32)
!6842 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !6838, file: !255, line: 865, baseType: !3253, size: 32, offset: 64)
!6843 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !6838, file: !255, line: 866, baseType: !527, size: 8, offset: 96)
!6844 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip4_spec", scope: !6825, file: !255, line: 944, baseType: !6838, size: 128)
!6845 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip4_spec", scope: !6825, file: !255, line: 945, baseType: !6846, size: 128)
!6846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip4_spec", file: !255, line: 880, size: 128, elements: !6847)
!6847 = !{!6848, !6849, !6850, !6851, !6852, !6853}
!6848 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !6846, file: !255, line: 881, baseType: !3253, size: 32)
!6849 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !6846, file: !255, line: 882, baseType: !3253, size: 32, offset: 32)
!6850 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !6846, file: !255, line: 883, baseType: !3253, size: 32, offset: 64)
!6851 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !6846, file: !255, line: 884, baseType: !527, size: 8, offset: 96)
!6852 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ver", scope: !6846, file: !255, line: 885, baseType: !527, size: 8, offset: 104)
!6853 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !6846, file: !255, line: 886, baseType: !527, size: 8, offset: 112)
!6854 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip6_spec", scope: !6825, file: !255, line: 946, baseType: !6855, size: 320)
!6855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip6_spec", file: !255, line: 899, size: 320, elements: !6856)
!6856 = !{!6857, !6858, !6859, !6860, !6861}
!6857 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !6855, file: !255, line: 900, baseType: !3274, size: 128)
!6858 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !6855, file: !255, line: 901, baseType: !3274, size: 128, offset: 128)
!6859 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !6855, file: !255, line: 902, baseType: !581, size: 16, offset: 256)
!6860 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !6855, file: !255, line: 903, baseType: !581, size: 16, offset: 272)
!6861 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !6855, file: !255, line: 904, baseType: !527, size: 8, offset: 288)
!6862 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip6_spec", scope: !6825, file: !255, line: 947, baseType: !6855, size: 320)
!6863 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip6_spec", scope: !6825, file: !255, line: 948, baseType: !6855, size: 320)
!6864 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip6_spec", scope: !6825, file: !255, line: 949, baseType: !6865, size: 320)
!6865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip6_spec", file: !255, line: 916, size: 320, elements: !6866)
!6866 = !{!6867, !6868, !6869, !6870}
!6867 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !6865, file: !255, line: 917, baseType: !3274, size: 128)
!6868 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !6865, file: !255, line: 918, baseType: !3274, size: 128, offset: 128)
!6869 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !6865, file: !255, line: 919, baseType: !3253, size: 32, offset: 256)
!6870 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !6865, file: !255, line: 920, baseType: !527, size: 8, offset: 288)
!6871 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip6_spec", scope: !6825, file: !255, line: 950, baseType: !6865, size: 320)
!6872 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip6_spec", scope: !6825, file: !255, line: 951, baseType: !6873, size: 320)
!6873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip6_spec", file: !255, line: 931, size: 320, elements: !6874)
!6874 = !{!6875, !6876, !6877, !6878, !6879}
!6875 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !6873, file: !255, line: 932, baseType: !3274, size: 128)
!6876 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !6873, file: !255, line: 933, baseType: !3274, size: 128, offset: 128)
!6877 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !6873, file: !255, line: 934, baseType: !3253, size: 32, offset: 256)
!6878 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !6873, file: !255, line: 935, baseType: !527, size: 8, offset: 288)
!6879 = !DIDerivedType(tag: DW_TAG_member, name: "l4_proto", scope: !6873, file: !255, line: 936, baseType: !527, size: 8, offset: 296)
!6880 = !DIDerivedType(tag: DW_TAG_member, name: "ether_spec", scope: !6825, file: !255, line: 952, baseType: !6881, size: 112)
!6881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethhdr", file: !6882, line: 164, size: 112, elements: !6883)
!6882 = !DIFile(filename: "./include/uapi/linux/if_ether.h", directory: "/home/lizy2001/genbc/linux")
!6883 = !{!6884, !6886, !6887}
!6884 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !6881, file: !6882, line: 165, baseType: !6885, size: 48)
!6885 = !DICompositeType(tag: DW_TAG_array_type, baseType: !528, size: 48, elements: !1045)
!6886 = !DIDerivedType(tag: DW_TAG_member, name: "h_source", scope: !6881, file: !6882, line: 166, baseType: !6885, size: 48, offset: 48)
!6887 = !DIDerivedType(tag: DW_TAG_member, name: "h_proto", scope: !6881, file: !6882, line: 167, baseType: !581, size: 16, offset: 96)
!6888 = !DIDerivedType(tag: DW_TAG_member, name: "hdata", scope: !6825, file: !255, line: 953, baseType: !6889, size: 416)
!6889 = !DICompositeType(tag: DW_TAG_array_type, baseType: !527, size: 416, elements: !6890)
!6890 = !{!6891}
!6891 = !DISubrange(count: 52)
!6892 = !DIDerivedType(tag: DW_TAG_member, name: "h_ext", scope: !6821, file: !255, line: 995, baseType: !6893, size: 160, offset: 448)
!6893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flow_ext", file: !255, line: 967, size: 160, elements: !6894)
!6894 = !{!6895, !6897, !6898, !6899, !6900}
!6895 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !6893, file: !255, line: 968, baseType: !6896, size: 16)
!6896 = !DICompositeType(tag: DW_TAG_array_type, baseType: !527, size: 16, elements: !2710)
!6897 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !6893, file: !255, line: 969, baseType: !6885, size: 48, offset: 16)
!6898 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_etype", scope: !6893, file: !255, line: 970, baseType: !581, size: 16, offset: 64)
!6899 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !6893, file: !255, line: 971, baseType: !581, size: 16, offset: 80)
!6900 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6893, file: !255, line: 972, baseType: !6901, size: 64, offset: 96)
!6901 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3253, size: 64, elements: !2710)
!6902 = !DIDerivedType(tag: DW_TAG_member, name: "m_u", scope: !6821, file: !255, line: 996, baseType: !6825, size: 416, offset: 608)
!6903 = !DIDerivedType(tag: DW_TAG_member, name: "m_ext", scope: !6821, file: !255, line: 997, baseType: !6893, size: 160, offset: 1024)
!6904 = !DIDerivedType(tag: DW_TAG_member, name: "ring_cookie", scope: !6821, file: !255, line: 998, baseType: !379, size: 64, offset: 1216)
!6905 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !6821, file: !255, line: 999, baseType: !539, size: 32, offset: 1280)
!6906 = !DIDerivedType(tag: DW_TAG_member, scope: !6815, file: !255, line: 1093, baseType: !6907, size: 32, offset: 1472)
!6907 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6815, file: !255, line: 1093, size: 32, elements: !6908)
!6908 = !{!6909, !6910}
!6909 = !DIDerivedType(tag: DW_TAG_member, name: "rule_cnt", scope: !6907, file: !255, line: 1094, baseType: !539, size: 32)
!6910 = !DIDerivedType(tag: DW_TAG_member, name: "rss_context", scope: !6907, file: !255, line: 1095, baseType: !539, size: 32)
!6911 = !DIDerivedType(tag: DW_TAG_member, name: "rule_locs", scope: !6815, file: !255, line: 1097, baseType: !538, offset: 1504)
!6912 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxnfc", scope: !6604, file: !297, line: 463, baseType: !6913, size: 64, offset: 1984)
!6913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6914, size: 64)
!6914 = !DISubroutineType(types: !6915)
!6915 = !{!78, !336, !6814}
!6916 = !DIDerivedType(tag: DW_TAG_member, name: "flash_device", scope: !6604, file: !297, line: 464, baseType: !6917, size: 64, offset: 2048)
!6917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6918, size: 64)
!6918 = !DISubroutineType(types: !6919)
!6919 = !{!78, !336, !6920}
!6920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6921, size: 64)
!6921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flash", file: !255, line: 1217, size: 1088, elements: !6922)
!6922 = !{!6923, !6924, !6925}
!6923 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6921, file: !255, line: 1218, baseType: !539, size: 32)
!6924 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !6921, file: !255, line: 1219, baseType: !539, size: 32, offset: 32)
!6925 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6921, file: !255, line: 1220, baseType: !5278, size: 1024, offset: 64)
!6926 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !6604, file: !297, line: 465, baseType: !6927, size: 64, offset: 2112)
!6927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6928, size: 64)
!6928 = !DISubroutineType(types: !6929)
!6929 = !{!78, !336, !2562}
!6930 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_key_size", scope: !6604, file: !297, line: 466, baseType: !6656, size: 64, offset: 2176)
!6931 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_indir_size", scope: !6604, file: !297, line: 467, baseType: !6656, size: 64, offset: 2240)
!6932 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh", scope: !6604, file: !297, line: 468, baseType: !6933, size: 64, offset: 2304)
!6933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6934, size: 64)
!6934 = !DISubroutineType(types: !6935)
!6935 = !{!78, !336, !2562, !839, !839}
!6936 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh", scope: !6604, file: !297, line: 470, baseType: !6937, size: 64, offset: 2368)
!6937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6938, size: 64)
!6938 = !DISubroutineType(types: !6939)
!6939 = !{!78, !336, !6940, !5789, !5790}
!6940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6941, size: 64)
!6941 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1033)
!6942 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_context", scope: !6604, file: !297, line: 472, baseType: !6943, size: 64, offset: 2432)
!6943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6944, size: 64)
!6944 = !DISubroutineType(types: !6945)
!6945 = !{!78, !336, !2562, !839, !839, !1033}
!6946 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh_context", scope: !6604, file: !297, line: 474, baseType: !6947, size: 64, offset: 2496)
!6947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6948, size: 64)
!6948 = !DISubroutineType(types: !6949)
!6949 = !{!78, !336, !6940, !5789, !5790, !2562, !817}
!6950 = !DIDerivedType(tag: DW_TAG_member, name: "get_channels", scope: !6604, file: !297, line: 477, baseType: !6951, size: 64, offset: 2560)
!6951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6952, size: 64)
!6952 = !DISubroutineType(types: !6953)
!6953 = !{null, !336, !6954}
!6954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6955, size: 64)
!6955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_channels", file: !255, line: 541, size: 288, elements: !6956)
!6956 = !{!6957, !6958, !6959, !6960, !6961, !6962, !6963, !6964, !6965}
!6957 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6955, file: !255, line: 542, baseType: !539, size: 32)
!6958 = !DIDerivedType(tag: DW_TAG_member, name: "max_rx", scope: !6955, file: !255, line: 543, baseType: !539, size: 32, offset: 32)
!6959 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx", scope: !6955, file: !255, line: 544, baseType: !539, size: 32, offset: 64)
!6960 = !DIDerivedType(tag: DW_TAG_member, name: "max_other", scope: !6955, file: !255, line: 545, baseType: !539, size: 32, offset: 96)
!6961 = !DIDerivedType(tag: DW_TAG_member, name: "max_combined", scope: !6955, file: !255, line: 546, baseType: !539, size: 32, offset: 128)
!6962 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !6955, file: !255, line: 547, baseType: !539, size: 32, offset: 160)
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "tx_count", scope: !6955, file: !255, line: 548, baseType: !539, size: 32, offset: 192)
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "other_count", scope: !6955, file: !255, line: 549, baseType: !539, size: 32, offset: 224)
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "combined_count", scope: !6955, file: !255, line: 550, baseType: !539, size: 32, offset: 256)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "set_channels", scope: !6604, file: !297, line: 478, baseType: !6967, size: 64, offset: 2624)
!6967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6968, size: 64)
!6968 = !DISubroutineType(types: !6969)
!6969 = !{!78, !336, !6954}
!6970 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_flag", scope: !6604, file: !297, line: 479, baseType: !6971, size: 64, offset: 2688)
!6971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6972, size: 64)
!6972 = !DISubroutineType(types: !6973)
!6973 = !{!78, !336, !6974}
!6974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6975, size: 64)
!6975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_dump", file: !255, line: 1237, size: 128, elements: !6976)
!6976 = !{!6977, !6978, !6979, !6980, !6981}
!6977 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6975, file: !255, line: 1238, baseType: !539, size: 32)
!6978 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !6975, file: !255, line: 1239, baseType: !539, size: 32, offset: 32)
!6979 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6975, file: !255, line: 1240, baseType: !539, size: 32, offset: 64)
!6980 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6975, file: !255, line: 1241, baseType: !539, size: 32, offset: 96)
!6981 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6975, file: !255, line: 1242, baseType: !526, offset: 128)
!6982 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_data", scope: !6604, file: !297, line: 480, baseType: !6983, size: 64, offset: 2752)
!6983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6984, size: 64)
!6984 = !DISubroutineType(types: !6985)
!6985 = !{!78, !336, !6974, !637}
!6986 = !DIDerivedType(tag: DW_TAG_member, name: "set_dump", scope: !6604, file: !297, line: 482, baseType: !6971, size: 64, offset: 2816)
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "get_ts_info", scope: !6604, file: !297, line: 483, baseType: !6988, size: 64, offset: 2880)
!6988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6989, size: 64)
!6989 = !DISubroutineType(types: !6990)
!6990 = !{!78, !336, !6991}
!6991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6992, size: 64)
!6992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ts_info", file: !255, line: 1317, size: 352, elements: !6993)
!6993 = !{!6994, !6995, !6996, !6997, !6998, !7000, !7001}
!6994 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6992, file: !255, line: 1318, baseType: !539, size: 32)
!6995 = !DIDerivedType(tag: DW_TAG_member, name: "so_timestamping", scope: !6992, file: !255, line: 1319, baseType: !539, size: 32, offset: 32)
!6996 = !DIDerivedType(tag: DW_TAG_member, name: "phc_index", scope: !6992, file: !255, line: 1320, baseType: !988, size: 32, offset: 64)
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "tx_types", scope: !6992, file: !255, line: 1321, baseType: !539, size: 32, offset: 96)
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "tx_reserved", scope: !6992, file: !255, line: 1322, baseType: !6999, size: 96, offset: 128)
!6999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 96, elements: !1638)
!7000 = !DIDerivedType(tag: DW_TAG_member, name: "rx_filters", scope: !6992, file: !255, line: 1323, baseType: !539, size: 32, offset: 224)
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "rx_reserved", scope: !6992, file: !255, line: 1324, baseType: !6999, size: 96, offset: 256)
!7002 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_info", scope: !6604, file: !297, line: 484, baseType: !7003, size: 64, offset: 2944)
!7003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7004, size: 64)
!7004 = !DISubroutineType(types: !7005)
!7005 = !{!78, !336, !7006}
!7006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7007, size: 64)
!7007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_modinfo", file: !255, line: 382, size: 352, elements: !7008)
!7008 = !{!7009, !7010, !7011, !7012}
!7009 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7007, file: !255, line: 383, baseType: !539, size: 32)
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7007, file: !255, line: 384, baseType: !539, size: 32, offset: 32)
!7011 = !DIDerivedType(tag: DW_TAG_member, name: "eeprom_len", scope: !7007, file: !255, line: 385, baseType: !539, size: 32, offset: 64)
!7012 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7007, file: !255, line: 386, baseType: !7013, size: 256, offset: 96)
!7013 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 256, elements: !2479)
!7014 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_eeprom", scope: !6604, file: !297, line: 486, baseType: !6684, size: 64, offset: 3008)
!7015 = !DIDerivedType(tag: DW_TAG_member, name: "get_eee", scope: !6604, file: !297, line: 488, baseType: !7016, size: 64, offset: 3072)
!7016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7017, size: 64)
!7017 = !DISubroutineType(types: !7018)
!7018 = !{!78, !336, !7019}
!7019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7020, size: 64)
!7020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eee", file: !255, line: 360, size: 320, elements: !7021)
!7021 = !{!7022, !7023, !7024, !7025, !7026, !7027, !7028, !7029, !7030}
!7022 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7020, file: !255, line: 361, baseType: !539, size: 32)
!7023 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !7020, file: !255, line: 362, baseType: !539, size: 32, offset: 32)
!7024 = !DIDerivedType(tag: DW_TAG_member, name: "advertised", scope: !7020, file: !255, line: 363, baseType: !539, size: 32, offset: 64)
!7025 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertised", scope: !7020, file: !255, line: 364, baseType: !539, size: 32, offset: 96)
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "eee_active", scope: !7020, file: !255, line: 365, baseType: !539, size: 32, offset: 128)
!7027 = !DIDerivedType(tag: DW_TAG_member, name: "eee_enabled", scope: !7020, file: !255, line: 366, baseType: !539, size: 32, offset: 160)
!7028 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_enabled", scope: !7020, file: !255, line: 367, baseType: !539, size: 32, offset: 192)
!7029 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_timer", scope: !7020, file: !255, line: 368, baseType: !539, size: 32, offset: 224)
!7030 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7020, file: !255, line: 369, baseType: !2709, size: 64, offset: 256)
!7031 = !DIDerivedType(tag: DW_TAG_member, name: "set_eee", scope: !6604, file: !297, line: 489, baseType: !7016, size: 64, offset: 3136)
!7032 = !DIDerivedType(tag: DW_TAG_member, name: "get_tunable", scope: !6604, file: !297, line: 490, baseType: !7033, size: 64, offset: 3200)
!7033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7034, size: 64)
!7034 = !DISubroutineType(types: !7035)
!7035 = !{!78, !336, !7036, !637}
!7036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7037, size: 64)
!7037 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7038)
!7038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tunable", file: !255, line: 244, size: 128, elements: !7039)
!7039 = !{!7040, !7041, !7042, !7043, !7044}
!7040 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7038, file: !255, line: 245, baseType: !539, size: 32)
!7041 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7038, file: !255, line: 246, baseType: !539, size: 32, offset: 32)
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !7038, file: !255, line: 247, baseType: !539, size: 32, offset: 64)
!7043 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7038, file: !255, line: 248, baseType: !539, size: 32, offset: 96)
!7044 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7038, file: !255, line: 249, baseType: !7045, offset: 128)
!7045 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, elements: !529)
!7046 = !DIDerivedType(tag: DW_TAG_member, name: "set_tunable", scope: !6604, file: !297, line: 492, baseType: !7047, size: 64, offset: 3264)
!7047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7048, size: 64)
!7048 = !DISubroutineType(types: !7049)
!7049 = !{!78, !336, !7036, !3303}
!7050 = !DIDerivedType(tag: DW_TAG_member, name: "get_per_queue_coalesce", scope: !6604, file: !297, line: 494, baseType: !7051, size: 64, offset: 3328)
!7051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7052, size: 64)
!7052 = !DISubroutineType(types: !7053)
!7053 = !{!78, !336, !1033, !6700}
!7054 = !DIDerivedType(tag: DW_TAG_member, name: "set_per_queue_coalesce", scope: !6604, file: !297, line: 496, baseType: !7051, size: 64, offset: 3392)
!7055 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ksettings", scope: !6604, file: !297, line: 498, baseType: !7056, size: 64, offset: 3456)
!7056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7057, size: 64)
!7057 = !DISubroutineType(types: !7058)
!7058 = !{!78, !336, !7059}
!7059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7060, size: 64)
!7060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ksettings", file: !297, line: 124, size: 768, elements: !7061)
!7061 = !{!7062, !7087}
!7062 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7060, file: !297, line: 125, baseType: !7063, size: 384)
!7063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_settings", file: !255, line: 1996, size: 384, elements: !7064)
!7064 = !{!7065, !7066, !7067, !7068, !7069, !7070, !7071, !7072, !7073, !7074, !7077, !7078, !7079, !7080, !7082, !7086}
!7065 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7063, file: !255, line: 1997, baseType: !539, size: 32)
!7066 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !7063, file: !255, line: 1998, baseType: !539, size: 32, offset: 32)
!7067 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !7063, file: !255, line: 1999, baseType: !527, size: 8, offset: 64)
!7068 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !7063, file: !255, line: 2000, baseType: !527, size: 8, offset: 72)
!7069 = !DIDerivedType(tag: DW_TAG_member, name: "phy_address", scope: !7063, file: !255, line: 2001, baseType: !527, size: 8, offset: 80)
!7070 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !7063, file: !255, line: 2002, baseType: !527, size: 8, offset: 88)
!7071 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_support", scope: !7063, file: !255, line: 2003, baseType: !527, size: 8, offset: 96)
!7072 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix", scope: !7063, file: !255, line: 2004, baseType: !527, size: 8, offset: 104)
!7073 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix_ctrl", scope: !7063, file: !255, line: 2005, baseType: !527, size: 8, offset: 112)
!7074 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks_nwords", scope: !7063, file: !255, line: 2006, baseType: !7075, size: 8, offset: 120)
!7075 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !380, line: 20, baseType: !7076)
!7076 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!7077 = !DIDerivedType(tag: DW_TAG_member, name: "transceiver", scope: !7063, file: !255, line: 2007, baseType: !527, size: 8, offset: 128)
!7078 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_cfg", scope: !7063, file: !255, line: 2008, baseType: !527, size: 8, offset: 136)
!7079 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_state", scope: !7063, file: !255, line: 2009, baseType: !527, size: 8, offset: 144)
!7080 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !7063, file: !255, line: 2010, baseType: !7081, size: 8, offset: 152)
!7081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !527, size: 8, elements: !2518)
!7082 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7063, file: !255, line: 2011, baseType: !7083, size: 224, offset: 160)
!7083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 224, elements: !7084)
!7084 = !{!7085}
!7085 = !DISubrange(count: 7)
!7086 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks", scope: !7063, file: !255, line: 2012, baseType: !538, offset: 384)
!7087 = !DIDerivedType(tag: DW_TAG_member, name: "link_modes", scope: !7060, file: !297, line: 130, baseType: !7088, size: 384, offset: 384)
!7088 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7060, file: !297, line: 126, size: 384, elements: !7089)
!7089 = !{!7090, !7092, !7093}
!7090 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !7088, file: !297, line: 127, baseType: !7091, size: 128)
!7091 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 128, elements: !2710)
!7092 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !7088, file: !297, line: 128, baseType: !7091, size: 128, offset: 128)
!7093 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertising", scope: !7088, file: !297, line: 129, baseType: !7091, size: 128, offset: 256)
!7094 = !DIDerivedType(tag: DW_TAG_member, name: "set_link_ksettings", scope: !6604, file: !297, line: 500, baseType: !7095, size: 64, offset: 3520)
!7095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7096, size: 64)
!7096 = !DISubroutineType(types: !7097)
!7097 = !{!78, !336, !7098}
!7098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7099, size: 64)
!7099 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7060)
!7100 = !DIDerivedType(tag: DW_TAG_member, name: "get_fecparam", scope: !6604, file: !297, line: 502, baseType: !7101, size: 64, offset: 3584)
!7101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7102, size: 64)
!7102 = !DISubroutineType(types: !7103)
!7103 = !{!78, !336, !7104}
!7104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7105, size: 64)
!7105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_fecparam", file: !255, line: 1389, size: 128, elements: !7106)
!7106 = !{!7107, !7108, !7109, !7110}
!7107 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7105, file: !255, line: 1390, baseType: !539, size: 32)
!7108 = !DIDerivedType(tag: DW_TAG_member, name: "active_fec", scope: !7105, file: !255, line: 1392, baseType: !539, size: 32, offset: 32)
!7109 = !DIDerivedType(tag: DW_TAG_member, name: "fec", scope: !7105, file: !255, line: 1393, baseType: !539, size: 32, offset: 64)
!7110 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7105, file: !255, line: 1394, baseType: !539, size: 32, offset: 96)
!7111 = !DIDerivedType(tag: DW_TAG_member, name: "set_fecparam", scope: !6604, file: !297, line: 504, baseType: !7101, size: 64, offset: 3648)
!7112 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_phy_stats", scope: !6604, file: !297, line: 506, baseType: !6793, size: 64, offset: 3712)
!7113 = !DIDerivedType(tag: DW_TAG_member, name: "get_phy_tunable", scope: !6604, file: !297, line: 508, baseType: !7033, size: 64, offset: 3776)
!7114 = !DIDerivedType(tag: DW_TAG_member, name: "set_phy_tunable", scope: !6604, file: !297, line: 510, baseType: !7047, size: 64, offset: 3840)
!7115 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_ops", scope: !310, file: !77, line: 1922, baseType: !7116, size: 64, offset: 4096)
!7116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7117, size: 64)
!7117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7118)
!7118 = !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_ops", file: !77, line: 1922, flags: DIFlagFwdDecl)
!7119 = !DIDerivedType(tag: DW_TAG_member, name: "header_ops", scope: !310, file: !77, line: 1933, baseType: !7120, size: 64, offset: 4160)
!7120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7121, size: 64)
!7121 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7122)
!7122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "header_ops", file: !77, line: 270, size: 384, elements: !7123)
!7123 = !{!7124, !7128, !7134, !7147, !7151, !7155}
!7124 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !7122, file: !77, line: 271, baseType: !7125, size: 64)
!7125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7126, size: 64)
!7126 = !DISubroutineType(types: !7127)
!7127 = !{!78, !461, !336, !522, !3303, !3303, !7}
!7128 = !DIDerivedType(tag: DW_TAG_member, name: "parse", scope: !7122, file: !77, line: 274, baseType: !7129, size: 64, offset: 64)
!7129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7130, size: 64)
!7130 = !DISubroutineType(types: !7131)
!7131 = !{!78, !7132, !610}
!7132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7133, size: 64)
!7133 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !462)
!7134 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !7122, file: !77, line: 275, baseType: !7135, size: 64, offset: 128)
!7135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7136, size: 64)
!7136 = !DISubroutineType(types: !7137)
!7137 = !{!78, !7138, !7140, !581}
!7138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7139, size: 64)
!7139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !970)
!7140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7141, size: 64)
!7141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hh_cache", file: !77, line: 244, size: 832, elements: !7142)
!7142 = !{!7143, !7144, !7145}
!7143 = !DIDerivedType(tag: DW_TAG_member, name: "hh_len", scope: !7141, file: !77, line: 245, baseType: !7, size: 32)
!7144 = !DIDerivedType(tag: DW_TAG_member, name: "hh_lock", scope: !7141, file: !77, line: 246, baseType: !3370, size: 32, offset: 32)
!7145 = !DIDerivedType(tag: DW_TAG_member, name: "hh_data", scope: !7141, file: !77, line: 254, baseType: !7146, size: 768, offset: 64)
!7146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 768, elements: !4195)
!7147 = !DIDerivedType(tag: DW_TAG_member, name: "cache_update", scope: !7122, file: !77, line: 276, baseType: !7148, size: 64, offset: 192)
!7148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7149, size: 64)
!7149 = !DISubroutineType(types: !7150)
!7150 = !{null, !7140, !819, !992}
!7151 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !7122, file: !77, line: 279, baseType: !7152, size: 64, offset: 256)
!7152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7153, size: 64)
!7153 = !DISubroutineType(types: !7154)
!7154 = !{!817, !338, !7}
!7155 = !DIDerivedType(tag: DW_TAG_member, name: "parse_protocol", scope: !7122, file: !77, line: 280, baseType: !7156, size: 64, offset: 320)
!7156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7157, size: 64)
!7157 = !DISubroutineType(types: !7158)
!7158 = !{!581, !7132}
!7159 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !310, file: !77, line: 1935, baseType: !7, size: 32, offset: 4224)
!7160 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !310, file: !77, line: 1936, baseType: !7, size: 32, offset: 4256)
!7161 = !DIDerivedType(tag: DW_TAG_member, name: "gflags", scope: !310, file: !77, line: 1938, baseType: !522, size: 16, offset: 4288)
!7162 = !DIDerivedType(tag: DW_TAG_member, name: "padded", scope: !310, file: !77, line: 1939, baseType: !522, size: 16, offset: 4304)
!7163 = !DIDerivedType(tag: DW_TAG_member, name: "operstate", scope: !310, file: !77, line: 1941, baseType: !528, size: 8, offset: 4320)
!7164 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode", scope: !310, file: !77, line: 1942, baseType: !528, size: 8, offset: 4328)
!7165 = !DIDerivedType(tag: DW_TAG_member, name: "if_port", scope: !310, file: !77, line: 1944, baseType: !528, size: 8, offset: 4336)
!7166 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !310, file: !77, line: 1945, baseType: !528, size: 8, offset: 4344)
!7167 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !310, file: !77, line: 1952, baseType: !7, size: 32, offset: 4352)
!7168 = !DIDerivedType(tag: DW_TAG_member, name: "min_mtu", scope: !310, file: !77, line: 1953, baseType: !7, size: 32, offset: 4384)
!7169 = !DIDerivedType(tag: DW_TAG_member, name: "max_mtu", scope: !310, file: !77, line: 1954, baseType: !7, size: 32, offset: 4416)
!7170 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !310, file: !77, line: 1955, baseType: !522, size: 16, offset: 4448)
!7171 = !DIDerivedType(tag: DW_TAG_member, name: "hard_header_len", scope: !310, file: !77, line: 1956, baseType: !522, size: 16, offset: 4464)
!7172 = !DIDerivedType(tag: DW_TAG_member, name: "min_header_len", scope: !310, file: !77, line: 1957, baseType: !528, size: 8, offset: 4480)
!7173 = !DIDerivedType(tag: DW_TAG_member, name: "name_assign_type", scope: !310, file: !77, line: 1958, baseType: !528, size: 8, offset: 4488)
!7174 = !DIDerivedType(tag: DW_TAG_member, name: "needed_headroom", scope: !310, file: !77, line: 1960, baseType: !522, size: 16, offset: 4496)
!7175 = !DIDerivedType(tag: DW_TAG_member, name: "needed_tailroom", scope: !310, file: !77, line: 1961, baseType: !522, size: 16, offset: 4512)
!7176 = !DIDerivedType(tag: DW_TAG_member, name: "perm_addr", scope: !310, file: !77, line: 1964, baseType: !1077, size: 256, offset: 4528)
!7177 = !DIDerivedType(tag: DW_TAG_member, name: "addr_assign_type", scope: !310, file: !77, line: 1965, baseType: !528, size: 8, offset: 4784)
!7178 = !DIDerivedType(tag: DW_TAG_member, name: "addr_len", scope: !310, file: !77, line: 1966, baseType: !528, size: 8, offset: 4792)
!7179 = !DIDerivedType(tag: DW_TAG_member, name: "upper_level", scope: !310, file: !77, line: 1967, baseType: !528, size: 8, offset: 4800)
!7180 = !DIDerivedType(tag: DW_TAG_member, name: "lower_level", scope: !310, file: !77, line: 1968, baseType: !528, size: 8, offset: 4808)
!7181 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_priv_len", scope: !310, file: !77, line: 1970, baseType: !522, size: 16, offset: 4816)
!7182 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !310, file: !77, line: 1971, baseType: !522, size: 16, offset: 4832)
!7183 = !DIDerivedType(tag: DW_TAG_member, name: "dev_port", scope: !310, file: !77, line: 1972, baseType: !522, size: 16, offset: 4848)
!7184 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list_lock", scope: !310, file: !77, line: 1973, baseType: !1716, offset: 4864)
!7185 = !DIDerivedType(tag: DW_TAG_member, name: "uc", scope: !310, file: !77, line: 1975, baseType: !7186, size: 192, offset: 4864)
!7186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr_list", file: !77, line: 224, size: 192, elements: !7187)
!7187 = !{!7188, !7189}
!7188 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7186, file: !77, line: 225, baseType: !330, size: 128)
!7189 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7186, file: !77, line: 226, baseType: !78, size: 32, offset: 128)
!7190 = !DIDerivedType(tag: DW_TAG_member, name: "mc", scope: !310, file: !77, line: 1976, baseType: !7186, size: 192, offset: 5056)
!7191 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addrs", scope: !310, file: !77, line: 1977, baseType: !7186, size: 192, offset: 5248)
!7192 = !DIDerivedType(tag: DW_TAG_member, name: "queues_kset", scope: !310, file: !77, line: 1980, baseType: !5812, size: 64, offset: 5440)
!7193 = !DIDerivedType(tag: DW_TAG_member, name: "promiscuity", scope: !310, file: !77, line: 1985, baseType: !7, size: 32, offset: 5504)
!7194 = !DIDerivedType(tag: DW_TAG_member, name: "allmulti", scope: !310, file: !77, line: 1986, baseType: !7, size: 32, offset: 5536)
!7195 = !DIDerivedType(tag: DW_TAG_member, name: "uc_promisc", scope: !310, file: !77, line: 1987, baseType: !817, size: 8, offset: 5568)
!7196 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_info", scope: !310, file: !77, line: 1996, baseType: !7197, size: 64, offset: 5632)
!7197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7198, size: 64)
!7198 = !DICompositeType(tag: DW_TAG_structure_type, name: "vlan_info", file: !77, line: 1996, flags: DIFlagFwdDecl)
!7199 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ptr", scope: !310, file: !77, line: 2007, baseType: !7200, size: 64, offset: 5696)
!7200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7201, size: 64)
!7201 = !DICompositeType(tag: DW_TAG_structure_type, name: "in_device", file: !77, line: 2007, flags: DIFlagFwdDecl)
!7202 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_ptr", scope: !310, file: !77, line: 2011, baseType: !7203, size: 64, offset: 5760)
!7203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7204, size: 64)
!7204 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet6_dev", file: !77, line: 2011, flags: DIFlagFwdDecl)
!7205 = !DIDerivedType(tag: DW_TAG_member, name: "ieee80211_ptr", scope: !310, file: !77, line: 2015, baseType: !7206, size: 64, offset: 5824)
!7206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7207, size: 64)
!7207 = !DICompositeType(tag: DW_TAG_structure_type, name: "wireless_dev", file: !77, line: 62, flags: DIFlagFwdDecl)
!7208 = !DIDerivedType(tag: DW_TAG_member, name: "ieee802154_ptr", scope: !310, file: !77, line: 2016, baseType: !7209, size: 64, offset: 5888)
!7209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7210, size: 64)
!7210 = !DICompositeType(tag: DW_TAG_structure_type, name: "wpan_dev", file: !77, line: 64, flags: DIFlagFwdDecl)
!7211 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr", scope: !310, file: !77, line: 2025, baseType: !610, size: 64, offset: 5952)
!7212 = !DIDerivedType(tag: DW_TAG_member, name: "_rx", scope: !310, file: !77, line: 2027, baseType: !7213, size: 64, offset: 6016)
!7213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7214, size: 64)
!7214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_rx_queue", file: !77, line: 736, size: 1536, elements: !7215)
!7215 = !{!7216, !7217, !7218}
!7216 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !7214, file: !77, line: 741, baseType: !5804, size: 512)
!7217 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7214, file: !77, line: 742, baseType: !336, size: 64, offset: 512)
!7218 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_rxq", scope: !7214, file: !77, line: 743, baseType: !7219, size: 512, align: 512, offset: 1024)
!7219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_rxq_info", file: !5531, line: 57, size: 512, align: 512, elements: !7220)
!7220 = !{!7221, !7222, !7223, !7224}
!7221 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7219, file: !5531, line: 58, baseType: !336, size: 64)
!7222 = !DIDerivedType(tag: DW_TAG_member, name: "queue_index", scope: !7219, file: !5531, line: 59, baseType: !1033, size: 32, offset: 64)
!7223 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !7219, file: !5531, line: 60, baseType: !1033, size: 32, offset: 96)
!7224 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !7219, file: !5531, line: 61, baseType: !5539, size: 64, offset: 128)
!7225 = !DIDerivedType(tag: DW_TAG_member, name: "num_rx_queues", scope: !310, file: !77, line: 2028, baseType: !7, size: 32, offset: 6080)
!7226 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_rx_queues", scope: !310, file: !77, line: 2029, baseType: !7, size: 32, offset: 6112)
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_prog", scope: !310, file: !77, line: 2031, baseType: !1134, size: 64, offset: 6144)
!7228 = !DIDerivedType(tag: DW_TAG_member, name: "gro_flush_timeout", scope: !310, file: !77, line: 2032, baseType: !358, size: 64, offset: 6208)
!7229 = !DIDerivedType(tag: DW_TAG_member, name: "napi_defer_hard_irqs", scope: !310, file: !77, line: 2033, baseType: !78, size: 32, offset: 6272)
!7230 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler", scope: !310, file: !77, line: 2034, baseType: !7231, size: 64, offset: 6336)
!7231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7232, size: 64)
!7232 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_func_t", file: !77, line: 430, baseType: !7233)
!7233 = !DISubroutineType(types: !7234)
!7234 = !{!7235, !7236}
!7235 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_result_t", file: !77, line: 429, baseType: !303)
!7236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64)
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler_data", scope: !310, file: !77, line: 2035, baseType: !637, size: 64, offset: 6400)
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_queue", scope: !310, file: !77, line: 2040, baseType: !7239, size: 64, offset: 6464)
!7239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7240, size: 64)
!7240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_queue", file: !77, line: 584, size: 1600, elements: !7241)
!7241 = !{!7242, !7243, !7246, !7247, !7248, !7249, !7250, !7251, !7252, !7253, !7254, !7255}
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7240, file: !77, line: 588, baseType: !336, size: 64)
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !7240, file: !77, line: 589, baseType: !7244, size: 64, offset: 64)
!7244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7245, size: 64)
!7245 = !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc", file: !77, line: 589, flags: DIFlagFwdDecl)
!7246 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_sleeping", scope: !7240, file: !77, line: 590, baseType: !7244, size: 64, offset: 128)
!7247 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !7240, file: !77, line: 592, baseType: !5804, size: 512, offset: 192)
!7248 = !DIDerivedType(tag: DW_TAG_member, name: "tx_maxrate", scope: !7240, file: !77, line: 597, baseType: !358, size: 64, offset: 704)
!7249 = !DIDerivedType(tag: DW_TAG_member, name: "trans_timeout", scope: !7240, file: !77, line: 602, baseType: !358, size: 64, offset: 768)
!7250 = !DIDerivedType(tag: DW_TAG_member, name: "sb_dev", scope: !7240, file: !77, line: 605, baseType: !336, size: 64, offset: 832)
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "_xmit_lock", scope: !7240, file: !77, line: 612, baseType: !1716, offset: 896)
!7252 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_lock_owner", scope: !7240, file: !77, line: 613, baseType: !78, size: 32, offset: 896)
!7253 = !DIDerivedType(tag: DW_TAG_member, name: "trans_start", scope: !7240, file: !77, line: 617, baseType: !358, size: 64, offset: 960)
!7254 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7240, file: !77, line: 619, baseType: !358, size: 64, offset: 1024)
!7255 = !DIDerivedType(tag: DW_TAG_member, name: "dql", scope: !7240, file: !77, line: 622, baseType: !7256, size: 512, offset: 1088)
!7256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dql", file: !7257, line: 43, size: 512, elements: !7258)
!7257 = !DIFile(filename: "./include/linux/dynamic_queue_limits.h", directory: "/home/lizy2001/genbc/linux")
!7258 = !{!7259, !7260, !7261, !7262, !7263, !7264, !7265, !7266, !7267, !7268, !7269, !7270, !7271}
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "num_queued", scope: !7256, file: !7257, line: 45, baseType: !7, size: 32)
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "adj_limit", scope: !7256, file: !7257, line: 46, baseType: !7, size: 32, offset: 32)
!7261 = !DIDerivedType(tag: DW_TAG_member, name: "last_obj_cnt", scope: !7256, file: !7257, line: 47, baseType: !7, size: 32, offset: 64)
!7262 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !7256, file: !7257, line: 51, baseType: !7, size: 32, offset: 96)
!7263 = !DIDerivedType(tag: DW_TAG_member, name: "num_completed", scope: !7256, file: !7257, line: 52, baseType: !7, size: 32, offset: 128)
!7264 = !DIDerivedType(tag: DW_TAG_member, name: "prev_ovlimit", scope: !7256, file: !7257, line: 54, baseType: !7, size: 32, offset: 160)
!7265 = !DIDerivedType(tag: DW_TAG_member, name: "prev_num_queued", scope: !7256, file: !7257, line: 55, baseType: !7, size: 32, offset: 192)
!7266 = !DIDerivedType(tag: DW_TAG_member, name: "prev_last_obj_cnt", scope: !7256, file: !7257, line: 56, baseType: !7, size: 32, offset: 224)
!7267 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_slack", scope: !7256, file: !7257, line: 58, baseType: !7, size: 32, offset: 256)
!7268 = !DIDerivedType(tag: DW_TAG_member, name: "slack_start_time", scope: !7256, file: !7257, line: 59, baseType: !358, size: 64, offset: 320)
!7269 = !DIDerivedType(tag: DW_TAG_member, name: "max_limit", scope: !7256, file: !7257, line: 62, baseType: !7, size: 32, offset: 384)
!7270 = !DIDerivedType(tag: DW_TAG_member, name: "min_limit", scope: !7256, file: !7257, line: 63, baseType: !7, size: 32, offset: 416)
!7271 = !DIDerivedType(tag: DW_TAG_member, name: "slack_hold_time", scope: !7256, file: !7257, line: 64, baseType: !7, size: 32, offset: 448)
!7272 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !310, file: !77, line: 2045, baseType: !1077, size: 256, offset: 6528)
!7273 = !DIDerivedType(tag: DW_TAG_member, name: "index_hlist", scope: !310, file: !77, line: 2049, baseType: !322, size: 128, offset: 6784)
!7274 = !DIDerivedType(tag: DW_TAG_member, name: "_tx", scope: !310, file: !77, line: 2054, baseType: !7239, size: 64, offset: 6912)
!7275 = !DIDerivedType(tag: DW_TAG_member, name: "num_tx_queues", scope: !310, file: !77, line: 2055, baseType: !7, size: 32, offset: 6976)
!7276 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_tx_queues", scope: !310, file: !77, line: 2056, baseType: !7, size: 32, offset: 7008)
!7277 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !310, file: !77, line: 2057, baseType: !7244, size: 64, offset: 7040)
!7278 = !DIDerivedType(tag: DW_TAG_member, name: "tx_queue_len", scope: !310, file: !77, line: 2058, baseType: !7, size: 32, offset: 7104)
!7279 = !DIDerivedType(tag: DW_TAG_member, name: "tx_global_lock", scope: !310, file: !77, line: 2059, baseType: !1716, offset: 7136)
!7280 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_bulkq", scope: !310, file: !77, line: 2061, baseType: !7281, size: 64, offset: 7168)
!7281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7282, size: 64)
!7282 = !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_dev_bulk_queue", file: !77, line: 879, flags: DIFlagFwdDecl)
!7283 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timer", scope: !310, file: !77, line: 2075, baseType: !3280, size: 320, offset: 7232)
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timeo", scope: !310, file: !77, line: 2076, baseType: !78, size: 32, offset: 7552)
!7285 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down_reason", scope: !310, file: !77, line: 2078, baseType: !1033, size: 32, offset: 7584)
!7286 = !DIDerivedType(tag: DW_TAG_member, name: "todo_list", scope: !310, file: !77, line: 2080, baseType: !330, size: 128, offset: 7616)
!7287 = !DIDerivedType(tag: DW_TAG_member, name: "pcpu_refcnt", scope: !310, file: !77, line: 2081, baseType: !1047, size: 64, offset: 7744)
!7288 = !DIDerivedType(tag: DW_TAG_member, name: "link_watch_list", scope: !310, file: !77, line: 2083, baseType: !330, size: 128, offset: 7808)
!7289 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !310, file: !77, line: 2091, baseType: !309, size: 8, offset: 7936, flags: DIFlagBitField, extraData: i64 7936)
!7290 = !DIDerivedType(tag: DW_TAG_member, name: "dismantle", scope: !310, file: !77, line: 2093, baseType: !817, size: 8, offset: 7944)
!7291 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_state", scope: !310, file: !77, line: 2098, baseType: !7292, size: 16, offset: 7952, flags: DIFlagBitField, extraData: i64 7952)
!7292 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !310, file: !77, line: 2095, baseType: !7, size: 32, elements: !7293)
!7293 = !{!7294, !7295}
!7294 = !DIEnumerator(name: "RTNL_LINK_INITIALIZED", value: 0, isUnsigned: true)
!7295 = !DIEnumerator(name: "RTNL_LINK_INITIALIZING", value: 1, isUnsigned: true)
!7296 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free_netdev", scope: !310, file: !77, line: 2100, baseType: !817, size: 8, offset: 7968)
!7297 = !DIDerivedType(tag: DW_TAG_member, name: "priv_destructor", scope: !310, file: !77, line: 2101, baseType: !451, size: 64, offset: 8000)
!7298 = !DIDerivedType(tag: DW_TAG_member, name: "nd_net", scope: !310, file: !77, line: 2107, baseType: !6526, size: 64, offset: 8064)
!7299 = !DIDerivedType(tag: DW_TAG_member, scope: !310, file: !77, line: 2110, baseType: !7300, size: 64, offset: 8128)
!7300 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !310, file: !77, line: 2110, size: 64, elements: !7301)
!7301 = !{!7302, !7303, !7324, !7333}
!7302 = !DIDerivedType(tag: DW_TAG_member, name: "ml_priv", scope: !7300, file: !77, line: 2111, baseType: !637, size: 64)
!7303 = !DIDerivedType(tag: DW_TAG_member, name: "lstats", scope: !7300, file: !77, line: 2112, baseType: !7304, size: 64)
!7304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7305, size: 64)
!7305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_lstats", file: !77, line: 2542, size: 128, align: 128, elements: !7306)
!7306 = !{!7307, !7322, !7323}
!7307 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !7305, file: !77, line: 2543, baseType: !7308, size: 64)
!7308 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64_stats_t", file: !3117, line: 79, baseType: !7309)
!7309 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3117, line: 77, size: 64, elements: !7310)
!7310 = !{!7311}
!7311 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !7309, file: !3117, line: 78, baseType: !7312, size: 64)
!7312 = !DIDerivedType(tag: DW_TAG_typedef, name: "local64_t", file: !7313, line: 26, baseType: !7314)
!7313 = !DIFile(filename: "./include/asm-generic/local64.h", directory: "/home/lizy2001/genbc/linux")
!7314 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7313, line: 24, size: 64, elements: !7315)
!7315 = !{!7316}
!7316 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !7314, file: !7313, line: 25, baseType: !7317, size: 64)
!7317 = !DIDerivedType(tag: DW_TAG_typedef, name: "local_t", file: !7318, line: 12, baseType: !7319)
!7318 = !DIFile(filename: "./arch/x86/include/asm/local.h", directory: "/home/lizy2001/genbc/linux")
!7319 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7318, line: 10, size: 64, elements: !7320)
!7320 = !{!7321}
!7321 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !7319, file: !7318, line: 11, baseType: !417, size: 64)
!7322 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !7305, file: !77, line: 2544, baseType: !7308, size: 64, offset: 64)
!7323 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !7305, file: !77, line: 2545, baseType: !3116, offset: 128)
!7324 = !DIDerivedType(tag: DW_TAG_member, name: "tstats", scope: !7300, file: !77, line: 2113, baseType: !7325, size: 64)
!7325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7326, size: 64)
!7326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_sw_netstats", file: !77, line: 2534, size: 256, align: 256, elements: !7327)
!7327 = !{!7328, !7329, !7330, !7331, !7332}
!7328 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !7326, file: !77, line: 2535, baseType: !377, size: 64)
!7329 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !7326, file: !77, line: 2536, baseType: !377, size: 64, offset: 64)
!7330 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !7326, file: !77, line: 2537, baseType: !377, size: 64, offset: 128)
!7331 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !7326, file: !77, line: 2538, baseType: !377, size: 64, offset: 192)
!7332 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !7326, file: !77, line: 2539, baseType: !3116, offset: 256)
!7333 = !DIDerivedType(tag: DW_TAG_member, name: "dstats", scope: !7300, file: !77, line: 2114, baseType: !7334, size: 64)
!7334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7335, size: 64)
!7335 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_dstats", file: !77, line: 2114, flags: DIFlagFwdDecl)
!7336 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !310, file: !77, line: 2124, baseType: !5800, size: 5568, offset: 8192)
!7337 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_groups", scope: !310, file: !77, line: 2125, baseType: !7338, size: 256, offset: 13760)
!7338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5882, size: 256, elements: !2318)
!7339 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_rx_queue_group", scope: !310, file: !77, line: 2126, baseType: !5882, size: 64, offset: 14016)
!7340 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_ops", scope: !310, file: !77, line: 2128, baseType: !7341, size: 64, offset: 14080)
!7341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7342, size: 64)
!7342 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7343)
!7343 = !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_ops", file: !77, line: 2128, flags: DIFlagFwdDecl)
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_size", scope: !310, file: !77, line: 2132, baseType: !7, size: 32, offset: 14144)
!7345 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_segs", scope: !310, file: !77, line: 2134, baseType: !627, size: 16, offset: 14176)
!7346 = !DIDerivedType(tag: DW_TAG_member, name: "num_tc", scope: !310, file: !77, line: 2139, baseType: !2360, size: 16, offset: 14192)
!7347 = !DIDerivedType(tag: DW_TAG_member, name: "tc_to_txq", scope: !310, file: !77, line: 2140, baseType: !7348, size: 512, offset: 14208)
!7348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7349, size: 512, elements: !315)
!7349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_tc_txq", file: !77, line: 793, size: 32, elements: !7350)
!7350 = !{!7351, !7352}
!7351 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7349, file: !77, line: 794, baseType: !627, size: 16)
!7352 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !7349, file: !77, line: 795, baseType: !627, size: 16, offset: 16)
!7353 = !DIDerivedType(tag: DW_TAG_member, name: "prio_tc_map", scope: !310, file: !77, line: 2141, baseType: !7354, size: 128, offset: 14720)
!7354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !840, size: 128, elements: !315)
!7355 = !DIDerivedType(tag: DW_TAG_member, name: "phydev", scope: !310, file: !77, line: 2149, baseType: !7356, size: 64, offset: 14848)
!7356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7357, size: 64)
!7357 = !DICompositeType(tag: DW_TAG_structure_type, name: "phy_device", file: !297, line: 536, flags: DIFlagFwdDecl)
!7358 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus", scope: !310, file: !77, line: 2150, baseType: !7359, size: 64, offset: 14912)
!7359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7360, size: 64)
!7360 = !DICompositeType(tag: DW_TAG_structure_type, name: "sfp_bus", file: !77, line: 60, flags: DIFlagFwdDecl)
!7361 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_tx_busylock", scope: !310, file: !77, line: 2151, baseType: !7362, size: 64, offset: 14976)
!7362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64)
!7363 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_running_key", scope: !310, file: !77, line: 2152, baseType: !7362, size: 64, offset: 15040)
!7364 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down", scope: !310, file: !77, line: 2153, baseType: !817, size: 8, offset: 15104)
!7365 = !DIDerivedType(tag: DW_TAG_member, name: "wol_enabled", scope: !310, file: !77, line: 2154, baseType: !7, size: 1, offset: 15112, flags: DIFlagBitField, extraData: i64 15112)
!7366 = !DIDerivedType(tag: DW_TAG_member, name: "net_notifier_list", scope: !310, file: !77, line: 2156, baseType: !330, size: 128, offset: 15168)
!7367 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic_info", scope: !310, file: !77, line: 2162, baseType: !7368, size: 64, offset: 15296)
!7368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7369, size: 64)
!7369 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7370)
!7370 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_info", file: !77, line: 68, flags: DIFlagFwdDecl)
!7371 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic", scope: !310, file: !77, line: 2163, baseType: !7372, size: 64, offset: 15360)
!7372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7373, size: 64)
!7373 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic", file: !77, line: 69, flags: DIFlagFwdDecl)
!7374 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_state", scope: !310, file: !77, line: 2166, baseType: !7375, size: 384, offset: 15424)
!7375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7376, size: 384, elements: !1638)
!7376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_entity", file: !77, line: 889, size: 128, elements: !7377)
!7377 = !{!7378, !7379}
!7378 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !7376, file: !77, line: 890, baseType: !1134, size: 64)
!7379 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !7376, file: !77, line: 891, baseType: !7380, size: 64, offset: 64)
!7380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7381, size: 64)
!7381 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_link", file: !77, line: 880, flags: DIFlagFwdDecl)
!7382 = !{!7383, !7384, !7385, !7386, !7387, !7388}
!7383 = !DIEnumerator(name: "NETREG_UNINITIALIZED", value: 0, isUnsigned: true)
!7384 = !DIEnumerator(name: "NETREG_REGISTERED", value: 1, isUnsigned: true)
!7385 = !DIEnumerator(name: "NETREG_UNREGISTERING", value: 2, isUnsigned: true)
!7386 = !DIEnumerator(name: "NETREG_UNREGISTERED", value: 3, isUnsigned: true)
!7387 = !DIEnumerator(name: "NETREG_RELEASED", value: 4, isUnsigned: true)
!7388 = !DIEnumerator(name: "NETREG_DUMMY", value: 5, isUnsigned: true)
!7389 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7390, line: 10, baseType: !7, size: 32, elements: !7391)
!7390 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!7391 = !{!7392, !7393}
!7392 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!7393 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!7394 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_event_trap_id", file: !7395, line: 122, baseType: !7, size: 32, elements: !7396)
!7395 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/trap.h", directory: "/home/lizy2001/genbc/linux")
!7396 = !{!7397, !7398, !7399, !7400, !7401, !7402}
!7397 = !DIEnumerator(name: "MLXSW_TRAP_ID_MFDE", value: 3, isUnsigned: true)
!7398 = !DIEnumerator(name: "MLXSW_TRAP_ID_PUDE", value: 8, isUnsigned: true)
!7399 = !DIEnumerator(name: "MLXSW_TRAP_ID_PMPE", value: 9, isUnsigned: true)
!7400 = !DIEnumerator(name: "MLXSW_TRAP_ID_MTWE", value: 12, isUnsigned: true)
!7401 = !DIEnumerator(name: "MLXSW_TRAP_ID_PTP_ING_FIFO", value: 45, isUnsigned: true)
!7402 = !DIEnumerator(name: "MLXSW_TRAP_ID_PTP_EGR_FIFO", value: 46, isUnsigned: true)
!7403 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_hpkt_action", file: !7404, line: 5850, baseType: !7, size: 32, elements: !7405)
!7404 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/reg.h", directory: "/home/lizy2001/genbc/linux")
!7405 = !{!7406, !7407, !7408, !7409, !7410, !7411, !7412, !7413}
!7406 = !DIEnumerator(name: "MLXSW_REG_HPKT_ACTION_FORWARD", value: 0, isUnsigned: true)
!7407 = !DIEnumerator(name: "MLXSW_REG_HPKT_ACTION_TRAP_TO_CPU", value: 1, isUnsigned: true)
!7408 = !DIEnumerator(name: "MLXSW_REG_HPKT_ACTION_MIRROR_TO_CPU", value: 2, isUnsigned: true)
!7409 = !DIEnumerator(name: "MLXSW_REG_HPKT_ACTION_DISCARD", value: 3, isUnsigned: true)
!7410 = !DIEnumerator(name: "MLXSW_REG_HPKT_ACTION_SOFT_DISCARD", value: 4, isUnsigned: true)
!7411 = !DIEnumerator(name: "MLXSW_REG_HPKT_ACTION_TRAP_AND_SOFT_DISCARD", value: 5, isUnsigned: true)
!7412 = !DIEnumerator(name: "MLXSW_REG_HPKT_ACTION_TRAP_EXCEPTION_TO_CPU", value: 6, isUnsigned: true)
!7413 = !DIEnumerator(name: "MLXSW_REG_HPKT_ACTION_SET_FW_DEFAULT", value: 15, isUnsigned: true)
!7414 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_htgt_trap_group", file: !7404, line: 5682, baseType: !7, size: 32, elements: !7415)
!7415 = !{!7416, !7417, !7418, !7419, !7420, !7421, !7422, !7423, !7424, !7425, !7426, !7427, !7428, !7429, !7430, !7431, !7432, !7433, !7434, !7435, !7436, !7437, !7438, !7439, !7440, !7441, !7442, !7443, !7444, !7445, !7446, !7447, !7448, !7449, !7450, !7451}
!7416 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_EMAD", value: 0, isUnsigned: true)
!7417 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_MFDE", value: 1, isUnsigned: true)
!7418 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_MTWE", value: 2, isUnsigned: true)
!7419 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_PMPE", value: 3, isUnsigned: true)
!7420 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_STP", value: 4, isUnsigned: true)
!7421 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_LACP", value: 5, isUnsigned: true)
!7422 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_LLDP", value: 6, isUnsigned: true)
!7423 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_MC_SNOOPING", value: 7, isUnsigned: true)
!7424 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_BGP", value: 8, isUnsigned: true)
!7425 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_OSPF", value: 9, isUnsigned: true)
!7426 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_PIM", value: 10, isUnsigned: true)
!7427 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_MULTICAST", value: 11, isUnsigned: true)
!7428 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_NEIGH_DISCOVERY", value: 12, isUnsigned: true)
!7429 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_ROUTER_EXP", value: 13, isUnsigned: true)
!7430 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_EXTERNAL_ROUTE", value: 14, isUnsigned: true)
!7431 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_IP2ME", value: 15, isUnsigned: true)
!7432 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_DHCP", value: 16, isUnsigned: true)
!7433 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_EVENT", value: 17, isUnsigned: true)
!7434 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_IPV6", value: 18, isUnsigned: true)
!7435 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_LBERROR", value: 19, isUnsigned: true)
!7436 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_PTP0", value: 20, isUnsigned: true)
!7437 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_PTP1", value: 21, isUnsigned: true)
!7438 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_VRRP", value: 22, isUnsigned: true)
!7439 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_PKT_SAMPLE", value: 23, isUnsigned: true)
!7440 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_FLOW_LOGGING", value: 24, isUnsigned: true)
!7441 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_FID_MISS", value: 25, isUnsigned: true)
!7442 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_BFD", value: 26, isUnsigned: true)
!7443 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_DUMMY", value: 27, isUnsigned: true)
!7444 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_L2_DISCARDS", value: 28, isUnsigned: true)
!7445 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_L3_DISCARDS", value: 29, isUnsigned: true)
!7446 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_L3_EXCEPTIONS", value: 30, isUnsigned: true)
!7447 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_TUNNEL_DISCARDS", value: 31, isUnsigned: true)
!7448 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_ACL_DISCARDS", value: 32, isUnsigned: true)
!7449 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_BUFFER_DISCARDS", value: 33, isUnsigned: true)
!7450 = !DIEnumerator(name: "__MLXSW_REG_HTGT_TRAP_GROUP_MAX", value: 34, isUnsigned: true)
!7451 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_MAX", value: 33, isUnsigned: true)
!7452 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_core_reg_access_type", file: !3, line: 309, baseType: !7, size: 32, elements: !7453)
!7453 = !{!7454, !7455}
!7454 = !DIEnumerator(name: "MLXSW_CORE_REG_ACCESS_TYPE_QUERY", value: 0, isUnsigned: true)
!7455 = !DIEnumerator(name: "MLXSW_CORE_REG_ACCESS_TYPE_WRITE", value: 1, isUnsigned: true)
!7456 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_emad_op_tlv_status", file: !7457, line: 34, baseType: !7, size: 32, elements: !7458)
!7457 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/emad.h", directory: "/home/lizy2001/genbc/linux")
!7458 = !{!7459, !7460, !7461, !7462, !7463, !7464, !7465, !7466, !7467, !7468, !7469}
!7459 = !DIEnumerator(name: "MLXSW_EMAD_OP_TLV_STATUS_SUCCESS", value: 0, isUnsigned: true)
!7460 = !DIEnumerator(name: "MLXSW_EMAD_OP_TLV_STATUS_BUSY", value: 1, isUnsigned: true)
!7461 = !DIEnumerator(name: "MLXSW_EMAD_OP_TLV_STATUS_VERSION_NOT_SUPPORTED", value: 2, isUnsigned: true)
!7462 = !DIEnumerator(name: "MLXSW_EMAD_OP_TLV_STATUS_UNKNOWN_TLV", value: 3, isUnsigned: true)
!7463 = !DIEnumerator(name: "MLXSW_EMAD_OP_TLV_STATUS_REGISTER_NOT_SUPPORTED", value: 4, isUnsigned: true)
!7464 = !DIEnumerator(name: "MLXSW_EMAD_OP_TLV_STATUS_CLASS_NOT_SUPPORTED", value: 5, isUnsigned: true)
!7465 = !DIEnumerator(name: "MLXSW_EMAD_OP_TLV_STATUS_METHOD_NOT_SUPPORTED", value: 6, isUnsigned: true)
!7466 = !DIEnumerator(name: "MLXSW_EMAD_OP_TLV_STATUS_BAD_PARAMETER", value: 7, isUnsigned: true)
!7467 = !DIEnumerator(name: "MLXSW_EMAD_OP_TLV_STATUS_RESOURCE_NOT_AVAILABLE", value: 8, isUnsigned: true)
!7468 = !DIEnumerator(name: "MLXSW_EMAD_OP_TLV_STATUS_MESSAGE_RECEIPT_ACK", value: 9, isUnsigned: true)
!7469 = !DIEnumerator(name: "MLXSW_EMAD_OP_TLV_STATUS_INTERNAL_ERROR", value: 112, isUnsigned: true)
!7470 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7395, line: 7, baseType: !7, size: 32, elements: !7471)
!7471 = !{!7472, !7473, !7474, !7475, !7476, !7477, !7478, !7479, !7480, !7481, !7482, !7483, !7484, !7485, !7486, !7487, !7488, !7489, !7490, !7491, !7492, !7493, !7494, !7495, !7496, !7497, !7498, !7499, !7500, !7501, !7502, !7503, !7504, !7505, !7506, !7507, !7508, !7509, !7510, !7511, !7512, !7513, !7514, !7515, !7516, !7517, !7518, !7519, !7520, !7521, !7522, !7523, !7524, !7525, !7526, !7527, !7528, !7529, !7530, !7531, !7532, !7533, !7534, !7535, !7536, !7537, !7538, !7539, !7540, !7541, !7542, !7543, !7544, !7545, !7546, !7547, !7548, !7549, !7550, !7551, !7552, !7553, !7554, !7555, !7556, !7557, !7558, !7559, !7560, !7561, !7562, !7563, !7564, !7565, !7566, !7567, !7568, !7569, !7570, !7571, !7572, !7573, !7574, !7575, !7576, !7577, !7578}
!7472 = !DIEnumerator(name: "MLXSW_TRAP_ID_FDB_MC", value: 1, isUnsigned: true)
!7473 = !DIEnumerator(name: "MLXSW_TRAP_ID_ETHEMAD", value: 5, isUnsigned: true)
!7474 = !DIEnumerator(name: "MLXSW_TRAP_ID_STP", value: 16, isUnsigned: true)
!7475 = !DIEnumerator(name: "MLXSW_TRAP_ID_LACP", value: 17, isUnsigned: true)
!7476 = !DIEnumerator(name: "MLXSW_TRAP_ID_EAPOL", value: 18, isUnsigned: true)
!7477 = !DIEnumerator(name: "MLXSW_TRAP_ID_LLDP", value: 19, isUnsigned: true)
!7478 = !DIEnumerator(name: "MLXSW_TRAP_ID_MMRP", value: 20, isUnsigned: true)
!7479 = !DIEnumerator(name: "MLXSW_TRAP_ID_MVRP", value: 21, isUnsigned: true)
!7480 = !DIEnumerator(name: "MLXSW_TRAP_ID_RPVST", value: 22, isUnsigned: true)
!7481 = !DIEnumerator(name: "MLXSW_TRAP_ID_DHCP", value: 25, isUnsigned: true)
!7482 = !DIEnumerator(name: "MLXSW_TRAP_ID_PTP0", value: 40, isUnsigned: true)
!7483 = !DIEnumerator(name: "MLXSW_TRAP_ID_PTP1", value: 41, isUnsigned: true)
!7484 = !DIEnumerator(name: "MLXSW_TRAP_ID_IGMP_QUERY", value: 48, isUnsigned: true)
!7485 = !DIEnumerator(name: "MLXSW_TRAP_ID_IGMP_V1_REPORT", value: 49, isUnsigned: true)
!7486 = !DIEnumerator(name: "MLXSW_TRAP_ID_IGMP_V2_REPORT", value: 50, isUnsigned: true)
!7487 = !DIEnumerator(name: "MLXSW_TRAP_ID_IGMP_V2_LEAVE", value: 51, isUnsigned: true)
!7488 = !DIEnumerator(name: "MLXSW_TRAP_ID_IGMP_V3_REPORT", value: 52, isUnsigned: true)
!7489 = !DIEnumerator(name: "MLXSW_TRAP_ID_PKT_SAMPLE", value: 56, isUnsigned: true)
!7490 = !DIEnumerator(name: "MLXSW_TRAP_ID_FID_MISS", value: 61, isUnsigned: true)
!7491 = !DIEnumerator(name: "MLXSW_TRAP_ID_DECAP_ECN0", value: 64, isUnsigned: true)
!7492 = !DIEnumerator(name: "MLXSW_TRAP_ID_ARPBC", value: 80, isUnsigned: true)
!7493 = !DIEnumerator(name: "MLXSW_TRAP_ID_ARPUC", value: 81, isUnsigned: true)
!7494 = !DIEnumerator(name: "MLXSW_TRAP_ID_MTUERROR", value: 82, isUnsigned: true)
!7495 = !DIEnumerator(name: "MLXSW_TRAP_ID_TTLERROR", value: 83, isUnsigned: true)
!7496 = !DIEnumerator(name: "MLXSW_TRAP_ID_LBERROR", value: 84, isUnsigned: true)
!7497 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV4_OSPF", value: 85, isUnsigned: true)
!7498 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV4_PIM", value: 88, isUnsigned: true)
!7499 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV4_VRRP", value: 89, isUnsigned: true)
!7500 = !DIEnumerator(name: "MLXSW_TRAP_ID_RPF", value: 92, isUnsigned: true)
!7501 = !DIEnumerator(name: "MLXSW_TRAP_ID_IP2ME", value: 95, isUnsigned: true)
!7502 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV6_UNSPECIFIED_ADDRESS", value: 96, isUnsigned: true)
!7503 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV6_LINK_LOCAL_DEST", value: 97, isUnsigned: true)
!7504 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV6_LINK_LOCAL_SRC", value: 98, isUnsigned: true)
!7505 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV6_ALL_NODES_LINK", value: 99, isUnsigned: true)
!7506 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV6_OSPF", value: 100, isUnsigned: true)
!7507 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV6_MLDV12_LISTENER_QUERY", value: 101, isUnsigned: true)
!7508 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV6_MLDV1_LISTENER_REPORT", value: 102, isUnsigned: true)
!7509 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV6_MLDV1_LISTENER_DONE", value: 103, isUnsigned: true)
!7510 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV6_MLDV2_LISTENER_REPORT", value: 104, isUnsigned: true)
!7511 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV6_DHCP", value: 105, isUnsigned: true)
!7512 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV6_ALL_ROUTERS_LINK", value: 111, isUnsigned: true)
!7513 = !DIEnumerator(name: "MLXSW_TRAP_ID_RTR_INGRESS0", value: 112, isUnsigned: true)
!7514 = !DIEnumerator(name: "MLXSW_TRAP_ID_RTR_INGRESS1", value: 113, isUnsigned: true)
!7515 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV6_PIM", value: 121, isUnsigned: true)
!7516 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV6_VRRP", value: 122, isUnsigned: true)
!7517 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV4_BGP", value: 136, isUnsigned: true)
!7518 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV6_BGP", value: 137, isUnsigned: true)
!7519 = !DIEnumerator(name: "MLXSW_TRAP_ID_L3_IPV6_ROUTER_SOLICITATION", value: 138, isUnsigned: true)
!7520 = !DIEnumerator(name: "MLXSW_TRAP_ID_L3_IPV6_ROUTER_ADVERTISEMENT", value: 139, isUnsigned: true)
!7521 = !DIEnumerator(name: "MLXSW_TRAP_ID_L3_IPV6_NEIGHBOR_SOLICITATION", value: 140, isUnsigned: true)
!7522 = !DIEnumerator(name: "MLXSW_TRAP_ID_L3_IPV6_NEIGHBOR_ADVERTISEMENT", value: 141, isUnsigned: true)
!7523 = !DIEnumerator(name: "MLXSW_TRAP_ID_L3_IPV6_REDIRECTION", value: 142, isUnsigned: true)
!7524 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV4_DHCP", value: 143, isUnsigned: true)
!7525 = !DIEnumerator(name: "MLXSW_TRAP_ID_HOST_MISS_IPV4", value: 144, isUnsigned: true)
!7526 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV6_MC_LINK_LOCAL_DEST", value: 145, isUnsigned: true)
!7527 = !DIEnumerator(name: "MLXSW_TRAP_ID_HOST_MISS_IPV6", value: 146, isUnsigned: true)
!7528 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPIP_DECAP_ERROR", value: 177, isUnsigned: true)
!7529 = !DIEnumerator(name: "MLXSW_TRAP_ID_NVE_DECAP_ARP", value: 184, isUnsigned: true)
!7530 = !DIEnumerator(name: "MLXSW_TRAP_ID_NVE_ENCAP_ARP", value: 189, isUnsigned: true)
!7531 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV4_BFD", value: 208, isUnsigned: true)
!7532 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV6_BFD", value: 209, isUnsigned: true)
!7533 = !DIEnumerator(name: "MLXSW_TRAP_ID_ROUTER_ALERT_IPV4", value: 214, isUnsigned: true)
!7534 = !DIEnumerator(name: "MLXSW_TRAP_ID_ROUTER_ALERT_IPV6", value: 215, isUnsigned: true)
!7535 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_NON_ROUTABLE", value: 282, isUnsigned: true)
!7536 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ROUTER2", value: 304, isUnsigned: true)
!7537 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ROUTER3", value: 305, isUnsigned: true)
!7538 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ING_PACKET_SMAC_MC", value: 320, isUnsigned: true)
!7539 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ING_SWITCH_VTAG_ALLOW", value: 328, isUnsigned: true)
!7540 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ING_SWITCH_VLAN", value: 329, isUnsigned: true)
!7541 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ING_SWITCH_STP", value: 330, isUnsigned: true)
!7542 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_LOOKUP_SWITCH_UC", value: 336, isUnsigned: true)
!7543 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_LOOKUP_SWITCH_MC_NULL", value: 337, isUnsigned: true)
!7544 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_LOOKUP_SWITCH_LB", value: 338, isUnsigned: true)
!7545 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ING_ROUTER_NON_IP_PACKET", value: 352, isUnsigned: true)
!7546 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ING_ROUTER_UC_DIP_MC_DMAC", value: 353, isUnsigned: true)
!7547 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ING_ROUTER_DIP_LB", value: 354, isUnsigned: true)
!7548 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ING_ROUTER_SIP_MC", value: 355, isUnsigned: true)
!7549 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ING_ROUTER_SIP_CLASS_E", value: 356, isUnsigned: true)
!7550 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ING_ROUTER_SIP_LB", value: 357, isUnsigned: true)
!7551 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ING_ROUTER_CORRUPTED_IP_HDR", value: 359, isUnsigned: true)
!7552 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ING_ROUTER_MC_DMAC", value: 360, isUnsigned: true)
!7553 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ING_ROUTER_SIP_DIP", value: 361, isUnsigned: true)
!7554 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ING_ROUTER_IPV4_SIP_BC", value: 362, isUnsigned: true)
!7555 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ING_ROUTER_IPV4_DIP_LOCAL_NET", value: 363, isUnsigned: true)
!7556 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ING_ROUTER_DIP_LINK_LOCAL", value: 364, isUnsigned: true)
!7557 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ROUTER_IRIF_EN", value: 376, isUnsigned: true)
!7558 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ROUTER_ERIF_EN", value: 377, isUnsigned: true)
!7559 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ROUTER_LPM4", value: 379, isUnsigned: true)
!7560 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ROUTER_LPM6", value: 380, isUnsigned: true)
!7561 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_DEC_PKT", value: 392, isUnsigned: true)
!7562 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_OVERLAY_SMAC_MC", value: 400, isUnsigned: true)
!7563 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_IPV6_MC_DIP_RESERVED_SCOPE", value: 432, isUnsigned: true)
!7564 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_IPV6_MC_DIP_INTERFACE_LOCAL_SCOPE", value: 433, isUnsigned: true)
!7565 = !DIEnumerator(name: "MLXSW_TRAP_ID_ACL0", value: 448, isUnsigned: true)
!7566 = !DIEnumerator(name: "MLXSW_TRAP_ID_ACL1", value: 449, isUnsigned: true)
!7567 = !DIEnumerator(name: "MLXSW_TRAP_ID_ACL2", value: 450, isUnsigned: true)
!7568 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_INGRESS_ACL", value: 451, isUnsigned: true)
!7569 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_EGRESS_ACL", value: 452, isUnsigned: true)
!7570 = !DIEnumerator(name: "MLXSW_TRAP_ID_MIRROR_SESSION0", value: 544, isUnsigned: true)
!7571 = !DIEnumerator(name: "MLXSW_TRAP_ID_MIRROR_SESSION1", value: 545, isUnsigned: true)
!7572 = !DIEnumerator(name: "MLXSW_TRAP_ID_MIRROR_SESSION2", value: 546, isUnsigned: true)
!7573 = !DIEnumerator(name: "MLXSW_TRAP_ID_MIRROR_SESSION3", value: 547, isUnsigned: true)
!7574 = !DIEnumerator(name: "MLXSW_TRAP_ID_MIRROR_SESSION4", value: 548, isUnsigned: true)
!7575 = !DIEnumerator(name: "MLXSW_TRAP_ID_MIRROR_SESSION5", value: 549, isUnsigned: true)
!7576 = !DIEnumerator(name: "MLXSW_TRAP_ID_MIRROR_SESSION6", value: 550, isUnsigned: true)
!7577 = !DIEnumerator(name: "MLXSW_TRAP_ID_MIRROR_SESSION7", value: 551, isUnsigned: true)
!7578 = !DIEnumerator(name: "MLXSW_TRAP_ID_MAX", value: 1023, isUnsigned: true)
!7579 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_res_id", file: !7580, line: 10, baseType: !7, size: 32, elements: !7581)
!7580 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/resources.h", directory: "/home/lizy2001/genbc/linux")
!7581 = !{!7582, !7583, !7584, !7585, !7586, !7587, !7588, !7589, !7590, !7591, !7592, !7593, !7594, !7595, !7596, !7597, !7598, !7599, !7600, !7601, !7602, !7603, !7604, !7605, !7606, !7607, !7608, !7609, !7610, !7611, !7612, !7613, !7614, !7615, !7616, !7617, !7618, !7619, !7620, !7621, !7622, !7623, !7624, !7625, !7626, !7627, !7628, !7629, !7630, !7631, !7632}
!7582 = !DIEnumerator(name: "MLXSW_RES_ID_KVD_SIZE", value: 0, isUnsigned: true)
!7583 = !DIEnumerator(name: "MLXSW_RES_ID_KVD_SINGLE_MIN_SIZE", value: 1, isUnsigned: true)
!7584 = !DIEnumerator(name: "MLXSW_RES_ID_KVD_DOUBLE_MIN_SIZE", value: 2, isUnsigned: true)
!7585 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_KVD_LINEAR_RANGE", value: 3, isUnsigned: true)
!7586 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_KVD_ACTION_SETS", value: 4, isUnsigned: true)
!7587 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_TRAP_GROUPS", value: 5, isUnsigned: true)
!7588 = !DIEnumerator(name: "MLXSW_RES_ID_CQE_V0", value: 6, isUnsigned: true)
!7589 = !DIEnumerator(name: "MLXSW_RES_ID_CQE_V1", value: 7, isUnsigned: true)
!7590 = !DIEnumerator(name: "MLXSW_RES_ID_CQE_V2", value: 8, isUnsigned: true)
!7591 = !DIEnumerator(name: "MLXSW_RES_ID_COUNTER_POOL_SIZE", value: 9, isUnsigned: true)
!7592 = !DIEnumerator(name: "MLXSW_RES_ID_COUNTER_BANK_SIZE", value: 10, isUnsigned: true)
!7593 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_SPAN", value: 11, isUnsigned: true)
!7594 = !DIEnumerator(name: "MLXSW_RES_ID_COUNTER_SIZE_PACKETS_BYTES", value: 12, isUnsigned: true)
!7595 = !DIEnumerator(name: "MLXSW_RES_ID_COUNTER_SIZE_ROUTER_BASIC", value: 13, isUnsigned: true)
!7596 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_SYSTEM_PORT", value: 14, isUnsigned: true)
!7597 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_LAG", value: 15, isUnsigned: true)
!7598 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_LAG_MEMBERS", value: 16, isUnsigned: true)
!7599 = !DIEnumerator(name: "MLXSW_RES_ID_LOCAL_PORTS_IN_1X", value: 17, isUnsigned: true)
!7600 = !DIEnumerator(name: "MLXSW_RES_ID_LOCAL_PORTS_IN_2X", value: 18, isUnsigned: true)
!7601 = !DIEnumerator(name: "MLXSW_RES_ID_LOCAL_PORTS_IN_4X", value: 19, isUnsigned: true)
!7602 = !DIEnumerator(name: "MLXSW_RES_ID_GUARANTEED_SHARED_BUFFER", value: 20, isUnsigned: true)
!7603 = !DIEnumerator(name: "MLXSW_RES_ID_CELL_SIZE", value: 21, isUnsigned: true)
!7604 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_HEADROOM_SIZE", value: 22, isUnsigned: true)
!7605 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_TCAM_REGIONS", value: 23, isUnsigned: true)
!7606 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_TCAM_RULES", value: 24, isUnsigned: true)
!7607 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_REGIONS", value: 25, isUnsigned: true)
!7608 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_GROUPS", value: 26, isUnsigned: true)
!7609 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_GROUP_SIZE", value: 27, isUnsigned: true)
!7610 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_FLEX_KEYS", value: 28, isUnsigned: true)
!7611 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_ACTION_PER_RULE", value: 29, isUnsigned: true)
!7612 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_ACTIONS_PER_SET", value: 30, isUnsigned: true)
!7613 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_ERPT_BANKS", value: 31, isUnsigned: true)
!7614 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_ERPT_BANK_SIZE", value: 32, isUnsigned: true)
!7615 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_LARGE_KEY_ID", value: 33, isUnsigned: true)
!7616 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_ERPT_ENTRIES_2KB", value: 34, isUnsigned: true)
!7617 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_ERPT_ENTRIES_4KB", value: 35, isUnsigned: true)
!7618 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_ERPT_ENTRIES_8KB", value: 36, isUnsigned: true)
!7619 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_ERPT_ENTRIES_12KB", value: 37, isUnsigned: true)
!7620 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_BF_LOG", value: 38, isUnsigned: true)
!7621 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_GLOBAL_POLICERS", value: 39, isUnsigned: true)
!7622 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_CPU_POLICERS", value: 40, isUnsigned: true)
!7623 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_VRS", value: 41, isUnsigned: true)
!7624 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_RIFS", value: 42, isUnsigned: true)
!7625 = !DIEnumerator(name: "MLXSW_RES_ID_MC_ERIF_LIST_ENTRIES", value: 43, isUnsigned: true)
!7626 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_LPM_TREES", value: 44, isUnsigned: true)
!7627 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_NVE_MC_ENTRIES_IPV4", value: 45, isUnsigned: true)
!7628 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_NVE_MC_ENTRIES_IPV6", value: 46, isUnsigned: true)
!7629 = !DIEnumerator(name: "MLXSW_RES_ID_KVD_SINGLE_SIZE", value: 47, isUnsigned: true)
!7630 = !DIEnumerator(name: "MLXSW_RES_ID_KVD_DOUBLE_SIZE", value: 48, isUnsigned: true)
!7631 = !DIEnumerator(name: "MLXSW_RES_ID_KVD_LINEAR_SIZE", value: 49, isUnsigned: true)
!7632 = !DIEnumerator(name: "__MLXSW_RES_ID_MAX", value: 50, isUnsigned: true)
!7633 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_pmtm_module_type", file: !7404, line: 5611, baseType: !7, size: 32, elements: !7634)
!7634 = !{!7635, !7636, !7637, !7638, !7639, !7640, !7641, !7642, !7643, !7644, !7645, !7646, !7647}
!7635 = !DIEnumerator(name: "MLXSW_REG_PMTM_MODULE_TYPE_BP_4X", value: 0, isUnsigned: true)
!7636 = !DIEnumerator(name: "MLXSW_REG_PMTM_MODULE_TYPE_QSFP", value: 1, isUnsigned: true)
!7637 = !DIEnumerator(name: "MLXSW_REG_PMTM_MODULE_TYPE_SFP", value: 2, isUnsigned: true)
!7638 = !DIEnumerator(name: "MLXSW_REG_PMTM_MODULE_TYPE_BP_1X", value: 4, isUnsigned: true)
!7639 = !DIEnumerator(name: "MLXSW_REG_PMTM_MODULE_TYPE_BP_2X", value: 8, isUnsigned: true)
!7640 = !DIEnumerator(name: "MLXSW_REG_PMTM_MODULE_TYPE_C2C4X", value: 10, isUnsigned: true)
!7641 = !DIEnumerator(name: "MLXSW_REG_PMTM_MODULE_TYPE_C2C2X", value: 11, isUnsigned: true)
!7642 = !DIEnumerator(name: "MLXSW_REG_PMTM_MODULE_TYPE_C2C1X", value: 12, isUnsigned: true)
!7643 = !DIEnumerator(name: "MLXSW_REG_PMTM_MODULE_TYPE_QSFP_DD", value: 14, isUnsigned: true)
!7644 = !DIEnumerator(name: "MLXSW_REG_PMTM_MODULE_TYPE_OSFP", value: 15, isUnsigned: true)
!7645 = !DIEnumerator(name: "MLXSW_REG_PMTM_MODULE_TYPE_SFP_DD", value: 16, isUnsigned: true)
!7646 = !DIEnumerator(name: "MLXSW_REG_PMTM_MODULE_TYPE_DSFP", value: 17, isUnsigned: true)
!7647 = !DIEnumerator(name: "MLXSW_REG_PMTM_MODULE_TYPE_C2C8X", value: 18, isUnsigned: true)
!7648 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_cmd_status", file: !7649, line: 123, baseType: !7, size: 32, elements: !7650)
!7649 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/cmd.h", directory: "/home/lizy2001/genbc/linux")
!7650 = !{!7651, !7652, !7653, !7654, !7655, !7656, !7657, !7658, !7659, !7660, !7661, !7662, !7663}
!7651 = !DIEnumerator(name: "MLXSW_CMD_STATUS_OK", value: 0, isUnsigned: true)
!7652 = !DIEnumerator(name: "MLXSW_CMD_STATUS_INTERNAL_ERR", value: 1, isUnsigned: true)
!7653 = !DIEnumerator(name: "MLXSW_CMD_STATUS_BAD_OP", value: 2, isUnsigned: true)
!7654 = !DIEnumerator(name: "MLXSW_CMD_STATUS_BAD_PARAM", value: 3, isUnsigned: true)
!7655 = !DIEnumerator(name: "MLXSW_CMD_STATUS_BAD_SYS_STATE", value: 4, isUnsigned: true)
!7656 = !DIEnumerator(name: "MLXSW_CMD_STATUS_BAD_RESOURCE", value: 5, isUnsigned: true)
!7657 = !DIEnumerator(name: "MLXSW_CMD_STATUS_RESOURCE_BUSY", value: 6, isUnsigned: true)
!7658 = !DIEnumerator(name: "MLXSW_CMD_STATUS_EXCEED_LIM", value: 8, isUnsigned: true)
!7659 = !DIEnumerator(name: "MLXSW_CMD_STATUS_BAD_RES_STATE", value: 9, isUnsigned: true)
!7660 = !DIEnumerator(name: "MLXSW_CMD_STATUS_BAD_INDEX", value: 10, isUnsigned: true)
!7661 = !DIEnumerator(name: "MLXSW_CMD_STATUS_BAD_NVMEM", value: 11, isUnsigned: true)
!7662 = !DIEnumerator(name: "MLXSW_CMD_STATUS_RUNNING_RESET", value: 38, isUnsigned: true)
!7663 = !DIEnumerator(name: "MLXSW_CMD_STATUS_BAD_PKT", value: 48, isUnsigned: true)
!7664 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxfw_fsm_state", file: !7665, line: 34, baseType: !7, size: 32, elements: !7666)
!7665 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/../mlxfw/mlxfw.h", directory: "/home/lizy2001/genbc/linux")
!7666 = !{!7667, !7668, !7669, !7670, !7671, !7672, !7673}
!7667 = !DIEnumerator(name: "MLXFW_FSM_STATE_IDLE", value: 0, isUnsigned: true)
!7668 = !DIEnumerator(name: "MLXFW_FSM_STATE_LOCKED", value: 1, isUnsigned: true)
!7669 = !DIEnumerator(name: "MLXFW_FSM_STATE_INITIALIZE", value: 2, isUnsigned: true)
!7670 = !DIEnumerator(name: "MLXFW_FSM_STATE_DOWNLOAD", value: 3, isUnsigned: true)
!7671 = !DIEnumerator(name: "MLXFW_FSM_STATE_VERIFY", value: 4, isUnsigned: true)
!7672 = !DIEnumerator(name: "MLXFW_FSM_STATE_APPLY", value: 5, isUnsigned: true)
!7673 = !DIEnumerator(name: "MLXFW_FSM_STATE_ACTIVATE", value: 6, isUnsigned: true)
!7674 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxfw_fsm_state_err", file: !7665, line: 44, baseType: !7, size: 32, elements: !7675)
!7675 = !{!7676, !7677, !7678, !7679, !7680, !7681, !7682, !7683, !7684, !7685, !7686}
!7676 = !DIEnumerator(name: "MLXFW_FSM_STATE_ERR_OK", value: 0, isUnsigned: true)
!7677 = !DIEnumerator(name: "MLXFW_FSM_STATE_ERR_ERROR", value: 1, isUnsigned: true)
!7678 = !DIEnumerator(name: "MLXFW_FSM_STATE_ERR_REJECTED_DIGEST_ERR", value: 2, isUnsigned: true)
!7679 = !DIEnumerator(name: "MLXFW_FSM_STATE_ERR_REJECTED_NOT_APPLICABLE", value: 3, isUnsigned: true)
!7680 = !DIEnumerator(name: "MLXFW_FSM_STATE_ERR_REJECTED_UNKNOWN_KEY", value: 4, isUnsigned: true)
!7681 = !DIEnumerator(name: "MLXFW_FSM_STATE_ERR_REJECTED_AUTH_FAILED", value: 5, isUnsigned: true)
!7682 = !DIEnumerator(name: "MLXFW_FSM_STATE_ERR_REJECTED_UNSIGNED", value: 6, isUnsigned: true)
!7683 = !DIEnumerator(name: "MLXFW_FSM_STATE_ERR_REJECTED_KEY_NOT_APPLICABLE", value: 7, isUnsigned: true)
!7684 = !DIEnumerator(name: "MLXFW_FSM_STATE_ERR_REJECTED_BAD_FORMAT", value: 8, isUnsigned: true)
!7685 = !DIEnumerator(name: "MLXFW_FSM_STATE_ERR_BLOCKED_PENDING_RESET", value: 9, isUnsigned: true)
!7686 = !DIEnumerator(name: "MLXFW_FSM_STATE_ERR_MAX", value: 10, isUnsigned: true)
!7687 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxfw_reg_mcqi_info_type", file: !7404, line: 9299, baseType: !7, size: 32, elements: !7688)
!7688 = !{!7689}
!7689 = !DIEnumerator(name: "MLXSW_REG_MCQI_INFO_TYPE_CAPABILITIES", value: 0, isUnsigned: true)
!7690 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_mcc_instruction", file: !7404, line: 9374, baseType: !7, size: 32, elements: !7691)
!7691 = !{!7692, !7693, !7694, !7695, !7696, !7697}
!7692 = !DIEnumerator(name: "MLXSW_REG_MCC_INSTRUCTION_LOCK_UPDATE_HANDLE", value: 1, isUnsigned: true)
!7693 = !DIEnumerator(name: "MLXSW_REG_MCC_INSTRUCTION_RELEASE_UPDATE_HANDLE", value: 2, isUnsigned: true)
!7694 = !DIEnumerator(name: "MLXSW_REG_MCC_INSTRUCTION_UPDATE_COMPONENT", value: 3, isUnsigned: true)
!7695 = !DIEnumerator(name: "MLXSW_REG_MCC_INSTRUCTION_VERIFY_COMPONENT", value: 4, isUnsigned: true)
!7696 = !DIEnumerator(name: "MLXSW_REG_MCC_INSTRUCTION_ACTIVATE", value: 6, isUnsigned: true)
!7697 = !DIEnumerator(name: "MLXSW_REG_MCC_INSTRUCTION_CANCEL", value: 8, isUnsigned: true)
!7698 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7457, line: 19, baseType: !7, size: 32, elements: !7699)
!7699 = !{!7700, !7701, !7702, !7703}
!7700 = !DIEnumerator(name: "MLXSW_EMAD_TLV_TYPE_END", value: 0, isUnsigned: true)
!7701 = !DIEnumerator(name: "MLXSW_EMAD_TLV_TYPE_OP", value: 1, isUnsigned: true)
!7702 = !DIEnumerator(name: "MLXSW_EMAD_TLV_TYPE_STRING", value: 2, isUnsigned: true)
!7703 = !DIEnumerator(name: "MLXSW_EMAD_TLV_TYPE_REG", value: 3, isUnsigned: true)
!7704 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7457, line: 78, baseType: !7, size: 32, elements: !7705)
!7705 = !{!7706, !7707}
!7706 = !DIEnumerator(name: "MLXSW_EMAD_OP_TLV_REQUEST", value: 0, isUnsigned: true)
!7707 = !DIEnumerator(name: "MLXSW_EMAD_OP_TLV_RESPONSE", value: 1, isUnsigned: true)
!7708 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_param_fw_load_policy_value", file: !6, line: 215, baseType: !7, size: 32, elements: !7709)
!7709 = !{!7710, !7711, !7712, !7713}
!7710 = !DIEnumerator(name: "DEVLINK_PARAM_FW_LOAD_POLICY_VALUE_DRIVER", value: 0, isUnsigned: true)
!7711 = !DIEnumerator(name: "DEVLINK_PARAM_FW_LOAD_POLICY_VALUE_FLASH", value: 1, isUnsigned: true)
!7712 = !DIEnumerator(name: "DEVLINK_PARAM_FW_LOAD_POLICY_VALUE_DISK", value: 2, isUnsigned: true)
!7713 = !DIEnumerator(name: "DEVLINK_PARAM_FW_LOAD_POLICY_VALUE_UNKNOWN", value: 3, isUnsigned: true)
!7714 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_param_generic_id", file: !5554, line: 461, baseType: !7, size: 32, elements: !7715)
!7715 = !{!7716, !7717, !7718, !7719, !7720, !7721, !7722, !7723, !7724, !7725, !7726, !7727, !7728}
!7716 = !DIEnumerator(name: "DEVLINK_PARAM_GENERIC_ID_INT_ERR_RESET", value: 0, isUnsigned: true)
!7717 = !DIEnumerator(name: "DEVLINK_PARAM_GENERIC_ID_MAX_MACS", value: 1, isUnsigned: true)
!7718 = !DIEnumerator(name: "DEVLINK_PARAM_GENERIC_ID_ENABLE_SRIOV", value: 2, isUnsigned: true)
!7719 = !DIEnumerator(name: "DEVLINK_PARAM_GENERIC_ID_REGION_SNAPSHOT", value: 3, isUnsigned: true)
!7720 = !DIEnumerator(name: "DEVLINK_PARAM_GENERIC_ID_IGNORE_ARI", value: 4, isUnsigned: true)
!7721 = !DIEnumerator(name: "DEVLINK_PARAM_GENERIC_ID_MSIX_VEC_PER_PF_MAX", value: 5, isUnsigned: true)
!7722 = !DIEnumerator(name: "DEVLINK_PARAM_GENERIC_ID_MSIX_VEC_PER_PF_MIN", value: 6, isUnsigned: true)
!7723 = !DIEnumerator(name: "DEVLINK_PARAM_GENERIC_ID_FW_LOAD_POLICY", value: 7, isUnsigned: true)
!7724 = !DIEnumerator(name: "DEVLINK_PARAM_GENERIC_ID_RESET_DEV_ON_DRV_PROBE", value: 8, isUnsigned: true)
!7725 = !DIEnumerator(name: "DEVLINK_PARAM_GENERIC_ID_ENABLE_ROCE", value: 9, isUnsigned: true)
!7726 = !DIEnumerator(name: "DEVLINK_PARAM_GENERIC_ID_ENABLE_REMOTE_DEV_RESET", value: 10, isUnsigned: true)
!7727 = !DIEnumerator(name: "__DEVLINK_PARAM_GENERIC_ID_MAX", value: 11, isUnsigned: true)
!7728 = !DIEnumerator(name: "DEVLINK_PARAM_GENERIC_ID_MAX", value: 10, isUnsigned: true)
!7729 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_param_type", file: !5554, line: 383, baseType: !7, size: 32, elements: !7730)
!7730 = !{!7731, !7732, !7733, !7734, !7735}
!7731 = !DIEnumerator(name: "DEVLINK_PARAM_TYPE_U8", value: 0, isUnsigned: true)
!7732 = !DIEnumerator(name: "DEVLINK_PARAM_TYPE_U16", value: 1, isUnsigned: true)
!7733 = !DIEnumerator(name: "DEVLINK_PARAM_TYPE_U32", value: 2, isUnsigned: true)
!7734 = !DIEnumerator(name: "DEVLINK_PARAM_TYPE_STRING", value: 3, isUnsigned: true)
!7735 = !DIEnumerator(name: "DEVLINK_PARAM_TYPE_BOOL", value: 4, isUnsigned: true)
!7736 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_param_cmode", file: !6, line: 205, baseType: !7, size: 32, elements: !7737)
!7737 = !{!7738, !7739, !7740, !7741, !7742}
!7738 = !DIEnumerator(name: "DEVLINK_PARAM_CMODE_RUNTIME", value: 0, isUnsigned: true)
!7739 = !DIEnumerator(name: "DEVLINK_PARAM_CMODE_DRIVERINIT", value: 1, isUnsigned: true)
!7740 = !DIEnumerator(name: "DEVLINK_PARAM_CMODE_PERMANENT", value: 2, isUnsigned: true)
!7741 = !DIEnumerator(name: "__DEVLINK_PARAM_CMODE_MAX", value: 3, isUnsigned: true)
!7742 = !DIEnumerator(name: "DEVLINK_PARAM_CMODE_MAX", value: 2, isUnsigned: true)
!7743 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_mfde_event_id", file: !7404, line: 10047, baseType: !7, size: 32, elements: !7744)
!7744 = !{!7745, !7746}
!7745 = !DIEnumerator(name: "MLXSW_REG_MFDE_EVENT_ID_CRSPACE_TO", value: 1, isUnsigned: true)
!7746 = !DIEnumerator(name: "MLXSW_REG_MFDE_EVENT_ID_KVD_IM_STOP", value: 2, isUnsigned: true)
!7747 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2876, line: 30, baseType: !1044, size: 64, elements: !7748)
!7748 = !{!7749, !7750, !7751, !7752, !7753, !7754, !7755, !7756, !7757, !7758, !7759, !7760, !7761, !7762, !7763, !7764, !7765, !7766, !7767, !7768, !7769, !7770, !7771, !7772, !7773, !7774, !7775, !7776, !7777}
!7749 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!7750 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!7751 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!7752 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!7753 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!7754 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!7755 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!7756 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!7757 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!7758 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!7759 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!7760 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!7761 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!7762 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!7763 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!7764 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!7765 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!7766 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!7767 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!7768 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!7769 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!7770 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!7771 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!7772 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!7773 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!7774 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!7775 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!7776 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!7777 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!7778 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !7779, line: 305, baseType: !7, size: 32, elements: !7780)
!7779 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!7780 = !{!7781, !7782, !7783, !7784}
!7781 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!7782 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!7783 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!7784 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!7785 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7404, line: 5835, baseType: !7, size: 32, elements: !7786)
!7786 = !{!7787, !7788}
!7787 = !DIEnumerator(name: "MLXSW_REG_HPKT_ACK_NOT_REQUIRED", value: 0, isUnsigned: true)
!7788 = !DIEnumerator(name: "MLXSW_REG_HPKT_ACK_REQUIRED", value: 1, isUnsigned: true)
!7789 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7404, line: 5893, baseType: !7, size: 32, elements: !7790)
!7790 = !{!7791, !7792, !7793}
!7791 = !DIEnumerator(name: "MLXSW_REG_HPKT_CTRL_PACKET_DEFAULT", value: 0, isUnsigned: true)
!7792 = !DIEnumerator(name: "MLXSW_REG_HPKT_CTRL_PACKET_NO_BUFFER", value: 1, isUnsigned: true)
!7793 = !DIEnumerator(name: "MLXSW_REG_HPKT_CTRL_PACKET_USE_BUFFER", value: 2, isUnsigned: true)
!7794 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7457, line: 83, baseType: !7, size: 32, elements: !7795)
!7795 = !{!7796, !7797, !7798, !7799}
!7796 = !DIEnumerator(name: "MLXSW_EMAD_OP_TLV_METHOD_QUERY", value: 1, isUnsigned: true)
!7797 = !DIEnumerator(name: "MLXSW_EMAD_OP_TLV_METHOD_WRITE", value: 2, isUnsigned: true)
!7798 = !DIEnumerator(name: "MLXSW_EMAD_OP_TLV_METHOD_SEND", value: 3, isUnsigned: true)
!7799 = !DIEnumerator(name: "MLXSW_EMAD_OP_TLV_METHOD_EVENT", value: 5, isUnsigned: true)
!7800 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7457, line: 29, baseType: !7, size: 32, elements: !7801)
!7801 = !{!7802, !7803}
!7802 = !DIEnumerator(name: "MLXSW_EMAD_OP_TLV_CLASS_REG_ACCESS", value: 1, isUnsigned: true)
!7803 = !DIEnumerator(name: "MLXSW_EMAD_OP_TLV_CLASS_IPC", value: 2, isUnsigned: true)
!7804 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_cmd_opcode", file: !7649, line: 58, baseType: !7, size: 32, elements: !7805)
!7805 = !{!7806, !7807, !7808, !7809, !7810, !7811, !7812, !7813, !7814, !7815, !7816, !7817, !7818, !7819, !7820, !7821, !7822, !7823}
!7806 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_QUERY_FW", value: 4, isUnsigned: true)
!7807 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_QUERY_BOARDINFO", value: 6, isUnsigned: true)
!7808 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_QUERY_AQ_CAP", value: 3, isUnsigned: true)
!7809 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_MAP_FA", value: 4095, isUnsigned: true)
!7810 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_UNMAP_FA", value: 4094, isUnsigned: true)
!7811 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_CONFIG_PROFILE", value: 256, isUnsigned: true)
!7812 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_ACCESS_REG", value: 64, isUnsigned: true)
!7813 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_SW2HW_DQ", value: 513, isUnsigned: true)
!7814 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_HW2SW_DQ", value: 514, isUnsigned: true)
!7815 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_2ERR_DQ", value: 30, isUnsigned: true)
!7816 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_QUERY_DQ", value: 34, isUnsigned: true)
!7817 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_SW2HW_CQ", value: 22, isUnsigned: true)
!7818 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_HW2SW_CQ", value: 23, isUnsigned: true)
!7819 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_QUERY_CQ", value: 24, isUnsigned: true)
!7820 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_SW2HW_EQ", value: 19, isUnsigned: true)
!7821 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_HW2SW_EQ", value: 20, isUnsigned: true)
!7822 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_QUERY_EQ", value: 21, isUnsigned: true)
!7823 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_QUERY_RESOURCES", value: 257, isUnsigned: true)
!7824 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2876, line: 308, baseType: !7, size: 32, elements: !7825)
!7825 = !{!7826, !7827, !7828, !7829, !7830, !7831, !7832, !7833, !7834, !7835, !7836, !7837, !7838, !7839}
!7826 = !DIEnumerator(name: "WQ_UNBOUND", value: 2, isUnsigned: true)
!7827 = !DIEnumerator(name: "WQ_FREEZABLE", value: 4, isUnsigned: true)
!7828 = !DIEnumerator(name: "WQ_MEM_RECLAIM", value: 8, isUnsigned: true)
!7829 = !DIEnumerator(name: "WQ_HIGHPRI", value: 16, isUnsigned: true)
!7830 = !DIEnumerator(name: "WQ_CPU_INTENSIVE", value: 32, isUnsigned: true)
!7831 = !DIEnumerator(name: "WQ_SYSFS", value: 64, isUnsigned: true)
!7832 = !DIEnumerator(name: "WQ_POWER_EFFICIENT", value: 128, isUnsigned: true)
!7833 = !DIEnumerator(name: "__WQ_DRAINING", value: 65536, isUnsigned: true)
!7834 = !DIEnumerator(name: "__WQ_ORDERED", value: 131072, isUnsigned: true)
!7835 = !DIEnumerator(name: "__WQ_LEGACY", value: 262144, isUnsigned: true)
!7836 = !DIEnumerator(name: "__WQ_ORDERED_EXPLICIT", value: 524288, isUnsigned: true)
!7837 = !DIEnumerator(name: "WQ_MAX_ACTIVE", value: 512, isUnsigned: true)
!7838 = !DIEnumerator(name: "WQ_MAX_UNBOUND_PER_CPU", value: 4, isUnsigned: true)
!7839 = !DIEnumerator(name: "WQ_DFL_ACTIVE", value: 256, isUnsigned: true)
!7840 = !{!1788, !637, !7841, !8157, !8160, !8176, !7851, !7919, !8177, !539, !3253, !78, !8178, !840, !627, !2562, !7674, !8233, !8235, !1084, !8241, !379, !8242, !8243, !1044, !358, !1033, !8245, !5560, !8254, !333, !8255, !8256, !8269}
!7841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7842, size: 64)
!7842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_reg_trans", file: !3, line: 523, size: 2048, elements: !7843)
!7843 = !{!7844, !7845, !7846, !8131, !8132, !8133, !8134, !8135, !8136, !8137, !8138, !8143, !8144, !8152, !8153, !8154, !8155, !8156}
!7844 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7842, file: !3, line: 524, baseType: !330, size: 128)
!7845 = !DIDerivedType(tag: DW_TAG_member, name: "bulk_list", scope: !7842, file: !3, line: 525, baseType: !330, size: 128, offset: 128)
!7846 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !7842, file: !3, line: 526, baseType: !7847, size: 64, offset: 256)
!7847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7848, size: 64)
!7848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_core", file: !3, line: 64, size: 4992, elements: !7849)
!7849 = !{!7850, !8058, !8093, !8094, !8095, !8096, !8097, !8098, !8106, !8110, !8111, !8114, !8117, !8118, !8119, !8120, !8126, !8129, !8130}
!7850 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !7848, file: !3, line: 65, baseType: !7851, size: 64)
!7851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7852, size: 64)
!7852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_driver", file: !7853, line: 283, size: 2560, elements: !7854)
!7853 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/core.h", directory: "/home/lizy2001/genbc/linux")
!7854 = !{!7855, !7856, !7857, !7858, !7867, !7868, !7887, !7891, !7895, !7899, !7903, !7907, !7911, !7915, !7925, !7929, !7933, !7937, !7941, !7942, !7946, !7950, !7954, !7958, !7962, !7966, !7970, !7974, !7978, !7982, !7986, !7996, !7997, !8047, !8048, !8049, !8053, !8054, !8055, !8056, !8057}
!7855 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7852, file: !7853, line: 284, baseType: !330, size: 128)
!7856 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !7852, file: !7853, line: 285, baseType: !338, size: 64, offset: 128)
!7857 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !7852, file: !7853, line: 286, baseType: !1085, size: 64, offset: 192)
!7858 = !DIDerivedType(tag: DW_TAG_member, name: "fw_req_rev", scope: !7852, file: !7853, line: 287, baseType: !7859, size: 64, offset: 256)
!7859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7860, size: 64)
!7860 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7861)
!7861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_fw_rev", file: !7853, line: 431, size: 64, elements: !7862)
!7862 = !{!7863, !7864, !7865, !7866}
!7863 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !7861, file: !7853, line: 432, baseType: !627, size: 16)
!7864 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !7861, file: !7853, line: 433, baseType: !627, size: 16, offset: 16)
!7865 = !DIDerivedType(tag: DW_TAG_member, name: "subminor", scope: !7861, file: !7853, line: 434, baseType: !627, size: 16, offset: 32)
!7866 = !DIDerivedType(tag: DW_TAG_member, name: "can_reset_minor", scope: !7861, file: !7853, line: 435, baseType: !627, size: 16, offset: 48)
!7867 = !DIDerivedType(tag: DW_TAG_member, name: "fw_filename", scope: !7852, file: !7853, line: 288, baseType: !338, size: 64, offset: 320)
!7868 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !7852, file: !7853, line: 289, baseType: !7869, size: 64, offset: 384)
!7869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7870, size: 64)
!7870 = !DISubroutineType(types: !7871)
!7871 = !{!78, !7847, !7872, !932}
!7872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7873, size: 64)
!7873 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7874)
!7874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_bus_info", file: !7853, line: 438, size: 2112, elements: !7875)
!7875 = !{!7876, !7877, !7878, !7879, !7880, !7884, !7885, !7886}
!7876 = !DIDerivedType(tag: DW_TAG_member, name: "device_kind", scope: !7874, file: !7853, line: 439, baseType: !338, size: 64)
!7877 = !DIDerivedType(tag: DW_TAG_member, name: "device_name", scope: !7874, file: !7853, line: 440, baseType: !338, size: 64, offset: 64)
!7878 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7874, file: !7853, line: 441, baseType: !5799, size: 64, offset: 128)
!7879 = !DIDerivedType(tag: DW_TAG_member, name: "fw_rev", scope: !7874, file: !7853, line: 442, baseType: !7861, size: 64, offset: 192)
!7880 = !DIDerivedType(tag: DW_TAG_member, name: "vsd", scope: !7874, file: !7853, line: 443, baseType: !7881, size: 1664, offset: 256)
!7881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !840, size: 1664, elements: !7882)
!7882 = !{!7883}
!7883 = !DISubrange(count: 208)
!7884 = !DIDerivedType(tag: DW_TAG_member, name: "psid", scope: !7874, file: !7853, line: 444, baseType: !7354, size: 128, offset: 1920)
!7885 = !DIDerivedType(tag: DW_TAG_member, name: "low_frequency", scope: !7874, file: !7853, line: 445, baseType: !840, size: 1, offset: 2048, flags: DIFlagBitField, extraData: i64 2048)
!7886 = !DIDerivedType(tag: DW_TAG_member, name: "read_frc_capable", scope: !7874, file: !7853, line: 446, baseType: !840, size: 1, offset: 2049, flags: DIFlagBitField, extraData: i64 2048)
!7887 = !DIDerivedType(tag: DW_TAG_member, name: "fini", scope: !7852, file: !7853, line: 292, baseType: !7888, size: 64, offset: 448)
!7888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7889, size: 64)
!7889 = !DISubroutineType(types: !7890)
!7890 = !{null, !7847}
!7891 = !DIDerivedType(tag: DW_TAG_member, name: "basic_trap_groups_set", scope: !7852, file: !7853, line: 293, baseType: !7892, size: 64, offset: 512)
!7892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7893, size: 64)
!7893 = !DISubroutineType(types: !7894)
!7894 = !{!78, !7847}
!7895 = !DIDerivedType(tag: DW_TAG_member, name: "port_type_set", scope: !7852, file: !7853, line: 294, baseType: !7896, size: 64, offset: 576)
!7896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7897, size: 64)
!7897 = !DISubroutineType(types: !7898)
!7898 = !{!78, !7847, !840, !24}
!7899 = !DIDerivedType(tag: DW_TAG_member, name: "port_split", scope: !7852, file: !7853, line: 296, baseType: !7900, size: 64, offset: 640)
!7900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7901, size: 64)
!7901 = !DISubroutineType(types: !7902)
!7902 = !{!78, !7847, !840, !7, !932}
!7903 = !DIDerivedType(tag: DW_TAG_member, name: "port_unsplit", scope: !7852, file: !7853, line: 298, baseType: !7904, size: 64, offset: 704)
!7904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7905, size: 64)
!7905 = !DISubroutineType(types: !7906)
!7906 = !{!78, !7847, !840, !932}
!7907 = !DIDerivedType(tag: DW_TAG_member, name: "sb_pool_get", scope: !7852, file: !7853, line: 300, baseType: !7908, size: 64, offset: 768)
!7908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7909, size: 64)
!7909 = !DISubroutineType(types: !7910)
!7910 = !{!78, !7847, !7, !627, !5629}
!7911 = !DIDerivedType(tag: DW_TAG_member, name: "sb_pool_set", scope: !7852, file: !7853, line: 303, baseType: !7912, size: 64, offset: 832)
!7912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7913, size: 64)
!7913 = !DISubroutineType(types: !7914)
!7914 = !{!78, !7847, !7, !627, !1033, !34, !932}
!7915 = !DIDerivedType(tag: DW_TAG_member, name: "sb_port_pool_get", scope: !7852, file: !7853, line: 307, baseType: !7916, size: 64, offset: 896)
!7916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7917, size: 64)
!7917 = !DISubroutineType(types: !7918)
!7918 = !{!78, !7919, !7, !627, !2562}
!7919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7920, size: 64)
!7920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_core_port", file: !3, line: 47, size: 2304, elements: !7921)
!7921 = !{!7922, !7923, !7924}
!7922 = !DIDerivedType(tag: DW_TAG_member, name: "devlink_port", scope: !7920, file: !3, line: 48, baseType: !5553, size: 2176)
!7923 = !DIDerivedType(tag: DW_TAG_member, name: "port_driver_priv", scope: !7920, file: !3, line: 49, baseType: !637, size: 64, offset: 2176)
!7924 = !DIDerivedType(tag: DW_TAG_member, name: "local_port", scope: !7920, file: !3, line: 50, baseType: !840, size: 8, offset: 2240)
!7925 = !DIDerivedType(tag: DW_TAG_member, name: "sb_port_pool_set", scope: !7852, file: !7853, line: 310, baseType: !7926, size: 64, offset: 960)
!7926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7927, size: 64)
!7927 = !DISubroutineType(types: !7928)
!7928 = !{!78, !7919, !7, !627, !1033, !932}
!7929 = !DIDerivedType(tag: DW_TAG_member, name: "sb_tc_pool_bind_get", scope: !7852, file: !7853, line: 313, baseType: !7930, size: 64, offset: 1024)
!7930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7931, size: 64)
!7931 = !DISubroutineType(types: !7932)
!7932 = !{!78, !7919, !7, !627, !30, !5652, !2562}
!7933 = !DIDerivedType(tag: DW_TAG_member, name: "sb_tc_pool_bind_set", scope: !7852, file: !7853, line: 317, baseType: !7934, size: 64, offset: 1088)
!7934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7935, size: 64)
!7935 = !DISubroutineType(types: !7936)
!7936 = !{!78, !7919, !7, !627, !30, !627, !1033, !932}
!7937 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_snapshot", scope: !7852, file: !7853, line: 322, baseType: !7938, size: 64, offset: 1152)
!7938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7939, size: 64)
!7939 = !DISubroutineType(types: !7940)
!7940 = !{!78, !7847, !7}
!7941 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_max_clear", scope: !7852, file: !7853, line: 324, baseType: !7938, size: 64, offset: 1216)
!7942 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_port_pool_get", scope: !7852, file: !7853, line: 326, baseType: !7943, size: 64, offset: 1280)
!7943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7944, size: 64)
!7944 = !DISubroutineType(types: !7945)
!7945 = !{!78, !7919, !7, !627, !2562, !2562}
!7946 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_tc_port_bind_get", scope: !7852, file: !7853, line: 329, baseType: !7947, size: 64, offset: 1344)
!7947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7948, size: 64)
!7948 = !DISubroutineType(types: !7949)
!7949 = !{!78, !7919, !7, !627, !30, !2562, !2562}
!7950 = !DIDerivedType(tag: DW_TAG_member, name: "trap_init", scope: !7852, file: !7853, line: 333, baseType: !7951, size: 64, offset: 1408)
!7951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7952, size: 64)
!7952 = !DISubroutineType(types: !7953)
!7953 = !{!78, !7847, !5715, !637}
!7954 = !DIDerivedType(tag: DW_TAG_member, name: "trap_fini", scope: !7852, file: !7853, line: 335, baseType: !7955, size: 64, offset: 1472)
!7955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7956, size: 64)
!7956 = !DISubroutineType(types: !7957)
!7957 = !{null, !7847, !5715, !637}
!7958 = !DIDerivedType(tag: DW_TAG_member, name: "trap_action_set", scope: !7852, file: !7853, line: 337, baseType: !7959, size: 64, offset: 1536)
!7959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7960, size: 64)
!7960 = !DISubroutineType(types: !7961)
!7961 = !{!78, !7847, !5715, !47, !932}
!7962 = !DIDerivedType(tag: DW_TAG_member, name: "trap_group_init", scope: !7852, file: !7853, line: 341, baseType: !7963, size: 64, offset: 1600)
!7963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7964, size: 64)
!7964 = !DISubroutineType(types: !7965)
!7965 = !{!78, !7847, !5738}
!7966 = !DIDerivedType(tag: DW_TAG_member, name: "trap_group_set", scope: !7852, file: !7853, line: 343, baseType: !7967, size: 64, offset: 1664)
!7967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7968, size: 64)
!7968 = !DISubroutineType(types: !7969)
!7969 = !{!78, !7847, !5738, !5750, !932}
!7970 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_init", scope: !7852, file: !7853, line: 347, baseType: !7971, size: 64, offset: 1728)
!7971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7972, size: 64)
!7972 = !DISubroutineType(types: !7973)
!7973 = !{!78, !7847, !5750}
!7974 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_fini", scope: !7852, file: !7853, line: 349, baseType: !7975, size: 64, offset: 1792)
!7975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7976, size: 64)
!7976 = !DISubroutineType(types: !7977)
!7977 = !{null, !7847, !5750}
!7978 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_set", scope: !7852, file: !7853, line: 351, baseType: !7979, size: 64, offset: 1856)
!7979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7980, size: 64)
!7980 = !DISubroutineType(types: !7981)
!7981 = !{!78, !7847, !5750, !377, !377, !932}
!7982 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_counter_get", scope: !7852, file: !7853, line: 355, baseType: !7983, size: 64, offset: 1920)
!7983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7984, size: 64)
!7984 = !DISubroutineType(types: !7985)
!7985 = !{!78, !7847, !5750, !5417}
!7986 = !DIDerivedType(tag: DW_TAG_member, name: "txhdr_construct", scope: !7852, file: !7853, line: 358, baseType: !7987, size: 64, offset: 1984)
!7987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7988, size: 64)
!7988 = !DISubroutineType(types: !7989)
!7989 = !{null, !461, !7990}
!7990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7991, size: 64)
!7991 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7992)
!7992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_tx_info", file: !7853, line: 51, size: 16, elements: !7993)
!7993 = !{!7994, !7995}
!7994 = !DIDerivedType(tag: DW_TAG_member, name: "local_port", scope: !7992, file: !7853, line: 52, baseType: !840, size: 8)
!7995 = !DIDerivedType(tag: DW_TAG_member, name: "is_emad", scope: !7992, file: !7853, line: 53, baseType: !817, size: 8, offset: 8)
!7996 = !DIDerivedType(tag: DW_TAG_member, name: "resources_register", scope: !7852, file: !7853, line: 360, baseType: !7892, size: 64, offset: 2048)
!7997 = !DIDerivedType(tag: DW_TAG_member, name: "kvd_sizes_get", scope: !7852, file: !7853, line: 361, baseType: !7998, size: 64, offset: 2112)
!7998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7999, size: 64)
!7999 = !DISubroutineType(types: !8000)
!8000 = !{!78, !7847, !8001, !5417, !5417, !5417}
!8001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8002, size: 64)
!8002 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8003)
!8003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_config_profile", file: !7853, line: 245, size: 544, elements: !8004)
!8004 = !{!8005, !8006, !8007, !8008, !8009, !8010, !8011, !8012, !8013, !8014, !8015, !8016, !8017, !8018, !8019, !8020, !8021, !8022, !8023, !8024, !8025, !8026, !8027, !8028, !8029, !8030, !8031, !8032, !8033, !8034, !8035, !8036, !8037, !8038, !8039}
!8005 = !DIDerivedType(tag: DW_TAG_member, name: "used_max_vepa_channels", scope: !8003, file: !7853, line: 246, baseType: !627, size: 1, flags: DIFlagBitField, extraData: i64 0)
!8006 = !DIDerivedType(tag: DW_TAG_member, name: "used_max_mid", scope: !8003, file: !7853, line: 247, baseType: !627, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!8007 = !DIDerivedType(tag: DW_TAG_member, name: "used_max_pgt", scope: !8003, file: !7853, line: 248, baseType: !627, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!8008 = !DIDerivedType(tag: DW_TAG_member, name: "used_max_system_port", scope: !8003, file: !7853, line: 249, baseType: !627, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!8009 = !DIDerivedType(tag: DW_TAG_member, name: "used_max_vlan_groups", scope: !8003, file: !7853, line: 250, baseType: !627, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!8010 = !DIDerivedType(tag: DW_TAG_member, name: "used_max_regions", scope: !8003, file: !7853, line: 251, baseType: !627, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!8011 = !DIDerivedType(tag: DW_TAG_member, name: "used_flood_tables", scope: !8003, file: !7853, line: 252, baseType: !627, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!8012 = !DIDerivedType(tag: DW_TAG_member, name: "used_flood_mode", scope: !8003, file: !7853, line: 253, baseType: !627, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!8013 = !DIDerivedType(tag: DW_TAG_member, name: "used_max_ib_mc", scope: !8003, file: !7853, line: 254, baseType: !627, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!8014 = !DIDerivedType(tag: DW_TAG_member, name: "used_max_pkey", scope: !8003, file: !7853, line: 255, baseType: !627, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!8015 = !DIDerivedType(tag: DW_TAG_member, name: "used_ar_sec", scope: !8003, file: !7853, line: 256, baseType: !627, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!8016 = !DIDerivedType(tag: DW_TAG_member, name: "used_adaptive_routing_group_cap", scope: !8003, file: !7853, line: 257, baseType: !627, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!8017 = !DIDerivedType(tag: DW_TAG_member, name: "used_kvd_sizes", scope: !8003, file: !7853, line: 258, baseType: !627, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!8018 = !DIDerivedType(tag: DW_TAG_member, name: "max_vepa_channels", scope: !8003, file: !7853, line: 259, baseType: !840, size: 8, offset: 16)
!8019 = !DIDerivedType(tag: DW_TAG_member, name: "max_mid", scope: !8003, file: !7853, line: 260, baseType: !627, size: 16, offset: 32)
!8020 = !DIDerivedType(tag: DW_TAG_member, name: "max_pgt", scope: !8003, file: !7853, line: 261, baseType: !627, size: 16, offset: 48)
!8021 = !DIDerivedType(tag: DW_TAG_member, name: "max_system_port", scope: !8003, file: !7853, line: 262, baseType: !627, size: 16, offset: 64)
!8022 = !DIDerivedType(tag: DW_TAG_member, name: "max_vlan_groups", scope: !8003, file: !7853, line: 263, baseType: !627, size: 16, offset: 80)
!8023 = !DIDerivedType(tag: DW_TAG_member, name: "max_regions", scope: !8003, file: !7853, line: 264, baseType: !627, size: 16, offset: 96)
!8024 = !DIDerivedType(tag: DW_TAG_member, name: "max_flood_tables", scope: !8003, file: !7853, line: 265, baseType: !840, size: 8, offset: 112)
!8025 = !DIDerivedType(tag: DW_TAG_member, name: "max_vid_flood_tables", scope: !8003, file: !7853, line: 266, baseType: !840, size: 8, offset: 120)
!8026 = !DIDerivedType(tag: DW_TAG_member, name: "flood_mode", scope: !8003, file: !7853, line: 267, baseType: !840, size: 8, offset: 128)
!8027 = !DIDerivedType(tag: DW_TAG_member, name: "max_fid_offset_flood_tables", scope: !8003, file: !7853, line: 268, baseType: !840, size: 8, offset: 136)
!8028 = !DIDerivedType(tag: DW_TAG_member, name: "fid_offset_flood_table_size", scope: !8003, file: !7853, line: 269, baseType: !627, size: 16, offset: 144)
!8029 = !DIDerivedType(tag: DW_TAG_member, name: "max_fid_flood_tables", scope: !8003, file: !7853, line: 270, baseType: !840, size: 8, offset: 160)
!8030 = !DIDerivedType(tag: DW_TAG_member, name: "fid_flood_table_size", scope: !8003, file: !7853, line: 271, baseType: !627, size: 16, offset: 176)
!8031 = !DIDerivedType(tag: DW_TAG_member, name: "max_ib_mc", scope: !8003, file: !7853, line: 272, baseType: !627, size: 16, offset: 192)
!8032 = !DIDerivedType(tag: DW_TAG_member, name: "max_pkey", scope: !8003, file: !7853, line: 273, baseType: !627, size: 16, offset: 208)
!8033 = !DIDerivedType(tag: DW_TAG_member, name: "ar_sec", scope: !8003, file: !7853, line: 274, baseType: !840, size: 8, offset: 224)
!8034 = !DIDerivedType(tag: DW_TAG_member, name: "adaptive_routing_group_cap", scope: !8003, file: !7853, line: 275, baseType: !627, size: 16, offset: 240)
!8035 = !DIDerivedType(tag: DW_TAG_member, name: "arn", scope: !8003, file: !7853, line: 276, baseType: !840, size: 8, offset: 256)
!8036 = !DIDerivedType(tag: DW_TAG_member, name: "kvd_linear_size", scope: !8003, file: !7853, line: 277, baseType: !1033, size: 32, offset: 288)
!8037 = !DIDerivedType(tag: DW_TAG_member, name: "kvd_hash_single_parts", scope: !8003, file: !7853, line: 278, baseType: !840, size: 8, offset: 320)
!8038 = !DIDerivedType(tag: DW_TAG_member, name: "kvd_hash_double_parts", scope: !8003, file: !7853, line: 279, baseType: !840, size: 8, offset: 328)
!8039 = !DIDerivedType(tag: DW_TAG_member, name: "swid_config", scope: !8003, file: !7853, line: 280, baseType: !8040, size: 192, offset: 336)
!8040 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8041, size: 192, elements: !2479)
!8041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_swid_config", file: !7853, line: 238, size: 24, elements: !8042)
!8042 = !{!8043, !8044, !8045, !8046}
!8043 = !DIDerivedType(tag: DW_TAG_member, name: "used_type", scope: !8041, file: !7853, line: 239, baseType: !840, size: 1, flags: DIFlagBitField, extraData: i64 0)
!8044 = !DIDerivedType(tag: DW_TAG_member, name: "used_properties", scope: !8041, file: !7853, line: 240, baseType: !840, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!8045 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8041, file: !7853, line: 241, baseType: !840, size: 8, offset: 8)
!8046 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !8041, file: !7853, line: 242, baseType: !840, size: 8, offset: 16)
!8047 = !DIDerivedType(tag: DW_TAG_member, name: "params_register", scope: !7852, file: !7853, line: 365, baseType: !7892, size: 64, offset: 2176)
!8048 = !DIDerivedType(tag: DW_TAG_member, name: "params_unregister", scope: !7852, file: !7853, line: 366, baseType: !7888, size: 64, offset: 2240)
!8049 = !DIDerivedType(tag: DW_TAG_member, name: "ptp_transmitted", scope: !7852, file: !7853, line: 371, baseType: !8050, size: 64, offset: 2304)
!8050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8051, size: 64)
!8051 = !DISubroutineType(types: !8052)
!8052 = !{null, !7847, !461, !840}
!8053 = !DIDerivedType(tag: DW_TAG_member, name: "txhdr_len", scope: !7852, file: !7853, line: 374, baseType: !840, size: 8, offset: 2368)
!8054 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !7852, file: !7853, line: 375, baseType: !8001, size: 64, offset: 2432)
!8055 = !DIDerivedType(tag: DW_TAG_member, name: "res_query_enabled", scope: !7852, file: !7853, line: 376, baseType: !817, size: 8, offset: 2496)
!8056 = !DIDerivedType(tag: DW_TAG_member, name: "fw_fatal_enabled", scope: !7852, file: !7853, line: 377, baseType: !817, size: 8, offset: 2504)
!8057 = !DIDerivedType(tag: DW_TAG_member, name: "temp_warn_enabled", scope: !7852, file: !7853, line: 378, baseType: !817, size: 8, offset: 2512)
!8058 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !7848, file: !3, line: 66, baseType: !8059, size: 64, offset: 64)
!8059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8060, size: 64)
!8060 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8061)
!8061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_bus", file: !7853, line: 411, size: 576, elements: !8062)
!8062 = !{!8063, !8064, !8077, !8078, !8082, !8086, !8090, !8091, !8092}
!8063 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !8061, file: !7853, line: 412, baseType: !338, size: 64)
!8064 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !8061, file: !7853, line: 413, baseType: !8065, size: 64, offset: 64)
!8065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8066, size: 64)
!8066 = !DISubroutineType(types: !8067)
!8067 = !{!78, !637, !7847, !8001, !8068}
!8068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8069, size: 64)
!8069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_res", file: !7580, line: 119, size: 3648, elements: !8070)
!8070 = !{!8071, !8075}
!8071 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !8069, file: !7580, line: 120, baseType: !8072, size: 400)
!8072 = !DICompositeType(tag: DW_TAG_array_type, baseType: !817, size: 400, elements: !8073)
!8073 = !{!8074}
!8074 = !DISubrange(count: 50)
!8075 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !8069, file: !7580, line: 121, baseType: !8076, size: 3200, offset: 448)
!8076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !377, size: 3200, elements: !8073)
!8077 = !DIDerivedType(tag: DW_TAG_member, name: "fini", scope: !8061, file: !7853, line: 416, baseType: !1461, size: 64, offset: 128)
!8078 = !DIDerivedType(tag: DW_TAG_member, name: "skb_transmit_busy", scope: !8061, file: !7853, line: 417, baseType: !8079, size: 64, offset: 192)
!8079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8080, size: 64)
!8080 = !DISubroutineType(types: !8081)
!8081 = !{!817, !637, !7990}
!8082 = !DIDerivedType(tag: DW_TAG_member, name: "skb_transmit", scope: !8061, file: !7853, line: 419, baseType: !8083, size: 64, offset: 256)
!8083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8084, size: 64)
!8084 = !DISubroutineType(types: !8085)
!8085 = !{!78, !637, !461, !7990}
!8086 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_exec", scope: !8061, file: !7853, line: 421, baseType: !8087, size: 64, offset: 320)
!8087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8088, size: 64)
!8088 = !DISubroutineType(types: !8089)
!8089 = !{!78, !637, !627, !840, !1033, !817, !1084, !1085, !1084, !1085, !839}
!8090 = !DIDerivedType(tag: DW_TAG_member, name: "read_frc_h", scope: !8061, file: !7853, line: 426, baseType: !5197, size: 64, offset: 384)
!8091 = !DIDerivedType(tag: DW_TAG_member, name: "read_frc_l", scope: !8061, file: !7853, line: 427, baseType: !5197, size: 64, offset: 448)
!8092 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !8061, file: !7853, line: 428, baseType: !840, size: 8, offset: 512)
!8093 = !DIDerivedType(tag: DW_TAG_member, name: "bus_priv", scope: !7848, file: !3, line: 67, baseType: !637, size: 64, offset: 128)
!8094 = !DIDerivedType(tag: DW_TAG_member, name: "bus_info", scope: !7848, file: !3, line: 68, baseType: !7872, size: 64, offset: 192)
!8095 = !DIDerivedType(tag: DW_TAG_member, name: "emad_wq", scope: !7848, file: !3, line: 69, baseType: !4762, size: 64, offset: 256)
!8096 = !DIDerivedType(tag: DW_TAG_member, name: "rx_listener_list", scope: !7848, file: !3, line: 70, baseType: !330, size: 128, offset: 320)
!8097 = !DIDerivedType(tag: DW_TAG_member, name: "event_listener_list", scope: !7848, file: !3, line: 71, baseType: !330, size: 128, offset: 448)
!8098 = !DIDerivedType(tag: DW_TAG_member, name: "emad", scope: !7848, file: !3, line: 78, baseType: !8099, size: 256, offset: 576)
!8099 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7848, file: !3, line: 72, size: 256, elements: !8100)
!8100 = !{!8101, !8102, !8103, !8104, !8105}
!8101 = !DIDerivedType(tag: DW_TAG_member, name: "tid", scope: !8099, file: !3, line: 73, baseType: !419, size: 64)
!8102 = !DIDerivedType(tag: DW_TAG_member, name: "trans_list", scope: !8099, file: !3, line: 74, baseType: !330, size: 128, offset: 64)
!8103 = !DIDerivedType(tag: DW_TAG_member, name: "trans_list_lock", scope: !8099, file: !3, line: 75, baseType: !1716, offset: 192)
!8104 = !DIDerivedType(tag: DW_TAG_member, name: "use_emad", scope: !8099, file: !3, line: 76, baseType: !817, size: 8, offset: 192)
!8105 = !DIDerivedType(tag: DW_TAG_member, name: "enable_string_tlv", scope: !8099, file: !3, line: 77, baseType: !817, size: 8, offset: 200)
!8106 = !DIDerivedType(tag: DW_TAG_member, name: "lag", scope: !7848, file: !3, line: 81, baseType: !8107, size: 64, offset: 832)
!8107 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7848, file: !3, line: 79, size: 64, elements: !8108)
!8108 = !{!8109}
!8109 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !8107, file: !3, line: 80, baseType: !839, size: 64)
!8110 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !7848, file: !3, line: 82, baseType: !8069, size: 3648, offset: 896)
!8111 = !DIDerivedType(tag: DW_TAG_member, name: "hwmon", scope: !7848, file: !3, line: 83, baseType: !8112, size: 64, offset: 4544)
!8112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8113, size: 64)
!8113 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_hwmon", file: !7853, line: 449, flags: DIFlagFwdDecl)
!8114 = !DIDerivedType(tag: DW_TAG_member, name: "thermal", scope: !7848, file: !3, line: 84, baseType: !8115, size: 64, offset: 4608)
!8115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8116, size: 64)
!8116 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_thermal", file: !7853, line: 473, flags: DIFlagFwdDecl)
!8117 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !7848, file: !3, line: 85, baseType: !7919, size: 64, offset: 4672)
!8118 = !DIDerivedType(tag: DW_TAG_member, name: "max_ports", scope: !7848, file: !3, line: 86, baseType: !7, size: 32, offset: 4736)
!8119 = !DIDerivedType(tag: DW_TAG_member, name: "fw_flash_in_progress", scope: !7848, file: !3, line: 87, baseType: !817, size: 8, offset: 4768)
!8120 = !DIDerivedType(tag: DW_TAG_member, name: "health", scope: !7848, file: !3, line: 90, baseType: !8121, size: 64, offset: 4800)
!8121 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7848, file: !3, line: 88, size: 64, elements: !8122)
!8122 = !{!8123}
!8123 = !DIDerivedType(tag: DW_TAG_member, name: "fw_fatal", scope: !8121, file: !3, line: 89, baseType: !8124, size: 64)
!8124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8125, size: 64)
!8125 = !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_health_reporter", file: !5554, line: 629, flags: DIFlagFwdDecl)
!8126 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !7848, file: !3, line: 91, baseType: !8127, size: 64, offset: 4864)
!8127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8128, size: 64)
!8128 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_env", file: !7853, line: 226, flags: DIFlagFwdDecl)
!8129 = !DIDerivedType(tag: DW_TAG_member, name: "is_initialized", scope: !7848, file: !3, line: 92, baseType: !817, size: 8, offset: 4928)
!8130 = !DIDerivedType(tag: DW_TAG_member, name: "driver_priv", scope: !7848, file: !3, line: 93, baseType: !4289, offset: 4992)
!8131 = !DIDerivedType(tag: DW_TAG_member, name: "tx_skb", scope: !7842, file: !3, line: 527, baseType: !461, size: 64, offset: 320)
!8132 = !DIDerivedType(tag: DW_TAG_member, name: "tx_info", scope: !7842, file: !3, line: 528, baseType: !7992, size: 16, offset: 384)
!8133 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_dw", scope: !7842, file: !3, line: 529, baseType: !6583, size: 704, offset: 448)
!8134 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !7842, file: !3, line: 530, baseType: !7, size: 32, offset: 1152)
!8135 = !DIDerivedType(tag: DW_TAG_member, name: "tid", scope: !7842, file: !3, line: 531, baseType: !377, size: 64, offset: 1216)
!8136 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !7842, file: !3, line: 532, baseType: !2643, size: 192, offset: 1280)
!8137 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !7842, file: !3, line: 533, baseType: !429, size: 32, offset: 1472)
!8138 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !7842, file: !3, line: 534, baseType: !8139, size: 64, offset: 1536)
!8139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8140, size: 64)
!8140 = !DIDerivedType(tag: DW_TAG_typedef, name: "mlxsw_reg_trans_cb_t", file: !7853, line: 164, baseType: !8141)
!8141 = !DISubroutineType(types: !8142)
!8142 = !{null, !7847, !1084, !1085, !358}
!8143 = !DIDerivedType(tag: DW_TAG_member, name: "cb_priv", scope: !7842, file: !3, line: 535, baseType: !358, size: 64, offset: 1600)
!8144 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !7842, file: !3, line: 536, baseType: !8145, size: 64, offset: 1664)
!8145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8146, size: 64)
!8146 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8147)
!8147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_reg_info", file: !7404, line: 15, size: 128, elements: !8148)
!8148 = !{!8149, !8150, !8151}
!8149 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8147, file: !7404, line: 16, baseType: !627, size: 16)
!8150 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8147, file: !7404, line: 17, baseType: !627, size: 16, offset: 16)
!8151 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8147, file: !7404, line: 18, baseType: !338, size: 64, offset: 64)
!8152 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7842, file: !3, line: 537, baseType: !7452, size: 32, offset: 1728)
!8153 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !7842, file: !3, line: 538, baseType: !78, size: 32, offset: 1760)
!8154 = !DIDerivedType(tag: DW_TAG_member, name: "emad_err_string", scope: !7842, file: !3, line: 539, baseType: !1084, size: 64, offset: 1792)
!8155 = !DIDerivedType(tag: DW_TAG_member, name: "emad_status", scope: !7842, file: !3, line: 540, baseType: !7456, size: 32, offset: 1856)
!8156 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7842, file: !3, line: 541, baseType: !345, size: 128, align: 64, offset: 1920)
!8157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8158, size: 64)
!8158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8159)
!8159 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !333)
!8160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8161, size: 64)
!8161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_rx_listener_item", file: !3, line: 154, size: 384, elements: !8162)
!8162 = !{!8163, !8164, !8174, !8175}
!8163 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !8161, file: !3, line: 155, baseType: !330, size: 128)
!8164 = !DIDerivedType(tag: DW_TAG_member, name: "rxl", scope: !8161, file: !3, line: 156, baseType: !8165, size: 128, offset: 128)
!8165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_rx_listener", file: !7853, line: 63, size: 128, elements: !8166)
!8166 = !{!8167, !8171, !8172, !8173}
!8167 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !8165, file: !7853, line: 64, baseType: !8168, size: 64)
!8168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8169, size: 64)
!8169 = !DISubroutineType(types: !8170)
!8170 = !{null, !461, !840, !637}
!8171 = !DIDerivedType(tag: DW_TAG_member, name: "local_port", scope: !8165, file: !7853, line: 65, baseType: !840, size: 8, offset: 64)
!8172 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_reason", scope: !8165, file: !7853, line: 66, baseType: !840, size: 8, offset: 72)
!8173 = !DIDerivedType(tag: DW_TAG_member, name: "trap_id", scope: !8165, file: !7853, line: 67, baseType: !627, size: 16, offset: 80)
!8174 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !8161, file: !3, line: 157, baseType: !637, size: 64, offset: 256)
!8175 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !8161, file: !3, line: 158, baseType: !817, size: 8, offset: 320)
!8176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8159, size: 64)
!8177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3253, size: 64)
!8178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8179, size: 64)
!8179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_core_fw_info", file: !3, line: 884, size: 320, elements: !8180)
!8180 = !{!8181, !8232}
!8181 = !DIDerivedType(tag: DW_TAG_member, name: "mlxfw_dev", scope: !8179, file: !3, line: 885, baseType: !8182, size: 256)
!8182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxfw_dev", file: !7665, line: 12, size: 256, elements: !8183)
!8183 = !{!8184, !8229, !8230, !8231}
!8184 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !8182, file: !7665, line: 13, baseType: !8185, size: 64)
!8185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8186, size: 64)
!8186 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8187)
!8187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxfw_dev_ops", file: !7665, line: 72, size: 640, elements: !8188)
!8188 = !{!8189, !8194, !8198, !8202, !8206, !8210, !8214, !8218, !8224, !8228}
!8189 = !DIDerivedType(tag: DW_TAG_member, name: "component_query", scope: !8187, file: !7665, line: 73, baseType: !8190, size: 64)
!8190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8191, size: 64)
!8191 = !DISubroutineType(types: !8192)
!8192 = !{!78, !8193, !627, !2562, !839, !5652}
!8193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8182, size: 64)
!8194 = !DIDerivedType(tag: DW_TAG_member, name: "fsm_lock", scope: !8187, file: !7665, line: 77, baseType: !8195, size: 64, offset: 64)
!8195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8196, size: 64)
!8196 = !DISubroutineType(types: !8197)
!8197 = !{!78, !8193, !2562}
!8198 = !DIDerivedType(tag: DW_TAG_member, name: "fsm_component_update", scope: !8187, file: !7665, line: 79, baseType: !8199, size: 64, offset: 128)
!8199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8200, size: 64)
!8200 = !DISubroutineType(types: !8201)
!8201 = !{!78, !8193, !1033, !627, !1033}
!8202 = !DIDerivedType(tag: DW_TAG_member, name: "fsm_block_download", scope: !8187, file: !7665, line: 82, baseType: !8203, size: 64, offset: 192)
!8203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8204, size: 64)
!8204 = !DISubroutineType(types: !8205)
!8205 = !{!78, !8193, !1033, !839, !627, !1033}
!8206 = !DIDerivedType(tag: DW_TAG_member, name: "fsm_component_verify", scope: !8187, file: !7665, line: 85, baseType: !8207, size: 64, offset: 256)
!8207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8208, size: 64)
!8208 = !DISubroutineType(types: !8209)
!8209 = !{!78, !8193, !1033, !627}
!8210 = !DIDerivedType(tag: DW_TAG_member, name: "fsm_activate", scope: !8187, file: !7665, line: 88, baseType: !8211, size: 64, offset: 320)
!8211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8212, size: 64)
!8212 = !DISubroutineType(types: !8213)
!8213 = !{!78, !8193, !1033}
!8214 = !DIDerivedType(tag: DW_TAG_member, name: "fsm_reactivate", scope: !8187, file: !7665, line: 90, baseType: !8215, size: 64, offset: 384)
!8215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8216, size: 64)
!8216 = !DISubroutineType(types: !8217)
!8217 = !{!78, !8193, !839}
!8218 = !DIDerivedType(tag: DW_TAG_member, name: "fsm_query_state", scope: !8187, file: !7665, line: 92, baseType: !8219, size: 64, offset: 448)
!8219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8220, size: 64)
!8220 = !DISubroutineType(types: !8221)
!8221 = !{!78, !8193, !1033, !8222, !8223}
!8222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7664, size: 64)
!8223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7674, size: 64)
!8224 = !DIDerivedType(tag: DW_TAG_member, name: "fsm_cancel", scope: !8187, file: !7665, line: 96, baseType: !8225, size: 64, offset: 512)
!8225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8226, size: 64)
!8226 = !DISubroutineType(types: !8227)
!8227 = !{null, !8193, !1033}
!8228 = !DIDerivedType(tag: DW_TAG_member, name: "fsm_release", scope: !8187, file: !7665, line: 98, baseType: !8225, size: 64, offset: 576)
!8229 = !DIDerivedType(tag: DW_TAG_member, name: "psid", scope: !8182, file: !7665, line: 14, baseType: !338, size: 64, offset: 64)
!8230 = !DIDerivedType(tag: DW_TAG_member, name: "psid_size", scope: !8182, file: !7665, line: 15, baseType: !627, size: 16, offset: 128)
!8231 = !DIDerivedType(tag: DW_TAG_member, name: "devlink", scope: !8182, file: !7665, line: 16, baseType: !5560, size: 64, offset: 192)
!8232 = !DIDerivedType(tag: DW_TAG_member, name: "mlxsw_core", scope: !8179, file: !3, line: 886, baseType: !7847, size: 64, offset: 256)
!8233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8234, size: 64)
!8234 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !423)
!8235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8236, size: 64)
!8236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_emad_tlv_offsets", file: !3, line: 409, size: 48, elements: !8237)
!8237 = !{!8238, !8239, !8240}
!8238 = !DIDerivedType(tag: DW_TAG_member, name: "op_tlv", scope: !8236, file: !3, line: 410, baseType: !627, size: 16)
!8239 = !DIDerivedType(tag: DW_TAG_member, name: "string_tlv", scope: !8236, file: !3, line: 411, baseType: !627, size: 16, offset: 16)
!8240 = !DIDerivedType(tag: DW_TAG_member, name: "reg_tlv", scope: !8236, file: !3, line: 412, baseType: !627, size: 16, offset: 32)
!8241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8242, size: 64)
!8242 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be64", file: !571, line: 34, baseType: !379)
!8243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8244, size: 64)
!8244 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !78)
!8245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8246, size: 64)
!8246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_core_health_event", file: !3, line: 1632, size: 512, elements: !8247)
!8247 = !{!8248, !8249, !8253}
!8248 = !DIDerivedType(tag: DW_TAG_member, name: "mlxsw_core", scope: !8246, file: !3, line: 1633, baseType: !7847, size: 64)
!8249 = !DIDerivedType(tag: DW_TAG_member, name: "mfde_pl", scope: !8246, file: !3, line: 1634, baseType: !8250, size: 192, offset: 64)
!8250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 192, elements: !8251)
!8251 = !{!8252}
!8252 = !DISubrange(count: 24)
!8253 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !8246, file: !3, line: 1635, baseType: !2875, size: 256, offset: 256)
!8254 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !323, line: 37, baseType: !358)
!8255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 64)
!8256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8257, size: 64)
!8257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_event_listener_item", file: !3, line: 161, size: 320, elements: !8258)
!8258 = !{!8259, !8260, !8268}
!8259 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !8257, file: !3, line: 162, baseType: !330, size: 128)
!8260 = !DIDerivedType(tag: DW_TAG_member, name: "el", scope: !8257, file: !3, line: 163, baseType: !8261, size: 128, offset: 128)
!8261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_event_listener", file: !7853, line: 70, size: 128, elements: !8262)
!8262 = !{!8263, !8267}
!8263 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !8261, file: !7853, line: 71, baseType: !8264, size: 64)
!8264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8265, size: 64)
!8265 = !DISubroutineType(types: !8266)
!8266 = !{null, !8145, !1084, !637}
!8267 = !DIDerivedType(tag: DW_TAG_member, name: "trap_id", scope: !8261, file: !7853, line: 73, baseType: !7394, size: 32, offset: 64)
!8268 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !8257, file: !3, line: 164, baseType: !637, size: 64, offset: 256)
!8269 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcu_callback_t", file: !323, line: 222, baseType: !350)
!8270 = !{!8271, !8273, !8278, !8283, !8286, !8291, !8296, !8298, !0, !8300, !8302, !8304, !8310, !8313, !8315, !8332, !8334, !8336, !8338, !8340, !8342, !8344, !8346, !8348, !8350, !8352, !8354, !8356, !8358, !8360, !8362, !8364, !8366, !8368, !8370, !8372, !8374, !8376, !8378, !8380, !8382, !8400, !8402, !8404, !8406, !8408, !8410, !8442, !8448, !8472, !8474, !8476, !8478, !8480, !8482, !8484, !8486, !8488, !8490, !8492, !8494, !8496, !8498, !8500, !8502, !8504, !8506, !8508, !8510, !8512, !8514, !8519, !8521, !8523, !8525, !8527, !8529, !8531, !8533, !8535, !8537, !8539, !8541, !8543, !8545, !8547, !8552, !8554, !8556, !8558, !8560, !8562, !8564, !8566, !8568, !8570, !8572, !8574, !8576, !8578, !8580, !8582, !8584, !8586, !8588, !8590, !8592, !8594, !8596, !8598, !8600, !8602, !8604, !8606, !8608, !8610, !8612, !8614, !8616, !8618, !8620, !8622, !8624, !8626, !8628, !8630, !8632, !8634, !8636, !8638, !8640, !8642, !8644, !8646, !8648, !8650, !8652, !8654, !8656, !8658, !8660, !8662, !8664, !8666, !8668, !8670, !8672, !8674, !8676, !8678, !8680, !8682, !8684, !8686, !8688, !8690, !8692, !8694, !8696, !8698, !8700, !8702, !8704, !8706, !8708, !8710, !8712, !8714, !8716, !8718, !8720, !8722, !8724, !8726, !8728, !8730, !8732, !8734, !8736, !8738, !8740, !8742, !8744, !8746, !8748, !8750, !8752, !8754, !8756, !8758, !8760, !8762, !8764, !8766, !8768, !8770, !8772, !8774, !8776, !8778, !8780, !8782, !8784, !8786, !8788, !8790, !8792, !8794, !8796, !8798, !8800, !8802, !8804, !8806, !8808, !8810, !8812, !8814, !8816, !8818, !8823}
!8271 = !DIGlobalVariableExpression(var: !8272, expr: !DIExpression())
!8272 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_mlxsw_core_module_init381", scope: !2, file: !3, line: 3088, type: !637, isLocal: true, isDefinition: true)
!8273 = !DIGlobalVariableExpression(var: !8274, expr: !DIExpression())
!8274 = distinct !DIGlobalVariable(name: "__exitcall_mlxsw_core_module_exit", scope: !2, file: !3, line: 3089, type: !8275, isLocal: true, isDefinition: true)
!8275 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !8276, line: 117, baseType: !8277)
!8276 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!8277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3854, size: 64)
!8278 = !DIGlobalVariableExpression(var: !8279, expr: !DIExpression())
!8279 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file382", scope: !2, file: !3, line: 3091, type: !8280, isLocal: true, isDefinition: true, align: 8)
!8280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 504, elements: !8281)
!8281 = !{!8282}
!8282 = !DISubrange(count: 63)
!8283 = !DIGlobalVariableExpression(var: !8284, expr: !DIExpression())
!8284 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license383", scope: !2, file: !3, line: 3091, type: !8285, isLocal: true, isDefinition: true, align: 8)
!8285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 256, elements: !865)
!8286 = !DIGlobalVariableExpression(var: !8287, expr: !DIExpression())
!8287 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author384", scope: !2, file: !3, line: 3092, type: !8288, isLocal: true, isDefinition: true, align: 8)
!8288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 392, elements: !8289)
!8289 = !{!8290}
!8290 = !DISubrange(count: 49)
!8291 = !DIGlobalVariableExpression(var: !8292, expr: !DIExpression())
!8292 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description385", scope: !2, file: !3, line: 3093, type: !8293, isLocal: true, isDefinition: true, align: 8)
!8293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 464, elements: !8294)
!8294 = !{!8295}
!8295 = !DISubrange(count: 58)
!8296 = !DIGlobalVariableExpression(var: !8297, expr: !DIExpression())
!8297 = distinct !DIGlobalVariable(name: "mlxsw_wq", scope: !2, file: !3, line: 44, type: !4762, isLocal: true, isDefinition: true)
!8298 = !DIGlobalVariableExpression(var: !8299, expr: !DIExpression())
!8299 = distinct !DIGlobalVariable(name: "mlxsw_owq", scope: !2, file: !3, line: 45, type: !4762, isLocal: true, isDefinition: true)
!8300 = !DIGlobalVariableExpression(var: !8301, expr: !DIExpression())
!8301 = distinct !DIGlobalVariable(name: "mlxsw_core_driver_list", scope: !2, file: !3, line: 39, type: !330, isLocal: true, isDefinition: true)
!8302 = !DIGlobalVariableExpression(var: !8303, expr: !DIExpression())
!8303 = distinct !DIGlobalVariable(name: "mlxsw_devlink_ops", scope: !2, file: !3, line: 1574, type: !5599, isLocal: true, isDefinition: true)
!8304 = !DIGlobalVariableExpression(var: !8305, expr: !DIExpression())
!8305 = distinct !DIGlobalVariable(name: "__msg", scope: !8306, file: !3, line: 1180, type: !8307, isLocal: true, isDefinition: true)
!8306 = distinct !DISubprogram(name: "mlxsw_devlink_port_split", scope: !3, file: !3, line: 1172, type: !5619, scopeLine: 1176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!8307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 440, elements: !8308)
!8308 = !{!8309}
!8309 = !DISubrange(count: 55)
!8310 = !DIGlobalVariableExpression(var: !8311, expr: !DIExpression())
!8311 = distinct !DIGlobalVariable(name: "__msg", scope: !8312, file: !3, line: 1196, type: !8307, isLocal: true, isDefinition: true)
!8312 = distinct !DISubprogram(name: "mlxsw_devlink_port_unsplit", scope: !3, file: !3, line: 1189, type: !5623, scopeLine: 1192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!8313 = !DIGlobalVariableExpression(var: !8314, expr: !DIExpression())
!8314 = distinct !DIGlobalVariable(name: "mlxsw_reg_mgir", scope: !2, file: !7404, line: 9070, type: !8146, isLocal: true, isDefinition: true)
!8315 = !DIGlobalVariableExpression(var: !8316, expr: !DIExpression())
!8316 = distinct !DIGlobalVariable(name: "mlxsw_reg_mgir_hw_info_device_hw_revision_item", scope: !2, file: !7404, line: 9075, type: !8317, isLocal: true, isDefinition: true)
!8317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_item", file: !8318, line: 11, size: 192, elements: !8319)
!8318 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/item.h", directory: "/home/lizy2001/genbc/linux")
!8319 = !{!8320, !8321, !8322, !8323, !8324, !8325, !8326, !8331}
!8320 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !8317, file: !8318, line: 12, baseType: !522, size: 16)
!8321 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !8317, file: !8318, line: 13, baseType: !671, size: 16, offset: 16)
!8322 = !DIDerivedType(tag: DW_TAG_member, name: "in_step_offset", scope: !8317, file: !8318, line: 14, baseType: !522, size: 16, offset: 32)
!8323 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !8317, file: !8318, line: 15, baseType: !528, size: 8, offset: 48)
!8324 = !DIDerivedType(tag: DW_TAG_member, name: "element_size", scope: !8317, file: !8318, line: 16, baseType: !528, size: 8, offset: 56)
!8325 = !DIDerivedType(tag: DW_TAG_member, name: "no_real_shift", scope: !8317, file: !8318, line: 17, baseType: !817, size: 8, offset: 64)
!8326 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8317, file: !8318, line: 21, baseType: !8327, size: 16, offset: 80)
!8327 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8317, file: !8318, line: 18, size: 16, elements: !8328)
!8328 = !{!8329, !8330}
!8329 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !8327, file: !8318, line: 19, baseType: !528, size: 8)
!8330 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !8327, file: !8318, line: 20, baseType: !522, size: 16)
!8331 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8317, file: !8318, line: 22, baseType: !338, size: 64, offset: 128)
!8332 = !DIGlobalVariableExpression(var: !8333, expr: !DIExpression())
!8333 = distinct !DIGlobalVariable(name: "mlxsw_reg_mgir_fw_info_psid_item", scope: !2, file: !7404, line: 9083, type: !8317, isLocal: true, isDefinition: true)
!8334 = !DIGlobalVariableExpression(var: !8335, expr: !DIExpression())
!8335 = distinct !DIGlobalVariable(name: "mlxsw_reg_mgir_fw_info_extended_major_item", scope: !2, file: !7404, line: 9088, type: !8317, isLocal: true, isDefinition: true)
!8336 = !DIGlobalVariableExpression(var: !8337, expr: !DIExpression())
!8337 = distinct !DIGlobalVariable(name: "mlxsw_reg_mgir_fw_info_extended_minor_item", scope: !2, file: !7404, line: 9093, type: !8317, isLocal: true, isDefinition: true)
!8338 = !DIGlobalVariableExpression(var: !8339, expr: !DIExpression())
!8339 = distinct !DIGlobalVariable(name: "mlxsw_reg_mgir_fw_info_extended_sub_minor_item", scope: !2, file: !7404, line: 9098, type: !8317, isLocal: true, isDefinition: true)
!8340 = !DIGlobalVariableExpression(var: !8341, expr: !DIExpression())
!8341 = distinct !DIGlobalVariable(name: "mlxsw_core_fw_mlxsw_dev_ops", scope: !2, file: !3, line: 1026, type: !8186, isLocal: true, isDefinition: true)
!8342 = !DIGlobalVariableExpression(var: !8343, expr: !DIExpression())
!8343 = distinct !DIGlobalVariable(name: "mlxsw_reg_mcqi_component_index_item", scope: !2, file: !7404, line: 9297, type: !8317, isLocal: true, isDefinition: true)
!8344 = !DIGlobalVariableExpression(var: !8345, expr: !DIExpression())
!8345 = distinct !DIGlobalVariable(name: "mlxsw_reg_mcqi_info_type_item", scope: !2, file: !7404, line: 9307, type: !8317, isLocal: true, isDefinition: true)
!8346 = !DIGlobalVariableExpression(var: !8347, expr: !DIExpression())
!8347 = distinct !DIGlobalVariable(name: "mlxsw_reg_mcqi_offset_item", scope: !2, file: !7404, line: 9314, type: !8317, isLocal: true, isDefinition: true)
!8348 = !DIGlobalVariableExpression(var: !8349, expr: !DIExpression())
!8349 = distinct !DIGlobalVariable(name: "mlxsw_reg_mcqi_data_size_item", scope: !2, file: !7404, line: 9321, type: !8317, isLocal: true, isDefinition: true)
!8350 = !DIGlobalVariableExpression(var: !8351, expr: !DIExpression())
!8351 = distinct !DIGlobalVariable(name: "mlxsw_reg_mcqi", scope: !2, file: !7404, line: 9291, type: !8146, isLocal: true, isDefinition: true)
!8352 = !DIGlobalVariableExpression(var: !8353, expr: !DIExpression())
!8353 = distinct !DIGlobalVariable(name: "mlxsw_reg_mcqi_cap_max_component_size_item", scope: !2, file: !7404, line: 9327, type: !8317, isLocal: true, isDefinition: true)
!8354 = !DIGlobalVariableExpression(var: !8355, expr: !DIExpression())
!8355 = distinct !DIGlobalVariable(name: "mlxsw_reg_mcqi_cap_log_mcda_word_size_item", scope: !2, file: !7404, line: 9334, type: !8317, isLocal: true, isDefinition: true)
!8356 = !DIGlobalVariableExpression(var: !8357, expr: !DIExpression())
!8357 = distinct !DIGlobalVariable(name: "mlxsw_reg_mcqi_cap_mcda_max_write_size_item", scope: !2, file: !7404, line: 9340, type: !8317, isLocal: true, isDefinition: true)
!8358 = !DIGlobalVariableExpression(var: !8359, expr: !DIExpression())
!8359 = distinct !DIGlobalVariable(name: "mlxsw_reg_mcc_instruction_item", scope: !2, file: !7404, line: 9388, type: !8317, isLocal: true, isDefinition: true)
!8360 = !DIGlobalVariableExpression(var: !8361, expr: !DIExpression())
!8361 = distinct !DIGlobalVariable(name: "mlxsw_reg_mcc_component_index_item", scope: !2, file: !7404, line: 9395, type: !8317, isLocal: true, isDefinition: true)
!8362 = !DIGlobalVariableExpression(var: !8363, expr: !DIExpression())
!8363 = distinct !DIGlobalVariable(name: "mlxsw_reg_mcc_update_handle_item", scope: !2, file: !7404, line: 9401, type: !8317, isLocal: true, isDefinition: true)
!8364 = !DIGlobalVariableExpression(var: !8365, expr: !DIExpression())
!8365 = distinct !DIGlobalVariable(name: "mlxsw_reg_mcc_component_size_item", scope: !2, file: !7404, line: 9422, type: !8317, isLocal: true, isDefinition: true)
!8366 = !DIGlobalVariableExpression(var: !8367, expr: !DIExpression())
!8367 = distinct !DIGlobalVariable(name: "mlxsw_reg_mcc", scope: !2, file: !7404, line: 9372, type: !8146, isLocal: true, isDefinition: true)
!8368 = !DIGlobalVariableExpression(var: !8369, expr: !DIExpression())
!8369 = distinct !DIGlobalVariable(name: "mlxsw_reg_mcc_error_code_item", scope: !2, file: !7404, line: 9408, type: !8317, isLocal: true, isDefinition: true)
!8370 = !DIGlobalVariableExpression(var: !8371, expr: !DIExpression())
!8371 = distinct !DIGlobalVariable(name: "mlxsw_reg_mcc_control_state_item", scope: !2, file: !7404, line: 9414, type: !8317, isLocal: true, isDefinition: true)
!8372 = !DIGlobalVariableExpression(var: !8373, expr: !DIExpression())
!8373 = distinct !DIGlobalVariable(name: "mlxsw_reg_mcda_update_handle_item", scope: !2, file: !7404, line: 9463, type: !8317, isLocal: true, isDefinition: true)
!8374 = !DIGlobalVariableExpression(var: !8375, expr: !DIExpression())
!8375 = distinct !DIGlobalVariable(name: "mlxsw_reg_mcda_offset_item", scope: !2, file: !7404, line: 9470, type: !8317, isLocal: true, isDefinition: true)
!8376 = !DIGlobalVariableExpression(var: !8377, expr: !DIExpression())
!8377 = distinct !DIGlobalVariable(name: "mlxsw_reg_mcda_size_item", scope: !2, file: !7404, line: 9476, type: !8317, isLocal: true, isDefinition: true)
!8378 = !DIGlobalVariableExpression(var: !8379, expr: !DIExpression())
!8379 = distinct !DIGlobalVariable(name: "mlxsw_reg_mcda_data_item", scope: !2, file: !7404, line: 9482, type: !8317, isLocal: true, isDefinition: true)
!8380 = !DIGlobalVariableExpression(var: !8381, expr: !DIExpression())
!8381 = distinct !DIGlobalVariable(name: "mlxsw_reg_mcda", scope: !2, file: !7404, line: 9457, type: !8146, isLocal: true, isDefinition: true)
!8382 = !DIGlobalVariableExpression(var: !8383, expr: !DIExpression())
!8383 = distinct !DIGlobalVariable(name: "mlxsw_emad_rx_listener", scope: !2, file: !3, line: 698, type: !8384, isLocal: true, isDefinition: true)
!8384 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8385)
!8385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_listener", file: !7853, line: 76, size: 320, elements: !8386)
!8386 = !{!8387, !8388, !8393, !8394, !8395, !8396, !8397, !8398, !8399}
!8387 = !DIDerivedType(tag: DW_TAG_member, name: "trap_id", scope: !8385, file: !7853, line: 77, baseType: !627, size: 16)
!8388 = !DIDerivedType(tag: DW_TAG_member, scope: !8385, file: !7853, line: 78, baseType: !8389, size: 128, offset: 64)
!8389 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8385, file: !7853, line: 78, size: 128, elements: !8390)
!8390 = !{!8391, !8392}
!8391 = !DIDerivedType(tag: DW_TAG_member, name: "rx_listener", scope: !8389, file: !7853, line: 79, baseType: !8165, size: 128)
!8392 = !DIDerivedType(tag: DW_TAG_member, name: "event_listener", scope: !8389, file: !7853, line: 80, baseType: !8261, size: 128)
!8393 = !DIDerivedType(tag: DW_TAG_member, name: "en_action", scope: !8385, file: !7853, line: 82, baseType: !7403, size: 32, offset: 192)
!8394 = !DIDerivedType(tag: DW_TAG_member, name: "dis_action", scope: !8385, file: !7853, line: 83, baseType: !7403, size: 32, offset: 224)
!8395 = !DIDerivedType(tag: DW_TAG_member, name: "en_trap_group", scope: !8385, file: !7853, line: 84, baseType: !840, size: 8, offset: 256)
!8396 = !DIDerivedType(tag: DW_TAG_member, name: "dis_trap_group", scope: !8385, file: !7853, line: 85, baseType: !840, size: 8, offset: 264)
!8397 = !DIDerivedType(tag: DW_TAG_member, name: "is_ctrl", scope: !8385, file: !7853, line: 86, baseType: !840, size: 1, offset: 272, flags: DIFlagBitField, extraData: i64 272)
!8398 = !DIDerivedType(tag: DW_TAG_member, name: "is_event", scope: !8385, file: !7853, line: 87, baseType: !840, size: 1, offset: 273, flags: DIFlagBitField, extraData: i64 272)
!8399 = !DIDerivedType(tag: DW_TAG_member, name: "enabled_on_register", scope: !8385, file: !7853, line: 88, baseType: !840, size: 1, offset: 274, flags: DIFlagBitField, extraData: i64 272)
!8400 = !DIGlobalVariableExpression(var: !8401, expr: !DIExpression())
!8401 = distinct !DIGlobalVariable(name: "mlxsw_emad_string_tlv_type_item", scope: !2, file: !3, line: 271, type: !8317, isLocal: true, isDefinition: true)
!8402 = !DIGlobalVariableExpression(var: !8403, expr: !DIExpression())
!8403 = distinct !DIGlobalVariable(name: "mlxsw_emad_op_tlv_r_item", scope: !2, file: !3, line: 246, type: !8317, isLocal: true, isDefinition: true)
!8404 = !DIGlobalVariableExpression(var: !8405, expr: !DIExpression())
!8405 = distinct !DIGlobalVariable(name: "mlxsw_emad_op_tlv_tid_item", scope: !2, file: !3, line: 265, type: !8317, isLocal: true, isDefinition: true)
!8406 = !DIGlobalVariableExpression(var: !8407, expr: !DIExpression())
!8407 = distinct !DIGlobalVariable(name: "mlxsw_emad_op_tlv_status_item", scope: !2, file: !3, line: 236, type: !8317, isLocal: true, isDefinition: true)
!8408 = !DIGlobalVariableExpression(var: !8409, expr: !DIExpression())
!8409 = distinct !DIGlobalVariable(name: "mlxsw_emad_string_tlv_string_item", scope: !2, file: !3, line: 283, type: !8317, isLocal: true, isDefinition: true)
!8410 = !DIGlobalVariableExpression(var: !8411, expr: !DIExpression())
!8411 = distinct !DIGlobalVariable(name: "mlxsw_core_fw_devlink_params", scope: !2, file: !3, line: 1145, type: !8412, isLocal: true, isDefinition: true)
!8412 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8413, size: 448, elements: !2518)
!8413 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8414)
!8414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_param", file: !5554, line: 438, size: 448, elements: !8415)
!8415 = !{!8416, !8417, !8418, !8419, !8420, !8421, !8437, !8438}
!8416 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8414, file: !5554, line: 439, baseType: !1033, size: 32)
!8417 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8414, file: !5554, line: 440, baseType: !338, size: 64, offset: 64)
!8418 = !DIDerivedType(tag: DW_TAG_member, name: "generic", scope: !8414, file: !5554, line: 441, baseType: !817, size: 8, offset: 128)
!8419 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8414, file: !5554, line: 442, baseType: !7729, size: 32, offset: 160)
!8420 = !DIDerivedType(tag: DW_TAG_member, name: "supported_cmodes", scope: !8414, file: !5554, line: 443, baseType: !358, size: 64, offset: 192)
!8421 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !8414, file: !5554, line: 444, baseType: !8422, size: 64, offset: 256)
!8422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8423, size: 64)
!8423 = !DISubroutineType(types: !8424)
!8424 = !{!78, !5560, !1033, !8425}
!8425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8426, size: 64)
!8426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_param_gset_ctx", file: !5554, line: 399, size: 288, elements: !8427)
!8427 = !{!8428, !8436}
!8428 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !8426, file: !5554, line: 400, baseType: !8429, size: 256)
!8429 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "devlink_param_value", file: !5554, line: 391, size: 256, elements: !8430)
!8430 = !{!8431, !8432, !8433, !8434, !8435}
!8431 = !DIDerivedType(tag: DW_TAG_member, name: "vu8", scope: !8429, file: !5554, line: 392, baseType: !840, size: 8)
!8432 = !DIDerivedType(tag: DW_TAG_member, name: "vu16", scope: !8429, file: !5554, line: 393, baseType: !627, size: 16)
!8433 = !DIDerivedType(tag: DW_TAG_member, name: "vu32", scope: !8429, file: !5554, line: 394, baseType: !1033, size: 32)
!8434 = !DIDerivedType(tag: DW_TAG_member, name: "vstr", scope: !8429, file: !5554, line: 395, baseType: !4670, size: 256)
!8435 = !DIDerivedType(tag: DW_TAG_member, name: "vbool", scope: !8429, file: !5554, line: 396, baseType: !817, size: 8)
!8436 = !DIDerivedType(tag: DW_TAG_member, name: "cmode", scope: !8426, file: !5554, line: 401, baseType: !7736, size: 32, offset: 256)
!8437 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !8414, file: !5554, line: 446, baseType: !8422, size: 64, offset: 320)
!8438 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !8414, file: !5554, line: 448, baseType: !8439, size: 64, offset: 384)
!8439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8440, size: 64)
!8440 = !DISubroutineType(types: !8441)
!8441 = !{!78, !5560, !1033, !8429, !932}
!8442 = !DIGlobalVariableExpression(var: !8443, expr: !DIExpression())
!8443 = distinct !DIGlobalVariable(name: "__msg", scope: !8444, file: !3, line: 1138, type: !8445, isLocal: true, isDefinition: true)
!8444 = distinct !DISubprogram(name: "mlxsw_core_devlink_param_fw_load_policy_validate", scope: !3, file: !3, line: 1132, type: !8440, scopeLine: 1135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!8445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 456, elements: !8446)
!8446 = !{!8447}
!8447 = !DISubrange(count: 57)
!8448 = !DIGlobalVariableExpression(var: !8449, expr: !DIExpression())
!8449 = distinct !DIGlobalVariable(name: "mlxsw_core_health_fw_fatal_ops", scope: !2, file: !3, line: 1796, type: !8450, isLocal: true, isDefinition: true)
!8450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8451)
!8451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_health_reporter_ops", file: !5554, line: 647, size: 320, elements: !8452)
!8452 = !{!8453, !8454, !8458, !8464, !8468}
!8453 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8451, file: !5554, line: 648, baseType: !1084, size: 64)
!8454 = !DIDerivedType(tag: DW_TAG_member, name: "recover", scope: !8451, file: !5554, line: 649, baseType: !8455, size: 64, offset: 64)
!8455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8456, size: 64)
!8456 = !DISubroutineType(types: !8457)
!8457 = !{!78, !8124, !637, !932}
!8458 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !8451, file: !5554, line: 651, baseType: !8459, size: 64, offset: 128)
!8459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8460, size: 64)
!8460 = !DISubroutineType(types: !8461)
!8461 = !{!78, !8124, !8462, !637, !932}
!8462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8463, size: 64)
!8463 = !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_fmsg", file: !5554, line: 628, flags: DIFlagFwdDecl)
!8464 = !DIDerivedType(tag: DW_TAG_member, name: "diagnose", scope: !8451, file: !5554, line: 654, baseType: !8465, size: 64, offset: 192)
!8465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8466, size: 64)
!8466 = !DISubroutineType(types: !8467)
!8467 = !{!78, !8124, !8462, !932}
!8468 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !8451, file: !5554, line: 657, baseType: !8469, size: 64, offset: 256)
!8469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8470, size: 64)
!8470 = !DISubroutineType(types: !8471)
!8471 = !{!78, !8124, !932}
!8472 = !DIGlobalVariableExpression(var: !8473, expr: !DIExpression())
!8473 = distinct !DIGlobalVariable(name: "mlxsw_reg_mfde_irisc_id_item", scope: !2, file: !7404, line: 10045, type: !8317, isLocal: true, isDefinition: true)
!8474 = !DIGlobalVariableExpression(var: !8475, expr: !DIExpression())
!8475 = distinct !DIGlobalVariable(name: "mlxsw_reg_mfde_event_id_item", scope: !2, file: !7404, line: 10056, type: !8317, isLocal: true, isDefinition: true)
!8476 = !DIGlobalVariableExpression(var: !8477, expr: !DIExpression())
!8477 = distinct !DIGlobalVariable(name: "mlxsw_reg_mfde_method_item", scope: !2, file: !7404, line: 10066, type: !8317, isLocal: true, isDefinition: true)
!8478 = !DIGlobalVariableExpression(var: !8479, expr: !DIExpression())
!8479 = distinct !DIGlobalVariable(name: "mlxsw_reg_mfde_long_process_item", scope: !2, file: !7404, line: 10072, type: !8317, isLocal: true, isDefinition: true)
!8480 = !DIGlobalVariableExpression(var: !8481, expr: !DIExpression())
!8481 = distinct !DIGlobalVariable(name: "mlxsw_reg_mfde_command_type_item", scope: !2, file: !7404, line: 10083, type: !8317, isLocal: true, isDefinition: true)
!8482 = !DIGlobalVariableExpression(var: !8483, expr: !DIExpression())
!8483 = distinct !DIGlobalVariable(name: "mlxsw_reg_mfde_reg_attr_id_item", scope: !2, file: !7404, line: 10089, type: !8317, isLocal: true, isDefinition: true)
!8484 = !DIGlobalVariableExpression(var: !8485, expr: !DIExpression())
!8485 = distinct !DIGlobalVariable(name: "mlxsw_reg_mfde_log_address_item", scope: !2, file: !7404, line: 10096, type: !8317, isLocal: true, isDefinition: true)
!8486 = !DIGlobalVariableExpression(var: !8487, expr: !DIExpression())
!8487 = distinct !DIGlobalVariable(name: "mlxsw_reg_mfde_log_id_item", scope: !2, file: !7404, line: 10103, type: !8317, isLocal: true, isDefinition: true)
!8488 = !DIGlobalVariableExpression(var: !8489, expr: !DIExpression())
!8489 = distinct !DIGlobalVariable(name: "mlxsw_reg_mfde_pipes_mask_item", scope: !2, file: !7404, line: 10109, type: !8317, isLocal: true, isDefinition: true)
!8490 = !DIGlobalVariableExpression(var: !8491, expr: !DIExpression())
!8491 = distinct !DIGlobalVariable(name: "mlxsw_reg_mfgd", scope: !2, file: !7404, line: 9960, type: !8146, isLocal: true, isDefinition: true)
!8492 = !DIGlobalVariableExpression(var: !8493, expr: !DIExpression())
!8493 = distinct !DIGlobalVariable(name: "mlxsw_reg_mfgd_trigger_test_item", scope: !2, file: !7404, line: 9972, type: !8317, isLocal: true, isDefinition: true)
!8494 = !DIGlobalVariableExpression(var: !8495, expr: !DIExpression())
!8495 = distinct !DIGlobalVariable(name: "mlxsw_core_health_listener", scope: !2, file: !3, line: 1665, type: !8384, isLocal: true, isDefinition: true)
!8496 = !DIGlobalVariableExpression(var: !8497, expr: !DIExpression())
!8497 = distinct !DIGlobalVariable(name: "mlxsw_reg_mfgd_fatal_event_mode_item", scope: !2, file: !7404, line: 9967, type: !8317, isLocal: true, isDefinition: true)
!8498 = !DIGlobalVariableExpression(var: !8499, expr: !DIExpression())
!8499 = distinct !DIGlobalVariable(name: "mlxsw_emad_op_tlv_register_id_item", scope: !2, file: !3, line: 241, type: !8317, isLocal: true, isDefinition: true)
!8500 = !DIGlobalVariableExpression(var: !8501, expr: !DIExpression())
!8501 = distinct !DIGlobalVariable(name: "mlxsw_emad_reg_tlv_len_item", scope: !2, file: !3, line: 295, type: !8317, isLocal: true, isDefinition: true)
!8502 = !DIGlobalVariableExpression(var: !8503, expr: !DIExpression())
!8503 = distinct !DIGlobalVariable(name: "mlxsw_reg_hpkt_ack_item", scope: !2, file: !7404, line: 5848, type: !8317, isLocal: true, isDefinition: true)
!8504 = !DIGlobalVariableExpression(var: !8505, expr: !DIExpression())
!8505 = distinct !DIGlobalVariable(name: "mlxsw_reg_hpkt_action_item", scope: !2, file: !7404, line: 5876, type: !8317, isLocal: true, isDefinition: true)
!8506 = !DIGlobalVariableExpression(var: !8507, expr: !DIExpression())
!8507 = distinct !DIGlobalVariable(name: "mlxsw_reg_hpkt_trap_group_item", scope: !2, file: !7404, line: 5882, type: !8317, isLocal: true, isDefinition: true)
!8508 = !DIGlobalVariableExpression(var: !8509, expr: !DIExpression())
!8509 = distinct !DIGlobalVariable(name: "mlxsw_reg_hpkt_trap_id_item", scope: !2, file: !7404, line: 5891, type: !8317, isLocal: true, isDefinition: true)
!8510 = !DIGlobalVariableExpression(var: !8511, expr: !DIExpression())
!8511 = distinct !DIGlobalVariable(name: "mlxsw_reg_hpkt_ctrl_item", scope: !2, file: !7404, line: 5907, type: !8317, isLocal: true, isDefinition: true)
!8512 = !DIGlobalVariableExpression(var: !8513, expr: !DIExpression())
!8513 = distinct !DIGlobalVariable(name: "mlxsw_reg_hpkt", scope: !2, file: !7404, line: 5833, type: !8146, isLocal: true, isDefinition: true)
!8514 = !DIGlobalVariableExpression(var: !8515, expr: !DIExpression())
!8515 = distinct !DIGlobalVariable(name: "__key", scope: !8516, file: !2644, line: 88, type: !1631, isLocal: true, isDefinition: true)
!8516 = distinct !DISubprogram(name: "__init_completion", scope: !2644, file: !2644, line: 85, type: !8517, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!8517 = !DISubroutineType(types: !8518)
!8518 = !{null, !2642}
!8519 = !DIGlobalVariableExpression(var: !8520, expr: !DIExpression())
!8520 = distinct !DIGlobalVariable(name: "mlxsw_emad_end_tlv_type_item", scope: !2, file: !3, line: 301, type: !8317, isLocal: true, isDefinition: true)
!8521 = !DIGlobalVariableExpression(var: !8522, expr: !DIExpression())
!8522 = distinct !DIGlobalVariable(name: "mlxsw_emad_end_tlv_len_item", scope: !2, file: !3, line: 307, type: !8317, isLocal: true, isDefinition: true)
!8523 = !DIGlobalVariableExpression(var: !8524, expr: !DIExpression())
!8524 = distinct !DIGlobalVariable(name: "mlxsw_emad_reg_tlv_type_item", scope: !2, file: !3, line: 290, type: !8317, isLocal: true, isDefinition: true)
!8525 = !DIGlobalVariableExpression(var: !8526, expr: !DIExpression())
!8526 = distinct !DIGlobalVariable(name: "mlxsw_emad_string_tlv_len_item", scope: !2, file: !3, line: 276, type: !8317, isLocal: true, isDefinition: true)
!8527 = !DIGlobalVariableExpression(var: !8528, expr: !DIExpression())
!8528 = distinct !DIGlobalVariable(name: "mlxsw_emad_op_tlv_type_item", scope: !2, file: !3, line: 205, type: !8317, isLocal: true, isDefinition: true)
!8529 = !DIGlobalVariableExpression(var: !8530, expr: !DIExpression())
!8530 = distinct !DIGlobalVariable(name: "mlxsw_emad_op_tlv_len_item", scope: !2, file: !3, line: 211, type: !8317, isLocal: true, isDefinition: true)
!8531 = !DIGlobalVariableExpression(var: !8532, expr: !DIExpression())
!8532 = distinct !DIGlobalVariable(name: "mlxsw_emad_op_tlv_dr_item", scope: !2, file: !3, line: 219, type: !8317, isLocal: true, isDefinition: true)
!8533 = !DIGlobalVariableExpression(var: !8534, expr: !DIExpression())
!8534 = distinct !DIGlobalVariable(name: "mlxsw_emad_op_tlv_method_item", scope: !2, file: !3, line: 255, type: !8317, isLocal: true, isDefinition: true)
!8535 = !DIGlobalVariableExpression(var: !8536, expr: !DIExpression())
!8536 = distinct !DIGlobalVariable(name: "mlxsw_emad_op_tlv_class_item", scope: !2, file: !3, line: 260, type: !8317, isLocal: true, isDefinition: true)
!8537 = !DIGlobalVariableExpression(var: !8538, expr: !DIExpression())
!8538 = distinct !DIGlobalVariable(name: "mlxsw_emad_eth_hdr_dmac_item", scope: !2, file: !3, line: 175, type: !8317, isLocal: true, isDefinition: true)
!8539 = !DIGlobalVariableExpression(var: !8540, expr: !DIExpression())
!8540 = distinct !DIGlobalVariable(name: "mlxsw_emad_eth_hdr_smac_item", scope: !2, file: !3, line: 181, type: !8317, isLocal: true, isDefinition: true)
!8541 = !DIGlobalVariableExpression(var: !8542, expr: !DIExpression())
!8542 = distinct !DIGlobalVariable(name: "mlxsw_emad_eth_hdr_ethertype_item", scope: !2, file: !3, line: 187, type: !8317, isLocal: true, isDefinition: true)
!8543 = !DIGlobalVariableExpression(var: !8544, expr: !DIExpression())
!8544 = distinct !DIGlobalVariable(name: "mlxsw_emad_eth_hdr_mlx_proto_item", scope: !2, file: !3, line: 193, type: !8317, isLocal: true, isDefinition: true)
!8545 = !DIGlobalVariableExpression(var: !8546, expr: !DIExpression())
!8546 = distinct !DIGlobalVariable(name: "mlxsw_emad_eth_hdr_ver_item", scope: !2, file: !3, line: 199, type: !8317, isLocal: true, isDefinition: true)
!8547 = !DIGlobalVariableExpression(var: !8548, expr: !DIExpression())
!8548 = distinct !DIGlobalVariable(name: "mlxsw_reg_infos", scope: !2, file: !7404, line: 11110, type: !8549, isLocal: true, isDefinition: true)
!8549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8145, size: 8640, elements: !8550)
!8550 = !{!8551}
!8551 = !DISubrange(count: 135)
!8552 = !DIGlobalVariableExpression(var: !8553, expr: !DIExpression())
!8553 = distinct !DIGlobalVariable(name: "mlxsw_reg_sgcr", scope: !2, file: !7404, line: 39, type: !8146, isLocal: true, isDefinition: true)
!8554 = !DIGlobalVariableExpression(var: !8555, expr: !DIExpression())
!8555 = distinct !DIGlobalVariable(name: "mlxsw_reg_spad", scope: !2, file: !7404, line: 62, type: !8146, isLocal: true, isDefinition: true)
!8556 = !DIGlobalVariableExpression(var: !8557, expr: !DIExpression())
!8557 = distinct !DIGlobalVariable(name: "mlxsw_reg_smid", scope: !2, file: !7404, line: 81, type: !8146, isLocal: true, isDefinition: true)
!8558 = !DIGlobalVariableExpression(var: !8559, expr: !DIExpression())
!8559 = distinct !DIGlobalVariable(name: "mlxsw_reg_sspr", scope: !2, file: !7404, line: 125, type: !8146, isLocal: true, isDefinition: true)
!8560 = !DIGlobalVariableExpression(var: !8561, expr: !DIExpression())
!8561 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfdat", scope: !2, file: !7404, line: 181, type: !8146, isLocal: true, isDefinition: true)
!8562 = !DIGlobalVariableExpression(var: !8563, expr: !DIExpression())
!8563 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfd", scope: !2, file: !7404, line: 219, type: !8146, isLocal: true, isDefinition: true)
!8564 = !DIGlobalVariableExpression(var: !8565, expr: !DIExpression())
!8565 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfn", scope: !2, file: !7404, line: 596, type: !8146, isLocal: true, isDefinition: true)
!8566 = !DIGlobalVariableExpression(var: !8567, expr: !DIExpression())
!8567 = distinct !DIGlobalVariable(name: "mlxsw_reg_spms", scope: !2, file: !7404, line: 778, type: !8146, isLocal: true, isDefinition: true)
!8568 = !DIGlobalVariableExpression(var: !8569, expr: !DIExpression())
!8569 = distinct !DIGlobalVariable(name: "mlxsw_reg_spvid", scope: !2, file: !7404, line: 822, type: !8146, isLocal: true, isDefinition: true)
!8570 = !DIGlobalVariableExpression(var: !8571, expr: !DIExpression())
!8571 = distinct !DIGlobalVariable(name: "mlxsw_reg_spvm", scope: !2, file: !7404, line: 863, type: !8146, isLocal: true, isDefinition: true)
!8572 = !DIGlobalVariableExpression(var: !8573, expr: !DIExpression())
!8573 = distinct !DIGlobalVariable(name: "mlxsw_reg_spaft", scope: !2, file: !7404, line: 959, type: !8146, isLocal: true, isDefinition: true)
!8574 = !DIGlobalVariableExpression(var: !8575, expr: !DIExpression())
!8575 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfgc", scope: !2, file: !7404, line: 1012, type: !8146, isLocal: true, isDefinition: true)
!8576 = !DIGlobalVariableExpression(var: !8577, expr: !DIExpression())
!8577 = distinct !DIGlobalVariable(name: "mlxsw_reg_sftr", scope: !2, file: !7404, line: 1107, type: !8146, isLocal: true, isDefinition: true)
!8578 = !DIGlobalVariableExpression(var: !8579, expr: !DIExpression())
!8579 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfdf", scope: !2, file: !7404, line: 1177, type: !8146, isLocal: true, isDefinition: true)
!8580 = !DIGlobalVariableExpression(var: !8581, expr: !DIExpression())
!8581 = distinct !DIGlobalVariable(name: "mlxsw_reg_sldr", scope: !2, file: !7404, line: 1267, type: !8146, isLocal: true, isDefinition: true)
!8582 = !DIGlobalVariableExpression(var: !8583, expr: !DIExpression())
!8583 = distinct !DIGlobalVariable(name: "mlxsw_reg_slcr", scope: !2, file: !7404, line: 1347, type: !8146, isLocal: true, isDefinition: true)
!8584 = !DIGlobalVariableExpression(var: !8585, expr: !DIExpression())
!8585 = distinct !DIGlobalVariable(name: "mlxsw_reg_slcor", scope: !2, file: !7404, line: 1467, type: !8146, isLocal: true, isDefinition: true)
!8586 = !DIGlobalVariableExpression(var: !8587, expr: !DIExpression())
!8587 = distinct !DIGlobalVariable(name: "mlxsw_reg_spmlr", scope: !2, file: !7404, line: 1550, type: !8146, isLocal: true, isDefinition: true)
!8588 = !DIGlobalVariableExpression(var: !8589, expr: !DIExpression())
!8589 = distinct !DIGlobalVariable(name: "mlxsw_reg_svfa", scope: !2, file: !7404, line: 1601, type: !8146, isLocal: true, isDefinition: true)
!8590 = !DIGlobalVariableExpression(var: !8591, expr: !DIExpression())
!8591 = distinct !DIGlobalVariable(name: "mlxsw_reg_svpe", scope: !2, file: !7404, line: 1690, type: !8146, isLocal: true, isDefinition: true)
!8592 = !DIGlobalVariableExpression(var: !8593, expr: !DIExpression())
!8593 = distinct !DIGlobalVariable(name: "mlxsw_reg_sfmr", scope: !2, file: !7404, line: 1723, type: !8146, isLocal: true, isDefinition: true)
!8594 = !DIGlobalVariableExpression(var: !8595, expr: !DIExpression())
!8595 = distinct !DIGlobalVariable(name: "mlxsw_reg_spvmlr", scope: !2, file: !7404, line: 1810, type: !8146, isLocal: true, isDefinition: true)
!8596 = !DIGlobalVariableExpression(var: !8597, expr: !DIExpression())
!8597 = distinct !DIGlobalVariable(name: "mlxsw_reg_cwtp", scope: !2, file: !7404, line: 1869, type: !8146, isLocal: true, isDefinition: true)
!8598 = !DIGlobalVariableExpression(var: !8599, expr: !DIExpression())
!8599 = distinct !DIGlobalVariable(name: "mlxsw_reg_cwtpm", scope: !2, file: !7404, line: 1947, type: !8146, isLocal: true, isDefinition: true)
!8600 = !DIGlobalVariableExpression(var: !8601, expr: !DIExpression())
!8601 = distinct !DIGlobalVariable(name: "mlxsw_reg_pgcr", scope: !2, file: !7404, line: 2052, type: !8146, isLocal: true, isDefinition: true)
!8602 = !DIGlobalVariableExpression(var: !8603, expr: !DIExpression())
!8603 = distinct !DIGlobalVariable(name: "mlxsw_reg_ppbt", scope: !2, file: !7404, line: 2074, type: !8146, isLocal: true, isDefinition: true)
!8604 = !DIGlobalVariableExpression(var: !8605, expr: !DIExpression())
!8605 = distinct !DIGlobalVariable(name: "mlxsw_reg_pacl", scope: !2, file: !7404, line: 2136, type: !8146, isLocal: true, isDefinition: true)
!8606 = !DIGlobalVariableExpression(var: !8607, expr: !DIExpression())
!8607 = distinct !DIGlobalVariable(name: "mlxsw_reg_pagt", scope: !2, file: !7404, line: 2182, type: !8146, isLocal: true, isDefinition: true)
!8608 = !DIGlobalVariableExpression(var: !8609, expr: !DIExpression())
!8609 = distinct !DIGlobalVariable(name: "mlxsw_reg_ptar", scope: !2, file: !7404, line: 2245, type: !8146, isLocal: true, isDefinition: true)
!8610 = !DIGlobalVariableExpression(var: !8611, expr: !DIExpression())
!8611 = distinct !DIGlobalVariable(name: "mlxsw_reg_ppbs", scope: !2, file: !7404, line: 2350, type: !8146, isLocal: true, isDefinition: true)
!8612 = !DIGlobalVariableExpression(var: !8613, expr: !DIExpression())
!8613 = distinct !DIGlobalVariable(name: "mlxsw_reg_prcr", scope: !2, file: !7404, line: 2380, type: !8146, isLocal: true, isDefinition: true)
!8614 = !DIGlobalVariableExpression(var: !8615, expr: !DIExpression())
!8615 = distinct !DIGlobalVariable(name: "mlxsw_reg_pefa", scope: !2, file: !7404, line: 2457, type: !8146, isLocal: true, isDefinition: true)
!8616 = !DIGlobalVariableExpression(var: !8617, expr: !DIExpression())
!8617 = distinct !DIGlobalVariable(name: "mlxsw_reg_pemrbt", scope: !2, file: !7404, line: 2516, type: !8146, isLocal: true, isDefinition: true)
!8618 = !DIGlobalVariableExpression(var: !8619, expr: !DIExpression())
!8619 = distinct !DIGlobalVariable(name: "mlxsw_reg_ptce2", scope: !2, file: !7404, line: 2554, type: !8146, isLocal: true, isDefinition: true)
!8620 = !DIGlobalVariableExpression(var: !8621, expr: !DIExpression())
!8621 = distinct !DIGlobalVariable(name: "mlxsw_reg_perpt", scope: !2, file: !7404, line: 2658, type: !8146, isLocal: true, isDefinition: true)
!8622 = !DIGlobalVariableExpression(var: !8623, expr: !DIExpression())
!8623 = distinct !DIGlobalVariable(name: "mlxsw_reg_peabfe", scope: !2, file: !7404, line: 3119, type: !8146, isLocal: true, isDefinition: true)
!8624 = !DIGlobalVariableExpression(var: !8625, expr: !DIExpression())
!8625 = distinct !DIGlobalVariable(name: "mlxsw_reg_perar", scope: !2, file: !7404, line: 2771, type: !8146, isLocal: true, isDefinition: true)
!8626 = !DIGlobalVariableExpression(var: !8627, expr: !DIExpression())
!8627 = distinct !DIGlobalVariable(name: "mlxsw_reg_ptce3", scope: !2, file: !7404, line: 2812, type: !8146, isLocal: true, isDefinition: true)
!8628 = !DIGlobalVariableExpression(var: !8629, expr: !DIExpression())
!8629 = distinct !DIGlobalVariable(name: "mlxsw_reg_percr", scope: !2, file: !7404, line: 2974, type: !8146, isLocal: true, isDefinition: true)
!8630 = !DIGlobalVariableExpression(var: !8631, expr: !DIExpression())
!8631 = distinct !DIGlobalVariable(name: "mlxsw_reg_pererp", scope: !2, file: !7404, line: 3029, type: !8146, isLocal: true, isDefinition: true)
!8632 = !DIGlobalVariableExpression(var: !8633, expr: !DIExpression())
!8633 = distinct !DIGlobalVariable(name: "mlxsw_reg_iedr", scope: !2, file: !7404, line: 3187, type: !8146, isLocal: true, isDefinition: true)
!8634 = !DIGlobalVariableExpression(var: !8635, expr: !DIExpression())
!8635 = distinct !DIGlobalVariable(name: "mlxsw_reg_qpts", scope: !2, file: !7404, line: 3242, type: !8146, isLocal: true, isDefinition: true)
!8636 = !DIGlobalVariableExpression(var: !8637, expr: !DIExpression())
!8637 = distinct !DIGlobalVariable(name: "mlxsw_reg_qpcr", scope: !2, file: !7404, line: 3280, type: !8146, isLocal: true, isDefinition: true)
!8638 = !DIGlobalVariableExpression(var: !8639, expr: !DIExpression())
!8639 = distinct !DIGlobalVariable(name: "mlxsw_reg_qtct", scope: !2, file: !7404, line: 3446, type: !8146, isLocal: true, isDefinition: true)
!8640 = !DIGlobalVariableExpression(var: !8641, expr: !DIExpression())
!8641 = distinct !DIGlobalVariable(name: "mlxsw_reg_qeec", scope: !2, file: !7404, line: 3495, type: !8146, isLocal: true, isDefinition: true)
!8642 = !DIGlobalVariableExpression(var: !8643, expr: !DIExpression())
!8643 = distinct !DIGlobalVariable(name: "mlxsw_reg_qrwe", scope: !2, file: !7404, line: 3673, type: !8146, isLocal: true, isDefinition: true)
!8644 = !DIGlobalVariableExpression(var: !8645, expr: !DIExpression())
!8645 = distinct !DIGlobalVariable(name: "mlxsw_reg_qpdsm", scope: !2, file: !7404, line: 3716, type: !8146, isLocal: true, isDefinition: true)
!8646 = !DIGlobalVariableExpression(var: !8647, expr: !DIExpression())
!8647 = distinct !DIGlobalVariable(name: "mlxsw_reg_qpdp", scope: !2, file: !7404, line: 3802, type: !8146, isLocal: true, isDefinition: true)
!8648 = !DIGlobalVariableExpression(var: !8649, expr: !DIExpression())
!8649 = distinct !DIGlobalVariable(name: "mlxsw_reg_qpdpm", scope: !2, file: !7404, line: 3837, type: !8146, isLocal: true, isDefinition: true)
!8650 = !DIGlobalVariableExpression(var: !8651, expr: !DIExpression())
!8651 = distinct !DIGlobalVariable(name: "mlxsw_reg_qtctm", scope: !2, file: !7404, line: 3887, type: !8146, isLocal: true, isDefinition: true)
!8652 = !DIGlobalVariableExpression(var: !8653, expr: !DIExpression())
!8653 = distinct !DIGlobalVariable(name: "mlxsw_reg_qpsc", scope: !2, file: !7404, line: 3919, type: !8146, isLocal: true, isDefinition: true)
!8654 = !DIGlobalVariableExpression(var: !8655, expr: !DIExpression())
!8655 = distinct !DIGlobalVariable(name: "mlxsw_reg_pmlp", scope: !2, file: !7404, line: 4024, type: !8146, isLocal: true, isDefinition: true)
!8656 = !DIGlobalVariableExpression(var: !8657, expr: !DIExpression())
!8657 = distinct !DIGlobalVariable(name: "mlxsw_reg_pmtu", scope: !2, file: !7404, line: 4081, type: !8146, isLocal: true, isDefinition: true)
!8658 = !DIGlobalVariableExpression(var: !8659, expr: !DIExpression())
!8659 = distinct !DIGlobalVariable(name: "mlxsw_reg_ptys", scope: !2, file: !7404, line: 4135, type: !8146, isLocal: true, isDefinition: true)
!8660 = !DIGlobalVariableExpression(var: !8661, expr: !DIExpression())
!8661 = distinct !DIGlobalVariable(name: "mlxsw_reg_ppad", scope: !2, file: !7404, line: 4394, type: !8146, isLocal: true, isDefinition: true)
!8662 = !DIGlobalVariableExpression(var: !8663, expr: !DIExpression())
!8663 = distinct !DIGlobalVariable(name: "mlxsw_reg_paos", scope: !2, file: !7404, line: 4432, type: !8146, isLocal: true, isDefinition: true)
!8664 = !DIGlobalVariableExpression(var: !8665, expr: !DIExpression())
!8665 = distinct !DIGlobalVariable(name: "mlxsw_reg_pfcc", scope: !2, file: !7404, line: 4512, type: !8146, isLocal: true, isDefinition: true)
!8666 = !DIGlobalVariableExpression(var: !8667, expr: !DIExpression())
!8667 = distinct !DIGlobalVariable(name: "mlxsw_reg_ppcnt", scope: !2, file: !7404, line: 4649, type: !8146, isLocal: true, isDefinition: true)
!8668 = !DIGlobalVariableExpression(var: !8669, expr: !DIExpression())
!8669 = distinct !DIGlobalVariable(name: "mlxsw_reg_plib", scope: !2, file: !7404, line: 5154, type: !8146, isLocal: true, isDefinition: true)
!8670 = !DIGlobalVariableExpression(var: !8671, expr: !DIExpression())
!8671 = distinct !DIGlobalVariable(name: "mlxsw_reg_pptb", scope: !2, file: !7404, line: 5175, type: !8146, isLocal: true, isDefinition: true)
!8672 = !DIGlobalVariableExpression(var: !8673, expr: !DIExpression())
!8673 = distinct !DIGlobalVariable(name: "mlxsw_reg_pbmc", scope: !2, file: !7404, line: 5269, type: !8146, isLocal: true, isDefinition: true)
!8674 = !DIGlobalVariableExpression(var: !8675, expr: !DIExpression())
!8675 = distinct !DIGlobalVariable(name: "mlxsw_reg_pspa", scope: !2, file: !7404, line: 5379, type: !8146, isLocal: true, isDefinition: true)
!8676 = !DIGlobalVariableExpression(var: !8677, expr: !DIExpression())
!8677 = distinct !DIGlobalVariable(name: "mlxsw_reg_pmaos", scope: !2, file: !7404, line: 5415, type: !8146, isLocal: true, isDefinition: true)
!8678 = !DIGlobalVariableExpression(var: !8679, expr: !DIExpression())
!8679 = distinct !DIGlobalVariable(name: "mlxsw_reg_pplr", scope: !2, file: !7404, line: 5473, type: !8146, isLocal: true, isDefinition: true)
!8680 = !DIGlobalVariableExpression(var: !8681, expr: !DIExpression())
!8681 = distinct !DIGlobalVariable(name: "mlxsw_reg_pmpe", scope: !2, file: !7404, line: 5513, type: !8146, isLocal: true, isDefinition: true)
!8682 = !DIGlobalVariableExpression(var: !8683, expr: !DIExpression())
!8683 = distinct !DIGlobalVariable(name: "mlxsw_reg_pddr", scope: !2, file: !7404, line: 5553, type: !8146, isLocal: true, isDefinition: true)
!8684 = !DIGlobalVariableExpression(var: !8685, expr: !DIExpression())
!8685 = distinct !DIGlobalVariable(name: "mlxsw_reg_htgt", scope: !2, file: !7404, line: 5666, type: !8146, isLocal: true, isDefinition: true)
!8686 = !DIGlobalVariableExpression(var: !8687, expr: !DIExpression())
!8687 = distinct !DIGlobalVariable(name: "mlxsw_reg_rgcr", scope: !2, file: !7404, line: 5930, type: !8146, isLocal: true, isDefinition: true)
!8688 = !DIGlobalVariableExpression(var: !8689, expr: !DIExpression())
!8689 = distinct !DIGlobalVariable(name: "mlxsw_reg_ritr", scope: !2, file: !7404, line: 6003, type: !8146, isLocal: true, isDefinition: true)
!8690 = !DIGlobalVariableExpression(var: !8691, expr: !DIExpression())
!8691 = distinct !DIGlobalVariable(name: "mlxsw_reg_rtar", scope: !2, file: !7404, line: 6407, type: !8146, isLocal: true, isDefinition: true)
!8692 = !DIGlobalVariableExpression(var: !8693, expr: !DIExpression())
!8693 = distinct !DIGlobalVariable(name: "mlxsw_reg_ratr", scope: !2, file: !7404, line: 6459, type: !8146, isLocal: true, isDefinition: true)
!8694 = !DIGlobalVariableExpression(var: !8695, expr: !DIExpression())
!8695 = distinct !DIGlobalVariable(name: "mlxsw_reg_rtdp", scope: !2, file: !7404, line: 7738, type: !8146, isLocal: true, isDefinition: true)
!8696 = !DIGlobalVariableExpression(var: !8697, expr: !DIExpression())
!8697 = distinct !DIGlobalVariable(name: "mlxsw_reg_rdpm", scope: !2, file: !7404, line: 6695, type: !8146, isLocal: true, isDefinition: true)
!8698 = !DIGlobalVariableExpression(var: !8699, expr: !DIExpression())
!8699 = distinct !DIGlobalVariable(name: "mlxsw_reg_ricnt", scope: !2, file: !7404, line: 6725, type: !8146, isLocal: true, isDefinition: true)
!8700 = !DIGlobalVariableExpression(var: !8701, expr: !DIExpression())
!8701 = distinct !DIGlobalVariable(name: "mlxsw_reg_rrcr", scope: !2, file: !7404, line: 6848, type: !8146, isLocal: true, isDefinition: true)
!8702 = !DIGlobalVariableExpression(var: !8703, expr: !DIExpression())
!8703 = distinct !DIGlobalVariable(name: "mlxsw_reg_ralta", scope: !2, file: !7404, line: 6907, type: !8146, isLocal: true, isDefinition: true)
!8704 = !DIGlobalVariableExpression(var: !8705, expr: !DIExpression())
!8705 = distinct !DIGlobalVariable(name: "mlxsw_reg_ralst", scope: !2, file: !7404, line: 6959, type: !8146, isLocal: true, isDefinition: true)
!8706 = !DIGlobalVariableExpression(var: !8707, expr: !DIExpression())
!8707 = distinct !DIGlobalVariable(name: "mlxsw_reg_raltb", scope: !2, file: !7404, line: 7026, type: !8146, isLocal: true, isDefinition: true)
!8708 = !DIGlobalVariableExpression(var: !8709, expr: !DIExpression())
!8709 = distinct !DIGlobalVariable(name: "mlxsw_reg_ralue", scope: !2, file: !7404, line: 7067, type: !8146, isLocal: true, isDefinition: true)
!8710 = !DIGlobalVariableExpression(var: !8711, expr: !DIExpression())
!8711 = distinct !DIGlobalVariable(name: "mlxsw_reg_rauht", scope: !2, file: !7404, line: 7347, type: !8146, isLocal: true, isDefinition: true)
!8712 = !DIGlobalVariableExpression(var: !8713, expr: !DIExpression())
!8713 = distinct !DIGlobalVariable(name: "mlxsw_reg_raleu", scope: !2, file: !7404, line: 7501, type: !8146, isLocal: true, isDefinition: true)
!8714 = !DIGlobalVariableExpression(var: !8715, expr: !DIExpression())
!8715 = distinct !DIGlobalVariable(name: "mlxsw_reg_rauhtd", scope: !2, file: !7404, line: 7573, type: !8146, isLocal: true, isDefinition: true)
!8716 = !DIGlobalVariableExpression(var: !8717, expr: !DIExpression())
!8717 = distinct !DIGlobalVariable(name: "mlxsw_reg_rigr2", scope: !2, file: !7404, line: 7874, type: !8146, isLocal: true, isDefinition: true)
!8718 = !DIGlobalVariableExpression(var: !8719, expr: !DIExpression())
!8719 = distinct !DIGlobalVariable(name: "mlxsw_reg_recr2", scope: !2, file: !7404, line: 7952, type: !8146, isLocal: true, isDefinition: true)
!8720 = !DIGlobalVariableExpression(var: !8721, expr: !DIExpression())
!8721 = distinct !DIGlobalVariable(name: "mlxsw_reg_rmft2", scope: !2, file: !7404, line: 8084, type: !8146, isLocal: true, isDefinition: true)
!8722 = !DIGlobalVariableExpression(var: !8723, expr: !DIExpression())
!8723 = distinct !DIGlobalVariable(name: "mlxsw_reg_mfcr", scope: !2, file: !7404, line: 8255, type: !8146, isLocal: true, isDefinition: true)
!8724 = !DIGlobalVariableExpression(var: !8725, expr: !DIExpression())
!8725 = distinct !DIGlobalVariable(name: "mlxsw_reg_mfsc", scope: !2, file: !7404, line: 8315, type: !8146, isLocal: true, isDefinition: true)
!8726 = !DIGlobalVariableExpression(var: !8727, expr: !DIExpression())
!8727 = distinct !DIGlobalVariable(name: "mlxsw_reg_mfsm", scope: !2, file: !7404, line: 8346, type: !8146, isLocal: true, isDefinition: true)
!8728 = !DIGlobalVariableExpression(var: !8729, expr: !DIExpression())
!8729 = distinct !DIGlobalVariable(name: "mlxsw_reg_mfsl", scope: !2, file: !7404, line: 8375, type: !8146, isLocal: true, isDefinition: true)
!8730 = !DIGlobalVariableExpression(var: !8731, expr: !DIExpression())
!8731 = distinct !DIGlobalVariable(name: "mlxsw_reg_fore", scope: !2, file: !7404, line: 8422, type: !8146, isLocal: true, isDefinition: true)
!8732 = !DIGlobalVariableExpression(var: !8733, expr: !DIExpression())
!8733 = distinct !DIGlobalVariable(name: "mlxsw_reg_mtcap", scope: !2, file: !7404, line: 8451, type: !8146, isLocal: true, isDefinition: true)
!8734 = !DIGlobalVariableExpression(var: !8735, expr: !DIExpression())
!8735 = distinct !DIGlobalVariable(name: "mlxsw_reg_mtmp", scope: !2, file: !7404, line: 8469, type: !8146, isLocal: true, isDefinition: true)
!8736 = !DIGlobalVariableExpression(var: !8737, expr: !DIExpression())
!8737 = distinct !DIGlobalVariable(name: "mlxsw_reg_mtwe", scope: !2, file: !7404, line: 8588, type: !8146, isLocal: true, isDefinition: true)
!8738 = !DIGlobalVariableExpression(var: !8739, expr: !DIExpression())
!8739 = distinct !DIGlobalVariable(name: "mlxsw_reg_mtbr", scope: !2, file: !7404, line: 8610, type: !8146, isLocal: true, isDefinition: true)
!8740 = !DIGlobalVariableExpression(var: !8741, expr: !DIExpression())
!8741 = distinct !DIGlobalVariable(name: "mlxsw_reg_mcia", scope: !2, file: !7404, line: 8680, type: !8146, isLocal: true, isDefinition: true)
!8742 = !DIGlobalVariableExpression(var: !8743, expr: !DIExpression())
!8743 = distinct !DIGlobalVariable(name: "mlxsw_reg_mpat", scope: !2, file: !7404, line: 8795, type: !8146, isLocal: true, isDefinition: true)
!8744 = !DIGlobalVariableExpression(var: !8745, expr: !DIExpression())
!8745 = distinct !DIGlobalVariable(name: "mlxsw_reg_mpar", scope: !2, file: !7404, line: 9019, type: !8146, isLocal: true, isDefinition: true)
!8746 = !DIGlobalVariableExpression(var: !8747, expr: !DIExpression())
!8747 = distinct !DIGlobalVariable(name: "mlxsw_reg_mrsr", scope: !2, file: !7404, line: 9124, type: !8146, isLocal: true, isDefinition: true)
!8748 = !DIGlobalVariableExpression(var: !8749, expr: !DIExpression())
!8749 = distinct !DIGlobalVariable(name: "mlxsw_reg_mlcr", scope: !2, file: !7404, line: 9147, type: !8146, isLocal: true, isDefinition: true)
!8750 = !DIGlobalVariableExpression(var: !8751, expr: !DIExpression())
!8751 = distinct !DIGlobalVariable(name: "mlxsw_reg_mtpps", scope: !2, file: !7404, line: 9189, type: !8146, isLocal: true, isDefinition: true)
!8752 = !DIGlobalVariableExpression(var: !8753, expr: !DIExpression())
!8753 = distinct !DIGlobalVariable(name: "mlxsw_reg_mtutc", scope: !2, file: !7404, line: 9245, type: !8146, isLocal: true, isDefinition: true)
!8754 = !DIGlobalVariableExpression(var: !8755, expr: !DIExpression())
!8755 = distinct !DIGlobalVariable(name: "mlxsw_reg_mpsc", scope: !2, file: !7404, line: 9505, type: !8146, isLocal: true, isDefinition: true)
!8756 = !DIGlobalVariableExpression(var: !8757, expr: !DIExpression())
!8757 = distinct !DIGlobalVariable(name: "mlxsw_reg_mgpc", scope: !2, file: !7404, line: 9544, type: !8146, isLocal: true, isDefinition: true)
!8758 = !DIGlobalVariableExpression(var: !8759, expr: !DIExpression())
!8759 = distinct !DIGlobalVariable(name: "mlxsw_reg_mprs", scope: !2, file: !7404, line: 9601, type: !8146, isLocal: true, isDefinition: true)
!8760 = !DIGlobalVariableExpression(var: !8761, expr: !DIExpression())
!8761 = distinct !DIGlobalVariable(name: "mlxsw_reg_mogcr", scope: !2, file: !7404, line: 9642, type: !8146, isLocal: true, isDefinition: true)
!8762 = !DIGlobalVariableExpression(var: !8763, expr: !DIExpression())
!8763 = distinct !DIGlobalVariable(name: "mlxsw_reg_mpagr", scope: !2, file: !7404, line: 9678, type: !8146, isLocal: true, isDefinition: true)
!8764 = !DIGlobalVariableExpression(var: !8765, expr: !DIExpression())
!8765 = distinct !DIGlobalVariable(name: "mlxsw_reg_momte", scope: !2, file: !7404, line: 9729, type: !8146, isLocal: true, isDefinition: true)
!8766 = !DIGlobalVariableExpression(var: !8767, expr: !DIExpression())
!8767 = distinct !DIGlobalVariable(name: "mlxsw_reg_mtpppc", scope: !2, file: !7404, line: 9780, type: !8146, isLocal: true, isDefinition: true)
!8768 = !DIGlobalVariableExpression(var: !8769, expr: !DIExpression())
!8769 = distinct !DIGlobalVariable(name: "mlxsw_reg_mtpptr", scope: !2, file: !7404, line: 9824, type: !8146, isLocal: true, isDefinition: true)
!8770 = !DIGlobalVariableExpression(var: !8771, expr: !DIExpression())
!8771 = distinct !DIGlobalVariable(name: "mlxsw_reg_mtptpt", scope: !2, file: !7404, line: 9924, type: !8146, isLocal: true, isDefinition: true)
!8772 = !DIGlobalVariableExpression(var: !8773, expr: !DIExpression())
!8773 = distinct !DIGlobalVariable(name: "mlxsw_reg_mgpir", scope: !2, file: !7404, line: 9982, type: !8146, isLocal: true, isDefinition: true)
!8774 = !DIGlobalVariableExpression(var: !8775, expr: !DIExpression())
!8775 = distinct !DIGlobalVariable(name: "mlxsw_reg_mfde", scope: !2, file: !7404, line: 10039, type: !8146, isLocal: true, isDefinition: true)
!8776 = !DIGlobalVariableExpression(var: !8777, expr: !DIExpression())
!8777 = distinct !DIGlobalVariable(name: "mlxsw_reg_tngcr", scope: !2, file: !7404, line: 10118, type: !8146, isLocal: true, isDefinition: true)
!8778 = !DIGlobalVariableExpression(var: !8779, expr: !DIExpression())
!8779 = distinct !DIGlobalVariable(name: "mlxsw_reg_tnumt", scope: !2, file: !7404, line: 10303, type: !8146, isLocal: true, isDefinition: true)
!8780 = !DIGlobalVariableExpression(var: !8781, expr: !DIExpression())
!8781 = distinct !DIGlobalVariable(name: "mlxsw_reg_tnqcr", scope: !2, file: !7404, line: 10393, type: !8146, isLocal: true, isDefinition: true)
!8782 = !DIGlobalVariableExpression(var: !8783, expr: !DIExpression())
!8783 = distinct !DIGlobalVariable(name: "mlxsw_reg_tnqdr", scope: !2, file: !7404, line: 10418, type: !8146, isLocal: true, isDefinition: true)
!8784 = !DIGlobalVariableExpression(var: !8785, expr: !DIExpression())
!8785 = distinct !DIGlobalVariable(name: "mlxsw_reg_tneem", scope: !2, file: !7404, line: 10447, type: !8146, isLocal: true, isDefinition: true)
!8786 = !DIGlobalVariableExpression(var: !8787, expr: !DIExpression())
!8787 = distinct !DIGlobalVariable(name: "mlxsw_reg_tndem", scope: !2, file: !7404, line: 10477, type: !8146, isLocal: true, isDefinition: true)
!8788 = !DIGlobalVariableExpression(var: !8789, expr: !DIExpression())
!8789 = distinct !DIGlobalVariable(name: "mlxsw_reg_tnpc", scope: !2, file: !7404, line: 10533, type: !8146, isLocal: true, isDefinition: true)
!8790 = !DIGlobalVariableExpression(var: !8791, expr: !DIExpression())
!8791 = distinct !DIGlobalVariable(name: "mlxsw_reg_tigcr", scope: !2, file: !7404, line: 10577, type: !8146, isLocal: true, isDefinition: true)
!8792 = !DIGlobalVariableExpression(var: !8793, expr: !DIExpression())
!8793 = distinct !DIGlobalVariable(name: "mlxsw_reg_tieem", scope: !2, file: !7404, line: 10608, type: !8146, isLocal: true, isDefinition: true)
!8794 = !DIGlobalVariableExpression(var: !8795, expr: !DIExpression())
!8795 = distinct !DIGlobalVariable(name: "mlxsw_reg_tidem", scope: !2, file: !7404, line: 10638, type: !8146, isLocal: true, isDefinition: true)
!8796 = !DIGlobalVariableExpression(var: !8797, expr: !DIExpression())
!8797 = distinct !DIGlobalVariable(name: "mlxsw_reg_sbpr", scope: !2, file: !7404, line: 10693, type: !8146, isLocal: true, isDefinition: true)
!8798 = !DIGlobalVariableExpression(var: !8799, expr: !DIExpression())
!8799 = distinct !DIGlobalVariable(name: "mlxsw_reg_sbcm", scope: !2, file: !7404, line: 10759, type: !8146, isLocal: true, isDefinition: true)
!8800 = !DIGlobalVariableExpression(var: !8801, expr: !DIExpression())
!8801 = distinct !DIGlobalVariable(name: "mlxsw_reg_sbpm", scope: !2, file: !7404, line: 10845, type: !8146, isLocal: true, isDefinition: true)
!8802 = !DIGlobalVariableExpression(var: !8803, expr: !DIExpression())
!8803 = distinct !DIGlobalVariable(name: "mlxsw_reg_sbmm", scope: !2, file: !7404, line: 10936, type: !8146, isLocal: true, isDefinition: true)
!8804 = !DIGlobalVariableExpression(var: !8805, expr: !DIExpression())
!8805 = distinct !DIGlobalVariable(name: "mlxsw_reg_sbsr", scope: !2, file: !7404, line: 10995, type: !8146, isLocal: true, isDefinition: true)
!8806 = !DIGlobalVariableExpression(var: !8807, expr: !DIExpression())
!8807 = distinct !DIGlobalVariable(name: "mlxsw_reg_sbib", scope: !2, file: !7404, line: 11085, type: !8146, isLocal: true, isDefinition: true)
!8808 = !DIGlobalVariableExpression(var: !8809, expr: !DIExpression())
!8809 = distinct !DIGlobalVariable(name: "mlxsw_reg_pmtm_module_item", scope: !2, file: !7404, line: 5609, type: !8317, isLocal: true, isDefinition: true)
!8810 = !DIGlobalVariableExpression(var: !8811, expr: !DIExpression())
!8811 = distinct !DIGlobalVariable(name: "mlxsw_reg_pmtm", scope: !2, file: !7404, line: 5603, type: !8146, isLocal: true, isDefinition: true)
!8812 = !DIGlobalVariableExpression(var: !8813, expr: !DIExpression())
!8813 = distinct !DIGlobalVariable(name: "mlxsw_reg_pmtm_module_type_item", scope: !2, file: !7404, line: 5644, type: !8317, isLocal: true, isDefinition: true)
!8814 = !DIGlobalVariableExpression(var: !8815, expr: !DIExpression())
!8815 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_query_resource_id_item", scope: !2, file: !7649, line: 521, type: !8317, isLocal: true, isDefinition: true)
!8816 = !DIGlobalVariableExpression(var: !8817, expr: !DIExpression())
!8817 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_query_resource_data_item", scope: !2, file: !7649, line: 526, type: !8317, isLocal: true, isDefinition: true)
!8818 = !DIGlobalVariableExpression(var: !8819, expr: !DIExpression())
!8819 = distinct !DIGlobalVariable(name: "mlxsw_res_ids", scope: !2, file: !7580, line: 69, type: !8820, isLocal: true, isDefinition: true)
!8820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !627, size: 752, elements: !8821)
!8821 = !{!8822}
!8822 = !DISubrange(count: 47)
!8823 = !DIGlobalVariableExpression(var: !8824, expr: !DIExpression())
!8824 = distinct !DIGlobalVariable(name: "mlxsw_core_driver_name", scope: !2, file: !3, line: 42, type: !8825, isLocal: true, isDefinition: true)
!8825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 88, elements: !8826)
!8826 = !{!8827}
!8827 = !DISubrange(count: 11)
!8828 = !{i32 7, !"Dwarf Version", i32 4}
!8829 = !{i32 2, !"Debug Info Version", i32 3}
!8830 = !{i32 1, !"wchar_size", i32 2}
!8831 = !{i32 1, !"Code Model", i32 2}
!8832 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!8833 = distinct !DISubprogram(name: "mlxsw_core_port_driver_priv", scope: !3, file: !3, line: 53, type: !8834, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!8834 = !DISubroutineType(types: !8835)
!8835 = !{!637, !7919}
!8836 = !DILocalVariable(name: "mlxsw_core_port", arg: 1, scope: !8833, file: !3, line: 53, type: !7919)
!8837 = !DILocation(line: 53, column: 59, scope: !8833)
!8838 = !DILocation(line: 55, column: 9, scope: !8833)
!8839 = !DILocation(line: 55, column: 26, scope: !8833)
!8840 = !DILocation(line: 55, column: 2, scope: !8833)
!8841 = distinct !DISubprogram(name: "mlxsw_core_max_ports", scope: !3, file: !3, line: 121, type: !8842, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!8842 = !DISubroutineType(types: !8843)
!8843 = !{!7, !8844}
!8844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8845, size: 64)
!8845 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7848)
!8846 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !8841, file: !3, line: 121, type: !8844)
!8847 = !DILocation(line: 121, column: 60, scope: !8841)
!8848 = !DILocation(line: 123, column: 9, scope: !8841)
!8849 = !DILocation(line: 123, column: 21, scope: !8841)
!8850 = !DILocation(line: 123, column: 2, scope: !8841)
!8851 = distinct !DISubprogram(name: "mlxsw_core_driver_priv", scope: !3, file: !3, line: 127, type: !8852, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!8852 = !DISubroutineType(types: !8853)
!8853 = !{!637, !7847}
!8854 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !8851, file: !3, line: 127, type: !7847)
!8855 = !DILocation(line: 127, column: 49, scope: !8851)
!8856 = !DILocation(line: 129, column: 9, scope: !8851)
!8857 = !DILocation(line: 129, column: 21, scope: !8851)
!8858 = !DILocation(line: 129, column: 2, scope: !8851)
!8859 = distinct !DISubprogram(name: "mlxsw_core_res_query_enabled", scope: !3, file: !3, line: 133, type: !8860, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!8860 = !DISubroutineType(types: !8861)
!8861 = !{!817, !8844}
!8862 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !8859, file: !3, line: 133, type: !8844)
!8863 = !DILocation(line: 133, column: 60, scope: !8859)
!8864 = !DILocation(line: 135, column: 9, scope: !8859)
!8865 = !DILocation(line: 135, column: 21, scope: !8859)
!8866 = !DILocation(line: 135, column: 29, scope: !8859)
!8867 = !DILocation(line: 135, column: 2, scope: !8859)
!8868 = distinct !DISubprogram(name: "mlxsw_core_temp_warn_enabled", scope: !3, file: !3, line: 139, type: !8860, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!8869 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !8868, file: !3, line: 139, type: !8844)
!8870 = !DILocation(line: 139, column: 60, scope: !8868)
!8871 = !DILocation(line: 141, column: 9, scope: !8868)
!8872 = !DILocation(line: 141, column: 21, scope: !8868)
!8873 = !DILocation(line: 141, column: 29, scope: !8868)
!8874 = !DILocation(line: 141, column: 2, scope: !8868)
!8875 = distinct !DISubprogram(name: "mlxsw_core_fw_rev_minor_subminor_validate", scope: !3, file: !3, line: 145, type: !8876, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!8876 = !DISubroutineType(types: !8877)
!8877 = !{!817, !7859, !7859}
!8878 = !DILocalVariable(name: "rev", arg: 1, scope: !8875, file: !3, line: 145, type: !7859)
!8879 = !DILocation(line: 145, column: 70, scope: !8875)
!8880 = !DILocalVariable(name: "req_rev", arg: 2, scope: !8875, file: !3, line: 146, type: !7859)
!8881 = !DILocation(line: 146, column: 35, scope: !8875)
!8882 = !DILocation(line: 148, column: 9, scope: !8875)
!8883 = !DILocation(line: 148, column: 14, scope: !8875)
!8884 = !DILocation(line: 148, column: 22, scope: !8875)
!8885 = !DILocation(line: 148, column: 31, scope: !8875)
!8886 = !DILocation(line: 148, column: 20, scope: !8875)
!8887 = !DILocation(line: 148, column: 37, scope: !8875)
!8888 = !DILocation(line: 149, column: 10, scope: !8875)
!8889 = !DILocation(line: 149, column: 15, scope: !8875)
!8890 = !DILocation(line: 149, column: 24, scope: !8875)
!8891 = !DILocation(line: 149, column: 33, scope: !8875)
!8892 = !DILocation(line: 149, column: 21, scope: !8875)
!8893 = !DILocation(line: 149, column: 39, scope: !8875)
!8894 = !DILocation(line: 150, column: 3, scope: !8875)
!8895 = !DILocation(line: 150, column: 8, scope: !8875)
!8896 = !DILocation(line: 150, column: 20, scope: !8875)
!8897 = !DILocation(line: 150, column: 29, scope: !8875)
!8898 = !DILocation(line: 150, column: 17, scope: !8875)
!8899 = !DILocation(line: 0, scope: !8875)
!8900 = !DILocation(line: 148, column: 2, scope: !8875)
!8901 = distinct !DISubprogram(name: "mlxsw_core_driver_register", scope: !3, file: !3, line: 846, type: !8902, scopeLine: 847, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!8902 = !DISubroutineType(types: !8903)
!8903 = !{!78, !7851}
!8904 = !DILocalVariable(name: "lock", arg: 1, scope: !8905, file: !8906, line: 392, type: !2227)
!8905 = distinct !DISubprogram(name: "spin_unlock", scope: !8906, file: !8906, line: 392, type: !8907, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!8906 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!8907 = !DISubroutineType(types: !8908)
!8908 = !{null, !2227}
!8909 = !DILocation(line: 392, column: 53, scope: !8905, inlinedAt: !8910)
!8910 = distinct !DILocation(line: 850, column: 2, scope: !8901)
!8911 = !DILocalVariable(name: "lock", arg: 1, scope: !8912, file: !8906, line: 352, type: !2227)
!8912 = distinct !DISubprogram(name: "spin_lock", scope: !8906, file: !8906, line: 352, type: !8907, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!8913 = !DILocation(line: 352, column: 51, scope: !8912, inlinedAt: !8914)
!8914 = distinct !DILocation(line: 848, column: 2, scope: !8901)
!8915 = !DILocalVariable(name: "mlxsw_driver", arg: 1, scope: !8901, file: !3, line: 846, type: !7851)
!8916 = !DILocation(line: 846, column: 53, scope: !8901)
!8917 = !DILocation(line: 354, column: 2, scope: !8918, inlinedAt: !8914)
!8918 = distinct !DILexicalBlock(scope: !8912, file: !8906, line: 354, column: 2)
!8919 = !{i32 -2145393971}
!8920 = !DILocation(line: 354, column: 2, scope: !8921, inlinedAt: !8914)
!8921 = distinct !DILexicalBlock(scope: !8918, file: !8906, line: 354, column: 2)
!8922 = !DILocation(line: 849, column: 17, scope: !8901)
!8923 = !DILocation(line: 849, column: 31, scope: !8901)
!8924 = !DILocation(line: 849, column: 2, scope: !8901)
!8925 = !DILocation(line: 394, column: 2, scope: !8926, inlinedAt: !8910)
!8926 = distinct !DILexicalBlock(scope: !8905, file: !8906, line: 394, column: 2)
!8927 = !{i32 -2145391610}
!8928 = !DILocation(line: 394, column: 2, scope: !8929, inlinedAt: !8910)
!8929 = distinct !DILexicalBlock(scope: !8926, file: !8906, line: 394, column: 2)
!8930 = !DILocation(line: 851, column: 2, scope: !8901)
!8931 = distinct !DISubprogram(name: "list_add_tail", scope: !8932, file: !8932, line: 98, type: !8933, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!8932 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!8933 = !DISubroutineType(types: !8934)
!8934 = !{null, !333, !333}
!8935 = !DILocalVariable(name: "new", arg: 1, scope: !8931, file: !8932, line: 98, type: !333)
!8936 = !DILocation(line: 98, column: 52, scope: !8931)
!8937 = !DILocalVariable(name: "head", arg: 2, scope: !8931, file: !8932, line: 98, type: !333)
!8938 = !DILocation(line: 98, column: 75, scope: !8931)
!8939 = !DILocation(line: 100, column: 13, scope: !8931)
!8940 = !DILocation(line: 100, column: 18, scope: !8931)
!8941 = !DILocation(line: 100, column: 24, scope: !8931)
!8942 = !DILocation(line: 100, column: 30, scope: !8931)
!8943 = !DILocation(line: 100, column: 2, scope: !8931)
!8944 = !DILocation(line: 101, column: 1, scope: !8931)
!8945 = distinct !DISubprogram(name: "mlxsw_core_driver_unregister", scope: !3, file: !3, line: 855, type: !8946, scopeLine: 856, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!8946 = !DISubroutineType(types: !8947)
!8947 = !{null, !7851}
!8948 = !DILocation(line: 392, column: 53, scope: !8905, inlinedAt: !8949)
!8949 = distinct !DILocation(line: 859, column: 2, scope: !8945)
!8950 = !DILocation(line: 352, column: 51, scope: !8912, inlinedAt: !8951)
!8951 = distinct !DILocation(line: 857, column: 2, scope: !8945)
!8952 = !DILocalVariable(name: "mlxsw_driver", arg: 1, scope: !8945, file: !3, line: 855, type: !7851)
!8953 = !DILocation(line: 855, column: 56, scope: !8945)
!8954 = !DILocation(line: 354, column: 2, scope: !8918, inlinedAt: !8951)
!8955 = !DILocation(line: 354, column: 2, scope: !8921, inlinedAt: !8951)
!8956 = !DILocation(line: 858, column: 12, scope: !8945)
!8957 = !DILocation(line: 858, column: 26, scope: !8945)
!8958 = !DILocation(line: 858, column: 2, scope: !8945)
!8959 = !DILocation(line: 394, column: 2, scope: !8926, inlinedAt: !8949)
!8960 = !DILocation(line: 394, column: 2, scope: !8929, inlinedAt: !8949)
!8961 = !DILocation(line: 860, column: 1, scope: !8945)
!8962 = distinct !DISubprogram(name: "list_del", scope: !8932, file: !8932, line: 144, type: !8963, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!8963 = !DISubroutineType(types: !8964)
!8964 = !{null, !333}
!8965 = !DILocalVariable(name: "entry", arg: 1, scope: !8962, file: !8932, line: 144, type: !333)
!8966 = !DILocation(line: 144, column: 47, scope: !8962)
!8967 = !DILocation(line: 146, column: 19, scope: !8962)
!8968 = !DILocation(line: 146, column: 2, scope: !8962)
!8969 = !DILocation(line: 147, column: 2, scope: !8962)
!8970 = !DILocation(line: 147, column: 9, scope: !8962)
!8971 = !DILocation(line: 147, column: 14, scope: !8962)
!8972 = !DILocation(line: 148, column: 2, scope: !8962)
!8973 = !DILocation(line: 148, column: 9, scope: !8962)
!8974 = !DILocation(line: 148, column: 14, scope: !8962)
!8975 = !DILocation(line: 149, column: 1, scope: !8962)
!8976 = distinct !DISubprogram(name: "mlxsw_core_bus_device_register", scope: !3, file: !3, line: 2010, type: !8977, scopeLine: 2015, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!8977 = !DISubroutineType(types: !8978)
!8978 = !{!78, !7872, !8059, !637, !817, !5560, !932}
!8979 = !DILocalVariable(name: "mlxsw_bus_info", arg: 1, scope: !8976, file: !3, line: 2010, type: !7872)
!8980 = !DILocation(line: 2010, column: 65, scope: !8976)
!8981 = !DILocalVariable(name: "mlxsw_bus", arg: 2, scope: !8976, file: !3, line: 2011, type: !8059)
!8982 = !DILocation(line: 2011, column: 32, scope: !8976)
!8983 = !DILocalVariable(name: "bus_priv", arg: 3, scope: !8976, file: !3, line: 2012, type: !637)
!8984 = !DILocation(line: 2012, column: 14, scope: !8976)
!8985 = !DILocalVariable(name: "reload", arg: 4, scope: !8976, file: !3, line: 2012, type: !817)
!8986 = !DILocation(line: 2012, column: 29, scope: !8976)
!8987 = !DILocalVariable(name: "devlink", arg: 5, scope: !8976, file: !3, line: 2013, type: !5560)
!8988 = !DILocation(line: 2013, column: 24, scope: !8976)
!8989 = !DILocalVariable(name: "extack", arg: 6, scope: !8976, file: !3, line: 2014, type: !932)
!8990 = !DILocation(line: 2014, column: 32, scope: !8976)
!8991 = !DILocalVariable(name: "called_again", scope: !8976, file: !3, line: 2016, type: !817)
!8992 = !DILocation(line: 2016, column: 7, scope: !8976)
!8993 = !DILocalVariable(name: "err", scope: !8976, file: !3, line: 2017, type: !78)
!8994 = !DILocation(line: 2017, column: 6, scope: !8976)
!8995 = !DILocation(line: 2017, column: 2, scope: !8976)
!8996 = !DILabel(scope: !8976, name: "again", file: !3, line: 2019)
!8997 = !DILocation(line: 2019, column: 1, scope: !8976)
!8998 = !DILocation(line: 2020, column: 41, scope: !8976)
!8999 = !DILocation(line: 2020, column: 57, scope: !8976)
!9000 = !DILocation(line: 2021, column: 13, scope: !8976)
!9001 = !DILocation(line: 2021, column: 23, scope: !8976)
!9002 = !DILocation(line: 2022, column: 13, scope: !8976)
!9003 = !DILocation(line: 2022, column: 22, scope: !8976)
!9004 = !DILocation(line: 2020, column: 8, scope: !8976)
!9005 = !DILocation(line: 2020, column: 6, scope: !8976)
!9006 = !DILocation(line: 2027, column: 6, scope: !9007)
!9007 = distinct !DILexicalBlock(scope: !8976, file: !3, line: 2027, column: 6)
!9008 = !DILocation(line: 2027, column: 10, scope: !9007)
!9009 = !DILocation(line: 2027, column: 21, scope: !9007)
!9010 = !DILocation(line: 2027, column: 25, scope: !9007)
!9011 = !DILocation(line: 2027, column: 6, scope: !8976)
!9012 = !DILocation(line: 2028, column: 16, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !9007, file: !3, line: 2027, column: 39)
!9014 = !DILocation(line: 2029, column: 3, scope: !9013)
!9015 = !DILocation(line: 2032, column: 9, scope: !8976)
!9016 = !DILocation(line: 2032, column: 2, scope: !8976)
!9017 = distinct !DISubprogram(name: "__mlxsw_core_bus_device_register", scope: !3, file: !3, line: 1863, type: !8977, scopeLine: 1868, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!9018 = !DILocalVariable(name: "mlxsw_bus_info", arg: 1, scope: !9017, file: !3, line: 1863, type: !7872)
!9019 = !DILocation(line: 1863, column: 63, scope: !9017)
!9020 = !DILocalVariable(name: "mlxsw_bus", arg: 2, scope: !9017, file: !3, line: 1864, type: !8059)
!9021 = !DILocation(line: 1864, column: 30, scope: !9017)
!9022 = !DILocalVariable(name: "bus_priv", arg: 3, scope: !9017, file: !3, line: 1865, type: !637)
!9023 = !DILocation(line: 1865, column: 12, scope: !9017)
!9024 = !DILocalVariable(name: "reload", arg: 4, scope: !9017, file: !3, line: 1865, type: !817)
!9025 = !DILocation(line: 1865, column: 27, scope: !9017)
!9026 = !DILocalVariable(name: "devlink", arg: 5, scope: !9017, file: !3, line: 1866, type: !5560)
!9027 = !DILocation(line: 1866, column: 22, scope: !9017)
!9028 = !DILocalVariable(name: "extack", arg: 6, scope: !9017, file: !3, line: 1867, type: !932)
!9029 = !DILocation(line: 1867, column: 30, scope: !9017)
!9030 = !DILocalVariable(name: "device_kind", scope: !9017, file: !3, line: 1869, type: !338)
!9031 = !DILocation(line: 1869, column: 14, scope: !9017)
!9032 = !DILocation(line: 1869, column: 28, scope: !9017)
!9033 = !DILocation(line: 1869, column: 44, scope: !9017)
!9034 = !DILocalVariable(name: "mlxsw_core", scope: !9017, file: !3, line: 1870, type: !7847)
!9035 = !DILocation(line: 1870, column: 21, scope: !9017)
!9036 = !DILocalVariable(name: "mlxsw_driver", scope: !9017, file: !3, line: 1871, type: !7851)
!9037 = !DILocation(line: 1871, column: 23, scope: !9017)
!9038 = !DILocalVariable(name: "res", scope: !9017, file: !3, line: 1872, type: !8068)
!9039 = !DILocation(line: 1872, column: 20, scope: !9017)
!9040 = !DILocalVariable(name: "alloc_size", scope: !9017, file: !3, line: 1873, type: !1085)
!9041 = !DILocation(line: 1873, column: 9, scope: !9017)
!9042 = !DILocalVariable(name: "err", scope: !9017, file: !3, line: 1874, type: !78)
!9043 = !DILocation(line: 1874, column: 6, scope: !9017)
!9044 = !DILocation(line: 1876, column: 39, scope: !9017)
!9045 = !DILocation(line: 1876, column: 17, scope: !9017)
!9046 = !DILocation(line: 1876, column: 15, scope: !9017)
!9047 = !DILocation(line: 1877, column: 7, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 1877, column: 6)
!9049 = !DILocation(line: 1877, column: 6, scope: !9017)
!9050 = !DILocation(line: 1878, column: 3, scope: !9048)
!9051 = !DILocation(line: 1880, column: 7, scope: !9052)
!9052 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 1880, column: 6)
!9053 = !DILocation(line: 1880, column: 6, scope: !9017)
!9054 = !DILocation(line: 1881, column: 38, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9052, file: !3, line: 1880, column: 15)
!9056 = !DILocation(line: 1881, column: 52, scope: !9055)
!9057 = !DILocation(line: 1881, column: 36, scope: !9055)
!9058 = !DILocation(line: 1881, column: 14, scope: !9055)
!9059 = !DILocation(line: 1882, column: 47, scope: !9055)
!9060 = !DILocation(line: 1882, column: 13, scope: !9055)
!9061 = !DILocation(line: 1882, column: 11, scope: !9055)
!9062 = !DILocation(line: 1883, column: 8, scope: !9063)
!9063 = distinct !DILexicalBlock(scope: !9055, file: !3, line: 1883, column: 7)
!9064 = !DILocation(line: 1883, column: 7, scope: !9055)
!9065 = !DILocation(line: 1884, column: 8, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9063, file: !3, line: 1883, column: 17)
!9067 = !DILocation(line: 1885, column: 4, scope: !9066)
!9068 = !DILocation(line: 1887, column: 2, scope: !9055)
!9069 = !DILocation(line: 1889, column: 28, scope: !9017)
!9070 = !DILocation(line: 1889, column: 15, scope: !9017)
!9071 = !DILocation(line: 1889, column: 13, scope: !9017)
!9072 = !DILocation(line: 1890, column: 18, scope: !9017)
!9073 = !DILocation(line: 1890, column: 30, scope: !9017)
!9074 = !DILocation(line: 1890, column: 2, scope: !9017)
!9075 = !DILocation(line: 1891, column: 18, scope: !9017)
!9076 = !DILocation(line: 1891, column: 30, scope: !9017)
!9077 = !DILocation(line: 1891, column: 2, scope: !9017)
!9078 = !DILocation(line: 1892, column: 23, scope: !9017)
!9079 = !DILocation(line: 1892, column: 2, scope: !9017)
!9080 = !DILocation(line: 1892, column: 14, scope: !9017)
!9081 = !DILocation(line: 1892, column: 21, scope: !9017)
!9082 = !DILocation(line: 1893, column: 20, scope: !9017)
!9083 = !DILocation(line: 1893, column: 2, scope: !9017)
!9084 = !DILocation(line: 1893, column: 14, scope: !9017)
!9085 = !DILocation(line: 1893, column: 18, scope: !9017)
!9086 = !DILocation(line: 1894, column: 25, scope: !9017)
!9087 = !DILocation(line: 1894, column: 2, scope: !9017)
!9088 = !DILocation(line: 1894, column: 14, scope: !9017)
!9089 = !DILocation(line: 1894, column: 23, scope: !9017)
!9090 = !DILocation(line: 1895, column: 25, scope: !9017)
!9091 = !DILocation(line: 1895, column: 2, scope: !9017)
!9092 = !DILocation(line: 1895, column: 14, scope: !9017)
!9093 = !DILocation(line: 1895, column: 23, scope: !9017)
!9094 = !DILocation(line: 1897, column: 8, scope: !9017)
!9095 = !DILocation(line: 1897, column: 22, scope: !9017)
!9096 = !DILocation(line: 1897, column: 43, scope: !9017)
!9097 = !DILocation(line: 1897, column: 55, scope: !9017)
!9098 = !DILocation(line: 1897, column: 6, scope: !9017)
!9099 = !DILocation(line: 1898, column: 8, scope: !9017)
!9100 = !DILocation(line: 1898, column: 19, scope: !9017)
!9101 = !DILocation(line: 1898, column: 24, scope: !9017)
!9102 = !DILocation(line: 1898, column: 34, scope: !9017)
!9103 = !DILocation(line: 1898, column: 46, scope: !9017)
!9104 = !DILocation(line: 1898, column: 60, scope: !9017)
!9105 = !DILocation(line: 1898, column: 69, scope: !9017)
!9106 = !DILocation(line: 1898, column: 6, scope: !9017)
!9107 = !DILocation(line: 1899, column: 6, scope: !9108)
!9108 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 1899, column: 6)
!9109 = !DILocation(line: 1899, column: 6, scope: !9017)
!9110 = !DILocation(line: 1900, column: 3, scope: !9108)
!9111 = !DILocation(line: 1902, column: 6, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 1902, column: 6)
!9113 = !DILocation(line: 1902, column: 20, scope: !9112)
!9114 = !DILocation(line: 1902, column: 39, scope: !9112)
!9115 = !DILocation(line: 1902, column: 43, scope: !9112)
!9116 = !DILocation(line: 1902, column: 6, scope: !9017)
!9117 = !DILocation(line: 1903, column: 9, scope: !9118)
!9118 = distinct !DILexicalBlock(scope: !9112, file: !3, line: 1902, column: 51)
!9119 = !DILocation(line: 1903, column: 23, scope: !9118)
!9120 = !DILocation(line: 1903, column: 42, scope: !9118)
!9121 = !DILocation(line: 1903, column: 7, scope: !9118)
!9122 = !DILocation(line: 1904, column: 7, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !9118, file: !3, line: 1904, column: 7)
!9124 = !DILocation(line: 1904, column: 7, scope: !9118)
!9125 = !DILocation(line: 1905, column: 4, scope: !9123)
!9126 = !DILocation(line: 1906, column: 2, scope: !9118)
!9127 = !DILocation(line: 1908, column: 25, scope: !9017)
!9128 = !DILocation(line: 1908, column: 8, scope: !9017)
!9129 = !DILocation(line: 1908, column: 6, scope: !9017)
!9130 = !DILocation(line: 1909, column: 6, scope: !9131)
!9131 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 1909, column: 6)
!9132 = !DILocation(line: 1909, column: 6, scope: !9017)
!9133 = !DILocation(line: 1910, column: 3, scope: !9131)
!9134 = !DILocation(line: 1912, column: 6, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 1912, column: 6)
!9136 = !DILocation(line: 1912, column: 48, scope: !9135)
!9137 = !DILocation(line: 1913, column: 6, scope: !9135)
!9138 = !DILocation(line: 1912, column: 6, scope: !9017)
!9139 = !DILocation(line: 1915, column: 4, scope: !9140)
!9140 = distinct !DILexicalBlock(scope: !9135, file: !3, line: 1913, column: 57)
!9141 = !DILocation(line: 1914, column: 27, scope: !9140)
!9142 = !DILocation(line: 1916, column: 4, scope: !9140)
!9143 = !DILocation(line: 1915, column: 44, scope: !9140)
!9144 = !DILocation(line: 1914, column: 14, scope: !9140)
!9145 = !DILocation(line: 1917, column: 37, scope: !9140)
!9146 = !DILocation(line: 1917, column: 29, scope: !9140)
!9147 = !DILocation(line: 1917, column: 3, scope: !9140)
!9148 = !DILocation(line: 1917, column: 15, scope: !9140)
!9149 = !DILocation(line: 1917, column: 19, scope: !9140)
!9150 = !DILocation(line: 1917, column: 27, scope: !9140)
!9151 = !DILocation(line: 1918, column: 8, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9140, file: !3, line: 1918, column: 7)
!9153 = !DILocation(line: 1918, column: 20, scope: !9152)
!9154 = !DILocation(line: 1918, column: 24, scope: !9152)
!9155 = !DILocation(line: 1918, column: 7, scope: !9140)
!9156 = !DILocation(line: 1919, column: 8, scope: !9157)
!9157 = distinct !DILexicalBlock(scope: !9152, file: !3, line: 1918, column: 33)
!9158 = !DILocation(line: 1920, column: 4, scope: !9157)
!9159 = !DILocation(line: 1922, column: 2, scope: !9140)
!9160 = !DILocation(line: 1924, column: 24, scope: !9017)
!9161 = !DILocation(line: 1924, column: 8, scope: !9017)
!9162 = !DILocation(line: 1924, column: 6, scope: !9017)
!9163 = !DILocation(line: 1925, column: 6, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 1925, column: 6)
!9165 = !DILocation(line: 1925, column: 6, scope: !9017)
!9166 = !DILocation(line: 1926, column: 3, scope: !9164)
!9167 = !DILocation(line: 1928, column: 7, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 1928, column: 6)
!9169 = !DILocation(line: 1928, column: 6, scope: !9017)
!9170 = !DILocation(line: 1929, column: 26, scope: !9171)
!9171 = distinct !DILexicalBlock(scope: !9168, file: !3, line: 1928, column: 15)
!9172 = !DILocation(line: 1929, column: 35, scope: !9171)
!9173 = !DILocation(line: 1929, column: 51, scope: !9171)
!9174 = !DILocation(line: 1929, column: 9, scope: !9171)
!9175 = !DILocation(line: 1929, column: 7, scope: !9171)
!9176 = !DILocation(line: 1930, column: 7, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !9171, file: !3, line: 1930, column: 7)
!9178 = !DILocation(line: 1930, column: 7, scope: !9171)
!9179 = !DILocation(line: 1931, column: 4, scope: !9177)
!9180 = !DILocation(line: 1932, column: 2, scope: !9171)
!9181 = !DILocation(line: 1934, column: 7, scope: !9182)
!9182 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 1934, column: 6)
!9183 = !DILocation(line: 1934, column: 6, scope: !9017)
!9184 = !DILocation(line: 1935, column: 36, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9182, file: !3, line: 1934, column: 15)
!9186 = !DILocation(line: 1935, column: 9, scope: !9185)
!9187 = !DILocation(line: 1935, column: 7, scope: !9185)
!9188 = !DILocation(line: 1936, column: 7, scope: !9189)
!9189 = distinct !DILexicalBlock(scope: !9185, file: !3, line: 1936, column: 7)
!9190 = !DILocation(line: 1936, column: 7, scope: !9185)
!9191 = !DILocation(line: 1937, column: 4, scope: !9189)
!9192 = !DILocation(line: 1938, column: 2, scope: !9185)
!9193 = !DILocation(line: 1940, column: 35, scope: !9017)
!9194 = !DILocation(line: 1940, column: 47, scope: !9017)
!9195 = !DILocation(line: 1940, column: 63, scope: !9017)
!9196 = !DILocation(line: 1940, column: 77, scope: !9017)
!9197 = !DILocation(line: 1941, column: 7, scope: !9017)
!9198 = !DILocation(line: 1941, column: 21, scope: !9017)
!9199 = !DILocation(line: 1940, column: 8, scope: !9017)
!9200 = !DILocation(line: 1940, column: 6, scope: !9017)
!9201 = !DILocation(line: 1942, column: 6, scope: !9202)
!9202 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 1942, column: 6)
!9203 = !DILocation(line: 1942, column: 6, scope: !9017)
!9204 = !DILocation(line: 1943, column: 3, scope: !9202)
!9205 = !DILocation(line: 1945, column: 31, scope: !9017)
!9206 = !DILocation(line: 1945, column: 8, scope: !9017)
!9207 = !DILocation(line: 1945, column: 6, scope: !9017)
!9208 = !DILocation(line: 1946, column: 6, scope: !9209)
!9209 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 1946, column: 6)
!9210 = !DILocation(line: 1946, column: 6, scope: !9017)
!9211 = !DILocation(line: 1947, column: 3, scope: !9209)
!9212 = !DILocation(line: 1949, column: 6, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 1949, column: 6)
!9214 = !DILocation(line: 1949, column: 20, scope: !9213)
!9215 = !DILocation(line: 1949, column: 6, scope: !9017)
!9216 = !DILocation(line: 1950, column: 9, scope: !9217)
!9217 = distinct !DILexicalBlock(scope: !9213, file: !3, line: 1949, column: 26)
!9218 = !DILocation(line: 1950, column: 23, scope: !9217)
!9219 = !DILocation(line: 1950, column: 28, scope: !9217)
!9220 = !DILocation(line: 1950, column: 40, scope: !9217)
!9221 = !DILocation(line: 1950, column: 56, scope: !9217)
!9222 = !DILocation(line: 1950, column: 7, scope: !9217)
!9223 = !DILocation(line: 1951, column: 7, scope: !9224)
!9224 = distinct !DILexicalBlock(scope: !9217, file: !3, line: 1951, column: 7)
!9225 = !DILocation(line: 1951, column: 7, scope: !9217)
!9226 = !DILocation(line: 1952, column: 4, scope: !9224)
!9227 = !DILocation(line: 1953, column: 2, scope: !9217)
!9228 = !DILocation(line: 1955, column: 25, scope: !9017)
!9229 = !DILocation(line: 1955, column: 37, scope: !9017)
!9230 = !DILocation(line: 1955, column: 54, scope: !9017)
!9231 = !DILocation(line: 1955, column: 66, scope: !9017)
!9232 = !DILocation(line: 1955, column: 8, scope: !9017)
!9233 = !DILocation(line: 1955, column: 6, scope: !9017)
!9234 = !DILocation(line: 1956, column: 6, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 1956, column: 6)
!9236 = !DILocation(line: 1956, column: 6, scope: !9017)
!9237 = !DILocation(line: 1957, column: 3, scope: !9235)
!9238 = !DILocation(line: 1959, column: 27, scope: !9017)
!9239 = !DILocation(line: 1959, column: 39, scope: !9017)
!9240 = !DILocation(line: 1960, column: 7, scope: !9017)
!9241 = !DILocation(line: 1960, column: 19, scope: !9017)
!9242 = !DILocation(line: 1959, column: 8, scope: !9017)
!9243 = !DILocation(line: 1959, column: 6, scope: !9017)
!9244 = !DILocation(line: 1961, column: 6, scope: !9245)
!9245 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 1961, column: 6)
!9246 = !DILocation(line: 1961, column: 6, scope: !9017)
!9247 = !DILocation(line: 1962, column: 3, scope: !9245)
!9248 = !DILocation(line: 1964, column: 23, scope: !9017)
!9249 = !DILocation(line: 1964, column: 36, scope: !9017)
!9250 = !DILocation(line: 1964, column: 48, scope: !9017)
!9251 = !DILocation(line: 1964, column: 8, scope: !9017)
!9252 = !DILocation(line: 1964, column: 6, scope: !9017)
!9253 = !DILocation(line: 1965, column: 6, scope: !9254)
!9254 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 1965, column: 6)
!9255 = !DILocation(line: 1965, column: 6, scope: !9017)
!9256 = !DILocation(line: 1966, column: 3, scope: !9254)
!9257 = !DILocation(line: 1968, column: 2, scope: !9017)
!9258 = !DILocation(line: 1968, column: 14, scope: !9017)
!9259 = !DILocation(line: 1968, column: 29, scope: !9017)
!9260 = !DILocation(line: 1969, column: 25, scope: !9017)
!9261 = !DILocation(line: 1969, column: 2, scope: !9017)
!9262 = !DILocation(line: 1971, column: 7, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 1971, column: 6)
!9264 = !DILocation(line: 1971, column: 6, scope: !9017)
!9265 = !DILocation(line: 1972, column: 25, scope: !9263)
!9266 = !DILocation(line: 1972, column: 3, scope: !9263)
!9267 = !DILocation(line: 1974, column: 2, scope: !9017)
!9268 = !DILabel(scope: !9017, name: "err_env_init", file: !3, line: 1976)
!9269 = !DILocation(line: 1976, column: 1, scope: !9017)
!9270 = !DILocation(line: 1977, column: 21, scope: !9017)
!9271 = !DILocation(line: 1977, column: 33, scope: !9017)
!9272 = !DILocation(line: 1977, column: 2, scope: !9017)
!9273 = !DILabel(scope: !9017, name: "err_thermal_init", file: !3, line: 1978)
!9274 = !DILocation(line: 1978, column: 1, scope: !9017)
!9275 = !DILocation(line: 1979, column: 19, scope: !9017)
!9276 = !DILocation(line: 1979, column: 31, scope: !9017)
!9277 = !DILocation(line: 1979, column: 2, scope: !9017)
!9278 = !DILabel(scope: !9017, name: "err_hwmon_init", file: !3, line: 1980)
!9279 = !DILocation(line: 1980, column: 1, scope: !9017)
!9280 = !DILocation(line: 1981, column: 6, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 1981, column: 6)
!9282 = !DILocation(line: 1981, column: 18, scope: !9281)
!9283 = !DILocation(line: 1981, column: 26, scope: !9281)
!9284 = !DILocation(line: 1981, column: 6, scope: !9017)
!9285 = !DILocation(line: 1982, column: 3, scope: !9281)
!9286 = !DILocation(line: 1982, column: 15, scope: !9281)
!9287 = !DILocation(line: 1982, column: 23, scope: !9281)
!9288 = !DILocation(line: 1982, column: 28, scope: !9281)
!9289 = !DILabel(scope: !9017, name: "err_driver_init", file: !3, line: 1983)
!9290 = !DILocation(line: 1983, column: 1, scope: !9017)
!9291 = !DILocation(line: 1984, column: 25, scope: !9017)
!9292 = !DILocation(line: 1984, column: 2, scope: !9017)
!9293 = !DILabel(scope: !9017, name: "err_health_init", file: !3, line: 1985)
!9294 = !DILocation(line: 1985, column: 1, scope: !9017)
!9295 = !DILabel(scope: !9017, name: "err_fw_rev_validate", file: !3, line: 1986)
!9296 = !DILocation(line: 1986, column: 1, scope: !9017)
!9297 = !DILocation(line: 1987, column: 7, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 1987, column: 6)
!9299 = !DILocation(line: 1987, column: 6, scope: !9017)
!9300 = !DILocation(line: 1988, column: 32, scope: !9298)
!9301 = !DILocation(line: 1988, column: 3, scope: !9298)
!9302 = !DILabel(scope: !9017, name: "err_register_params", file: !3, line: 1989)
!9303 = !DILocation(line: 1989, column: 1, scope: !9017)
!9304 = !DILocation(line: 1990, column: 7, scope: !9305)
!9305 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 1990, column: 6)
!9306 = !DILocation(line: 1990, column: 6, scope: !9017)
!9307 = !DILocation(line: 1991, column: 22, scope: !9305)
!9308 = !DILocation(line: 1991, column: 3, scope: !9305)
!9309 = !DILabel(scope: !9017, name: "err_devlink_register", file: !3, line: 1992)
!9310 = !DILocation(line: 1992, column: 1, scope: !9017)
!9311 = !DILocation(line: 1993, column: 18, scope: !9017)
!9312 = !DILocation(line: 1993, column: 2, scope: !9017)
!9313 = !DILabel(scope: !9017, name: "err_emad_init", file: !3, line: 1994)
!9314 = !DILocation(line: 1994, column: 1, scope: !9017)
!9315 = !DILocation(line: 1995, column: 8, scope: !9017)
!9316 = !DILocation(line: 1995, column: 20, scope: !9017)
!9317 = !DILocation(line: 1995, column: 24, scope: !9017)
!9318 = !DILocation(line: 1995, column: 2, scope: !9017)
!9319 = !DILabel(scope: !9017, name: "err_alloc_lag_mapping", file: !3, line: 1996)
!9320 = !DILocation(line: 1996, column: 1, scope: !9017)
!9321 = !DILocation(line: 1997, column: 19, scope: !9017)
!9322 = !DILocation(line: 1997, column: 2, scope: !9017)
!9323 = !DILabel(scope: !9017, name: "err_ports_init", file: !3, line: 1998)
!9324 = !DILocation(line: 1998, column: 1, scope: !9017)
!9325 = !DILocation(line: 1999, column: 7, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 1999, column: 6)
!9327 = !DILocation(line: 1999, column: 6, scope: !9017)
!9328 = !DILocation(line: 2000, column: 32, scope: !9326)
!9329 = !DILocation(line: 2000, column: 3, scope: !9326)
!9330 = !DILabel(scope: !9017, name: "err_register_resources", file: !3, line: 2001)
!9331 = !DILocation(line: 2001, column: 1, scope: !9017)
!9332 = !DILocation(line: 2002, column: 2, scope: !9017)
!9333 = !DILocation(line: 2002, column: 13, scope: !9017)
!9334 = !DILocation(line: 2002, column: 18, scope: !9017)
!9335 = !DILabel(scope: !9017, name: "err_bus_init", file: !3, line: 2003)
!9336 = !DILocation(line: 2003, column: 1, scope: !9017)
!9337 = !DILocation(line: 2004, column: 7, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 2004, column: 6)
!9339 = !DILocation(line: 2004, column: 6, scope: !9017)
!9340 = !DILocation(line: 2005, column: 16, scope: !9338)
!9341 = !DILocation(line: 2005, column: 3, scope: !9338)
!9342 = !DILabel(scope: !9017, name: "err_devlink_alloc", file: !3, line: 2006)
!9343 = !DILocation(line: 2006, column: 1, scope: !9017)
!9344 = !DILocation(line: 2007, column: 9, scope: !9017)
!9345 = !DILocation(line: 2007, column: 2, scope: !9017)
!9346 = !DILocation(line: 2008, column: 1, scope: !9017)
!9347 = distinct !DISubprogram(name: "mlxsw_core_bus_device_unregister", scope: !3, file: !3, line: 2036, type: !9348, scopeLine: 2038, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!9348 = !DISubroutineType(types: !9349)
!9349 = !{null, !7847, !817}
!9350 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !9347, file: !3, line: 2036, type: !7847)
!9351 = !DILocation(line: 2036, column: 58, scope: !9347)
!9352 = !DILocalVariable(name: "reload", arg: 2, scope: !9347, file: !3, line: 2037, type: !817)
!9353 = !DILocation(line: 2037, column: 16, scope: !9347)
!9354 = !DILocalVariable(name: "devlink", scope: !9347, file: !3, line: 2039, type: !5560)
!9355 = !DILocation(line: 2039, column: 18, scope: !9347)
!9356 = !DILocation(line: 2039, column: 44, scope: !9347)
!9357 = !DILocation(line: 2039, column: 28, scope: !9347)
!9358 = !DILocation(line: 2041, column: 7, scope: !9359)
!9359 = distinct !DILexicalBlock(scope: !9347, file: !3, line: 2041, column: 6)
!9360 = !DILocation(line: 2041, column: 6, scope: !9347)
!9361 = !DILocation(line: 2042, column: 26, scope: !9359)
!9362 = !DILocation(line: 2042, column: 3, scope: !9359)
!9363 = !DILocation(line: 2043, column: 31, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9347, file: !3, line: 2043, column: 6)
!9365 = !DILocation(line: 2043, column: 6, scope: !9364)
!9366 = !DILocation(line: 2043, column: 6, scope: !9347)
!9367 = !DILocation(line: 2044, column: 8, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9369, file: !3, line: 2044, column: 7)
!9369 = distinct !DILexicalBlock(scope: !9364, file: !3, line: 2043, column: 41)
!9370 = !DILocation(line: 2044, column: 7, scope: !9369)
!9371 = !DILocation(line: 2048, column: 4, scope: !9368)
!9372 = !DILocation(line: 2050, column: 4, scope: !9368)
!9373 = !DILocation(line: 2053, column: 27, scope: !9347)
!9374 = !DILocation(line: 2053, column: 2, scope: !9347)
!9375 = !DILocation(line: 2054, column: 2, scope: !9347)
!9376 = !DILocation(line: 2054, column: 14, scope: !9347)
!9377 = !DILocation(line: 2054, column: 29, scope: !9347)
!9378 = !DILocation(line: 2055, column: 17, scope: !9347)
!9379 = !DILocation(line: 2055, column: 29, scope: !9347)
!9380 = !DILocation(line: 2055, column: 2, scope: !9347)
!9381 = !DILocation(line: 2056, column: 21, scope: !9347)
!9382 = !DILocation(line: 2056, column: 33, scope: !9347)
!9383 = !DILocation(line: 2056, column: 2, scope: !9347)
!9384 = !DILocation(line: 2057, column: 19, scope: !9347)
!9385 = !DILocation(line: 2057, column: 31, scope: !9347)
!9386 = !DILocation(line: 2057, column: 2, scope: !9347)
!9387 = !DILocation(line: 2058, column: 6, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9347, file: !3, line: 2058, column: 6)
!9389 = !DILocation(line: 2058, column: 18, scope: !9388)
!9390 = !DILocation(line: 2058, column: 26, scope: !9388)
!9391 = !DILocation(line: 2058, column: 6, scope: !9347)
!9392 = !DILocation(line: 2059, column: 3, scope: !9388)
!9393 = !DILocation(line: 2059, column: 15, scope: !9388)
!9394 = !DILocation(line: 2059, column: 23, scope: !9388)
!9395 = !DILocation(line: 2059, column: 28, scope: !9388)
!9396 = !DILocation(line: 2060, column: 25, scope: !9347)
!9397 = !DILocation(line: 2060, column: 2, scope: !9347)
!9398 = !DILocation(line: 2061, column: 7, scope: !9399)
!9399 = distinct !DILexicalBlock(scope: !9347, file: !3, line: 2061, column: 6)
!9400 = !DILocation(line: 2061, column: 6, scope: !9347)
!9401 = !DILocation(line: 2062, column: 32, scope: !9399)
!9402 = !DILocation(line: 2062, column: 3, scope: !9399)
!9403 = !DILocation(line: 2063, column: 7, scope: !9404)
!9404 = distinct !DILexicalBlock(scope: !9347, file: !3, line: 2063, column: 6)
!9405 = !DILocation(line: 2063, column: 6, scope: !9347)
!9406 = !DILocation(line: 2064, column: 22, scope: !9404)
!9407 = !DILocation(line: 2064, column: 3, scope: !9404)
!9408 = !DILocation(line: 2065, column: 18, scope: !9347)
!9409 = !DILocation(line: 2065, column: 2, scope: !9347)
!9410 = !DILocation(line: 2066, column: 8, scope: !9347)
!9411 = !DILocation(line: 2066, column: 20, scope: !9347)
!9412 = !DILocation(line: 2066, column: 24, scope: !9347)
!9413 = !DILocation(line: 2066, column: 2, scope: !9347)
!9414 = !DILocation(line: 2067, column: 19, scope: !9347)
!9415 = !DILocation(line: 2067, column: 2, scope: !9347)
!9416 = !DILocation(line: 2068, column: 7, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9347, file: !3, line: 2068, column: 6)
!9418 = !DILocation(line: 2068, column: 6, scope: !9347)
!9419 = !DILocation(line: 2069, column: 32, scope: !9417)
!9420 = !DILocation(line: 2069, column: 3, scope: !9417)
!9421 = !DILocation(line: 2070, column: 2, scope: !9347)
!9422 = !DILocation(line: 2070, column: 14, scope: !9347)
!9423 = !DILocation(line: 2070, column: 19, scope: !9347)
!9424 = !DILocation(line: 2070, column: 24, scope: !9347)
!9425 = !DILocation(line: 2070, column: 36, scope: !9347)
!9426 = !DILocation(line: 2071, column: 7, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9347, file: !3, line: 2071, column: 6)
!9428 = !DILocation(line: 2071, column: 6, scope: !9347)
!9429 = !DILocation(line: 2072, column: 16, scope: !9427)
!9430 = !DILocation(line: 2072, column: 3, scope: !9427)
!9431 = !DILocation(line: 2074, column: 2, scope: !9347)
!9432 = !DILabel(scope: !9347, name: "reload_fail_deinit", file: !3, line: 2076)
!9433 = !DILocation(line: 2076, column: 1, scope: !9347)
!9434 = !DILocation(line: 2077, column: 31, scope: !9347)
!9435 = !DILocation(line: 2077, column: 2, scope: !9347)
!9436 = !DILocation(line: 2078, column: 21, scope: !9347)
!9437 = !DILocation(line: 2078, column: 2, scope: !9347)
!9438 = !DILocation(line: 2079, column: 31, scope: !9347)
!9439 = !DILocation(line: 2079, column: 2, scope: !9347)
!9440 = !DILocation(line: 2080, column: 15, scope: !9347)
!9441 = !DILocation(line: 2080, column: 2, scope: !9347)
!9442 = !DILocation(line: 2081, column: 1, scope: !9347)
!9443 = distinct !DISubprogram(name: "priv_to_devlink", scope: !5554, file: !5554, line: 1356, type: !9444, scopeLine: 1357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!9444 = !DISubroutineType(types: !9445)
!9445 = !{!5560, !637}
!9446 = !DILocalVariable(name: "priv", arg: 1, scope: !9443, file: !5554, line: 1356, type: !637)
!9447 = !DILocation(line: 1356, column: 53, scope: !9443)
!9448 = !DILocation(line: 1358, column: 2, scope: !9443)
!9449 = !DILocation(line: 1358, column: 2, scope: !9450)
!9450 = distinct !DILexicalBlock(scope: !9451, file: !5554, line: 1358, column: 2)
!9451 = distinct !DILexicalBlock(scope: !9443, file: !5554, line: 1358, column: 2)
!9452 = !DILocation(line: 1358, column: 2, scope: !9451)
!9453 = !DILocation(line: 1358, column: 2, scope: !9454)
!9454 = distinct !DILexicalBlock(scope: !9450, file: !5554, line: 1358, column: 2)
!9455 = !DILocation(line: 1358, column: 2, scope: !9456)
!9456 = distinct !DILexicalBlock(scope: !9454, file: !5554, line: 1358, column: 2)
!9457 = !DILocation(line: 1358, column: 2, scope: !9458)
!9458 = distinct !DILexicalBlock(scope: !9454, file: !5554, line: 1358, column: 2)
!9459 = !{i32 -2139975568, i32 -2139975539, i32 -2139975493, i32 -2139975435, i32 -2139975381, i32 -2139975327, i32 -2139975272, i32 -2139975241}
!9460 = !DILocation(line: 1358, column: 2, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !9462, file: !5554, line: 1358, column: 2)
!9462 = distinct !DILexicalBlock(scope: !9454, file: !5554, line: 1358, column: 2)
!9463 = !{i32 -2139974796, i32 -2139974789, i32 -2139974735, i32 -2139974704, i32 -2139974674}
!9464 = !DILocation(line: 1358, column: 2, scope: !9462)
!9465 = !DILocalVariable(name: "__mptr", scope: !9466, file: !5554, line: 1359, type: !637)
!9466 = distinct !DILexicalBlock(scope: !9443, file: !5554, line: 1359, column: 9)
!9467 = !DILocation(line: 1359, column: 9, scope: !9466)
!9468 = !DILocation(line: 1359, column: 9, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9466, file: !5554, line: 1359, column: 9)
!9470 = !DILocation(line: 1359, column: 2, scope: !9443)
!9471 = distinct !DISubprogram(name: "mlxsw_core_health_fini", scope: !3, file: !3, line: 1850, type: !7889, scopeLine: 1851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!9472 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !9471, file: !3, line: 1850, type: !7847)
!9473 = !DILocation(line: 1850, column: 55, scope: !9471)
!9474 = !DILocation(line: 1852, column: 7, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9471, file: !3, line: 1852, column: 6)
!9476 = !DILocation(line: 1852, column: 19, scope: !9475)
!9477 = !DILocation(line: 1852, column: 27, scope: !9475)
!9478 = !DILocation(line: 1852, column: 6, scope: !9471)
!9479 = !DILocation(line: 1853, column: 3, scope: !9475)
!9480 = !DILocation(line: 1855, column: 36, scope: !9471)
!9481 = !DILocation(line: 1855, column: 2, scope: !9471)
!9482 = !DILocation(line: 1856, column: 29, scope: !9471)
!9483 = !DILocation(line: 1856, column: 70, scope: !9471)
!9484 = !DILocation(line: 1856, column: 2, scope: !9471)
!9485 = !DILocation(line: 1858, column: 2, scope: !9471)
!9486 = !DILocation(line: 1859, column: 34, scope: !9471)
!9487 = !DILocation(line: 1859, column: 46, scope: !9471)
!9488 = !DILocation(line: 1859, column: 53, scope: !9471)
!9489 = !DILocation(line: 1859, column: 2, scope: !9471)
!9490 = !DILocation(line: 1860, column: 1, scope: !9471)
!9491 = distinct !DISubprogram(name: "mlxsw_core_params_unregister", scope: !3, file: !3, line: 1625, type: !7889, scopeLine: 1626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!9492 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !9491, file: !3, line: 1625, type: !7847)
!9493 = !DILocation(line: 1625, column: 61, scope: !9491)
!9494 = !DILocation(line: 1627, column: 34, scope: !9491)
!9495 = !DILocation(line: 1627, column: 2, scope: !9491)
!9496 = !DILocation(line: 1628, column: 6, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9491, file: !3, line: 1628, column: 6)
!9498 = !DILocation(line: 1628, column: 18, scope: !9497)
!9499 = !DILocation(line: 1628, column: 26, scope: !9497)
!9500 = !DILocation(line: 1628, column: 6, scope: !9491)
!9501 = !DILocation(line: 1629, column: 3, scope: !9497)
!9502 = !DILocation(line: 1629, column: 15, scope: !9497)
!9503 = !DILocation(line: 1629, column: 23, scope: !9497)
!9504 = !DILocation(line: 1629, column: 41, scope: !9497)
!9505 = !DILocation(line: 1630, column: 1, scope: !9491)
!9506 = distinct !DISubprogram(name: "mlxsw_emad_fini", scope: !3, file: !3, line: 747, type: !7889, scopeLine: 748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!9507 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !9506, file: !3, line: 747, type: !7847)
!9508 = !DILocation(line: 747, column: 48, scope: !9506)
!9509 = !DILocation(line: 750, column: 8, scope: !9510)
!9510 = distinct !DILexicalBlock(scope: !9506, file: !3, line: 750, column: 6)
!9511 = !DILocation(line: 750, column: 20, scope: !9510)
!9512 = !DILocation(line: 750, column: 25, scope: !9510)
!9513 = !DILocation(line: 750, column: 34, scope: !9510)
!9514 = !DILocation(line: 750, column: 6, scope: !9506)
!9515 = !DILocation(line: 751, column: 3, scope: !9510)
!9516 = !DILocation(line: 753, column: 2, scope: !9506)
!9517 = !DILocation(line: 753, column: 14, scope: !9506)
!9518 = !DILocation(line: 753, column: 19, scope: !9506)
!9519 = !DILocation(line: 753, column: 28, scope: !9506)
!9520 = !DILocation(line: 754, column: 29, scope: !9506)
!9521 = !DILocation(line: 755, column: 8, scope: !9506)
!9522 = !DILocation(line: 754, column: 2, scope: !9506)
!9523 = !DILocation(line: 756, column: 20, scope: !9506)
!9524 = !DILocation(line: 756, column: 32, scope: !9506)
!9525 = !DILocation(line: 756, column: 2, scope: !9506)
!9526 = !DILocation(line: 757, column: 1, scope: !9506)
!9527 = distinct !DISubprogram(name: "mlxsw_ports_fini", scope: !3, file: !3, line: 116, type: !7889, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!9528 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !9527, file: !3, line: 116, type: !7847)
!9529 = !DILocation(line: 116, column: 49, scope: !9527)
!9530 = !DILocation(line: 118, column: 8, scope: !9527)
!9531 = !DILocation(line: 118, column: 20, scope: !9527)
!9532 = !DILocation(line: 118, column: 2, scope: !9527)
!9533 = !DILocation(line: 119, column: 1, scope: !9527)
!9534 = distinct !DISubprogram(name: "mlxsw_core_skb_transmit_busy", scope: !3, file: !3, line: 2084, type: !9535, scopeLine: 2086, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!9535 = !DISubroutineType(types: !9536)
!9536 = !{!817, !7847, !7990}
!9537 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !9534, file: !3, line: 2084, type: !7847)
!9538 = !DILocation(line: 2084, column: 54, scope: !9534)
!9539 = !DILocalVariable(name: "tx_info", arg: 2, scope: !9534, file: !3, line: 2085, type: !7990)
!9540 = !DILocation(line: 2085, column: 35, scope: !9534)
!9541 = !DILocation(line: 2087, column: 9, scope: !9534)
!9542 = !DILocation(line: 2087, column: 21, scope: !9534)
!9543 = !DILocation(line: 2087, column: 26, scope: !9534)
!9544 = !DILocation(line: 2087, column: 44, scope: !9534)
!9545 = !DILocation(line: 2087, column: 56, scope: !9534)
!9546 = !DILocation(line: 2088, column: 9, scope: !9534)
!9547 = !DILocation(line: 2087, column: 2, scope: !9534)
!9548 = distinct !DISubprogram(name: "mlxsw_core_skb_transmit", scope: !3, file: !3, line: 2092, type: !9549, scopeLine: 2094, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!9549 = !DISubroutineType(types: !9550)
!9550 = !{!78, !7847, !461, !7990}
!9551 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !9548, file: !3, line: 2092, type: !7847)
!9552 = !DILocation(line: 2092, column: 48, scope: !9548)
!9553 = !DILocalVariable(name: "skb", arg: 2, scope: !9548, file: !3, line: 2092, type: !461)
!9554 = !DILocation(line: 2092, column: 76, scope: !9548)
!9555 = !DILocalVariable(name: "tx_info", arg: 3, scope: !9548, file: !3, line: 2093, type: !7990)
!9556 = !DILocation(line: 2093, column: 36, scope: !9548)
!9557 = !DILocation(line: 2095, column: 9, scope: !9548)
!9558 = !DILocation(line: 2095, column: 21, scope: !9548)
!9559 = !DILocation(line: 2095, column: 26, scope: !9548)
!9560 = !DILocation(line: 2095, column: 39, scope: !9548)
!9561 = !DILocation(line: 2095, column: 51, scope: !9548)
!9562 = !DILocation(line: 2095, column: 61, scope: !9548)
!9563 = !DILocation(line: 2096, column: 11, scope: !9548)
!9564 = !DILocation(line: 2095, column: 2, scope: !9548)
!9565 = distinct !DISubprogram(name: "mlxsw_core_ptp_transmitted", scope: !3, file: !3, line: 2100, type: !8051, scopeLine: 2102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!9566 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !9565, file: !3, line: 2100, type: !7847)
!9567 = !DILocation(line: 2100, column: 52, scope: !9565)
!9568 = !DILocalVariable(name: "skb", arg: 2, scope: !9565, file: !3, line: 2101, type: !461)
!9569 = !DILocation(line: 2101, column: 21, scope: !9565)
!9570 = !DILocalVariable(name: "local_port", arg: 3, scope: !9565, file: !3, line: 2101, type: !840)
!9571 = !DILocation(line: 2101, column: 29, scope: !9565)
!9572 = !DILocation(line: 2103, column: 6, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9565, file: !3, line: 2103, column: 6)
!9574 = !DILocation(line: 2103, column: 18, scope: !9573)
!9575 = !DILocation(line: 2103, column: 26, scope: !9573)
!9576 = !DILocation(line: 2103, column: 6, scope: !9565)
!9577 = !DILocation(line: 2104, column: 3, scope: !9573)
!9578 = !DILocation(line: 2104, column: 15, scope: !9573)
!9579 = !DILocation(line: 2104, column: 23, scope: !9573)
!9580 = !DILocation(line: 2104, column: 39, scope: !9573)
!9581 = !DILocation(line: 2104, column: 51, scope: !9573)
!9582 = !DILocation(line: 2105, column: 11, scope: !9573)
!9583 = !DILocation(line: 2106, column: 1, scope: !9565)
!9584 = distinct !DISubprogram(name: "mlxsw_core_rx_listener_register", scope: !3, file: !3, line: 2131, type: !9585, scopeLine: 2134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!9585 = !DISubroutineType(types: !9586)
!9586 = !{!78, !7847, !9587, !637, !817}
!9587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9588, size: 64)
!9588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8165)
!9589 = !DILocalVariable(name: "s", arg: 1, scope: !9590, file: !7779, line: 445, type: !2097)
!9590 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !7779, file: !7779, line: 445, type: !9591, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!9591 = !DISubroutineType(types: !9592)
!9592 = !{!637, !2097, !1788, !1085}
!9593 = !DILocation(line: 445, column: 72, scope: !9590, inlinedAt: !9594)
!9594 = distinct !DILocation(line: 552, column: 10, scope: !9595, inlinedAt: !9600)
!9595 = distinct !DILexicalBlock(scope: !9596, file: !7779, line: 540, column: 34)
!9596 = distinct !DILexicalBlock(scope: !9597, file: !7779, line: 540, column: 6)
!9597 = distinct !DISubprogram(name: "kmalloc", scope: !7779, file: !7779, line: 538, type: !9598, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!9598 = !DISubroutineType(types: !9599)
!9599 = !{!637, !1085, !1788}
!9600 = distinct !DILocation(line: 2140, column: 13, scope: !9584)
!9601 = !DILocalVariable(name: "flags", arg: 2, scope: !9590, file: !7779, line: 446, type: !1788)
!9602 = !DILocation(line: 446, column: 9, scope: !9590, inlinedAt: !9594)
!9603 = !DILocalVariable(name: "size", arg: 3, scope: !9590, file: !7779, line: 446, type: !1085)
!9604 = !DILocation(line: 446, column: 23, scope: !9590, inlinedAt: !9594)
!9605 = !DILocalVariable(name: "ret", scope: !9590, file: !7779, line: 448, type: !637)
!9606 = !DILocation(line: 448, column: 8, scope: !9590, inlinedAt: !9594)
!9607 = !DILocalVariable(name: "flags", arg: 1, scope: !9608, file: !7779, line: 318, type: !1788)
!9608 = distinct !DISubprogram(name: "kmalloc_type", scope: !7779, file: !7779, line: 318, type: !9609, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!9609 = !DISubroutineType(types: !9610)
!9610 = !{!7778, !1788}
!9611 = !DILocation(line: 318, column: 67, scope: !9608, inlinedAt: !9612)
!9612 = distinct !DILocation(line: 553, column: 20, scope: !9595, inlinedAt: !9600)
!9613 = !DILocalVariable(name: "size", arg: 1, scope: !9614, file: !7779, line: 346, type: !1085)
!9614 = distinct !DISubprogram(name: "kmalloc_index", scope: !7779, file: !7779, line: 346, type: !9615, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!9615 = !DISubroutineType(types: !9616)
!9616 = !{!7, !1085}
!9617 = !DILocation(line: 346, column: 58, scope: !9614, inlinedAt: !9618)
!9618 = distinct !DILocation(line: 547, column: 11, scope: !9595, inlinedAt: !9600)
!9619 = !DILocalVariable(name: "size", arg: 1, scope: !9620, file: !7779, line: 472, type: !1085)
!9620 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !7779, file: !7779, line: 472, type: !9621, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!9621 = !DISubroutineType(types: !9622)
!9622 = !{!637, !1085, !1788, !7}
!9623 = !DILocation(line: 472, column: 28, scope: !9620, inlinedAt: !9624)
!9624 = distinct !DILocation(line: 481, column: 9, scope: !9625, inlinedAt: !9626)
!9625 = distinct !DISubprogram(name: "kmalloc_large", scope: !7779, file: !7779, line: 478, type: !9598, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!9626 = distinct !DILocation(line: 545, column: 11, scope: !9627, inlinedAt: !9600)
!9627 = distinct !DILexicalBlock(scope: !9595, file: !7779, line: 544, column: 7)
!9628 = !DILocalVariable(name: "flags", arg: 2, scope: !9620, file: !7779, line: 472, type: !1788)
!9629 = !DILocation(line: 472, column: 40, scope: !9620, inlinedAt: !9624)
!9630 = !DILocalVariable(name: "order", arg: 3, scope: !9620, file: !7779, line: 472, type: !7)
!9631 = !DILocation(line: 472, column: 60, scope: !9620, inlinedAt: !9624)
!9632 = !DILocalVariable(name: "size", arg: 1, scope: !9625, file: !7779, line: 478, type: !1085)
!9633 = !DILocation(line: 478, column: 51, scope: !9625, inlinedAt: !9626)
!9634 = !DILocalVariable(name: "flags", arg: 2, scope: !9625, file: !7779, line: 478, type: !1788)
!9635 = !DILocation(line: 478, column: 63, scope: !9625, inlinedAt: !9626)
!9636 = !DILocalVariable(name: "order", scope: !9625, file: !7779, line: 480, type: !7)
!9637 = !DILocation(line: 480, column: 15, scope: !9625, inlinedAt: !9626)
!9638 = !DILocalVariable(name: "size", arg: 1, scope: !9597, file: !7779, line: 538, type: !1085)
!9639 = !DILocation(line: 538, column: 45, scope: !9597, inlinedAt: !9600)
!9640 = !DILocalVariable(name: "flags", arg: 2, scope: !9597, file: !7779, line: 538, type: !1788)
!9641 = !DILocation(line: 538, column: 57, scope: !9597, inlinedAt: !9600)
!9642 = !DILocalVariable(name: "index", scope: !9595, file: !7779, line: 542, type: !7)
!9643 = !DILocation(line: 542, column: 16, scope: !9595, inlinedAt: !9600)
!9644 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !9584, file: !3, line: 2131, type: !7847)
!9645 = !DILocation(line: 2131, column: 56, scope: !9584)
!9646 = !DILocalVariable(name: "rxl", arg: 2, scope: !9584, file: !3, line: 2132, type: !9587)
!9647 = !DILocation(line: 2132, column: 41, scope: !9584)
!9648 = !DILocalVariable(name: "priv", arg: 3, scope: !9584, file: !3, line: 2133, type: !637)
!9649 = !DILocation(line: 2133, column: 15, scope: !9584)
!9650 = !DILocalVariable(name: "enabled", arg: 4, scope: !9584, file: !3, line: 2133, type: !817)
!9651 = !DILocation(line: 2133, column: 26, scope: !9584)
!9652 = !DILocalVariable(name: "rxl_item", scope: !9584, file: !3, line: 2135, type: !8160)
!9653 = !DILocation(line: 2135, column: 33, scope: !9584)
!9654 = !DILocation(line: 2137, column: 37, scope: !9584)
!9655 = !DILocation(line: 2137, column: 49, scope: !9584)
!9656 = !DILocation(line: 2137, column: 13, scope: !9584)
!9657 = !DILocation(line: 2137, column: 11, scope: !9584)
!9658 = !DILocation(line: 2138, column: 6, scope: !9659)
!9659 = distinct !DILexicalBlock(scope: !9584, file: !3, line: 2138, column: 6)
!9660 = !DILocation(line: 2138, column: 6, scope: !9584)
!9661 = !DILocation(line: 2139, column: 3, scope: !9659)
!9662 = !DILocation(line: 540, column: 27, scope: !9596, inlinedAt: !9600)
!9663 = !DILocation(line: 540, column: 6, scope: !9596, inlinedAt: !9600)
!9664 = !DILocation(line: 540, column: 6, scope: !9597, inlinedAt: !9600)
!9665 = !DILocation(line: 544, column: 7, scope: !9627, inlinedAt: !9600)
!9666 = !DILocation(line: 544, column: 12, scope: !9627, inlinedAt: !9600)
!9667 = !DILocation(line: 544, column: 7, scope: !9595, inlinedAt: !9600)
!9668 = !DILocation(line: 545, column: 25, scope: !9627, inlinedAt: !9600)
!9669 = !DILocation(line: 545, column: 31, scope: !9627, inlinedAt: !9600)
!9670 = !DILocation(line: 480, column: 33, scope: !9625, inlinedAt: !9626)
!9671 = !DILocation(line: 480, column: 23, scope: !9625, inlinedAt: !9626)
!9672 = !DILocation(line: 481, column: 29, scope: !9625, inlinedAt: !9626)
!9673 = !DILocation(line: 481, column: 35, scope: !9625, inlinedAt: !9626)
!9674 = !DILocation(line: 481, column: 42, scope: !9625, inlinedAt: !9626)
!9675 = !DILocation(line: 474, column: 23, scope: !9620, inlinedAt: !9624)
!9676 = !DILocation(line: 474, column: 29, scope: !9620, inlinedAt: !9624)
!9677 = !DILocation(line: 474, column: 36, scope: !9620, inlinedAt: !9624)
!9678 = !DILocation(line: 474, column: 9, scope: !9620, inlinedAt: !9624)
!9679 = !DILocation(line: 545, column: 4, scope: !9627, inlinedAt: !9600)
!9680 = !DILocation(line: 547, column: 25, scope: !9595, inlinedAt: !9600)
!9681 = !DILocation(line: 348, column: 7, scope: !9682, inlinedAt: !9618)
!9682 = distinct !DILexicalBlock(scope: !9614, file: !7779, line: 348, column: 6)
!9683 = !DILocation(line: 348, column: 6, scope: !9614, inlinedAt: !9618)
!9684 = !DILocation(line: 349, column: 3, scope: !9682, inlinedAt: !9618)
!9685 = !DILocation(line: 351, column: 6, scope: !9686, inlinedAt: !9618)
!9686 = distinct !DILexicalBlock(scope: !9614, file: !7779, line: 351, column: 6)
!9687 = !DILocation(line: 351, column: 11, scope: !9686, inlinedAt: !9618)
!9688 = !DILocation(line: 351, column: 6, scope: !9614, inlinedAt: !9618)
!9689 = !DILocation(line: 352, column: 3, scope: !9686, inlinedAt: !9618)
!9690 = !DILocation(line: 354, column: 32, scope: !9691, inlinedAt: !9618)
!9691 = distinct !DILexicalBlock(scope: !9614, file: !7779, line: 354, column: 6)
!9692 = !DILocation(line: 354, column: 37, scope: !9691, inlinedAt: !9618)
!9693 = !DILocation(line: 354, column: 42, scope: !9691, inlinedAt: !9618)
!9694 = !DILocation(line: 354, column: 45, scope: !9691, inlinedAt: !9618)
!9695 = !DILocation(line: 354, column: 50, scope: !9691, inlinedAt: !9618)
!9696 = !DILocation(line: 354, column: 6, scope: !9614, inlinedAt: !9618)
!9697 = !DILocation(line: 355, column: 3, scope: !9691, inlinedAt: !9618)
!9698 = !DILocation(line: 356, column: 32, scope: !9699, inlinedAt: !9618)
!9699 = distinct !DILexicalBlock(scope: !9614, file: !7779, line: 356, column: 6)
!9700 = !DILocation(line: 356, column: 37, scope: !9699, inlinedAt: !9618)
!9701 = !DILocation(line: 356, column: 43, scope: !9699, inlinedAt: !9618)
!9702 = !DILocation(line: 356, column: 46, scope: !9699, inlinedAt: !9618)
!9703 = !DILocation(line: 356, column: 51, scope: !9699, inlinedAt: !9618)
!9704 = !DILocation(line: 356, column: 6, scope: !9614, inlinedAt: !9618)
!9705 = !DILocation(line: 357, column: 3, scope: !9699, inlinedAt: !9618)
!9706 = !DILocation(line: 358, column: 6, scope: !9707, inlinedAt: !9618)
!9707 = distinct !DILexicalBlock(scope: !9614, file: !7779, line: 358, column: 6)
!9708 = !DILocation(line: 358, column: 11, scope: !9707, inlinedAt: !9618)
!9709 = !DILocation(line: 358, column: 6, scope: !9614, inlinedAt: !9618)
!9710 = !DILocation(line: 358, column: 26, scope: !9707, inlinedAt: !9618)
!9711 = !DILocation(line: 359, column: 6, scope: !9712, inlinedAt: !9618)
!9712 = distinct !DILexicalBlock(scope: !9614, file: !7779, line: 359, column: 6)
!9713 = !DILocation(line: 359, column: 11, scope: !9712, inlinedAt: !9618)
!9714 = !DILocation(line: 359, column: 6, scope: !9614, inlinedAt: !9618)
!9715 = !DILocation(line: 359, column: 26, scope: !9712, inlinedAt: !9618)
!9716 = !DILocation(line: 360, column: 6, scope: !9717, inlinedAt: !9618)
!9717 = distinct !DILexicalBlock(scope: !9614, file: !7779, line: 360, column: 6)
!9718 = !DILocation(line: 360, column: 11, scope: !9717, inlinedAt: !9618)
!9719 = !DILocation(line: 360, column: 6, scope: !9614, inlinedAt: !9618)
!9720 = !DILocation(line: 360, column: 26, scope: !9717, inlinedAt: !9618)
!9721 = !DILocation(line: 361, column: 6, scope: !9722, inlinedAt: !9618)
!9722 = distinct !DILexicalBlock(scope: !9614, file: !7779, line: 361, column: 6)
!9723 = !DILocation(line: 361, column: 11, scope: !9722, inlinedAt: !9618)
!9724 = !DILocation(line: 361, column: 6, scope: !9614, inlinedAt: !9618)
!9725 = !DILocation(line: 361, column: 26, scope: !9722, inlinedAt: !9618)
!9726 = !DILocation(line: 362, column: 6, scope: !9727, inlinedAt: !9618)
!9727 = distinct !DILexicalBlock(scope: !9614, file: !7779, line: 362, column: 6)
!9728 = !DILocation(line: 362, column: 11, scope: !9727, inlinedAt: !9618)
!9729 = !DILocation(line: 362, column: 6, scope: !9614, inlinedAt: !9618)
!9730 = !DILocation(line: 362, column: 26, scope: !9727, inlinedAt: !9618)
!9731 = !DILocation(line: 363, column: 6, scope: !9732, inlinedAt: !9618)
!9732 = distinct !DILexicalBlock(scope: !9614, file: !7779, line: 363, column: 6)
!9733 = !DILocation(line: 363, column: 11, scope: !9732, inlinedAt: !9618)
!9734 = !DILocation(line: 363, column: 6, scope: !9614, inlinedAt: !9618)
!9735 = !DILocation(line: 363, column: 26, scope: !9732, inlinedAt: !9618)
!9736 = !DILocation(line: 364, column: 6, scope: !9737, inlinedAt: !9618)
!9737 = distinct !DILexicalBlock(scope: !9614, file: !7779, line: 364, column: 6)
!9738 = !DILocation(line: 364, column: 11, scope: !9737, inlinedAt: !9618)
!9739 = !DILocation(line: 364, column: 6, scope: !9614, inlinedAt: !9618)
!9740 = !DILocation(line: 364, column: 26, scope: !9737, inlinedAt: !9618)
!9741 = !DILocation(line: 365, column: 6, scope: !9742, inlinedAt: !9618)
!9742 = distinct !DILexicalBlock(scope: !9614, file: !7779, line: 365, column: 6)
!9743 = !DILocation(line: 365, column: 11, scope: !9742, inlinedAt: !9618)
!9744 = !DILocation(line: 365, column: 6, scope: !9614, inlinedAt: !9618)
!9745 = !DILocation(line: 365, column: 26, scope: !9742, inlinedAt: !9618)
!9746 = !DILocation(line: 366, column: 6, scope: !9747, inlinedAt: !9618)
!9747 = distinct !DILexicalBlock(scope: !9614, file: !7779, line: 366, column: 6)
!9748 = !DILocation(line: 366, column: 11, scope: !9747, inlinedAt: !9618)
!9749 = !DILocation(line: 366, column: 6, scope: !9614, inlinedAt: !9618)
!9750 = !DILocation(line: 366, column: 26, scope: !9747, inlinedAt: !9618)
!9751 = !DILocation(line: 367, column: 6, scope: !9752, inlinedAt: !9618)
!9752 = distinct !DILexicalBlock(scope: !9614, file: !7779, line: 367, column: 6)
!9753 = !DILocation(line: 367, column: 11, scope: !9752, inlinedAt: !9618)
!9754 = !DILocation(line: 367, column: 6, scope: !9614, inlinedAt: !9618)
!9755 = !DILocation(line: 367, column: 26, scope: !9752, inlinedAt: !9618)
!9756 = !DILocation(line: 368, column: 6, scope: !9757, inlinedAt: !9618)
!9757 = distinct !DILexicalBlock(scope: !9614, file: !7779, line: 368, column: 6)
!9758 = !DILocation(line: 368, column: 11, scope: !9757, inlinedAt: !9618)
!9759 = !DILocation(line: 368, column: 6, scope: !9614, inlinedAt: !9618)
!9760 = !DILocation(line: 368, column: 26, scope: !9757, inlinedAt: !9618)
!9761 = !DILocation(line: 369, column: 6, scope: !9762, inlinedAt: !9618)
!9762 = distinct !DILexicalBlock(scope: !9614, file: !7779, line: 369, column: 6)
!9763 = !DILocation(line: 369, column: 11, scope: !9762, inlinedAt: !9618)
!9764 = !DILocation(line: 369, column: 6, scope: !9614, inlinedAt: !9618)
!9765 = !DILocation(line: 369, column: 26, scope: !9762, inlinedAt: !9618)
!9766 = !DILocation(line: 370, column: 6, scope: !9767, inlinedAt: !9618)
!9767 = distinct !DILexicalBlock(scope: !9614, file: !7779, line: 370, column: 6)
!9768 = !DILocation(line: 370, column: 11, scope: !9767, inlinedAt: !9618)
!9769 = !DILocation(line: 370, column: 6, scope: !9614, inlinedAt: !9618)
!9770 = !DILocation(line: 370, column: 26, scope: !9767, inlinedAt: !9618)
!9771 = !DILocation(line: 371, column: 6, scope: !9772, inlinedAt: !9618)
!9772 = distinct !DILexicalBlock(scope: !9614, file: !7779, line: 371, column: 6)
!9773 = !DILocation(line: 371, column: 11, scope: !9772, inlinedAt: !9618)
!9774 = !DILocation(line: 371, column: 6, scope: !9614, inlinedAt: !9618)
!9775 = !DILocation(line: 371, column: 26, scope: !9772, inlinedAt: !9618)
!9776 = !DILocation(line: 372, column: 6, scope: !9777, inlinedAt: !9618)
!9777 = distinct !DILexicalBlock(scope: !9614, file: !7779, line: 372, column: 6)
!9778 = !DILocation(line: 372, column: 11, scope: !9777, inlinedAt: !9618)
!9779 = !DILocation(line: 372, column: 6, scope: !9614, inlinedAt: !9618)
!9780 = !DILocation(line: 372, column: 26, scope: !9777, inlinedAt: !9618)
!9781 = !DILocation(line: 373, column: 6, scope: !9782, inlinedAt: !9618)
!9782 = distinct !DILexicalBlock(scope: !9614, file: !7779, line: 373, column: 6)
!9783 = !DILocation(line: 373, column: 11, scope: !9782, inlinedAt: !9618)
!9784 = !DILocation(line: 373, column: 6, scope: !9614, inlinedAt: !9618)
!9785 = !DILocation(line: 373, column: 26, scope: !9782, inlinedAt: !9618)
!9786 = !DILocation(line: 374, column: 6, scope: !9787, inlinedAt: !9618)
!9787 = distinct !DILexicalBlock(scope: !9614, file: !7779, line: 374, column: 6)
!9788 = !DILocation(line: 374, column: 11, scope: !9787, inlinedAt: !9618)
!9789 = !DILocation(line: 374, column: 6, scope: !9614, inlinedAt: !9618)
!9790 = !DILocation(line: 374, column: 26, scope: !9787, inlinedAt: !9618)
!9791 = !DILocation(line: 375, column: 6, scope: !9792, inlinedAt: !9618)
!9792 = distinct !DILexicalBlock(scope: !9614, file: !7779, line: 375, column: 6)
!9793 = !DILocation(line: 375, column: 11, scope: !9792, inlinedAt: !9618)
!9794 = !DILocation(line: 375, column: 6, scope: !9614, inlinedAt: !9618)
!9795 = !DILocation(line: 375, column: 27, scope: !9792, inlinedAt: !9618)
!9796 = !DILocation(line: 376, column: 6, scope: !9797, inlinedAt: !9618)
!9797 = distinct !DILexicalBlock(scope: !9614, file: !7779, line: 376, column: 6)
!9798 = !DILocation(line: 376, column: 11, scope: !9797, inlinedAt: !9618)
!9799 = !DILocation(line: 376, column: 6, scope: !9614, inlinedAt: !9618)
!9800 = !DILocation(line: 376, column: 32, scope: !9797, inlinedAt: !9618)
!9801 = !DILocation(line: 377, column: 6, scope: !9802, inlinedAt: !9618)
!9802 = distinct !DILexicalBlock(scope: !9614, file: !7779, line: 377, column: 6)
!9803 = !DILocation(line: 377, column: 11, scope: !9802, inlinedAt: !9618)
!9804 = !DILocation(line: 377, column: 6, scope: !9614, inlinedAt: !9618)
!9805 = !DILocation(line: 377, column: 32, scope: !9802, inlinedAt: !9618)
!9806 = !DILocation(line: 378, column: 6, scope: !9807, inlinedAt: !9618)
!9807 = distinct !DILexicalBlock(scope: !9614, file: !7779, line: 378, column: 6)
!9808 = !DILocation(line: 378, column: 11, scope: !9807, inlinedAt: !9618)
!9809 = !DILocation(line: 378, column: 6, scope: !9614, inlinedAt: !9618)
!9810 = !DILocation(line: 378, column: 32, scope: !9807, inlinedAt: !9618)
!9811 = !DILocation(line: 379, column: 6, scope: !9812, inlinedAt: !9618)
!9812 = distinct !DILexicalBlock(scope: !9614, file: !7779, line: 379, column: 6)
!9813 = !DILocation(line: 379, column: 11, scope: !9812, inlinedAt: !9618)
!9814 = !DILocation(line: 379, column: 6, scope: !9614, inlinedAt: !9618)
!9815 = !DILocation(line: 379, column: 33, scope: !9812, inlinedAt: !9618)
!9816 = !DILocation(line: 380, column: 6, scope: !9817, inlinedAt: !9618)
!9817 = distinct !DILexicalBlock(scope: !9614, file: !7779, line: 380, column: 6)
!9818 = !DILocation(line: 380, column: 11, scope: !9817, inlinedAt: !9618)
!9819 = !DILocation(line: 380, column: 6, scope: !9614, inlinedAt: !9618)
!9820 = !DILocation(line: 380, column: 33, scope: !9817, inlinedAt: !9618)
!9821 = !DILocation(line: 381, column: 6, scope: !9822, inlinedAt: !9618)
!9822 = distinct !DILexicalBlock(scope: !9614, file: !7779, line: 381, column: 6)
!9823 = !DILocation(line: 381, column: 11, scope: !9822, inlinedAt: !9618)
!9824 = !DILocation(line: 381, column: 6, scope: !9614, inlinedAt: !9618)
!9825 = !DILocation(line: 381, column: 33, scope: !9822, inlinedAt: !9618)
!9826 = !DILocation(line: 382, column: 2, scope: !9827, inlinedAt: !9618)
!9827 = distinct !DILexicalBlock(scope: !9828, file: !7779, line: 382, column: 2)
!9828 = distinct !DILexicalBlock(scope: !9614, file: !7779, line: 382, column: 2)
!9829 = !{i32 -2141895326, i32 -2141895297, i32 -2141895251, i32 -2141895193, i32 -2141895139, i32 -2141895085, i32 -2141895030, i32 -2141894999}
!9830 = !DILocation(line: 382, column: 2, scope: !9831, inlinedAt: !9618)
!9831 = distinct !DILexicalBlock(scope: !9832, file: !7779, line: 382, column: 2)
!9832 = distinct !DILexicalBlock(scope: !9828, file: !7779, line: 382, column: 2)
!9833 = !{i32 -2141894556, i32 -2141894549, i32 -2141894495, i32 -2141894464, i32 -2141894434}
!9834 = !DILocation(line: 382, column: 2, scope: !9832, inlinedAt: !9618)
!9835 = !DILocation(line: 386, column: 1, scope: !9614, inlinedAt: !9618)
!9836 = !DILocation(line: 547, column: 9, scope: !9595, inlinedAt: !9600)
!9837 = !DILocation(line: 549, column: 8, scope: !9838, inlinedAt: !9600)
!9838 = distinct !DILexicalBlock(scope: !9595, file: !7779, line: 549, column: 7)
!9839 = !DILocation(line: 549, column: 7, scope: !9595, inlinedAt: !9600)
!9840 = !DILocation(line: 550, column: 4, scope: !9838, inlinedAt: !9600)
!9841 = !DILocation(line: 553, column: 33, scope: !9595, inlinedAt: !9600)
!9842 = !DILocation(line: 325, column: 6, scope: !9843, inlinedAt: !9612)
!9843 = distinct !DILexicalBlock(scope: !9608, file: !7779, line: 325, column: 6)
!9844 = !DILocation(line: 325, column: 6, scope: !9608, inlinedAt: !9612)
!9845 = !DILocation(line: 326, column: 3, scope: !9843, inlinedAt: !9612)
!9846 = !DILocation(line: 332, column: 9, scope: !9608, inlinedAt: !9612)
!9847 = !DILocation(line: 332, column: 15, scope: !9608, inlinedAt: !9612)
!9848 = !DILocation(line: 332, column: 2, scope: !9608, inlinedAt: !9612)
!9849 = !DILocation(line: 336, column: 1, scope: !9608, inlinedAt: !9612)
!9850 = !DILocation(line: 553, column: 5, scope: !9595, inlinedAt: !9600)
!9851 = !DILocation(line: 553, column: 41, scope: !9595, inlinedAt: !9600)
!9852 = !DILocation(line: 554, column: 5, scope: !9595, inlinedAt: !9600)
!9853 = !DILocation(line: 554, column: 12, scope: !9595, inlinedAt: !9600)
!9854 = !DILocation(line: 448, column: 31, scope: !9590, inlinedAt: !9594)
!9855 = !DILocation(line: 448, column: 34, scope: !9590, inlinedAt: !9594)
!9856 = !DILocation(line: 448, column: 14, scope: !9590, inlinedAt: !9594)
!9857 = !DILocation(line: 450, column: 22, scope: !9590, inlinedAt: !9594)
!9858 = !DILocation(line: 450, column: 25, scope: !9590, inlinedAt: !9594)
!9859 = !DILocation(line: 450, column: 30, scope: !9590, inlinedAt: !9594)
!9860 = !DILocation(line: 450, column: 36, scope: !9590, inlinedAt: !9594)
!9861 = !DILocation(line: 450, column: 8, scope: !9590, inlinedAt: !9594)
!9862 = !DILocation(line: 450, column: 6, scope: !9590, inlinedAt: !9594)
!9863 = !DILocation(line: 451, column: 9, scope: !9590, inlinedAt: !9594)
!9864 = !DILocation(line: 552, column: 3, scope: !9595, inlinedAt: !9600)
!9865 = !DILocation(line: 557, column: 19, scope: !9597, inlinedAt: !9600)
!9866 = !DILocation(line: 557, column: 25, scope: !9597, inlinedAt: !9600)
!9867 = !DILocation(line: 557, column: 9, scope: !9597, inlinedAt: !9600)
!9868 = !DILocation(line: 557, column: 2, scope: !9597, inlinedAt: !9600)
!9869 = !DILocation(line: 558, column: 1, scope: !9597, inlinedAt: !9600)
!9870 = !DILocation(line: 2140, column: 13, scope: !9584)
!9871 = !DILocation(line: 2140, column: 11, scope: !9584)
!9872 = !DILocation(line: 2141, column: 7, scope: !9873)
!9873 = distinct !DILexicalBlock(scope: !9584, file: !3, line: 2141, column: 6)
!9874 = !DILocation(line: 2141, column: 6, scope: !9584)
!9875 = !DILocation(line: 2142, column: 3, scope: !9873)
!9876 = !DILocation(line: 2143, column: 2, scope: !9584)
!9877 = !DILocation(line: 2143, column: 12, scope: !9584)
!9878 = !DILocation(line: 2143, column: 19, scope: !9584)
!9879 = !DILocation(line: 2143, column: 18, scope: !9584)
!9880 = !DILocation(line: 2144, column: 19, scope: !9584)
!9881 = !DILocation(line: 2144, column: 2, scope: !9584)
!9882 = !DILocation(line: 2144, column: 12, scope: !9584)
!9883 = !DILocation(line: 2144, column: 17, scope: !9584)
!9884 = !DILocation(line: 2145, column: 22, scope: !9584)
!9885 = !DILocation(line: 2145, column: 2, scope: !9584)
!9886 = !DILocation(line: 2145, column: 12, scope: !9584)
!9887 = !DILocation(line: 2145, column: 20, scope: !9584)
!9888 = !DILocation(line: 2147, column: 16, scope: !9584)
!9889 = !DILocation(line: 2147, column: 26, scope: !9584)
!9890 = !DILocation(line: 2147, column: 33, scope: !9584)
!9891 = !DILocation(line: 2147, column: 45, scope: !9584)
!9892 = !DILocation(line: 2147, column: 2, scope: !9584)
!9893 = !DILocation(line: 2148, column: 2, scope: !9584)
!9894 = !DILocation(line: 2149, column: 1, scope: !9584)
!9895 = distinct !DISubprogram(name: "__find_rx_listener_item", scope: !3, file: !3, line: 2119, type: !9896, scopeLine: 2121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!9896 = !DISubroutineType(types: !9897)
!9897 = !{!8160, !7847, !9587}
!9898 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !9895, file: !3, line: 2119, type: !7847)
!9899 = !DILocation(line: 2119, column: 44, scope: !9895)
!9900 = !DILocalVariable(name: "rxl", arg: 2, scope: !9895, file: !3, line: 2120, type: !9587)
!9901 = !DILocation(line: 2120, column: 36, scope: !9895)
!9902 = !DILocalVariable(name: "rxl_item", scope: !9895, file: !3, line: 2122, type: !8160)
!9903 = !DILocation(line: 2122, column: 33, scope: !9895)
!9904 = !DILocalVariable(name: "__mptr", scope: !9905, file: !3, line: 2124, type: !637)
!9905 = distinct !DILexicalBlock(scope: !9906, file: !3, line: 2124, column: 2)
!9906 = distinct !DILexicalBlock(scope: !9895, file: !3, line: 2124, column: 2)
!9907 = !DILocation(line: 2124, column: 2, scope: !9905)
!9908 = !DILocation(line: 2124, column: 2, scope: !9909)
!9909 = distinct !DILexicalBlock(scope: !9905, file: !3, line: 2124, column: 2)
!9910 = !DILocation(line: 2124, column: 2, scope: !9906)
!9911 = !DILocation(line: 2124, column: 2, scope: !9912)
!9912 = distinct !DILexicalBlock(scope: !9906, file: !3, line: 2124, column: 2)
!9913 = !DILocation(line: 2125, column: 31, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9915, file: !3, line: 2125, column: 7)
!9915 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 2124, column: 69)
!9916 = !DILocation(line: 2125, column: 41, scope: !9914)
!9917 = !DILocation(line: 2125, column: 46, scope: !9914)
!9918 = !DILocation(line: 2125, column: 7, scope: !9914)
!9919 = !DILocation(line: 2125, column: 7, scope: !9915)
!9920 = !DILocation(line: 2126, column: 11, scope: !9914)
!9921 = !DILocation(line: 2126, column: 4, scope: !9914)
!9922 = !DILocation(line: 2127, column: 2, scope: !9915)
!9923 = !DILocalVariable(name: "__mptr", scope: !9924, file: !3, line: 2124, type: !637)
!9924 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 2124, column: 2)
!9925 = !DILocation(line: 2124, column: 2, scope: !9924)
!9926 = !DILocation(line: 2124, column: 2, scope: !9927)
!9927 = distinct !DILexicalBlock(scope: !9924, file: !3, line: 2124, column: 2)
!9928 = distinct !{!9928, !9910, !9929}
!9929 = !DILocation(line: 2127, column: 2, scope: !9906)
!9930 = !DILocation(line: 2128, column: 2, scope: !9895)
!9931 = !DILocation(line: 2129, column: 1, scope: !9895)
!9932 = distinct !DISubprogram(name: "list_add_rcu", scope: !9933, file: !9933, line: 113, type: !8933, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!9933 = !DIFile(filename: "./include/linux/rculist.h", directory: "/home/lizy2001/genbc/linux")
!9934 = !DILocalVariable(name: "new", arg: 1, scope: !9932, file: !9933, line: 113, type: !333)
!9935 = !DILocation(line: 113, column: 51, scope: !9932)
!9936 = !DILocalVariable(name: "head", arg: 2, scope: !9932, file: !9933, line: 113, type: !333)
!9937 = !DILocation(line: 113, column: 74, scope: !9932)
!9938 = !DILocation(line: 115, column: 17, scope: !9932)
!9939 = !DILocation(line: 115, column: 22, scope: !9932)
!9940 = !DILocation(line: 115, column: 28, scope: !9932)
!9941 = !DILocation(line: 115, column: 34, scope: !9932)
!9942 = !DILocation(line: 115, column: 2, scope: !9932)
!9943 = !DILocation(line: 116, column: 1, scope: !9932)
!9944 = distinct !DISubprogram(name: "mlxsw_core_rx_listener_unregister", scope: !3, file: !3, line: 2152, type: !9945, scopeLine: 2154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!9945 = !DISubroutineType(types: !9946)
!9946 = !{null, !7847, !9587}
!9947 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !9944, file: !3, line: 2152, type: !7847)
!9948 = !DILocation(line: 2152, column: 59, scope: !9944)
!9949 = !DILocalVariable(name: "rxl", arg: 2, scope: !9944, file: !3, line: 2153, type: !9587)
!9950 = !DILocation(line: 2153, column: 44, scope: !9944)
!9951 = !DILocalVariable(name: "rxl_item", scope: !9944, file: !3, line: 2155, type: !8160)
!9952 = !DILocation(line: 2155, column: 33, scope: !9944)
!9953 = !DILocation(line: 2157, column: 37, scope: !9944)
!9954 = !DILocation(line: 2157, column: 49, scope: !9944)
!9955 = !DILocation(line: 2157, column: 13, scope: !9944)
!9956 = !DILocation(line: 2157, column: 11, scope: !9944)
!9957 = !DILocation(line: 2158, column: 7, scope: !9958)
!9958 = distinct !DILexicalBlock(scope: !9944, file: !3, line: 2158, column: 6)
!9959 = !DILocation(line: 2158, column: 6, scope: !9944)
!9960 = !DILocation(line: 2159, column: 3, scope: !9958)
!9961 = !DILocation(line: 2160, column: 16, scope: !9944)
!9962 = !DILocation(line: 2160, column: 26, scope: !9944)
!9963 = !DILocation(line: 2160, column: 2, scope: !9944)
!9964 = !DILocation(line: 2161, column: 2, scope: !9944)
!9965 = !DILocation(line: 2162, column: 8, scope: !9944)
!9966 = !DILocation(line: 2162, column: 2, scope: !9944)
!9967 = !DILocation(line: 2163, column: 1, scope: !9944)
!9968 = distinct !DISubprogram(name: "list_del_rcu", scope: !9933, file: !9933, line: 164, type: !8963, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!9969 = !DILocalVariable(name: "entry", arg: 1, scope: !9968, file: !9933, line: 164, type: !333)
!9970 = !DILocation(line: 164, column: 51, scope: !9968)
!9971 = !DILocation(line: 166, column: 19, scope: !9968)
!9972 = !DILocation(line: 166, column: 2, scope: !9968)
!9973 = !DILocation(line: 167, column: 2, scope: !9968)
!9974 = !DILocation(line: 167, column: 9, scope: !9968)
!9975 = !DILocation(line: 167, column: 14, scope: !9968)
!9976 = !DILocation(line: 168, column: 1, scope: !9968)
!9977 = distinct !DISubprogram(name: "mlxsw_core_event_listener_register", scope: !3, file: !3, line: 2219, type: !9978, scopeLine: 2222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!9978 = !DISubroutineType(types: !9979)
!9979 = !{!78, !7847, !9980, !637}
!9980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9981, size: 64)
!9981 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8261)
!9982 = !DILocation(line: 445, column: 72, scope: !9590, inlinedAt: !9983)
!9983 = distinct !DILocation(line: 552, column: 10, scope: !9595, inlinedAt: !9984)
!9984 = distinct !DILocation(line: 2234, column: 12, scope: !9977)
!9985 = !DILocation(line: 446, column: 9, scope: !9590, inlinedAt: !9983)
!9986 = !DILocation(line: 446, column: 23, scope: !9590, inlinedAt: !9983)
!9987 = !DILocation(line: 448, column: 8, scope: !9590, inlinedAt: !9983)
!9988 = !DILocation(line: 318, column: 67, scope: !9608, inlinedAt: !9989)
!9989 = distinct !DILocation(line: 553, column: 20, scope: !9595, inlinedAt: !9984)
!9990 = !DILocation(line: 346, column: 58, scope: !9614, inlinedAt: !9991)
!9991 = distinct !DILocation(line: 547, column: 11, scope: !9595, inlinedAt: !9984)
!9992 = !DILocation(line: 472, column: 28, scope: !9620, inlinedAt: !9993)
!9993 = distinct !DILocation(line: 481, column: 9, scope: !9625, inlinedAt: !9994)
!9994 = distinct !DILocation(line: 545, column: 11, scope: !9627, inlinedAt: !9984)
!9995 = !DILocation(line: 472, column: 40, scope: !9620, inlinedAt: !9993)
!9996 = !DILocation(line: 472, column: 60, scope: !9620, inlinedAt: !9993)
!9997 = !DILocation(line: 478, column: 51, scope: !9625, inlinedAt: !9994)
!9998 = !DILocation(line: 478, column: 63, scope: !9625, inlinedAt: !9994)
!9999 = !DILocation(line: 480, column: 15, scope: !9625, inlinedAt: !9994)
!10000 = !DILocation(line: 538, column: 45, scope: !9597, inlinedAt: !9984)
!10001 = !DILocation(line: 538, column: 57, scope: !9597, inlinedAt: !9984)
!10002 = !DILocation(line: 542, column: 16, scope: !9595, inlinedAt: !9984)
!10003 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !9977, file: !3, line: 2219, type: !7847)
!10004 = !DILocation(line: 2219, column: 59, scope: !9977)
!10005 = !DILocalVariable(name: "el", arg: 2, scope: !9977, file: !3, line: 2220, type: !9980)
!10006 = !DILocation(line: 2220, column: 47, scope: !9977)
!10007 = !DILocalVariable(name: "priv", arg: 3, scope: !9977, file: !3, line: 2221, type: !637)
!10008 = !DILocation(line: 2221, column: 18, scope: !9977)
!10009 = !DILocalVariable(name: "err", scope: !9977, file: !3, line: 2223, type: !78)
!10010 = !DILocation(line: 2223, column: 6, scope: !9977)
!10011 = !DILocalVariable(name: "el_item", scope: !9977, file: !3, line: 2224, type: !8256)
!10012 = !DILocation(line: 2224, column: 36, scope: !9977)
!10013 = !DILocalVariable(name: "rxl", scope: !9977, file: !3, line: 2225, type: !9588)
!10014 = !DILocation(line: 2225, column: 33, scope: !9977)
!10015 = !DILocation(line: 2225, column: 39, scope: !9977)
!10016 = !DILocation(line: 2228, column: 14, scope: !9977)
!10017 = !DILocation(line: 2228, column: 18, scope: !9977)
!10018 = !DILocation(line: 2231, column: 39, scope: !9977)
!10019 = !DILocation(line: 2231, column: 51, scope: !9977)
!10020 = !DILocation(line: 2231, column: 12, scope: !9977)
!10021 = !DILocation(line: 2231, column: 10, scope: !9977)
!10022 = !DILocation(line: 2232, column: 6, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !9977, file: !3, line: 2232, column: 6)
!10024 = !DILocation(line: 2232, column: 6, scope: !9977)
!10025 = !DILocation(line: 2233, column: 3, scope: !10023)
!10026 = !DILocation(line: 540, column: 27, scope: !9596, inlinedAt: !9984)
!10027 = !DILocation(line: 540, column: 6, scope: !9596, inlinedAt: !9984)
!10028 = !DILocation(line: 540, column: 6, scope: !9597, inlinedAt: !9984)
!10029 = !DILocation(line: 544, column: 7, scope: !9627, inlinedAt: !9984)
!10030 = !DILocation(line: 544, column: 12, scope: !9627, inlinedAt: !9984)
!10031 = !DILocation(line: 544, column: 7, scope: !9595, inlinedAt: !9984)
!10032 = !DILocation(line: 545, column: 25, scope: !9627, inlinedAt: !9984)
!10033 = !DILocation(line: 545, column: 31, scope: !9627, inlinedAt: !9984)
!10034 = !DILocation(line: 480, column: 33, scope: !9625, inlinedAt: !9994)
!10035 = !DILocation(line: 480, column: 23, scope: !9625, inlinedAt: !9994)
!10036 = !DILocation(line: 481, column: 29, scope: !9625, inlinedAt: !9994)
!10037 = !DILocation(line: 481, column: 35, scope: !9625, inlinedAt: !9994)
!10038 = !DILocation(line: 481, column: 42, scope: !9625, inlinedAt: !9994)
!10039 = !DILocation(line: 474, column: 23, scope: !9620, inlinedAt: !9993)
!10040 = !DILocation(line: 474, column: 29, scope: !9620, inlinedAt: !9993)
!10041 = !DILocation(line: 474, column: 36, scope: !9620, inlinedAt: !9993)
!10042 = !DILocation(line: 474, column: 9, scope: !9620, inlinedAt: !9993)
!10043 = !DILocation(line: 545, column: 4, scope: !9627, inlinedAt: !9984)
!10044 = !DILocation(line: 547, column: 25, scope: !9595, inlinedAt: !9984)
!10045 = !DILocation(line: 348, column: 7, scope: !9682, inlinedAt: !9991)
!10046 = !DILocation(line: 348, column: 6, scope: !9614, inlinedAt: !9991)
!10047 = !DILocation(line: 349, column: 3, scope: !9682, inlinedAt: !9991)
!10048 = !DILocation(line: 351, column: 6, scope: !9686, inlinedAt: !9991)
!10049 = !DILocation(line: 351, column: 11, scope: !9686, inlinedAt: !9991)
!10050 = !DILocation(line: 351, column: 6, scope: !9614, inlinedAt: !9991)
!10051 = !DILocation(line: 352, column: 3, scope: !9686, inlinedAt: !9991)
!10052 = !DILocation(line: 354, column: 32, scope: !9691, inlinedAt: !9991)
!10053 = !DILocation(line: 354, column: 37, scope: !9691, inlinedAt: !9991)
!10054 = !DILocation(line: 354, column: 42, scope: !9691, inlinedAt: !9991)
!10055 = !DILocation(line: 354, column: 45, scope: !9691, inlinedAt: !9991)
!10056 = !DILocation(line: 354, column: 50, scope: !9691, inlinedAt: !9991)
!10057 = !DILocation(line: 354, column: 6, scope: !9614, inlinedAt: !9991)
!10058 = !DILocation(line: 355, column: 3, scope: !9691, inlinedAt: !9991)
!10059 = !DILocation(line: 356, column: 32, scope: !9699, inlinedAt: !9991)
!10060 = !DILocation(line: 356, column: 37, scope: !9699, inlinedAt: !9991)
!10061 = !DILocation(line: 356, column: 43, scope: !9699, inlinedAt: !9991)
!10062 = !DILocation(line: 356, column: 46, scope: !9699, inlinedAt: !9991)
!10063 = !DILocation(line: 356, column: 51, scope: !9699, inlinedAt: !9991)
!10064 = !DILocation(line: 356, column: 6, scope: !9614, inlinedAt: !9991)
!10065 = !DILocation(line: 357, column: 3, scope: !9699, inlinedAt: !9991)
!10066 = !DILocation(line: 358, column: 6, scope: !9707, inlinedAt: !9991)
!10067 = !DILocation(line: 358, column: 11, scope: !9707, inlinedAt: !9991)
!10068 = !DILocation(line: 358, column: 6, scope: !9614, inlinedAt: !9991)
!10069 = !DILocation(line: 358, column: 26, scope: !9707, inlinedAt: !9991)
!10070 = !DILocation(line: 359, column: 6, scope: !9712, inlinedAt: !9991)
!10071 = !DILocation(line: 359, column: 11, scope: !9712, inlinedAt: !9991)
!10072 = !DILocation(line: 359, column: 6, scope: !9614, inlinedAt: !9991)
!10073 = !DILocation(line: 359, column: 26, scope: !9712, inlinedAt: !9991)
!10074 = !DILocation(line: 360, column: 6, scope: !9717, inlinedAt: !9991)
!10075 = !DILocation(line: 360, column: 11, scope: !9717, inlinedAt: !9991)
!10076 = !DILocation(line: 360, column: 6, scope: !9614, inlinedAt: !9991)
!10077 = !DILocation(line: 360, column: 26, scope: !9717, inlinedAt: !9991)
!10078 = !DILocation(line: 361, column: 6, scope: !9722, inlinedAt: !9991)
!10079 = !DILocation(line: 361, column: 11, scope: !9722, inlinedAt: !9991)
!10080 = !DILocation(line: 361, column: 6, scope: !9614, inlinedAt: !9991)
!10081 = !DILocation(line: 361, column: 26, scope: !9722, inlinedAt: !9991)
!10082 = !DILocation(line: 362, column: 6, scope: !9727, inlinedAt: !9991)
!10083 = !DILocation(line: 362, column: 11, scope: !9727, inlinedAt: !9991)
!10084 = !DILocation(line: 362, column: 6, scope: !9614, inlinedAt: !9991)
!10085 = !DILocation(line: 362, column: 26, scope: !9727, inlinedAt: !9991)
!10086 = !DILocation(line: 363, column: 6, scope: !9732, inlinedAt: !9991)
!10087 = !DILocation(line: 363, column: 11, scope: !9732, inlinedAt: !9991)
!10088 = !DILocation(line: 363, column: 6, scope: !9614, inlinedAt: !9991)
!10089 = !DILocation(line: 363, column: 26, scope: !9732, inlinedAt: !9991)
!10090 = !DILocation(line: 364, column: 6, scope: !9737, inlinedAt: !9991)
!10091 = !DILocation(line: 364, column: 11, scope: !9737, inlinedAt: !9991)
!10092 = !DILocation(line: 364, column: 6, scope: !9614, inlinedAt: !9991)
!10093 = !DILocation(line: 364, column: 26, scope: !9737, inlinedAt: !9991)
!10094 = !DILocation(line: 365, column: 6, scope: !9742, inlinedAt: !9991)
!10095 = !DILocation(line: 365, column: 11, scope: !9742, inlinedAt: !9991)
!10096 = !DILocation(line: 365, column: 6, scope: !9614, inlinedAt: !9991)
!10097 = !DILocation(line: 365, column: 26, scope: !9742, inlinedAt: !9991)
!10098 = !DILocation(line: 366, column: 6, scope: !9747, inlinedAt: !9991)
!10099 = !DILocation(line: 366, column: 11, scope: !9747, inlinedAt: !9991)
!10100 = !DILocation(line: 366, column: 6, scope: !9614, inlinedAt: !9991)
!10101 = !DILocation(line: 366, column: 26, scope: !9747, inlinedAt: !9991)
!10102 = !DILocation(line: 367, column: 6, scope: !9752, inlinedAt: !9991)
!10103 = !DILocation(line: 367, column: 11, scope: !9752, inlinedAt: !9991)
!10104 = !DILocation(line: 367, column: 6, scope: !9614, inlinedAt: !9991)
!10105 = !DILocation(line: 367, column: 26, scope: !9752, inlinedAt: !9991)
!10106 = !DILocation(line: 368, column: 6, scope: !9757, inlinedAt: !9991)
!10107 = !DILocation(line: 368, column: 11, scope: !9757, inlinedAt: !9991)
!10108 = !DILocation(line: 368, column: 6, scope: !9614, inlinedAt: !9991)
!10109 = !DILocation(line: 368, column: 26, scope: !9757, inlinedAt: !9991)
!10110 = !DILocation(line: 369, column: 6, scope: !9762, inlinedAt: !9991)
!10111 = !DILocation(line: 369, column: 11, scope: !9762, inlinedAt: !9991)
!10112 = !DILocation(line: 369, column: 6, scope: !9614, inlinedAt: !9991)
!10113 = !DILocation(line: 369, column: 26, scope: !9762, inlinedAt: !9991)
!10114 = !DILocation(line: 370, column: 6, scope: !9767, inlinedAt: !9991)
!10115 = !DILocation(line: 370, column: 11, scope: !9767, inlinedAt: !9991)
!10116 = !DILocation(line: 370, column: 6, scope: !9614, inlinedAt: !9991)
!10117 = !DILocation(line: 370, column: 26, scope: !9767, inlinedAt: !9991)
!10118 = !DILocation(line: 371, column: 6, scope: !9772, inlinedAt: !9991)
!10119 = !DILocation(line: 371, column: 11, scope: !9772, inlinedAt: !9991)
!10120 = !DILocation(line: 371, column: 6, scope: !9614, inlinedAt: !9991)
!10121 = !DILocation(line: 371, column: 26, scope: !9772, inlinedAt: !9991)
!10122 = !DILocation(line: 372, column: 6, scope: !9777, inlinedAt: !9991)
!10123 = !DILocation(line: 372, column: 11, scope: !9777, inlinedAt: !9991)
!10124 = !DILocation(line: 372, column: 6, scope: !9614, inlinedAt: !9991)
!10125 = !DILocation(line: 372, column: 26, scope: !9777, inlinedAt: !9991)
!10126 = !DILocation(line: 373, column: 6, scope: !9782, inlinedAt: !9991)
!10127 = !DILocation(line: 373, column: 11, scope: !9782, inlinedAt: !9991)
!10128 = !DILocation(line: 373, column: 6, scope: !9614, inlinedAt: !9991)
!10129 = !DILocation(line: 373, column: 26, scope: !9782, inlinedAt: !9991)
!10130 = !DILocation(line: 374, column: 6, scope: !9787, inlinedAt: !9991)
!10131 = !DILocation(line: 374, column: 11, scope: !9787, inlinedAt: !9991)
!10132 = !DILocation(line: 374, column: 6, scope: !9614, inlinedAt: !9991)
!10133 = !DILocation(line: 374, column: 26, scope: !9787, inlinedAt: !9991)
!10134 = !DILocation(line: 375, column: 6, scope: !9792, inlinedAt: !9991)
!10135 = !DILocation(line: 375, column: 11, scope: !9792, inlinedAt: !9991)
!10136 = !DILocation(line: 375, column: 6, scope: !9614, inlinedAt: !9991)
!10137 = !DILocation(line: 375, column: 27, scope: !9792, inlinedAt: !9991)
!10138 = !DILocation(line: 376, column: 6, scope: !9797, inlinedAt: !9991)
!10139 = !DILocation(line: 376, column: 11, scope: !9797, inlinedAt: !9991)
!10140 = !DILocation(line: 376, column: 6, scope: !9614, inlinedAt: !9991)
!10141 = !DILocation(line: 376, column: 32, scope: !9797, inlinedAt: !9991)
!10142 = !DILocation(line: 377, column: 6, scope: !9802, inlinedAt: !9991)
!10143 = !DILocation(line: 377, column: 11, scope: !9802, inlinedAt: !9991)
!10144 = !DILocation(line: 377, column: 6, scope: !9614, inlinedAt: !9991)
!10145 = !DILocation(line: 377, column: 32, scope: !9802, inlinedAt: !9991)
!10146 = !DILocation(line: 378, column: 6, scope: !9807, inlinedAt: !9991)
!10147 = !DILocation(line: 378, column: 11, scope: !9807, inlinedAt: !9991)
!10148 = !DILocation(line: 378, column: 6, scope: !9614, inlinedAt: !9991)
!10149 = !DILocation(line: 378, column: 32, scope: !9807, inlinedAt: !9991)
!10150 = !DILocation(line: 379, column: 6, scope: !9812, inlinedAt: !9991)
!10151 = !DILocation(line: 379, column: 11, scope: !9812, inlinedAt: !9991)
!10152 = !DILocation(line: 379, column: 6, scope: !9614, inlinedAt: !9991)
!10153 = !DILocation(line: 379, column: 33, scope: !9812, inlinedAt: !9991)
!10154 = !DILocation(line: 380, column: 6, scope: !9817, inlinedAt: !9991)
!10155 = !DILocation(line: 380, column: 11, scope: !9817, inlinedAt: !9991)
!10156 = !DILocation(line: 380, column: 6, scope: !9614, inlinedAt: !9991)
!10157 = !DILocation(line: 380, column: 33, scope: !9817, inlinedAt: !9991)
!10158 = !DILocation(line: 381, column: 6, scope: !9822, inlinedAt: !9991)
!10159 = !DILocation(line: 381, column: 11, scope: !9822, inlinedAt: !9991)
!10160 = !DILocation(line: 381, column: 6, scope: !9614, inlinedAt: !9991)
!10161 = !DILocation(line: 381, column: 33, scope: !9822, inlinedAt: !9991)
!10162 = !DILocation(line: 382, column: 2, scope: !9827, inlinedAt: !9991)
!10163 = !DILocation(line: 382, column: 2, scope: !9831, inlinedAt: !9991)
!10164 = !DILocation(line: 382, column: 2, scope: !9832, inlinedAt: !9991)
!10165 = !DILocation(line: 386, column: 1, scope: !9614, inlinedAt: !9991)
!10166 = !DILocation(line: 547, column: 9, scope: !9595, inlinedAt: !9984)
!10167 = !DILocation(line: 549, column: 8, scope: !9838, inlinedAt: !9984)
!10168 = !DILocation(line: 549, column: 7, scope: !9595, inlinedAt: !9984)
!10169 = !DILocation(line: 550, column: 4, scope: !9838, inlinedAt: !9984)
!10170 = !DILocation(line: 553, column: 33, scope: !9595, inlinedAt: !9984)
!10171 = !DILocation(line: 325, column: 6, scope: !9843, inlinedAt: !9989)
!10172 = !DILocation(line: 325, column: 6, scope: !9608, inlinedAt: !9989)
!10173 = !DILocation(line: 326, column: 3, scope: !9843, inlinedAt: !9989)
!10174 = !DILocation(line: 332, column: 9, scope: !9608, inlinedAt: !9989)
!10175 = !DILocation(line: 332, column: 15, scope: !9608, inlinedAt: !9989)
!10176 = !DILocation(line: 332, column: 2, scope: !9608, inlinedAt: !9989)
!10177 = !DILocation(line: 336, column: 1, scope: !9608, inlinedAt: !9989)
!10178 = !DILocation(line: 553, column: 5, scope: !9595, inlinedAt: !9984)
!10179 = !DILocation(line: 553, column: 41, scope: !9595, inlinedAt: !9984)
!10180 = !DILocation(line: 554, column: 5, scope: !9595, inlinedAt: !9984)
!10181 = !DILocation(line: 554, column: 12, scope: !9595, inlinedAt: !9984)
!10182 = !DILocation(line: 448, column: 31, scope: !9590, inlinedAt: !9983)
!10183 = !DILocation(line: 448, column: 34, scope: !9590, inlinedAt: !9983)
!10184 = !DILocation(line: 448, column: 14, scope: !9590, inlinedAt: !9983)
!10185 = !DILocation(line: 450, column: 22, scope: !9590, inlinedAt: !9983)
!10186 = !DILocation(line: 450, column: 25, scope: !9590, inlinedAt: !9983)
!10187 = !DILocation(line: 450, column: 30, scope: !9590, inlinedAt: !9983)
!10188 = !DILocation(line: 450, column: 36, scope: !9590, inlinedAt: !9983)
!10189 = !DILocation(line: 450, column: 8, scope: !9590, inlinedAt: !9983)
!10190 = !DILocation(line: 450, column: 6, scope: !9590, inlinedAt: !9983)
!10191 = !DILocation(line: 451, column: 9, scope: !9590, inlinedAt: !9983)
!10192 = !DILocation(line: 552, column: 3, scope: !9595, inlinedAt: !9984)
!10193 = !DILocation(line: 557, column: 19, scope: !9597, inlinedAt: !9984)
!10194 = !DILocation(line: 557, column: 25, scope: !9597, inlinedAt: !9984)
!10195 = !DILocation(line: 557, column: 9, scope: !9597, inlinedAt: !9984)
!10196 = !DILocation(line: 557, column: 2, scope: !9597, inlinedAt: !9984)
!10197 = !DILocation(line: 558, column: 1, scope: !9597, inlinedAt: !9984)
!10198 = !DILocation(line: 2234, column: 12, scope: !9977)
!10199 = !DILocation(line: 2234, column: 10, scope: !9977)
!10200 = !DILocation(line: 2235, column: 7, scope: !10201)
!10201 = distinct !DILexicalBlock(scope: !9977, file: !3, line: 2235, column: 6)
!10202 = !DILocation(line: 2235, column: 6, scope: !9977)
!10203 = !DILocation(line: 2236, column: 3, scope: !10201)
!10204 = !DILocation(line: 2237, column: 2, scope: !9977)
!10205 = !DILocation(line: 2237, column: 11, scope: !9977)
!10206 = !DILocation(line: 2237, column: 17, scope: !9977)
!10207 = !DILocation(line: 2237, column: 16, scope: !9977)
!10208 = !DILocation(line: 2238, column: 18, scope: !9977)
!10209 = !DILocation(line: 2238, column: 2, scope: !9977)
!10210 = !DILocation(line: 2238, column: 11, scope: !9977)
!10211 = !DILocation(line: 2238, column: 16, scope: !9977)
!10212 = !DILocation(line: 2240, column: 40, scope: !9977)
!10213 = !DILocation(line: 2240, column: 58, scope: !9977)
!10214 = !DILocation(line: 2240, column: 8, scope: !9977)
!10215 = !DILocation(line: 2240, column: 6, scope: !9977)
!10216 = !DILocation(line: 2241, column: 6, scope: !10217)
!10217 = distinct !DILexicalBlock(scope: !9977, file: !3, line: 2241, column: 6)
!10218 = !DILocation(line: 2241, column: 6, scope: !9977)
!10219 = !DILocation(line: 2242, column: 3, scope: !10217)
!10220 = !DILocation(line: 2247, column: 16, scope: !9977)
!10221 = !DILocation(line: 2247, column: 25, scope: !9977)
!10222 = !DILocation(line: 2247, column: 32, scope: !9977)
!10223 = !DILocation(line: 2247, column: 44, scope: !9977)
!10224 = !DILocation(line: 2247, column: 2, scope: !9977)
!10225 = !DILocation(line: 2249, column: 2, scope: !9977)
!10226 = !DILabel(scope: !9977, name: "err_rx_listener_register", file: !3, line: 2251)
!10227 = !DILocation(line: 2251, column: 1, scope: !9977)
!10228 = !DILocation(line: 2252, column: 8, scope: !9977)
!10229 = !DILocation(line: 2252, column: 2, scope: !9977)
!10230 = !DILocation(line: 2253, column: 9, scope: !9977)
!10231 = !DILocation(line: 2253, column: 2, scope: !9977)
!10232 = !DILocation(line: 2254, column: 1, scope: !9977)
!10233 = distinct !DISubprogram(name: "mlxsw_core_event_listener_func", scope: !3, file: !3, line: 2179, type: !8169, scopeLine: 2181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!10234 = !DILocalVariable(name: "skb", arg: 1, scope: !10233, file: !3, line: 2179, type: !461)
!10235 = !DILocation(line: 2179, column: 60, scope: !10233)
!10236 = !DILocalVariable(name: "local_port", arg: 2, scope: !10233, file: !3, line: 2179, type: !840)
!10237 = !DILocation(line: 2179, column: 68, scope: !10233)
!10238 = !DILocalVariable(name: "priv", arg: 3, scope: !10233, file: !3, line: 2180, type: !637)
!10239 = !DILocation(line: 2180, column: 15, scope: !10233)
!10240 = !DILocalVariable(name: "event_listener_item", scope: !10233, file: !3, line: 2182, type: !8256)
!10241 = !DILocation(line: 2182, column: 36, scope: !10233)
!10242 = !DILocation(line: 2182, column: 58, scope: !10233)
!10243 = !DILocalVariable(name: "reg", scope: !10233, file: !3, line: 2183, type: !8147)
!10244 = !DILocation(line: 2183, column: 24, scope: !10233)
!10245 = !DILocalVariable(name: "payload", scope: !10233, file: !3, line: 2184, type: !1084)
!10246 = !DILocation(line: 2184, column: 8, scope: !10233)
!10247 = !DILocalVariable(name: "reg_tlv", scope: !10233, file: !3, line: 2185, type: !1084)
!10248 = !DILocation(line: 2185, column: 8, scope: !10233)
!10249 = !DILocalVariable(name: "op_tlv", scope: !10233, file: !3, line: 2186, type: !1084)
!10250 = !DILocation(line: 2186, column: 8, scope: !10233)
!10251 = !DILocation(line: 2188, column: 23, scope: !10233)
!10252 = !DILocation(line: 2188, column: 2, scope: !10233)
!10253 = !DILocation(line: 2189, column: 29, scope: !10233)
!10254 = !DILocation(line: 2189, column: 11, scope: !10233)
!10255 = !DILocation(line: 2189, column: 9, scope: !10233)
!10256 = !DILocation(line: 2190, column: 31, scope: !10233)
!10257 = !DILocation(line: 2190, column: 12, scope: !10233)
!10258 = !DILocation(line: 2190, column: 10, scope: !10233)
!10259 = !DILocation(line: 2192, column: 45, scope: !10233)
!10260 = !DILocation(line: 2192, column: 11, scope: !10233)
!10261 = !DILocation(line: 2192, column: 6, scope: !10233)
!10262 = !DILocation(line: 2192, column: 9, scope: !10233)
!10263 = !DILocation(line: 2193, column: 40, scope: !10233)
!10264 = !DILocation(line: 2193, column: 13, scope: !10233)
!10265 = !DILocation(line: 2193, column: 49, scope: !10233)
!10266 = !DILocation(line: 2193, column: 12, scope: !10233)
!10267 = !DILocation(line: 2193, column: 54, scope: !10233)
!10268 = !DILocation(line: 2193, column: 6, scope: !10233)
!10269 = !DILocation(line: 2193, column: 10, scope: !10233)
!10270 = !DILocation(line: 2194, column: 35, scope: !10233)
!10271 = !DILocation(line: 2194, column: 12, scope: !10233)
!10272 = !DILocation(line: 2194, column: 10, scope: !10233)
!10273 = !DILocation(line: 2195, column: 2, scope: !10233)
!10274 = !DILocation(line: 2195, column: 23, scope: !10233)
!10275 = !DILocation(line: 2195, column: 26, scope: !10233)
!10276 = !DILocation(line: 2195, column: 37, scope: !10233)
!10277 = !DILocation(line: 2195, column: 46, scope: !10233)
!10278 = !DILocation(line: 2195, column: 67, scope: !10233)
!10279 = !DILocation(line: 2196, column: 2, scope: !10233)
!10280 = !DILocation(line: 2197, column: 1, scope: !10233)
!10281 = distinct !DISubprogram(name: "__find_event_listener_item", scope: !3, file: !3, line: 2207, type: !10282, scopeLine: 2209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!10282 = !DISubroutineType(types: !10283)
!10283 = !{!8256, !7847, !9980}
!10284 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !10281, file: !3, line: 2207, type: !7847)
!10285 = !DILocation(line: 2207, column: 47, scope: !10281)
!10286 = !DILocalVariable(name: "el", arg: 2, scope: !10281, file: !3, line: 2208, type: !9980)
!10287 = !DILocation(line: 2208, column: 42, scope: !10281)
!10288 = !DILocalVariable(name: "el_item", scope: !10281, file: !3, line: 2210, type: !8256)
!10289 = !DILocation(line: 2210, column: 36, scope: !10281)
!10290 = !DILocalVariable(name: "__mptr", scope: !10291, file: !3, line: 2212, type: !637)
!10291 = distinct !DILexicalBlock(scope: !10292, file: !3, line: 2212, column: 2)
!10292 = distinct !DILexicalBlock(scope: !10281, file: !3, line: 2212, column: 2)
!10293 = !DILocation(line: 2212, column: 2, scope: !10291)
!10294 = !DILocation(line: 2212, column: 2, scope: !10295)
!10295 = distinct !DILexicalBlock(scope: !10291, file: !3, line: 2212, column: 2)
!10296 = !DILocation(line: 2212, column: 2, scope: !10292)
!10297 = !DILocation(line: 2212, column: 2, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !10292, file: !3, line: 2212, column: 2)
!10299 = !DILocation(line: 2213, column: 34, scope: !10300)
!10300 = distinct !DILexicalBlock(scope: !10301, file: !3, line: 2213, column: 7)
!10301 = distinct !DILexicalBlock(scope: !10298, file: !3, line: 2212, column: 71)
!10302 = !DILocation(line: 2213, column: 43, scope: !10300)
!10303 = !DILocation(line: 2213, column: 47, scope: !10300)
!10304 = !DILocation(line: 2213, column: 7, scope: !10300)
!10305 = !DILocation(line: 2213, column: 7, scope: !10301)
!10306 = !DILocation(line: 2214, column: 11, scope: !10300)
!10307 = !DILocation(line: 2214, column: 4, scope: !10300)
!10308 = !DILocation(line: 2215, column: 2, scope: !10301)
!10309 = !DILocalVariable(name: "__mptr", scope: !10310, file: !3, line: 2212, type: !637)
!10310 = distinct !DILexicalBlock(scope: !10298, file: !3, line: 2212, column: 2)
!10311 = !DILocation(line: 2212, column: 2, scope: !10310)
!10312 = !DILocation(line: 2212, column: 2, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !10310, file: !3, line: 2212, column: 2)
!10314 = distinct !{!10314, !10296, !10315}
!10315 = !DILocation(line: 2215, column: 2, scope: !10292)
!10316 = !DILocation(line: 2216, column: 2, scope: !10281)
!10317 = !DILocation(line: 2217, column: 1, scope: !10281)
!10318 = distinct !DISubprogram(name: "mlxsw_core_event_listener_unregister", scope: !3, file: !3, line: 2257, type: !10319, scopeLine: 2259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!10319 = !DISubroutineType(types: !10320)
!10320 = !{null, !7847, !9980}
!10321 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !10318, file: !3, line: 2257, type: !7847)
!10322 = !DILocation(line: 2257, column: 62, scope: !10318)
!10323 = !DILocalVariable(name: "el", arg: 2, scope: !10318, file: !3, line: 2258, type: !9980)
!10324 = !DILocation(line: 2258, column: 43, scope: !10318)
!10325 = !DILocalVariable(name: "el_item", scope: !10318, file: !3, line: 2260, type: !8256)
!10326 = !DILocation(line: 2260, column: 36, scope: !10318)
!10327 = !DILocalVariable(name: "rxl", scope: !10318, file: !3, line: 2261, type: !9588)
!10328 = !DILocation(line: 2261, column: 33, scope: !10318)
!10329 = !DILocation(line: 2261, column: 39, scope: !10318)
!10330 = !DILocation(line: 2264, column: 14, scope: !10318)
!10331 = !DILocation(line: 2264, column: 18, scope: !10318)
!10332 = !DILocation(line: 2267, column: 39, scope: !10318)
!10333 = !DILocation(line: 2267, column: 51, scope: !10318)
!10334 = !DILocation(line: 2267, column: 12, scope: !10318)
!10335 = !DILocation(line: 2267, column: 10, scope: !10318)
!10336 = !DILocation(line: 2268, column: 7, scope: !10337)
!10337 = distinct !DILexicalBlock(scope: !10318, file: !3, line: 2268, column: 6)
!10338 = !DILocation(line: 2268, column: 6, scope: !10318)
!10339 = !DILocation(line: 2269, column: 3, scope: !10337)
!10340 = !DILocation(line: 2270, column: 36, scope: !10318)
!10341 = !DILocation(line: 2270, column: 2, scope: !10318)
!10342 = !DILocation(line: 2271, column: 12, scope: !10318)
!10343 = !DILocation(line: 2271, column: 21, scope: !10318)
!10344 = !DILocation(line: 2271, column: 2, scope: !10318)
!10345 = !DILocation(line: 2272, column: 8, scope: !10318)
!10346 = !DILocation(line: 2272, column: 2, scope: !10318)
!10347 = !DILocation(line: 2273, column: 1, scope: !10318)
!10348 = distinct !DISubprogram(name: "mlxsw_core_trap_register", scope: !3, file: !3, line: 2304, type: !10349, scopeLine: 2306, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!10349 = !DISubroutineType(types: !10350)
!10350 = !{!78, !7847, !10351, !637}
!10351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8384, size: 64)
!10352 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !10348, file: !3, line: 2304, type: !7847)
!10353 = !DILocation(line: 2304, column: 49, scope: !10348)
!10354 = !DILocalVariable(name: "listener", arg: 2, scope: !10348, file: !3, line: 2305, type: !10351)
!10355 = !DILocation(line: 2305, column: 38, scope: !10348)
!10356 = !DILocalVariable(name: "priv", arg: 3, scope: !10348, file: !3, line: 2305, type: !637)
!10357 = !DILocation(line: 2305, column: 54, scope: !10348)
!10358 = !DILocalVariable(name: "trap_group", scope: !10348, file: !3, line: 2307, type: !7414)
!10359 = !DILocation(line: 2307, column: 33, scope: !10348)
!10360 = !DILocalVariable(name: "action", scope: !10348, file: !3, line: 2308, type: !7403)
!10361 = !DILocation(line: 2308, column: 29, scope: !10348)
!10362 = !DILocalVariable(name: "hpkt_pl", scope: !10348, file: !3, line: 2309, type: !313)
!10363 = !DILocation(line: 2309, column: 7, scope: !10348)
!10364 = !DILocalVariable(name: "err", scope: !10348, file: !3, line: 2310, type: !78)
!10365 = !DILocation(line: 2310, column: 6, scope: !10348)
!10366 = !DILocation(line: 2312, column: 37, scope: !10348)
!10367 = !DILocation(line: 2312, column: 49, scope: !10348)
!10368 = !DILocation(line: 2312, column: 59, scope: !10348)
!10369 = !DILocation(line: 2313, column: 9, scope: !10348)
!10370 = !DILocation(line: 2313, column: 19, scope: !10348)
!10371 = !DILocation(line: 2312, column: 8, scope: !10348)
!10372 = !DILocation(line: 2312, column: 6, scope: !10348)
!10373 = !DILocation(line: 2314, column: 6, scope: !10374)
!10374 = distinct !DILexicalBlock(scope: !10348, file: !3, line: 2314, column: 6)
!10375 = !DILocation(line: 2314, column: 6, scope: !10348)
!10376 = !DILocation(line: 2315, column: 10, scope: !10374)
!10377 = !DILocation(line: 2315, column: 3, scope: !10374)
!10378 = !DILocation(line: 2317, column: 11, scope: !10348)
!10379 = !DILocation(line: 2317, column: 21, scope: !10348)
!10380 = !DILocation(line: 2317, column: 43, scope: !10348)
!10381 = !DILocation(line: 2317, column: 53, scope: !10348)
!10382 = !DILocation(line: 2318, column: 8, scope: !10348)
!10383 = !DILocation(line: 2318, column: 18, scope: !10348)
!10384 = !DILocation(line: 2317, column: 9, scope: !10348)
!10385 = !DILocation(line: 2319, column: 15, scope: !10348)
!10386 = !DILocation(line: 2319, column: 25, scope: !10348)
!10387 = !DILocation(line: 2319, column: 47, scope: !10348)
!10388 = !DILocation(line: 2319, column: 57, scope: !10348)
!10389 = !DILocation(line: 2320, column: 12, scope: !10348)
!10390 = !DILocation(line: 2320, column: 22, scope: !10348)
!10391 = !DILocation(line: 2319, column: 13, scope: !10348)
!10392 = !DILocation(line: 2321, column: 22, scope: !10348)
!10393 = !DILocation(line: 2321, column: 31, scope: !10348)
!10394 = !DILocation(line: 2321, column: 39, scope: !10348)
!10395 = !DILocation(line: 2321, column: 49, scope: !10348)
!10396 = !DILocation(line: 2322, column: 8, scope: !10348)
!10397 = !DILocation(line: 2322, column: 20, scope: !10348)
!10398 = !DILocation(line: 2322, column: 30, scope: !10348)
!10399 = !DILocation(line: 2321, column: 2, scope: !10348)
!10400 = !DILocation(line: 2323, column: 24, scope: !10348)
!10401 = !DILocation(line: 2323, column: 54, scope: !10348)
!10402 = !DILocation(line: 2323, column: 8, scope: !10348)
!10403 = !DILocation(line: 2323, column: 6, scope: !10348)
!10404 = !DILocation(line: 2324, column: 6, scope: !10405)
!10405 = distinct !DILexicalBlock(scope: !10348, file: !3, line: 2324, column: 6)
!10406 = !DILocation(line: 2324, column: 6, scope: !10348)
!10407 = !DILocation(line: 2325, column: 3, scope: !10405)
!10408 = !DILocation(line: 2327, column: 2, scope: !10348)
!10409 = !DILabel(scope: !10348, name: "err_trap_set", file: !3, line: 2329)
!10410 = !DILocation(line: 2329, column: 1, scope: !10348)
!10411 = !DILocation(line: 2330, column: 33, scope: !10348)
!10412 = !DILocation(line: 2330, column: 45, scope: !10348)
!10413 = !DILocation(line: 2330, column: 55, scope: !10348)
!10414 = !DILocation(line: 2330, column: 2, scope: !10348)
!10415 = !DILocation(line: 2331, column: 9, scope: !10348)
!10416 = !DILocation(line: 2331, column: 2, scope: !10348)
!10417 = !DILocation(line: 2332, column: 1, scope: !10348)
!10418 = distinct !DISubprogram(name: "mlxsw_core_listener_register", scope: !3, file: !3, line: 2276, type: !10419, scopeLine: 2279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!10419 = !DISubroutineType(types: !10420)
!10420 = !{!78, !7847, !10351, !637, !817}
!10421 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !10418, file: !3, line: 2276, type: !7847)
!10422 = !DILocation(line: 2276, column: 60, scope: !10418)
!10423 = !DILocalVariable(name: "listener", arg: 2, scope: !10418, file: !3, line: 2277, type: !10351)
!10424 = !DILocation(line: 2277, column: 35, scope: !10418)
!10425 = !DILocalVariable(name: "priv", arg: 3, scope: !10418, file: !3, line: 2278, type: !637)
!10426 = !DILocation(line: 2278, column: 12, scope: !10418)
!10427 = !DILocalVariable(name: "enabled", arg: 4, scope: !10418, file: !3, line: 2278, type: !817)
!10428 = !DILocation(line: 2278, column: 23, scope: !10418)
!10429 = !DILocation(line: 2280, column: 6, scope: !10430)
!10430 = distinct !DILexicalBlock(scope: !10418, file: !3, line: 2280, column: 6)
!10431 = !DILocation(line: 2280, column: 16, scope: !10430)
!10432 = !DILocation(line: 2280, column: 6, scope: !10418)
!10433 = !DILocalVariable(name: "__ret_warn_on", scope: !10434, file: !3, line: 2281, type: !78)
!10434 = distinct !DILexicalBlock(scope: !10435, file: !3, line: 2281, column: 3)
!10435 = distinct !DILexicalBlock(scope: !10430, file: !3, line: 2280, column: 26)
!10436 = !DILocation(line: 2281, column: 3, scope: !10434)
!10437 = !DILocation(line: 2281, column: 3, scope: !10438)
!10438 = distinct !DILexicalBlock(scope: !10434, file: !3, line: 2281, column: 3)
!10439 = !DILocation(line: 2281, column: 3, scope: !10440)
!10440 = distinct !DILexicalBlock(scope: !10438, file: !3, line: 2281, column: 3)
!10441 = !DILocation(line: 2281, column: 3, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !10440, file: !3, line: 2281, column: 3)
!10443 = !DILocation(line: 2281, column: 3, scope: !10444)
!10444 = distinct !DILexicalBlock(scope: !10440, file: !3, line: 2281, column: 3)
!10445 = !{i32 -2137055432, i32 -2137055403, i32 -2137055357, i32 -2137055299, i32 -2137055245, i32 -2137055191, i32 -2137055136, i32 -2137055105}
!10446 = !DILocation(line: 2281, column: 3, scope: !10447)
!10447 = distinct !DILexicalBlock(scope: !10440, file: !3, line: 2281, column: 3)
!10448 = !{i32 -2137054680, i32 -2137054673, i32 -2137054621, i32 -2137054590, i32 -2137054560}
!10449 = !DILocation(line: 2281, column: 3, scope: !10450)
!10450 = distinct !DILexicalBlock(scope: !10440, file: !3, line: 2281, column: 3)
!10451 = !DILocation(line: 2282, column: 45, scope: !10435)
!10452 = !DILocation(line: 2283, column: 8, scope: !10435)
!10453 = !DILocation(line: 2283, column: 18, scope: !10435)
!10454 = !DILocation(line: 2284, column: 7, scope: !10435)
!10455 = !DILocation(line: 2282, column: 10, scope: !10435)
!10456 = !DILocation(line: 2282, column: 3, scope: !10435)
!10457 = !DILocation(line: 2286, column: 42, scope: !10458)
!10458 = distinct !DILexicalBlock(scope: !10430, file: !3, line: 2285, column: 9)
!10459 = !DILocation(line: 2287, column: 8, scope: !10458)
!10460 = !DILocation(line: 2287, column: 18, scope: !10458)
!10461 = !DILocation(line: 2288, column: 7, scope: !10458)
!10462 = !DILocation(line: 2288, column: 13, scope: !10458)
!10463 = !DILocation(line: 2286, column: 10, scope: !10458)
!10464 = !DILocation(line: 2286, column: 3, scope: !10458)
!10465 = !DILocation(line: 2290, column: 1, scope: !10418)
!10466 = distinct !DISubprogram(name: "mlxsw_reg_hpkt_pack", scope: !7404, file: !7404, line: 5909, type: !10467, scopeLine: 5912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!10467 = !DISubroutineType(types: !10468)
!10468 = !{null, !1084, !840, !627, !7414, !817}
!10469 = !DILocalVariable(name: "payload", arg: 1, scope: !10466, file: !7404, line: 5909, type: !1084)
!10470 = !DILocation(line: 5909, column: 46, scope: !10466)
!10471 = !DILocalVariable(name: "action", arg: 2, scope: !10466, file: !7404, line: 5909, type: !840)
!10472 = !DILocation(line: 5909, column: 58, scope: !10466)
!10473 = !DILocalVariable(name: "trap_id", arg: 3, scope: !10466, file: !7404, line: 5909, type: !627)
!10474 = !DILocation(line: 5909, column: 70, scope: !10466)
!10475 = !DILocalVariable(name: "trap_group", arg: 4, scope: !10466, file: !7404, line: 5910, type: !7414)
!10476 = !DILocation(line: 5910, column: 43, scope: !10466)
!10477 = !DILocalVariable(name: "is_ctrl", arg: 5, scope: !10466, file: !7404, line: 5911, type: !817)
!10478 = !DILocation(line: 5911, column: 17, scope: !10466)
!10479 = !DILocation(line: 5913, column: 2, scope: !10466)
!10480 = !DILocation(line: 5914, column: 25, scope: !10466)
!10481 = !DILocation(line: 5914, column: 2, scope: !10466)
!10482 = !DILocation(line: 5915, column: 28, scope: !10466)
!10483 = !DILocation(line: 5915, column: 37, scope: !10466)
!10484 = !DILocation(line: 5915, column: 2, scope: !10466)
!10485 = !DILocation(line: 5916, column: 32, scope: !10466)
!10486 = !DILocation(line: 5916, column: 41, scope: !10466)
!10487 = !DILocation(line: 5916, column: 2, scope: !10466)
!10488 = !DILocation(line: 5917, column: 29, scope: !10466)
!10489 = !DILocation(line: 5917, column: 38, scope: !10466)
!10490 = !DILocation(line: 5917, column: 2, scope: !10466)
!10491 = !DILocation(line: 5918, column: 26, scope: !10466)
!10492 = !DILocation(line: 5918, column: 35, scope: !10466)
!10493 = !DILocation(line: 5918, column: 2, scope: !10466)
!10494 = !DILocation(line: 5921, column: 1, scope: !10466)
!10495 = distinct !DISubprogram(name: "mlxsw_reg_write", scope: !3, file: !3, line: 2593, type: !10496, scopeLine: 2595, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!10496 = !DISubroutineType(types: !10497)
!10497 = !{!78, !7847, !8145, !1084}
!10498 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !10495, file: !3, line: 2593, type: !7847)
!10499 = !DILocation(line: 2593, column: 40, scope: !10495)
!10500 = !DILocalVariable(name: "reg", arg: 2, scope: !10495, file: !3, line: 2594, type: !8145)
!10501 = !DILocation(line: 2594, column: 36, scope: !10495)
!10502 = !DILocalVariable(name: "payload", arg: 3, scope: !10495, file: !3, line: 2594, type: !1084)
!10503 = !DILocation(line: 2594, column: 47, scope: !10495)
!10504 = !DILocation(line: 2596, column: 31, scope: !10495)
!10505 = !DILocation(line: 2596, column: 43, scope: !10495)
!10506 = !DILocation(line: 2596, column: 48, scope: !10495)
!10507 = !DILocation(line: 2596, column: 9, scope: !10495)
!10508 = !DILocation(line: 2596, column: 2, scope: !10495)
!10509 = distinct !DISubprogram(name: "mlxsw_core_listener_unregister", scope: !3, file: !3, line: 2292, type: !10510, scopeLine: 2295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!10510 = !DISubroutineType(types: !10511)
!10511 = !{null, !7847, !10351, !637}
!10512 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !10509, file: !3, line: 2292, type: !7847)
!10513 = !DILocation(line: 2292, column: 63, scope: !10509)
!10514 = !DILocalVariable(name: "listener", arg: 2, scope: !10509, file: !3, line: 2293, type: !10351)
!10515 = !DILocation(line: 2293, column: 40, scope: !10509)
!10516 = !DILocalVariable(name: "priv", arg: 3, scope: !10509, file: !3, line: 2294, type: !637)
!10517 = !DILocation(line: 2294, column: 17, scope: !10509)
!10518 = !DILocation(line: 2296, column: 6, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10509, file: !3, line: 2296, column: 6)
!10520 = !DILocation(line: 2296, column: 16, scope: !10519)
!10521 = !DILocation(line: 2296, column: 6, scope: !10509)
!10522 = !DILocation(line: 2297, column: 40, scope: !10519)
!10523 = !DILocation(line: 2298, column: 13, scope: !10519)
!10524 = !DILocation(line: 2298, column: 23, scope: !10519)
!10525 = !DILocation(line: 2297, column: 3, scope: !10519)
!10526 = !DILocation(line: 2300, column: 37, scope: !10519)
!10527 = !DILocation(line: 2301, column: 10, scope: !10519)
!10528 = !DILocation(line: 2301, column: 20, scope: !10519)
!10529 = !DILocation(line: 2300, column: 3, scope: !10519)
!10530 = !DILocation(line: 2302, column: 1, scope: !10509)
!10531 = distinct !DISubprogram(name: "mlxsw_core_trap_unregister", scope: !3, file: !3, line: 2335, type: !10510, scopeLine: 2338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!10532 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !10531, file: !3, line: 2335, type: !7847)
!10533 = !DILocation(line: 2335, column: 52, scope: !10531)
!10534 = !DILocalVariable(name: "listener", arg: 2, scope: !10531, file: !3, line: 2336, type: !10351)
!10535 = !DILocation(line: 2336, column: 34, scope: !10531)
!10536 = !DILocalVariable(name: "priv", arg: 3, scope: !10531, file: !3, line: 2337, type: !637)
!10537 = !DILocation(line: 2337, column: 11, scope: !10531)
!10538 = !DILocalVariable(name: "hpkt_pl", scope: !10531, file: !3, line: 2339, type: !313)
!10539 = !DILocation(line: 2339, column: 7, scope: !10531)
!10540 = !DILocation(line: 2341, column: 7, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10531, file: !3, line: 2341, column: 6)
!10542 = !DILocation(line: 2341, column: 17, scope: !10541)
!10543 = !DILocation(line: 2341, column: 6, scope: !10531)
!10544 = !DILocation(line: 2342, column: 23, scope: !10545)
!10545 = distinct !DILexicalBlock(scope: !10541, file: !3, line: 2341, column: 27)
!10546 = !DILocation(line: 2342, column: 32, scope: !10545)
!10547 = !DILocation(line: 2342, column: 42, scope: !10545)
!10548 = !DILocation(line: 2343, column: 9, scope: !10545)
!10549 = !DILocation(line: 2343, column: 19, scope: !10545)
!10550 = !DILocation(line: 2343, column: 28, scope: !10545)
!10551 = !DILocation(line: 2343, column: 38, scope: !10545)
!10552 = !DILocation(line: 2344, column: 9, scope: !10545)
!10553 = !DILocation(line: 2344, column: 19, scope: !10545)
!10554 = !DILocation(line: 2342, column: 3, scope: !10545)
!10555 = !DILocation(line: 2345, column: 19, scope: !10545)
!10556 = !DILocation(line: 2345, column: 48, scope: !10545)
!10557 = !DILocation(line: 2345, column: 3, scope: !10545)
!10558 = !DILocation(line: 2346, column: 2, scope: !10545)
!10559 = !DILocation(line: 2348, column: 33, scope: !10531)
!10560 = !DILocation(line: 2348, column: 45, scope: !10531)
!10561 = !DILocation(line: 2348, column: 55, scope: !10531)
!10562 = !DILocation(line: 2348, column: 2, scope: !10531)
!10563 = !DILocation(line: 2349, column: 1, scope: !10531)
!10564 = distinct !DISubprogram(name: "mlxsw_core_trap_state_set", scope: !3, file: !3, line: 2352, type: !10565, scopeLine: 2355, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!10565 = !DISubroutineType(types: !10566)
!10566 = !{!78, !7847, !10351, !817}
!10567 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !10564, file: !3, line: 2352, type: !7847)
!10568 = !DILocation(line: 2352, column: 50, scope: !10564)
!10569 = !DILocalVariable(name: "listener", arg: 2, scope: !10564, file: !3, line: 2353, type: !10351)
!10570 = !DILocation(line: 2353, column: 39, scope: !10564)
!10571 = !DILocalVariable(name: "enabled", arg: 3, scope: !10564, file: !3, line: 2354, type: !817)
!10572 = !DILocation(line: 2354, column: 15, scope: !10564)
!10573 = !DILocalVariable(name: "trap_group", scope: !10564, file: !3, line: 2356, type: !7414)
!10574 = !DILocation(line: 2356, column: 33, scope: !10564)
!10575 = !DILocalVariable(name: "action", scope: !10564, file: !3, line: 2357, type: !7403)
!10576 = !DILocation(line: 2357, column: 29, scope: !10564)
!10577 = !DILocalVariable(name: "hpkt_pl", scope: !10564, file: !3, line: 2358, type: !313)
!10578 = !DILocation(line: 2358, column: 7, scope: !10564)
!10579 = !DILocalVariable(name: "err", scope: !10564, file: !3, line: 2359, type: !78)
!10580 = !DILocation(line: 2359, column: 6, scope: !10564)
!10581 = !DILocalVariable(name: "__ret_warn_on", scope: !10582, file: !3, line: 2362, type: !78)
!10582 = distinct !DILexicalBlock(scope: !10583, file: !3, line: 2362, column: 6)
!10583 = distinct !DILexicalBlock(scope: !10564, file: !3, line: 2362, column: 6)
!10584 = !DILocation(line: 2362, column: 6, scope: !10582)
!10585 = !DILocation(line: 2362, column: 6, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10582, file: !3, line: 2362, column: 6)
!10587 = !DILocation(line: 2362, column: 6, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !10586, file: !3, line: 2362, column: 6)
!10589 = !DILocation(line: 2362, column: 6, scope: !10590)
!10590 = distinct !DILexicalBlock(scope: !10588, file: !3, line: 2362, column: 6)
!10591 = !DILocation(line: 2362, column: 6, scope: !10592)
!10592 = distinct !DILexicalBlock(scope: !10588, file: !3, line: 2362, column: 6)
!10593 = !{i32 -2137053657, i32 -2137053628, i32 -2137053582, i32 -2137053524, i32 -2137053470, i32 -2137053416, i32 -2137053361, i32 -2137053330}
!10594 = !DILocation(line: 2362, column: 6, scope: !10595)
!10595 = distinct !DILexicalBlock(scope: !10588, file: !3, line: 2362, column: 6)
!10596 = !{i32 -2137052905, i32 -2137052898, i32 -2137052846, i32 -2137052815, i32 -2137052785}
!10597 = !DILocation(line: 2362, column: 6, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10588, file: !3, line: 2362, column: 6)
!10599 = !DILocation(line: 2362, column: 6, scope: !10583)
!10600 = !DILocation(line: 2362, column: 6, scope: !10564)
!10601 = !DILocation(line: 2363, column: 3, scope: !10583)
!10602 = !DILocation(line: 2365, column: 11, scope: !10564)
!10603 = !DILocation(line: 2365, column: 21, scope: !10564)
!10604 = !DILocation(line: 2365, column: 31, scope: !10564)
!10605 = !DILocation(line: 2365, column: 43, scope: !10564)
!10606 = !DILocation(line: 2365, column: 53, scope: !10564)
!10607 = !DILocation(line: 2365, column: 9, scope: !10564)
!10608 = !DILocation(line: 2366, column: 15, scope: !10564)
!10609 = !DILocation(line: 2366, column: 25, scope: !10564)
!10610 = !DILocation(line: 2366, column: 35, scope: !10564)
!10611 = !DILocation(line: 2367, column: 11, scope: !10564)
!10612 = !DILocation(line: 2367, column: 21, scope: !10564)
!10613 = !DILocation(line: 2366, column: 13, scope: !10564)
!10614 = !DILocation(line: 2368, column: 22, scope: !10564)
!10615 = !DILocation(line: 2368, column: 31, scope: !10564)
!10616 = !DILocation(line: 2368, column: 39, scope: !10564)
!10617 = !DILocation(line: 2368, column: 49, scope: !10564)
!10618 = !DILocation(line: 2369, column: 8, scope: !10564)
!10619 = !DILocation(line: 2369, column: 20, scope: !10564)
!10620 = !DILocation(line: 2369, column: 30, scope: !10564)
!10621 = !DILocation(line: 2368, column: 2, scope: !10564)
!10622 = !DILocation(line: 2370, column: 24, scope: !10564)
!10623 = !DILocation(line: 2370, column: 53, scope: !10564)
!10624 = !DILocation(line: 2370, column: 8, scope: !10564)
!10625 = !DILocation(line: 2370, column: 6, scope: !10564)
!10626 = !DILocation(line: 2371, column: 6, scope: !10627)
!10627 = distinct !DILexicalBlock(scope: !10564, file: !3, line: 2371, column: 6)
!10628 = !DILocation(line: 2371, column: 6, scope: !10564)
!10629 = !DILocation(line: 2372, column: 10, scope: !10627)
!10630 = !DILocation(line: 2372, column: 3, scope: !10627)
!10631 = !DILocation(line: 2374, column: 35, scope: !10564)
!10632 = !DILocation(line: 2374, column: 48, scope: !10564)
!10633 = !DILocation(line: 2374, column: 58, scope: !10564)
!10634 = !DILocation(line: 2375, column: 7, scope: !10564)
!10635 = !DILocation(line: 2374, column: 2, scope: !10564)
!10636 = !DILocation(line: 2376, column: 2, scope: !10564)
!10637 = !DILocation(line: 2377, column: 1, scope: !10564)
!10638 = distinct !DISubprogram(name: "mlxsw_core_rx_listener_state_set", scope: !3, file: !3, line: 2167, type: !10639, scopeLine: 2170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!10639 = !DISubroutineType(types: !10640)
!10640 = !{null, !7847, !9587, !817}
!10641 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !10638, file: !3, line: 2167, type: !7847)
!10642 = !DILocation(line: 2167, column: 53, scope: !10638)
!10643 = !DILocalVariable(name: "rxl", arg: 2, scope: !10638, file: !3, line: 2168, type: !9587)
!10644 = !DILocation(line: 2168, column: 38, scope: !10638)
!10645 = !DILocalVariable(name: "enabled", arg: 3, scope: !10638, file: !3, line: 2169, type: !817)
!10646 = !DILocation(line: 2169, column: 11, scope: !10638)
!10647 = !DILocalVariable(name: "rxl_item", scope: !10638, file: !3, line: 2171, type: !8160)
!10648 = !DILocation(line: 2171, column: 33, scope: !10638)
!10649 = !DILocation(line: 2173, column: 37, scope: !10638)
!10650 = !DILocation(line: 2173, column: 49, scope: !10638)
!10651 = !DILocation(line: 2173, column: 13, scope: !10638)
!10652 = !DILocation(line: 2173, column: 11, scope: !10638)
!10653 = !DILocalVariable(name: "__ret_warn_on", scope: !10654, file: !3, line: 2174, type: !78)
!10654 = distinct !DILexicalBlock(scope: !10655, file: !3, line: 2174, column: 6)
!10655 = distinct !DILexicalBlock(scope: !10638, file: !3, line: 2174, column: 6)
!10656 = !DILocation(line: 2174, column: 6, scope: !10654)
!10657 = !DILocation(line: 2174, column: 6, scope: !10658)
!10658 = distinct !DILexicalBlock(scope: !10654, file: !3, line: 2174, column: 6)
!10659 = !DILocation(line: 2174, column: 6, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10658, file: !3, line: 2174, column: 6)
!10661 = !DILocation(line: 2174, column: 6, scope: !10662)
!10662 = distinct !DILexicalBlock(scope: !10660, file: !3, line: 2174, column: 6)
!10663 = !DILocation(line: 2174, column: 6, scope: !10664)
!10664 = distinct !DILexicalBlock(scope: !10660, file: !3, line: 2174, column: 6)
!10665 = !{i32 -2137061643, i32 -2137061614, i32 -2137061568, i32 -2137061510, i32 -2137061456, i32 -2137061402, i32 -2137061347, i32 -2137061316}
!10666 = !DILocation(line: 2174, column: 6, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10660, file: !3, line: 2174, column: 6)
!10668 = !{i32 -2137060891, i32 -2137060884, i32 -2137060832, i32 -2137060801, i32 -2137060771}
!10669 = !DILocation(line: 2174, column: 6, scope: !10670)
!10670 = distinct !DILexicalBlock(scope: !10660, file: !3, line: 2174, column: 6)
!10671 = !DILocation(line: 2174, column: 6, scope: !10655)
!10672 = !DILocation(line: 2174, column: 6, scope: !10638)
!10673 = !DILocation(line: 2175, column: 3, scope: !10655)
!10674 = !DILocation(line: 2176, column: 22, scope: !10638)
!10675 = !DILocation(line: 2176, column: 2, scope: !10638)
!10676 = !DILocation(line: 2176, column: 12, scope: !10638)
!10677 = !DILocation(line: 2176, column: 20, scope: !10638)
!10678 = !DILocation(line: 2177, column: 1, scope: !10638)
!10679 = distinct !DISubprogram(name: "mlxsw_reg_trans_query", scope: !3, file: !3, line: 2410, type: !10680, scopeLine: 2414, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!10680 = !DISubroutineType(types: !10681)
!10681 = !{!78, !7847, !8145, !1084, !333, !8139, !358}
!10682 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !10679, file: !3, line: 2410, type: !7847)
!10683 = !DILocation(line: 2410, column: 46, scope: !10679)
!10684 = !DILocalVariable(name: "reg", arg: 2, scope: !10679, file: !3, line: 2411, type: !8145)
!10685 = !DILocation(line: 2411, column: 35, scope: !10679)
!10686 = !DILocalVariable(name: "payload", arg: 3, scope: !10679, file: !3, line: 2411, type: !1084)
!10687 = !DILocation(line: 2411, column: 46, scope: !10679)
!10688 = !DILocalVariable(name: "bulk_list", arg: 4, scope: !10679, file: !3, line: 2412, type: !333)
!10689 = !DILocation(line: 2412, column: 24, scope: !10679)
!10690 = !DILocalVariable(name: "cb", arg: 5, scope: !10679, file: !3, line: 2413, type: !8139)
!10691 = !DILocation(line: 2413, column: 28, scope: !10679)
!10692 = !DILocalVariable(name: "cb_priv", arg: 6, scope: !10679, file: !3, line: 2413, type: !358)
!10693 = !DILocation(line: 2413, column: 46, scope: !10679)
!10694 = !DILocation(line: 2415, column: 36, scope: !10679)
!10695 = !DILocation(line: 2415, column: 48, scope: !10679)
!10696 = !DILocation(line: 2415, column: 53, scope: !10679)
!10697 = !DILocation(line: 2417, column: 8, scope: !10679)
!10698 = !DILocation(line: 2417, column: 19, scope: !10679)
!10699 = !DILocation(line: 2417, column: 23, scope: !10679)
!10700 = !DILocation(line: 2415, column: 9, scope: !10679)
!10701 = !DILocation(line: 2415, column: 2, scope: !10679)
!10702 = distinct !DISubprogram(name: "mlxsw_core_reg_access_emad", scope: !3, file: !3, line: 2385, type: !10703, scopeLine: 2392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!10703 = !DISubroutineType(types: !10704)
!10704 = !{!78, !7847, !8145, !1084, !7452, !333, !8139, !358}
!10705 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !10702, file: !3, line: 2385, type: !7847)
!10706 = !DILocation(line: 2385, column: 58, scope: !10702)
!10707 = !DILocalVariable(name: "reg", arg: 2, scope: !10702, file: !3, line: 2386, type: !8145)
!10708 = !DILocation(line: 2386, column: 40, scope: !10702)
!10709 = !DILocalVariable(name: "payload", arg: 3, scope: !10702, file: !3, line: 2387, type: !1084)
!10710 = !DILocation(line: 2387, column: 17, scope: !10702)
!10711 = !DILocalVariable(name: "type", arg: 4, scope: !10702, file: !3, line: 2388, type: !7452)
!10712 = !DILocation(line: 2388, column: 43, scope: !10702)
!10713 = !DILocalVariable(name: "bulk_list", arg: 5, scope: !10702, file: !3, line: 2389, type: !333)
!10714 = !DILocation(line: 2389, column: 29, scope: !10702)
!10715 = !DILocalVariable(name: "cb", arg: 6, scope: !10702, file: !3, line: 2390, type: !8139)
!10716 = !DILocation(line: 2390, column: 33, scope: !10702)
!10717 = !DILocalVariable(name: "cb_priv", arg: 7, scope: !10702, file: !3, line: 2391, type: !358)
!10718 = !DILocation(line: 2391, column: 25, scope: !10702)
!10719 = !DILocalVariable(name: "tid", scope: !10702, file: !3, line: 2393, type: !377)
!10720 = !DILocation(line: 2393, column: 6, scope: !10702)
!10721 = !DILocation(line: 2393, column: 31, scope: !10702)
!10722 = !DILocation(line: 2393, column: 12, scope: !10702)
!10723 = !DILocalVariable(name: "trans", scope: !10702, file: !3, line: 2394, type: !7841)
!10724 = !DILocation(line: 2394, column: 26, scope: !10702)
!10725 = !DILocalVariable(name: "err", scope: !10702, file: !3, line: 2395, type: !78)
!10726 = !DILocation(line: 2395, column: 6, scope: !10702)
!10727 = !DILocation(line: 2397, column: 10, scope: !10702)
!10728 = !DILocation(line: 2397, column: 8, scope: !10702)
!10729 = !DILocation(line: 2398, column: 7, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10702, file: !3, line: 2398, column: 6)
!10731 = !DILocation(line: 2398, column: 6, scope: !10702)
!10732 = !DILocation(line: 2399, column: 3, scope: !10730)
!10733 = !DILocation(line: 2401, column: 30, scope: !10702)
!10734 = !DILocation(line: 2401, column: 42, scope: !10702)
!10735 = !DILocation(line: 2401, column: 47, scope: !10702)
!10736 = !DILocation(line: 2401, column: 56, scope: !10702)
!10737 = !DILocation(line: 2401, column: 62, scope: !10702)
!10738 = !DILocation(line: 2402, column: 9, scope: !10702)
!10739 = !DILocation(line: 2402, column: 20, scope: !10702)
!10740 = !DILocation(line: 2402, column: 24, scope: !10702)
!10741 = !DILocation(line: 2402, column: 33, scope: !10702)
!10742 = !DILocation(line: 2401, column: 8, scope: !10702)
!10743 = !DILocation(line: 2401, column: 6, scope: !10702)
!10744 = !DILocation(line: 2403, column: 6, scope: !10745)
!10745 = distinct !DILexicalBlock(scope: !10702, file: !3, line: 2403, column: 6)
!10746 = !DILocation(line: 2403, column: 6, scope: !10702)
!10747 = !DILocation(line: 2404, column: 3, scope: !10748)
!10748 = distinct !DILexicalBlock(scope: !10745, file: !3, line: 2403, column: 11)
!10749 = !DILocalVariable(name: "___p", scope: !10750, file: !3, line: 2404, type: !7841)
!10750 = distinct !DILexicalBlock(scope: !10748, file: !3, line: 2404, column: 3)
!10751 = !DILocation(line: 2404, column: 3, scope: !10750)
!10752 = !DILocation(line: 2404, column: 3, scope: !10753)
!10753 = distinct !DILexicalBlock(scope: !10750, file: !3, line: 2404, column: 3)
!10754 = !DILocation(line: 2404, column: 3, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10753, file: !3, line: 2404, column: 3)
!10756 = !DILocation(line: 2404, column: 3, scope: !10757)
!10757 = distinct !DILexicalBlock(scope: !10755, file: !3, line: 2404, column: 3)
!10758 = !DILocation(line: 2405, column: 10, scope: !10748)
!10759 = !DILocation(line: 2405, column: 3, scope: !10748)
!10760 = !DILocation(line: 2407, column: 2, scope: !10702)
!10761 = !DILocation(line: 2408, column: 1, scope: !10702)
!10762 = distinct !DISubprogram(name: "mlxsw_reg_trans_write", scope: !3, file: !3, line: 2421, type: !10680, scopeLine: 2425, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!10763 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !10762, file: !3, line: 2421, type: !7847)
!10764 = !DILocation(line: 2421, column: 46, scope: !10762)
!10765 = !DILocalVariable(name: "reg", arg: 2, scope: !10762, file: !3, line: 2422, type: !8145)
!10766 = !DILocation(line: 2422, column: 35, scope: !10762)
!10767 = !DILocalVariable(name: "payload", arg: 3, scope: !10762, file: !3, line: 2422, type: !1084)
!10768 = !DILocation(line: 2422, column: 46, scope: !10762)
!10769 = !DILocalVariable(name: "bulk_list", arg: 4, scope: !10762, file: !3, line: 2423, type: !333)
!10770 = !DILocation(line: 2423, column: 24, scope: !10762)
!10771 = !DILocalVariable(name: "cb", arg: 5, scope: !10762, file: !3, line: 2424, type: !8139)
!10772 = !DILocation(line: 2424, column: 28, scope: !10762)
!10773 = !DILocalVariable(name: "cb_priv", arg: 6, scope: !10762, file: !3, line: 2424, type: !358)
!10774 = !DILocation(line: 2424, column: 46, scope: !10762)
!10775 = !DILocation(line: 2426, column: 36, scope: !10762)
!10776 = !DILocation(line: 2426, column: 48, scope: !10762)
!10777 = !DILocation(line: 2426, column: 53, scope: !10762)
!10778 = !DILocation(line: 2428, column: 8, scope: !10762)
!10779 = !DILocation(line: 2428, column: 19, scope: !10762)
!10780 = !DILocation(line: 2428, column: 23, scope: !10762)
!10781 = !DILocation(line: 2426, column: 9, scope: !10762)
!10782 = !DILocation(line: 2426, column: 2, scope: !10762)
!10783 = distinct !DISubprogram(name: "mlxsw_reg_trans_bulk_wait", scope: !3, file: !3, line: 2472, type: !10784, scopeLine: 2473, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!10784 = !DISubroutineType(types: !10785)
!10785 = !{!78, !333}
!10786 = !DILocalVariable(name: "bulk_list", arg: 1, scope: !10783, file: !3, line: 2472, type: !333)
!10787 = !DILocation(line: 2472, column: 49, scope: !10783)
!10788 = !DILocalVariable(name: "trans", scope: !10783, file: !3, line: 2474, type: !7841)
!10789 = !DILocation(line: 2474, column: 26, scope: !10783)
!10790 = !DILocalVariable(name: "tmp", scope: !10783, file: !3, line: 2475, type: !7841)
!10791 = !DILocation(line: 2475, column: 26, scope: !10783)
!10792 = !DILocalVariable(name: "sum_err", scope: !10783, file: !3, line: 2476, type: !78)
!10793 = !DILocation(line: 2476, column: 6, scope: !10783)
!10794 = !DILocalVariable(name: "err", scope: !10783, file: !3, line: 2477, type: !78)
!10795 = !DILocation(line: 2477, column: 6, scope: !10783)
!10796 = !DILocalVariable(name: "__mptr", scope: !10797, file: !3, line: 2479, type: !637)
!10797 = distinct !DILexicalBlock(scope: !10798, file: !3, line: 2479, column: 2)
!10798 = distinct !DILexicalBlock(scope: !10783, file: !3, line: 2479, column: 2)
!10799 = !DILocation(line: 2479, column: 2, scope: !10797)
!10800 = !DILocation(line: 2479, column: 2, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10797, file: !3, line: 2479, column: 2)
!10802 = !DILocation(line: 2479, column: 2, scope: !10798)
!10803 = !DILocalVariable(name: "__mptr", scope: !10804, file: !3, line: 2479, type: !637)
!10804 = distinct !DILexicalBlock(scope: !10798, file: !3, line: 2479, column: 2)
!10805 = !DILocation(line: 2479, column: 2, scope: !10804)
!10806 = !DILocation(line: 2479, column: 2, scope: !10807)
!10807 = distinct !DILexicalBlock(scope: !10804, file: !3, line: 2479, column: 2)
!10808 = !DILocation(line: 2479, column: 2, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10798, file: !3, line: 2479, column: 2)
!10810 = !DILocation(line: 2480, column: 30, scope: !10811)
!10811 = distinct !DILexicalBlock(scope: !10809, file: !3, line: 2479, column: 61)
!10812 = !DILocation(line: 2480, column: 9, scope: !10811)
!10813 = !DILocation(line: 2480, column: 7, scope: !10811)
!10814 = !DILocation(line: 2481, column: 7, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10811, file: !3, line: 2481, column: 7)
!10816 = !DILocation(line: 2481, column: 11, scope: !10815)
!10817 = !DILocation(line: 2481, column: 14, scope: !10815)
!10818 = !DILocation(line: 2481, column: 22, scope: !10815)
!10819 = !DILocation(line: 2481, column: 7, scope: !10811)
!10820 = !DILocation(line: 2482, column: 14, scope: !10815)
!10821 = !DILocation(line: 2482, column: 12, scope: !10815)
!10822 = !DILocation(line: 2482, column: 4, scope: !10815)
!10823 = !DILocation(line: 2483, column: 2, scope: !10811)
!10824 = !DILocalVariable(name: "__mptr", scope: !10825, file: !3, line: 2479, type: !637)
!10825 = distinct !DILexicalBlock(scope: !10809, file: !3, line: 2479, column: 2)
!10826 = !DILocation(line: 2479, column: 2, scope: !10825)
!10827 = !DILocation(line: 2479, column: 2, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10825, file: !3, line: 2479, column: 2)
!10829 = distinct !{!10829, !10802, !10830}
!10830 = !DILocation(line: 2483, column: 2, scope: !10798)
!10831 = !DILocation(line: 2484, column: 9, scope: !10783)
!10832 = !DILocation(line: 2484, column: 2, scope: !10783)
!10833 = distinct !DISubprogram(name: "mlxsw_reg_trans_wait", scope: !3, file: !3, line: 2434, type: !10834, scopeLine: 2435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!10834 = !DISubroutineType(types: !10835)
!10835 = !{!78, !7841}
!10836 = !DILocalVariable(name: "trans", arg: 1, scope: !10833, file: !3, line: 2434, type: !7841)
!10837 = !DILocation(line: 2434, column: 57, scope: !10833)
!10838 = !DILocalVariable(name: "err_string", scope: !10833, file: !3, line: 2436, type: !10839)
!10839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 2048, elements: !10840)
!10840 = !{!10841}
!10841 = !DISubrange(count: 256)
!10842 = !DILocation(line: 2436, column: 7, scope: !10833)
!10843 = !DILocalVariable(name: "mlxsw_core", scope: !10833, file: !3, line: 2437, type: !7847)
!10844 = !DILocation(line: 2437, column: 21, scope: !10833)
!10845 = !DILocation(line: 2437, column: 34, scope: !10833)
!10846 = !DILocation(line: 2437, column: 41, scope: !10833)
!10847 = !DILocalVariable(name: "err", scope: !10833, file: !3, line: 2438, type: !78)
!10848 = !DILocation(line: 2438, column: 6, scope: !10833)
!10849 = !DILocation(line: 2440, column: 23, scope: !10833)
!10850 = !DILocation(line: 2440, column: 30, scope: !10833)
!10851 = !DILocation(line: 2440, column: 2, scope: !10833)
!10852 = !DILocation(line: 2441, column: 28, scope: !10833)
!10853 = !DILocation(line: 2441, column: 35, scope: !10833)
!10854 = !DILocation(line: 2441, column: 2, scope: !10833)
!10855 = !DILocation(line: 2442, column: 8, scope: !10833)
!10856 = !DILocation(line: 2442, column: 15, scope: !10833)
!10857 = !DILocation(line: 2442, column: 6, scope: !10833)
!10858 = !DILocation(line: 2444, column: 6, scope: !10859)
!10859 = distinct !DILexicalBlock(scope: !10833, file: !3, line: 2444, column: 6)
!10860 = !DILocation(line: 2444, column: 13, scope: !10859)
!10861 = !DILocation(line: 2444, column: 6, scope: !10833)
!10862 = !DILocation(line: 2445, column: 3, scope: !10859)
!10863 = !DILocation(line: 2447, column: 6, scope: !10864)
!10864 = distinct !DILexicalBlock(scope: !10833, file: !3, line: 2447, column: 6)
!10865 = !DILocation(line: 2447, column: 6, scope: !10833)
!10866 = !DILocation(line: 2448, column: 3, scope: !10867)
!10867 = distinct !DILexicalBlock(scope: !10864, file: !3, line: 2447, column: 11)
!10868 = !DILocation(line: 2455, column: 12, scope: !10867)
!10869 = !DILocation(line: 2456, column: 43, scope: !10867)
!10870 = !DILocation(line: 2456, column: 50, scope: !10867)
!10871 = !DILocation(line: 2457, column: 5, scope: !10867)
!10872 = !DILocation(line: 2457, column: 12, scope: !10867)
!10873 = !DILocation(line: 2457, column: 17, scope: !10867)
!10874 = !DILocation(line: 2457, column: 38, scope: !10867)
!10875 = !DILocation(line: 2457, column: 45, scope: !10867)
!10876 = !DILocation(line: 2457, column: 50, scope: !10867)
!10877 = !DILocation(line: 2457, column: 21, scope: !10867)
!10878 = !DILocation(line: 2458, column: 34, scope: !10867)
!10879 = !DILocation(line: 2458, column: 41, scope: !10867)
!10880 = !DILocation(line: 2458, column: 5, scope: !10867)
!10881 = !DILocation(line: 2459, column: 5, scope: !10867)
!10882 = !DILocation(line: 2459, column: 12, scope: !10867)
!10883 = !DILocation(line: 2459, column: 30, scope: !10867)
!10884 = !DILocation(line: 2459, column: 37, scope: !10867)
!10885 = !DILocation(line: 2455, column: 3, scope: !10867)
!10886 = !DILocation(line: 2461, column: 39, scope: !10867)
!10887 = !DILocation(line: 2461, column: 23, scope: !10867)
!10888 = !DILocation(line: 2462, column: 9, scope: !10867)
!10889 = !DILocation(line: 2462, column: 16, scope: !10867)
!10890 = !DILocation(line: 2462, column: 29, scope: !10867)
!10891 = !DILocation(line: 2461, column: 3, scope: !10867)
!10892 = !DILocation(line: 2464, column: 9, scope: !10867)
!10893 = !DILocation(line: 2464, column: 16, scope: !10867)
!10894 = !DILocation(line: 2464, column: 3, scope: !10867)
!10895 = !DILocation(line: 2465, column: 2, scope: !10867)
!10896 = !DILocation(line: 2467, column: 12, scope: !10833)
!10897 = !DILocation(line: 2467, column: 19, scope: !10833)
!10898 = !DILocation(line: 2467, column: 2, scope: !10833)
!10899 = !DILocation(line: 2468, column: 2, scope: !10833)
!10900 = !DILocalVariable(name: "___p", scope: !10901, file: !3, line: 2468, type: !7841)
!10901 = distinct !DILexicalBlock(scope: !10833, file: !3, line: 2468, column: 2)
!10902 = !DILocation(line: 2468, column: 2, scope: !10901)
!10903 = !DILocation(line: 2468, column: 2, scope: !10904)
!10904 = distinct !DILexicalBlock(scope: !10901, file: !3, line: 2468, column: 2)
!10905 = !DILocation(line: 2468, column: 2, scope: !10906)
!10906 = distinct !DILexicalBlock(scope: !10904, file: !3, line: 2468, column: 2)
!10907 = !DILocation(line: 2468, column: 2, scope: !10908)
!10908 = distinct !DILexicalBlock(scope: !10906, file: !3, line: 2468, column: 2)
!10909 = !DILocation(line: 2469, column: 9, scope: !10833)
!10910 = !DILocation(line: 2469, column: 2, scope: !10833)
!10911 = distinct !DISubprogram(name: "mlxsw_reg_query", scope: !3, file: !3, line: 2585, type: !10496, scopeLine: 2587, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!10912 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !10911, file: !3, line: 2585, type: !7847)
!10913 = !DILocation(line: 2585, column: 40, scope: !10911)
!10914 = !DILocalVariable(name: "reg", arg: 2, scope: !10911, file: !3, line: 2586, type: !8145)
!10915 = !DILocation(line: 2586, column: 36, scope: !10911)
!10916 = !DILocalVariable(name: "payload", arg: 3, scope: !10911, file: !3, line: 2586, type: !1084)
!10917 = !DILocation(line: 2586, column: 47, scope: !10911)
!10918 = !DILocation(line: 2588, column: 31, scope: !10911)
!10919 = !DILocation(line: 2588, column: 43, scope: !10911)
!10920 = !DILocation(line: 2588, column: 48, scope: !10911)
!10921 = !DILocation(line: 2588, column: 9, scope: !10911)
!10922 = !DILocation(line: 2588, column: 2, scope: !10911)
!10923 = distinct !DISubprogram(name: "mlxsw_core_reg_access", scope: !3, file: !3, line: 2560, type: !10924, scopeLine: 2564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!10924 = !DISubroutineType(types: !10925)
!10925 = !{!78, !7847, !8145, !1084, !7452}
!10926 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !10923, file: !3, line: 2560, type: !7847)
!10927 = !DILocation(line: 2560, column: 53, scope: !10923)
!10928 = !DILocalVariable(name: "reg", arg: 2, scope: !10923, file: !3, line: 2561, type: !8145)
!10929 = !DILocation(line: 2561, column: 35, scope: !10923)
!10930 = !DILocalVariable(name: "payload", arg: 3, scope: !10923, file: !3, line: 2562, type: !1084)
!10931 = !DILocation(line: 2562, column: 12, scope: !10923)
!10932 = !DILocalVariable(name: "type", arg: 4, scope: !10923, file: !3, line: 2563, type: !7452)
!10933 = !DILocation(line: 2563, column: 38, scope: !10923)
!10934 = !DILocalVariable(name: "bulk_list", scope: !10923, file: !3, line: 2565, type: !330)
!10935 = !DILocation(line: 2565, column: 2, scope: !10923)
!10936 = !DILocalVariable(name: "err", scope: !10923, file: !3, line: 2566, type: !78)
!10937 = !DILocation(line: 2566, column: 6, scope: !10923)
!10938 = !DILocation(line: 2572, column: 7, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10923, file: !3, line: 2572, column: 6)
!10940 = !DILocation(line: 2572, column: 19, scope: !10939)
!10941 = !DILocation(line: 2572, column: 24, scope: !10939)
!10942 = !DILocation(line: 2572, column: 6, scope: !10923)
!10943 = !DILocation(line: 2573, column: 36, scope: !10939)
!10944 = !DILocation(line: 2573, column: 48, scope: !10939)
!10945 = !DILocation(line: 2574, column: 8, scope: !10939)
!10946 = !DILocation(line: 2574, column: 17, scope: !10939)
!10947 = !DILocation(line: 2573, column: 10, scope: !10939)
!10948 = !DILocation(line: 2573, column: 3, scope: !10939)
!10949 = !DILocation(line: 2576, column: 35, scope: !10923)
!10950 = !DILocation(line: 2576, column: 47, scope: !10923)
!10951 = !DILocation(line: 2577, column: 7, scope: !10923)
!10952 = !DILocation(line: 2577, column: 16, scope: !10923)
!10953 = !DILocation(line: 2579, column: 23, scope: !10923)
!10954 = !DILocation(line: 2579, column: 7, scope: !10923)
!10955 = !DILocation(line: 2576, column: 8, scope: !10923)
!10956 = !DILocation(line: 2576, column: 6, scope: !10923)
!10957 = !DILocation(line: 2580, column: 6, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !10923, file: !3, line: 2580, column: 6)
!10959 = !DILocation(line: 2580, column: 6, scope: !10923)
!10960 = !DILocation(line: 2581, column: 10, scope: !10958)
!10961 = !DILocation(line: 2581, column: 3, scope: !10958)
!10962 = !DILocation(line: 2582, column: 9, scope: !10923)
!10963 = !DILocation(line: 2582, column: 2, scope: !10923)
!10964 = !DILocation(line: 2583, column: 1, scope: !10923)
!10965 = distinct !DISubprogram(name: "mlxsw_core_skb_receive", scope: !3, file: !3, line: 2601, type: !10966, scopeLine: 2603, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!10966 = !DISubroutineType(types: !10967)
!10967 = !{null, !7847, !461, !10968}
!10968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10969, size: 64)
!10969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_rx_info", file: !7853, line: 182, size: 96, elements: !10970)
!10970 = !{!10971, !10972, !10977, !10978, !10979}
!10971 = !DIDerivedType(tag: DW_TAG_member, name: "is_lag", scope: !10969, file: !7853, line: 183, baseType: !817, size: 8)
!10972 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !10969, file: !7853, line: 187, baseType: !10973, size: 16, offset: 16)
!10973 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10969, file: !7853, line: 184, size: 16, elements: !10974)
!10974 = !{!10975, !10976}
!10975 = !DIDerivedType(tag: DW_TAG_member, name: "sys_port", scope: !10973, file: !7853, line: 185, baseType: !627, size: 16)
!10976 = !DIDerivedType(tag: DW_TAG_member, name: "lag_id", scope: !10973, file: !7853, line: 186, baseType: !627, size: 16)
!10977 = !DIDerivedType(tag: DW_TAG_member, name: "lag_port_index", scope: !10969, file: !7853, line: 188, baseType: !840, size: 8, offset: 32)
!10978 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_reason", scope: !10969, file: !7853, line: 189, baseType: !840, size: 8, offset: 40)
!10979 = !DIDerivedType(tag: DW_TAG_member, name: "trap_id", scope: !10969, file: !7853, line: 190, baseType: !78, size: 32, offset: 64)
!10980 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !10965, file: !3, line: 2601, type: !7847)
!10981 = !DILocation(line: 2601, column: 48, scope: !10965)
!10982 = !DILocalVariable(name: "skb", arg: 2, scope: !10965, file: !3, line: 2601, type: !461)
!10983 = !DILocation(line: 2601, column: 76, scope: !10965)
!10984 = !DILocalVariable(name: "rx_info", arg: 3, scope: !10965, file: !3, line: 2602, type: !10968)
!10985 = !DILocation(line: 2602, column: 30, scope: !10965)
!10986 = !DILocalVariable(name: "rxl_item", scope: !10965, file: !3, line: 2604, type: !8160)
!10987 = !DILocation(line: 2604, column: 33, scope: !10965)
!10988 = !DILocalVariable(name: "rxl", scope: !10965, file: !3, line: 2605, type: !9587)
!10989 = !DILocation(line: 2605, column: 34, scope: !10965)
!10990 = !DILocalVariable(name: "local_port", scope: !10965, file: !3, line: 2606, type: !840)
!10991 = !DILocation(line: 2606, column: 5, scope: !10965)
!10992 = !DILocalVariable(name: "found", scope: !10965, file: !3, line: 2607, type: !817)
!10993 = !DILocation(line: 2607, column: 7, scope: !10965)
!10994 = !DILocation(line: 2609, column: 6, scope: !10995)
!10995 = distinct !DILexicalBlock(scope: !10965, file: !3, line: 2609, column: 6)
!10996 = !DILocation(line: 2609, column: 15, scope: !10995)
!10997 = !DILocation(line: 2609, column: 6, scope: !10965)
!10998 = !DILocation(line: 2610, column: 3, scope: !10999)
!10999 = distinct !DILexicalBlock(scope: !10995, file: !3, line: 2609, column: 23)
!11000 = !DILocation(line: 2610, column: 3, scope: !11001)
!11001 = distinct !DILexicalBlock(scope: !10999, file: !3, line: 2610, column: 3)
!11002 = !DILocation(line: 2616, column: 43, scope: !10999)
!11003 = !DILocation(line: 2617, column: 8, scope: !10999)
!11004 = !DILocation(line: 2617, column: 17, scope: !10999)
!11005 = !DILocation(line: 2617, column: 19, scope: !10999)
!11006 = !DILocation(line: 2618, column: 8, scope: !10999)
!11007 = !DILocation(line: 2618, column: 17, scope: !10999)
!11008 = !DILocation(line: 2616, column: 16, scope: !10999)
!11009 = !DILocation(line: 2616, column: 14, scope: !10999)
!11010 = !DILocation(line: 2619, column: 2, scope: !10999)
!11011 = !DILocation(line: 2620, column: 16, scope: !11012)
!11012 = distinct !DILexicalBlock(scope: !10995, file: !3, line: 2619, column: 9)
!11013 = !DILocation(line: 2620, column: 25, scope: !11012)
!11014 = !DILocation(line: 2620, column: 27, scope: !11012)
!11015 = !DILocation(line: 2620, column: 14, scope: !11012)
!11016 = !DILocation(line: 2623, column: 2, scope: !10965)
!11017 = !DILocation(line: 2623, column: 2, scope: !11018)
!11018 = distinct !DILexicalBlock(scope: !10965, file: !3, line: 2623, column: 2)
!11019 = !DILocation(line: 2626, column: 7, scope: !11020)
!11020 = distinct !DILexicalBlock(scope: !10965, file: !3, line: 2626, column: 6)
!11021 = !DILocation(line: 2626, column: 16, scope: !11020)
!11022 = !DILocation(line: 2626, column: 24, scope: !11020)
!11023 = !DILocation(line: 2626, column: 46, scope: !11020)
!11024 = !DILocation(line: 2627, column: 7, scope: !11020)
!11025 = !DILocation(line: 2627, column: 21, scope: !11020)
!11026 = !DILocation(line: 2627, column: 33, scope: !11020)
!11027 = !DILocation(line: 2627, column: 18, scope: !11020)
!11028 = !DILocation(line: 2626, column: 6, scope: !10965)
!11029 = !DILocation(line: 2628, column: 3, scope: !11020)
!11030 = !DILocation(line: 639, column: 2, scope: !11031, inlinedAt: !11033)
!11031 = distinct !DISubprogram(name: "rcu_read_lock", scope: !11032, file: !11032, line: 637, type: !3854, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11032 = !DIFile(filename: "./include/linux/rcupdate.h", directory: "/home/lizy2001/genbc/linux")
!11033 = distinct !DILocation(line: 2630, column: 2, scope: !10965)
!11034 = !DILocalVariable(name: "__mptr", scope: !11035, file: !3, line: 2631, type: !637)
!11035 = distinct !DILexicalBlock(scope: !11036, file: !3, line: 2631, column: 2)
!11036 = distinct !DILexicalBlock(scope: !10965, file: !3, line: 2631, column: 2)
!11037 = !DILocation(line: 2631, column: 2, scope: !11035)
!11038 = !DILocation(line: 2631, column: 2, scope: !11039)
!11039 = distinct !DILexicalBlock(scope: !11035, file: !3, line: 2631, column: 2)
!11040 = !DILocation(line: 2631, column: 2, scope: !11041)
!11041 = distinct !DILexicalBlock(scope: !11039, file: !3, line: 2631, column: 2)
!11042 = !DILocation(line: 2631, column: 2, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !11035, file: !3, line: 2631, column: 2)
!11044 = !DILocation(line: 2631, column: 2, scope: !11036)
!11045 = !DILocation(line: 2631, column: 2, scope: !11046)
!11046 = distinct !DILexicalBlock(scope: !11036, file: !3, line: 2631, column: 2)
!11047 = !DILocation(line: 2632, column: 10, scope: !11048)
!11048 = distinct !DILexicalBlock(scope: !11046, file: !3, line: 2631, column: 73)
!11049 = !DILocation(line: 2632, column: 20, scope: !11048)
!11050 = !DILocation(line: 2632, column: 7, scope: !11048)
!11051 = !DILocation(line: 2633, column: 8, scope: !11052)
!11052 = distinct !DILexicalBlock(scope: !11048, file: !3, line: 2633, column: 7)
!11053 = !DILocation(line: 2633, column: 13, scope: !11052)
!11054 = !DILocation(line: 2633, column: 24, scope: !11052)
!11055 = !DILocation(line: 2633, column: 48, scope: !11052)
!11056 = !DILocation(line: 2634, column: 8, scope: !11052)
!11057 = !DILocation(line: 2634, column: 13, scope: !11052)
!11058 = !DILocation(line: 2634, column: 27, scope: !11052)
!11059 = !DILocation(line: 2634, column: 24, scope: !11052)
!11060 = !DILocation(line: 2634, column: 39, scope: !11052)
!11061 = !DILocation(line: 2635, column: 7, scope: !11052)
!11062 = !DILocation(line: 2635, column: 12, scope: !11052)
!11063 = !DILocation(line: 2635, column: 23, scope: !11052)
!11064 = !DILocation(line: 2635, column: 32, scope: !11052)
!11065 = !DILocation(line: 2635, column: 20, scope: !11052)
!11066 = !DILocation(line: 2635, column: 40, scope: !11052)
!11067 = !DILocation(line: 2636, column: 7, scope: !11052)
!11068 = !DILocation(line: 2636, column: 12, scope: !11052)
!11069 = !DILocation(line: 2636, column: 29, scope: !11052)
!11070 = !DILocation(line: 2636, column: 38, scope: !11052)
!11071 = !DILocation(line: 2636, column: 26, scope: !11052)
!11072 = !DILocation(line: 2633, column: 7, scope: !11048)
!11073 = !DILocation(line: 2637, column: 8, scope: !11074)
!11074 = distinct !DILexicalBlock(scope: !11075, file: !3, line: 2637, column: 8)
!11075 = distinct !DILexicalBlock(scope: !11052, file: !3, line: 2636, column: 53)
!11076 = !DILocation(line: 2637, column: 18, scope: !11074)
!11077 = !DILocation(line: 2637, column: 8, scope: !11075)
!11078 = !DILocation(line: 2638, column: 11, scope: !11074)
!11079 = !DILocation(line: 2638, column: 5, scope: !11074)
!11080 = !DILocation(line: 2639, column: 4, scope: !11075)
!11081 = !DILocation(line: 2641, column: 2, scope: !11048)
!11082 = !DILocalVariable(name: "__mptr", scope: !11083, file: !3, line: 2631, type: !637)
!11083 = distinct !DILexicalBlock(scope: !11046, file: !3, line: 2631, column: 2)
!11084 = !DILocation(line: 2631, column: 2, scope: !11083)
!11085 = !DILocation(line: 2631, column: 2, scope: !11086)
!11086 = distinct !DILexicalBlock(scope: !11083, file: !3, line: 2631, column: 2)
!11087 = !DILocation(line: 2631, column: 2, scope: !11088)
!11088 = distinct !DILexicalBlock(scope: !11086, file: !3, line: 2631, column: 2)
!11089 = !DILocation(line: 2631, column: 2, scope: !11090)
!11090 = distinct !DILexicalBlock(scope: !11083, file: !3, line: 2631, column: 2)
!11091 = distinct !{!11091, !11044, !11092}
!11092 = !DILocation(line: 2641, column: 2, scope: !11036)
!11093 = !DILocation(line: 2642, column: 7, scope: !11094)
!11094 = distinct !DILexicalBlock(scope: !10965, file: !3, line: 2642, column: 6)
!11095 = !DILocation(line: 2642, column: 6, scope: !10965)
!11096 = !DILocation(line: 2643, column: 3, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !11094, file: !3, line: 2642, column: 14)
!11098 = !DILocation(line: 2644, column: 3, scope: !11097)
!11099 = !DILocation(line: 2647, column: 2, scope: !10965)
!11100 = !DILocation(line: 2647, column: 7, scope: !10965)
!11101 = !DILocation(line: 2647, column: 12, scope: !10965)
!11102 = !DILocation(line: 2647, column: 17, scope: !10965)
!11103 = !DILocation(line: 2647, column: 29, scope: !10965)
!11104 = !DILocation(line: 2647, column: 39, scope: !10965)
!11105 = !DILocation(line: 2648, column: 2, scope: !10965)
!11106 = !DILocation(line: 2649, column: 2, scope: !10965)
!11107 = !DILabel(scope: !10965, name: "drop", file: !3, line: 2651)
!11108 = !DILocation(line: 2651, column: 1, scope: !10965)
!11109 = !DILocation(line: 2652, column: 2, scope: !10965)
!11110 = !DILocation(line: 2653, column: 1, scope: !10965)
!11111 = distinct !DISubprogram(name: "mlxsw_core_lag_mapping_get", scope: !3, file: !3, line: 2673, type: !11112, scopeLine: 2675, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11112 = !DISubroutineType(types: !11113)
!11113 = !{!840, !7847, !627, !840}
!11114 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !11111, file: !3, line: 2673, type: !7847)
!11115 = !DILocation(line: 2673, column: 50, scope: !11111)
!11116 = !DILocalVariable(name: "lag_id", arg: 2, scope: !11111, file: !3, line: 2674, type: !627)
!11117 = !DILocation(line: 2674, column: 14, scope: !11111)
!11118 = !DILocalVariable(name: "port_index", arg: 3, scope: !11111, file: !3, line: 2674, type: !840)
!11119 = !DILocation(line: 2674, column: 25, scope: !11111)
!11120 = !DILocalVariable(name: "index", scope: !11111, file: !3, line: 2676, type: !78)
!11121 = !DILocation(line: 2676, column: 6, scope: !11111)
!11122 = !DILocation(line: 2676, column: 43, scope: !11111)
!11123 = !DILocation(line: 2677, column: 8, scope: !11111)
!11124 = !DILocation(line: 2677, column: 16, scope: !11111)
!11125 = !DILocation(line: 2676, column: 14, scope: !11111)
!11126 = !DILocation(line: 2679, column: 9, scope: !11111)
!11127 = !DILocation(line: 2679, column: 21, scope: !11111)
!11128 = !DILocation(line: 2679, column: 25, scope: !11111)
!11129 = !DILocation(line: 2679, column: 33, scope: !11111)
!11130 = !DILocation(line: 2679, column: 2, scope: !11111)
!11131 = distinct !DISubprogram(name: "rcu_read_unlock", scope: !11032, file: !11032, line: 689, type: !3854, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11132 = !DILocation(line: 691, column: 2, scope: !11131)
!11133 = !DILocation(line: 691, column: 2, scope: !11134)
!11134 = distinct !DILexicalBlock(scope: !11131, file: !11032, line: 691, column: 2)
!11135 = !DILocation(line: 694, column: 2, scope: !11131)
!11136 = !DILocation(line: 695, column: 2, scope: !11131)
!11137 = !DILocation(line: 695, column: 2, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11131, file: !11032, line: 695, column: 2)
!11139 = !DILocation(line: 696, column: 1, scope: !11131)
!11140 = distinct !DISubprogram(name: "consume_skb", scope: !463, file: !463, line: 1063, type: !515, scopeLine: 1064, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11141 = !DILocalVariable(name: "skb", arg: 1, scope: !11140, file: !463, line: 1063, type: !461)
!11142 = !DILocation(line: 1063, column: 48, scope: !11140)
!11143 = !DILocation(line: 1065, column: 19, scope: !11140)
!11144 = !DILocation(line: 1065, column: 9, scope: !11140)
!11145 = !DILocation(line: 1065, column: 2, scope: !11140)
!11146 = distinct !DISubprogram(name: "mlxsw_core_lag_mapping_set", scope: !3, file: !3, line: 2663, type: !11147, scopeLine: 2665, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11147 = !DISubroutineType(types: !11148)
!11148 = !{null, !7847, !627, !840, !840}
!11149 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !11146, file: !3, line: 2663, type: !7847)
!11150 = !DILocation(line: 2663, column: 52, scope: !11146)
!11151 = !DILocalVariable(name: "lag_id", arg: 2, scope: !11146, file: !3, line: 2664, type: !627)
!11152 = !DILocation(line: 2664, column: 9, scope: !11146)
!11153 = !DILocalVariable(name: "port_index", arg: 3, scope: !11146, file: !3, line: 2664, type: !840)
!11154 = !DILocation(line: 2664, column: 20, scope: !11146)
!11155 = !DILocalVariable(name: "local_port", arg: 4, scope: !11146, file: !3, line: 2664, type: !840)
!11156 = !DILocation(line: 2664, column: 35, scope: !11146)
!11157 = !DILocalVariable(name: "index", scope: !11146, file: !3, line: 2666, type: !78)
!11158 = !DILocation(line: 2666, column: 6, scope: !11146)
!11159 = !DILocation(line: 2666, column: 43, scope: !11146)
!11160 = !DILocation(line: 2667, column: 8, scope: !11146)
!11161 = !DILocation(line: 2667, column: 16, scope: !11146)
!11162 = !DILocation(line: 2666, column: 14, scope: !11146)
!11163 = !DILocation(line: 2669, column: 35, scope: !11146)
!11164 = !DILocation(line: 2669, column: 2, scope: !11146)
!11165 = !DILocation(line: 2669, column: 14, scope: !11146)
!11166 = !DILocation(line: 2669, column: 18, scope: !11146)
!11167 = !DILocation(line: 2669, column: 26, scope: !11146)
!11168 = !DILocation(line: 2669, column: 33, scope: !11146)
!11169 = !DILocation(line: 2670, column: 1, scope: !11146)
!11170 = distinct !DISubprogram(name: "mlxsw_core_lag_mapping_index", scope: !3, file: !3, line: 2656, type: !11171, scopeLine: 2658, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11171 = !DISubroutineType(types: !11172)
!11172 = !{!78, !7847, !627, !840}
!11173 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !11170, file: !3, line: 2656, type: !7847)
!11174 = !DILocation(line: 2656, column: 60, scope: !11170)
!11175 = !DILocalVariable(name: "lag_id", arg: 2, scope: !11170, file: !3, line: 2657, type: !627)
!11176 = !DILocation(line: 2657, column: 10, scope: !11170)
!11177 = !DILocalVariable(name: "port_index", arg: 3, scope: !11170, file: !3, line: 2657, type: !840)
!11178 = !DILocation(line: 2657, column: 21, scope: !11170)
!11179 = !DILocation(line: 2659, column: 9, scope: !11170)
!11180 = !DILocation(line: 2659, column: 59, scope: !11170)
!11181 = !DILocation(line: 2659, column: 57, scope: !11170)
!11182 = !DILocation(line: 2660, column: 9, scope: !11170)
!11183 = !DILocation(line: 2659, column: 66, scope: !11170)
!11184 = !DILocation(line: 2659, column: 2, scope: !11170)
!11185 = distinct !DISubprogram(name: "mlxsw_core_lag_mapping_clear", scope: !3, file: !3, line: 2683, type: !11186, scopeLine: 2685, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11186 = !DISubroutineType(types: !11187)
!11187 = !{null, !7847, !627, !840}
!11188 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !11185, file: !3, line: 2683, type: !7847)
!11189 = !DILocation(line: 2683, column: 54, scope: !11185)
!11190 = !DILocalVariable(name: "lag_id", arg: 2, scope: !11185, file: !3, line: 2684, type: !627)
!11191 = !DILocation(line: 2684, column: 11, scope: !11185)
!11192 = !DILocalVariable(name: "local_port", arg: 3, scope: !11185, file: !3, line: 2684, type: !840)
!11193 = !DILocation(line: 2684, column: 22, scope: !11185)
!11194 = !DILocalVariable(name: "i", scope: !11185, file: !3, line: 2686, type: !78)
!11195 = !DILocation(line: 2686, column: 6, scope: !11185)
!11196 = !DILocation(line: 2688, column: 9, scope: !11197)
!11197 = distinct !DILexicalBlock(scope: !11185, file: !3, line: 2688, column: 2)
!11198 = !DILocation(line: 2688, column: 7, scope: !11197)
!11199 = !DILocation(line: 2688, column: 14, scope: !11200)
!11200 = distinct !DILexicalBlock(scope: !11197, file: !3, line: 2688, column: 2)
!11201 = !DILocation(line: 2688, column: 18, scope: !11200)
!11202 = !DILocation(line: 2688, column: 16, scope: !11200)
!11203 = !DILocation(line: 2688, column: 2, scope: !11197)
!11204 = !DILocalVariable(name: "index", scope: !11205, file: !3, line: 2689, type: !78)
!11205 = distinct !DILexicalBlock(scope: !11200, file: !3, line: 2688, column: 72)
!11206 = !DILocation(line: 2689, column: 7, scope: !11205)
!11207 = !DILocation(line: 2689, column: 44, scope: !11205)
!11208 = !DILocation(line: 2690, column: 9, scope: !11205)
!11209 = !DILocation(line: 2690, column: 17, scope: !11205)
!11210 = !DILocation(line: 2689, column: 15, scope: !11205)
!11211 = !DILocation(line: 2692, column: 7, scope: !11212)
!11212 = distinct !DILexicalBlock(scope: !11205, file: !3, line: 2692, column: 7)
!11213 = !DILocation(line: 2692, column: 19, scope: !11212)
!11214 = !DILocation(line: 2692, column: 23, scope: !11212)
!11215 = !DILocation(line: 2692, column: 31, scope: !11212)
!11216 = !DILocation(line: 2692, column: 41, scope: !11212)
!11217 = !DILocation(line: 2692, column: 38, scope: !11212)
!11218 = !DILocation(line: 2692, column: 7, scope: !11205)
!11219 = !DILocation(line: 2693, column: 4, scope: !11212)
!11220 = !DILocation(line: 2693, column: 16, scope: !11212)
!11221 = !DILocation(line: 2693, column: 20, scope: !11212)
!11222 = !DILocation(line: 2693, column: 28, scope: !11212)
!11223 = !DILocation(line: 2693, column: 35, scope: !11212)
!11224 = !DILocation(line: 2694, column: 2, scope: !11205)
!11225 = !DILocation(line: 2688, column: 68, scope: !11200)
!11226 = !DILocation(line: 2688, column: 2, scope: !11200)
!11227 = distinct !{!11227, !11203, !11228}
!11228 = !DILocation(line: 2694, column: 2, scope: !11197)
!11229 = !DILocation(line: 2695, column: 1, scope: !11185)
!11230 = distinct !DISubprogram(name: "mlxsw_core_res_get", scope: !3, file: !3, line: 2705, type: !11231, scopeLine: 2707, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11231 = !DISubroutineType(types: !11232)
!11232 = !{!377, !7847, !7579}
!11233 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !11230, file: !3, line: 2705, type: !7847)
!11234 = !DILocation(line: 2705, column: 43, scope: !11230)
!11235 = !DILocalVariable(name: "res_id", arg: 2, scope: !11230, file: !3, line: 2706, type: !7579)
!11236 = !DILocation(line: 2706, column: 28, scope: !11230)
!11237 = !DILocation(line: 2708, column: 24, scope: !11230)
!11238 = !DILocation(line: 2708, column: 36, scope: !11230)
!11239 = !DILocation(line: 2708, column: 41, scope: !11230)
!11240 = !DILocation(line: 2708, column: 9, scope: !11230)
!11241 = !DILocation(line: 2708, column: 2, scope: !11230)
!11242 = distinct !DISubprogram(name: "mlxsw_core_res_valid", scope: !3, file: !3, line: 2698, type: !11243, scopeLine: 2700, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11243 = !DISubroutineType(types: !11244)
!11244 = !{!817, !7847, !7579}
!11245 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !11242, file: !3, line: 2698, type: !7847)
!11246 = !DILocation(line: 2698, column: 46, scope: !11242)
!11247 = !DILocalVariable(name: "res_id", arg: 2, scope: !11242, file: !3, line: 2699, type: !7579)
!11248 = !DILocation(line: 2699, column: 24, scope: !11242)
!11249 = !DILocation(line: 2701, column: 26, scope: !11242)
!11250 = !DILocation(line: 2701, column: 38, scope: !11242)
!11251 = !DILocation(line: 2701, column: 43, scope: !11242)
!11252 = !DILocation(line: 2701, column: 9, scope: !11242)
!11253 = !DILocation(line: 2701, column: 2, scope: !11242)
!11254 = distinct !DISubprogram(name: "mlxsw_res_valid", scope: !7580, file: !7580, line: 124, type: !11255, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11255 = !DISubroutineType(types: !11256)
!11256 = !{!817, !8068, !7579}
!11257 = !DILocalVariable(name: "res", arg: 1, scope: !11254, file: !7580, line: 124, type: !8068)
!11258 = !DILocation(line: 124, column: 54, scope: !11254)
!11259 = !DILocalVariable(name: "res_id", arg: 2, scope: !11254, file: !7580, line: 125, type: !7579)
!11260 = !DILocation(line: 125, column: 26, scope: !11254)
!11261 = !DILocation(line: 127, column: 9, scope: !11254)
!11262 = !DILocation(line: 127, column: 14, scope: !11254)
!11263 = !DILocation(line: 127, column: 20, scope: !11254)
!11264 = !DILocation(line: 127, column: 2, scope: !11254)
!11265 = distinct !DISubprogram(name: "mlxsw_res_get", scope: !7580, file: !7580, line: 133, type: !11266, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11266 = !DISubroutineType(types: !11267)
!11267 = !{!377, !8068, !7579}
!11268 = !DILocalVariable(name: "res", arg: 1, scope: !11265, file: !7580, line: 133, type: !8068)
!11269 = !DILocation(line: 133, column: 51, scope: !11265)
!11270 = !DILocalVariable(name: "res_id", arg: 2, scope: !11265, file: !7580, line: 134, type: !7579)
!11271 = !DILocation(line: 134, column: 23, scope: !11265)
!11272 = !DILocalVariable(name: "__ret_warn_on", scope: !11273, file: !7580, line: 136, type: !78)
!11273 = distinct !DILexicalBlock(scope: !11274, file: !7580, line: 136, column: 6)
!11274 = distinct !DILexicalBlock(scope: !11265, file: !7580, line: 136, column: 6)
!11275 = !DILocation(line: 136, column: 6, scope: !11273)
!11276 = !DILocation(line: 136, column: 6, scope: !11277)
!11277 = distinct !DILexicalBlock(scope: !11273, file: !7580, line: 136, column: 6)
!11278 = !DILocation(line: 136, column: 6, scope: !11279)
!11279 = distinct !DILexicalBlock(scope: !11277, file: !7580, line: 136, column: 6)
!11280 = !DILocation(line: 136, column: 6, scope: !11281)
!11281 = distinct !DILexicalBlock(scope: !11279, file: !7580, line: 136, column: 6)
!11282 = !DILocation(line: 136, column: 6, scope: !11283)
!11283 = distinct !DILexicalBlock(scope: !11279, file: !7580, line: 136, column: 6)
!11284 = !{i32 -2137191988, i32 -2137191959, i32 -2137191913, i32 -2137191855, i32 -2137191801, i32 -2137191747, i32 -2137191692, i32 -2137191661}
!11285 = !DILocation(line: 136, column: 6, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11279, file: !7580, line: 136, column: 6)
!11287 = !{i32 -2137191232, i32 -2137191225, i32 -2137191173, i32 -2137191142, i32 -2137191112}
!11288 = !DILocation(line: 136, column: 6, scope: !11289)
!11289 = distinct !DILexicalBlock(scope: !11279, file: !7580, line: 136, column: 6)
!11290 = !DILocation(line: 136, column: 6, scope: !11274)
!11291 = !DILocation(line: 136, column: 6, scope: !11265)
!11292 = !DILocation(line: 137, column: 3, scope: !11274)
!11293 = !DILocation(line: 138, column: 9, scope: !11265)
!11294 = !DILocation(line: 138, column: 14, scope: !11265)
!11295 = !DILocation(line: 138, column: 21, scope: !11265)
!11296 = !DILocation(line: 138, column: 2, scope: !11265)
!11297 = !DILocation(line: 139, column: 1, scope: !11265)
!11298 = distinct !DISubprogram(name: "mlxsw_core_port_init", scope: !3, file: !3, line: 2753, type: !11299, scopeLine: 2759, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11299 = !DISubroutineType(types: !11300)
!11300 = !{!78, !7847, !840, !1033, !817, !1033, !817, !1033, !992, !528}
!11301 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !11298, file: !3, line: 2753, type: !7847)
!11302 = !DILocation(line: 2753, column: 45, scope: !11298)
!11303 = !DILocalVariable(name: "local_port", arg: 2, scope: !11298, file: !3, line: 2753, type: !840)
!11304 = !DILocation(line: 2753, column: 60, scope: !11298)
!11305 = !DILocalVariable(name: "port_number", arg: 3, scope: !11298, file: !3, line: 2754, type: !1033)
!11306 = !DILocation(line: 2754, column: 9, scope: !11298)
!11307 = !DILocalVariable(name: "split", arg: 4, scope: !11298, file: !3, line: 2754, type: !817)
!11308 = !DILocation(line: 2754, column: 27, scope: !11298)
!11309 = !DILocalVariable(name: "split_port_subnumber", arg: 5, scope: !11298, file: !3, line: 2755, type: !1033)
!11310 = !DILocation(line: 2755, column: 9, scope: !11298)
!11311 = !DILocalVariable(name: "splittable", arg: 6, scope: !11298, file: !3, line: 2756, type: !817)
!11312 = !DILocation(line: 2756, column: 10, scope: !11298)
!11313 = !DILocalVariable(name: "lanes", arg: 7, scope: !11298, file: !3, line: 2756, type: !1033)
!11314 = !DILocation(line: 2756, column: 26, scope: !11298)
!11315 = !DILocalVariable(name: "switch_id", arg: 8, scope: !11298, file: !3, line: 2757, type: !992)
!11316 = !DILocation(line: 2757, column: 26, scope: !11298)
!11317 = !DILocalVariable(name: "switch_id_len", arg: 9, scope: !11298, file: !3, line: 2758, type: !528)
!11318 = !DILocation(line: 2758, column: 19, scope: !11298)
!11319 = !DILocation(line: 2760, column: 32, scope: !11298)
!11320 = !DILocation(line: 2760, column: 44, scope: !11298)
!11321 = !DILocation(line: 2762, column: 11, scope: !11298)
!11322 = !DILocation(line: 2762, column: 24, scope: !11298)
!11323 = !DILocation(line: 2762, column: 31, scope: !11298)
!11324 = !DILocation(line: 2763, column: 11, scope: !11298)
!11325 = !DILocation(line: 2763, column: 23, scope: !11298)
!11326 = !DILocation(line: 2764, column: 11, scope: !11298)
!11327 = !DILocation(line: 2764, column: 22, scope: !11298)
!11328 = !DILocation(line: 2760, column: 9, scope: !11298)
!11329 = !DILocation(line: 2760, column: 2, scope: !11298)
!11330 = distinct !DISubprogram(name: "__mlxsw_core_port_init", scope: !3, file: !3, line: 2712, type: !11331, scopeLine: 2719, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11331 = !DISubroutineType(types: !11332)
!11332 = !{!78, !7847, !840, !6549, !1033, !817, !1033, !817, !1033, !992, !528}
!11333 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !11330, file: !3, line: 2712, type: !7847)
!11334 = !DILocation(line: 2712, column: 54, scope: !11330)
!11335 = !DILocalVariable(name: "local_port", arg: 2, scope: !11330, file: !3, line: 2712, type: !840)
!11336 = !DILocation(line: 2712, column: 69, scope: !11330)
!11337 = !DILocalVariable(name: "flavour", arg: 3, scope: !11330, file: !3, line: 2713, type: !6549)
!11338 = !DILocation(line: 2713, column: 33, scope: !11330)
!11339 = !DILocalVariable(name: "port_number", arg: 4, scope: !11330, file: !3, line: 2714, type: !1033)
!11340 = !DILocation(line: 2714, column: 11, scope: !11330)
!11341 = !DILocalVariable(name: "split", arg: 5, scope: !11330, file: !3, line: 2714, type: !817)
!11342 = !DILocation(line: 2714, column: 29, scope: !11330)
!11343 = !DILocalVariable(name: "split_port_subnumber", arg: 6, scope: !11330, file: !3, line: 2715, type: !1033)
!11344 = !DILocation(line: 2715, column: 11, scope: !11330)
!11345 = !DILocalVariable(name: "splittable", arg: 7, scope: !11330, file: !3, line: 2716, type: !817)
!11346 = !DILocation(line: 2716, column: 12, scope: !11330)
!11347 = !DILocalVariable(name: "lanes", arg: 8, scope: !11330, file: !3, line: 2716, type: !1033)
!11348 = !DILocation(line: 2716, column: 28, scope: !11330)
!11349 = !DILocalVariable(name: "switch_id", arg: 9, scope: !11330, file: !3, line: 2717, type: !992)
!11350 = !DILocation(line: 2717, column: 28, scope: !11330)
!11351 = !DILocalVariable(name: "switch_id_len", arg: 10, scope: !11330, file: !3, line: 2718, type: !528)
!11352 = !DILocation(line: 2718, column: 21, scope: !11330)
!11353 = !DILocalVariable(name: "devlink", scope: !11330, file: !3, line: 2720, type: !5560)
!11354 = !DILocation(line: 2720, column: 18, scope: !11330)
!11355 = !DILocation(line: 2720, column: 44, scope: !11330)
!11356 = !DILocation(line: 2720, column: 28, scope: !11330)
!11357 = !DILocalVariable(name: "mlxsw_core_port", scope: !11330, file: !3, line: 2721, type: !7919)
!11358 = !DILocation(line: 2721, column: 26, scope: !11330)
!11359 = !DILocation(line: 2722, column: 7, scope: !11330)
!11360 = !DILocation(line: 2722, column: 19, scope: !11330)
!11361 = !DILocation(line: 2722, column: 25, scope: !11330)
!11362 = !DILocalVariable(name: "devlink_port", scope: !11330, file: !3, line: 2723, type: !5552)
!11363 = !DILocation(line: 2723, column: 23, scope: !11330)
!11364 = !DILocation(line: 2723, column: 39, scope: !11330)
!11365 = !DILocation(line: 2723, column: 56, scope: !11330)
!11366 = !DILocalVariable(name: "attrs", scope: !11330, file: !3, line: 2724, type: !6543)
!11367 = !DILocation(line: 2724, column: 28, scope: !11330)
!11368 = !DILocalVariable(name: "err", scope: !11330, file: !3, line: 2725, type: !78)
!11369 = !DILocation(line: 2725, column: 6, scope: !11330)
!11370 = !DILocation(line: 2727, column: 16, scope: !11330)
!11371 = !DILocation(line: 2727, column: 8, scope: !11330)
!11372 = !DILocation(line: 2727, column: 14, scope: !11330)
!11373 = !DILocation(line: 2728, column: 16, scope: !11330)
!11374 = !DILocation(line: 2728, column: 8, scope: !11330)
!11375 = !DILocation(line: 2728, column: 14, scope: !11330)
!11376 = !DILocation(line: 2729, column: 21, scope: !11330)
!11377 = !DILocation(line: 2729, column: 8, scope: !11330)
!11378 = !DILocation(line: 2729, column: 19, scope: !11330)
!11379 = !DILocation(line: 2730, column: 18, scope: !11330)
!11380 = !DILocation(line: 2730, column: 8, scope: !11330)
!11381 = !DILocation(line: 2730, column: 16, scope: !11330)
!11382 = !DILocation(line: 2731, column: 27, scope: !11330)
!11383 = !DILocation(line: 2731, column: 8, scope: !11330)
!11384 = !DILocation(line: 2731, column: 13, scope: !11330)
!11385 = !DILocation(line: 2731, column: 25, scope: !11330)
!11386 = !DILocation(line: 2732, column: 36, scope: !11330)
!11387 = !DILocation(line: 2732, column: 8, scope: !11330)
!11388 = !DILocation(line: 2732, column: 13, scope: !11330)
!11389 = !DILocation(line: 2732, column: 34, scope: !11330)
!11390 = !DILocation(line: 2733, column: 15, scope: !11330)
!11391 = !DILocation(line: 2733, column: 25, scope: !11330)
!11392 = !DILocation(line: 2733, column: 2, scope: !11330)
!11393 = !DILocation(line: 2733, column: 29, scope: !11330)
!11394 = !DILocation(line: 2733, column: 40, scope: !11330)
!11395 = !DILocation(line: 2734, column: 27, scope: !11330)
!11396 = !DILocation(line: 2734, column: 8, scope: !11330)
!11397 = !DILocation(line: 2734, column: 18, scope: !11330)
!11398 = !DILocation(line: 2734, column: 25, scope: !11330)
!11399 = !DILocation(line: 2735, column: 32, scope: !11330)
!11400 = !DILocation(line: 2735, column: 2, scope: !11330)
!11401 = !DILocation(line: 2735, column: 19, scope: !11330)
!11402 = !DILocation(line: 2735, column: 30, scope: !11330)
!11403 = !DILocation(line: 2736, column: 25, scope: !11330)
!11404 = !DILocation(line: 2736, column: 2, scope: !11330)
!11405 = !DILocation(line: 2737, column: 30, scope: !11330)
!11406 = !DILocation(line: 2737, column: 39, scope: !11330)
!11407 = !DILocation(line: 2737, column: 53, scope: !11330)
!11408 = !DILocation(line: 2737, column: 8, scope: !11330)
!11409 = !DILocation(line: 2737, column: 6, scope: !11330)
!11410 = !DILocation(line: 2738, column: 6, scope: !11411)
!11411 = distinct !DILexicalBlock(scope: !11330, file: !3, line: 2738, column: 6)
!11412 = !DILocation(line: 2738, column: 6, scope: !11330)
!11413 = !DILocation(line: 2739, column: 10, scope: !11411)
!11414 = !DILocation(line: 2739, column: 3, scope: !11411)
!11415 = !DILocation(line: 2740, column: 9, scope: !11330)
!11416 = !DILocation(line: 2740, column: 2, scope: !11330)
!11417 = distinct !DISubprogram(name: "mlxsw_core_port_fini", scope: !3, file: !3, line: 2768, type: !11418, scopeLine: 2769, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11418 = !DISubroutineType(types: !11419)
!11419 = !{null, !7847, !840}
!11420 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !11417, file: !3, line: 2768, type: !7847)
!11421 = !DILocation(line: 2768, column: 46, scope: !11417)
!11422 = !DILocalVariable(name: "local_port", arg: 2, scope: !11417, file: !3, line: 2768, type: !840)
!11423 = !DILocation(line: 2768, column: 61, scope: !11417)
!11424 = !DILocation(line: 2770, column: 25, scope: !11417)
!11425 = !DILocation(line: 2770, column: 37, scope: !11417)
!11426 = !DILocation(line: 2770, column: 2, scope: !11417)
!11427 = !DILocation(line: 2771, column: 1, scope: !11417)
!11428 = distinct !DISubprogram(name: "__mlxsw_core_port_fini", scope: !3, file: !3, line: 2743, type: !11418, scopeLine: 2744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11429 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !11428, file: !3, line: 2743, type: !7847)
!11430 = !DILocation(line: 2743, column: 55, scope: !11428)
!11431 = !DILocalVariable(name: "local_port", arg: 2, scope: !11428, file: !3, line: 2743, type: !840)
!11432 = !DILocation(line: 2743, column: 70, scope: !11428)
!11433 = !DILocalVariable(name: "mlxsw_core_port", scope: !11428, file: !3, line: 2745, type: !7919)
!11434 = !DILocation(line: 2745, column: 26, scope: !11428)
!11435 = !DILocation(line: 2746, column: 7, scope: !11428)
!11436 = !DILocation(line: 2746, column: 19, scope: !11428)
!11437 = !DILocation(line: 2746, column: 25, scope: !11428)
!11438 = !DILocalVariable(name: "devlink_port", scope: !11428, file: !3, line: 2747, type: !5552)
!11439 = !DILocation(line: 2747, column: 23, scope: !11428)
!11440 = !DILocation(line: 2747, column: 39, scope: !11428)
!11441 = !DILocation(line: 2747, column: 56, scope: !11428)
!11442 = !DILocation(line: 2749, column: 26, scope: !11428)
!11443 = !DILocation(line: 2749, column: 2, scope: !11428)
!11444 = !DILocation(line: 2750, column: 9, scope: !11428)
!11445 = !DILocation(line: 2750, column: 2, scope: !11428)
!11446 = !DILocation(line: 2751, column: 1, scope: !11428)
!11447 = distinct !DISubprogram(name: "mlxsw_core_cpu_port_init", scope: !3, file: !3, line: 2774, type: !11448, scopeLine: 2778, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11448 = !DISubroutineType(types: !11449)
!11449 = !{!78, !7847, !637, !992, !528}
!11450 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !11447, file: !3, line: 2774, type: !7847)
!11451 = !DILocation(line: 2774, column: 49, scope: !11447)
!11452 = !DILocalVariable(name: "port_driver_priv", arg: 2, scope: !11447, file: !3, line: 2775, type: !637)
!11453 = !DILocation(line: 2775, column: 15, scope: !11447)
!11454 = !DILocalVariable(name: "switch_id", arg: 3, scope: !11447, file: !3, line: 2776, type: !992)
!11455 = !DILocation(line: 2776, column: 30, scope: !11447)
!11456 = !DILocalVariable(name: "switch_id_len", arg: 4, scope: !11447, file: !3, line: 2777, type: !528)
!11457 = !DILocation(line: 2777, column: 23, scope: !11447)
!11458 = !DILocalVariable(name: "mlxsw_core_port", scope: !11447, file: !3, line: 2779, type: !7919)
!11459 = !DILocation(line: 2779, column: 26, scope: !11447)
!11460 = !DILocation(line: 2780, column: 6, scope: !11447)
!11461 = !DILocation(line: 2780, column: 18, scope: !11447)
!11462 = !DILocalVariable(name: "err", scope: !11447, file: !3, line: 2781, type: !78)
!11463 = !DILocation(line: 2781, column: 6, scope: !11447)
!11464 = !DILocation(line: 2783, column: 31, scope: !11447)
!11465 = !DILocation(line: 2786, column: 10, scope: !11447)
!11466 = !DILocation(line: 2786, column: 21, scope: !11447)
!11467 = !DILocation(line: 2783, column: 8, scope: !11447)
!11468 = !DILocation(line: 2783, column: 6, scope: !11447)
!11469 = !DILocation(line: 2787, column: 6, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11447, file: !3, line: 2787, column: 6)
!11471 = !DILocation(line: 2787, column: 6, scope: !11447)
!11472 = !DILocation(line: 2788, column: 10, scope: !11470)
!11473 = !DILocation(line: 2788, column: 3, scope: !11470)
!11474 = !DILocation(line: 2790, column: 38, scope: !11447)
!11475 = !DILocation(line: 2790, column: 2, scope: !11447)
!11476 = !DILocation(line: 2790, column: 19, scope: !11447)
!11477 = !DILocation(line: 2790, column: 36, scope: !11447)
!11478 = !DILocation(line: 2791, column: 2, scope: !11447)
!11479 = !DILocation(line: 2792, column: 1, scope: !11447)
!11480 = distinct !DISubprogram(name: "mlxsw_core_cpu_port_fini", scope: !3, file: !3, line: 2795, type: !7889, scopeLine: 2796, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11481 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !11480, file: !3, line: 2795, type: !7847)
!11482 = !DILocation(line: 2795, column: 50, scope: !11480)
!11483 = !DILocation(line: 2797, column: 25, scope: !11480)
!11484 = !DILocation(line: 2797, column: 2, scope: !11480)
!11485 = !DILocation(line: 2798, column: 1, scope: !11480)
!11486 = distinct !DISubprogram(name: "mlxsw_core_port_eth_set", scope: !3, file: !3, line: 2801, type: !11487, scopeLine: 2803, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11487 = !DISubroutineType(types: !11488)
!11488 = !{null, !7847, !840, !637, !336}
!11489 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !11486, file: !3, line: 2801, type: !7847)
!11490 = !DILocation(line: 2801, column: 49, scope: !11486)
!11491 = !DILocalVariable(name: "local_port", arg: 2, scope: !11486, file: !3, line: 2801, type: !840)
!11492 = !DILocation(line: 2801, column: 64, scope: !11486)
!11493 = !DILocalVariable(name: "port_driver_priv", arg: 3, scope: !11486, file: !3, line: 2802, type: !637)
!11494 = !DILocation(line: 2802, column: 15, scope: !11486)
!11495 = !DILocalVariable(name: "dev", arg: 4, scope: !11486, file: !3, line: 2802, type: !336)
!11496 = !DILocation(line: 2802, column: 52, scope: !11486)
!11497 = !DILocalVariable(name: "mlxsw_core_port", scope: !11486, file: !3, line: 2804, type: !7919)
!11498 = !DILocation(line: 2804, column: 26, scope: !11486)
!11499 = !DILocation(line: 2805, column: 7, scope: !11486)
!11500 = !DILocation(line: 2805, column: 19, scope: !11486)
!11501 = !DILocation(line: 2805, column: 25, scope: !11486)
!11502 = !DILocalVariable(name: "devlink_port", scope: !11486, file: !3, line: 2806, type: !5552)
!11503 = !DILocation(line: 2806, column: 23, scope: !11486)
!11504 = !DILocation(line: 2806, column: 39, scope: !11486)
!11505 = !DILocation(line: 2806, column: 56, scope: !11486)
!11506 = !DILocation(line: 2808, column: 38, scope: !11486)
!11507 = !DILocation(line: 2808, column: 2, scope: !11486)
!11508 = !DILocation(line: 2808, column: 19, scope: !11486)
!11509 = !DILocation(line: 2808, column: 36, scope: !11486)
!11510 = !DILocation(line: 2809, column: 28, scope: !11486)
!11511 = !DILocation(line: 2809, column: 42, scope: !11486)
!11512 = !DILocation(line: 2809, column: 2, scope: !11486)
!11513 = !DILocation(line: 2810, column: 1, scope: !11486)
!11514 = distinct !DISubprogram(name: "mlxsw_core_port_ib_set", scope: !3, file: !3, line: 2813, type: !11515, scopeLine: 2815, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11515 = !DISubroutineType(types: !11516)
!11516 = !{null, !7847, !840, !637}
!11517 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !11514, file: !3, line: 2813, type: !7847)
!11518 = !DILocation(line: 2813, column: 48, scope: !11514)
!11519 = !DILocalVariable(name: "local_port", arg: 2, scope: !11514, file: !3, line: 2813, type: !840)
!11520 = !DILocation(line: 2813, column: 63, scope: !11514)
!11521 = !DILocalVariable(name: "port_driver_priv", arg: 3, scope: !11514, file: !3, line: 2814, type: !637)
!11522 = !DILocation(line: 2814, column: 14, scope: !11514)
!11523 = !DILocalVariable(name: "mlxsw_core_port", scope: !11514, file: !3, line: 2816, type: !7919)
!11524 = !DILocation(line: 2816, column: 26, scope: !11514)
!11525 = !DILocation(line: 2817, column: 7, scope: !11514)
!11526 = !DILocation(line: 2817, column: 19, scope: !11514)
!11527 = !DILocation(line: 2817, column: 25, scope: !11514)
!11528 = !DILocalVariable(name: "devlink_port", scope: !11514, file: !3, line: 2818, type: !5552)
!11529 = !DILocation(line: 2818, column: 23, scope: !11514)
!11530 = !DILocation(line: 2818, column: 39, scope: !11514)
!11531 = !DILocation(line: 2818, column: 56, scope: !11514)
!11532 = !DILocation(line: 2820, column: 38, scope: !11514)
!11533 = !DILocation(line: 2820, column: 2, scope: !11514)
!11534 = !DILocation(line: 2820, column: 19, scope: !11514)
!11535 = !DILocation(line: 2820, column: 36, scope: !11514)
!11536 = !DILocation(line: 2821, column: 27, scope: !11514)
!11537 = !DILocation(line: 2821, column: 2, scope: !11514)
!11538 = !DILocation(line: 2822, column: 1, scope: !11514)
!11539 = distinct !DISubprogram(name: "mlxsw_core_port_clear", scope: !3, file: !3, line: 2825, type: !11515, scopeLine: 2827, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11540 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !11539, file: !3, line: 2825, type: !7847)
!11541 = !DILocation(line: 2825, column: 47, scope: !11539)
!11542 = !DILocalVariable(name: "local_port", arg: 2, scope: !11539, file: !3, line: 2825, type: !840)
!11543 = !DILocation(line: 2825, column: 62, scope: !11539)
!11544 = !DILocalVariable(name: "port_driver_priv", arg: 3, scope: !11539, file: !3, line: 2826, type: !637)
!11545 = !DILocation(line: 2826, column: 13, scope: !11539)
!11546 = !DILocalVariable(name: "mlxsw_core_port", scope: !11539, file: !3, line: 2828, type: !7919)
!11547 = !DILocation(line: 2828, column: 26, scope: !11539)
!11548 = !DILocation(line: 2829, column: 7, scope: !11539)
!11549 = !DILocation(line: 2829, column: 19, scope: !11539)
!11550 = !DILocation(line: 2829, column: 25, scope: !11539)
!11551 = !DILocalVariable(name: "devlink_port", scope: !11539, file: !3, line: 2830, type: !5552)
!11552 = !DILocation(line: 2830, column: 23, scope: !11539)
!11553 = !DILocation(line: 2830, column: 39, scope: !11539)
!11554 = !DILocation(line: 2830, column: 56, scope: !11539)
!11555 = !DILocation(line: 2832, column: 38, scope: !11539)
!11556 = !DILocation(line: 2832, column: 2, scope: !11539)
!11557 = !DILocation(line: 2832, column: 19, scope: !11539)
!11558 = !DILocation(line: 2832, column: 36, scope: !11539)
!11559 = !DILocation(line: 2833, column: 26, scope: !11539)
!11560 = !DILocation(line: 2833, column: 2, scope: !11539)
!11561 = !DILocation(line: 2834, column: 1, scope: !11539)
!11562 = distinct !DISubprogram(name: "mlxsw_core_port_type_get", scope: !3, file: !3, line: 2837, type: !11563, scopeLine: 2839, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11563 = !DISubroutineType(types: !11564)
!11564 = !{!24, !7847, !840}
!11565 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !11562, file: !3, line: 2837, type: !7847)
!11566 = !DILocation(line: 2837, column: 68, scope: !11562)
!11567 = !DILocalVariable(name: "local_port", arg: 2, scope: !11562, file: !3, line: 2838, type: !840)
!11568 = !DILocation(line: 2838, column: 10, scope: !11562)
!11569 = !DILocalVariable(name: "mlxsw_core_port", scope: !11562, file: !3, line: 2840, type: !7919)
!11570 = !DILocation(line: 2840, column: 26, scope: !11562)
!11571 = !DILocation(line: 2841, column: 7, scope: !11562)
!11572 = !DILocation(line: 2841, column: 19, scope: !11562)
!11573 = !DILocation(line: 2841, column: 25, scope: !11562)
!11574 = !DILocalVariable(name: "devlink_port", scope: !11562, file: !3, line: 2842, type: !5552)
!11575 = !DILocation(line: 2842, column: 23, scope: !11562)
!11576 = !DILocation(line: 2842, column: 39, scope: !11562)
!11577 = !DILocation(line: 2842, column: 56, scope: !11562)
!11578 = !DILocation(line: 2844, column: 9, scope: !11562)
!11579 = !DILocation(line: 2844, column: 23, scope: !11562)
!11580 = !DILocation(line: 2844, column: 2, scope: !11562)
!11581 = distinct !DISubprogram(name: "mlxsw_core_port_devlink_port_get", scope: !3, file: !3, line: 2850, type: !11582, scopeLine: 2852, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11582 = !DISubroutineType(types: !11583)
!11583 = !{!5552, !7847, !840}
!11584 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !11581, file: !3, line: 2850, type: !7847)
!11585 = !DILocation(line: 2850, column: 53, scope: !11581)
!11586 = !DILocalVariable(name: "local_port", arg: 2, scope: !11581, file: !3, line: 2851, type: !840)
!11587 = !DILocation(line: 2851, column: 9, scope: !11581)
!11588 = !DILocalVariable(name: "mlxsw_core_port", scope: !11581, file: !3, line: 2853, type: !7919)
!11589 = !DILocation(line: 2853, column: 26, scope: !11581)
!11590 = !DILocation(line: 2854, column: 7, scope: !11581)
!11591 = !DILocation(line: 2854, column: 19, scope: !11581)
!11592 = !DILocation(line: 2854, column: 25, scope: !11581)
!11593 = !DILocalVariable(name: "devlink_port", scope: !11581, file: !3, line: 2855, type: !5552)
!11594 = !DILocation(line: 2855, column: 23, scope: !11581)
!11595 = !DILocation(line: 2855, column: 39, scope: !11581)
!11596 = !DILocation(line: 2855, column: 56, scope: !11581)
!11597 = !DILocation(line: 2857, column: 9, scope: !11581)
!11598 = !DILocation(line: 2857, column: 2, scope: !11581)
!11599 = distinct !DISubprogram(name: "mlxsw_core_env", scope: !3, file: !3, line: 2861, type: !11600, scopeLine: 2862, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11600 = !DISubroutineType(types: !11601)
!11601 = !{!8127, !8844}
!11602 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !11599, file: !3, line: 2861, type: !8844)
!11603 = !DILocation(line: 2861, column: 59, scope: !11599)
!11604 = !DILocation(line: 2863, column: 9, scope: !11599)
!11605 = !DILocation(line: 2863, column: 21, scope: !11599)
!11606 = !DILocation(line: 2863, column: 2, scope: !11599)
!11607 = distinct !DISubprogram(name: "mlxsw_core_is_initialized", scope: !3, file: !3, line: 2866, type: !8860, scopeLine: 2867, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11608 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !11607, file: !3, line: 2866, type: !8844)
!11609 = !DILocation(line: 2866, column: 57, scope: !11607)
!11610 = !DILocation(line: 2868, column: 9, scope: !11607)
!11611 = !DILocation(line: 2868, column: 21, scope: !11607)
!11612 = !DILocation(line: 2868, column: 2, scope: !11607)
!11613 = distinct !DISubprogram(name: "mlxsw_core_module_max_width", scope: !3, file: !3, line: 2871, type: !11614, scopeLine: 2872, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11614 = !DISubroutineType(types: !11615)
!11615 = !{!78, !7847, !840}
!11616 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !11613, file: !3, line: 2871, type: !7847)
!11617 = !DILocation(line: 2871, column: 52, scope: !11613)
!11618 = !DILocalVariable(name: "module", arg: 2, scope: !11613, file: !3, line: 2871, type: !840)
!11619 = !DILocation(line: 2871, column: 67, scope: !11613)
!11620 = !DILocalVariable(name: "module_type", scope: !11613, file: !3, line: 2873, type: !7633)
!11621 = !DILocation(line: 2873, column: 34, scope: !11613)
!11622 = !DILocalVariable(name: "pmtm_pl", scope: !11613, file: !3, line: 2874, type: !313)
!11623 = !DILocation(line: 2874, column: 7, scope: !11613)
!11624 = !DILocalVariable(name: "err", scope: !11613, file: !3, line: 2875, type: !78)
!11625 = !DILocation(line: 2875, column: 6, scope: !11613)
!11626 = !DILocation(line: 2877, column: 22, scope: !11613)
!11627 = !DILocation(line: 2877, column: 31, scope: !11613)
!11628 = !DILocation(line: 2877, column: 2, scope: !11613)
!11629 = !DILocation(line: 2878, column: 24, scope: !11613)
!11630 = !DILocation(line: 2878, column: 53, scope: !11613)
!11631 = !DILocation(line: 2878, column: 8, scope: !11613)
!11632 = !DILocation(line: 2878, column: 6, scope: !11613)
!11633 = !DILocation(line: 2879, column: 6, scope: !11634)
!11634 = distinct !DILexicalBlock(scope: !11613, file: !3, line: 2879, column: 6)
!11635 = !DILocation(line: 2879, column: 6, scope: !11613)
!11636 = !DILocation(line: 2880, column: 10, scope: !11634)
!11637 = !DILocation(line: 2880, column: 3, scope: !11634)
!11638 = !DILocation(line: 2881, column: 24, scope: !11613)
!11639 = !DILocation(line: 2881, column: 2, scope: !11613)
!11640 = !DILocation(line: 2885, column: 10, scope: !11613)
!11641 = !DILocation(line: 2885, column: 2, scope: !11613)
!11642 = !DILocation(line: 2889, column: 3, scope: !11643)
!11643 = distinct !DILexicalBlock(scope: !11613, file: !3, line: 2885, column: 23)
!11644 = !DILocation(line: 2893, column: 3, scope: !11643)
!11645 = !DILocation(line: 2898, column: 3, scope: !11643)
!11646 = !DILocation(line: 2902, column: 3, scope: !11643)
!11647 = !DILocation(line: 2904, column: 3, scope: !11643)
!11648 = !DILocation(line: 2906, column: 1, scope: !11613)
!11649 = distinct !DISubprogram(name: "mlxsw_reg_pmtm_pack", scope: !7404, file: !7404, line: 5646, type: !11650, scopeLine: 5647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11650 = !DISubroutineType(types: !11651)
!11651 = !{null, !1084, !840}
!11652 = !DILocalVariable(name: "payload", arg: 1, scope: !11649, file: !7404, line: 5646, type: !1084)
!11653 = !DILocation(line: 5646, column: 46, scope: !11649)
!11654 = !DILocalVariable(name: "module", arg: 2, scope: !11649, file: !7404, line: 5646, type: !840)
!11655 = !DILocation(line: 5646, column: 58, scope: !11649)
!11656 = !DILocation(line: 5648, column: 2, scope: !11649)
!11657 = !DILocation(line: 5649, column: 28, scope: !11649)
!11658 = !DILocation(line: 5649, column: 37, scope: !11649)
!11659 = !DILocation(line: 5649, column: 2, scope: !11649)
!11660 = !DILocation(line: 5650, column: 1, scope: !11649)
!11661 = distinct !DISubprogram(name: "mlxsw_reg_pmtm_unpack", scope: !7404, file: !7404, line: 5653, type: !11662, scopeLine: 5655, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11662 = !DISubroutineType(types: !11663)
!11663 = !{null, !1084, !11664}
!11664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7633, size: 64)
!11665 = !DILocalVariable(name: "payload", arg: 1, scope: !11661, file: !7404, line: 5653, type: !1084)
!11666 = !DILocation(line: 5653, column: 29, scope: !11661)
!11667 = !DILocalVariable(name: "module_type", arg: 2, scope: !11661, file: !7404, line: 5654, type: !11664)
!11668 = !DILocation(line: 5654, column: 42, scope: !11661)
!11669 = !DILocation(line: 5656, column: 48, scope: !11661)
!11670 = !DILocation(line: 5656, column: 17, scope: !11661)
!11671 = !DILocation(line: 5656, column: 3, scope: !11661)
!11672 = !DILocation(line: 5656, column: 15, scope: !11661)
!11673 = !DILocation(line: 5657, column: 1, scope: !11661)
!11674 = distinct !DISubprogram(name: "mlxsw_cmd_exec", scope: !3, file: !3, line: 2927, type: !11675, scopeLine: 2931, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11675 = !DISubroutineType(types: !11676)
!11676 = !{!78, !7847, !627, !840, !1033, !817, !817, !1084, !1085, !1084, !1085}
!11677 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !11674, file: !3, line: 2927, type: !7847)
!11678 = !DILocation(line: 2927, column: 39, scope: !11674)
!11679 = !DILocalVariable(name: "opcode", arg: 2, scope: !11674, file: !3, line: 2927, type: !627)
!11680 = !DILocation(line: 2927, column: 55, scope: !11674)
!11681 = !DILocalVariable(name: "opcode_mod", arg: 3, scope: !11674, file: !3, line: 2927, type: !840)
!11682 = !DILocation(line: 2927, column: 66, scope: !11674)
!11683 = !DILocalVariable(name: "in_mod", arg: 4, scope: !11674, file: !3, line: 2928, type: !1033)
!11684 = !DILocation(line: 2928, column: 10, scope: !11674)
!11685 = !DILocalVariable(name: "out_mbox_direct", arg: 5, scope: !11674, file: !3, line: 2928, type: !817)
!11686 = !DILocation(line: 2928, column: 23, scope: !11674)
!11687 = !DILocalVariable(name: "reset_ok", arg: 6, scope: !11674, file: !3, line: 2928, type: !817)
!11688 = !DILocation(line: 2928, column: 45, scope: !11674)
!11689 = !DILocalVariable(name: "in_mbox", arg: 7, scope: !11674, file: !3, line: 2929, type: !1084)
!11690 = !DILocation(line: 2929, column: 12, scope: !11674)
!11691 = !DILocalVariable(name: "in_mbox_size", arg: 8, scope: !11674, file: !3, line: 2929, type: !1085)
!11692 = !DILocation(line: 2929, column: 28, scope: !11674)
!11693 = !DILocalVariable(name: "out_mbox", arg: 9, scope: !11674, file: !3, line: 2930, type: !1084)
!11694 = !DILocation(line: 2930, column: 12, scope: !11674)
!11695 = !DILocalVariable(name: "out_mbox_size", arg: 10, scope: !11674, file: !3, line: 2930, type: !1085)
!11696 = !DILocation(line: 2930, column: 29, scope: !11674)
!11697 = !DILocalVariable(name: "status", scope: !11674, file: !3, line: 2932, type: !840)
!11698 = !DILocation(line: 2932, column: 5, scope: !11674)
!11699 = !DILocalVariable(name: "err", scope: !11674, file: !3, line: 2933, type: !78)
!11700 = !DILocation(line: 2933, column: 6, scope: !11674)
!11701 = !DILocation(line: 2935, column: 2, scope: !11674)
!11702 = !DILocation(line: 2935, column: 2, scope: !11703)
!11703 = distinct !DILexicalBlock(scope: !11704, file: !3, line: 2935, column: 2)
!11704 = distinct !DILexicalBlock(scope: !11674, file: !3, line: 2935, column: 2)
!11705 = !DILocation(line: 2935, column: 2, scope: !11704)
!11706 = !DILocation(line: 2935, column: 2, scope: !11707)
!11707 = distinct !DILexicalBlock(scope: !11703, file: !3, line: 2935, column: 2)
!11708 = !DILocation(line: 2935, column: 2, scope: !11709)
!11709 = distinct !DILexicalBlock(scope: !11707, file: !3, line: 2935, column: 2)
!11710 = !DILocation(line: 2935, column: 2, scope: !11711)
!11711 = distinct !DILexicalBlock(scope: !11707, file: !3, line: 2935, column: 2)
!11712 = !{i32 -2137013961, i32 -2137013932, i32 -2137013886, i32 -2137013828, i32 -2137013774, i32 -2137013720, i32 -2137013665, i32 -2137013634}
!11713 = !DILocation(line: 2935, column: 2, scope: !11714)
!11714 = distinct !DILexicalBlock(scope: !11715, file: !3, line: 2935, column: 2)
!11715 = distinct !DILexicalBlock(scope: !11707, file: !3, line: 2935, column: 2)
!11716 = !{i32 -2137013168, i32 -2137013161, i32 -2137013107, i32 -2137013076, i32 -2137013046}
!11717 = !DILocation(line: 2935, column: 2, scope: !11715)
!11718 = !DILocation(line: 2936, column: 7, scope: !11719)
!11719 = distinct !DILexicalBlock(scope: !11674, file: !3, line: 2936, column: 6)
!11720 = !DILocation(line: 2936, column: 19, scope: !11719)
!11721 = !DILocation(line: 2936, column: 24, scope: !11719)
!11722 = !DILocation(line: 2936, column: 6, scope: !11674)
!11723 = !DILocation(line: 2937, column: 3, scope: !11719)
!11724 = !DILocation(line: 2941, column: 6, scope: !11725)
!11725 = distinct !DILexicalBlock(scope: !11674, file: !3, line: 2941, column: 6)
!11726 = !DILocation(line: 2941, column: 6, scope: !11674)
!11727 = !DILocation(line: 2943, column: 27, scope: !11728)
!11728 = distinct !DILexicalBlock(scope: !11725, file: !3, line: 2941, column: 15)
!11729 = !DILocation(line: 2943, column: 39, scope: !11728)
!11730 = !DILocation(line: 2943, column: 48, scope: !11728)
!11731 = !DILocation(line: 2943, column: 3, scope: !11728)
!11732 = !DILocation(line: 2944, column: 2, scope: !11728)
!11733 = !DILocation(line: 2946, column: 8, scope: !11674)
!11734 = !DILocation(line: 2946, column: 20, scope: !11674)
!11735 = !DILocation(line: 2946, column: 25, scope: !11674)
!11736 = !DILocation(line: 2946, column: 34, scope: !11674)
!11737 = !DILocation(line: 2946, column: 46, scope: !11674)
!11738 = !DILocation(line: 2946, column: 56, scope: !11674)
!11739 = !DILocation(line: 2947, column: 6, scope: !11674)
!11740 = !DILocation(line: 2947, column: 18, scope: !11674)
!11741 = !DILocation(line: 2947, column: 26, scope: !11674)
!11742 = !DILocation(line: 2948, column: 6, scope: !11674)
!11743 = !DILocation(line: 2948, column: 15, scope: !11674)
!11744 = !DILocation(line: 2949, column: 6, scope: !11674)
!11745 = !DILocation(line: 2949, column: 16, scope: !11674)
!11746 = !DILocation(line: 2946, column: 6, scope: !11674)
!11747 = !DILocation(line: 2951, column: 7, scope: !11748)
!11748 = distinct !DILexicalBlock(scope: !11674, file: !3, line: 2951, column: 6)
!11749 = !DILocation(line: 2951, column: 11, scope: !11748)
!11750 = !DILocation(line: 2951, column: 14, scope: !11748)
!11751 = !DILocation(line: 2951, column: 6, scope: !11674)
!11752 = !DILocation(line: 2953, column: 27, scope: !11753)
!11753 = distinct !DILexicalBlock(scope: !11748, file: !3, line: 2951, column: 24)
!11754 = !DILocation(line: 2953, column: 39, scope: !11753)
!11755 = !DILocation(line: 2953, column: 49, scope: !11753)
!11756 = !DILocation(line: 2953, column: 3, scope: !11753)
!11757 = !DILocation(line: 2954, column: 2, scope: !11753)
!11758 = !DILocation(line: 2956, column: 6, scope: !11759)
!11759 = distinct !DILexicalBlock(scope: !11674, file: !3, line: 2956, column: 6)
!11760 = !DILocation(line: 2956, column: 15, scope: !11759)
!11761 = !DILocation(line: 2956, column: 18, scope: !11759)
!11762 = !DILocation(line: 2956, column: 22, scope: !11759)
!11763 = !DILocation(line: 2956, column: 30, scope: !11759)
!11764 = !DILocation(line: 2957, column: 6, scope: !11759)
!11765 = !DILocation(line: 2957, column: 13, scope: !11759)
!11766 = !DILocation(line: 2956, column: 6, scope: !11674)
!11767 = !DILocation(line: 2958, column: 7, scope: !11768)
!11768 = distinct !DILexicalBlock(scope: !11759, file: !3, line: 2957, column: 48)
!11769 = !DILocation(line: 2959, column: 2, scope: !11768)
!11770 = !DILocation(line: 2959, column: 13, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11759, file: !3, line: 2959, column: 13)
!11772 = !DILocation(line: 2959, column: 17, scope: !11771)
!11773 = !DILocation(line: 2959, column: 25, scope: !11771)
!11774 = !DILocation(line: 2959, column: 28, scope: !11771)
!11775 = !DILocation(line: 2959, column: 35, scope: !11771)
!11776 = !DILocation(line: 2959, column: 13, scope: !11759)
!11777 = !DILocation(line: 2960, column: 3, scope: !11778)
!11778 = distinct !DILexicalBlock(scope: !11771, file: !3, line: 2959, column: 59)
!11779 = !DILocation(line: 2963, column: 2, scope: !11778)
!11780 = !DILocation(line: 2963, column: 13, scope: !11781)
!11781 = distinct !DILexicalBlock(scope: !11771, file: !3, line: 2963, column: 13)
!11782 = !DILocation(line: 2963, column: 17, scope: !11781)
!11783 = !DILocation(line: 2963, column: 13, scope: !11771)
!11784 = !DILocation(line: 2964, column: 3, scope: !11785)
!11785 = distinct !DILexicalBlock(scope: !11781, file: !3, line: 2963, column: 32)
!11786 = !DILocation(line: 2967, column: 2, scope: !11785)
!11787 = !DILocation(line: 2969, column: 9, scope: !11674)
!11788 = !DILocation(line: 2969, column: 2, scope: !11674)
!11789 = !DILocation(line: 2970, column: 1, scope: !11674)
!11790 = distinct !DISubprogram(name: "mlxsw_core_buf_dump_dbg", scope: !3, file: !3, line: 2909, type: !11791, scopeLine: 2911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11791 = !DISubroutineType(types: !11792)
!11792 = !{null, !7847, !338, !1085}
!11793 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !11790, file: !3, line: 2909, type: !7847)
!11794 = !DILocation(line: 2909, column: 56, scope: !11790)
!11795 = !DILocalVariable(name: "buf", arg: 2, scope: !11790, file: !3, line: 2910, type: !338)
!11796 = !DILocation(line: 2910, column: 21, scope: !11790)
!11797 = !DILocalVariable(name: "size", arg: 3, scope: !11790, file: !3, line: 2910, type: !1085)
!11798 = !DILocation(line: 2910, column: 33, scope: !11790)
!11799 = !DILocalVariable(name: "m", scope: !11790, file: !3, line: 2912, type: !8177)
!11800 = !DILocation(line: 2912, column: 10, scope: !11790)
!11801 = !DILocation(line: 2912, column: 25, scope: !11790)
!11802 = !DILocation(line: 2912, column: 14, scope: !11790)
!11803 = !DILocalVariable(name: "i", scope: !11790, file: !3, line: 2913, type: !78)
!11804 = !DILocation(line: 2913, column: 6, scope: !11790)
!11805 = !DILocalVariable(name: "count", scope: !11790, file: !3, line: 2914, type: !78)
!11806 = !DILocation(line: 2914, column: 6, scope: !11790)
!11807 = !DILocation(line: 2914, column: 14, scope: !11790)
!11808 = !DILocation(line: 2914, column: 19, scope: !11790)
!11809 = !DILocation(line: 2916, column: 11, scope: !11810)
!11810 = distinct !DILexicalBlock(scope: !11790, file: !3, line: 2916, column: 2)
!11811 = !DILocation(line: 2916, column: 17, scope: !11810)
!11812 = !DILocation(line: 2916, column: 9, scope: !11810)
!11813 = !DILocation(line: 2916, column: 7, scope: !11810)
!11814 = !DILocation(line: 2916, column: 22, scope: !11815)
!11815 = distinct !DILexicalBlock(scope: !11810, file: !3, line: 2916, column: 2)
!11816 = !DILocation(line: 2916, column: 24, scope: !11815)
!11817 = !DILocation(line: 2916, column: 2, scope: !11810)
!11818 = !DILocation(line: 2917, column: 7, scope: !11819)
!11819 = distinct !DILexicalBlock(scope: !11815, file: !3, line: 2917, column: 7)
!11820 = !DILocation(line: 2917, column: 9, scope: !11819)
!11821 = !DILocation(line: 2917, column: 7, scope: !11815)
!11822 = !DILocation(line: 2918, column: 4, scope: !11819)
!11823 = !DILocation(line: 2917, column: 10, scope: !11819)
!11824 = !DILocation(line: 2916, column: 31, scope: !11815)
!11825 = !DILocation(line: 2916, column: 2, scope: !11815)
!11826 = distinct !{!11826, !11817, !11827}
!11827 = !DILocation(line: 2918, column: 4, scope: !11810)
!11828 = !DILocation(line: 2919, column: 3, scope: !11790)
!11829 = !DILocation(line: 2920, column: 10, scope: !11790)
!11830 = !DILocation(line: 2920, column: 14, scope: !11790)
!11831 = !DILocation(line: 2920, column: 8, scope: !11790)
!11832 = !DILocation(line: 2921, column: 9, scope: !11833)
!11833 = distinct !DILexicalBlock(scope: !11790, file: !3, line: 2921, column: 2)
!11834 = !DILocation(line: 2921, column: 7, scope: !11833)
!11835 = !DILocation(line: 2921, column: 14, scope: !11836)
!11836 = distinct !DILexicalBlock(scope: !11833, file: !3, line: 2921, column: 2)
!11837 = !DILocation(line: 2921, column: 18, scope: !11836)
!11838 = !DILocation(line: 2921, column: 16, scope: !11836)
!11839 = !DILocation(line: 2921, column: 2, scope: !11833)
!11840 = !DILocation(line: 2922, column: 3, scope: !11836)
!11841 = !DILocation(line: 2921, column: 27, scope: !11836)
!11842 = !DILocation(line: 2921, column: 2, scope: !11836)
!11843 = distinct !{!11843, !11839, !11844}
!11844 = !DILocation(line: 2922, column: 3, scope: !11833)
!11845 = !DILocation(line: 2925, column: 1, scope: !11790)
!11846 = distinct !DISubprogram(name: "mlxsw_cmd_opcode_str", scope: !7649, file: !7649, line: 79, type: !11847, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11847 = !DISubroutineType(types: !11848)
!11848 = !{!338, !627}
!11849 = !DILocalVariable(name: "opcode", arg: 1, scope: !11846, file: !7649, line: 79, type: !627)
!11850 = !DILocation(line: 79, column: 52, scope: !11846)
!11851 = !DILocation(line: 81, column: 10, scope: !11846)
!11852 = !DILocation(line: 81, column: 2, scope: !11846)
!11853 = !DILocation(line: 83, column: 3, scope: !11854)
!11854 = distinct !DILexicalBlock(scope: !11846, file: !7649, line: 81, column: 18)
!11855 = !DILocation(line: 85, column: 3, scope: !11854)
!11856 = !DILocation(line: 87, column: 3, scope: !11854)
!11857 = !DILocation(line: 89, column: 3, scope: !11854)
!11858 = !DILocation(line: 91, column: 3, scope: !11854)
!11859 = !DILocation(line: 93, column: 3, scope: !11854)
!11860 = !DILocation(line: 95, column: 3, scope: !11854)
!11861 = !DILocation(line: 97, column: 3, scope: !11854)
!11862 = !DILocation(line: 99, column: 3, scope: !11854)
!11863 = !DILocation(line: 101, column: 3, scope: !11854)
!11864 = !DILocation(line: 103, column: 3, scope: !11854)
!11865 = !DILocation(line: 105, column: 3, scope: !11854)
!11866 = !DILocation(line: 107, column: 3, scope: !11854)
!11867 = !DILocation(line: 109, column: 3, scope: !11854)
!11868 = !DILocation(line: 111, column: 3, scope: !11854)
!11869 = !DILocation(line: 113, column: 3, scope: !11854)
!11870 = !DILocation(line: 115, column: 3, scope: !11854)
!11871 = !DILocation(line: 117, column: 3, scope: !11854)
!11872 = !DILocation(line: 119, column: 3, scope: !11854)
!11873 = !DILocation(line: 121, column: 1, scope: !11846)
!11874 = distinct !DISubprogram(name: "mlxsw_cmd_status_str", scope: !7649, file: !7649, line: 156, type: !11875, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11875 = !DISubroutineType(types: !11876)
!11876 = !{!338, !840}
!11877 = !DILocalVariable(name: "status", arg: 1, scope: !11874, file: !7649, line: 156, type: !840)
!11878 = !DILocation(line: 156, column: 51, scope: !11874)
!11879 = !DILocation(line: 158, column: 10, scope: !11874)
!11880 = !DILocation(line: 158, column: 2, scope: !11874)
!11881 = !DILocation(line: 160, column: 3, scope: !11882)
!11882 = distinct !DILexicalBlock(scope: !11874, file: !7649, line: 158, column: 18)
!11883 = !DILocation(line: 162, column: 3, scope: !11882)
!11884 = !DILocation(line: 164, column: 3, scope: !11882)
!11885 = !DILocation(line: 166, column: 3, scope: !11882)
!11886 = !DILocation(line: 168, column: 3, scope: !11882)
!11887 = !DILocation(line: 170, column: 3, scope: !11882)
!11888 = !DILocation(line: 172, column: 3, scope: !11882)
!11889 = !DILocation(line: 174, column: 3, scope: !11882)
!11890 = !DILocation(line: 176, column: 3, scope: !11882)
!11891 = !DILocation(line: 178, column: 3, scope: !11882)
!11892 = !DILocation(line: 180, column: 3, scope: !11882)
!11893 = !DILocation(line: 182, column: 3, scope: !11882)
!11894 = !DILocation(line: 184, column: 3, scope: !11882)
!11895 = !DILocation(line: 186, column: 3, scope: !11882)
!11896 = !DILocation(line: 188, column: 1, scope: !11874)
!11897 = distinct !DISubprogram(name: "mlxsw_core_schedule_dw", scope: !3, file: !3, line: 2973, type: !11898, scopeLine: 2974, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11898 = !DISubroutineType(types: !11899)
!11899 = !{!78, !11900, !358}
!11900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6583, size: 64)
!11901 = !DILocalVariable(name: "dwork", arg: 1, scope: !11897, file: !3, line: 2973, type: !11900)
!11902 = !DILocation(line: 2973, column: 49, scope: !11897)
!11903 = !DILocalVariable(name: "delay", arg: 2, scope: !11897, file: !3, line: 2973, type: !358)
!11904 = !DILocation(line: 2973, column: 70, scope: !11897)
!11905 = !DILocation(line: 2975, column: 28, scope: !11897)
!11906 = !DILocation(line: 2975, column: 38, scope: !11897)
!11907 = !DILocation(line: 2975, column: 45, scope: !11897)
!11908 = !DILocation(line: 2975, column: 9, scope: !11897)
!11909 = !DILocation(line: 2975, column: 2, scope: !11897)
!11910 = distinct !DISubprogram(name: "queue_delayed_work", scope: !2876, file: !2876, line: 518, type: !11911, scopeLine: 521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11911 = !DISubroutineType(types: !11912)
!11912 = !{!817, !4762, !11900, !358}
!11913 = !DILocalVariable(name: "wq", arg: 1, scope: !11910, file: !2876, line: 518, type: !4762)
!11914 = !DILocation(line: 518, column: 64, scope: !11910)
!11915 = !DILocalVariable(name: "dwork", arg: 2, scope: !11910, file: !2876, line: 519, type: !11900)
!11916 = !DILocation(line: 519, column: 32, scope: !11910)
!11917 = !DILocalVariable(name: "delay", arg: 3, scope: !11910, file: !2876, line: 520, type: !358)
!11918 = !DILocation(line: 520, column: 25, scope: !11910)
!11919 = !DILocation(line: 522, column: 49, scope: !11910)
!11920 = !DILocation(line: 522, column: 53, scope: !11910)
!11921 = !DILocation(line: 522, column: 60, scope: !11910)
!11922 = !DILocation(line: 522, column: 9, scope: !11910)
!11923 = !DILocation(line: 522, column: 2, scope: !11910)
!11924 = distinct !DISubprogram(name: "mlxsw_core_schedule_work", scope: !3, file: !3, line: 2979, type: !11925, scopeLine: 2980, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11925 = !DISubroutineType(types: !11926)
!11926 = !{!817, !2885}
!11927 = !DILocalVariable(name: "work", arg: 1, scope: !11924, file: !3, line: 2979, type: !2885)
!11928 = !DILocation(line: 2979, column: 51, scope: !11924)
!11929 = !DILocation(line: 2981, column: 20, scope: !11924)
!11930 = !DILocation(line: 2981, column: 31, scope: !11924)
!11931 = !DILocation(line: 2981, column: 9, scope: !11924)
!11932 = !DILocation(line: 2981, column: 2, scope: !11924)
!11933 = distinct !DISubprogram(name: "queue_work", scope: !2876, file: !2876, line: 504, type: !11934, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11934 = !DISubroutineType(types: !11935)
!11935 = !{!817, !4762, !2885}
!11936 = !DILocalVariable(name: "wq", arg: 1, scope: !11933, file: !2876, line: 504, type: !4762)
!11937 = !DILocation(line: 504, column: 56, scope: !11933)
!11938 = !DILocalVariable(name: "work", arg: 2, scope: !11933, file: !2876, line: 505, type: !2885)
!11939 = !DILocation(line: 505, column: 30, scope: !11933)
!11940 = !DILocation(line: 507, column: 41, scope: !11933)
!11941 = !DILocation(line: 507, column: 45, scope: !11933)
!11942 = !DILocation(line: 507, column: 9, scope: !11933)
!11943 = !DILocation(line: 507, column: 2, scope: !11933)
!11944 = distinct !DISubprogram(name: "mlxsw_core_flush_owq", scope: !3, file: !3, line: 2985, type: !3854, scopeLine: 2986, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11945 = !DILocation(line: 2987, column: 18, scope: !11944)
!11946 = !DILocation(line: 2987, column: 2, scope: !11944)
!11947 = !DILocation(line: 2988, column: 1, scope: !11944)
!11948 = distinct !DISubprogram(name: "mlxsw_core_kvd_sizes_get", scope: !3, file: !3, line: 2991, type: !7999, scopeLine: 2995, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11949 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !11948, file: !3, line: 2991, type: !7847)
!11950 = !DILocation(line: 2991, column: 49, scope: !11948)
!11951 = !DILocalVariable(name: "profile", arg: 2, scope: !11948, file: !3, line: 2992, type: !8001)
!11952 = !DILocation(line: 2992, column: 44, scope: !11948)
!11953 = !DILocalVariable(name: "p_single_size", arg: 3, scope: !11948, file: !3, line: 2993, type: !5417)
!11954 = !DILocation(line: 2993, column: 14, scope: !11948)
!11955 = !DILocalVariable(name: "p_double_size", arg: 4, scope: !11948, file: !3, line: 2993, type: !5417)
!11956 = !DILocation(line: 2993, column: 34, scope: !11948)
!11957 = !DILocalVariable(name: "p_linear_size", arg: 5, scope: !11948, file: !3, line: 2994, type: !5417)
!11958 = !DILocation(line: 2994, column: 14, scope: !11948)
!11959 = !DILocalVariable(name: "driver", scope: !11948, file: !3, line: 2996, type: !7851)
!11960 = !DILocation(line: 2996, column: 23, scope: !11948)
!11961 = !DILocation(line: 2996, column: 32, scope: !11948)
!11962 = !DILocation(line: 2996, column: 44, scope: !11948)
!11963 = !DILocation(line: 2998, column: 7, scope: !11964)
!11964 = distinct !DILexicalBlock(scope: !11948, file: !3, line: 2998, column: 6)
!11965 = !DILocation(line: 2998, column: 15, scope: !11964)
!11966 = !DILocation(line: 2998, column: 6, scope: !11948)
!11967 = !DILocation(line: 2999, column: 3, scope: !11964)
!11968 = !DILocation(line: 3001, column: 9, scope: !11948)
!11969 = !DILocation(line: 3001, column: 17, scope: !11948)
!11970 = !DILocation(line: 3001, column: 31, scope: !11948)
!11971 = !DILocation(line: 3001, column: 43, scope: !11948)
!11972 = !DILocation(line: 3002, column: 10, scope: !11948)
!11973 = !DILocation(line: 3002, column: 25, scope: !11948)
!11974 = !DILocation(line: 3003, column: 10, scope: !11948)
!11975 = !DILocation(line: 3001, column: 2, scope: !11948)
!11976 = !DILocation(line: 3004, column: 1, scope: !11948)
!11977 = distinct !DISubprogram(name: "mlxsw_core_resources_query", scope: !3, file: !3, line: 3007, type: !11978, scopeLine: 3009, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!11978 = !DISubroutineType(types: !11979)
!11979 = !{!78, !7847, !1084, !8068}
!11980 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !11977, file: !3, line: 3007, type: !7847)
!11981 = !DILocation(line: 3007, column: 51, scope: !11977)
!11982 = !DILocalVariable(name: "mbox", arg: 2, scope: !11977, file: !3, line: 3007, type: !1084)
!11983 = !DILocation(line: 3007, column: 69, scope: !11977)
!11984 = !DILocalVariable(name: "res", arg: 3, scope: !11977, file: !3, line: 3008, type: !8068)
!11985 = !DILocation(line: 3008, column: 29, scope: !11977)
!11986 = !DILocalVariable(name: "index", scope: !11977, file: !3, line: 3010, type: !78)
!11987 = !DILocation(line: 3010, column: 6, scope: !11977)
!11988 = !DILocalVariable(name: "i", scope: !11977, file: !3, line: 3010, type: !78)
!11989 = !DILocation(line: 3010, column: 13, scope: !11977)
!11990 = !DILocalVariable(name: "data", scope: !11977, file: !3, line: 3011, type: !377)
!11991 = !DILocation(line: 3011, column: 6, scope: !11977)
!11992 = !DILocalVariable(name: "id", scope: !11977, file: !3, line: 3012, type: !627)
!11993 = !DILocation(line: 3012, column: 6, scope: !11977)
!11994 = !DILocalVariable(name: "err", scope: !11977, file: !3, line: 3013, type: !78)
!11995 = !DILocation(line: 3013, column: 6, scope: !11977)
!11996 = !DILocation(line: 3015, column: 7, scope: !11997)
!11997 = distinct !DILexicalBlock(scope: !11977, file: !3, line: 3015, column: 6)
!11998 = !DILocation(line: 3015, column: 6, scope: !11977)
!11999 = !DILocation(line: 3016, column: 3, scope: !11997)
!12000 = !DILocation(line: 3018, column: 22, scope: !11977)
!12001 = !DILocation(line: 3018, column: 2, scope: !11977)
!12002 = !DILocation(line: 3020, column: 13, scope: !12003)
!12003 = distinct !DILexicalBlock(scope: !11977, file: !3, line: 3020, column: 2)
!12004 = !DILocation(line: 3020, column: 7, scope: !12003)
!12005 = !DILocation(line: 3020, column: 18, scope: !12006)
!12006 = distinct !DILexicalBlock(scope: !12003, file: !3, line: 3020, column: 2)
!12007 = !DILocation(line: 3020, column: 24, scope: !12006)
!12008 = !DILocation(line: 3020, column: 2, scope: !12003)
!12009 = !DILocation(line: 3022, column: 35, scope: !12010)
!12010 = distinct !DILexicalBlock(scope: !12006, file: !3, line: 3021, column: 16)
!12011 = !DILocation(line: 3022, column: 47, scope: !12010)
!12012 = !DILocation(line: 3022, column: 53, scope: !12010)
!12013 = !DILocation(line: 3022, column: 9, scope: !12010)
!12014 = !DILocation(line: 3022, column: 7, scope: !12010)
!12015 = !DILocation(line: 3023, column: 7, scope: !12016)
!12016 = distinct !DILexicalBlock(scope: !12010, file: !3, line: 3023, column: 7)
!12017 = !DILocation(line: 3023, column: 7, scope: !12010)
!12018 = !DILocation(line: 3024, column: 11, scope: !12016)
!12019 = !DILocation(line: 3024, column: 4, scope: !12016)
!12020 = !DILocation(line: 3026, column: 10, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !12010, file: !3, line: 3026, column: 3)
!12022 = !DILocation(line: 3026, column: 8, scope: !12021)
!12023 = !DILocation(line: 3026, column: 15, scope: !12024)
!12024 = distinct !DILexicalBlock(scope: !12021, file: !3, line: 3026, column: 3)
!12025 = !DILocation(line: 3026, column: 17, scope: !12024)
!12026 = !DILocation(line: 3026, column: 3, scope: !12021)
!12027 = !DILocation(line: 3027, column: 46, scope: !12028)
!12028 = distinct !DILexicalBlock(scope: !12024, file: !3, line: 3026, column: 61)
!12029 = !DILocation(line: 3027, column: 52, scope: !12028)
!12030 = !DILocation(line: 3027, column: 9, scope: !12028)
!12031 = !DILocation(line: 3027, column: 7, scope: !12028)
!12032 = !DILocation(line: 3028, column: 50, scope: !12028)
!12033 = !DILocation(line: 3028, column: 56, scope: !12028)
!12034 = !DILocation(line: 3028, column: 11, scope: !12028)
!12035 = !DILocation(line: 3028, column: 9, scope: !12028)
!12036 = !DILocation(line: 3030, column: 8, scope: !12037)
!12037 = distinct !DILexicalBlock(scope: !12028, file: !3, line: 3030, column: 8)
!12038 = !DILocation(line: 3030, column: 11, scope: !12037)
!12039 = !DILocation(line: 3030, column: 8, scope: !12028)
!12040 = !DILocation(line: 3031, column: 5, scope: !12037)
!12041 = !DILocation(line: 3033, column: 20, scope: !12028)
!12042 = !DILocation(line: 3033, column: 25, scope: !12028)
!12043 = !DILocation(line: 3033, column: 29, scope: !12028)
!12044 = !DILocation(line: 3033, column: 4, scope: !12028)
!12045 = !DILocation(line: 3034, column: 3, scope: !12028)
!12046 = !DILocation(line: 3026, column: 57, scope: !12024)
!12047 = !DILocation(line: 3026, column: 3, scope: !12024)
!12048 = distinct !{!12048, !12026, !12049}
!12049 = !DILocation(line: 3034, column: 3, scope: !12021)
!12050 = !DILocation(line: 3035, column: 2, scope: !12010)
!12051 = !DILocation(line: 3021, column: 12, scope: !12006)
!12052 = !DILocation(line: 3020, column: 2, scope: !12006)
!12053 = distinct !{!12053, !12008, !12054}
!12054 = !DILocation(line: 3035, column: 2, scope: !12003)
!12055 = !DILocation(line: 3040, column: 2, scope: !11977)
!12056 = !DILocation(line: 3041, column: 1, scope: !11977)
!12057 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_zero", scope: !7649, file: !7649, line: 21, type: !12058, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!12058 = !DISubroutineType(types: !12059)
!12059 = !{null, !1084}
!12060 = !DILocalVariable(name: "mbox", arg: 1, scope: !12057, file: !7649, line: 21, type: !1084)
!12061 = !DILocation(line: 21, column: 46, scope: !12057)
!12062 = !DILocation(line: 23, column: 9, scope: !12057)
!12063 = !DILocation(line: 23, column: 2, scope: !12057)
!12064 = !DILocation(line: 24, column: 1, scope: !12057)
!12065 = distinct !DISubprogram(name: "mlxsw_cmd_query_resources", scope: !7649, file: !7649, line: 510, type: !12066, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!12066 = !DISubroutineType(types: !12067)
!12067 = !{!78, !7847, !1084, !78}
!12068 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !12065, file: !7649, line: 510, type: !7847)
!12069 = !DILocation(line: 510, column: 64, scope: !12065)
!12070 = !DILocalVariable(name: "out_mbox", arg: 2, scope: !12065, file: !7649, line: 511, type: !1084)
!12071 = !DILocation(line: 511, column: 16, scope: !12065)
!12072 = !DILocalVariable(name: "index", arg: 3, scope: !12065, file: !7649, line: 511, type: !78)
!12073 = !DILocation(line: 511, column: 30, scope: !12065)
!12074 = !DILocation(line: 513, column: 28, scope: !12065)
!12075 = !DILocation(line: 514, column: 10, scope: !12065)
!12076 = !DILocation(line: 514, column: 24, scope: !12065)
!12077 = !DILocation(line: 513, column: 9, scope: !12065)
!12078 = !DILocation(line: 513, column: 2, scope: !12065)
!12079 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_query_resource_id_get", scope: !7649, file: !7649, line: 521, type: !12080, scopeLine: 521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!12080 = !DISubroutineType(types: !12081)
!12081 = !{!1033, !338, !522}
!12082 = !DILocalVariable(name: "buf", arg: 1, scope: !12079, file: !7649, line: 521, type: !338)
!12083 = !DILocation(line: 521, column: 1, scope: !12079)
!12084 = !DILocalVariable(name: "index", arg: 2, scope: !12079, file: !7649, line: 521, type: !522)
!12085 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_query_resource_data_get", scope: !7649, file: !7649, line: 526, type: !12086, scopeLine: 526, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!12086 = !DISubroutineType(types: !12087)
!12087 = !{!377, !338, !522}
!12088 = !DILocalVariable(name: "buf", arg: 1, scope: !12085, file: !7649, line: 526, type: !338)
!12089 = !DILocation(line: 526, column: 1, scope: !12085)
!12090 = !DILocalVariable(name: "index", arg: 2, scope: !12085, file: !7649, line: 526, type: !522)
!12091 = distinct !DISubprogram(name: "mlxsw_res_parse", scope: !7580, file: !7580, line: 154, type: !12092, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!12092 = !DISubroutineType(types: !12093)
!12093 = !{null, !8068, !627, !377}
!12094 = !DILocalVariable(name: "res", arg: 1, scope: !12091, file: !7580, line: 154, type: !8068)
!12095 = !DILocation(line: 154, column: 54, scope: !12091)
!12096 = !DILocalVariable(name: "id", arg: 2, scope: !12091, file: !7580, line: 154, type: !627)
!12097 = !DILocation(line: 154, column: 63, scope: !12091)
!12098 = !DILocalVariable(name: "value", arg: 3, scope: !12091, file: !7580, line: 154, type: !377)
!12099 = !DILocation(line: 154, column: 71, scope: !12091)
!12100 = !DILocalVariable(name: "i", scope: !12091, file: !7580, line: 156, type: !78)
!12101 = !DILocation(line: 156, column: 6, scope: !12091)
!12102 = !DILocation(line: 158, column: 9, scope: !12103)
!12103 = distinct !DILexicalBlock(scope: !12091, file: !7580, line: 158, column: 2)
!12104 = !DILocation(line: 158, column: 7, scope: !12103)
!12105 = !DILocation(line: 158, column: 14, scope: !12106)
!12106 = distinct !DILexicalBlock(scope: !12103, file: !7580, line: 158, column: 2)
!12107 = !DILocation(line: 158, column: 16, scope: !12106)
!12108 = !DILocation(line: 158, column: 2, scope: !12103)
!12109 = !DILocation(line: 159, column: 21, scope: !12110)
!12110 = distinct !DILexicalBlock(scope: !12111, file: !7580, line: 159, column: 7)
!12111 = distinct !DILexicalBlock(scope: !12106, file: !7580, line: 158, column: 50)
!12112 = !DILocation(line: 159, column: 7, scope: !12110)
!12113 = !DILocation(line: 159, column: 27, scope: !12110)
!12114 = !DILocation(line: 159, column: 24, scope: !12110)
!12115 = !DILocation(line: 159, column: 7, scope: !12111)
!12116 = !DILocation(line: 160, column: 18, scope: !12117)
!12117 = distinct !DILexicalBlock(scope: !12110, file: !7580, line: 159, column: 31)
!12118 = !DILocation(line: 160, column: 23, scope: !12117)
!12119 = !DILocation(line: 160, column: 26, scope: !12117)
!12120 = !DILocation(line: 160, column: 4, scope: !12117)
!12121 = !DILocation(line: 161, column: 4, scope: !12117)
!12122 = !DILocation(line: 163, column: 2, scope: !12111)
!12123 = !DILocation(line: 158, column: 46, scope: !12106)
!12124 = !DILocation(line: 158, column: 2, scope: !12106)
!12125 = distinct !{!12125, !12108, !12126}
!12126 = !DILocation(line: 163, column: 2, scope: !12103)
!12127 = !DILocation(line: 164, column: 1, scope: !12091)
!12128 = distinct !DISubprogram(name: "mlxsw_core_read_frc_h", scope: !3, file: !3, line: 3044, type: !12129, scopeLine: 3045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!12129 = !DISubroutineType(types: !12130)
!12130 = !{!1033, !7847}
!12131 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !12128, file: !3, line: 3044, type: !7847)
!12132 = !DILocation(line: 3044, column: 46, scope: !12128)
!12133 = !DILocation(line: 3046, column: 9, scope: !12128)
!12134 = !DILocation(line: 3046, column: 21, scope: !12128)
!12135 = !DILocation(line: 3046, column: 26, scope: !12128)
!12136 = !DILocation(line: 3046, column: 37, scope: !12128)
!12137 = !DILocation(line: 3046, column: 49, scope: !12128)
!12138 = !DILocation(line: 3046, column: 2, scope: !12128)
!12139 = distinct !DISubprogram(name: "mlxsw_core_read_frc_l", scope: !3, file: !3, line: 3050, type: !12129, scopeLine: 3051, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!12140 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !12139, file: !3, line: 3050, type: !7847)
!12141 = !DILocation(line: 3050, column: 46, scope: !12139)
!12142 = !DILocation(line: 3052, column: 9, scope: !12139)
!12143 = !DILocation(line: 3052, column: 21, scope: !12139)
!12144 = !DILocation(line: 3052, column: 26, scope: !12139)
!12145 = !DILocation(line: 3052, column: 37, scope: !12139)
!12146 = !DILocation(line: 3052, column: 49, scope: !12139)
!12147 = !DILocation(line: 3052, column: 2, scope: !12139)
!12148 = distinct !DISubprogram(name: "mlxsw_core_emad_string_tlv_enable", scope: !3, file: !3, line: 3056, type: !7889, scopeLine: 3057, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!12149 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !12148, file: !3, line: 3056, type: !7847)
!12150 = !DILocation(line: 3056, column: 59, scope: !12148)
!12151 = !DILocation(line: 3058, column: 2, scope: !12148)
!12152 = !DILocation(line: 3058, column: 14, scope: !12148)
!12153 = !DILocation(line: 3058, column: 19, scope: !12148)
!12154 = !DILocation(line: 3058, column: 37, scope: !12148)
!12155 = !DILocation(line: 3059, column: 1, scope: !12148)
!12156 = distinct !DISubprogram(name: "mlxsw_core_module_exit", scope: !3, file: !3, line: 3082, type: !3854, scopeLine: 3083, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!12157 = !DILocation(line: 3084, column: 20, scope: !12156)
!12158 = !DILocation(line: 3084, column: 2, scope: !12156)
!12159 = !DILocation(line: 3085, column: 20, scope: !12156)
!12160 = !DILocation(line: 3085, column: 2, scope: !12156)
!12161 = !DILocation(line: 3086, column: 1, scope: !12156)
!12162 = distinct !DISubprogram(name: "mlxsw_core_module_init", scope: !3, file: !3, line: 3062, type: !12163, scopeLine: 3063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!12163 = !DISubroutineType(types: !12164)
!12164 = !{!78}
!12165 = !DILocalVariable(name: "err", scope: !12162, file: !3, line: 3064, type: !78)
!12166 = !DILocation(line: 3064, column: 6, scope: !12162)
!12167 = !DILocation(line: 3066, column: 13, scope: !12162)
!12168 = !DILocation(line: 3066, column: 11, scope: !12162)
!12169 = !DILocation(line: 3067, column: 7, scope: !12170)
!12170 = distinct !DILexicalBlock(scope: !12162, file: !3, line: 3067, column: 6)
!12171 = !DILocation(line: 3067, column: 6, scope: !12162)
!12172 = !DILocation(line: 3068, column: 3, scope: !12170)
!12173 = !DILocation(line: 3069, column: 14, scope: !12162)
!12174 = !DILocation(line: 3069, column: 12, scope: !12162)
!12175 = !DILocation(line: 3071, column: 7, scope: !12176)
!12176 = distinct !DILexicalBlock(scope: !12162, file: !3, line: 3071, column: 6)
!12177 = !DILocation(line: 3071, column: 6, scope: !12162)
!12178 = !DILocation(line: 3072, column: 7, scope: !12179)
!12179 = distinct !DILexicalBlock(scope: !12176, file: !3, line: 3071, column: 18)
!12180 = !DILocation(line: 3073, column: 3, scope: !12179)
!12181 = !DILocation(line: 3075, column: 2, scope: !12162)
!12182 = !DILabel(scope: !12162, name: "err_alloc_ordered_workqueue", file: !3, line: 3077)
!12183 = !DILocation(line: 3077, column: 1, scope: !12162)
!12184 = !DILocation(line: 3078, column: 20, scope: !12162)
!12185 = !DILocation(line: 3078, column: 2, scope: !12162)
!12186 = !DILocation(line: 3079, column: 9, scope: !12162)
!12187 = !DILocation(line: 3079, column: 2, scope: !12162)
!12188 = !DILocation(line: 3080, column: 1, scope: !12162)
!12189 = distinct !DISubprogram(name: "__list_add", scope: !8932, file: !8932, line: 63, type: !12190, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!12190 = !DISubroutineType(types: !12191)
!12191 = !{null, !333, !333, !333}
!12192 = !DILocalVariable(name: "new", arg: 1, scope: !12189, file: !8932, line: 63, type: !333)
!12193 = !DILocation(line: 63, column: 49, scope: !12189)
!12194 = !DILocalVariable(name: "prev", arg: 2, scope: !12189, file: !8932, line: 64, type: !333)
!12195 = !DILocation(line: 64, column: 28, scope: !12189)
!12196 = !DILocalVariable(name: "next", arg: 3, scope: !12189, file: !8932, line: 65, type: !333)
!12197 = !DILocation(line: 65, column: 28, scope: !12189)
!12198 = !DILocation(line: 67, column: 24, scope: !12199)
!12199 = distinct !DILexicalBlock(scope: !12189, file: !8932, line: 67, column: 6)
!12200 = !DILocation(line: 67, column: 29, scope: !12199)
!12201 = !DILocation(line: 67, column: 35, scope: !12199)
!12202 = !DILocation(line: 67, column: 7, scope: !12199)
!12203 = !DILocation(line: 67, column: 6, scope: !12189)
!12204 = !DILocation(line: 68, column: 3, scope: !12199)
!12205 = !DILocation(line: 70, column: 15, scope: !12189)
!12206 = !DILocation(line: 70, column: 2, scope: !12189)
!12207 = !DILocation(line: 70, column: 8, scope: !12189)
!12208 = !DILocation(line: 70, column: 13, scope: !12189)
!12209 = !DILocation(line: 71, column: 14, scope: !12189)
!12210 = !DILocation(line: 71, column: 2, scope: !12189)
!12211 = !DILocation(line: 71, column: 7, scope: !12189)
!12212 = !DILocation(line: 71, column: 12, scope: !12189)
!12213 = !DILocation(line: 72, column: 14, scope: !12189)
!12214 = !DILocation(line: 72, column: 2, scope: !12189)
!12215 = !DILocation(line: 72, column: 7, scope: !12189)
!12216 = !DILocation(line: 72, column: 12, scope: !12189)
!12217 = !DILocation(line: 73, column: 2, scope: !12189)
!12218 = !DILocation(line: 73, column: 2, scope: !12219)
!12219 = distinct !DILexicalBlock(scope: !12189, file: !8932, line: 73, column: 2)
!12220 = !DILocation(line: 73, column: 2, scope: !12221)
!12221 = distinct !DILexicalBlock(scope: !12219, file: !8932, line: 73, column: 2)
!12222 = !DILocation(line: 73, column: 2, scope: !12223)
!12223 = distinct !DILexicalBlock(scope: !12219, file: !8932, line: 73, column: 2)
!12224 = !DILocation(line: 74, column: 1, scope: !12189)
!12225 = distinct !DISubprogram(name: "__list_add_valid", scope: !8932, file: !8932, line: 45, type: !12226, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!12226 = !DISubroutineType(types: !12227)
!12227 = !{!817, !333, !333, !333}
!12228 = !DILocalVariable(name: "new", arg: 1, scope: !12225, file: !8932, line: 45, type: !333)
!12229 = !DILocation(line: 45, column: 55, scope: !12225)
!12230 = !DILocalVariable(name: "prev", arg: 2, scope: !12225, file: !8932, line: 46, type: !333)
!12231 = !DILocation(line: 46, column: 23, scope: !12225)
!12232 = !DILocalVariable(name: "next", arg: 3, scope: !12225, file: !8932, line: 47, type: !333)
!12233 = !DILocation(line: 47, column: 23, scope: !12225)
!12234 = !DILocation(line: 49, column: 2, scope: !12225)
!12235 = distinct !DISubprogram(name: "__list_del_entry", scope: !8932, file: !8932, line: 130, type: !8963, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!12236 = !DILocalVariable(name: "entry", arg: 1, scope: !12235, file: !8932, line: 130, type: !333)
!12237 = !DILocation(line: 130, column: 55, scope: !12235)
!12238 = !DILocation(line: 132, column: 30, scope: !12239)
!12239 = distinct !DILexicalBlock(scope: !12235, file: !8932, line: 132, column: 6)
!12240 = !DILocation(line: 132, column: 7, scope: !12239)
!12241 = !DILocation(line: 132, column: 6, scope: !12235)
!12242 = !DILocation(line: 133, column: 3, scope: !12239)
!12243 = !DILocation(line: 135, column: 13, scope: !12235)
!12244 = !DILocation(line: 135, column: 20, scope: !12235)
!12245 = !DILocation(line: 135, column: 26, scope: !12235)
!12246 = !DILocation(line: 135, column: 33, scope: !12235)
!12247 = !DILocation(line: 135, column: 2, scope: !12235)
!12248 = !DILocation(line: 136, column: 1, scope: !12235)
!12249 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !8932, file: !8932, line: 51, type: !12250, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!12250 = !DISubroutineType(types: !12251)
!12251 = !{!817, !333}
!12252 = !DILocalVariable(name: "entry", arg: 1, scope: !12249, file: !8932, line: 51, type: !333)
!12253 = !DILocation(line: 51, column: 61, scope: !12249)
!12254 = !DILocation(line: 53, column: 2, scope: !12249)
!12255 = distinct !DISubprogram(name: "__list_del", scope: !8932, file: !8932, line: 110, type: !8933, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!12256 = !DILocalVariable(name: "prev", arg: 1, scope: !12255, file: !8932, line: 110, type: !333)
!12257 = !DILocation(line: 110, column: 50, scope: !12255)
!12258 = !DILocalVariable(name: "next", arg: 2, scope: !12255, file: !8932, line: 110, type: !333)
!12259 = !DILocation(line: 110, column: 75, scope: !12255)
!12260 = !DILocation(line: 112, column: 15, scope: !12255)
!12261 = !DILocation(line: 112, column: 2, scope: !12255)
!12262 = !DILocation(line: 112, column: 8, scope: !12255)
!12263 = !DILocation(line: 112, column: 13, scope: !12255)
!12264 = !DILocation(line: 113, column: 2, scope: !12255)
!12265 = !DILocation(line: 113, column: 2, scope: !12266)
!12266 = distinct !DILexicalBlock(scope: !12255, file: !8932, line: 113, column: 2)
!12267 = !DILocation(line: 113, column: 2, scope: !12268)
!12268 = distinct !DILexicalBlock(scope: !12266, file: !8932, line: 113, column: 2)
!12269 = !DILocation(line: 113, column: 2, scope: !12270)
!12270 = distinct !DILexicalBlock(scope: !12266, file: !8932, line: 113, column: 2)
!12271 = !DILocation(line: 114, column: 1, scope: !12255)
!12272 = distinct !DISubprogram(name: "mlxsw_core_driver_get", scope: !3, file: !3, line: 874, type: !12273, scopeLine: 875, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!12273 = !DISubroutineType(types: !12274)
!12274 = !{!7851, !338}
!12275 = !DILocation(line: 392, column: 53, scope: !8905, inlinedAt: !12276)
!12276 = distinct !DILocation(line: 880, column: 2, scope: !12272)
!12277 = !DILocation(line: 352, column: 51, scope: !8912, inlinedAt: !12278)
!12278 = distinct !DILocation(line: 878, column: 2, scope: !12272)
!12279 = !DILocalVariable(name: "kind", arg: 1, scope: !12272, file: !3, line: 874, type: !338)
!12280 = !DILocation(line: 874, column: 63, scope: !12272)
!12281 = !DILocalVariable(name: "mlxsw_driver", scope: !12272, file: !3, line: 876, type: !7851)
!12282 = !DILocation(line: 876, column: 23, scope: !12272)
!12283 = !DILocation(line: 354, column: 2, scope: !8918, inlinedAt: !12278)
!12284 = !DILocation(line: 354, column: 2, scope: !8921, inlinedAt: !12278)
!12285 = !DILocation(line: 879, column: 31, scope: !12272)
!12286 = !DILocation(line: 879, column: 17, scope: !12272)
!12287 = !DILocation(line: 879, column: 15, scope: !12272)
!12288 = !DILocation(line: 394, column: 2, scope: !8926, inlinedAt: !12276)
!12289 = !DILocation(line: 394, column: 2, scope: !8929, inlinedAt: !12276)
!12290 = !DILocation(line: 881, column: 9, scope: !12272)
!12291 = !DILocation(line: 881, column: 2, scope: !12272)
!12292 = distinct !DISubprogram(name: "devlink_priv", scope: !5554, file: !5554, line: 1350, type: !12293, scopeLine: 1351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!12293 = !DISubroutineType(types: !12294)
!12294 = !{!637, !5560}
!12295 = !DILocalVariable(name: "devlink", arg: 1, scope: !12292, file: !5554, line: 1350, type: !5560)
!12296 = !DILocation(line: 1350, column: 50, scope: !12292)
!12297 = !DILocation(line: 1352, column: 2, scope: !12292)
!12298 = !DILocation(line: 1352, column: 2, scope: !12299)
!12299 = distinct !DILexicalBlock(scope: !12300, file: !5554, line: 1352, column: 2)
!12300 = distinct !DILexicalBlock(scope: !12292, file: !5554, line: 1352, column: 2)
!12301 = !DILocation(line: 1352, column: 2, scope: !12300)
!12302 = !DILocation(line: 1352, column: 2, scope: !12303)
!12303 = distinct !DILexicalBlock(scope: !12299, file: !5554, line: 1352, column: 2)
!12304 = !DILocation(line: 1352, column: 2, scope: !12305)
!12305 = distinct !DILexicalBlock(scope: !12303, file: !5554, line: 1352, column: 2)
!12306 = !DILocation(line: 1352, column: 2, scope: !12307)
!12307 = distinct !DILexicalBlock(scope: !12303, file: !5554, line: 1352, column: 2)
!12308 = !{i32 -2139976920, i32 -2139976891, i32 -2139976845, i32 -2139976787, i32 -2139976733, i32 -2139976679, i32 -2139976624, i32 -2139976593}
!12309 = !DILocation(line: 1352, column: 2, scope: !12310)
!12310 = distinct !DILexicalBlock(scope: !12311, file: !5554, line: 1352, column: 2)
!12311 = distinct !DILexicalBlock(scope: !12303, file: !5554, line: 1352, column: 2)
!12312 = !{i32 -2139976148, i32 -2139976141, i32 -2139976087, i32 -2139976056, i32 -2139976026}
!12313 = !DILocation(line: 1352, column: 2, scope: !12311)
!12314 = !DILocation(line: 1353, column: 10, scope: !12292)
!12315 = !DILocation(line: 1353, column: 19, scope: !12292)
!12316 = !DILocation(line: 1353, column: 9, scope: !12292)
!12317 = !DILocation(line: 1353, column: 2, scope: !12292)
!12318 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !8932, file: !8932, line: 33, type: !8963, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!12319 = !DILocalVariable(name: "list", arg: 1, scope: !12318, file: !8932, line: 33, type: !333)
!12320 = !DILocation(line: 33, column: 53, scope: !12318)
!12321 = !DILocation(line: 35, column: 2, scope: !12318)
!12322 = !DILocation(line: 35, column: 2, scope: !12323)
!12323 = distinct !DILexicalBlock(scope: !12318, file: !8932, line: 35, column: 2)
!12324 = !DILocation(line: 35, column: 2, scope: !12325)
!12325 = distinct !DILexicalBlock(scope: !12323, file: !8932, line: 35, column: 2)
!12326 = !DILocation(line: 35, column: 2, scope: !12327)
!12327 = distinct !DILexicalBlock(scope: !12323, file: !8932, line: 35, column: 2)
!12328 = !DILocation(line: 36, column: 15, scope: !12318)
!12329 = !DILocation(line: 36, column: 2, scope: !12318)
!12330 = !DILocation(line: 36, column: 8, scope: !12318)
!12331 = !DILocation(line: 36, column: 13, scope: !12318)
!12332 = !DILocation(line: 37, column: 1, scope: !12318)
!12333 = distinct !DISubprogram(name: "mlxsw_ports_init", scope: !3, file: !3, line: 99, type: !7893, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!12334 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !12333, file: !3, line: 99, type: !7847)
!12335 = !DILocation(line: 99, column: 48, scope: !12333)
!12336 = !DILocation(line: 102, column: 6, scope: !12337)
!12337 = distinct !DILexicalBlock(scope: !12333, file: !3, line: 102, column: 6)
!12338 = !DILocation(line: 102, column: 6, scope: !12333)
!12339 = !DILocation(line: 103, column: 27, scope: !12337)
!12340 = !DILocation(line: 104, column: 28, scope: !12337)
!12341 = !DILocation(line: 103, column: 3, scope: !12337)
!12342 = !DILocation(line: 103, column: 15, scope: !12337)
!12343 = !DILocation(line: 103, column: 25, scope: !12337)
!12344 = !DILocation(line: 106, column: 3, scope: !12337)
!12345 = !DILocation(line: 106, column: 15, scope: !12337)
!12346 = !DILocation(line: 106, column: 25, scope: !12337)
!12347 = !DILocation(line: 108, column: 30, scope: !12333)
!12348 = !DILocation(line: 108, column: 42, scope: !12333)
!12349 = !DILocation(line: 108, column: 22, scope: !12333)
!12350 = !DILocation(line: 108, column: 2, scope: !12333)
!12351 = !DILocation(line: 108, column: 14, scope: !12333)
!12352 = !DILocation(line: 108, column: 20, scope: !12333)
!12353 = !DILocation(line: 110, column: 7, scope: !12354)
!12354 = distinct !DILexicalBlock(scope: !12333, file: !3, line: 110, column: 6)
!12355 = !DILocation(line: 110, column: 19, scope: !12354)
!12356 = !DILocation(line: 110, column: 6, scope: !12333)
!12357 = !DILocation(line: 111, column: 3, scope: !12354)
!12358 = !DILocation(line: 113, column: 2, scope: !12333)
!12359 = !DILocation(line: 114, column: 1, scope: !12333)
!12360 = distinct !DISubprogram(name: "kzalloc", scope: !7779, file: !7779, line: 662, type: !9598, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!12361 = !DILocation(line: 445, column: 72, scope: !9590, inlinedAt: !12362)
!12362 = distinct !DILocation(line: 552, column: 10, scope: !9595, inlinedAt: !12363)
!12363 = distinct !DILocation(line: 664, column: 9, scope: !12360)
!12364 = !DILocation(line: 446, column: 9, scope: !9590, inlinedAt: !12362)
!12365 = !DILocation(line: 446, column: 23, scope: !9590, inlinedAt: !12362)
!12366 = !DILocation(line: 448, column: 8, scope: !9590, inlinedAt: !12362)
!12367 = !DILocation(line: 318, column: 67, scope: !9608, inlinedAt: !12368)
!12368 = distinct !DILocation(line: 553, column: 20, scope: !9595, inlinedAt: !12363)
!12369 = !DILocation(line: 346, column: 58, scope: !9614, inlinedAt: !12370)
!12370 = distinct !DILocation(line: 547, column: 11, scope: !9595, inlinedAt: !12363)
!12371 = !DILocation(line: 472, column: 28, scope: !9620, inlinedAt: !12372)
!12372 = distinct !DILocation(line: 481, column: 9, scope: !9625, inlinedAt: !12373)
!12373 = distinct !DILocation(line: 545, column: 11, scope: !9627, inlinedAt: !12363)
!12374 = !DILocation(line: 472, column: 40, scope: !9620, inlinedAt: !12372)
!12375 = !DILocation(line: 472, column: 60, scope: !9620, inlinedAt: !12372)
!12376 = !DILocation(line: 478, column: 51, scope: !9625, inlinedAt: !12373)
!12377 = !DILocation(line: 478, column: 63, scope: !9625, inlinedAt: !12373)
!12378 = !DILocation(line: 480, column: 15, scope: !9625, inlinedAt: !12373)
!12379 = !DILocation(line: 538, column: 45, scope: !9597, inlinedAt: !12363)
!12380 = !DILocation(line: 538, column: 57, scope: !9597, inlinedAt: !12363)
!12381 = !DILocation(line: 542, column: 16, scope: !9595, inlinedAt: !12363)
!12382 = !DILocalVariable(name: "size", arg: 1, scope: !12360, file: !7779, line: 662, type: !1085)
!12383 = !DILocation(line: 662, column: 36, scope: !12360)
!12384 = !DILocalVariable(name: "flags", arg: 2, scope: !12360, file: !7779, line: 662, type: !1788)
!12385 = !DILocation(line: 662, column: 48, scope: !12360)
!12386 = !DILocation(line: 664, column: 17, scope: !12360)
!12387 = !DILocation(line: 664, column: 23, scope: !12360)
!12388 = !DILocation(line: 664, column: 29, scope: !12360)
!12389 = !DILocation(line: 540, column: 27, scope: !9596, inlinedAt: !12363)
!12390 = !DILocation(line: 540, column: 6, scope: !9596, inlinedAt: !12363)
!12391 = !DILocation(line: 540, column: 6, scope: !9597, inlinedAt: !12363)
!12392 = !DILocation(line: 544, column: 7, scope: !9627, inlinedAt: !12363)
!12393 = !DILocation(line: 544, column: 12, scope: !9627, inlinedAt: !12363)
!12394 = !DILocation(line: 544, column: 7, scope: !9595, inlinedAt: !12363)
!12395 = !DILocation(line: 545, column: 25, scope: !9627, inlinedAt: !12363)
!12396 = !DILocation(line: 545, column: 31, scope: !9627, inlinedAt: !12363)
!12397 = !DILocation(line: 480, column: 33, scope: !9625, inlinedAt: !12373)
!12398 = !DILocation(line: 480, column: 23, scope: !9625, inlinedAt: !12373)
!12399 = !DILocation(line: 481, column: 29, scope: !9625, inlinedAt: !12373)
!12400 = !DILocation(line: 481, column: 35, scope: !9625, inlinedAt: !12373)
!12401 = !DILocation(line: 481, column: 42, scope: !9625, inlinedAt: !12373)
!12402 = !DILocation(line: 474, column: 23, scope: !9620, inlinedAt: !12372)
!12403 = !DILocation(line: 474, column: 29, scope: !9620, inlinedAt: !12372)
!12404 = !DILocation(line: 474, column: 36, scope: !9620, inlinedAt: !12372)
!12405 = !DILocation(line: 474, column: 9, scope: !9620, inlinedAt: !12372)
!12406 = !DILocation(line: 545, column: 4, scope: !9627, inlinedAt: !12363)
!12407 = !DILocation(line: 547, column: 25, scope: !9595, inlinedAt: !12363)
!12408 = !DILocation(line: 348, column: 7, scope: !9682, inlinedAt: !12370)
!12409 = !DILocation(line: 348, column: 6, scope: !9614, inlinedAt: !12370)
!12410 = !DILocation(line: 349, column: 3, scope: !9682, inlinedAt: !12370)
!12411 = !DILocation(line: 351, column: 6, scope: !9686, inlinedAt: !12370)
!12412 = !DILocation(line: 351, column: 11, scope: !9686, inlinedAt: !12370)
!12413 = !DILocation(line: 351, column: 6, scope: !9614, inlinedAt: !12370)
!12414 = !DILocation(line: 352, column: 3, scope: !9686, inlinedAt: !12370)
!12415 = !DILocation(line: 354, column: 32, scope: !9691, inlinedAt: !12370)
!12416 = !DILocation(line: 354, column: 37, scope: !9691, inlinedAt: !12370)
!12417 = !DILocation(line: 354, column: 42, scope: !9691, inlinedAt: !12370)
!12418 = !DILocation(line: 354, column: 45, scope: !9691, inlinedAt: !12370)
!12419 = !DILocation(line: 354, column: 50, scope: !9691, inlinedAt: !12370)
!12420 = !DILocation(line: 354, column: 6, scope: !9614, inlinedAt: !12370)
!12421 = !DILocation(line: 355, column: 3, scope: !9691, inlinedAt: !12370)
!12422 = !DILocation(line: 356, column: 32, scope: !9699, inlinedAt: !12370)
!12423 = !DILocation(line: 356, column: 37, scope: !9699, inlinedAt: !12370)
!12424 = !DILocation(line: 356, column: 43, scope: !9699, inlinedAt: !12370)
!12425 = !DILocation(line: 356, column: 46, scope: !9699, inlinedAt: !12370)
!12426 = !DILocation(line: 356, column: 51, scope: !9699, inlinedAt: !12370)
!12427 = !DILocation(line: 356, column: 6, scope: !9614, inlinedAt: !12370)
!12428 = !DILocation(line: 357, column: 3, scope: !9699, inlinedAt: !12370)
!12429 = !DILocation(line: 358, column: 6, scope: !9707, inlinedAt: !12370)
!12430 = !DILocation(line: 358, column: 11, scope: !9707, inlinedAt: !12370)
!12431 = !DILocation(line: 358, column: 6, scope: !9614, inlinedAt: !12370)
!12432 = !DILocation(line: 358, column: 26, scope: !9707, inlinedAt: !12370)
!12433 = !DILocation(line: 359, column: 6, scope: !9712, inlinedAt: !12370)
!12434 = !DILocation(line: 359, column: 11, scope: !9712, inlinedAt: !12370)
!12435 = !DILocation(line: 359, column: 6, scope: !9614, inlinedAt: !12370)
!12436 = !DILocation(line: 359, column: 26, scope: !9712, inlinedAt: !12370)
!12437 = !DILocation(line: 360, column: 6, scope: !9717, inlinedAt: !12370)
!12438 = !DILocation(line: 360, column: 11, scope: !9717, inlinedAt: !12370)
!12439 = !DILocation(line: 360, column: 6, scope: !9614, inlinedAt: !12370)
!12440 = !DILocation(line: 360, column: 26, scope: !9717, inlinedAt: !12370)
!12441 = !DILocation(line: 361, column: 6, scope: !9722, inlinedAt: !12370)
!12442 = !DILocation(line: 361, column: 11, scope: !9722, inlinedAt: !12370)
!12443 = !DILocation(line: 361, column: 6, scope: !9614, inlinedAt: !12370)
!12444 = !DILocation(line: 361, column: 26, scope: !9722, inlinedAt: !12370)
!12445 = !DILocation(line: 362, column: 6, scope: !9727, inlinedAt: !12370)
!12446 = !DILocation(line: 362, column: 11, scope: !9727, inlinedAt: !12370)
!12447 = !DILocation(line: 362, column: 6, scope: !9614, inlinedAt: !12370)
!12448 = !DILocation(line: 362, column: 26, scope: !9727, inlinedAt: !12370)
!12449 = !DILocation(line: 363, column: 6, scope: !9732, inlinedAt: !12370)
!12450 = !DILocation(line: 363, column: 11, scope: !9732, inlinedAt: !12370)
!12451 = !DILocation(line: 363, column: 6, scope: !9614, inlinedAt: !12370)
!12452 = !DILocation(line: 363, column: 26, scope: !9732, inlinedAt: !12370)
!12453 = !DILocation(line: 364, column: 6, scope: !9737, inlinedAt: !12370)
!12454 = !DILocation(line: 364, column: 11, scope: !9737, inlinedAt: !12370)
!12455 = !DILocation(line: 364, column: 6, scope: !9614, inlinedAt: !12370)
!12456 = !DILocation(line: 364, column: 26, scope: !9737, inlinedAt: !12370)
!12457 = !DILocation(line: 365, column: 6, scope: !9742, inlinedAt: !12370)
!12458 = !DILocation(line: 365, column: 11, scope: !9742, inlinedAt: !12370)
!12459 = !DILocation(line: 365, column: 6, scope: !9614, inlinedAt: !12370)
!12460 = !DILocation(line: 365, column: 26, scope: !9742, inlinedAt: !12370)
!12461 = !DILocation(line: 366, column: 6, scope: !9747, inlinedAt: !12370)
!12462 = !DILocation(line: 366, column: 11, scope: !9747, inlinedAt: !12370)
!12463 = !DILocation(line: 366, column: 6, scope: !9614, inlinedAt: !12370)
!12464 = !DILocation(line: 366, column: 26, scope: !9747, inlinedAt: !12370)
!12465 = !DILocation(line: 367, column: 6, scope: !9752, inlinedAt: !12370)
!12466 = !DILocation(line: 367, column: 11, scope: !9752, inlinedAt: !12370)
!12467 = !DILocation(line: 367, column: 6, scope: !9614, inlinedAt: !12370)
!12468 = !DILocation(line: 367, column: 26, scope: !9752, inlinedAt: !12370)
!12469 = !DILocation(line: 368, column: 6, scope: !9757, inlinedAt: !12370)
!12470 = !DILocation(line: 368, column: 11, scope: !9757, inlinedAt: !12370)
!12471 = !DILocation(line: 368, column: 6, scope: !9614, inlinedAt: !12370)
!12472 = !DILocation(line: 368, column: 26, scope: !9757, inlinedAt: !12370)
!12473 = !DILocation(line: 369, column: 6, scope: !9762, inlinedAt: !12370)
!12474 = !DILocation(line: 369, column: 11, scope: !9762, inlinedAt: !12370)
!12475 = !DILocation(line: 369, column: 6, scope: !9614, inlinedAt: !12370)
!12476 = !DILocation(line: 369, column: 26, scope: !9762, inlinedAt: !12370)
!12477 = !DILocation(line: 370, column: 6, scope: !9767, inlinedAt: !12370)
!12478 = !DILocation(line: 370, column: 11, scope: !9767, inlinedAt: !12370)
!12479 = !DILocation(line: 370, column: 6, scope: !9614, inlinedAt: !12370)
!12480 = !DILocation(line: 370, column: 26, scope: !9767, inlinedAt: !12370)
!12481 = !DILocation(line: 371, column: 6, scope: !9772, inlinedAt: !12370)
!12482 = !DILocation(line: 371, column: 11, scope: !9772, inlinedAt: !12370)
!12483 = !DILocation(line: 371, column: 6, scope: !9614, inlinedAt: !12370)
!12484 = !DILocation(line: 371, column: 26, scope: !9772, inlinedAt: !12370)
!12485 = !DILocation(line: 372, column: 6, scope: !9777, inlinedAt: !12370)
!12486 = !DILocation(line: 372, column: 11, scope: !9777, inlinedAt: !12370)
!12487 = !DILocation(line: 372, column: 6, scope: !9614, inlinedAt: !12370)
!12488 = !DILocation(line: 372, column: 26, scope: !9777, inlinedAt: !12370)
!12489 = !DILocation(line: 373, column: 6, scope: !9782, inlinedAt: !12370)
!12490 = !DILocation(line: 373, column: 11, scope: !9782, inlinedAt: !12370)
!12491 = !DILocation(line: 373, column: 6, scope: !9614, inlinedAt: !12370)
!12492 = !DILocation(line: 373, column: 26, scope: !9782, inlinedAt: !12370)
!12493 = !DILocation(line: 374, column: 6, scope: !9787, inlinedAt: !12370)
!12494 = !DILocation(line: 374, column: 11, scope: !9787, inlinedAt: !12370)
!12495 = !DILocation(line: 374, column: 6, scope: !9614, inlinedAt: !12370)
!12496 = !DILocation(line: 374, column: 26, scope: !9787, inlinedAt: !12370)
!12497 = !DILocation(line: 375, column: 6, scope: !9792, inlinedAt: !12370)
!12498 = !DILocation(line: 375, column: 11, scope: !9792, inlinedAt: !12370)
!12499 = !DILocation(line: 375, column: 6, scope: !9614, inlinedAt: !12370)
!12500 = !DILocation(line: 375, column: 27, scope: !9792, inlinedAt: !12370)
!12501 = !DILocation(line: 376, column: 6, scope: !9797, inlinedAt: !12370)
!12502 = !DILocation(line: 376, column: 11, scope: !9797, inlinedAt: !12370)
!12503 = !DILocation(line: 376, column: 6, scope: !9614, inlinedAt: !12370)
!12504 = !DILocation(line: 376, column: 32, scope: !9797, inlinedAt: !12370)
!12505 = !DILocation(line: 377, column: 6, scope: !9802, inlinedAt: !12370)
!12506 = !DILocation(line: 377, column: 11, scope: !9802, inlinedAt: !12370)
!12507 = !DILocation(line: 377, column: 6, scope: !9614, inlinedAt: !12370)
!12508 = !DILocation(line: 377, column: 32, scope: !9802, inlinedAt: !12370)
!12509 = !DILocation(line: 378, column: 6, scope: !9807, inlinedAt: !12370)
!12510 = !DILocation(line: 378, column: 11, scope: !9807, inlinedAt: !12370)
!12511 = !DILocation(line: 378, column: 6, scope: !9614, inlinedAt: !12370)
!12512 = !DILocation(line: 378, column: 32, scope: !9807, inlinedAt: !12370)
!12513 = !DILocation(line: 379, column: 6, scope: !9812, inlinedAt: !12370)
!12514 = !DILocation(line: 379, column: 11, scope: !9812, inlinedAt: !12370)
!12515 = !DILocation(line: 379, column: 6, scope: !9614, inlinedAt: !12370)
!12516 = !DILocation(line: 379, column: 33, scope: !9812, inlinedAt: !12370)
!12517 = !DILocation(line: 380, column: 6, scope: !9817, inlinedAt: !12370)
!12518 = !DILocation(line: 380, column: 11, scope: !9817, inlinedAt: !12370)
!12519 = !DILocation(line: 380, column: 6, scope: !9614, inlinedAt: !12370)
!12520 = !DILocation(line: 380, column: 33, scope: !9817, inlinedAt: !12370)
!12521 = !DILocation(line: 381, column: 6, scope: !9822, inlinedAt: !12370)
!12522 = !DILocation(line: 381, column: 11, scope: !9822, inlinedAt: !12370)
!12523 = !DILocation(line: 381, column: 6, scope: !9614, inlinedAt: !12370)
!12524 = !DILocation(line: 381, column: 33, scope: !9822, inlinedAt: !12370)
!12525 = !DILocation(line: 382, column: 2, scope: !9827, inlinedAt: !12370)
!12526 = !DILocation(line: 382, column: 2, scope: !9831, inlinedAt: !12370)
!12527 = !DILocation(line: 382, column: 2, scope: !9832, inlinedAt: !12370)
!12528 = !DILocation(line: 386, column: 1, scope: !9614, inlinedAt: !12370)
!12529 = !DILocation(line: 547, column: 9, scope: !9595, inlinedAt: !12363)
!12530 = !DILocation(line: 549, column: 8, scope: !9838, inlinedAt: !12363)
!12531 = !DILocation(line: 549, column: 7, scope: !9595, inlinedAt: !12363)
!12532 = !DILocation(line: 550, column: 4, scope: !9838, inlinedAt: !12363)
!12533 = !DILocation(line: 553, column: 33, scope: !9595, inlinedAt: !12363)
!12534 = !DILocation(line: 325, column: 6, scope: !9843, inlinedAt: !12368)
!12535 = !DILocation(line: 325, column: 6, scope: !9608, inlinedAt: !12368)
!12536 = !DILocation(line: 326, column: 3, scope: !9843, inlinedAt: !12368)
!12537 = !DILocation(line: 332, column: 9, scope: !9608, inlinedAt: !12368)
!12538 = !DILocation(line: 332, column: 15, scope: !9608, inlinedAt: !12368)
!12539 = !DILocation(line: 332, column: 2, scope: !9608, inlinedAt: !12368)
!12540 = !DILocation(line: 336, column: 1, scope: !9608, inlinedAt: !12368)
!12541 = !DILocation(line: 553, column: 5, scope: !9595, inlinedAt: !12363)
!12542 = !DILocation(line: 553, column: 41, scope: !9595, inlinedAt: !12363)
!12543 = !DILocation(line: 554, column: 5, scope: !9595, inlinedAt: !12363)
!12544 = !DILocation(line: 554, column: 12, scope: !9595, inlinedAt: !12363)
!12545 = !DILocation(line: 448, column: 31, scope: !9590, inlinedAt: !12362)
!12546 = !DILocation(line: 448, column: 34, scope: !9590, inlinedAt: !12362)
!12547 = !DILocation(line: 448, column: 14, scope: !9590, inlinedAt: !12362)
!12548 = !DILocation(line: 450, column: 22, scope: !9590, inlinedAt: !12362)
!12549 = !DILocation(line: 450, column: 25, scope: !9590, inlinedAt: !12362)
!12550 = !DILocation(line: 450, column: 30, scope: !9590, inlinedAt: !12362)
!12551 = !DILocation(line: 450, column: 36, scope: !9590, inlinedAt: !12362)
!12552 = !DILocation(line: 450, column: 8, scope: !9590, inlinedAt: !12362)
!12553 = !DILocation(line: 450, column: 6, scope: !9590, inlinedAt: !12362)
!12554 = !DILocation(line: 451, column: 9, scope: !9590, inlinedAt: !12362)
!12555 = !DILocation(line: 552, column: 3, scope: !9595, inlinedAt: !12363)
!12556 = !DILocation(line: 557, column: 19, scope: !9597, inlinedAt: !12363)
!12557 = !DILocation(line: 557, column: 25, scope: !9597, inlinedAt: !12363)
!12558 = !DILocation(line: 557, column: 9, scope: !9597, inlinedAt: !12363)
!12559 = !DILocation(line: 557, column: 2, scope: !9597, inlinedAt: !12363)
!12560 = !DILocation(line: 558, column: 1, scope: !9597, inlinedAt: !12363)
!12561 = !DILocation(line: 664, column: 2, scope: !12360)
!12562 = distinct !DISubprogram(name: "mlxsw_emad_init", scope: !3, file: !3, line: 702, type: !7893, scopeLine: 703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!12563 = !DILocalVariable(name: "lock", arg: 1, scope: !12564, file: !8906, line: 327, type: !2227)
!12564 = distinct !DISubprogram(name: "spinlock_check", scope: !8906, file: !8906, line: 327, type: !12565, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!12565 = !DISubroutineType(types: !12566)
!12566 = !{!12567, !2227}
!12567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 64)
!12568 = !DILocation(line: 327, column: 67, scope: !12564, inlinedAt: !12569)
!12569 = distinct !DILocation(line: 725, column: 2, scope: !12570)
!12570 = distinct !DILexicalBlock(scope: !12562, file: !3, line: 725, column: 2)
!12571 = !DILocalVariable(name: "v", arg: 1, scope: !12572, file: !12573, line: 84, type: !12576)
!12572 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !12573, file: !12573, line: 84, type: !12574, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!12573 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!12574 = !DISubroutineType(types: !12575)
!12575 = !{null, !12576, !1085}
!12576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12577, size: 64)
!12577 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12578)
!12578 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!12579 = !DILocation(line: 84, column: 74, scope: !12572, inlinedAt: !12580)
!12580 = distinct !DILocation(line: 855, column: 2, scope: !12581, inlinedAt: !12586)
!12581 = distinct !DISubprogram(name: "atomic64_set", scope: !12582, file: !12582, line: 853, type: !12583, scopeLine: 854, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!12582 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!12583 = !DISubroutineType(types: !12584)
!12584 = !{null, !12585, !423}
!12585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !419, size: 64)
!12586 = distinct !DILocation(line: 722, column: 2, scope: !12562)
!12587 = !DILocalVariable(name: "size", arg: 2, scope: !12572, file: !12573, line: 84, type: !1085)
!12588 = !DILocation(line: 84, column: 84, scope: !12572, inlinedAt: !12580)
!12589 = !DILocalVariable(name: "v", arg: 1, scope: !12581, file: !12582, line: 853, type: !12585)
!12590 = !DILocation(line: 853, column: 26, scope: !12581, inlinedAt: !12586)
!12591 = !DILocalVariable(name: "i", arg: 2, scope: !12581, file: !12582, line: 853, type: !423)
!12592 = !DILocation(line: 853, column: 33, scope: !12581, inlinedAt: !12586)
!12593 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !12562, file: !3, line: 702, type: !7847)
!12594 = !DILocation(line: 702, column: 47, scope: !12562)
!12595 = !DILocalVariable(name: "emad_wq", scope: !12562, file: !3, line: 704, type: !4762)
!12596 = !DILocation(line: 704, column: 27, scope: !12562)
!12597 = !DILocalVariable(name: "tid", scope: !12562, file: !3, line: 705, type: !377)
!12598 = !DILocation(line: 705, column: 6, scope: !12562)
!12599 = !DILocalVariable(name: "err", scope: !12562, file: !3, line: 706, type: !78)
!12600 = !DILocation(line: 706, column: 6, scope: !12562)
!12601 = !DILocation(line: 708, column: 8, scope: !12602)
!12602 = distinct !DILexicalBlock(scope: !12562, file: !3, line: 708, column: 6)
!12603 = !DILocation(line: 708, column: 20, scope: !12602)
!12604 = !DILocation(line: 708, column: 25, scope: !12602)
!12605 = !DILocation(line: 708, column: 34, scope: !12602)
!12606 = !DILocation(line: 708, column: 6, scope: !12562)
!12607 = !DILocation(line: 709, column: 3, scope: !12602)
!12608 = !DILocation(line: 711, column: 12, scope: !12562)
!12609 = !DILocation(line: 711, column: 10, scope: !12562)
!12610 = !DILocation(line: 712, column: 7, scope: !12611)
!12611 = distinct !DILexicalBlock(scope: !12562, file: !3, line: 712, column: 6)
!12612 = !DILocation(line: 712, column: 6, scope: !12562)
!12613 = !DILocation(line: 713, column: 3, scope: !12611)
!12614 = !DILocation(line: 714, column: 24, scope: !12562)
!12615 = !DILocation(line: 714, column: 2, scope: !12562)
!12616 = !DILocation(line: 714, column: 14, scope: !12562)
!12617 = !DILocation(line: 714, column: 22, scope: !12562)
!12618 = !DILocation(line: 720, column: 19, scope: !12562)
!12619 = !DILocation(line: 720, column: 2, scope: !12562)
!12620 = !DILocation(line: 721, column: 6, scope: !12562)
!12621 = !DILocation(line: 722, column: 16, scope: !12562)
!12622 = !DILocation(line: 722, column: 28, scope: !12562)
!12623 = !DILocation(line: 722, column: 33, scope: !12562)
!12624 = !DILocation(line: 722, column: 38, scope: !12562)
!12625 = !DILocation(line: 855, column: 26, scope: !12581, inlinedAt: !12586)
!12626 = !DILocation(line: 86, column: 20, scope: !12572, inlinedAt: !12580)
!12627 = !DILocation(line: 86, column: 23, scope: !12572, inlinedAt: !12580)
!12628 = !DILocation(line: 86, column: 2, scope: !12572, inlinedAt: !12580)
!12629 = !DILocation(line: 87, column: 2, scope: !12572, inlinedAt: !12580)
!12630 = !DILocation(line: 856, column: 20, scope: !12581, inlinedAt: !12586)
!12631 = !DILocation(line: 856, column: 23, scope: !12581, inlinedAt: !12586)
!12632 = !DILocation(line: 856, column: 2, scope: !12581, inlinedAt: !12586)
!12633 = !DILocation(line: 724, column: 18, scope: !12562)
!12634 = !DILocation(line: 724, column: 30, scope: !12562)
!12635 = !DILocation(line: 724, column: 35, scope: !12562)
!12636 = !DILocation(line: 724, column: 2, scope: !12562)
!12637 = !DILocation(line: 725, column: 2, scope: !12562)
!12638 = !DILocation(line: 725, column: 2, scope: !12570)
!12639 = !DILocation(line: 329, column: 10, scope: !12564, inlinedAt: !12569)
!12640 = !DILocation(line: 329, column: 16, scope: !12564, inlinedAt: !12569)
!12641 = !DILocation(line: 727, column: 33, scope: !12562)
!12642 = !DILocation(line: 728, column: 12, scope: !12562)
!12643 = !DILocation(line: 727, column: 8, scope: !12562)
!12644 = !DILocation(line: 727, column: 6, scope: !12562)
!12645 = !DILocation(line: 729, column: 6, scope: !12646)
!12646 = distinct !DILexicalBlock(scope: !12562, file: !3, line: 729, column: 6)
!12647 = !DILocation(line: 729, column: 6, scope: !12562)
!12648 = !DILocation(line: 730, column: 3, scope: !12646)
!12649 = !DILocation(line: 732, column: 8, scope: !12562)
!12650 = !DILocation(line: 732, column: 20, scope: !12562)
!12651 = !DILocation(line: 732, column: 28, scope: !12562)
!12652 = !DILocation(line: 732, column: 50, scope: !12562)
!12653 = !DILocation(line: 732, column: 6, scope: !12562)
!12654 = !DILocation(line: 733, column: 6, scope: !12655)
!12655 = distinct !DILexicalBlock(scope: !12562, file: !3, line: 733, column: 6)
!12656 = !DILocation(line: 733, column: 6, scope: !12562)
!12657 = !DILocation(line: 734, column: 3, scope: !12655)
!12658 = !DILocation(line: 735, column: 2, scope: !12562)
!12659 = !DILocation(line: 735, column: 14, scope: !12562)
!12660 = !DILocation(line: 735, column: 19, scope: !12562)
!12661 = !DILocation(line: 735, column: 28, scope: !12562)
!12662 = !DILocation(line: 737, column: 2, scope: !12562)
!12663 = !DILabel(scope: !12562, name: "err_emad_trap_set", file: !3, line: 739)
!12664 = !DILocation(line: 739, column: 1, scope: !12562)
!12665 = !DILocation(line: 740, column: 29, scope: !12562)
!12666 = !DILocation(line: 741, column: 8, scope: !12562)
!12667 = !DILocation(line: 740, column: 2, scope: !12562)
!12668 = !DILabel(scope: !12562, name: "err_trap_register", file: !3, line: 742)
!12669 = !DILocation(line: 742, column: 1, scope: !12562)
!12670 = !DILocation(line: 743, column: 20, scope: !12562)
!12671 = !DILocation(line: 743, column: 32, scope: !12562)
!12672 = !DILocation(line: 743, column: 2, scope: !12562)
!12673 = !DILocation(line: 744, column: 9, scope: !12562)
!12674 = !DILocation(line: 744, column: 2, scope: !12562)
!12675 = !DILocation(line: 745, column: 1, scope: !12562)
!12676 = distinct !DISubprogram(name: "mlxsw_core_params_register", scope: !3, file: !3, line: 1605, type: !7893, scopeLine: 1606, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!12677 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !12676, file: !3, line: 1605, type: !7847)
!12678 = !DILocation(line: 1605, column: 58, scope: !12676)
!12679 = !DILocalVariable(name: "err", scope: !12676, file: !3, line: 1607, type: !78)
!12680 = !DILocation(line: 1607, column: 6, scope: !12676)
!12681 = !DILocation(line: 1609, column: 38, scope: !12676)
!12682 = !DILocation(line: 1609, column: 8, scope: !12676)
!12683 = !DILocation(line: 1609, column: 6, scope: !12676)
!12684 = !DILocation(line: 1610, column: 6, scope: !12685)
!12685 = distinct !DILexicalBlock(scope: !12676, file: !3, line: 1610, column: 6)
!12686 = !DILocation(line: 1610, column: 6, scope: !12676)
!12687 = !DILocation(line: 1611, column: 10, scope: !12685)
!12688 = !DILocation(line: 1611, column: 3, scope: !12685)
!12689 = !DILocation(line: 1613, column: 6, scope: !12690)
!12690 = distinct !DILexicalBlock(scope: !12676, file: !3, line: 1613, column: 6)
!12691 = !DILocation(line: 1613, column: 18, scope: !12690)
!12692 = !DILocation(line: 1613, column: 26, scope: !12690)
!12693 = !DILocation(line: 1613, column: 6, scope: !12676)
!12694 = !DILocation(line: 1614, column: 9, scope: !12695)
!12695 = distinct !DILexicalBlock(scope: !12690, file: !3, line: 1613, column: 43)
!12696 = !DILocation(line: 1614, column: 21, scope: !12695)
!12697 = !DILocation(line: 1614, column: 29, scope: !12695)
!12698 = !DILocation(line: 1614, column: 45, scope: !12695)
!12699 = !DILocation(line: 1614, column: 7, scope: !12695)
!12700 = !DILocation(line: 1615, column: 7, scope: !12701)
!12701 = distinct !DILexicalBlock(scope: !12695, file: !3, line: 1615, column: 7)
!12702 = !DILocation(line: 1615, column: 7, scope: !12695)
!12703 = !DILocation(line: 1616, column: 4, scope: !12701)
!12704 = !DILocation(line: 1617, column: 2, scope: !12695)
!12705 = !DILocation(line: 1618, column: 2, scope: !12676)
!12706 = !DILabel(scope: !12676, name: "err_params_register", file: !3, line: 1620)
!12707 = !DILocation(line: 1620, column: 1, scope: !12676)
!12708 = !DILocation(line: 1621, column: 34, scope: !12676)
!12709 = !DILocation(line: 1621, column: 2, scope: !12676)
!12710 = !DILocation(line: 1622, column: 9, scope: !12676)
!12711 = !DILocation(line: 1622, column: 2, scope: !12676)
!12712 = !DILocation(line: 1623, column: 1, scope: !12676)
!12713 = distinct !DISubprogram(name: "mlxsw_core_fw_rev_validate", scope: !3, file: !3, line: 1059, type: !12714, scopeLine: 1063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!12714 = !DISubroutineType(types: !12715)
!12715 = !{!78, !7847, !7872, !7859, !338}
!12716 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !12713, file: !3, line: 1059, type: !7847)
!12717 = !DILocation(line: 1059, column: 58, scope: !12713)
!12718 = !DILocalVariable(name: "mlxsw_bus_info", arg: 2, scope: !12713, file: !3, line: 1060, type: !7872)
!12719 = !DILocation(line: 1060, column: 40, scope: !12713)
!12720 = !DILocalVariable(name: "req_rev", arg: 3, scope: !12713, file: !3, line: 1061, type: !7859)
!12721 = !DILocation(line: 1061, column: 38, scope: !12713)
!12722 = !DILocalVariable(name: "filename", arg: 4, scope: !12713, file: !3, line: 1062, type: !338)
!12723 = !DILocation(line: 1062, column: 23, scope: !12713)
!12724 = !DILocalVariable(name: "rev", scope: !12713, file: !3, line: 1064, type: !7859)
!12725 = !DILocation(line: 1064, column: 29, scope: !12713)
!12726 = !DILocation(line: 1064, column: 36, scope: !12713)
!12727 = !DILocation(line: 1064, column: 52, scope: !12713)
!12728 = !DILocalVariable(name: "value", scope: !12713, file: !3, line: 1065, type: !8429)
!12729 = !DILocation(line: 1065, column: 28, scope: !12713)
!12730 = !DILocalVariable(name: "firmware", scope: !12713, file: !3, line: 1066, type: !12731)
!12731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12732, size: 64)
!12732 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12733)
!12733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "firmware", file: !12734, line: 12, size: 192, elements: !12735)
!12734 = !DIFile(filename: "./include/linux/firmware.h", directory: "/home/lizy2001/genbc/linux")
!12735 = !{!12736, !12737, !12738}
!12736 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12733, file: !12734, line: 13, baseType: !1085, size: 64)
!12737 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12733, file: !12734, line: 14, baseType: !5789, size: 64, offset: 64)
!12738 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !12733, file: !12734, line: 17, baseType: !637, size: 64, offset: 128)
!12739 = !DILocation(line: 1066, column: 25, scope: !12713)
!12740 = !DILocalVariable(name: "err", scope: !12713, file: !3, line: 1067, type: !78)
!12741 = !DILocation(line: 1067, column: 6, scope: !12713)
!12742 = !DILocation(line: 1070, column: 7, scope: !12743)
!12743 = distinct !DILexicalBlock(scope: !12713, file: !3, line: 1070, column: 6)
!12744 = !DILocation(line: 1070, column: 15, scope: !12743)
!12745 = !DILocation(line: 1070, column: 19, scope: !12743)
!12746 = !DILocation(line: 1070, column: 6, scope: !12713)
!12747 = !DILocation(line: 1071, column: 3, scope: !12743)
!12748 = !DILocation(line: 1074, column: 59, scope: !12713)
!12749 = !DILocation(line: 1074, column: 43, scope: !12713)
!12750 = !DILocation(line: 1074, column: 8, scope: !12713)
!12751 = !DILocation(line: 1074, column: 6, scope: !12713)
!12752 = !DILocation(line: 1077, column: 6, scope: !12753)
!12753 = distinct !DILexicalBlock(scope: !12713, file: !3, line: 1077, column: 6)
!12754 = !DILocation(line: 1077, column: 6, scope: !12713)
!12755 = !DILocation(line: 1078, column: 10, scope: !12753)
!12756 = !DILocation(line: 1078, column: 3, scope: !12753)
!12757 = !DILocation(line: 1079, column: 12, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12713, file: !3, line: 1079, column: 6)
!12759 = !DILocation(line: 1079, column: 6, scope: !12758)
!12760 = !DILocation(line: 1079, column: 16, scope: !12758)
!12761 = !DILocation(line: 1079, column: 6, scope: !12713)
!12762 = !DILocation(line: 1080, column: 3, scope: !12758)
!12763 = !DILocation(line: 1083, column: 6, scope: !12764)
!12764 = distinct !DILexicalBlock(scope: !12713, file: !3, line: 1083, column: 6)
!12765 = !DILocation(line: 1083, column: 11, scope: !12764)
!12766 = !DILocation(line: 1083, column: 20, scope: !12764)
!12767 = !DILocation(line: 1083, column: 29, scope: !12764)
!12768 = !DILocation(line: 1083, column: 17, scope: !12764)
!12769 = !DILocation(line: 1083, column: 6, scope: !12713)
!12770 = !DILocalVariable(name: "__ret_warn_on", scope: !12771, file: !3, line: 1084, type: !78)
!12771 = distinct !DILexicalBlock(scope: !12772, file: !3, line: 1084, column: 3)
!12772 = distinct !DILexicalBlock(scope: !12764, file: !3, line: 1083, column: 36)
!12773 = !DILocation(line: 1084, column: 3, scope: !12771)
!12774 = !DILocation(line: 1084, column: 3, scope: !12775)
!12775 = distinct !DILexicalBlock(scope: !12771, file: !3, line: 1084, column: 3)
!12776 = !DILocation(line: 1084, column: 3, scope: !12777)
!12777 = distinct !DILexicalBlock(scope: !12775, file: !3, line: 1084, column: 3)
!12778 = !DILocation(line: 1084, column: 3, scope: !12779)
!12779 = distinct !DILexicalBlock(scope: !12777, file: !3, line: 1084, column: 3)
!12780 = !DILocation(line: 1084, column: 3, scope: !12781)
!12781 = distinct !DILexicalBlock(scope: !12777, file: !3, line: 1084, column: 3)
!12782 = !DILocation(line: 1084, column: 3, scope: !12783)
!12783 = distinct !DILexicalBlock(scope: !12781, file: !3, line: 1084, column: 3)
!12784 = !DILocation(line: 1084, column: 3, scope: !12785)
!12785 = distinct !DILexicalBlock(scope: !12781, file: !3, line: 1084, column: 3)
!12786 = !{i32 -2137078124, i32 -2137078095, i32 -2137078049, i32 -2137077991, i32 -2137077937, i32 -2137077883, i32 -2137077828, i32 -2137077797}
!12787 = !DILocation(line: 1084, column: 3, scope: !12788)
!12788 = distinct !DILexicalBlock(scope: !12781, file: !3, line: 1084, column: 3)
!12789 = !{i32 -2137077361, i32 -2137077354, i32 -2137077302, i32 -2137077271, i32 -2137077241}
!12790 = !DILocation(line: 1084, column: 3, scope: !12791)
!12791 = distinct !DILexicalBlock(scope: !12781, file: !3, line: 1084, column: 3)
!12792 = !DILocation(line: 1084, column: 3, scope: !12793)
!12793 = distinct !DILexicalBlock(scope: !12777, file: !3, line: 1084, column: 3)
!12794 = !DILocation(line: 1086, column: 3, scope: !12772)
!12795 = !DILocation(line: 1088, column: 48, scope: !12796)
!12796 = distinct !DILexicalBlock(scope: !12713, file: !3, line: 1088, column: 6)
!12797 = !DILocation(line: 1088, column: 53, scope: !12796)
!12798 = !DILocation(line: 1088, column: 6, scope: !12796)
!12799 = !DILocation(line: 1088, column: 6, scope: !12713)
!12800 = !DILocation(line: 1089, column: 3, scope: !12796)
!12801 = !DILocation(line: 1091, column: 2, scope: !12713)
!12802 = !DILocation(line: 1094, column: 2, scope: !12713)
!12803 = !DILocation(line: 1096, column: 43, scope: !12713)
!12804 = !DILocation(line: 1096, column: 53, scope: !12713)
!12805 = !DILocation(line: 1096, column: 69, scope: !12713)
!12806 = !DILocation(line: 1096, column: 8, scope: !12713)
!12807 = !DILocation(line: 1096, column: 6, scope: !12713)
!12808 = !DILocation(line: 1097, column: 6, scope: !12809)
!12809 = distinct !DILexicalBlock(scope: !12713, file: !3, line: 1097, column: 6)
!12810 = !DILocation(line: 1097, column: 6, scope: !12713)
!12811 = !DILocation(line: 1098, column: 3, scope: !12812)
!12812 = distinct !DILexicalBlock(scope: !12809, file: !3, line: 1097, column: 11)
!12813 = !DILocation(line: 1099, column: 10, scope: !12812)
!12814 = !DILocation(line: 1099, column: 3, scope: !12812)
!12815 = !DILocation(line: 1102, column: 28, scope: !12713)
!12816 = !DILocation(line: 1102, column: 40, scope: !12713)
!12817 = !DILocation(line: 1102, column: 8, scope: !12713)
!12818 = !DILocation(line: 1102, column: 6, scope: !12713)
!12819 = !DILocation(line: 1103, column: 19, scope: !12713)
!12820 = !DILocation(line: 1103, column: 2, scope: !12713)
!12821 = !DILocation(line: 1104, column: 6, scope: !12822)
!12822 = distinct !DILexicalBlock(scope: !12713, file: !3, line: 1104, column: 6)
!12823 = !DILocation(line: 1104, column: 6, scope: !12713)
!12824 = !DILocation(line: 1105, column: 3, scope: !12822)
!12825 = !DILocation(line: 1110, column: 6, scope: !12826)
!12826 = distinct !DILexicalBlock(scope: !12713, file: !3, line: 1110, column: 6)
!12827 = !DILocation(line: 1110, column: 11, scope: !12826)
!12828 = !DILocation(line: 1110, column: 20, scope: !12826)
!12829 = !DILocation(line: 1110, column: 29, scope: !12826)
!12830 = !DILocation(line: 1110, column: 17, scope: !12826)
!12831 = !DILocation(line: 1110, column: 6, scope: !12713)
!12832 = !DILocation(line: 1111, column: 10, scope: !12826)
!12833 = !DILocation(line: 1111, column: 16, scope: !12826)
!12834 = !DILocation(line: 1111, column: 3, scope: !12826)
!12835 = !DILocation(line: 1113, column: 3, scope: !12826)
!12836 = !DILocation(line: 1114, column: 1, scope: !12713)
!12837 = distinct !DISubprogram(name: "mlxsw_core_health_init", scope: !3, file: !3, line: 1816, type: !7893, scopeLine: 1817, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!12838 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !12837, file: !3, line: 1816, type: !7847)
!12839 = !DILocation(line: 1816, column: 54, scope: !12837)
!12840 = !DILocalVariable(name: "devlink", scope: !12837, file: !3, line: 1818, type: !5560)
!12841 = !DILocation(line: 1818, column: 18, scope: !12837)
!12842 = !DILocation(line: 1818, column: 44, scope: !12837)
!12843 = !DILocation(line: 1818, column: 28, scope: !12837)
!12844 = !DILocalVariable(name: "fw_fatal", scope: !12837, file: !3, line: 1819, type: !8124)
!12845 = !DILocation(line: 1819, column: 34, scope: !12837)
!12846 = !DILocalVariable(name: "err", scope: !12837, file: !3, line: 1820, type: !78)
!12847 = !DILocation(line: 1820, column: 6, scope: !12837)
!12848 = !DILocation(line: 1822, column: 7, scope: !12849)
!12849 = distinct !DILexicalBlock(scope: !12837, file: !3, line: 1822, column: 6)
!12850 = !DILocation(line: 1822, column: 19, scope: !12849)
!12851 = !DILocation(line: 1822, column: 27, scope: !12849)
!12852 = !DILocation(line: 1822, column: 6, scope: !12837)
!12853 = !DILocation(line: 1823, column: 3, scope: !12849)
!12854 = !DILocation(line: 1825, column: 44, scope: !12837)
!12855 = !DILocation(line: 1826, column: 12, scope: !12837)
!12856 = !DILocation(line: 1825, column: 13, scope: !12837)
!12857 = !DILocation(line: 1825, column: 11, scope: !12837)
!12858 = !DILocation(line: 1827, column: 13, scope: !12859)
!12859 = distinct !DILexicalBlock(scope: !12837, file: !3, line: 1827, column: 6)
!12860 = !DILocation(line: 1827, column: 6, scope: !12859)
!12861 = !DILocation(line: 1827, column: 6, scope: !12837)
!12862 = !DILocation(line: 1828, column: 3, scope: !12863)
!12863 = distinct !DILexicalBlock(scope: !12859, file: !3, line: 1827, column: 24)
!12864 = !DILocation(line: 1829, column: 18, scope: !12863)
!12865 = !DILocation(line: 1829, column: 10, scope: !12863)
!12866 = !DILocation(line: 1829, column: 3, scope: !12863)
!12867 = !DILocation(line: 1831, column: 32, scope: !12837)
!12868 = !DILocation(line: 1831, column: 2, scope: !12837)
!12869 = !DILocation(line: 1831, column: 14, scope: !12837)
!12870 = !DILocation(line: 1831, column: 21, scope: !12837)
!12871 = !DILocation(line: 1831, column: 30, scope: !12837)
!12872 = !DILocation(line: 1833, column: 33, scope: !12837)
!12873 = !DILocation(line: 1833, column: 74, scope: !12837)
!12874 = !DILocation(line: 1833, column: 8, scope: !12837)
!12875 = !DILocation(line: 1833, column: 6, scope: !12837)
!12876 = !DILocation(line: 1834, column: 6, scope: !12877)
!12877 = distinct !DILexicalBlock(scope: !12837, file: !3, line: 1834, column: 6)
!12878 = !DILocation(line: 1834, column: 6, scope: !12837)
!12879 = !DILocation(line: 1835, column: 3, scope: !12877)
!12880 = !DILocation(line: 1837, column: 42, scope: !12837)
!12881 = !DILocation(line: 1837, column: 8, scope: !12837)
!12882 = !DILocation(line: 1837, column: 6, scope: !12837)
!12883 = !DILocation(line: 1838, column: 6, scope: !12884)
!12884 = distinct !DILexicalBlock(scope: !12837, file: !3, line: 1838, column: 6)
!12885 = !DILocation(line: 1838, column: 6, scope: !12837)
!12886 = !DILocation(line: 1839, column: 3, scope: !12884)
!12887 = !DILocation(line: 1841, column: 2, scope: !12837)
!12888 = !DILabel(scope: !12837, name: "err_fw_fatal_config", file: !3, line: 1843)
!12889 = !DILocation(line: 1843, column: 1, scope: !12837)
!12890 = !DILocation(line: 1844, column: 29, scope: !12837)
!12891 = !DILocation(line: 1844, column: 70, scope: !12837)
!12892 = !DILocation(line: 1844, column: 2, scope: !12837)
!12893 = !DILabel(scope: !12837, name: "err_trap_register", file: !3, line: 1845)
!12894 = !DILocation(line: 1845, column: 1, scope: !12837)
!12895 = !DILocation(line: 1846, column: 34, scope: !12837)
!12896 = !DILocation(line: 1846, column: 46, scope: !12837)
!12897 = !DILocation(line: 1846, column: 53, scope: !12837)
!12898 = !DILocation(line: 1846, column: 2, scope: !12837)
!12899 = !DILocation(line: 1847, column: 9, scope: !12837)
!12900 = !DILocation(line: 1847, column: 2, scope: !12837)
!12901 = !DILocation(line: 1848, column: 1, scope: !12837)
!12902 = distinct !DISubprogram(name: "__driver_find", scope: !3, file: !3, line: 863, type: !12273, scopeLine: 864, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!12903 = !DILocalVariable(name: "kind", arg: 1, scope: !12902, file: !3, line: 863, type: !338)
!12904 = !DILocation(line: 863, column: 55, scope: !12902)
!12905 = !DILocalVariable(name: "mlxsw_driver", scope: !12902, file: !3, line: 865, type: !7851)
!12906 = !DILocation(line: 865, column: 23, scope: !12902)
!12907 = !DILocalVariable(name: "__mptr", scope: !12908, file: !3, line: 867, type: !637)
!12908 = distinct !DILexicalBlock(scope: !12909, file: !3, line: 867, column: 2)
!12909 = distinct !DILexicalBlock(scope: !12902, file: !3, line: 867, column: 2)
!12910 = !DILocation(line: 867, column: 2, scope: !12908)
!12911 = !DILocation(line: 867, column: 2, scope: !12912)
!12912 = distinct !DILexicalBlock(scope: !12908, file: !3, line: 867, column: 2)
!12913 = !DILocation(line: 867, column: 2, scope: !12909)
!12914 = !DILocation(line: 867, column: 2, scope: !12915)
!12915 = distinct !DILexicalBlock(scope: !12909, file: !3, line: 867, column: 2)
!12916 = !DILocation(line: 868, column: 14, scope: !12917)
!12917 = distinct !DILexicalBlock(scope: !12918, file: !3, line: 868, column: 7)
!12918 = distinct !DILexicalBlock(scope: !12915, file: !3, line: 867, column: 67)
!12919 = !DILocation(line: 868, column: 28, scope: !12917)
!12920 = !DILocation(line: 868, column: 34, scope: !12917)
!12921 = !DILocation(line: 868, column: 7, scope: !12917)
!12922 = !DILocation(line: 868, column: 40, scope: !12917)
!12923 = !DILocation(line: 868, column: 7, scope: !12918)
!12924 = !DILocation(line: 869, column: 11, scope: !12917)
!12925 = !DILocation(line: 869, column: 4, scope: !12917)
!12926 = !DILocation(line: 870, column: 2, scope: !12918)
!12927 = !DILocalVariable(name: "__mptr", scope: !12928, file: !3, line: 867, type: !637)
!12928 = distinct !DILexicalBlock(scope: !12915, file: !3, line: 867, column: 2)
!12929 = !DILocation(line: 867, column: 2, scope: !12928)
!12930 = !DILocation(line: 867, column: 2, scope: !12931)
!12931 = distinct !DILexicalBlock(scope: !12928, file: !3, line: 867, column: 2)
!12932 = distinct !{!12932, !12913, !12933}
!12933 = !DILocation(line: 870, column: 2, scope: !12909)
!12934 = !DILocation(line: 871, column: 2, scope: !12902)
!12935 = !DILocation(line: 872, column: 1, scope: !12902)
!12936 = distinct !DISubprogram(name: "mlxsw_devlink_core_bus_device_reload_down", scope: !3, file: !3, line: 1420, type: !5607, scopeLine: 1424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!12937 = !DILocalVariable(name: "devlink", arg: 1, scope: !12936, file: !3, line: 1420, type: !5560)
!12938 = !DILocation(line: 1420, column: 59, scope: !12936)
!12939 = !DILocalVariable(name: "netns_change", arg: 2, scope: !12936, file: !3, line: 1421, type: !817)
!12940 = !DILocation(line: 1421, column: 13, scope: !12936)
!12941 = !DILocalVariable(name: "action", arg: 3, scope: !12936, file: !3, line: 1421, type: !11)
!12942 = !DILocation(line: 1421, column: 54, scope: !12936)
!12943 = !DILocalVariable(name: "limit", arg: 4, scope: !12936, file: !3, line: 1422, type: !18)
!12944 = !DILocation(line: 1422, column: 34, scope: !12936)
!12945 = !DILocalVariable(name: "extack", arg: 5, scope: !12936, file: !3, line: 1423, type: !932)
!12946 = !DILocation(line: 1423, column: 32, scope: !12936)
!12947 = !DILocalVariable(name: "mlxsw_core", scope: !12936, file: !3, line: 1425, type: !7847)
!12948 = !DILocation(line: 1425, column: 21, scope: !12936)
!12949 = !DILocation(line: 1425, column: 47, scope: !12936)
!12950 = !DILocation(line: 1425, column: 34, scope: !12936)
!12951 = !DILocation(line: 1427, column: 8, scope: !12952)
!12952 = distinct !DILexicalBlock(scope: !12936, file: !3, line: 1427, column: 6)
!12953 = !DILocation(line: 1427, column: 20, scope: !12952)
!12954 = !DILocation(line: 1427, column: 25, scope: !12952)
!12955 = !DILocation(line: 1427, column: 34, scope: !12952)
!12956 = !DILocation(line: 1427, column: 6, scope: !12936)
!12957 = !DILocation(line: 1428, column: 3, scope: !12952)
!12958 = !DILocation(line: 1430, column: 35, scope: !12936)
!12959 = !DILocation(line: 1430, column: 2, scope: !12936)
!12960 = !DILocation(line: 1431, column: 2, scope: !12936)
!12961 = !DILocation(line: 1432, column: 1, scope: !12936)
!12962 = distinct !DISubprogram(name: "mlxsw_devlink_core_bus_device_reload_up", scope: !3, file: !3, line: 1435, type: !5611, scopeLine: 1438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!12963 = !DILocalVariable(name: "devlink", arg: 1, scope: !12962, file: !3, line: 1435, type: !5560)
!12964 = !DILocation(line: 1435, column: 57, scope: !12962)
!12965 = !DILocalVariable(name: "action", arg: 2, scope: !12962, file: !3, line: 1435, type: !11)
!12966 = !DILocation(line: 1435, column: 93, scope: !12962)
!12967 = !DILocalVariable(name: "limit", arg: 3, scope: !12962, file: !3, line: 1436, type: !18)
!12968 = !DILocation(line: 1436, column: 32, scope: !12962)
!12969 = !DILocalVariable(name: "actions_performed", arg: 4, scope: !12962, file: !3, line: 1436, type: !2562)
!12970 = !DILocation(line: 1436, column: 44, scope: !12962)
!12971 = !DILocalVariable(name: "extack", arg: 5, scope: !12962, file: !3, line: 1437, type: !932)
!12972 = !DILocation(line: 1437, column: 30, scope: !12962)
!12973 = !DILocalVariable(name: "mlxsw_core", scope: !12962, file: !3, line: 1439, type: !7847)
!12974 = !DILocation(line: 1439, column: 21, scope: !12962)
!12975 = !DILocation(line: 1439, column: 47, scope: !12962)
!12976 = !DILocation(line: 1439, column: 34, scope: !12962)
!12977 = !DILocation(line: 1441, column: 3, scope: !12962)
!12978 = !DILocation(line: 1441, column: 21, scope: !12962)
!12979 = !DILocation(line: 1443, column: 40, scope: !12962)
!12980 = !DILocation(line: 1443, column: 52, scope: !12962)
!12981 = !DILocation(line: 1444, column: 12, scope: !12962)
!12982 = !DILocation(line: 1444, column: 24, scope: !12962)
!12983 = !DILocation(line: 1445, column: 12, scope: !12962)
!12984 = !DILocation(line: 1445, column: 24, scope: !12962)
!12985 = !DILocation(line: 1446, column: 12, scope: !12962)
!12986 = !DILocation(line: 1446, column: 21, scope: !12962)
!12987 = !DILocation(line: 1443, column: 9, scope: !12962)
!12988 = !DILocation(line: 1443, column: 2, scope: !12962)
!12989 = distinct !DISubprogram(name: "mlxsw_devlink_port_type_set", scope: !3, file: !3, line: 1240, type: !5615, scopeLine: 1242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!12990 = !DILocalVariable(name: "devlink_port", arg: 1, scope: !12989, file: !3, line: 1240, type: !5552)
!12991 = !DILocation(line: 1240, column: 61, scope: !12989)
!12992 = !DILocalVariable(name: "port_type", arg: 2, scope: !12989, file: !3, line: 1241, type: !24)
!12993 = !DILocation(line: 1241, column: 35, scope: !12989)
!12994 = !DILocalVariable(name: "mlxsw_core", scope: !12989, file: !3, line: 1243, type: !7847)
!12995 = !DILocation(line: 1243, column: 21, scope: !12989)
!12996 = !DILocation(line: 1243, column: 47, scope: !12989)
!12997 = !DILocation(line: 1243, column: 61, scope: !12989)
!12998 = !DILocation(line: 1243, column: 34, scope: !12989)
!12999 = !DILocalVariable(name: "mlxsw_driver", scope: !12989, file: !3, line: 1244, type: !7851)
!13000 = !DILocation(line: 1244, column: 23, scope: !12989)
!13001 = !DILocation(line: 1244, column: 38, scope: !12989)
!13002 = !DILocation(line: 1244, column: 50, scope: !12989)
!13003 = !DILocalVariable(name: "mlxsw_core_port", scope: !12989, file: !3, line: 1245, type: !7919)
!13004 = !DILocation(line: 1245, column: 26, scope: !12989)
!13005 = !DILocation(line: 1245, column: 54, scope: !12989)
!13006 = !DILocation(line: 1245, column: 44, scope: !12989)
!13007 = !DILocation(line: 1247, column: 7, scope: !13008)
!13008 = distinct !DILexicalBlock(scope: !12989, file: !3, line: 1247, column: 6)
!13009 = !DILocation(line: 1247, column: 21, scope: !13008)
!13010 = !DILocation(line: 1247, column: 6, scope: !12989)
!13011 = !DILocation(line: 1248, column: 3, scope: !13008)
!13012 = !DILocation(line: 1250, column: 9, scope: !12989)
!13013 = !DILocation(line: 1250, column: 23, scope: !12989)
!13014 = !DILocation(line: 1250, column: 37, scope: !12989)
!13015 = !DILocation(line: 1251, column: 9, scope: !12989)
!13016 = !DILocation(line: 1251, column: 26, scope: !12989)
!13017 = !DILocation(line: 1252, column: 9, scope: !12989)
!13018 = !DILocation(line: 1250, column: 2, scope: !12989)
!13019 = !DILocation(line: 1253, column: 1, scope: !12989)
!13020 = !DILocalVariable(name: "devlink", arg: 1, scope: !8306, file: !3, line: 1172, type: !5560)
!13021 = !DILocation(line: 1172, column: 53, scope: !8306)
!13022 = !DILocalVariable(name: "port_index", arg: 2, scope: !8306, file: !3, line: 1173, type: !7)
!13023 = !DILocation(line: 1173, column: 22, scope: !8306)
!13024 = !DILocalVariable(name: "count", arg: 3, scope: !8306, file: !3, line: 1174, type: !7)
!13025 = !DILocation(line: 1174, column: 22, scope: !8306)
!13026 = !DILocalVariable(name: "extack", arg: 4, scope: !8306, file: !3, line: 1175, type: !932)
!13027 = !DILocation(line: 1175, column: 33, scope: !8306)
!13028 = !DILocalVariable(name: "mlxsw_core", scope: !8306, file: !3, line: 1177, type: !7847)
!13029 = !DILocation(line: 1177, column: 21, scope: !8306)
!13030 = !DILocation(line: 1177, column: 47, scope: !8306)
!13031 = !DILocation(line: 1177, column: 34, scope: !8306)
!13032 = !DILocation(line: 1179, column: 6, scope: !13033)
!13033 = distinct !DILexicalBlock(scope: !8306, file: !3, line: 1179, column: 6)
!13034 = !DILocation(line: 1179, column: 20, scope: !13033)
!13035 = !DILocation(line: 1179, column: 32, scope: !13033)
!13036 = !DILocation(line: 1179, column: 17, scope: !13033)
!13037 = !DILocation(line: 1179, column: 6, scope: !8306)
!13038 = !DILocation(line: 1180, column: 3, scope: !13039)
!13039 = distinct !DILexicalBlock(scope: !13033, file: !3, line: 1179, column: 43)
!13040 = !DILocalVariable(name: "__extack", scope: !13041, file: !3, line: 1180, type: !932)
!13041 = distinct !DILexicalBlock(scope: !13039, file: !3, line: 1180, column: 3)
!13042 = !DILocation(line: 1180, column: 3, scope: !13041)
!13043 = !DILocation(line: 1180, column: 3, scope: !13044)
!13044 = distinct !DILexicalBlock(scope: !13041, file: !3, line: 1180, column: 3)
!13045 = !DILocation(line: 1181, column: 3, scope: !13039)
!13046 = !DILocation(line: 1183, column: 7, scope: !13047)
!13047 = distinct !DILexicalBlock(scope: !8306, file: !3, line: 1183, column: 6)
!13048 = !DILocation(line: 1183, column: 19, scope: !13047)
!13049 = !DILocation(line: 1183, column: 27, scope: !13047)
!13050 = !DILocation(line: 1183, column: 6, scope: !8306)
!13051 = !DILocation(line: 1184, column: 3, scope: !13047)
!13052 = !DILocation(line: 1185, column: 9, scope: !8306)
!13053 = !DILocation(line: 1185, column: 21, scope: !8306)
!13054 = !DILocation(line: 1185, column: 29, scope: !8306)
!13055 = !DILocation(line: 1185, column: 40, scope: !8306)
!13056 = !DILocation(line: 1185, column: 52, scope: !8306)
!13057 = !DILocation(line: 1185, column: 64, scope: !8306)
!13058 = !DILocation(line: 1186, column: 12, scope: !8306)
!13059 = !DILocation(line: 1185, column: 2, scope: !8306)
!13060 = !DILocation(line: 1187, column: 1, scope: !8306)
!13061 = !DILocalVariable(name: "devlink", arg: 1, scope: !8312, file: !3, line: 1189, type: !5560)
!13062 = !DILocation(line: 1189, column: 55, scope: !8312)
!13063 = !DILocalVariable(name: "port_index", arg: 2, scope: !8312, file: !3, line: 1190, type: !7)
!13064 = !DILocation(line: 1190, column: 24, scope: !8312)
!13065 = !DILocalVariable(name: "extack", arg: 3, scope: !8312, file: !3, line: 1191, type: !932)
!13066 = !DILocation(line: 1191, column: 35, scope: !8312)
!13067 = !DILocalVariable(name: "mlxsw_core", scope: !8312, file: !3, line: 1193, type: !7847)
!13068 = !DILocation(line: 1193, column: 21, scope: !8312)
!13069 = !DILocation(line: 1193, column: 47, scope: !8312)
!13070 = !DILocation(line: 1193, column: 34, scope: !8312)
!13071 = !DILocation(line: 1195, column: 6, scope: !13072)
!13072 = distinct !DILexicalBlock(scope: !8312, file: !3, line: 1195, column: 6)
!13073 = !DILocation(line: 1195, column: 20, scope: !13072)
!13074 = !DILocation(line: 1195, column: 32, scope: !13072)
!13075 = !DILocation(line: 1195, column: 17, scope: !13072)
!13076 = !DILocation(line: 1195, column: 6, scope: !8312)
!13077 = !DILocation(line: 1196, column: 3, scope: !13078)
!13078 = distinct !DILexicalBlock(scope: !13072, file: !3, line: 1195, column: 43)
!13079 = !DILocalVariable(name: "__extack", scope: !13080, file: !3, line: 1196, type: !932)
!13080 = distinct !DILexicalBlock(scope: !13078, file: !3, line: 1196, column: 3)
!13081 = !DILocation(line: 1196, column: 3, scope: !13080)
!13082 = !DILocation(line: 1196, column: 3, scope: !13083)
!13083 = distinct !DILexicalBlock(scope: !13080, file: !3, line: 1196, column: 3)
!13084 = !DILocation(line: 1197, column: 3, scope: !13078)
!13085 = !DILocation(line: 1199, column: 7, scope: !13086)
!13086 = distinct !DILexicalBlock(scope: !8312, file: !3, line: 1199, column: 6)
!13087 = !DILocation(line: 1199, column: 19, scope: !13086)
!13088 = !DILocation(line: 1199, column: 27, scope: !13086)
!13089 = !DILocation(line: 1199, column: 6, scope: !8312)
!13090 = !DILocation(line: 1200, column: 3, scope: !13086)
!13091 = !DILocation(line: 1201, column: 9, scope: !8312)
!13092 = !DILocation(line: 1201, column: 21, scope: !8312)
!13093 = !DILocation(line: 1201, column: 29, scope: !8312)
!13094 = !DILocation(line: 1201, column: 42, scope: !8312)
!13095 = !DILocation(line: 1201, column: 54, scope: !8312)
!13096 = !DILocation(line: 1202, column: 7, scope: !8312)
!13097 = !DILocation(line: 1201, column: 2, scope: !8312)
!13098 = !DILocation(line: 1203, column: 1, scope: !8312)
!13099 = distinct !DISubprogram(name: "mlxsw_devlink_sb_pool_get", scope: !3, file: !3, line: 1206, type: !5627, scopeLine: 1209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!13100 = !DILocalVariable(name: "devlink", arg: 1, scope: !13099, file: !3, line: 1206, type: !5560)
!13101 = !DILocation(line: 1206, column: 43, scope: !13099)
!13102 = !DILocalVariable(name: "sb_index", arg: 2, scope: !13099, file: !3, line: 1207, type: !7)
!13103 = !DILocation(line: 1207, column: 19, scope: !13099)
!13104 = !DILocalVariable(name: "pool_index", arg: 3, scope: !13099, file: !3, line: 1207, type: !627)
!13105 = !DILocation(line: 1207, column: 33, scope: !13099)
!13106 = !DILocalVariable(name: "pool_info", arg: 4, scope: !13099, file: !3, line: 1208, type: !5629)
!13107 = !DILocation(line: 1208, column: 35, scope: !13099)
!13108 = !DILocalVariable(name: "mlxsw_core", scope: !13099, file: !3, line: 1210, type: !7847)
!13109 = !DILocation(line: 1210, column: 21, scope: !13099)
!13110 = !DILocation(line: 1210, column: 47, scope: !13099)
!13111 = !DILocation(line: 1210, column: 34, scope: !13099)
!13112 = !DILocalVariable(name: "mlxsw_driver", scope: !13099, file: !3, line: 1211, type: !7851)
!13113 = !DILocation(line: 1211, column: 23, scope: !13099)
!13114 = !DILocation(line: 1211, column: 38, scope: !13099)
!13115 = !DILocation(line: 1211, column: 50, scope: !13099)
!13116 = !DILocation(line: 1213, column: 7, scope: !13117)
!13117 = distinct !DILexicalBlock(scope: !13099, file: !3, line: 1213, column: 6)
!13118 = !DILocation(line: 1213, column: 21, scope: !13117)
!13119 = !DILocation(line: 1213, column: 6, scope: !13099)
!13120 = !DILocation(line: 1214, column: 3, scope: !13117)
!13121 = !DILocation(line: 1215, column: 9, scope: !13099)
!13122 = !DILocation(line: 1215, column: 23, scope: !13099)
!13123 = !DILocation(line: 1215, column: 35, scope: !13099)
!13124 = !DILocation(line: 1215, column: 47, scope: !13099)
!13125 = !DILocation(line: 1216, column: 7, scope: !13099)
!13126 = !DILocation(line: 1216, column: 19, scope: !13099)
!13127 = !DILocation(line: 1215, column: 2, scope: !13099)
!13128 = !DILocation(line: 1217, column: 1, scope: !13099)
!13129 = distinct !DISubprogram(name: "mlxsw_devlink_sb_pool_set", scope: !3, file: !3, line: 1220, type: !5638, scopeLine: 1224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!13130 = !DILocalVariable(name: "devlink", arg: 1, scope: !13129, file: !3, line: 1220, type: !5560)
!13131 = !DILocation(line: 1220, column: 43, scope: !13129)
!13132 = !DILocalVariable(name: "sb_index", arg: 2, scope: !13129, file: !3, line: 1221, type: !7)
!13133 = !DILocation(line: 1221, column: 19, scope: !13129)
!13134 = !DILocalVariable(name: "pool_index", arg: 3, scope: !13129, file: !3, line: 1221, type: !627)
!13135 = !DILocation(line: 1221, column: 33, scope: !13129)
!13136 = !DILocalVariable(name: "size", arg: 4, scope: !13129, file: !3, line: 1221, type: !1033)
!13137 = !DILocation(line: 1221, column: 49, scope: !13129)
!13138 = !DILocalVariable(name: "threshold_type", arg: 5, scope: !13129, file: !3, line: 1222, type: !34)
!13139 = !DILocation(line: 1222, column: 37, scope: !13129)
!13140 = !DILocalVariable(name: "extack", arg: 6, scope: !13129, file: !3, line: 1223, type: !932)
!13141 = !DILocation(line: 1223, column: 30, scope: !13129)
!13142 = !DILocalVariable(name: "mlxsw_core", scope: !13129, file: !3, line: 1225, type: !7847)
!13143 = !DILocation(line: 1225, column: 21, scope: !13129)
!13144 = !DILocation(line: 1225, column: 47, scope: !13129)
!13145 = !DILocation(line: 1225, column: 34, scope: !13129)
!13146 = !DILocalVariable(name: "mlxsw_driver", scope: !13129, file: !3, line: 1226, type: !7851)
!13147 = !DILocation(line: 1226, column: 23, scope: !13129)
!13148 = !DILocation(line: 1226, column: 38, scope: !13129)
!13149 = !DILocation(line: 1226, column: 50, scope: !13129)
!13150 = !DILocation(line: 1228, column: 7, scope: !13151)
!13151 = distinct !DILexicalBlock(scope: !13129, file: !3, line: 1228, column: 6)
!13152 = !DILocation(line: 1228, column: 21, scope: !13151)
!13153 = !DILocation(line: 1228, column: 6, scope: !13129)
!13154 = !DILocation(line: 1229, column: 3, scope: !13151)
!13155 = !DILocation(line: 1230, column: 9, scope: !13129)
!13156 = !DILocation(line: 1230, column: 23, scope: !13129)
!13157 = !DILocation(line: 1230, column: 35, scope: !13129)
!13158 = !DILocation(line: 1230, column: 47, scope: !13129)
!13159 = !DILocation(line: 1231, column: 7, scope: !13129)
!13160 = !DILocation(line: 1231, column: 19, scope: !13129)
!13161 = !DILocation(line: 1231, column: 25, scope: !13129)
!13162 = !DILocation(line: 1232, column: 7, scope: !13129)
!13163 = !DILocation(line: 1230, column: 2, scope: !13129)
!13164 = !DILocation(line: 1233, column: 1, scope: !13129)
!13165 = distinct !DISubprogram(name: "mlxsw_devlink_sb_port_pool_get", scope: !3, file: !3, line: 1255, type: !5642, scopeLine: 1258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!13166 = !DILocalVariable(name: "devlink_port", arg: 1, scope: !13165, file: !3, line: 1255, type: !5552)
!13167 = !DILocation(line: 1255, column: 64, scope: !13165)
!13168 = !DILocalVariable(name: "sb_index", arg: 2, scope: !13165, file: !3, line: 1256, type: !7)
!13169 = !DILocation(line: 1256, column: 21, scope: !13165)
!13170 = !DILocalVariable(name: "pool_index", arg: 3, scope: !13165, file: !3, line: 1256, type: !627)
!13171 = !DILocation(line: 1256, column: 35, scope: !13165)
!13172 = !DILocalVariable(name: "p_threshold", arg: 4, scope: !13165, file: !3, line: 1257, type: !2562)
!13173 = !DILocation(line: 1257, column: 13, scope: !13165)
!13174 = !DILocalVariable(name: "mlxsw_core", scope: !13165, file: !3, line: 1259, type: !7847)
!13175 = !DILocation(line: 1259, column: 21, scope: !13165)
!13176 = !DILocation(line: 1259, column: 47, scope: !13165)
!13177 = !DILocation(line: 1259, column: 61, scope: !13165)
!13178 = !DILocation(line: 1259, column: 34, scope: !13165)
!13179 = !DILocalVariable(name: "mlxsw_driver", scope: !13165, file: !3, line: 1260, type: !7851)
!13180 = !DILocation(line: 1260, column: 23, scope: !13165)
!13181 = !DILocation(line: 1260, column: 38, scope: !13165)
!13182 = !DILocation(line: 1260, column: 50, scope: !13165)
!13183 = !DILocalVariable(name: "mlxsw_core_port", scope: !13165, file: !3, line: 1261, type: !7919)
!13184 = !DILocation(line: 1261, column: 26, scope: !13165)
!13185 = !DILocation(line: 1261, column: 54, scope: !13165)
!13186 = !DILocation(line: 1261, column: 44, scope: !13165)
!13187 = !DILocation(line: 1263, column: 7, scope: !13188)
!13188 = distinct !DILexicalBlock(scope: !13165, file: !3, line: 1263, column: 6)
!13189 = !DILocation(line: 1263, column: 21, scope: !13188)
!13190 = !DILocation(line: 1263, column: 38, scope: !13188)
!13191 = !DILocation(line: 1264, column: 29, scope: !13188)
!13192 = !DILocation(line: 1264, column: 7, scope: !13188)
!13193 = !DILocation(line: 1263, column: 6, scope: !13165)
!13194 = !DILocation(line: 1265, column: 3, scope: !13188)
!13195 = !DILocation(line: 1266, column: 9, scope: !13165)
!13196 = !DILocation(line: 1266, column: 23, scope: !13165)
!13197 = !DILocation(line: 1266, column: 40, scope: !13165)
!13198 = !DILocation(line: 1266, column: 57, scope: !13165)
!13199 = !DILocation(line: 1267, column: 12, scope: !13165)
!13200 = !DILocation(line: 1267, column: 24, scope: !13165)
!13201 = !DILocation(line: 1266, column: 2, scope: !13165)
!13202 = !DILocation(line: 1268, column: 1, scope: !13165)
!13203 = distinct !DISubprogram(name: "mlxsw_devlink_sb_port_pool_set", scope: !3, file: !3, line: 1270, type: !5646, scopeLine: 1274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!13204 = !DILocalVariable(name: "devlink_port", arg: 1, scope: !13203, file: !3, line: 1270, type: !5552)
!13205 = !DILocation(line: 1270, column: 64, scope: !13203)
!13206 = !DILocalVariable(name: "sb_index", arg: 2, scope: !13203, file: !3, line: 1271, type: !7)
!13207 = !DILocation(line: 1271, column: 21, scope: !13203)
!13208 = !DILocalVariable(name: "pool_index", arg: 3, scope: !13203, file: !3, line: 1271, type: !627)
!13209 = !DILocation(line: 1271, column: 35, scope: !13203)
!13210 = !DILocalVariable(name: "threshold", arg: 4, scope: !13203, file: !3, line: 1272, type: !1033)
!13211 = !DILocation(line: 1272, column: 12, scope: !13203)
!13212 = !DILocalVariable(name: "extack", arg: 5, scope: !13203, file: !3, line: 1273, type: !932)
!13213 = !DILocation(line: 1273, column: 32, scope: !13203)
!13214 = !DILocalVariable(name: "mlxsw_core", scope: !13203, file: !3, line: 1275, type: !7847)
!13215 = !DILocation(line: 1275, column: 21, scope: !13203)
!13216 = !DILocation(line: 1275, column: 47, scope: !13203)
!13217 = !DILocation(line: 1275, column: 61, scope: !13203)
!13218 = !DILocation(line: 1275, column: 34, scope: !13203)
!13219 = !DILocalVariable(name: "mlxsw_driver", scope: !13203, file: !3, line: 1276, type: !7851)
!13220 = !DILocation(line: 1276, column: 23, scope: !13203)
!13221 = !DILocation(line: 1276, column: 38, scope: !13203)
!13222 = !DILocation(line: 1276, column: 50, scope: !13203)
!13223 = !DILocalVariable(name: "mlxsw_core_port", scope: !13203, file: !3, line: 1277, type: !7919)
!13224 = !DILocation(line: 1277, column: 26, scope: !13203)
!13225 = !DILocation(line: 1277, column: 54, scope: !13203)
!13226 = !DILocation(line: 1277, column: 44, scope: !13203)
!13227 = !DILocation(line: 1279, column: 7, scope: !13228)
!13228 = distinct !DILexicalBlock(scope: !13203, file: !3, line: 1279, column: 6)
!13229 = !DILocation(line: 1279, column: 21, scope: !13228)
!13230 = !DILocation(line: 1279, column: 38, scope: !13228)
!13231 = !DILocation(line: 1280, column: 29, scope: !13228)
!13232 = !DILocation(line: 1280, column: 7, scope: !13228)
!13233 = !DILocation(line: 1279, column: 6, scope: !13203)
!13234 = !DILocation(line: 1281, column: 3, scope: !13228)
!13235 = !DILocation(line: 1282, column: 9, scope: !13203)
!13236 = !DILocation(line: 1282, column: 23, scope: !13203)
!13237 = !DILocation(line: 1282, column: 40, scope: !13203)
!13238 = !DILocation(line: 1282, column: 57, scope: !13203)
!13239 = !DILocation(line: 1283, column: 12, scope: !13203)
!13240 = !DILocation(line: 1283, column: 24, scope: !13203)
!13241 = !DILocation(line: 1283, column: 35, scope: !13203)
!13242 = !DILocation(line: 1282, column: 2, scope: !13203)
!13243 = !DILocation(line: 1284, column: 1, scope: !13203)
!13244 = distinct !DISubprogram(name: "mlxsw_devlink_sb_tc_pool_bind_get", scope: !3, file: !3, line: 1287, type: !5650, scopeLine: 1291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!13245 = !DILocalVariable(name: "devlink_port", arg: 1, scope: !13244, file: !3, line: 1287, type: !5552)
!13246 = !DILocation(line: 1287, column: 56, scope: !13244)
!13247 = !DILocalVariable(name: "sb_index", arg: 2, scope: !13244, file: !3, line: 1288, type: !7)
!13248 = !DILocation(line: 1288, column: 20, scope: !13244)
!13249 = !DILocalVariable(name: "tc_index", arg: 3, scope: !13244, file: !3, line: 1288, type: !627)
!13250 = !DILocation(line: 1288, column: 34, scope: !13244)
!13251 = !DILocalVariable(name: "pool_type", arg: 4, scope: !13244, file: !3, line: 1289, type: !30)
!13252 = !DILocation(line: 1289, column: 33, scope: !13244)
!13253 = !DILocalVariable(name: "p_pool_index", arg: 5, scope: !13244, file: !3, line: 1290, type: !5652)
!13254 = !DILocation(line: 1290, column: 12, scope: !13244)
!13255 = !DILocalVariable(name: "p_threshold", arg: 6, scope: !13244, file: !3, line: 1290, type: !2562)
!13256 = !DILocation(line: 1290, column: 31, scope: !13244)
!13257 = !DILocalVariable(name: "mlxsw_core", scope: !13244, file: !3, line: 1292, type: !7847)
!13258 = !DILocation(line: 1292, column: 21, scope: !13244)
!13259 = !DILocation(line: 1292, column: 47, scope: !13244)
!13260 = !DILocation(line: 1292, column: 61, scope: !13244)
!13261 = !DILocation(line: 1292, column: 34, scope: !13244)
!13262 = !DILocalVariable(name: "mlxsw_driver", scope: !13244, file: !3, line: 1293, type: !7851)
!13263 = !DILocation(line: 1293, column: 23, scope: !13244)
!13264 = !DILocation(line: 1293, column: 38, scope: !13244)
!13265 = !DILocation(line: 1293, column: 50, scope: !13244)
!13266 = !DILocalVariable(name: "mlxsw_core_port", scope: !13244, file: !3, line: 1294, type: !7919)
!13267 = !DILocation(line: 1294, column: 26, scope: !13244)
!13268 = !DILocation(line: 1294, column: 54, scope: !13244)
!13269 = !DILocation(line: 1294, column: 44, scope: !13244)
!13270 = !DILocation(line: 1296, column: 7, scope: !13271)
!13271 = distinct !DILexicalBlock(scope: !13244, file: !3, line: 1296, column: 6)
!13272 = !DILocation(line: 1296, column: 21, scope: !13271)
!13273 = !DILocation(line: 1296, column: 41, scope: !13271)
!13274 = !DILocation(line: 1297, column: 29, scope: !13271)
!13275 = !DILocation(line: 1297, column: 7, scope: !13271)
!13276 = !DILocation(line: 1296, column: 6, scope: !13244)
!13277 = !DILocation(line: 1298, column: 3, scope: !13271)
!13278 = !DILocation(line: 1299, column: 9, scope: !13244)
!13279 = !DILocation(line: 1299, column: 23, scope: !13244)
!13280 = !DILocation(line: 1299, column: 43, scope: !13244)
!13281 = !DILocation(line: 1299, column: 60, scope: !13244)
!13282 = !DILocation(line: 1300, column: 8, scope: !13244)
!13283 = !DILocation(line: 1300, column: 18, scope: !13244)
!13284 = !DILocation(line: 1301, column: 8, scope: !13244)
!13285 = !DILocation(line: 1301, column: 22, scope: !13244)
!13286 = !DILocation(line: 1299, column: 2, scope: !13244)
!13287 = !DILocation(line: 1302, column: 1, scope: !13244)
!13288 = distinct !DISubprogram(name: "mlxsw_devlink_sb_tc_pool_bind_set", scope: !3, file: !3, line: 1305, type: !5655, scopeLine: 1310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!13289 = !DILocalVariable(name: "devlink_port", arg: 1, scope: !13288, file: !3, line: 1305, type: !5552)
!13290 = !DILocation(line: 1305, column: 56, scope: !13288)
!13291 = !DILocalVariable(name: "sb_index", arg: 2, scope: !13288, file: !3, line: 1306, type: !7)
!13292 = !DILocation(line: 1306, column: 20, scope: !13288)
!13293 = !DILocalVariable(name: "tc_index", arg: 3, scope: !13288, file: !3, line: 1306, type: !627)
!13294 = !DILocation(line: 1306, column: 34, scope: !13288)
!13295 = !DILocalVariable(name: "pool_type", arg: 4, scope: !13288, file: !3, line: 1307, type: !30)
!13296 = !DILocation(line: 1307, column: 33, scope: !13288)
!13297 = !DILocalVariable(name: "pool_index", arg: 5, scope: !13288, file: !3, line: 1308, type: !627)
!13298 = !DILocation(line: 1308, column: 11, scope: !13288)
!13299 = !DILocalVariable(name: "threshold", arg: 6, scope: !13288, file: !3, line: 1308, type: !1033)
!13300 = !DILocation(line: 1308, column: 27, scope: !13288)
!13301 = !DILocalVariable(name: "extack", arg: 7, scope: !13288, file: !3, line: 1309, type: !932)
!13302 = !DILocation(line: 1309, column: 31, scope: !13288)
!13303 = !DILocalVariable(name: "mlxsw_core", scope: !13288, file: !3, line: 1311, type: !7847)
!13304 = !DILocation(line: 1311, column: 21, scope: !13288)
!13305 = !DILocation(line: 1311, column: 47, scope: !13288)
!13306 = !DILocation(line: 1311, column: 61, scope: !13288)
!13307 = !DILocation(line: 1311, column: 34, scope: !13288)
!13308 = !DILocalVariable(name: "mlxsw_driver", scope: !13288, file: !3, line: 1312, type: !7851)
!13309 = !DILocation(line: 1312, column: 23, scope: !13288)
!13310 = !DILocation(line: 1312, column: 38, scope: !13288)
!13311 = !DILocation(line: 1312, column: 50, scope: !13288)
!13312 = !DILocalVariable(name: "mlxsw_core_port", scope: !13288, file: !3, line: 1313, type: !7919)
!13313 = !DILocation(line: 1313, column: 26, scope: !13288)
!13314 = !DILocation(line: 1313, column: 54, scope: !13288)
!13315 = !DILocation(line: 1313, column: 44, scope: !13288)
!13316 = !DILocation(line: 1315, column: 7, scope: !13317)
!13317 = distinct !DILexicalBlock(scope: !13288, file: !3, line: 1315, column: 6)
!13318 = !DILocation(line: 1315, column: 21, scope: !13317)
!13319 = !DILocation(line: 1315, column: 41, scope: !13317)
!13320 = !DILocation(line: 1316, column: 29, scope: !13317)
!13321 = !DILocation(line: 1316, column: 7, scope: !13317)
!13322 = !DILocation(line: 1315, column: 6, scope: !13288)
!13323 = !DILocation(line: 1317, column: 3, scope: !13317)
!13324 = !DILocation(line: 1318, column: 9, scope: !13288)
!13325 = !DILocation(line: 1318, column: 23, scope: !13288)
!13326 = !DILocation(line: 1318, column: 43, scope: !13288)
!13327 = !DILocation(line: 1318, column: 60, scope: !13288)
!13328 = !DILocation(line: 1319, column: 8, scope: !13288)
!13329 = !DILocation(line: 1319, column: 18, scope: !13288)
!13330 = !DILocation(line: 1320, column: 8, scope: !13288)
!13331 = !DILocation(line: 1320, column: 20, scope: !13288)
!13332 = !DILocation(line: 1320, column: 31, scope: !13288)
!13333 = !DILocation(line: 1318, column: 2, scope: !13288)
!13334 = !DILocation(line: 1321, column: 1, scope: !13288)
!13335 = distinct !DISubprogram(name: "mlxsw_devlink_sb_occ_snapshot", scope: !3, file: !3, line: 1323, type: !5659, scopeLine: 1325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!13336 = !DILocalVariable(name: "devlink", arg: 1, scope: !13335, file: !3, line: 1323, type: !5560)
!13337 = !DILocation(line: 1323, column: 58, scope: !13335)
!13338 = !DILocalVariable(name: "sb_index", arg: 2, scope: !13335, file: !3, line: 1324, type: !7)
!13339 = !DILocation(line: 1324, column: 20, scope: !13335)
!13340 = !DILocalVariable(name: "mlxsw_core", scope: !13335, file: !3, line: 1326, type: !7847)
!13341 = !DILocation(line: 1326, column: 21, scope: !13335)
!13342 = !DILocation(line: 1326, column: 47, scope: !13335)
!13343 = !DILocation(line: 1326, column: 34, scope: !13335)
!13344 = !DILocalVariable(name: "mlxsw_driver", scope: !13335, file: !3, line: 1327, type: !7851)
!13345 = !DILocation(line: 1327, column: 23, scope: !13335)
!13346 = !DILocation(line: 1327, column: 38, scope: !13335)
!13347 = !DILocation(line: 1327, column: 50, scope: !13335)
!13348 = !DILocation(line: 1329, column: 7, scope: !13349)
!13349 = distinct !DILexicalBlock(scope: !13335, file: !3, line: 1329, column: 6)
!13350 = !DILocation(line: 1329, column: 21, scope: !13349)
!13351 = !DILocation(line: 1329, column: 6, scope: !13335)
!13352 = !DILocation(line: 1330, column: 3, scope: !13349)
!13353 = !DILocation(line: 1331, column: 9, scope: !13335)
!13354 = !DILocation(line: 1331, column: 23, scope: !13335)
!13355 = !DILocation(line: 1331, column: 39, scope: !13335)
!13356 = !DILocation(line: 1331, column: 51, scope: !13335)
!13357 = !DILocation(line: 1331, column: 2, scope: !13335)
!13358 = !DILocation(line: 1332, column: 1, scope: !13335)
!13359 = distinct !DISubprogram(name: "mlxsw_devlink_sb_occ_max_clear", scope: !3, file: !3, line: 1334, type: !5659, scopeLine: 1336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!13360 = !DILocalVariable(name: "devlink", arg: 1, scope: !13359, file: !3, line: 1334, type: !5560)
!13361 = !DILocation(line: 1334, column: 59, scope: !13359)
!13362 = !DILocalVariable(name: "sb_index", arg: 2, scope: !13359, file: !3, line: 1335, type: !7)
!13363 = !DILocation(line: 1335, column: 21, scope: !13359)
!13364 = !DILocalVariable(name: "mlxsw_core", scope: !13359, file: !3, line: 1337, type: !7847)
!13365 = !DILocation(line: 1337, column: 21, scope: !13359)
!13366 = !DILocation(line: 1337, column: 47, scope: !13359)
!13367 = !DILocation(line: 1337, column: 34, scope: !13359)
!13368 = !DILocalVariable(name: "mlxsw_driver", scope: !13359, file: !3, line: 1338, type: !7851)
!13369 = !DILocation(line: 1338, column: 23, scope: !13359)
!13370 = !DILocation(line: 1338, column: 38, scope: !13359)
!13371 = !DILocation(line: 1338, column: 50, scope: !13359)
!13372 = !DILocation(line: 1340, column: 7, scope: !13373)
!13373 = distinct !DILexicalBlock(scope: !13359, file: !3, line: 1340, column: 6)
!13374 = !DILocation(line: 1340, column: 21, scope: !13373)
!13375 = !DILocation(line: 1340, column: 6, scope: !13359)
!13376 = !DILocation(line: 1341, column: 3, scope: !13373)
!13377 = !DILocation(line: 1342, column: 9, scope: !13359)
!13378 = !DILocation(line: 1342, column: 23, scope: !13359)
!13379 = !DILocation(line: 1342, column: 40, scope: !13359)
!13380 = !DILocation(line: 1342, column: 52, scope: !13359)
!13381 = !DILocation(line: 1342, column: 2, scope: !13359)
!13382 = !DILocation(line: 1343, column: 1, scope: !13359)
!13383 = distinct !DISubprogram(name: "mlxsw_devlink_sb_occ_port_pool_get", scope: !3, file: !3, line: 1346, type: !5664, scopeLine: 1349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!13384 = !DILocalVariable(name: "devlink_port", arg: 1, scope: !13383, file: !3, line: 1346, type: !5552)
!13385 = !DILocation(line: 1346, column: 57, scope: !13383)
!13386 = !DILocalVariable(name: "sb_index", arg: 2, scope: !13383, file: !3, line: 1347, type: !7)
!13387 = !DILocation(line: 1347, column: 21, scope: !13383)
!13388 = !DILocalVariable(name: "pool_index", arg: 3, scope: !13383, file: !3, line: 1347, type: !627)
!13389 = !DILocation(line: 1347, column: 35, scope: !13383)
!13390 = !DILocalVariable(name: "p_cur", arg: 4, scope: !13383, file: !3, line: 1348, type: !2562)
!13391 = !DILocation(line: 1348, column: 13, scope: !13383)
!13392 = !DILocalVariable(name: "p_max", arg: 5, scope: !13383, file: !3, line: 1348, type: !2562)
!13393 = !DILocation(line: 1348, column: 25, scope: !13383)
!13394 = !DILocalVariable(name: "mlxsw_core", scope: !13383, file: !3, line: 1350, type: !7847)
!13395 = !DILocation(line: 1350, column: 21, scope: !13383)
!13396 = !DILocation(line: 1350, column: 47, scope: !13383)
!13397 = !DILocation(line: 1350, column: 61, scope: !13383)
!13398 = !DILocation(line: 1350, column: 34, scope: !13383)
!13399 = !DILocalVariable(name: "mlxsw_driver", scope: !13383, file: !3, line: 1351, type: !7851)
!13400 = !DILocation(line: 1351, column: 23, scope: !13383)
!13401 = !DILocation(line: 1351, column: 38, scope: !13383)
!13402 = !DILocation(line: 1351, column: 50, scope: !13383)
!13403 = !DILocalVariable(name: "mlxsw_core_port", scope: !13383, file: !3, line: 1352, type: !7919)
!13404 = !DILocation(line: 1352, column: 26, scope: !13383)
!13405 = !DILocation(line: 1352, column: 54, scope: !13383)
!13406 = !DILocation(line: 1352, column: 44, scope: !13383)
!13407 = !DILocation(line: 1354, column: 7, scope: !13408)
!13408 = distinct !DILexicalBlock(scope: !13383, file: !3, line: 1354, column: 6)
!13409 = !DILocation(line: 1354, column: 21, scope: !13408)
!13410 = !DILocation(line: 1354, column: 42, scope: !13408)
!13411 = !DILocation(line: 1355, column: 29, scope: !13408)
!13412 = !DILocation(line: 1355, column: 7, scope: !13408)
!13413 = !DILocation(line: 1354, column: 6, scope: !13383)
!13414 = !DILocation(line: 1356, column: 3, scope: !13408)
!13415 = !DILocation(line: 1357, column: 9, scope: !13383)
!13416 = !DILocation(line: 1357, column: 23, scope: !13383)
!13417 = !DILocation(line: 1357, column: 44, scope: !13383)
!13418 = !DILocation(line: 1357, column: 61, scope: !13383)
!13419 = !DILocation(line: 1358, column: 9, scope: !13383)
!13420 = !DILocation(line: 1358, column: 21, scope: !13383)
!13421 = !DILocation(line: 1358, column: 28, scope: !13383)
!13422 = !DILocation(line: 1357, column: 2, scope: !13383)
!13423 = !DILocation(line: 1359, column: 1, scope: !13383)
!13424 = distinct !DISubprogram(name: "mlxsw_devlink_sb_occ_tc_port_bind_get", scope: !3, file: !3, line: 1362, type: !5668, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!13425 = !DILocalVariable(name: "devlink_port", arg: 1, scope: !13424, file: !3, line: 1362, type: !5552)
!13426 = !DILocation(line: 1362, column: 60, scope: !13424)
!13427 = !DILocalVariable(name: "sb_index", arg: 2, scope: !13424, file: !3, line: 1363, type: !7)
!13428 = !DILocation(line: 1363, column: 24, scope: !13424)
!13429 = !DILocalVariable(name: "tc_index", arg: 3, scope: !13424, file: !3, line: 1363, type: !627)
!13430 = !DILocation(line: 1363, column: 38, scope: !13424)
!13431 = !DILocalVariable(name: "pool_type", arg: 4, scope: !13424, file: !3, line: 1364, type: !30)
!13432 = !DILocation(line: 1364, column: 37, scope: !13424)
!13433 = !DILocalVariable(name: "p_cur", arg: 5, scope: !13424, file: !3, line: 1365, type: !2562)
!13434 = !DILocation(line: 1365, column: 16, scope: !13424)
!13435 = !DILocalVariable(name: "p_max", arg: 6, scope: !13424, file: !3, line: 1365, type: !2562)
!13436 = !DILocation(line: 1365, column: 28, scope: !13424)
!13437 = !DILocalVariable(name: "mlxsw_core", scope: !13424, file: !3, line: 1367, type: !7847)
!13438 = !DILocation(line: 1367, column: 21, scope: !13424)
!13439 = !DILocation(line: 1367, column: 47, scope: !13424)
!13440 = !DILocation(line: 1367, column: 61, scope: !13424)
!13441 = !DILocation(line: 1367, column: 34, scope: !13424)
!13442 = !DILocalVariable(name: "mlxsw_driver", scope: !13424, file: !3, line: 1368, type: !7851)
!13443 = !DILocation(line: 1368, column: 23, scope: !13424)
!13444 = !DILocation(line: 1368, column: 38, scope: !13424)
!13445 = !DILocation(line: 1368, column: 50, scope: !13424)
!13446 = !DILocalVariable(name: "mlxsw_core_port", scope: !13424, file: !3, line: 1369, type: !7919)
!13447 = !DILocation(line: 1369, column: 26, scope: !13424)
!13448 = !DILocation(line: 1369, column: 54, scope: !13424)
!13449 = !DILocation(line: 1369, column: 44, scope: !13424)
!13450 = !DILocation(line: 1371, column: 7, scope: !13451)
!13451 = distinct !DILexicalBlock(scope: !13424, file: !3, line: 1371, column: 6)
!13452 = !DILocation(line: 1371, column: 21, scope: !13451)
!13453 = !DILocation(line: 1371, column: 45, scope: !13451)
!13454 = !DILocation(line: 1372, column: 29, scope: !13451)
!13455 = !DILocation(line: 1372, column: 7, scope: !13451)
!13456 = !DILocation(line: 1371, column: 6, scope: !13424)
!13457 = !DILocation(line: 1373, column: 3, scope: !13451)
!13458 = !DILocation(line: 1374, column: 9, scope: !13424)
!13459 = !DILocation(line: 1374, column: 23, scope: !13424)
!13460 = !DILocation(line: 1374, column: 47, scope: !13424)
!13461 = !DILocation(line: 1375, column: 12, scope: !13424)
!13462 = !DILocation(line: 1375, column: 22, scope: !13424)
!13463 = !DILocation(line: 1376, column: 12, scope: !13424)
!13464 = !DILocation(line: 1376, column: 23, scope: !13424)
!13465 = !DILocation(line: 1376, column: 30, scope: !13424)
!13466 = !DILocation(line: 1374, column: 2, scope: !13424)
!13467 = !DILocation(line: 1377, column: 1, scope: !13424)
!13468 = distinct !DISubprogram(name: "mlxsw_devlink_info_get", scope: !3, file: !3, line: 1380, type: !5697, scopeLine: 1382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!13469 = !DILocalVariable(name: "devlink", arg: 1, scope: !13468, file: !3, line: 1380, type: !5560)
!13470 = !DILocation(line: 1380, column: 40, scope: !13468)
!13471 = !DILocalVariable(name: "req", arg: 2, scope: !13468, file: !3, line: 1380, type: !5699)
!13472 = !DILocation(line: 1380, column: 74, scope: !13468)
!13473 = !DILocalVariable(name: "extack", arg: 3, scope: !13468, file: !3, line: 1381, type: !932)
!13474 = !DILocation(line: 1381, column: 34, scope: !13468)
!13475 = !DILocalVariable(name: "mlxsw_core", scope: !13468, file: !3, line: 1383, type: !7847)
!13476 = !DILocation(line: 1383, column: 21, scope: !13468)
!13477 = !DILocation(line: 1383, column: 47, scope: !13468)
!13478 = !DILocation(line: 1383, column: 34, scope: !13468)
!13479 = !DILocalVariable(name: "fw_info_psid", scope: !13468, file: !3, line: 1384, type: !313)
!13480 = !DILocation(line: 1384, column: 7, scope: !13468)
!13481 = !DILocalVariable(name: "hw_rev", scope: !13468, file: !3, line: 1385, type: !1033)
!13482 = !DILocation(line: 1385, column: 6, scope: !13468)
!13483 = !DILocalVariable(name: "fw_major", scope: !13468, file: !3, line: 1385, type: !1033)
!13484 = !DILocation(line: 1385, column: 14, scope: !13468)
!13485 = !DILocalVariable(name: "fw_minor", scope: !13468, file: !3, line: 1385, type: !1033)
!13486 = !DILocation(line: 1385, column: 24, scope: !13468)
!13487 = !DILocalVariable(name: "fw_sub_minor", scope: !13468, file: !3, line: 1385, type: !1033)
!13488 = !DILocation(line: 1385, column: 34, scope: !13468)
!13489 = !DILocalVariable(name: "mgir_pl", scope: !13468, file: !3, line: 1386, type: !13490)
!13490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 1248, elements: !13491)
!13491 = !{!13492}
!13492 = !DISubrange(count: 156)
!13493 = !DILocation(line: 1386, column: 7, scope: !13468)
!13494 = !DILocalVariable(name: "buf", scope: !13468, file: !3, line: 1387, type: !4670)
!13495 = !DILocation(line: 1387, column: 7, scope: !13468)
!13496 = !DILocalVariable(name: "err", scope: !13468, file: !3, line: 1388, type: !78)
!13497 = !DILocation(line: 1388, column: 6, scope: !13468)
!13498 = !DILocation(line: 1390, column: 37, scope: !13468)
!13499 = !DILocation(line: 1391, column: 9, scope: !13468)
!13500 = !DILocation(line: 1391, column: 21, scope: !13468)
!13501 = !DILocation(line: 1391, column: 31, scope: !13468)
!13502 = !DILocation(line: 1390, column: 8, scope: !13468)
!13503 = !DILocation(line: 1390, column: 6, scope: !13468)
!13504 = !DILocation(line: 1392, column: 6, scope: !13505)
!13505 = distinct !DILexicalBlock(scope: !13468, file: !3, line: 1392, column: 6)
!13506 = !DILocation(line: 1392, column: 6, scope: !13468)
!13507 = !DILocation(line: 1393, column: 10, scope: !13505)
!13508 = !DILocation(line: 1393, column: 3, scope: !13505)
!13509 = !DILocation(line: 1395, column: 22, scope: !13468)
!13510 = !DILocation(line: 1395, column: 2, scope: !13468)
!13511 = !DILocation(line: 1396, column: 24, scope: !13468)
!13512 = !DILocation(line: 1396, column: 53, scope: !13468)
!13513 = !DILocation(line: 1396, column: 8, scope: !13468)
!13514 = !DILocation(line: 1396, column: 6, scope: !13468)
!13515 = !DILocation(line: 1397, column: 6, scope: !13516)
!13516 = distinct !DILexicalBlock(scope: !13468, file: !3, line: 1397, column: 6)
!13517 = !DILocation(line: 1397, column: 6, scope: !13468)
!13518 = !DILocation(line: 1398, column: 10, scope: !13516)
!13519 = !DILocation(line: 1398, column: 3, scope: !13516)
!13520 = !DILocation(line: 1399, column: 24, scope: !13468)
!13521 = !DILocation(line: 1399, column: 42, scope: !13468)
!13522 = !DILocation(line: 1399, column: 2, scope: !13468)
!13523 = !DILocation(line: 1402, column: 10, scope: !13468)
!13524 = !DILocation(line: 1402, column: 21, scope: !13468)
!13525 = !DILocation(line: 1402, column: 2, scope: !13468)
!13526 = !DILocation(line: 1403, column: 39, scope: !13468)
!13527 = !DILocation(line: 1403, column: 59, scope: !13468)
!13528 = !DILocation(line: 1403, column: 8, scope: !13468)
!13529 = !DILocation(line: 1403, column: 6, scope: !13468)
!13530 = !DILocation(line: 1404, column: 6, scope: !13531)
!13531 = distinct !DILexicalBlock(scope: !13468, file: !3, line: 1404, column: 6)
!13532 = !DILocation(line: 1404, column: 6, scope: !13468)
!13533 = !DILocation(line: 1405, column: 10, scope: !13531)
!13534 = !DILocation(line: 1405, column: 3, scope: !13531)
!13535 = !DILocation(line: 1407, column: 39, scope: !13468)
!13536 = !DILocation(line: 1407, column: 55, scope: !13468)
!13537 = !DILocation(line: 1407, column: 8, scope: !13468)
!13538 = !DILocation(line: 1407, column: 6, scope: !13468)
!13539 = !DILocation(line: 1408, column: 6, scope: !13540)
!13540 = distinct !DILexicalBlock(scope: !13468, file: !3, line: 1408, column: 6)
!13541 = !DILocation(line: 1408, column: 6, scope: !13468)
!13542 = !DILocation(line: 1409, column: 10, scope: !13540)
!13543 = !DILocation(line: 1409, column: 3, scope: !13540)
!13544 = !DILocation(line: 1411, column: 10, scope: !13468)
!13545 = !DILocation(line: 1411, column: 27, scope: !13468)
!13546 = !DILocation(line: 1411, column: 37, scope: !13468)
!13547 = !DILocation(line: 1411, column: 47, scope: !13468)
!13548 = !DILocation(line: 1411, column: 2, scope: !13468)
!13549 = !DILocation(line: 1412, column: 41, scope: !13468)
!13550 = !DILocation(line: 1412, column: 60, scope: !13468)
!13551 = !DILocation(line: 1412, column: 8, scope: !13468)
!13552 = !DILocation(line: 1412, column: 6, scope: !13468)
!13553 = !DILocation(line: 1413, column: 6, scope: !13554)
!13554 = distinct !DILexicalBlock(scope: !13468, file: !3, line: 1413, column: 6)
!13555 = !DILocation(line: 1413, column: 6, scope: !13468)
!13556 = !DILocation(line: 1414, column: 10, scope: !13554)
!13557 = !DILocation(line: 1414, column: 3, scope: !13554)
!13558 = !DILocation(line: 1416, column: 2, scope: !13468)
!13559 = !DILocation(line: 1417, column: 1, scope: !13468)
!13560 = distinct !DISubprogram(name: "mlxsw_devlink_flash_update", scope: !3, file: !3, line: 1449, type: !5703, scopeLine: 1452, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!13561 = !DILocalVariable(name: "devlink", arg: 1, scope: !13560, file: !3, line: 1449, type: !5560)
!13562 = !DILocation(line: 1449, column: 55, scope: !13560)
!13563 = !DILocalVariable(name: "params", arg: 2, scope: !13560, file: !3, line: 1450, type: !5705)
!13564 = !DILocation(line: 1450, column: 47, scope: !13560)
!13565 = !DILocalVariable(name: "extack", arg: 3, scope: !13560, file: !3, line: 1451, type: !932)
!13566 = !DILocation(line: 1451, column: 35, scope: !13560)
!13567 = !DILocalVariable(name: "mlxsw_core", scope: !13560, file: !3, line: 1453, type: !7847)
!13568 = !DILocation(line: 1453, column: 21, scope: !13560)
!13569 = !DILocation(line: 1453, column: 47, scope: !13560)
!13570 = !DILocation(line: 1453, column: 34, scope: !13560)
!13571 = !DILocation(line: 1455, column: 36, scope: !13560)
!13572 = !DILocation(line: 1455, column: 48, scope: !13560)
!13573 = !DILocation(line: 1455, column: 56, scope: !13560)
!13574 = !DILocation(line: 1455, column: 9, scope: !13560)
!13575 = !DILocation(line: 1455, column: 2, scope: !13560)
!13576 = distinct !DISubprogram(name: "mlxsw_devlink_trap_init", scope: !3, file: !3, line: 1458, type: !5713, scopeLine: 1461, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!13577 = !DILocalVariable(name: "devlink", arg: 1, scope: !13576, file: !3, line: 1458, type: !5560)
!13578 = !DILocation(line: 1458, column: 52, scope: !13576)
!13579 = !DILocalVariable(name: "trap", arg: 2, scope: !13576, file: !3, line: 1459, type: !5715)
!13580 = !DILocation(line: 1459, column: 35, scope: !13576)
!13581 = !DILocalVariable(name: "trap_ctx", arg: 3, scope: !13576, file: !3, line: 1460, type: !637)
!13582 = !DILocation(line: 1460, column: 14, scope: !13576)
!13583 = !DILocalVariable(name: "mlxsw_core", scope: !13576, file: !3, line: 1462, type: !7847)
!13584 = !DILocation(line: 1462, column: 21, scope: !13576)
!13585 = !DILocation(line: 1462, column: 47, scope: !13576)
!13586 = !DILocation(line: 1462, column: 34, scope: !13576)
!13587 = !DILocalVariable(name: "mlxsw_driver", scope: !13576, file: !3, line: 1463, type: !7851)
!13588 = !DILocation(line: 1463, column: 23, scope: !13576)
!13589 = !DILocation(line: 1463, column: 38, scope: !13576)
!13590 = !DILocation(line: 1463, column: 50, scope: !13576)
!13591 = !DILocation(line: 1465, column: 7, scope: !13592)
!13592 = distinct !DILexicalBlock(scope: !13576, file: !3, line: 1465, column: 6)
!13593 = !DILocation(line: 1465, column: 21, scope: !13592)
!13594 = !DILocation(line: 1465, column: 6, scope: !13576)
!13595 = !DILocation(line: 1466, column: 3, scope: !13592)
!13596 = !DILocation(line: 1467, column: 9, scope: !13576)
!13597 = !DILocation(line: 1467, column: 23, scope: !13576)
!13598 = !DILocation(line: 1467, column: 33, scope: !13576)
!13599 = !DILocation(line: 1467, column: 45, scope: !13576)
!13600 = !DILocation(line: 1467, column: 51, scope: !13576)
!13601 = !DILocation(line: 1467, column: 2, scope: !13576)
!13602 = !DILocation(line: 1468, column: 1, scope: !13576)
!13603 = distinct !DISubprogram(name: "mlxsw_devlink_trap_fini", scope: !3, file: !3, line: 1470, type: !5728, scopeLine: 1473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!13604 = !DILocalVariable(name: "devlink", arg: 1, scope: !13603, file: !3, line: 1470, type: !5560)
!13605 = !DILocation(line: 1470, column: 53, scope: !13603)
!13606 = !DILocalVariable(name: "trap", arg: 2, scope: !13603, file: !3, line: 1471, type: !5715)
!13607 = !DILocation(line: 1471, column: 36, scope: !13603)
!13608 = !DILocalVariable(name: "trap_ctx", arg: 3, scope: !13603, file: !3, line: 1472, type: !637)
!13609 = !DILocation(line: 1472, column: 15, scope: !13603)
!13610 = !DILocalVariable(name: "mlxsw_core", scope: !13603, file: !3, line: 1474, type: !7847)
!13611 = !DILocation(line: 1474, column: 21, scope: !13603)
!13612 = !DILocation(line: 1474, column: 47, scope: !13603)
!13613 = !DILocation(line: 1474, column: 34, scope: !13603)
!13614 = !DILocalVariable(name: "mlxsw_driver", scope: !13603, file: !3, line: 1475, type: !7851)
!13615 = !DILocation(line: 1475, column: 23, scope: !13603)
!13616 = !DILocation(line: 1475, column: 38, scope: !13603)
!13617 = !DILocation(line: 1475, column: 50, scope: !13603)
!13618 = !DILocation(line: 1477, column: 7, scope: !13619)
!13619 = distinct !DILexicalBlock(scope: !13603, file: !3, line: 1477, column: 6)
!13620 = !DILocation(line: 1477, column: 21, scope: !13619)
!13621 = !DILocation(line: 1477, column: 6, scope: !13603)
!13622 = !DILocation(line: 1478, column: 3, scope: !13619)
!13623 = !DILocation(line: 1479, column: 2, scope: !13603)
!13624 = !DILocation(line: 1479, column: 16, scope: !13603)
!13625 = !DILocation(line: 1479, column: 26, scope: !13603)
!13626 = !DILocation(line: 1479, column: 38, scope: !13603)
!13627 = !DILocation(line: 1479, column: 44, scope: !13603)
!13628 = !DILocation(line: 1480, column: 1, scope: !13603)
!13629 = distinct !DISubprogram(name: "mlxsw_devlink_trap_action_set", scope: !3, file: !3, line: 1482, type: !5732, scopeLine: 1486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!13630 = !DILocalVariable(name: "devlink", arg: 1, scope: !13629, file: !3, line: 1482, type: !5560)
!13631 = !DILocation(line: 1482, column: 58, scope: !13629)
!13632 = !DILocalVariable(name: "trap", arg: 2, scope: !13629, file: !3, line: 1483, type: !5715)
!13633 = !DILocation(line: 1483, column: 34, scope: !13629)
!13634 = !DILocalVariable(name: "action", arg: 3, scope: !13629, file: !3, line: 1484, type: !47)
!13635 = !DILocation(line: 1484, column: 32, scope: !13629)
!13636 = !DILocalVariable(name: "extack", arg: 4, scope: !13629, file: !3, line: 1485, type: !932)
!13637 = !DILocation(line: 1485, column: 31, scope: !13629)
!13638 = !DILocalVariable(name: "mlxsw_core", scope: !13629, file: !3, line: 1487, type: !7847)
!13639 = !DILocation(line: 1487, column: 21, scope: !13629)
!13640 = !DILocation(line: 1487, column: 47, scope: !13629)
!13641 = !DILocation(line: 1487, column: 34, scope: !13629)
!13642 = !DILocalVariable(name: "mlxsw_driver", scope: !13629, file: !3, line: 1488, type: !7851)
!13643 = !DILocation(line: 1488, column: 23, scope: !13629)
!13644 = !DILocation(line: 1488, column: 38, scope: !13629)
!13645 = !DILocation(line: 1488, column: 50, scope: !13629)
!13646 = !DILocation(line: 1490, column: 7, scope: !13647)
!13647 = distinct !DILexicalBlock(scope: !13629, file: !3, line: 1490, column: 6)
!13648 = !DILocation(line: 1490, column: 21, scope: !13647)
!13649 = !DILocation(line: 1490, column: 6, scope: !13629)
!13650 = !DILocation(line: 1491, column: 3, scope: !13647)
!13651 = !DILocation(line: 1492, column: 9, scope: !13629)
!13652 = !DILocation(line: 1492, column: 23, scope: !13629)
!13653 = !DILocation(line: 1492, column: 39, scope: !13629)
!13654 = !DILocation(line: 1492, column: 51, scope: !13629)
!13655 = !DILocation(line: 1492, column: 57, scope: !13629)
!13656 = !DILocation(line: 1492, column: 65, scope: !13629)
!13657 = !DILocation(line: 1492, column: 2, scope: !13629)
!13658 = !DILocation(line: 1493, column: 1, scope: !13629)
!13659 = distinct !DISubprogram(name: "mlxsw_devlink_trap_group_init", scope: !3, file: !3, line: 1496, type: !5736, scopeLine: 1498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!13660 = !DILocalVariable(name: "devlink", arg: 1, scope: !13659, file: !3, line: 1496, type: !5560)
!13661 = !DILocation(line: 1496, column: 47, scope: !13659)
!13662 = !DILocalVariable(name: "group", arg: 2, scope: !13659, file: !3, line: 1497, type: !5738)
!13663 = !DILocation(line: 1497, column: 43, scope: !13659)
!13664 = !DILocalVariable(name: "mlxsw_core", scope: !13659, file: !3, line: 1499, type: !7847)
!13665 = !DILocation(line: 1499, column: 21, scope: !13659)
!13666 = !DILocation(line: 1499, column: 47, scope: !13659)
!13667 = !DILocation(line: 1499, column: 34, scope: !13659)
!13668 = !DILocalVariable(name: "mlxsw_driver", scope: !13659, file: !3, line: 1500, type: !7851)
!13669 = !DILocation(line: 1500, column: 23, scope: !13659)
!13670 = !DILocation(line: 1500, column: 38, scope: !13659)
!13671 = !DILocation(line: 1500, column: 50, scope: !13659)
!13672 = !DILocation(line: 1502, column: 7, scope: !13673)
!13673 = distinct !DILexicalBlock(scope: !13659, file: !3, line: 1502, column: 6)
!13674 = !DILocation(line: 1502, column: 21, scope: !13673)
!13675 = !DILocation(line: 1502, column: 6, scope: !13659)
!13676 = !DILocation(line: 1503, column: 3, scope: !13673)
!13677 = !DILocation(line: 1504, column: 9, scope: !13659)
!13678 = !DILocation(line: 1504, column: 23, scope: !13659)
!13679 = !DILocation(line: 1504, column: 39, scope: !13659)
!13680 = !DILocation(line: 1504, column: 51, scope: !13659)
!13681 = !DILocation(line: 1504, column: 2, scope: !13659)
!13682 = !DILocation(line: 1505, column: 1, scope: !13659)
!13683 = distinct !DISubprogram(name: "mlxsw_devlink_trap_group_set", scope: !3, file: !3, line: 1508, type: !5748, scopeLine: 1512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!13684 = !DILocalVariable(name: "devlink", arg: 1, scope: !13683, file: !3, line: 1508, type: !5560)
!13685 = !DILocation(line: 1508, column: 46, scope: !13683)
!13686 = !DILocalVariable(name: "group", arg: 2, scope: !13683, file: !3, line: 1509, type: !5738)
!13687 = !DILocation(line: 1509, column: 42, scope: !13683)
!13688 = !DILocalVariable(name: "policer", arg: 3, scope: !13683, file: !3, line: 1510, type: !5750)
!13689 = !DILocation(line: 1510, column: 44, scope: !13683)
!13690 = !DILocalVariable(name: "extack", arg: 4, scope: !13683, file: !3, line: 1511, type: !932)
!13691 = !DILocation(line: 1511, column: 33, scope: !13683)
!13692 = !DILocalVariable(name: "mlxsw_core", scope: !13683, file: !3, line: 1513, type: !7847)
!13693 = !DILocation(line: 1513, column: 21, scope: !13683)
!13694 = !DILocation(line: 1513, column: 47, scope: !13683)
!13695 = !DILocation(line: 1513, column: 34, scope: !13683)
!13696 = !DILocalVariable(name: "mlxsw_driver", scope: !13683, file: !3, line: 1514, type: !7851)
!13697 = !DILocation(line: 1514, column: 23, scope: !13683)
!13698 = !DILocation(line: 1514, column: 38, scope: !13683)
!13699 = !DILocation(line: 1514, column: 50, scope: !13683)
!13700 = !DILocation(line: 1516, column: 7, scope: !13701)
!13701 = distinct !DILexicalBlock(scope: !13683, file: !3, line: 1516, column: 6)
!13702 = !DILocation(line: 1516, column: 21, scope: !13701)
!13703 = !DILocation(line: 1516, column: 6, scope: !13683)
!13704 = !DILocation(line: 1517, column: 3, scope: !13701)
!13705 = !DILocation(line: 1518, column: 9, scope: !13683)
!13706 = !DILocation(line: 1518, column: 23, scope: !13683)
!13707 = !DILocation(line: 1518, column: 38, scope: !13683)
!13708 = !DILocation(line: 1518, column: 50, scope: !13683)
!13709 = !DILocation(line: 1518, column: 57, scope: !13683)
!13710 = !DILocation(line: 1518, column: 66, scope: !13683)
!13711 = !DILocation(line: 1518, column: 2, scope: !13683)
!13712 = !DILocation(line: 1519, column: 1, scope: !13683)
!13713 = distinct !DISubprogram(name: "mlxsw_devlink_trap_policer_init", scope: !3, file: !3, line: 1522, type: !5767, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!13714 = !DILocalVariable(name: "devlink", arg: 1, scope: !13713, file: !3, line: 1522, type: !5560)
!13715 = !DILocation(line: 1522, column: 49, scope: !13713)
!13716 = !DILocalVariable(name: "policer", arg: 2, scope: !13713, file: !3, line: 1523, type: !5750)
!13717 = !DILocation(line: 1523, column: 40, scope: !13713)
!13718 = !DILocalVariable(name: "mlxsw_core", scope: !13713, file: !3, line: 1525, type: !7847)
!13719 = !DILocation(line: 1525, column: 21, scope: !13713)
!13720 = !DILocation(line: 1525, column: 47, scope: !13713)
!13721 = !DILocation(line: 1525, column: 34, scope: !13713)
!13722 = !DILocalVariable(name: "mlxsw_driver", scope: !13713, file: !3, line: 1526, type: !7851)
!13723 = !DILocation(line: 1526, column: 23, scope: !13713)
!13724 = !DILocation(line: 1526, column: 38, scope: !13713)
!13725 = !DILocation(line: 1526, column: 50, scope: !13713)
!13726 = !DILocation(line: 1528, column: 7, scope: !13727)
!13727 = distinct !DILexicalBlock(scope: !13713, file: !3, line: 1528, column: 6)
!13728 = !DILocation(line: 1528, column: 21, scope: !13727)
!13729 = !DILocation(line: 1528, column: 6, scope: !13713)
!13730 = !DILocation(line: 1529, column: 3, scope: !13727)
!13731 = !DILocation(line: 1530, column: 9, scope: !13713)
!13732 = !DILocation(line: 1530, column: 23, scope: !13713)
!13733 = !DILocation(line: 1530, column: 41, scope: !13713)
!13734 = !DILocation(line: 1530, column: 53, scope: !13713)
!13735 = !DILocation(line: 1530, column: 2, scope: !13713)
!13736 = !DILocation(line: 1531, column: 1, scope: !13713)
!13737 = distinct !DISubprogram(name: "mlxsw_devlink_trap_policer_fini", scope: !3, file: !3, line: 1534, type: !5771, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!13738 = !DILocalVariable(name: "devlink", arg: 1, scope: !13737, file: !3, line: 1534, type: !5560)
!13739 = !DILocation(line: 1534, column: 49, scope: !13737)
!13740 = !DILocalVariable(name: "policer", arg: 2, scope: !13737, file: !3, line: 1535, type: !5750)
!13741 = !DILocation(line: 1535, column: 40, scope: !13737)
!13742 = !DILocalVariable(name: "mlxsw_core", scope: !13737, file: !3, line: 1537, type: !7847)
!13743 = !DILocation(line: 1537, column: 21, scope: !13737)
!13744 = !DILocation(line: 1537, column: 47, scope: !13737)
!13745 = !DILocation(line: 1537, column: 34, scope: !13737)
!13746 = !DILocalVariable(name: "mlxsw_driver", scope: !13737, file: !3, line: 1538, type: !7851)
!13747 = !DILocation(line: 1538, column: 23, scope: !13737)
!13748 = !DILocation(line: 1538, column: 38, scope: !13737)
!13749 = !DILocation(line: 1538, column: 50, scope: !13737)
!13750 = !DILocation(line: 1540, column: 7, scope: !13751)
!13751 = distinct !DILexicalBlock(scope: !13737, file: !3, line: 1540, column: 6)
!13752 = !DILocation(line: 1540, column: 21, scope: !13751)
!13753 = !DILocation(line: 1540, column: 6, scope: !13737)
!13754 = !DILocation(line: 1541, column: 3, scope: !13751)
!13755 = !DILocation(line: 1542, column: 2, scope: !13737)
!13756 = !DILocation(line: 1542, column: 16, scope: !13737)
!13757 = !DILocation(line: 1542, column: 34, scope: !13737)
!13758 = !DILocation(line: 1542, column: 46, scope: !13737)
!13759 = !DILocation(line: 1543, column: 1, scope: !13737)
!13760 = distinct !DISubprogram(name: "mlxsw_devlink_trap_policer_set", scope: !3, file: !3, line: 1546, type: !5775, scopeLine: 1550, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!13761 = !DILocalVariable(name: "devlink", arg: 1, scope: !13760, file: !3, line: 1546, type: !5560)
!13762 = !DILocation(line: 1546, column: 48, scope: !13760)
!13763 = !DILocalVariable(name: "policer", arg: 2, scope: !13760, file: !3, line: 1547, type: !5750)
!13764 = !DILocation(line: 1547, column: 46, scope: !13760)
!13765 = !DILocalVariable(name: "rate", arg: 3, scope: !13760, file: !3, line: 1548, type: !377)
!13766 = !DILocation(line: 1548, column: 15, scope: !13760)
!13767 = !DILocalVariable(name: "burst", arg: 4, scope: !13760, file: !3, line: 1548, type: !377)
!13768 = !DILocation(line: 1548, column: 25, scope: !13760)
!13769 = !DILocalVariable(name: "extack", arg: 5, scope: !13760, file: !3, line: 1549, type: !932)
!13770 = !DILocation(line: 1549, column: 35, scope: !13760)
!13771 = !DILocalVariable(name: "mlxsw_core", scope: !13760, file: !3, line: 1551, type: !7847)
!13772 = !DILocation(line: 1551, column: 21, scope: !13760)
!13773 = !DILocation(line: 1551, column: 47, scope: !13760)
!13774 = !DILocation(line: 1551, column: 34, scope: !13760)
!13775 = !DILocalVariable(name: "mlxsw_driver", scope: !13760, file: !3, line: 1552, type: !7851)
!13776 = !DILocation(line: 1552, column: 23, scope: !13760)
!13777 = !DILocation(line: 1552, column: 38, scope: !13760)
!13778 = !DILocation(line: 1552, column: 50, scope: !13760)
!13779 = !DILocation(line: 1554, column: 7, scope: !13780)
!13780 = distinct !DILexicalBlock(scope: !13760, file: !3, line: 1554, column: 6)
!13781 = !DILocation(line: 1554, column: 21, scope: !13780)
!13782 = !DILocation(line: 1554, column: 6, scope: !13760)
!13783 = !DILocation(line: 1555, column: 3, scope: !13780)
!13784 = !DILocation(line: 1556, column: 9, scope: !13760)
!13785 = !DILocation(line: 1556, column: 23, scope: !13760)
!13786 = !DILocation(line: 1556, column: 40, scope: !13760)
!13787 = !DILocation(line: 1556, column: 52, scope: !13760)
!13788 = !DILocation(line: 1556, column: 61, scope: !13760)
!13789 = !DILocation(line: 1556, column: 67, scope: !13760)
!13790 = !DILocation(line: 1557, column: 12, scope: !13760)
!13791 = !DILocation(line: 1556, column: 2, scope: !13760)
!13792 = !DILocation(line: 1558, column: 1, scope: !13760)
!13793 = distinct !DISubprogram(name: "mlxsw_devlink_trap_policer_counter_get", scope: !3, file: !3, line: 1561, type: !5779, scopeLine: 1564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!13794 = !DILocalVariable(name: "devlink", arg: 1, scope: !13793, file: !3, line: 1561, type: !5560)
!13795 = !DILocation(line: 1561, column: 56, scope: !13793)
!13796 = !DILocalVariable(name: "policer", arg: 2, scope: !13793, file: !3, line: 1562, type: !5750)
!13797 = !DILocation(line: 1562, column: 47, scope: !13793)
!13798 = !DILocalVariable(name: "p_drops", arg: 3, scope: !13793, file: !3, line: 1563, type: !5417)
!13799 = !DILocation(line: 1563, column: 17, scope: !13793)
!13800 = !DILocalVariable(name: "mlxsw_core", scope: !13793, file: !3, line: 1565, type: !7847)
!13801 = !DILocation(line: 1565, column: 21, scope: !13793)
!13802 = !DILocation(line: 1565, column: 47, scope: !13793)
!13803 = !DILocation(line: 1565, column: 34, scope: !13793)
!13804 = !DILocalVariable(name: "mlxsw_driver", scope: !13793, file: !3, line: 1566, type: !7851)
!13805 = !DILocation(line: 1566, column: 23, scope: !13793)
!13806 = !DILocation(line: 1566, column: 38, scope: !13793)
!13807 = !DILocation(line: 1566, column: 50, scope: !13793)
!13808 = !DILocation(line: 1568, column: 7, scope: !13809)
!13809 = distinct !DILexicalBlock(scope: !13793, file: !3, line: 1568, column: 6)
!13810 = !DILocation(line: 1568, column: 21, scope: !13809)
!13811 = !DILocation(line: 1568, column: 6, scope: !13793)
!13812 = !DILocation(line: 1569, column: 3, scope: !13809)
!13813 = !DILocation(line: 1570, column: 9, scope: !13793)
!13814 = !DILocation(line: 1570, column: 23, scope: !13793)
!13815 = !DILocation(line: 1570, column: 48, scope: !13793)
!13816 = !DILocation(line: 1570, column: 60, scope: !13793)
!13817 = !DILocation(line: 1571, column: 13, scope: !13793)
!13818 = !DILocation(line: 1570, column: 2, scope: !13793)
!13819 = !DILocation(line: 1572, column: 1, scope: !13793)
!13820 = distinct !DISubprogram(name: "__dl_port", scope: !3, file: !3, line: 1235, type: !13821, scopeLine: 1236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!13821 = !DISubroutineType(types: !13822)
!13822 = !{!637, !5552}
!13823 = !DILocalVariable(name: "devlink_port", arg: 1, scope: !13820, file: !3, line: 1235, type: !5552)
!13824 = !DILocation(line: 1235, column: 45, scope: !13820)
!13825 = !DILocalVariable(name: "__mptr", scope: !13826, file: !3, line: 1237, type: !637)
!13826 = distinct !DILexicalBlock(scope: !13820, file: !3, line: 1237, column: 9)
!13827 = !DILocation(line: 1237, column: 9, scope: !13826)
!13828 = !DILocation(line: 1237, column: 9, scope: !13829)
!13829 = distinct !DILexicalBlock(scope: !13826, file: !3, line: 1237, column: 9)
!13830 = !DILocation(line: 1237, column: 9, scope: !13820)
!13831 = !DILocation(line: 1237, column: 2, scope: !13820)
!13832 = distinct !DISubprogram(name: "mlxsw_core_port_check", scope: !3, file: !3, line: 59, type: !13833, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!13833 = !DISubroutineType(types: !13834)
!13834 = !{!817, !7919}
!13835 = !DILocalVariable(name: "mlxsw_core_port", arg: 1, scope: !13832, file: !3, line: 59, type: !7919)
!13836 = !DILocation(line: 59, column: 59, scope: !13832)
!13837 = !DILocation(line: 61, column: 9, scope: !13832)
!13838 = !DILocation(line: 61, column: 26, scope: !13832)
!13839 = !DILocation(line: 61, column: 43, scope: !13832)
!13840 = !DILocation(line: 61, column: 2, scope: !13832)
!13841 = distinct !DISubprogram(name: "mlxsw_reg_mgir_pack", scope: !7404, file: !7404, line: 9100, type: !12058, scopeLine: 9101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!13842 = !DILocalVariable(name: "payload", arg: 1, scope: !13841, file: !7404, line: 9100, type: !1084)
!13843 = !DILocation(line: 9100, column: 46, scope: !13841)
!13844 = !DILocation(line: 9102, column: 2, scope: !13841)
!13845 = !DILocation(line: 9103, column: 1, scope: !13841)
!13846 = distinct !DISubprogram(name: "mlxsw_reg_mgir_unpack", scope: !7404, file: !7404, line: 9106, type: !13847, scopeLine: 9108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!13847 = !DISubroutineType(types: !13848)
!13848 = !{null, !1084, !2562, !1084, !2562, !2562, !2562}
!13849 = !DILocalVariable(name: "payload", arg: 1, scope: !13846, file: !7404, line: 9106, type: !1084)
!13850 = !DILocation(line: 9106, column: 29, scope: !13846)
!13851 = !DILocalVariable(name: "hw_rev", arg: 2, scope: !13846, file: !7404, line: 9106, type: !2562)
!13852 = !DILocation(line: 9106, column: 43, scope: !13846)
!13853 = !DILocalVariable(name: "fw_info_psid", arg: 3, scope: !13846, file: !7404, line: 9106, type: !1084)
!13854 = !DILocation(line: 9106, column: 57, scope: !13846)
!13855 = !DILocalVariable(name: "fw_major", arg: 4, scope: !13846, file: !7404, line: 9107, type: !2562)
!13856 = !DILocation(line: 9107, column: 14, scope: !13846)
!13857 = !DILocalVariable(name: "fw_minor", arg: 5, scope: !13846, file: !7404, line: 9107, type: !2562)
!13858 = !DILocation(line: 9107, column: 29, scope: !13846)
!13859 = !DILocalVariable(name: "fw_sub_minor", arg: 6, scope: !13846, file: !7404, line: 9107, type: !2562)
!13860 = !DILocation(line: 9107, column: 44, scope: !13846)
!13861 = !DILocation(line: 9109, column: 58, scope: !13846)
!13862 = !DILocation(line: 9109, column: 12, scope: !13846)
!13863 = !DILocation(line: 9109, column: 3, scope: !13846)
!13864 = !DILocation(line: 9109, column: 10, scope: !13846)
!13865 = !DILocation(line: 9110, column: 42, scope: !13846)
!13866 = !DILocation(line: 9110, column: 51, scope: !13846)
!13867 = !DILocation(line: 9110, column: 2, scope: !13846)
!13868 = !DILocation(line: 9111, column: 56, scope: !13846)
!13869 = !DILocation(line: 9111, column: 14, scope: !13846)
!13870 = !DILocation(line: 9111, column: 3, scope: !13846)
!13871 = !DILocation(line: 9111, column: 12, scope: !13846)
!13872 = !DILocation(line: 9112, column: 56, scope: !13846)
!13873 = !DILocation(line: 9112, column: 14, scope: !13846)
!13874 = !DILocation(line: 9112, column: 3, scope: !13846)
!13875 = !DILocation(line: 9112, column: 12, scope: !13846)
!13876 = !DILocation(line: 9113, column: 64, scope: !13846)
!13877 = !DILocation(line: 9113, column: 18, scope: !13846)
!13878 = !DILocation(line: 9113, column: 3, scope: !13846)
!13879 = !DILocation(line: 9113, column: 16, scope: !13846)
!13880 = !DILocation(line: 9114, column: 1, scope: !13846)
!13881 = distinct !DISubprogram(name: "mlxsw_reg_mgir_hw_info_device_hw_revision_get", scope: !7404, file: !7404, line: 9075, type: !13882, scopeLine: 9075, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!13882 = !DISubroutineType(types: !13883)
!13883 = !{!1033, !338}
!13884 = !DILocalVariable(name: "buf", arg: 1, scope: !13881, file: !7404, line: 9075, type: !338)
!13885 = !DILocation(line: 9075, column: 1, scope: !13881)
!13886 = distinct !DISubprogram(name: "mlxsw_reg_mgir_fw_info_psid_memcpy_from", scope: !7404, file: !7404, line: 9083, type: !13887, scopeLine: 9083, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!13887 = !DISubroutineType(types: !13888)
!13888 = !{null, !338, !1084}
!13889 = !DILocalVariable(name: "buf", arg: 1, scope: !13886, file: !7404, line: 9083, type: !338)
!13890 = !DILocation(line: 9083, column: 1, scope: !13886)
!13891 = !DILocalVariable(name: "dst", arg: 2, scope: !13886, file: !7404, line: 9083, type: !1084)
!13892 = distinct !DISubprogram(name: "mlxsw_reg_mgir_fw_info_extended_major_get", scope: !7404, file: !7404, line: 9088, type: !13882, scopeLine: 9088, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!13893 = !DILocalVariable(name: "buf", arg: 1, scope: !13892, file: !7404, line: 9088, type: !338)
!13894 = !DILocation(line: 9088, column: 1, scope: !13892)
!13895 = distinct !DISubprogram(name: "mlxsw_reg_mgir_fw_info_extended_minor_get", scope: !7404, file: !7404, line: 9093, type: !13882, scopeLine: 9093, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!13896 = !DILocalVariable(name: "buf", arg: 1, scope: !13895, file: !7404, line: 9093, type: !338)
!13897 = !DILocation(line: 9093, column: 1, scope: !13895)
!13898 = distinct !DISubprogram(name: "mlxsw_reg_mgir_fw_info_extended_sub_minor_get", scope: !7404, file: !7404, line: 9098, type: !13882, scopeLine: 9098, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!13899 = !DILocalVariable(name: "buf", arg: 1, scope: !13898, file: !7404, line: 9098, type: !338)
!13900 = !DILocation(line: 9098, column: 1, scope: !13898)
!13901 = distinct !DISubprogram(name: "__mlxsw_item_get32", scope: !8318, file: !8318, line: 111, type: !13902, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!13902 = !DISubroutineType(types: !13903)
!13903 = !{!1033, !338, !13904, !522}
!13904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13905, size: 64)
!13905 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8317)
!13906 = !DILocalVariable(name: "buf", arg: 1, scope: !13901, file: !8318, line: 111, type: !338)
!13907 = !DILocation(line: 111, column: 50, scope: !13901)
!13908 = !DILocalVariable(name: "item", arg: 2, scope: !13901, file: !8318, line: 112, type: !13904)
!13909 = !DILocation(line: 112, column: 35, scope: !13901)
!13910 = !DILocalVariable(name: "index", arg: 3, scope: !13901, file: !8318, line: 113, type: !522)
!13911 = !DILocation(line: 113, column: 25, scope: !13901)
!13912 = !DILocalVariable(name: "offset", scope: !13901, file: !8318, line: 115, type: !7)
!13913 = !DILocation(line: 115, column: 15, scope: !13901)
!13914 = !DILocation(line: 115, column: 44, scope: !13901)
!13915 = !DILocation(line: 115, column: 50, scope: !13901)
!13916 = !DILocation(line: 115, column: 24, scope: !13901)
!13917 = !DILocalVariable(name: "b", scope: !13901, file: !8318, line: 116, type: !8177)
!13918 = !DILocation(line: 116, column: 10, scope: !13901)
!13919 = !DILocation(line: 116, column: 25, scope: !13901)
!13920 = !DILocation(line: 116, column: 14, scope: !13901)
!13921 = !DILocalVariable(name: "tmp", scope: !13901, file: !8318, line: 117, type: !1033)
!13922 = !DILocation(line: 117, column: 6, scope: !13901)
!13923 = !DILocation(line: 119, column: 8, scope: !13901)
!13924 = !DILocation(line: 119, column: 6, scope: !13901)
!13925 = !DILocation(line: 120, column: 10, scope: !13901)
!13926 = !DILocation(line: 120, column: 16, scope: !13901)
!13927 = !DILocation(line: 120, column: 6, scope: !13901)
!13928 = !DILocation(line: 121, column: 9, scope: !13901)
!13929 = !DILocation(line: 121, column: 6, scope: !13901)
!13930 = !DILocation(line: 122, column: 6, scope: !13931)
!13931 = distinct !DILexicalBlock(scope: !13901, file: !8318, line: 122, column: 6)
!13932 = !DILocation(line: 122, column: 12, scope: !13931)
!13933 = !DILocation(line: 122, column: 6, scope: !13901)
!13934 = !DILocation(line: 123, column: 11, scope: !13931)
!13935 = !DILocation(line: 123, column: 17, scope: !13931)
!13936 = !DILocation(line: 123, column: 7, scope: !13931)
!13937 = !DILocation(line: 123, column: 3, scope: !13931)
!13938 = !DILocation(line: 124, column: 9, scope: !13901)
!13939 = !DILocation(line: 124, column: 2, scope: !13901)
!13940 = distinct !DISubprogram(name: "__mlxsw_item_offset", scope: !8318, file: !8318, line: 26, type: !13941, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!13941 = !DISubroutineType(types: !13942)
!13942 = !{!7, !13904, !522, !1085}
!13943 = !DILocalVariable(name: "item", arg: 1, scope: !13940, file: !8318, line: 26, type: !13904)
!13944 = !DILocation(line: 26, column: 46, scope: !13940)
!13945 = !DILocalVariable(name: "index", arg: 2, scope: !13940, file: !8318, line: 26, type: !522)
!13946 = !DILocation(line: 26, column: 67, scope: !13940)
!13947 = !DILocalVariable(name: "typesize", arg: 3, scope: !13940, file: !8318, line: 27, type: !1085)
!13948 = !DILocation(line: 27, column: 14, scope: !13940)
!13949 = !DILocation(line: 29, column: 2, scope: !13940)
!13950 = !DILocation(line: 29, column: 2, scope: !13951)
!13951 = distinct !DILexicalBlock(scope: !13952, file: !8318, line: 29, column: 2)
!13952 = distinct !DILexicalBlock(scope: !13940, file: !8318, line: 29, column: 2)
!13953 = !DILocation(line: 0, scope: !13951)
!13954 = !DILocation(line: 29, column: 2, scope: !13952)
!13955 = !DILocation(line: 29, column: 2, scope: !13956)
!13956 = distinct !DILexicalBlock(scope: !13951, file: !8318, line: 29, column: 2)
!13957 = !DILocation(line: 29, column: 2, scope: !13958)
!13958 = distinct !DILexicalBlock(scope: !13956, file: !8318, line: 29, column: 2)
!13959 = !DILocation(line: 29, column: 2, scope: !13960)
!13960 = distinct !DILexicalBlock(scope: !13956, file: !8318, line: 29, column: 2)
!13961 = !{i32 -2139419029, i32 -2139419000, i32 -2139418954, i32 -2139418896, i32 -2139418842, i32 -2139418788, i32 -2139418733, i32 -2139418702}
!13962 = !DILocation(line: 29, column: 2, scope: !13963)
!13963 = distinct !DILexicalBlock(scope: !13964, file: !8318, line: 29, column: 2)
!13964 = distinct !DILexicalBlock(scope: !13956, file: !8318, line: 29, column: 2)
!13965 = !{i32 -2139418238, i32 -2139418231, i32 -2139418177, i32 -2139418146, i32 -2139418116}
!13966 = !DILocation(line: 29, column: 2, scope: !13964)
!13967 = !DILocation(line: 30, column: 6, scope: !13968)
!13968 = distinct !DILexicalBlock(scope: !13940, file: !8318, line: 30, column: 6)
!13969 = !DILocation(line: 30, column: 12, scope: !13968)
!13970 = !DILocation(line: 30, column: 21, scope: !13968)
!13971 = !DILocation(line: 30, column: 19, scope: !13968)
!13972 = !DILocation(line: 30, column: 30, scope: !13968)
!13973 = !DILocation(line: 30, column: 35, scope: !13968)
!13974 = !DILocation(line: 31, column: 6, scope: !13968)
!13975 = !DILocation(line: 31, column: 12, scope: !13968)
!13976 = !DILocation(line: 31, column: 19, scope: !13968)
!13977 = !DILocation(line: 31, column: 17, scope: !13968)
!13978 = !DILocation(line: 31, column: 28, scope: !13968)
!13979 = !DILocation(line: 31, column: 33, scope: !13968)
!13980 = !DILocation(line: 32, column: 6, scope: !13968)
!13981 = !DILocation(line: 32, column: 12, scope: !13968)
!13982 = !DILocation(line: 32, column: 29, scope: !13968)
!13983 = !DILocation(line: 32, column: 27, scope: !13968)
!13984 = !DILocation(line: 32, column: 38, scope: !13968)
!13985 = !DILocation(line: 30, column: 6, scope: !13940)
!13986 = !DILocation(line: 33, column: 3, scope: !13987)
!13987 = distinct !DILexicalBlock(scope: !13968, file: !8318, line: 32, column: 44)
!13988 = !DILocation(line: 36, column: 3, scope: !13987)
!13989 = !DILocation(line: 36, column: 3, scope: !13990)
!13990 = distinct !DILexicalBlock(scope: !13987, file: !8318, line: 36, column: 3)
!13991 = !DILocation(line: 36, column: 3, scope: !13992)
!13992 = distinct !DILexicalBlock(scope: !13990, file: !8318, line: 36, column: 3)
!13993 = !DILocation(line: 36, column: 3, scope: !13994)
!13994 = distinct !DILexicalBlock(scope: !13990, file: !8318, line: 36, column: 3)
!13995 = !{i32 -2139417607, i32 -2139417578, i32 -2139417532, i32 -2139417474, i32 -2139417420, i32 -2139417366, i32 -2139417311, i32 -2139417280}
!13996 = !DILocation(line: 36, column: 3, scope: !13997)
!13997 = distinct !DILexicalBlock(scope: !13998, file: !8318, line: 36, column: 3)
!13998 = distinct !DILexicalBlock(scope: !13990, file: !8318, line: 36, column: 3)
!13999 = !{i32 -2139416816, i32 -2139416809, i32 -2139416755, i32 -2139416724, i32 -2139416694}
!14000 = !DILocation(line: 36, column: 3, scope: !13998)
!14001 = !DILocation(line: 37, column: 2, scope: !13987)
!14002 = !DILocation(line: 39, column: 11, scope: !13940)
!14003 = !DILocation(line: 39, column: 17, scope: !13940)
!14004 = !DILocation(line: 39, column: 26, scope: !13940)
!14005 = !DILocation(line: 39, column: 32, scope: !13940)
!14006 = !DILocation(line: 39, column: 39, scope: !13940)
!14007 = !DILocation(line: 39, column: 37, scope: !13940)
!14008 = !DILocation(line: 39, column: 24, scope: !13940)
!14009 = !DILocation(line: 39, column: 47, scope: !13940)
!14010 = !DILocation(line: 39, column: 53, scope: !13940)
!14011 = !DILocation(line: 39, column: 45, scope: !13940)
!14012 = !DILocation(line: 39, column: 10, scope: !13940)
!14013 = !DILocation(line: 40, column: 3, scope: !13940)
!14014 = !DILocation(line: 39, column: 69, scope: !13940)
!14015 = !DILocation(line: 39, column: 9, scope: !13940)
!14016 = !DILocation(line: 39, column: 2, scope: !13940)
!14017 = distinct !DISubprogram(name: "__fswab32", scope: !14018, file: !14018, line: 57, type: !14019, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14018 = !DIFile(filename: "./include/uapi/linux/swab.h", directory: "/home/lizy2001/genbc/linux")
!14019 = !DISubroutineType(types: !14020)
!14020 = !{!539, !539}
!14021 = !DILocalVariable(name: "val", arg: 1, scope: !14017, file: !14018, line: 57, type: !539)
!14022 = !DILocation(line: 57, column: 57, scope: !14017)
!14023 = !DILocation(line: 60, column: 23, scope: !14017)
!14024 = !DILocation(line: 60, column: 9, scope: !14017)
!14025 = !DILocation(line: 60, column: 2, scope: !14017)
!14026 = distinct !DISubprogram(name: "__arch_swab32", scope: !14027, file: !14027, line: 8, type: !14019, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14027 = !DIFile(filename: "./arch/x86/include/uapi/asm/swab.h", directory: "/home/lizy2001/genbc/linux")
!14028 = !DILocalVariable(name: "val", arg: 1, scope: !14026, file: !14027, line: 8, type: !539)
!14029 = !DILocation(line: 8, column: 61, scope: !14026)
!14030 = !DILocation(line: 10, column: 38, scope: !14026)
!14031 = !DILocation(line: 10, column: 2, scope: !14026)
!14032 = !{i32 447761}
!14033 = !DILocation(line: 11, column: 9, scope: !14026)
!14034 = !DILocation(line: 11, column: 2, scope: !14026)
!14035 = distinct !DISubprogram(name: "__mlxsw_item_memcpy_from", scope: !8318, file: !8318, line: 178, type: !14036, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14036 = !DISubroutineType(types: !14037)
!14037 = !{null, !338, !1084, !13904, !522}
!14038 = !DILocalVariable(name: "buf", arg: 1, scope: !14035, file: !8318, line: 178, type: !338)
!14039 = !DILocation(line: 178, column: 57, scope: !14035)
!14040 = !DILocalVariable(name: "dst", arg: 2, scope: !14035, file: !8318, line: 178, type: !1084)
!14041 = !DILocation(line: 178, column: 68, scope: !14035)
!14042 = !DILocalVariable(name: "item", arg: 3, scope: !14035, file: !8318, line: 179, type: !13904)
!14043 = !DILocation(line: 179, column: 35, scope: !14035)
!14044 = !DILocalVariable(name: "index", arg: 4, scope: !14035, file: !8318, line: 180, type: !522)
!14045 = !DILocation(line: 180, column: 25, scope: !14035)
!14046 = !DILocalVariable(name: "offset", scope: !14035, file: !8318, line: 182, type: !7)
!14047 = !DILocation(line: 182, column: 15, scope: !14035)
!14048 = !DILocation(line: 182, column: 44, scope: !14035)
!14049 = !DILocation(line: 182, column: 50, scope: !14035)
!14050 = !DILocation(line: 182, column: 24, scope: !14035)
!14051 = !DILocation(line: 184, column: 9, scope: !14035)
!14052 = !DILocation(line: 184, column: 15, scope: !14035)
!14053 = !DILocation(line: 184, column: 19, scope: !14035)
!14054 = !DILocation(line: 184, column: 28, scope: !14035)
!14055 = !DILocation(line: 184, column: 34, scope: !14035)
!14056 = !DILocation(line: 184, column: 39, scope: !14035)
!14057 = !DILocation(line: 184, column: 2, scope: !14035)
!14058 = !DILocation(line: 185, column: 1, scope: !14035)
!14059 = distinct !DISubprogram(name: "mlxsw_core_fw_flash_update", scope: !3, file: !3, line: 1116, type: !14060, scopeLine: 1119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14060 = !DISubroutineType(types: !14061)
!14061 = !{!78, !7847, !5705, !932}
!14062 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !14059, file: !3, line: 1116, type: !7847)
!14063 = !DILocation(line: 1116, column: 58, scope: !14059)
!14064 = !DILocalVariable(name: "params", arg: 2, scope: !14059, file: !3, line: 1117, type: !5705)
!14065 = !DILocation(line: 1117, column: 47, scope: !14059)
!14066 = !DILocalVariable(name: "extack", arg: 3, scope: !14059, file: !3, line: 1118, type: !932)
!14067 = !DILocation(line: 1118, column: 35, scope: !14059)
!14068 = !DILocalVariable(name: "firmware", scope: !14059, file: !3, line: 1120, type: !12731)
!14069 = !DILocation(line: 1120, column: 25, scope: !14059)
!14070 = !DILocalVariable(name: "err", scope: !14059, file: !3, line: 1121, type: !78)
!14071 = !DILocation(line: 1121, column: 6, scope: !14059)
!14072 = !DILocation(line: 1123, column: 43, scope: !14059)
!14073 = !DILocation(line: 1123, column: 51, scope: !14059)
!14074 = !DILocation(line: 1123, column: 62, scope: !14059)
!14075 = !DILocation(line: 1123, column: 74, scope: !14059)
!14076 = !DILocation(line: 1123, column: 84, scope: !14059)
!14077 = !DILocation(line: 1123, column: 8, scope: !14059)
!14078 = !DILocation(line: 1123, column: 6, scope: !14059)
!14079 = !DILocation(line: 1124, column: 6, scope: !14080)
!14080 = distinct !DILexicalBlock(scope: !14059, file: !3, line: 1124, column: 6)
!14081 = !DILocation(line: 1124, column: 6, scope: !14059)
!14082 = !DILocation(line: 1125, column: 10, scope: !14080)
!14083 = !DILocation(line: 1125, column: 3, scope: !14080)
!14084 = !DILocation(line: 1126, column: 28, scope: !14059)
!14085 = !DILocation(line: 1126, column: 40, scope: !14059)
!14086 = !DILocation(line: 1126, column: 50, scope: !14059)
!14087 = !DILocation(line: 1126, column: 8, scope: !14059)
!14088 = !DILocation(line: 1126, column: 6, scope: !14059)
!14089 = !DILocation(line: 1127, column: 19, scope: !14059)
!14090 = !DILocation(line: 1127, column: 2, scope: !14059)
!14091 = !DILocation(line: 1129, column: 9, scope: !14059)
!14092 = !DILocation(line: 1129, column: 2, scope: !14059)
!14093 = !DILocation(line: 1130, column: 1, scope: !14059)
!14094 = distinct !DISubprogram(name: "mlxsw_core_fw_flash", scope: !3, file: !3, line: 1038, type: !14095, scopeLine: 1040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14095 = !DISubroutineType(types: !14096)
!14096 = !{!78, !7847, !12731, !932}
!14097 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !14094, file: !3, line: 1038, type: !7847)
!14098 = !DILocation(line: 1038, column: 51, scope: !14094)
!14099 = !DILocalVariable(name: "firmware", arg: 2, scope: !14094, file: !3, line: 1038, type: !12731)
!14100 = !DILocation(line: 1038, column: 86, scope: !14094)
!14101 = !DILocalVariable(name: "extack", arg: 3, scope: !14094, file: !3, line: 1039, type: !932)
!14102 = !DILocation(line: 1039, column: 35, scope: !14094)
!14103 = !DILocalVariable(name: "mlxsw_core_fw_info", scope: !14094, file: !3, line: 1041, type: !8179)
!14104 = !DILocation(line: 1041, column: 28, scope: !14094)
!14105 = !DILocation(line: 1041, column: 49, scope: !14094)
!14106 = !DILocation(line: 1042, column: 16, scope: !14094)
!14107 = !DILocation(line: 1044, column: 12, scope: !14094)
!14108 = !DILocation(line: 1044, column: 24, scope: !14094)
!14109 = !DILocation(line: 1044, column: 34, scope: !14094)
!14110 = !DILocation(line: 1045, column: 24, scope: !14094)
!14111 = !DILocation(line: 1045, column: 36, scope: !14094)
!14112 = !DILocation(line: 1045, column: 46, scope: !14094)
!14113 = !DILocation(line: 1045, column: 17, scope: !14094)
!14114 = !DILocation(line: 1046, column: 31, scope: !14094)
!14115 = !DILocation(line: 1046, column: 15, scope: !14094)
!14116 = !DILocation(line: 1048, column: 17, scope: !14094)
!14117 = !DILocalVariable(name: "err", scope: !14094, file: !3, line: 1050, type: !78)
!14118 = !DILocation(line: 1050, column: 6, scope: !14094)
!14119 = !DILocation(line: 1052, column: 2, scope: !14094)
!14120 = !DILocation(line: 1052, column: 14, scope: !14094)
!14121 = !DILocation(line: 1052, column: 35, scope: !14094)
!14122 = !DILocation(line: 1053, column: 49, scope: !14094)
!14123 = !DILocation(line: 1053, column: 60, scope: !14094)
!14124 = !DILocation(line: 1053, column: 70, scope: !14094)
!14125 = !DILocation(line: 1053, column: 8, scope: !14094)
!14126 = !DILocation(line: 1053, column: 6, scope: !14094)
!14127 = !DILocation(line: 1054, column: 2, scope: !14094)
!14128 = !DILocation(line: 1054, column: 14, scope: !14094)
!14129 = !DILocation(line: 1054, column: 35, scope: !14094)
!14130 = !DILocation(line: 1056, column: 9, scope: !14094)
!14131 = !DILocation(line: 1056, column: 2, scope: !14094)
!14132 = distinct !DISubprogram(name: "mlxsw_core_fw_component_query", scope: !3, file: !3, line: 889, type: !8191, scopeLine: 892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14133 = !DILocalVariable(name: "mlxfw_dev", arg: 1, scope: !14132, file: !3, line: 889, type: !8193)
!14134 = !DILocation(line: 889, column: 60, scope: !14132)
!14135 = !DILocalVariable(name: "component_index", arg: 2, scope: !14132, file: !3, line: 890, type: !627)
!14136 = !DILocation(line: 890, column: 11, scope: !14132)
!14137 = !DILocalVariable(name: "p_max_size", arg: 3, scope: !14132, file: !3, line: 890, type: !2562)
!14138 = !DILocation(line: 890, column: 33, scope: !14132)
!14139 = !DILocalVariable(name: "p_align_bits", arg: 4, scope: !14132, file: !3, line: 891, type: !839)
!14140 = !DILocation(line: 891, column: 11, scope: !14132)
!14141 = !DILocalVariable(name: "p_max_write_size", arg: 5, scope: !14132, file: !3, line: 891, type: !5652)
!14142 = !DILocation(line: 891, column: 30, scope: !14132)
!14143 = !DILocalVariable(name: "mlxsw_core_fw_info", scope: !14132, file: !3, line: 893, type: !8178)
!14144 = !DILocation(line: 893, column: 29, scope: !14132)
!14145 = !DILocalVariable(name: "__mptr", scope: !14146, file: !3, line: 894, type: !637)
!14146 = distinct !DILexicalBlock(scope: !14132, file: !3, line: 894, column: 3)
!14147 = !DILocation(line: 894, column: 3, scope: !14146)
!14148 = !DILocation(line: 894, column: 3, scope: !14149)
!14149 = distinct !DILexicalBlock(scope: !14146, file: !3, line: 894, column: 3)
!14150 = !DILocalVariable(name: "mlxsw_core", scope: !14132, file: !3, line: 895, type: !7847)
!14151 = !DILocation(line: 895, column: 21, scope: !14132)
!14152 = !DILocation(line: 895, column: 34, scope: !14132)
!14153 = !DILocation(line: 895, column: 54, scope: !14132)
!14154 = !DILocalVariable(name: "mcqi_pl", scope: !14132, file: !3, line: 896, type: !14155)
!14155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 352, elements: !2310)
!14156 = !DILocation(line: 896, column: 7, scope: !14132)
!14157 = !DILocalVariable(name: "err", scope: !14132, file: !3, line: 897, type: !78)
!14158 = !DILocation(line: 897, column: 6, scope: !14132)
!14159 = !DILocation(line: 899, column: 22, scope: !14132)
!14160 = !DILocation(line: 899, column: 31, scope: !14132)
!14161 = !DILocation(line: 899, column: 2, scope: !14132)
!14162 = !DILocation(line: 900, column: 24, scope: !14132)
!14163 = !DILocation(line: 900, column: 53, scope: !14132)
!14164 = !DILocation(line: 900, column: 8, scope: !14132)
!14165 = !DILocation(line: 900, column: 6, scope: !14132)
!14166 = !DILocation(line: 901, column: 6, scope: !14167)
!14167 = distinct !DILexicalBlock(scope: !14132, file: !3, line: 901, column: 6)
!14168 = !DILocation(line: 901, column: 6, scope: !14132)
!14169 = !DILocation(line: 902, column: 10, scope: !14167)
!14170 = !DILocation(line: 902, column: 3, scope: !14167)
!14171 = !DILocation(line: 903, column: 24, scope: !14132)
!14172 = !DILocation(line: 903, column: 33, scope: !14132)
!14173 = !DILocation(line: 903, column: 45, scope: !14132)
!14174 = !DILocation(line: 903, column: 59, scope: !14132)
!14175 = !DILocation(line: 903, column: 2, scope: !14132)
!14176 = !DILocalVariable(name: "__UNIQUE_ID___x347", scope: !14177, file: !3, line: 905, type: !840)
!14177 = distinct !DILexicalBlock(scope: !14132, file: !3, line: 905, column: 18)
!14178 = !DILocation(line: 905, column: 18, scope: !14177)
!14179 = !DILocalVariable(name: "__UNIQUE_ID___y348", scope: !14177, file: !3, line: 905, type: !840)
!14180 = !DILocation(line: 905, column: 18, scope: !14132)
!14181 = !DILocation(line: 905, column: 3, scope: !14132)
!14182 = !DILocation(line: 905, column: 16, scope: !14132)
!14183 = !DILocalVariable(name: "__UNIQUE_ID___x349", scope: !14184, file: !3, line: 906, type: !627)
!14184 = distinct !DILexicalBlock(scope: !14132, file: !3, line: 906, column: 22)
!14185 = !DILocation(line: 906, column: 22, scope: !14184)
!14186 = !DILocalVariable(name: "__UNIQUE_ID___y350", scope: !14184, file: !3, line: 906, type: !627)
!14187 = !DILocation(line: 906, column: 22, scope: !14132)
!14188 = !DILocation(line: 906, column: 3, scope: !14132)
!14189 = !DILocation(line: 906, column: 20, scope: !14132)
!14190 = !DILocation(line: 907, column: 2, scope: !14132)
!14191 = !DILocation(line: 908, column: 1, scope: !14132)
!14192 = distinct !DISubprogram(name: "mlxsw_core_fw_fsm_lock", scope: !3, file: !3, line: 910, type: !8196, scopeLine: 911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14193 = !DILocalVariable(name: "mlxfw_dev", arg: 1, scope: !14192, file: !3, line: 910, type: !8193)
!14194 = !DILocation(line: 910, column: 53, scope: !14192)
!14195 = !DILocalVariable(name: "fwhandle", arg: 2, scope: !14192, file: !3, line: 910, type: !2562)
!14196 = !DILocation(line: 910, column: 69, scope: !14192)
!14197 = !DILocalVariable(name: "mlxsw_core_fw_info", scope: !14192, file: !3, line: 912, type: !8178)
!14198 = !DILocation(line: 912, column: 29, scope: !14192)
!14199 = !DILocalVariable(name: "__mptr", scope: !14200, file: !3, line: 913, type: !637)
!14200 = distinct !DILexicalBlock(scope: !14192, file: !3, line: 913, column: 3)
!14201 = !DILocation(line: 913, column: 3, scope: !14200)
!14202 = !DILocation(line: 913, column: 3, scope: !14203)
!14203 = distinct !DILexicalBlock(scope: !14200, file: !3, line: 913, column: 3)
!14204 = !DILocalVariable(name: "mlxsw_core", scope: !14192, file: !3, line: 914, type: !7847)
!14205 = !DILocation(line: 914, column: 21, scope: !14192)
!14206 = !DILocation(line: 914, column: 34, scope: !14192)
!14207 = !DILocation(line: 914, column: 54, scope: !14192)
!14208 = !DILocalVariable(name: "mcc_pl", scope: !14192, file: !3, line: 915, type: !14209)
!14209 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 224, elements: !3141)
!14210 = !DILocation(line: 915, column: 7, scope: !14192)
!14211 = !DILocalVariable(name: "control_state", scope: !14192, file: !3, line: 916, type: !840)
!14212 = !DILocation(line: 916, column: 5, scope: !14192)
!14213 = !DILocalVariable(name: "err", scope: !14192, file: !3, line: 917, type: !78)
!14214 = !DILocation(line: 917, column: 6, scope: !14192)
!14215 = !DILocation(line: 919, column: 21, scope: !14192)
!14216 = !DILocation(line: 919, column: 2, scope: !14192)
!14217 = !DILocation(line: 920, column: 24, scope: !14192)
!14218 = !DILocation(line: 920, column: 52, scope: !14192)
!14219 = !DILocation(line: 920, column: 8, scope: !14192)
!14220 = !DILocation(line: 920, column: 6, scope: !14192)
!14221 = !DILocation(line: 921, column: 6, scope: !14222)
!14222 = distinct !DILexicalBlock(scope: !14192, file: !3, line: 921, column: 6)
!14223 = !DILocation(line: 921, column: 6, scope: !14192)
!14224 = !DILocation(line: 922, column: 10, scope: !14222)
!14225 = !DILocation(line: 922, column: 3, scope: !14222)
!14226 = !DILocation(line: 924, column: 23, scope: !14192)
!14227 = !DILocation(line: 924, column: 31, scope: !14192)
!14228 = !DILocation(line: 924, column: 2, scope: !14192)
!14229 = !DILocation(line: 925, column: 6, scope: !14230)
!14230 = distinct !DILexicalBlock(scope: !14192, file: !3, line: 925, column: 6)
!14231 = !DILocation(line: 925, column: 20, scope: !14230)
!14232 = !DILocation(line: 925, column: 6, scope: !14192)
!14233 = !DILocation(line: 926, column: 3, scope: !14230)
!14234 = !DILocation(line: 928, column: 21, scope: !14192)
!14235 = !DILocation(line: 928, column: 79, scope: !14192)
!14236 = !DILocation(line: 928, column: 78, scope: !14192)
!14237 = !DILocation(line: 928, column: 2, scope: !14192)
!14238 = !DILocation(line: 929, column: 25, scope: !14192)
!14239 = !DILocation(line: 929, column: 53, scope: !14192)
!14240 = !DILocation(line: 929, column: 9, scope: !14192)
!14241 = !DILocation(line: 929, column: 2, scope: !14192)
!14242 = !DILocation(line: 930, column: 1, scope: !14192)
!14243 = distinct !DISubprogram(name: "mlxsw_core_fw_fsm_component_update", scope: !3, file: !3, line: 932, type: !8200, scopeLine: 934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14244 = !DILocalVariable(name: "mlxfw_dev", arg: 1, scope: !14243, file: !3, line: 932, type: !8193)
!14245 = !DILocation(line: 932, column: 65, scope: !14243)
!14246 = !DILocalVariable(name: "fwhandle", arg: 2, scope: !14243, file: !3, line: 932, type: !1033)
!14247 = !DILocation(line: 932, column: 80, scope: !14243)
!14248 = !DILocalVariable(name: "component_index", arg: 3, scope: !14243, file: !3, line: 933, type: !627)
!14249 = !DILocation(line: 933, column: 16, scope: !14243)
!14250 = !DILocalVariable(name: "component_size", arg: 4, scope: !14243, file: !3, line: 933, type: !1033)
!14251 = !DILocation(line: 933, column: 37, scope: !14243)
!14252 = !DILocalVariable(name: "mlxsw_core_fw_info", scope: !14243, file: !3, line: 935, type: !8178)
!14253 = !DILocation(line: 935, column: 29, scope: !14243)
!14254 = !DILocalVariable(name: "__mptr", scope: !14255, file: !3, line: 936, type: !637)
!14255 = distinct !DILexicalBlock(scope: !14243, file: !3, line: 936, column: 3)
!14256 = !DILocation(line: 936, column: 3, scope: !14255)
!14257 = !DILocation(line: 936, column: 3, scope: !14258)
!14258 = distinct !DILexicalBlock(scope: !14255, file: !3, line: 936, column: 3)
!14259 = !DILocalVariable(name: "mlxsw_core", scope: !14243, file: !3, line: 937, type: !7847)
!14260 = !DILocation(line: 937, column: 21, scope: !14243)
!14261 = !DILocation(line: 937, column: 34, scope: !14243)
!14262 = !DILocation(line: 937, column: 54, scope: !14243)
!14263 = !DILocalVariable(name: "mcc_pl", scope: !14243, file: !3, line: 938, type: !14209)
!14264 = !DILocation(line: 938, column: 7, scope: !14243)
!14265 = !DILocation(line: 940, column: 21, scope: !14243)
!14266 = !DILocation(line: 941, column: 7, scope: !14243)
!14267 = !DILocation(line: 941, column: 24, scope: !14243)
!14268 = !DILocation(line: 941, column: 34, scope: !14243)
!14269 = !DILocation(line: 940, column: 2, scope: !14243)
!14270 = !DILocation(line: 942, column: 25, scope: !14243)
!14271 = !DILocation(line: 942, column: 53, scope: !14243)
!14272 = !DILocation(line: 942, column: 9, scope: !14243)
!14273 = !DILocation(line: 942, column: 2, scope: !14243)
!14274 = distinct !DISubprogram(name: "mlxsw_core_fw_fsm_block_download", scope: !3, file: !3, line: 945, type: !8204, scopeLine: 947, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14275 = !DILocalVariable(name: "mlxfw_dev", arg: 1, scope: !14274, file: !3, line: 945, type: !8193)
!14276 = !DILocation(line: 945, column: 63, scope: !14274)
!14277 = !DILocalVariable(name: "fwhandle", arg: 2, scope: !14274, file: !3, line: 945, type: !1033)
!14278 = !DILocation(line: 945, column: 78, scope: !14274)
!14279 = !DILocalVariable(name: "data", arg: 3, scope: !14274, file: !3, line: 946, type: !839)
!14280 = !DILocation(line: 946, column: 14, scope: !14274)
!14281 = !DILocalVariable(name: "size", arg: 4, scope: !14274, file: !3, line: 946, type: !627)
!14282 = !DILocation(line: 946, column: 24, scope: !14274)
!14283 = !DILocalVariable(name: "offset", arg: 5, scope: !14274, file: !3, line: 946, type: !1033)
!14284 = !DILocation(line: 946, column: 34, scope: !14274)
!14285 = !DILocalVariable(name: "mlxsw_core_fw_info", scope: !14274, file: !3, line: 948, type: !8178)
!14286 = !DILocation(line: 948, column: 29, scope: !14274)
!14287 = !DILocalVariable(name: "__mptr", scope: !14288, file: !3, line: 949, type: !637)
!14288 = distinct !DILexicalBlock(scope: !14274, file: !3, line: 949, column: 3)
!14289 = !DILocation(line: 949, column: 3, scope: !14288)
!14290 = !DILocation(line: 949, column: 3, scope: !14291)
!14291 = distinct !DILexicalBlock(scope: !14288, file: !3, line: 949, column: 3)
!14292 = !DILocalVariable(name: "mlxsw_core", scope: !14274, file: !3, line: 950, type: !7847)
!14293 = !DILocation(line: 950, column: 21, scope: !14274)
!14294 = !DILocation(line: 950, column: 34, scope: !14274)
!14295 = !DILocation(line: 950, column: 54, scope: !14274)
!14296 = !DILocalVariable(name: "mcda_pl", scope: !14274, file: !3, line: 951, type: !14297)
!14297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 1152, elements: !14298)
!14298 = !{!14299}
!14299 = !DISubrange(count: 144)
!14300 = !DILocation(line: 951, column: 7, scope: !14274)
!14301 = !DILocation(line: 953, column: 22, scope: !14274)
!14302 = !DILocation(line: 953, column: 31, scope: !14274)
!14303 = !DILocation(line: 953, column: 41, scope: !14274)
!14304 = !DILocation(line: 953, column: 49, scope: !14274)
!14305 = !DILocation(line: 953, column: 55, scope: !14274)
!14306 = !DILocation(line: 953, column: 2, scope: !14274)
!14307 = !DILocation(line: 954, column: 25, scope: !14274)
!14308 = !DILocation(line: 954, column: 54, scope: !14274)
!14309 = !DILocation(line: 954, column: 9, scope: !14274)
!14310 = !DILocation(line: 954, column: 2, scope: !14274)
!14311 = distinct !DISubprogram(name: "mlxsw_core_fw_fsm_component_verify", scope: !3, file: !3, line: 957, type: !8208, scopeLine: 959, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14312 = !DILocalVariable(name: "mlxfw_dev", arg: 1, scope: !14311, file: !3, line: 957, type: !8193)
!14313 = !DILocation(line: 957, column: 65, scope: !14311)
!14314 = !DILocalVariable(name: "fwhandle", arg: 2, scope: !14311, file: !3, line: 957, type: !1033)
!14315 = !DILocation(line: 957, column: 80, scope: !14311)
!14316 = !DILocalVariable(name: "component_index", arg: 3, scope: !14311, file: !3, line: 958, type: !627)
!14317 = !DILocation(line: 958, column: 16, scope: !14311)
!14318 = !DILocalVariable(name: "mlxsw_core_fw_info", scope: !14311, file: !3, line: 960, type: !8178)
!14319 = !DILocation(line: 960, column: 29, scope: !14311)
!14320 = !DILocalVariable(name: "__mptr", scope: !14321, file: !3, line: 961, type: !637)
!14321 = distinct !DILexicalBlock(scope: !14311, file: !3, line: 961, column: 3)
!14322 = !DILocation(line: 961, column: 3, scope: !14321)
!14323 = !DILocation(line: 961, column: 3, scope: !14324)
!14324 = distinct !DILexicalBlock(scope: !14321, file: !3, line: 961, column: 3)
!14325 = !DILocalVariable(name: "mlxsw_core", scope: !14311, file: !3, line: 962, type: !7847)
!14326 = !DILocation(line: 962, column: 21, scope: !14311)
!14327 = !DILocation(line: 962, column: 34, scope: !14311)
!14328 = !DILocation(line: 962, column: 54, scope: !14311)
!14329 = !DILocalVariable(name: "mcc_pl", scope: !14311, file: !3, line: 963, type: !14209)
!14330 = !DILocation(line: 963, column: 7, scope: !14311)
!14331 = !DILocation(line: 965, column: 21, scope: !14311)
!14332 = !DILocation(line: 966, column: 7, scope: !14311)
!14333 = !DILocation(line: 966, column: 24, scope: !14311)
!14334 = !DILocation(line: 965, column: 2, scope: !14311)
!14335 = !DILocation(line: 967, column: 25, scope: !14311)
!14336 = !DILocation(line: 967, column: 53, scope: !14311)
!14337 = !DILocation(line: 967, column: 9, scope: !14311)
!14338 = !DILocation(line: 967, column: 2, scope: !14311)
!14339 = distinct !DISubprogram(name: "mlxsw_core_fw_fsm_activate", scope: !3, file: !3, line: 970, type: !8212, scopeLine: 971, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14340 = !DILocalVariable(name: "mlxfw_dev", arg: 1, scope: !14339, file: !3, line: 970, type: !8193)
!14341 = !DILocation(line: 970, column: 57, scope: !14339)
!14342 = !DILocalVariable(name: "fwhandle", arg: 2, scope: !14339, file: !3, line: 970, type: !1033)
!14343 = !DILocation(line: 970, column: 72, scope: !14339)
!14344 = !DILocalVariable(name: "mlxsw_core_fw_info", scope: !14339, file: !3, line: 972, type: !8178)
!14345 = !DILocation(line: 972, column: 29, scope: !14339)
!14346 = !DILocalVariable(name: "__mptr", scope: !14347, file: !3, line: 973, type: !637)
!14347 = distinct !DILexicalBlock(scope: !14339, file: !3, line: 973, column: 3)
!14348 = !DILocation(line: 973, column: 3, scope: !14347)
!14349 = !DILocation(line: 973, column: 3, scope: !14350)
!14350 = distinct !DILexicalBlock(scope: !14347, file: !3, line: 973, column: 3)
!14351 = !DILocalVariable(name: "mlxsw_core", scope: !14339, file: !3, line: 974, type: !7847)
!14352 = !DILocation(line: 974, column: 21, scope: !14339)
!14353 = !DILocation(line: 974, column: 34, scope: !14339)
!14354 = !DILocation(line: 974, column: 54, scope: !14339)
!14355 = !DILocalVariable(name: "mcc_pl", scope: !14339, file: !3, line: 975, type: !14209)
!14356 = !DILocation(line: 975, column: 7, scope: !14339)
!14357 = !DILocation(line: 977, column: 21, scope: !14339)
!14358 = !DILocation(line: 977, column: 68, scope: !14339)
!14359 = !DILocation(line: 977, column: 2, scope: !14339)
!14360 = !DILocation(line: 978, column: 25, scope: !14339)
!14361 = !DILocation(line: 978, column: 53, scope: !14339)
!14362 = !DILocation(line: 978, column: 9, scope: !14339)
!14363 = !DILocation(line: 978, column: 2, scope: !14339)
!14364 = distinct !DISubprogram(name: "mlxsw_core_fw_fsm_query_state", scope: !3, file: !3, line: 981, type: !8220, scopeLine: 984, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14365 = !DILocalVariable(name: "mlxfw_dev", arg: 1, scope: !14364, file: !3, line: 981, type: !8193)
!14366 = !DILocation(line: 981, column: 60, scope: !14364)
!14367 = !DILocalVariable(name: "fwhandle", arg: 2, scope: !14364, file: !3, line: 981, type: !1033)
!14368 = !DILocation(line: 981, column: 75, scope: !14364)
!14369 = !DILocalVariable(name: "fsm_state", arg: 3, scope: !14364, file: !3, line: 982, type: !8222)
!14370 = !DILocation(line: 982, column: 29, scope: !14364)
!14371 = !DILocalVariable(name: "fsm_state_err", arg: 4, scope: !14364, file: !3, line: 983, type: !8223)
!14372 = !DILocation(line: 983, column: 33, scope: !14364)
!14373 = !DILocalVariable(name: "mlxsw_core_fw_info", scope: !14364, file: !3, line: 985, type: !8178)
!14374 = !DILocation(line: 985, column: 29, scope: !14364)
!14375 = !DILocalVariable(name: "__mptr", scope: !14376, file: !3, line: 986, type: !637)
!14376 = distinct !DILexicalBlock(scope: !14364, file: !3, line: 986, column: 3)
!14377 = !DILocation(line: 986, column: 3, scope: !14376)
!14378 = !DILocation(line: 986, column: 3, scope: !14379)
!14379 = distinct !DILexicalBlock(scope: !14376, file: !3, line: 986, column: 3)
!14380 = !DILocalVariable(name: "mlxsw_core", scope: !14364, file: !3, line: 987, type: !7847)
!14381 = !DILocation(line: 987, column: 21, scope: !14364)
!14382 = !DILocation(line: 987, column: 34, scope: !14364)
!14383 = !DILocation(line: 987, column: 54, scope: !14364)
!14384 = !DILocalVariable(name: "mcc_pl", scope: !14364, file: !3, line: 988, type: !14209)
!14385 = !DILocation(line: 988, column: 7, scope: !14364)
!14386 = !DILocalVariable(name: "control_state", scope: !14364, file: !3, line: 989, type: !840)
!14387 = !DILocation(line: 989, column: 5, scope: !14364)
!14388 = !DILocalVariable(name: "error_code", scope: !14364, file: !3, line: 990, type: !840)
!14389 = !DILocation(line: 990, column: 5, scope: !14364)
!14390 = !DILocalVariable(name: "err", scope: !14364, file: !3, line: 991, type: !78)
!14391 = !DILocation(line: 991, column: 6, scope: !14364)
!14392 = !DILocation(line: 993, column: 21, scope: !14364)
!14393 = !DILocation(line: 993, column: 35, scope: !14364)
!14394 = !DILocation(line: 993, column: 2, scope: !14364)
!14395 = !DILocation(line: 994, column: 24, scope: !14364)
!14396 = !DILocation(line: 994, column: 52, scope: !14364)
!14397 = !DILocation(line: 994, column: 8, scope: !14364)
!14398 = !DILocation(line: 994, column: 6, scope: !14364)
!14399 = !DILocation(line: 995, column: 6, scope: !14400)
!14400 = distinct !DILexicalBlock(scope: !14364, file: !3, line: 995, column: 6)
!14401 = !DILocation(line: 995, column: 6, scope: !14364)
!14402 = !DILocation(line: 996, column: 10, scope: !14400)
!14403 = !DILocation(line: 996, column: 3, scope: !14400)
!14404 = !DILocation(line: 998, column: 23, scope: !14364)
!14405 = !DILocation(line: 998, column: 2, scope: !14364)
!14406 = !DILocation(line: 999, column: 15, scope: !14364)
!14407 = !DILocation(line: 999, column: 3, scope: !14364)
!14408 = !DILocation(line: 999, column: 13, scope: !14364)
!14409 = !DILocalVariable(name: "__UNIQUE_ID___x357", scope: !14410, file: !3, line: 1000, type: !7674)
!14410 = distinct !DILexicalBlock(scope: !14364, file: !3, line: 1000, column: 19)
!14411 = !DILocation(line: 1000, column: 19, scope: !14410)
!14412 = !DILocalVariable(name: "__UNIQUE_ID___y358", scope: !14410, file: !3, line: 1000, type: !7674)
!14413 = !DILocation(line: 1000, column: 3, scope: !14364)
!14414 = !DILocation(line: 1000, column: 17, scope: !14364)
!14415 = !DILocation(line: 1001, column: 2, scope: !14364)
!14416 = !DILocation(line: 1002, column: 1, scope: !14364)
!14417 = distinct !DISubprogram(name: "mlxsw_core_fw_fsm_cancel", scope: !3, file: !3, line: 1004, type: !8226, scopeLine: 1005, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14418 = !DILocalVariable(name: "mlxfw_dev", arg: 1, scope: !14417, file: !3, line: 1004, type: !8193)
!14419 = !DILocation(line: 1004, column: 56, scope: !14417)
!14420 = !DILocalVariable(name: "fwhandle", arg: 2, scope: !14417, file: !3, line: 1004, type: !1033)
!14421 = !DILocation(line: 1004, column: 71, scope: !14417)
!14422 = !DILocalVariable(name: "mlxsw_core_fw_info", scope: !14417, file: !3, line: 1006, type: !8178)
!14423 = !DILocation(line: 1006, column: 29, scope: !14417)
!14424 = !DILocalVariable(name: "__mptr", scope: !14425, file: !3, line: 1007, type: !637)
!14425 = distinct !DILexicalBlock(scope: !14417, file: !3, line: 1007, column: 3)
!14426 = !DILocation(line: 1007, column: 3, scope: !14425)
!14427 = !DILocation(line: 1007, column: 3, scope: !14428)
!14428 = distinct !DILexicalBlock(scope: !14425, file: !3, line: 1007, column: 3)
!14429 = !DILocalVariable(name: "mlxsw_core", scope: !14417, file: !3, line: 1008, type: !7847)
!14430 = !DILocation(line: 1008, column: 21, scope: !14417)
!14431 = !DILocation(line: 1008, column: 34, scope: !14417)
!14432 = !DILocation(line: 1008, column: 54, scope: !14417)
!14433 = !DILocalVariable(name: "mcc_pl", scope: !14417, file: !3, line: 1009, type: !14209)
!14434 = !DILocation(line: 1009, column: 7, scope: !14417)
!14435 = !DILocation(line: 1011, column: 21, scope: !14417)
!14436 = !DILocation(line: 1011, column: 66, scope: !14417)
!14437 = !DILocation(line: 1011, column: 2, scope: !14417)
!14438 = !DILocation(line: 1012, column: 18, scope: !14417)
!14439 = !DILocation(line: 1012, column: 46, scope: !14417)
!14440 = !DILocation(line: 1012, column: 2, scope: !14417)
!14441 = !DILocation(line: 1013, column: 1, scope: !14417)
!14442 = distinct !DISubprogram(name: "mlxsw_core_fw_fsm_release", scope: !3, file: !3, line: 1015, type: !8226, scopeLine: 1016, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14443 = !DILocalVariable(name: "mlxfw_dev", arg: 1, scope: !14442, file: !3, line: 1015, type: !8193)
!14444 = !DILocation(line: 1015, column: 57, scope: !14442)
!14445 = !DILocalVariable(name: "fwhandle", arg: 2, scope: !14442, file: !3, line: 1015, type: !1033)
!14446 = !DILocation(line: 1015, column: 72, scope: !14442)
!14447 = !DILocalVariable(name: "mlxsw_core_fw_info", scope: !14442, file: !3, line: 1017, type: !8178)
!14448 = !DILocation(line: 1017, column: 29, scope: !14442)
!14449 = !DILocalVariable(name: "__mptr", scope: !14450, file: !3, line: 1018, type: !637)
!14450 = distinct !DILexicalBlock(scope: !14442, file: !3, line: 1018, column: 3)
!14451 = !DILocation(line: 1018, column: 3, scope: !14450)
!14452 = !DILocation(line: 1018, column: 3, scope: !14453)
!14453 = distinct !DILexicalBlock(scope: !14450, file: !3, line: 1018, column: 3)
!14454 = !DILocalVariable(name: "mlxsw_core", scope: !14442, file: !3, line: 1019, type: !7847)
!14455 = !DILocation(line: 1019, column: 21, scope: !14442)
!14456 = !DILocation(line: 1019, column: 34, scope: !14442)
!14457 = !DILocation(line: 1019, column: 54, scope: !14442)
!14458 = !DILocalVariable(name: "mcc_pl", scope: !14442, file: !3, line: 1020, type: !14209)
!14459 = !DILocation(line: 1020, column: 7, scope: !14442)
!14460 = !DILocation(line: 1022, column: 21, scope: !14442)
!14461 = !DILocation(line: 1022, column: 81, scope: !14442)
!14462 = !DILocation(line: 1022, column: 2, scope: !14442)
!14463 = !DILocation(line: 1023, column: 18, scope: !14442)
!14464 = !DILocation(line: 1023, column: 46, scope: !14442)
!14465 = !DILocation(line: 1023, column: 2, scope: !14442)
!14466 = !DILocation(line: 1024, column: 1, scope: !14442)
!14467 = distinct !DISubprogram(name: "mlxsw_reg_mcqi_pack", scope: !7404, file: !7404, line: 9342, type: !14468, scopeLine: 9343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14468 = !DISubroutineType(types: !14469)
!14469 = !{null, !1084, !627}
!14470 = !DILocalVariable(name: "payload", arg: 1, scope: !14467, file: !7404, line: 9342, type: !1084)
!14471 = !DILocation(line: 9342, column: 46, scope: !14467)
!14472 = !DILocalVariable(name: "component_index", arg: 2, scope: !14467, file: !7404, line: 9342, type: !627)
!14473 = !DILocation(line: 9342, column: 59, scope: !14467)
!14474 = !DILocation(line: 9344, column: 2, scope: !14467)
!14475 = !DILocation(line: 9345, column: 37, scope: !14467)
!14476 = !DILocation(line: 9345, column: 46, scope: !14467)
!14477 = !DILocation(line: 9345, column: 2, scope: !14467)
!14478 = !DILocation(line: 9346, column: 31, scope: !14467)
!14479 = !DILocation(line: 9346, column: 2, scope: !14467)
!14480 = !DILocation(line: 9348, column: 28, scope: !14467)
!14481 = !DILocation(line: 9348, column: 2, scope: !14467)
!14482 = !DILocation(line: 9349, column: 31, scope: !14467)
!14483 = !DILocation(line: 9349, column: 2, scope: !14467)
!14484 = !DILocation(line: 9350, column: 1, scope: !14467)
!14485 = distinct !DISubprogram(name: "mlxsw_reg_mcqi_unpack", scope: !7404, file: !7404, line: 9352, type: !14486, scopeLine: 9356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14486 = !DISubroutineType(types: !14487)
!14487 = !{null, !1084, !2562, !839, !5652}
!14488 = !DILocalVariable(name: "payload", arg: 1, scope: !14485, file: !7404, line: 9352, type: !1084)
!14489 = !DILocation(line: 9352, column: 48, scope: !14485)
!14490 = !DILocalVariable(name: "p_cap_max_component_size", arg: 2, scope: !14485, file: !7404, line: 9353, type: !2562)
!14491 = !DILocation(line: 9353, column: 12, scope: !14485)
!14492 = !DILocalVariable(name: "p_cap_log_mcda_word_size", arg: 3, scope: !14485, file: !7404, line: 9354, type: !839)
!14493 = !DILocation(line: 9354, column: 11, scope: !14485)
!14494 = !DILocalVariable(name: "p_cap_mcda_max_write_size", arg: 4, scope: !14485, file: !7404, line: 9355, type: !5652)
!14495 = !DILocation(line: 9355, column: 12, scope: !14485)
!14496 = !DILocation(line: 9358, column: 45, scope: !14485)
!14497 = !DILocation(line: 9358, column: 3, scope: !14485)
!14498 = !DILocation(line: 9357, column: 3, scope: !14485)
!14499 = !DILocation(line: 9357, column: 28, scope: !14485)
!14500 = !DILocation(line: 9360, column: 45, scope: !14485)
!14501 = !DILocation(line: 9360, column: 3, scope: !14485)
!14502 = !DILocation(line: 9359, column: 3, scope: !14485)
!14503 = !DILocation(line: 9359, column: 28, scope: !14485)
!14504 = !DILocation(line: 9362, column: 46, scope: !14485)
!14505 = !DILocation(line: 9362, column: 3, scope: !14485)
!14506 = !DILocation(line: 9361, column: 3, scope: !14485)
!14507 = !DILocation(line: 9361, column: 29, scope: !14485)
!14508 = !DILocation(line: 9363, column: 1, scope: !14485)
!14509 = distinct !DISubprogram(name: "mlxsw_reg_mcqi_component_index_set", scope: !7404, file: !7404, line: 9297, type: !14510, scopeLine: 9297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14510 = !DISubroutineType(types: !14511)
!14511 = !{null, !1084, !1033}
!14512 = !DILocalVariable(name: "buf", arg: 1, scope: !14509, file: !7404, line: 9297, type: !1084)
!14513 = !DILocation(line: 9297, column: 1, scope: !14509)
!14514 = !DILocalVariable(name: "val", arg: 2, scope: !14509, file: !7404, line: 9297, type: !1033)
!14515 = distinct !DISubprogram(name: "mlxsw_reg_mcqi_info_type_set", scope: !7404, file: !7404, line: 9307, type: !14510, scopeLine: 9307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14516 = !DILocalVariable(name: "buf", arg: 1, scope: !14515, file: !7404, line: 9307, type: !1084)
!14517 = !DILocation(line: 9307, column: 1, scope: !14515)
!14518 = !DILocalVariable(name: "val", arg: 2, scope: !14515, file: !7404, line: 9307, type: !1033)
!14519 = distinct !DISubprogram(name: "mlxsw_reg_mcqi_offset_set", scope: !7404, file: !7404, line: 9314, type: !14510, scopeLine: 9314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14520 = !DILocalVariable(name: "buf", arg: 1, scope: !14519, file: !7404, line: 9314, type: !1084)
!14521 = !DILocation(line: 9314, column: 1, scope: !14519)
!14522 = !DILocalVariable(name: "val", arg: 2, scope: !14519, file: !7404, line: 9314, type: !1033)
!14523 = distinct !DISubprogram(name: "mlxsw_reg_mcqi_data_size_set", scope: !7404, file: !7404, line: 9321, type: !14510, scopeLine: 9321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14524 = !DILocalVariable(name: "buf", arg: 1, scope: !14523, file: !7404, line: 9321, type: !1084)
!14525 = !DILocation(line: 9321, column: 1, scope: !14523)
!14526 = !DILocalVariable(name: "val", arg: 2, scope: !14523, file: !7404, line: 9321, type: !1033)
!14527 = distinct !DISubprogram(name: "__mlxsw_item_set32", scope: !8318, file: !8318, line: 127, type: !14528, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14528 = !DISubroutineType(types: !14529)
!14529 = !{null, !1084, !13904, !522, !1033}
!14530 = !DILocalVariable(name: "buf", arg: 1, scope: !14527, file: !8318, line: 127, type: !1084)
!14531 = !DILocation(line: 127, column: 45, scope: !14527)
!14532 = !DILocalVariable(name: "item", arg: 2, scope: !14527, file: !8318, line: 127, type: !13904)
!14533 = !DILocation(line: 127, column: 75, scope: !14527)
!14534 = !DILocalVariable(name: "index", arg: 3, scope: !14527, file: !8318, line: 128, type: !522)
!14535 = !DILocation(line: 128, column: 26, scope: !14527)
!14536 = !DILocalVariable(name: "val", arg: 4, scope: !14527, file: !8318, line: 128, type: !1033)
!14537 = !DILocation(line: 128, column: 37, scope: !14527)
!14538 = !DILocalVariable(name: "offset", scope: !14527, file: !8318, line: 130, type: !7)
!14539 = !DILocation(line: 130, column: 15, scope: !14527)
!14540 = !DILocation(line: 130, column: 44, scope: !14527)
!14541 = !DILocation(line: 130, column: 50, scope: !14527)
!14542 = !DILocation(line: 130, column: 24, scope: !14527)
!14543 = !DILocalVariable(name: "b", scope: !14527, file: !8318, line: 132, type: !8177)
!14544 = !DILocation(line: 132, column: 10, scope: !14527)
!14545 = !DILocation(line: 132, column: 25, scope: !14527)
!14546 = !DILocation(line: 132, column: 14, scope: !14527)
!14547 = !DILocalVariable(name: "mask", scope: !14527, file: !8318, line: 133, type: !1033)
!14548 = !DILocation(line: 133, column: 6, scope: !14527)
!14549 = !DILocation(line: 133, column: 13, scope: !14527)
!14550 = !DILocation(line: 133, column: 48, scope: !14527)
!14551 = !DILocation(line: 133, column: 54, scope: !14527)
!14552 = !DILocation(line: 133, column: 45, scope: !14527)
!14553 = !DILocalVariable(name: "tmp", scope: !14527, file: !8318, line: 134, type: !1033)
!14554 = !DILocation(line: 134, column: 6, scope: !14527)
!14555 = !DILocation(line: 136, column: 7, scope: !14556)
!14556 = distinct !DILexicalBlock(scope: !14527, file: !8318, line: 136, column: 6)
!14557 = !DILocation(line: 136, column: 13, scope: !14556)
!14558 = !DILocation(line: 136, column: 6, scope: !14527)
!14559 = !DILocation(line: 137, column: 11, scope: !14556)
!14560 = !DILocation(line: 137, column: 17, scope: !14556)
!14561 = !DILocation(line: 137, column: 7, scope: !14556)
!14562 = !DILocation(line: 137, column: 3, scope: !14556)
!14563 = !DILocation(line: 138, column: 9, scope: !14527)
!14564 = !DILocation(line: 138, column: 6, scope: !14527)
!14565 = !DILocation(line: 139, column: 8, scope: !14527)
!14566 = !DILocation(line: 139, column: 6, scope: !14527)
!14567 = !DILocation(line: 140, column: 10, scope: !14527)
!14568 = !DILocation(line: 140, column: 9, scope: !14527)
!14569 = !DILocation(line: 140, column: 6, scope: !14527)
!14570 = !DILocation(line: 141, column: 9, scope: !14527)
!14571 = !DILocation(line: 141, column: 6, scope: !14527)
!14572 = !DILocation(line: 142, column: 14, scope: !14527)
!14573 = !DILocation(line: 142, column: 2, scope: !14527)
!14574 = !DILocation(line: 142, column: 4, scope: !14527)
!14575 = !DILocation(line: 142, column: 12, scope: !14527)
!14576 = !DILocation(line: 143, column: 1, scope: !14527)
!14577 = distinct !DISubprogram(name: "mlxsw_reg_mcqi_cap_max_component_size_get", scope: !7404, file: !7404, line: 9327, type: !13882, scopeLine: 9327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14578 = !DILocalVariable(name: "buf", arg: 1, scope: !14577, file: !7404, line: 9327, type: !338)
!14579 = !DILocation(line: 9327, column: 1, scope: !14577)
!14580 = distinct !DISubprogram(name: "mlxsw_reg_mcqi_cap_log_mcda_word_size_get", scope: !7404, file: !7404, line: 9334, type: !13882, scopeLine: 9334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14581 = !DILocalVariable(name: "buf", arg: 1, scope: !14580, file: !7404, line: 9334, type: !338)
!14582 = !DILocation(line: 9334, column: 1, scope: !14580)
!14583 = distinct !DISubprogram(name: "mlxsw_reg_mcqi_cap_mcda_max_write_size_get", scope: !7404, file: !7404, line: 9340, type: !13882, scopeLine: 9340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14584 = !DILocalVariable(name: "buf", arg: 1, scope: !14583, file: !7404, line: 9340, type: !338)
!14585 = !DILocation(line: 9340, column: 1, scope: !14583)
!14586 = distinct !DISubprogram(name: "mlxsw_reg_mcc_pack", scope: !7404, file: !7404, line: 9424, type: !14587, scopeLine: 9428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14587 = !DISubroutineType(types: !14588)
!14588 = !{null, !1084, !7690, !627, !1033, !1033}
!14589 = !DILocalVariable(name: "payload", arg: 1, scope: !14586, file: !7404, line: 9424, type: !1084)
!14590 = !DILocation(line: 9424, column: 45, scope: !14586)
!14591 = !DILocalVariable(name: "instr", arg: 2, scope: !14586, file: !7404, line: 9425, type: !7690)
!14592 = !DILocation(line: 9425, column: 42, scope: !14586)
!14593 = !DILocalVariable(name: "component_index", arg: 3, scope: !14586, file: !7404, line: 9426, type: !627)
!14594 = !DILocation(line: 9426, column: 15, scope: !14586)
!14595 = !DILocalVariable(name: "update_handle", arg: 4, scope: !14586, file: !7404, line: 9426, type: !1033)
!14596 = !DILocation(line: 9426, column: 36, scope: !14586)
!14597 = !DILocalVariable(name: "component_size", arg: 5, scope: !14586, file: !7404, line: 9427, type: !1033)
!14598 = !DILocation(line: 9427, column: 15, scope: !14586)
!14599 = !DILocation(line: 9429, column: 2, scope: !14586)
!14600 = !DILocation(line: 9430, column: 32, scope: !14586)
!14601 = !DILocation(line: 9430, column: 41, scope: !14586)
!14602 = !DILocation(line: 9430, column: 2, scope: !14586)
!14603 = !DILocation(line: 9431, column: 36, scope: !14586)
!14604 = !DILocation(line: 9431, column: 45, scope: !14586)
!14605 = !DILocation(line: 9431, column: 2, scope: !14586)
!14606 = !DILocation(line: 9432, column: 34, scope: !14586)
!14607 = !DILocation(line: 9432, column: 43, scope: !14586)
!14608 = !DILocation(line: 9432, column: 2, scope: !14586)
!14609 = !DILocation(line: 9433, column: 35, scope: !14586)
!14610 = !DILocation(line: 9433, column: 44, scope: !14586)
!14611 = !DILocation(line: 9433, column: 2, scope: !14586)
!14612 = !DILocation(line: 9434, column: 1, scope: !14586)
!14613 = distinct !DISubprogram(name: "mlxsw_reg_mcc_unpack", scope: !7404, file: !7404, line: 9436, type: !14614, scopeLine: 9438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14614 = !DISubroutineType(types: !14615)
!14615 = !{null, !1084, !2562, !839, !839}
!14616 = !DILocalVariable(name: "payload", arg: 1, scope: !14613, file: !7404, line: 9436, type: !1084)
!14617 = !DILocation(line: 9436, column: 47, scope: !14613)
!14618 = !DILocalVariable(name: "p_update_handle", arg: 2, scope: !14613, file: !7404, line: 9436, type: !2562)
!14619 = !DILocation(line: 9436, column: 61, scope: !14613)
!14620 = !DILocalVariable(name: "p_error_code", arg: 3, scope: !14613, file: !7404, line: 9437, type: !839)
!14621 = !DILocation(line: 9437, column: 10, scope: !14613)
!14622 = !DILocalVariable(name: "p_control_state", arg: 4, scope: !14613, file: !7404, line: 9437, type: !839)
!14623 = !DILocation(line: 9437, column: 28, scope: !14613)
!14624 = !DILocation(line: 9439, column: 6, scope: !14625)
!14625 = distinct !DILexicalBlock(scope: !14613, file: !7404, line: 9439, column: 6)
!14626 = !DILocation(line: 9439, column: 6, scope: !14613)
!14627 = !DILocation(line: 9440, column: 54, scope: !14625)
!14628 = !DILocation(line: 9440, column: 22, scope: !14625)
!14629 = !DILocation(line: 9440, column: 4, scope: !14625)
!14630 = !DILocation(line: 9440, column: 20, scope: !14625)
!14631 = !DILocation(line: 9440, column: 3, scope: !14625)
!14632 = !DILocation(line: 9441, column: 6, scope: !14633)
!14633 = distinct !DILexicalBlock(scope: !14613, file: !7404, line: 9441, column: 6)
!14634 = !DILocation(line: 9441, column: 6, scope: !14613)
!14635 = !DILocation(line: 9442, column: 48, scope: !14633)
!14636 = !DILocation(line: 9442, column: 19, scope: !14633)
!14637 = !DILocation(line: 9442, column: 4, scope: !14633)
!14638 = !DILocation(line: 9442, column: 17, scope: !14633)
!14639 = !DILocation(line: 9442, column: 3, scope: !14633)
!14640 = !DILocation(line: 9443, column: 6, scope: !14641)
!14641 = distinct !DILexicalBlock(scope: !14613, file: !7404, line: 9443, column: 6)
!14642 = !DILocation(line: 9443, column: 6, scope: !14613)
!14643 = !DILocation(line: 9444, column: 54, scope: !14641)
!14644 = !DILocation(line: 9444, column: 22, scope: !14641)
!14645 = !DILocation(line: 9444, column: 4, scope: !14641)
!14646 = !DILocation(line: 9444, column: 20, scope: !14641)
!14647 = !DILocation(line: 9444, column: 3, scope: !14641)
!14648 = !DILocation(line: 9445, column: 1, scope: !14613)
!14649 = distinct !DISubprogram(name: "mlxsw_reg_mcc_instruction_set", scope: !7404, file: !7404, line: 9388, type: !14510, scopeLine: 9388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14650 = !DILocalVariable(name: "buf", arg: 1, scope: !14649, file: !7404, line: 9388, type: !1084)
!14651 = !DILocation(line: 9388, column: 1, scope: !14649)
!14652 = !DILocalVariable(name: "val", arg: 2, scope: !14649, file: !7404, line: 9388, type: !1033)
!14653 = distinct !DISubprogram(name: "mlxsw_reg_mcc_component_index_set", scope: !7404, file: !7404, line: 9395, type: !14510, scopeLine: 9395, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14654 = !DILocalVariable(name: "buf", arg: 1, scope: !14653, file: !7404, line: 9395, type: !1084)
!14655 = !DILocation(line: 9395, column: 1, scope: !14653)
!14656 = !DILocalVariable(name: "val", arg: 2, scope: !14653, file: !7404, line: 9395, type: !1033)
!14657 = distinct !DISubprogram(name: "mlxsw_reg_mcc_update_handle_set", scope: !7404, file: !7404, line: 9401, type: !14510, scopeLine: 9401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14658 = !DILocalVariable(name: "buf", arg: 1, scope: !14657, file: !7404, line: 9401, type: !1084)
!14659 = !DILocation(line: 9401, column: 1, scope: !14657)
!14660 = !DILocalVariable(name: "val", arg: 2, scope: !14657, file: !7404, line: 9401, type: !1033)
!14661 = distinct !DISubprogram(name: "mlxsw_reg_mcc_component_size_set", scope: !7404, file: !7404, line: 9422, type: !14510, scopeLine: 9422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14662 = !DILocalVariable(name: "buf", arg: 1, scope: !14661, file: !7404, line: 9422, type: !1084)
!14663 = !DILocation(line: 9422, column: 1, scope: !14661)
!14664 = !DILocalVariable(name: "val", arg: 2, scope: !14661, file: !7404, line: 9422, type: !1033)
!14665 = distinct !DISubprogram(name: "mlxsw_reg_mcc_update_handle_get", scope: !7404, file: !7404, line: 9401, type: !13882, scopeLine: 9401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14666 = !DILocalVariable(name: "buf", arg: 1, scope: !14665, file: !7404, line: 9401, type: !338)
!14667 = !DILocation(line: 9401, column: 1, scope: !14665)
!14668 = distinct !DISubprogram(name: "mlxsw_reg_mcc_error_code_get", scope: !7404, file: !7404, line: 9408, type: !13882, scopeLine: 9408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14669 = !DILocalVariable(name: "buf", arg: 1, scope: !14668, file: !7404, line: 9408, type: !338)
!14670 = !DILocation(line: 9408, column: 1, scope: !14668)
!14671 = distinct !DISubprogram(name: "mlxsw_reg_mcc_control_state_get", scope: !7404, file: !7404, line: 9414, type: !13882, scopeLine: 9414, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14672 = !DILocalVariable(name: "buf", arg: 1, scope: !14671, file: !7404, line: 9414, type: !338)
!14673 = !DILocation(line: 9414, column: 1, scope: !14671)
!14674 = distinct !DISubprogram(name: "mlxsw_reg_mcda_pack", scope: !7404, file: !7404, line: 9484, type: !14675, scopeLine: 9486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14675 = !DISubroutineType(types: !14676)
!14676 = !{null, !1084, !1033, !1033, !627, !839}
!14677 = !DILocalVariable(name: "payload", arg: 1, scope: !14674, file: !7404, line: 9484, type: !1084)
!14678 = !DILocation(line: 9484, column: 46, scope: !14674)
!14679 = !DILocalVariable(name: "update_handle", arg: 2, scope: !14674, file: !7404, line: 9484, type: !1033)
!14680 = !DILocation(line: 9484, column: 59, scope: !14674)
!14681 = !DILocalVariable(name: "offset", arg: 3, scope: !14674, file: !7404, line: 9485, type: !1033)
!14682 = !DILocation(line: 9485, column: 16, scope: !14674)
!14683 = !DILocalVariable(name: "size", arg: 4, scope: !14674, file: !7404, line: 9485, type: !627)
!14684 = !DILocation(line: 9485, column: 28, scope: !14674)
!14685 = !DILocalVariable(name: "data", arg: 5, scope: !14674, file: !7404, line: 9485, type: !839)
!14686 = !DILocation(line: 9485, column: 38, scope: !14674)
!14687 = !DILocalVariable(name: "i", scope: !14674, file: !7404, line: 9487, type: !78)
!14688 = !DILocation(line: 9487, column: 6, scope: !14674)
!14689 = !DILocation(line: 9489, column: 2, scope: !14674)
!14690 = !DILocation(line: 9490, column: 35, scope: !14674)
!14691 = !DILocation(line: 9490, column: 44, scope: !14674)
!14692 = !DILocation(line: 9490, column: 2, scope: !14674)
!14693 = !DILocation(line: 9491, column: 28, scope: !14674)
!14694 = !DILocation(line: 9491, column: 37, scope: !14674)
!14695 = !DILocation(line: 9491, column: 2, scope: !14674)
!14696 = !DILocation(line: 9492, column: 26, scope: !14674)
!14697 = !DILocation(line: 9492, column: 35, scope: !14674)
!14698 = !DILocation(line: 9492, column: 2, scope: !14674)
!14699 = !DILocation(line: 9494, column: 9, scope: !14700)
!14700 = distinct !DILexicalBlock(scope: !14674, file: !7404, line: 9494, column: 2)
!14701 = !DILocation(line: 9494, column: 7, scope: !14700)
!14702 = !DILocation(line: 9494, column: 14, scope: !14703)
!14703 = distinct !DILexicalBlock(scope: !14700, file: !7404, line: 9494, column: 2)
!14704 = !DILocation(line: 9494, column: 18, scope: !14703)
!14705 = !DILocation(line: 9494, column: 23, scope: !14703)
!14706 = !DILocation(line: 9494, column: 16, scope: !14703)
!14707 = !DILocation(line: 9494, column: 2, scope: !14700)
!14708 = !DILocation(line: 9495, column: 27, scope: !14703)
!14709 = !DILocation(line: 9495, column: 36, scope: !14703)
!14710 = !DILocation(line: 9495, column: 49, scope: !14703)
!14711 = !DILocation(line: 9495, column: 54, scope: !14703)
!14712 = !DILocation(line: 9495, column: 56, scope: !14703)
!14713 = !DILocation(line: 9495, column: 39, scope: !14703)
!14714 = !DILocation(line: 9495, column: 3, scope: !14703)
!14715 = !DILocation(line: 9494, column: 29, scope: !14703)
!14716 = !DILocation(line: 9494, column: 2, scope: !14703)
!14717 = distinct !{!14717, !14707, !14718}
!14718 = !DILocation(line: 9495, column: 60, scope: !14700)
!14719 = !DILocation(line: 9496, column: 1, scope: !14674)
!14720 = distinct !DISubprogram(name: "mlxsw_reg_mcda_update_handle_set", scope: !7404, file: !7404, line: 9463, type: !14510, scopeLine: 9463, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14721 = !DILocalVariable(name: "buf", arg: 1, scope: !14720, file: !7404, line: 9463, type: !1084)
!14722 = !DILocation(line: 9463, column: 1, scope: !14720)
!14723 = !DILocalVariable(name: "val", arg: 2, scope: !14720, file: !7404, line: 9463, type: !1033)
!14724 = distinct !DISubprogram(name: "mlxsw_reg_mcda_offset_set", scope: !7404, file: !7404, line: 9470, type: !14510, scopeLine: 9470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14725 = !DILocalVariable(name: "buf", arg: 1, scope: !14724, file: !7404, line: 9470, type: !1084)
!14726 = !DILocation(line: 9470, column: 1, scope: !14724)
!14727 = !DILocalVariable(name: "val", arg: 2, scope: !14724, file: !7404, line: 9470, type: !1033)
!14728 = distinct !DISubprogram(name: "mlxsw_reg_mcda_size_set", scope: !7404, file: !7404, line: 9476, type: !14510, scopeLine: 9476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14729 = !DILocalVariable(name: "buf", arg: 1, scope: !14728, file: !7404, line: 9476, type: !1084)
!14730 = !DILocation(line: 9476, column: 1, scope: !14728)
!14731 = !DILocalVariable(name: "val", arg: 2, scope: !14728, file: !7404, line: 9476, type: !1033)
!14732 = distinct !DISubprogram(name: "mlxsw_reg_mcda_data_set", scope: !7404, file: !7404, line: 9482, type: !14733, scopeLine: 9482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14733 = !DISubroutineType(types: !14734)
!14734 = !{null, !1084, !522, !1033}
!14735 = !DILocalVariable(name: "buf", arg: 1, scope: !14732, file: !7404, line: 9482, type: !1084)
!14736 = !DILocation(line: 9482, column: 1, scope: !14732)
!14737 = !DILocalVariable(name: "index", arg: 2, scope: !14732, file: !7404, line: 9482, type: !522)
!14738 = !DILocalVariable(name: "val", arg: 3, scope: !14732, file: !7404, line: 9482, type: !1033)
!14739 = distinct !DISubprogram(name: "kcalloc", scope: !7779, file: !7779, line: 601, type: !14740, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14740 = !DISubroutineType(types: !14741)
!14741 = !{!637, !1085, !1085, !1788}
!14742 = !DILocalVariable(name: "n", arg: 1, scope: !14739, file: !7779, line: 601, type: !1085)
!14743 = !DILocation(line: 601, column: 36, scope: !14739)
!14744 = !DILocalVariable(name: "size", arg: 2, scope: !14739, file: !7779, line: 601, type: !1085)
!14745 = !DILocation(line: 601, column: 46, scope: !14739)
!14746 = !DILocalVariable(name: "flags", arg: 3, scope: !14739, file: !7779, line: 601, type: !1788)
!14747 = !DILocation(line: 601, column: 58, scope: !14739)
!14748 = !DILocation(line: 603, column: 23, scope: !14739)
!14749 = !DILocation(line: 603, column: 26, scope: !14739)
!14750 = !DILocation(line: 603, column: 32, scope: !14739)
!14751 = !DILocation(line: 603, column: 38, scope: !14739)
!14752 = !DILocation(line: 603, column: 9, scope: !14739)
!14753 = !DILocation(line: 603, column: 2, scope: !14739)
!14754 = distinct !DISubprogram(name: "kmalloc_array", scope: !7779, file: !7779, line: 584, type: !14740, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14755 = !DILocation(line: 445, column: 72, scope: !9590, inlinedAt: !14756)
!14756 = distinct !DILocation(line: 552, column: 10, scope: !9595, inlinedAt: !14757)
!14757 = distinct !DILocation(line: 591, column: 10, scope: !14758)
!14758 = distinct !DILexicalBlock(scope: !14754, file: !7779, line: 590, column: 6)
!14759 = !DILocation(line: 446, column: 9, scope: !9590, inlinedAt: !14756)
!14760 = !DILocation(line: 446, column: 23, scope: !9590, inlinedAt: !14756)
!14761 = !DILocation(line: 448, column: 8, scope: !9590, inlinedAt: !14756)
!14762 = !DILocation(line: 318, column: 67, scope: !9608, inlinedAt: !14763)
!14763 = distinct !DILocation(line: 553, column: 20, scope: !9595, inlinedAt: !14757)
!14764 = !DILocation(line: 346, column: 58, scope: !9614, inlinedAt: !14765)
!14765 = distinct !DILocation(line: 547, column: 11, scope: !9595, inlinedAt: !14757)
!14766 = !DILocation(line: 472, column: 28, scope: !9620, inlinedAt: !14767)
!14767 = distinct !DILocation(line: 481, column: 9, scope: !9625, inlinedAt: !14768)
!14768 = distinct !DILocation(line: 545, column: 11, scope: !9627, inlinedAt: !14757)
!14769 = !DILocation(line: 472, column: 40, scope: !9620, inlinedAt: !14767)
!14770 = !DILocation(line: 472, column: 60, scope: !9620, inlinedAt: !14767)
!14771 = !DILocation(line: 478, column: 51, scope: !9625, inlinedAt: !14768)
!14772 = !DILocation(line: 478, column: 63, scope: !9625, inlinedAt: !14768)
!14773 = !DILocation(line: 480, column: 15, scope: !9625, inlinedAt: !14768)
!14774 = !DILocation(line: 538, column: 45, scope: !9597, inlinedAt: !14757)
!14775 = !DILocation(line: 538, column: 57, scope: !9597, inlinedAt: !14757)
!14776 = !DILocation(line: 542, column: 16, scope: !9595, inlinedAt: !14757)
!14777 = !DILocalVariable(name: "n", arg: 1, scope: !14754, file: !7779, line: 584, type: !1085)
!14778 = !DILocation(line: 584, column: 42, scope: !14754)
!14779 = !DILocalVariable(name: "size", arg: 2, scope: !14754, file: !7779, line: 584, type: !1085)
!14780 = !DILocation(line: 584, column: 52, scope: !14754)
!14781 = !DILocalVariable(name: "flags", arg: 3, scope: !14754, file: !7779, line: 584, type: !1788)
!14782 = !DILocation(line: 584, column: 64, scope: !14754)
!14783 = !DILocalVariable(name: "bytes", scope: !14754, file: !7779, line: 586, type: !1085)
!14784 = !DILocation(line: 586, column: 9, scope: !14754)
!14785 = !DILocalVariable(name: "__a", scope: !14786, file: !7779, line: 588, type: !1085)
!14786 = distinct !DILexicalBlock(scope: !14787, file: !7779, line: 588, column: 6)
!14787 = distinct !DILexicalBlock(scope: !14754, file: !7779, line: 588, column: 6)
!14788 = !DILocation(line: 588, column: 6, scope: !14786)
!14789 = !DILocalVariable(name: "__b", scope: !14786, file: !7779, line: 588, type: !1085)
!14790 = !DILocalVariable(name: "__d", scope: !14786, file: !7779, line: 588, type: !2921)
!14791 = !DILocation(line: 588, column: 6, scope: !14787)
!14792 = !DILocation(line: 588, column: 6, scope: !14754)
!14793 = !DILocation(line: 589, column: 3, scope: !14787)
!14794 = !DILocation(line: 590, column: 27, scope: !14758)
!14795 = !DILocation(line: 590, column: 6, scope: !14758)
!14796 = !DILocation(line: 590, column: 30, scope: !14758)
!14797 = !DILocation(line: 590, column: 54, scope: !14758)
!14798 = !DILocation(line: 590, column: 33, scope: !14758)
!14799 = !DILocation(line: 590, column: 6, scope: !14754)
!14800 = !DILocation(line: 591, column: 18, scope: !14758)
!14801 = !DILocation(line: 591, column: 25, scope: !14758)
!14802 = !DILocation(line: 540, column: 27, scope: !9596, inlinedAt: !14757)
!14803 = !DILocation(line: 540, column: 6, scope: !9596, inlinedAt: !14757)
!14804 = !DILocation(line: 540, column: 6, scope: !9597, inlinedAt: !14757)
!14805 = !DILocation(line: 544, column: 7, scope: !9627, inlinedAt: !14757)
!14806 = !DILocation(line: 544, column: 12, scope: !9627, inlinedAt: !14757)
!14807 = !DILocation(line: 544, column: 7, scope: !9595, inlinedAt: !14757)
!14808 = !DILocation(line: 545, column: 25, scope: !9627, inlinedAt: !14757)
!14809 = !DILocation(line: 545, column: 31, scope: !9627, inlinedAt: !14757)
!14810 = !DILocation(line: 480, column: 33, scope: !9625, inlinedAt: !14768)
!14811 = !DILocation(line: 480, column: 23, scope: !9625, inlinedAt: !14768)
!14812 = !DILocation(line: 481, column: 29, scope: !9625, inlinedAt: !14768)
!14813 = !DILocation(line: 481, column: 35, scope: !9625, inlinedAt: !14768)
!14814 = !DILocation(line: 481, column: 42, scope: !9625, inlinedAt: !14768)
!14815 = !DILocation(line: 474, column: 23, scope: !9620, inlinedAt: !14767)
!14816 = !DILocation(line: 474, column: 29, scope: !9620, inlinedAt: !14767)
!14817 = !DILocation(line: 474, column: 36, scope: !9620, inlinedAt: !14767)
!14818 = !DILocation(line: 474, column: 9, scope: !9620, inlinedAt: !14767)
!14819 = !DILocation(line: 545, column: 4, scope: !9627, inlinedAt: !14757)
!14820 = !DILocation(line: 547, column: 25, scope: !9595, inlinedAt: !14757)
!14821 = !DILocation(line: 348, column: 7, scope: !9682, inlinedAt: !14765)
!14822 = !DILocation(line: 348, column: 6, scope: !9614, inlinedAt: !14765)
!14823 = !DILocation(line: 349, column: 3, scope: !9682, inlinedAt: !14765)
!14824 = !DILocation(line: 351, column: 6, scope: !9686, inlinedAt: !14765)
!14825 = !DILocation(line: 351, column: 11, scope: !9686, inlinedAt: !14765)
!14826 = !DILocation(line: 351, column: 6, scope: !9614, inlinedAt: !14765)
!14827 = !DILocation(line: 352, column: 3, scope: !9686, inlinedAt: !14765)
!14828 = !DILocation(line: 354, column: 32, scope: !9691, inlinedAt: !14765)
!14829 = !DILocation(line: 354, column: 37, scope: !9691, inlinedAt: !14765)
!14830 = !DILocation(line: 354, column: 42, scope: !9691, inlinedAt: !14765)
!14831 = !DILocation(line: 354, column: 45, scope: !9691, inlinedAt: !14765)
!14832 = !DILocation(line: 354, column: 50, scope: !9691, inlinedAt: !14765)
!14833 = !DILocation(line: 354, column: 6, scope: !9614, inlinedAt: !14765)
!14834 = !DILocation(line: 355, column: 3, scope: !9691, inlinedAt: !14765)
!14835 = !DILocation(line: 356, column: 32, scope: !9699, inlinedAt: !14765)
!14836 = !DILocation(line: 356, column: 37, scope: !9699, inlinedAt: !14765)
!14837 = !DILocation(line: 356, column: 43, scope: !9699, inlinedAt: !14765)
!14838 = !DILocation(line: 356, column: 46, scope: !9699, inlinedAt: !14765)
!14839 = !DILocation(line: 356, column: 51, scope: !9699, inlinedAt: !14765)
!14840 = !DILocation(line: 356, column: 6, scope: !9614, inlinedAt: !14765)
!14841 = !DILocation(line: 357, column: 3, scope: !9699, inlinedAt: !14765)
!14842 = !DILocation(line: 358, column: 6, scope: !9707, inlinedAt: !14765)
!14843 = !DILocation(line: 358, column: 11, scope: !9707, inlinedAt: !14765)
!14844 = !DILocation(line: 358, column: 6, scope: !9614, inlinedAt: !14765)
!14845 = !DILocation(line: 358, column: 26, scope: !9707, inlinedAt: !14765)
!14846 = !DILocation(line: 359, column: 6, scope: !9712, inlinedAt: !14765)
!14847 = !DILocation(line: 359, column: 11, scope: !9712, inlinedAt: !14765)
!14848 = !DILocation(line: 359, column: 6, scope: !9614, inlinedAt: !14765)
!14849 = !DILocation(line: 359, column: 26, scope: !9712, inlinedAt: !14765)
!14850 = !DILocation(line: 360, column: 6, scope: !9717, inlinedAt: !14765)
!14851 = !DILocation(line: 360, column: 11, scope: !9717, inlinedAt: !14765)
!14852 = !DILocation(line: 360, column: 6, scope: !9614, inlinedAt: !14765)
!14853 = !DILocation(line: 360, column: 26, scope: !9717, inlinedAt: !14765)
!14854 = !DILocation(line: 361, column: 6, scope: !9722, inlinedAt: !14765)
!14855 = !DILocation(line: 361, column: 11, scope: !9722, inlinedAt: !14765)
!14856 = !DILocation(line: 361, column: 6, scope: !9614, inlinedAt: !14765)
!14857 = !DILocation(line: 361, column: 26, scope: !9722, inlinedAt: !14765)
!14858 = !DILocation(line: 362, column: 6, scope: !9727, inlinedAt: !14765)
!14859 = !DILocation(line: 362, column: 11, scope: !9727, inlinedAt: !14765)
!14860 = !DILocation(line: 362, column: 6, scope: !9614, inlinedAt: !14765)
!14861 = !DILocation(line: 362, column: 26, scope: !9727, inlinedAt: !14765)
!14862 = !DILocation(line: 363, column: 6, scope: !9732, inlinedAt: !14765)
!14863 = !DILocation(line: 363, column: 11, scope: !9732, inlinedAt: !14765)
!14864 = !DILocation(line: 363, column: 6, scope: !9614, inlinedAt: !14765)
!14865 = !DILocation(line: 363, column: 26, scope: !9732, inlinedAt: !14765)
!14866 = !DILocation(line: 364, column: 6, scope: !9737, inlinedAt: !14765)
!14867 = !DILocation(line: 364, column: 11, scope: !9737, inlinedAt: !14765)
!14868 = !DILocation(line: 364, column: 6, scope: !9614, inlinedAt: !14765)
!14869 = !DILocation(line: 364, column: 26, scope: !9737, inlinedAt: !14765)
!14870 = !DILocation(line: 365, column: 6, scope: !9742, inlinedAt: !14765)
!14871 = !DILocation(line: 365, column: 11, scope: !9742, inlinedAt: !14765)
!14872 = !DILocation(line: 365, column: 6, scope: !9614, inlinedAt: !14765)
!14873 = !DILocation(line: 365, column: 26, scope: !9742, inlinedAt: !14765)
!14874 = !DILocation(line: 366, column: 6, scope: !9747, inlinedAt: !14765)
!14875 = !DILocation(line: 366, column: 11, scope: !9747, inlinedAt: !14765)
!14876 = !DILocation(line: 366, column: 6, scope: !9614, inlinedAt: !14765)
!14877 = !DILocation(line: 366, column: 26, scope: !9747, inlinedAt: !14765)
!14878 = !DILocation(line: 367, column: 6, scope: !9752, inlinedAt: !14765)
!14879 = !DILocation(line: 367, column: 11, scope: !9752, inlinedAt: !14765)
!14880 = !DILocation(line: 367, column: 6, scope: !9614, inlinedAt: !14765)
!14881 = !DILocation(line: 367, column: 26, scope: !9752, inlinedAt: !14765)
!14882 = !DILocation(line: 368, column: 6, scope: !9757, inlinedAt: !14765)
!14883 = !DILocation(line: 368, column: 11, scope: !9757, inlinedAt: !14765)
!14884 = !DILocation(line: 368, column: 6, scope: !9614, inlinedAt: !14765)
!14885 = !DILocation(line: 368, column: 26, scope: !9757, inlinedAt: !14765)
!14886 = !DILocation(line: 369, column: 6, scope: !9762, inlinedAt: !14765)
!14887 = !DILocation(line: 369, column: 11, scope: !9762, inlinedAt: !14765)
!14888 = !DILocation(line: 369, column: 6, scope: !9614, inlinedAt: !14765)
!14889 = !DILocation(line: 369, column: 26, scope: !9762, inlinedAt: !14765)
!14890 = !DILocation(line: 370, column: 6, scope: !9767, inlinedAt: !14765)
!14891 = !DILocation(line: 370, column: 11, scope: !9767, inlinedAt: !14765)
!14892 = !DILocation(line: 370, column: 6, scope: !9614, inlinedAt: !14765)
!14893 = !DILocation(line: 370, column: 26, scope: !9767, inlinedAt: !14765)
!14894 = !DILocation(line: 371, column: 6, scope: !9772, inlinedAt: !14765)
!14895 = !DILocation(line: 371, column: 11, scope: !9772, inlinedAt: !14765)
!14896 = !DILocation(line: 371, column: 6, scope: !9614, inlinedAt: !14765)
!14897 = !DILocation(line: 371, column: 26, scope: !9772, inlinedAt: !14765)
!14898 = !DILocation(line: 372, column: 6, scope: !9777, inlinedAt: !14765)
!14899 = !DILocation(line: 372, column: 11, scope: !9777, inlinedAt: !14765)
!14900 = !DILocation(line: 372, column: 6, scope: !9614, inlinedAt: !14765)
!14901 = !DILocation(line: 372, column: 26, scope: !9777, inlinedAt: !14765)
!14902 = !DILocation(line: 373, column: 6, scope: !9782, inlinedAt: !14765)
!14903 = !DILocation(line: 373, column: 11, scope: !9782, inlinedAt: !14765)
!14904 = !DILocation(line: 373, column: 6, scope: !9614, inlinedAt: !14765)
!14905 = !DILocation(line: 373, column: 26, scope: !9782, inlinedAt: !14765)
!14906 = !DILocation(line: 374, column: 6, scope: !9787, inlinedAt: !14765)
!14907 = !DILocation(line: 374, column: 11, scope: !9787, inlinedAt: !14765)
!14908 = !DILocation(line: 374, column: 6, scope: !9614, inlinedAt: !14765)
!14909 = !DILocation(line: 374, column: 26, scope: !9787, inlinedAt: !14765)
!14910 = !DILocation(line: 375, column: 6, scope: !9792, inlinedAt: !14765)
!14911 = !DILocation(line: 375, column: 11, scope: !9792, inlinedAt: !14765)
!14912 = !DILocation(line: 375, column: 6, scope: !9614, inlinedAt: !14765)
!14913 = !DILocation(line: 375, column: 27, scope: !9792, inlinedAt: !14765)
!14914 = !DILocation(line: 376, column: 6, scope: !9797, inlinedAt: !14765)
!14915 = !DILocation(line: 376, column: 11, scope: !9797, inlinedAt: !14765)
!14916 = !DILocation(line: 376, column: 6, scope: !9614, inlinedAt: !14765)
!14917 = !DILocation(line: 376, column: 32, scope: !9797, inlinedAt: !14765)
!14918 = !DILocation(line: 377, column: 6, scope: !9802, inlinedAt: !14765)
!14919 = !DILocation(line: 377, column: 11, scope: !9802, inlinedAt: !14765)
!14920 = !DILocation(line: 377, column: 6, scope: !9614, inlinedAt: !14765)
!14921 = !DILocation(line: 377, column: 32, scope: !9802, inlinedAt: !14765)
!14922 = !DILocation(line: 378, column: 6, scope: !9807, inlinedAt: !14765)
!14923 = !DILocation(line: 378, column: 11, scope: !9807, inlinedAt: !14765)
!14924 = !DILocation(line: 378, column: 6, scope: !9614, inlinedAt: !14765)
!14925 = !DILocation(line: 378, column: 32, scope: !9807, inlinedAt: !14765)
!14926 = !DILocation(line: 379, column: 6, scope: !9812, inlinedAt: !14765)
!14927 = !DILocation(line: 379, column: 11, scope: !9812, inlinedAt: !14765)
!14928 = !DILocation(line: 379, column: 6, scope: !9614, inlinedAt: !14765)
!14929 = !DILocation(line: 379, column: 33, scope: !9812, inlinedAt: !14765)
!14930 = !DILocation(line: 380, column: 6, scope: !9817, inlinedAt: !14765)
!14931 = !DILocation(line: 380, column: 11, scope: !9817, inlinedAt: !14765)
!14932 = !DILocation(line: 380, column: 6, scope: !9614, inlinedAt: !14765)
!14933 = !DILocation(line: 380, column: 33, scope: !9817, inlinedAt: !14765)
!14934 = !DILocation(line: 381, column: 6, scope: !9822, inlinedAt: !14765)
!14935 = !DILocation(line: 381, column: 11, scope: !9822, inlinedAt: !14765)
!14936 = !DILocation(line: 381, column: 6, scope: !9614, inlinedAt: !14765)
!14937 = !DILocation(line: 381, column: 33, scope: !9822, inlinedAt: !14765)
!14938 = !DILocation(line: 382, column: 2, scope: !9827, inlinedAt: !14765)
!14939 = !DILocation(line: 382, column: 2, scope: !9831, inlinedAt: !14765)
!14940 = !DILocation(line: 382, column: 2, scope: !9832, inlinedAt: !14765)
!14941 = !DILocation(line: 386, column: 1, scope: !9614, inlinedAt: !14765)
!14942 = !DILocation(line: 547, column: 9, scope: !9595, inlinedAt: !14757)
!14943 = !DILocation(line: 549, column: 8, scope: !9838, inlinedAt: !14757)
!14944 = !DILocation(line: 549, column: 7, scope: !9595, inlinedAt: !14757)
!14945 = !DILocation(line: 550, column: 4, scope: !9838, inlinedAt: !14757)
!14946 = !DILocation(line: 553, column: 33, scope: !9595, inlinedAt: !14757)
!14947 = !DILocation(line: 325, column: 6, scope: !9843, inlinedAt: !14763)
!14948 = !DILocation(line: 325, column: 6, scope: !9608, inlinedAt: !14763)
!14949 = !DILocation(line: 326, column: 3, scope: !9843, inlinedAt: !14763)
!14950 = !DILocation(line: 332, column: 9, scope: !9608, inlinedAt: !14763)
!14951 = !DILocation(line: 332, column: 15, scope: !9608, inlinedAt: !14763)
!14952 = !DILocation(line: 332, column: 2, scope: !9608, inlinedAt: !14763)
!14953 = !DILocation(line: 336, column: 1, scope: !9608, inlinedAt: !14763)
!14954 = !DILocation(line: 553, column: 5, scope: !9595, inlinedAt: !14757)
!14955 = !DILocation(line: 553, column: 41, scope: !9595, inlinedAt: !14757)
!14956 = !DILocation(line: 554, column: 5, scope: !9595, inlinedAt: !14757)
!14957 = !DILocation(line: 554, column: 12, scope: !9595, inlinedAt: !14757)
!14958 = !DILocation(line: 448, column: 31, scope: !9590, inlinedAt: !14756)
!14959 = !DILocation(line: 448, column: 34, scope: !9590, inlinedAt: !14756)
!14960 = !DILocation(line: 448, column: 14, scope: !9590, inlinedAt: !14756)
!14961 = !DILocation(line: 450, column: 22, scope: !9590, inlinedAt: !14756)
!14962 = !DILocation(line: 450, column: 25, scope: !9590, inlinedAt: !14756)
!14963 = !DILocation(line: 450, column: 30, scope: !9590, inlinedAt: !14756)
!14964 = !DILocation(line: 450, column: 36, scope: !9590, inlinedAt: !14756)
!14965 = !DILocation(line: 450, column: 8, scope: !9590, inlinedAt: !14756)
!14966 = !DILocation(line: 450, column: 6, scope: !9590, inlinedAt: !14756)
!14967 = !DILocation(line: 451, column: 9, scope: !9590, inlinedAt: !14756)
!14968 = !DILocation(line: 552, column: 3, scope: !9595, inlinedAt: !14757)
!14969 = !DILocation(line: 557, column: 19, scope: !9597, inlinedAt: !14757)
!14970 = !DILocation(line: 557, column: 25, scope: !9597, inlinedAt: !14757)
!14971 = !DILocation(line: 557, column: 9, scope: !9597, inlinedAt: !14757)
!14972 = !DILocation(line: 557, column: 2, scope: !9597, inlinedAt: !14757)
!14973 = !DILocation(line: 558, column: 1, scope: !9597, inlinedAt: !14757)
!14974 = !DILocation(line: 591, column: 3, scope: !14758)
!14975 = !DILocation(line: 592, column: 19, scope: !14754)
!14976 = !DILocation(line: 592, column: 26, scope: !14754)
!14977 = !DILocation(line: 592, column: 9, scope: !14754)
!14978 = !DILocation(line: 592, column: 2, scope: !14754)
!14979 = !DILocation(line: 593, column: 1, scope: !14754)
!14980 = distinct !DISubprogram(name: "__must_check_overflow", scope: !14981, file: !14981, line: 52, type: !14982, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14981 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!14982 = !DISubroutineType(types: !14983)
!14983 = !{!817, !817}
!14984 = !DILocalVariable(name: "overflow", arg: 1, scope: !14980, file: !14981, line: 52, type: !817)
!14985 = !DILocation(line: 52, column: 60, scope: !14980)
!14986 = !DILocation(line: 54, column: 9, scope: !14980)
!14987 = !DILocation(line: 54, column: 2, scope: !14980)
!14988 = distinct !DISubprogram(name: "arch_atomic64_set", scope: !14989, file: !14989, line: 32, type: !12583, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14989 = !DIFile(filename: "./arch/x86/include/asm/atomic64_64.h", directory: "/home/lizy2001/genbc/linux")
!14990 = !DILocalVariable(name: "v", arg: 1, scope: !14988, file: !14989, line: 32, type: !12585)
!14991 = !DILocation(line: 32, column: 50, scope: !14988)
!14992 = !DILocalVariable(name: "i", arg: 2, scope: !14988, file: !14989, line: 32, type: !423)
!14993 = !DILocation(line: 32, column: 57, scope: !14988)
!14994 = !DILocation(line: 34, column: 2, scope: !14988)
!14995 = !DILocation(line: 34, column: 2, scope: !14996)
!14996 = distinct !DILexicalBlock(scope: !14988, file: !14989, line: 34, column: 2)
!14997 = !DILocation(line: 35, column: 1, scope: !14988)
!14998 = distinct !DISubprogram(name: "kasan_check_write", scope: !14999, file: !14999, line: 38, type: !15000, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!14999 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!15000 = !DISubroutineType(types: !15001)
!15001 = !{!817, !12576, !7}
!15002 = !DILocalVariable(name: "p", arg: 1, scope: !14998, file: !14999, line: 38, type: !12576)
!15003 = !DILocation(line: 38, column: 59, scope: !14998)
!15004 = !DILocalVariable(name: "size", arg: 2, scope: !14998, file: !14999, line: 38, type: !7)
!15005 = !DILocation(line: 38, column: 75, scope: !14998)
!15006 = !DILocation(line: 40, column: 2, scope: !14998)
!15007 = distinct !DISubprogram(name: "kcsan_check_access", scope: !15008, file: !15008, line: 178, type: !15009, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15008 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!15009 = !DISubroutineType(types: !15010)
!15010 = !{null, !12576, !1085, !78}
!15011 = !DILocalVariable(name: "ptr", arg: 1, scope: !15007, file: !15008, line: 178, type: !12576)
!15012 = !DILocation(line: 178, column: 60, scope: !15007)
!15013 = !DILocalVariable(name: "size", arg: 2, scope: !15007, file: !15008, line: 178, type: !1085)
!15014 = !DILocation(line: 178, column: 72, scope: !15007)
!15015 = !DILocalVariable(name: "type", arg: 3, scope: !15007, file: !15008, line: 179, type: !78)
!15016 = !DILocation(line: 179, column: 15, scope: !15007)
!15017 = !DILocation(line: 179, column: 23, scope: !15007)
!15018 = distinct !DISubprogram(name: "mlxsw_emad_rx_listener_func", scope: !3, file: !3, line: 673, type: !8169, scopeLine: 675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15019 = !DILocalVariable(name: "skb", arg: 1, scope: !15018, file: !3, line: 673, type: !461)
!15020 = !DILocation(line: 673, column: 57, scope: !15018)
!15021 = !DILocalVariable(name: "local_port", arg: 2, scope: !15018, file: !3, line: 673, type: !840)
!15022 = !DILocation(line: 673, column: 65, scope: !15018)
!15023 = !DILocalVariable(name: "priv", arg: 3, scope: !15018, file: !3, line: 674, type: !637)
!15024 = !DILocation(line: 674, column: 12, scope: !15018)
!15025 = !DILocalVariable(name: "mlxsw_core", scope: !15018, file: !3, line: 676, type: !7847)
!15026 = !DILocation(line: 676, column: 21, scope: !15018)
!15027 = !DILocation(line: 676, column: 34, scope: !15018)
!15028 = !DILocalVariable(name: "trans", scope: !15018, file: !3, line: 677, type: !7841)
!15029 = !DILocation(line: 677, column: 26, scope: !15018)
!15030 = !DILocation(line: 679, column: 38, scope: !15018)
!15031 = !DILocation(line: 679, column: 22, scope: !15018)
!15032 = !DILocation(line: 680, column: 8, scope: !15018)
!15033 = !DILocation(line: 680, column: 13, scope: !15018)
!15034 = !DILocation(line: 680, column: 19, scope: !15018)
!15035 = !DILocation(line: 680, column: 24, scope: !15018)
!15036 = !DILocation(line: 679, column: 2, scope: !15018)
!15037 = !DILocation(line: 682, column: 23, scope: !15018)
!15038 = !DILocation(line: 682, column: 2, scope: !15018)
!15039 = !DILocation(line: 684, column: 26, scope: !15040)
!15040 = distinct !DILexicalBlock(scope: !15018, file: !3, line: 684, column: 6)
!15041 = !DILocation(line: 684, column: 7, scope: !15040)
!15042 = !DILocation(line: 684, column: 6, scope: !15018)
!15043 = !DILocation(line: 685, column: 3, scope: !15040)
!15044 = !DILocalVariable(name: "__mptr", scope: !15045, file: !3, line: 687, type: !637)
!15045 = distinct !DILexicalBlock(scope: !15046, file: !3, line: 687, column: 2)
!15046 = distinct !DILexicalBlock(scope: !15018, file: !3, line: 687, column: 2)
!15047 = !DILocation(line: 687, column: 2, scope: !15045)
!15048 = !DILocation(line: 687, column: 2, scope: !15049)
!15049 = distinct !DILexicalBlock(scope: !15045, file: !3, line: 687, column: 2)
!15050 = !DILocation(line: 687, column: 2, scope: !15051)
!15051 = distinct !DILexicalBlock(scope: !15049, file: !3, line: 687, column: 2)
!15052 = !DILocation(line: 687, column: 2, scope: !15053)
!15053 = distinct !DILexicalBlock(scope: !15045, file: !3, line: 687, column: 2)
!15054 = !DILocation(line: 687, column: 2, scope: !15046)
!15055 = !DILocation(line: 687, column: 2, scope: !15056)
!15056 = distinct !DILexicalBlock(scope: !15046, file: !3, line: 687, column: 2)
!15057 = !DILocation(line: 688, column: 26, scope: !15058)
!15058 = distinct !DILexicalBlock(scope: !15059, file: !3, line: 688, column: 7)
!15059 = distinct !DILexicalBlock(scope: !15056, file: !3, line: 687, column: 69)
!15060 = !DILocation(line: 688, column: 7, scope: !15058)
!15061 = !DILocation(line: 688, column: 34, scope: !15058)
!15062 = !DILocation(line: 688, column: 41, scope: !15058)
!15063 = !DILocation(line: 688, column: 31, scope: !15058)
!15064 = !DILocation(line: 688, column: 7, scope: !15059)
!15065 = !DILocation(line: 689, column: 32, scope: !15066)
!15066 = distinct !DILexicalBlock(scope: !15058, file: !3, line: 688, column: 46)
!15067 = !DILocation(line: 689, column: 44, scope: !15066)
!15068 = !DILocation(line: 689, column: 51, scope: !15066)
!15069 = !DILocation(line: 689, column: 4, scope: !15066)
!15070 = !DILocation(line: 690, column: 4, scope: !15066)
!15071 = !DILocation(line: 692, column: 2, scope: !15059)
!15072 = !DILocalVariable(name: "__mptr", scope: !15073, file: !3, line: 687, type: !637)
!15073 = distinct !DILexicalBlock(scope: !15056, file: !3, line: 687, column: 2)
!15074 = !DILocation(line: 687, column: 2, scope: !15073)
!15075 = !DILocation(line: 687, column: 2, scope: !15076)
!15076 = distinct !DILexicalBlock(scope: !15073, file: !3, line: 687, column: 2)
!15077 = !DILocation(line: 687, column: 2, scope: !15078)
!15078 = distinct !DILexicalBlock(scope: !15076, file: !3, line: 687, column: 2)
!15079 = !DILocation(line: 687, column: 2, scope: !15080)
!15080 = distinct !DILexicalBlock(scope: !15073, file: !3, line: 687, column: 2)
!15081 = distinct !{!15081, !15054, !15082}
!15082 = !DILocation(line: 692, column: 2, scope: !15046)
!15083 = !DILabel(scope: !15018, name: "free_skb", file: !3, line: 694)
!15084 = !DILocation(line: 694, column: 1, scope: !15018)
!15085 = !DILocation(line: 695, column: 2, scope: !15018)
!15086 = !DILocation(line: 696, column: 1, scope: !15018)
!15087 = distinct !DISubprogram(name: "trace_devlink_hwmsg", scope: !15088, file: !15088, line: 17, type: !15089, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15088 = !DIFile(filename: "./include/trace/events/devlink.h", directory: "/home/lizy2001/genbc/linux")
!15089 = !DISubroutineType(types: !15090)
!15090 = !{null, !15091, !817, !358, !5789, !1085}
!15091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15092, size: 64)
!15092 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5561)
!15093 = !DILocalVariable(name: "devlink", arg: 1, scope: !15087, file: !15088, line: 17, type: !15091)
!15094 = !DILocation(line: 17, column: 1, scope: !15087)
!15095 = !DILocalVariable(name: "incoming", arg: 2, scope: !15087, file: !15088, line: 17, type: !817)
!15096 = !DILocalVariable(name: "type", arg: 3, scope: !15087, file: !15088, line: 17, type: !358)
!15097 = !DILocalVariable(name: "buf", arg: 4, scope: !15087, file: !15088, line: 17, type: !5789)
!15098 = !DILocalVariable(name: "len", arg: 5, scope: !15087, file: !15088, line: 17, type: !1085)
!15099 = distinct !DISubprogram(name: "mlxsw_emad_tlv_parse", scope: !3, file: !3, line: 422, type: !515, scopeLine: 423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15100 = !DILocalVariable(name: "skb", arg: 1, scope: !15099, file: !3, line: 422, type: !461)
!15101 = !DILocation(line: 422, column: 50, scope: !15099)
!15102 = !DILocalVariable(name: "offsets", scope: !15099, file: !3, line: 424, type: !8235)
!15103 = !DILocation(line: 424, column: 33, scope: !15099)
!15104 = !DILocation(line: 425, column: 37, scope: !15099)
!15105 = !DILocation(line: 425, column: 42, scope: !15099)
!15106 = !DILocation(line: 425, column: 3, scope: !15099)
!15107 = !DILocation(line: 427, column: 2, scope: !15099)
!15108 = !DILocation(line: 427, column: 11, scope: !15099)
!15109 = !DILocation(line: 427, column: 18, scope: !15099)
!15110 = !DILocation(line: 428, column: 2, scope: !15099)
!15111 = !DILocation(line: 428, column: 11, scope: !15099)
!15112 = !DILocation(line: 428, column: 22, scope: !15099)
!15113 = !DILocation(line: 429, column: 2, scope: !15099)
!15114 = !DILocation(line: 429, column: 11, scope: !15099)
!15115 = !DILocation(line: 429, column: 19, scope: !15099)
!15116 = !DILocation(line: 433, column: 35, scope: !15117)
!15117 = distinct !DILexicalBlock(scope: !15099, file: !3, line: 433, column: 6)
!15118 = !DILocation(line: 433, column: 40, scope: !15117)
!15119 = !DILocation(line: 433, column: 47, scope: !15117)
!15120 = !DILocation(line: 433, column: 56, scope: !15117)
!15121 = !DILocation(line: 433, column: 45, scope: !15117)
!15122 = !DILocation(line: 433, column: 6, scope: !15117)
!15123 = !DILocation(line: 433, column: 6, scope: !15099)
!15124 = !DILocation(line: 434, column: 25, scope: !15125)
!15125 = distinct !DILexicalBlock(scope: !15117, file: !3, line: 433, column: 66)
!15126 = !DILocation(line: 434, column: 34, scope: !15125)
!15127 = !DILocation(line: 434, column: 3, scope: !15125)
!15128 = !DILocation(line: 434, column: 12, scope: !15125)
!15129 = !DILocation(line: 434, column: 23, scope: !15125)
!15130 = !DILocation(line: 435, column: 3, scope: !15125)
!15131 = !DILocation(line: 435, column: 12, scope: !15125)
!15132 = !DILocation(line: 435, column: 20, scope: !15125)
!15133 = !DILocation(line: 436, column: 2, scope: !15125)
!15134 = !DILocation(line: 437, column: 1, scope: !15099)
!15135 = distinct !DISubprogram(name: "mlxsw_emad_is_resp", scope: !3, file: !3, line: 484, type: !15136, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15136 = !DISubroutineType(types: !15137)
!15137 = !{!817, !7132}
!15138 = !DILocalVariable(name: "skb", arg: 1, scope: !15135, file: !3, line: 484, type: !7132)
!15139 = !DILocation(line: 484, column: 54, scope: !15135)
!15140 = !DILocalVariable(name: "op_tlv", scope: !15135, file: !3, line: 486, type: !1084)
!15141 = !DILocation(line: 486, column: 8, scope: !15135)
!15142 = !DILocation(line: 488, column: 29, scope: !15135)
!15143 = !DILocation(line: 488, column: 11, scope: !15135)
!15144 = !DILocation(line: 488, column: 9, scope: !15135)
!15145 = !DILocation(line: 489, column: 34, scope: !15135)
!15146 = !DILocation(line: 489, column: 10, scope: !15135)
!15147 = !DILocation(line: 489, column: 42, scope: !15135)
!15148 = !DILocation(line: 489, column: 2, scope: !15135)
!15149 = distinct !DISubprogram(name: "mlxsw_emad_get_tid", scope: !3, file: !3, line: 476, type: !15150, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15150 = !DISubroutineType(types: !15151)
!15151 = !{!377, !7132}
!15152 = !DILocalVariable(name: "skb", arg: 1, scope: !15149, file: !3, line: 476, type: !7132)
!15153 = !DILocation(line: 476, column: 53, scope: !15149)
!15154 = !DILocalVariable(name: "op_tlv", scope: !15149, file: !3, line: 478, type: !1084)
!15155 = !DILocation(line: 478, column: 8, scope: !15149)
!15156 = !DILocation(line: 480, column: 29, scope: !15149)
!15157 = !DILocation(line: 480, column: 11, scope: !15149)
!15158 = !DILocation(line: 480, column: 9, scope: !15149)
!15159 = !DILocation(line: 481, column: 35, scope: !15149)
!15160 = !DILocation(line: 481, column: 9, scope: !15149)
!15161 = !DILocation(line: 481, column: 2, scope: !15149)
!15162 = distinct !DISubprogram(name: "mlxsw_emad_process_response", scope: !3, file: !3, line: 645, type: !15163, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15163 = !DISubroutineType(types: !15164)
!15164 = !{null, !7847, !7841, !461}
!15165 = !DILocalVariable(name: "v", arg: 1, scope: !15166, file: !15167, line: 121, type: !15170)
!15166 = distinct !DISubprogram(name: "arch_atomic_dec_and_test", scope: !15167, file: !15167, line: 121, type: !15168, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15167 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!15168 = !DISubroutineType(types: !15169)
!15169 = !{!817, !15170}
!15170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 64)
!15171 = !DILocation(line: 121, column: 64, scope: !15166, inlinedAt: !15172)
!15172 = distinct !DILocation(line: 749, column: 9, scope: !15173, inlinedAt: !15174)
!15173 = distinct !DISubprogram(name: "atomic_dec_and_test", scope: !12582, file: !12582, line: 746, type: !15168, scopeLine: 747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15174 = distinct !DILocation(line: 651, column: 7, scope: !15175)
!15175 = distinct !DILexicalBlock(scope: !15162, file: !3, line: 651, column: 6)
!15176 = !DILocalVariable(name: "c", scope: !15177, file: !15167, line: 123, type: !817)
!15177 = distinct !DILexicalBlock(scope: !15166, file: !15167, line: 123, column: 9)
!15178 = !DILocation(line: 123, column: 9, scope: !15177, inlinedAt: !15172)
!15179 = !DILocalVariable(name: "v", arg: 1, scope: !15180, file: !12573, line: 99, type: !12576)
!15180 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !12573, file: !12573, line: 99, type: !12574, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15181 = !DILocation(line: 99, column: 79, scope: !15180, inlinedAt: !15182)
!15182 = distinct !DILocation(line: 748, column: 2, scope: !15173, inlinedAt: !15174)
!15183 = !DILocalVariable(name: "size", arg: 2, scope: !15180, file: !12573, line: 99, type: !1085)
!15184 = !DILocation(line: 99, column: 89, scope: !15180, inlinedAt: !15182)
!15185 = !DILocalVariable(name: "v", arg: 1, scope: !15173, file: !12582, line: 746, type: !15170)
!15186 = !DILocation(line: 746, column: 31, scope: !15173, inlinedAt: !15174)
!15187 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !15162, file: !3, line: 645, type: !7847)
!15188 = !DILocation(line: 645, column: 60, scope: !15162)
!15189 = !DILocalVariable(name: "trans", arg: 2, scope: !15162, file: !3, line: 646, type: !7841)
!15190 = !DILocation(line: 646, column: 30, scope: !15162)
!15191 = !DILocalVariable(name: "skb", arg: 3, scope: !15162, file: !3, line: 647, type: !461)
!15192 = !DILocation(line: 647, column: 22, scope: !15162)
!15193 = !DILocalVariable(name: "err", scope: !15162, file: !3, line: 649, type: !78)
!15194 = !DILocation(line: 649, column: 6, scope: !15162)
!15195 = !DILocation(line: 651, column: 28, scope: !15175)
!15196 = !DILocation(line: 651, column: 35, scope: !15175)
!15197 = !DILocation(line: 748, column: 31, scope: !15173, inlinedAt: !15174)
!15198 = !DILocation(line: 101, column: 20, scope: !15180, inlinedAt: !15182)
!15199 = !DILocation(line: 101, column: 23, scope: !15180, inlinedAt: !15182)
!15200 = !DILocation(line: 101, column: 2, scope: !15180, inlinedAt: !15182)
!15201 = !DILocation(line: 102, column: 2, scope: !15180, inlinedAt: !15182)
!15202 = !DILocation(line: 749, column: 34, scope: !15173, inlinedAt: !15174)
!15203 = !{i32 -2146541981, i32 -2146541914}
!15204 = !DILocation(line: 651, column: 6, scope: !15162)
!15205 = !DILocation(line: 652, column: 3, scope: !15175)
!15206 = !DILocation(line: 654, column: 38, scope: !15162)
!15207 = !DILocation(line: 654, column: 44, scope: !15162)
!15208 = !DILocation(line: 654, column: 51, scope: !15162)
!15209 = !DILocation(line: 654, column: 8, scope: !15162)
!15210 = !DILocation(line: 654, column: 6, scope: !15162)
!15211 = !DILocation(line: 655, column: 6, scope: !15212)
!15212 = distinct !DILexicalBlock(scope: !15162, file: !3, line: 655, column: 6)
!15213 = !DILocation(line: 655, column: 10, scope: !15212)
!15214 = !DILocation(line: 655, column: 6, scope: !15162)
!15215 = !DILocation(line: 656, column: 29, scope: !15216)
!15216 = distinct !DILexicalBlock(scope: !15212, file: !3, line: 655, column: 22)
!15217 = !DILocation(line: 656, column: 41, scope: !15216)
!15218 = !DILocation(line: 656, column: 3, scope: !15216)
!15219 = !DILocation(line: 657, column: 2, scope: !15216)
!15220 = !DILocation(line: 658, column: 7, scope: !15221)
!15221 = distinct !DILexicalBlock(scope: !15222, file: !3, line: 658, column: 7)
!15222 = distinct !DILexicalBlock(scope: !15212, file: !3, line: 657, column: 9)
!15223 = !DILocation(line: 658, column: 11, scope: !15221)
!15224 = !DILocation(line: 658, column: 7, scope: !15222)
!15225 = !DILocalVariable(name: "reg_tlv", scope: !15226, file: !3, line: 659, type: !1084)
!15226 = distinct !DILexicalBlock(scope: !15221, file: !3, line: 658, column: 17)
!15227 = !DILocation(line: 659, column: 10, scope: !15226)
!15228 = !DILocation(line: 659, column: 39, scope: !15226)
!15229 = !DILocation(line: 659, column: 20, scope: !15226)
!15230 = !DILocation(line: 661, column: 8, scope: !15231)
!15231 = distinct !DILexicalBlock(scope: !15226, file: !3, line: 661, column: 8)
!15232 = !DILocation(line: 661, column: 15, scope: !15231)
!15233 = !DILocation(line: 661, column: 8, scope: !15226)
!15234 = !DILocation(line: 662, column: 5, scope: !15231)
!15235 = !DILocation(line: 662, column: 12, scope: !15231)
!15236 = !DILocation(line: 662, column: 15, scope: !15231)
!15237 = !DILocation(line: 663, column: 31, scope: !15231)
!15238 = !DILocation(line: 663, column: 8, scope: !15231)
!15239 = !DILocation(line: 664, column: 8, scope: !15231)
!15240 = !DILocation(line: 664, column: 15, scope: !15231)
!15241 = !DILocation(line: 664, column: 20, scope: !15231)
!15242 = !DILocation(line: 664, column: 25, scope: !15231)
!15243 = !DILocation(line: 664, column: 32, scope: !15231)
!15244 = !DILocation(line: 665, column: 3, scope: !15226)
!15245 = !DILocation(line: 666, column: 34, scope: !15246)
!15246 = distinct !DILexicalBlock(scope: !15221, file: !3, line: 665, column: 10)
!15247 = !DILocation(line: 666, column: 39, scope: !15246)
!15248 = !DILocation(line: 666, column: 4, scope: !15246)
!15249 = !DILocation(line: 668, column: 27, scope: !15222)
!15250 = !DILocation(line: 668, column: 34, scope: !15222)
!15251 = !DILocation(line: 668, column: 3, scope: !15222)
!15252 = !DILocation(line: 670, column: 1, scope: !15162)
!15253 = distinct !DISubprogram(name: "mlxsw_emad_tlv_is_string_tlv", scope: !3, file: !3, line: 415, type: !15254, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15254 = !DISubroutineType(types: !15255)
!15255 = !{!817, !338}
!15256 = !DILocalVariable(name: "tlv", arg: 1, scope: !15253, file: !3, line: 415, type: !338)
!15257 = !DILocation(line: 415, column: 54, scope: !15253)
!15258 = !DILocalVariable(name: "tlv_type", scope: !15253, file: !3, line: 417, type: !840)
!15259 = !DILocation(line: 417, column: 5, scope: !15253)
!15260 = !DILocation(line: 417, column: 47, scope: !15253)
!15261 = !DILocation(line: 417, column: 16, scope: !15253)
!15262 = !DILocation(line: 419, column: 9, scope: !15253)
!15263 = !DILocation(line: 419, column: 18, scope: !15253)
!15264 = !DILocation(line: 419, column: 2, scope: !15253)
!15265 = distinct !DISubprogram(name: "mlxsw_emad_string_tlv_type_get", scope: !3, file: !3, line: 271, type: !13882, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15266 = !DILocalVariable(name: "buf", arg: 1, scope: !15265, file: !3, line: 271, type: !338)
!15267 = !DILocation(line: 271, column: 1, scope: !15265)
!15268 = distinct !DISubprogram(name: "mlxsw_emad_op_tlv", scope: !3, file: !3, line: 439, type: !15269, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15269 = !DISubroutineType(types: !15270)
!15270 = !{!1084, !7132}
!15271 = !DILocalVariable(name: "skb", arg: 1, scope: !15268, file: !3, line: 439, type: !7132)
!15272 = !DILocation(line: 439, column: 54, scope: !15268)
!15273 = !DILocalVariable(name: "offsets", scope: !15268, file: !3, line: 441, type: !8235)
!15274 = !DILocation(line: 441, column: 33, scope: !15268)
!15275 = !DILocation(line: 442, column: 37, scope: !15268)
!15276 = !DILocation(line: 442, column: 42, scope: !15268)
!15277 = !DILocation(line: 442, column: 3, scope: !15268)
!15278 = !DILocation(line: 444, column: 20, scope: !15268)
!15279 = !DILocation(line: 444, column: 25, scope: !15268)
!15280 = !DILocation(line: 444, column: 32, scope: !15268)
!15281 = !DILocation(line: 444, column: 41, scope: !15268)
!15282 = !DILocation(line: 444, column: 30, scope: !15268)
!15283 = !DILocation(line: 444, column: 2, scope: !15268)
!15284 = distinct !DISubprogram(name: "mlxsw_emad_op_tlv_r_get", scope: !3, file: !3, line: 246, type: !13882, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15285 = !DILocalVariable(name: "buf", arg: 1, scope: !15284, file: !3, line: 246, type: !338)
!15286 = !DILocation(line: 246, column: 1, scope: !15284)
!15287 = distinct !DISubprogram(name: "mlxsw_emad_op_tlv_tid_get", scope: !3, file: !3, line: 265, type: !15288, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15288 = !DISubroutineType(types: !15289)
!15289 = !{!377, !338}
!15290 = !DILocalVariable(name: "buf", arg: 1, scope: !15287, file: !3, line: 265, type: !338)
!15291 = !DILocation(line: 265, column: 1, scope: !15287)
!15292 = distinct !DISubprogram(name: "__mlxsw_item_get64", scope: !8318, file: !8318, line: 145, type: !15293, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15293 = !DISubroutineType(types: !15294)
!15294 = !{!377, !338, !13904, !522}
!15295 = !DILocalVariable(name: "buf", arg: 1, scope: !15292, file: !8318, line: 145, type: !338)
!15296 = !DILocation(line: 145, column: 50, scope: !15292)
!15297 = !DILocalVariable(name: "item", arg: 2, scope: !15292, file: !8318, line: 146, type: !13904)
!15298 = !DILocation(line: 146, column: 35, scope: !15292)
!15299 = !DILocalVariable(name: "index", arg: 3, scope: !15292, file: !8318, line: 147, type: !522)
!15300 = !DILocation(line: 147, column: 25, scope: !15292)
!15301 = !DILocalVariable(name: "offset", scope: !15292, file: !8318, line: 149, type: !7)
!15302 = !DILocation(line: 149, column: 15, scope: !15292)
!15303 = !DILocation(line: 149, column: 44, scope: !15292)
!15304 = !DILocation(line: 149, column: 50, scope: !15292)
!15305 = !DILocation(line: 149, column: 24, scope: !15292)
!15306 = !DILocalVariable(name: "b", scope: !15292, file: !8318, line: 150, type: !8241)
!15307 = !DILocation(line: 150, column: 10, scope: !15292)
!15308 = !DILocation(line: 150, column: 25, scope: !15292)
!15309 = !DILocation(line: 150, column: 14, scope: !15292)
!15310 = !DILocalVariable(name: "tmp", scope: !15292, file: !8318, line: 151, type: !377)
!15311 = !DILocation(line: 151, column: 6, scope: !15292)
!15312 = !DILocation(line: 153, column: 8, scope: !15292)
!15313 = !DILocation(line: 153, column: 6, scope: !15292)
!15314 = !DILocation(line: 154, column: 10, scope: !15292)
!15315 = !DILocation(line: 154, column: 16, scope: !15292)
!15316 = !DILocation(line: 154, column: 6, scope: !15292)
!15317 = !DILocation(line: 155, column: 9, scope: !15292)
!15318 = !DILocation(line: 155, column: 6, scope: !15292)
!15319 = !DILocation(line: 156, column: 6, scope: !15320)
!15320 = distinct !DILexicalBlock(scope: !15292, file: !8318, line: 156, column: 6)
!15321 = !DILocation(line: 156, column: 12, scope: !15320)
!15322 = !DILocation(line: 156, column: 6, scope: !15292)
!15323 = !DILocation(line: 157, column: 11, scope: !15320)
!15324 = !DILocation(line: 157, column: 17, scope: !15320)
!15325 = !DILocation(line: 157, column: 7, scope: !15320)
!15326 = !DILocation(line: 157, column: 3, scope: !15320)
!15327 = !DILocation(line: 158, column: 9, scope: !15292)
!15328 = !DILocation(line: 158, column: 2, scope: !15292)
!15329 = distinct !DISubprogram(name: "__fswab64", scope: !14018, file: !14018, line: 66, type: !15330, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15330 = !DISubroutineType(types: !15331)
!15331 = !{!379, !379}
!15332 = !DILocalVariable(name: "val", arg: 1, scope: !15329, file: !14018, line: 66, type: !379)
!15333 = !DILocation(line: 66, column: 57, scope: !15329)
!15334 = !DILocation(line: 69, column: 23, scope: !15329)
!15335 = !DILocation(line: 69, column: 9, scope: !15329)
!15336 = !DILocation(line: 69, column: 2, scope: !15329)
!15337 = distinct !DISubprogram(name: "__arch_swab64", scope: !14027, file: !14027, line: 15, type: !15330, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15338 = !DILocalVariable(name: "val", arg: 1, scope: !15337, file: !14027, line: 15, type: !379)
!15339 = !DILocation(line: 15, column: 61, scope: !15337)
!15340 = !DILocation(line: 31, column: 38, scope: !15337)
!15341 = !DILocation(line: 31, column: 2, scope: !15337)
!15342 = !{i32 448165}
!15343 = !DILocation(line: 32, column: 9, scope: !15337)
!15344 = !DILocation(line: 32, column: 2, scope: !15337)
!15345 = distinct !DISubprogram(name: "mlxsw_emad_process_status_skb", scope: !3, file: !3, line: 517, type: !15346, scopeLine: 519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15346 = !DISubroutineType(types: !15347)
!15347 = !{!78, !461, !15348}
!15348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7456, size: 64)
!15349 = !DILocalVariable(name: "skb", arg: 1, scope: !15345, file: !3, line: 517, type: !461)
!15350 = !DILocation(line: 517, column: 47, scope: !15345)
!15351 = !DILocalVariable(name: "p_status", arg: 2, scope: !15345, file: !3, line: 518, type: !15348)
!15352 = !DILocation(line: 518, column: 41, scope: !15345)
!15353 = !DILocation(line: 520, column: 53, scope: !15345)
!15354 = !DILocation(line: 520, column: 35, scope: !15345)
!15355 = !DILocation(line: 520, column: 59, scope: !15345)
!15356 = !DILocation(line: 520, column: 9, scope: !15345)
!15357 = !DILocation(line: 520, column: 2, scope: !15345)
!15358 = distinct !DISubprogram(name: "mlxsw_emad_transmit_retry", scope: !3, file: !3, line: 614, type: !15359, scopeLine: 616, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15359 = !DISubroutineType(types: !15360)
!15360 = !{null, !7847, !7841}
!15361 = !DILocation(line: 121, column: 64, scope: !15166, inlinedAt: !15362)
!15362 = distinct !DILocation(line: 749, column: 9, scope: !15173, inlinedAt: !15363)
!15363 = distinct !DILocation(line: 625, column: 8, scope: !15364)
!15364 = distinct !DILexicalBlock(scope: !15365, file: !3, line: 625, column: 7)
!15365 = distinct !DILexicalBlock(scope: !15366, file: !3, line: 619, column: 45)
!15366 = distinct !DILexicalBlock(scope: !15358, file: !3, line: 619, column: 6)
!15367 = !DILocation(line: 123, column: 9, scope: !15177, inlinedAt: !15362)
!15368 = !DILocation(line: 99, column: 79, scope: !15180, inlinedAt: !15369)
!15369 = distinct !DILocation(line: 748, column: 2, scope: !15173, inlinedAt: !15363)
!15370 = !DILocation(line: 99, column: 89, scope: !15180, inlinedAt: !15369)
!15371 = !DILocation(line: 746, column: 31, scope: !15173, inlinedAt: !15363)
!15372 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !15358, file: !3, line: 614, type: !7847)
!15373 = !DILocation(line: 614, column: 58, scope: !15358)
!15374 = !DILocalVariable(name: "trans", arg: 2, scope: !15358, file: !3, line: 615, type: !7841)
!15375 = !DILocation(line: 615, column: 35, scope: !15358)
!15376 = !DILocalVariable(name: "err", scope: !15358, file: !3, line: 617, type: !78)
!15377 = !DILocation(line: 617, column: 6, scope: !15358)
!15378 = !DILocation(line: 619, column: 6, scope: !15366)
!15379 = !DILocation(line: 619, column: 13, scope: !15366)
!15380 = !DILocation(line: 619, column: 21, scope: !15366)
!15381 = !DILocation(line: 619, column: 6, scope: !15358)
!15382 = !DILocation(line: 620, column: 3, scope: !15365)
!15383 = !DILocation(line: 620, column: 10, scope: !15365)
!15384 = !DILocation(line: 620, column: 17, scope: !15365)
!15385 = !DILocation(line: 621, column: 29, scope: !15365)
!15386 = !DILocation(line: 621, column: 36, scope: !15365)
!15387 = !DILocation(line: 621, column: 42, scope: !15365)
!15388 = !DILocation(line: 621, column: 9, scope: !15365)
!15389 = !DILocation(line: 621, column: 7, scope: !15365)
!15390 = !DILocation(line: 622, column: 7, scope: !15391)
!15391 = distinct !DILexicalBlock(scope: !15365, file: !3, line: 622, column: 7)
!15392 = !DILocation(line: 622, column: 11, scope: !15391)
!15393 = !DILocation(line: 622, column: 7, scope: !15365)
!15394 = !DILocation(line: 623, column: 4, scope: !15391)
!15395 = !DILocation(line: 625, column: 29, scope: !15364)
!15396 = !DILocation(line: 625, column: 36, scope: !15364)
!15397 = !DILocation(line: 748, column: 31, scope: !15173, inlinedAt: !15363)
!15398 = !DILocation(line: 101, column: 20, scope: !15180, inlinedAt: !15369)
!15399 = !DILocation(line: 101, column: 23, scope: !15180, inlinedAt: !15369)
!15400 = !DILocation(line: 101, column: 2, scope: !15180, inlinedAt: !15369)
!15401 = !DILocation(line: 102, column: 2, scope: !15180, inlinedAt: !15369)
!15402 = !DILocation(line: 749, column: 34, scope: !15173, inlinedAt: !15363)
!15403 = !DILocation(line: 625, column: 7, scope: !15365)
!15404 = !DILocation(line: 626, column: 4, scope: !15364)
!15405 = !DILocation(line: 627, column: 2, scope: !15365)
!15406 = !DILocation(line: 628, column: 7, scope: !15407)
!15407 = distinct !DILexicalBlock(scope: !15366, file: !3, line: 627, column: 9)
!15408 = !DILocation(line: 630, column: 26, scope: !15358)
!15409 = !DILocation(line: 630, column: 33, scope: !15358)
!15410 = !DILocation(line: 630, column: 2, scope: !15358)
!15411 = !DILocation(line: 631, column: 1, scope: !15358)
!15412 = distinct !DISubprogram(name: "mlxsw_emad_reg_tlv", scope: !3, file: !3, line: 458, type: !15269, scopeLine: 459, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15413 = !DILocalVariable(name: "skb", arg: 1, scope: !15412, file: !3, line: 458, type: !7132)
!15414 = !DILocation(line: 458, column: 55, scope: !15412)
!15415 = !DILocalVariable(name: "offsets", scope: !15412, file: !3, line: 460, type: !8235)
!15416 = !DILocation(line: 460, column: 33, scope: !15412)
!15417 = !DILocation(line: 461, column: 37, scope: !15412)
!15418 = !DILocation(line: 461, column: 42, scope: !15412)
!15419 = !DILocation(line: 461, column: 3, scope: !15412)
!15420 = !DILocation(line: 463, column: 20, scope: !15412)
!15421 = !DILocation(line: 463, column: 25, scope: !15412)
!15422 = !DILocation(line: 463, column: 32, scope: !15412)
!15423 = !DILocation(line: 463, column: 41, scope: !15412)
!15424 = !DILocation(line: 463, column: 30, scope: !15412)
!15425 = !DILocation(line: 463, column: 2, scope: !15412)
!15426 = distinct !DISubprogram(name: "mlxsw_emad_reg_payload", scope: !3, file: !3, line: 466, type: !15427, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15427 = !DISubroutineType(types: !15428)
!15428 = !{!1084, !338}
!15429 = !DILocalVariable(name: "reg_tlv", arg: 1, scope: !15426, file: !3, line: 466, type: !338)
!15430 = !DILocation(line: 466, column: 49, scope: !15426)
!15431 = !DILocation(line: 468, column: 20, scope: !15426)
!15432 = !DILocation(line: 468, column: 28, scope: !15426)
!15433 = !DILocation(line: 468, column: 2, scope: !15426)
!15434 = distinct !DISubprogram(name: "mlxsw_emad_process_string_tlv", scope: !3, file: !3, line: 544, type: !15435, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15435 = !DISubroutineType(types: !15436)
!15436 = !{null, !7132, !7841}
!15437 = !DILocalVariable(name: "skb", arg: 1, scope: !15434, file: !3, line: 544, type: !7132)
!15438 = !DILocation(line: 544, column: 65, scope: !15434)
!15439 = !DILocalVariable(name: "trans", arg: 2, scope: !15434, file: !3, line: 545, type: !7841)
!15440 = !DILocation(line: 545, column: 32, scope: !15434)
!15441 = !DILocalVariable(name: "string_tlv", scope: !15434, file: !3, line: 547, type: !1084)
!15442 = !DILocation(line: 547, column: 8, scope: !15434)
!15443 = !DILocalVariable(name: "string", scope: !15434, file: !3, line: 548, type: !1084)
!15444 = !DILocation(line: 548, column: 8, scope: !15434)
!15445 = !DILocation(line: 550, column: 37, scope: !15434)
!15446 = !DILocation(line: 550, column: 15, scope: !15434)
!15447 = !DILocation(line: 550, column: 13, scope: !15434)
!15448 = !DILocation(line: 551, column: 7, scope: !15449)
!15449 = distinct !DILexicalBlock(scope: !15434, file: !3, line: 551, column: 6)
!15450 = !DILocation(line: 551, column: 6, scope: !15434)
!15451 = !DILocation(line: 552, column: 3, scope: !15449)
!15452 = !DILocation(line: 554, column: 27, scope: !15434)
!15453 = !DILocation(line: 554, column: 2, scope: !15434)
!15454 = !DILocation(line: 554, column: 9, scope: !15434)
!15455 = !DILocation(line: 554, column: 25, scope: !15434)
!15456 = !DILocation(line: 556, column: 7, scope: !15457)
!15457 = distinct !DILexicalBlock(scope: !15434, file: !3, line: 556, column: 6)
!15458 = !DILocation(line: 556, column: 14, scope: !15457)
!15459 = !DILocation(line: 556, column: 6, scope: !15434)
!15460 = !DILocation(line: 557, column: 3, scope: !15457)
!15461 = !DILocation(line: 559, column: 45, scope: !15434)
!15462 = !DILocation(line: 559, column: 11, scope: !15434)
!15463 = !DILocation(line: 559, column: 9, scope: !15434)
!15464 = !DILocation(line: 560, column: 10, scope: !15434)
!15465 = !DILocation(line: 560, column: 17, scope: !15434)
!15466 = !DILocation(line: 560, column: 34, scope: !15434)
!15467 = !DILocation(line: 560, column: 2, scope: !15434)
!15468 = !DILocation(line: 562, column: 1, scope: !15434)
!15469 = distinct !DISubprogram(name: "mlxsw_emad_trans_finish", scope: !3, file: !3, line: 602, type: !15470, scopeLine: 603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15470 = !DISubroutineType(types: !15471)
!15471 = !{null, !7841, !78}
!15472 = !DILocalVariable(name: "trans", arg: 1, scope: !15469, file: !3, line: 602, type: !7841)
!15473 = !DILocation(line: 602, column: 61, scope: !15469)
!15474 = !DILocalVariable(name: "err", arg: 2, scope: !15469, file: !3, line: 602, type: !78)
!15475 = !DILocation(line: 602, column: 72, scope: !15469)
!15476 = !DILocalVariable(name: "mlxsw_core", scope: !15469, file: !3, line: 604, type: !7847)
!15477 = !DILocation(line: 604, column: 21, scope: !15469)
!15478 = !DILocation(line: 604, column: 34, scope: !15469)
!15479 = !DILocation(line: 604, column: 41, scope: !15469)
!15480 = !DILocation(line: 606, column: 2, scope: !15469)
!15481 = !DILocation(line: 607, column: 16, scope: !15469)
!15482 = !DILocation(line: 607, column: 28, scope: !15469)
!15483 = !DILocation(line: 607, column: 33, scope: !15469)
!15484 = !DILocation(line: 607, column: 2, scope: !15469)
!15485 = !DILocation(line: 608, column: 16, scope: !15469)
!15486 = !DILocation(line: 608, column: 23, scope: !15469)
!15487 = !DILocation(line: 608, column: 2, scope: !15469)
!15488 = !DILocation(line: 609, column: 18, scope: !15469)
!15489 = !DILocation(line: 609, column: 30, scope: !15469)
!15490 = !DILocation(line: 609, column: 35, scope: !15469)
!15491 = !DILocation(line: 609, column: 2, scope: !15469)
!15492 = !DILocation(line: 610, column: 15, scope: !15469)
!15493 = !DILocation(line: 610, column: 2, scope: !15469)
!15494 = !DILocation(line: 610, column: 9, scope: !15469)
!15495 = !DILocation(line: 610, column: 13, scope: !15469)
!15496 = !DILocation(line: 611, column: 12, scope: !15469)
!15497 = !DILocation(line: 611, column: 19, scope: !15469)
!15498 = !DILocation(line: 611, column: 2, scope: !15469)
!15499 = !DILocation(line: 612, column: 1, scope: !15469)
!15500 = distinct !DISubprogram(name: "mlxsw_emad_process_status", scope: !3, file: !3, line: 492, type: !15501, scopeLine: 494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15501 = !DISubroutineType(types: !15502)
!15502 = !{!78, !1084, !15348}
!15503 = !DILocalVariable(name: "op_tlv", arg: 1, scope: !15500, file: !3, line: 492, type: !1084)
!15504 = !DILocation(line: 492, column: 44, scope: !15500)
!15505 = !DILocalVariable(name: "p_status", arg: 2, scope: !15500, file: !3, line: 493, type: !15348)
!15506 = !DILocation(line: 493, column: 41, scope: !15500)
!15507 = !DILocation(line: 495, column: 43, scope: !15500)
!15508 = !DILocation(line: 495, column: 14, scope: !15500)
!15509 = !DILocation(line: 495, column: 3, scope: !15500)
!15510 = !DILocation(line: 495, column: 12, scope: !15500)
!15511 = !DILocation(line: 497, column: 11, scope: !15500)
!15512 = !DILocation(line: 497, column: 10, scope: !15500)
!15513 = !DILocation(line: 497, column: 2, scope: !15500)
!15514 = !DILocation(line: 499, column: 3, scope: !15515)
!15515 = distinct !DILexicalBlock(scope: !15500, file: !3, line: 497, column: 21)
!15516 = !DILocation(line: 502, column: 3, scope: !15515)
!15517 = !DILocation(line: 512, column: 3, scope: !15515)
!15518 = !DILocation(line: 514, column: 1, scope: !15500)
!15519 = distinct !DISubprogram(name: "mlxsw_emad_op_tlv_status_get", scope: !3, file: !3, line: 236, type: !13882, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15520 = !DILocalVariable(name: "buf", arg: 1, scope: !15519, file: !3, line: 236, type: !338)
!15521 = !DILocation(line: 236, column: 1, scope: !15519)
!15522 = distinct !DISubprogram(name: "mlxsw_emad_transmit", scope: !3, file: !3, line: 578, type: !15523, scopeLine: 580, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15523 = !DISubroutineType(types: !15524)
!15524 = !{!78, !7847, !7841}
!15525 = !DILocalVariable(name: "v", arg: 1, scope: !15526, file: !15167, line: 39, type: !15170)
!15526 = distinct !DISubprogram(name: "arch_atomic_set", scope: !15167, file: !15167, line: 39, type: !15527, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15527 = !DISubroutineType(types: !15528)
!15528 = !{null, !15170, !78}
!15529 = !DILocation(line: 39, column: 55, scope: !15526, inlinedAt: !15530)
!15530 = distinct !DILocation(line: 46, column: 2, scope: !15531, inlinedAt: !15532)
!15531 = distinct !DISubprogram(name: "atomic_set", scope: !12582, file: !12582, line: 43, type: !15527, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15532 = distinct !DILocation(line: 592, column: 2, scope: !15522)
!15533 = !DILocalVariable(name: "i", arg: 2, scope: !15526, file: !15167, line: 39, type: !78)
!15534 = !DILocation(line: 39, column: 62, scope: !15526, inlinedAt: !15530)
!15535 = !DILocation(line: 84, column: 74, scope: !12572, inlinedAt: !15536)
!15536 = distinct !DILocation(line: 45, column: 2, scope: !15531, inlinedAt: !15532)
!15537 = !DILocation(line: 84, column: 84, scope: !12572, inlinedAt: !15536)
!15538 = !DILocalVariable(name: "v", arg: 1, scope: !15531, file: !12582, line: 43, type: !15170)
!15539 = !DILocation(line: 43, column: 22, scope: !15531, inlinedAt: !15532)
!15540 = !DILocalVariable(name: "i", arg: 2, scope: !15531, file: !12582, line: 43, type: !78)
!15541 = !DILocation(line: 43, column: 29, scope: !15531, inlinedAt: !15532)
!15542 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !15522, file: !3, line: 578, type: !7847)
!15543 = !DILocation(line: 578, column: 51, scope: !15522)
!15544 = !DILocalVariable(name: "trans", arg: 2, scope: !15522, file: !3, line: 579, type: !7841)
!15545 = !DILocation(line: 579, column: 35, scope: !15522)
!15546 = !DILocalVariable(name: "skb", scope: !15522, file: !3, line: 581, type: !461)
!15547 = !DILocation(line: 581, column: 18, scope: !15522)
!15548 = !DILocalVariable(name: "err", scope: !15522, file: !3, line: 582, type: !78)
!15549 = !DILocation(line: 582, column: 6, scope: !15522)
!15550 = !DILocation(line: 584, column: 17, scope: !15522)
!15551 = !DILocation(line: 584, column: 24, scope: !15522)
!15552 = !DILocation(line: 584, column: 8, scope: !15522)
!15553 = !DILocation(line: 584, column: 6, scope: !15522)
!15554 = !DILocation(line: 585, column: 7, scope: !15555)
!15555 = distinct !DILexicalBlock(scope: !15522, file: !3, line: 585, column: 6)
!15556 = !DILocation(line: 585, column: 6, scope: !15522)
!15557 = !DILocation(line: 586, column: 3, scope: !15555)
!15558 = !DILocation(line: 588, column: 38, scope: !15522)
!15559 = !DILocation(line: 588, column: 22, scope: !15522)
!15560 = !DILocation(line: 589, column: 8, scope: !15522)
!15561 = !DILocation(line: 589, column: 13, scope: !15522)
!15562 = !DILocation(line: 589, column: 20, scope: !15522)
!15563 = !DILocation(line: 589, column: 32, scope: !15522)
!15564 = !DILocation(line: 589, column: 40, scope: !15522)
!15565 = !DILocation(line: 589, column: 18, scope: !15522)
!15566 = !DILocation(line: 590, column: 8, scope: !15522)
!15567 = !DILocation(line: 590, column: 13, scope: !15522)
!15568 = !DILocation(line: 590, column: 19, scope: !15522)
!15569 = !DILocation(line: 590, column: 31, scope: !15522)
!15570 = !DILocation(line: 590, column: 39, scope: !15522)
!15571 = !DILocation(line: 590, column: 17, scope: !15522)
!15572 = !DILocation(line: 588, column: 2, scope: !15522)
!15573 = !DILocation(line: 592, column: 14, scope: !15522)
!15574 = !DILocation(line: 592, column: 21, scope: !15522)
!15575 = !DILocation(line: 45, column: 26, scope: !15531, inlinedAt: !15532)
!15576 = !DILocation(line: 86, column: 20, scope: !12572, inlinedAt: !15536)
!15577 = !DILocation(line: 86, column: 23, scope: !12572, inlinedAt: !15536)
!15578 = !DILocation(line: 86, column: 2, scope: !12572, inlinedAt: !15536)
!15579 = !DILocation(line: 87, column: 2, scope: !12572, inlinedAt: !15536)
!15580 = !DILocation(line: 46, column: 18, scope: !15531, inlinedAt: !15532)
!15581 = !DILocation(line: 46, column: 21, scope: !15531, inlinedAt: !15532)
!15582 = !DILocation(line: 41, column: 2, scope: !15583, inlinedAt: !15530)
!15583 = distinct !DILexicalBlock(scope: !15526, file: !15167, line: 41, column: 2)
!15584 = !DILocation(line: 593, column: 32, scope: !15522)
!15585 = !DILocation(line: 593, column: 44, scope: !15522)
!15586 = !DILocation(line: 593, column: 50, scope: !15522)
!15587 = !DILocation(line: 593, column: 57, scope: !15522)
!15588 = !DILocation(line: 593, column: 8, scope: !15522)
!15589 = !DILocation(line: 593, column: 6, scope: !15522)
!15590 = !DILocation(line: 594, column: 6, scope: !15591)
!15591 = distinct !DILexicalBlock(scope: !15522, file: !3, line: 594, column: 6)
!15592 = !DILocation(line: 594, column: 6, scope: !15522)
!15593 = !DILocation(line: 595, column: 3, scope: !15594)
!15594 = distinct !DILexicalBlock(scope: !15591, file: !3, line: 594, column: 11)
!15595 = !DILocation(line: 596, column: 10, scope: !15594)
!15596 = !DILocation(line: 596, column: 3, scope: !15594)
!15597 = !DILocation(line: 598, column: 36, scope: !15522)
!15598 = !DILocation(line: 598, column: 2, scope: !15522)
!15599 = !DILocation(line: 599, column: 2, scope: !15522)
!15600 = !DILocation(line: 600, column: 1, scope: !15522)
!15601 = distinct !DISubprogram(name: "mlxsw_emad_trans_timeout_schedule", scope: !3, file: !3, line: 567, type: !15602, scopeLine: 568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15602 = !DISubroutineType(types: !15603)
!15603 = !{null, !7841}
!15604 = !DILocalVariable(name: "m", arg: 1, scope: !15605, file: !15606, line: 363, type: !4796)
!15605 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !15606, file: !15606, line: 363, type: !15607, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15606 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!15607 = !DISubroutineType(types: !15608)
!15608 = !{!358, !4796}
!15609 = !DILocation(line: 363, column: 74, scope: !15605, inlinedAt: !15610)
!15610 = distinct !DILocation(line: 572, column: 13, scope: !15611)
!15611 = distinct !DILexicalBlock(scope: !15601, file: !3, line: 571, column: 6)
!15612 = !DILocation(line: 363, column: 74, scope: !15605, inlinedAt: !15613)
!15613 = distinct !DILocation(line: 569, column: 26, scope: !15601)
!15614 = !DILocalVariable(name: "trans", arg: 1, scope: !15601, file: !3, line: 567, type: !7841)
!15615 = !DILocation(line: 567, column: 71, scope: !15601)
!15616 = !DILocalVariable(name: "timeout", scope: !15601, file: !3, line: 569, type: !358)
!15617 = !DILocation(line: 569, column: 16, scope: !15601)
!15618 = !DILocation(line: 365, column: 27, scope: !15619, inlinedAt: !15613)
!15619 = distinct !DILexicalBlock(scope: !15605, file: !15606, line: 365, column: 6)
!15620 = !DILocation(line: 365, column: 6, scope: !15619, inlinedAt: !15613)
!15621 = !DILocation(line: 365, column: 6, scope: !15605, inlinedAt: !15613)
!15622 = !DILocation(line: 366, column: 12, scope: !15623, inlinedAt: !15613)
!15623 = distinct !DILexicalBlock(scope: !15624, file: !15606, line: 366, column: 7)
!15624 = distinct !DILexicalBlock(scope: !15619, file: !15606, line: 365, column: 31)
!15625 = !DILocation(line: 366, column: 14, scope: !15623, inlinedAt: !15613)
!15626 = !DILocation(line: 366, column: 7, scope: !15624, inlinedAt: !15613)
!15627 = !DILocation(line: 367, column: 4, scope: !15623, inlinedAt: !15613)
!15628 = !DILocation(line: 368, column: 28, scope: !15624, inlinedAt: !15613)
!15629 = !DILocation(line: 368, column: 10, scope: !15624, inlinedAt: !15613)
!15630 = !DILocation(line: 368, column: 3, scope: !15624, inlinedAt: !15613)
!15631 = !DILocation(line: 370, column: 29, scope: !15632, inlinedAt: !15613)
!15632 = distinct !DILexicalBlock(scope: !15619, file: !15606, line: 369, column: 9)
!15633 = !DILocation(line: 370, column: 10, scope: !15632, inlinedAt: !15613)
!15634 = !DILocation(line: 370, column: 3, scope: !15632, inlinedAt: !15613)
!15635 = !DILocation(line: 372, column: 1, scope: !15605, inlinedAt: !15613)
!15636 = !DILocation(line: 571, column: 6, scope: !15611)
!15637 = !DILocation(line: 571, column: 13, scope: !15611)
!15638 = !DILocation(line: 571, column: 19, scope: !15611)
!15639 = !DILocation(line: 571, column: 6, scope: !15601)
!15640 = !DILocation(line: 365, column: 27, scope: !15619, inlinedAt: !15610)
!15641 = !DILocation(line: 365, column: 6, scope: !15619, inlinedAt: !15610)
!15642 = !DILocation(line: 365, column: 6, scope: !15605, inlinedAt: !15610)
!15643 = !DILocation(line: 366, column: 12, scope: !15623, inlinedAt: !15610)
!15644 = !DILocation(line: 366, column: 14, scope: !15623, inlinedAt: !15610)
!15645 = !DILocation(line: 366, column: 7, scope: !15624, inlinedAt: !15610)
!15646 = !DILocation(line: 367, column: 4, scope: !15623, inlinedAt: !15610)
!15647 = !DILocation(line: 368, column: 28, scope: !15624, inlinedAt: !15610)
!15648 = !DILocation(line: 368, column: 10, scope: !15624, inlinedAt: !15610)
!15649 = !DILocation(line: 368, column: 3, scope: !15624, inlinedAt: !15610)
!15650 = !DILocation(line: 370, column: 29, scope: !15632, inlinedAt: !15610)
!15651 = !DILocation(line: 370, column: 10, scope: !15632, inlinedAt: !15610)
!15652 = !DILocation(line: 370, column: 3, scope: !15632, inlinedAt: !15610)
!15653 = !DILocation(line: 372, column: 1, scope: !15605, inlinedAt: !15610)
!15654 = !DILocation(line: 572, column: 11, scope: !15611)
!15655 = !DILocation(line: 572, column: 3, scope: !15611)
!15656 = !DILocation(line: 574, column: 21, scope: !15601)
!15657 = !DILocation(line: 574, column: 28, scope: !15601)
!15658 = !DILocation(line: 574, column: 34, scope: !15601)
!15659 = !DILocation(line: 574, column: 44, scope: !15601)
!15660 = !DILocation(line: 574, column: 51, scope: !15601)
!15661 = !DILocation(line: 575, column: 7, scope: !15601)
!15662 = !DILocation(line: 575, column: 18, scope: !15601)
!15663 = !DILocation(line: 575, column: 25, scope: !15601)
!15664 = !DILocation(line: 575, column: 15, scope: !15601)
!15665 = !DILocation(line: 574, column: 2, scope: !15601)
!15666 = !DILocation(line: 576, column: 1, scope: !15601)
!15667 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !15606, file: !15606, line: 308, type: !15607, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15668 = !DILocalVariable(name: "m", arg: 1, scope: !15667, file: !15606, line: 308, type: !4796)
!15669 = !DILocation(line: 308, column: 66, scope: !15667)
!15670 = !DILocation(line: 310, column: 10, scope: !15667)
!15671 = !DILocation(line: 310, column: 12, scope: !15667)
!15672 = !DILocation(line: 310, column: 34, scope: !15667)
!15673 = !DILocation(line: 310, column: 39, scope: !15667)
!15674 = !DILocation(line: 310, column: 2, scope: !15667)
!15675 = distinct !DISubprogram(name: "mlxsw_emad_string_tlv", scope: !3, file: !3, line: 447, type: !15269, scopeLine: 448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15676 = !DILocalVariable(name: "skb", arg: 1, scope: !15675, file: !3, line: 447, type: !7132)
!15677 = !DILocation(line: 447, column: 58, scope: !15675)
!15678 = !DILocalVariable(name: "offsets", scope: !15675, file: !3, line: 449, type: !8235)
!15679 = !DILocation(line: 449, column: 33, scope: !15675)
!15680 = !DILocation(line: 450, column: 37, scope: !15675)
!15681 = !DILocation(line: 450, column: 42, scope: !15675)
!15682 = !DILocation(line: 450, column: 3, scope: !15675)
!15683 = !DILocation(line: 452, column: 7, scope: !15684)
!15684 = distinct !DILexicalBlock(scope: !15675, file: !3, line: 452, column: 6)
!15685 = !DILocation(line: 452, column: 16, scope: !15684)
!15686 = !DILocation(line: 452, column: 6, scope: !15675)
!15687 = !DILocation(line: 453, column: 3, scope: !15684)
!15688 = !DILocation(line: 455, column: 20, scope: !15675)
!15689 = !DILocation(line: 455, column: 25, scope: !15675)
!15690 = !DILocation(line: 455, column: 32, scope: !15675)
!15691 = !DILocation(line: 455, column: 41, scope: !15675)
!15692 = !DILocation(line: 455, column: 30, scope: !15675)
!15693 = !DILocation(line: 455, column: 2, scope: !15675)
!15694 = !DILocation(line: 456, column: 1, scope: !15675)
!15695 = distinct !DISubprogram(name: "mlxsw_emad_string_tlv_string_data", scope: !3, file: !3, line: 283, type: !15696, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15696 = !DISubroutineType(types: !15697)
!15697 = !{!1084, !1084}
!15698 = !DILocalVariable(name: "buf", arg: 1, scope: !15695, file: !3, line: 283, type: !1084)
!15699 = !DILocation(line: 283, column: 1, scope: !15695)
!15700 = distinct !DISubprogram(name: "__mlxsw_item_data", scope: !8318, file: !8318, line: 196, type: !15701, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15701 = !DISubroutineType(types: !15702)
!15702 = !{!1084, !1084, !13904, !522}
!15703 = !DILocalVariable(name: "buf", arg: 1, scope: !15700, file: !8318, line: 196, type: !1084)
!15704 = !DILocation(line: 196, column: 45, scope: !15700)
!15705 = !DILocalVariable(name: "item", arg: 2, scope: !15700, file: !8318, line: 196, type: !13904)
!15706 = !DILocation(line: 196, column: 75, scope: !15700)
!15707 = !DILocalVariable(name: "index", arg: 3, scope: !15700, file: !8318, line: 197, type: !522)
!15708 = !DILocation(line: 197, column: 26, scope: !15700)
!15709 = !DILocalVariable(name: "offset", scope: !15700, file: !8318, line: 199, type: !7)
!15710 = !DILocation(line: 199, column: 15, scope: !15700)
!15711 = !DILocation(line: 199, column: 44, scope: !15700)
!15712 = !DILocation(line: 199, column: 50, scope: !15700)
!15713 = !DILocation(line: 199, column: 24, scope: !15700)
!15714 = !DILocation(line: 201, column: 10, scope: !15700)
!15715 = !DILocation(line: 201, column: 14, scope: !15700)
!15716 = !DILocation(line: 201, column: 2, scope: !15700)
!15717 = distinct !DISubprogram(name: "spin_lock_bh", scope: !8906, file: !8906, line: 357, type: !8907, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15718 = !DILocalVariable(name: "val", arg: 1, scope: !15719, file: !15720, line: 77, type: !78)
!15719 = distinct !DISubprogram(name: "__preempt_count_add", scope: !15720, file: !15720, line: 77, type: !3847, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15720 = !DIFile(filename: "./arch/x86/include/asm/preempt.h", directory: "/home/lizy2001/genbc/linux")
!15721 = !DILocation(line: 77, column: 53, scope: !15719, inlinedAt: !15722)
!15722 = distinct !DILocation(line: 12, column: 2, scope: !15723, inlinedAt: !15727)
!15723 = distinct !DISubprogram(name: "__local_bh_disable_ip", scope: !15724, file: !15724, line: 10, type: !15725, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15724 = !DIFile(filename: "./include/linux/bottom_half.h", directory: "/home/lizy2001/genbc/linux")
!15725 = !DISubroutineType(types: !15726)
!15726 = !{null, !358, !7}
!15727 = distinct !DILocation(line: 359, column: 2, scope: !15728)
!15728 = distinct !DILexicalBlock(scope: !15717, file: !8906, line: 359, column: 2)
!15729 = !DILocalVariable(name: "pao_ID__", scope: !15730, file: !15720, line: 79, type: !15731)
!15730 = distinct !DILexicalBlock(scope: !15719, file: !15720, line: 79, column: 2)
!15731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !78)
!15732 = !DILocation(line: 79, column: 2, scope: !15730, inlinedAt: !15722)
!15733 = !DILocalVariable(name: "pto_val__", scope: !15734, file: !15720, line: 79, type: !1033)
!15734 = distinct !DILexicalBlock(scope: !15735, file: !15720, line: 79, column: 2)
!15735 = distinct !DILexicalBlock(scope: !15736, file: !15720, line: 79, column: 2)
!15736 = distinct !DILexicalBlock(scope: !15730, file: !15720, line: 79, column: 2)
!15737 = !DILocation(line: 79, column: 2, scope: !15734, inlinedAt: !15722)
!15738 = !DILocalVariable(name: "ip", arg: 1, scope: !15723, file: !15724, line: 10, type: !358)
!15739 = !DILocation(line: 10, column: 65, scope: !15723, inlinedAt: !15727)
!15740 = !DILocalVariable(name: "cnt", arg: 2, scope: !15723, file: !15724, line: 10, type: !7)
!15741 = !DILocation(line: 10, column: 82, scope: !15723, inlinedAt: !15727)
!15742 = !DILocalVariable(name: "lock", arg: 1, scope: !15717, file: !8906, line: 357, type: !2227)
!15743 = !DILocation(line: 357, column: 54, scope: !15717)
!15744 = !DILocation(line: 359, column: 2, scope: !15717)
!15745 = !DILocation(line: 359, column: 2, scope: !15746)
!15746 = distinct !DILexicalBlock(scope: !15728, file: !8906, line: 359, column: 2)
!15747 = !DILabel(scope: !15746, name: "__here", file: !8906, line: 359)
!15748 = !DILocation(line: 12, column: 2, scope: !15723, inlinedAt: !15727)
!15749 = !{i32 -2145463781}
!15750 = !DILocation(line: 13, column: 2, scope: !15723, inlinedAt: !15727)
!15751 = !{i32 -2145454179}
!15752 = !DILocation(line: 359, column: 2, scope: !15728)
!15753 = !DILocation(line: 359, column: 2, scope: !15754)
!15754 = distinct !DILexicalBlock(scope: !15728, file: !8906, line: 359, column: 2)
!15755 = !DILocation(line: 360, column: 1, scope: !15717)
!15756 = distinct !DISubprogram(name: "spin_unlock_bh", scope: !8906, file: !8906, line: 397, type: !8907, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15757 = !DILocalVariable(name: "lock", arg: 1, scope: !15756, file: !8906, line: 397, type: !2227)
!15758 = !DILocation(line: 397, column: 56, scope: !15756)
!15759 = !DILocation(line: 399, column: 2, scope: !15756)
!15760 = !DILocation(line: 399, column: 2, scope: !15761)
!15761 = distinct !DILexicalBlock(scope: !15762, file: !8906, line: 399, column: 2)
!15762 = distinct !DILexicalBlock(scope: !15756, file: !8906, line: 399, column: 2)
!15763 = !DILabel(scope: !15761, name: "__here", file: !8906, line: 399)
!15764 = !DILocation(line: 399, column: 2, scope: !15762)
!15765 = !DILocation(line: 399, column: 2, scope: !15766)
!15766 = distinct !DILexicalBlock(scope: !15762, file: !8906, line: 399, column: 2)
!15767 = !DILocation(line: 400, column: 1, scope: !15756)
!15768 = distinct !DISubprogram(name: "mlxsw_core_fw_params_register", scope: !3, file: !3, line: 1150, type: !7893, scopeLine: 1151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15769 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !15768, file: !3, line: 1150, type: !7847)
!15770 = !DILocation(line: 1150, column: 61, scope: !15768)
!15771 = !DILocalVariable(name: "devlink", scope: !15768, file: !3, line: 1152, type: !5560)
!15772 = !DILocation(line: 1152, column: 18, scope: !15768)
!15773 = !DILocation(line: 1152, column: 44, scope: !15768)
!15774 = !DILocation(line: 1152, column: 28, scope: !15768)
!15775 = !DILocalVariable(name: "value", scope: !15768, file: !3, line: 1153, type: !8429)
!15776 = !DILocation(line: 1153, column: 28, scope: !15768)
!15777 = !DILocalVariable(name: "err", scope: !15768, file: !3, line: 1154, type: !78)
!15778 = !DILocation(line: 1154, column: 6, scope: !15768)
!15779 = !DILocation(line: 1156, column: 32, scope: !15768)
!15780 = !DILocation(line: 1156, column: 8, scope: !15768)
!15781 = !DILocation(line: 1156, column: 6, scope: !15768)
!15782 = !DILocation(line: 1158, column: 6, scope: !15783)
!15783 = distinct !DILexicalBlock(scope: !15768, file: !3, line: 1158, column: 6)
!15784 = !DILocation(line: 1158, column: 6, scope: !15768)
!15785 = !DILocation(line: 1159, column: 10, scope: !15783)
!15786 = !DILocation(line: 1159, column: 3, scope: !15783)
!15787 = !DILocation(line: 1161, column: 8, scope: !15768)
!15788 = !DILocation(line: 1161, column: 12, scope: !15768)
!15789 = !DILocation(line: 1162, column: 37, scope: !15768)
!15790 = !DILocation(line: 1162, column: 2, scope: !15768)
!15791 = !DILocation(line: 1163, column: 2, scope: !15768)
!15792 = !DILocation(line: 1164, column: 1, scope: !15768)
!15793 = distinct !DISubprogram(name: "mlxsw_core_fw_params_unregister", scope: !3, file: !3, line: 1166, type: !7889, scopeLine: 1167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15794 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !15793, file: !3, line: 1166, type: !7847)
!15795 = !DILocation(line: 1166, column: 64, scope: !15793)
!15796 = !DILocation(line: 1168, column: 44, scope: !15793)
!15797 = !DILocation(line: 1168, column: 28, scope: !15793)
!15798 = !DILocation(line: 1168, column: 2, scope: !15793)
!15799 = !DILocation(line: 1170, column: 1, scope: !15793)
!15800 = !DILocalVariable(name: "devlink", arg: 1, scope: !8444, file: !3, line: 1132, type: !5560)
!15801 = !DILocation(line: 1132, column: 77, scope: !8444)
!15802 = !DILocalVariable(name: "id", arg: 2, scope: !8444, file: !3, line: 1132, type: !1033)
!15803 = !DILocation(line: 1132, column: 90, scope: !8444)
!15804 = !DILocalVariable(name: "val", arg: 3, scope: !8444, file: !3, line: 1133, type: !8429)
!15805 = !DILocation(line: 1133, column: 38, scope: !8444)
!15806 = !DILocalVariable(name: "extack", arg: 4, scope: !8444, file: !3, line: 1134, type: !932)
!15807 = !DILocation(line: 1134, column: 36, scope: !8444)
!15808 = !DILocation(line: 1136, column: 10, scope: !15809)
!15809 = distinct !DILexicalBlock(scope: !8444, file: !3, line: 1136, column: 6)
!15810 = !DILocation(line: 1136, column: 6, scope: !15809)
!15811 = !DILocation(line: 1136, column: 14, scope: !15809)
!15812 = !DILocation(line: 1136, column: 59, scope: !15809)
!15813 = !DILocation(line: 1137, column: 10, scope: !15809)
!15814 = !DILocation(line: 1137, column: 6, scope: !15809)
!15815 = !DILocation(line: 1137, column: 14, scope: !15809)
!15816 = !DILocation(line: 1136, column: 6, scope: !8444)
!15817 = !DILocation(line: 1138, column: 3, scope: !15818)
!15818 = distinct !DILexicalBlock(scope: !15809, file: !3, line: 1137, column: 59)
!15819 = !DILocalVariable(name: "__extack", scope: !15820, file: !3, line: 1138, type: !932)
!15820 = distinct !DILexicalBlock(scope: !15818, file: !3, line: 1138, column: 3)
!15821 = !DILocation(line: 1138, column: 3, scope: !15820)
!15822 = !DILocation(line: 1138, column: 3, scope: !15823)
!15823 = distinct !DILexicalBlock(scope: !15820, file: !3, line: 1138, column: 3)
!15824 = !DILocation(line: 1139, column: 3, scope: !15818)
!15825 = !DILocation(line: 1142, column: 2, scope: !8444)
!15826 = !DILocation(line: 1143, column: 1, scope: !8444)
!15827 = distinct !DISubprogram(name: "IS_ERR", scope: !15828, file: !15828, line: 34, type: !15829, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15828 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!15829 = !DISubroutineType(types: !15830)
!15830 = !{!817, !3303}
!15831 = !DILocalVariable(name: "ptr", arg: 1, scope: !15827, file: !15828, line: 34, type: !3303)
!15832 = !DILocation(line: 34, column: 60, scope: !15827)
!15833 = !DILocation(line: 36, column: 9, scope: !15827)
!15834 = !DILocation(line: 36, column: 2, scope: !15827)
!15835 = distinct !DISubprogram(name: "PTR_ERR", scope: !15828, file: !15828, line: 29, type: !15836, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15836 = !DISubroutineType(types: !15837)
!15837 = !{!1044, !3303}
!15838 = !DILocalVariable(name: "ptr", arg: 1, scope: !15835, file: !15828, line: 29, type: !3303)
!15839 = !DILocation(line: 29, column: 61, scope: !15835)
!15840 = !DILocation(line: 31, column: 16, scope: !15835)
!15841 = !DILocation(line: 31, column: 9, scope: !15835)
!15842 = !DILocation(line: 31, column: 2, scope: !15835)
!15843 = distinct !DISubprogram(name: "mlxsw_core_health_fw_fatal_config", scope: !3, file: !3, line: 1802, type: !15844, scopeLine: 1804, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15844 = !DISubroutineType(types: !15845)
!15845 = !{!78, !7847, !817}
!15846 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !15843, file: !3, line: 1802, type: !7847)
!15847 = !DILocation(line: 1802, column: 65, scope: !15843)
!15848 = !DILocalVariable(name: "enable", arg: 2, scope: !15843, file: !3, line: 1803, type: !817)
!15849 = !DILocation(line: 1803, column: 16, scope: !15843)
!15850 = !DILocalVariable(name: "mfgd_pl", scope: !15843, file: !3, line: 1805, type: !6621)
!15851 = !DILocation(line: 1805, column: 7, scope: !15843)
!15852 = !DILocalVariable(name: "err", scope: !15843, file: !3, line: 1806, type: !78)
!15853 = !DILocation(line: 1806, column: 6, scope: !15843)
!15854 = !DILocation(line: 1809, column: 24, scope: !15843)
!15855 = !DILocation(line: 1809, column: 53, scope: !15843)
!15856 = !DILocation(line: 1809, column: 8, scope: !15843)
!15857 = !DILocation(line: 1809, column: 6, scope: !15843)
!15858 = !DILocation(line: 1810, column: 6, scope: !15859)
!15859 = distinct !DILexicalBlock(scope: !15843, file: !3, line: 1810, column: 6)
!15860 = !DILocation(line: 1810, column: 6, scope: !15843)
!15861 = !DILocation(line: 1811, column: 10, scope: !15859)
!15862 = !DILocation(line: 1811, column: 3, scope: !15859)
!15863 = !DILocation(line: 1812, column: 38, scope: !15843)
!15864 = !DILocation(line: 1812, column: 47, scope: !15843)
!15865 = !DILocation(line: 1812, column: 2, scope: !15843)
!15866 = !DILocation(line: 1813, column: 25, scope: !15843)
!15867 = !DILocation(line: 1813, column: 54, scope: !15843)
!15868 = !DILocation(line: 1813, column: 9, scope: !15843)
!15869 = !DILocation(line: 1813, column: 2, scope: !15843)
!15870 = !DILocation(line: 1814, column: 1, scope: !15843)
!15871 = distinct !DISubprogram(name: "mlxsw_core_health_fw_fatal_dump", scope: !3, file: !3, line: 1668, type: !8460, scopeLine: 1671, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!15872 = !DILocalVariable(name: "reporter", arg: 1, scope: !15871, file: !3, line: 1668, type: !8124)
!15873 = !DILocation(line: 1668, column: 76, scope: !15871)
!15874 = !DILocalVariable(name: "fmsg", arg: 2, scope: !15871, file: !3, line: 1669, type: !8462)
!15875 = !DILocation(line: 1669, column: 30, scope: !15871)
!15876 = !DILocalVariable(name: "priv_ctx", arg: 3, scope: !15871, file: !3, line: 1669, type: !637)
!15877 = !DILocation(line: 1669, column: 42, scope: !15871)
!15878 = !DILocalVariable(name: "extack", arg: 4, scope: !15871, file: !3, line: 1670, type: !932)
!15879 = !DILocation(line: 1670, column: 33, scope: !15871)
!15880 = !DILocalVariable(name: "mfde_pl", scope: !15871, file: !3, line: 1672, type: !1084)
!15881 = !DILocation(line: 1672, column: 8, scope: !15871)
!15882 = !DILocation(line: 1672, column: 18, scope: !15871)
!15883 = !DILocalVariable(name: "val_str", scope: !15871, file: !3, line: 1673, type: !1084)
!15884 = !DILocation(line: 1673, column: 8, scope: !15871)
!15885 = !DILocalVariable(name: "event_id", scope: !15871, file: !3, line: 1674, type: !840)
!15886 = !DILocation(line: 1674, column: 5, scope: !15871)
!15887 = !DILocalVariable(name: "val", scope: !15871, file: !3, line: 1675, type: !1033)
!15888 = !DILocation(line: 1675, column: 6, scope: !15871)
!15889 = !DILocalVariable(name: "err", scope: !15871, file: !3, line: 1676, type: !78)
!15890 = !DILocation(line: 1676, column: 6, scope: !15871)
!15891 = !DILocation(line: 1678, column: 7, scope: !15892)
!15892 = distinct !DILexicalBlock(scope: !15871, file: !3, line: 1678, column: 6)
!15893 = !DILocation(line: 1678, column: 6, scope: !15871)
!15894 = !DILocation(line: 1680, column: 3, scope: !15892)
!15895 = !DILocation(line: 1682, column: 36, scope: !15871)
!15896 = !DILocation(line: 1682, column: 8, scope: !15871)
!15897 = !DILocation(line: 1682, column: 6, scope: !15871)
!15898 = !DILocation(line: 1683, column: 33, scope: !15871)
!15899 = !DILocation(line: 1683, column: 51, scope: !15871)
!15900 = !DILocation(line: 1683, column: 8, scope: !15871)
!15901 = !DILocation(line: 1683, column: 6, scope: !15871)
!15902 = !DILocation(line: 1684, column: 6, scope: !15903)
!15903 = distinct !DILexicalBlock(scope: !15871, file: !3, line: 1684, column: 6)
!15904 = !DILocation(line: 1684, column: 6, scope: !15871)
!15905 = !DILocation(line: 1685, column: 10, scope: !15903)
!15906 = !DILocation(line: 1685, column: 3, scope: !15903)
!15907 = !DILocation(line: 1686, column: 41, scope: !15871)
!15908 = !DILocation(line: 1686, column: 8, scope: !15871)
!15909 = !DILocation(line: 1686, column: 6, scope: !15871)
!15910 = !DILocation(line: 1687, column: 6, scope: !15911)
!15911 = distinct !DILexicalBlock(scope: !15871, file: !3, line: 1687, column: 6)
!15912 = !DILocation(line: 1687, column: 6, scope: !15871)
!15913 = !DILocation(line: 1688, column: 10, scope: !15911)
!15914 = !DILocation(line: 1688, column: 3, scope: !15911)
!15915 = !DILocation(line: 1690, column: 41, scope: !15871)
!15916 = !DILocation(line: 1690, column: 13, scope: !15871)
!15917 = !DILocation(line: 1690, column: 11, scope: !15871)
!15918 = !DILocation(line: 1691, column: 33, scope: !15871)
!15919 = !DILocation(line: 1691, column: 45, scope: !15871)
!15920 = !DILocation(line: 1691, column: 8, scope: !15871)
!15921 = !DILocation(line: 1691, column: 6, scope: !15871)
!15922 = !DILocation(line: 1692, column: 6, scope: !15923)
!15923 = distinct !DILexicalBlock(scope: !15871, file: !3, line: 1692, column: 6)
!15924 = !DILocation(line: 1692, column: 6, scope: !15871)
!15925 = !DILocation(line: 1693, column: 10, scope: !15923)
!15926 = !DILocation(line: 1693, column: 3, scope: !15923)
!15927 = !DILocation(line: 1694, column: 10, scope: !15871)
!15928 = !DILocation(line: 1694, column: 2, scope: !15871)
!15929 = !DILocation(line: 1696, column: 11, scope: !15930)
!15930 = distinct !DILexicalBlock(scope: !15871, file: !3, line: 1694, column: 20)
!15931 = !DILocation(line: 1697, column: 3, scope: !15930)
!15932 = !DILocation(line: 1699, column: 11, scope: !15930)
!15933 = !DILocation(line: 1700, column: 3, scope: !15930)
!15934 = !DILocation(line: 1702, column: 11, scope: !15930)
!15935 = !DILocation(line: 1703, column: 2, scope: !15930)
!15936 = !DILocation(line: 1704, column: 6, scope: !15937)
!15937 = distinct !DILexicalBlock(scope: !15871, file: !3, line: 1704, column: 6)
!15938 = !DILocation(line: 1704, column: 6, scope: !15871)
!15939 = !DILocation(line: 1705, column: 38, scope: !15940)
!15940 = distinct !DILexicalBlock(scope: !15937, file: !3, line: 1704, column: 15)
!15941 = !DILocation(line: 1705, column: 52, scope: !15940)
!15942 = !DILocation(line: 1705, column: 9, scope: !15940)
!15943 = !DILocation(line: 1705, column: 7, scope: !15940)
!15944 = !DILocation(line: 1706, column: 7, scope: !15945)
!15945 = distinct !DILexicalBlock(scope: !15940, file: !3, line: 1706, column: 7)
!15946 = !DILocation(line: 1706, column: 7, scope: !15940)
!15947 = !DILocation(line: 1707, column: 11, scope: !15945)
!15948 = !DILocation(line: 1707, column: 4, scope: !15945)
!15949 = !DILocation(line: 1708, column: 2, scope: !15940)
!15950 = !DILocation(line: 1709, column: 39, scope: !15871)
!15951 = !DILocation(line: 1709, column: 8, scope: !15871)
!15952 = !DILocation(line: 1709, column: 6, scope: !15871)
!15953 = !DILocation(line: 1710, column: 6, scope: !15954)
!15954 = distinct !DILexicalBlock(scope: !15871, file: !3, line: 1710, column: 6)
!15955 = !DILocation(line: 1710, column: 6, scope: !15871)
!15956 = !DILocation(line: 1711, column: 10, scope: !15954)
!15957 = !DILocation(line: 1711, column: 3, scope: !15954)
!15958 = !DILocation(line: 1713, column: 34, scope: !15871)
!15959 = !DILocation(line: 1713, column: 8, scope: !15871)
!15960 = !DILocation(line: 1713, column: 6, scope: !15871)
!15961 = !DILocation(line: 1714, column: 10, scope: !15871)
!15962 = !DILocation(line: 1714, column: 2, scope: !15871)
!15963 = !DILocation(line: 1716, column: 11, scope: !15964)
!15964 = distinct !DILexicalBlock(scope: !15871, file: !3, line: 1714, column: 15)
!15965 = !DILocation(line: 1717, column: 3, scope: !15964)
!15966 = !DILocation(line: 1719, column: 11, scope: !15964)
!15967 = !DILocation(line: 1720, column: 3, scope: !15964)
!15968 = !DILocation(line: 1722, column: 11, scope: !15964)
!15969 = !DILocation(line: 1723, column: 2, scope: !15964)
!15970 = !DILocation(line: 1724, column: 6, scope: !15971)
!15971 = distinct !DILexicalBlock(scope: !15871, file: !3, line: 1724, column: 6)
!15972 = !DILocation(line: 1724, column: 6, scope: !15871)
!15973 = !DILocation(line: 1725, column: 38, scope: !15974)
!15974 = distinct !DILexicalBlock(scope: !15971, file: !3, line: 1724, column: 15)
!15975 = !DILocation(line: 1725, column: 54, scope: !15974)
!15976 = !DILocation(line: 1725, column: 9, scope: !15974)
!15977 = !DILocation(line: 1725, column: 7, scope: !15974)
!15978 = !DILocation(line: 1726, column: 7, scope: !15979)
!15979 = distinct !DILexicalBlock(scope: !15974, file: !3, line: 1726, column: 7)
!15980 = !DILocation(line: 1726, column: 7, scope: !15974)
!15981 = !DILocation(line: 1727, column: 11, scope: !15979)
!15982 = !DILocation(line: 1727, column: 4, scope: !15979)
!15983 = !DILocation(line: 1728, column: 2, scope: !15974)
!15984 = !DILocation(line: 1730, column: 40, scope: !15871)
!15985 = !DILocation(line: 1730, column: 8, scope: !15871)
!15986 = !DILocation(line: 1730, column: 6, scope: !15871)
!15987 = !DILocation(line: 1731, column: 35, scope: !15871)
!15988 = !DILocation(line: 1731, column: 57, scope: !15871)
!15989 = !DILocation(line: 1731, column: 8, scope: !15871)
!15990 = !DILocation(line: 1731, column: 6, scope: !15871)
!15991 = !DILocation(line: 1732, column: 6, scope: !15992)
!15992 = distinct !DILexicalBlock(scope: !15871, file: !3, line: 1732, column: 6)
!15993 = !DILocation(line: 1732, column: 6, scope: !15871)
!15994 = !DILocation(line: 1733, column: 10, scope: !15992)
!15995 = !DILocation(line: 1733, column: 3, scope: !15992)
!15996 = !DILocation(line: 1735, column: 40, scope: !15871)
!15997 = !DILocation(line: 1735, column: 8, scope: !15871)
!15998 = !DILocation(line: 1735, column: 6, scope: !15871)
!15999 = !DILocation(line: 1736, column: 10, scope: !15871)
!16000 = !DILocation(line: 1736, column: 2, scope: !15871)
!16001 = !DILocation(line: 1738, column: 11, scope: !16002)
!16002 = distinct !DILexicalBlock(scope: !15871, file: !3, line: 1736, column: 15)
!16003 = !DILocation(line: 1739, column: 3, scope: !16002)
!16004 = !DILocation(line: 1741, column: 11, scope: !16002)
!16005 = !DILocation(line: 1742, column: 3, scope: !16002)
!16006 = !DILocation(line: 1744, column: 11, scope: !16002)
!16007 = !DILocation(line: 1745, column: 3, scope: !16002)
!16008 = !DILocation(line: 1747, column: 11, scope: !16002)
!16009 = !DILocation(line: 1748, column: 2, scope: !16002)
!16010 = !DILocation(line: 1749, column: 6, scope: !16011)
!16011 = distinct !DILexicalBlock(scope: !15871, file: !3, line: 1749, column: 6)
!16012 = !DILocation(line: 1749, column: 6, scope: !15871)
!16013 = !DILocation(line: 1750, column: 38, scope: !16014)
!16014 = distinct !DILexicalBlock(scope: !16011, file: !3, line: 1749, column: 15)
!16015 = !DILocation(line: 1750, column: 60, scope: !16014)
!16016 = !DILocation(line: 1750, column: 9, scope: !16014)
!16017 = !DILocation(line: 1750, column: 7, scope: !16014)
!16018 = !DILocation(line: 1751, column: 7, scope: !16019)
!16019 = distinct !DILexicalBlock(scope: !16014, file: !3, line: 1751, column: 7)
!16020 = !DILocation(line: 1751, column: 7, scope: !16014)
!16021 = !DILocation(line: 1752, column: 11, scope: !16019)
!16022 = !DILocation(line: 1752, column: 4, scope: !16019)
!16023 = !DILocation(line: 1753, column: 2, scope: !16014)
!16024 = !DILocation(line: 1755, column: 39, scope: !15871)
!16025 = !DILocation(line: 1755, column: 8, scope: !15871)
!16026 = !DILocation(line: 1755, column: 6, scope: !15871)
!16027 = !DILocation(line: 1756, column: 34, scope: !15871)
!16028 = !DILocation(line: 1756, column: 55, scope: !15871)
!16029 = !DILocation(line: 1756, column: 8, scope: !15871)
!16030 = !DILocation(line: 1756, column: 6, scope: !15871)
!16031 = !DILocation(line: 1757, column: 6, scope: !16032)
!16032 = distinct !DILexicalBlock(scope: !15871, file: !3, line: 1757, column: 6)
!16033 = !DILocation(line: 1757, column: 6, scope: !15871)
!16034 = !DILocation(line: 1758, column: 10, scope: !16032)
!16035 = !DILocation(line: 1758, column: 3, scope: !16032)
!16036 = !DILocation(line: 1760, column: 6, scope: !16037)
!16037 = distinct !DILexicalBlock(scope: !15871, file: !3, line: 1760, column: 6)
!16038 = !DILocation(line: 1760, column: 15, scope: !16037)
!16039 = !DILocation(line: 1760, column: 6, scope: !15871)
!16040 = !DILocation(line: 1761, column: 40, scope: !16041)
!16041 = distinct !DILexicalBlock(scope: !16037, file: !3, line: 1760, column: 54)
!16042 = !DILocation(line: 1761, column: 9, scope: !16041)
!16043 = !DILocation(line: 1761, column: 7, scope: !16041)
!16044 = !DILocation(line: 1762, column: 35, scope: !16041)
!16045 = !DILocation(line: 1762, column: 56, scope: !16041)
!16046 = !DILocation(line: 1762, column: 9, scope: !16041)
!16047 = !DILocation(line: 1762, column: 7, scope: !16041)
!16048 = !DILocation(line: 1763, column: 7, scope: !16049)
!16049 = distinct !DILexicalBlock(scope: !16041, file: !3, line: 1763, column: 7)
!16050 = !DILocation(line: 1763, column: 7, scope: !16041)
!16051 = !DILocation(line: 1764, column: 11, scope: !16049)
!16052 = !DILocation(line: 1764, column: 4, scope: !16049)
!16053 = !DILocation(line: 1765, column: 35, scope: !16041)
!16054 = !DILocation(line: 1765, column: 9, scope: !16041)
!16055 = !DILocation(line: 1765, column: 7, scope: !16041)
!16056 = !DILocation(line: 1766, column: 34, scope: !16041)
!16057 = !DILocation(line: 1766, column: 56, scope: !16041)
!16058 = !DILocation(line: 1766, column: 9, scope: !16041)
!16059 = !DILocation(line: 1766, column: 7, scope: !16041)
!16060 = !DILocation(line: 1767, column: 7, scope: !16061)
!16061 = distinct !DILexicalBlock(scope: !16041, file: !3, line: 1767, column: 7)
!16062 = !DILocation(line: 1767, column: 7, scope: !16041)
!16063 = !DILocation(line: 1768, column: 11, scope: !16061)
!16064 = !DILocation(line: 1768, column: 4, scope: !16061)
!16065 = !DILocation(line: 1769, column: 2, scope: !16041)
!16066 = !DILocation(line: 1769, column: 13, scope: !16067)
!16067 = distinct !DILexicalBlock(scope: !16037, file: !3, line: 1769, column: 13)
!16068 = !DILocation(line: 1769, column: 22, scope: !16067)
!16069 = !DILocation(line: 1769, column: 13, scope: !16037)
!16070 = !DILocation(line: 1770, column: 39, scope: !16071)
!16071 = distinct !DILexicalBlock(scope: !16067, file: !3, line: 1769, column: 62)
!16072 = !DILocation(line: 1770, column: 9, scope: !16071)
!16073 = !DILocation(line: 1770, column: 7, scope: !16071)
!16074 = !DILocation(line: 1771, column: 35, scope: !16071)
!16075 = !DILocation(line: 1771, column: 55, scope: !16071)
!16076 = !DILocation(line: 1771, column: 9, scope: !16071)
!16077 = !DILocation(line: 1771, column: 7, scope: !16071)
!16078 = !DILocation(line: 1772, column: 7, scope: !16079)
!16079 = distinct !DILexicalBlock(scope: !16071, file: !3, line: 1772, column: 7)
!16080 = !DILocation(line: 1772, column: 7, scope: !16071)
!16081 = !DILocation(line: 1773, column: 11, scope: !16079)
!16082 = !DILocation(line: 1773, column: 4, scope: !16079)
!16083 = !DILocation(line: 1774, column: 2, scope: !16071)
!16084 = !DILocation(line: 1776, column: 2, scope: !15871)
!16085 = !DILocation(line: 1777, column: 1, scope: !15871)
!16086 = distinct !DISubprogram(name: "mlxsw_core_health_fw_fatal_test", scope: !3, file: !3, line: 1780, type: !8470, scopeLine: 1782, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16087 = !DILocalVariable(name: "reporter", arg: 1, scope: !16086, file: !3, line: 1780, type: !8124)
!16088 = !DILocation(line: 1780, column: 65, scope: !16086)
!16089 = !DILocalVariable(name: "extack", arg: 2, scope: !16086, file: !3, line: 1781, type: !932)
!16090 = !DILocation(line: 1781, column: 29, scope: !16086)
!16091 = !DILocalVariable(name: "mlxsw_core", scope: !16086, file: !3, line: 1783, type: !7847)
!16092 = !DILocation(line: 1783, column: 21, scope: !16086)
!16093 = !DILocation(line: 1783, column: 63, scope: !16086)
!16094 = !DILocation(line: 1783, column: 34, scope: !16086)
!16095 = !DILocalVariable(name: "mfgd_pl", scope: !16086, file: !3, line: 1784, type: !6621)
!16096 = !DILocation(line: 1784, column: 7, scope: !16086)
!16097 = !DILocalVariable(name: "err", scope: !16086, file: !3, line: 1785, type: !78)
!16098 = !DILocation(line: 1785, column: 6, scope: !16086)
!16099 = !DILocation(line: 1788, column: 24, scope: !16086)
!16100 = !DILocation(line: 1788, column: 53, scope: !16086)
!16101 = !DILocation(line: 1788, column: 8, scope: !16086)
!16102 = !DILocation(line: 1788, column: 6, scope: !16086)
!16103 = !DILocation(line: 1789, column: 6, scope: !16104)
!16104 = distinct !DILexicalBlock(scope: !16086, file: !3, line: 1789, column: 6)
!16105 = !DILocation(line: 1789, column: 6, scope: !16086)
!16106 = !DILocation(line: 1790, column: 10, scope: !16104)
!16107 = !DILocation(line: 1790, column: 3, scope: !16104)
!16108 = !DILocation(line: 1791, column: 34, scope: !16086)
!16109 = !DILocation(line: 1791, column: 2, scope: !16086)
!16110 = !DILocation(line: 1792, column: 25, scope: !16086)
!16111 = !DILocation(line: 1792, column: 54, scope: !16086)
!16112 = !DILocation(line: 1792, column: 9, scope: !16086)
!16113 = !DILocation(line: 1792, column: 2, scope: !16086)
!16114 = !DILocation(line: 1793, column: 1, scope: !16086)
!16115 = distinct !DISubprogram(name: "mlxsw_reg_mfde_irisc_id_get", scope: !7404, file: !7404, line: 10045, type: !13882, scopeLine: 10045, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16116 = !DILocalVariable(name: "buf", arg: 1, scope: !16115, file: !7404, line: 10045, type: !338)
!16117 = !DILocation(line: 10045, column: 1, scope: !16115)
!16118 = distinct !DISubprogram(name: "mlxsw_reg_mfde_event_id_get", scope: !7404, file: !7404, line: 10056, type: !13882, scopeLine: 10056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16119 = !DILocalVariable(name: "buf", arg: 1, scope: !16118, file: !7404, line: 10056, type: !338)
!16120 = !DILocation(line: 10056, column: 1, scope: !16118)
!16121 = distinct !DISubprogram(name: "mlxsw_reg_mfde_method_get", scope: !7404, file: !7404, line: 10066, type: !13882, scopeLine: 10066, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16122 = !DILocalVariable(name: "buf", arg: 1, scope: !16121, file: !7404, line: 10066, type: !338)
!16123 = !DILocation(line: 10066, column: 1, scope: !16121)
!16124 = distinct !DISubprogram(name: "mlxsw_reg_mfde_long_process_get", scope: !7404, file: !7404, line: 10072, type: !13882, scopeLine: 10072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16125 = !DILocalVariable(name: "buf", arg: 1, scope: !16124, file: !7404, line: 10072, type: !338)
!16126 = !DILocation(line: 10072, column: 1, scope: !16124)
!16127 = distinct !DISubprogram(name: "mlxsw_reg_mfde_command_type_get", scope: !7404, file: !7404, line: 10083, type: !13882, scopeLine: 10083, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16128 = !DILocalVariable(name: "buf", arg: 1, scope: !16127, file: !7404, line: 10083, type: !338)
!16129 = !DILocation(line: 10083, column: 1, scope: !16127)
!16130 = distinct !DISubprogram(name: "mlxsw_reg_mfde_reg_attr_id_get", scope: !7404, file: !7404, line: 10089, type: !13882, scopeLine: 10089, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16131 = !DILocalVariable(name: "buf", arg: 1, scope: !16130, file: !7404, line: 10089, type: !338)
!16132 = !DILocation(line: 10089, column: 1, scope: !16130)
!16133 = distinct !DISubprogram(name: "mlxsw_reg_mfde_log_address_get", scope: !7404, file: !7404, line: 10096, type: !13882, scopeLine: 10096, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16134 = !DILocalVariable(name: "buf", arg: 1, scope: !16133, file: !7404, line: 10096, type: !338)
!16135 = !DILocation(line: 10096, column: 1, scope: !16133)
!16136 = distinct !DISubprogram(name: "mlxsw_reg_mfde_log_id_get", scope: !7404, file: !7404, line: 10103, type: !13882, scopeLine: 10103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16137 = !DILocalVariable(name: "buf", arg: 1, scope: !16136, file: !7404, line: 10103, type: !338)
!16138 = !DILocation(line: 10103, column: 1, scope: !16136)
!16139 = distinct !DISubprogram(name: "mlxsw_reg_mfde_pipes_mask_get", scope: !7404, file: !7404, line: 10109, type: !13882, scopeLine: 10109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16140 = !DILocalVariable(name: "buf", arg: 1, scope: !16139, file: !7404, line: 10109, type: !338)
!16141 = !DILocation(line: 10109, column: 1, scope: !16139)
!16142 = distinct !DISubprogram(name: "mlxsw_reg_mfgd_trigger_test_set", scope: !7404, file: !7404, line: 9972, type: !14510, scopeLine: 9972, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16143 = !DILocalVariable(name: "buf", arg: 1, scope: !16142, file: !7404, line: 9972, type: !1084)
!16144 = !DILocation(line: 9972, column: 1, scope: !16142)
!16145 = !DILocalVariable(name: "val", arg: 2, scope: !16142, file: !7404, line: 9972, type: !1033)
!16146 = distinct !DISubprogram(name: "mlxsw_core_health_listener_func", scope: !3, file: !3, line: 1650, type: !8265, scopeLine: 1652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16147 = !DILocation(line: 445, column: 72, scope: !9590, inlinedAt: !16148)
!16148 = distinct !DILocation(line: 552, column: 10, scope: !9595, inlinedAt: !16149)
!16149 = distinct !DILocation(line: 1656, column: 10, scope: !16146)
!16150 = !DILocation(line: 446, column: 9, scope: !9590, inlinedAt: !16148)
!16151 = !DILocation(line: 446, column: 23, scope: !9590, inlinedAt: !16148)
!16152 = !DILocation(line: 448, column: 8, scope: !9590, inlinedAt: !16148)
!16153 = !DILocation(line: 318, column: 67, scope: !9608, inlinedAt: !16154)
!16154 = distinct !DILocation(line: 553, column: 20, scope: !9595, inlinedAt: !16149)
!16155 = !DILocation(line: 346, column: 58, scope: !9614, inlinedAt: !16156)
!16156 = distinct !DILocation(line: 547, column: 11, scope: !9595, inlinedAt: !16149)
!16157 = !DILocation(line: 472, column: 28, scope: !9620, inlinedAt: !16158)
!16158 = distinct !DILocation(line: 481, column: 9, scope: !9625, inlinedAt: !16159)
!16159 = distinct !DILocation(line: 545, column: 11, scope: !9627, inlinedAt: !16149)
!16160 = !DILocation(line: 472, column: 40, scope: !9620, inlinedAt: !16158)
!16161 = !DILocation(line: 472, column: 60, scope: !9620, inlinedAt: !16158)
!16162 = !DILocation(line: 478, column: 51, scope: !9625, inlinedAt: !16159)
!16163 = !DILocation(line: 478, column: 63, scope: !9625, inlinedAt: !16159)
!16164 = !DILocation(line: 480, column: 15, scope: !9625, inlinedAt: !16159)
!16165 = !DILocation(line: 538, column: 45, scope: !9597, inlinedAt: !16149)
!16166 = !DILocation(line: 538, column: 57, scope: !9597, inlinedAt: !16149)
!16167 = !DILocation(line: 542, column: 16, scope: !9595, inlinedAt: !16149)
!16168 = !DILocalVariable(name: "reg", arg: 1, scope: !16146, file: !3, line: 1650, type: !8145)
!16169 = !DILocation(line: 1650, column: 74, scope: !16146)
!16170 = !DILocalVariable(name: "mfde_pl", arg: 2, scope: !16146, file: !3, line: 1651, type: !1084)
!16171 = !DILocation(line: 1651, column: 16, scope: !16146)
!16172 = !DILocalVariable(name: "priv", arg: 3, scope: !16146, file: !3, line: 1651, type: !637)
!16173 = !DILocation(line: 1651, column: 31, scope: !16146)
!16174 = !DILocalVariable(name: "event", scope: !16146, file: !3, line: 1653, type: !8245)
!16175 = !DILocation(line: 1653, column: 34, scope: !16146)
!16176 = !DILocalVariable(name: "mlxsw_core", scope: !16146, file: !3, line: 1654, type: !7847)
!16177 = !DILocation(line: 1654, column: 21, scope: !16146)
!16178 = !DILocation(line: 1654, column: 34, scope: !16146)
!16179 = !DILocation(line: 540, column: 27, scope: !9596, inlinedAt: !16149)
!16180 = !DILocation(line: 540, column: 6, scope: !9596, inlinedAt: !16149)
!16181 = !DILocation(line: 540, column: 6, scope: !9597, inlinedAt: !16149)
!16182 = !DILocation(line: 544, column: 7, scope: !9627, inlinedAt: !16149)
!16183 = !DILocation(line: 544, column: 12, scope: !9627, inlinedAt: !16149)
!16184 = !DILocation(line: 544, column: 7, scope: !9595, inlinedAt: !16149)
!16185 = !DILocation(line: 545, column: 25, scope: !9627, inlinedAt: !16149)
!16186 = !DILocation(line: 545, column: 31, scope: !9627, inlinedAt: !16149)
!16187 = !DILocation(line: 480, column: 33, scope: !9625, inlinedAt: !16159)
!16188 = !DILocation(line: 480, column: 23, scope: !9625, inlinedAt: !16159)
!16189 = !DILocation(line: 481, column: 29, scope: !9625, inlinedAt: !16159)
!16190 = !DILocation(line: 481, column: 35, scope: !9625, inlinedAt: !16159)
!16191 = !DILocation(line: 481, column: 42, scope: !9625, inlinedAt: !16159)
!16192 = !DILocation(line: 474, column: 23, scope: !9620, inlinedAt: !16158)
!16193 = !DILocation(line: 474, column: 29, scope: !9620, inlinedAt: !16158)
!16194 = !DILocation(line: 474, column: 36, scope: !9620, inlinedAt: !16158)
!16195 = !DILocation(line: 474, column: 9, scope: !9620, inlinedAt: !16158)
!16196 = !DILocation(line: 545, column: 4, scope: !9627, inlinedAt: !16149)
!16197 = !DILocation(line: 547, column: 25, scope: !9595, inlinedAt: !16149)
!16198 = !DILocation(line: 348, column: 7, scope: !9682, inlinedAt: !16156)
!16199 = !DILocation(line: 348, column: 6, scope: !9614, inlinedAt: !16156)
!16200 = !DILocation(line: 349, column: 3, scope: !9682, inlinedAt: !16156)
!16201 = !DILocation(line: 351, column: 6, scope: !9686, inlinedAt: !16156)
!16202 = !DILocation(line: 351, column: 11, scope: !9686, inlinedAt: !16156)
!16203 = !DILocation(line: 351, column: 6, scope: !9614, inlinedAt: !16156)
!16204 = !DILocation(line: 352, column: 3, scope: !9686, inlinedAt: !16156)
!16205 = !DILocation(line: 354, column: 32, scope: !9691, inlinedAt: !16156)
!16206 = !DILocation(line: 354, column: 37, scope: !9691, inlinedAt: !16156)
!16207 = !DILocation(line: 354, column: 42, scope: !9691, inlinedAt: !16156)
!16208 = !DILocation(line: 354, column: 45, scope: !9691, inlinedAt: !16156)
!16209 = !DILocation(line: 354, column: 50, scope: !9691, inlinedAt: !16156)
!16210 = !DILocation(line: 354, column: 6, scope: !9614, inlinedAt: !16156)
!16211 = !DILocation(line: 355, column: 3, scope: !9691, inlinedAt: !16156)
!16212 = !DILocation(line: 356, column: 32, scope: !9699, inlinedAt: !16156)
!16213 = !DILocation(line: 356, column: 37, scope: !9699, inlinedAt: !16156)
!16214 = !DILocation(line: 356, column: 43, scope: !9699, inlinedAt: !16156)
!16215 = !DILocation(line: 356, column: 46, scope: !9699, inlinedAt: !16156)
!16216 = !DILocation(line: 356, column: 51, scope: !9699, inlinedAt: !16156)
!16217 = !DILocation(line: 356, column: 6, scope: !9614, inlinedAt: !16156)
!16218 = !DILocation(line: 357, column: 3, scope: !9699, inlinedAt: !16156)
!16219 = !DILocation(line: 358, column: 6, scope: !9707, inlinedAt: !16156)
!16220 = !DILocation(line: 358, column: 11, scope: !9707, inlinedAt: !16156)
!16221 = !DILocation(line: 358, column: 6, scope: !9614, inlinedAt: !16156)
!16222 = !DILocation(line: 358, column: 26, scope: !9707, inlinedAt: !16156)
!16223 = !DILocation(line: 359, column: 6, scope: !9712, inlinedAt: !16156)
!16224 = !DILocation(line: 359, column: 11, scope: !9712, inlinedAt: !16156)
!16225 = !DILocation(line: 359, column: 6, scope: !9614, inlinedAt: !16156)
!16226 = !DILocation(line: 359, column: 26, scope: !9712, inlinedAt: !16156)
!16227 = !DILocation(line: 360, column: 6, scope: !9717, inlinedAt: !16156)
!16228 = !DILocation(line: 360, column: 11, scope: !9717, inlinedAt: !16156)
!16229 = !DILocation(line: 360, column: 6, scope: !9614, inlinedAt: !16156)
!16230 = !DILocation(line: 360, column: 26, scope: !9717, inlinedAt: !16156)
!16231 = !DILocation(line: 361, column: 6, scope: !9722, inlinedAt: !16156)
!16232 = !DILocation(line: 361, column: 11, scope: !9722, inlinedAt: !16156)
!16233 = !DILocation(line: 361, column: 6, scope: !9614, inlinedAt: !16156)
!16234 = !DILocation(line: 361, column: 26, scope: !9722, inlinedAt: !16156)
!16235 = !DILocation(line: 362, column: 6, scope: !9727, inlinedAt: !16156)
!16236 = !DILocation(line: 362, column: 11, scope: !9727, inlinedAt: !16156)
!16237 = !DILocation(line: 362, column: 6, scope: !9614, inlinedAt: !16156)
!16238 = !DILocation(line: 362, column: 26, scope: !9727, inlinedAt: !16156)
!16239 = !DILocation(line: 363, column: 6, scope: !9732, inlinedAt: !16156)
!16240 = !DILocation(line: 363, column: 11, scope: !9732, inlinedAt: !16156)
!16241 = !DILocation(line: 363, column: 6, scope: !9614, inlinedAt: !16156)
!16242 = !DILocation(line: 363, column: 26, scope: !9732, inlinedAt: !16156)
!16243 = !DILocation(line: 364, column: 6, scope: !9737, inlinedAt: !16156)
!16244 = !DILocation(line: 364, column: 11, scope: !9737, inlinedAt: !16156)
!16245 = !DILocation(line: 364, column: 6, scope: !9614, inlinedAt: !16156)
!16246 = !DILocation(line: 364, column: 26, scope: !9737, inlinedAt: !16156)
!16247 = !DILocation(line: 365, column: 6, scope: !9742, inlinedAt: !16156)
!16248 = !DILocation(line: 365, column: 11, scope: !9742, inlinedAt: !16156)
!16249 = !DILocation(line: 365, column: 6, scope: !9614, inlinedAt: !16156)
!16250 = !DILocation(line: 365, column: 26, scope: !9742, inlinedAt: !16156)
!16251 = !DILocation(line: 366, column: 6, scope: !9747, inlinedAt: !16156)
!16252 = !DILocation(line: 366, column: 11, scope: !9747, inlinedAt: !16156)
!16253 = !DILocation(line: 366, column: 6, scope: !9614, inlinedAt: !16156)
!16254 = !DILocation(line: 366, column: 26, scope: !9747, inlinedAt: !16156)
!16255 = !DILocation(line: 367, column: 6, scope: !9752, inlinedAt: !16156)
!16256 = !DILocation(line: 367, column: 11, scope: !9752, inlinedAt: !16156)
!16257 = !DILocation(line: 367, column: 6, scope: !9614, inlinedAt: !16156)
!16258 = !DILocation(line: 367, column: 26, scope: !9752, inlinedAt: !16156)
!16259 = !DILocation(line: 368, column: 6, scope: !9757, inlinedAt: !16156)
!16260 = !DILocation(line: 368, column: 11, scope: !9757, inlinedAt: !16156)
!16261 = !DILocation(line: 368, column: 6, scope: !9614, inlinedAt: !16156)
!16262 = !DILocation(line: 368, column: 26, scope: !9757, inlinedAt: !16156)
!16263 = !DILocation(line: 369, column: 6, scope: !9762, inlinedAt: !16156)
!16264 = !DILocation(line: 369, column: 11, scope: !9762, inlinedAt: !16156)
!16265 = !DILocation(line: 369, column: 6, scope: !9614, inlinedAt: !16156)
!16266 = !DILocation(line: 369, column: 26, scope: !9762, inlinedAt: !16156)
!16267 = !DILocation(line: 370, column: 6, scope: !9767, inlinedAt: !16156)
!16268 = !DILocation(line: 370, column: 11, scope: !9767, inlinedAt: !16156)
!16269 = !DILocation(line: 370, column: 6, scope: !9614, inlinedAt: !16156)
!16270 = !DILocation(line: 370, column: 26, scope: !9767, inlinedAt: !16156)
!16271 = !DILocation(line: 371, column: 6, scope: !9772, inlinedAt: !16156)
!16272 = !DILocation(line: 371, column: 11, scope: !9772, inlinedAt: !16156)
!16273 = !DILocation(line: 371, column: 6, scope: !9614, inlinedAt: !16156)
!16274 = !DILocation(line: 371, column: 26, scope: !9772, inlinedAt: !16156)
!16275 = !DILocation(line: 372, column: 6, scope: !9777, inlinedAt: !16156)
!16276 = !DILocation(line: 372, column: 11, scope: !9777, inlinedAt: !16156)
!16277 = !DILocation(line: 372, column: 6, scope: !9614, inlinedAt: !16156)
!16278 = !DILocation(line: 372, column: 26, scope: !9777, inlinedAt: !16156)
!16279 = !DILocation(line: 373, column: 6, scope: !9782, inlinedAt: !16156)
!16280 = !DILocation(line: 373, column: 11, scope: !9782, inlinedAt: !16156)
!16281 = !DILocation(line: 373, column: 6, scope: !9614, inlinedAt: !16156)
!16282 = !DILocation(line: 373, column: 26, scope: !9782, inlinedAt: !16156)
!16283 = !DILocation(line: 374, column: 6, scope: !9787, inlinedAt: !16156)
!16284 = !DILocation(line: 374, column: 11, scope: !9787, inlinedAt: !16156)
!16285 = !DILocation(line: 374, column: 6, scope: !9614, inlinedAt: !16156)
!16286 = !DILocation(line: 374, column: 26, scope: !9787, inlinedAt: !16156)
!16287 = !DILocation(line: 375, column: 6, scope: !9792, inlinedAt: !16156)
!16288 = !DILocation(line: 375, column: 11, scope: !9792, inlinedAt: !16156)
!16289 = !DILocation(line: 375, column: 6, scope: !9614, inlinedAt: !16156)
!16290 = !DILocation(line: 375, column: 27, scope: !9792, inlinedAt: !16156)
!16291 = !DILocation(line: 376, column: 6, scope: !9797, inlinedAt: !16156)
!16292 = !DILocation(line: 376, column: 11, scope: !9797, inlinedAt: !16156)
!16293 = !DILocation(line: 376, column: 6, scope: !9614, inlinedAt: !16156)
!16294 = !DILocation(line: 376, column: 32, scope: !9797, inlinedAt: !16156)
!16295 = !DILocation(line: 377, column: 6, scope: !9802, inlinedAt: !16156)
!16296 = !DILocation(line: 377, column: 11, scope: !9802, inlinedAt: !16156)
!16297 = !DILocation(line: 377, column: 6, scope: !9614, inlinedAt: !16156)
!16298 = !DILocation(line: 377, column: 32, scope: !9802, inlinedAt: !16156)
!16299 = !DILocation(line: 378, column: 6, scope: !9807, inlinedAt: !16156)
!16300 = !DILocation(line: 378, column: 11, scope: !9807, inlinedAt: !16156)
!16301 = !DILocation(line: 378, column: 6, scope: !9614, inlinedAt: !16156)
!16302 = !DILocation(line: 378, column: 32, scope: !9807, inlinedAt: !16156)
!16303 = !DILocation(line: 379, column: 6, scope: !9812, inlinedAt: !16156)
!16304 = !DILocation(line: 379, column: 11, scope: !9812, inlinedAt: !16156)
!16305 = !DILocation(line: 379, column: 6, scope: !9614, inlinedAt: !16156)
!16306 = !DILocation(line: 379, column: 33, scope: !9812, inlinedAt: !16156)
!16307 = !DILocation(line: 380, column: 6, scope: !9817, inlinedAt: !16156)
!16308 = !DILocation(line: 380, column: 11, scope: !9817, inlinedAt: !16156)
!16309 = !DILocation(line: 380, column: 6, scope: !9614, inlinedAt: !16156)
!16310 = !DILocation(line: 380, column: 33, scope: !9817, inlinedAt: !16156)
!16311 = !DILocation(line: 381, column: 6, scope: !9822, inlinedAt: !16156)
!16312 = !DILocation(line: 381, column: 11, scope: !9822, inlinedAt: !16156)
!16313 = !DILocation(line: 381, column: 6, scope: !9614, inlinedAt: !16156)
!16314 = !DILocation(line: 381, column: 33, scope: !9822, inlinedAt: !16156)
!16315 = !DILocation(line: 382, column: 2, scope: !9827, inlinedAt: !16156)
!16316 = !DILocation(line: 382, column: 2, scope: !9831, inlinedAt: !16156)
!16317 = !DILocation(line: 382, column: 2, scope: !9832, inlinedAt: !16156)
!16318 = !DILocation(line: 386, column: 1, scope: !9614, inlinedAt: !16156)
!16319 = !DILocation(line: 547, column: 9, scope: !9595, inlinedAt: !16149)
!16320 = !DILocation(line: 549, column: 8, scope: !9838, inlinedAt: !16149)
!16321 = !DILocation(line: 549, column: 7, scope: !9595, inlinedAt: !16149)
!16322 = !DILocation(line: 550, column: 4, scope: !9838, inlinedAt: !16149)
!16323 = !DILocation(line: 553, column: 33, scope: !9595, inlinedAt: !16149)
!16324 = !DILocation(line: 325, column: 6, scope: !9843, inlinedAt: !16154)
!16325 = !DILocation(line: 325, column: 6, scope: !9608, inlinedAt: !16154)
!16326 = !DILocation(line: 326, column: 3, scope: !9843, inlinedAt: !16154)
!16327 = !DILocation(line: 332, column: 9, scope: !9608, inlinedAt: !16154)
!16328 = !DILocation(line: 332, column: 15, scope: !9608, inlinedAt: !16154)
!16329 = !DILocation(line: 332, column: 2, scope: !9608, inlinedAt: !16154)
!16330 = !DILocation(line: 336, column: 1, scope: !9608, inlinedAt: !16154)
!16331 = !DILocation(line: 553, column: 5, scope: !9595, inlinedAt: !16149)
!16332 = !DILocation(line: 553, column: 41, scope: !9595, inlinedAt: !16149)
!16333 = !DILocation(line: 554, column: 5, scope: !9595, inlinedAt: !16149)
!16334 = !DILocation(line: 554, column: 12, scope: !9595, inlinedAt: !16149)
!16335 = !DILocation(line: 448, column: 31, scope: !9590, inlinedAt: !16148)
!16336 = !DILocation(line: 448, column: 34, scope: !9590, inlinedAt: !16148)
!16337 = !DILocation(line: 448, column: 14, scope: !9590, inlinedAt: !16148)
!16338 = !DILocation(line: 450, column: 22, scope: !9590, inlinedAt: !16148)
!16339 = !DILocation(line: 450, column: 25, scope: !9590, inlinedAt: !16148)
!16340 = !DILocation(line: 450, column: 30, scope: !9590, inlinedAt: !16148)
!16341 = !DILocation(line: 450, column: 36, scope: !9590, inlinedAt: !16148)
!16342 = !DILocation(line: 450, column: 8, scope: !9590, inlinedAt: !16148)
!16343 = !DILocation(line: 450, column: 6, scope: !9590, inlinedAt: !16148)
!16344 = !DILocation(line: 451, column: 9, scope: !9590, inlinedAt: !16148)
!16345 = !DILocation(line: 552, column: 3, scope: !9595, inlinedAt: !16149)
!16346 = !DILocation(line: 557, column: 19, scope: !9597, inlinedAt: !16149)
!16347 = !DILocation(line: 557, column: 25, scope: !9597, inlinedAt: !16149)
!16348 = !DILocation(line: 557, column: 9, scope: !9597, inlinedAt: !16149)
!16349 = !DILocation(line: 557, column: 2, scope: !9597, inlinedAt: !16149)
!16350 = !DILocation(line: 558, column: 1, scope: !9597, inlinedAt: !16149)
!16351 = !DILocation(line: 1656, column: 10, scope: !16146)
!16352 = !DILocation(line: 1656, column: 8, scope: !16146)
!16353 = !DILocation(line: 1657, column: 7, scope: !16354)
!16354 = distinct !DILexicalBlock(scope: !16146, file: !3, line: 1657, column: 6)
!16355 = !DILocation(line: 1657, column: 6, scope: !16146)
!16356 = !DILocation(line: 1658, column: 3, scope: !16354)
!16357 = !DILocation(line: 1659, column: 22, scope: !16146)
!16358 = !DILocation(line: 1659, column: 2, scope: !16146)
!16359 = !DILocation(line: 1659, column: 9, scope: !16146)
!16360 = !DILocation(line: 1659, column: 20, scope: !16146)
!16361 = !DILocation(line: 1660, column: 9, scope: !16146)
!16362 = !DILocation(line: 1660, column: 16, scope: !16146)
!16363 = !DILocation(line: 1660, column: 2, scope: !16146)
!16364 = !DILocation(line: 1660, column: 25, scope: !16146)
!16365 = !DILocation(line: 1661, column: 2, scope: !16146)
!16366 = !DILocation(line: 1661, column: 2, scope: !16367)
!16367 = distinct !DILexicalBlock(scope: !16146, file: !3, line: 1661, column: 2)
!16368 = !DILocation(line: 1662, column: 28, scope: !16146)
!16369 = !DILocation(line: 1662, column: 35, scope: !16146)
!16370 = !DILocation(line: 1662, column: 2, scope: !16146)
!16371 = !DILocation(line: 1663, column: 1, scope: !16146)
!16372 = distinct !DISubprogram(name: "__init_work", scope: !2876, file: !2876, line: 215, type: !16373, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16373 = !DISubroutineType(types: !16374)
!16374 = !{null, !2885, !78}
!16375 = !DILocalVariable(name: "work", arg: 1, scope: !16372, file: !2876, line: 215, type: !2885)
!16376 = !DILocation(line: 215, column: 52, scope: !16372)
!16377 = !DILocalVariable(name: "onstack", arg: 2, scope: !16372, file: !2876, line: 215, type: !78)
!16378 = !DILocation(line: 215, column: 62, scope: !16372)
!16379 = !DILocation(line: 215, column: 73, scope: !16372)
!16380 = distinct !DISubprogram(name: "mlxsw_core_health_event_work", scope: !3, file: !3, line: 1638, type: !2883, scopeLine: 1639, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16381 = !DILocalVariable(name: "work", arg: 1, scope: !16380, file: !3, line: 1638, type: !2885)
!16382 = !DILocation(line: 1638, column: 62, scope: !16380)
!16383 = !DILocalVariable(name: "event", scope: !16380, file: !3, line: 1640, type: !8245)
!16384 = !DILocation(line: 1640, column: 34, scope: !16380)
!16385 = !DILocalVariable(name: "mlxsw_core", scope: !16380, file: !3, line: 1641, type: !7847)
!16386 = !DILocation(line: 1641, column: 21, scope: !16380)
!16387 = !DILocalVariable(name: "__mptr", scope: !16388, file: !3, line: 1643, type: !637)
!16388 = distinct !DILexicalBlock(scope: !16380, file: !3, line: 1643, column: 10)
!16389 = !DILocation(line: 1643, column: 10, scope: !16388)
!16390 = !DILocation(line: 1643, column: 10, scope: !16391)
!16391 = distinct !DILexicalBlock(scope: !16388, file: !3, line: 1643, column: 10)
!16392 = !DILocation(line: 1643, column: 8, scope: !16380)
!16393 = !DILocation(line: 1644, column: 15, scope: !16380)
!16394 = !DILocation(line: 1644, column: 22, scope: !16380)
!16395 = !DILocation(line: 1644, column: 13, scope: !16380)
!16396 = !DILocation(line: 1645, column: 24, scope: !16380)
!16397 = !DILocation(line: 1645, column: 36, scope: !16380)
!16398 = !DILocation(line: 1645, column: 43, scope: !16380)
!16399 = !DILocation(line: 1646, column: 10, scope: !16380)
!16400 = !DILocation(line: 1646, column: 17, scope: !16380)
!16401 = !DILocation(line: 1645, column: 2, scope: !16380)
!16402 = !DILocation(line: 1647, column: 8, scope: !16380)
!16403 = !DILocation(line: 1647, column: 2, scope: !16380)
!16404 = !DILocation(line: 1648, column: 1, scope: !16380)
!16405 = distinct !DISubprogram(name: "mlxsw_reg_mfgd_fatal_event_mode_set", scope: !7404, file: !7404, line: 9967, type: !14510, scopeLine: 9967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16406 = !DILocalVariable(name: "buf", arg: 1, scope: !16405, file: !7404, line: 9967, type: !1084)
!16407 = !DILocation(line: 9967, column: 1, scope: !16405)
!16408 = !DILocalVariable(name: "val", arg: 2, scope: !16405, file: !7404, line: 9967, type: !1033)
!16409 = distinct !DISubprogram(name: "__is_rx_listener_equal", scope: !3, file: !3, line: 2109, type: !16410, scopeLine: 2111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16410 = !DISubroutineType(types: !16411)
!16411 = !{!817, !9587, !9587}
!16412 = !DILocalVariable(name: "rxl_a", arg: 1, scope: !16409, file: !3, line: 2109, type: !9587)
!16413 = !DILocation(line: 2109, column: 68, scope: !16409)
!16414 = !DILocalVariable(name: "rxl_b", arg: 2, scope: !16409, file: !3, line: 2110, type: !9587)
!16415 = !DILocation(line: 2110, column: 40, scope: !16409)
!16416 = !DILocation(line: 2112, column: 10, scope: !16409)
!16417 = !DILocation(line: 2112, column: 17, scope: !16409)
!16418 = !DILocation(line: 2112, column: 25, scope: !16409)
!16419 = !DILocation(line: 2112, column: 32, scope: !16409)
!16420 = !DILocation(line: 2112, column: 22, scope: !16409)
!16421 = !DILocation(line: 2112, column: 37, scope: !16409)
!16422 = !DILocation(line: 2113, column: 3, scope: !16409)
!16423 = !DILocation(line: 2113, column: 10, scope: !16409)
!16424 = !DILocation(line: 2113, column: 24, scope: !16409)
!16425 = !DILocation(line: 2113, column: 31, scope: !16409)
!16426 = !DILocation(line: 2113, column: 21, scope: !16409)
!16427 = !DILocation(line: 2113, column: 42, scope: !16409)
!16428 = !DILocation(line: 2114, column: 3, scope: !16409)
!16429 = !DILocation(line: 2114, column: 10, scope: !16409)
!16430 = !DILocation(line: 2114, column: 21, scope: !16409)
!16431 = !DILocation(line: 2114, column: 28, scope: !16409)
!16432 = !DILocation(line: 2114, column: 18, scope: !16409)
!16433 = !DILocation(line: 2114, column: 36, scope: !16409)
!16434 = !DILocation(line: 2115, column: 3, scope: !16409)
!16435 = !DILocation(line: 2115, column: 10, scope: !16409)
!16436 = !DILocation(line: 2115, column: 27, scope: !16409)
!16437 = !DILocation(line: 2115, column: 34, scope: !16409)
!16438 = !DILocation(line: 2115, column: 24, scope: !16409)
!16439 = !DILocation(line: 0, scope: !16409)
!16440 = !DILocation(line: 2112, column: 2, scope: !16409)
!16441 = distinct !DISubprogram(name: "get_order", scope: !16442, file: !16442, line: 29, type: !16443, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16442 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!16443 = !DISubroutineType(types: !16444)
!16444 = !{!78, !358}
!16445 = !DILocalVariable(name: "x", arg: 1, scope: !16446, file: !16447, line: 366, type: !379)
!16446 = distinct !DISubprogram(name: "fls64", scope: !16447, file: !16447, line: 366, type: !16448, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16447 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!16448 = !DISubroutineType(types: !16449)
!16449 = !{!78, !379}
!16450 = !DILocation(line: 366, column: 40, scope: !16446, inlinedAt: !16451)
!16451 = distinct !DILocation(line: 46, column: 9, scope: !16441)
!16452 = !DILocalVariable(name: "bitpos", scope: !16446, file: !16447, line: 368, type: !78)
!16453 = !DILocation(line: 368, column: 6, scope: !16446, inlinedAt: !16451)
!16454 = !DILocalVariable(name: "size", arg: 1, scope: !16441, file: !16442, line: 29, type: !358)
!16455 = !DILocation(line: 29, column: 63, scope: !16441)
!16456 = !DILocation(line: 31, column: 27, scope: !16457)
!16457 = distinct !DILexicalBlock(scope: !16441, file: !16442, line: 31, column: 6)
!16458 = !DILocation(line: 31, column: 6, scope: !16457)
!16459 = !DILocation(line: 31, column: 6, scope: !16441)
!16460 = !DILocation(line: 32, column: 8, scope: !16461)
!16461 = distinct !DILexicalBlock(scope: !16462, file: !16442, line: 32, column: 7)
!16462 = distinct !DILexicalBlock(scope: !16457, file: !16442, line: 31, column: 34)
!16463 = !DILocation(line: 32, column: 7, scope: !16462)
!16464 = !DILocation(line: 33, column: 4, scope: !16461)
!16465 = !DILocation(line: 35, column: 7, scope: !16466)
!16466 = distinct !DILexicalBlock(scope: !16462, file: !16442, line: 35, column: 7)
!16467 = !DILocation(line: 35, column: 12, scope: !16466)
!16468 = !DILocation(line: 35, column: 7, scope: !16462)
!16469 = !DILocation(line: 36, column: 4, scope: !16466)
!16470 = !DILocation(line: 38, column: 10, scope: !16462)
!16471 = !DILocation(line: 38, column: 28, scope: !16462)
!16472 = !DILocation(line: 38, column: 41, scope: !16462)
!16473 = !DILocation(line: 38, column: 3, scope: !16462)
!16474 = !DILocation(line: 41, column: 6, scope: !16441)
!16475 = !DILocation(line: 42, column: 7, scope: !16441)
!16476 = !DILocation(line: 46, column: 15, scope: !16441)
!16477 = !DILocation(line: 374, column: 2, scope: !16446, inlinedAt: !16451)
!16478 = !DILocation(line: 376, column: 14, scope: !16446, inlinedAt: !16451)
!16479 = !{i32 327537}
!16480 = !DILocation(line: 377, column: 9, scope: !16446, inlinedAt: !16451)
!16481 = !DILocation(line: 377, column: 16, scope: !16446, inlinedAt: !16451)
!16482 = !DILocation(line: 46, column: 2, scope: !16441)
!16483 = !DILocation(line: 48, column: 1, scope: !16441)
!16484 = distinct !DISubprogram(name: "__ilog2_u64", scope: !16485, file: !16485, line: 30, type: !16486, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16485 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!16486 = !DISubroutineType(types: !16487)
!16487 = !{!78, !377}
!16488 = !DILocation(line: 366, column: 40, scope: !16446, inlinedAt: !16489)
!16489 = distinct !DILocation(line: 32, column: 9, scope: !16484)
!16490 = !DILocation(line: 368, column: 6, scope: !16446, inlinedAt: !16489)
!16491 = !DILocalVariable(name: "n", arg: 1, scope: !16484, file: !16485, line: 30, type: !377)
!16492 = !DILocation(line: 30, column: 21, scope: !16484)
!16493 = !DILocation(line: 32, column: 15, scope: !16484)
!16494 = !DILocation(line: 374, column: 2, scope: !16446, inlinedAt: !16489)
!16495 = !DILocation(line: 376, column: 14, scope: !16446, inlinedAt: !16489)
!16496 = !DILocation(line: 377, column: 9, scope: !16446, inlinedAt: !16489)
!16497 = !DILocation(line: 377, column: 16, scope: !16446, inlinedAt: !16489)
!16498 = !DILocation(line: 32, column: 18, scope: !16484)
!16499 = !DILocation(line: 32, column: 2, scope: !16484)
!16500 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !16501, file: !16501, line: 137, type: !16502, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16501 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!16502 = !DISubroutineType(types: !16503)
!16503 = !{!637, !2097, !3303, !1085, !1788}
!16504 = !DILocalVariable(name: "s", arg: 1, scope: !16500, file: !16501, line: 137, type: !2097)
!16505 = !DILocation(line: 137, column: 54, scope: !16500)
!16506 = !DILocalVariable(name: "object", arg: 2, scope: !16500, file: !16501, line: 137, type: !3303)
!16507 = !DILocation(line: 137, column: 69, scope: !16500)
!16508 = !DILocalVariable(name: "size", arg: 3, scope: !16500, file: !16501, line: 138, type: !1085)
!16509 = !DILocation(line: 138, column: 12, scope: !16500)
!16510 = !DILocalVariable(name: "flags", arg: 4, scope: !16500, file: !16501, line: 138, type: !1788)
!16511 = !DILocation(line: 138, column: 24, scope: !16500)
!16512 = !DILocation(line: 140, column: 17, scope: !16500)
!16513 = !DILocation(line: 140, column: 2, scope: !16500)
!16514 = distinct !DISubprogram(name: "__list_add_rcu", scope: !9933, file: !9933, line: 85, type: !12190, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16515 = !DILocalVariable(name: "new", arg: 1, scope: !16514, file: !9933, line: 85, type: !333)
!16516 = !DILocation(line: 85, column: 53, scope: !16514)
!16517 = !DILocalVariable(name: "prev", arg: 2, scope: !16514, file: !9933, line: 86, type: !333)
!16518 = !DILocation(line: 86, column: 21, scope: !16514)
!16519 = !DILocalVariable(name: "next", arg: 3, scope: !16514, file: !9933, line: 86, type: !333)
!16520 = !DILocation(line: 86, column: 45, scope: !16514)
!16521 = !DILocation(line: 88, column: 24, scope: !16522)
!16522 = distinct !DILexicalBlock(scope: !16514, file: !9933, line: 88, column: 6)
!16523 = !DILocation(line: 88, column: 29, scope: !16522)
!16524 = !DILocation(line: 88, column: 35, scope: !16522)
!16525 = !DILocation(line: 88, column: 7, scope: !16522)
!16526 = !DILocation(line: 88, column: 6, scope: !16514)
!16527 = !DILocation(line: 89, column: 3, scope: !16522)
!16528 = !DILocation(line: 91, column: 14, scope: !16514)
!16529 = !DILocation(line: 91, column: 2, scope: !16514)
!16530 = !DILocation(line: 91, column: 7, scope: !16514)
!16531 = !DILocation(line: 91, column: 12, scope: !16514)
!16532 = !DILocation(line: 92, column: 14, scope: !16514)
!16533 = !DILocation(line: 92, column: 2, scope: !16514)
!16534 = !DILocation(line: 92, column: 7, scope: !16514)
!16535 = !DILocation(line: 92, column: 12, scope: !16514)
!16536 = !DILocation(line: 93, column: 2, scope: !16514)
!16537 = !DILocalVariable(name: "_r_a_p__v", scope: !16538, file: !9933, line: 93, type: !8254)
!16538 = distinct !DILexicalBlock(scope: !16514, file: !9933, line: 93, column: 2)
!16539 = !DILocation(line: 93, column: 2, scope: !16538)
!16540 = !DILocation(line: 93, column: 2, scope: !16541)
!16541 = distinct !DILexicalBlock(scope: !16538, file: !9933, line: 93, column: 2)
!16542 = !DILocation(line: 93, column: 2, scope: !16543)
!16543 = distinct !DILexicalBlock(scope: !16541, file: !9933, line: 93, column: 2)
!16544 = !DILocation(line: 93, column: 2, scope: !16545)
!16545 = distinct !DILexicalBlock(scope: !16543, file: !9933, line: 93, column: 2)
!16546 = !DILocation(line: 93, column: 2, scope: !16547)
!16547 = distinct !DILexicalBlock(scope: !16543, file: !9933, line: 93, column: 2)
!16548 = !DILocation(line: 93, column: 2, scope: !16549)
!16549 = distinct !DILexicalBlock(scope: !16541, file: !9933, line: 93, column: 2)
!16550 = !DILocation(line: 93, column: 2, scope: !16551)
!16551 = distinct !DILexicalBlock(scope: !16549, file: !9933, line: 93, column: 2)
!16552 = !{i32 -2144108595}
!16553 = !DILocation(line: 93, column: 2, scope: !16554)
!16554 = distinct !DILexicalBlock(scope: !16549, file: !9933, line: 93, column: 2)
!16555 = !DILocation(line: 93, column: 2, scope: !16556)
!16556 = distinct !DILexicalBlock(scope: !16554, file: !9933, line: 93, column: 2)
!16557 = !DILocation(line: 93, column: 2, scope: !16558)
!16558 = distinct !DILexicalBlock(scope: !16554, file: !9933, line: 93, column: 2)
!16559 = !DILocation(line: 94, column: 15, scope: !16514)
!16560 = !DILocation(line: 94, column: 2, scope: !16514)
!16561 = !DILocation(line: 94, column: 8, scope: !16514)
!16562 = !DILocation(line: 94, column: 13, scope: !16514)
!16563 = !DILocation(line: 95, column: 1, scope: !16514)
!16564 = distinct !DISubprogram(name: "mlxsw_emad_op_tlv_register_id_get", scope: !3, file: !3, line: 241, type: !13882, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16565 = !DILocalVariable(name: "buf", arg: 1, scope: !16564, file: !3, line: 241, type: !338)
!16566 = !DILocation(line: 241, column: 1, scope: !16564)
!16567 = distinct !DISubprogram(name: "mlxsw_emad_reg_tlv_len_get", scope: !3, file: !3, line: 295, type: !13882, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16568 = !DILocalVariable(name: "buf", arg: 1, scope: !16567, file: !3, line: 295, type: !338)
!16569 = !DILocation(line: 295, column: 1, scope: !16567)
!16570 = distinct !DISubprogram(name: "__is_event_listener_equal", scope: !3, file: !3, line: 2199, type: !16571, scopeLine: 2201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16571 = !DISubroutineType(types: !16572)
!16572 = !{!817, !9980, !9980}
!16573 = !DILocalVariable(name: "el_a", arg: 1, scope: !16570, file: !3, line: 2199, type: !9980)
!16574 = !DILocation(line: 2199, column: 74, scope: !16570)
!16575 = !DILocalVariable(name: "el_b", arg: 2, scope: !16570, file: !3, line: 2200, type: !9980)
!16576 = !DILocation(line: 2200, column: 46, scope: !16570)
!16577 = !DILocation(line: 2202, column: 10, scope: !16570)
!16578 = !DILocation(line: 2202, column: 16, scope: !16570)
!16579 = !DILocation(line: 2202, column: 24, scope: !16570)
!16580 = !DILocation(line: 2202, column: 30, scope: !16570)
!16581 = !DILocation(line: 2202, column: 21, scope: !16570)
!16582 = !DILocation(line: 2202, column: 35, scope: !16570)
!16583 = !DILocation(line: 2203, column: 3, scope: !16570)
!16584 = !DILocation(line: 2203, column: 9, scope: !16570)
!16585 = !DILocation(line: 2203, column: 20, scope: !16570)
!16586 = !DILocation(line: 2203, column: 26, scope: !16570)
!16587 = !DILocation(line: 2203, column: 17, scope: !16570)
!16588 = !DILocation(line: 0, scope: !16570)
!16589 = !DILocation(line: 2202, column: 2, scope: !16570)
!16590 = distinct !DISubprogram(name: "mlxsw_reg_hpkt_ack_set", scope: !7404, file: !7404, line: 5848, type: !14510, scopeLine: 5848, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16591 = !DILocalVariable(name: "buf", arg: 1, scope: !16590, file: !7404, line: 5848, type: !1084)
!16592 = !DILocation(line: 5848, column: 1, scope: !16590)
!16593 = !DILocalVariable(name: "val", arg: 2, scope: !16590, file: !7404, line: 5848, type: !1033)
!16594 = distinct !DISubprogram(name: "mlxsw_reg_hpkt_action_set", scope: !7404, file: !7404, line: 5876, type: !14510, scopeLine: 5876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16595 = !DILocalVariable(name: "buf", arg: 1, scope: !16594, file: !7404, line: 5876, type: !1084)
!16596 = !DILocation(line: 5876, column: 1, scope: !16594)
!16597 = !DILocalVariable(name: "val", arg: 2, scope: !16594, file: !7404, line: 5876, type: !1033)
!16598 = distinct !DISubprogram(name: "mlxsw_reg_hpkt_trap_group_set", scope: !7404, file: !7404, line: 5882, type: !14510, scopeLine: 5882, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16599 = !DILocalVariable(name: "buf", arg: 1, scope: !16598, file: !7404, line: 5882, type: !1084)
!16600 = !DILocation(line: 5882, column: 1, scope: !16598)
!16601 = !DILocalVariable(name: "val", arg: 2, scope: !16598, file: !7404, line: 5882, type: !1033)
!16602 = distinct !DISubprogram(name: "mlxsw_reg_hpkt_trap_id_set", scope: !7404, file: !7404, line: 5891, type: !14510, scopeLine: 5891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16603 = !DILocalVariable(name: "buf", arg: 1, scope: !16602, file: !7404, line: 5891, type: !1084)
!16604 = !DILocation(line: 5891, column: 1, scope: !16602)
!16605 = !DILocalVariable(name: "val", arg: 2, scope: !16602, file: !7404, line: 5891, type: !1033)
!16606 = distinct !DISubprogram(name: "mlxsw_reg_hpkt_ctrl_set", scope: !7404, file: !7404, line: 5907, type: !14510, scopeLine: 5907, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16607 = !DILocalVariable(name: "buf", arg: 1, scope: !16606, file: !7404, line: 5907, type: !1084)
!16608 = !DILocation(line: 5907, column: 1, scope: !16606)
!16609 = !DILocalVariable(name: "val", arg: 2, scope: !16606, file: !7404, line: 5907, type: !1033)
!16610 = distinct !DISubprogram(name: "mlxsw_core_tid_get", scope: !3, file: !3, line: 2380, type: !16611, scopeLine: 2381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16611 = !DISubroutineType(types: !16612)
!16612 = !{!377, !7847}
!16613 = !DILocalVariable(name: "i", arg: 1, scope: !16614, file: !14989, line: 158, type: !423)
!16614 = distinct !DISubprogram(name: "arch_atomic64_add_return", scope: !14989, file: !14989, line: 158, type: !16615, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16615 = !DISubroutineType(types: !16616)
!16616 = !{!423, !423, !12585}
!16617 = !DILocation(line: 158, column: 57, scope: !16614, inlinedAt: !16618)
!16618 = distinct !DILocation(line: 1393, column: 9, scope: !16619, inlinedAt: !16623)
!16619 = distinct !DISubprogram(name: "arch_atomic64_inc_return", scope: !16620, file: !16620, line: 1391, type: !16621, scopeLine: 1392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16620 = !DIFile(filename: "./include/linux/atomic-arch-fallback.h", directory: "/home/lizy2001/genbc/linux")
!16621 = !DISubroutineType(types: !16622)
!16622 = !{!423, !12585}
!16623 = distinct !DILocation(line: 1061, column: 9, scope: !16624, inlinedAt: !16625)
!16624 = distinct !DISubprogram(name: "atomic64_inc_return", scope: !12582, file: !12582, line: 1058, type: !16621, scopeLine: 1059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16625 = distinct !DILocation(line: 2382, column: 9, scope: !16610)
!16626 = !DILocalVariable(name: "v", arg: 2, scope: !16614, file: !14989, line: 158, type: !12585)
!16627 = !DILocation(line: 158, column: 72, scope: !16614, inlinedAt: !16618)
!16628 = !DILocalVariable(name: "__ret", scope: !16629, file: !14989, line: 160, type: !423)
!16629 = distinct !DILexicalBlock(scope: !16614, file: !14989, line: 160, column: 13)
!16630 = !DILocation(line: 160, column: 13, scope: !16629, inlinedAt: !16618)
!16631 = !DILocalVariable(name: "v", arg: 1, scope: !16619, file: !16620, line: 1391, type: !12585)
!16632 = !DILocation(line: 1391, column: 38, scope: !16619, inlinedAt: !16623)
!16633 = !DILocation(line: 99, column: 79, scope: !15180, inlinedAt: !16634)
!16634 = distinct !DILocation(line: 1060, column: 2, scope: !16624, inlinedAt: !16625)
!16635 = !DILocation(line: 99, column: 89, scope: !15180, inlinedAt: !16634)
!16636 = !DILocalVariable(name: "v", arg: 1, scope: !16624, file: !12582, line: 1058, type: !12585)
!16637 = !DILocation(line: 1058, column: 33, scope: !16624, inlinedAt: !16625)
!16638 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !16610, file: !3, line: 2380, type: !7847)
!16639 = !DILocation(line: 2380, column: 50, scope: !16610)
!16640 = !DILocation(line: 2382, column: 30, scope: !16610)
!16641 = !DILocation(line: 2382, column: 42, scope: !16610)
!16642 = !DILocation(line: 2382, column: 47, scope: !16610)
!16643 = !DILocation(line: 1060, column: 31, scope: !16624, inlinedAt: !16625)
!16644 = !DILocation(line: 101, column: 20, scope: !15180, inlinedAt: !16634)
!16645 = !DILocation(line: 101, column: 23, scope: !15180, inlinedAt: !16634)
!16646 = !DILocation(line: 101, column: 2, scope: !15180, inlinedAt: !16634)
!16647 = !DILocation(line: 102, column: 2, scope: !15180, inlinedAt: !16634)
!16648 = !DILocation(line: 1061, column: 34, scope: !16624, inlinedAt: !16625)
!16649 = !DILocation(line: 1393, column: 37, scope: !16619, inlinedAt: !16623)
!16650 = !DILocation(line: 160, column: 9, scope: !16614, inlinedAt: !16618)
!16651 = !{i32 -2146514943}
!16652 = !DILocation(line: 160, column: 11, scope: !16614, inlinedAt: !16618)
!16653 = !DILocation(line: 2382, column: 2, scope: !16610)
!16654 = distinct !DISubprogram(name: "mlxsw_emad_reg_access", scope: !3, file: !3, line: 782, type: !16655, scopeLine: 790, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16655 = !DISubroutineType(types: !16656)
!16656 = !{!78, !7847, !8145, !1084, !7452, !7841, !333, !8139, !358, !377}
!16657 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !16654, file: !3, line: 782, type: !7847)
!16658 = !DILocation(line: 782, column: 53, scope: !16654)
!16659 = !DILocalVariable(name: "reg", arg: 2, scope: !16654, file: !3, line: 783, type: !8145)
!16660 = !DILocation(line: 783, column: 35, scope: !16654)
!16661 = !DILocalVariable(name: "payload", arg: 3, scope: !16654, file: !3, line: 784, type: !1084)
!16662 = !DILocation(line: 784, column: 12, scope: !16654)
!16663 = !DILocalVariable(name: "type", arg: 4, scope: !16654, file: !3, line: 785, type: !7452)
!16664 = !DILocation(line: 785, column: 38, scope: !16654)
!16665 = !DILocalVariable(name: "trans", arg: 5, scope: !16654, file: !3, line: 786, type: !7841)
!16666 = !DILocation(line: 786, column: 30, scope: !16654)
!16667 = !DILocalVariable(name: "bulk_list", arg: 6, scope: !16654, file: !3, line: 787, type: !333)
!16668 = !DILocation(line: 787, column: 24, scope: !16654)
!16669 = !DILocalVariable(name: "cb", arg: 7, scope: !16654, file: !3, line: 788, type: !8139)
!16670 = !DILocation(line: 788, column: 28, scope: !16654)
!16671 = !DILocalVariable(name: "cb_priv", arg: 8, scope: !16654, file: !3, line: 789, type: !358)
!16672 = !DILocation(line: 789, column: 20, scope: !16654)
!16673 = !DILocalVariable(name: "tid", arg: 9, scope: !16654, file: !3, line: 789, type: !377)
!16674 = !DILocation(line: 789, column: 33, scope: !16654)
!16675 = !DILocalVariable(name: "enable_string_tlv", scope: !16654, file: !3, line: 791, type: !817)
!16676 = !DILocation(line: 791, column: 7, scope: !16654)
!16677 = !DILocalVariable(name: "skb", scope: !16654, file: !3, line: 792, type: !461)
!16678 = !DILocation(line: 792, column: 18, scope: !16654)
!16679 = !DILocalVariable(name: "err", scope: !16654, file: !3, line: 793, type: !78)
!16680 = !DILocation(line: 793, column: 6, scope: !16654)
!16681 = !DILocation(line: 802, column: 22, scope: !16654)
!16682 = !DILocation(line: 802, column: 34, scope: !16654)
!16683 = !DILocation(line: 802, column: 39, scope: !16654)
!16684 = !DILocation(line: 802, column: 20, scope: !16654)
!16685 = !DILocation(line: 804, column: 25, scope: !16654)
!16686 = !DILocation(line: 804, column: 37, scope: !16654)
!16687 = !DILocation(line: 804, column: 42, scope: !16654)
!16688 = !DILocation(line: 804, column: 47, scope: !16654)
!16689 = !DILocation(line: 804, column: 8, scope: !16654)
!16690 = !DILocation(line: 804, column: 6, scope: !16654)
!16691 = !DILocation(line: 805, column: 7, scope: !16692)
!16692 = distinct !DILexicalBlock(scope: !16654, file: !3, line: 805, column: 6)
!16693 = !DILocation(line: 805, column: 6, scope: !16654)
!16694 = !DILocation(line: 806, column: 3, scope: !16692)
!16695 = !DILocation(line: 808, column: 17, scope: !16654)
!16696 = !DILocation(line: 808, column: 24, scope: !16654)
!16697 = !DILocation(line: 808, column: 35, scope: !16654)
!16698 = !DILocation(line: 808, column: 2, scope: !16654)
!16699 = !DILocation(line: 809, column: 16, scope: !16654)
!16700 = !DILocation(line: 809, column: 2, scope: !16654)
!16701 = !DILocation(line: 809, column: 9, scope: !16654)
!16702 = !DILocation(line: 809, column: 14, scope: !16654)
!16703 = !DILocation(line: 810, column: 18, scope: !16654)
!16704 = !DILocation(line: 810, column: 2, scope: !16654)
!16705 = !DILocation(line: 810, column: 9, scope: !16654)
!16706 = !DILocation(line: 810, column: 16, scope: !16654)
!16707 = !DILocation(line: 811, column: 2, scope: !16654)
!16708 = !DILocation(line: 811, column: 9, scope: !16654)
!16709 = !DILocation(line: 811, column: 17, scope: !16654)
!16710 = !DILocation(line: 811, column: 28, scope: !16654)
!16711 = !DILocation(line: 812, column: 2, scope: !16654)
!16712 = !DILocation(line: 812, column: 9, scope: !16654)
!16713 = !DILocation(line: 812, column: 17, scope: !16654)
!16714 = !DILocation(line: 812, column: 25, scope: !16654)
!16715 = !DILocation(line: 813, column: 2, scope: !16654)
!16716 = !DILocation(line: 813, column: 2, scope: !16717)
!16717 = distinct !DILexicalBlock(scope: !16654, file: !3, line: 813, column: 2)
!16718 = !DILocation(line: 813, column: 2, scope: !16719)
!16719 = distinct !DILexicalBlock(scope: !16717, file: !3, line: 813, column: 2)
!16720 = !DILocation(line: 814, column: 15, scope: !16654)
!16721 = !DILocation(line: 814, column: 2, scope: !16654)
!16722 = !DILocation(line: 814, column: 9, scope: !16654)
!16723 = !DILocation(line: 814, column: 13, scope: !16654)
!16724 = !DILocation(line: 815, column: 2, scope: !16654)
!16725 = !DILocation(line: 816, column: 14, scope: !16654)
!16726 = !DILocation(line: 816, column: 2, scope: !16654)
!16727 = !DILocation(line: 816, column: 9, scope: !16654)
!16728 = !DILocation(line: 816, column: 12, scope: !16654)
!16729 = !DILocation(line: 817, column: 19, scope: !16654)
!16730 = !DILocation(line: 817, column: 2, scope: !16654)
!16731 = !DILocation(line: 817, column: 9, scope: !16654)
!16732 = !DILocation(line: 817, column: 17, scope: !16654)
!16733 = !DILocation(line: 818, column: 15, scope: !16654)
!16734 = !DILocation(line: 818, column: 2, scope: !16654)
!16735 = !DILocation(line: 818, column: 9, scope: !16654)
!16736 = !DILocation(line: 818, column: 13, scope: !16654)
!16737 = !DILocation(line: 819, column: 16, scope: !16654)
!16738 = !DILocation(line: 819, column: 2, scope: !16654)
!16739 = !DILocation(line: 819, column: 9, scope: !16654)
!16740 = !DILocation(line: 819, column: 14, scope: !16654)
!16741 = !DILocation(line: 821, column: 23, scope: !16654)
!16742 = !DILocation(line: 821, column: 28, scope: !16654)
!16743 = !DILocation(line: 821, column: 33, scope: !16654)
!16744 = !DILocation(line: 821, column: 42, scope: !16654)
!16745 = !DILocation(line: 821, column: 48, scope: !16654)
!16746 = !DILocation(line: 821, column: 55, scope: !16654)
!16747 = !DILocation(line: 822, column: 9, scope: !16654)
!16748 = !DILocation(line: 821, column: 2, scope: !16654)
!16749 = !DILocation(line: 823, column: 2, scope: !16654)
!16750 = !DILocation(line: 823, column: 14, scope: !16654)
!16751 = !DILocation(line: 823, column: 22, scope: !16654)
!16752 = !DILocation(line: 823, column: 38, scope: !16654)
!16753 = !DILocation(line: 823, column: 44, scope: !16654)
!16754 = !DILocation(line: 823, column: 51, scope: !16654)
!16755 = !DILocation(line: 825, column: 16, scope: !16654)
!16756 = !DILocation(line: 825, column: 28, scope: !16654)
!16757 = !DILocation(line: 825, column: 33, scope: !16654)
!16758 = !DILocation(line: 825, column: 2, scope: !16654)
!16759 = !DILocation(line: 826, column: 21, scope: !16654)
!16760 = !DILocation(line: 826, column: 28, scope: !16654)
!16761 = !DILocation(line: 826, column: 35, scope: !16654)
!16762 = !DILocation(line: 826, column: 47, scope: !16654)
!16763 = !DILocation(line: 826, column: 52, scope: !16654)
!16764 = !DILocation(line: 826, column: 2, scope: !16654)
!16765 = !DILocation(line: 827, column: 18, scope: !16654)
!16766 = !DILocation(line: 827, column: 30, scope: !16654)
!16767 = !DILocation(line: 827, column: 35, scope: !16654)
!16768 = !DILocation(line: 827, column: 2, scope: !16654)
!16769 = !DILocation(line: 828, column: 28, scope: !16654)
!16770 = !DILocation(line: 828, column: 40, scope: !16654)
!16771 = !DILocation(line: 828, column: 8, scope: !16654)
!16772 = !DILocation(line: 828, column: 6, scope: !16654)
!16773 = !DILocation(line: 829, column: 6, scope: !16774)
!16774 = distinct !DILexicalBlock(scope: !16654, file: !3, line: 829, column: 6)
!16775 = !DILocation(line: 829, column: 6, scope: !16654)
!16776 = !DILocation(line: 830, column: 3, scope: !16774)
!16777 = !DILocation(line: 831, column: 2, scope: !16654)
!16778 = !DILabel(scope: !16654, name: "err_out", file: !3, line: 833)
!16779 = !DILocation(line: 833, column: 1, scope: !16654)
!16780 = !DILocation(line: 834, column: 16, scope: !16654)
!16781 = !DILocation(line: 834, column: 28, scope: !16654)
!16782 = !DILocation(line: 834, column: 33, scope: !16654)
!16783 = !DILocation(line: 834, column: 2, scope: !16654)
!16784 = !DILocation(line: 835, column: 16, scope: !16654)
!16785 = !DILocation(line: 835, column: 23, scope: !16654)
!16786 = !DILocation(line: 835, column: 2, scope: !16654)
!16787 = !DILocation(line: 836, column: 18, scope: !16654)
!16788 = !DILocation(line: 836, column: 30, scope: !16654)
!16789 = !DILocation(line: 836, column: 35, scope: !16654)
!16790 = !DILocation(line: 836, column: 2, scope: !16654)
!16791 = !DILocation(line: 837, column: 12, scope: !16654)
!16792 = !DILocation(line: 837, column: 19, scope: !16654)
!16793 = !DILocation(line: 837, column: 2, scope: !16654)
!16794 = !DILocation(line: 838, column: 2, scope: !16654)
!16795 = !DILocation(line: 839, column: 9, scope: !16654)
!16796 = !DILocation(line: 839, column: 2, scope: !16654)
!16797 = !DILocation(line: 840, column: 1, scope: !16654)
!16798 = distinct !DISubprogram(name: "kvfree_call_rcu", scope: !16799, file: !16799, line: 45, type: !16800, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16799 = !DIFile(filename: "./include/linux/rcutiny.h", directory: "/home/lizy2001/genbc/linux")
!16800 = !DISubroutineType(types: !16801)
!16801 = !{null, !348, !8269}
!16802 = !DILocalVariable(name: "head", arg: 1, scope: !16798, file: !16799, line: 45, type: !348)
!16803 = !DILocation(line: 45, column: 53, scope: !16798)
!16804 = !DILocalVariable(name: "func", arg: 2, scope: !16798, file: !16799, line: 45, type: !8269)
!16805 = !DILocation(line: 45, column: 74, scope: !16798)
!16806 = !DILocation(line: 47, column: 6, scope: !16807)
!16807 = distinct !DILexicalBlock(scope: !16798, file: !16799, line: 47, column: 6)
!16808 = !DILocation(line: 47, column: 6, scope: !16798)
!16809 = !DILocation(line: 48, column: 12, scope: !16810)
!16810 = distinct !DILexicalBlock(scope: !16807, file: !16799, line: 47, column: 12)
!16811 = !DILocation(line: 48, column: 18, scope: !16810)
!16812 = !DILocation(line: 48, column: 3, scope: !16810)
!16813 = !DILocation(line: 49, column: 3, scope: !16810)
!16814 = !DILocation(line: 53, column: 2, scope: !16798)
!16815 = !DILocation(line: 53, column: 2, scope: !16816)
!16816 = distinct !DILexicalBlock(scope: !16798, file: !16799, line: 53, column: 2)
!16817 = !DILocation(line: 53, column: 2, scope: !16818)
!16818 = distinct !DILexicalBlock(scope: !16816, file: !16799, line: 53, column: 2)
!16819 = !DILocation(line: 54, column: 2, scope: !16798)
!16820 = !DILocation(line: 55, column: 18, scope: !16798)
!16821 = !DILocation(line: 55, column: 9, scope: !16798)
!16822 = !DILocation(line: 55, column: 2, scope: !16798)
!16823 = !DILocation(line: 56, column: 1, scope: !16798)
!16824 = distinct !DISubprogram(name: "mlxsw_emad_alloc", scope: !3, file: !3, line: 759, type: !16825, scopeLine: 761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16825 = !DISubroutineType(types: !16826)
!16826 = !{!461, !8844, !627, !817}
!16827 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !16824, file: !3, line: 759, type: !8844)
!16828 = !DILocation(line: 759, column: 66, scope: !16824)
!16829 = !DILocalVariable(name: "reg_len", arg: 2, scope: !16824, file: !3, line: 760, type: !627)
!16830 = !DILocation(line: 760, column: 10, scope: !16824)
!16831 = !DILocalVariable(name: "enable_string_tlv", arg: 3, scope: !16824, file: !3, line: 760, type: !817)
!16832 = !DILocation(line: 760, column: 24, scope: !16824)
!16833 = !DILocalVariable(name: "skb", scope: !16824, file: !3, line: 762, type: !461)
!16834 = !DILocation(line: 762, column: 18, scope: !16824)
!16835 = !DILocalVariable(name: "emad_len", scope: !16824, file: !3, line: 763, type: !627)
!16836 = !DILocation(line: 763, column: 6, scope: !16824)
!16837 = !DILocation(line: 765, column: 14, scope: !16824)
!16838 = !DILocation(line: 765, column: 22, scope: !16824)
!16839 = !DILocation(line: 765, column: 36, scope: !16824)
!16840 = !DILocation(line: 765, column: 61, scope: !16824)
!16841 = !DILocation(line: 767, column: 21, scope: !16824)
!16842 = !DILocation(line: 767, column: 33, scope: !16824)
!16843 = !DILocation(line: 767, column: 41, scope: !16824)
!16844 = !DILocation(line: 767, column: 19, scope: !16824)
!16845 = !DILocation(line: 765, column: 13, scope: !16824)
!16846 = !DILocation(line: 765, column: 11, scope: !16824)
!16847 = !DILocation(line: 768, column: 6, scope: !16848)
!16848 = distinct !DILexicalBlock(scope: !16824, file: !3, line: 768, column: 6)
!16849 = !DILocation(line: 768, column: 6, scope: !16824)
!16850 = !DILocation(line: 769, column: 12, scope: !16848)
!16851 = !DILocation(line: 769, column: 3, scope: !16848)
!16852 = !DILocation(line: 770, column: 6, scope: !16853)
!16853 = distinct !DILexicalBlock(scope: !16824, file: !3, line: 770, column: 6)
!16854 = !DILocation(line: 770, column: 15, scope: !16853)
!16855 = !DILocation(line: 770, column: 6, scope: !16824)
!16856 = !DILocation(line: 771, column: 3, scope: !16853)
!16857 = !DILocation(line: 773, column: 31, scope: !16824)
!16858 = !DILocation(line: 773, column: 8, scope: !16824)
!16859 = !DILocation(line: 773, column: 6, scope: !16824)
!16860 = !DILocation(line: 774, column: 7, scope: !16861)
!16861 = distinct !DILexicalBlock(scope: !16824, file: !3, line: 774, column: 6)
!16862 = !DILocation(line: 774, column: 6, scope: !16824)
!16863 = !DILocation(line: 775, column: 3, scope: !16861)
!16864 = !DILocation(line: 776, column: 9, scope: !16824)
!16865 = !DILocation(line: 776, column: 14, scope: !16824)
!16866 = !DILocation(line: 776, column: 23, scope: !16824)
!16867 = !DILocation(line: 776, column: 2, scope: !16824)
!16868 = !DILocation(line: 777, column: 14, scope: !16824)
!16869 = !DILocation(line: 777, column: 19, scope: !16824)
!16870 = !DILocation(line: 777, column: 2, scope: !16824)
!16871 = !DILocation(line: 779, column: 9, scope: !16824)
!16872 = !DILocation(line: 779, column: 2, scope: !16824)
!16873 = !DILocation(line: 780, column: 1, scope: !16824)
!16874 = distinct !DISubprogram(name: "mlxsw_emad_trans_timeout_work", scope: !3, file: !3, line: 633, type: !2883, scopeLine: 634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16875 = !DILocation(line: 121, column: 64, scope: !15166, inlinedAt: !16876)
!16876 = distinct !DILocation(line: 749, column: 9, scope: !15173, inlinedAt: !16877)
!16877 = distinct !DILocation(line: 639, column: 7, scope: !16878)
!16878 = distinct !DILexicalBlock(scope: !16874, file: !3, line: 639, column: 6)
!16879 = !DILocation(line: 123, column: 9, scope: !15177, inlinedAt: !16876)
!16880 = !DILocation(line: 99, column: 79, scope: !15180, inlinedAt: !16881)
!16881 = distinct !DILocation(line: 748, column: 2, scope: !15173, inlinedAt: !16877)
!16882 = !DILocation(line: 99, column: 89, scope: !15180, inlinedAt: !16881)
!16883 = !DILocation(line: 746, column: 31, scope: !15173, inlinedAt: !16877)
!16884 = !DILocalVariable(name: "work", arg: 1, scope: !16874, file: !3, line: 633, type: !2885)
!16885 = !DILocation(line: 633, column: 63, scope: !16874)
!16886 = !DILocalVariable(name: "trans", scope: !16874, file: !3, line: 635, type: !7841)
!16887 = !DILocation(line: 635, column: 26, scope: !16874)
!16888 = !DILocalVariable(name: "__mptr", scope: !16889, file: !3, line: 635, type: !637)
!16889 = distinct !DILexicalBlock(scope: !16874, file: !3, line: 635, column: 34)
!16890 = !DILocation(line: 635, column: 34, scope: !16889)
!16891 = !DILocation(line: 635, column: 34, scope: !16892)
!16892 = distinct !DILexicalBlock(scope: !16889, file: !3, line: 635, column: 34)
!16893 = !DILocation(line: 639, column: 28, scope: !16878)
!16894 = !DILocation(line: 639, column: 35, scope: !16878)
!16895 = !DILocation(line: 748, column: 31, scope: !15173, inlinedAt: !16877)
!16896 = !DILocation(line: 101, column: 20, scope: !15180, inlinedAt: !16881)
!16897 = !DILocation(line: 101, column: 23, scope: !15180, inlinedAt: !16881)
!16898 = !DILocation(line: 101, column: 2, scope: !15180, inlinedAt: !16881)
!16899 = !DILocation(line: 102, column: 2, scope: !15180, inlinedAt: !16881)
!16900 = !DILocation(line: 749, column: 34, scope: !15173, inlinedAt: !16877)
!16901 = !DILocation(line: 639, column: 6, scope: !16874)
!16902 = !DILocation(line: 640, column: 3, scope: !16878)
!16903 = !DILocation(line: 642, column: 28, scope: !16874)
!16904 = !DILocation(line: 642, column: 35, scope: !16874)
!16905 = !DILocation(line: 642, column: 41, scope: !16874)
!16906 = !DILocation(line: 642, column: 2, scope: !16874)
!16907 = !DILocation(line: 643, column: 1, scope: !16874)
!16908 = !DILocalVariable(name: "x", arg: 1, scope: !8516, file: !2644, line: 85, type: !2642)
!16909 = !DILocation(line: 85, column: 57, scope: !8516)
!16910 = !DILocation(line: 87, column: 2, scope: !8516)
!16911 = !DILocation(line: 87, column: 5, scope: !8516)
!16912 = !DILocation(line: 87, column: 10, scope: !8516)
!16913 = !DILocation(line: 88, column: 2, scope: !8516)
!16914 = !DILocation(line: 88, column: 2, scope: !16915)
!16915 = distinct !DILexicalBlock(scope: !8516, file: !2644, line: 88, column: 2)
!16916 = !DILocation(line: 89, column: 1, scope: !8516)
!16917 = distinct !DISubprogram(name: "mlxsw_emad_construct", scope: !3, file: !3, line: 384, type: !16918, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16918 = !DISubroutineType(types: !16919)
!16919 = !{null, !461, !8145, !1084, !7452, !377, !817}
!16920 = !DILocalVariable(name: "skb", arg: 1, scope: !16917, file: !3, line: 384, type: !461)
!16921 = !DILocation(line: 384, column: 50, scope: !16917)
!16922 = !DILocalVariable(name: "reg", arg: 2, scope: !16917, file: !3, line: 385, type: !8145)
!16923 = !DILocation(line: 385, column: 35, scope: !16917)
!16924 = !DILocalVariable(name: "payload", arg: 3, scope: !16917, file: !3, line: 386, type: !1084)
!16925 = !DILocation(line: 386, column: 12, scope: !16917)
!16926 = !DILocalVariable(name: "type", arg: 4, scope: !16917, file: !3, line: 387, type: !7452)
!16927 = !DILocation(line: 387, column: 38, scope: !16917)
!16928 = !DILocalVariable(name: "tid", arg: 5, scope: !16917, file: !3, line: 388, type: !377)
!16929 = !DILocation(line: 388, column: 10, scope: !16917)
!16930 = !DILocalVariable(name: "enable_string_tlv", arg: 6, scope: !16917, file: !3, line: 388, type: !817)
!16931 = !DILocation(line: 388, column: 20, scope: !16917)
!16932 = !DILocalVariable(name: "buf", scope: !16917, file: !3, line: 390, type: !1084)
!16933 = !DILocation(line: 390, column: 8, scope: !16917)
!16934 = !DILocation(line: 392, column: 17, scope: !16917)
!16935 = !DILocation(line: 392, column: 8, scope: !16917)
!16936 = !DILocation(line: 392, column: 6, scope: !16917)
!16937 = !DILocation(line: 393, column: 26, scope: !16917)
!16938 = !DILocation(line: 393, column: 2, scope: !16917)
!16939 = !DILocation(line: 395, column: 17, scope: !16917)
!16940 = !DILocation(line: 395, column: 22, scope: !16917)
!16941 = !DILocation(line: 395, column: 27, scope: !16917)
!16942 = !DILocation(line: 395, column: 31, scope: !16917)
!16943 = !DILocation(line: 395, column: 8, scope: !16917)
!16944 = !DILocation(line: 395, column: 6, scope: !16917)
!16945 = !DILocation(line: 396, column: 26, scope: !16917)
!16946 = !DILocation(line: 396, column: 31, scope: !16917)
!16947 = !DILocation(line: 396, column: 36, scope: !16917)
!16948 = !DILocation(line: 396, column: 2, scope: !16917)
!16949 = !DILocation(line: 398, column: 6, scope: !16950)
!16950 = distinct !DILexicalBlock(scope: !16917, file: !3, line: 398, column: 6)
!16951 = !DILocation(line: 398, column: 6, scope: !16917)
!16952 = !DILocation(line: 399, column: 18, scope: !16953)
!16953 = distinct !DILexicalBlock(scope: !16950, file: !3, line: 398, column: 25)
!16954 = !DILocation(line: 399, column: 9, scope: !16953)
!16955 = !DILocation(line: 399, column: 7, scope: !16953)
!16956 = !DILocation(line: 400, column: 30, scope: !16953)
!16957 = !DILocation(line: 400, column: 3, scope: !16953)
!16958 = !DILocation(line: 401, column: 2, scope: !16953)
!16959 = !DILocation(line: 403, column: 17, scope: !16917)
!16960 = !DILocation(line: 403, column: 8, scope: !16917)
!16961 = !DILocation(line: 403, column: 6, scope: !16917)
!16962 = !DILocation(line: 404, column: 25, scope: !16917)
!16963 = !DILocation(line: 404, column: 30, scope: !16917)
!16964 = !DILocation(line: 404, column: 35, scope: !16917)
!16965 = !DILocation(line: 404, column: 41, scope: !16917)
!16966 = !DILocation(line: 404, column: 2, scope: !16917)
!16967 = !DILocation(line: 406, column: 31, scope: !16917)
!16968 = !DILocation(line: 406, column: 2, scope: !16917)
!16969 = !DILocation(line: 407, column: 1, scope: !16917)
!16970 = distinct !DISubprogram(name: "list_add_tail_rcu", scope: !9933, file: !9933, line: 134, type: !8933, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16971 = !DILocalVariable(name: "new", arg: 1, scope: !16970, file: !9933, line: 134, type: !333)
!16972 = !DILocation(line: 134, column: 56, scope: !16970)
!16973 = !DILocalVariable(name: "head", arg: 2, scope: !16970, file: !9933, line: 135, type: !333)
!16974 = !DILocation(line: 135, column: 24, scope: !16970)
!16975 = !DILocation(line: 137, column: 17, scope: !16970)
!16976 = !DILocation(line: 137, column: 22, scope: !16970)
!16977 = !DILocation(line: 137, column: 28, scope: !16970)
!16978 = !DILocation(line: 137, column: 34, scope: !16970)
!16979 = !DILocation(line: 137, column: 2, scope: !16970)
!16980 = !DILocation(line: 138, column: 1, scope: !16970)
!16981 = distinct !DISubprogram(name: "netdev_alloc_skb", scope: !463, file: !463, line: 2823, type: !16982, scopeLine: 2825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16982 = !DISubroutineType(types: !16983)
!16983 = !{!461, !336, !7}
!16984 = !DILocalVariable(name: "dev", arg: 1, scope: !16981, file: !463, line: 2823, type: !336)
!16985 = !DILocation(line: 2823, column: 67, scope: !16981)
!16986 = !DILocalVariable(name: "length", arg: 2, scope: !16981, file: !463, line: 2824, type: !7)
!16987 = !DILocation(line: 2824, column: 26, scope: !16981)
!16988 = !DILocation(line: 2826, column: 28, scope: !16981)
!16989 = !DILocation(line: 2826, column: 33, scope: !16981)
!16990 = !DILocation(line: 2826, column: 9, scope: !16981)
!16991 = !DILocation(line: 2826, column: 2, scope: !16981)
!16992 = distinct !DISubprogram(name: "skb_reserve", scope: !463, file: !463, line: 2378, type: !16993, scopeLine: 2379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!16993 = !DISubroutineType(types: !16994)
!16994 = !{null, !461, !78}
!16995 = !DILocalVariable(name: "skb", arg: 1, scope: !16992, file: !463, line: 2378, type: !461)
!16996 = !DILocation(line: 2378, column: 48, scope: !16992)
!16997 = !DILocalVariable(name: "len", arg: 2, scope: !16992, file: !463, line: 2378, type: !78)
!16998 = !DILocation(line: 2378, column: 57, scope: !16992)
!16999 = !DILocation(line: 2380, column: 15, scope: !16992)
!17000 = !DILocation(line: 2380, column: 2, scope: !16992)
!17001 = !DILocation(line: 2380, column: 7, scope: !16992)
!17002 = !DILocation(line: 2380, column: 12, scope: !16992)
!17003 = !DILocation(line: 2381, column: 15, scope: !16992)
!17004 = !DILocation(line: 2381, column: 2, scope: !16992)
!17005 = !DILocation(line: 2381, column: 7, scope: !16992)
!17006 = !DILocation(line: 2381, column: 12, scope: !16992)
!17007 = !DILocation(line: 2382, column: 1, scope: !16992)
!17008 = distinct !DISubprogram(name: "mlxsw_emad_pack_end_tlv", scope: !3, file: !3, line: 326, type: !12058, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17009 = !DILocalVariable(name: "end_tlv", arg: 1, scope: !17008, file: !3, line: 326, type: !1084)
!17010 = !DILocation(line: 326, column: 43, scope: !17008)
!17011 = !DILocation(line: 328, column: 30, scope: !17008)
!17012 = !DILocation(line: 328, column: 2, scope: !17008)
!17013 = !DILocation(line: 329, column: 29, scope: !17008)
!17014 = !DILocation(line: 329, column: 2, scope: !17008)
!17015 = !DILocation(line: 330, column: 1, scope: !17008)
!17016 = distinct !DISubprogram(name: "mlxsw_emad_pack_reg_tlv", scope: !3, file: !3, line: 332, type: !17017, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17017 = !DISubroutineType(types: !17018)
!17018 = !{null, !1084, !8145, !1084}
!17019 = !DILocalVariable(name: "reg_tlv", arg: 1, scope: !17016, file: !3, line: 332, type: !1084)
!17020 = !DILocation(line: 332, column: 43, scope: !17016)
!17021 = !DILocalVariable(name: "reg", arg: 2, scope: !17016, file: !3, line: 333, type: !8145)
!17022 = !DILocation(line: 333, column: 38, scope: !17016)
!17023 = !DILocalVariable(name: "payload", arg: 3, scope: !17016, file: !3, line: 334, type: !1084)
!17024 = !DILocation(line: 334, column: 15, scope: !17016)
!17025 = !DILocation(line: 336, column: 30, scope: !17016)
!17026 = !DILocation(line: 336, column: 2, scope: !17016)
!17027 = !DILocation(line: 337, column: 29, scope: !17016)
!17028 = !DILocation(line: 337, column: 38, scope: !17016)
!17029 = !DILocation(line: 337, column: 43, scope: !17016)
!17030 = !DILocation(line: 337, column: 47, scope: !17016)
!17031 = !DILocation(line: 337, column: 61, scope: !17016)
!17032 = !DILocation(line: 337, column: 2, scope: !17016)
!17033 = !DILocation(line: 338, column: 9, scope: !17016)
!17034 = !DILocation(line: 338, column: 17, scope: !17016)
!17035 = !DILocation(line: 338, column: 32, scope: !17016)
!17036 = !DILocation(line: 338, column: 41, scope: !17016)
!17037 = !DILocation(line: 338, column: 46, scope: !17016)
!17038 = !DILocation(line: 338, column: 2, scope: !17016)
!17039 = !DILocation(line: 339, column: 1, scope: !17016)
!17040 = distinct !DISubprogram(name: "mlxsw_emad_pack_string_tlv", scope: !3, file: !3, line: 341, type: !12058, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17041 = !DILocalVariable(name: "string_tlv", arg: 1, scope: !17040, file: !3, line: 341, type: !1084)
!17042 = !DILocation(line: 341, column: 46, scope: !17040)
!17043 = !DILocation(line: 343, column: 33, scope: !17040)
!17044 = !DILocation(line: 343, column: 2, scope: !17040)
!17045 = !DILocation(line: 344, column: 32, scope: !17040)
!17046 = !DILocation(line: 344, column: 2, scope: !17040)
!17047 = !DILocation(line: 345, column: 1, scope: !17040)
!17048 = distinct !DISubprogram(name: "mlxsw_emad_pack_op_tlv", scope: !3, file: !3, line: 347, type: !17049, scopeLine: 351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17049 = !DISubroutineType(types: !17050)
!17050 = !{null, !1084, !8145, !7452, !377}
!17051 = !DILocalVariable(name: "op_tlv", arg: 1, scope: !17048, file: !3, line: 347, type: !1084)
!17052 = !DILocation(line: 347, column: 42, scope: !17048)
!17053 = !DILocalVariable(name: "reg", arg: 2, scope: !17048, file: !3, line: 348, type: !8145)
!17054 = !DILocation(line: 348, column: 37, scope: !17048)
!17055 = !DILocalVariable(name: "type", arg: 3, scope: !17048, file: !3, line: 349, type: !7452)
!17056 = !DILocation(line: 349, column: 40, scope: !17048)
!17057 = !DILocalVariable(name: "tid", arg: 4, scope: !17048, file: !3, line: 350, type: !377)
!17058 = !DILocation(line: 350, column: 12, scope: !17048)
!17059 = !DILocation(line: 352, column: 29, scope: !17048)
!17060 = !DILocation(line: 352, column: 2, scope: !17048)
!17061 = !DILocation(line: 353, column: 28, scope: !17048)
!17062 = !DILocation(line: 353, column: 2, scope: !17048)
!17063 = !DILocation(line: 354, column: 27, scope: !17048)
!17064 = !DILocation(line: 354, column: 2, scope: !17048)
!17065 = !DILocation(line: 355, column: 31, scope: !17048)
!17066 = !DILocation(line: 355, column: 2, scope: !17048)
!17067 = !DILocation(line: 356, column: 36, scope: !17048)
!17068 = !DILocation(line: 356, column: 44, scope: !17048)
!17069 = !DILocation(line: 356, column: 49, scope: !17048)
!17070 = !DILocation(line: 356, column: 2, scope: !17048)
!17071 = !DILocation(line: 357, column: 26, scope: !17048)
!17072 = !DILocation(line: 357, column: 2, scope: !17048)
!17073 = !DILocation(line: 358, column: 6, scope: !17074)
!17074 = distinct !DILexicalBlock(scope: !17048, file: !3, line: 358, column: 6)
!17075 = !DILocation(line: 358, column: 11, scope: !17074)
!17076 = !DILocation(line: 358, column: 6, scope: !17048)
!17077 = !DILocation(line: 359, column: 32, scope: !17074)
!17078 = !DILocation(line: 359, column: 3, scope: !17074)
!17079 = !DILocation(line: 362, column: 32, scope: !17074)
!17080 = !DILocation(line: 362, column: 3, scope: !17074)
!17081 = !DILocation(line: 364, column: 30, scope: !17048)
!17082 = !DILocation(line: 364, column: 2, scope: !17048)
!17083 = !DILocation(line: 366, column: 28, scope: !17048)
!17084 = !DILocation(line: 366, column: 36, scope: !17048)
!17085 = !DILocation(line: 366, column: 2, scope: !17048)
!17086 = !DILocation(line: 367, column: 1, scope: !17048)
!17087 = distinct !DISubprogram(name: "mlxsw_emad_construct_eth_hdr", scope: !3, file: !3, line: 369, type: !17088, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17088 = !DISubroutineType(types: !17089)
!17089 = !{!78, !461}
!17090 = !DILocalVariable(name: "skb", arg: 1, scope: !17087, file: !3, line: 369, type: !461)
!17091 = !DILocation(line: 369, column: 57, scope: !17087)
!17092 = !DILocalVariable(name: "eth_hdr", scope: !17087, file: !3, line: 371, type: !1084)
!17093 = !DILocation(line: 371, column: 8, scope: !17087)
!17094 = !DILocation(line: 371, column: 27, scope: !17087)
!17095 = !DILocation(line: 371, column: 18, scope: !17087)
!17096 = !DILocation(line: 373, column: 36, scope: !17087)
!17097 = !DILocation(line: 373, column: 2, scope: !17087)
!17098 = !DILocation(line: 374, column: 36, scope: !17087)
!17099 = !DILocation(line: 374, column: 2, scope: !17087)
!17100 = !DILocation(line: 375, column: 35, scope: !17087)
!17101 = !DILocation(line: 375, column: 2, scope: !17087)
!17102 = !DILocation(line: 376, column: 35, scope: !17087)
!17103 = !DILocation(line: 376, column: 2, scope: !17087)
!17104 = !DILocation(line: 377, column: 29, scope: !17087)
!17105 = !DILocation(line: 377, column: 2, scope: !17087)
!17106 = !DILocation(line: 379, column: 23, scope: !17087)
!17107 = !DILocation(line: 379, column: 2, scope: !17087)
!17108 = !DILocation(line: 381, column: 2, scope: !17087)
!17109 = distinct !DISubprogram(name: "mlxsw_emad_end_tlv_type_set", scope: !3, file: !3, line: 301, type: !14510, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17110 = !DILocalVariable(name: "buf", arg: 1, scope: !17109, file: !3, line: 301, type: !1084)
!17111 = !DILocation(line: 301, column: 1, scope: !17109)
!17112 = !DILocalVariable(name: "val", arg: 2, scope: !17109, file: !3, line: 301, type: !1033)
!17113 = distinct !DISubprogram(name: "mlxsw_emad_end_tlv_len_set", scope: !3, file: !3, line: 307, type: !14510, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17114 = !DILocalVariable(name: "buf", arg: 1, scope: !17113, file: !3, line: 307, type: !1084)
!17115 = !DILocation(line: 307, column: 1, scope: !17113)
!17116 = !DILocalVariable(name: "val", arg: 2, scope: !17113, file: !3, line: 307, type: !1033)
!17117 = distinct !DISubprogram(name: "mlxsw_emad_reg_tlv_type_set", scope: !3, file: !3, line: 290, type: !14510, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17118 = !DILocalVariable(name: "buf", arg: 1, scope: !17117, file: !3, line: 290, type: !1084)
!17119 = !DILocation(line: 290, column: 1, scope: !17117)
!17120 = !DILocalVariable(name: "val", arg: 2, scope: !17117, file: !3, line: 290, type: !1033)
!17121 = distinct !DISubprogram(name: "mlxsw_emad_reg_tlv_len_set", scope: !3, file: !3, line: 295, type: !14510, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17122 = !DILocalVariable(name: "buf", arg: 1, scope: !17121, file: !3, line: 295, type: !1084)
!17123 = !DILocation(line: 295, column: 1, scope: !17121)
!17124 = !DILocalVariable(name: "val", arg: 2, scope: !17121, file: !3, line: 295, type: !1033)
!17125 = distinct !DISubprogram(name: "mlxsw_emad_string_tlv_type_set", scope: !3, file: !3, line: 271, type: !14510, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17126 = !DILocalVariable(name: "buf", arg: 1, scope: !17125, file: !3, line: 271, type: !1084)
!17127 = !DILocation(line: 271, column: 1, scope: !17125)
!17128 = !DILocalVariable(name: "val", arg: 2, scope: !17125, file: !3, line: 271, type: !1033)
!17129 = distinct !DISubprogram(name: "mlxsw_emad_string_tlv_len_set", scope: !3, file: !3, line: 276, type: !14510, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17130 = !DILocalVariable(name: "buf", arg: 1, scope: !17129, file: !3, line: 276, type: !1084)
!17131 = !DILocation(line: 276, column: 1, scope: !17129)
!17132 = !DILocalVariable(name: "val", arg: 2, scope: !17129, file: !3, line: 276, type: !1033)
!17133 = distinct !DISubprogram(name: "mlxsw_emad_op_tlv_type_set", scope: !3, file: !3, line: 205, type: !14510, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17134 = !DILocalVariable(name: "buf", arg: 1, scope: !17133, file: !3, line: 205, type: !1084)
!17135 = !DILocation(line: 205, column: 1, scope: !17133)
!17136 = !DILocalVariable(name: "val", arg: 2, scope: !17133, file: !3, line: 205, type: !1033)
!17137 = distinct !DISubprogram(name: "mlxsw_emad_op_tlv_len_set", scope: !3, file: !3, line: 211, type: !14510, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17138 = !DILocalVariable(name: "buf", arg: 1, scope: !17137, file: !3, line: 211, type: !1084)
!17139 = !DILocation(line: 211, column: 1, scope: !17137)
!17140 = !DILocalVariable(name: "val", arg: 2, scope: !17137, file: !3, line: 211, type: !1033)
!17141 = distinct !DISubprogram(name: "mlxsw_emad_op_tlv_dr_set", scope: !3, file: !3, line: 219, type: !14510, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17142 = !DILocalVariable(name: "buf", arg: 1, scope: !17141, file: !3, line: 219, type: !1084)
!17143 = !DILocation(line: 219, column: 1, scope: !17141)
!17144 = !DILocalVariable(name: "val", arg: 2, scope: !17141, file: !3, line: 219, type: !1033)
!17145 = distinct !DISubprogram(name: "mlxsw_emad_op_tlv_status_set", scope: !3, file: !3, line: 236, type: !14510, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17146 = !DILocalVariable(name: "buf", arg: 1, scope: !17145, file: !3, line: 236, type: !1084)
!17147 = !DILocation(line: 236, column: 1, scope: !17145)
!17148 = !DILocalVariable(name: "val", arg: 2, scope: !17145, file: !3, line: 236, type: !1033)
!17149 = distinct !DISubprogram(name: "mlxsw_emad_op_tlv_register_id_set", scope: !3, file: !3, line: 241, type: !14510, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17150 = !DILocalVariable(name: "buf", arg: 1, scope: !17149, file: !3, line: 241, type: !1084)
!17151 = !DILocation(line: 241, column: 1, scope: !17149)
!17152 = !DILocalVariable(name: "val", arg: 2, scope: !17149, file: !3, line: 241, type: !1033)
!17153 = distinct !DISubprogram(name: "mlxsw_emad_op_tlv_r_set", scope: !3, file: !3, line: 246, type: !14510, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17154 = !DILocalVariable(name: "buf", arg: 1, scope: !17153, file: !3, line: 246, type: !1084)
!17155 = !DILocation(line: 246, column: 1, scope: !17153)
!17156 = !DILocalVariable(name: "val", arg: 2, scope: !17153, file: !3, line: 246, type: !1033)
!17157 = distinct !DISubprogram(name: "mlxsw_emad_op_tlv_method_set", scope: !3, file: !3, line: 255, type: !14510, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17158 = !DILocalVariable(name: "buf", arg: 1, scope: !17157, file: !3, line: 255, type: !1084)
!17159 = !DILocation(line: 255, column: 1, scope: !17157)
!17160 = !DILocalVariable(name: "val", arg: 2, scope: !17157, file: !3, line: 255, type: !1033)
!17161 = distinct !DISubprogram(name: "mlxsw_emad_op_tlv_class_set", scope: !3, file: !3, line: 260, type: !14510, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17162 = !DILocalVariable(name: "buf", arg: 1, scope: !17161, file: !3, line: 260, type: !1084)
!17163 = !DILocation(line: 260, column: 1, scope: !17161)
!17164 = !DILocalVariable(name: "val", arg: 2, scope: !17161, file: !3, line: 260, type: !1033)
!17165 = distinct !DISubprogram(name: "mlxsw_emad_op_tlv_tid_set", scope: !3, file: !3, line: 265, type: !17166, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17166 = !DISubroutineType(types: !17167)
!17167 = !{null, !1084, !377}
!17168 = !DILocalVariable(name: "buf", arg: 1, scope: !17165, file: !3, line: 265, type: !1084)
!17169 = !DILocation(line: 265, column: 1, scope: !17165)
!17170 = !DILocalVariable(name: "val", arg: 2, scope: !17165, file: !3, line: 265, type: !377)
!17171 = distinct !DISubprogram(name: "__mlxsw_item_set64", scope: !8318, file: !8318, line: 161, type: !17172, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17172 = !DISubroutineType(types: !17173)
!17173 = !{null, !1084, !13904, !522, !377}
!17174 = !DILocalVariable(name: "buf", arg: 1, scope: !17171, file: !8318, line: 161, type: !1084)
!17175 = !DILocation(line: 161, column: 45, scope: !17171)
!17176 = !DILocalVariable(name: "item", arg: 2, scope: !17171, file: !8318, line: 161, type: !13904)
!17177 = !DILocation(line: 161, column: 75, scope: !17171)
!17178 = !DILocalVariable(name: "index", arg: 3, scope: !17171, file: !8318, line: 162, type: !522)
!17179 = !DILocation(line: 162, column: 26, scope: !17171)
!17180 = !DILocalVariable(name: "val", arg: 4, scope: !17171, file: !8318, line: 162, type: !377)
!17181 = !DILocation(line: 162, column: 37, scope: !17171)
!17182 = !DILocalVariable(name: "offset", scope: !17171, file: !8318, line: 164, type: !7)
!17183 = !DILocation(line: 164, column: 15, scope: !17171)
!17184 = !DILocation(line: 164, column: 44, scope: !17171)
!17185 = !DILocation(line: 164, column: 50, scope: !17171)
!17186 = !DILocation(line: 164, column: 24, scope: !17171)
!17187 = !DILocalVariable(name: "b", scope: !17171, file: !8318, line: 165, type: !8241)
!17188 = !DILocation(line: 165, column: 10, scope: !17171)
!17189 = !DILocation(line: 165, column: 25, scope: !17171)
!17190 = !DILocation(line: 165, column: 14, scope: !17171)
!17191 = !DILocalVariable(name: "mask", scope: !17171, file: !8318, line: 166, type: !377)
!17192 = !DILocation(line: 166, column: 6, scope: !17171)
!17193 = !DILocation(line: 166, column: 13, scope: !17171)
!17194 = !DILocation(line: 166, column: 52, scope: !17171)
!17195 = !DILocation(line: 166, column: 58, scope: !17171)
!17196 = !DILocation(line: 166, column: 49, scope: !17171)
!17197 = !DILocalVariable(name: "tmp", scope: !17171, file: !8318, line: 167, type: !377)
!17198 = !DILocation(line: 167, column: 6, scope: !17171)
!17199 = !DILocation(line: 169, column: 7, scope: !17200)
!17200 = distinct !DILexicalBlock(scope: !17171, file: !8318, line: 169, column: 6)
!17201 = !DILocation(line: 169, column: 13, scope: !17200)
!17202 = !DILocation(line: 169, column: 6, scope: !17171)
!17203 = !DILocation(line: 170, column: 11, scope: !17200)
!17204 = !DILocation(line: 170, column: 17, scope: !17200)
!17205 = !DILocation(line: 170, column: 7, scope: !17200)
!17206 = !DILocation(line: 170, column: 3, scope: !17200)
!17207 = !DILocation(line: 171, column: 9, scope: !17171)
!17208 = !DILocation(line: 171, column: 6, scope: !17171)
!17209 = !DILocation(line: 172, column: 8, scope: !17171)
!17210 = !DILocation(line: 172, column: 6, scope: !17171)
!17211 = !DILocation(line: 173, column: 10, scope: !17171)
!17212 = !DILocation(line: 173, column: 9, scope: !17171)
!17213 = !DILocation(line: 173, column: 6, scope: !17171)
!17214 = !DILocation(line: 174, column: 9, scope: !17171)
!17215 = !DILocation(line: 174, column: 6, scope: !17171)
!17216 = !DILocation(line: 175, column: 14, scope: !17171)
!17217 = !DILocation(line: 175, column: 2, scope: !17171)
!17218 = !DILocation(line: 175, column: 4, scope: !17171)
!17219 = !DILocation(line: 175, column: 12, scope: !17171)
!17220 = !DILocation(line: 176, column: 1, scope: !17171)
!17221 = distinct !DISubprogram(name: "mlxsw_emad_eth_hdr_dmac_memcpy_to", scope: !3, file: !3, line: 175, type: !17222, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17222 = !DISubroutineType(types: !17223)
!17223 = !{null, !1084, !338}
!17224 = !DILocalVariable(name: "buf", arg: 1, scope: !17221, file: !3, line: 175, type: !1084)
!17225 = !DILocation(line: 175, column: 1, scope: !17221)
!17226 = !DILocalVariable(name: "src", arg: 2, scope: !17221, file: !3, line: 175, type: !338)
!17227 = distinct !DISubprogram(name: "mlxsw_emad_eth_hdr_smac_memcpy_to", scope: !3, file: !3, line: 181, type: !17222, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17228 = !DILocalVariable(name: "buf", arg: 1, scope: !17227, file: !3, line: 181, type: !1084)
!17229 = !DILocation(line: 181, column: 1, scope: !17227)
!17230 = !DILocalVariable(name: "src", arg: 2, scope: !17227, file: !3, line: 181, type: !338)
!17231 = distinct !DISubprogram(name: "mlxsw_emad_eth_hdr_ethertype_set", scope: !3, file: !3, line: 187, type: !14510, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17232 = !DILocalVariable(name: "buf", arg: 1, scope: !17231, file: !3, line: 187, type: !1084)
!17233 = !DILocation(line: 187, column: 1, scope: !17231)
!17234 = !DILocalVariable(name: "val", arg: 2, scope: !17231, file: !3, line: 187, type: !1033)
!17235 = distinct !DISubprogram(name: "mlxsw_emad_eth_hdr_mlx_proto_set", scope: !3, file: !3, line: 193, type: !14510, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17236 = !DILocalVariable(name: "buf", arg: 1, scope: !17235, file: !3, line: 193, type: !1084)
!17237 = !DILocation(line: 193, column: 1, scope: !17235)
!17238 = !DILocalVariable(name: "val", arg: 2, scope: !17235, file: !3, line: 193, type: !1033)
!17239 = distinct !DISubprogram(name: "mlxsw_emad_eth_hdr_ver_set", scope: !3, file: !3, line: 199, type: !14510, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17240 = !DILocalVariable(name: "buf", arg: 1, scope: !17239, file: !3, line: 199, type: !1084)
!17241 = !DILocation(line: 199, column: 1, scope: !17239)
!17242 = !DILocalVariable(name: "val", arg: 2, scope: !17239, file: !3, line: 199, type: !1033)
!17243 = distinct !DISubprogram(name: "skb_reset_mac_header", scope: !463, file: !463, line: 2556, type: !515, scopeLine: 2557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17244 = !DILocalVariable(name: "skb", arg: 1, scope: !17243, file: !463, line: 2556, type: !461)
!17245 = !DILocation(line: 2556, column: 57, scope: !17243)
!17246 = !DILocation(line: 2558, column: 20, scope: !17243)
!17247 = !DILocation(line: 2558, column: 25, scope: !17243)
!17248 = !DILocation(line: 2558, column: 32, scope: !17243)
!17249 = !DILocation(line: 2558, column: 37, scope: !17243)
!17250 = !DILocation(line: 2558, column: 30, scope: !17243)
!17251 = !DILocation(line: 2558, column: 2, scope: !17243)
!17252 = !DILocation(line: 2558, column: 7, scope: !17243)
!17253 = !DILocation(line: 2558, column: 18, scope: !17243)
!17254 = !DILocation(line: 2559, column: 1, scope: !17243)
!17255 = distinct !DISubprogram(name: "__mlxsw_item_memcpy_to", scope: !8318, file: !8318, line: 187, type: !17256, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17256 = !DISubroutineType(types: !17257)
!17257 = !{null, !1084, !338, !13904, !522}
!17258 = !DILocalVariable(name: "buf", arg: 1, scope: !17255, file: !8318, line: 187, type: !1084)
!17259 = !DILocation(line: 187, column: 49, scope: !17255)
!17260 = !DILocalVariable(name: "src", arg: 2, scope: !17255, file: !8318, line: 187, type: !338)
!17261 = !DILocation(line: 187, column: 66, scope: !17255)
!17262 = !DILocalVariable(name: "item", arg: 3, scope: !17255, file: !8318, line: 188, type: !13904)
!17263 = !DILocation(line: 188, column: 33, scope: !17255)
!17264 = !DILocalVariable(name: "index", arg: 4, scope: !17255, file: !8318, line: 189, type: !522)
!17265 = !DILocation(line: 189, column: 23, scope: !17255)
!17266 = !DILocalVariable(name: "offset", scope: !17255, file: !8318, line: 191, type: !7)
!17267 = !DILocation(line: 191, column: 15, scope: !17255)
!17268 = !DILocation(line: 191, column: 44, scope: !17255)
!17269 = !DILocation(line: 191, column: 50, scope: !17255)
!17270 = !DILocation(line: 191, column: 24, scope: !17255)
!17271 = !DILocation(line: 193, column: 10, scope: !17255)
!17272 = !DILocation(line: 193, column: 14, scope: !17255)
!17273 = !DILocation(line: 193, column: 23, scope: !17255)
!17274 = !DILocation(line: 193, column: 28, scope: !17255)
!17275 = !DILocation(line: 193, column: 34, scope: !17255)
!17276 = !DILocation(line: 193, column: 39, scope: !17255)
!17277 = !DILocation(line: 193, column: 2, scope: !17255)
!17278 = !DILocation(line: 194, column: 1, scope: !17255)
!17279 = distinct !DISubprogram(name: "mlxsw_reg_id_str", scope: !7404, file: !7404, line: 11248, type: !11847, scopeLine: 11249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17280 = !DILocalVariable(name: "reg_id", arg: 1, scope: !17279, file: !7404, line: 11248, type: !627)
!17281 = !DILocation(line: 11248, column: 48, scope: !17279)
!17282 = !DILocalVariable(name: "reg_info", scope: !17279, file: !7404, line: 11250, type: !8145)
!17283 = !DILocation(line: 11250, column: 31, scope: !17279)
!17284 = !DILocalVariable(name: "i", scope: !17279, file: !7404, line: 11251, type: !78)
!17285 = !DILocation(line: 11251, column: 6, scope: !17279)
!17286 = !DILocation(line: 11253, column: 9, scope: !17287)
!17287 = distinct !DILexicalBlock(scope: !17279, file: !7404, line: 11253, column: 2)
!17288 = !DILocation(line: 11253, column: 7, scope: !17287)
!17289 = !DILocation(line: 11253, column: 14, scope: !17290)
!17290 = distinct !DILexicalBlock(scope: !17287, file: !7404, line: 11253, column: 2)
!17291 = !DILocation(line: 11253, column: 16, scope: !17290)
!17292 = !DILocation(line: 11253, column: 2, scope: !17287)
!17293 = !DILocation(line: 11254, column: 30, scope: !17294)
!17294 = distinct !DILexicalBlock(scope: !17290, file: !7404, line: 11253, column: 52)
!17295 = !DILocation(line: 11254, column: 14, scope: !17294)
!17296 = !DILocation(line: 11254, column: 12, scope: !17294)
!17297 = !DILocation(line: 11255, column: 7, scope: !17298)
!17298 = distinct !DILexicalBlock(scope: !17294, file: !7404, line: 11255, column: 7)
!17299 = !DILocation(line: 11255, column: 17, scope: !17298)
!17300 = !DILocation(line: 11255, column: 23, scope: !17298)
!17301 = !DILocation(line: 11255, column: 20, scope: !17298)
!17302 = !DILocation(line: 11255, column: 7, scope: !17294)
!17303 = !DILocation(line: 11256, column: 11, scope: !17298)
!17304 = !DILocation(line: 11256, column: 21, scope: !17298)
!17305 = !DILocation(line: 11256, column: 4, scope: !17298)
!17306 = !DILocation(line: 11257, column: 2, scope: !17294)
!17307 = !DILocation(line: 11253, column: 48, scope: !17290)
!17308 = !DILocation(line: 11253, column: 2, scope: !17290)
!17309 = distinct !{!17309, !17292, !17310}
!17310 = !DILocation(line: 11257, column: 2, scope: !17287)
!17311 = !DILocation(line: 11258, column: 2, scope: !17279)
!17312 = !DILocation(line: 11259, column: 1, scope: !17279)
!17313 = distinct !DISubprogram(name: "mlxsw_core_reg_access_type_str", scope: !3, file: !3, line: 315, type: !17314, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17314 = !DISubroutineType(types: !17315)
!17315 = !{!338, !7452}
!17316 = !DILocalVariable(name: "type", arg: 1, scope: !17313, file: !3, line: 315, type: !7452)
!17317 = !DILocation(line: 315, column: 64, scope: !17313)
!17318 = !DILocation(line: 317, column: 10, scope: !17313)
!17319 = !DILocation(line: 317, column: 2, scope: !17313)
!17320 = !DILocation(line: 319, column: 3, scope: !17321)
!17321 = distinct !DILexicalBlock(scope: !17313, file: !3, line: 317, column: 16)
!17322 = !DILocation(line: 321, column: 3, scope: !17321)
!17323 = !DILocation(line: 323, column: 2, scope: !17313)
!17324 = !DILocation(line: 323, column: 2, scope: !17325)
!17325 = distinct !DILexicalBlock(scope: !17313, file: !3, line: 323, column: 2)
!17326 = !DILocation(line: 323, column: 2, scope: !17327)
!17327 = distinct !DILexicalBlock(scope: !17325, file: !3, line: 323, column: 2)
!17328 = !DILocation(line: 323, column: 2, scope: !17329)
!17329 = distinct !DILexicalBlock(scope: !17325, file: !3, line: 323, column: 2)
!17330 = !{i32 -2137132538, i32 -2137132509, i32 -2137132463, i32 -2137132405, i32 -2137132351, i32 -2137132297, i32 -2137132242, i32 -2137132211}
!17331 = !DILocation(line: 323, column: 2, scope: !17332)
!17332 = distinct !DILexicalBlock(scope: !17333, file: !3, line: 323, column: 2)
!17333 = distinct !DILexicalBlock(scope: !17325, file: !3, line: 323, column: 2)
!17334 = !{i32 -2137131746, i32 -2137131739, i32 -2137131685, i32 -2137131654, i32 -2137131624}
!17335 = !DILocation(line: 323, column: 2, scope: !17333)
!17336 = !DILocation(line: 324, column: 1, scope: !17313)
!17337 = distinct !DISubprogram(name: "mlxsw_emad_op_tlv_status_str", scope: !7457, file: !7457, line: 48, type: !17338, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17338 = !DISubroutineType(types: !17339)
!17339 = !{!1084, !840}
!17340 = !DILocalVariable(name: "status", arg: 1, scope: !17337, file: !7457, line: 48, type: !840)
!17341 = !DILocation(line: 48, column: 53, scope: !17337)
!17342 = !DILocation(line: 50, column: 10, scope: !17337)
!17343 = !DILocation(line: 50, column: 2, scope: !17337)
!17344 = !DILocation(line: 52, column: 3, scope: !17345)
!17345 = distinct !DILexicalBlock(scope: !17337, file: !7457, line: 50, column: 18)
!17346 = !DILocation(line: 54, column: 3, scope: !17345)
!17347 = !DILocation(line: 56, column: 3, scope: !17345)
!17348 = !DILocation(line: 58, column: 3, scope: !17345)
!17349 = !DILocation(line: 60, column: 3, scope: !17345)
!17350 = !DILocation(line: 62, column: 3, scope: !17345)
!17351 = !DILocation(line: 64, column: 3, scope: !17345)
!17352 = !DILocation(line: 66, column: 3, scope: !17345)
!17353 = !DILocation(line: 68, column: 3, scope: !17345)
!17354 = !DILocation(line: 70, column: 3, scope: !17345)
!17355 = !DILocation(line: 72, column: 3, scope: !17345)
!17356 = !DILocation(line: 74, column: 3, scope: !17345)
!17357 = !DILocation(line: 76, column: 1, scope: !17337)
!17358 = distinct !DISubprogram(name: "trace_devlink_hwerr", scope: !15088, file: !15088, line: 52, type: !17359, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17359 = !DISubroutineType(types: !17360)
!17360 = !{null, !15091, !78, !338}
!17361 = !DILocalVariable(name: "devlink", arg: 1, scope: !17358, file: !15088, line: 52, type: !15091)
!17362 = !DILocation(line: 52, column: 1, scope: !17358)
!17363 = !DILocalVariable(name: "err", arg: 2, scope: !17358, file: !15088, line: 52, type: !78)
!17364 = !DILocalVariable(name: "msg", arg: 3, scope: !17358, file: !15088, line: 52, type: !338)
!17365 = distinct !DISubprogram(name: "mlxsw_core_reg_access_cmd", scope: !3, file: !3, line: 2488, type: !10924, scopeLine: 2492, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17366 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !17365, file: !3, line: 2488, type: !7847)
!17367 = !DILocation(line: 2488, column: 57, scope: !17365)
!17368 = !DILocalVariable(name: "reg", arg: 2, scope: !17365, file: !3, line: 2489, type: !8145)
!17369 = !DILocation(line: 2489, column: 39, scope: !17365)
!17370 = !DILocalVariable(name: "payload", arg: 3, scope: !17365, file: !3, line: 2490, type: !1084)
!17371 = !DILocation(line: 2490, column: 16, scope: !17365)
!17372 = !DILocalVariable(name: "type", arg: 4, scope: !17365, file: !3, line: 2491, type: !7452)
!17373 = !DILocation(line: 2491, column: 42, scope: !17365)
!17374 = !DILocalVariable(name: "status", scope: !17365, file: !3, line: 2493, type: !7456)
!17375 = !DILocation(line: 2493, column: 32, scope: !17365)
!17376 = !DILocalVariable(name: "err", scope: !17365, file: !3, line: 2494, type: !78)
!17377 = !DILocation(line: 2494, column: 6, scope: !17365)
!17378 = !DILocalVariable(name: "n_retry", scope: !17365, file: !3, line: 2494, type: !78)
!17379 = !DILocation(line: 2494, column: 11, scope: !17365)
!17380 = !DILocalVariable(name: "reset_ok", scope: !17365, file: !3, line: 2495, type: !817)
!17381 = !DILocation(line: 2495, column: 7, scope: !17365)
!17382 = !DILocalVariable(name: "in_mbox", scope: !17365, file: !3, line: 2496, type: !1084)
!17383 = !DILocation(line: 2496, column: 8, scope: !17365)
!17384 = !DILocalVariable(name: "out_mbox", scope: !17365, file: !3, line: 2496, type: !1084)
!17385 = !DILocation(line: 2496, column: 18, scope: !17365)
!17386 = !DILocalVariable(name: "tmp", scope: !17365, file: !3, line: 2496, type: !1084)
!17387 = !DILocation(line: 2496, column: 29, scope: !17365)
!17388 = !DILocation(line: 2502, column: 12, scope: !17365)
!17389 = !DILocation(line: 2502, column: 10, scope: !17365)
!17390 = !DILocation(line: 2503, column: 7, scope: !17391)
!17391 = distinct !DILexicalBlock(scope: !17365, file: !3, line: 2503, column: 6)
!17392 = !DILocation(line: 2503, column: 6, scope: !17365)
!17393 = !DILocation(line: 2504, column: 3, scope: !17391)
!17394 = !DILocation(line: 2506, column: 13, scope: !17365)
!17395 = !DILocation(line: 2506, column: 11, scope: !17365)
!17396 = !DILocation(line: 2507, column: 7, scope: !17397)
!17397 = distinct !DILexicalBlock(scope: !17365, file: !3, line: 2507, column: 6)
!17398 = !DILocation(line: 2507, column: 6, scope: !17365)
!17399 = !DILocation(line: 2508, column: 7, scope: !17400)
!17400 = distinct !DILexicalBlock(scope: !17397, file: !3, line: 2507, column: 17)
!17401 = !DILocation(line: 2509, column: 3, scope: !17400)
!17402 = !DILocation(line: 2512, column: 25, scope: !17365)
!17403 = !DILocation(line: 2512, column: 34, scope: !17365)
!17404 = !DILocation(line: 2512, column: 39, scope: !17365)
!17405 = !DILocation(line: 2513, column: 30, scope: !17365)
!17406 = !DILocation(line: 2513, column: 11, scope: !17365)
!17407 = !DILocation(line: 2512, column: 2, scope: !17365)
!17408 = !DILocation(line: 2514, column: 8, scope: !17365)
!17409 = !DILocation(line: 2514, column: 16, scope: !17365)
!17410 = !DILocation(line: 2514, column: 6, scope: !17365)
!17411 = !DILocation(line: 2515, column: 26, scope: !17365)
!17412 = !DILocation(line: 2515, column: 31, scope: !17365)
!17413 = !DILocation(line: 2515, column: 36, scope: !17365)
!17414 = !DILocation(line: 2515, column: 2, scope: !17365)
!17415 = !DILocation(line: 2522, column: 13, scope: !17365)
!17416 = !DILocation(line: 2522, column: 18, scope: !17365)
!17417 = !DILocation(line: 2522, column: 21, scope: !17365)
!17418 = !DILocation(line: 2522, column: 11, scope: !17365)
!17419 = !DILocation(line: 2524, column: 10, scope: !17365)
!17420 = !DILocation(line: 2524, column: 2, scope: !17365)
!17421 = !DILabel(scope: !17365, name: "retry", file: !3, line: 2525)
!17422 = !DILocation(line: 2525, column: 1, scope: !17365)
!17423 = !DILocation(line: 2526, column: 29, scope: !17365)
!17424 = !DILocation(line: 2526, column: 41, scope: !17365)
!17425 = !DILocation(line: 2526, column: 51, scope: !17365)
!17426 = !DILocation(line: 2526, column: 60, scope: !17365)
!17427 = !DILocation(line: 2526, column: 8, scope: !17365)
!17428 = !DILocation(line: 2526, column: 6, scope: !17365)
!17429 = !DILocation(line: 2527, column: 7, scope: !17430)
!17430 = distinct !DILexicalBlock(scope: !17365, file: !3, line: 2527, column: 6)
!17431 = !DILocation(line: 2527, column: 6, scope: !17365)
!17432 = !DILocation(line: 2528, column: 35, scope: !17433)
!17433 = distinct !DILexicalBlock(scope: !17430, file: !3, line: 2527, column: 12)
!17434 = !DILocation(line: 2528, column: 9, scope: !17433)
!17435 = !DILocation(line: 2528, column: 7, scope: !17433)
!17436 = !DILocation(line: 2529, column: 7, scope: !17437)
!17437 = distinct !DILexicalBlock(scope: !17433, file: !3, line: 2529, column: 7)
!17438 = !DILocation(line: 2529, column: 7, scope: !17433)
!17439 = !DILocation(line: 2530, column: 8, scope: !17440)
!17440 = distinct !DILexicalBlock(scope: !17441, file: !3, line: 2530, column: 8)
!17441 = distinct !DILexicalBlock(scope: !17437, file: !3, line: 2529, column: 12)
!17442 = !DILocation(line: 2530, column: 12, scope: !17440)
!17443 = !DILocation(line: 2530, column: 23, scope: !17440)
!17444 = !DILocation(line: 2530, column: 33, scope: !17440)
!17445 = !DILocation(line: 2530, column: 36, scope: !17440)
!17446 = !DILocation(line: 2530, column: 8, scope: !17441)
!17447 = !DILocation(line: 2531, column: 5, scope: !17440)
!17448 = !DILocation(line: 2532, column: 4, scope: !17441)
!17449 = !DILocation(line: 2534, column: 3, scope: !17441)
!17450 = !DILocation(line: 2535, column: 2, scope: !17433)
!17451 = !DILocation(line: 2537, column: 7, scope: !17452)
!17452 = distinct !DILexicalBlock(scope: !17365, file: !3, line: 2537, column: 6)
!17453 = !DILocation(line: 2537, column: 6, scope: !17365)
!17454 = !DILocation(line: 2538, column: 10, scope: !17452)
!17455 = !DILocation(line: 2538, column: 46, scope: !17452)
!17456 = !DILocation(line: 2538, column: 19, scope: !17452)
!17457 = !DILocation(line: 2539, column: 10, scope: !17452)
!17458 = !DILocation(line: 2539, column: 15, scope: !17452)
!17459 = !DILocation(line: 2538, column: 3, scope: !17452)
!17460 = !DILocation(line: 2541, column: 22, scope: !17365)
!17461 = !DILocation(line: 2541, column: 2, scope: !17365)
!17462 = !DILabel(scope: !17365, name: "free_in_mbox", file: !3, line: 2542)
!17463 = !DILocation(line: 2542, column: 1, scope: !17365)
!17464 = !DILocation(line: 2543, column: 22, scope: !17365)
!17465 = !DILocation(line: 2543, column: 2, scope: !17365)
!17466 = !DILocation(line: 2544, column: 6, scope: !17467)
!17467 = distinct !DILexicalBlock(scope: !17365, file: !3, line: 2544, column: 6)
!17468 = !DILocation(line: 2544, column: 6, scope: !17365)
!17469 = !DILocation(line: 2545, column: 3, scope: !17467)
!17470 = !DILocation(line: 2548, column: 9, scope: !17365)
!17471 = !DILocation(line: 2548, column: 2, scope: !17365)
!17472 = !DILocation(line: 2549, column: 1, scope: !17365)
!17473 = distinct !DISubprogram(name: "mlxsw_core_reg_access_cb", scope: !3, file: !3, line: 2551, type: !8141, scopeLine: 2554, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17474 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !17473, file: !3, line: 2551, type: !7847)
!17475 = !DILocation(line: 2551, column: 57, scope: !17473)
!17476 = !DILocalVariable(name: "payload", arg: 2, scope: !17473, file: !3, line: 2552, type: !1084)
!17477 = !DILocation(line: 2552, column: 16, scope: !17473)
!17478 = !DILocalVariable(name: "payload_len", arg: 3, scope: !17473, file: !3, line: 2552, type: !1085)
!17479 = !DILocation(line: 2552, column: 32, scope: !17473)
!17480 = !DILocalVariable(name: "cb_priv", arg: 4, scope: !17473, file: !3, line: 2553, type: !358)
!17481 = !DILocation(line: 2553, column: 24, scope: !17473)
!17482 = !DILocalVariable(name: "orig_payload", scope: !17473, file: !3, line: 2555, type: !1084)
!17483 = !DILocation(line: 2555, column: 8, scope: !17473)
!17484 = !DILocation(line: 2555, column: 32, scope: !17473)
!17485 = !DILocation(line: 2555, column: 23, scope: !17473)
!17486 = !DILocation(line: 2557, column: 9, scope: !17473)
!17487 = !DILocation(line: 2557, column: 23, scope: !17473)
!17488 = !DILocation(line: 2557, column: 32, scope: !17473)
!17489 = !DILocation(line: 2557, column: 2, scope: !17473)
!17490 = !DILocation(line: 2558, column: 1, scope: !17473)
!17491 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_alloc", scope: !7649, file: !7649, line: 11, type: !17492, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17492 = !DISubroutineType(types: !17493)
!17493 = !{!1084}
!17494 = !DILocation(line: 13, column: 9, scope: !17491)
!17495 = !DILocation(line: 13, column: 2, scope: !17491)
!17496 = distinct !DISubprogram(name: "mlxsw_cmd_access_reg", scope: !7649, file: !7649, line: 855, type: !17497, scopeLine: 858, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17497 = !DISubroutineType(types: !17498)
!17498 = !{!78, !7847, !817, !1084, !1084}
!17499 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !17496, file: !7649, line: 855, type: !7847)
!17500 = !DILocation(line: 855, column: 59, scope: !17496)
!17501 = !DILocalVariable(name: "reset_ok", arg: 2, scope: !17496, file: !7649, line: 856, type: !817)
!17502 = !DILocation(line: 856, column: 17, scope: !17496)
!17503 = !DILocalVariable(name: "in_mbox", arg: 3, scope: !17496, file: !7649, line: 857, type: !1084)
!17504 = !DILocation(line: 857, column: 18, scope: !17496)
!17505 = !DILocalVariable(name: "out_mbox", arg: 4, scope: !17496, file: !7649, line: 857, type: !1084)
!17506 = !DILocation(line: 857, column: 33, scope: !17496)
!17507 = !DILocation(line: 859, column: 24, scope: !17496)
!17508 = !DILocation(line: 860, column: 23, scope: !17496)
!17509 = !DILocation(line: 861, column: 10, scope: !17496)
!17510 = !DILocation(line: 862, column: 10, scope: !17496)
!17511 = !DILocation(line: 859, column: 9, scope: !17496)
!17512 = !DILocation(line: 859, column: 2, scope: !17496)
!17513 = distinct !DISubprogram(name: "mlxsw_emad_reg_payload_cmd", scope: !3, file: !3, line: 471, type: !15427, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17514 = !DILocalVariable(name: "mbox", arg: 1, scope: !17513, file: !3, line: 471, type: !338)
!17515 = !DILocation(line: 471, column: 53, scope: !17513)
!17516 = !DILocation(line: 473, column: 20, scope: !17513)
!17517 = !DILocation(line: 473, column: 25, scope: !17513)
!17518 = !DILocation(line: 473, column: 2, scope: !17513)
!17519 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_free", scope: !7649, file: !7649, line: 16, type: !12058, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17520 = !DILocalVariable(name: "mbox", arg: 1, scope: !17519, file: !7649, line: 16, type: !1084)
!17521 = !DILocation(line: 16, column: 46, scope: !17519)
!17522 = !DILocation(line: 18, column: 8, scope: !17519)
!17523 = !DILocation(line: 18, column: 2, scope: !17519)
!17524 = !DILocation(line: 19, column: 1, scope: !17519)
!17525 = distinct !DISubprogram(name: "__rcu_read_lock", scope: !11032, file: !11032, line: 64, type: !3854, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17526 = !DILocation(line: 66, column: 2, scope: !17525)
!17527 = !{i32 -2145097289}
!17528 = !DILocation(line: 67, column: 1, scope: !17525)
!17529 = distinct !DISubprogram(name: "__rcu_read_unlock", scope: !11032, file: !11032, line: 69, type: !3854, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17530 = !DILocation(line: 71, column: 2, scope: !17529)
!17531 = !{i32 -2145097076}
!17532 = !DILocation(line: 72, column: 2, scope: !17529)
!17533 = !DILocation(line: 72, column: 2, scope: !17534)
!17534 = distinct !DILexicalBlock(scope: !17529, file: !11032, line: 72, column: 2)
!17535 = !DILocation(line: 73, column: 1, scope: !17529)
!17536 = distinct !DISubprogram(name: "mlxsw_reg_pmtm_module_set", scope: !7404, file: !7404, line: 5609, type: !14510, scopeLine: 5609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17537 = !DILocalVariable(name: "buf", arg: 1, scope: !17536, file: !7404, line: 5609, type: !1084)
!17538 = !DILocation(line: 5609, column: 1, scope: !17536)
!17539 = !DILocalVariable(name: "val", arg: 2, scope: !17536, file: !7404, line: 5609, type: !1033)
!17540 = distinct !DISubprogram(name: "mlxsw_reg_pmtm_module_type_get", scope: !7404, file: !7404, line: 5644, type: !13882, scopeLine: 5644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17541 = !DILocalVariable(name: "buf", arg: 1, scope: !17540, file: !7404, line: 5644, type: !338)
!17542 = !DILocation(line: 5644, column: 1, scope: !17540)
!17543 = distinct !DISubprogram(name: "mlxsw_cmd_exec_out", scope: !7649, file: !7649, line: 41, type: !17544, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17544 = !DISubroutineType(types: !17545)
!17545 = !{!78, !7847, !627, !840, !1033, !817, !1084, !1085}
!17546 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !17543, file: !7649, line: 41, type: !7847)
!17547 = !DILocation(line: 41, column: 57, scope: !17543)
!17548 = !DILocalVariable(name: "opcode", arg: 2, scope: !17543, file: !7649, line: 41, type: !627)
!17549 = !DILocation(line: 41, column: 73, scope: !17543)
!17550 = !DILocalVariable(name: "opcode_mod", arg: 3, scope: !17543, file: !7649, line: 42, type: !840)
!17551 = !DILocation(line: 42, column: 13, scope: !17543)
!17552 = !DILocalVariable(name: "in_mod", arg: 4, scope: !17543, file: !7649, line: 42, type: !1033)
!17553 = !DILocation(line: 42, column: 29, scope: !17543)
!17554 = !DILocalVariable(name: "out_mbox_direct", arg: 5, scope: !17543, file: !7649, line: 43, type: !817)
!17555 = !DILocation(line: 43, column: 15, scope: !17543)
!17556 = !DILocalVariable(name: "out_mbox", arg: 6, scope: !17543, file: !7649, line: 44, type: !1084)
!17557 = !DILocation(line: 44, column: 16, scope: !17543)
!17558 = !DILocalVariable(name: "out_mbox_size", arg: 7, scope: !17543, file: !7649, line: 44, type: !1085)
!17559 = !DILocation(line: 44, column: 33, scope: !17543)
!17560 = !DILocation(line: 46, column: 24, scope: !17543)
!17561 = !DILocation(line: 46, column: 36, scope: !17543)
!17562 = !DILocation(line: 46, column: 44, scope: !17543)
!17563 = !DILocation(line: 46, column: 56, scope: !17543)
!17564 = !DILocation(line: 47, column: 10, scope: !17543)
!17565 = !DILocation(line: 48, column: 10, scope: !17543)
!17566 = !DILocation(line: 48, column: 20, scope: !17543)
!17567 = !DILocation(line: 46, column: 9, scope: !17543)
!17568 = !DILocation(line: 46, column: 2, scope: !17543)
!17569 = distinct !DISubprogram(name: "mlxsw_res_set", scope: !7580, file: !7580, line: 144, type: !17570, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1633)
!17570 = !DISubroutineType(types: !17571)
!17571 = !{null, !8068, !7579, !377}
!17572 = !DILocalVariable(name: "res", arg: 1, scope: !17569, file: !7580, line: 144, type: !8068)
!17573 = !DILocation(line: 144, column: 52, scope: !17569)
!17574 = !DILocalVariable(name: "res_id", arg: 2, scope: !17569, file: !7580, line: 145, type: !7579)
!17575 = !DILocation(line: 145, column: 24, scope: !17569)
!17576 = !DILocalVariable(name: "value", arg: 3, scope: !17569, file: !7580, line: 145, type: !377)
!17577 = !DILocation(line: 145, column: 36, scope: !17569)
!17578 = !DILocation(line: 147, column: 2, scope: !17569)
!17579 = !DILocation(line: 147, column: 7, scope: !17569)
!17580 = !DILocation(line: 147, column: 13, scope: !17569)
!17581 = !DILocation(line: 147, column: 21, scope: !17569)
!17582 = !DILocation(line: 148, column: 24, scope: !17569)
!17583 = !DILocation(line: 148, column: 2, scope: !17569)
!17584 = !DILocation(line: 148, column: 7, scope: !17569)
!17585 = !DILocation(line: 148, column: 14, scope: !17569)
!17586 = !DILocation(line: 148, column: 22, scope: !17569)
!17587 = !DILocation(line: 149, column: 1, scope: !17569)
