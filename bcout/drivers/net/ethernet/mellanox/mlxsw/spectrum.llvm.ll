; ModuleID = '../bcout/drivers/net/ethernet/mellanox/mlxsw/spectrum.llvm.bc'
source_filename = "drivers/net/ethernet/mellanox/mlxsw/spectrum.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_mlxsw_sp_module_init6:\09\09\09"
module asm ".long\09mlxsw_sp_module_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.mlxsw_reg_info = type { i16, i16, i8* }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.net_device_ops = type { i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.sk_buff*, %struct.net_device*, i64)*, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*)*, i32 (%struct.net_device*, i8*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ifreq*, i32)*, i32 (%struct.net_device*, %struct.ifmap*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.neigh_parms*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.rtnl_link_stats64*)*, i1 (%struct.net_device*, i32)*, i32 (i32, %struct.net_device*, i8*)*, %struct.net_device_stats* (%struct.net_device*)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32, i16, i8, i16)*, i32 (%struct.net_device*, i32, i32, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)*, i32 (%struct.net_device*, i32, %struct.nlattr**)*, i32 (%struct.net_device*, i32, %struct.sk_buff*)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)*, i32 (%struct.net_device*, i32, i64, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.net_device*)*, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)*, i64 (%struct.net_device*, i64)*, i32 (%struct.net_device*, i64)*, i32 (%struct.net_device*, %struct.neighbour*)*, void (%struct.net_device*, %struct.neighbour*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)*, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)*, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, i8*, i64)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, i8* (%struct.net_device*, %struct.net_device*)*, void (%struct.net_device*, i8*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.sk_buff*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.netdev_bpf*)*, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)*, i32 (%struct.net_device*, i32, i32)*, %struct.devlink_port* (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)*, %struct.net_device* (%struct.net_device*)* }
%struct.sk_buff = type { %union.anon, %union.anon.2, %union.anon.131, [48 x i8], %union.anon.132, i32, i32, i16, i16, i16, [0 x i8], i8, [0 x i32], [0 x i8], i16, [0 x i8], i16, %union.anon.134, i32, i32, i32, i16, i16, %union.anon.136, %union.anon.137, %union.anon.138, i16, i16, i16, i16, i16, i16, i16, [0 x i32], i32, i32, i8*, i8*, i32, %struct.refcount_struct }
%union.anon = type { %struct.anon.0 }
%struct.anon.0 = type { %struct.sk_buff*, %struct.sk_buff*, %union.anon.1 }
%union.anon.1 = type { %struct.net_device* }
%union.anon.2 = type { %struct.sock* }
%struct.sock = type { %struct.sock_common, %struct.socket_lock_t, %struct.atomic_t, i32, %struct.sk_buff_head, %struct.sk_buff*, %struct.sk_buff_head, %struct.anon.127, i32, i32, i32, i32, %struct.sk_filter*, %union.anon.128, %struct.dst_entry*, %struct.dst_entry*, %struct.atomic_t, i32, i32, %struct.refcount_struct, i64, %union.anon.129, %struct.sk_buff*, %struct.sk_buff_head, i32, i32, i32, i32, i64, %struct.timer_list, i32, i32, i64, i64, %struct.page_frag, i64, i64, i64, i32, i32, i32, i32, i8, i8, i16, i16, i16, i64, %struct.proto*, %struct.rwlock_t, i32, i32, i32, i32, %struct.kuid_t, %struct.pid*, %struct.cred*, i64, i64, i16, i8, i32, %struct.atomic_t, i8, i8, %struct.socket*, i8*, %struct.sock_cgroup_data, %struct.mem_cgroup*, void (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, i32 (%struct.sock*, %struct.sk_buff*)*, void (%struct.sock*)*, %struct.sock_reuseport*, %struct.callback_head }
%struct.sock_common = type { %union.anon.3, %union.anon.5, %union.anon.6, i16, i8, i8, i32, %union.anon.8, %struct.proto*, %struct.possible_net_t, %struct.in6_addr, %struct.in6_addr, %struct.atomic64_t, %union.anon.123, [0 x i32], %union.anon.124, i16, %union.anon.125, %struct.refcount_struct, [0 x i32], %union.anon.126 }
%union.anon.3 = type { i64 }
%union.anon.5 = type { i32 }
%union.anon.6 = type { i32 }
%union.anon.8 = type { %struct.hlist_node }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.possible_net_t = type { %struct.net* }
%struct.net = type { %struct.refcount_struct, %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, %struct.key_tag*, %struct.user_namespace*, %struct.ucounts*, %struct.idr, %struct.ns_common, %struct.list_head, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.ctl_table_set, %struct.sock*, %struct.sock*, %struct.uevent_sock*, %struct.hlist_head*, %struct.hlist_head*, %struct.raw_notifier_head, i32, %struct.net_device*, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, %struct.netns_ipv4, %struct.netns_ipv6, %struct.sk_buff_head, %struct.net_generic*, %struct.netns_bpf, %struct.atomic64_t, %struct.netns_can, %struct.sock* }
%struct.spinlock = type { %union.anon.13 }
%union.anon.13 = type { %struct.raw_spinlock }
%struct.llist_node = type { %struct.llist_node* }
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.34 }
%union.anon.34 = type { %struct.anon.35, [48 x i8] }
%struct.anon.35 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.kgid_t = type { i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.26, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.27, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.28, %union.anon.32, %struct.key_restriction* }
%union.anon.26 = type { %struct.rb_node }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.key_user = type opaque
%union.anon.27 = type { i64 }
%union.anon.28 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.29, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.29 = type { i64 }
%struct.key_type = type opaque
%union.anon.32 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.ctl_table_header = type { %union.anon.36, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.36 = type { %struct.anon.37 }
%struct.anon.37 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.rb_root = type { %struct.rb_node* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.proc_dir_entry = type opaque
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.uevent_sock = type opaque
%struct.raw_notifier_head = type { %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.netns_core = type { %struct.ctl_table_header*, i32, i32*, %struct.prot_inuse* }
%struct.prot_inuse = type opaque
%struct.netns_mib = type { %struct.tcp_mib*, %struct.ipstats_mib*, %struct.linux_mib*, %struct.udp_mib*, %struct.udp_mib*, %struct.icmp_mib*, %struct.icmpmsg_mib*, %struct.proc_dir_entry*, %struct.udp_mib*, %struct.udp_mib*, %struct.ipstats_mib*, %struct.icmpv6_mib*, %struct.icmpv6msg_mib* }
%struct.tcp_mib = type { [16 x i64] }
%struct.linux_mib = type { [124 x i64] }
%struct.icmp_mib = type { [28 x i64] }
%struct.icmpmsg_mib = type { [512 x %struct.atomic64_t] }
%struct.udp_mib = type { [9 x i64] }
%struct.ipstats_mib = type { [37 x i64], %struct.u64_stats_sync }
%struct.u64_stats_sync = type {}
%struct.icmpv6_mib = type { [6 x i64] }
%struct.icmpv6msg_mib = type { [512 x %struct.atomic64_t] }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.netns_unix = type { i32, %struct.ctl_table_header* }
%struct.netns_nexthop = type { %struct.rb_root, %struct.hlist_head*, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.netns_ipv4 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ipv4_devconf*, %struct.ipv4_devconf*, %struct.ip_ra_chain*, %struct.mutex, i8, %struct.hlist_head*, i8, %struct.sock*, %struct.sock**, %struct.sock*, %struct.inet_peer_base*, %struct.sock**, %struct.fqdir*, i32, i32, i32, i32, i32, i32, %struct.local_ports, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, i64, i64, %struct.inet_timewait_death_row, i32, i32, %struct.tcp_congestion_ops*, %struct.tcp_fastopen_context*, %struct.spinlock, i32, %struct.atomic_t, i64, i32, i32, i32, i32, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, i64*, i32, %struct.fib_notifier_ops*, i32, %struct.fib_notifier_ops*, i32, %struct.atomic_t, %struct.siphash_key_t }
%struct.ipv4_devconf = type { i8*, [32 x i32], [1 x i64] }
%struct.ip_ra_chain = type { %struct.ip_ra_chain*, %struct.sock*, %union.anon.39, %struct.callback_head }
%union.anon.39 = type { void (%struct.sock*)* }
%struct.inet_peer_base = type { %struct.rb_root, %struct.seqlock_t, i32 }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.fqdir = type { i64, i64, i32, i32, %struct.inet_frags*, %struct.net*, i8, %struct.rhashtable, %struct.atomic64_t, %struct.work_struct }
%struct.inet_frags = type { i32, void (%struct.inet_frag_queue*, i8*)*, void (%struct.inet_frag_queue*)*, void (%struct.timer_list*)*, %struct.kmem_cache*, i8*, %struct.rhashtable_params, %struct.refcount_struct, %struct.completion }
%struct.inet_frag_queue = type { %struct.rhash_head, %union.anon.40, %struct.timer_list, %struct.spinlock, %struct.refcount_struct, %struct.rb_root, %struct.sk_buff*, %struct.sk_buff*, i64, i32, i32, i8, i16, %struct.fqdir*, %struct.callback_head }
%struct.rhash_head = type { %struct.rhash_head* }
%union.anon.40 = type { %struct.frag_v6_compare_key }
%struct.frag_v6_compare_key = type { %struct.in6_addr, %struct.in6_addr, i32, i32, i32 }
%struct.kmem_cache = type opaque
%struct.rhashtable_params = type { i16, i16, i16, i16, i32, i16, i8, i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)*, i32 (%struct.rhashtable_compare_arg*, i8*)* }
%struct.rhashtable_compare_arg = type { %struct.rhashtable*, i8* }
%struct.rhashtable = type { %struct.bucket_table*, i32, i32, %struct.rhashtable_params, i8, %struct.work_struct, %struct.mutex, %struct.spinlock, %struct.atomic_t }
%struct.bucket_table = type { i32, i32, i32, %struct.list_head, %struct.callback_head, %struct.bucket_table*, %struct.lockdep_map, [0 x %struct.rhash_lock_head*] }
%struct.lockdep_map = type {}
%struct.rhash_lock_head = type {}
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.inet_timewait_death_row = type { %struct.atomic_t, %struct.inet_hashinfo*, i32 }
%struct.inet_hashinfo = type opaque
%struct.tcp_congestion_ops = type opaque
%struct.tcp_fastopen_context = type opaque
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.fib_notifier_ops = type { i32, %struct.list_head, i32 (%struct.net*)*, i32 (%struct.net*, %struct.notifier_block*, %struct.netlink_ext_ack*)*, %struct.module*, %struct.callback_head }
%struct.netlink_ext_ack = type { i8*, %struct.nlattr*, %struct.nla_policy*, [20 x i8], i8 }
%struct.nlattr = type { i16, i16 }
%struct.nla_policy = type { i8, i8, i16, %union.anon.42 }
%union.anon.42 = type { i8* }
%struct.module = type opaque
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.netns_sysctl_ipv6, %struct.ipv6_devconf*, %struct.ipv6_devconf*, %struct.inet_peer_base*, %struct.fqdir*, %struct.fib6_info*, %struct.rt6_info*, %struct.rt6_statistics*, %struct.timer_list, %struct.hlist_head*, %struct.fib6_table*, %struct.list_head, %struct.dst_ops, %struct.rwlock_t, %struct.spinlock, i32, i64, %struct.sock**, %struct.sock*, %struct.sock*, %struct.sock*, %struct.sock*, %struct.atomic_t, %struct.atomic_t, %struct.seg6_pernet_data*, %struct.fib_notifier_ops*, %struct.fib_notifier_ops*, i32, %struct.anon.49 }
%struct.netns_sysctl_ipv6 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i64], i64*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.ipv6_devconf = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ipv6_stable_secret, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ctl_table_header* }
%struct.ipv6_stable_secret = type { i8, %struct.in6_addr }
%struct.fib6_info = type { %struct.fib6_table*, %struct.fib6_info*, %struct.fib6_node*, %union.anon.44, i32, %struct.refcount_struct, i64, %struct.dst_metrics*, %struct.rt6key, i32, %struct.rt6key, %struct.rt6key, i32, i8, i8, i8, %struct.callback_head, %struct.nexthop*, [0 x %struct.fib6_nh] }
%struct.fib6_node = type { %struct.fib6_node*, %struct.fib6_node*, %struct.fib6_node*, %struct.fib6_info*, i16, i16, i32, %struct.fib6_info*, %struct.callback_head }
%union.anon.44 = type { %struct.list_head }
%struct.dst_metrics = type { [17 x i32], %struct.refcount_struct }
%struct.rt6key = type { %struct.in6_addr, i32 }
%struct.nexthop = type { %struct.rb_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.net*, i32, i8, i8, i8, %struct.refcount_struct, %struct.callback_head, %union.anon.45 }
%union.anon.45 = type { %struct.nh_info* }
%struct.nh_info = type { %struct.hlist_node, %struct.nexthop*, i8, i8, i8, %union.anon.46 }
%union.anon.46 = type { %struct.fib_nh }
%struct.fib_nh = type { %struct.fib_nh_common, %struct.hlist_node, %struct.fib_info*, i32, i32 }
%struct.fib_nh_common = type { %struct.net_device*, i32, i8, i8, i8, i8, %struct.lwtunnel_state*, %union.anon.47, i32, %struct.atomic_t, %struct.rtable**, %struct.rtable*, %struct.fnhe_hash_bucket* }
%struct.lwtunnel_state = type { i16, i16, i16, %struct.atomic_t, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, i32 (%struct.sk_buff*)*, %struct.callback_head, [0 x i8] }
%union.anon.47 = type { %struct.in6_addr }
%struct.rtable = type { %struct.dst_entry, i32, i32, i16, i8, i8, i32, i8, %union.anon.48, i32, %struct.list_head, %struct.uncached_list* }
%struct.dst_entry = type { %struct.net_device*, %struct.dst_ops*, i64, i64, i8*, i32 (%struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, i16, i16, i16, i16, %struct.atomic_t, i32, i64, %struct.lwtunnel_state*, %struct.callback_head, i16, i16, i32 }
%union.anon.48 = type { %struct.in6_addr }
%struct.uncached_list = type opaque
%struct.fnhe_hash_bucket = type { %struct.fib_nh_exception* }
%struct.fib_nh_exception = type { %struct.fib_nh_exception*, i32, i32, i32, i8, i32, i64, %struct.rtable*, %struct.rtable*, i64, %struct.callback_head }
%struct.fib_info = type { %struct.hlist_node, %struct.hlist_node, %struct.list_head, %struct.net*, i32, %struct.refcount_struct, i32, i8, i8, i8, i8, i32, i32, i32, %struct.dst_metrics*, i32, i8, i8, %struct.nexthop*, %struct.callback_head, [0 x %struct.fib_nh] }
%struct.fib6_nh = type { %struct.fib_nh_common, %struct.rt6_info**, %struct.rt6_exception_bucket* }
%struct.rt6_exception_bucket = type { %struct.hlist_head, i32 }
%struct.rt6_info = type { %struct.dst_entry, %struct.fib6_info*, i32, %struct.rt6key, %struct.rt6key, %struct.in6_addr, %struct.inet6_dev*, i32, %struct.list_head, %struct.uncached_list*, i16 }
%struct.inet6_dev = type { %struct.net_device*, %struct.list_head, %struct.ifmcaddr6*, %struct.ifmcaddr6*, %struct.spinlock, i8, i8, i8, i8, i64, i64, i64, i64, %struct.timer_list, %struct.timer_list, %struct.timer_list, %struct.ifacaddr6*, %struct.rwlock_t, %struct.refcount_struct, i32, i32, i32, %struct.list_head, %struct.in6_addr, %struct.neigh_parms*, %struct.ipv6_devconf, %struct.ipv6_devstat, %struct.timer_list, i32, i8, i64, %struct.callback_head }
%struct.ifmcaddr6 = type { %struct.in6_addr, %struct.inet6_dev*, %struct.ifmcaddr6*, %struct.ip6_sf_list*, %struct.ip6_sf_list*, i32, i8, [2 x i64], %struct.timer_list, i32, i32, %struct.refcount_struct, %struct.spinlock, i64, i64 }
%struct.ip6_sf_list = type { %struct.ip6_sf_list*, %struct.in6_addr, [2 x i64], i8, i8, i8 }
%struct.ifacaddr6 = type { %struct.in6_addr, %struct.fib6_info*, %struct.ifacaddr6*, %struct.hlist_node, i32, %struct.refcount_struct, i64, i64, %struct.callback_head }
%struct.neigh_parms = type { %struct.possible_net_t, %struct.net_device*, %struct.list_head, i32 (%struct.neighbour*)*, %struct.neigh_table*, i8*, i32, %struct.refcount_struct, %struct.callback_head, i32, [13 x i32], [1 x i64] }
%struct.neighbour = type { %struct.neighbour*, %struct.neigh_table*, %struct.neigh_parms*, i64, i64, %struct.rwlock_t, %struct.refcount_struct, i32, %struct.sk_buff_head, %struct.timer_list, i64, %struct.atomic_t, i8, i8, i8, i8, i8, %struct.seqlock_t, [32 x i8], %struct.hh_cache, i32 (%struct.neighbour*, %struct.sk_buff*)*, %struct.neigh_ops*, %struct.list_head, %struct.callback_head, %struct.net_device*, [0 x i8] }
%struct.hh_cache = type { i32, %struct.seqlock_t, [12 x i64] }
%struct.neigh_ops = type { i32, void (%struct.neighbour*, %struct.sk_buff*)*, void (%struct.neighbour*, %struct.sk_buff*)*, i32 (%struct.neighbour*, %struct.sk_buff*)*, i32 (%struct.neighbour*, %struct.sk_buff*)* }
%struct.neigh_table = type { i32, i32, i32, i16, i32 (i8*, %struct.net_device*, i32*)*, i1 (%struct.neighbour*, i8*)*, i32 (%struct.neighbour*)*, i32 (%struct.pneigh_entry*)*, void (%struct.pneigh_entry*)*, void (%struct.sk_buff*)*, i32 (i8*)*, i1 (%struct.net_device*, %struct.netlink_ext_ack*)*, i8*, %struct.neigh_parms, %struct.list_head, i32, i32, i32, i32, i64, %struct.delayed_work, %struct.timer_list, %struct.sk_buff_head, %struct.atomic_t, %struct.atomic_t, %struct.list_head, %struct.rwlock_t, i64, %struct.neigh_statistics*, %struct.neigh_hash_table*, %struct.pneigh_entry** }
%struct.pneigh_entry = type { %struct.pneigh_entry*, %struct.possible_net_t, %struct.net_device*, i8, i8, [0 x i8] }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.workqueue_struct = type opaque
%struct.neigh_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.neigh_hash_table = type { %struct.neighbour**, i32, [4 x i32], %struct.callback_head }
%struct.ipv6_devstat = type { %struct.proc_dir_entry*, %struct.ipstats_mib*, %struct.icmpv6_mib_device*, %struct.icmpv6msg_mib_device* }
%struct.icmpv6_mib_device = type { [6 x %struct.atomic64_t] }
%struct.icmpv6msg_mib_device = type { [512 x %struct.atomic64_t] }
%struct.rt6_statistics = type { i32, i32, i32, i32, i32, %struct.atomic_t, %struct.atomic_t }
%struct.fib6_table = type { %struct.hlist_node, i32, %struct.spinlock, %struct.fib6_node, %struct.inet_peer_base, i32, i32 }
%struct.dst_ops = type { i16, i32, i32 (%struct.dst_ops*)*, %struct.dst_entry* (%struct.dst_entry*, i32)*, i32 (%struct.dst_entry*)*, i32 (%struct.dst_entry*)*, i32* (%struct.dst_entry*, i64)*, void (%struct.dst_entry*)*, void (%struct.dst_entry*, %struct.net_device*, i32)*, %struct.dst_entry* (%struct.dst_entry*)*, void (%struct.sk_buff*)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*, i32, i1)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, %struct.neighbour* (%struct.dst_entry*, %struct.sk_buff*, i8*)*, void (%struct.dst_entry*, i8*)*, %struct.kmem_cache*, %struct.percpu_counter }
%struct.percpu_counter = type { i64 }
%struct.seg6_pernet_data = type opaque
%struct.anon.49 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.net_generic = type { %union.anon.50 }
%union.anon.50 = type { %struct.anon.51 }
%struct.anon.51 = type { i32, %struct.callback_head }
%struct.netns_bpf = type { [2 x %struct.bpf_prog_array*], [2 x %struct.bpf_prog*], [2 x %struct.list_head] }
%struct.bpf_prog_array = type { %struct.callback_head, [0 x %struct.bpf_prog_array_item] }
%struct.bpf_prog_array_item = type { %struct.bpf_prog*, [2 x %struct.bpf_cgroup_storage*] }
%struct.bpf_prog = type { i16, i16, i32, i32, i32, i32, [8 x i8], %struct.bpf_prog_aux*, %struct.sock_fprog_kern*, i32 (i8*, %struct.bpf_insn*)*, [0 x %struct.sock_filter], [0 x %struct.bpf_insn] }
%struct.bpf_prog_aux = type { %struct.atomic64_t, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.bpf_ctx_arg_aux*, %struct.mutex, %struct.bpf_prog*, %struct.bpf_trampoline*, i32, i32, i8, i8, i8, i8, i8, i8, i32, %struct.hlist_node, %struct.btf_type*, i8*, %struct.bpf_prog**, i8*, %struct.bpf_jit_poke_descriptor*, i32, %struct.bpf_ksym, %struct.bpf_prog_ops*, %struct.bpf_map**, %struct.mutex, %struct.bpf_prog*, %struct.user_struct*, i64, [2 x %struct.bpf_map*], [16 x i8], %struct.bpf_prog_offload*, %struct.btf*, %struct.bpf_func_info*, %struct.bpf_func_info_aux*, %struct.bpf_line_info*, i8**, i32, i32, i32, i32, %struct.exception_table_entry*, %struct.bpf_prog_stats*, %union.anon.79 }
%struct.bpf_ctx_arg_aux = type { i32, i32, i32 }
%struct.bpf_trampoline = type { %struct.hlist_node, %struct.mutex, %struct.refcount_struct, i64, %struct.anon.52, %struct.bpf_prog*, [3 x %struct.hlist_head], [3 x i32], i8*, i64, %struct.bpf_ksym }
%struct.anon.52 = type { %struct.btf_func_model, i8*, i8 }
%struct.btf_func_model = type { i8, i8, [12 x i8] }
%struct.btf_type = type opaque
%struct.bpf_jit_poke_descriptor = type { i8*, i8*, i8*, %union.anon.53, i8, i8, i16, i32 }
%union.anon.53 = type { %struct.anon.54 }
%struct.anon.54 = type { %struct.bpf_map*, i32 }
%struct.bpf_map = type { %struct.bpf_map_ops*, %struct.bpf_map*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.btf*, %struct.bpf_map_memory, [16 x i8], i32, i8, i8, [26 x i8], %struct.atomic64_t, %struct.atomic64_t, %struct.work_struct, %struct.mutex, i64, [48 x i8] }
%struct.bpf_map_ops = type { i32 (%union.bpf_attr*)*, %struct.bpf_map* (%union.bpf_attr*)*, void (%struct.bpf_map*, %struct.file*)*, void (%struct.bpf_map*)*, i32 (%struct.bpf_map*, i8*, i8*)*, void (%struct.bpf_map*)*, i8* (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i8* (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*, i8*, i64)*, i32 (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*, i64)*, i32 (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*)*, i8* (%struct.bpf_map*, %struct.file*, i32)*, void (i8*)*, i32 (%struct.bpf_map*, %struct.bpf_insn*)*, i32 (i8*)*, void (%struct.bpf_map*, i8*, %struct.seq_file*)*, i32 (%struct.bpf_map*, %struct.btf*, %struct.btf_type*, %struct.btf_type*)*, i32 (%struct.bpf_map*, %struct.bpf_prog_aux*)*, void (%struct.bpf_map*, %struct.bpf_prog_aux*)*, void (%struct.bpf_map*, i32, %struct.bpf_prog*, %struct.bpf_prog*)*, i32 (%struct.bpf_map*, i64*, i32)*, i32 (%struct.bpf_map*, i64, i32*)*, i32 (%struct.bpf_map*, %struct.vm_area_struct*)*, i32 (%struct.bpf_map*, %struct.file*, %struct.poll_table_struct*)*, i32 (%struct.bpf_local_storage_map*, i8*, i32)*, void (%struct.bpf_local_storage_map*, i8*, i32)*, %struct.bpf_local_storage** (i8*)*, i1 (%struct.bpf_map*, %struct.bpf_map*)*, i8*, i32*, %struct.bpf_iter_seq_info* }
%union.bpf_attr = type { %struct.anon.59 }
%struct.anon.59 = type { i32, i32, i64, i64, i32, i32, i64, i32, i32, [16 x i8], i32, i32, i32, i32, i64, i32, i32, i64, i32, i32, i32 }
%struct.file = type { %union.anon.14, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.14 = type { %struct.callback_head }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.101, %struct.list_head, %struct.list_head, %union.anon.102 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.15, i8* }
%union.anon.15 = type { i64 }
%struct.lockref = type { %union.anon.17 }
%union.anon.17 = type { %struct.anon.18 }
%struct.anon.18 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type { i64, i64, i64, i64, i32, i8 }
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.page = type { i64, %union.anon.11, %union.anon.118, %struct.atomic_t, [8 x i8] }
%union.anon.11 = type { %struct.anon.12 }
%struct.anon.12 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.118 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.19, i32 }
%union.anon.19 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.100, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.100 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.99, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.mm_struct = type { %struct.anon.20, [0 x i64] }
%struct.anon.20 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.94, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.21 }
%union.anon.21 = type { %struct.anon.22 }
%struct.anon.22 = type { i32*, i32, i32, i32, i64, i32* }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.pid_namespace = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.178, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.178 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.80, %union.anon.81, i32 }
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.169, %union.anon.170, %union.anon.171, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.174, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type opaque
%union.anon.169 = type { %struct.hlist_node }
%union.anon.170 = type { %struct.rb_node }
%union.anon.171 = type { %struct.anon.173 }
%struct.anon.173 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%union.anon.174 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.175, void (i8*)*, i8* }
%union.anon.175 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.176, i16, i16 }
%union.anon.176 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type opaque
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.blk_mq_tag_set = type opaque
%union.anon.80 = type { %struct.list_head }
%union.anon.81 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.82 }
%struct.anon.82 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.86 }
%struct.anon.86 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.93, i32, [12 x i8] }
%union.anon.93 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.94 = type { %struct.callback_head }
%struct.pipe_inode_info = type { %struct.mutex, %struct.wait_queue_head, %struct.wait_queue_head, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.page*, %struct.fasync_struct*, %struct.fasync_struct*, %struct.pipe_buffer*, %struct.user_struct* }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.pipe_buffer = type { %struct.page*, i32, i32, %struct.pipe_buf_operations*, i32, i64 }
%struct.pipe_buf_operations = type { i32 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, void (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)* }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.95, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.98 }
%union.anon.95 = type { %struct.anon.96 }
%struct.anon.96 = type { i64, i64 }
%union.anon.98 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.pgprot = type { i64 }
%struct.anon.99 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.poll_table_struct = type { void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, i32 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.hd_geometry = type opaque
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.101 = type { %struct.list_head }
%union.anon.102 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.179, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.180, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.181, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.182, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.179 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.180 = type { %struct.callback_head }
%union.anon.181 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.103 }
%union.anon.103 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.iov_iter = type { i32, i64, i64, %union.anon.10, %union.anon.119 }
%union.anon.10 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.119 = type { i64 }
%struct.swap_info_struct = type opaque
%union.anon.182 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.104 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.104 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.bpf_insn = type { i8, i8, i16, i32 }
%struct.bpf_local_storage_map = type opaque
%struct.bpf_local_storage = type opaque
%struct.bpf_iter_seq_info = type { %struct.seq_operations*, i32 (i8*, %struct.bpf_iter_aux_info*)*, void (i8*)*, i32 }
%struct.bpf_iter_aux_info = type opaque
%struct.bpf_map_memory = type { i32, %struct.user_struct* }
%struct.bpf_ksym = type { i64, i64, [128 x i8], %struct.list_head, %struct.latch_tree_node, i8 }
%struct.latch_tree_node = type { [2 x %struct.rb_node] }
%struct.bpf_prog_ops = type { i32 (%struct.bpf_prog*, %union.bpf_attr*, %union.bpf_attr*)* }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.bpf_prog_offload = type { %struct.bpf_prog*, %struct.net_device*, %struct.bpf_offload_dev*, i8*, %struct.list_head, i8, i8, i8*, i32 }
%struct.bpf_offload_dev = type opaque
%struct.btf = type opaque
%struct.bpf_func_info = type { i32, i32 }
%struct.bpf_func_info_aux = type { i16, i8 }
%struct.bpf_line_info = type { i32, i32, i32, i32 }
%struct.exception_table_entry = type { i32, i32, i32 }
%struct.bpf_prog_stats = type { i64, i64, %struct.u64_stats_sync }
%union.anon.79 = type { %struct.work_struct }
%struct.sock_fprog_kern = type { i16, %struct.sock_filter* }
%struct.sock_filter = type { i16, i8, i8, i32 }
%struct.bpf_cgroup_storage = type opaque
%struct.netns_can = type { %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.can_dev_rcv_lists*, %struct.spinlock, %struct.timer_list, %struct.can_pkg_stats*, %struct.can_rcv_lists_stats*, %struct.hlist_head }
%struct.can_dev_rcv_lists = type opaque
%struct.can_pkg_stats = type opaque
%struct.can_rcv_lists_stats = type opaque
%struct.in6_addr = type { %union.anon.41 }
%union.anon.41 = type { [4 x i32] }
%struct.atomic64_t = type { i64 }
%union.anon.123 = type { i64 }
%union.anon.124 = type { %struct.hlist_node }
%union.anon.125 = type { i32 }
%union.anon.126 = type { i32 }
%struct.socket_lock_t = type { %struct.spinlock, i32, %struct.wait_queue_head }
%struct.anon.127 = type { %struct.atomic_t, i32, %struct.sk_buff*, %struct.sk_buff* }
%struct.sk_filter = type { %struct.refcount_struct, %struct.callback_head, %struct.bpf_prog* }
%union.anon.128 = type { %struct.socket_wq* }
%struct.socket_wq = type { %struct.wait_queue_head, %struct.fasync_struct*, i64, %struct.callback_head }
%union.anon.129 = type { %struct.sk_buff* }
%struct.sk_buff_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.proto = type { void (%struct.sock*, i64)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, i32)*, %struct.sock* (%struct.sock*, i32, i32*, i1)*, i32 (%struct.sock*, i32, i64)*, i32 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*, i32)*, i32 (%struct.sock*, i32, i32, i8*, i8, i32)*, i32 (%struct.sock*, i32, i32, i8*, i32*)*, void (%struct.sock*, i32)*, i32 (%struct.sock*, %struct.msghdr*, i64)*, i32 (%struct.sock*, %struct.msghdr*, i64, i32, i32, i32*)*, i32 (%struct.sock*, %struct.page*, i32, i64, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sk_buff*)*, void (%struct.sock*)*, i32 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, i32 (%struct.sock*, i16)*, i32, i1 (%struct.sock*, i32)*, i1 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, %struct.atomic64_t*, %struct.percpu_counter*, i64*, i64*, i32*, i32*, i32, i32, i32, i8, %struct.kmem_cache*, i32, i32, i32, i32, %struct.percpu_counter*, %struct.request_sock_ops*, %struct.timewait_sock_ops*, %union.anon.122, %struct.module*, [32 x i8], %struct.list_head, i32 (%struct.sock*, i32)* }
%struct.msghdr = type { i8*, i32, %struct.iov_iter, %union.anon.121, i8, i64, i32, %struct.kiocb* }
%union.anon.121 = type { i8* }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.request_sock_ops = type { i32, i32, %struct.kmem_cache*, i8*, i32 (%struct.sock*, %struct.request_sock*)*, void (%struct.sock*, %struct.sk_buff*, %struct.request_sock*)*, void (%struct.sock*, %struct.sk_buff*)*, void (%struct.request_sock*)*, void (%struct.request_sock*)* }
%struct.request_sock = type { %struct.sock_common, %struct.request_sock*, i16, i8, i8, i32, %struct.timer_list, %struct.request_sock_ops*, %struct.sock*, %struct.saved_syn*, i32, i32 }
%struct.saved_syn = type { i32, i32, i32, [0 x i8] }
%struct.timewait_sock_ops = type { %struct.kmem_cache*, i8*, i32, i32 (%struct.sock*, %struct.sock*, i8*)*, void (%struct.sock*)* }
%union.anon.122 = type { %struct.inet_hashinfo* }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.kuid_t = type { i32 }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.38 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.38 = type { %struct.callback_head }
%struct.atomic_t = type { i32 }
%struct.socket = type { i32, i16, i64, %struct.file*, %struct.sock*, %struct.proto_ops*, %struct.socket_wq }
%struct.proto_ops = type { i32, i32, %struct.module*, i32 (%struct.socket*)*, i32 (%struct.socket*, %struct.sockaddr*, i32)*, i32 (%struct.socket*, %struct.sockaddr*, i32, i32)*, i32 (%struct.socket*, %struct.socket*)*, i32 (%struct.socket*, %struct.socket*, i32, i1)*, i32 (%struct.socket*, %struct.sockaddr*, i32)*, i32 (%struct.file*, %struct.socket*, %struct.poll_table_struct*)*, i32 (%struct.socket*, i32, i64)*, i32 (%struct.socket*, i8*, i1, i1)*, i32 (%struct.socket*, i32)*, i32 (%struct.socket*, i32)*, i32 (%struct.socket*, i32, i32, i8*, i8, i32)*, i32 (%struct.socket*, i32, i32, i8*, i32*)*, void (%struct.seq_file*, %struct.socket*)*, i32 (%struct.socket*, %struct.msghdr*, i64)*, i32 (%struct.socket*, %struct.msghdr*, i64, i32)*, i32 (%struct.file*, %struct.socket*, %struct.vm_area_struct*)*, i64 (%struct.socket*, %struct.page*, i32, i64, i32)*, i64 (%struct.socket*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.sock*, i32)*, i32 (%struct.socket*)*, i32 (%struct.sock*, %struct.read_descriptor_t*, i32 (%struct.read_descriptor_t*, %struct.sk_buff*, i32, i64)*)*, i32 (%struct.sock*, %struct.page*, i32, i64, i32)*, i32 (%struct.sock*, %struct.msghdr*, i64)*, i32 (%struct.sock*, i32)* }
%struct.read_descriptor_t = type { i64, i64, %union.anon.130, i32 }
%union.anon.130 = type { i8* }
%struct.sock_cgroup_data = type {}
%struct.mem_cgroup = type opaque
%struct.sock_reuseport = type opaque
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%union.anon.131 = type { i64 }
%union.anon.132 = type { %struct.anon.133 }
%struct.anon.133 = type { i64, void (%struct.sk_buff*)* }
%union.anon.134 = type { i32 }
%union.anon.136 = type { i32 }
%union.anon.137 = type { i32 }
%union.anon.138 = type { i16 }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.net_device = type { [16 x i8], %struct.netdev_name_node*, %struct.dev_ifalias*, i64, i64, i64, i32, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.net_device_stats, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.iw_handler_def*, %struct.iw_public_data*, %struct.net_device_ops*, %struct.ethtool_ops*, %struct.ndisc_ops*, %struct.header_ops*, i32, i32, i16, i16, i8, i8, i8, i8, i32, i32, i32, i16, i16, i8, i8, i16, i16, [32 x i8], i8, i8, i8, i8, i16, i16, i16, %struct.spinlock, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.kset*, i32, i32, i8, %struct.vlan_info*, %struct.in_device*, %struct.inet6_dev*, %struct.wireless_dev*, %struct.wpan_dev*, i8*, %struct.netdev_rx_queue*, i32, i32, %struct.bpf_prog*, i64, i32, i32 (%struct.sk_buff**)*, i8*, %struct.netdev_queue*, [32 x i8], %struct.hlist_node, %struct.netdev_queue*, i32, i32, %struct.Qdisc*, i32, %struct.spinlock, %struct.xdp_dev_bulk_queue*, %struct.timer_list, i32, i32, %struct.list_head, i32*, %struct.list_head, i8, i8, i16, i8, void (%struct.net_device*)*, %struct.possible_net_t, %union.anon.155, %struct.device, [4 x %struct.attribute_group*], %struct.attribute_group*, %struct.rtnl_link_ops*, i32, i16, i16, [16 x %struct.netdev_tc_txq], [16 x i8], %struct.phy_device*, %struct.sfp_bus*, %struct.lock_class_key*, %struct.lock_class_key*, i8, i8, %struct.list_head, %struct.udp_tunnel_nic_info*, %struct.udp_tunnel_nic*, [3 x %struct.bpf_xdp_entity] }
%struct.netdev_name_node = type { %struct.hlist_node, %struct.list_head, %struct.net_device*, i8* }
%struct.dev_ifalias = type { %struct.callback_head, [0 x i8] }
%struct.anon = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.iw_handler_def = type opaque
%struct.iw_public_data = type opaque
%struct.ethtool_ops = type { i32, void (%struct.net_device*, %struct.ethtool_drvinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, %struct.ethtool_regs*, i8*)*, void (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, void (%struct.net_device*, %struct.ethtool_ringparam*)*, i32 (%struct.net_device*, %struct.ethtool_ringparam*)*, void (%struct.net_device*, %struct.ethtool_pause_stats*)*, void (%struct.net_device*, %struct.ethtool_pauseparam*)*, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)*, void (%struct.net_device*, %struct.ethtool_test*, i64*)*, void (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)*, i32 (%struct.net_device*, %struct.ethtool_flash*)*, i32 (%struct.net_device*, i32*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32*, i8*, i8*)*, i32 (%struct.net_device*, i32*, i8*, i8)*, i32 (%struct.net_device*, i32*, i8*, i8*, i32)*, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)*, void (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_ts_info*)*, i32 (%struct.net_device*, %struct.ethtool_modinfo*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* }
%struct.ethtool_drvinfo = type { i32, [32 x i8], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [12 x i8], i32, i32, i32, i32, i32 }
%struct.ethtool_regs = type { i32, i32, i32, [0 x i8] }
%struct.ethtool_wolinfo = type { i32, i32, i32, [6 x i8] }
%struct.ethtool_link_ext_state_info = type { i32, %union.anon.148 }
%union.anon.148 = type { i32 }
%struct.ethtool_coalesce = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_ringparam = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_pause_stats = type { i64, i64 }
%struct.ethtool_pauseparam = type { i32, i32, i32, i32 }
%struct.ethtool_test = type { i32, i32, i32, i32, [0 x i64] }
%struct.ethtool_rxnfc = type { i32, i32, i64, %struct.ethtool_rx_flow_spec, %union.anon.149, [0 x i32] }
%struct.ethtool_rx_flow_spec = type { i32, %union.ethtool_flow_union, %struct.ethtool_flow_ext, %union.ethtool_flow_union, %struct.ethtool_flow_ext, i64, i32 }
%union.ethtool_flow_union = type { %struct.ethtool_tcpip6_spec, [12 x i8] }
%struct.ethtool_tcpip6_spec = type { [4 x i32], [4 x i32], i16, i16, i8 }
%struct.ethtool_flow_ext = type { [2 x i8], [6 x i8], i16, i16, [2 x i32] }
%union.anon.149 = type { i32 }
%struct.ethtool_flash = type { i32, i32, [128 x i8] }
%struct.ethtool_channels = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_dump = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_ts_info = type { i32, i32, i32, i32, [3 x i32], i32, [3 x i32] }
%struct.ethtool_modinfo = type { i32, i32, i32, [8 x i32] }
%struct.ethtool_eeprom = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_eee = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.ethtool_link_ksettings = type { %struct.ethtool_link_settings, %struct.anon.150 }
%struct.ethtool_link_settings = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [1 x i8], [7 x i32], [0 x i32] }
%struct.anon.150 = type { [2 x i64], [2 x i64], [2 x i64] }
%struct.ethtool_fecparam = type { i32, i32, i32, i32 }
%struct.ethtool_stats = type { i32, i32, [0 x i64] }
%struct.ethtool_tunable = type { i32, i32, i32, i32, [0 x i8*] }
%struct.ndisc_ops = type { i32 (i8)*, i32 (%struct.net_device*, %struct.nd_opt_hdr*, %struct.ndisc_options*)*, void (%struct.net_device*, %struct.neighbour*, i32, i8, %struct.ndisc_options*)*, i32 (%struct.net_device*, i8, %struct.neighbour*, i8*, i8**)*, void (%struct.net_device*, %struct.sk_buff*, i8, i8*)*, void (%struct.net*, %struct.net_device*, %struct.prefix_info*, %struct.inet6_dev*, %struct.in6_addr*, i32, i32, i1, i1, i32, i32, i1)* }
%struct.nd_opt_hdr = type { i8, i8 }
%struct.ndisc_options = type { [15 x %struct.nd_opt_hdr*], %struct.nd_opt_hdr*, %struct.nd_opt_hdr* }
%struct.prefix_info = type { i8, i8, i8, i8, i32, i32, i32, %struct.in6_addr }
%struct.header_ops = type { i32 (%struct.sk_buff*, %struct.net_device*, i16, i8*, i8*, i32)*, i32 (%struct.sk_buff*, i8*)*, i32 (%struct.neighbour*, %struct.hh_cache*, i16)*, void (%struct.hh_cache*, %struct.net_device*, i8*)*, i1 (i8*, i32)*, i16 (%struct.sk_buff*)* }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32 }
%struct.vlan_info = type opaque
%struct.in_device = type { %struct.net_device*, %struct.refcount_struct, i32, %struct.in_ifaddr*, %struct.ip_mc_list*, %struct.ip_mc_list**, i32, %struct.spinlock, %struct.ip_mc_list*, i64, i64, i64, i64, i64, i8, i8, i8, %struct.timer_list, %struct.timer_list, %struct.neigh_parms*, %struct.ipv4_devconf, %struct.callback_head }
%struct.in_ifaddr = type { %struct.hlist_node, %struct.in_ifaddr*, %struct.in_device*, %struct.callback_head, i32, i32, i32, i32, i32, i8, i8, i32, [16 x i8], i32, i32, i64, i64 }
%struct.ip_mc_list = type opaque
%struct.wireless_dev = type opaque
%struct.wpan_dev = type opaque
%struct.netdev_rx_queue = type { %struct.kobject, %struct.net_device*, [56 x i8], %struct.xdp_rxq_info }
%struct.xdp_rxq_info = type { %struct.net_device*, i32, i32, %struct.xdp_mem_info, [40 x i8] }
%struct.xdp_mem_info = type { i32, i32 }
%struct.netdev_queue = type { %struct.net_device*, %struct.Qdisc*, %struct.Qdisc*, %struct.kobject, i64, i64, %struct.net_device*, %struct.spinlock, i32, i64, i64, %struct.dql }
%struct.dql = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32 }
%struct.Qdisc = type { i32 (%struct.sk_buff*, %struct.Qdisc*, %struct.sk_buff**)*, %struct.sk_buff* (%struct.Qdisc*)*, i32, i32, %struct.Qdisc_ops*, %struct.qdisc_size_table*, %struct.hlist_node, i32, i32, %struct.netdev_queue*, %struct.net_rate_estimator*, %struct.gnet_stats_basic_cpu*, %struct.gnet_stats_queue*, i32, %struct.refcount_struct, %struct.sk_buff_head, %struct.qdisc_skb_head, %struct.gnet_stats_basic_packed, %struct.seqcount, %struct.gnet_stats_queue, i64, %struct.Qdisc*, %struct.sk_buff_head, %struct.spinlock, %struct.spinlock, i8, %struct.callback_head, [0 x i64] }
%struct.Qdisc_ops = type { %struct.Qdisc_ops*, %struct.Qdisc_class_ops*, [16 x i8], i32, i32, i32 (%struct.sk_buff*, %struct.Qdisc*, %struct.sk_buff**)*, %struct.sk_buff* (%struct.Qdisc*)*, %struct.sk_buff* (%struct.Qdisc*)*, i32 (%struct.Qdisc*, %struct.nlattr*, %struct.netlink_ext_ack*)*, void (%struct.Qdisc*)*, void (%struct.Qdisc*)*, i32 (%struct.Qdisc*, %struct.nlattr*, %struct.netlink_ext_ack*)*, void (%struct.Qdisc*)*, i32 (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*, %struct.sk_buff*)*, i32 (%struct.Qdisc*, %struct.gnet_dump*)*, void (%struct.Qdisc*, i32)*, void (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*)*, i32 (%struct.Qdisc*)*, %struct.module* }
%struct.Qdisc_class_ops = type { i32, %struct.netdev_queue* (%struct.Qdisc*, %struct.tcmsg*)*, i32 (%struct.Qdisc*, i64, %struct.Qdisc*, %struct.Qdisc**, %struct.netlink_ext_ack*)*, %struct.Qdisc* (%struct.Qdisc*, i64)*, void (%struct.Qdisc*, i64)*, i64 (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*, i32, i32, %struct.nlattr**, i64*, %struct.netlink_ext_ack*)*, i32 (%struct.Qdisc*, i64)*, void (%struct.Qdisc*, %struct.qdisc_walker*)*, %struct.tcf_block* (%struct.Qdisc*, i64, %struct.netlink_ext_ack*)*, i64 (%struct.Qdisc*, i64, i32)*, void (%struct.Qdisc*, i64)*, i32 (%struct.Qdisc*, i64, %struct.sk_buff*, %struct.tcmsg*)*, i32 (%struct.Qdisc*, i64, %struct.gnet_dump*)* }
%struct.tcmsg = type { i8, i8, i16, i32, i32, i32, i32 }
%struct.qdisc_walker = type { i32, i32, i32, i32 (%struct.Qdisc*, i64, %struct.qdisc_walker*)* }
%struct.tcf_block = type { %struct.mutex, %struct.list_head, i32, i32, %struct.refcount_struct, %struct.net*, %struct.Qdisc*, %struct.rw_semaphore, %struct.flow_block, %struct.list_head, i8, %struct.atomic_t, i32, i32, %struct.anon.151, %struct.callback_head, [128 x %struct.hlist_head], %struct.mutex }
%struct.flow_block = type { %struct.list_head }
%struct.anon.151 = type { %struct.tcf_chain*, %struct.list_head }
%struct.tcf_chain = type { %struct.mutex, %struct.tcf_proto*, %struct.list_head, %struct.tcf_block*, i32, i32, i32, i8, i8, %struct.tcf_proto_ops*, i8*, %struct.callback_head }
%struct.tcf_proto = type { %struct.tcf_proto*, i8*, i32 (%struct.sk_buff*, %struct.tcf_proto*, %struct.tcf_result*)*, i16, i32, i8*, %struct.tcf_proto_ops*, %struct.tcf_chain*, %struct.spinlock, i8, %struct.refcount_struct, %struct.callback_head, %struct.hlist_node }
%struct.tcf_result = type { %union.anon.152 }
%union.anon.152 = type { %struct.anon.153 }
%struct.anon.153 = type { i64, i32 }
%struct.tcf_proto_ops = type { %struct.list_head, [16 x i8], i32 (%struct.sk_buff*, %struct.tcf_proto*, %struct.tcf_result*)*, i32 (%struct.tcf_proto*)*, void (%struct.tcf_proto*, i1, %struct.netlink_ext_ack*)*, i8* (%struct.tcf_proto*, i32)*, void (%struct.tcf_proto*, i8*)*, i32 (%struct.net*, %struct.sk_buff*, %struct.tcf_proto*, i64, i32, %struct.nlattr**, i8**, i1, i1, %struct.netlink_ext_ack*)*, i32 (%struct.tcf_proto*, i8*, i8*, i1, %struct.netlink_ext_ack*)*, i1 (%struct.tcf_proto*)*, void (%struct.tcf_proto*, %struct.tcf_walker*, i1)*, i32 (%struct.tcf_proto*, i1, i32 (i32, i8*, i8*)*, i8*, %struct.netlink_ext_ack*)*, void (%struct.tcf_proto*, i8*)*, void (%struct.tcf_proto*, i8*)*, void (i8*, i32, i64, i8*, i64)*, i8* (%struct.net*, %struct.tcf_chain*, %struct.nlattr**, %struct.netlink_ext_ack*)*, void (i8*)*, i32 (%struct.net*, %struct.tcf_proto*, i8*, %struct.sk_buff*, %struct.tcmsg*, i1)*, i32 (%struct.net*, %struct.tcf_proto*, i8*, %struct.sk_buff*, %struct.tcmsg*, i1)*, i32 (%struct.sk_buff*, %struct.net*, i8*)*, %struct.module*, i32 }
%struct.tcf_walker = type { i32, i32, i32, i8, i64, i32 (%struct.tcf_proto*, i8*, %struct.tcf_walker*)* }
%struct.gnet_dump = type { %struct.spinlock*, %struct.sk_buff*, %struct.nlattr*, i32, i32, i32, i8*, i32, %struct.tc_stats }
%struct.tc_stats = type { i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.qdisc_size_table = type { %struct.callback_head, %struct.list_head, %struct.tc_sizespec, i32, [0 x i16] }
%struct.tc_sizespec = type { i8, i8, i16, i32, i32, i32, i32, i32 }
%struct.net_rate_estimator = type opaque
%struct.gnet_stats_basic_cpu = type { %struct.gnet_stats_basic_packed, %struct.u64_stats_sync }
%struct.qdisc_skb_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.gnet_stats_basic_packed = type { i64, i64 }
%struct.gnet_stats_queue = type { i32, i32, i32, i32, i32 }
%struct.xdp_dev_bulk_queue = type opaque
%union.anon.155 = type { i8* }
%struct.rtnl_link_ops = type { %struct.list_head, i8*, i64, void (%struct.net_device*)*, i32, %struct.nla_policy*, i32 (%struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i32 (%struct.net*, %struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, void (%struct.net_device*, %struct.list_head*)*, i64 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i32 ()*, i32 ()*, i32, %struct.nla_policy*, i32 (%struct.net_device*, %struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i64 (%struct.net_device*, %struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*, %struct.net_device*)*, %struct.net* (%struct.net_device*)*, i64 (%struct.net_device*, i32)*, i32 (%struct.sk_buff*, %struct.net_device*, i32*, i32)* }
%struct.netdev_tc_txq = type { i16, i16 }
%struct.phy_device = type opaque
%struct.sfp_bus = type opaque
%struct.udp_tunnel_nic_info = type { i32 (%struct.net_device*, i32, i32, %struct.udp_tunnel_info*)*, i32 (%struct.net_device*, i32, i32, %struct.udp_tunnel_info*)*, i32 (%struct.net_device*, i32)*, %struct.udp_tunnel_nic_shared*, i32, [4 x %struct.udp_tunnel_nic_table_info] }
%struct.udp_tunnel_info = type { i16, i16, i16, i8 }
%struct.udp_tunnel_nic_shared = type { %struct.udp_tunnel_nic*, %struct.list_head }
%struct.udp_tunnel_nic_table_info = type { i32, i32 }
%struct.udp_tunnel_nic = type opaque
%struct.bpf_xdp_entity = type { %struct.bpf_prog*, %struct.bpf_xdp_link* }
%struct.bpf_xdp_link = type opaque
%struct.ifreq = type { %union.anon.139, %union.anon.140 }
%union.anon.139 = type { [16 x i8] }
%union.anon.140 = type { %struct.ifmap }
%struct.ifmap = type { i64, i64, i16, i8, i8, i8 }
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_info = type { i32, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.ifla_vf_stats = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_guid = type { i32, i64 }
%struct.ndmsg = type { i8, i8, i16, i32, i16, i8, i8 }
%struct.netlink_callback = type { %struct.sk_buff*, %struct.nlmsghdr*, i32 (%struct.sk_buff*, %struct.netlink_callback*)*, i32 (%struct.netlink_callback*)*, i8*, %struct.module*, %struct.netlink_ext_ack*, i16, i16, i32, i32, i32, i8, %union.anon.142 }
%struct.nlmsghdr = type { i32, i16, i16, i32, i32 }
%union.anon.142 = type { [6 x i64] }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%struct.netdev_bpf = type { i32, %union.anon.143 }
%union.anon.143 = type { %struct.anon.144 }
%struct.anon.144 = type { i32, %struct.bpf_prog*, %struct.netlink_ext_ack* }
%struct.xdp_frame = type { i8*, i16, i16, i32, %struct.xdp_mem_info, %struct.net_device* }
%struct.devlink_port = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.devlink*, i32, i8, %struct.spinlock, i32, i32, i8*, %struct.devlink_port_attrs, i8, %struct.delayed_work, %struct.list_head, %struct.mutex }
%struct.devlink = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.devlink_dpipe_headers*, %struct.list_head, %struct.list_head, %struct.list_head, %struct.devlink_ops*, %struct.xarray, %struct.devlink_dev_stats, %struct.device*, %struct.possible_net_t, %struct.mutex, i8, [31 x i8], [0 x i8] }
%struct.devlink_dpipe_headers = type { %struct.devlink_dpipe_header**, i32 }
%struct.devlink_dpipe_header = type { i8*, i32, %struct.devlink_dpipe_field*, i32, i8 }
%struct.devlink_dpipe_field = type { i8*, i32, i32, i32 }
%struct.devlink_ops = type { i32, i64, i64, i32 (%struct.devlink*, i1, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32, i32, i32*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink_port*, i32)*, i32 (%struct.devlink*, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32, i16, %struct.devlink_sb_pool_info*)*, i32 (%struct.devlink*, i32, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink_port*, i32, i16, i32*)*, i32 (%struct.devlink_port*, i32, i16, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink_port*, i32, i16, i32, i16*, i32*)*, i32 (%struct.devlink_port*, i32, i16, i32, i16, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32)*, i32 (%struct.devlink*, i32)*, i32 (%struct.devlink_port*, i32, i16, i32*, i32*)*, i32 (%struct.devlink_port*, i32, i16, i32, i32*, i32*)*, i32 (%struct.devlink*, i16*)*, i32 (%struct.devlink*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i8*)*, i32 (%struct.devlink*, i8, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32*)*, i32 (%struct.devlink*, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_info_req*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_flash_update_params*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap*, i8*)*, void (%struct.devlink*, %struct.devlink_trap*, i8*)*, i32 (%struct.devlink*, %struct.devlink_trap*, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap_group*)*, i32 (%struct.devlink*, %struct.devlink_trap_group*, %struct.devlink_trap_policer*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap_group*, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap_policer*)*, void (%struct.devlink*, %struct.devlink_trap_policer*)*, i32 (%struct.devlink*, %struct.devlink_trap_policer*, i64, i64, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap_policer*, i64*)*, i32 (%struct.devlink*, %struct.devlink_port*, i8*, i32*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_port*, i8*, i32, %struct.netlink_ext_ack*)* }
%struct.devlink_sb_pool_info = type { i32, i32, i32, i32 }
%struct.devlink_info_req = type opaque
%struct.devlink_flash_update_params = type { i8*, i8*, i32 }
%struct.devlink_trap = type { i32, i32, i8, i16, i8*, i16, i32 }
%struct.devlink_trap_group = type { i8*, i16, i8, i32 }
%struct.devlink_trap_policer = type { i32, i64, i64, i64, i64, i64, i64 }
%struct.devlink_dev_stats = type { [6 x i32], [6 x i32] }
%struct.devlink_port_attrs = type { i8, i32, i32, %struct.netdev_phys_item_id, %union.anon.147 }
%union.anon.147 = type { %struct.devlink_port_pci_vf_attrs }
%struct.devlink_port_pci_vf_attrs = type { i32, i16, i16, i8 }
%struct.ip_tunnel_parm = type { [16 x i8], i32, i16, i16, i32, i32, %struct.iphdr }
%struct.iphdr = type { i8, i8, i16, i16, i16, i8, i8, i16, i32, i32 }
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.183, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.pcie_link_state = type opaque
%struct.pci_vpd = type opaque
%union.anon.183 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.mlxsw_driver = type { %struct.list_head, i8*, i64, %struct.mlxsw_fw_rev*, i8*, i32 (%struct.mlxsw_core*, %struct.mlxsw_bus_info*, %struct.netlink_ext_ack*)*, void (%struct.mlxsw_core*)*, i32 (%struct.mlxsw_core*)*, i32 (%struct.mlxsw_core*, i8, i32)*, i32 (%struct.mlxsw_core*, i8, i32, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core*, i8, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core*, i32, i16, %struct.devlink_sb_pool_info*)*, i32 (%struct.mlxsw_core*, i32, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core_port*, i32, i16, i32*)*, i32 (%struct.mlxsw_core_port*, i32, i16, i32, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core_port*, i32, i16, i32, i16*, i32*)*, i32 (%struct.mlxsw_core_port*, i32, i16, i32, i16, i32, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core*, i32)*, i32 (%struct.mlxsw_core*, i32)*, i32 (%struct.mlxsw_core_port*, i32, i16, i32*, i32*)*, i32 (%struct.mlxsw_core_port*, i32, i16, i32, i32*, i32*)*, i32 (%struct.mlxsw_core*, %struct.devlink_trap*, i8*)*, void (%struct.mlxsw_core*, %struct.devlink_trap*, i8*)*, i32 (%struct.mlxsw_core*, %struct.devlink_trap*, i32, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core*, %struct.devlink_trap_group*)*, i32 (%struct.mlxsw_core*, %struct.devlink_trap_group*, %struct.devlink_trap_policer*, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core*, %struct.devlink_trap_policer*)*, void (%struct.mlxsw_core*, %struct.devlink_trap_policer*)*, i32 (%struct.mlxsw_core*, %struct.devlink_trap_policer*, i64, i64, %struct.netlink_ext_ack*)*, i32 (%struct.mlxsw_core*, %struct.devlink_trap_policer*, i64*)*, void (%struct.sk_buff*, %struct.mlxsw_tx_info*)*, i32 (%struct.mlxsw_core*)*, i32 (%struct.mlxsw_core*, %struct.mlxsw_config_profile*, i64*, i64*, i64*)*, i32 (%struct.mlxsw_core*)*, void (%struct.mlxsw_core*)*, void (%struct.mlxsw_core*, %struct.sk_buff*, i8)*, i8, %struct.mlxsw_config_profile*, i8, i8, i8 }
%struct.mlxsw_fw_rev = type { i16, i16, i16, i16 }
%struct.mlxsw_core = type opaque
%struct.mlxsw_bus_info = type { i8*, i8*, %struct.device*, %struct.mlxsw_fw_rev, [208 x i8], [16 x i8], i8 }
%struct.mlxsw_core_port = type opaque
%struct.mlxsw_tx_info = type { i8, i8 }
%struct.mlxsw_config_profile = type { i16, i8, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i8, i16, i16, i16, i8, i16, i8, i32, i8, i8, [8 x %struct.mlxsw_swid_config] }
%struct.mlxsw_swid_config = type { i8, i8, i8 }
%struct.mlxsw_item = type { i16, i16, i16, i8, i8, i8, %union.anon.166, i8* }
%union.anon.166 = type { i16 }
%struct.mlxsw_sp_kvdl_ops = type { i64, i32 (%struct.mlxsw_sp*, i8*)*, void (%struct.mlxsw_sp*, i8*)*, i32 (%struct.mlxsw_sp*, i8*, i32, i32, i32*)*, void (%struct.mlxsw_sp*, i8*, i32, i32, i32)*, i32 (%struct.mlxsw_sp*, i8*, i32, i32, i32*)*, i32 (%struct.mlxsw_sp*, i8*)* }
%struct.mlxsw_sp = type { %struct.mlxsw_sp_port**, %struct.mlxsw_core*, %struct.mlxsw_bus_info*, [6 x i8], i8*, %struct.mlxsw_sp_upper*, %struct.mlxsw_sp_port_mapping**, %struct.mlxsw_sp_sb*, %struct.mlxsw_sp_bridge*, %struct.mlxsw_sp_router*, %struct.mlxsw_sp_mr*, %struct.mlxsw_afa*, %struct.mlxsw_sp_acl*, %struct.mlxsw_sp_fid_core*, %struct.mlxsw_sp_policer_core*, %struct.mlxsw_sp_kvdl*, %struct.mlxsw_sp_nve*, %struct.notifier_block, %struct.mlxsw_sp_ptp_clock*, %struct.mlxsw_sp_ptp_state*, %struct.mlxsw_sp_counter_pool*, %struct.mlxsw_sp_span*, %struct.mlxsw_sp_trap*, %struct.mlxsw_sp_kvdl_ops*, %struct.mlxsw_afa_ops*, %struct.mlxsw_afk_ops*, %struct.mlxsw_sp_mr_tcam_ops*, %struct.mlxsw_sp_acl_rulei_ops*, %struct.mlxsw_sp_acl_tcam_ops*, %struct.mlxsw_sp_nve_ops**, %struct.mlxsw_sp_rif_ops**, %struct.mlxsw_sp_sb_vals*, %struct.mlxsw_sp_sb_ops*, %struct.mlxsw_sp_port_type_speed_ops*, %struct.mlxsw_sp_ptp_ops*, %struct.mlxsw_sp_span_ops*, %struct.mlxsw_sp_policer_core_ops*, %struct.mlxsw_sp_trap_ops*, %struct.mlxsw_listener*, i64, i32 }
%struct.mlxsw_sp_port = type { %struct.net_device*, %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp*, i8, i8, i16, i16, %struct.anon.156, %struct.anon.157, %struct.mlxsw_sp_port_mapping, %struct.anon.158, %struct.mlxsw_sp_port_sample*, %struct.list_head, %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_qdisc_state*, i32, %struct.mlxsw_sp_flow_block*, %struct.mlxsw_sp_flow_block*, %struct.anon.160, i8, i32, i32, %struct.mlxsw_sp_hdroom*, i64 }
%struct.mlxsw_sp_port_pcpu_stats = type { i64, i64, i64, i64, %struct.u64_stats_sync, i32 }
%struct.anon.156 = type { i8 }
%struct.anon.157 = type { %struct.ieee_ets*, %struct.ieee_maxrate*, %struct.ieee_pfc*, i32 }
%struct.ieee_ets = type { i8, i8, i8, [8 x i8], [8 x i8], [8 x i8], [8 x i8], [8 x i8], [8 x i8], [8 x i8] }
%struct.ieee_maxrate = type { [8 x i64] }
%struct.ieee_pfc = type { i8, i8, i8, i16, [8 x i64], [8 x i64] }
%struct.mlxsw_sp_port_mapping = type { i8, i8, i8 }
%struct.anon.158 = type { %struct.rtnl_link_stats64, %struct.mlxsw_sp_port_xstats, %struct.delayed_work }
%struct.mlxsw_sp_port_xstats = type { i64, [16 x i64], [16 x i64], [16 x i64], [8 x i64], [8 x i64] }
%struct.mlxsw_sp_port_sample = type { %struct.psample_group*, i32, i32, i8 }
%struct.psample_group = type { %struct.list_head, %struct.net*, i32, i32, i32, %struct.callback_head }
%struct.mlxsw_sp_port_vlan = type { %struct.list_head, %struct.mlxsw_sp_port*, %struct.mlxsw_sp_fid*, i16, %struct.mlxsw_sp_bridge_port*, %struct.list_head }
%struct.mlxsw_sp_fid = type opaque
%struct.mlxsw_sp_bridge_port = type opaque
%struct.mlxsw_sp_qdisc_state = type opaque
%struct.mlxsw_sp_flow_block = type { %struct.list_head, %struct.anon.159, %struct.mlxsw_sp_acl_ruleset*, %struct.mlxsw_sp*, i32, i32, i32, i32, i32, i32, %struct.net* }
%struct.anon.159 = type { %struct.list_head, i32, i32 }
%struct.mlxsw_sp_acl_ruleset = type opaque
%struct.anon.160 = type { %struct.delayed_work, %struct.hwtstamp_config, i16, i16, %struct.mlxsw_sp_ptp_port_stats }
%struct.hwtstamp_config = type { i32, i32, i32 }
%struct.mlxsw_sp_ptp_port_stats = type { %struct.mlxsw_sp_ptp_port_dir_stats, %struct.mlxsw_sp_ptp_port_dir_stats }
%struct.mlxsw_sp_ptp_port_dir_stats = type { i64, i64 }
%struct.mlxsw_sp_hdroom = type { i32, %struct.anon.161, %struct.anon.162, %struct.anon.163, i32, i32 }
%struct.anon.161 = type { [8 x %struct.mlxsw_sp_hdroom_prio] }
%struct.mlxsw_sp_hdroom_prio = type { i8, i8, i8, i8 }
%struct.anon.162 = type { [10 x %struct.mlxsw_sp_hdroom_buf] }
%struct.mlxsw_sp_hdroom_buf = type { i32, i32, i32, i8 }
%struct.anon.163 = type { i32, i32, i8 }
%struct.mlxsw_sp_upper = type { %struct.net_device*, i32 }
%struct.mlxsw_sp_sb = type opaque
%struct.mlxsw_sp_bridge = type opaque
%struct.mlxsw_sp_router = type { %struct.mlxsw_sp*, %struct.mlxsw_sp_rif**, %struct.mlxsw_sp_vr*, %struct.rhashtable, %struct.rhashtable, %struct.rhashtable, %struct.list_head, %struct.anon.164, %struct.anon.165, %struct.delayed_work, %struct.list_head, %struct.list_head, i8, %struct.notifier_block, %struct.notifier_block, %struct.notifier_block, %struct.notifier_block, %struct.mlxsw_sp_rif_ops**, %struct.mlxsw_sp_ipip_ops**, i32, i8, %struct.mlxsw_sp_router_nve_decap, %struct.mutex }
%struct.mlxsw_sp_rif = type opaque
%struct.mlxsw_sp_vr = type opaque
%struct.anon.164 = type { [2 x %struct.mlxsw_sp_lpm_tree*], %struct.mlxsw_sp_lpm_tree*, i32 }
%struct.mlxsw_sp_lpm_tree = type opaque
%struct.anon.165 = type { %struct.delayed_work, i64 }
%struct.mlxsw_sp_ipip_ops = type opaque
%struct.mlxsw_sp_router_nve_decap = type { i32, i32, i32, %union.mlxsw_sp_l3addr, i8 }
%union.mlxsw_sp_l3addr = type { %struct.in6_addr }
%struct.mlxsw_sp_mr = type opaque
%struct.mlxsw_afa = type opaque
%struct.mlxsw_sp_acl = type opaque
%struct.mlxsw_sp_fid_core = type opaque
%struct.mlxsw_sp_policer_core = type opaque
%struct.mlxsw_sp_kvdl = type opaque
%struct.mlxsw_sp_nve = type opaque
%struct.mlxsw_sp_ptp_clock = type opaque
%struct.mlxsw_sp_ptp_state = type opaque
%struct.mlxsw_sp_counter_pool = type opaque
%struct.mlxsw_sp_span = type opaque
%struct.mlxsw_sp_trap = type { %struct.mlxsw_sp_trap_policer_item*, i64, %struct.mlxsw_sp_trap_group_item*, i64, %struct.mlxsw_sp_trap_item*, i64, i16, i64, [0 x i64] }
%struct.mlxsw_sp_trap_policer_item = type opaque
%struct.mlxsw_sp_trap_group_item = type opaque
%struct.mlxsw_sp_trap_item = type opaque
%struct.mlxsw_afa_ops = type { i32 (i8*, i32*, i8*, i1)*, void (i8*, i32, i1)*, i32 (i8*, i32, i8*)*, i32 (i8*, i32*, i8)*, void (i8*, i32)*, i32 (i8*, i32*)*, void (i8*, i32)*, i32 (i8*, i8, %struct.net_device*, i1, i32*)*, void (i8*, i8, i32, i1)*, i32 (i8*, i64, i32, i16*, %struct.netlink_ext_ack*)*, void (i8*, i16)*, i8 }
%struct.mlxsw_afk_ops = type { %struct.mlxsw_afk_block*, i32, void (i8*, i32, i8*)*, void (i8*, i32)* }
%struct.mlxsw_afk_block = type { i16, %struct.mlxsw_afk_element_inst*, i32 }
%struct.mlxsw_afk_element_inst = type { i32, i32, %struct.mlxsw_item, i32, i8 }
%struct.mlxsw_sp_mr_tcam_ops = type { i64, i32 (%struct.mlxsw_sp*, i8*)*, void (i8*)*, i64, i32 (%struct.mlxsw_sp*, i8*, i8*, %struct.mlxsw_sp_mr_route_key*, %struct.mlxsw_afa_block*, i32)*, void (%struct.mlxsw_sp*, i8*, i8*, %struct.mlxsw_sp_mr_route_key*)*, i32 (%struct.mlxsw_sp*, i8*, %struct.mlxsw_sp_mr_route_key*, %struct.mlxsw_afa_block*)* }
%struct.mlxsw_sp_mr_route_key = type opaque
%struct.mlxsw_afa_block = type opaque
%struct.mlxsw_sp_acl_rulei_ops = type { i32 (%struct.mlxsw_sp*, %struct.mlxsw_sp_acl_rule_info*, %struct.mlxsw_sp_acl_mangle_action*, i32, %struct.netlink_ext_ack*)* }
%struct.mlxsw_sp_acl_rule_info = type { i32, %struct.mlxsw_afk_element_values, %struct.mlxsw_afa_block*, i8, i32, i16 }
%struct.mlxsw_afk_element_values = type { %struct.mlxsw_afk_element_usage, %struct.anon.167 }
%struct.mlxsw_afk_element_usage = type { [1 x i64] }
%struct.anon.167 = type { [64 x i8], [64 x i8] }
%struct.mlxsw_sp_acl_mangle_action = type opaque
%struct.mlxsw_sp_acl_tcam_ops = type { i32, i64, i32 (%struct.mlxsw_sp*, i8*, %struct.mlxsw_sp_acl_tcam*)*, void (%struct.mlxsw_sp*, i8*)*, i64, i32 (%struct.mlxsw_sp*, i8*, i8*, %struct.mlxsw_sp_acl_tcam_region*, i8*)*, void (%struct.mlxsw_sp*, i8*)*, i32 (%struct.mlxsw_sp*, %struct.mlxsw_sp_acl_tcam_region*)*, i8* (i8*)*, void (i8*)*, i64, void (i8*, i8*, i32)*, void (i8*)*, i64, i32 (%struct.mlxsw_sp*, i8*, i8*, i8*, %struct.mlxsw_sp_acl_rule_info*)*, void (%struct.mlxsw_sp*, i8*, i8*, i8*)*, i32 (%struct.mlxsw_sp*, i8*, i8*, %struct.mlxsw_sp_acl_rule_info*)*, i32 (%struct.mlxsw_sp*, i8*, i8*, i8*)* }
%struct.mlxsw_sp_acl_tcam = type opaque
%struct.mlxsw_sp_acl_tcam_region = type opaque
%struct.mlxsw_sp_nve_ops = type opaque
%struct.mlxsw_sp_rif_ops = type opaque
%struct.mlxsw_sp_sb_vals = type opaque
%struct.mlxsw_sp_sb_ops = type opaque
%struct.mlxsw_sp_port_type_speed_ops = type { void (%struct.mlxsw_sp*, i32, %struct.ethtool_link_ksettings*)*, void (%struct.mlxsw_sp*, i32, i8, i64*)*, i32 (%struct.mlxsw_sp*, i32)*, void (%struct.mlxsw_sp*, i1, i32, %struct.ethtool_link_ksettings*)*, i32 (%struct.mlxsw_sp_port*, i32*)*, i32 (%struct.mlxsw_sp*, i8, %struct.ethtool_link_ksettings*)*, i32 (%struct.mlxsw_sp*, i8, i32)*, void (%struct.mlxsw_sp*, i8*, i8, i32, i1)*, void (%struct.mlxsw_sp*, i8*, i32*, i32*, i32*)*, i32 (i32)* }
%struct.mlxsw_sp_ptp_ops = type { %struct.mlxsw_sp_ptp_clock* (%struct.mlxsw_sp*, %struct.device*)*, void (%struct.mlxsw_sp_ptp_clock*)*, %struct.mlxsw_sp_ptp_state* (%struct.mlxsw_sp*)*, void (%struct.mlxsw_sp_ptp_state*)*, void (%struct.mlxsw_sp*, %struct.sk_buff*, i8)*, void (%struct.mlxsw_sp*, %struct.sk_buff*, i8)*, i32 (%struct.mlxsw_sp_port*, %struct.hwtstamp_config*)*, i32 (%struct.mlxsw_sp_port*, %struct.hwtstamp_config*)*, void (%struct.work_struct*)*, i32 (%struct.mlxsw_sp*, %struct.ethtool_ts_info*)*, i32 ()*, void (i8**)*, void (%struct.mlxsw_sp_port*, i64*, i32)* }
%struct.mlxsw_sp_span_ops = type { i32 (%struct.mlxsw_sp*)*, i32 (%struct.mlxsw_sp*, i16)* }
%struct.mlxsw_sp_policer_core_ops = type opaque
%struct.mlxsw_sp_trap_ops = type { i32 (%struct.mlxsw_sp*, %struct.mlxsw_sp_trap_group_item**, i64*)*, i32 (%struct.mlxsw_sp*, %struct.mlxsw_sp_trap_item**, i64*)* }
%struct.mlxsw_listener = type { i16, %union.anon.168, i32, i32, i8, i8, i8 }
%union.anon.168 = type { %struct.mlxsw_rx_listener }
%struct.mlxsw_rx_listener = type { void (%struct.sk_buff*, i8, i8*)*, i8, i8, i16 }
%struct.mlxsw_event_listener = type { void (%struct.mlxsw_reg_info*, i8*, i8*)*, i32 }
%struct.devlink_param = type { i32, i8*, i8, i32, i64, i32 (%struct.devlink*, i32, %struct.devlink_param_gset_ctx*)*, i32 (%struct.devlink*, i32, %struct.devlink_param_gset_ctx*)*, i32 (%struct.devlink*, i32, %union.devlink_param_value*, %struct.netlink_ext_ack*)* }
%struct.devlink_param_gset_ctx = type { %union.devlink_param_value, i32 }
%union.devlink_param_value = type { i32, [28 x i8] }
%struct.netdev_nested_priv = type { i8, i8* }
%struct.flow_block_offload = type { i32, i32, i8, i8, %struct.net*, %struct.flow_block*, %struct.list_head, %struct.list_head*, %struct.netlink_ext_ack*, %struct.Qdisc* }
%struct.tc_red_qopt_offload = type { i32, i32, i32, %union.anon.184 }
%union.anon.184 = type { %struct.tc_red_qopt_offload_params }
%struct.tc_red_qopt_offload_params = type { i32, i32, i32, i32, i8, i8, i8, %struct.gnet_stats_queue* }
%struct.tc_prio_qopt_offload = type { i32, i32, i32, %union.anon.185 }
%union.anon.185 = type { %struct.tc_prio_qopt_offload_params }
%struct.tc_prio_qopt_offload_params = type { i32, [16 x i8], %struct.gnet_stats_queue* }
%struct.tc_ets_qopt_offload = type { i32, i32, i32, %union.anon.186 }
%union.anon.186 = type { %struct.tc_ets_qopt_offload_replace_params }
%struct.tc_ets_qopt_offload_replace_params = type { i32, [16 x i8], [16 x i32], [16 x i32], %struct.gnet_stats_queue* }
%struct.tc_tbf_qopt_offload = type { i32, i32, i32, %union.anon.187 }
%union.anon.187 = type { %struct.tc_tbf_qopt_offload_replace_params }
%struct.tc_tbf_qopt_offload_replace_params = type { %struct.psched_ratecfg, i32, %struct.gnet_stats_queue* }
%struct.psched_ratecfg = type { i64, i32, i16, i8, i8 }
%struct.tc_fifo_qopt_offload = type { i32, i32, i32, %union.anon.188 }
%union.anon.188 = type { %struct.tc_qopt_offload_stats }
%struct.tc_qopt_offload_stats = type { %struct.gnet_stats_basic_packed*, %struct.gnet_stats_queue* }
%struct.skb_shared_info = type { i8, i8, i8, i8, i16, i16, %struct.sk_buff*, %struct.skb_shared_hwtstamps, i32, i32, %struct.atomic_t, i8*, [17 x %struct.bio_vec] }
%struct.skb_shared_hwtstamps = type { i64 }
%struct.devlink_resource = type { i8*, i64, i64, i64, i8, %struct.devlink_resource*, %struct.devlink_resource_size_params, %struct.list_head, %struct.list_head, i64 (i8*)*, i8* }
%struct.devlink_resource_size_params = type { i64, i64, i64, i32 }
%struct.mlxsw_sp_span_entry = type { %struct.net_device*, %struct.mlxsw_sp_span_entry_ops*, %struct.mlxsw_sp_span_parms, %struct.refcount_struct, i32 }
%struct.mlxsw_sp_span_entry_ops = type { i1 (%struct.net_device*)*, i32 (%struct.mlxsw_sp*, %struct.net_device*, %struct.mlxsw_sp_span_parms*)*, i32 (%struct.mlxsw_sp_span_entry*, %struct.mlxsw_sp_span_parms*)*, void (%struct.mlxsw_sp_span_entry*)* }
%struct.mlxsw_sp_span_parms = type { %struct.mlxsw_sp_port*, i32, [6 x i8], [6 x i8], %union.mlxsw_sp_l3addr, %union.mlxsw_sp_l3addr, i16, i16, i8 }
%struct.netdev_notifier_info = type { %struct.net_device*, %struct.netlink_ext_ack* }
%struct.netdev_notifier_changeupper_info = type { %struct.netdev_notifier_info, %struct.net_device*, i8, i8, i8* }
%struct.__una_u32 = type { i32 }
%struct.bridge_vlan_info = type { i16, i16 }
%struct.netdev_lag_upper_info = type { i32, i32 }
%struct.netdev_notifier_changelowerstate_info = type { %struct.netdev_notifier_info, i8* }
%struct.netdev_lag_lower_state_info = type { i8 }

@mlxsw_reg_mgpc = internal constant %struct.mlxsw_reg_info { i16 -28543, i16 24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0) }, align 8, !dbg !0
@.str = private unnamed_addr constant [47 x i8] c"drivers/net/ethernet/mellanox/mlxsw/spectrum.c\00", align 1
@mlxsw_reg_spms = internal constant %struct.mlxsw_reg_info { i16 8205, i16 1028, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i32 0, i32 0) }, align 8, !dbg !11597
@mlxsw_reg_paos = internal constant %struct.mlxsw_reg_info { i16 20486, i16 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i32 0, i32 0) }, align 8, !dbg !11613
@mlxsw_reg_svpe = internal constant %struct.mlxsw_reg_info { i16 8222, i16 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i32 0, i32 0) }, align 8, !dbg !11619
@mlxsw_reg_spvmlr = internal constant %struct.mlxsw_reg_info { i16 8224, i16 1024, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i32 0, i32 0) }, align 8, !dbg !11629
@mlxsw_reg_ppcnt = internal constant %struct.mlxsw_reg_info { i16 20488, i16 256, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.78, i32 0, i32 0) }, align 8, !dbg !11659
@mlxsw_reg_ptys = internal constant %struct.mlxsw_reg_info { i16 20484, i16 64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.92, i32 0, i32 0) }, align 8, !dbg !11675
@mlxsw_reg_qeec = internal constant %struct.mlxsw_reg_info { i16 16397, i16 32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.107, i32 0, i32 0) }, align 8, !dbg !11691
@mlxsw_reg_qtct = internal constant %struct.mlxsw_reg_info { i16 16394, i16 8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.120, i32 0, i32 0) }, align 8, !dbg !11705
@mlxsw_sp_rx_listener_no_mark_func._rs = internal global %struct.ratelimit_state { %struct.raw_spinlock undef, i32 1250, i32 10, i32 0, i32 0, i64 0, i64 0 }, align 8, !dbg !11540
@__func__.mlxsw_sp_rx_listener_no_mark_func = private unnamed_addr constant [34 x i8] c"mlxsw_sp_rx_listener_no_mark_func\00", align 1
@.str.1 = private unnamed_addr constant [45 x i8] c"Port %d: skb received for non-existent port\0A\00", align 1
@mlxsw_sp_sample_receive._rs = internal global %struct.ratelimit_state { %struct.raw_spinlock undef, i32 1250, i32 10, i32 0, i32 0, i64 0, i64 0 }, align 8, !dbg !11543
@__func__.mlxsw_sp_sample_receive = private unnamed_addr constant [24 x i8] c"mlxsw_sp_sample_receive\00", align 1
@.str.2 = private unnamed_addr constant [52 x i8] c"Port %d: sample skb received for non-existent port\0A\00", align 1
@mlxsw_sp_port_netdev_ops = internal constant %struct.net_device_ops { i32 (%struct.net_device*)* null, void (%struct.net_device*)* null, i32 (%struct.net_device*)* @mlxsw_sp_port_open, i32 (%struct.net_device*)* @mlxsw_sp_port_stop, i32 (%struct.sk_buff*, %struct.net_device*)* @mlxsw_sp_port_xmit, i64 (%struct.sk_buff*, %struct.net_device*, i64)* null, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)* null, void (%struct.net_device*, i32)* null, void (%struct.net_device*)* @mlxsw_sp_set_rx_mode, i32 (%struct.net_device*, i8*)* @mlxsw_sp_port_set_mac_address, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, %struct.ifreq*, i32)* @mlxsw_sp_port_ioctl, i32 (%struct.net_device*, %struct.ifmap*)* null, i32 (%struct.net_device*, i32)* @mlxsw_sp_port_change_mtu, i32 (%struct.net_device*, %struct.neigh_parms*)* null, void (%struct.net_device*, i32)* null, void (%struct.net_device*, %struct.rtnl_link_stats64*)* @mlxsw_sp_port_get_stats64, i1 (%struct.net_device*, i32)* @mlxsw_sp_port_has_offload_stats, i32 (i32, %struct.net_device*, i8*)* @mlxsw_sp_port_get_offload_stats, %struct.net_device_stats* (%struct.net_device*)* null, i32 (%struct.net_device*, i16, i16)* @mlxsw_sp_port_add_vid, i32 (%struct.net_device*, i16, i16)* @mlxsw_sp_port_kill_vid, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, i32, i16, i8, i16)* null, i32 (%struct.net_device*, i32, i32, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)* null, i32 (%struct.net_device*, i32, %struct.nlattr**)* null, i32 (%struct.net_device*, i32, %struct.sk_buff*)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)* null, i32 (%struct.net_device*, i32, i64, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i8*)* @mlxsw_sp_setup_tc, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.net_device*)* null, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)* null, i64 (%struct.net_device*, i64)* null, i32 (%struct.net_device*, i64)* @mlxsw_sp_set_features, i32 (%struct.net_device*, %struct.neighbour*)* null, void (%struct.net_device*, %struct.neighbour*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)* null, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)* null, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, i8*, i64)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, i8* (%struct.net_device*, %struct.net_device*)* null, void (%struct.net_device*, i8*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.sk_buff*)* null, void (%struct.net_device*, i32)* null, i32 (%struct.net_device*, %struct.netdev_bpf*)* null, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)* null, i32 (%struct.net_device*, i32, i32)* null, %struct.devlink_port* (%struct.net_device*)* @mlxsw_sp_port_get_devlink_port, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)* null, %struct.net_device* (%struct.net_device*)* null }, align 8, !dbg !11707
@mlxsw_sp3_pci_driver = internal global %struct.pci_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @mlxsw_sp3_driver_name, i32 0, i32 0), %struct.pci_device_id* getelementptr inbounds ([2 x %struct.pci_device_id], [2 x %struct.pci_device_id]* @mlxsw_sp3_pci_id_table, i32 0, i32 0), i32 (%struct.pci_dev*, %struct.pci_device_id*)* null, void (%struct.pci_dev*)* null, i32 (%struct.pci_dev*, i32)* null, i32 (%struct.pci_dev*)* null, void (%struct.pci_dev*)* null, i32 (%struct.pci_dev*, i32)* null, %struct.pci_error_handlers* null, %struct.attribute_group** null, %struct.device_driver zeroinitializer, %struct.pci_dynids zeroinitializer }, align 8, !dbg !11747
@mlxsw_sp2_pci_driver = internal global %struct.pci_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @mlxsw_sp2_driver_name, i32 0, i32 0), %struct.pci_device_id* getelementptr inbounds ([2 x %struct.pci_device_id], [2 x %struct.pci_device_id]* @mlxsw_sp2_pci_id_table, i32 0, i32 0), i32 (%struct.pci_dev*, %struct.pci_device_id*)* null, void (%struct.pci_dev*)* null, i32 (%struct.pci_dev*, i32)* null, i32 (%struct.pci_dev*)* null, void (%struct.pci_dev*)* null, i32 (%struct.pci_dev*, i32)* null, %struct.pci_error_handlers* null, %struct.attribute_group** null, %struct.device_driver zeroinitializer, %struct.pci_dynids zeroinitializer }, align 8, !dbg !12025
@mlxsw_sp1_pci_driver = internal global %struct.pci_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @mlxsw_sp1_driver_name, i32 0, i32 0), %struct.pci_device_id* getelementptr inbounds ([2 x %struct.pci_device_id], [2 x %struct.pci_device_id]* @mlxsw_sp1_pci_id_table, i32 0, i32 0), i32 (%struct.pci_dev*, %struct.pci_device_id*)* null, void (%struct.pci_dev*)* null, i32 (%struct.pci_dev*, i32)* null, i32 (%struct.pci_dev*)* null, void (%struct.pci_dev*)* null, i32 (%struct.pci_dev*, i32)* null, %struct.pci_error_handlers* null, %struct.attribute_group** null, %struct.device_driver zeroinitializer, %struct.pci_dynids zeroinitializer }, align 8, !dbg !12031
@mlxsw_sp3_driver = internal global %struct.mlxsw_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @mlxsw_sp3_driver_name, i32 0, i32 0), i64 344, %struct.mlxsw_fw_rev* @mlxsw_sp3_fw_rev, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.163, i32 0, i32 0), i32 (%struct.mlxsw_core*, %struct.mlxsw_bus_info*, %struct.netlink_ext_ack*)* @mlxsw_sp3_init, void (%struct.mlxsw_core*)* @mlxsw_sp_fini, i32 (%struct.mlxsw_core*)* @mlxsw_sp_basic_trap_groups_set, i32 (%struct.mlxsw_core*, i8, i32)* null, i32 (%struct.mlxsw_core*, i8, i32, %struct.netlink_ext_ack*)* @mlxsw_sp_port_split, i32 (%struct.mlxsw_core*, i8, %struct.netlink_ext_ack*)* @mlxsw_sp_port_unsplit, i32 (%struct.mlxsw_core*, i32, i16, %struct.devlink_sb_pool_info*)* @mlxsw_sp_sb_pool_get, i32 (%struct.mlxsw_core*, i32, i16, i32, i32, %struct.netlink_ext_ack*)* @mlxsw_sp_sb_pool_set, i32 (%struct.mlxsw_core_port*, i32, i16, i32*)* @mlxsw_sp_sb_port_pool_get, i32 (%struct.mlxsw_core_port*, i32, i16, i32, %struct.netlink_ext_ack*)* @mlxsw_sp_sb_port_pool_set, i32 (%struct.mlxsw_core_port*, i32, i16, i32, i16*, i32*)* @mlxsw_sp_sb_tc_pool_bind_get, i32 (%struct.mlxsw_core_port*, i32, i16, i32, i16, i32, %struct.netlink_ext_ack*)* @mlxsw_sp_sb_tc_pool_bind_set, i32 (%struct.mlxsw_core*, i32)* @mlxsw_sp_sb_occ_snapshot, i32 (%struct.mlxsw_core*, i32)* @mlxsw_sp_sb_occ_max_clear, i32 (%struct.mlxsw_core_port*, i32, i16, i32*, i32*)* @mlxsw_sp_sb_occ_port_pool_get, i32 (%struct.mlxsw_core_port*, i32, i16, i32, i32*, i32*)* @mlxsw_sp_sb_occ_tc_port_bind_get, i32 (%struct.mlxsw_core*, %struct.devlink_trap*, i8*)* @mlxsw_sp_trap_init, void (%struct.mlxsw_core*, %struct.devlink_trap*, i8*)* @mlxsw_sp_trap_fini, i32 (%struct.mlxsw_core*, %struct.devlink_trap*, i32, %struct.netlink_ext_ack*)* @mlxsw_sp_trap_action_set, i32 (%struct.mlxsw_core*, %struct.devlink_trap_group*)* @mlxsw_sp_trap_group_init, i32 (%struct.mlxsw_core*, %struct.devlink_trap_group*, %struct.devlink_trap_policer*, %struct.netlink_ext_ack*)* @mlxsw_sp_trap_group_set, i32 (%struct.mlxsw_core*, %struct.devlink_trap_policer*)* @mlxsw_sp_trap_policer_init, void (%struct.mlxsw_core*, %struct.devlink_trap_policer*)* @mlxsw_sp_trap_policer_fini, i32 (%struct.mlxsw_core*, %struct.devlink_trap_policer*, i64, i64, %struct.netlink_ext_ack*)* @mlxsw_sp_trap_policer_set, i32 (%struct.mlxsw_core*, %struct.devlink_trap_policer*, i64*)* @mlxsw_sp_trap_policer_counter_get, void (%struct.sk_buff*, %struct.mlxsw_tx_info*)* @mlxsw_sp_txhdr_construct, i32 (%struct.mlxsw_core*)* @mlxsw_sp2_resources_register, i32 (%struct.mlxsw_core*, %struct.mlxsw_config_profile*, i64*, i64*, i64*)* null, i32 (%struct.mlxsw_core*)* @mlxsw_sp2_params_register, void (%struct.mlxsw_core*)* @mlxsw_sp2_params_unregister, void (%struct.mlxsw_core*, %struct.sk_buff*, i8)* @mlxsw_sp_ptp_transmitted, i8 16, %struct.mlxsw_config_profile* bitcast ({ i8, i8, i8, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i8, i16, i16, i16, i8, i16, i8, i32, i8, i8, [8 x %struct.mlxsw_swid_config] }* @mlxsw_sp2_config_profile to %struct.mlxsw_config_profile*), i8 1, i8 1, i8 1 }, align 8, !dbg !12038
@mlxsw_sp2_driver = internal global %struct.mlxsw_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @mlxsw_sp2_driver_name, i32 0, i32 0), i64 344, %struct.mlxsw_fw_rev* @mlxsw_sp2_fw_rev, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.387, i32 0, i32 0), i32 (%struct.mlxsw_core*, %struct.mlxsw_bus_info*, %struct.netlink_ext_ack*)* @mlxsw_sp2_init, void (%struct.mlxsw_core*)* @mlxsw_sp_fini, i32 (%struct.mlxsw_core*)* @mlxsw_sp_basic_trap_groups_set, i32 (%struct.mlxsw_core*, i8, i32)* null, i32 (%struct.mlxsw_core*, i8, i32, %struct.netlink_ext_ack*)* @mlxsw_sp_port_split, i32 (%struct.mlxsw_core*, i8, %struct.netlink_ext_ack*)* @mlxsw_sp_port_unsplit, i32 (%struct.mlxsw_core*, i32, i16, %struct.devlink_sb_pool_info*)* @mlxsw_sp_sb_pool_get, i32 (%struct.mlxsw_core*, i32, i16, i32, i32, %struct.netlink_ext_ack*)* @mlxsw_sp_sb_pool_set, i32 (%struct.mlxsw_core_port*, i32, i16, i32*)* @mlxsw_sp_sb_port_pool_get, i32 (%struct.mlxsw_core_port*, i32, i16, i32, %struct.netlink_ext_ack*)* @mlxsw_sp_sb_port_pool_set, i32 (%struct.mlxsw_core_port*, i32, i16, i32, i16*, i32*)* @mlxsw_sp_sb_tc_pool_bind_get, i32 (%struct.mlxsw_core_port*, i32, i16, i32, i16, i32, %struct.netlink_ext_ack*)* @mlxsw_sp_sb_tc_pool_bind_set, i32 (%struct.mlxsw_core*, i32)* @mlxsw_sp_sb_occ_snapshot, i32 (%struct.mlxsw_core*, i32)* @mlxsw_sp_sb_occ_max_clear, i32 (%struct.mlxsw_core_port*, i32, i16, i32*, i32*)* @mlxsw_sp_sb_occ_port_pool_get, i32 (%struct.mlxsw_core_port*, i32, i16, i32, i32*, i32*)* @mlxsw_sp_sb_occ_tc_port_bind_get, i32 (%struct.mlxsw_core*, %struct.devlink_trap*, i8*)* @mlxsw_sp_trap_init, void (%struct.mlxsw_core*, %struct.devlink_trap*, i8*)* @mlxsw_sp_trap_fini, i32 (%struct.mlxsw_core*, %struct.devlink_trap*, i32, %struct.netlink_ext_ack*)* @mlxsw_sp_trap_action_set, i32 (%struct.mlxsw_core*, %struct.devlink_trap_group*)* @mlxsw_sp_trap_group_init, i32 (%struct.mlxsw_core*, %struct.devlink_trap_group*, %struct.devlink_trap_policer*, %struct.netlink_ext_ack*)* @mlxsw_sp_trap_group_set, i32 (%struct.mlxsw_core*, %struct.devlink_trap_policer*)* @mlxsw_sp_trap_policer_init, void (%struct.mlxsw_core*, %struct.devlink_trap_policer*)* @mlxsw_sp_trap_policer_fini, i32 (%struct.mlxsw_core*, %struct.devlink_trap_policer*, i64, i64, %struct.netlink_ext_ack*)* @mlxsw_sp_trap_policer_set, i32 (%struct.mlxsw_core*, %struct.devlink_trap_policer*, i64*)* @mlxsw_sp_trap_policer_counter_get, void (%struct.sk_buff*, %struct.mlxsw_tx_info*)* @mlxsw_sp_txhdr_construct, i32 (%struct.mlxsw_core*)* @mlxsw_sp2_resources_register, i32 (%struct.mlxsw_core*, %struct.mlxsw_config_profile*, i64*, i64*, i64*)* null, i32 (%struct.mlxsw_core*)* @mlxsw_sp2_params_register, void (%struct.mlxsw_core*)* @mlxsw_sp2_params_unregister, void (%struct.mlxsw_core*, %struct.sk_buff*, i8)* @mlxsw_sp_ptp_transmitted, i8 16, %struct.mlxsw_config_profile* bitcast ({ i8, i8, i8, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i8, i16, i16, i16, i8, i16, i8, i32, i8, i8, [8 x %struct.mlxsw_swid_config] }* @mlxsw_sp2_config_profile to %struct.mlxsw_config_profile*), i8 1, i8 1, i8 1 }, align 8, !dbg !12538
@mlxsw_sp1_driver = internal global %struct.mlxsw_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @mlxsw_sp1_driver_name, i32 0, i32 0), i64 344, %struct.mlxsw_fw_rev* @mlxsw_sp1_fw_rev, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.388, i32 0, i32 0), i32 (%struct.mlxsw_core*, %struct.mlxsw_bus_info*, %struct.netlink_ext_ack*)* @mlxsw_sp1_init, void (%struct.mlxsw_core*)* @mlxsw_sp_fini, i32 (%struct.mlxsw_core*)* @mlxsw_sp_basic_trap_groups_set, i32 (%struct.mlxsw_core*, i8, i32)* null, i32 (%struct.mlxsw_core*, i8, i32, %struct.netlink_ext_ack*)* @mlxsw_sp_port_split, i32 (%struct.mlxsw_core*, i8, %struct.netlink_ext_ack*)* @mlxsw_sp_port_unsplit, i32 (%struct.mlxsw_core*, i32, i16, %struct.devlink_sb_pool_info*)* @mlxsw_sp_sb_pool_get, i32 (%struct.mlxsw_core*, i32, i16, i32, i32, %struct.netlink_ext_ack*)* @mlxsw_sp_sb_pool_set, i32 (%struct.mlxsw_core_port*, i32, i16, i32*)* @mlxsw_sp_sb_port_pool_get, i32 (%struct.mlxsw_core_port*, i32, i16, i32, %struct.netlink_ext_ack*)* @mlxsw_sp_sb_port_pool_set, i32 (%struct.mlxsw_core_port*, i32, i16, i32, i16*, i32*)* @mlxsw_sp_sb_tc_pool_bind_get, i32 (%struct.mlxsw_core_port*, i32, i16, i32, i16, i32, %struct.netlink_ext_ack*)* @mlxsw_sp_sb_tc_pool_bind_set, i32 (%struct.mlxsw_core*, i32)* @mlxsw_sp_sb_occ_snapshot, i32 (%struct.mlxsw_core*, i32)* @mlxsw_sp_sb_occ_max_clear, i32 (%struct.mlxsw_core_port*, i32, i16, i32*, i32*)* @mlxsw_sp_sb_occ_port_pool_get, i32 (%struct.mlxsw_core_port*, i32, i16, i32, i32*, i32*)* @mlxsw_sp_sb_occ_tc_port_bind_get, i32 (%struct.mlxsw_core*, %struct.devlink_trap*, i8*)* @mlxsw_sp_trap_init, void (%struct.mlxsw_core*, %struct.devlink_trap*, i8*)* @mlxsw_sp_trap_fini, i32 (%struct.mlxsw_core*, %struct.devlink_trap*, i32, %struct.netlink_ext_ack*)* @mlxsw_sp_trap_action_set, i32 (%struct.mlxsw_core*, %struct.devlink_trap_group*)* @mlxsw_sp_trap_group_init, i32 (%struct.mlxsw_core*, %struct.devlink_trap_group*, %struct.devlink_trap_policer*, %struct.netlink_ext_ack*)* @mlxsw_sp_trap_group_set, i32 (%struct.mlxsw_core*, %struct.devlink_trap_policer*)* @mlxsw_sp_trap_policer_init, void (%struct.mlxsw_core*, %struct.devlink_trap_policer*)* @mlxsw_sp_trap_policer_fini, i32 (%struct.mlxsw_core*, %struct.devlink_trap_policer*, i64, i64, %struct.netlink_ext_ack*)* @mlxsw_sp_trap_policer_set, i32 (%struct.mlxsw_core*, %struct.devlink_trap_policer*, i64*)* @mlxsw_sp_trap_policer_counter_get, void (%struct.sk_buff*, %struct.mlxsw_tx_info*)* @mlxsw_sp_txhdr_construct, i32 (%struct.mlxsw_core*)* @mlxsw_sp1_resources_register, i32 (%struct.mlxsw_core*, %struct.mlxsw_config_profile*, i64*, i64*, i64*)* @mlxsw_sp_kvd_sizes_get, i32 (%struct.mlxsw_core*)* null, void (%struct.mlxsw_core*)* null, void (%struct.mlxsw_core*, %struct.sk_buff*, i8)* @mlxsw_sp_ptp_transmitted, i8 16, %struct.mlxsw_config_profile* bitcast ({ i8, i8, i8, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i8, i16, i16, i16, i8, i16, i8, i32, i8, i8, [8 x %struct.mlxsw_swid_config] }* @mlxsw_sp1_config_profile to %struct.mlxsw_config_profile*), i8 1, i8 1, i8 1 }, align 8, !dbg !12542
@mlxsw_sp_inet6addr_valid_nb = internal global %struct.notifier_block { i32 (%struct.notifier_block*, i64, i8*)* @mlxsw_sp_inet6addr_valid_event, %struct.notifier_block* null, i32 0 }, section ".data..read_mostly", align 8, !dbg !12569
@mlxsw_sp_inetaddr_valid_nb = internal global %struct.notifier_block { i32 (%struct.notifier_block*, i64, i8*)* @mlxsw_sp_inetaddr_valid_event, %struct.notifier_block* null, i32 0 }, section ".data..read_mostly", align 8, !dbg !12571
@__UNIQUE_ID___addressable_mlxsw_sp_module_init668 = internal global i8* bitcast (i32 ()* @mlxsw_sp_module_init to i8*), section ".discard.addressable", align 8, !dbg !11546
@__exitcall_mlxsw_sp_module_exit = internal global void ()* @mlxsw_sp_module_exit, section ".exitcall.exit", align 8, !dbg !11548
@__UNIQUE_ID_file669 = internal constant [71 x i8] c"mlxsw_spectrum.file=drivers/net/ethernet/mellanox/mlxsw/mlxsw_spectrum\00", section ".modinfo", align 1, !dbg !11553
@__UNIQUE_ID_license670 = internal constant [36 x i8] c"mlxsw_spectrum.license=Dual BSD/GPL\00", section ".modinfo", align 1, !dbg !11558
@__UNIQUE_ID_author671 = internal constant [53 x i8] c"mlxsw_spectrum.author=Jiri Pirko <jiri@mellanox.com>\00", section ".modinfo", align 1, !dbg !11563
@__UNIQUE_ID_description672 = internal constant [52 x i8] c"mlxsw_spectrum.description=Mellanox Spectrum driver\00", section ".modinfo", align 1, !dbg !11568
@__UNIQUE_ID_firmware673 = internal constant [66 x i8] c"mlxsw_spectrum.firmware=mellanox/mlxsw_spectrum-13.2008.1310.mfa2\00", section ".modinfo", align 1, !dbg !11571
@__UNIQUE_ID_firmware674 = internal constant [67 x i8] c"mlxsw_spectrum.firmware=mellanox/mlxsw_spectrum2-29.2008.1310.mfa2\00", section ".modinfo", align 1, !dbg !11576
@__UNIQUE_ID_firmware675 = internal constant [67 x i8] c"mlxsw_spectrum.firmware=mellanox/mlxsw_spectrum3-30.2008.1310.mfa2\00", section ".modinfo", align 1, !dbg !11581
@.str.3 = private unnamed_addr constant [43 x i8] c"drivers/net/ethernet/mellanox/mlxsw/item.h\00", align 1
@.str.4 = private unnamed_addr constant [78 x i8] c"\013mlxsw: item bug (name=%s,offset=%x,step=%x,in_step_offset=%x,typesize=%zx)\0A\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"reg_mgpc_counter_index\00", align 1
@mlxsw_reg_mgpc_counter_index_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 24, i8 undef }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i32 0, i32 0) }, align 8, !dbg !11583
@.str.7 = private unnamed_addr constant [26 x i8] c"reg_mgpc_counter_set_type\00", align 1
@mlxsw_reg_mgpc_counter_set_type_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 24, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i32 0, i32 0) }, align 8, !dbg !11585
@.str.9 = private unnamed_addr constant [16 x i8] c"reg_mgpc_opcode\00", align 1
@mlxsw_reg_mgpc_opcode_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 28, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i32 0, i32 0) }, align 8, !dbg !11587
@.str.11 = private unnamed_addr constant [5 x i8] c"mgpc\00", align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"reg_mgpc_packet_counter\00", align 1
@mlxsw_reg_mgpc_packet_counter_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 64, i8 undef }, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0) }, align 8, !dbg !11589
@.str.14 = private unnamed_addr constant [22 x i8] c"reg_mgpc_byte_counter\00", align 1
@mlxsw_reg_mgpc_byte_counter_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 8, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 64, i8 undef }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i32 0, i32 0) }, align 8, !dbg !11591
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.16 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.17 = private unnamed_addr constant [20 x i8] c"reg_spms_local_port\00", align 1
@mlxsw_reg_spms_local_port_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i32 0, i32 0) }, align 8, !dbg !11593
@mlxsw_reg_spms_state_item = internal global %struct.mlxsw_item { i16 4, i16 0, i16 0, i8 0, i8 2, i8 0, %union.anon.166 { i16 1024 }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.20, i32 0, i32 0) }, align 8, !dbg !11595
@.str.19 = private unnamed_addr constant [55 x i8] c"\013mlxsw: item bug (name=%s,offset=%x,element_size=%x)\0A\00", align 1
@.str.20 = private unnamed_addr constant [15 x i8] c"reg_spms_state\00", align 1
@.str.21 = private unnamed_addr constant [5 x i8] c"spms\00", align 1
@.str.22 = private unnamed_addr constant [14 x i8] c"reg_paos_swid\00", align 1
@mlxsw_reg_paos_swid_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 24, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22, i32 0, i32 0) }, align 8, !dbg !11599
@.str.24 = private unnamed_addr constant [20 x i8] c"reg_paos_local_port\00", align 1
@mlxsw_reg_paos_local_port_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i32 0, i32 0) }, align 8, !dbg !11601
@.str.26 = private unnamed_addr constant [22 x i8] c"reg_paos_admin_status\00", align 1
@mlxsw_reg_paos_admin_status_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 8, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.26, i32 0, i32 0) }, align 8, !dbg !11603
@.str.28 = private unnamed_addr constant [21 x i8] c"reg_paos_oper_status\00", align 1
@mlxsw_reg_paos_oper_status_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28, i32 0, i32 0) }, align 8, !dbg !11605
@.str.30 = private unnamed_addr constant [13 x i8] c"reg_paos_ase\00", align 1
@mlxsw_reg_paos_ase_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 31, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.30, i32 0, i32 0) }, align 8, !dbg !11607
@.str.32 = private unnamed_addr constant [12 x i8] c"reg_paos_ee\00", align 1
@mlxsw_reg_paos_ee_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 30, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32, i32 0, i32 0) }, align 8, !dbg !11609
@.str.34 = private unnamed_addr constant [11 x i8] c"reg_paos_e\00", align 1
@mlxsw_reg_paos_e_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 2, i8 undef }, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i32 0, i32 0) }, align 8, !dbg !11611
@.str.36 = private unnamed_addr constant [5 x i8] c"paos\00", align 1
@.str.37 = private unnamed_addr constant [20 x i8] c"reg_svpe_local_port\00", align 1
@mlxsw_reg_svpe_local_port_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.37, i32 0, i32 0) }, align 8, !dbg !11615
@.str.39 = private unnamed_addr constant [15 x i8] c"reg_svpe_vp_en\00", align 1
@mlxsw_reg_svpe_vp_en_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 8, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.39, i32 0, i32 0) }, align 8, !dbg !11617
@.str.41 = private unnamed_addr constant [5 x i8] c"svpe\00", align 1
@.str.42 = private unnamed_addr constant [42 x i8] c"drivers/net/ethernet/mellanox/mlxsw/reg.h\00", align 1
@.str.43 = private unnamed_addr constant [22 x i8] c"reg_spvmlr_local_port\00", align 1
@mlxsw_reg_spvmlr_local_port_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.43, i32 0, i32 0) }, align 8, !dbg !11621
@.str.45 = private unnamed_addr constant [19 x i8] c"reg_spvmlr_num_rec\00", align 1
@mlxsw_reg_spvmlr_num_rec_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.45, i32 0, i32 0) }, align 8, !dbg !11623
@.str.47 = private unnamed_addr constant [28 x i8] c"reg_spvmlr_rec_learn_enable\00", align 1
@mlxsw_reg_spvmlr_rec_learn_enable_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 4, i16 0, i8 31, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.47, i32 0, i32 0) }, align 8, !dbg !11625
@.str.49 = private unnamed_addr constant [19 x i8] c"reg_spvmlr_rec_vid\00", align 1
@mlxsw_reg_spvmlr_rec_vid_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 4, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 12, i8 undef }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.49, i32 0, i32 0) }, align 8, !dbg !11627
@.str.51 = private unnamed_addr constant [7 x i8] c"spvmlr\00", align 1
@mlxsw_reg_spaft = internal constant %struct.mlxsw_reg_info { i16 8208, i16 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i32 0, i32 0) }, align 8, !dbg !11639
@.str.52 = private unnamed_addr constant [21 x i8] c"reg_spaft_local_port\00", align 1
@mlxsw_reg_spaft_local_port_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.52, i32 0, i32 0) }, align 8, !dbg !11631
@.str.54 = private unnamed_addr constant [25 x i8] c"reg_spaft_allow_untagged\00", align 1
@mlxsw_reg_spaft_allow_untagged_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 31, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.54, i32 0, i32 0) }, align 8, !dbg !11633
@.str.56 = private unnamed_addr constant [28 x i8] c"reg_spaft_allow_prio_tagged\00", align 1
@mlxsw_reg_spaft_allow_prio_tagged_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 30, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.56, i32 0, i32 0) }, align 8, !dbg !11635
@.str.58 = private unnamed_addr constant [23 x i8] c"reg_spaft_allow_tagged\00", align 1
@mlxsw_reg_spaft_allow_tagged_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 29, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.58, i32 0, i32 0) }, align 8, !dbg !11637
@.str.60 = private unnamed_addr constant [6 x i8] c"spaft\00", align 1
@mlxsw_reg_spvid = internal constant %struct.mlxsw_reg_info { i16 8206, i16 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.65, i32 0, i32 0) }, align 8, !dbg !11645
@.str.61 = private unnamed_addr constant [21 x i8] c"reg_spvid_local_port\00", align 1
@mlxsw_reg_spvid_local_port_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.61, i32 0, i32 0) }, align 8, !dbg !11641
@.str.63 = private unnamed_addr constant [15 x i8] c"reg_spvid_pvid\00", align 1
@mlxsw_reg_spvid_pvid_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 12, i8 undef }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.63, i32 0, i32 0) }, align 8, !dbg !11643
@.str.65 = private unnamed_addr constant [6 x i8] c"spvid\00", align 1
@.str.66 = private unnamed_addr constant [15 x i8] c"reg_ppcnt_swid\00", align 1
@mlxsw_reg_ppcnt_swid_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 24, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.66, i32 0, i32 0) }, align 8, !dbg !11647
@.str.68 = private unnamed_addr constant [21 x i8] c"reg_ppcnt_local_port\00", align 1
@mlxsw_reg_ppcnt_local_port_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.68, i32 0, i32 0) }, align 8, !dbg !11649
@.str.70 = private unnamed_addr constant [15 x i8] c"reg_ppcnt_pnat\00", align 1
@mlxsw_reg_ppcnt_pnat_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 14, i8 0, i8 0, i8 undef, { i8, i8 } { i8 2, i8 undef }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.70, i32 0, i32 0) }, align 8, !dbg !11651
@.str.72 = private unnamed_addr constant [14 x i8] c"reg_ppcnt_grp\00", align 1
@mlxsw_reg_ppcnt_grp_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 6, i8 undef }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.72, i32 0, i32 0) }, align 8, !dbg !11653
@.str.74 = private unnamed_addr constant [14 x i8] c"reg_ppcnt_clr\00", align 1
@mlxsw_reg_ppcnt_clr_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 31, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.74, i32 0, i32 0) }, align 8, !dbg !11655
@.str.76 = private unnamed_addr constant [18 x i8] c"reg_ppcnt_prio_tc\00", align 1
@mlxsw_reg_ppcnt_prio_tc_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 5, i8 undef }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.76, i32 0, i32 0) }, align 8, !dbg !11657
@.str.78 = private unnamed_addr constant [6 x i8] c"ppcnt\00", align 1
@mlxsw_reg_spvm = internal constant %struct.mlxsw_reg_info { i16 8207, i16 1024, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.91, i32 0, i32 0) }, align 8, !dbg !11673
@.str.79 = private unnamed_addr constant [20 x i8] c"reg_spvm_local_port\00", align 1
@mlxsw_reg_spvm_local_port_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.79, i32 0, i32 0) }, align 8, !dbg !11661
@.str.81 = private unnamed_addr constant [17 x i8] c"reg_spvm_num_rec\00", align 1
@mlxsw_reg_spvm_num_rec_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.81, i32 0, i32 0) }, align 8, !dbg !11663
@.str.83 = private unnamed_addr constant [15 x i8] c"reg_spvm_rec_i\00", align 1
@mlxsw_reg_spvm_rec_i_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 4, i16 0, i8 14, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.83, i32 0, i32 0) }, align 8, !dbg !11665
@.str.85 = private unnamed_addr constant [15 x i8] c"reg_spvm_rec_e\00", align 1
@mlxsw_reg_spvm_rec_e_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 4, i16 0, i8 13, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.85, i32 0, i32 0) }, align 8, !dbg !11667
@.str.87 = private unnamed_addr constant [15 x i8] c"reg_spvm_rec_u\00", align 1
@mlxsw_reg_spvm_rec_u_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 4, i16 0, i8 12, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.87, i32 0, i32 0) }, align 8, !dbg !11669
@.str.89 = private unnamed_addr constant [17 x i8] c"reg_spvm_rec_vid\00", align 1
@mlxsw_reg_spvm_rec_vid_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 4, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 12, i8 undef }, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.89, i32 0, i32 0) }, align 8, !dbg !11671
@.str.91 = private unnamed_addr constant [5 x i8] c"spvm\00", align 1
@.str.92 = private unnamed_addr constant [5 x i8] c"ptys\00", align 1
@.str.93 = private unnamed_addr constant [20 x i8] c"reg_qeec_local_port\00", align 1
@mlxsw_reg_qeec_local_port_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.93, i32 0, i32 0) }, align 8, !dbg !11677
@.str.95 = private unnamed_addr constant [27 x i8] c"reg_qeec_element_hierarchy\00", align 1
@mlxsw_reg_qeec_element_hierarchy_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.95, i32 0, i32 0) }, align 8, !dbg !11679
@.str.97 = private unnamed_addr constant [23 x i8] c"reg_qeec_element_index\00", align 1
@mlxsw_reg_qeec_element_index_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.97, i32 0, i32 0) }, align 8, !dbg !11681
@.str.99 = private unnamed_addr constant [28 x i8] c"reg_qeec_next_element_index\00", align 1
@mlxsw_reg_qeec_next_element_index_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 8, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.99, i32 0, i32 0) }, align 8, !dbg !11683
@.str.101 = private unnamed_addr constant [12 x i8] c"reg_qeec_de\00", align 1
@mlxsw_reg_qeec_de_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 24, i16 0, i16 0, i8 31, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.101, i32 0, i32 0) }, align 8, !dbg !11685
@.str.103 = private unnamed_addr constant [14 x i8] c"reg_qeec_dwrr\00", align 1
@mlxsw_reg_qeec_dwrr_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 24, i16 0, i16 0, i8 15, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.103, i32 0, i32 0) }, align 8, !dbg !11687
@.str.105 = private unnamed_addr constant [21 x i8] c"reg_qeec_dwrr_weight\00", align 1
@mlxsw_reg_qeec_dwrr_weight_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 24, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.105, i32 0, i32 0) }, align 8, !dbg !11689
@.str.107 = private unnamed_addr constant [5 x i8] c"qeec\00", align 1
@.str.108 = private unnamed_addr constant [14 x i8] c"reg_qeec_mase\00", align 1
@mlxsw_reg_qeec_mase_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 0, i16 0, i8 31, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.108, i32 0, i32 0) }, align 8, !dbg !11693
@.str.110 = private unnamed_addr constant [25 x i8] c"reg_qeec_max_shaper_rate\00", align 1
@mlxsw_reg_qeec_max_shaper_rate_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 31, i8 undef }, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.110, i32 0, i32 0) }, align 8, !dbg !11695
@.str.112 = private unnamed_addr constant [23 x i8] c"reg_qeec_max_shaper_bs\00", align 1
@mlxsw_reg_qeec_max_shaper_bs_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 28, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 6, i8 undef }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.112, i32 0, i32 0) }, align 8, !dbg !11697
@.str.114 = private unnamed_addr constant [20 x i8] c"reg_qtct_local_port\00", align 1
@mlxsw_reg_qtct_local_port_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.114, i32 0, i32 0) }, align 8, !dbg !11699
@.str.116 = private unnamed_addr constant [21 x i8] c"reg_qtct_switch_prio\00", align 1
@mlxsw_reg_qtct_switch_prio_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.116, i32 0, i32 0) }, align 8, !dbg !11701
@.str.118 = private unnamed_addr constant [16 x i8] c"reg_qtct_tclass\00", align 1
@mlxsw_reg_qtct_tclass_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.118, i32 0, i32 0) }, align 8, !dbg !11703
@.str.120 = private unnamed_addr constant [5 x i8] c"qtct\00", align 1
@.str.121 = private unnamed_addr constant [23 x i8] c"include/linux/skbuff.h\00", align 1
@.str.122 = private unnamed_addr constant [15 x i8] c"tx_hdr_version\00", align 1
@mlxsw_tx_hdr_version_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 28, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.122, i32 0, i32 0) }, align 8, !dbg !11709
@.str.124 = private unnamed_addr constant [11 x i8] c"tx_hdr_ctl\00", align 1
@mlxsw_tx_hdr_ctl_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 26, i8 0, i8 0, i8 undef, { i8, i8 } { i8 2, i8 undef }, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.124, i32 0, i32 0) }, align 8, !dbg !11711
@.str.126 = private unnamed_addr constant [13 x i8] c"tx_hdr_proto\00", align 1
@mlxsw_tx_hdr_proto_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 21, i8 0, i8 0, i8 undef, { i8, i8 } { i8 3, i8 undef }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.126, i32 0, i32 0) }, align 8, !dbg !11713
@.str.128 = private unnamed_addr constant [12 x i8] c"tx_hdr_swid\00", align 1
@mlxsw_tx_hdr_swid_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 12, i8 0, i8 0, i8 undef, { i8, i8 } { i8 3, i8 undef }, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.128, i32 0, i32 0) }, align 8, !dbg !11715
@.str.130 = private unnamed_addr constant [22 x i8] c"tx_hdr_control_tclass\00", align 1
@mlxsw_tx_hdr_control_tclass_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 6, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.130, i32 0, i32 0) }, align 8, !dbg !11717
@.str.132 = private unnamed_addr constant [16 x i8] c"tx_hdr_port_mid\00", align 1
@mlxsw_tx_hdr_port_mid_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.132, i32 0, i32 0) }, align 8, !dbg !11719
@.str.134 = private unnamed_addr constant [12 x i8] c"tx_hdr_type\00", align 1
@mlxsw_tx_hdr_type_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.134, i32 0, i32 0) }, align 8, !dbg !11721
@mlxsw_reg_ppad = internal constant %struct.mlxsw_reg_info { i16 20485, i16 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.141, i32 0, i32 0) }, align 8, !dbg !11729
@.str.136 = private unnamed_addr constant [25 x i8] c"reg_ppad_single_base_mac\00", align 1
@mlxsw_reg_ppad_single_base_mac_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 28, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.136, i32 0, i32 0) }, align 8, !dbg !11723
@.str.138 = private unnamed_addr constant [20 x i8] c"reg_ppad_local_port\00", align 1
@mlxsw_reg_ppad_local_port_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.138, i32 0, i32 0) }, align 8, !dbg !11725
@mlxsw_reg_ppad_mac_item = internal global %struct.mlxsw_item { i16 2, i16 0, i16 0, i8 0, i8 0, i8 0, %union.anon.166 { i16 6 }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.140, i32 0, i32 0) }, align 8, !dbg !11727
@.str.140 = private unnamed_addr constant [13 x i8] c"reg_ppad_mac\00", align 1
@.str.141 = private unnamed_addr constant [5 x i8] c"ppad\00", align 1
@.str.142 = private unnamed_addr constant [28 x i8] c"include/linux/thread_info.h\00", align 1
@.str.143 = private unnamed_addr constant [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", align 1
@.str.144 = private unnamed_addr constant [37 x i8] c"Failed to configure port's headroom\0A\00", align 1
@mlxsw_reg_pmtu = internal constant %struct.mlxsw_reg_info { i16 20483, i16 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.153, i32 0, i32 0) }, align 8, !dbg !11739
@.str.145 = private unnamed_addr constant [20 x i8] c"reg_pmtu_local_port\00", align 1
@mlxsw_reg_pmtu_local_port_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.145, i32 0, i32 0) }, align 8, !dbg !11731
@.str.147 = private unnamed_addr constant [17 x i8] c"reg_pmtu_max_mtu\00", align 1
@mlxsw_reg_pmtu_max_mtu_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.147, i32 0, i32 0) }, align 8, !dbg !11733
@.str.149 = private unnamed_addr constant [19 x i8] c"reg_pmtu_admin_mtu\00", align 1
@mlxsw_reg_pmtu_admin_mtu_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 8, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.149, i32 0, i32 0) }, align 8, !dbg !11735
@.str.151 = private unnamed_addr constant [18 x i8] c"reg_pmtu_oper_mtu\00", align 1
@mlxsw_reg_pmtu_oper_mtu_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.151, i32 0, i32 0) }, align 8, !dbg !11737
@.str.153 = private unnamed_addr constant [5 x i8] c"pmtu\00", align 1
@__cpu_possible_mask = external dso_local global %struct.cpumask, align 8
@.str.154 = private unnamed_addr constant [32 x i8] c"%s feature %pNF failed, err %d\0A\00", align 1
@.str.155 = private unnamed_addr constant [7 x i8] c"Enable\00", align 1
@.str.156 = private unnamed_addr constant [8 x i8] c"Disable\00", align 1
@.str.157 = private unnamed_addr constant [59 x i8] c"Active offloaded tc filters, can't turn hw_tc_offload off\0A\00", align 1
@mlxsw_reg_pplr = internal constant %struct.mlxsw_reg_info { i16 20504, i16 8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.162, i32 0, i32 0) }, align 8, !dbg !11745
@.str.158 = private unnamed_addr constant [20 x i8] c"reg_pplr_local_port\00", align 1
@mlxsw_reg_pplr_local_port_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.158, i32 0, i32 0) }, align 8, !dbg !11741
@.str.160 = private unnamed_addr constant [15 x i8] c"reg_pplr_lb_en\00", align 1
@mlxsw_reg_pplr_lb_en_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.160, i32 0, i32 0) }, align 8, !dbg !11743
@.str.162 = private unnamed_addr constant [5 x i8] c"pplr\00", align 1
@mlxsw_sp3_driver_name = internal constant [16 x i8] c"mlxsw_spectrum3\00", align 16, !dbg !12019
@mlxsw_sp3_pci_id_table = internal constant [2 x %struct.pci_device_id] [%struct.pci_device_id { i32 5555, i32 53104, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id zeroinitializer], align 16, !dbg !12022
@mlxsw_sp2_driver_name = internal constant [16 x i8] c"mlxsw_spectrum2\00", align 16, !dbg !12027
@mlxsw_sp2_pci_id_table = internal constant [2 x %struct.pci_device_id] [%struct.pci_device_id { i32 5555, i32 53100, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id zeroinitializer], align 16, !dbg !12029
@mlxsw_sp1_driver_name = internal constant [15 x i8] c"mlxsw_spectrum\00", align 1, !dbg !12033
@mlxsw_sp1_pci_id_table = internal constant [2 x %struct.pci_device_id] [%struct.pci_device_id { i32 5555, i32 52100, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id zeroinitializer], align 16, !dbg !12036
@mlxsw_sp3_fw_rev = internal constant %struct.mlxsw_fw_rev { i16 30, i16 2008, i16 1310, i16 0 }, align 2, !dbg !12220
@.str.163 = private unnamed_addr constant [43 x i8] c"mellanox/mlxsw_spectrum3-30.2008.1310.mfa2\00", align 1
@mlxsw_sp2_kvdl_ops = external dso_local constant %struct.mlxsw_sp_kvdl_ops, align 8
@mlxsw_sp2_act_afa_ops = external dso_local constant %struct.mlxsw_afa_ops, align 8
@mlxsw_sp2_afk_ops = external dso_local constant %struct.mlxsw_afk_ops, align 8
@mlxsw_sp2_mr_tcam_ops = external dso_local constant %struct.mlxsw_sp_mr_tcam_ops, align 8
@mlxsw_sp2_acl_rulei_ops = external dso_local global %struct.mlxsw_sp_acl_rulei_ops, align 8
@mlxsw_sp2_acl_tcam_ops = external dso_local constant %struct.mlxsw_sp_acl_tcam_ops, align 8
@mlxsw_sp2_nve_ops_arr = external dso_local global [0 x %struct.mlxsw_sp_nve_ops*], align 8
@mlxsw_sp2_mac_mask = internal constant [6 x i8] c"\FF\FF\FF\FF\F0\00", align 1, !dbg !12222
@mlxsw_sp2_rif_ops_arr = external dso_local global [0 x %struct.mlxsw_sp_rif_ops*], align 8
@mlxsw_sp2_sb_vals = external dso_local constant %struct.mlxsw_sp_sb_vals, align 1
@mlxsw_sp3_sb_ops = external dso_local constant %struct.mlxsw_sp_sb_ops, align 1
@mlxsw_sp2_port_type_speed_ops = external dso_local constant %struct.mlxsw_sp_port_type_speed_ops, align 8
@mlxsw_sp2_ptp_ops = internal constant %struct.mlxsw_sp_ptp_ops { %struct.mlxsw_sp_ptp_clock* (%struct.mlxsw_sp*, %struct.device*)* @mlxsw_sp2_ptp_clock_init, void (%struct.mlxsw_sp_ptp_clock*)* @mlxsw_sp2_ptp_clock_fini, %struct.mlxsw_sp_ptp_state* (%struct.mlxsw_sp*)* @mlxsw_sp2_ptp_init, void (%struct.mlxsw_sp_ptp_state*)* @mlxsw_sp2_ptp_fini, void (%struct.mlxsw_sp*, %struct.sk_buff*, i8)* @mlxsw_sp2_ptp_receive, void (%struct.mlxsw_sp*, %struct.sk_buff*, i8)* @mlxsw_sp2_ptp_transmitted, i32 (%struct.mlxsw_sp_port*, %struct.hwtstamp_config*)* @mlxsw_sp2_ptp_hwtstamp_get, i32 (%struct.mlxsw_sp_port*, %struct.hwtstamp_config*)* @mlxsw_sp2_ptp_hwtstamp_set, void (%struct.work_struct*)* @mlxsw_sp2_ptp_shaper_work, i32 (%struct.mlxsw_sp*, %struct.ethtool_ts_info*)* @mlxsw_sp2_ptp_get_ts_info, i32 ()* @mlxsw_sp2_get_stats_count, void (i8**)* @mlxsw_sp2_get_stats_strings, void (%struct.mlxsw_sp_port*, i64*, i32)* @mlxsw_sp2_get_stats }, align 8, !dbg !12225
@mlxsw_sp3_span_ops = external dso_local constant %struct.mlxsw_sp_span_ops, align 8
@mlxsw_sp2_policer_core_ops = external dso_local constant %struct.mlxsw_sp_policer_core_ops, align 1
@mlxsw_sp2_trap_ops = external dso_local constant %struct.mlxsw_sp_trap_ops, align 8
@.str.164 = private unnamed_addr constant [24 x i8] c"Failed to get base mac\0A\00", align 1
@.str.165 = private unnamed_addr constant [27 x i8] c"Failed to initialize KVDL\0A\00", align 1
@.str.166 = private unnamed_addr constant [27 x i8] c"Failed to initialize FIDs\0A\00", align 1
@.str.167 = private unnamed_addr constant [31 x i8] c"Failed to initialize policers\0A\00", align 1
@.str.168 = private unnamed_addr constant [21 x i8] c"Failed to set traps\0A\00", align 1
@.str.169 = private unnamed_addr constant [36 x i8] c"Failed to initialize devlink traps\0A\00", align 1
@.str.170 = private unnamed_addr constant [30 x i8] c"Failed to initialize buffers\0A\00", align 1
@.str.171 = private unnamed_addr constant [26 x i8] c"Failed to initialize LAG\0A\00", align 1
@.str.172 = private unnamed_addr constant [28 x i8] c"Failed to init span system\0A\00", align 1
@.str.173 = private unnamed_addr constant [32 x i8] c"Failed to initialize switchdev\0A\00", align 1
@.str.174 = private unnamed_addr constant [29 x i8] c"Failed to init counter pool\0A\00", align 1
@.str.175 = private unnamed_addr constant [34 x i8] c"Failed to initialize ACL actions\0A\00", align 1
@.str.176 = private unnamed_addr constant [26 x i8] c"Failed to initialize NVE\0A\00", align 1
@.str.177 = private unnamed_addr constant [26 x i8] c"Failed to initialize ACL\0A\00", align 1
@.str.178 = private unnamed_addr constant [29 x i8] c"Failed to initialize router\0A\00", align 1
@.str.179 = private unnamed_addr constant [26 x i8] c"Failed to init ptp clock\0A\00", align 1
@.str.180 = private unnamed_addr constant [26 x i8] c"Failed to initialize PTP\0A\00", align 1
@.str.181 = private unnamed_addr constant [36 x i8] c"Failed to register netdev notifier\0A\00", align 1
@.str.182 = private unnamed_addr constant [31 x i8] c"Failed to init pipeline debug\0A\00", align 1
@.str.183 = private unnamed_addr constant [33 x i8] c"Failed to init port module info\0A\00", align 1
@.str.184 = private unnamed_addr constant [24 x i8] c"Failed to create ports\0A\00", align 1
@mlxsw_reg_spad = internal constant %struct.mlxsw_reg_info { i16 8194, i16 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.185, i32 0, i32 0) }, align 8, !dbg !12227
@.str.185 = private unnamed_addr constant [5 x i8] c"spad\00", align 1
@mlxsw_reg_spad_base_mac_item = internal global %struct.mlxsw_item { i16 2, i16 0, i16 0, i8 0, i8 0, i8 0, %union.anon.166 { i16 6 }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.186, i32 0, i32 0) }, align 8, !dbg !12229
@.str.186 = private unnamed_addr constant [18 x i8] c"reg_spad_base_mac\00", align 1
@mlxsw_reg_qpcr = internal constant %struct.mlxsw_reg_info { i16 16388, i16 40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.203, i32 0, i32 0) }, align 8, !dbg !12247
@.str.187 = private unnamed_addr constant [13 x i8] c"reg_qpcr_pid\00", align 1
@mlxsw_reg_qpcr_pid_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 14, i8 undef }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.187, i32 0, i32 0) }, align 8, !dbg !12231
@.str.189 = private unnamed_addr constant [11 x i8] c"reg_qpcr_g\00", align 1
@mlxsw_reg_qpcr_g_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 14, i8 0, i8 0, i8 undef, { i8, i8 } { i8 2, i8 undef }, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.189, i32 0, i32 0) }, align 8, !dbg !12233
@.str.191 = private unnamed_addr constant [19 x i8] c"reg_qpcr_rate_type\00", align 1
@mlxsw_reg_qpcr_rate_type_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 8, i8 0, i8 0, i8 undef, { i8, i8 } { i8 2, i8 undef }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.191, i32 0, i32 0) }, align 8, !dbg !12235
@.str.193 = private unnamed_addr constant [24 x i8] c"reg_qpcr_violate_action\00", align 1
@mlxsw_reg_qpcr_violate_action_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 24, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.193, i32 0, i32 0) }, align 8, !dbg !12237
@.str.195 = private unnamed_addr constant [13 x i8] c"reg_qpcr_cir\00", align 1
@mlxsw_reg_qpcr_cir_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 32, i8 undef }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.195, i32 0, i32 0) }, align 8, !dbg !12239
@.str.197 = private unnamed_addr constant [18 x i8] c"reg_qpcr_ir_units\00", align 1
@mlxsw_reg_qpcr_ir_units_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 12, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.197, i32 0, i32 0) }, align 8, !dbg !12241
@.str.199 = private unnamed_addr constant [15 x i8] c"reg_qpcr_bytes\00", align 1
@mlxsw_reg_qpcr_bytes_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 14, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.199, i32 0, i32 0) }, align 8, !dbg !12243
@.str.201 = private unnamed_addr constant [13 x i8] c"reg_qpcr_cbs\00", align 1
@mlxsw_reg_qpcr_cbs_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 8, i16 0, i16 0, i8 24, i8 0, i8 0, i8 undef, { i8, i8 } { i8 6, i8 undef }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.201, i32 0, i32 0) }, align 8, !dbg !12245
@.str.203 = private unnamed_addr constant [5 x i8] c"qpcr\00", align 1
@mlxsw_reg_htgt = internal constant %struct.mlxsw_reg_info { i16 28674, i16 32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.222, i32 0, i32 0) }, align 8, !dbg !12267
@.str.204 = private unnamed_addr constant [14 x i8] c"reg_htgt_pide\00", align 1
@mlxsw_reg_htgt_pide_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 15, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.204, i32 0, i32 0) }, align 8, !dbg !12249
@.str.206 = private unnamed_addr constant [13 x i8] c"reg_htgt_pid\00", align 1
@mlxsw_reg_htgt_pid_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.206, i32 0, i32 0) }, align 8, !dbg !12251
@.str.208 = private unnamed_addr constant [14 x i8] c"reg_htgt_type\00", align 1
@mlxsw_reg_htgt_type_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 8, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.208, i32 0, i32 0) }, align 8, !dbg !12253
@.str.210 = private unnamed_addr constant [20 x i8] c"reg_htgt_trap_group\00", align 1
@mlxsw_reg_htgt_trap_group_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.210, i32 0, i32 0) }, align 8, !dbg !12255
@.str.212 = private unnamed_addr constant [23 x i8] c"reg_htgt_mirror_action\00", align 1
@mlxsw_reg_htgt_mirror_action_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 8, i16 0, i16 0, i8 8, i8 0, i8 0, i8 undef, { i8, i8 } { i8 2, i8 undef }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.212, i32 0, i32 0) }, align 8, !dbg !12257
@.str.214 = private unnamed_addr constant [25 x i8] c"reg_htgt_mirroring_agent\00", align 1
@mlxsw_reg_htgt_mirroring_agent_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 8, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 3, i8 undef }, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.214, i32 0, i32 0) }, align 8, !dbg !12259
@.str.216 = private unnamed_addr constant [18 x i8] c"reg_htgt_priority\00", align 1
@mlxsw_reg_htgt_priority_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.216, i32 0, i32 0) }, align 8, !dbg !12261
@.str.218 = private unnamed_addr constant [31 x i8] c"reg_htgt_local_path_cpu_tclass\00", align 1
@mlxsw_reg_htgt_local_path_cpu_tclass_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 6, i8 undef }, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.218, i32 0, i32 0) }, align 8, !dbg !12263
@.str.220 = private unnamed_addr constant [24 x i8] c"reg_htgt_local_path_rdq\00", align 1
@mlxsw_reg_htgt_local_path_rdq_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 6, i8 undef }, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.220, i32 0, i32 0) }, align 8, !dbg !12265
@.str.222 = private unnamed_addr constant [5 x i8] c"htgt\00", align 1
@mlxsw_sp_listener = internal constant <{ { i16, { %struct.mlxsw_event_listener }, i32, i32, i8, i8, i8 }, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener }> <{ { i16, { %struct.mlxsw_event_listener }, i32, i32, i8, i8, i8 } { i16 8, { %struct.mlxsw_event_listener } { %struct.mlxsw_event_listener { void (%struct.mlxsw_reg_info*, i8*, i8*)* @mlxsw_sp_pude_event_func, i32 8 } }, i32 1, i32 0, i8 17, i8 0, i8 6 }, %struct.mlxsw_listener { i16 61, %union.anon.168 { %struct.mlxsw_rx_listener { void (%struct.sk_buff*, i8, i8*)* @mlxsw_sp_rx_listener_no_mark_func, i8 -1, i8 0, i16 61 } }, i32 1, i32 3, i8 25, i8 25, i8 4 }, %struct.mlxsw_listener { i16 96, %union.anon.168 { %struct.mlxsw_rx_listener { void (%struct.sk_buff*, i8, i8*)* @mlxsw_sp_rx_listener_mark_func, i8 -1, i8 0, i16 96 } }, i32 1, i32 3, i8 13, i8 13, i8 4 }, %struct.mlxsw_listener { i16 98, %union.anon.168 { %struct.mlxsw_rx_listener { void (%struct.sk_buff*, i8, i8*)* @mlxsw_sp_rx_listener_mark_func, i8 -1, i8 0, i16 98 } }, i32 1, i32 3, i8 13, i8 13, i8 4 }, %struct.mlxsw_listener { i16 145, %union.anon.168 { %struct.mlxsw_rx_listener { void (%struct.sk_buff*, i8, i8*)* @mlxsw_sp_rx_listener_mark_func, i8 -1, i8 0, i16 145 } }, i32 1, i32 3, i8 13, i8 13, i8 4 }, %struct.mlxsw_listener { i16 356, %union.anon.168 { %struct.mlxsw_rx_listener { void (%struct.sk_buff*, i8, i8*)* @mlxsw_sp_rx_listener_no_mark_func, i8 -1, i8 0, i16 356 } }, i32 0, i32 3, i8 13, i8 13, i8 4 }, %struct.mlxsw_listener { i16 360, %union.anon.168 { %struct.mlxsw_rx_listener { void (%struct.sk_buff*, i8, i8*)* @mlxsw_sp_rx_listener_no_mark_func, i8 -1, i8 0, i16 360 } }, i32 0, i32 3, i8 13, i8 13, i8 4 }, %struct.mlxsw_listener { i16 361, %union.anon.168 { %struct.mlxsw_rx_listener { void (%struct.sk_buff*, i8, i8*)* @mlxsw_sp_rx_listener_no_mark_func, i8 -1, i8 0, i16 361 } }, i32 0, i32 3, i8 13, i8 13, i8 4 }, %struct.mlxsw_listener { i16 364, %union.anon.168 { %struct.mlxsw_rx_listener { void (%struct.sk_buff*, i8, i8*)* @mlxsw_sp_rx_listener_no_mark_func, i8 -1, i8 0, i16 364 } }, i32 0, i32 3, i8 13, i8 13, i8 4 }, %struct.mlxsw_listener { i16 449, %union.anon.168 { %struct.mlxsw_rx_listener { void (%struct.sk_buff*, i8, i8*)* @mlxsw_sp_rx_listener_mark_func, i8 -1, i8 0, i16 449 } }, i32 1, i32 3, i8 11, i8 11, i8 4 }, %struct.mlxsw_listener { i16 450, %union.anon.168 { %struct.mlxsw_rx_listener { void (%struct.sk_buff*, i8, i8*)* @mlxsw_sp_rx_listener_l3_mark_func, i8 -1, i8 0, i16 450 } }, i32 1, i32 3, i8 11, i8 11, i8 4 }, %struct.mlxsw_listener { i16 189, %union.anon.168 { %struct.mlxsw_rx_listener { void (%struct.sk_buff*, i8, i8*)* @mlxsw_sp_rx_listener_mark_func, i8 -1, i8 0, i16 189 } }, i32 1, i32 3, i8 12, i8 12, i8 4 } }>, align 16, !dbg !12269
@.str.224 = private unnamed_addr constant [9 x i8] c"link up\0A\00", align 1
@.str.225 = private unnamed_addr constant [11 x i8] c"link down\0A\00", align 1
@.str.226 = private unnamed_addr constant [20 x i8] c"reg_pude_local_port\00", align 1
@mlxsw_reg_pude_local_port_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.226, i32 0, i32 0) }, align 8, !dbg !12272
@.str.228 = private unnamed_addr constant [21 x i8] c"reg_pude_oper_status\00", align 1
@mlxsw_reg_pude_oper_status_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.228, i32 0, i32 0) }, align 8, !dbg !12274
@mlxsw_reg_slcr = internal constant %struct.mlxsw_reg_info { i16 8213, i16 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.238, i32 0, i32 0) }, align 8, !dbg !12284
@.str.230 = private unnamed_addr constant [12 x i8] c"reg_slcr_pp\00", align 1
@mlxsw_reg_slcr_pp_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 24, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.230, i32 0, i32 0) }, align 8, !dbg !12276
@.str.232 = private unnamed_addr constant [14 x i8] c"reg_slcr_type\00", align 1
@mlxsw_reg_slcr_type_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.232, i32 0, i32 0) }, align 8, !dbg !12278
@.str.234 = private unnamed_addr constant [18 x i8] c"reg_slcr_lag_hash\00", align 1
@mlxsw_reg_slcr_lag_hash_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 20, i8 undef }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.234, i32 0, i32 0) }, align 8, !dbg !12280
@.str.236 = private unnamed_addr constant [14 x i8] c"reg_slcr_seed\00", align 1
@mlxsw_reg_slcr_seed_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 8, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 32, i8 undef }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.236, i32 0, i32 0) }, align 8, !dbg !12282
@.str.238 = private unnamed_addr constant [5 x i8] c"slcr\00", align 1
@.str.239 = private unnamed_addr constant [6 x i8] c"vxlan\00", align 1
@mlxsw_sp_bridge_vxlan_is_valid.__msg = internal constant [77 x i8] c"mlxsw_spectrum: Multicast can not be enabled on a bridge with a VxLAN device\00", align 16, !dbg !12286
@mlxsw_sp_bridge_vxlan_is_valid.__msg.240 = internal constant [82 x i8] c"mlxsw_spectrum: Multiple VxLAN devices are not supported in a VLAN-unaware bridge\00", align 16, !dbg !12294
@mlxsw_sp_bridge_vxlan_is_valid.__msg.241 = internal constant [93 x i8] c"mlxsw_spectrum: Multiple VxLAN devices cannot have the same VLAN as PVID and egress untagged\00", align 16, !dbg !12299
@mlxsw_sp_netdevice_port_upper_event.__msg = internal constant [42 x i8] c"mlxsw_spectrum: Unknown upper device type\00", align 16, !dbg !12304
@mlxsw_sp_netdevice_port_upper_event.__msg.242 = internal constant [95 x i8] c"mlxsw_spectrum: Enslaving a port to a device that already has an upper device is not supported\00", align 16, !dbg !12312
@mlxsw_sp_netdevice_port_upper_event.__msg.243 = internal constant [73 x i8] c"mlxsw_spectrum: Master device is a LAG master and this device has a VLAN\00", align 16, !dbg !12317
@mlxsw_sp_netdevice_port_upper_event.__msg.244 = internal constant [49 x i8] c"mlxsw_spectrum: Can not put a VLAN on a LAG port\00", align 16, !dbg !12322
@mlxsw_sp_netdevice_port_upper_event.__msg.245 = internal constant [70 x i8] c"mlxsw_spectrum: macvlan is only supported on top of router interfaces\00", align 16, !dbg !12327
@mlxsw_sp_netdevice_port_upper_event.__msg.246 = internal constant [74 x i8] c"mlxsw_spectrum: Master device is an OVS master and this device has a VLAN\00", align 16, !dbg !12332
@mlxsw_sp_netdevice_port_upper_event.__msg.247 = internal constant [50 x i8] c"mlxsw_spectrum: Can not put a VLAN on an OVS port\00", align 16, !dbg !12337
@mlxsw_sp_master_lag_check.__msg = internal constant [57 x i8] c"mlxsw_spectrum: Exceeded number of supported LAG devices\00", align 16, !dbg !12342
@mlxsw_sp_master_lag_check.__msg.248 = internal constant [53 x i8] c"mlxsw_spectrum: LAG device using unsupported Tx type\00", align 16, !dbg !12355
@mlxsw_reg_sldr = internal constant %struct.mlxsw_reg_info { i16 8212, i16 12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.253, i32 0, i32 0) }, align 8, !dbg !12361
@.str.249 = private unnamed_addr constant [12 x i8] c"reg_sldr_op\00", align 1
@mlxsw_reg_sldr_op_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 29, i8 0, i8 0, i8 undef, { i8, i8 } { i8 3, i8 undef }, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.249, i32 0, i32 0) }, align 8, !dbg !12357
@.str.251 = private unnamed_addr constant [16 x i8] c"reg_sldr_lag_id\00", align 1
@mlxsw_reg_sldr_lag_id_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 10, i8 undef }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.251, i32 0, i32 0) }, align 8, !dbg !12359
@.str.253 = private unnamed_addr constant [5 x i8] c"sldr\00", align 1
@mlxsw_reg_slcor = internal constant %struct.mlxsw_reg_info { i16 8214, i16 16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.262, i32 0, i32 0) }, align 8, !dbg !12371
@.str.254 = private unnamed_addr constant [14 x i8] c"reg_slcor_col\00", align 1
@mlxsw_reg_slcor_col_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 30, i8 0, i8 0, i8 undef, { i8, i8 } { i8 2, i8 undef }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.254, i32 0, i32 0) }, align 8, !dbg !12363
@.str.256 = private unnamed_addr constant [21 x i8] c"reg_slcor_local_port\00", align 1
@mlxsw_reg_slcor_local_port_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.256, i32 0, i32 0) }, align 8, !dbg !12365
@.str.258 = private unnamed_addr constant [17 x i8] c"reg_slcor_lag_id\00", align 1
@mlxsw_reg_slcor_lag_id_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 10, i8 undef }, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.258, i32 0, i32 0) }, align 8, !dbg !12367
@.str.260 = private unnamed_addr constant [21 x i8] c"reg_slcor_port_index\00", align 1
@mlxsw_reg_slcor_port_index_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 10, i8 undef }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.260, i32 0, i32 0) }, align 8, !dbg !12369
@.str.262 = private unnamed_addr constant [6 x i8] c"slcor\00", align 1
@.str.263 = private unnamed_addr constant [19 x i8] c"reg_sldr_num_ports\00", align 1
@mlxsw_reg_sldr_num_ports_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 24, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.263, i32 0, i32 0) }, align 8, !dbg !12373
@.str.265 = private unnamed_addr constant [21 x i8] c"reg_sldr_system_port\00", align 1
@mlxsw_reg_sldr_system_port_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 8, i16 4, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.265, i32 0, i32 0) }, align 8, !dbg !12375
@.str.267 = private unnamed_addr constant [55 x i8] c"Failed to reflect link aggregation lower state change\0A\00", align 1
@mlxsw_sp_netdevice_port_vlan_event.__msg = internal constant [42 x i8] c"mlxsw_spectrum: Unknown upper device type\00", align 16, !dbg !12377
@mlxsw_sp_netdevice_port_vlan_event.__msg.268 = internal constant [95 x i8] c"mlxsw_spectrum: Enslaving a port to a device that already has an upper device is not supported\00", align 16, !dbg !12382
@mlxsw_sp_netdevice_port_vlan_event.__msg.269 = internal constant [70 x i8] c"mlxsw_spectrum: macvlan is only supported on top of router interfaces\00", align 16, !dbg !12384
@mlxsw_sp_netdevice_bridge_vlan_event.__msg = internal constant [42 x i8] c"mlxsw_spectrum: Unknown upper device type\00", align 16, !dbg !12386
@mlxsw_sp_netdevice_bridge_vlan_event.__msg.270 = internal constant [70 x i8] c"mlxsw_spectrum: macvlan is only supported on top of router interfaces\00", align 16, !dbg !12389
@mlxsw_sp_netdevice_bridge_event.__msg = internal constant [42 x i8] c"mlxsw_spectrum: Unknown upper device type\00", align 16, !dbg !12391
@mlxsw_sp_netdevice_bridge_event.__msg.271 = internal constant [70 x i8] c"mlxsw_spectrum: macvlan is only supported on top of router interfaces\00", align 16, !dbg !12396
@mlxsw_sp_netdevice_macvlan_event.__msg = internal constant [42 x i8] c"mlxsw_spectrum: Unknown upper device type\00", align 16, !dbg !12398
@.str.272 = private unnamed_addr constant [22 x i8] c"include/net/devlink.h\00", align 1
@mlxsw_reg_pmlp = internal constant %struct.mlxsw_reg_info { i16 20482, i16 64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.279, i32 0, i32 0) }, align 8, !dbg !12403
@.str.273 = private unnamed_addr constant [67 x i8] c"Port %d: Unsupported module config: width value is not power of 2\0A\00", align 1
@.str.274 = private unnamed_addr constant [63 x i8] c"Port %d: Unsupported module config: contains multiple modules\0A\00", align 1
@.str.275 = private unnamed_addr constant [74 x i8] c"Port %d: Unsupported module config: TX and RX lane numbers are different\0A\00", align 1
@.str.276 = private unnamed_addr constant [79 x i8] c"Port %d: Unsupported module config: TX and RX lane numbers are not sequential\0A\00", align 1
@.str.277 = private unnamed_addr constant [20 x i8] c"reg_pmlp_local_port\00", align 1
@mlxsw_reg_pmlp_local_port_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.277, i32 0, i32 0) }, align 8, !dbg !12401
@.str.279 = private unnamed_addr constant [5 x i8] c"pmlp\00", align 1
@.str.280 = private unnamed_addr constant [16 x i8] c"reg_pmlp_module\00", align 1
@mlxsw_reg_pmlp_module_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 4, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.280, i32 0, i32 0) }, align 8, !dbg !12405
@.str.282 = private unnamed_addr constant [15 x i8] c"reg_pmlp_width\00", align 1
@mlxsw_reg_pmlp_width_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.282, i32 0, i32 0) }, align 8, !dbg !12407
@.str.284 = private unnamed_addr constant [14 x i8] c"reg_pmlp_rxtx\00", align 1
@mlxsw_reg_pmlp_rxtx_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 31, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.284, i32 0, i32 0) }, align 8, !dbg !12409
@.str.286 = private unnamed_addr constant [17 x i8] c"reg_pmlp_tx_lane\00", align 1
@mlxsw_reg_pmlp_tx_lane_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 4, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.286, i32 0, i32 0) }, align 8, !dbg !12411
@.str.288 = private unnamed_addr constant [17 x i8] c"reg_pmlp_rx_lane\00", align 1
@mlxsw_reg_pmlp_rx_lane_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 4, i16 0, i8 24, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.288, i32 0, i32 0) }, align 8, !dbg !12413
@.str.290 = private unnamed_addr constant [36 x i8] c"Failed to initialize core CPU port\0A\00", align 1
@.str.291 = private unnamed_addr constant [35 x i8] c"Port %d: Failed to init core port\0A\00", align 1
@mlxsw_sp_port_ethtool_ops = external dso_local constant %struct.ethtool_ops, align 8
@.str.292 = private unnamed_addr constant [31 x i8] c"Port %d: Failed to map module\0A\00", align 1
@.str.293 = private unnamed_addr constant [29 x i8] c"Port %d: Failed to set SWID\0A\00", align 1
@.str.294 = private unnamed_addr constant [42 x i8] c"Port %d: Unable to init port mac address\0A\00", align 1
@.str.295 = private unnamed_addr constant [44 x i8] c"Port %d: Failed to set system port mapping\0A\00", align 1
@.str.296 = private unnamed_addr constant [34 x i8] c"Port %d: Failed to enable speeds\0A\00", align 1
@.str.297 = private unnamed_addr constant [38 x i8] c"Port %d: Failed to get maximum speed\0A\00", align 1
@.str.298 = private unnamed_addr constant [36 x i8] c"Port %d: Failed to get maximum MTU\0A\00", align 1
@.str.299 = private unnamed_addr constant [28 x i8] c"Port %d: Failed to set MTU\0A\00", align 1
@.str.300 = private unnamed_addr constant [39 x i8] c"Port %d: Failed to initialize buffers\0A\00", align 1
@.str.301 = private unnamed_addr constant [35 x i8] c"Port %d: Failed to initialize ETS\0A\00", align 1
@.str.302 = private unnamed_addr constant [42 x i8] c"Port %d: Failed to initialize TC MC mode\0A\00", align 1
@.str.303 = private unnamed_addr constant [35 x i8] c"Port %d: Failed to initialize DCB\0A\00", align 1
@.str.304 = private unnamed_addr constant [36 x i8] c"Port %d: Failed to initialize FIDs\0A\00", align 1
@.str.305 = private unnamed_addr constant [41 x i8] c"Port %d: Failed to initialize TC qdiscs\0A\00", align 1
@.str.306 = private unnamed_addr constant [38 x i8] c"Port %d: Failed to clear VLAN filter\0A\00", align 1
@.str.307 = private unnamed_addr constant [35 x i8] c"Port %d: Failed to initialize NVE\0A\00", align 1
@.str.308 = private unnamed_addr constant [29 x i8] c"Port %d: Failed to set PVID\0A\00", align 1
@.str.309 = private unnamed_addr constant [33 x i8] c"Port %d: Failed to create VID 1\0A\00", align 1
@.str.310 = private unnamed_addr constant [47 x i8] c"Port %d: Failed to set overheat initial value\0A\00", align 1
@.str.311 = private unnamed_addr constant [36 x i8] c"Port %d: Failed to register netdev\0A\00", align 1
@.str.312 = private unnamed_addr constant [34 x i8] c"reg_ppcnt_a_frames_transmitted_ok\00", align 1
@mlxsw_reg_ppcnt_a_frames_transmitted_ok_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 8, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 64, i8 undef }, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.312, i32 0, i32 0) }, align 8, !dbg !12415
@.str.314 = private unnamed_addr constant [31 x i8] c"reg_ppcnt_a_frames_received_ok\00", align 1
@mlxsw_reg_ppcnt_a_frames_received_ok_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 64, i8 undef }, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.314, i32 0, i32 0) }, align 8, !dbg !12417
@.str.316 = private unnamed_addr constant [34 x i8] c"reg_ppcnt_a_octets_transmitted_ok\00", align 1
@mlxsw_reg_ppcnt_a_octets_transmitted_ok_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 40, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 64, i8 undef }, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.316, i32 0, i32 0) }, align 8, !dbg !12419
@.str.318 = private unnamed_addr constant [31 x i8] c"reg_ppcnt_a_octets_received_ok\00", align 1
@mlxsw_reg_ppcnt_a_octets_received_ok_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 48, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 64, i8 undef }, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.318, i32 0, i32 0) }, align 8, !dbg !12421
@.str.320 = private unnamed_addr constant [41 x i8] c"reg_ppcnt_a_multicast_frames_received_ok\00", align 1
@mlxsw_reg_ppcnt_a_multicast_frames_received_ok_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 72, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 64, i8 undef }, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.320, i32 0, i32 0) }, align 8, !dbg !12423
@.str.322 = private unnamed_addr constant [40 x i8] c"reg_ppcnt_a_frame_check_sequence_errors\00", align 1
@mlxsw_reg_ppcnt_a_frame_check_sequence_errors_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 24, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 64, i8 undef }, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.322, i32 0, i32 0) }, align 8, !dbg !12425
@.str.324 = private unnamed_addr constant [29 x i8] c"reg_ppcnt_a_alignment_errors\00", align 1
@mlxsw_reg_ppcnt_a_alignment_errors_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 32, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 64, i8 undef }, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0) }, align 8, !dbg !12427
@.str.326 = private unnamed_addr constant [35 x i8] c"reg_ppcnt_a_in_range_length_errors\00", align 1
@mlxsw_reg_ppcnt_a_in_range_length_errors_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 88, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 64, i8 undef }, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.326, i32 0, i32 0) }, align 8, !dbg !12429
@.str.328 = private unnamed_addr constant [38 x i8] c"reg_ppcnt_a_out_of_range_length_field\00", align 1
@mlxsw_reg_ppcnt_a_out_of_range_length_field_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 96, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 64, i8 undef }, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.328, i32 0, i32 0) }, align 8, !dbg !12431
@.str.330 = private unnamed_addr constant [34 x i8] c"reg_ppcnt_a_frame_too_long_errors\00", align 1
@mlxsw_reg_ppcnt_a_frame_too_long_errors_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 104, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 64, i8 undef }, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.330, i32 0, i32 0) }, align 8, !dbg !12433
@.str.332 = private unnamed_addr constant [21 x i8] c"reg_ppcnt_ecn_marked\00", align 1
@mlxsw_reg_ppcnt_ecn_marked_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 64, i8 undef }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.332, i32 0, i32 0) }, align 8, !dbg !12435
@.str.334 = private unnamed_addr constant [23 x i8] c"reg_ppcnt_wred_discard\00", align 1
@mlxsw_reg_ppcnt_wred_discard_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 8, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 64, i8 undef }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.334, i32 0, i32 0) }, align 8, !dbg !12437
@.str.336 = private unnamed_addr constant [28 x i8] c"reg_ppcnt_tc_transmit_queue\00", align 1
@mlxsw_reg_ppcnt_tc_transmit_queue_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 8, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 64, i8 undef }, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.336, i32 0, i32 0) }, align 8, !dbg !12439
@.str.338 = private unnamed_addr constant [34 x i8] c"reg_ppcnt_tc_no_buffer_discard_uc\00", align 1
@mlxsw_reg_ppcnt_tc_no_buffer_discard_uc_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 64, i8 undef }, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.338, i32 0, i32 0) }, align 8, !dbg !12441
@.str.340 = private unnamed_addr constant [20 x i8] c"reg_ppcnt_tx_frames\00", align 1
@mlxsw_reg_ppcnt_tx_frames_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 80, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 64, i8 undef }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.340, i32 0, i32 0) }, align 8, !dbg !12443
@.str.342 = private unnamed_addr constant [20 x i8] c"reg_ppcnt_tx_octets\00", align 1
@mlxsw_reg_ppcnt_tx_octets_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 48, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 64, i8 undef }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.342, i32 0, i32 0) }, align 8, !dbg !12445
@mlxsw_reg_pspa = internal constant %struct.mlxsw_reg_info { i16 20493, i16 8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.350, i32 0, i32 0) }, align 8, !dbg !12453
@.str.344 = private unnamed_addr constant [14 x i8] c"reg_pspa_swid\00", align 1
@mlxsw_reg_pspa_swid_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 24, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.344, i32 0, i32 0) }, align 8, !dbg !12447
@.str.346 = private unnamed_addr constant [20 x i8] c"reg_pspa_local_port\00", align 1
@mlxsw_reg_pspa_local_port_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.346, i32 0, i32 0) }, align 8, !dbg !12449
@.str.348 = private unnamed_addr constant [18 x i8] c"reg_pspa_sub_port\00", align 1
@mlxsw_reg_pspa_sub_port_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 8, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.348, i32 0, i32 0) }, align 8, !dbg !12451
@.str.350 = private unnamed_addr constant [5 x i8] c"pspa\00", align 1
@mlxsw_reg_sspr = internal constant %struct.mlxsw_reg_info { i16 8200, i16 8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.359, i32 0, i32 0) }, align 8, !dbg !12463
@.str.351 = private unnamed_addr constant [11 x i8] c"reg_sspr_m\00", align 1
@mlxsw_reg_sspr_m_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 31, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.351, i32 0, i32 0) }, align 8, !dbg !12455
@.str.353 = private unnamed_addr constant [20 x i8] c"reg_sspr_local_port\00", align 1
@mlxsw_reg_sspr_local_port_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.353, i32 0, i32 0) }, align 8, !dbg !12457
@.str.355 = private unnamed_addr constant [18 x i8] c"reg_sspr_sub_port\00", align 1
@mlxsw_reg_sspr_sub_port_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 8, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.355, i32 0, i32 0) }, align 8, !dbg !12459
@.str.357 = private unnamed_addr constant [21 x i8] c"reg_sspr_system_port\00", align 1
@mlxsw_reg_sspr_system_port_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.357, i32 0, i32 0) }, align 8, !dbg !12461
@.str.359 = private unnamed_addr constant [5 x i8] c"sspr\00", align 1
@.str.360 = private unnamed_addr constant [14 x i8] c"reg_qeec_mise\00", align 1
@mlxsw_reg_qeec_mise_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 31, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.360, i32 0, i32 0) }, align 8, !dbg !12465
@.str.362 = private unnamed_addr constant [25 x i8] c"reg_qeec_min_shaper_rate\00", align 1
@mlxsw_reg_qeec_min_shaper_rate_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 28, i8 undef }, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.362, i32 0, i32 0) }, align 8, !dbg !12467
@mlxsw_reg_qtctm = internal constant %struct.mlxsw_reg_info { i16 16410, i16 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.368, i32 0, i32 0) }, align 8, !dbg !12473
@.str.364 = private unnamed_addr constant [21 x i8] c"reg_qtctm_local_port\00", align 1
@mlxsw_reg_qtctm_local_port_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.364, i32 0, i32 0) }, align 8, !dbg !12469
@.str.366 = private unnamed_addr constant [13 x i8] c"reg_qtctm_mc\00", align 1
@mlxsw_reg_qtctm_mc_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.366, i32 0, i32 0) }, align 8, !dbg !12471
@.str.368 = private unnamed_addr constant [6 x i8] c"qtctm\00", align 1
@.str.369 = private unnamed_addr constant [33 x i8] c"Port number \22%d\22 does not exist\0A\00", align 1
@mlxsw_sp_port_split.__msg = internal constant [43 x i8] c"mlxsw_spectrum: Port number does not exist\00", align 16, !dbg !12475
@.str.370 = private unnamed_addr constant [37 x i8] c"Cannot get max width of port module\0A\00", align 1
@mlxsw_sp_port_split.__msg.371 = internal constant [52 x i8] c"mlxsw_spectrum: Cannot get max width of port module\00", align 16, !dbg !12481
@.str.372 = private unnamed_addr constant [22 x i8] c"Port cannot be split\0A\00", align 1
@mlxsw_sp_port_split.__msg.373 = internal constant [37 x i8] c"mlxsw_spectrum: Port cannot be split\00", align 16, !dbg !12483
@.str.374 = private unnamed_addr constant [33 x i8] c"Cannot obtain local port offset\0A\00", align 1
@mlxsw_sp_port_split.__msg.375 = internal constant [48 x i8] c"mlxsw_spectrum: Cannot obtain local port offset\00", align 16, !dbg !12486
@.str.376 = private unnamed_addr constant [29 x i8] c"Invalid split configuration\0A\00", align 1
@mlxsw_sp_port_split.__msg.377 = internal constant [44 x i8] c"mlxsw_spectrum: Invalid split configuration\00", align 16, !dbg !12489
@.str.378 = private unnamed_addr constant [30 x i8] c"Failed to create split ports\0A\00", align 1
@mlxsw_sp_port_unsplit.__msg = internal constant [43 x i8] c"mlxsw_spectrum: Port number does not exist\00", align 16, !dbg !12492
@.str.379 = private unnamed_addr constant [20 x i8] c"Port was not split\0A\00", align 1
@mlxsw_sp_port_unsplit.__msg.380 = internal constant [35 x i8] c"mlxsw_spectrum: Port was not split\00", align 16, !dbg !12495
@mlxsw_sp_port_unsplit.__msg.381 = internal constant [52 x i8] c"mlxsw_spectrum: Cannot get max width of port module\00", align 16, !dbg !12500
@mlxsw_sp_port_unsplit.__msg.382 = internal constant [48 x i8] c"mlxsw_spectrum: Cannot obtain local port offset\00", align 16, !dbg !12502
@.str.383 = private unnamed_addr constant [4 x i8] c"kvd\00", align 1
@.str.384 = private unnamed_addr constant [12 x i8] c"span_agents\00", align 1
@mlxsw_sp2_devlink_params = internal constant [1 x %struct.devlink_param] [%struct.devlink_param { i32 11, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.385, i32 0, i32 0), i8 0, i32 2, i64 1, i32 (%struct.devlink*, i32, %struct.devlink_param_gset_ctx*)* @mlxsw_sp_params_acl_region_rehash_intrvl_get, i32 (%struct.devlink*, i32, %struct.devlink_param_gset_ctx*)* @mlxsw_sp_params_acl_region_rehash_intrvl_set, i32 (%struct.devlink*, i32, %union.devlink_param_value*, %struct.netlink_ext_ack*)* null }], align 16, !dbg !12504
@.str.385 = private unnamed_addr constant [27 x i8] c"acl_region_rehash_interval\00", align 1
@mlxsw_sp2_config_profile = internal constant { i8, i8, i8, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i8, i16, i16, i16, i8, i16, i8, i32, i8, i8, [8 x %struct.mlxsw_swid_config] } { i8 -62, i8 3, i8 0, i16 7000, i16 0, i16 0, i16 0, i16 0, i8 0, i8 0, i8 3, i8 0, i16 0, i8 3, i16 5118, i16 0, i16 0, i8 0, i16 0, i8 0, i32 0, i8 0, i8 0, [8 x %struct.mlxsw_swid_config] [%struct.mlxsw_swid_config { i8 1, i8 2, i8 0 }, %struct.mlxsw_swid_config zeroinitializer, %struct.mlxsw_swid_config zeroinitializer, %struct.mlxsw_swid_config zeroinitializer, %struct.mlxsw_swid_config zeroinitializer, %struct.mlxsw_swid_config zeroinitializer, %struct.mlxsw_swid_config zeroinitializer, %struct.mlxsw_swid_config zeroinitializer] }, align 4, !dbg !12536
@mlxsw_sp2_fw_rev = internal constant %struct.mlxsw_fw_rev { i16 29, i16 2008, i16 1310, i16 0 }, align 2, !dbg !12540
@.str.387 = private unnamed_addr constant [43 x i8] c"mellanox/mlxsw_spectrum2-29.2008.1310.mfa2\00", align 1
@mlxsw_sp2_sb_ops = external dso_local constant %struct.mlxsw_sp_sb_ops, align 1
@mlxsw_sp2_span_ops = external dso_local constant %struct.mlxsw_sp_span_ops, align 8
@mlxsw_sp1_fw_rev = internal constant %struct.mlxsw_fw_rev { i16 13, i16 2008, i16 1310, i16 1702 }, align 2, !dbg !12544
@.str.388 = private unnamed_addr constant [42 x i8] c"mellanox/mlxsw_spectrum-13.2008.1310.mfa2\00", align 1
@mlxsw_sp1_kvdl_ops = external dso_local constant %struct.mlxsw_sp_kvdl_ops, align 8
@mlxsw_sp1_act_afa_ops = external dso_local constant %struct.mlxsw_afa_ops, align 8
@mlxsw_sp1_afk_ops = external dso_local constant %struct.mlxsw_afk_ops, align 8
@mlxsw_sp1_mr_tcam_ops = external dso_local constant %struct.mlxsw_sp_mr_tcam_ops, align 8
@mlxsw_sp1_acl_rulei_ops = external dso_local global %struct.mlxsw_sp_acl_rulei_ops, align 8
@mlxsw_sp1_acl_tcam_ops = external dso_local constant %struct.mlxsw_sp_acl_tcam_ops, align 8
@mlxsw_sp1_nve_ops_arr = external dso_local global [0 x %struct.mlxsw_sp_nve_ops*], align 8
@mlxsw_sp1_mac_mask = internal constant [6 x i8] c"\FF\FF\FF\FF\FC\00", align 1, !dbg !12546
@mlxsw_sp1_rif_ops_arr = external dso_local global [0 x %struct.mlxsw_sp_rif_ops*], align 8
@mlxsw_sp1_sb_vals = external dso_local constant %struct.mlxsw_sp_sb_vals, align 1
@mlxsw_sp1_sb_ops = external dso_local constant %struct.mlxsw_sp_sb_ops, align 1
@mlxsw_sp1_port_type_speed_ops = external dso_local constant %struct.mlxsw_sp_port_type_speed_ops, align 8
@mlxsw_sp1_ptp_ops = internal constant %struct.mlxsw_sp_ptp_ops { %struct.mlxsw_sp_ptp_clock* (%struct.mlxsw_sp*, %struct.device*)* @mlxsw_sp1_ptp_clock_init, void (%struct.mlxsw_sp_ptp_clock*)* @mlxsw_sp1_ptp_clock_fini, %struct.mlxsw_sp_ptp_state* (%struct.mlxsw_sp*)* @mlxsw_sp1_ptp_init, void (%struct.mlxsw_sp_ptp_state*)* @mlxsw_sp1_ptp_fini, void (%struct.mlxsw_sp*, %struct.sk_buff*, i8)* @mlxsw_sp1_ptp_receive, void (%struct.mlxsw_sp*, %struct.sk_buff*, i8)* @mlxsw_sp1_ptp_transmitted, i32 (%struct.mlxsw_sp_port*, %struct.hwtstamp_config*)* @mlxsw_sp1_ptp_hwtstamp_get, i32 (%struct.mlxsw_sp_port*, %struct.hwtstamp_config*)* @mlxsw_sp1_ptp_hwtstamp_set, void (%struct.work_struct*)* @mlxsw_sp1_ptp_shaper_work, i32 (%struct.mlxsw_sp*, %struct.ethtool_ts_info*)* @mlxsw_sp1_ptp_get_ts_info, i32 ()* @mlxsw_sp1_get_stats_count, void (i8**)* @mlxsw_sp1_get_stats_strings, void (%struct.mlxsw_sp_port*, i64*, i32)* @mlxsw_sp1_get_stats }, align 8, !dbg !12548
@mlxsw_sp1_span_ops = external dso_local constant %struct.mlxsw_sp_span_ops, align 8
@mlxsw_sp1_policer_core_ops = external dso_local constant %struct.mlxsw_sp_policer_core_ops, align 1
@mlxsw_sp1_trap_ops = external dso_local constant %struct.mlxsw_sp_trap_ops, align 8
@mlxsw_sp1_listener = internal constant [2 x { i16, { %struct.mlxsw_event_listener }, i32, i32, i8, i8, i8 }] [{ i16, { %struct.mlxsw_event_listener }, i32, i32, i8, i8, i8 } { i16 46, { %struct.mlxsw_event_listener } { %struct.mlxsw_event_listener { void (%struct.mlxsw_reg_info*, i8*, i8*)* @mlxsw_sp1_ptp_egr_fifo_event_func, i32 46 } }, i32 1, i32 0, i8 20, i8 0, i8 6 }, { i16, { %struct.mlxsw_event_listener }, i32, i32, i8, i8, i8 } { i16 45, { %struct.mlxsw_event_listener } { %struct.mlxsw_event_listener { void (%struct.mlxsw_reg_info*, i8*, i8*)* @mlxsw_sp1_ptp_ing_fifo_event_func, i32 45 } }, i32 1, i32 0, i8 20, i8 0, i8 6 }], align 16, !dbg !12550
@.str.390 = private unnamed_addr constant [22 x i8] c"reg_mtpptr_local_port\00", align 1
@mlxsw_reg_mtpptr_local_port_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.390, i32 0, i32 0) }, align 8, !dbg !12553
@.str.392 = private unnamed_addr constant [19 x i8] c"reg_mtpptr_num_rec\00", align 1
@mlxsw_reg_mtpptr_num_rec_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 8, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.392, i32 0, i32 0) }, align 8, !dbg !12555
@.str.394 = private unnamed_addr constant [28 x i8] c"reg_mtpptr_rec_message_type\00", align 1
@mlxsw_reg_mtpptr_rec_message_type_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 16, i16 0, i8 8, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.394, i32 0, i32 0) }, align 8, !dbg !12557
@.str.396 = private unnamed_addr constant [29 x i8] c"reg_mtpptr_rec_domain_number\00", align 1
@mlxsw_reg_mtpptr_rec_domain_number_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 16, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.396, i32 0, i32 0) }, align 8, !dbg !12559
@.str.398 = private unnamed_addr constant [27 x i8] c"reg_mtpptr_rec_sequence_id\00", align 1
@mlxsw_reg_mtpptr_rec_sequence_id_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 16, i16 4, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.398, i32 0, i32 0) }, align 8, !dbg !12561
@.str.400 = private unnamed_addr constant [30 x i8] c"reg_mtpptr_rec_timestamp_high\00", align 1
@mlxsw_reg_mtpptr_rec_timestamp_high_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 16, i16 8, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 32, i8 undef }, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.400, i32 0, i32 0) }, align 8, !dbg !12563
@.str.402 = private unnamed_addr constant [29 x i8] c"reg_mtpptr_rec_timestamp_low\00", align 1
@mlxsw_reg_mtpptr_rec_timestamp_low_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 16, i16 12, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 32, i8 undef }, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.402, i32 0, i32 0) }, align 8, !dbg !12565
@.str.404 = private unnamed_addr constant [7 x i8] c"linear\00", align 1
@.str.405 = private unnamed_addr constant [12 x i8] c"hash_double\00", align 1
@.str.406 = private unnamed_addr constant [12 x i8] c"hash_single\00", align 1
@mlxsw_sp1_config_profile = internal constant { i8, i8, i8, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i8, i16, i16, i16, i8, i16, i8, i32, i8, i8, [8 x %struct.mlxsw_swid_config] } { i8 -62, i8 19, i8 0, i16 7000, i16 0, i16 0, i16 0, i16 0, i8 0, i8 0, i8 3, i8 0, i16 0, i8 3, i16 5118, i16 0, i16 0, i8 0, i16 0, i8 0, i32 98304, i8 59, i8 41, [8 x %struct.mlxsw_swid_config] [%struct.mlxsw_swid_config { i8 1, i8 2, i8 0 }, %struct.mlxsw_swid_config zeroinitializer, %struct.mlxsw_swid_config zeroinitializer, %struct.mlxsw_swid_config zeroinitializer, %struct.mlxsw_swid_config zeroinitializer, %struct.mlxsw_swid_config zeroinitializer, %struct.mlxsw_swid_config zeroinitializer, %struct.mlxsw_swid_config zeroinitializer] }, align 4, !dbg !12567
@llvm.used = appending global [10 x i8*] [i8* bitcast (void ()* @mlxsw_sp_module_exit to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_mlxsw_sp_module_init668 to i8*), i8* bitcast (void ()** @__exitcall_mlxsw_sp_module_exit to i8*), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__UNIQUE_ID_file669, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__UNIQUE_ID_license670, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__UNIQUE_ID_author671, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__UNIQUE_ID_description672, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__UNIQUE_ID_firmware673, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__UNIQUE_ID_firmware674, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__UNIQUE_ID_firmware675, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_sp_flow_counter_get(%struct.mlxsw_sp* %mlxsw_sp, i32 %counter_index, i64* %packets, i64* %bytes) #0 !dbg !12578 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %counter_index.addr = alloca i32, align 4
  %packets.addr = alloca i64*, align 8
  %bytes.addr = alloca i64*, align 8
  %mgpc_pl = alloca [24 x i8], align 16
  %err = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !12581, metadata !DIExpression()), !dbg !12582
  store i32 %counter_index, i32* %counter_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %counter_index.addr, metadata !12583, metadata !DIExpression()), !dbg !12584
  store i64* %packets, i64** %packets.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %packets.addr, metadata !12585, metadata !DIExpression()), !dbg !12586
  store i64* %bytes, i64** %bytes.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %bytes.addr, metadata !12587, metadata !DIExpression()), !dbg !12588
  call void @llvm.dbg.declare(metadata [24 x i8]* %mgpc_pl, metadata !12589, metadata !DIExpression()), !dbg !12591
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12592, metadata !DIExpression()), !dbg !12593
  %arraydecay = getelementptr inbounds [24 x i8], [24 x i8]* %mgpc_pl, i64 0, i64 0, !dbg !12594
  %0 = load i32, i32* %counter_index.addr, align 4, !dbg !12595
  call void @mlxsw_reg_mgpc_pack(i8* %arraydecay, i32 %0, i32 0, i32 3) #9, !dbg !12596
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !12597
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %1, i32 0, i32 1, !dbg !12598
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !12598
  %arraydecay1 = getelementptr inbounds [24 x i8], [24 x i8]* %mgpc_pl, i64 0, i64 0, !dbg !12599
  %call = call i32 @mlxsw_reg_query(%struct.mlxsw_core* %2, %struct.mlxsw_reg_info* @mlxsw_reg_mgpc, i8* %arraydecay1) #9, !dbg !12600
  store i32 %call, i32* %err, align 4, !dbg !12601
  %3 = load i32, i32* %err, align 4, !dbg !12602
  %tobool = icmp ne i32 %3, 0, !dbg !12602
  br i1 %tobool, label %if.then, label %if.end, !dbg !12604

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %err, align 4, !dbg !12605
  store i32 %4, i32* %retval, align 4, !dbg !12606
  br label %return, !dbg !12606

if.end:                                           ; preds = %entry
  %5 = load i64*, i64** %packets.addr, align 8, !dbg !12607
  %tobool2 = icmp ne i64* %5, null, !dbg !12607
  br i1 %tobool2, label %if.then3, label %if.end6, !dbg !12609

if.then3:                                         ; preds = %if.end
  %arraydecay4 = getelementptr inbounds [24 x i8], [24 x i8]* %mgpc_pl, i64 0, i64 0, !dbg !12610
  %call5 = call i64 @mlxsw_reg_mgpc_packet_counter_get(i8* %arraydecay4) #9, !dbg !12611
  %6 = load i64*, i64** %packets.addr, align 8, !dbg !12612
  store i64 %call5, i64* %6, align 8, !dbg !12613
  br label %if.end6, !dbg !12614

if.end6:                                          ; preds = %if.then3, %if.end
  %7 = load i64*, i64** %bytes.addr, align 8, !dbg !12615
  %tobool7 = icmp ne i64* %7, null, !dbg !12615
  br i1 %tobool7, label %if.then8, label %if.end11, !dbg !12617

if.then8:                                         ; preds = %if.end6
  %arraydecay9 = getelementptr inbounds [24 x i8], [24 x i8]* %mgpc_pl, i64 0, i64 0, !dbg !12618
  %call10 = call i64 @mlxsw_reg_mgpc_byte_counter_get(i8* %arraydecay9) #9, !dbg !12619
  %8 = load i64*, i64** %bytes.addr, align 8, !dbg !12620
  store i64 %call10, i64* %8, align 8, !dbg !12621
  br label %if.end11, !dbg !12622

if.end11:                                         ; preds = %if.then8, %if.end6
  store i32 0, i32* %retval, align 4, !dbg !12623
  br label %return, !dbg !12623

return:                                           ; preds = %if.end11, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !12624
  ret i32 %9, !dbg !12624
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_mgpc_pack(i8* %payload, i32 %counter_index, i32 %opcode, i32 %set_type) #0 !dbg !12625 {
entry:
  %payload.addr = alloca i8*, align 8
  %counter_index.addr = alloca i32, align 4
  %opcode.addr = alloca i32, align 4
  %set_type.addr = alloca i32, align 4
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !12628, metadata !DIExpression()), !dbg !12629
  store i32 %counter_index, i32* %counter_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %counter_index.addr, metadata !12630, metadata !DIExpression()), !dbg !12631
  store i32 %opcode, i32* %opcode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %opcode.addr, metadata !12632, metadata !DIExpression()), !dbg !12633
  store i32 %set_type, i32* %set_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %set_type.addr, metadata !12634, metadata !DIExpression()), !dbg !12635
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !12636
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_mgpc, i32 0, i32 1), align 2, !dbg !12636
  %conv = zext i16 %1 to i64, !dbg !12636
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !12636
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !12637
  %3 = load i32, i32* %counter_index.addr, align 4, !dbg !12638
  call void @mlxsw_reg_mgpc_counter_index_set(i8* %2, i32 %3) #9, !dbg !12639
  %4 = load i8*, i8** %payload.addr, align 8, !dbg !12640
  %5 = load i32, i32* %set_type.addr, align 4, !dbg !12641
  call void @mlxsw_reg_mgpc_counter_set_type_set(i8* %4, i32 %5) #9, !dbg !12642
  %6 = load i8*, i8** %payload.addr, align 8, !dbg !12643
  %7 = load i32, i32* %opcode.addr, align 4, !dbg !12644
  call void @mlxsw_reg_mgpc_opcode_set(i8* %6, i32 %7) #9, !dbg !12645
  ret void, !dbg !12646
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_reg_query(%struct.mlxsw_core*, %struct.mlxsw_reg_info*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mlxsw_reg_mgpc_packet_counter_get(i8* %buf) #0 !dbg !12647 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12650, metadata !DIExpression()), !dbg !12651
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !12651
  %call = call i64 @__mlxsw_item_get64(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mgpc_packet_counter_item to %struct.mlxsw_item*), i16 zeroext 0) #9, !dbg !12651
  ret i64 %call, !dbg !12651
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mlxsw_reg_mgpc_byte_counter_get(i8* %buf) #0 !dbg !12652 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12653, metadata !DIExpression()), !dbg !12654
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !12654
  %call = call i64 @__mlxsw_item_get64(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mgpc_byte_counter_item to %struct.mlxsw_item*), i16 zeroext 0) #9, !dbg !12654
  ret i64 %call, !dbg !12654
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_sp_flow_counter_alloc(%struct.mlxsw_sp* %mlxsw_sp, i32* %p_counter_index) #0 !dbg !12655 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %p_counter_index.addr = alloca i32*, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !12658, metadata !DIExpression()), !dbg !12659
  store i32* %p_counter_index, i32** %p_counter_index.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p_counter_index.addr, metadata !12660, metadata !DIExpression()), !dbg !12661
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12662, metadata !DIExpression()), !dbg !12663
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !12664
  %1 = load i32*, i32** %p_counter_index.addr, align 8, !dbg !12665
  %call = call i32 @mlxsw_sp_counter_alloc(%struct.mlxsw_sp* %0, i32 0, i32* %1) #9, !dbg !12666
  store i32 %call, i32* %err, align 4, !dbg !12667
  %2 = load i32, i32* %err, align 4, !dbg !12668
  %tobool = icmp ne i32 %2, 0, !dbg !12668
  br i1 %tobool, label %if.then, label %if.end, !dbg !12670

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %err, align 4, !dbg !12671
  store i32 %3, i32* %retval, align 4, !dbg !12672
  br label %return, !dbg !12672

if.end:                                           ; preds = %entry
  %4 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !12673
  %5 = load i32*, i32** %p_counter_index.addr, align 8, !dbg !12674
  %6 = load i32, i32* %5, align 4, !dbg !12675
  %call1 = call i32 @mlxsw_sp_flow_counter_clear(%struct.mlxsw_sp* %4, i32 %6) #9, !dbg !12676
  store i32 %call1, i32* %err, align 4, !dbg !12677
  %7 = load i32, i32* %err, align 4, !dbg !12678
  %tobool2 = icmp ne i32 %7, 0, !dbg !12678
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !12680

if.then3:                                         ; preds = %if.end
  br label %err_counter_clear, !dbg !12681

if.end4:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !12682
  br label %return, !dbg !12682

err_counter_clear:                                ; preds = %if.then3
  call void @llvm.dbg.label(metadata !12683), !dbg !12684
  %8 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !12685
  %9 = load i32*, i32** %p_counter_index.addr, align 8, !dbg !12686
  %10 = load i32, i32* %9, align 4, !dbg !12687
  call void @mlxsw_sp_counter_free(%struct.mlxsw_sp* %8, i32 0, i32 %10) #9, !dbg !12688
  %11 = load i32, i32* %err, align 4, !dbg !12689
  store i32 %11, i32* %retval, align 4, !dbg !12690
  br label %return, !dbg !12690

return:                                           ; preds = %err_counter_clear, %if.end4, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !12691
  ret i32 %12, !dbg !12691
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_counter_alloc(%struct.mlxsw_sp*, i32, i32*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_flow_counter_clear(%struct.mlxsw_sp* %mlxsw_sp, i32 %counter_index) #0 !dbg !12692 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %counter_index.addr = alloca i32, align 4
  %mgpc_pl = alloca [24 x i8], align 16
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !12695, metadata !DIExpression()), !dbg !12696
  store i32 %counter_index, i32* %counter_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %counter_index.addr, metadata !12697, metadata !DIExpression()), !dbg !12698
  call void @llvm.dbg.declare(metadata [24 x i8]* %mgpc_pl, metadata !12699, metadata !DIExpression()), !dbg !12700
  %arraydecay = getelementptr inbounds [24 x i8], [24 x i8]* %mgpc_pl, i64 0, i64 0, !dbg !12701
  %0 = load i32, i32* %counter_index.addr, align 4, !dbg !12702
  call void @mlxsw_reg_mgpc_pack(i8* %arraydecay, i32 %0, i32 8, i32 3) #9, !dbg !12703
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !12704
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %1, i32 0, i32 1, !dbg !12705
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !12705
  %arraydecay1 = getelementptr inbounds [24 x i8], [24 x i8]* %mgpc_pl, i64 0, i64 0, !dbg !12706
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %2, %struct.mlxsw_reg_info* @mlxsw_reg_mgpc, i8* %arraydecay1) #9, !dbg !12707
  ret i32 %call, !dbg !12708
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_counter_free(%struct.mlxsw_sp*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlxsw_sp_flow_counter_free(%struct.mlxsw_sp* %mlxsw_sp, i32 %counter_index) #0 !dbg !12709 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %counter_index.addr = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !12712, metadata !DIExpression()), !dbg !12713
  store i32 %counter_index, i32* %counter_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %counter_index.addr, metadata !12714, metadata !DIExpression()), !dbg !12715
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !12716
  %1 = load i32, i32* %counter_index.addr, align 4, !dbg !12717
  call void @mlxsw_sp_counter_free(%struct.mlxsw_sp* %0, i32 0, i32 %1) #9, !dbg !12718
  ret void, !dbg !12719
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_sp_stp_spms_state(i8 zeroext %state) #0 !dbg !12720 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca i8, align 1
  store i8 %state, i8* %state.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %state.addr, metadata !12723, metadata !DIExpression()), !dbg !12724
  %0 = load i8, i8* %state.addr, align 1, !dbg !12725
  %conv = zext i8 %0 to i32, !dbg !12725
  switch i32 %conv, label %sw.default [
    i32 3, label %sw.bb
    i32 2, label %sw.bb1
    i32 1, label %sw.bb2
    i32 0, label %sw.bb2
    i32 4, label %sw.bb2
  ], !dbg !12726

sw.bb:                                            ; preds = %entry
  store i32 3, i32* %retval, align 4, !dbg !12727
  br label %sw.epilog, !dbg !12727

sw.bb1:                                           ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !12729
  br label %sw.epilog, !dbg !12729

sw.bb2:                                           ; preds = %entry, %entry, %entry
  store i32 1, i32* %retval, align 4, !dbg !12730
  br label %sw.epilog, !dbg !12730

sw.default:                                       ; preds = %entry
  br label %do.body, !dbg !12731

do.body:                                          ; preds = %sw.default
  br label %do.body3, !dbg !12732

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !12734

do.end:                                           ; preds = %do.body3
  br label %do.body4, !dbg !12732

do.body4:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 256, i32 0, i64 12) #10, !dbg !12736, !srcloc !12738
  br label %do.end5, !dbg !12736

do.end5:                                          ; preds = %do.body4
  br label %do.body6, !dbg !12732

do.body6:                                         ; preds = %do.end5
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 654) #10, !dbg !12739, !srcloc !12742
  unreachable, !dbg !12743

do.end7:                                          ; No predecessors!
  br label %do.end8, !dbg !12732

do.end8:                                          ; preds = %do.end7
  br label %sw.epilog, !dbg !12744

sw.epilog:                                        ; preds = %sw.bb, %sw.bb1, %sw.bb2, %do.end8
  %1 = load i32, i32* %retval, align 4, !dbg !12745
  ret i32 %1, !dbg !12745
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_sp_port_vid_stp_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, i16 zeroext %vid, i8 zeroext %state) #0 !dbg !12746 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !12749, metadata !DIExpression()), !dbg !12753
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !12761, metadata !DIExpression()), !dbg !12762
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !12763, metadata !DIExpression()), !dbg !12764
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !12765, metadata !DIExpression()), !dbg !12766
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !12767, metadata !DIExpression()), !dbg !12771
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !12773, metadata !DIExpression()), !dbg !12777
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !12779, metadata !DIExpression()), !dbg !12783
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !12788, metadata !DIExpression()), !dbg !12789
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !12790, metadata !DIExpression()), !dbg !12791
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12792, metadata !DIExpression()), !dbg !12793
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !12794, metadata !DIExpression()), !dbg !12795
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !12796, metadata !DIExpression()), !dbg !12797
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12798, metadata !DIExpression()), !dbg !12799
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !12800, metadata !DIExpression()), !dbg !12801
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !12802, metadata !DIExpression()), !dbg !12803
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %vid.addr = alloca i16, align 2
  %state.addr = alloca i8, align 1
  %spms_state = alloca i32, align 4
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %spms_pl = alloca i8*, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !12804, metadata !DIExpression()), !dbg !12805
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !12806, metadata !DIExpression()), !dbg !12807
  store i8 %state, i8* %state.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %state.addr, metadata !12808, metadata !DIExpression()), !dbg !12809
  call void @llvm.dbg.declare(metadata i32* %spms_state, metadata !12810, metadata !DIExpression()), !dbg !12811
  %0 = load i8, i8* %state.addr, align 1, !dbg !12812
  %call = call i32 @mlxsw_sp_stp_spms_state(i8 zeroext %0) #9, !dbg !12813
  store i32 %call, i32* %spms_state, align 4, !dbg !12811
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !12814, metadata !DIExpression()), !dbg !12815
  %1 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !12816
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %1, i32 0, i32 2, !dbg !12817
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !12817
  store %struct.mlxsw_sp* %2, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !12815
  call void @llvm.dbg.declare(metadata i8** %spms_pl, metadata !12818, metadata !DIExpression()), !dbg !12819
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12820, metadata !DIExpression()), !dbg !12821
  store i64 1028, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %3 = load i64, i64* %size.addr.i, align 8, !dbg !12822
  %4 = call i1 @llvm.is.constant.i64(i64 %3) #10, !dbg !12823
  br i1 %4, label %if.then.i, label %if.end9.i, !dbg !12824

if.then.i:                                        ; preds = %entry
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !12825
  %cmp.i = icmp ugt i64 %5, 8192, !dbg !12826
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !12827

if.then1.i:                                       ; preds = %if.then.i
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !12828
  %7 = load i32, i32* %flags.addr.i, align 4, !dbg !12829
  store i64 %6, i64* %size.addr.i.i, align 8
  store i32 %7, i32* %flags.addr.i.i, align 4
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !12830
  %call.i.i = call i32 @get_order(i64 %8) #11, !dbg !12831
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !12797
  %9 = load i64, i64* %size.addr.i.i, align 8, !dbg !12832
  %10 = load i32, i32* %flags.addr.i.i, align 4, !dbg !12833
  %11 = load i32, i32* %order.i.i, align 4, !dbg !12834
  store i64 %9, i64* %size.addr.i.i.i, align 8
  store i32 %10, i32* %flags.addr.i.i.i, align 4
  store i32 %11, i32* %order.addr.i.i.i, align 4
  %12 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !12835
  %13 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !12836
  %14 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !12837
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %12, i32 %13, i32 %14) #12, !dbg !12838
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !12838
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !12838
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !12838
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !12838
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !12839
  br label %kmalloc.exit, !dbg !12839

if.end.i:                                         ; preds = %if.then.i
  %15 = load i64, i64* %size.addr.i, align 8, !dbg !12840
  store i64 %15, i64* %size.addr.i11.i, align 8
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12841
  %tobool.i.i = icmp ne i64 %16, 0, !dbg !12841
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !12843

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !12844
  br label %kmalloc_index.exit.i, !dbg !12844

if.end.i.i:                                       ; preds = %if.end.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12845
  %cmp.i.i = icmp ule i64 %17, 8, !dbg !12847
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !12848

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !12849
  br label %kmalloc_index.exit.i, !dbg !12849

if.end2.i.i:                                      ; preds = %if.end.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12850
  %cmp3.i.i = icmp ugt i64 %18, 64, !dbg !12852
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !12853

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12854
  %cmp4.i.i = icmp ule i64 %19, 96, !dbg !12855
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !12856

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !12857
  br label %kmalloc_index.exit.i, !dbg !12857

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12858
  %cmp7.i.i = icmp ugt i64 %20, 128, !dbg !12860
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !12861

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12862
  %cmp9.i.i = icmp ule i64 %21, 192, !dbg !12863
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !12864

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !12865
  br label %kmalloc_index.exit.i, !dbg !12865

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12866
  %cmp12.i.i = icmp ule i64 %22, 8, !dbg !12868
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !12869

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !12870
  br label %kmalloc_index.exit.i, !dbg !12870

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12871
  %cmp15.i.i = icmp ule i64 %23, 16, !dbg !12873
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !12874

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !12875
  br label %kmalloc_index.exit.i, !dbg !12875

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12876
  %cmp18.i.i = icmp ule i64 %24, 32, !dbg !12878
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !12879

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !12880
  br label %kmalloc_index.exit.i, !dbg !12880

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12881
  %cmp21.i.i = icmp ule i64 %25, 64, !dbg !12883
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !12884

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !12885
  br label %kmalloc_index.exit.i, !dbg !12885

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12886
  %cmp24.i.i = icmp ule i64 %26, 128, !dbg !12888
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !12889

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !12890
  br label %kmalloc_index.exit.i, !dbg !12890

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12891
  %cmp27.i.i = icmp ule i64 %27, 256, !dbg !12893
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !12894

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !12895
  br label %kmalloc_index.exit.i, !dbg !12895

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12896
  %cmp30.i.i = icmp ule i64 %28, 512, !dbg !12898
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !12899

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !12900
  br label %kmalloc_index.exit.i, !dbg !12900

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12901
  %cmp33.i.i = icmp ule i64 %29, 1024, !dbg !12903
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !12904

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !12905
  br label %kmalloc_index.exit.i, !dbg !12905

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12906
  %cmp36.i.i = icmp ule i64 %30, 2048, !dbg !12908
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !12909

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !12910
  br label %kmalloc_index.exit.i, !dbg !12910

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12911
  %cmp39.i.i = icmp ule i64 %31, 4096, !dbg !12913
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !12914

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !12915
  br label %kmalloc_index.exit.i, !dbg !12915

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12916
  %cmp42.i.i = icmp ule i64 %32, 8192, !dbg !12918
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !12919

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !12920
  br label %kmalloc_index.exit.i, !dbg !12920

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12921
  %cmp45.i.i = icmp ule i64 %33, 16384, !dbg !12923
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !12924

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !12925
  br label %kmalloc_index.exit.i, !dbg !12925

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12926
  %cmp48.i.i = icmp ule i64 %34, 32768, !dbg !12928
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !12929

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !12930
  br label %kmalloc_index.exit.i, !dbg !12930

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12931
  %cmp51.i.i = icmp ule i64 %35, 65536, !dbg !12933
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !12934

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !12935
  br label %kmalloc_index.exit.i, !dbg !12935

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12936
  %cmp54.i.i = icmp ule i64 %36, 131072, !dbg !12938
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !12939

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !12940
  br label %kmalloc_index.exit.i, !dbg !12940

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12941
  %cmp57.i.i = icmp ule i64 %37, 262144, !dbg !12943
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !12944

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !12945
  br label %kmalloc_index.exit.i, !dbg !12945

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12946
  %cmp60.i.i = icmp ule i64 %38, 524288, !dbg !12948
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !12949

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !12950
  br label %kmalloc_index.exit.i, !dbg !12950

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12951
  %cmp63.i.i = icmp ule i64 %39, 1048576, !dbg !12953
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !12954

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !12955
  br label %kmalloc_index.exit.i, !dbg !12955

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12956
  %cmp66.i.i = icmp ule i64 %40, 2097152, !dbg !12958
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !12959

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !12960
  br label %kmalloc_index.exit.i, !dbg !12960

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12961
  %cmp69.i.i = icmp ule i64 %41, 4194304, !dbg !12963
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !12964

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !12965
  br label %kmalloc_index.exit.i, !dbg !12965

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12966
  %cmp72.i.i = icmp ule i64 %42, 8388608, !dbg !12968
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !12969

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !12970
  br label %kmalloc_index.exit.i, !dbg !12970

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12971
  %cmp75.i.i = icmp ule i64 %43, 16777216, !dbg !12973
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !12974

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !12975
  br label %kmalloc_index.exit.i, !dbg !12975

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12976
  %cmp78.i.i = icmp ule i64 %44, 33554432, !dbg !12978
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !12979

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !12980
  br label %kmalloc_index.exit.i, !dbg !12980

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12981
  %cmp81.i.i = icmp ule i64 %45, 67108864, !dbg !12983
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !12984

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !12985
  br label %kmalloc_index.exit.i, !dbg !12985

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !12986, !srcloc !12989
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 160) #10, !dbg !12990, !srcloc !12993
  unreachable, !dbg !12994

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %46 = load i32, i32* %retval.i.i, align 4, !dbg !12995
  store i32 %46, i32* %index.i, align 4, !dbg !12996
  %47 = load i32, i32* %index.i, align 4, !dbg !12997
  %tobool.i = icmp ne i32 %47, 0, !dbg !12997
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !12999

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !13000
  br label %kmalloc.exit, !dbg !13000

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %48 = load i32, i32* %flags.addr.i, align 4, !dbg !13001
  store i32 %48, i32* %flags.addr.i13.i, align 4
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !13002
  %and.i.i = and i32 %49, 17, !dbg !13002
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !13002
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !13002
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !13002
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !13002
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !13004

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !13005
  br label %kmalloc_type.exit.i, !dbg !13005

if.end.i16.i:                                     ; preds = %if.end4.i
  %50 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !13006
  %and2.i.i = and i32 %50, 1, !dbg !13007
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !13006
  %51 = zext i1 %tobool3.i.i to i64, !dbg !13006
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !13006
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !13008
  br label %kmalloc_type.exit.i, !dbg !13008

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %52 = load i32, i32* %retval.i12.i, align 4, !dbg !13009
  %idxprom.i = zext i32 %52 to i64, !dbg !13010
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !13010
  %53 = load i32, i32* %index.i, align 4, !dbg !13011
  %idxprom6.i = zext i32 %53 to i64, !dbg !13010
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !13010
  %54 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !13010
  %55 = load i32, i32* %flags.addr.i, align 4, !dbg !13012
  %56 = load i64, i64* %size.addr.i, align 8, !dbg !13013
  store %struct.kmem_cache* %54, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %55, i32* %flags.addr.i17.i, align 4
  store i64 %56, i64* %size.addr.i18.i, align 8
  %57 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !13014
  %58 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !13015
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %57, i32 %58) #12, !dbg !13016
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !13016
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !13016
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !13016
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !13016
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !12766
  %59 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !13017
  %60 = load i8*, i8** %ret.i.i, align 8, !dbg !13018
  %61 = load i64, i64* %size.addr.i18.i, align 8, !dbg !13019
  %62 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !13020
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %59, i8* %60, i64 %61, i32 %62) #12, !dbg !13021
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !13022
  %63 = load i8*, i8** %ret.i.i, align 8, !dbg !13023
  store i8* %63, i8** %retval.i, align 8, !dbg !13024
  br label %kmalloc.exit, !dbg !13024

if.end9.i:                                        ; preds = %entry
  %64 = load i64, i64* %size.addr.i, align 8, !dbg !13025
  %65 = load i32, i32* %flags.addr.i, align 4, !dbg !13026
  %call10.i = call noalias i8* @__kmalloc(i64 %64, i32 %65) #12, !dbg !13027
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !13027
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !13027
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !13027
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !13027
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !13028
  br label %kmalloc.exit, !dbg !13028

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %66 = load i8*, i8** %retval.i, align 8, !dbg !13029
  store i8* %66, i8** %spms_pl, align 8, !dbg !13030
  %67 = load i8*, i8** %spms_pl, align 8, !dbg !13031
  %tobool = icmp ne i8* %67, null, !dbg !13031
  br i1 %tobool, label %if.end, label %if.then, !dbg !13033

if.then:                                          ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !13034
  br label %return, !dbg !13034

if.end:                                           ; preds = %kmalloc.exit
  %68 = load i8*, i8** %spms_pl, align 8, !dbg !13035
  %69 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !13036
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %69, i32 0, i32 3, !dbg !13037
  %70 = load i8, i8* %local_port, align 8, !dbg !13037
  call void @mlxsw_reg_spms_pack(i8* %68, i8 zeroext %70) #9, !dbg !13038
  %71 = load i8*, i8** %spms_pl, align 8, !dbg !13039
  %72 = load i16, i16* %vid.addr, align 2, !dbg !13040
  %73 = load i32, i32* %spms_state, align 4, !dbg !13041
  call void @mlxsw_reg_spms_vid_pack(i8* %71, i16 zeroext %72, i32 %73) #9, !dbg !13042
  %74 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !13043
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %74, i32 0, i32 1, !dbg !13044
  %75 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !13044
  %76 = load i8*, i8** %spms_pl, align 8, !dbg !13045
  %call3 = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %75, %struct.mlxsw_reg_info* @mlxsw_reg_spms, i8* %76) #9, !dbg !13046
  store i32 %call3, i32* %err, align 4, !dbg !13047
  %77 = load i8*, i8** %spms_pl, align 8, !dbg !13048
  call void @kfree(i8* %77) #9, !dbg !13049
  %78 = load i32, i32* %err, align 4, !dbg !13050
  store i32 %78, i32* %retval, align 4, !dbg !13051
  br label %return, !dbg !13051

return:                                           ; preds = %if.end, %if.then
  %79 = load i32, i32* %retval, align 4, !dbg !13052
  ret i32 %79, !dbg !13052
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_spms_pack(i8* %payload, i8 zeroext %local_port) #0 !dbg !13053 {
entry:
  %payload.addr = alloca i8*, align 8
  %local_port.addr = alloca i8, align 1
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !13056, metadata !DIExpression()), !dbg !13057
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !13058, metadata !DIExpression()), !dbg !13059
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !13060
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_spms, i32 0, i32 1), align 2, !dbg !13060
  %conv = zext i16 %1 to i64, !dbg !13060
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !13060
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !13061
  %3 = load i8, i8* %local_port.addr, align 1, !dbg !13062
  %conv1 = zext i8 %3 to i32, !dbg !13062
  call void @mlxsw_reg_spms_local_port_set(i8* %2, i32 %conv1) #9, !dbg !13063
  ret void, !dbg !13064
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_spms_vid_pack(i8* %payload, i16 zeroext %vid, i32 %state) #0 !dbg !13065 {
entry:
  %payload.addr = alloca i8*, align 8
  %vid.addr = alloca i16, align 2
  %state.addr = alloca i32, align 4
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !13068, metadata !DIExpression()), !dbg !13069
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !13070, metadata !DIExpression()), !dbg !13071
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !13072, metadata !DIExpression()), !dbg !13073
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !13074
  %1 = load i16, i16* %vid.addr, align 2, !dbg !13075
  %2 = load i32, i32* %state.addr, align 4, !dbg !13076
  %conv = trunc i32 %2 to i8, !dbg !13076
  call void @mlxsw_reg_spms_state_set(i8* %0, i16 zeroext %1, i8 zeroext %conv) #9, !dbg !13077
  ret void, !dbg !13078
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_reg_write(%struct.mlxsw_core*, %struct.mlxsw_reg_info*, i8*) #2

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_sp_port_admin_status_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, i1 zeroext %is_up) #0 !dbg !13079 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %is_up.addr = alloca i8, align 1
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %paos_pl = alloca [16 x i8], align 16
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !13082, metadata !DIExpression()), !dbg !13083
  %frombool = zext i1 %is_up to i8
  store i8 %frombool, i8* %is_up.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_up.addr, metadata !13084, metadata !DIExpression()), !dbg !13085
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !13086, metadata !DIExpression()), !dbg !13087
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !13088
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !13089
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !13089
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !13087
  call void @llvm.dbg.declare(metadata [16 x i8]* %paos_pl, metadata !13090, metadata !DIExpression()), !dbg !13091
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %paos_pl, i64 0, i64 0, !dbg !13092
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !13093
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %2, i32 0, i32 3, !dbg !13094
  %3 = load i8, i8* %local_port, align 8, !dbg !13094
  %4 = load i8, i8* %is_up.addr, align 1, !dbg !13095
  %tobool = trunc i8 %4 to i1, !dbg !13095
  %5 = zext i1 %tobool to i64, !dbg !13095
  %cond = select i1 %tobool, i32 1, i32 2, !dbg !13095
  call void @mlxsw_reg_paos_pack(i8* %arraydecay, i8 zeroext %3, i32 %cond) #9, !dbg !13096
  %6 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !13097
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %6, i32 0, i32 1, !dbg !13098
  %7 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !13098
  %arraydecay2 = getelementptr inbounds [16 x i8], [16 x i8]* %paos_pl, i64 0, i64 0, !dbg !13099
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %7, %struct.mlxsw_reg_info* @mlxsw_reg_paos, i8* %arraydecay2) #9, !dbg !13100
  ret i32 %call, !dbg !13101
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_paos_pack(i8* %payload, i8 zeroext %local_port, i32 %status) #0 !dbg !13102 {
entry:
  %payload.addr = alloca i8*, align 8
  %local_port.addr = alloca i8, align 1
  %status.addr = alloca i32, align 4
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !13105, metadata !DIExpression()), !dbg !13106
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !13107, metadata !DIExpression()), !dbg !13108
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !13109, metadata !DIExpression()), !dbg !13110
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !13111
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_paos, i32 0, i32 1), align 2, !dbg !13111
  %conv = zext i16 %1 to i64, !dbg !13111
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !13111
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !13112
  call void @mlxsw_reg_paos_swid_set(i8* %2, i32 0) #9, !dbg !13113
  %3 = load i8*, i8** %payload.addr, align 8, !dbg !13114
  %4 = load i8, i8* %local_port.addr, align 1, !dbg !13115
  %conv1 = zext i8 %4 to i32, !dbg !13115
  call void @mlxsw_reg_paos_local_port_set(i8* %3, i32 %conv1) #9, !dbg !13116
  %5 = load i8*, i8** %payload.addr, align 8, !dbg !13117
  %6 = load i32, i32* %status.addr, align 4, !dbg !13118
  call void @mlxsw_reg_paos_admin_status_set(i8* %5, i32 %6) #9, !dbg !13119
  %7 = load i8*, i8** %payload.addr, align 8, !dbg !13120
  call void @mlxsw_reg_paos_oper_status_set(i8* %7, i32 0) #9, !dbg !13121
  %8 = load i8*, i8** %payload.addr, align 8, !dbg !13122
  call void @mlxsw_reg_paos_ase_set(i8* %8, i32 1) #9, !dbg !13123
  %9 = load i8*, i8** %payload.addr, align 8, !dbg !13124
  call void @mlxsw_reg_paos_ee_set(i8* %9, i32 1) #9, !dbg !13125
  %10 = load i8*, i8** %payload.addr, align 8, !dbg !13126
  call void @mlxsw_reg_paos_e_set(i8* %10, i32 1) #9, !dbg !13127
  ret void, !dbg !13128
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_sp_port_vp_mode_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, i1 zeroext %enable) #0 !dbg !13129 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %enable.addr = alloca i8, align 1
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %svpe_pl = alloca [4 x i8], align 1
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !13130, metadata !DIExpression()), !dbg !13131
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !13132, metadata !DIExpression()), !dbg !13133
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !13134, metadata !DIExpression()), !dbg !13135
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !13136
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !13137
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !13137
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !13135
  call void @llvm.dbg.declare(metadata [4 x i8]* %svpe_pl, metadata !13138, metadata !DIExpression()), !dbg !13140
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %svpe_pl, i64 0, i64 0, !dbg !13141
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !13142
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %2, i32 0, i32 3, !dbg !13143
  %3 = load i8, i8* %local_port, align 8, !dbg !13143
  %4 = load i8, i8* %enable.addr, align 1, !dbg !13144
  %tobool = trunc i8 %4 to i1, !dbg !13144
  call void @mlxsw_reg_svpe_pack(i8* %arraydecay, i8 zeroext %3, i1 zeroext %tobool) #9, !dbg !13145
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !13146
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %5, i32 0, i32 1, !dbg !13147
  %6 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !13147
  %arraydecay2 = getelementptr inbounds [4 x i8], [4 x i8]* %svpe_pl, i64 0, i64 0, !dbg !13148
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %6, %struct.mlxsw_reg_info* @mlxsw_reg_svpe, i8* %arraydecay2) #9, !dbg !13149
  ret i32 %call, !dbg !13150
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_svpe_pack(i8* %payload, i8 zeroext %local_port, i1 zeroext %enable) #0 !dbg !13151 {
entry:
  %payload.addr = alloca i8*, align 8
  %local_port.addr = alloca i8, align 1
  %enable.addr = alloca i8, align 1
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !13154, metadata !DIExpression()), !dbg !13155
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !13156, metadata !DIExpression()), !dbg !13157
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !13158, metadata !DIExpression()), !dbg !13159
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !13160
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_svpe, i32 0, i32 1), align 2, !dbg !13160
  %conv = zext i16 %1 to i64, !dbg !13160
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !13160
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !13161
  %3 = load i8, i8* %local_port.addr, align 1, !dbg !13162
  %conv1 = zext i8 %3 to i32, !dbg !13162
  call void @mlxsw_reg_svpe_local_port_set(i8* %2, i32 %conv1) #9, !dbg !13163
  %4 = load i8*, i8** %payload.addr, align 8, !dbg !13164
  %5 = load i8, i8* %enable.addr, align 1, !dbg !13165
  %tobool = trunc i8 %5 to i1, !dbg !13165
  %conv2 = zext i1 %tobool to i32, !dbg !13165
  call void @mlxsw_reg_svpe_vp_en_set(i8* %4, i32 %conv2) #9, !dbg !13166
  ret void, !dbg !13167
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_sp_port_vid_learning_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, i16 zeroext %vid, i1 zeroext %learn_enable) #0 !dbg !13168 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !12749, metadata !DIExpression()), !dbg !13171
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !12761, metadata !DIExpression()), !dbg !13174
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !12763, metadata !DIExpression()), !dbg !13175
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !12765, metadata !DIExpression()), !dbg !13176
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !12767, metadata !DIExpression()), !dbg !13177
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !12773, metadata !DIExpression()), !dbg !13179
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !12779, metadata !DIExpression()), !dbg !13181
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !12788, metadata !DIExpression()), !dbg !13184
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !12790, metadata !DIExpression()), !dbg !13185
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12792, metadata !DIExpression()), !dbg !13186
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !12794, metadata !DIExpression()), !dbg !13187
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !12796, metadata !DIExpression()), !dbg !13188
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12798, metadata !DIExpression()), !dbg !13189
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !12800, metadata !DIExpression()), !dbg !13190
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !12802, metadata !DIExpression()), !dbg !13191
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %vid.addr = alloca i16, align 2
  %learn_enable.addr = alloca i8, align 1
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %spvmlr_pl = alloca i8*, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !13192, metadata !DIExpression()), !dbg !13193
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !13194, metadata !DIExpression()), !dbg !13195
  %frombool = zext i1 %learn_enable to i8
  store i8 %frombool, i8* %learn_enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %learn_enable.addr, metadata !13196, metadata !DIExpression()), !dbg !13197
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !13198, metadata !DIExpression()), !dbg !13199
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !13200
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !13201
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !13201
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !13199
  call void @llvm.dbg.declare(metadata i8** %spvmlr_pl, metadata !13202, metadata !DIExpression()), !dbg !13203
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13204, metadata !DIExpression()), !dbg !13205
  store i64 1024, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !13206
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #10, !dbg !13207
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !13208

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !13209
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !13210
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !13211

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !13212
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !13213
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !13214
  %call.i.i = call i32 @get_order(i64 %7) #11, !dbg !13215
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !13188
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !13216
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !13217
  %10 = load i32, i32* %order.i.i, align 4, !dbg !13218
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !13219
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !13220
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !13221
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #12, !dbg !13222
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !13222
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !13222
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !13222
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !13222
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !13223
  br label %kmalloc.exit, !dbg !13223

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !13224
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13225
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !13225
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !13226

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !13227
  br label %kmalloc_index.exit.i, !dbg !13227

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13228
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !13229
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !13230

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !13231
  br label %kmalloc_index.exit.i, !dbg !13231

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13232
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !13233
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !13234

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13235
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !13236
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !13237

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !13238
  br label %kmalloc_index.exit.i, !dbg !13238

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13239
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !13240
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !13241

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13242
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !13243
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !13244

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !13245
  br label %kmalloc_index.exit.i, !dbg !13245

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13246
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !13247
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !13248

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !13249
  br label %kmalloc_index.exit.i, !dbg !13249

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13250
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !13251
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !13252

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !13253
  br label %kmalloc_index.exit.i, !dbg !13253

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13254
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !13255
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !13256

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !13257
  br label %kmalloc_index.exit.i, !dbg !13257

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13258
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !13259
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !13260

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !13261
  br label %kmalloc_index.exit.i, !dbg !13261

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13262
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !13263
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !13264

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !13265
  br label %kmalloc_index.exit.i, !dbg !13265

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13266
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !13267
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !13268

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !13269
  br label %kmalloc_index.exit.i, !dbg !13269

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13270
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !13271
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !13272

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !13273
  br label %kmalloc_index.exit.i, !dbg !13273

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13274
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !13275
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !13276

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !13277
  br label %kmalloc_index.exit.i, !dbg !13277

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13278
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !13279
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !13280

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !13281
  br label %kmalloc_index.exit.i, !dbg !13281

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13282
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !13283
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !13284

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !13285
  br label %kmalloc_index.exit.i, !dbg !13285

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13286
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !13287
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !13288

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !13289
  br label %kmalloc_index.exit.i, !dbg !13289

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13290
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !13291
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !13292

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !13293
  br label %kmalloc_index.exit.i, !dbg !13293

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13294
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !13295
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !13296

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !13297
  br label %kmalloc_index.exit.i, !dbg !13297

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13298
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !13299
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !13300

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !13301
  br label %kmalloc_index.exit.i, !dbg !13301

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13302
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !13303
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !13304

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !13305
  br label %kmalloc_index.exit.i, !dbg !13305

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13306
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !13307
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !13308

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !13309
  br label %kmalloc_index.exit.i, !dbg !13309

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13310
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !13311
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !13312

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !13313
  br label %kmalloc_index.exit.i, !dbg !13313

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13314
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !13315
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !13316

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !13317
  br label %kmalloc_index.exit.i, !dbg !13317

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13318
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !13319
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !13320

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !13321
  br label %kmalloc_index.exit.i, !dbg !13321

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13322
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !13323
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !13324

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !13325
  br label %kmalloc_index.exit.i, !dbg !13325

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13326
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !13327
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !13328

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !13329
  br label %kmalloc_index.exit.i, !dbg !13329

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13330
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !13331
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !13332

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !13333
  br label %kmalloc_index.exit.i, !dbg !13333

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13334
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !13335
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !13336

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !13337
  br label %kmalloc_index.exit.i, !dbg !13337

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13338
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !13339
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !13340

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !13341
  br label %kmalloc_index.exit.i, !dbg !13341

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !13342, !srcloc !12989
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 160) #10, !dbg !13343, !srcloc !12993
  unreachable, !dbg !13344

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !13345
  store i32 %45, i32* %index.i, align 4, !dbg !13346
  %46 = load i32, i32* %index.i, align 4, !dbg !13347
  %tobool.i = icmp ne i32 %46, 0, !dbg !13347
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !13348

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !13349
  br label %kmalloc.exit, !dbg !13349

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !13350
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !13351
  %and.i.i = and i32 %48, 17, !dbg !13351
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !13351
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !13351
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !13351
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !13351
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !13352

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !13353
  br label %kmalloc_type.exit.i, !dbg !13353

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !13354
  %and2.i.i = and i32 %49, 1, !dbg !13355
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !13354
  %50 = zext i1 %tobool3.i.i to i64, !dbg !13354
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !13354
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !13356
  br label %kmalloc_type.exit.i, !dbg !13356

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !13357
  %idxprom.i = zext i32 %51 to i64, !dbg !13358
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !13358
  %52 = load i32, i32* %index.i, align 4, !dbg !13359
  %idxprom6.i = zext i32 %52 to i64, !dbg !13358
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !13358
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !13358
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !13360
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !13361
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !13362
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !13363
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #12, !dbg !13364
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !13364
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !13364
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !13364
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !13364
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !13176
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !13365
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !13366
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !13367
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !13368
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #12, !dbg !13369
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !13370
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !13371
  store i8* %62, i8** %retval.i, align 8, !dbg !13372
  br label %kmalloc.exit, !dbg !13372

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !13373
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !13374
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #12, !dbg !13375
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !13375
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !13375
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !13375
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !13375
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !13376
  br label %kmalloc.exit, !dbg !13376

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !13377
  store i8* %65, i8** %spvmlr_pl, align 8, !dbg !13378
  %66 = load i8*, i8** %spvmlr_pl, align 8, !dbg !13379
  %tobool = icmp ne i8* %66, null, !dbg !13379
  br i1 %tobool, label %if.end, label %if.then, !dbg !13381

if.then:                                          ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !13382
  br label %return, !dbg !13382

if.end:                                           ; preds = %kmalloc.exit
  %67 = load i8*, i8** %spvmlr_pl, align 8, !dbg !13383
  %68 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !13384
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %68, i32 0, i32 3, !dbg !13385
  %69 = load i8, i8* %local_port, align 8, !dbg !13385
  %70 = load i16, i16* %vid.addr, align 2, !dbg !13386
  %71 = load i16, i16* %vid.addr, align 2, !dbg !13387
  %72 = load i8, i8* %learn_enable.addr, align 1, !dbg !13388
  %tobool2 = trunc i8 %72 to i1, !dbg !13388
  call void @mlxsw_reg_spvmlr_pack(i8* %67, i8 zeroext %69, i16 zeroext %70, i16 zeroext %71, i1 zeroext %tobool2) #9, !dbg !13389
  %73 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !13390
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %73, i32 0, i32 1, !dbg !13391
  %74 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !13391
  %75 = load i8*, i8** %spvmlr_pl, align 8, !dbg !13392
  %call3 = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %74, %struct.mlxsw_reg_info* @mlxsw_reg_spvmlr, i8* %75) #9, !dbg !13393
  store i32 %call3, i32* %err, align 4, !dbg !13394
  %76 = load i8*, i8** %spvmlr_pl, align 8, !dbg !13395
  call void @kfree(i8* %76) #9, !dbg !13396
  %77 = load i32, i32* %err, align 4, !dbg !13397
  store i32 %77, i32* %retval, align 4, !dbg !13398
  br label %return, !dbg !13398

return:                                           ; preds = %if.end, %if.then
  %78 = load i32, i32* %retval, align 4, !dbg !13399
  ret i32 %78, !dbg !13399
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_spvmlr_pack(i8* %payload, i8 zeroext %local_port, i16 zeroext %vid_begin, i16 zeroext %vid_end, i1 zeroext %learn_enable) #0 !dbg !13400 {
entry:
  %payload.addr = alloca i8*, align 8
  %local_port.addr = alloca i8, align 1
  %vid_begin.addr = alloca i16, align 2
  %vid_end.addr = alloca i16, align 2
  %learn_enable.addr = alloca i8, align 1
  %num_rec = alloca i32, align 4
  %i = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !13403, metadata !DIExpression()), !dbg !13404
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !13405, metadata !DIExpression()), !dbg !13406
  store i16 %vid_begin, i16* %vid_begin.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid_begin.addr, metadata !13407, metadata !DIExpression()), !dbg !13408
  store i16 %vid_end, i16* %vid_end.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid_end.addr, metadata !13409, metadata !DIExpression()), !dbg !13410
  %frombool = zext i1 %learn_enable to i8
  store i8 %frombool, i8* %learn_enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %learn_enable.addr, metadata !13411, metadata !DIExpression()), !dbg !13412
  call void @llvm.dbg.declare(metadata i32* %num_rec, metadata !13413, metadata !DIExpression()), !dbg !13414
  %0 = load i16, i16* %vid_end.addr, align 2, !dbg !13415
  %conv = zext i16 %0 to i32, !dbg !13415
  %1 = load i16, i16* %vid_begin.addr, align 2, !dbg !13416
  %conv1 = zext i16 %1 to i32, !dbg !13416
  %sub = sub i32 %conv, %conv1, !dbg !13417
  %add = add i32 %sub, 1, !dbg !13418
  store i32 %add, i32* %num_rec, align 4, !dbg !13414
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13419, metadata !DIExpression()), !dbg !13420
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !13421, metadata !DIExpression()), !dbg !13423
  %2 = load i32, i32* %num_rec, align 4, !dbg !13423
  %cmp = icmp slt i32 %2, 1, !dbg !13423
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !13423

lor.rhs:                                          ; preds = %entry
  %3 = load i32, i32* %num_rec, align 4, !dbg !13423
  %cmp3 = icmp sgt i32 %3, 255, !dbg !13423
  br label %lor.end, !dbg !13423

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %cmp3, %lor.rhs ]
  %lnot = xor i1 %4, true, !dbg !13423
  %lnot5 = xor i1 %lnot, true, !dbg !13423
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !13423
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !13423
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !13424
  %tobool = icmp ne i32 %5, 0, !dbg !13424
  %lnot6 = xor i1 %tobool, true, !dbg !13424
  %lnot8 = xor i1 %lnot6, true, !dbg !13424
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !13424
  %conv10 = sext i32 %lnot.ext9 to i64, !dbg !13424
  %tobool11 = icmp ne i64 %conv10, 0, !dbg !13424
  br i1 %tobool11, label %if.then, label %if.end, !dbg !13423

if.then:                                          ; preds = %lor.end
  br label %do.body, !dbg !13424

do.body:                                          ; preds = %if.then
  br label %do.body12, !dbg !13426

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !13428

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !13426

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.42, i64 0, i64 0), i32 1848, i32 2305, i64 12) #10, !dbg !13430, !srcloc !13432
  br label %do.end14, !dbg !13430

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 649) #10, !dbg !13433, !srcloc !13435
  br label %do.body15, !dbg !13426

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !13436

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !13426

do.end17:                                         ; preds = %do.end16
  br label %if.end, !dbg !13426

if.end:                                           ; preds = %do.end17, %lor.end
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !13423
  %tobool18 = icmp ne i32 %6, 0, !dbg !13423
  %lnot19 = xor i1 %tobool18, true, !dbg !13423
  %lnot21 = xor i1 %lnot19, true, !dbg !13423
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !13423
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !13423
  store i64 %conv23, i64* %tmp, align 8, !dbg !13424
  %7 = load i64, i64* %tmp, align 8, !dbg !13423
  %8 = load i8*, i8** %payload.addr, align 8, !dbg !13438
  %9 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_spvmlr, i32 0, i32 1), align 2, !dbg !13438
  %conv24 = zext i16 %9 to i64, !dbg !13438
  call void @llvm.memset.p0i8.i64(i8* align 1 %8, i8 0, i64 %conv24, i1 false), !dbg !13438
  %10 = load i8*, i8** %payload.addr, align 8, !dbg !13439
  %11 = load i8, i8* %local_port.addr, align 1, !dbg !13440
  %conv25 = zext i8 %11 to i32, !dbg !13440
  call void @mlxsw_reg_spvmlr_local_port_set(i8* %10, i32 %conv25) #9, !dbg !13441
  %12 = load i8*, i8** %payload.addr, align 8, !dbg !13442
  %13 = load i32, i32* %num_rec, align 4, !dbg !13443
  call void @mlxsw_reg_spvmlr_num_rec_set(i8* %12, i32 %13) #9, !dbg !13444
  store i32 0, i32* %i, align 4, !dbg !13445
  br label %for.cond, !dbg !13447

for.cond:                                         ; preds = %for.inc, %if.end
  %14 = load i32, i32* %i, align 4, !dbg !13448
  %15 = load i32, i32* %num_rec, align 4, !dbg !13450
  %cmp26 = icmp slt i32 %14, %15, !dbg !13451
  br i1 %cmp26, label %for.body, label %for.end, !dbg !13452

for.body:                                         ; preds = %for.cond
  %16 = load i8*, i8** %payload.addr, align 8, !dbg !13453
  %17 = load i32, i32* %i, align 4, !dbg !13455
  %conv28 = trunc i32 %17 to i16, !dbg !13455
  %18 = load i8, i8* %learn_enable.addr, align 1, !dbg !13456
  %tobool29 = trunc i8 %18 to i1, !dbg !13456
  %conv30 = zext i1 %tobool29 to i32, !dbg !13456
  call void @mlxsw_reg_spvmlr_rec_learn_enable_set(i8* %16, i16 zeroext %conv28, i32 %conv30) #9, !dbg !13457
  %19 = load i8*, i8** %payload.addr, align 8, !dbg !13458
  %20 = load i32, i32* %i, align 4, !dbg !13459
  %conv31 = trunc i32 %20 to i16, !dbg !13459
  %21 = load i16, i16* %vid_begin.addr, align 2, !dbg !13460
  %conv32 = zext i16 %21 to i32, !dbg !13460
  %22 = load i32, i32* %i, align 4, !dbg !13461
  %add33 = add i32 %conv32, %22, !dbg !13462
  call void @mlxsw_reg_spvmlr_rec_vid_set(i8* %19, i16 zeroext %conv31, i32 %add33) #9, !dbg !13463
  br label %for.inc, !dbg !13464

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %i, align 4, !dbg !13465
  %inc = add i32 %23, 1, !dbg !13465
  store i32 %inc, i32* %i, align 4, !dbg !13465
  br label %for.cond, !dbg !13466, !llvm.loop !13467

for.end:                                          ; preds = %for.cond
  ret void, !dbg !13469
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_sp_port_pvid_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, i16 zeroext %vid) #0 !dbg !13470 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %vid.addr = alloca i16, align 2
  %err = alloca i32, align 4
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !13473, metadata !DIExpression()), !dbg !13474
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !13475, metadata !DIExpression()), !dbg !13476
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13477, metadata !DIExpression()), !dbg !13478
  %0 = load i16, i16* %vid.addr, align 2, !dbg !13479
  %tobool = icmp ne i16 %0, 0, !dbg !13479
  br i1 %tobool, label %if.else, label %if.then, !dbg !13481

if.then:                                          ; preds = %entry
  %1 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !13482
  %call = call i32 @mlxsw_sp_port_allow_untagged_set(%struct.mlxsw_sp_port* %1, i1 zeroext false) #9, !dbg !13484
  store i32 %call, i32* %err, align 4, !dbg !13485
  %2 = load i32, i32* %err, align 4, !dbg !13486
  %tobool1 = icmp ne i32 %2, 0, !dbg !13486
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !13488

if.then2:                                         ; preds = %if.then
  %3 = load i32, i32* %err, align 4, !dbg !13489
  store i32 %3, i32* %retval, align 4, !dbg !13490
  br label %return, !dbg !13490

if.end:                                           ; preds = %if.then
  br label %if.end11, !dbg !13491

if.else:                                          ; preds = %entry
  %4 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !13492
  %5 = load i16, i16* %vid.addr, align 2, !dbg !13494
  %call3 = call i32 @__mlxsw_sp_port_pvid_set(%struct.mlxsw_sp_port* %4, i16 zeroext %5) #9, !dbg !13495
  store i32 %call3, i32* %err, align 4, !dbg !13496
  %6 = load i32, i32* %err, align 4, !dbg !13497
  %tobool4 = icmp ne i32 %6, 0, !dbg !13497
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !13499

if.then5:                                         ; preds = %if.else
  %7 = load i32, i32* %err, align 4, !dbg !13500
  store i32 %7, i32* %retval, align 4, !dbg !13501
  br label %return, !dbg !13501

if.end6:                                          ; preds = %if.else
  %8 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !13502
  %call7 = call i32 @mlxsw_sp_port_allow_untagged_set(%struct.mlxsw_sp_port* %8, i1 zeroext true) #9, !dbg !13503
  store i32 %call7, i32* %err, align 4, !dbg !13504
  %9 = load i32, i32* %err, align 4, !dbg !13505
  %tobool8 = icmp ne i32 %9, 0, !dbg !13505
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !13507

if.then9:                                         ; preds = %if.end6
  br label %err_port_allow_untagged_set, !dbg !13508

if.end10:                                         ; preds = %if.end6
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %if.end
  %10 = load i16, i16* %vid.addr, align 2, !dbg !13509
  %11 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !13510
  %pvid = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %11, i32 0, i32 5, !dbg !13511
  store i16 %10, i16* %pvid, align 2, !dbg !13512
  store i32 0, i32* %retval, align 4, !dbg !13513
  br label %return, !dbg !13513

err_port_allow_untagged_set:                      ; preds = %if.then9
  call void @llvm.dbg.label(metadata !13514), !dbg !13515
  %12 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !13516
  %13 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !13517
  %pvid12 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %13, i32 0, i32 5, !dbg !13518
  %14 = load i16, i16* %pvid12, align 2, !dbg !13518
  %call13 = call i32 @__mlxsw_sp_port_pvid_set(%struct.mlxsw_sp_port* %12, i16 zeroext %14) #9, !dbg !13519
  %15 = load i32, i32* %err, align 4, !dbg !13520
  store i32 %15, i32* %retval, align 4, !dbg !13521
  br label %return, !dbg !13521

return:                                           ; preds = %err_port_allow_untagged_set, %if.end11, %if.then5, %if.then2
  %16 = load i32, i32* %retval, align 4, !dbg !13522
  ret i32 %16, !dbg !13522
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_allow_untagged_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, i1 zeroext %allow) #0 !dbg !13523 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %allow.addr = alloca i8, align 1
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %spaft_pl = alloca [8 x i8], align 1
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !13524, metadata !DIExpression()), !dbg !13525
  %frombool = zext i1 %allow to i8
  store i8 %frombool, i8* %allow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %allow.addr, metadata !13526, metadata !DIExpression()), !dbg !13527
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !13528, metadata !DIExpression()), !dbg !13529
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !13530
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !13531
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !13531
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !13529
  call void @llvm.dbg.declare(metadata [8 x i8]* %spaft_pl, metadata !13532, metadata !DIExpression()), !dbg !13533
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %spaft_pl, i64 0, i64 0, !dbg !13534
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !13535
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %2, i32 0, i32 3, !dbg !13536
  %3 = load i8, i8* %local_port, align 8, !dbg !13536
  %4 = load i8, i8* %allow.addr, align 1, !dbg !13537
  %tobool = trunc i8 %4 to i1, !dbg !13537
  call void @mlxsw_reg_spaft_pack(i8* %arraydecay, i8 zeroext %3, i1 zeroext %tobool) #9, !dbg !13538
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !13539
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %5, i32 0, i32 1, !dbg !13540
  %6 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !13540
  %arraydecay2 = getelementptr inbounds [8 x i8], [8 x i8]* %spaft_pl, i64 0, i64 0, !dbg !13541
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %6, %struct.mlxsw_reg_info* @mlxsw_reg_spaft, i8* %arraydecay2) #9, !dbg !13542
  ret i32 %call, !dbg !13543
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__mlxsw_sp_port_pvid_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, i16 zeroext %vid) #0 !dbg !13544 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %vid.addr = alloca i16, align 2
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %spvid_pl = alloca [8 x i8], align 1
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !13545, metadata !DIExpression()), !dbg !13546
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !13547, metadata !DIExpression()), !dbg !13548
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !13549, metadata !DIExpression()), !dbg !13550
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !13551
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !13552
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !13552
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !13550
  call void @llvm.dbg.declare(metadata [8 x i8]* %spvid_pl, metadata !13553, metadata !DIExpression()), !dbg !13554
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %spvid_pl, i64 0, i64 0, !dbg !13555
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !13556
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %2, i32 0, i32 3, !dbg !13557
  %3 = load i8, i8* %local_port, align 8, !dbg !13557
  %4 = load i16, i16* %vid.addr, align 2, !dbg !13558
  call void @mlxsw_reg_spvid_pack(i8* %arraydecay, i8 zeroext %3, i16 zeroext %4) #9, !dbg !13559
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !13560
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %5, i32 0, i32 1, !dbg !13561
  %6 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !13561
  %arraydecay2 = getelementptr inbounds [8 x i8], [8 x i8]* %spvid_pl, i64 0, i64 0, !dbg !13562
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %6, %struct.mlxsw_reg_info* @mlxsw_reg_spvid, i8* %arraydecay2) #9, !dbg !13563
  ret i32 %call, !dbg !13564
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_sp_port_get_stats_raw(%struct.net_device* %dev, i32 %grp, i32 %prio, i8* %ppcnt_pl) #0 !dbg !13565 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %grp.addr = alloca i32, align 4
  %prio.addr = alloca i32, align 4
  %ppcnt_pl.addr = alloca i8*, align 8
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13568, metadata !DIExpression()), !dbg !13569
  store i32 %grp, i32* %grp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %grp.addr, metadata !13570, metadata !DIExpression()), !dbg !13571
  store i32 %prio, i32* %prio.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prio.addr, metadata !13572, metadata !DIExpression()), !dbg !13573
  store i8* %ppcnt_pl, i8** %ppcnt_pl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ppcnt_pl.addr, metadata !13574, metadata !DIExpression()), !dbg !13575
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !13576, metadata !DIExpression()), !dbg !13577
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13578
  %call = call i8* @netdev_priv(%struct.net_device* %0) #9, !dbg !13579
  %1 = bitcast i8* %call to %struct.mlxsw_sp_port*, !dbg !13579
  store %struct.mlxsw_sp_port* %1, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !13577
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !13580, metadata !DIExpression()), !dbg !13581
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !13582
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %2, i32 0, i32 2, !dbg !13583
  %3 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !13583
  store %struct.mlxsw_sp* %3, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !13581
  %4 = load i8*, i8** %ppcnt_pl.addr, align 8, !dbg !13584
  %5 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !13585
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %5, i32 0, i32 3, !dbg !13586
  %6 = load i8, i8* %local_port, align 8, !dbg !13586
  %7 = load i32, i32* %grp.addr, align 4, !dbg !13587
  %8 = load i32, i32* %prio.addr, align 4, !dbg !13588
  %conv = trunc i32 %8 to i8, !dbg !13588
  call void @mlxsw_reg_ppcnt_pack(i8* %4, i8 zeroext %6, i32 %7, i8 zeroext %conv) #9, !dbg !13589
  %9 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !13590
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %9, i32 0, i32 1, !dbg !13591
  %10 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !13591
  %11 = load i8*, i8** %ppcnt_pl.addr, align 8, !dbg !13592
  %call2 = call i32 @mlxsw_reg_query(%struct.mlxsw_core* %10, %struct.mlxsw_reg_info* @mlxsw_reg_ppcnt, i8* %11) #9, !dbg !13593
  ret i32 %call2, !dbg !13594
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @netdev_priv(%struct.net_device* %dev) #0 !dbg !13595 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13598, metadata !DIExpression()), !dbg !13599
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13600
  %1 = bitcast %struct.net_device* %0 to i8*, !dbg !13601
  %add.ptr = getelementptr i8, i8* %1, i64 1984, !dbg !13602
  ret i8* %add.ptr, !dbg !13603
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_ppcnt_pack(i8* %payload, i8 zeroext %local_port, i32 %grp, i8 zeroext %prio_tc) #0 !dbg !13604 {
entry:
  %payload.addr = alloca i8*, align 8
  %local_port.addr = alloca i8, align 1
  %grp.addr = alloca i32, align 4
  %prio_tc.addr = alloca i8, align 1
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !13607, metadata !DIExpression()), !dbg !13608
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !13609, metadata !DIExpression()), !dbg !13610
  store i32 %grp, i32* %grp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %grp.addr, metadata !13611, metadata !DIExpression()), !dbg !13612
  store i8 %prio_tc, i8* %prio_tc.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %prio_tc.addr, metadata !13613, metadata !DIExpression()), !dbg !13614
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !13615
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_ppcnt, i32 0, i32 1), align 2, !dbg !13615
  %conv = zext i16 %1 to i64, !dbg !13615
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !13615
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !13616
  call void @mlxsw_reg_ppcnt_swid_set(i8* %2, i32 0) #9, !dbg !13617
  %3 = load i8*, i8** %payload.addr, align 8, !dbg !13618
  %4 = load i8, i8* %local_port.addr, align 1, !dbg !13619
  %conv1 = zext i8 %4 to i32, !dbg !13619
  call void @mlxsw_reg_ppcnt_local_port_set(i8* %3, i32 %conv1) #9, !dbg !13620
  %5 = load i8*, i8** %payload.addr, align 8, !dbg !13621
  call void @mlxsw_reg_ppcnt_pnat_set(i8* %5, i32 0) #9, !dbg !13622
  %6 = load i8*, i8** %payload.addr, align 8, !dbg !13623
  %7 = load i32, i32* %grp.addr, align 4, !dbg !13624
  call void @mlxsw_reg_ppcnt_grp_set(i8* %6, i32 %7) #9, !dbg !13625
  %8 = load i8*, i8** %payload.addr, align 8, !dbg !13626
  call void @mlxsw_reg_ppcnt_clr_set(i8* %8, i32 0) #9, !dbg !13627
  %9 = load i8*, i8** %payload.addr, align 8, !dbg !13628
  %10 = load i8, i8* %prio_tc.addr, align 1, !dbg !13629
  %conv2 = zext i8 %10 to i32, !dbg !13629
  call void @mlxsw_reg_ppcnt_prio_tc_set(i8* %9, i32 %conv2) #9, !dbg !13630
  ret void, !dbg !13631
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_sp_port_vlan_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, i16 zeroext %vid_begin, i16 zeroext %vid_end, i1 zeroext %is_member, i1 zeroext %untagged) #0 !dbg !13632 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %vid_begin.addr = alloca i16, align 2
  %vid_end.addr = alloca i16, align 2
  %is_member.addr = alloca i8, align 1
  %untagged.addr = alloca i8, align 1
  %vid = alloca i16, align 2
  %vid_e = alloca i16, align 2
  %err = alloca i32, align 4
  %__UNIQUE_ID___x656 = alloca i16, align 2
  %__UNIQUE_ID___y657 = alloca i16, align 2
  %tmp = alloca i32, align 4
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !13635, metadata !DIExpression()), !dbg !13636
  store i16 %vid_begin, i16* %vid_begin.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid_begin.addr, metadata !13637, metadata !DIExpression()), !dbg !13638
  store i16 %vid_end, i16* %vid_end.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid_end.addr, metadata !13639, metadata !DIExpression()), !dbg !13640
  %frombool = zext i1 %is_member to i8
  store i8 %frombool, i8* %is_member.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_member.addr, metadata !13641, metadata !DIExpression()), !dbg !13642
  %frombool1 = zext i1 %untagged to i8
  store i8 %frombool1, i8* %untagged.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %untagged.addr, metadata !13643, metadata !DIExpression()), !dbg !13644
  call void @llvm.dbg.declare(metadata i16* %vid, metadata !13645, metadata !DIExpression()), !dbg !13646
  call void @llvm.dbg.declare(metadata i16* %vid_e, metadata !13647, metadata !DIExpression()), !dbg !13648
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13649, metadata !DIExpression()), !dbg !13650
  %0 = load i16, i16* %vid_begin.addr, align 2, !dbg !13651
  store i16 %0, i16* %vid, align 2, !dbg !13653
  br label %for.cond, !dbg !13654

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i16, i16* %vid, align 2, !dbg !13655
  %conv = zext i16 %1 to i32, !dbg !13655
  %2 = load i16, i16* %vid_end.addr, align 2, !dbg !13657
  %conv2 = zext i16 %2 to i32, !dbg !13657
  %cmp = icmp sle i32 %conv, %conv2, !dbg !13658
  br i1 %cmp, label %for.body, label %for.end, !dbg !13659

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16* %__UNIQUE_ID___x656, metadata !13660, metadata !DIExpression()), !dbg !13663
  %3 = load i16, i16* %vid, align 2, !dbg !13663
  %conv4 = zext i16 %3 to i32, !dbg !13663
  %add = add i32 %conv4, 255, !dbg !13663
  %sub = sub i32 %add, 1, !dbg !13663
  %conv5 = trunc i32 %sub to i16, !dbg !13663
  store i16 %conv5, i16* %__UNIQUE_ID___x656, align 2, !dbg !13663
  call void @llvm.dbg.declare(metadata i16* %__UNIQUE_ID___y657, metadata !13664, metadata !DIExpression()), !dbg !13663
  %4 = load i16, i16* %vid_end.addr, align 2, !dbg !13663
  store i16 %4, i16* %__UNIQUE_ID___y657, align 2, !dbg !13663
  %5 = load i16, i16* %__UNIQUE_ID___x656, align 2, !dbg !13663
  %conv6 = zext i16 %5 to i32, !dbg !13663
  %6 = load i16, i16* %__UNIQUE_ID___y657, align 2, !dbg !13663
  %conv7 = zext i16 %6 to i32, !dbg !13663
  %cmp8 = icmp slt i32 %conv6, %conv7, !dbg !13663
  br i1 %cmp8, label %cond.true, label %cond.false, !dbg !13663

cond.true:                                        ; preds = %for.body
  %7 = load i16, i16* %__UNIQUE_ID___x656, align 2, !dbg !13663
  %conv10 = zext i16 %7 to i32, !dbg !13663
  br label %cond.end, !dbg !13663

cond.false:                                       ; preds = %for.body
  %8 = load i16, i16* %__UNIQUE_ID___y657, align 2, !dbg !13663
  %conv11 = zext i16 %8 to i32, !dbg !13663
  br label %cond.end, !dbg !13663

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv10, %cond.true ], [ %conv11, %cond.false ], !dbg !13663
  store i32 %cond, i32* %tmp, align 4, !dbg !13663
  %9 = load i32, i32* %tmp, align 4, !dbg !13663
  %conv12 = trunc i32 %9 to i16, !dbg !13665
  store i16 %conv12, i16* %vid_e, align 2, !dbg !13666
  %10 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !13667
  %11 = load i16, i16* %vid, align 2, !dbg !13668
  %12 = load i16, i16* %vid_e, align 2, !dbg !13669
  %13 = load i8, i8* %is_member.addr, align 1, !dbg !13670
  %tobool = trunc i8 %13 to i1, !dbg !13670
  %14 = load i8, i8* %untagged.addr, align 1, !dbg !13671
  %tobool13 = trunc i8 %14 to i1, !dbg !13671
  %call = call i32 @__mlxsw_sp_port_vlan_set(%struct.mlxsw_sp_port* %10, i16 zeroext %11, i16 zeroext %12, i1 zeroext %tobool, i1 zeroext %tobool13) #9, !dbg !13672
  store i32 %call, i32* %err, align 4, !dbg !13673
  %15 = load i32, i32* %err, align 4, !dbg !13674
  %tobool14 = icmp ne i32 %15, 0, !dbg !13674
  br i1 %tobool14, label %if.then, label %if.end, !dbg !13676

if.then:                                          ; preds = %cond.end
  %16 = load i32, i32* %err, align 4, !dbg !13677
  store i32 %16, i32* %retval, align 4, !dbg !13678
  br label %return, !dbg !13678

if.end:                                           ; preds = %cond.end
  br label %for.inc, !dbg !13679

for.inc:                                          ; preds = %if.end
  %17 = load i16, i16* %vid, align 2, !dbg !13680
  %conv15 = zext i16 %17 to i32, !dbg !13680
  %add16 = add i32 %conv15, 255, !dbg !13680
  %conv17 = trunc i32 %add16 to i16, !dbg !13680
  store i16 %conv17, i16* %vid, align 2, !dbg !13680
  br label %for.cond, !dbg !13681, !llvm.loop !13682

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !13684
  br label %return, !dbg !13684

return:                                           ; preds = %for.end, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !13685
  ret i32 %18, !dbg !13685
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__mlxsw_sp_port_vlan_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, i16 zeroext %vid_begin, i16 zeroext %vid_end, i1 zeroext %is_member, i1 zeroext %untagged) #0 !dbg !13686 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !12749, metadata !DIExpression()), !dbg !13687
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !12761, metadata !DIExpression()), !dbg !13690
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !12763, metadata !DIExpression()), !dbg !13691
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !12765, metadata !DIExpression()), !dbg !13692
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !12767, metadata !DIExpression()), !dbg !13693
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !12773, metadata !DIExpression()), !dbg !13695
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !12779, metadata !DIExpression()), !dbg !13697
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !12788, metadata !DIExpression()), !dbg !13700
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !12790, metadata !DIExpression()), !dbg !13701
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12792, metadata !DIExpression()), !dbg !13702
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !12794, metadata !DIExpression()), !dbg !13703
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !12796, metadata !DIExpression()), !dbg !13704
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12798, metadata !DIExpression()), !dbg !13705
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !12800, metadata !DIExpression()), !dbg !13706
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !12802, metadata !DIExpression()), !dbg !13707
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %vid_begin.addr = alloca i16, align 2
  %vid_end.addr = alloca i16, align 2
  %is_member.addr = alloca i8, align 1
  %untagged.addr = alloca i8, align 1
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %spvm_pl = alloca i8*, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !13708, metadata !DIExpression()), !dbg !13709
  store i16 %vid_begin, i16* %vid_begin.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid_begin.addr, metadata !13710, metadata !DIExpression()), !dbg !13711
  store i16 %vid_end, i16* %vid_end.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid_end.addr, metadata !13712, metadata !DIExpression()), !dbg !13713
  %frombool = zext i1 %is_member to i8
  store i8 %frombool, i8* %is_member.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_member.addr, metadata !13714, metadata !DIExpression()), !dbg !13715
  %frombool1 = zext i1 %untagged to i8
  store i8 %frombool1, i8* %untagged.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %untagged.addr, metadata !13716, metadata !DIExpression()), !dbg !13717
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !13718, metadata !DIExpression()), !dbg !13719
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !13720
  %mlxsw_sp2 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !13721
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp2, align 8, !dbg !13721
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !13719
  call void @llvm.dbg.declare(metadata i8** %spvm_pl, metadata !13722, metadata !DIExpression()), !dbg !13723
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13724, metadata !DIExpression()), !dbg !13725
  store i64 1024, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !13726
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #10, !dbg !13727
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !13728

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !13729
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !13730
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !13731

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !13732
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !13733
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !13734
  %call.i.i = call i32 @get_order(i64 %7) #11, !dbg !13735
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !13704
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !13736
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !13737
  %10 = load i32, i32* %order.i.i, align 4, !dbg !13738
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !13739
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !13740
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !13741
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #12, !dbg !13742
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !13742
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !13742
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !13742
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !13742
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !13743
  br label %kmalloc.exit, !dbg !13743

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !13744
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13745
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !13745
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !13746

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !13747
  br label %kmalloc_index.exit.i, !dbg !13747

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13748
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !13749
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !13750

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !13751
  br label %kmalloc_index.exit.i, !dbg !13751

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13752
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !13753
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !13754

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13755
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !13756
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !13757

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !13758
  br label %kmalloc_index.exit.i, !dbg !13758

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13759
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !13760
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !13761

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13762
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !13763
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !13764

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !13765
  br label %kmalloc_index.exit.i, !dbg !13765

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13766
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !13767
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !13768

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !13769
  br label %kmalloc_index.exit.i, !dbg !13769

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13770
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !13771
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !13772

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !13773
  br label %kmalloc_index.exit.i, !dbg !13773

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13774
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !13775
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !13776

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !13777
  br label %kmalloc_index.exit.i, !dbg !13777

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13778
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !13779
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !13780

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !13781
  br label %kmalloc_index.exit.i, !dbg !13781

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13782
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !13783
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !13784

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !13785
  br label %kmalloc_index.exit.i, !dbg !13785

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13786
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !13787
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !13788

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !13789
  br label %kmalloc_index.exit.i, !dbg !13789

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13790
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !13791
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !13792

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !13793
  br label %kmalloc_index.exit.i, !dbg !13793

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13794
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !13795
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !13796

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !13797
  br label %kmalloc_index.exit.i, !dbg !13797

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13798
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !13799
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !13800

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !13801
  br label %kmalloc_index.exit.i, !dbg !13801

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13802
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !13803
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !13804

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !13805
  br label %kmalloc_index.exit.i, !dbg !13805

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13806
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !13807
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !13808

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !13809
  br label %kmalloc_index.exit.i, !dbg !13809

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13810
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !13811
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !13812

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !13813
  br label %kmalloc_index.exit.i, !dbg !13813

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13814
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !13815
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !13816

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !13817
  br label %kmalloc_index.exit.i, !dbg !13817

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13818
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !13819
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !13820

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !13821
  br label %kmalloc_index.exit.i, !dbg !13821

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13822
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !13823
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !13824

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !13825
  br label %kmalloc_index.exit.i, !dbg !13825

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13826
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !13827
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !13828

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !13829
  br label %kmalloc_index.exit.i, !dbg !13829

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13830
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !13831
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !13832

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !13833
  br label %kmalloc_index.exit.i, !dbg !13833

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13834
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !13835
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !13836

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !13837
  br label %kmalloc_index.exit.i, !dbg !13837

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13838
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !13839
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !13840

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !13841
  br label %kmalloc_index.exit.i, !dbg !13841

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13842
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !13843
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !13844

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !13845
  br label %kmalloc_index.exit.i, !dbg !13845

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13846
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !13847
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !13848

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !13849
  br label %kmalloc_index.exit.i, !dbg !13849

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13850
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !13851
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !13852

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !13853
  br label %kmalloc_index.exit.i, !dbg !13853

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13854
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !13855
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !13856

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !13857
  br label %kmalloc_index.exit.i, !dbg !13857

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13858
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !13859
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !13860

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !13861
  br label %kmalloc_index.exit.i, !dbg !13861

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !13862, !srcloc !12989
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 160) #10, !dbg !13863, !srcloc !12993
  unreachable, !dbg !13864

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !13865
  store i32 %45, i32* %index.i, align 4, !dbg !13866
  %46 = load i32, i32* %index.i, align 4, !dbg !13867
  %tobool.i = icmp ne i32 %46, 0, !dbg !13867
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !13868

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !13869
  br label %kmalloc.exit, !dbg !13869

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !13870
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !13871
  %and.i.i = and i32 %48, 17, !dbg !13871
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !13871
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !13871
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !13871
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !13871
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !13872

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !13873
  br label %kmalloc_type.exit.i, !dbg !13873

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !13874
  %and2.i.i = and i32 %49, 1, !dbg !13875
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !13874
  %50 = zext i1 %tobool3.i.i to i64, !dbg !13874
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !13874
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !13876
  br label %kmalloc_type.exit.i, !dbg !13876

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !13877
  %idxprom.i = zext i32 %51 to i64, !dbg !13878
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !13878
  %52 = load i32, i32* %index.i, align 4, !dbg !13879
  %idxprom6.i = zext i32 %52 to i64, !dbg !13878
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !13878
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !13878
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !13880
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !13881
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !13882
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !13883
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #12, !dbg !13884
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !13884
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !13884
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !13884
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !13884
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !13692
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !13885
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !13886
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !13887
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !13888
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #12, !dbg !13889
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !13890
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !13891
  store i8* %62, i8** %retval.i, align 8, !dbg !13892
  br label %kmalloc.exit, !dbg !13892

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !13893
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !13894
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #12, !dbg !13895
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !13895
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !13895
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !13895
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !13895
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !13896
  br label %kmalloc.exit, !dbg !13896

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !13897
  store i8* %65, i8** %spvm_pl, align 8, !dbg !13898
  %66 = load i8*, i8** %spvm_pl, align 8, !dbg !13899
  %tobool = icmp ne i8* %66, null, !dbg !13899
  br i1 %tobool, label %if.end, label %if.then, !dbg !13901

if.then:                                          ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !13902
  br label %return, !dbg !13902

if.end:                                           ; preds = %kmalloc.exit
  %67 = load i8*, i8** %spvm_pl, align 8, !dbg !13903
  %68 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !13904
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %68, i32 0, i32 3, !dbg !13905
  %69 = load i8, i8* %local_port, align 8, !dbg !13905
  %70 = load i16, i16* %vid_begin.addr, align 2, !dbg !13906
  %71 = load i16, i16* %vid_end.addr, align 2, !dbg !13907
  %72 = load i8, i8* %is_member.addr, align 1, !dbg !13908
  %tobool3 = trunc i8 %72 to i1, !dbg !13908
  %73 = load i8, i8* %untagged.addr, align 1, !dbg !13909
  %tobool4 = trunc i8 %73 to i1, !dbg !13909
  call void @mlxsw_reg_spvm_pack(i8* %67, i8 zeroext %69, i16 zeroext %70, i16 zeroext %71, i1 zeroext %tobool3, i1 zeroext %tobool4) #9, !dbg !13910
  %74 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !13911
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %74, i32 0, i32 1, !dbg !13912
  %75 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !13912
  %76 = load i8*, i8** %spvm_pl, align 8, !dbg !13913
  %call5 = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %75, %struct.mlxsw_reg_info* @mlxsw_reg_spvm, i8* %76) #9, !dbg !13914
  store i32 %call5, i32* %err, align 4, !dbg !13915
  %77 = load i8*, i8** %spvm_pl, align 8, !dbg !13916
  call void @kfree(i8* %77) #9, !dbg !13917
  %78 = load i32, i32* %err, align 4, !dbg !13918
  store i32 %78, i32* %retval, align 4, !dbg !13919
  br label %return, !dbg !13919

return:                                           ; preds = %if.end, %if.then
  %79 = load i32, i32* %retval, align 4, !dbg !13920
  ret i32 %79, !dbg !13920
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.mlxsw_sp_port_vlan* @mlxsw_sp_port_vlan_create(%struct.mlxsw_sp_port* %mlxsw_sp_port, i16 zeroext %vid) #0 !dbg !13921 {
entry:
  %retval = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %vid.addr = alloca i16, align 2
  %mlxsw_sp_port_vlan = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %untagged = alloca i8, align 1
  %err = alloca i32, align 4
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !13924, metadata !DIExpression()), !dbg !13925
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !13926, metadata !DIExpression()), !dbg !13927
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, metadata !13928, metadata !DIExpression()), !dbg !13929
  call void @llvm.dbg.declare(metadata i8* %untagged, metadata !13930, metadata !DIExpression()), !dbg !13931
  %0 = load i16, i16* %vid.addr, align 2, !dbg !13932
  %conv = zext i16 %0 to i32, !dbg !13932
  %cmp = icmp eq i32 %conv, 4095, !dbg !13933
  %frombool = zext i1 %cmp to i8, !dbg !13931
  store i8 %frombool, i8* %untagged, align 1, !dbg !13931
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13934, metadata !DIExpression()), !dbg !13935
  %1 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !13936
  %2 = load i16, i16* %vid.addr, align 2, !dbg !13937
  %call = call %struct.mlxsw_sp_port_vlan* @mlxsw_sp_port_vlan_find_by_vid(%struct.mlxsw_sp_port* %1, i16 zeroext %2) #9, !dbg !13938
  store %struct.mlxsw_sp_port_vlan* %call, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !13939
  %3 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !13940
  %tobool = icmp ne %struct.mlxsw_sp_port_vlan* %3, null, !dbg !13940
  br i1 %tobool, label %if.then, label %if.end, !dbg !13942

if.then:                                          ; preds = %entry
  %call2 = call i8* @ERR_PTR(i64 -17) #9, !dbg !13943
  %4 = bitcast i8* %call2 to %struct.mlxsw_sp_port_vlan*, !dbg !13943
  store %struct.mlxsw_sp_port_vlan* %4, %struct.mlxsw_sp_port_vlan** %retval, align 8, !dbg !13944
  br label %return, !dbg !13944

if.end:                                           ; preds = %entry
  %5 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !13945
  %6 = load i16, i16* %vid.addr, align 2, !dbg !13946
  %7 = load i16, i16* %vid.addr, align 2, !dbg !13947
  %8 = load i8, i8* %untagged, align 1, !dbg !13948
  %tobool3 = trunc i8 %8 to i1, !dbg !13948
  %call4 = call i32 @mlxsw_sp_port_vlan_set(%struct.mlxsw_sp_port* %5, i16 zeroext %6, i16 zeroext %7, i1 zeroext true, i1 zeroext %tobool3) #9, !dbg !13949
  store i32 %call4, i32* %err, align 4, !dbg !13950
  %9 = load i32, i32* %err, align 4, !dbg !13951
  %tobool5 = icmp ne i32 %9, 0, !dbg !13951
  br i1 %tobool5, label %if.then6, label %if.end9, !dbg !13953

if.then6:                                         ; preds = %if.end
  %10 = load i32, i32* %err, align 4, !dbg !13954
  %conv7 = sext i32 %10 to i64, !dbg !13954
  %call8 = call i8* @ERR_PTR(i64 %conv7) #9, !dbg !13955
  %11 = bitcast i8* %call8 to %struct.mlxsw_sp_port_vlan*, !dbg !13955
  store %struct.mlxsw_sp_port_vlan* %11, %struct.mlxsw_sp_port_vlan** %retval, align 8, !dbg !13956
  br label %return, !dbg !13956

if.end9:                                          ; preds = %if.end
  %call10 = call i8* @kzalloc(i64 64, i32 3264) #9, !dbg !13957
  %12 = bitcast i8* %call10 to %struct.mlxsw_sp_port_vlan*, !dbg !13957
  store %struct.mlxsw_sp_port_vlan* %12, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !13958
  %13 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !13959
  %tobool11 = icmp ne %struct.mlxsw_sp_port_vlan* %13, null, !dbg !13959
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !13961

if.then12:                                        ; preds = %if.end9
  store i32 -12, i32* %err, align 4, !dbg !13962
  br label %err_port_vlan_alloc, !dbg !13964

if.end13:                                         ; preds = %if.end9
  %14 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !13965
  %15 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !13966
  %mlxsw_sp_port14 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %15, i32 0, i32 1, !dbg !13967
  store %struct.mlxsw_sp_port* %14, %struct.mlxsw_sp_port** %mlxsw_sp_port14, align 8, !dbg !13968
  %16 = load i16, i16* %vid.addr, align 2, !dbg !13969
  %17 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !13970
  %vid15 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %17, i32 0, i32 3, !dbg !13971
  store i16 %16, i16* %vid15, align 8, !dbg !13972
  %18 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !13973
  %list = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %18, i32 0, i32 0, !dbg !13974
  %19 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !13975
  %vlans_list = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %19, i32 0, i32 12, !dbg !13976
  call void @list_add(%struct.list_head* %list, %struct.list_head* %vlans_list) #9, !dbg !13977
  %20 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !13978
  store %struct.mlxsw_sp_port_vlan* %20, %struct.mlxsw_sp_port_vlan** %retval, align 8, !dbg !13979
  br label %return, !dbg !13979

err_port_vlan_alloc:                              ; preds = %if.then12
  call void @llvm.dbg.label(metadata !13980), !dbg !13981
  %21 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !13982
  %22 = load i16, i16* %vid.addr, align 2, !dbg !13983
  %23 = load i16, i16* %vid.addr, align 2, !dbg !13984
  %call16 = call i32 @mlxsw_sp_port_vlan_set(%struct.mlxsw_sp_port* %21, i16 zeroext %22, i16 zeroext %23, i1 zeroext false, i1 zeroext false) #9, !dbg !13985
  %24 = load i32, i32* %err, align 4, !dbg !13986
  %conv17 = sext i32 %24 to i64, !dbg !13986
  %call18 = call i8* @ERR_PTR(i64 %conv17) #9, !dbg !13987
  %25 = bitcast i8* %call18 to %struct.mlxsw_sp_port_vlan*, !dbg !13987
  store %struct.mlxsw_sp_port_vlan* %25, %struct.mlxsw_sp_port_vlan** %retval, align 8, !dbg !13988
  br label %return, !dbg !13988

return:                                           ; preds = %err_port_vlan_alloc, %if.end13, %if.then6, %if.then
  %26 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %retval, align 8, !dbg !13989
  ret %struct.mlxsw_sp_port_vlan* %26, !dbg !13989
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_sp_port_vlan* @mlxsw_sp_port_vlan_find_by_vid(%struct.mlxsw_sp_port* %mlxsw_sp_port, i16 zeroext %vid) #0 !dbg !13990 {
entry:
  %retval = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %vid.addr = alloca i16, align 2
  %mlxsw_sp_port_vlan = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %__mptr6 = alloca i8*, align 8
  %tmp11 = alloca %struct.mlxsw_sp_port_vlan*, align 8
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !13995, metadata !DIExpression()), !dbg !13996
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !13997, metadata !DIExpression()), !dbg !13998
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, metadata !13999, metadata !DIExpression()), !dbg !14000
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14001, metadata !DIExpression()), !dbg !14004
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !14004
  %vlans_list = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 12, !dbg !14004
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %vlans_list, i32 0, i32 0, !dbg !14004
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !14004
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !14004
  store i8* %2, i8** %__mptr, align 8, !dbg !14004
  br label %do.body, !dbg !14004

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14005

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !14004
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !14004
  %4 = bitcast i8* %add.ptr to %struct.mlxsw_sp_port_vlan*, !dbg !14004
  store %struct.mlxsw_sp_port_vlan* %4, %struct.mlxsw_sp_port_vlan** %tmp, align 8, !dbg !14005
  %5 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %tmp, align 8, !dbg !14004
  store %struct.mlxsw_sp_port_vlan* %5, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !14007
  br label %for.cond, !dbg !14007

for.cond:                                         ; preds = %do.end10, %do.end
  %6 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !14008
  %list = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %6, i32 0, i32 0, !dbg !14008
  %7 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !14008
  %vlans_list1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %7, i32 0, i32 12, !dbg !14008
  %cmp = icmp eq %struct.list_head* %list, %vlans_list1, !dbg !14008
  %lnot = xor i1 %cmp, true, !dbg !14008
  br i1 %lnot, label %for.body, label %for.end, !dbg !14007

for.body:                                         ; preds = %for.cond
  %8 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !14010
  %vid2 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %8, i32 0, i32 3, !dbg !14013
  %9 = load i16, i16* %vid2, align 8, !dbg !14013
  %conv = zext i16 %9 to i32, !dbg !14010
  %10 = load i16, i16* %vid.addr, align 2, !dbg !14014
  %conv3 = zext i16 %10 to i32, !dbg !14014
  %cmp4 = icmp eq i32 %conv, %conv3, !dbg !14015
  br i1 %cmp4, label %if.then, label %if.end, !dbg !14016

if.then:                                          ; preds = %for.body
  %11 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !14017
  store %struct.mlxsw_sp_port_vlan* %11, %struct.mlxsw_sp_port_vlan** %retval, align 8, !dbg !14018
  br label %return, !dbg !14018

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !14019

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr6, metadata !14020, metadata !DIExpression()), !dbg !14022
  %12 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !14022
  %list7 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %12, i32 0, i32 0, !dbg !14022
  %next8 = getelementptr inbounds %struct.list_head, %struct.list_head* %list7, i32 0, i32 0, !dbg !14022
  %13 = load %struct.list_head*, %struct.list_head** %next8, align 8, !dbg !14022
  %14 = bitcast %struct.list_head* %13 to i8*, !dbg !14022
  store i8* %14, i8** %__mptr6, align 8, !dbg !14022
  br label %do.body9, !dbg !14022

do.body9:                                         ; preds = %for.inc
  br label %do.end10, !dbg !14023

do.end10:                                         ; preds = %do.body9
  %15 = load i8*, i8** %__mptr6, align 8, !dbg !14022
  %add.ptr12 = getelementptr i8, i8* %15, i64 0, !dbg !14022
  %16 = bitcast i8* %add.ptr12 to %struct.mlxsw_sp_port_vlan*, !dbg !14022
  store %struct.mlxsw_sp_port_vlan* %16, %struct.mlxsw_sp_port_vlan** %tmp11, align 8, !dbg !14023
  %17 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %tmp11, align 8, !dbg !14022
  store %struct.mlxsw_sp_port_vlan* %17, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !14008
  br label %for.cond, !dbg !14008, !llvm.loop !14025

for.end:                                          ; preds = %for.cond
  store %struct.mlxsw_sp_port_vlan* null, %struct.mlxsw_sp_port_vlan** %retval, align 8, !dbg !14027
  br label %return, !dbg !14027

return:                                           ; preds = %for.end, %if.then
  %18 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %retval, align 8, !dbg !14028
  ret %struct.mlxsw_sp_port_vlan* %18, !dbg !14028
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #0 !dbg !14029 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !14033, metadata !DIExpression()), !dbg !14034
  %0 = load i64, i64* %error.addr, align 8, !dbg !14035
  %1 = inttoptr i64 %0 to i8*, !dbg !14036
  ret i8* %1, !dbg !14037
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !14038 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !12749, metadata !DIExpression()), !dbg !14039
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !12761, metadata !DIExpression()), !dbg !14042
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !12763, metadata !DIExpression()), !dbg !14043
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !12765, metadata !DIExpression()), !dbg !14044
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !12767, metadata !DIExpression()), !dbg !14045
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !12773, metadata !DIExpression()), !dbg !14047
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !12779, metadata !DIExpression()), !dbg !14049
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !12788, metadata !DIExpression()), !dbg !14052
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !12790, metadata !DIExpression()), !dbg !14053
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12792, metadata !DIExpression()), !dbg !14054
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !12794, metadata !DIExpression()), !dbg !14055
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !12796, metadata !DIExpression()), !dbg !14056
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12798, metadata !DIExpression()), !dbg !14057
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !12800, metadata !DIExpression()), !dbg !14058
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !12802, metadata !DIExpression()), !dbg !14059
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14060, metadata !DIExpression()), !dbg !14061
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !14062, metadata !DIExpression()), !dbg !14063
  %0 = load i64, i64* %size.addr, align 8, !dbg !14064
  %1 = load i32, i32* %flags.addr, align 4, !dbg !14065
  %or = or i32 %1, 256, !dbg !14066
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !14067
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #10, !dbg !14068
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !14069

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !14070
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !14071
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !14072

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !14073
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !14074
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !14075
  %call.i.i = call i32 @get_order(i64 %7) #11, !dbg !14076
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !14056
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !14077
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !14078
  %10 = load i32, i32* %order.i.i, align 4, !dbg !14079
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !14080
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !14081
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !14082
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #12, !dbg !14083
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !14083
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !14083
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !14083
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !14083
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !14084
  br label %kmalloc.exit, !dbg !14084

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !14085
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14086
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !14086
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !14087

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !14088
  br label %kmalloc_index.exit.i, !dbg !14088

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14089
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !14090
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !14091

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !14092
  br label %kmalloc_index.exit.i, !dbg !14092

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14093
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !14094
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !14095

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14096
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !14097
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !14098

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !14099
  br label %kmalloc_index.exit.i, !dbg !14099

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14100
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !14101
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !14102

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14103
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !14104
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !14105

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !14106
  br label %kmalloc_index.exit.i, !dbg !14106

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14107
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !14108
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !14109

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !14110
  br label %kmalloc_index.exit.i, !dbg !14110

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14111
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !14112
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !14113

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !14114
  br label %kmalloc_index.exit.i, !dbg !14114

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14115
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !14116
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !14117

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !14118
  br label %kmalloc_index.exit.i, !dbg !14118

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14119
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !14120
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !14121

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !14122
  br label %kmalloc_index.exit.i, !dbg !14122

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14123
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !14124
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !14125

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !14126
  br label %kmalloc_index.exit.i, !dbg !14126

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14127
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !14128
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !14129

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !14130
  br label %kmalloc_index.exit.i, !dbg !14130

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14131
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !14132
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !14133

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !14134
  br label %kmalloc_index.exit.i, !dbg !14134

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14135
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !14136
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !14137

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !14138
  br label %kmalloc_index.exit.i, !dbg !14138

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14139
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !14140
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !14141

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !14142
  br label %kmalloc_index.exit.i, !dbg !14142

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14143
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !14144
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !14145

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !14146
  br label %kmalloc_index.exit.i, !dbg !14146

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14147
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !14148
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !14149

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !14150
  br label %kmalloc_index.exit.i, !dbg !14150

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14151
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !14152
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !14153

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !14154
  br label %kmalloc_index.exit.i, !dbg !14154

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14155
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !14156
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !14157

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !14158
  br label %kmalloc_index.exit.i, !dbg !14158

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14159
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !14160
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !14161

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !14162
  br label %kmalloc_index.exit.i, !dbg !14162

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14163
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !14164
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !14165

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !14166
  br label %kmalloc_index.exit.i, !dbg !14166

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14167
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !14168
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !14169

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !14170
  br label %kmalloc_index.exit.i, !dbg !14170

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14171
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !14172
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !14173

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !14174
  br label %kmalloc_index.exit.i, !dbg !14174

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14175
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !14176
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !14177

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !14178
  br label %kmalloc_index.exit.i, !dbg !14178

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14179
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !14180
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !14181

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !14182
  br label %kmalloc_index.exit.i, !dbg !14182

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14183
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !14184
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !14185

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !14186
  br label %kmalloc_index.exit.i, !dbg !14186

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14187
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !14188
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !14189

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !14190
  br label %kmalloc_index.exit.i, !dbg !14190

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14191
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !14192
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !14193

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !14194
  br label %kmalloc_index.exit.i, !dbg !14194

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14195
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !14196
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !14197

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !14198
  br label %kmalloc_index.exit.i, !dbg !14198

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14199
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !14200
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !14201

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !14202
  br label %kmalloc_index.exit.i, !dbg !14202

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !14203, !srcloc !12989
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 160) #10, !dbg !14204, !srcloc !12993
  unreachable, !dbg !14205

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !14206
  store i32 %45, i32* %index.i, align 4, !dbg !14207
  %46 = load i32, i32* %index.i, align 4, !dbg !14208
  %tobool.i = icmp ne i32 %46, 0, !dbg !14208
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !14209

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !14210
  br label %kmalloc.exit, !dbg !14210

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !14211
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !14212
  %and.i.i = and i32 %48, 17, !dbg !14212
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !14212
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !14212
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !14212
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !14212
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !14213

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !14214
  br label %kmalloc_type.exit.i, !dbg !14214

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !14215
  %and2.i.i = and i32 %49, 1, !dbg !14216
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !14215
  %50 = zext i1 %tobool3.i.i to i64, !dbg !14215
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !14215
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !14217
  br label %kmalloc_type.exit.i, !dbg !14217

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !14218
  %idxprom.i = zext i32 %51 to i64, !dbg !14219
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !14219
  %52 = load i32, i32* %index.i, align 4, !dbg !14220
  %idxprom6.i = zext i32 %52 to i64, !dbg !14219
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !14219
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !14219
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !14221
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !14222
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !14223
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !14224
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #12, !dbg !14225
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !14225
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !14225
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !14225
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !14225
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !14044
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !14226
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !14227
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !14228
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !14229
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #12, !dbg !14230
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !14231
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !14232
  store i8* %62, i8** %retval.i, align 8, !dbg !14233
  br label %kmalloc.exit, !dbg !14233

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !14234
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !14235
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #12, !dbg !14236
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !14236
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !14236
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !14236
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !14236
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !14237
  br label %kmalloc.exit, !dbg !14237

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !14238
  ret i8* %65, !dbg !14239
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !14240 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !14244, metadata !DIExpression()), !dbg !14245
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !14246, metadata !DIExpression()), !dbg !14247
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !14248
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !14249
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !14250
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !14251
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !14251
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %3) #9, !dbg !14252
  ret void, !dbg !14253
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlxsw_sp_port_vlan_destroy(%struct.mlxsw_sp_port_vlan* %mlxsw_sp_port_vlan) #0 !dbg !14254 {
entry:
  %mlxsw_sp_port_vlan.addr = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %vid = alloca i16, align 2
  store %struct.mlxsw_sp_port_vlan* %mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, metadata !14257, metadata !DIExpression()), !dbg !14258
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !14259, metadata !DIExpression()), !dbg !14260
  %0 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8, !dbg !14261
  %mlxsw_sp_port1 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %0, i32 0, i32 1, !dbg !14262
  %1 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port1, align 8, !dbg !14262
  store %struct.mlxsw_sp_port* %1, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !14260
  call void @llvm.dbg.declare(metadata i16* %vid, metadata !14263, metadata !DIExpression()), !dbg !14264
  %2 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8, !dbg !14265
  %vid2 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %2, i32 0, i32 3, !dbg !14266
  %3 = load i16, i16* %vid2, align 8, !dbg !14266
  store i16 %3, i16* %vid, align 2, !dbg !14264
  %4 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8, !dbg !14267
  call void @mlxsw_sp_port_vlan_cleanup(%struct.mlxsw_sp_port_vlan* %4) #9, !dbg !14268
  %5 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8, !dbg !14269
  %list = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %5, i32 0, i32 0, !dbg !14270
  call void @list_del(%struct.list_head* %list) #9, !dbg !14271
  %6 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8, !dbg !14272
  %7 = bitcast %struct.mlxsw_sp_port_vlan* %6 to i8*, !dbg !14272
  call void @kfree(i8* %7) #9, !dbg !14273
  %8 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !14274
  %9 = load i16, i16* %vid, align 2, !dbg !14275
  %10 = load i16, i16* %vid, align 2, !dbg !14276
  %call = call i32 @mlxsw_sp_port_vlan_set(%struct.mlxsw_sp_port* %8, i16 zeroext %9, i16 zeroext %10, i1 zeroext false, i1 zeroext false) #9, !dbg !14277
  ret void, !dbg !14278
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_port_vlan_cleanup(%struct.mlxsw_sp_port_vlan* %mlxsw_sp_port_vlan) #0 !dbg !14279 {
entry:
  %mlxsw_sp_port_vlan.addr = alloca %struct.mlxsw_sp_port_vlan*, align 8
  store %struct.mlxsw_sp_port_vlan* %mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, metadata !14280, metadata !DIExpression()), !dbg !14281
  %0 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8, !dbg !14282
  %bridge_port = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %0, i32 0, i32 4, !dbg !14284
  %1 = load %struct.mlxsw_sp_bridge_port*, %struct.mlxsw_sp_bridge_port** %bridge_port, align 8, !dbg !14284
  %tobool = icmp ne %struct.mlxsw_sp_bridge_port* %1, null, !dbg !14282
  br i1 %tobool, label %if.then, label %if.else, !dbg !14285

if.then:                                          ; preds = %entry
  %2 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8, !dbg !14286
  call void @mlxsw_sp_port_vlan_bridge_leave(%struct.mlxsw_sp_port_vlan* %2) #9, !dbg !14287
  br label %if.end3, !dbg !14287

if.else:                                          ; preds = %entry
  %3 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8, !dbg !14288
  %fid = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %3, i32 0, i32 2, !dbg !14290
  %4 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !14290
  %tobool1 = icmp ne %struct.mlxsw_sp_fid* %4, null, !dbg !14288
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !14291

if.then2:                                         ; preds = %if.else
  %5 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan.addr, align 8, !dbg !14292
  call void @mlxsw_sp_port_vlan_router_leave(%struct.mlxsw_sp_port_vlan* %5) #9, !dbg !14293
  br label %if.end, !dbg !14293

if.end:                                           ; preds = %if.then2, %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.then
  ret void, !dbg !14294
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !14295 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !14298, metadata !DIExpression()), !dbg !14299
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !14300
  call void @__list_del_entry(%struct.list_head* %0) #9, !dbg !14301
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !14302
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !14303
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !14304
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !14305
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !14306
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !14307
  ret void, !dbg !14308
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_sp_port_speed_get(%struct.mlxsw_sp_port* %mlxsw_sp_port, i32* %speed) #0 !dbg !14309 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %speed.addr = alloca i32*, align 8
  %port_type_speed_ops = alloca %struct.mlxsw_sp_port_type_speed_ops*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %ptys_pl = alloca [64 x i8], align 16
  %eth_proto_oper = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !14310, metadata !DIExpression()), !dbg !14311
  store i32* %speed, i32** %speed.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %speed.addr, metadata !14312, metadata !DIExpression()), !dbg !14313
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_type_speed_ops** %port_type_speed_ops, metadata !14314, metadata !DIExpression()), !dbg !14315
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !14316, metadata !DIExpression()), !dbg !14317
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !14318
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !14319
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !14319
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !14317
  call void @llvm.dbg.declare(metadata [64 x i8]* %ptys_pl, metadata !14320, metadata !DIExpression()), !dbg !14321
  call void @llvm.dbg.declare(metadata i32* %eth_proto_oper, metadata !14322, metadata !DIExpression()), !dbg !14323
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14324, metadata !DIExpression()), !dbg !14325
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !14326
  %port_type_speed_ops2 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %2, i32 0, i32 33, !dbg !14327
  %3 = load %struct.mlxsw_sp_port_type_speed_ops*, %struct.mlxsw_sp_port_type_speed_ops** %port_type_speed_ops2, align 8, !dbg !14327
  store %struct.mlxsw_sp_port_type_speed_ops* %3, %struct.mlxsw_sp_port_type_speed_ops** %port_type_speed_ops, align 8, !dbg !14328
  %4 = load %struct.mlxsw_sp_port_type_speed_ops*, %struct.mlxsw_sp_port_type_speed_ops** %port_type_speed_ops, align 8, !dbg !14329
  %reg_ptys_eth_pack = getelementptr inbounds %struct.mlxsw_sp_port_type_speed_ops, %struct.mlxsw_sp_port_type_speed_ops* %4, i32 0, i32 7, !dbg !14330
  %5 = load void (%struct.mlxsw_sp*, i8*, i8, i32, i1)*, void (%struct.mlxsw_sp*, i8*, i8, i32, i1)** %reg_ptys_eth_pack, align 8, !dbg !14330
  %6 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !14331
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %ptys_pl, i64 0, i64 0, !dbg !14332
  %7 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !14333
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %7, i32 0, i32 3, !dbg !14334
  %8 = load i8, i8* %local_port, align 8, !dbg !14334
  call void %5(%struct.mlxsw_sp* %6, i8* %arraydecay, i8 zeroext %8, i32 0, i1 zeroext false) #9, !dbg !14329
  %9 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !14335
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %9, i32 0, i32 1, !dbg !14336
  %10 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !14336
  %arraydecay3 = getelementptr inbounds [64 x i8], [64 x i8]* %ptys_pl, i64 0, i64 0, !dbg !14337
  %call = call i32 @mlxsw_reg_query(%struct.mlxsw_core* %10, %struct.mlxsw_reg_info* @mlxsw_reg_ptys, i8* %arraydecay3) #9, !dbg !14338
  store i32 %call, i32* %err, align 4, !dbg !14339
  %11 = load i32, i32* %err, align 4, !dbg !14340
  %tobool = icmp ne i32 %11, 0, !dbg !14340
  br i1 %tobool, label %if.then, label %if.end, !dbg !14342

if.then:                                          ; preds = %entry
  %12 = load i32, i32* %err, align 4, !dbg !14343
  store i32 %12, i32* %retval, align 4, !dbg !14344
  br label %return, !dbg !14344

if.end:                                           ; preds = %entry
  %13 = load %struct.mlxsw_sp_port_type_speed_ops*, %struct.mlxsw_sp_port_type_speed_ops** %port_type_speed_ops, align 8, !dbg !14345
  %reg_ptys_eth_unpack = getelementptr inbounds %struct.mlxsw_sp_port_type_speed_ops, %struct.mlxsw_sp_port_type_speed_ops* %13, i32 0, i32 8, !dbg !14346
  %14 = load void (%struct.mlxsw_sp*, i8*, i32*, i32*, i32*)*, void (%struct.mlxsw_sp*, i8*, i32*, i32*, i32*)** %reg_ptys_eth_unpack, align 8, !dbg !14346
  %15 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !14347
  %arraydecay4 = getelementptr inbounds [64 x i8], [64 x i8]* %ptys_pl, i64 0, i64 0, !dbg !14348
  call void %14(%struct.mlxsw_sp* %15, i8* %arraydecay4, i32* null, i32* null, i32* %eth_proto_oper) #9, !dbg !14345
  %16 = load %struct.mlxsw_sp_port_type_speed_ops*, %struct.mlxsw_sp_port_type_speed_ops** %port_type_speed_ops, align 8, !dbg !14349
  %from_ptys_speed = getelementptr inbounds %struct.mlxsw_sp_port_type_speed_ops, %struct.mlxsw_sp_port_type_speed_ops* %16, i32 0, i32 2, !dbg !14350
  %17 = load i32 (%struct.mlxsw_sp*, i32)*, i32 (%struct.mlxsw_sp*, i32)** %from_ptys_speed, align 8, !dbg !14350
  %18 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !14351
  %19 = load i32, i32* %eth_proto_oper, align 4, !dbg !14352
  %call5 = call i32 %17(%struct.mlxsw_sp* %18, i32 %19) #9, !dbg !14349
  %20 = load i32*, i32** %speed.addr, align 8, !dbg !14353
  store i32 %call5, i32* %20, align 4, !dbg !14354
  store i32 0, i32* %retval, align 4, !dbg !14355
  br label %return, !dbg !14355

return:                                           ; preds = %if.end, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !14356
  ret i32 %21, !dbg !14356
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_sp_port_ets_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, i32 %hr, i8 zeroext %index, i8 zeroext %next_index, i1 zeroext %dwrr, i8 zeroext %dwrr_weight) #0 !dbg !14357 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %hr.addr = alloca i32, align 4
  %index.addr = alloca i8, align 1
  %next_index.addr = alloca i8, align 1
  %dwrr.addr = alloca i8, align 1
  %dwrr_weight.addr = alloca i8, align 1
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %qeec_pl = alloca [32 x i8], align 16
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !14360, metadata !DIExpression()), !dbg !14361
  store i32 %hr, i32* %hr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hr.addr, metadata !14362, metadata !DIExpression()), !dbg !14363
  store i8 %index, i8* %index.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %index.addr, metadata !14364, metadata !DIExpression()), !dbg !14365
  store i8 %next_index, i8* %next_index.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %next_index.addr, metadata !14366, metadata !DIExpression()), !dbg !14367
  %frombool = zext i1 %dwrr to i8
  store i8 %frombool, i8* %dwrr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dwrr.addr, metadata !14368, metadata !DIExpression()), !dbg !14369
  store i8 %dwrr_weight, i8* %dwrr_weight.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dwrr_weight.addr, metadata !14370, metadata !DIExpression()), !dbg !14371
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !14372, metadata !DIExpression()), !dbg !14373
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !14374
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !14375
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !14375
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !14373
  call void @llvm.dbg.declare(metadata [32 x i8]* %qeec_pl, metadata !14376, metadata !DIExpression()), !dbg !14377
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %qeec_pl, i64 0, i64 0, !dbg !14378
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !14379
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %2, i32 0, i32 3, !dbg !14380
  %3 = load i8, i8* %local_port, align 8, !dbg !14380
  %4 = load i32, i32* %hr.addr, align 4, !dbg !14381
  %5 = load i8, i8* %index.addr, align 1, !dbg !14382
  %6 = load i8, i8* %next_index.addr, align 1, !dbg !14383
  call void @mlxsw_reg_qeec_pack(i8* %arraydecay, i8 zeroext %3, i32 %4, i8 zeroext %5, i8 zeroext %6) #9, !dbg !14384
  %arraydecay2 = getelementptr inbounds [32 x i8], [32 x i8]* %qeec_pl, i64 0, i64 0, !dbg !14385
  call void @mlxsw_reg_qeec_de_set(i8* %arraydecay2, i32 1) #9, !dbg !14386
  %arraydecay3 = getelementptr inbounds [32 x i8], [32 x i8]* %qeec_pl, i64 0, i64 0, !dbg !14387
  %7 = load i8, i8* %dwrr.addr, align 1, !dbg !14388
  %tobool = trunc i8 %7 to i1, !dbg !14388
  %conv = zext i1 %tobool to i32, !dbg !14388
  call void @mlxsw_reg_qeec_dwrr_set(i8* %arraydecay3, i32 %conv) #9, !dbg !14389
  %arraydecay4 = getelementptr inbounds [32 x i8], [32 x i8]* %qeec_pl, i64 0, i64 0, !dbg !14390
  %8 = load i8, i8* %dwrr_weight.addr, align 1, !dbg !14391
  %conv5 = zext i8 %8 to i32, !dbg !14391
  call void @mlxsw_reg_qeec_dwrr_weight_set(i8* %arraydecay4, i32 %conv5) #9, !dbg !14392
  %9 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !14393
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %9, i32 0, i32 1, !dbg !14394
  %10 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !14394
  %arraydecay6 = getelementptr inbounds [32 x i8], [32 x i8]* %qeec_pl, i64 0, i64 0, !dbg !14395
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %10, %struct.mlxsw_reg_info* @mlxsw_reg_qeec, i8* %arraydecay6) #9, !dbg !14396
  ret i32 %call, !dbg !14397
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_qeec_pack(i8* %payload, i8 zeroext %local_port, i32 %hr, i8 zeroext %index, i8 zeroext %next_index) #0 !dbg !14398 {
entry:
  %payload.addr = alloca i8*, align 8
  %local_port.addr = alloca i8, align 1
  %hr.addr = alloca i32, align 4
  %index.addr = alloca i8, align 1
  %next_index.addr = alloca i8, align 1
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !14401, metadata !DIExpression()), !dbg !14402
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !14403, metadata !DIExpression()), !dbg !14404
  store i32 %hr, i32* %hr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hr.addr, metadata !14405, metadata !DIExpression()), !dbg !14406
  store i8 %index, i8* %index.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %index.addr, metadata !14407, metadata !DIExpression()), !dbg !14408
  store i8 %next_index, i8* %next_index.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %next_index.addr, metadata !14409, metadata !DIExpression()), !dbg !14410
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !14411
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_qeec, i32 0, i32 1), align 2, !dbg !14411
  %conv = zext i16 %1 to i64, !dbg !14411
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !14411
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !14412
  %3 = load i8, i8* %local_port.addr, align 1, !dbg !14413
  %conv1 = zext i8 %3 to i32, !dbg !14413
  call void @mlxsw_reg_qeec_local_port_set(i8* %2, i32 %conv1) #9, !dbg !14414
  %4 = load i8*, i8** %payload.addr, align 8, !dbg !14415
  %5 = load i32, i32* %hr.addr, align 4, !dbg !14416
  call void @mlxsw_reg_qeec_element_hierarchy_set(i8* %4, i32 %5) #9, !dbg !14417
  %6 = load i8*, i8** %payload.addr, align 8, !dbg !14418
  %7 = load i8, i8* %index.addr, align 1, !dbg !14419
  %conv2 = zext i8 %7 to i32, !dbg !14419
  call void @mlxsw_reg_qeec_element_index_set(i8* %6, i32 %conv2) #9, !dbg !14420
  %8 = load i8*, i8** %payload.addr, align 8, !dbg !14421
  %9 = load i8, i8* %next_index.addr, align 1, !dbg !14422
  %conv3 = zext i8 %9 to i32, !dbg !14422
  call void @mlxsw_reg_qeec_next_element_index_set(i8* %8, i32 %conv3) #9, !dbg !14423
  ret void, !dbg !14424
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_qeec_de_set(i8* %buf, i32 %val) #0 !dbg !14425 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14428, metadata !DIExpression()), !dbg !14429
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14430, metadata !DIExpression()), !dbg !14429
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14429
  %1 = load i32, i32* %val.addr, align 4, !dbg !14429
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_qeec_de_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !14429
  ret void, !dbg !14429
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_qeec_dwrr_set(i8* %buf, i32 %val) #0 !dbg !14431 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14432, metadata !DIExpression()), !dbg !14433
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14434, metadata !DIExpression()), !dbg !14433
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14433
  %1 = load i32, i32* %val.addr, align 4, !dbg !14433
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_qeec_dwrr_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !14433
  ret void, !dbg !14433
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_qeec_dwrr_weight_set(i8* %buf, i32 %val) #0 !dbg !14435 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14436, metadata !DIExpression()), !dbg !14437
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14438, metadata !DIExpression()), !dbg !14437
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14437
  %1 = load i32, i32* %val.addr, align 4, !dbg !14437
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_qeec_dwrr_weight_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !14437
  ret void, !dbg !14437
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_sp_port_ets_maxrate_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, i32 %hr, i8 zeroext %index, i8 zeroext %next_index, i32 %maxrate, i8 zeroext %burst_size) #0 !dbg !14439 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %hr.addr = alloca i32, align 4
  %index.addr = alloca i8, align 1
  %next_index.addr = alloca i8, align 1
  %maxrate.addr = alloca i32, align 4
  %burst_size.addr = alloca i8, align 1
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %qeec_pl = alloca [32 x i8], align 16
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !14442, metadata !DIExpression()), !dbg !14443
  store i32 %hr, i32* %hr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hr.addr, metadata !14444, metadata !DIExpression()), !dbg !14445
  store i8 %index, i8* %index.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %index.addr, metadata !14446, metadata !DIExpression()), !dbg !14447
  store i8 %next_index, i8* %next_index.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %next_index.addr, metadata !14448, metadata !DIExpression()), !dbg !14449
  store i32 %maxrate, i32* %maxrate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxrate.addr, metadata !14450, metadata !DIExpression()), !dbg !14451
  store i8 %burst_size, i8* %burst_size.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %burst_size.addr, metadata !14452, metadata !DIExpression()), !dbg !14453
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !14454, metadata !DIExpression()), !dbg !14455
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !14456
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !14457
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !14457
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !14455
  call void @llvm.dbg.declare(metadata [32 x i8]* %qeec_pl, metadata !14458, metadata !DIExpression()), !dbg !14459
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %qeec_pl, i64 0, i64 0, !dbg !14460
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !14461
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %2, i32 0, i32 3, !dbg !14462
  %3 = load i8, i8* %local_port, align 8, !dbg !14462
  %4 = load i32, i32* %hr.addr, align 4, !dbg !14463
  %5 = load i8, i8* %index.addr, align 1, !dbg !14464
  %6 = load i8, i8* %next_index.addr, align 1, !dbg !14465
  call void @mlxsw_reg_qeec_pack(i8* %arraydecay, i8 zeroext %3, i32 %4, i8 zeroext %5, i8 zeroext %6) #9, !dbg !14466
  %arraydecay2 = getelementptr inbounds [32 x i8], [32 x i8]* %qeec_pl, i64 0, i64 0, !dbg !14467
  call void @mlxsw_reg_qeec_mase_set(i8* %arraydecay2, i32 1) #9, !dbg !14468
  %arraydecay3 = getelementptr inbounds [32 x i8], [32 x i8]* %qeec_pl, i64 0, i64 0, !dbg !14469
  %7 = load i32, i32* %maxrate.addr, align 4, !dbg !14470
  call void @mlxsw_reg_qeec_max_shaper_rate_set(i8* %arraydecay3, i32 %7) #9, !dbg !14471
  %arraydecay4 = getelementptr inbounds [32 x i8], [32 x i8]* %qeec_pl, i64 0, i64 0, !dbg !14472
  %8 = load i8, i8* %burst_size.addr, align 1, !dbg !14473
  %conv = zext i8 %8 to i32, !dbg !14473
  call void @mlxsw_reg_qeec_max_shaper_bs_set(i8* %arraydecay4, i32 %conv) #9, !dbg !14474
  %9 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !14475
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %9, i32 0, i32 1, !dbg !14476
  %10 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !14476
  %arraydecay5 = getelementptr inbounds [32 x i8], [32 x i8]* %qeec_pl, i64 0, i64 0, !dbg !14477
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %10, %struct.mlxsw_reg_info* @mlxsw_reg_qeec, i8* %arraydecay5) #9, !dbg !14478
  ret i32 %call, !dbg !14479
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_qeec_mase_set(i8* %buf, i32 %val) #0 !dbg !14480 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14481, metadata !DIExpression()), !dbg !14482
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14483, metadata !DIExpression()), !dbg !14482
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14482
  %1 = load i32, i32* %val.addr, align 4, !dbg !14482
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_qeec_mase_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !14482
  ret void, !dbg !14482
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_qeec_max_shaper_rate_set(i8* %buf, i32 %val) #0 !dbg !14484 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14485, metadata !DIExpression()), !dbg !14486
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14487, metadata !DIExpression()), !dbg !14486
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14486
  %1 = load i32, i32* %val.addr, align 4, !dbg !14486
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_qeec_max_shaper_rate_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !14486
  ret void, !dbg !14486
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_qeec_max_shaper_bs_set(i8* %buf, i32 %val) #0 !dbg !14488 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14489, metadata !DIExpression()), !dbg !14490
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14491, metadata !DIExpression()), !dbg !14490
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14490
  %1 = load i32, i32* %val.addr, align 4, !dbg !14490
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_qeec_max_shaper_bs_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !14490
  ret void, !dbg !14490
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_sp_port_prio_tc_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, i8 zeroext %switch_prio, i8 zeroext %tclass) #0 !dbg !14492 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %switch_prio.addr = alloca i8, align 1
  %tclass.addr = alloca i8, align 1
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %qtct_pl = alloca [8 x i8], align 1
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !14495, metadata !DIExpression()), !dbg !14496
  store i8 %switch_prio, i8* %switch_prio.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %switch_prio.addr, metadata !14497, metadata !DIExpression()), !dbg !14498
  store i8 %tclass, i8* %tclass.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %tclass.addr, metadata !14499, metadata !DIExpression()), !dbg !14500
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !14501, metadata !DIExpression()), !dbg !14502
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !14503
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !14504
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !14504
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !14502
  call void @llvm.dbg.declare(metadata [8 x i8]* %qtct_pl, metadata !14505, metadata !DIExpression()), !dbg !14506
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %qtct_pl, i64 0, i64 0, !dbg !14507
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !14508
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %2, i32 0, i32 3, !dbg !14509
  %3 = load i8, i8* %local_port, align 8, !dbg !14509
  %4 = load i8, i8* %switch_prio.addr, align 1, !dbg !14510
  %5 = load i8, i8* %tclass.addr, align 1, !dbg !14511
  call void @mlxsw_reg_qtct_pack(i8* %arraydecay, i8 zeroext %3, i8 zeroext %4, i8 zeroext %5) #9, !dbg !14512
  %6 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !14513
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %6, i32 0, i32 1, !dbg !14514
  %7 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !14514
  %arraydecay2 = getelementptr inbounds [8 x i8], [8 x i8]* %qtct_pl, i64 0, i64 0, !dbg !14515
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %7, %struct.mlxsw_reg_info* @mlxsw_reg_qtct, i8* %arraydecay2) #9, !dbg !14516
  ret i32 %call, !dbg !14517
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_qtct_pack(i8* %payload, i8 zeroext %local_port, i8 zeroext %switch_prio, i8 zeroext %tclass) #0 !dbg !14518 {
entry:
  %payload.addr = alloca i8*, align 8
  %local_port.addr = alloca i8, align 1
  %switch_prio.addr = alloca i8, align 1
  %tclass.addr = alloca i8, align 1
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !14521, metadata !DIExpression()), !dbg !14522
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !14523, metadata !DIExpression()), !dbg !14524
  store i8 %switch_prio, i8* %switch_prio.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %switch_prio.addr, metadata !14525, metadata !DIExpression()), !dbg !14526
  store i8 %tclass, i8* %tclass.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %tclass.addr, metadata !14527, metadata !DIExpression()), !dbg !14528
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !14529
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_qtct, i32 0, i32 1), align 2, !dbg !14529
  %conv = zext i16 %1 to i64, !dbg !14529
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !14529
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !14530
  %3 = load i8, i8* %local_port.addr, align 1, !dbg !14531
  %conv1 = zext i8 %3 to i32, !dbg !14531
  call void @mlxsw_reg_qtct_local_port_set(i8* %2, i32 %conv1) #9, !dbg !14532
  %4 = load i8*, i8** %payload.addr, align 8, !dbg !14533
  %5 = load i8, i8* %switch_prio.addr, align 1, !dbg !14534
  %conv2 = zext i8 %5 to i32, !dbg !14534
  call void @mlxsw_reg_qtct_switch_prio_set(i8* %4, i32 %conv2) #9, !dbg !14535
  %6 = load i8*, i8** %payload.addr, align 8, !dbg !14536
  %7 = load i8, i8* %tclass.addr, align 1, !dbg !14537
  %conv3 = zext i8 %7 to i32, !dbg !14537
  call void @mlxsw_reg_qtct_tclass_set(i8* %6, i32 %conv3) #9, !dbg !14538
  ret void, !dbg !14539
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlxsw_sp_rx_listener_no_mark_func(%struct.sk_buff* %skb, i8 zeroext %local_port, i8* %priv) #0 !dbg !11542 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %local_port.addr = alloca i8, align 1
  %priv.addr = alloca i8*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %pcpu_stats = alloca %struct.mlxsw_sp_port_pcpu_stats*, align 8
  %tmp = alloca %struct.mlxsw_sp_port_pcpu_stats*, align 8
  %__vpp_verify = alloca i8*, align 8
  %tmp12 = alloca %struct.mlxsw_sp_port_pcpu_stats*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !14540, metadata !DIExpression()), !dbg !14541
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !14542, metadata !DIExpression()), !dbg !14543
  store i8* %priv, i8** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %priv.addr, metadata !14544, metadata !DIExpression()), !dbg !14545
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !14546, metadata !DIExpression()), !dbg !14547
  %0 = load i8*, i8** %priv.addr, align 8, !dbg !14548
  %1 = bitcast i8* %0 to %struct.mlxsw_sp*, !dbg !14548
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !14547
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !14549, metadata !DIExpression()), !dbg !14550
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !14551
  %ports = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %2, i32 0, i32 0, !dbg !14552
  %3 = load %struct.mlxsw_sp_port**, %struct.mlxsw_sp_port*** %ports, align 8, !dbg !14552
  %4 = load i8, i8* %local_port.addr, align 1, !dbg !14553
  %idxprom = zext i8 %4 to i64, !dbg !14551
  %arrayidx = getelementptr %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %3, i64 %idxprom, !dbg !14551
  %5 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %arrayidx, align 8, !dbg !14551
  store %struct.mlxsw_sp_port* %5, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !14550
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_pcpu_stats** %pcpu_stats, metadata !14554, metadata !DIExpression()), !dbg !14555
  %6 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !14556
  %tobool = icmp ne %struct.mlxsw_sp_port* %6, null, !dbg !14556
  %lnot = xor i1 %tobool, true, !dbg !14556
  %lnot1 = xor i1 %lnot, true, !dbg !14556
  %lnot2 = xor i1 %lnot1, true, !dbg !14556
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !14556
  %conv = sext i32 %lnot.ext to i64, !dbg !14556
  %tobool3 = icmp ne i64 %conv, 0, !dbg !14556
  br i1 %tobool3, label %if.then, label %if.end7, !dbg !14558

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !14559

do.body:                                          ; preds = %if.then
  %call = call i32 @___ratelimit(%struct.ratelimit_state* @mlxsw_sp_rx_listener_no_mark_func._rs, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__func__.mlxsw_sp_rx_listener_no_mark_func, i64 0, i64 0)) #9, !dbg !14561
  %tobool4 = icmp ne i32 %call, 0, !dbg !14561
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !14564

if.then5:                                         ; preds = %do.body
  %7 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !14561
  %bus_info = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %7, i32 0, i32 2, !dbg !14561
  %8 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info, align 8, !dbg !14561
  %dev = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %8, i32 0, i32 2, !dbg !14561
  %9 = load %struct.device*, %struct.device** %dev, align 8, !dbg !14561
  %10 = load i8, i8* %local_port.addr, align 1, !dbg !14561
  %conv6 = zext i8 %10 to i32, !dbg !14561
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %9, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1, i64 0, i64 0), i32 %conv6) #13, !dbg !14561
  br label %if.end, !dbg !14561

if.end:                                           ; preds = %if.then5, %do.body
  br label %do.end, !dbg !14564

do.end:                                           ; preds = %if.end
  br label %return, !dbg !14565

if.end7:                                          ; preds = %entry
  %11 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !14566
  %dev8 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %11, i32 0, i32 0, !dbg !14567
  %12 = load %struct.net_device*, %struct.net_device** %dev8, align 8, !dbg !14567
  %13 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !14568
  %14 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %13, i32 0, i32 0, !dbg !14569
  %15 = bitcast %union.anon* %14 to %struct.anon.0*, !dbg !14569
  %16 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %15, i32 0, i32 2, !dbg !14569
  %dev9 = bitcast %union.anon.1* %16 to %struct.net_device**, !dbg !14569
  store %struct.net_device* %12, %struct.net_device** %dev9, align 8, !dbg !14570
  br label %do.body10, !dbg !14571

do.body10:                                        ; preds = %if.end7
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !14574, metadata !DIExpression()), !dbg !14576
  store i8* null, i8** %__vpp_verify, align 8, !dbg !14576
  %17 = load i8*, i8** %__vpp_verify, align 8, !dbg !14576
  br label %do.end11, !dbg !14576

do.end11:                                         ; preds = %do.body10
  %18 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !14571
  %pcpu_stats13 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %18, i32 0, i32 1, !dbg !14571
  %19 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %pcpu_stats13, align 8, !dbg !14571
  store %struct.mlxsw_sp_port_pcpu_stats* %19, %struct.mlxsw_sp_port_pcpu_stats** %tmp12, align 8, !dbg !14576
  %20 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %tmp12, align 8, !dbg !14571
  store %struct.mlxsw_sp_port_pcpu_stats* %20, %struct.mlxsw_sp_port_pcpu_stats** %tmp, align 8, !dbg !14577
  %21 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %tmp, align 8, !dbg !14577
  store %struct.mlxsw_sp_port_pcpu_stats* %21, %struct.mlxsw_sp_port_pcpu_stats** %pcpu_stats, align 8, !dbg !14578
  %22 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %pcpu_stats, align 8, !dbg !14579
  %syncp = getelementptr inbounds %struct.mlxsw_sp_port_pcpu_stats, %struct.mlxsw_sp_port_pcpu_stats* %22, i32 0, i32 4, !dbg !14580
  call void @u64_stats_update_begin(%struct.u64_stats_sync* %syncp) #9, !dbg !14581
  %23 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %pcpu_stats, align 8, !dbg !14582
  %rx_packets = getelementptr inbounds %struct.mlxsw_sp_port_pcpu_stats, %struct.mlxsw_sp_port_pcpu_stats* %23, i32 0, i32 0, !dbg !14583
  %24 = load i64, i64* %rx_packets, align 8, !dbg !14584
  %inc = add i64 %24, 1, !dbg !14584
  store i64 %inc, i64* %rx_packets, align 8, !dbg !14584
  %25 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !14585
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %25, i32 0, i32 5, !dbg !14586
  %26 = load i32, i32* %len, align 8, !dbg !14586
  %conv14 = zext i32 %26 to i64, !dbg !14585
  %27 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %pcpu_stats, align 8, !dbg !14587
  %rx_bytes = getelementptr inbounds %struct.mlxsw_sp_port_pcpu_stats, %struct.mlxsw_sp_port_pcpu_stats* %27, i32 0, i32 1, !dbg !14588
  %28 = load i64, i64* %rx_bytes, align 8, !dbg !14589
  %add = add i64 %28, %conv14, !dbg !14589
  store i64 %add, i64* %rx_bytes, align 8, !dbg !14589
  %29 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %pcpu_stats, align 8, !dbg !14590
  %syncp15 = getelementptr inbounds %struct.mlxsw_sp_port_pcpu_stats, %struct.mlxsw_sp_port_pcpu_stats* %29, i32 0, i32 4, !dbg !14591
  call void @u64_stats_update_end(%struct.u64_stats_sync* %syncp15) #9, !dbg !14592
  %30 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !14593
  %31 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !14594
  %32 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %31, i32 0, i32 0, !dbg !14595
  %33 = bitcast %union.anon* %32 to %struct.anon.0*, !dbg !14595
  %34 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %33, i32 0, i32 2, !dbg !14595
  %dev16 = bitcast %union.anon.1* %34 to %struct.net_device**, !dbg !14595
  %35 = load %struct.net_device*, %struct.net_device** %dev16, align 8, !dbg !14595
  %call17 = call zeroext i16 @eth_type_trans(%struct.sk_buff* %30, %struct.net_device* %35) #9, !dbg !14596
  %36 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !14597
  %protocol = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %36, i32 0, i32 29, !dbg !14598
  store i16 %call17, i16* %protocol, align 8, !dbg !14599
  %37 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !14600
  %call18 = call i32 @netif_receive_skb(%struct.sk_buff* %37) #9, !dbg !14601
  br label %return, !dbg !14602

return:                                           ; preds = %do.end11, %do.end
  ret void, !dbg !14602
}

; Function Attrs: noredzone
declare dso_local i32 @___ratelimit(%struct.ratelimit_state*, i8*) #2

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @u64_stats_update_begin(%struct.u64_stats_sync* %syncp) #0 !dbg !14603 {
entry:
  %syncp.addr = alloca %struct.u64_stats_sync*, align 8
  store %struct.u64_stats_sync* %syncp, %struct.u64_stats_sync** %syncp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.u64_stats_sync** %syncp.addr, metadata !14607, metadata !DIExpression()), !dbg !14608
  ret void, !dbg !14609
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @u64_stats_update_end(%struct.u64_stats_sync* %syncp) #0 !dbg !14610 {
entry:
  %syncp.addr = alloca %struct.u64_stats_sync*, align 8
  store %struct.u64_stats_sync* %syncp, %struct.u64_stats_sync** %syncp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.u64_stats_sync** %syncp.addr, metadata !14611, metadata !DIExpression()), !dbg !14612
  ret void, !dbg !14613
}

; Function Attrs: noredzone
declare dso_local zeroext i16 @eth_type_trans(%struct.sk_buff*, %struct.net_device*) #2

; Function Attrs: noredzone
declare dso_local i32 @netif_receive_skb(%struct.sk_buff*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlxsw_sp_ptp_receive(%struct.mlxsw_sp* %mlxsw_sp, %struct.sk_buff* %skb, i8 zeroext %local_port) #0 !dbg !14614 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %local_port.addr = alloca i8, align 1
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !14615, metadata !DIExpression()), !dbg !14616
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !14617, metadata !DIExpression()), !dbg !14618
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !14619, metadata !DIExpression()), !dbg !14620
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !14621
  %ptp_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %0, i32 0, i32 34, !dbg !14622
  %1 = load %struct.mlxsw_sp_ptp_ops*, %struct.mlxsw_sp_ptp_ops** %ptp_ops, align 8, !dbg !14622
  %receive = getelementptr inbounds %struct.mlxsw_sp_ptp_ops, %struct.mlxsw_sp_ptp_ops* %1, i32 0, i32 4, !dbg !14623
  %2 = load void (%struct.mlxsw_sp*, %struct.sk_buff*, i8)*, void (%struct.mlxsw_sp*, %struct.sk_buff*, i8)** %receive, align 8, !dbg !14623
  %3 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !14624
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !14625
  %5 = load i8, i8* %local_port.addr, align 1, !dbg !14626
  call void %2(%struct.mlxsw_sp* %3, %struct.sk_buff* %4, i8 zeroext %5) #9, !dbg !14621
  ret void, !dbg !14627
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlxsw_sp_sample_receive(%struct.mlxsw_sp* %mlxsw_sp, %struct.sk_buff* %skb, i8 zeroext %local_port) #0 !dbg !11545 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %local_port.addr = alloca i8, align 1
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %sample = alloca %struct.mlxsw_sp_port_sample*, align 8
  %size = alloca i32, align 4
  %________p1 = alloca %struct.mlxsw_sp_port_sample*, align 8
  %tmp = alloca %struct.mlxsw_sp_port_sample*, align 8
  %tmp13 = alloca %struct.mlxsw_sp_port_sample*, align 8
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !14628, metadata !DIExpression()), !dbg !14629
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !14630, metadata !DIExpression()), !dbg !14631
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !14632, metadata !DIExpression()), !dbg !14633
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !14634, metadata !DIExpression()), !dbg !14635
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !14636
  %ports = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %0, i32 0, i32 0, !dbg !14637
  %1 = load %struct.mlxsw_sp_port**, %struct.mlxsw_sp_port*** %ports, align 8, !dbg !14637
  %2 = load i8, i8* %local_port.addr, align 1, !dbg !14638
  %idxprom = zext i8 %2 to i64, !dbg !14636
  %arrayidx = getelementptr %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %1, i64 %idxprom, !dbg !14636
  %3 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %arrayidx, align 8, !dbg !14636
  store %struct.mlxsw_sp_port* %3, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !14635
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_sample** %sample, metadata !14639, metadata !DIExpression()), !dbg !14640
  call void @llvm.dbg.declare(metadata i32* %size, metadata !14641, metadata !DIExpression()), !dbg !14642
  %4 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !14643
  %tobool = icmp ne %struct.mlxsw_sp_port* %4, null, !dbg !14643
  %lnot = xor i1 %tobool, true, !dbg !14643
  %lnot1 = xor i1 %lnot, true, !dbg !14643
  %lnot2 = xor i1 %lnot1, true, !dbg !14643
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !14643
  %conv = sext i32 %lnot.ext to i64, !dbg !14643
  %tobool3 = icmp ne i64 %conv, 0, !dbg !14643
  br i1 %tobool3, label %if.then, label %if.end7, !dbg !14645

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !14646

do.body:                                          ; preds = %if.then
  %call = call i32 @___ratelimit(%struct.ratelimit_state* @mlxsw_sp_sample_receive._rs, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.mlxsw_sp_sample_receive, i64 0, i64 0)) #9, !dbg !14648
  %tobool4 = icmp ne i32 %call, 0, !dbg !14648
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !14651

if.then5:                                         ; preds = %do.body
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !14648
  %bus_info = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %5, i32 0, i32 2, !dbg !14648
  %6 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info, align 8, !dbg !14648
  %dev = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %6, i32 0, i32 2, !dbg !14648
  %7 = load %struct.device*, %struct.device** %dev, align 8, !dbg !14648
  %8 = load i8, i8* %local_port.addr, align 1, !dbg !14648
  %conv6 = zext i8 %8 to i32, !dbg !14648
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %7, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2, i64 0, i64 0), i32 %conv6) #13, !dbg !14648
  br label %if.end, !dbg !14648

if.end:                                           ; preds = %if.then5, %do.body
  br label %do.end, !dbg !14651

do.end:                                           ; preds = %if.end
  br label %out, !dbg !14652

if.end7:                                          ; preds = %entry
  call void @__rcu_read_lock() #12, !dbg !14653
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_sample** %________p1, metadata !14657, metadata !DIExpression()), !dbg !14659
  br label %do.body8, !dbg !14660

do.body8:                                         ; preds = %if.end7
  br label %do.end9, !dbg !14662

do.end9:                                          ; preds = %do.body8
  %9 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !14660
  %sample10 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %9, i32 0, i32 11, !dbg !14660
  %10 = load volatile %struct.mlxsw_sp_port_sample*, %struct.mlxsw_sp_port_sample** %sample10, align 8, !dbg !14660
  store %struct.mlxsw_sp_port_sample* %10, %struct.mlxsw_sp_port_sample** %tmp, align 8, !dbg !14662
  %11 = load %struct.mlxsw_sp_port_sample*, %struct.mlxsw_sp_port_sample** %tmp, align 8, !dbg !14660
  store %struct.mlxsw_sp_port_sample* %11, %struct.mlxsw_sp_port_sample** %________p1, align 8, !dbg !14659
  br label %do.body11, !dbg !14659

do.body11:                                        ; preds = %do.end9
  br label %do.end12, !dbg !14664

do.end12:                                         ; preds = %do.body11
  %12 = load %struct.mlxsw_sp_port_sample*, %struct.mlxsw_sp_port_sample** %________p1, align 8, !dbg !14659
  store %struct.mlxsw_sp_port_sample* %12, %struct.mlxsw_sp_port_sample** %tmp13, align 8, !dbg !14664
  %13 = load %struct.mlxsw_sp_port_sample*, %struct.mlxsw_sp_port_sample** %tmp13, align 8, !dbg !14659
  store %struct.mlxsw_sp_port_sample* %13, %struct.mlxsw_sp_port_sample** %sample, align 8, !dbg !14666
  %14 = load %struct.mlxsw_sp_port_sample*, %struct.mlxsw_sp_port_sample** %sample, align 8, !dbg !14667
  %tobool14 = icmp ne %struct.mlxsw_sp_port_sample* %14, null, !dbg !14667
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !14669

if.then15:                                        ; preds = %do.end12
  br label %out_unlock, !dbg !14670

if.end16:                                         ; preds = %do.end12
  %15 = load %struct.mlxsw_sp_port_sample*, %struct.mlxsw_sp_port_sample** %sample, align 8, !dbg !14671
  %truncate = getelementptr inbounds %struct.mlxsw_sp_port_sample, %struct.mlxsw_sp_port_sample* %15, i32 0, i32 3, !dbg !14672
  %16 = load i8, i8* %truncate, align 8, !dbg !14672
  %tobool17 = trunc i8 %16 to i1, !dbg !14672
  br i1 %tobool17, label %cond.true, label %cond.false, !dbg !14671

cond.true:                                        ; preds = %if.end16
  %17 = load %struct.mlxsw_sp_port_sample*, %struct.mlxsw_sp_port_sample** %sample, align 8, !dbg !14673
  %trunc_size = getelementptr inbounds %struct.mlxsw_sp_port_sample, %struct.mlxsw_sp_port_sample* %17, i32 0, i32 1, !dbg !14674
  %18 = load i32, i32* %trunc_size, align 8, !dbg !14674
  br label %cond.end, !dbg !14671

cond.false:                                       ; preds = %if.end16
  %19 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !14675
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %19, i32 0, i32 5, !dbg !14676
  %20 = load i32, i32* %len, align 8, !dbg !14676
  br label %cond.end, !dbg !14671

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %18, %cond.true ], [ %20, %cond.false ], !dbg !14671
  store i32 %cond, i32* %size, align 4, !dbg !14677
  %21 = load %struct.mlxsw_sp_port_sample*, %struct.mlxsw_sp_port_sample** %sample, align 8, !dbg !14678
  %psample_group = getelementptr inbounds %struct.mlxsw_sp_port_sample, %struct.mlxsw_sp_port_sample* %21, i32 0, i32 0, !dbg !14679
  %22 = load %struct.psample_group*, %struct.psample_group** %psample_group, align 8, !dbg !14679
  %23 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !14680
  %24 = load i32, i32* %size, align 4, !dbg !14681
  %25 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !14682
  %dev19 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %25, i32 0, i32 0, !dbg !14683
  %26 = load %struct.net_device*, %struct.net_device** %dev19, align 8, !dbg !14683
  %ifindex = getelementptr inbounds %struct.net_device, %struct.net_device* %26, i32 0, i32 22, !dbg !14684
  %27 = load i32, i32* %ifindex, align 8, !dbg !14684
  %28 = load %struct.mlxsw_sp_port_sample*, %struct.mlxsw_sp_port_sample** %sample, align 8, !dbg !14685
  %rate = getelementptr inbounds %struct.mlxsw_sp_port_sample, %struct.mlxsw_sp_port_sample* %28, i32 0, i32 2, !dbg !14686
  %29 = load i32, i32* %rate, align 4, !dbg !14686
  call void @psample_sample_packet(%struct.psample_group* %22, %struct.sk_buff* %23, i32 %24, i32 %27, i32 0, i32 %29) #9, !dbg !14687
  br label %out_unlock, !dbg !14687

out_unlock:                                       ; preds = %cond.end, %if.then15
  call void @llvm.dbg.label(metadata !14688), !dbg !14689
  call void @rcu_read_unlock() #9, !dbg !14690
  br label %out, !dbg !14690

out:                                              ; preds = %out_unlock, %do.end
  call void @llvm.dbg.label(metadata !14691), !dbg !14692
  %30 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !14693
  call void @consume_skb(%struct.sk_buff* %30) #9, !dbg !14694
  ret void, !dbg !14695
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @psample_sample_packet(%struct.psample_group* %group, %struct.sk_buff* %skb, i32 %trunc_size, i32 %in_ifindex, i32 %out_ifindex, i32 %sample_rate) #0 !dbg !14696 {
entry:
  %group.addr = alloca %struct.psample_group*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %trunc_size.addr = alloca i32, align 4
  %in_ifindex.addr = alloca i32, align 4
  %out_ifindex.addr = alloca i32, align 4
  %sample_rate.addr = alloca i32, align 4
  store %struct.psample_group* %group, %struct.psample_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psample_group** %group.addr, metadata !14699, metadata !DIExpression()), !dbg !14700
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !14701, metadata !DIExpression()), !dbg !14702
  store i32 %trunc_size, i32* %trunc_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %trunc_size.addr, metadata !14703, metadata !DIExpression()), !dbg !14704
  store i32 %in_ifindex, i32* %in_ifindex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %in_ifindex.addr, metadata !14705, metadata !DIExpression()), !dbg !14706
  store i32 %out_ifindex, i32* %out_ifindex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %out_ifindex.addr, metadata !14707, metadata !DIExpression()), !dbg !14708
  store i32 %sample_rate, i32* %sample_rate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sample_rate.addr, metadata !14709, metadata !DIExpression()), !dbg !14710
  ret void, !dbg !14711
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rcu_read_unlock() #0 !dbg !14712 {
entry:
  br label %do.body, !dbg !14713

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14714

do.end:                                           ; preds = %do.body
  call void @__rcu_read_unlock() #9, !dbg !14716
  br label %do.body1, !dbg !14717

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !14718

do.end2:                                          ; preds = %do.body1
  ret void, !dbg !14720
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @consume_skb(%struct.sk_buff* %skb) #0 !dbg !14721 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !14722, metadata !DIExpression()), !dbg !14723
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !14724
  call void @kfree_skb(%struct.sk_buff* %0) #9, !dbg !14725
  ret void, !dbg !14726
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @mlxsw_sp_port_dev_check(%struct.net_device* %dev) #0 !dbg !14727 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14730, metadata !DIExpression()), !dbg !14731
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14732
  %netdev_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 32, !dbg !14733
  %1 = load %struct.net_device_ops*, %struct.net_device_ops** %netdev_ops, align 8, !dbg !14733
  %cmp = icmp eq %struct.net_device_ops* %1, @mlxsw_sp_port_netdev_ops, !dbg !14734
  ret i1 %cmp, !dbg !14735
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.mlxsw_sp_port* @mlxsw_sp_port_dev_lower_find(%struct.net_device* %dev) #0 !dbg !14736 {
entry:
  %retval = alloca %struct.mlxsw_sp_port*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %priv = alloca %struct.netdev_nested_priv, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14739, metadata !DIExpression()), !dbg !14740
  call void @llvm.dbg.declare(metadata %struct.netdev_nested_priv* %priv, metadata !14741, metadata !DIExpression()), !dbg !14746
  %0 = bitcast %struct.netdev_nested_priv* %priv to i8*, !dbg !14746
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !14746
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14747
  %call = call zeroext i1 @mlxsw_sp_port_dev_check(%struct.net_device* %1) #9, !dbg !14749
  br i1 %call, label %if.then, label %if.end, !dbg !14750

if.then:                                          ; preds = %entry
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14751
  %call1 = call i8* @netdev_priv(%struct.net_device* %2) #9, !dbg !14752
  %3 = bitcast i8* %call1 to %struct.mlxsw_sp_port*, !dbg !14752
  store %struct.mlxsw_sp_port* %3, %struct.mlxsw_sp_port** %retval, align 8, !dbg !14753
  br label %return, !dbg !14753

if.end:                                           ; preds = %entry
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14754
  %call2 = call i32 @netdev_walk_all_lower_dev(%struct.net_device* %4, i32 (%struct.net_device*, %struct.netdev_nested_priv*)* @mlxsw_sp_lower_dev_walk, %struct.netdev_nested_priv* %priv) #9, !dbg !14755
  %data = getelementptr inbounds %struct.netdev_nested_priv, %struct.netdev_nested_priv* %priv, i32 0, i32 1, !dbg !14756
  %5 = load i8*, i8** %data, align 8, !dbg !14756
  %6 = bitcast i8* %5 to %struct.mlxsw_sp_port*, !dbg !14757
  store %struct.mlxsw_sp_port* %6, %struct.mlxsw_sp_port** %retval, align 8, !dbg !14758
  br label %return, !dbg !14758

return:                                           ; preds = %if.end, %if.then
  %7 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %retval, align 8, !dbg !14759
  ret %struct.mlxsw_sp_port* %7, !dbg !14759
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noredzone
declare dso_local i32 @netdev_walk_all_lower_dev(%struct.net_device*, i32 (%struct.net_device*, %struct.netdev_nested_priv*)*, %struct.netdev_nested_priv*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_lower_dev_walk(%struct.net_device* %lower_dev, %struct.netdev_nested_priv* %priv) #0 !dbg !14760 {
entry:
  %lower_dev.addr = alloca %struct.net_device*, align 8
  %priv.addr = alloca %struct.netdev_nested_priv*, align 8
  %ret = alloca i32, align 4
  store %struct.net_device* %lower_dev, %struct.net_device** %lower_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %lower_dev.addr, metadata !14764, metadata !DIExpression()), !dbg !14765
  store %struct.netdev_nested_priv* %priv, %struct.netdev_nested_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_nested_priv** %priv.addr, metadata !14766, metadata !DIExpression()), !dbg !14767
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14768, metadata !DIExpression()), !dbg !14769
  store i32 0, i32* %ret, align 4, !dbg !14769
  %0 = load %struct.net_device*, %struct.net_device** %lower_dev.addr, align 8, !dbg !14770
  %call = call zeroext i1 @mlxsw_sp_port_dev_check(%struct.net_device* %0) #9, !dbg !14772
  br i1 %call, label %if.then, label %if.end, !dbg !14773

if.then:                                          ; preds = %entry
  %1 = load %struct.net_device*, %struct.net_device** %lower_dev.addr, align 8, !dbg !14774
  %call1 = call i8* @netdev_priv(%struct.net_device* %1) #9, !dbg !14776
  %2 = load %struct.netdev_nested_priv*, %struct.netdev_nested_priv** %priv.addr, align 8, !dbg !14777
  %data = getelementptr inbounds %struct.netdev_nested_priv, %struct.netdev_nested_priv* %2, i32 0, i32 1, !dbg !14778
  store i8* %call1, i8** %data, align 8, !dbg !14779
  store i32 1, i32* %ret, align 4, !dbg !14780
  br label %if.end, !dbg !14781

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, i32* %ret, align 4, !dbg !14782
  ret i32 %3, !dbg !14783
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.mlxsw_sp* @mlxsw_sp_lower_get(%struct.net_device* %dev) #0 !dbg !14784 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14787, metadata !DIExpression()), !dbg !14788
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !14789, metadata !DIExpression()), !dbg !14790
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14791
  %call = call %struct.mlxsw_sp_port* @mlxsw_sp_port_dev_lower_find(%struct.net_device* %0) #9, !dbg !14792
  store %struct.mlxsw_sp_port* %call, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !14793
  %1 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !14794
  %tobool = icmp ne %struct.mlxsw_sp_port* %1, null, !dbg !14794
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14794

cond.true:                                        ; preds = %entry
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !14795
  %mlxsw_sp = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %2, i32 0, i32 2, !dbg !14796
  %3 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !14796
  br label %cond.end, !dbg !14794

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14794

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.mlxsw_sp* [ %3, %cond.true ], [ null, %cond.false ], !dbg !14794
  ret %struct.mlxsw_sp* %cond, !dbg !14797
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.mlxsw_sp_port* @mlxsw_sp_port_dev_lower_find_rcu(%struct.net_device* %dev) #0 !dbg !14798 {
entry:
  %retval = alloca %struct.mlxsw_sp_port*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %priv = alloca %struct.netdev_nested_priv, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14799, metadata !DIExpression()), !dbg !14800
  call void @llvm.dbg.declare(metadata %struct.netdev_nested_priv* %priv, metadata !14801, metadata !DIExpression()), !dbg !14802
  %0 = bitcast %struct.netdev_nested_priv* %priv to i8*, !dbg !14802
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !14802
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14803
  %call = call zeroext i1 @mlxsw_sp_port_dev_check(%struct.net_device* %1) #9, !dbg !14805
  br i1 %call, label %if.then, label %if.end, !dbg !14806

if.then:                                          ; preds = %entry
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14807
  %call1 = call i8* @netdev_priv(%struct.net_device* %2) #9, !dbg !14808
  %3 = bitcast i8* %call1 to %struct.mlxsw_sp_port*, !dbg !14808
  store %struct.mlxsw_sp_port* %3, %struct.mlxsw_sp_port** %retval, align 8, !dbg !14809
  br label %return, !dbg !14809

if.end:                                           ; preds = %entry
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14810
  %call2 = call i32 @netdev_walk_all_lower_dev_rcu(%struct.net_device* %4, i32 (%struct.net_device*, %struct.netdev_nested_priv*)* @mlxsw_sp_lower_dev_walk, %struct.netdev_nested_priv* %priv) #9, !dbg !14811
  %data = getelementptr inbounds %struct.netdev_nested_priv, %struct.netdev_nested_priv* %priv, i32 0, i32 1, !dbg !14812
  %5 = load i8*, i8** %data, align 8, !dbg !14812
  %6 = bitcast i8* %5 to %struct.mlxsw_sp_port*, !dbg !14813
  store %struct.mlxsw_sp_port* %6, %struct.mlxsw_sp_port** %retval, align 8, !dbg !14814
  br label %return, !dbg !14814

return:                                           ; preds = %if.end, %if.then
  %7 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %retval, align 8, !dbg !14815
  ret %struct.mlxsw_sp_port* %7, !dbg !14815
}

; Function Attrs: noredzone
declare dso_local i32 @netdev_walk_all_lower_dev_rcu(%struct.net_device*, i32 (%struct.net_device*, %struct.netdev_nested_priv*)*, %struct.netdev_nested_priv*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.mlxsw_sp_port* @mlxsw_sp_port_lower_dev_hold(%struct.net_device* %dev) #0 !dbg !14816 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14817, metadata !DIExpression()), !dbg !14818
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !14819, metadata !DIExpression()), !dbg !14820
  call void @__rcu_read_lock() #12, !dbg !14821
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14823
  %call = call %struct.mlxsw_sp_port* @mlxsw_sp_port_dev_lower_find_rcu(%struct.net_device* %0) #9, !dbg !14824
  store %struct.mlxsw_sp_port* %call, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !14825
  %1 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !14826
  %tobool = icmp ne %struct.mlxsw_sp_port* %1, null, !dbg !14826
  br i1 %tobool, label %if.then, label %if.end, !dbg !14828

if.then:                                          ; preds = %entry
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !14829
  %dev1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %2, i32 0, i32 0, !dbg !14830
  %3 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !14830
  call void @dev_hold(%struct.net_device* %3) #9, !dbg !14831
  br label %if.end, !dbg !14831

if.end:                                           ; preds = %if.then, %entry
  call void @rcu_read_unlock() #9, !dbg !14832
  %4 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !14833
  ret %struct.mlxsw_sp_port* %4, !dbg !14834
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_hold(%struct.net_device* %dev) #0 !dbg !14835 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %__vpp_verify = alloca i8*, align 8
  %pao_ID__ = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14836, metadata !DIExpression()), !dbg !14837
  br label %do.body, !dbg !14838

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !14839

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !14841, metadata !DIExpression()), !dbg !14843
  store i8* null, i8** %__vpp_verify, align 8, !dbg !14843
  %0 = load i8*, i8** %__vpp_verify, align 8, !dbg !14843
  br label %do.end, !dbg !14843

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !14839

do.body2:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %pao_ID__, metadata !14844, metadata !DIExpression()), !dbg !14847
  store i32 1, i32* %pao_ID__, align 4, !dbg !14847
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14848
  %pcpu_refcnt = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 97, !dbg !14848
  %2 = load i32*, i32** %pcpu_refcnt, align 8, !dbg !14848
  call void asm sideeffect "incl $0", "=*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* %2, i32* %2) #10, !dbg !14848, !srcloc !14851
  br label %do.end3, !dbg !14847

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !14839

do.end4:                                          ; preds = %do.end3
  ret void, !dbg !14852
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlxsw_sp_port_dev_put(%struct.mlxsw_sp_port* %mlxsw_sp_port) #0 !dbg !14853 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !14856, metadata !DIExpression()), !dbg !14857
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !14858
  %dev = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 0, !dbg !14859
  %1 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !14859
  call void @dev_put(%struct.net_device* %1) #9, !dbg !14860
  ret void, !dbg !14861
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_put(%struct.net_device* %dev) #0 !dbg !14862 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %__vpp_verify = alloca i8*, align 8
  %pao_ID__ = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14863, metadata !DIExpression()), !dbg !14864
  br label %do.body, !dbg !14865

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !14866

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !14868, metadata !DIExpression()), !dbg !14870
  store i8* null, i8** %__vpp_verify, align 8, !dbg !14870
  %0 = load i8*, i8** %__vpp_verify, align 8, !dbg !14870
  br label %do.end, !dbg !14870

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !14866

do.body2:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %pao_ID__, metadata !14871, metadata !DIExpression()), !dbg !14873
  store i32 -1, i32* %pao_ID__, align 4, !dbg !14873
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14874
  %pcpu_refcnt = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 97, !dbg !14874
  %2 = load i32*, i32** %pcpu_refcnt, align 8, !dbg !14874
  call void asm sideeffect "decl $0", "=*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* %2, i32* %2) #10, !dbg !14874, !srcloc !14878
  br label %do.end3, !dbg !14873

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !14866

do.end4:                                          ; preds = %do.end3
  ret void, !dbg !14879
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_module_exit() #5 section ".exit.text" !dbg !14880 {
entry:
  call void @mlxsw_pci_driver_unregister(%struct.pci_driver* @mlxsw_sp3_pci_driver) #9, !dbg !14881
  call void @mlxsw_pci_driver_unregister(%struct.pci_driver* @mlxsw_sp2_pci_driver) #9, !dbg !14882
  call void @mlxsw_pci_driver_unregister(%struct.pci_driver* @mlxsw_sp1_pci_driver) #9, !dbg !14883
  call void @mlxsw_core_driver_unregister(%struct.mlxsw_driver* @mlxsw_sp3_driver) #9, !dbg !14884
  call void @mlxsw_core_driver_unregister(%struct.mlxsw_driver* @mlxsw_sp2_driver) #9, !dbg !14885
  call void @mlxsw_core_driver_unregister(%struct.mlxsw_driver* @mlxsw_sp1_driver) #9, !dbg !14886
  %call = call i32 @unregister_inet6addr_validator_notifier(%struct.notifier_block* @mlxsw_sp_inet6addr_valid_nb) #9, !dbg !14887
  %call1 = call i32 @unregister_inetaddr_validator_notifier(%struct.notifier_block* @mlxsw_sp_inetaddr_valid_nb) #9, !dbg !14888
  ret void, !dbg !14889
}

; Function Attrs: noredzone
declare dso_local void @mlxsw_pci_driver_unregister(%struct.pci_driver*) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_core_driver_unregister(%struct.mlxsw_driver*) #2

; Function Attrs: noredzone
declare dso_local i32 @unregister_inet6addr_validator_notifier(%struct.notifier_block*) #2

; Function Attrs: noredzone
declare dso_local i32 @unregister_inetaddr_validator_notifier(%struct.notifier_block*) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_module_init() #5 section ".init.text" !dbg !14890 {
entry:
  %retval = alloca i32, align 4
  %err = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14891, metadata !DIExpression()), !dbg !14892
  %call = call i32 @register_inetaddr_validator_notifier(%struct.notifier_block* @mlxsw_sp_inetaddr_valid_nb) #9, !dbg !14893
  %call1 = call i32 @register_inet6addr_validator_notifier(%struct.notifier_block* @mlxsw_sp_inet6addr_valid_nb) #9, !dbg !14894
  %call2 = call i32 @mlxsw_core_driver_register(%struct.mlxsw_driver* @mlxsw_sp1_driver) #9, !dbg !14895
  store i32 %call2, i32* %err, align 4, !dbg !14896
  %0 = load i32, i32* %err, align 4, !dbg !14897
  %tobool = icmp ne i32 %0, 0, !dbg !14897
  br i1 %tobool, label %if.then, label %if.end, !dbg !14899

if.then:                                          ; preds = %entry
  br label %err_sp1_core_driver_register, !dbg !14900

if.end:                                           ; preds = %entry
  %call3 = call i32 @mlxsw_core_driver_register(%struct.mlxsw_driver* @mlxsw_sp2_driver) #9, !dbg !14901
  store i32 %call3, i32* %err, align 4, !dbg !14902
  %1 = load i32, i32* %err, align 4, !dbg !14903
  %tobool4 = icmp ne i32 %1, 0, !dbg !14903
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !14905

if.then5:                                         ; preds = %if.end
  br label %err_sp2_core_driver_register, !dbg !14906

if.end6:                                          ; preds = %if.end
  %call7 = call i32 @mlxsw_core_driver_register(%struct.mlxsw_driver* @mlxsw_sp3_driver) #9, !dbg !14907
  store i32 %call7, i32* %err, align 4, !dbg !14908
  %2 = load i32, i32* %err, align 4, !dbg !14909
  %tobool8 = icmp ne i32 %2, 0, !dbg !14909
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !14911

if.then9:                                         ; preds = %if.end6
  br label %err_sp3_core_driver_register, !dbg !14912

if.end10:                                         ; preds = %if.end6
  %call11 = call i32 @mlxsw_pci_driver_register(%struct.pci_driver* @mlxsw_sp1_pci_driver) #9, !dbg !14913
  store i32 %call11, i32* %err, align 4, !dbg !14914
  %3 = load i32, i32* %err, align 4, !dbg !14915
  %tobool12 = icmp ne i32 %3, 0, !dbg !14915
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !14917

if.then13:                                        ; preds = %if.end10
  br label %err_sp1_pci_driver_register, !dbg !14918

if.end14:                                         ; preds = %if.end10
  %call15 = call i32 @mlxsw_pci_driver_register(%struct.pci_driver* @mlxsw_sp2_pci_driver) #9, !dbg !14919
  store i32 %call15, i32* %err, align 4, !dbg !14920
  %4 = load i32, i32* %err, align 4, !dbg !14921
  %tobool16 = icmp ne i32 %4, 0, !dbg !14921
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !14923

if.then17:                                        ; preds = %if.end14
  br label %err_sp2_pci_driver_register, !dbg !14924

if.end18:                                         ; preds = %if.end14
  %call19 = call i32 @mlxsw_pci_driver_register(%struct.pci_driver* @mlxsw_sp3_pci_driver) #9, !dbg !14925
  store i32 %call19, i32* %err, align 4, !dbg !14926
  %5 = load i32, i32* %err, align 4, !dbg !14927
  %tobool20 = icmp ne i32 %5, 0, !dbg !14927
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !14929

if.then21:                                        ; preds = %if.end18
  br label %err_sp3_pci_driver_register, !dbg !14930

if.end22:                                         ; preds = %if.end18
  store i32 0, i32* %retval, align 4, !dbg !14931
  br label %return, !dbg !14931

err_sp3_pci_driver_register:                      ; preds = %if.then21
  call void @llvm.dbg.label(metadata !14932), !dbg !14933
  call void @mlxsw_pci_driver_unregister(%struct.pci_driver* @mlxsw_sp2_pci_driver) #9, !dbg !14934
  br label %err_sp2_pci_driver_register, !dbg !14934

err_sp2_pci_driver_register:                      ; preds = %err_sp3_pci_driver_register, %if.then17
  call void @llvm.dbg.label(metadata !14935), !dbg !14936
  call void @mlxsw_pci_driver_unregister(%struct.pci_driver* @mlxsw_sp1_pci_driver) #9, !dbg !14937
  br label %err_sp1_pci_driver_register, !dbg !14937

err_sp1_pci_driver_register:                      ; preds = %err_sp2_pci_driver_register, %if.then13
  call void @llvm.dbg.label(metadata !14938), !dbg !14939
  call void @mlxsw_core_driver_unregister(%struct.mlxsw_driver* @mlxsw_sp3_driver) #9, !dbg !14940
  br label %err_sp3_core_driver_register, !dbg !14940

err_sp3_core_driver_register:                     ; preds = %err_sp1_pci_driver_register, %if.then9
  call void @llvm.dbg.label(metadata !14941), !dbg !14942
  call void @mlxsw_core_driver_unregister(%struct.mlxsw_driver* @mlxsw_sp2_driver) #9, !dbg !14943
  br label %err_sp2_core_driver_register, !dbg !14943

err_sp2_core_driver_register:                     ; preds = %err_sp3_core_driver_register, %if.then5
  call void @llvm.dbg.label(metadata !14944), !dbg !14945
  call void @mlxsw_core_driver_unregister(%struct.mlxsw_driver* @mlxsw_sp1_driver) #9, !dbg !14946
  br label %err_sp1_core_driver_register, !dbg !14946

err_sp1_core_driver_register:                     ; preds = %err_sp2_core_driver_register, %if.then
  call void @llvm.dbg.label(metadata !14947), !dbg !14948
  %call23 = call i32 @unregister_inet6addr_validator_notifier(%struct.notifier_block* @mlxsw_sp_inet6addr_valid_nb) #9, !dbg !14949
  %call24 = call i32 @unregister_inetaddr_validator_notifier(%struct.notifier_block* @mlxsw_sp_inetaddr_valid_nb) #9, !dbg !14950
  %6 = load i32, i32* %err, align 4, !dbg !14951
  store i32 %6, i32* %retval, align 4, !dbg !14952
  br label %return, !dbg !14952

return:                                           ; preds = %err_sp1_core_driver_register, %if.end22
  %7 = load i32, i32* %retval, align 4, !dbg !14953
  ret i32 %7, !dbg !14953
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_mgpc_counter_index_set(i8* %buf, i32 %val) #0 !dbg !14954 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14955, metadata !DIExpression()), !dbg !14956
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14957, metadata !DIExpression()), !dbg !14956
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14956
  %1 = load i32, i32* %val.addr, align 4, !dbg !14956
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mgpc_counter_index_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !14956
  ret void, !dbg !14956
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_mgpc_counter_set_type_set(i8* %buf, i32 %val) #0 !dbg !14958 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14959, metadata !DIExpression()), !dbg !14960
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14961, metadata !DIExpression()), !dbg !14960
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14960
  %1 = load i32, i32* %val.addr, align 4, !dbg !14960
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mgpc_counter_set_type_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !14960
  ret void, !dbg !14960
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_mgpc_opcode_set(i8* %buf, i32 %val) #0 !dbg !14962 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14963, metadata !DIExpression()), !dbg !14964
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14965, metadata !DIExpression()), !dbg !14964
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14964
  %1 = load i32, i32* %val.addr, align 4, !dbg !14964
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mgpc_opcode_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !14964
  ret void, !dbg !14964
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__mlxsw_item_set32(i8* %buf, %struct.mlxsw_item* %item, i16 zeroext %index, i32 %val) #0 !dbg !14966 {
entry:
  %buf.addr = alloca i8*, align 8
  %item.addr = alloca %struct.mlxsw_item*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  %offset = alloca i32, align 4
  %b = alloca i32*, align 8
  %mask = alloca i32, align 4
  %tmp = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14971, metadata !DIExpression()), !dbg !14972
  store %struct.mlxsw_item* %item, %struct.mlxsw_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_item** %item.addr, metadata !14973, metadata !DIExpression()), !dbg !14974
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !14975, metadata !DIExpression()), !dbg !14976
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14977, metadata !DIExpression()), !dbg !14978
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !14979, metadata !DIExpression()), !dbg !14980
  %0 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14981
  %1 = load i16, i16* %index.addr, align 2, !dbg !14982
  %call = call i32 @__mlxsw_item_offset(%struct.mlxsw_item* %0, i16 zeroext %1, i64 4) #9, !dbg !14983
  store i32 %call, i32* %offset, align 4, !dbg !14980
  call void @llvm.dbg.declare(metadata i32** %b, metadata !14984, metadata !DIExpression()), !dbg !14985
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !14986
  %3 = bitcast i8* %2 to i32*, !dbg !14987
  store i32* %3, i32** %b, align 8, !dbg !14985
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !14988, metadata !DIExpression()), !dbg !14989
  %4 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14990
  %size = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %4, i32 0, i32 6, !dbg !14990
  %bits = bitcast %union.anon.166* %size to i8*, !dbg !14990
  %5 = load i8, i8* %bits, align 2, !dbg !14990
  %conv = zext i8 %5 to i32, !dbg !14990
  %sub = sub i32 %conv, 1, !dbg !14990
  %sub1 = sub i32 63, %sub, !dbg !14990
  %sh_prom = zext i32 %sub1 to i64, !dbg !14990
  %shr = lshr i64 -1, %sh_prom, !dbg !14990
  %and = and i64 -1, %shr, !dbg !14990
  %add = add i64 0, %and, !dbg !14990
  %6 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14991
  %shift = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %6, i32 0, i32 3, !dbg !14992
  %7 = load i8, i8* %shift, align 2, !dbg !14992
  %conv2 = zext i8 %7 to i32, !dbg !14991
  %sh_prom3 = zext i32 %conv2 to i64, !dbg !14993
  %shl = shl i64 %add, %sh_prom3, !dbg !14993
  %conv4 = trunc i64 %shl to i32, !dbg !14990
  store i32 %conv4, i32* %mask, align 4, !dbg !14989
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !14994, metadata !DIExpression()), !dbg !14995
  %8 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14996
  %no_real_shift = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %8, i32 0, i32 5, !dbg !14998
  %9 = load i8, i8* %no_real_shift, align 8, !dbg !14998
  %tobool = trunc i8 %9 to i1, !dbg !14998
  br i1 %tobool, label %if.end, label %if.then, !dbg !14999

if.then:                                          ; preds = %entry
  %10 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15000
  %shift5 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %10, i32 0, i32 3, !dbg !15001
  %11 = load i8, i8* %shift5, align 2, !dbg !15001
  %conv6 = zext i8 %11 to i32, !dbg !15000
  %12 = load i32, i32* %val.addr, align 4, !dbg !15002
  %shl7 = shl i32 %12, %conv6, !dbg !15002
  store i32 %shl7, i32* %val.addr, align 4, !dbg !15002
  br label %if.end, !dbg !15003

if.end:                                           ; preds = %if.then, %entry
  %13 = load i32, i32* %mask, align 4, !dbg !15004
  %14 = load i32, i32* %val.addr, align 4, !dbg !15005
  %and8 = and i32 %14, %13, !dbg !15005
  store i32 %and8, i32* %val.addr, align 4, !dbg !15005
  %15 = load i32*, i32** %b, align 8, !dbg !15006
  %16 = load i32, i32* %offset, align 4, !dbg !15006
  %idxprom = zext i32 %16 to i64, !dbg !15006
  %arrayidx = getelementptr i32, i32* %15, i64 %idxprom, !dbg !15006
  %17 = load i32, i32* %arrayidx, align 4, !dbg !15006
  %18 = call i1 @llvm.is.constant.i32(i32 %17), !dbg !15006
  br i1 %18, label %cond.true, label %cond.false, !dbg !15006

cond.true:                                        ; preds = %if.end
  %19 = load i32*, i32** %b, align 8, !dbg !15006
  %20 = load i32, i32* %offset, align 4, !dbg !15006
  %idxprom9 = zext i32 %20 to i64, !dbg !15006
  %arrayidx10 = getelementptr i32, i32* %19, i64 %idxprom9, !dbg !15006
  %21 = load i32, i32* %arrayidx10, align 4, !dbg !15006
  %and11 = and i32 %21, 255, !dbg !15006
  %shl12 = shl i32 %and11, 24, !dbg !15006
  %22 = load i32*, i32** %b, align 8, !dbg !15006
  %23 = load i32, i32* %offset, align 4, !dbg !15006
  %idxprom13 = zext i32 %23 to i64, !dbg !15006
  %arrayidx14 = getelementptr i32, i32* %22, i64 %idxprom13, !dbg !15006
  %24 = load i32, i32* %arrayidx14, align 4, !dbg !15006
  %and15 = and i32 %24, 65280, !dbg !15006
  %shl16 = shl i32 %and15, 8, !dbg !15006
  %or = or i32 %shl12, %shl16, !dbg !15006
  %25 = load i32*, i32** %b, align 8, !dbg !15006
  %26 = load i32, i32* %offset, align 4, !dbg !15006
  %idxprom17 = zext i32 %26 to i64, !dbg !15006
  %arrayidx18 = getelementptr i32, i32* %25, i64 %idxprom17, !dbg !15006
  %27 = load i32, i32* %arrayidx18, align 4, !dbg !15006
  %and19 = and i32 %27, 16711680, !dbg !15006
  %shr20 = lshr i32 %and19, 8, !dbg !15006
  %or21 = or i32 %or, %shr20, !dbg !15006
  %28 = load i32*, i32** %b, align 8, !dbg !15006
  %29 = load i32, i32* %offset, align 4, !dbg !15006
  %idxprom22 = zext i32 %29 to i64, !dbg !15006
  %arrayidx23 = getelementptr i32, i32* %28, i64 %idxprom22, !dbg !15006
  %30 = load i32, i32* %arrayidx23, align 4, !dbg !15006
  %and24 = and i32 %30, -16777216, !dbg !15006
  %shr25 = lshr i32 %and24, 24, !dbg !15006
  %or26 = or i32 %or21, %shr25, !dbg !15006
  br label %cond.end, !dbg !15006

cond.false:                                       ; preds = %if.end
  %31 = load i32*, i32** %b, align 8, !dbg !15006
  %32 = load i32, i32* %offset, align 4, !dbg !15006
  %idxprom27 = zext i32 %32 to i64, !dbg !15006
  %arrayidx28 = getelementptr i32, i32* %31, i64 %idxprom27, !dbg !15006
  %33 = load i32, i32* %arrayidx28, align 4, !dbg !15006
  %call29 = call i32 @__fswab32(i32 %33) #11, !dbg !15006
  br label %cond.end, !dbg !15006

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or26, %cond.true ], [ %call29, %cond.false ], !dbg !15006
  store i32 %cond, i32* %tmp, align 4, !dbg !15007
  %34 = load i32, i32* %mask, align 4, !dbg !15008
  %neg = xor i32 %34, -1, !dbg !15009
  %35 = load i32, i32* %tmp, align 4, !dbg !15010
  %and30 = and i32 %35, %neg, !dbg !15010
  store i32 %and30, i32* %tmp, align 4, !dbg !15010
  %36 = load i32, i32* %val.addr, align 4, !dbg !15011
  %37 = load i32, i32* %tmp, align 4, !dbg !15012
  %or31 = or i32 %37, %36, !dbg !15012
  store i32 %or31, i32* %tmp, align 4, !dbg !15012
  %38 = load i32, i32* %tmp, align 4, !dbg !15013
  %39 = call i1 @llvm.is.constant.i32(i32 %38), !dbg !15013
  br i1 %39, label %cond.true32, label %cond.false44, !dbg !15013

cond.true32:                                      ; preds = %cond.end
  %40 = load i32, i32* %tmp, align 4, !dbg !15013
  %and33 = and i32 %40, 255, !dbg !15013
  %shl34 = shl i32 %and33, 24, !dbg !15013
  %41 = load i32, i32* %tmp, align 4, !dbg !15013
  %and35 = and i32 %41, 65280, !dbg !15013
  %shl36 = shl i32 %and35, 8, !dbg !15013
  %or37 = or i32 %shl34, %shl36, !dbg !15013
  %42 = load i32, i32* %tmp, align 4, !dbg !15013
  %and38 = and i32 %42, 16711680, !dbg !15013
  %shr39 = lshr i32 %and38, 8, !dbg !15013
  %or40 = or i32 %or37, %shr39, !dbg !15013
  %43 = load i32, i32* %tmp, align 4, !dbg !15013
  %and41 = and i32 %43, -16777216, !dbg !15013
  %shr42 = lshr i32 %and41, 24, !dbg !15013
  %or43 = or i32 %or40, %shr42, !dbg !15013
  br label %cond.end46, !dbg !15013

cond.false44:                                     ; preds = %cond.end
  %44 = load i32, i32* %tmp, align 4, !dbg !15013
  %call45 = call i32 @__fswab32(i32 %44) #11, !dbg !15013
  br label %cond.end46, !dbg !15013

cond.end46:                                       ; preds = %cond.false44, %cond.true32
  %cond47 = phi i32 [ %or43, %cond.true32 ], [ %call45, %cond.false44 ], !dbg !15013
  %45 = load i32*, i32** %b, align 8, !dbg !15014
  %46 = load i32, i32* %offset, align 4, !dbg !15015
  %idxprom48 = zext i32 %46 to i64, !dbg !15014
  %arrayidx49 = getelementptr i32, i32* %45, i64 %idxprom48, !dbg !15014
  store i32 %cond47, i32* %arrayidx49, align 4, !dbg !15016
  ret void, !dbg !15017
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__mlxsw_item_offset(%struct.mlxsw_item* %item, i16 zeroext %index, i64 %typesize) #0 !dbg !15018 {
entry:
  %item.addr = alloca %struct.mlxsw_item*, align 8
  %index.addr = alloca i16, align 2
  %typesize.addr = alloca i64, align 8
  store %struct.mlxsw_item* %item, %struct.mlxsw_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_item** %item.addr, metadata !15021, metadata !DIExpression()), !dbg !15022
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !15023, metadata !DIExpression()), !dbg !15024
  store i64 %typesize, i64* %typesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %typesize.addr, metadata !15025, metadata !DIExpression()), !dbg !15026
  br label %do.body, !dbg !15027

do.body:                                          ; preds = %entry
  %0 = load i16, i16* %index.addr, align 2, !dbg !15028
  %conv = zext i16 %0 to i32, !dbg !15028
  %tobool = icmp ne i32 %conv, 0, !dbg !15028
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !15028

land.rhs:                                         ; preds = %do.body
  %1 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15028
  %step = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %1, i32 0, i32 1, !dbg !15028
  %2 = load i16, i16* %step, align 2, !dbg !15028
  %tobool1 = icmp ne i16 %2, 0, !dbg !15028
  %lnot = xor i1 %tobool1, true, !dbg !15028
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.body
  %3 = phi i1 [ false, %do.body ], [ %lnot, %land.rhs ], !dbg !15031
  %lnot2 = xor i1 %3, true, !dbg !15028
  %lnot3 = xor i1 %lnot2, true, !dbg !15028
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !15028
  %conv4 = sext i32 %lnot.ext to i64, !dbg !15028
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !15028
  br i1 %tobool5, label %if.then, label %if.end, !dbg !15032

if.then:                                          ; preds = %land.end
  br label %do.body6, !dbg !15028

do.body6:                                         ; preds = %if.then
  br label %do.body7, !dbg !15033

do.body7:                                         ; preds = %do.body6
  br label %do.end, !dbg !15035

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !15033

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3, i64 0, i64 0), i32 29, i32 0, i64 12) #10, !dbg !15037, !srcloc !15039
  br label %do.end9, !dbg !15037

do.end9:                                          ; preds = %do.body8
  br label %do.body10, !dbg !15033

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 645) #10, !dbg !15040, !srcloc !15043
  unreachable, !dbg !15044

do.end11:                                         ; No predecessors!
  br label %do.end12, !dbg !15033

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !15033

if.end:                                           ; preds = %do.end12, %land.end
  br label %do.end13, !dbg !15032

do.end13:                                         ; preds = %if.end
  %4 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15045
  %offset = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %4, i32 0, i32 0, !dbg !15047
  %5 = load i16, i16* %offset, align 8, !dbg !15047
  %conv14 = zext i16 %5 to i64, !dbg !15045
  %6 = load i64, i64* %typesize.addr, align 8, !dbg !15048
  %rem = urem i64 %conv14, %6, !dbg !15049
  %cmp = icmp ne i64 %rem, 0, !dbg !15050
  br i1 %cmp, label %if.then26, label %lor.lhs.false, !dbg !15051

lor.lhs.false:                                    ; preds = %do.end13
  %7 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15052
  %step16 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %7, i32 0, i32 1, !dbg !15053
  %8 = load i16, i16* %step16, align 2, !dbg !15053
  %conv17 = sext i16 %8 to i64, !dbg !15052
  %9 = load i64, i64* %typesize.addr, align 8, !dbg !15054
  %rem18 = urem i64 %conv17, %9, !dbg !15055
  %cmp19 = icmp ne i64 %rem18, 0, !dbg !15056
  br i1 %cmp19, label %if.then26, label %lor.lhs.false21, !dbg !15057

lor.lhs.false21:                                  ; preds = %lor.lhs.false
  %10 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15058
  %in_step_offset = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %10, i32 0, i32 2, !dbg !15059
  %11 = load i16, i16* %in_step_offset, align 4, !dbg !15059
  %conv22 = zext i16 %11 to i64, !dbg !15058
  %12 = load i64, i64* %typesize.addr, align 8, !dbg !15060
  %rem23 = urem i64 %conv22, %12, !dbg !15061
  %cmp24 = icmp ne i64 %rem23, 0, !dbg !15062
  br i1 %cmp24, label %if.then26, label %if.end41, !dbg !15063

if.then26:                                        ; preds = %lor.lhs.false21, %lor.lhs.false, %do.end13
  %13 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15064
  %name = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %13, i32 0, i32 7, !dbg !15064
  %14 = load i8*, i8** %name, align 8, !dbg !15064
  %15 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15064
  %offset27 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %15, i32 0, i32 0, !dbg !15064
  %16 = load i16, i16* %offset27, align 8, !dbg !15064
  %conv28 = zext i16 %16 to i32, !dbg !15064
  %17 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15064
  %step29 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %17, i32 0, i32 1, !dbg !15064
  %18 = load i16, i16* %step29, align 2, !dbg !15064
  %conv30 = sext i16 %18 to i32, !dbg !15064
  %19 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15064
  %in_step_offset31 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %19, i32 0, i32 2, !dbg !15064
  %20 = load i16, i16* %in_step_offset31, align 4, !dbg !15064
  %conv32 = zext i16 %20 to i32, !dbg !15064
  %21 = load i64, i64* %typesize.addr, align 8, !dbg !15064
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i8* %14, i32 %conv28, i32 %conv30, i32 %conv32, i64 %21) #13, !dbg !15064
  br label %do.body33, !dbg !15066

do.body33:                                        ; preds = %if.then26
  br label %do.body34, !dbg !15067

do.body34:                                        ; preds = %do.body33
  br label %do.end35, !dbg !15069

do.end35:                                         ; preds = %do.body34
  br label %do.body36, !dbg !15067

do.body36:                                        ; preds = %do.end35
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3, i64 0, i64 0), i32 36, i32 0, i64 12) #10, !dbg !15071, !srcloc !15073
  br label %do.end37, !dbg !15071

do.end37:                                         ; preds = %do.body36
  br label %do.body38, !dbg !15067

do.body38:                                        ; preds = %do.end37
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 646) #10, !dbg !15074, !srcloc !15077
  unreachable, !dbg !15078

do.end39:                                         ; No predecessors!
  br label %do.end40, !dbg !15067

do.end40:                                         ; preds = %do.end39
  br label %if.end41, !dbg !15079

if.end41:                                         ; preds = %do.end40, %lor.lhs.false21
  %22 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15080
  %offset42 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %22, i32 0, i32 0, !dbg !15081
  %23 = load i16, i16* %offset42, align 8, !dbg !15081
  %conv43 = zext i16 %23 to i32, !dbg !15080
  %24 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15082
  %step44 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %24, i32 0, i32 1, !dbg !15083
  %25 = load i16, i16* %step44, align 2, !dbg !15083
  %conv45 = sext i16 %25 to i32, !dbg !15082
  %26 = load i16, i16* %index.addr, align 2, !dbg !15084
  %conv46 = zext i16 %26 to i32, !dbg !15084
  %mul = mul i32 %conv45, %conv46, !dbg !15085
  %add = add i32 %conv43, %mul, !dbg !15086
  %27 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15087
  %in_step_offset47 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %27, i32 0, i32 2, !dbg !15088
  %28 = load i16, i16* %in_step_offset47, align 4, !dbg !15088
  %conv48 = zext i16 %28 to i32, !dbg !15087
  %add49 = add i32 %add, %conv48, !dbg !15089
  %conv50 = sext i32 %add49 to i64, !dbg !15090
  %29 = load i64, i64* %typesize.addr, align 8, !dbg !15091
  %div = udiv i64 %conv50, %29, !dbg !15092
  %conv51 = trunc i64 %div to i32, !dbg !15093
  ret i32 %conv51, !dbg !15094
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #6

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__fswab32(i32 %val) #7 !dbg !15095 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15099, metadata !DIExpression()), !dbg !15100
  %0 = load i32, i32* %val.addr, align 4, !dbg !15101
  %call = call i32 @__arch_swab32(i32 %0) #11, !dbg !15102
  ret i32 %call, !dbg !15103
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__arch_swab32(i32 %val) #7 !dbg !15104 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15106, metadata !DIExpression()), !dbg !15107
  %0 = load i32, i32* %val.addr, align 4, !dbg !15108
  %1 = call i32 asm "bswapl $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %0) #14, !dbg !15109, !srcloc !15110
  store i32 %1, i32* %val.addr, align 4, !dbg !15109
  %2 = load i32, i32* %val.addr, align 4, !dbg !15111
  ret i32 %2, !dbg !15112
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__mlxsw_item_get64(i8* %buf, %struct.mlxsw_item* %item, i16 zeroext %index) #0 !dbg !15113 {
entry:
  %buf.addr = alloca i8*, align 8
  %item.addr = alloca %struct.mlxsw_item*, align 8
  %index.addr = alloca i16, align 2
  %offset = alloca i32, align 4
  %b = alloca i64*, align 8
  %tmp = alloca i64, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15116, metadata !DIExpression()), !dbg !15117
  store %struct.mlxsw_item* %item, %struct.mlxsw_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_item** %item.addr, metadata !15118, metadata !DIExpression()), !dbg !15119
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !15120, metadata !DIExpression()), !dbg !15121
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !15122, metadata !DIExpression()), !dbg !15123
  %0 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15124
  %1 = load i16, i16* %index.addr, align 2, !dbg !15125
  %call = call i32 @__mlxsw_item_offset(%struct.mlxsw_item* %0, i16 zeroext %1, i64 8) #9, !dbg !15126
  store i32 %call, i32* %offset, align 4, !dbg !15123
  call void @llvm.dbg.declare(metadata i64** %b, metadata !15127, metadata !DIExpression()), !dbg !15128
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !15129
  %3 = bitcast i8* %2 to i64*, !dbg !15130
  store i64* %3, i64** %b, align 8, !dbg !15128
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !15131, metadata !DIExpression()), !dbg !15132
  %4 = load i64*, i64** %b, align 8, !dbg !15133
  %5 = load i32, i32* %offset, align 4, !dbg !15133
  %idxprom = zext i32 %5 to i64, !dbg !15133
  %arrayidx = getelementptr i64, i64* %4, i64 %idxprom, !dbg !15133
  %6 = load i64, i64* %arrayidx, align 8, !dbg !15133
  %7 = call i1 @llvm.is.constant.i64(i64 %6), !dbg !15133
  br i1 %7, label %cond.true, label %cond.false, !dbg !15133

cond.true:                                        ; preds = %entry
  %8 = load i64*, i64** %b, align 8, !dbg !15133
  %9 = load i32, i32* %offset, align 4, !dbg !15133
  %idxprom1 = zext i32 %9 to i64, !dbg !15133
  %arrayidx2 = getelementptr i64, i64* %8, i64 %idxprom1, !dbg !15133
  %10 = load i64, i64* %arrayidx2, align 8, !dbg !15133
  %and = and i64 %10, 255, !dbg !15133
  %shl = shl i64 %and, 56, !dbg !15133
  %11 = load i64*, i64** %b, align 8, !dbg !15133
  %12 = load i32, i32* %offset, align 4, !dbg !15133
  %idxprom3 = zext i32 %12 to i64, !dbg !15133
  %arrayidx4 = getelementptr i64, i64* %11, i64 %idxprom3, !dbg !15133
  %13 = load i64, i64* %arrayidx4, align 8, !dbg !15133
  %and5 = and i64 %13, 65280, !dbg !15133
  %shl6 = shl i64 %and5, 40, !dbg !15133
  %or = or i64 %shl, %shl6, !dbg !15133
  %14 = load i64*, i64** %b, align 8, !dbg !15133
  %15 = load i32, i32* %offset, align 4, !dbg !15133
  %idxprom7 = zext i32 %15 to i64, !dbg !15133
  %arrayidx8 = getelementptr i64, i64* %14, i64 %idxprom7, !dbg !15133
  %16 = load i64, i64* %arrayidx8, align 8, !dbg !15133
  %and9 = and i64 %16, 16711680, !dbg !15133
  %shl10 = shl i64 %and9, 24, !dbg !15133
  %or11 = or i64 %or, %shl10, !dbg !15133
  %17 = load i64*, i64** %b, align 8, !dbg !15133
  %18 = load i32, i32* %offset, align 4, !dbg !15133
  %idxprom12 = zext i32 %18 to i64, !dbg !15133
  %arrayidx13 = getelementptr i64, i64* %17, i64 %idxprom12, !dbg !15133
  %19 = load i64, i64* %arrayidx13, align 8, !dbg !15133
  %and14 = and i64 %19, 4278190080, !dbg !15133
  %shl15 = shl i64 %and14, 8, !dbg !15133
  %or16 = or i64 %or11, %shl15, !dbg !15133
  %20 = load i64*, i64** %b, align 8, !dbg !15133
  %21 = load i32, i32* %offset, align 4, !dbg !15133
  %idxprom17 = zext i32 %21 to i64, !dbg !15133
  %arrayidx18 = getelementptr i64, i64* %20, i64 %idxprom17, !dbg !15133
  %22 = load i64, i64* %arrayidx18, align 8, !dbg !15133
  %and19 = and i64 %22, 1095216660480, !dbg !15133
  %shr = lshr i64 %and19, 8, !dbg !15133
  %or20 = or i64 %or16, %shr, !dbg !15133
  %23 = load i64*, i64** %b, align 8, !dbg !15133
  %24 = load i32, i32* %offset, align 4, !dbg !15133
  %idxprom21 = zext i32 %24 to i64, !dbg !15133
  %arrayidx22 = getelementptr i64, i64* %23, i64 %idxprom21, !dbg !15133
  %25 = load i64, i64* %arrayidx22, align 8, !dbg !15133
  %and23 = and i64 %25, 280375465082880, !dbg !15133
  %shr24 = lshr i64 %and23, 24, !dbg !15133
  %or25 = or i64 %or20, %shr24, !dbg !15133
  %26 = load i64*, i64** %b, align 8, !dbg !15133
  %27 = load i32, i32* %offset, align 4, !dbg !15133
  %idxprom26 = zext i32 %27 to i64, !dbg !15133
  %arrayidx27 = getelementptr i64, i64* %26, i64 %idxprom26, !dbg !15133
  %28 = load i64, i64* %arrayidx27, align 8, !dbg !15133
  %and28 = and i64 %28, 71776119061217280, !dbg !15133
  %shr29 = lshr i64 %and28, 40, !dbg !15133
  %or30 = or i64 %or25, %shr29, !dbg !15133
  %29 = load i64*, i64** %b, align 8, !dbg !15133
  %30 = load i32, i32* %offset, align 4, !dbg !15133
  %idxprom31 = zext i32 %30 to i64, !dbg !15133
  %arrayidx32 = getelementptr i64, i64* %29, i64 %idxprom31, !dbg !15133
  %31 = load i64, i64* %arrayidx32, align 8, !dbg !15133
  %and33 = and i64 %31, -72057594037927936, !dbg !15133
  %shr34 = lshr i64 %and33, 56, !dbg !15133
  %or35 = or i64 %or30, %shr34, !dbg !15133
  br label %cond.end, !dbg !15133

cond.false:                                       ; preds = %entry
  %32 = load i64*, i64** %b, align 8, !dbg !15133
  %33 = load i32, i32* %offset, align 4, !dbg !15133
  %idxprom36 = zext i32 %33 to i64, !dbg !15133
  %arrayidx37 = getelementptr i64, i64* %32, i64 %idxprom36, !dbg !15133
  %34 = load i64, i64* %arrayidx37, align 8, !dbg !15133
  %call38 = call i64 @__fswab64(i64 %34) #11, !dbg !15133
  br label %cond.end, !dbg !15133

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %or35, %cond.true ], [ %call38, %cond.false ], !dbg !15133
  store i64 %cond, i64* %tmp, align 8, !dbg !15134
  %35 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15135
  %shift = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %35, i32 0, i32 3, !dbg !15136
  %36 = load i8, i8* %shift, align 2, !dbg !15136
  %conv = zext i8 %36 to i32, !dbg !15135
  %37 = load i64, i64* %tmp, align 8, !dbg !15137
  %sh_prom = zext i32 %conv to i64, !dbg !15137
  %shr39 = lshr i64 %37, %sh_prom, !dbg !15137
  store i64 %shr39, i64* %tmp, align 8, !dbg !15137
  %38 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15138
  %size = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %38, i32 0, i32 6, !dbg !15138
  %bits = bitcast %union.anon.166* %size to i8*, !dbg !15138
  %39 = load i8, i8* %bits, align 2, !dbg !15138
  %conv40 = zext i8 %39 to i32, !dbg !15138
  %sub = sub i32 %conv40, 1, !dbg !15138
  %sub41 = sub i32 63, %sub, !dbg !15138
  %sh_prom42 = zext i32 %sub41 to i64, !dbg !15138
  %shr43 = lshr i64 -1, %sh_prom42, !dbg !15138
  %and44 = and i64 -1, %shr43, !dbg !15138
  %add = add i64 0, %and44, !dbg !15138
  %40 = load i64, i64* %tmp, align 8, !dbg !15139
  %and45 = and i64 %40, %add, !dbg !15139
  store i64 %and45, i64* %tmp, align 8, !dbg !15139
  %41 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15140
  %no_real_shift = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %41, i32 0, i32 5, !dbg !15142
  %42 = load i8, i8* %no_real_shift, align 8, !dbg !15142
  %tobool = trunc i8 %42 to i1, !dbg !15142
  br i1 %tobool, label %if.then, label %if.end, !dbg !15143

if.then:                                          ; preds = %cond.end
  %43 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15144
  %shift46 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %43, i32 0, i32 3, !dbg !15145
  %44 = load i8, i8* %shift46, align 2, !dbg !15145
  %conv47 = zext i8 %44 to i32, !dbg !15144
  %45 = load i64, i64* %tmp, align 8, !dbg !15146
  %sh_prom48 = zext i32 %conv47 to i64, !dbg !15146
  %shl49 = shl i64 %45, %sh_prom48, !dbg !15146
  store i64 %shl49, i64* %tmp, align 8, !dbg !15146
  br label %if.end, !dbg !15147

if.end:                                           ; preds = %if.then, %cond.end
  %46 = load i64, i64* %tmp, align 8, !dbg !15148
  ret i64 %46, !dbg !15149
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i64 @__fswab64(i64 %val) #7 !dbg !15150 {
entry:
  %val.addr = alloca i64, align 8
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !15153, metadata !DIExpression()), !dbg !15154
  %0 = load i64, i64* %val.addr, align 8, !dbg !15155
  %call = call i64 @__arch_swab64(i64 %0) #11, !dbg !15156
  ret i64 %call, !dbg !15157
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i64 @__arch_swab64(i64 %val) #7 !dbg !15158 {
entry:
  %val.addr = alloca i64, align 8
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !15159, metadata !DIExpression()), !dbg !15160
  %0 = load i64, i64* %val.addr, align 8, !dbg !15161
  %1 = call i64 asm "bswapq $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i64 %0) #14, !dbg !15162, !srcloc !15163
  store i64 %1, i64* %val.addr, align 8, !dbg !15162
  %2 = load i64, i64* %val.addr, align 8, !dbg !15164
  ret i64 %2, !dbg !15165
}

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #8

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #7 !dbg !15166 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !15170, metadata !DIExpression()), !dbg !15175
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !15177, metadata !DIExpression()), !dbg !15178
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !15179, metadata !DIExpression()), !dbg !15180
  %0 = load i64, i64* %size.addr, align 8, !dbg !15181
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !15183
  br i1 %1, label %if.then, label %if.end447, !dbg !15184

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !15185
  %tobool = icmp ne i64 %2, 0, !dbg !15185
  br i1 %tobool, label %if.end, label %if.then1, !dbg !15188

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !15189
  br label %return, !dbg !15189

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !15190
  %cmp = icmp ult i64 %3, 4096, !dbg !15192
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !15193

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !15194
  br label %return, !dbg !15194

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub = sub i64 %4, 1, !dbg !15195
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !15195
  br i1 %5, label %cond.true, label %cond.false442, !dbg !15195

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub4 = sub i64 %6, 1, !dbg !15195
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !15195
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !15195

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub6 = sub i64 %8, 1, !dbg !15195
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !15195
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !15195

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !15195

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub9 = sub i64 %9, 1, !dbg !15195
  %and = and i64 %sub9, -9223372036854775808, !dbg !15195
  %tobool10 = icmp ne i64 %and, 0, !dbg !15195
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !15195

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !15195

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub13 = sub i64 %10, 1, !dbg !15195
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !15195
  %tobool15 = icmp ne i64 %and14, 0, !dbg !15195
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !15195

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !15195

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub18 = sub i64 %11, 1, !dbg !15195
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !15195
  %tobool20 = icmp ne i64 %and19, 0, !dbg !15195
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !15195

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !15195

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub23 = sub i64 %12, 1, !dbg !15195
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !15195
  %tobool25 = icmp ne i64 %and24, 0, !dbg !15195
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !15195

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !15195

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub28 = sub i64 %13, 1, !dbg !15195
  %and29 = and i64 %sub28, 576460752303423488, !dbg !15195
  %tobool30 = icmp ne i64 %and29, 0, !dbg !15195
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !15195

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !15195

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub33 = sub i64 %14, 1, !dbg !15195
  %and34 = and i64 %sub33, 288230376151711744, !dbg !15195
  %tobool35 = icmp ne i64 %and34, 0, !dbg !15195
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !15195

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !15195

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub38 = sub i64 %15, 1, !dbg !15195
  %and39 = and i64 %sub38, 144115188075855872, !dbg !15195
  %tobool40 = icmp ne i64 %and39, 0, !dbg !15195
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !15195

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !15195

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub43 = sub i64 %16, 1, !dbg !15195
  %and44 = and i64 %sub43, 72057594037927936, !dbg !15195
  %tobool45 = icmp ne i64 %and44, 0, !dbg !15195
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !15195

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !15195

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub48 = sub i64 %17, 1, !dbg !15195
  %and49 = and i64 %sub48, 36028797018963968, !dbg !15195
  %tobool50 = icmp ne i64 %and49, 0, !dbg !15195
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !15195

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !15195

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub53 = sub i64 %18, 1, !dbg !15195
  %and54 = and i64 %sub53, 18014398509481984, !dbg !15195
  %tobool55 = icmp ne i64 %and54, 0, !dbg !15195
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !15195

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !15195

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub58 = sub i64 %19, 1, !dbg !15195
  %and59 = and i64 %sub58, 9007199254740992, !dbg !15195
  %tobool60 = icmp ne i64 %and59, 0, !dbg !15195
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !15195

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !15195

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub63 = sub i64 %20, 1, !dbg !15195
  %and64 = and i64 %sub63, 4503599627370496, !dbg !15195
  %tobool65 = icmp ne i64 %and64, 0, !dbg !15195
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !15195

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !15195

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub68 = sub i64 %21, 1, !dbg !15195
  %and69 = and i64 %sub68, 2251799813685248, !dbg !15195
  %tobool70 = icmp ne i64 %and69, 0, !dbg !15195
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !15195

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !15195

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub73 = sub i64 %22, 1, !dbg !15195
  %and74 = and i64 %sub73, 1125899906842624, !dbg !15195
  %tobool75 = icmp ne i64 %and74, 0, !dbg !15195
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !15195

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !15195

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub78 = sub i64 %23, 1, !dbg !15195
  %and79 = and i64 %sub78, 562949953421312, !dbg !15195
  %tobool80 = icmp ne i64 %and79, 0, !dbg !15195
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !15195

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !15195

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub83 = sub i64 %24, 1, !dbg !15195
  %and84 = and i64 %sub83, 281474976710656, !dbg !15195
  %tobool85 = icmp ne i64 %and84, 0, !dbg !15195
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !15195

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !15195

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub88 = sub i64 %25, 1, !dbg !15195
  %and89 = and i64 %sub88, 140737488355328, !dbg !15195
  %tobool90 = icmp ne i64 %and89, 0, !dbg !15195
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !15195

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !15195

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub93 = sub i64 %26, 1, !dbg !15195
  %and94 = and i64 %sub93, 70368744177664, !dbg !15195
  %tobool95 = icmp ne i64 %and94, 0, !dbg !15195
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !15195

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !15195

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub98 = sub i64 %27, 1, !dbg !15195
  %and99 = and i64 %sub98, 35184372088832, !dbg !15195
  %tobool100 = icmp ne i64 %and99, 0, !dbg !15195
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !15195

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !15195

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub103 = sub i64 %28, 1, !dbg !15195
  %and104 = and i64 %sub103, 17592186044416, !dbg !15195
  %tobool105 = icmp ne i64 %and104, 0, !dbg !15195
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !15195

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !15195

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub108 = sub i64 %29, 1, !dbg !15195
  %and109 = and i64 %sub108, 8796093022208, !dbg !15195
  %tobool110 = icmp ne i64 %and109, 0, !dbg !15195
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !15195

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !15195

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub113 = sub i64 %30, 1, !dbg !15195
  %and114 = and i64 %sub113, 4398046511104, !dbg !15195
  %tobool115 = icmp ne i64 %and114, 0, !dbg !15195
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !15195

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !15195

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub118 = sub i64 %31, 1, !dbg !15195
  %and119 = and i64 %sub118, 2199023255552, !dbg !15195
  %tobool120 = icmp ne i64 %and119, 0, !dbg !15195
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !15195

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !15195

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub123 = sub i64 %32, 1, !dbg !15195
  %and124 = and i64 %sub123, 1099511627776, !dbg !15195
  %tobool125 = icmp ne i64 %and124, 0, !dbg !15195
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !15195

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !15195

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub128 = sub i64 %33, 1, !dbg !15195
  %and129 = and i64 %sub128, 549755813888, !dbg !15195
  %tobool130 = icmp ne i64 %and129, 0, !dbg !15195
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !15195

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !15195

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub133 = sub i64 %34, 1, !dbg !15195
  %and134 = and i64 %sub133, 274877906944, !dbg !15195
  %tobool135 = icmp ne i64 %and134, 0, !dbg !15195
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !15195

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !15195

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub138 = sub i64 %35, 1, !dbg !15195
  %and139 = and i64 %sub138, 137438953472, !dbg !15195
  %tobool140 = icmp ne i64 %and139, 0, !dbg !15195
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !15195

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !15195

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub143 = sub i64 %36, 1, !dbg !15195
  %and144 = and i64 %sub143, 68719476736, !dbg !15195
  %tobool145 = icmp ne i64 %and144, 0, !dbg !15195
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !15195

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !15195

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub148 = sub i64 %37, 1, !dbg !15195
  %and149 = and i64 %sub148, 34359738368, !dbg !15195
  %tobool150 = icmp ne i64 %and149, 0, !dbg !15195
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !15195

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !15195

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub153 = sub i64 %38, 1, !dbg !15195
  %and154 = and i64 %sub153, 17179869184, !dbg !15195
  %tobool155 = icmp ne i64 %and154, 0, !dbg !15195
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !15195

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !15195

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub158 = sub i64 %39, 1, !dbg !15195
  %and159 = and i64 %sub158, 8589934592, !dbg !15195
  %tobool160 = icmp ne i64 %and159, 0, !dbg !15195
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !15195

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !15195

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub163 = sub i64 %40, 1, !dbg !15195
  %and164 = and i64 %sub163, 4294967296, !dbg !15195
  %tobool165 = icmp ne i64 %and164, 0, !dbg !15195
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !15195

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !15195

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub168 = sub i64 %41, 1, !dbg !15195
  %and169 = and i64 %sub168, 2147483648, !dbg !15195
  %tobool170 = icmp ne i64 %and169, 0, !dbg !15195
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !15195

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !15195

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub173 = sub i64 %42, 1, !dbg !15195
  %and174 = and i64 %sub173, 1073741824, !dbg !15195
  %tobool175 = icmp ne i64 %and174, 0, !dbg !15195
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !15195

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !15195

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub178 = sub i64 %43, 1, !dbg !15195
  %and179 = and i64 %sub178, 536870912, !dbg !15195
  %tobool180 = icmp ne i64 %and179, 0, !dbg !15195
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !15195

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !15195

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub183 = sub i64 %44, 1, !dbg !15195
  %and184 = and i64 %sub183, 268435456, !dbg !15195
  %tobool185 = icmp ne i64 %and184, 0, !dbg !15195
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !15195

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !15195

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub188 = sub i64 %45, 1, !dbg !15195
  %and189 = and i64 %sub188, 134217728, !dbg !15195
  %tobool190 = icmp ne i64 %and189, 0, !dbg !15195
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !15195

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !15195

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub193 = sub i64 %46, 1, !dbg !15195
  %and194 = and i64 %sub193, 67108864, !dbg !15195
  %tobool195 = icmp ne i64 %and194, 0, !dbg !15195
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !15195

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !15195

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub198 = sub i64 %47, 1, !dbg !15195
  %and199 = and i64 %sub198, 33554432, !dbg !15195
  %tobool200 = icmp ne i64 %and199, 0, !dbg !15195
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !15195

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !15195

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub203 = sub i64 %48, 1, !dbg !15195
  %and204 = and i64 %sub203, 16777216, !dbg !15195
  %tobool205 = icmp ne i64 %and204, 0, !dbg !15195
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !15195

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !15195

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub208 = sub i64 %49, 1, !dbg !15195
  %and209 = and i64 %sub208, 8388608, !dbg !15195
  %tobool210 = icmp ne i64 %and209, 0, !dbg !15195
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !15195

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !15195

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub213 = sub i64 %50, 1, !dbg !15195
  %and214 = and i64 %sub213, 4194304, !dbg !15195
  %tobool215 = icmp ne i64 %and214, 0, !dbg !15195
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !15195

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !15195

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub218 = sub i64 %51, 1, !dbg !15195
  %and219 = and i64 %sub218, 2097152, !dbg !15195
  %tobool220 = icmp ne i64 %and219, 0, !dbg !15195
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !15195

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !15195

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub223 = sub i64 %52, 1, !dbg !15195
  %and224 = and i64 %sub223, 1048576, !dbg !15195
  %tobool225 = icmp ne i64 %and224, 0, !dbg !15195
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !15195

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !15195

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub228 = sub i64 %53, 1, !dbg !15195
  %and229 = and i64 %sub228, 524288, !dbg !15195
  %tobool230 = icmp ne i64 %and229, 0, !dbg !15195
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !15195

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !15195

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub233 = sub i64 %54, 1, !dbg !15195
  %and234 = and i64 %sub233, 262144, !dbg !15195
  %tobool235 = icmp ne i64 %and234, 0, !dbg !15195
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !15195

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !15195

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub238 = sub i64 %55, 1, !dbg !15195
  %and239 = and i64 %sub238, 131072, !dbg !15195
  %tobool240 = icmp ne i64 %and239, 0, !dbg !15195
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !15195

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !15195

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub243 = sub i64 %56, 1, !dbg !15195
  %and244 = and i64 %sub243, 65536, !dbg !15195
  %tobool245 = icmp ne i64 %and244, 0, !dbg !15195
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !15195

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !15195

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub248 = sub i64 %57, 1, !dbg !15195
  %and249 = and i64 %sub248, 32768, !dbg !15195
  %tobool250 = icmp ne i64 %and249, 0, !dbg !15195
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !15195

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !15195

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub253 = sub i64 %58, 1, !dbg !15195
  %and254 = and i64 %sub253, 16384, !dbg !15195
  %tobool255 = icmp ne i64 %and254, 0, !dbg !15195
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !15195

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !15195

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub258 = sub i64 %59, 1, !dbg !15195
  %and259 = and i64 %sub258, 8192, !dbg !15195
  %tobool260 = icmp ne i64 %and259, 0, !dbg !15195
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !15195

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !15195

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub263 = sub i64 %60, 1, !dbg !15195
  %and264 = and i64 %sub263, 4096, !dbg !15195
  %tobool265 = icmp ne i64 %and264, 0, !dbg !15195
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !15195

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !15195

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub268 = sub i64 %61, 1, !dbg !15195
  %and269 = and i64 %sub268, 2048, !dbg !15195
  %tobool270 = icmp ne i64 %and269, 0, !dbg !15195
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !15195

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !15195

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub273 = sub i64 %62, 1, !dbg !15195
  %and274 = and i64 %sub273, 1024, !dbg !15195
  %tobool275 = icmp ne i64 %and274, 0, !dbg !15195
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !15195

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !15195

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub278 = sub i64 %63, 1, !dbg !15195
  %and279 = and i64 %sub278, 512, !dbg !15195
  %tobool280 = icmp ne i64 %and279, 0, !dbg !15195
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !15195

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !15195

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub283 = sub i64 %64, 1, !dbg !15195
  %and284 = and i64 %sub283, 256, !dbg !15195
  %tobool285 = icmp ne i64 %and284, 0, !dbg !15195
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !15195

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !15195

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub288 = sub i64 %65, 1, !dbg !15195
  %and289 = and i64 %sub288, 128, !dbg !15195
  %tobool290 = icmp ne i64 %and289, 0, !dbg !15195
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !15195

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !15195

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub293 = sub i64 %66, 1, !dbg !15195
  %and294 = and i64 %sub293, 64, !dbg !15195
  %tobool295 = icmp ne i64 %and294, 0, !dbg !15195
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !15195

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !15195

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub298 = sub i64 %67, 1, !dbg !15195
  %and299 = and i64 %sub298, 32, !dbg !15195
  %tobool300 = icmp ne i64 %and299, 0, !dbg !15195
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !15195

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !15195

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub303 = sub i64 %68, 1, !dbg !15195
  %and304 = and i64 %sub303, 16, !dbg !15195
  %tobool305 = icmp ne i64 %and304, 0, !dbg !15195
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !15195

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !15195

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub308 = sub i64 %69, 1, !dbg !15195
  %and309 = and i64 %sub308, 8, !dbg !15195
  %tobool310 = icmp ne i64 %and309, 0, !dbg !15195
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !15195

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !15195

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub313 = sub i64 %70, 1, !dbg !15195
  %and314 = and i64 %sub313, 4, !dbg !15195
  %tobool315 = icmp ne i64 %and314, 0, !dbg !15195
  %71 = zext i1 %tobool315 to i64, !dbg !15195
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !15195
  br label %cond.end, !dbg !15195

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !15195
  br label %cond.end317, !dbg !15195

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !15195
  br label %cond.end319, !dbg !15195

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !15195
  br label %cond.end321, !dbg !15195

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !15195
  br label %cond.end323, !dbg !15195

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !15195
  br label %cond.end325, !dbg !15195

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !15195
  br label %cond.end327, !dbg !15195

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !15195
  br label %cond.end329, !dbg !15195

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !15195
  br label %cond.end331, !dbg !15195

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !15195
  br label %cond.end333, !dbg !15195

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !15195
  br label %cond.end335, !dbg !15195

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !15195
  br label %cond.end337, !dbg !15195

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !15195
  br label %cond.end339, !dbg !15195

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !15195
  br label %cond.end341, !dbg !15195

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !15195
  br label %cond.end343, !dbg !15195

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !15195
  br label %cond.end345, !dbg !15195

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !15195
  br label %cond.end347, !dbg !15195

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !15195
  br label %cond.end349, !dbg !15195

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !15195
  br label %cond.end351, !dbg !15195

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !15195
  br label %cond.end353, !dbg !15195

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !15195
  br label %cond.end355, !dbg !15195

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !15195
  br label %cond.end357, !dbg !15195

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !15195
  br label %cond.end359, !dbg !15195

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !15195
  br label %cond.end361, !dbg !15195

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !15195
  br label %cond.end363, !dbg !15195

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !15195
  br label %cond.end365, !dbg !15195

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !15195
  br label %cond.end367, !dbg !15195

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !15195
  br label %cond.end369, !dbg !15195

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !15195
  br label %cond.end371, !dbg !15195

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !15195
  br label %cond.end373, !dbg !15195

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !15195
  br label %cond.end375, !dbg !15195

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !15195
  br label %cond.end377, !dbg !15195

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !15195
  br label %cond.end379, !dbg !15195

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !15195
  br label %cond.end381, !dbg !15195

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !15195
  br label %cond.end383, !dbg !15195

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !15195
  br label %cond.end385, !dbg !15195

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !15195
  br label %cond.end387, !dbg !15195

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !15195
  br label %cond.end389, !dbg !15195

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !15195
  br label %cond.end391, !dbg !15195

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !15195
  br label %cond.end393, !dbg !15195

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !15195
  br label %cond.end395, !dbg !15195

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !15195
  br label %cond.end397, !dbg !15195

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !15195
  br label %cond.end399, !dbg !15195

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !15195
  br label %cond.end401, !dbg !15195

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !15195
  br label %cond.end403, !dbg !15195

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !15195
  br label %cond.end405, !dbg !15195

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !15195
  br label %cond.end407, !dbg !15195

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !15195
  br label %cond.end409, !dbg !15195

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !15195
  br label %cond.end411, !dbg !15195

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !15195
  br label %cond.end413, !dbg !15195

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !15195
  br label %cond.end415, !dbg !15195

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !15195
  br label %cond.end417, !dbg !15195

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !15195
  br label %cond.end419, !dbg !15195

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !15195
  br label %cond.end421, !dbg !15195

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !15195
  br label %cond.end423, !dbg !15195

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !15195
  br label %cond.end425, !dbg !15195

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !15195
  br label %cond.end427, !dbg !15195

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !15195
  br label %cond.end429, !dbg !15195

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !15195
  br label %cond.end431, !dbg !15195

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !15195
  br label %cond.end433, !dbg !15195

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !15195
  br label %cond.end435, !dbg !15195

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !15195
  br label %cond.end437, !dbg !15195

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !15195
  br label %cond.end440, !dbg !15195

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !15195

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !15195
  br label %cond.end444, !dbg !15195

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !15195
  %sub443 = sub i64 %72, 1, !dbg !15195
  %call = call i32 @__ilog2_u64(i64 %sub443) #11, !dbg !15195
  br label %cond.end444, !dbg !15195

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !15195
  %sub446 = sub i32 %cond445, 12, !dbg !15196
  %add = add i32 %sub446, 1, !dbg !15197
  store i32 %add, i32* %retval, align 4, !dbg !15198
  br label %return, !dbg !15198

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !15199
  %dec = add i64 %73, -1, !dbg !15199
  store i64 %dec, i64* %size.addr, align 8, !dbg !15199
  %74 = load i64, i64* %size.addr, align 8, !dbg !15200
  %shr = lshr i64 %74, 12, !dbg !15200
  store i64 %shr, i64* %size.addr, align 8, !dbg !15200
  %75 = load i64, i64* %size.addr, align 8, !dbg !15201
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !15178
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !15202
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !15203
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #15, !dbg !15202, !srcloc !15204
  store i32 %78, i32* %bitpos.i, align 4, !dbg !15202
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !15205
  %add.i = add i32 %79, 1, !dbg !15206
  store i32 %add.i, i32* %retval, align 4, !dbg !15207
  br label %return, !dbg !15207

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !15208
  ret i32 %80, !dbg !15208
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #7 !dbg !15209 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !15170, metadata !DIExpression()), !dbg !15213
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !15177, metadata !DIExpression()), !dbg !15215
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !15216, metadata !DIExpression()), !dbg !15217
  %0 = load i64, i64* %n.addr, align 8, !dbg !15218
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !15215
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !15219
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !15220
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #15, !dbg !15219, !srcloc !15204
  store i32 %3, i32* %bitpos.i, align 4, !dbg !15219
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !15221
  %add.i = add i32 %4, 1, !dbg !15222
  %sub = sub i32 %add.i, 1, !dbg !15223
  ret i32 %sub, !dbg !15224
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !15225 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !15229, metadata !DIExpression()), !dbg !15230
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !15231, metadata !DIExpression()), !dbg !15232
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !15233, metadata !DIExpression()), !dbg !15234
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15235, metadata !DIExpression()), !dbg !15236
  %0 = load i8*, i8** %object.addr, align 8, !dbg !15237
  ret i8* %0, !dbg !15238
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_spms_local_port_set(i8* %buf, i32 %val) #0 !dbg !15239 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15240, metadata !DIExpression()), !dbg !15241
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15242, metadata !DIExpression()), !dbg !15241
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15241
  %1 = load i32, i32* %val.addr, align 4, !dbg !15241
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_spms_local_port_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15241
  ret void, !dbg !15241
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_spms_state_set(i8* %buf, i16 zeroext %index, i8 zeroext %val) #0 !dbg !15243 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i8, align 1
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15246, metadata !DIExpression()), !dbg !15247
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !15248, metadata !DIExpression()), !dbg !15247
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !15249, metadata !DIExpression()), !dbg !15247
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15247
  %1 = load i16, i16* %index.addr, align 2, !dbg !15247
  %2 = load i8, i8* %val.addr, align 1, !dbg !15247
  call void @__mlxsw_item_bit_array_set(i8* %0, %struct.mlxsw_item* @mlxsw_reg_spms_state_item, i16 zeroext %1, i8 zeroext %2) #9, !dbg !15247
  ret void, !dbg !15247
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__mlxsw_item_bit_array_set(i8* %buf, %struct.mlxsw_item* %item, i16 zeroext %index, i8 zeroext %val) #0 !dbg !15250 {
entry:
  %buf.addr = alloca i8*, align 8
  %item.addr = alloca %struct.mlxsw_item*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i8, align 1
  %shift = alloca i8, align 1
  %tmp = alloca i8, align 1
  %offset = alloca i16, align 2
  %mask = alloca i8, align 1
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15253, metadata !DIExpression()), !dbg !15254
  store %struct.mlxsw_item* %item, %struct.mlxsw_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_item** %item.addr, metadata !15255, metadata !DIExpression()), !dbg !15256
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !15257, metadata !DIExpression()), !dbg !15258
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !15259, metadata !DIExpression()), !dbg !15260
  call void @llvm.dbg.declare(metadata i8* %shift, metadata !15261, metadata !DIExpression()), !dbg !15262
  call void @llvm.dbg.declare(metadata i8* %tmp, metadata !15263, metadata !DIExpression()), !dbg !15264
  call void @llvm.dbg.declare(metadata i16* %offset, metadata !15265, metadata !DIExpression()), !dbg !15266
  %0 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15267
  %1 = load i16, i16* %index.addr, align 2, !dbg !15268
  %call = call zeroext i16 @__mlxsw_item_bit_array_offset(%struct.mlxsw_item* %0, i16 zeroext %1, i8* %shift) #9, !dbg !15269
  store i16 %call, i16* %offset, align 2, !dbg !15266
  call void @llvm.dbg.declare(metadata i8* %mask, metadata !15270, metadata !DIExpression()), !dbg !15271
  %2 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15272
  %element_size = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %2, i32 0, i32 4, !dbg !15272
  %3 = load i8, i8* %element_size, align 1, !dbg !15272
  %conv = zext i8 %3 to i32, !dbg !15272
  %sub = sub i32 %conv, 1, !dbg !15272
  %sub1 = sub i32 63, %sub, !dbg !15272
  %sh_prom = zext i32 %sub1 to i64, !dbg !15272
  %shr = lshr i64 -1, %sh_prom, !dbg !15272
  %and = and i64 -1, %shr, !dbg !15272
  %add = add i64 0, %and, !dbg !15272
  %4 = load i8, i8* %shift, align 1, !dbg !15273
  %conv2 = zext i8 %4 to i32, !dbg !15273
  %sh_prom3 = zext i32 %conv2 to i64, !dbg !15274
  %shl = shl i64 %add, %sh_prom3, !dbg !15274
  %conv4 = trunc i64 %shl to i8, !dbg !15272
  store i8 %conv4, i8* %mask, align 1, !dbg !15271
  %5 = load i8, i8* %shift, align 1, !dbg !15275
  %conv5 = zext i8 %5 to i32, !dbg !15275
  %6 = load i8, i8* %val.addr, align 1, !dbg !15276
  %conv6 = zext i8 %6 to i32, !dbg !15276
  %shl7 = shl i32 %conv6, %conv5, !dbg !15276
  %conv8 = trunc i32 %shl7 to i8, !dbg !15276
  store i8 %conv8, i8* %val.addr, align 1, !dbg !15276
  %7 = load i8, i8* %mask, align 1, !dbg !15277
  %conv9 = zext i8 %7 to i32, !dbg !15277
  %8 = load i8, i8* %val.addr, align 1, !dbg !15278
  %conv10 = zext i8 %8 to i32, !dbg !15278
  %and11 = and i32 %conv10, %conv9, !dbg !15278
  %conv12 = trunc i32 %and11 to i8, !dbg !15278
  store i8 %conv12, i8* %val.addr, align 1, !dbg !15278
  %9 = load i8*, i8** %buf.addr, align 8, !dbg !15279
  %10 = load i16, i16* %offset, align 2, !dbg !15280
  %idxprom = zext i16 %10 to i64, !dbg !15279
  %arrayidx = getelementptr i8, i8* %9, i64 %idxprom, !dbg !15279
  %11 = load i8, i8* %arrayidx, align 1, !dbg !15279
  store i8 %11, i8* %tmp, align 1, !dbg !15281
  %12 = load i8, i8* %mask, align 1, !dbg !15282
  %conv13 = zext i8 %12 to i32, !dbg !15282
  %neg = xor i32 %conv13, -1, !dbg !15283
  %13 = load i8, i8* %tmp, align 1, !dbg !15284
  %conv14 = zext i8 %13 to i32, !dbg !15284
  %and15 = and i32 %conv14, %neg, !dbg !15284
  %conv16 = trunc i32 %and15 to i8, !dbg !15284
  store i8 %conv16, i8* %tmp, align 1, !dbg !15284
  %14 = load i8, i8* %val.addr, align 1, !dbg !15285
  %conv17 = zext i8 %14 to i32, !dbg !15285
  %15 = load i8, i8* %tmp, align 1, !dbg !15286
  %conv18 = zext i8 %15 to i32, !dbg !15286
  %or = or i32 %conv18, %conv17, !dbg !15286
  %conv19 = trunc i32 %or to i8, !dbg !15286
  store i8 %conv19, i8* %tmp, align 1, !dbg !15286
  %16 = load i8, i8* %tmp, align 1, !dbg !15287
  %17 = load i8*, i8** %buf.addr, align 8, !dbg !15288
  %18 = load i16, i16* %offset, align 2, !dbg !15289
  %idxprom20 = zext i16 %18 to i64, !dbg !15288
  %arrayidx21 = getelementptr i8, i8* %17, i64 %idxprom20, !dbg !15288
  store i8 %16, i8* %arrayidx21, align 1, !dbg !15290
  ret void, !dbg !15291
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @__mlxsw_item_bit_array_offset(%struct.mlxsw_item* %item, i16 zeroext %index, i8* %shift) #0 !dbg !15292 {
entry:
  %item.addr = alloca %struct.mlxsw_item*, align 8
  %index.addr = alloca i16, align 2
  %shift.addr = alloca i8*, align 8
  %max_index = alloca i16, align 2
  %be_index = alloca i16, align 2
  %offset = alloca i16, align 2
  %in_byte_index = alloca i8, align 1
  store %struct.mlxsw_item* %item, %struct.mlxsw_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_item** %item.addr, metadata !15295, metadata !DIExpression()), !dbg !15296
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !15297, metadata !DIExpression()), !dbg !15298
  store i8* %shift, i8** %shift.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %shift.addr, metadata !15299, metadata !DIExpression()), !dbg !15300
  call void @llvm.dbg.declare(metadata i16* %max_index, metadata !15301, metadata !DIExpression()), !dbg !15302
  call void @llvm.dbg.declare(metadata i16* %be_index, metadata !15303, metadata !DIExpression()), !dbg !15304
  call void @llvm.dbg.declare(metadata i16* %offset, metadata !15305, metadata !DIExpression()), !dbg !15306
  call void @llvm.dbg.declare(metadata i8* %in_byte_index, metadata !15307, metadata !DIExpression()), !dbg !15308
  br label %do.body, !dbg !15309

do.body:                                          ; preds = %entry
  %0 = load i16, i16* %index.addr, align 2, !dbg !15310
  %conv = zext i16 %0 to i32, !dbg !15310
  %tobool = icmp ne i32 %conv, 0, !dbg !15310
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !15310

land.rhs:                                         ; preds = %do.body
  %1 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15310
  %element_size = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %1, i32 0, i32 4, !dbg !15310
  %2 = load i8, i8* %element_size, align 1, !dbg !15310
  %tobool1 = icmp ne i8 %2, 0, !dbg !15310
  %lnot = xor i1 %tobool1, true, !dbg !15310
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.body
  %3 = phi i1 [ false, %do.body ], [ %lnot, %land.rhs ], !dbg !15313
  %lnot2 = xor i1 %3, true, !dbg !15310
  %lnot3 = xor i1 %lnot2, true, !dbg !15310
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !15310
  %conv4 = sext i32 %lnot.ext to i64, !dbg !15310
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !15310
  br i1 %tobool5, label %if.then, label %if.end, !dbg !15314

if.then:                                          ; preds = %land.end
  br label %do.body6, !dbg !15310

do.body6:                                         ; preds = %if.then
  br label %do.body7, !dbg !15315

do.body7:                                         ; preds = %do.body6
  br label %do.end, !dbg !15317

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !15315

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3, i64 0, i64 0), i32 212, i32 0, i64 12) #10, !dbg !15319, !srcloc !15321
  br label %do.end9, !dbg !15319

do.end9:                                          ; preds = %do.body8
  br label %do.body10, !dbg !15315

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 647) #10, !dbg !15322, !srcloc !15325
  unreachable, !dbg !15326

do.end11:                                         ; No predecessors!
  br label %do.end12, !dbg !15315

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !15315

if.end:                                           ; preds = %do.end12, %land.end
  br label %do.end13, !dbg !15314

do.end13:                                         ; preds = %if.end
  %4 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15327
  %offset14 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %4, i32 0, i32 0, !dbg !15329
  %5 = load i16, i16* %offset14, align 8, !dbg !15329
  %conv15 = zext i16 %5 to i64, !dbg !15327
  %rem = urem i64 %conv15, 4, !dbg !15330
  %cmp = icmp ne i64 %rem, 0, !dbg !15331
  br i1 %cmp, label %if.then22, label %lor.lhs.false, !dbg !15332

lor.lhs.false:                                    ; preds = %do.end13
  %6 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15333
  %element_size17 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %6, i32 0, i32 4, !dbg !15334
  %7 = load i8, i8* %element_size17, align 1, !dbg !15334
  %conv18 = zext i8 %7 to i32, !dbg !15333
  %rem19 = srem i32 8, %conv18, !dbg !15335
  %cmp20 = icmp ne i32 %rem19, 0, !dbg !15336
  br i1 %cmp20, label %if.then22, label %if.end35, !dbg !15337

if.then22:                                        ; preds = %lor.lhs.false, %do.end13
  %8 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15338
  %name = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %8, i32 0, i32 7, !dbg !15338
  %9 = load i8*, i8** %name, align 8, !dbg !15338
  %10 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15338
  %offset23 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %10, i32 0, i32 0, !dbg !15338
  %11 = load i16, i16* %offset23, align 8, !dbg !15338
  %conv24 = zext i16 %11 to i32, !dbg !15338
  %12 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15338
  %element_size25 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %12, i32 0, i32 4, !dbg !15338
  %13 = load i8, i8* %element_size25, align 1, !dbg !15338
  %conv26 = zext i8 %13 to i32, !dbg !15338
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.19, i64 0, i64 0), i8* %9, i32 %conv24, i32 %conv26) #13, !dbg !15338
  br label %do.body27, !dbg !15340

do.body27:                                        ; preds = %if.then22
  br label %do.body28, !dbg !15341

do.body28:                                        ; preds = %do.body27
  br label %do.end29, !dbg !15343

do.end29:                                         ; preds = %do.body28
  br label %do.body30, !dbg !15341

do.body30:                                        ; preds = %do.end29
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3, i64 0, i64 0), i32 217, i32 0, i64 12) #10, !dbg !15345, !srcloc !15347
  br label %do.end31, !dbg !15345

do.end31:                                         ; preds = %do.body30
  br label %do.body32, !dbg !15341

do.body32:                                        ; preds = %do.end31
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 648) #10, !dbg !15348, !srcloc !15351
  unreachable, !dbg !15352

do.end33:                                         ; No predecessors!
  br label %do.end34, !dbg !15341

do.end34:                                         ; preds = %do.end33
  br label %if.end35, !dbg !15353

if.end35:                                         ; preds = %do.end34, %lor.lhs.false
  %14 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15354
  %size = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %14, i32 0, i32 6, !dbg !15355
  %bytes = bitcast %union.anon.166* %size to i16*, !dbg !15356
  %15 = load i16, i16* %bytes, align 2, !dbg !15356
  %conv36 = zext i16 %15 to i32, !dbg !15354
  %shl = shl i32 %conv36, 3, !dbg !15357
  %16 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15358
  %element_size37 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %16, i32 0, i32 4, !dbg !15359
  %17 = load i8, i8* %element_size37, align 1, !dbg !15359
  %conv38 = zext i8 %17 to i32, !dbg !15358
  %div = sdiv i32 %shl, %conv38, !dbg !15360
  %sub = sub i32 %div, 1, !dbg !15361
  %conv39 = trunc i32 %sub to i16, !dbg !15362
  store i16 %conv39, i16* %max_index, align 2, !dbg !15363
  %18 = load i16, i16* %max_index, align 2, !dbg !15364
  %conv40 = zext i16 %18 to i32, !dbg !15364
  %19 = load i16, i16* %index.addr, align 2, !dbg !15365
  %conv41 = zext i16 %19 to i32, !dbg !15365
  %sub42 = sub i32 %conv40, %conv41, !dbg !15366
  %conv43 = trunc i32 %sub42 to i16, !dbg !15364
  store i16 %conv43, i16* %be_index, align 2, !dbg !15367
  %20 = load i16, i16* %be_index, align 2, !dbg !15368
  %conv44 = zext i16 %20 to i32, !dbg !15368
  %21 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15369
  %element_size45 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %21, i32 0, i32 4, !dbg !15370
  %22 = load i8, i8* %element_size45, align 1, !dbg !15370
  %conv46 = zext i8 %22 to i32, !dbg !15369
  %mul = mul i32 %conv44, %conv46, !dbg !15371
  %shr = ashr i32 %mul, 3, !dbg !15372
  %conv47 = trunc i32 %shr to i16, !dbg !15368
  store i16 %conv47, i16* %offset, align 2, !dbg !15373
  %23 = load i16, i16* %index.addr, align 2, !dbg !15374
  %conv48 = zext i16 %23 to i32, !dbg !15374
  %24 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15375
  %element_size49 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %24, i32 0, i32 4, !dbg !15376
  %25 = load i8, i8* %element_size49, align 1, !dbg !15376
  %conv50 = zext i8 %25 to i32, !dbg !15375
  %div51 = sdiv i32 8, %conv50, !dbg !15377
  %rem52 = srem i32 %conv48, %div51, !dbg !15378
  %conv53 = trunc i32 %rem52 to i8, !dbg !15374
  store i8 %conv53, i8* %in_byte_index, align 1, !dbg !15379
  %26 = load i8, i8* %in_byte_index, align 1, !dbg !15380
  %conv54 = zext i8 %26 to i32, !dbg !15380
  %27 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15381
  %element_size55 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %27, i32 0, i32 4, !dbg !15382
  %28 = load i8, i8* %element_size55, align 1, !dbg !15382
  %conv56 = zext i8 %28 to i32, !dbg !15381
  %mul57 = mul i32 %conv54, %conv56, !dbg !15383
  %conv58 = trunc i32 %mul57 to i8, !dbg !15380
  %29 = load i8*, i8** %shift.addr, align 8, !dbg !15384
  store i8 %conv58, i8* %29, align 1, !dbg !15385
  %30 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !15386
  %offset59 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %30, i32 0, i32 0, !dbg !15387
  %31 = load i16, i16* %offset59, align 8, !dbg !15387
  %conv60 = zext i16 %31 to i32, !dbg !15386
  %32 = load i16, i16* %offset, align 2, !dbg !15388
  %conv61 = zext i16 %32 to i32, !dbg !15388
  %add = add i32 %conv60, %conv61, !dbg !15389
  %conv62 = trunc i32 %add to i16, !dbg !15386
  ret i16 %conv62, !dbg !15390
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_paos_swid_set(i8* %buf, i32 %val) #0 !dbg !15391 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15392, metadata !DIExpression()), !dbg !15393
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15394, metadata !DIExpression()), !dbg !15393
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15393
  %1 = load i32, i32* %val.addr, align 4, !dbg !15393
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_paos_swid_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15393
  ret void, !dbg !15393
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_paos_local_port_set(i8* %buf, i32 %val) #0 !dbg !15395 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15396, metadata !DIExpression()), !dbg !15397
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15398, metadata !DIExpression()), !dbg !15397
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15397
  %1 = load i32, i32* %val.addr, align 4, !dbg !15397
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_paos_local_port_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15397
  ret void, !dbg !15397
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_paos_admin_status_set(i8* %buf, i32 %val) #0 !dbg !15399 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15400, metadata !DIExpression()), !dbg !15401
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15402, metadata !DIExpression()), !dbg !15401
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15401
  %1 = load i32, i32* %val.addr, align 4, !dbg !15401
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_paos_admin_status_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15401
  ret void, !dbg !15401
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_paos_oper_status_set(i8* %buf, i32 %val) #0 !dbg !15403 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15404, metadata !DIExpression()), !dbg !15405
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15406, metadata !DIExpression()), !dbg !15405
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15405
  %1 = load i32, i32* %val.addr, align 4, !dbg !15405
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_paos_oper_status_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15405
  ret void, !dbg !15405
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_paos_ase_set(i8* %buf, i32 %val) #0 !dbg !15407 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15408, metadata !DIExpression()), !dbg !15409
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15410, metadata !DIExpression()), !dbg !15409
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15409
  %1 = load i32, i32* %val.addr, align 4, !dbg !15409
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_paos_ase_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15409
  ret void, !dbg !15409
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_paos_ee_set(i8* %buf, i32 %val) #0 !dbg !15411 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15412, metadata !DIExpression()), !dbg !15413
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15414, metadata !DIExpression()), !dbg !15413
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15413
  %1 = load i32, i32* %val.addr, align 4, !dbg !15413
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_paos_ee_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15413
  ret void, !dbg !15413
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_paos_e_set(i8* %buf, i32 %val) #0 !dbg !15415 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15416, metadata !DIExpression()), !dbg !15417
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15418, metadata !DIExpression()), !dbg !15417
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15417
  %1 = load i32, i32* %val.addr, align 4, !dbg !15417
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_paos_e_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15417
  ret void, !dbg !15417
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_svpe_local_port_set(i8* %buf, i32 %val) #0 !dbg !15419 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15420, metadata !DIExpression()), !dbg !15421
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15422, metadata !DIExpression()), !dbg !15421
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15421
  %1 = load i32, i32* %val.addr, align 4, !dbg !15421
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_svpe_local_port_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15421
  ret void, !dbg !15421
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_svpe_vp_en_set(i8* %buf, i32 %val) #0 !dbg !15423 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15424, metadata !DIExpression()), !dbg !15425
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15426, metadata !DIExpression()), !dbg !15425
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15425
  %1 = load i32, i32* %val.addr, align 4, !dbg !15425
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_svpe_vp_en_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15425
  ret void, !dbg !15425
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_spvmlr_local_port_set(i8* %buf, i32 %val) #0 !dbg !15427 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15428, metadata !DIExpression()), !dbg !15429
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15430, metadata !DIExpression()), !dbg !15429
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15429
  %1 = load i32, i32* %val.addr, align 4, !dbg !15429
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_spvmlr_local_port_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15429
  ret void, !dbg !15429
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_spvmlr_num_rec_set(i8* %buf, i32 %val) #0 !dbg !15431 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15432, metadata !DIExpression()), !dbg !15433
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15434, metadata !DIExpression()), !dbg !15433
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15433
  %1 = load i32, i32* %val.addr, align 4, !dbg !15433
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_spvmlr_num_rec_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15433
  ret void, !dbg !15433
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_spvmlr_rec_learn_enable_set(i8* %buf, i16 zeroext %index, i32 %val) #0 !dbg !15435 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15438, metadata !DIExpression()), !dbg !15439
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !15440, metadata !DIExpression()), !dbg !15439
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15441, metadata !DIExpression()), !dbg !15439
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15439
  %1 = load i16, i16* %index.addr, align 2, !dbg !15439
  %2 = load i32, i32* %val.addr, align 4, !dbg !15439
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_spvmlr_rec_learn_enable_item to %struct.mlxsw_item*), i16 zeroext %1, i32 %2) #9, !dbg !15439
  ret void, !dbg !15439
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_spvmlr_rec_vid_set(i8* %buf, i16 zeroext %index, i32 %val) #0 !dbg !15442 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15443, metadata !DIExpression()), !dbg !15444
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !15445, metadata !DIExpression()), !dbg !15444
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15446, metadata !DIExpression()), !dbg !15444
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15444
  %1 = load i16, i16* %index.addr, align 2, !dbg !15444
  %2 = load i32, i32* %val.addr, align 4, !dbg !15444
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_spvmlr_rec_vid_item to %struct.mlxsw_item*), i16 zeroext %1, i32 %2) #9, !dbg !15444
  ret void, !dbg !15444
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_spaft_pack(i8* %payload, i8 zeroext %local_port, i1 zeroext %allow_untagged) #0 !dbg !15447 {
entry:
  %payload.addr = alloca i8*, align 8
  %local_port.addr = alloca i8, align 1
  %allow_untagged.addr = alloca i8, align 1
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !15448, metadata !DIExpression()), !dbg !15449
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !15450, metadata !DIExpression()), !dbg !15451
  %frombool = zext i1 %allow_untagged to i8
  store i8 %frombool, i8* %allow_untagged.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %allow_untagged.addr, metadata !15452, metadata !DIExpression()), !dbg !15453
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !15454
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_spaft, i32 0, i32 1), align 2, !dbg !15454
  %conv = zext i16 %1 to i64, !dbg !15454
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !15454
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !15455
  %3 = load i8, i8* %local_port.addr, align 1, !dbg !15456
  %conv1 = zext i8 %3 to i32, !dbg !15456
  call void @mlxsw_reg_spaft_local_port_set(i8* %2, i32 %conv1) #9, !dbg !15457
  %4 = load i8*, i8** %payload.addr, align 8, !dbg !15458
  %5 = load i8, i8* %allow_untagged.addr, align 1, !dbg !15459
  %tobool = trunc i8 %5 to i1, !dbg !15459
  %conv2 = zext i1 %tobool to i32, !dbg !15459
  call void @mlxsw_reg_spaft_allow_untagged_set(i8* %4, i32 %conv2) #9, !dbg !15460
  %6 = load i8*, i8** %payload.addr, align 8, !dbg !15461
  %7 = load i8, i8* %allow_untagged.addr, align 1, !dbg !15462
  %tobool3 = trunc i8 %7 to i1, !dbg !15462
  %conv4 = zext i1 %tobool3 to i32, !dbg !15462
  call void @mlxsw_reg_spaft_allow_prio_tagged_set(i8* %6, i32 %conv4) #9, !dbg !15463
  %8 = load i8*, i8** %payload.addr, align 8, !dbg !15464
  call void @mlxsw_reg_spaft_allow_tagged_set(i8* %8, i32 1) #9, !dbg !15465
  ret void, !dbg !15466
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_spaft_local_port_set(i8* %buf, i32 %val) #0 !dbg !15467 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15468, metadata !DIExpression()), !dbg !15469
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15470, metadata !DIExpression()), !dbg !15469
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15469
  %1 = load i32, i32* %val.addr, align 4, !dbg !15469
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_spaft_local_port_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15469
  ret void, !dbg !15469
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_spaft_allow_untagged_set(i8* %buf, i32 %val) #0 !dbg !15471 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15472, metadata !DIExpression()), !dbg !15473
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15474, metadata !DIExpression()), !dbg !15473
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15473
  %1 = load i32, i32* %val.addr, align 4, !dbg !15473
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_spaft_allow_untagged_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15473
  ret void, !dbg !15473
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_spaft_allow_prio_tagged_set(i8* %buf, i32 %val) #0 !dbg !15475 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15476, metadata !DIExpression()), !dbg !15477
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15478, metadata !DIExpression()), !dbg !15477
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15477
  %1 = load i32, i32* %val.addr, align 4, !dbg !15477
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_spaft_allow_prio_tagged_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15477
  ret void, !dbg !15477
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_spaft_allow_tagged_set(i8* %buf, i32 %val) #0 !dbg !15479 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15480, metadata !DIExpression()), !dbg !15481
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15482, metadata !DIExpression()), !dbg !15481
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15481
  %1 = load i32, i32* %val.addr, align 4, !dbg !15481
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_spaft_allow_tagged_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15481
  ret void, !dbg !15481
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_spvid_pack(i8* %payload, i8 zeroext %local_port, i16 zeroext %pvid) #0 !dbg !15483 {
entry:
  %payload.addr = alloca i8*, align 8
  %local_port.addr = alloca i8, align 1
  %pvid.addr = alloca i16, align 2
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !15486, metadata !DIExpression()), !dbg !15487
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !15488, metadata !DIExpression()), !dbg !15489
  store i16 %pvid, i16* %pvid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %pvid.addr, metadata !15490, metadata !DIExpression()), !dbg !15491
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !15492
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_spvid, i32 0, i32 1), align 2, !dbg !15492
  %conv = zext i16 %1 to i64, !dbg !15492
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !15492
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !15493
  %3 = load i8, i8* %local_port.addr, align 1, !dbg !15494
  %conv1 = zext i8 %3 to i32, !dbg !15494
  call void @mlxsw_reg_spvid_local_port_set(i8* %2, i32 %conv1) #9, !dbg !15495
  %4 = load i8*, i8** %payload.addr, align 8, !dbg !15496
  %5 = load i16, i16* %pvid.addr, align 2, !dbg !15497
  %conv2 = zext i16 %5 to i32, !dbg !15497
  call void @mlxsw_reg_spvid_pvid_set(i8* %4, i32 %conv2) #9, !dbg !15498
  ret void, !dbg !15499
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_spvid_local_port_set(i8* %buf, i32 %val) #0 !dbg !15500 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15501, metadata !DIExpression()), !dbg !15502
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15503, metadata !DIExpression()), !dbg !15502
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15502
  %1 = load i32, i32* %val.addr, align 4, !dbg !15502
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_spvid_local_port_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15502
  ret void, !dbg !15502
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_spvid_pvid_set(i8* %buf, i32 %val) #0 !dbg !15504 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15505, metadata !DIExpression()), !dbg !15506
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15507, metadata !DIExpression()), !dbg !15506
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15506
  %1 = load i32, i32* %val.addr, align 4, !dbg !15506
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_spvid_pvid_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15506
  ret void, !dbg !15506
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_ppcnt_swid_set(i8* %buf, i32 %val) #0 !dbg !15508 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15509, metadata !DIExpression()), !dbg !15510
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15511, metadata !DIExpression()), !dbg !15510
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15510
  %1 = load i32, i32* %val.addr, align 4, !dbg !15510
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_ppcnt_swid_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15510
  ret void, !dbg !15510
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_ppcnt_local_port_set(i8* %buf, i32 %val) #0 !dbg !15512 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15513, metadata !DIExpression()), !dbg !15514
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15515, metadata !DIExpression()), !dbg !15514
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15514
  %1 = load i32, i32* %val.addr, align 4, !dbg !15514
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_ppcnt_local_port_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15514
  ret void, !dbg !15514
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_ppcnt_pnat_set(i8* %buf, i32 %val) #0 !dbg !15516 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15517, metadata !DIExpression()), !dbg !15518
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15519, metadata !DIExpression()), !dbg !15518
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15518
  %1 = load i32, i32* %val.addr, align 4, !dbg !15518
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_ppcnt_pnat_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15518
  ret void, !dbg !15518
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_ppcnt_grp_set(i8* %buf, i32 %val) #0 !dbg !15520 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15521, metadata !DIExpression()), !dbg !15522
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15523, metadata !DIExpression()), !dbg !15522
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15522
  %1 = load i32, i32* %val.addr, align 4, !dbg !15522
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_ppcnt_grp_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15522
  ret void, !dbg !15522
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_ppcnt_clr_set(i8* %buf, i32 %val) #0 !dbg !15524 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15525, metadata !DIExpression()), !dbg !15526
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15527, metadata !DIExpression()), !dbg !15526
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15526
  %1 = load i32, i32* %val.addr, align 4, !dbg !15526
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_ppcnt_clr_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15526
  ret void, !dbg !15526
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_ppcnt_prio_tc_set(i8* %buf, i32 %val) #0 !dbg !15528 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15529, metadata !DIExpression()), !dbg !15530
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15531, metadata !DIExpression()), !dbg !15530
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15530
  %1 = load i32, i32* %val.addr, align 4, !dbg !15530
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_ppcnt_prio_tc_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15530
  ret void, !dbg !15530
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_spvm_pack(i8* %payload, i8 zeroext %local_port, i16 zeroext %vid_begin, i16 zeroext %vid_end, i1 zeroext %is_member, i1 zeroext %untagged) #0 !dbg !15532 {
entry:
  %payload.addr = alloca i8*, align 8
  %local_port.addr = alloca i8, align 1
  %vid_begin.addr = alloca i16, align 2
  %vid_end.addr = alloca i16, align 2
  %is_member.addr = alloca i8, align 1
  %untagged.addr = alloca i8, align 1
  %size = alloca i32, align 4
  %i = alloca i32, align 4
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !15535, metadata !DIExpression()), !dbg !15536
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !15537, metadata !DIExpression()), !dbg !15538
  store i16 %vid_begin, i16* %vid_begin.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid_begin.addr, metadata !15539, metadata !DIExpression()), !dbg !15540
  store i16 %vid_end, i16* %vid_end.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid_end.addr, metadata !15541, metadata !DIExpression()), !dbg !15542
  %frombool = zext i1 %is_member to i8
  store i8 %frombool, i8* %is_member.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_member.addr, metadata !15543, metadata !DIExpression()), !dbg !15544
  %frombool1 = zext i1 %untagged to i8
  store i8 %frombool1, i8* %untagged.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %untagged.addr, metadata !15545, metadata !DIExpression()), !dbg !15546
  call void @llvm.dbg.declare(metadata i32* %size, metadata !15547, metadata !DIExpression()), !dbg !15548
  %0 = load i16, i16* %vid_end.addr, align 2, !dbg !15549
  %conv = zext i16 %0 to i32, !dbg !15549
  %1 = load i16, i16* %vid_begin.addr, align 2, !dbg !15550
  %conv2 = zext i16 %1 to i32, !dbg !15550
  %sub = sub i32 %conv, %conv2, !dbg !15551
  %add = add i32 %sub, 1, !dbg !15552
  store i32 %add, i32* %size, align 4, !dbg !15548
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15553, metadata !DIExpression()), !dbg !15554
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !15555
  %3 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_spvm, i32 0, i32 1), align 2, !dbg !15555
  %conv3 = zext i16 %3 to i64, !dbg !15555
  call void @llvm.memset.p0i8.i64(i8* align 1 %2, i8 0, i64 %conv3, i1 false), !dbg !15555
  %4 = load i8*, i8** %payload.addr, align 8, !dbg !15556
  %5 = load i8, i8* %local_port.addr, align 1, !dbg !15557
  %conv4 = zext i8 %5 to i32, !dbg !15557
  call void @mlxsw_reg_spvm_local_port_set(i8* %4, i32 %conv4) #9, !dbg !15558
  %6 = load i8*, i8** %payload.addr, align 8, !dbg !15559
  %7 = load i32, i32* %size, align 4, !dbg !15560
  call void @mlxsw_reg_spvm_num_rec_set(i8* %6, i32 %7) #9, !dbg !15561
  store i32 0, i32* %i, align 4, !dbg !15562
  br label %for.cond, !dbg !15564

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %i, align 4, !dbg !15565
  %9 = load i32, i32* %size, align 4, !dbg !15567
  %cmp = icmp slt i32 %8, %9, !dbg !15568
  br i1 %cmp, label %for.body, label %for.end, !dbg !15569

for.body:                                         ; preds = %for.cond
  %10 = load i8*, i8** %payload.addr, align 8, !dbg !15570
  %11 = load i32, i32* %i, align 4, !dbg !15572
  %conv6 = trunc i32 %11 to i16, !dbg !15572
  %12 = load i8, i8* %is_member.addr, align 1, !dbg !15573
  %tobool = trunc i8 %12 to i1, !dbg !15573
  %conv7 = zext i1 %tobool to i32, !dbg !15573
  call void @mlxsw_reg_spvm_rec_i_set(i8* %10, i16 zeroext %conv6, i32 %conv7) #9, !dbg !15574
  %13 = load i8*, i8** %payload.addr, align 8, !dbg !15575
  %14 = load i32, i32* %i, align 4, !dbg !15576
  %conv8 = trunc i32 %14 to i16, !dbg !15576
  %15 = load i8, i8* %is_member.addr, align 1, !dbg !15577
  %tobool9 = trunc i8 %15 to i1, !dbg !15577
  %conv10 = zext i1 %tobool9 to i32, !dbg !15577
  call void @mlxsw_reg_spvm_rec_e_set(i8* %13, i16 zeroext %conv8, i32 %conv10) #9, !dbg !15578
  %16 = load i8*, i8** %payload.addr, align 8, !dbg !15579
  %17 = load i32, i32* %i, align 4, !dbg !15580
  %conv11 = trunc i32 %17 to i16, !dbg !15580
  %18 = load i8, i8* %untagged.addr, align 1, !dbg !15581
  %tobool12 = trunc i8 %18 to i1, !dbg !15581
  %conv13 = zext i1 %tobool12 to i32, !dbg !15581
  call void @mlxsw_reg_spvm_rec_u_set(i8* %16, i16 zeroext %conv11, i32 %conv13) #9, !dbg !15582
  %19 = load i8*, i8** %payload.addr, align 8, !dbg !15583
  %20 = load i32, i32* %i, align 4, !dbg !15584
  %conv14 = trunc i32 %20 to i16, !dbg !15584
  %21 = load i16, i16* %vid_begin.addr, align 2, !dbg !15585
  %conv15 = zext i16 %21 to i32, !dbg !15585
  %22 = load i32, i32* %i, align 4, !dbg !15586
  %add16 = add i32 %conv15, %22, !dbg !15587
  call void @mlxsw_reg_spvm_rec_vid_set(i8* %19, i16 zeroext %conv14, i32 %add16) #9, !dbg !15588
  br label %for.inc, !dbg !15589

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %i, align 4, !dbg !15590
  %inc = add i32 %23, 1, !dbg !15590
  store i32 %inc, i32* %i, align 4, !dbg !15590
  br label %for.cond, !dbg !15591, !llvm.loop !15592

for.end:                                          ; preds = %for.cond
  ret void, !dbg !15594
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_spvm_local_port_set(i8* %buf, i32 %val) #0 !dbg !15595 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15596, metadata !DIExpression()), !dbg !15597
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15598, metadata !DIExpression()), !dbg !15597
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15597
  %1 = load i32, i32* %val.addr, align 4, !dbg !15597
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_spvm_local_port_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15597
  ret void, !dbg !15597
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_spvm_num_rec_set(i8* %buf, i32 %val) #0 !dbg !15599 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15600, metadata !DIExpression()), !dbg !15601
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15602, metadata !DIExpression()), !dbg !15601
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15601
  %1 = load i32, i32* %val.addr, align 4, !dbg !15601
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_spvm_num_rec_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15601
  ret void, !dbg !15601
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_spvm_rec_i_set(i8* %buf, i16 zeroext %index, i32 %val) #0 !dbg !15603 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15604, metadata !DIExpression()), !dbg !15605
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !15606, metadata !DIExpression()), !dbg !15605
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15607, metadata !DIExpression()), !dbg !15605
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15605
  %1 = load i16, i16* %index.addr, align 2, !dbg !15605
  %2 = load i32, i32* %val.addr, align 4, !dbg !15605
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_spvm_rec_i_item to %struct.mlxsw_item*), i16 zeroext %1, i32 %2) #9, !dbg !15605
  ret void, !dbg !15605
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_spvm_rec_e_set(i8* %buf, i16 zeroext %index, i32 %val) #0 !dbg !15608 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15609, metadata !DIExpression()), !dbg !15610
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !15611, metadata !DIExpression()), !dbg !15610
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15612, metadata !DIExpression()), !dbg !15610
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15610
  %1 = load i16, i16* %index.addr, align 2, !dbg !15610
  %2 = load i32, i32* %val.addr, align 4, !dbg !15610
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_spvm_rec_e_item to %struct.mlxsw_item*), i16 zeroext %1, i32 %2) #9, !dbg !15610
  ret void, !dbg !15610
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_spvm_rec_u_set(i8* %buf, i16 zeroext %index, i32 %val) #0 !dbg !15613 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15614, metadata !DIExpression()), !dbg !15615
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !15616, metadata !DIExpression()), !dbg !15615
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15617, metadata !DIExpression()), !dbg !15615
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15615
  %1 = load i16, i16* %index.addr, align 2, !dbg !15615
  %2 = load i32, i32* %val.addr, align 4, !dbg !15615
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_spvm_rec_u_item to %struct.mlxsw_item*), i16 zeroext %1, i32 %2) #9, !dbg !15615
  ret void, !dbg !15615
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_spvm_rec_vid_set(i8* %buf, i16 zeroext %index, i32 %val) #0 !dbg !15618 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15619, metadata !DIExpression()), !dbg !15620
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !15621, metadata !DIExpression()), !dbg !15620
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15622, metadata !DIExpression()), !dbg !15620
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15620
  %1 = load i16, i16* %index.addr, align 2, !dbg !15620
  %2 = load i32, i32* %val.addr, align 4, !dbg !15620
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_spvm_rec_vid_item to %struct.mlxsw_item*), i16 zeroext %1, i32 %2) #9, !dbg !15620
  ret void, !dbg !15620
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !15623 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !15626, metadata !DIExpression()), !dbg !15627
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !15628, metadata !DIExpression()), !dbg !15629
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !15630, metadata !DIExpression()), !dbg !15631
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15632
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !15634
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !15635
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #9, !dbg !15636
  br i1 %call, label %if.end, label %if.then, !dbg !15637

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !15638

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15639
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !15640
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !15641
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !15642
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !15643
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15644
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !15645
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !15646
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !15647
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15648
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !15649
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !15650
  br label %do.body, !dbg !15651

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !15652

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !15654

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !15652

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15656
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !15656
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !15656
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !15656
  br label %do.end7, !dbg !15656

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !15652

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !15658
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !15659 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !15662, metadata !DIExpression()), !dbg !15663
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !15664, metadata !DIExpression()), !dbg !15665
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !15666, metadata !DIExpression()), !dbg !15667
  ret i1 true, !dbg !15668
}

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_port_vlan_bridge_leave(%struct.mlxsw_sp_port_vlan*) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_port_vlan_router_leave(%struct.mlxsw_sp_port_vlan*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !15669 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !15670, metadata !DIExpression()), !dbg !15671
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !15672
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #9, !dbg !15674
  br i1 %call, label %if.end, label %if.then, !dbg !15675

if.then:                                          ; preds = %entry
  br label %return, !dbg !15676

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !15677
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !15678
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !15678
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !15679
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !15680
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !15680
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #9, !dbg !15681
  br label %return, !dbg !15682

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !15682
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !15683 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !15686, metadata !DIExpression()), !dbg !15687
  ret i1 true, !dbg !15688
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !15689 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !15690, metadata !DIExpression()), !dbg !15691
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !15692, metadata !DIExpression()), !dbg !15693
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !15694
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !15695
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !15696
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !15697
  br label %do.body, !dbg !15698

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !15699

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !15701

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !15699

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !15703
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !15703
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !15703
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !15703
  br label %do.end5, !dbg !15703

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !15699

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !15705
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_qeec_local_port_set(i8* %buf, i32 %val) #0 !dbg !15706 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15707, metadata !DIExpression()), !dbg !15708
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15709, metadata !DIExpression()), !dbg !15708
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15708
  %1 = load i32, i32* %val.addr, align 4, !dbg !15708
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_qeec_local_port_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15708
  ret void, !dbg !15708
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_qeec_element_hierarchy_set(i8* %buf, i32 %val) #0 !dbg !15710 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15711, metadata !DIExpression()), !dbg !15712
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15713, metadata !DIExpression()), !dbg !15712
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15712
  %1 = load i32, i32* %val.addr, align 4, !dbg !15712
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_qeec_element_hierarchy_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15712
  ret void, !dbg !15712
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_qeec_element_index_set(i8* %buf, i32 %val) #0 !dbg !15714 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15715, metadata !DIExpression()), !dbg !15716
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15717, metadata !DIExpression()), !dbg !15716
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15716
  %1 = load i32, i32* %val.addr, align 4, !dbg !15716
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_qeec_element_index_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15716
  ret void, !dbg !15716
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_qeec_next_element_index_set(i8* %buf, i32 %val) #0 !dbg !15718 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15719, metadata !DIExpression()), !dbg !15720
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15721, metadata !DIExpression()), !dbg !15720
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15720
  %1 = load i32, i32* %val.addr, align 4, !dbg !15720
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_qeec_next_element_index_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15720
  ret void, !dbg !15720
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_qtct_local_port_set(i8* %buf, i32 %val) #0 !dbg !15722 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15723, metadata !DIExpression()), !dbg !15724
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15725, metadata !DIExpression()), !dbg !15724
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15724
  %1 = load i32, i32* %val.addr, align 4, !dbg !15724
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_qtct_local_port_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15724
  ret void, !dbg !15724
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_qtct_switch_prio_set(i8* %buf, i32 %val) #0 !dbg !15726 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15727, metadata !DIExpression()), !dbg !15728
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15729, metadata !DIExpression()), !dbg !15728
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15728
  %1 = load i32, i32* %val.addr, align 4, !dbg !15728
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_qtct_switch_prio_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15728
  ret void, !dbg !15728
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_qtct_tclass_set(i8* %buf, i32 %val) #0 !dbg !15730 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15731, metadata !DIExpression()), !dbg !15732
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !15733, metadata !DIExpression()), !dbg !15732
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15732
  %1 = load i32, i32* %val.addr, align 4, !dbg !15732
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_qtct_tclass_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !15732
  ret void, !dbg !15732
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__rcu_read_lock() #0 !dbg !15734 {
entry:
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !15735, !srcloc !15736
  ret void, !dbg !15737
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__rcu_read_unlock() #0 !dbg !15738 {
entry:
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !15739, !srcloc !15740
  br label %do.body, !dbg !15741

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15742

do.end:                                           ; preds = %do.body
  ret void, !dbg !15744
}

; Function Attrs: noredzone
declare dso_local void @kfree_skb(%struct.sk_buff*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_open(%struct.net_device* %dev) #0 !dbg !15745 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %err = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15746, metadata !DIExpression()), !dbg !15747
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !15748, metadata !DIExpression()), !dbg !15749
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15750
  %call = call i8* @netdev_priv(%struct.net_device* %0) #9, !dbg !15751
  %1 = bitcast i8* %call to %struct.mlxsw_sp_port*, !dbg !15751
  store %struct.mlxsw_sp_port* %1, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15749
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15752, metadata !DIExpression()), !dbg !15753
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15754
  %call1 = call i32 @mlxsw_sp_port_admin_status_set(%struct.mlxsw_sp_port* %2, i1 zeroext true) #9, !dbg !15755
  store i32 %call1, i32* %err, align 4, !dbg !15756
  %3 = load i32, i32* %err, align 4, !dbg !15757
  %tobool = icmp ne i32 %3, 0, !dbg !15757
  br i1 %tobool, label %if.then, label %if.end, !dbg !15759

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %err, align 4, !dbg !15760
  store i32 %4, i32* %retval, align 4, !dbg !15761
  br label %return, !dbg !15761

if.end:                                           ; preds = %entry
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15762
  call void @netif_start_queue(%struct.net_device* %5) #9, !dbg !15763
  store i32 0, i32* %retval, align 4, !dbg !15764
  br label %return, !dbg !15764

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !15765
  ret i32 %6, !dbg !15765
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_stop(%struct.net_device* %dev) #0 !dbg !15766 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15767, metadata !DIExpression()), !dbg !15768
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !15769, metadata !DIExpression()), !dbg !15770
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15771
  %call = call i8* @netdev_priv(%struct.net_device* %0) #9, !dbg !15772
  %1 = bitcast i8* %call to %struct.mlxsw_sp_port*, !dbg !15772
  store %struct.mlxsw_sp_port* %1, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15770
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15773
  call void @netif_stop_queue(%struct.net_device* %2) #9, !dbg !15774
  %3 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15775
  %call1 = call i32 @mlxsw_sp_port_admin_status_set(%struct.mlxsw_sp_port* %3, i1 zeroext false) #9, !dbg !15776
  ret i32 %call1, !dbg !15777
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_xmit(%struct.sk_buff* %skb, %struct.net_device* %dev) #0 !dbg !15778 {
entry:
  %retval = alloca i32, align 4
  %skb.addr = alloca %struct.sk_buff*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %pcpu_stats = alloca %struct.mlxsw_sp_port_pcpu_stats*, align 8
  %tx_info = alloca %struct.mlxsw_tx_info, align 1
  %len = alloca i64, align 8
  %err = alloca i32, align 4
  %__vpp_verify = alloca i8*, align 8
  %pao_ID__ = alloca i32, align 4
  %__vpp_verify17 = alloca i8*, align 8
  %pao_ID__20 = alloca i32, align 4
  %tmp = alloca %struct.mlxsw_sp_port_pcpu_stats*, align 8
  %__vpp_verify32 = alloca i8*, align 8
  %tmp34 = alloca %struct.mlxsw_sp_port_pcpu_stats*, align 8
  %__vpp_verify39 = alloca i8*, align 8
  %pao_ID__42 = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !15779, metadata !DIExpression()), !dbg !15780
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15781, metadata !DIExpression()), !dbg !15782
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !15783, metadata !DIExpression()), !dbg !15784
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15785
  %call = call i8* @netdev_priv(%struct.net_device* %0) #9, !dbg !15786
  %1 = bitcast i8* %call to %struct.mlxsw_sp_port*, !dbg !15786
  store %struct.mlxsw_sp_port* %1, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15784
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !15787, metadata !DIExpression()), !dbg !15788
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15789
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %2, i32 0, i32 2, !dbg !15790
  %3 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !15790
  store %struct.mlxsw_sp* %3, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !15788
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_pcpu_stats** %pcpu_stats, metadata !15791, metadata !DIExpression()), !dbg !15792
  call void @llvm.dbg.declare(metadata %struct.mlxsw_tx_info* %tx_info, metadata !15793, metadata !DIExpression()), !dbg !15794
  %local_port = getelementptr inbounds %struct.mlxsw_tx_info, %struct.mlxsw_tx_info* %tx_info, i32 0, i32 0, !dbg !15795
  %4 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15796
  %local_port2 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %4, i32 0, i32 3, !dbg !15797
  %5 = load i8, i8* %local_port2, align 8, !dbg !15797
  store i8 %5, i8* %local_port, align 1, !dbg !15795
  %is_emad = getelementptr inbounds %struct.mlxsw_tx_info, %struct.mlxsw_tx_info* %tx_info, i32 0, i32 1, !dbg !15795
  store i8 0, i8* %is_emad, align 1, !dbg !15795
  call void @llvm.dbg.declare(metadata i64* %len, metadata !15798, metadata !DIExpression()), !dbg !15799
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15800, metadata !DIExpression()), !dbg !15801
  %6 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15802
  %call3 = call i32 @skb_cow_head(%struct.sk_buff* %6, i32 16) #9, !dbg !15804
  %tobool = icmp ne i32 %call3, 0, !dbg !15804
  br i1 %tobool, label %if.then, label %if.end, !dbg !15805

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !15806

do.body:                                          ; preds = %if.then
  br label %do.body4, !dbg !15808

do.body4:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !15810, metadata !DIExpression()), !dbg !15812
  store i8* null, i8** %__vpp_verify, align 8, !dbg !15812
  %7 = load i8*, i8** %__vpp_verify, align 8, !dbg !15812
  br label %do.end, !dbg !15812

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !15808

do.body5:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %pao_ID__, metadata !15813, metadata !DIExpression()), !dbg !15815
  store i32 1, i32* %pao_ID__, align 4, !dbg !15815
  %8 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15816
  %pcpu_stats6 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %8, i32 0, i32 1, !dbg !15816
  %9 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %pcpu_stats6, align 8, !dbg !15816
  %tx_dropped = getelementptr inbounds %struct.mlxsw_sp_port_pcpu_stats, %struct.mlxsw_sp_port_pcpu_stats* %9, i32 0, i32 5, !dbg !15816
  call void asm sideeffect "incl $0", "=*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* %tx_dropped, i32* %tx_dropped) #10, !dbg !15816, !srcloc !15819
  br label %do.end7, !dbg !15815

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !15808

do.end8:                                          ; preds = %do.end7
  %10 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15820
  call void @dev_kfree_skb_any(%struct.sk_buff* %10) #9, !dbg !15821
  store i32 0, i32* %retval, align 4, !dbg !15822
  br label %return, !dbg !15822

if.end:                                           ; preds = %entry
  %11 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15823
  %cb = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %11, i32 0, i32 3, !dbg !15824
  %arraydecay = getelementptr inbounds [48 x i8], [48 x i8]* %cb, i64 0, i64 0, !dbg !15825
  call void @llvm.memset.p0i8.i64(i8* align 8 %arraydecay, i8 0, i64 4, i1 false), !dbg !15825
  %12 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !15826
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %12, i32 0, i32 1, !dbg !15828
  %13 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !15828
  %call9 = call zeroext i1 @mlxsw_core_skb_transmit_busy(%struct.mlxsw_core* %13, %struct.mlxsw_tx_info* %tx_info) #9, !dbg !15829
  br i1 %call9, label %if.then10, label %if.end11, !dbg !15830

if.then10:                                        ; preds = %if.end
  store i32 16, i32* %retval, align 4, !dbg !15831
  br label %return, !dbg !15831

if.end11:                                         ; preds = %if.end
  %14 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15832
  %call12 = call i32 @eth_skb_pad(%struct.sk_buff* %14) #9, !dbg !15834
  %tobool13 = icmp ne i32 %call12, 0, !dbg !15834
  br i1 %tobool13, label %if.then14, label %if.end25, !dbg !15835

if.then14:                                        ; preds = %if.end11
  br label %do.body15, !dbg !15836

do.body15:                                        ; preds = %if.then14
  br label %do.body16, !dbg !15838

do.body16:                                        ; preds = %do.body15
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify17, metadata !15840, metadata !DIExpression()), !dbg !15842
  store i8* null, i8** %__vpp_verify17, align 8, !dbg !15842
  %15 = load i8*, i8** %__vpp_verify17, align 8, !dbg !15842
  br label %do.end18, !dbg !15842

do.end18:                                         ; preds = %do.body16
  br label %do.body19, !dbg !15838

do.body19:                                        ; preds = %do.end18
  call void @llvm.dbg.declare(metadata i32* %pao_ID__20, metadata !15843, metadata !DIExpression()), !dbg !15845
  store i32 1, i32* %pao_ID__20, align 4, !dbg !15845
  %16 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15846
  %pcpu_stats21 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %16, i32 0, i32 1, !dbg !15846
  %17 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %pcpu_stats21, align 8, !dbg !15846
  %tx_dropped22 = getelementptr inbounds %struct.mlxsw_sp_port_pcpu_stats, %struct.mlxsw_sp_port_pcpu_stats* %17, i32 0, i32 5, !dbg !15846
  call void asm sideeffect "incl $0", "=*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* %tx_dropped22, i32* %tx_dropped22) #10, !dbg !15846, !srcloc !15849
  br label %do.end23, !dbg !15845

do.end23:                                         ; preds = %do.body19
  br label %do.end24, !dbg !15838

do.end24:                                         ; preds = %do.end23
  store i32 0, i32* %retval, align 4, !dbg !15850
  br label %return, !dbg !15850

if.end25:                                         ; preds = %if.end11
  %18 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15851
  call void @mlxsw_sp_txhdr_construct(%struct.sk_buff* %18, %struct.mlxsw_tx_info* %tx_info) #9, !dbg !15852
  %19 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15853
  %len26 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %19, i32 0, i32 5, !dbg !15854
  %20 = load i32, i32* %len26, align 8, !dbg !15854
  %sub = sub i32 %20, 16, !dbg !15855
  %conv = zext i32 %sub to i64, !dbg !15853
  store i64 %conv, i64* %len, align 8, !dbg !15856
  %21 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !15857
  %core27 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %21, i32 0, i32 1, !dbg !15858
  %22 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core27, align 8, !dbg !15858
  %23 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15859
  %call28 = call i32 @mlxsw_core_skb_transmit(%struct.mlxsw_core* %22, %struct.sk_buff* %23, %struct.mlxsw_tx_info* %tx_info) #9, !dbg !15860
  store i32 %call28, i32* %err, align 4, !dbg !15861
  %24 = load i32, i32* %err, align 4, !dbg !15862
  %tobool29 = icmp ne i32 %24, 0, !dbg !15862
  br i1 %tobool29, label %if.else, label %if.then30, !dbg !15864

if.then30:                                        ; preds = %if.end25
  br label %do.body31, !dbg !15865

do.body31:                                        ; preds = %if.then30
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify32, metadata !15869, metadata !DIExpression()), !dbg !15871
  store i8* null, i8** %__vpp_verify32, align 8, !dbg !15871
  %25 = load i8*, i8** %__vpp_verify32, align 8, !dbg !15871
  br label %do.end33, !dbg !15871

do.end33:                                         ; preds = %do.body31
  %26 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15865
  %pcpu_stats35 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %26, i32 0, i32 1, !dbg !15865
  %27 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %pcpu_stats35, align 8, !dbg !15865
  store %struct.mlxsw_sp_port_pcpu_stats* %27, %struct.mlxsw_sp_port_pcpu_stats** %tmp34, align 8, !dbg !15871
  %28 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %tmp34, align 8, !dbg !15865
  store %struct.mlxsw_sp_port_pcpu_stats* %28, %struct.mlxsw_sp_port_pcpu_stats** %tmp, align 8, !dbg !15872
  %29 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %tmp, align 8, !dbg !15872
  store %struct.mlxsw_sp_port_pcpu_stats* %29, %struct.mlxsw_sp_port_pcpu_stats** %pcpu_stats, align 8, !dbg !15873
  %30 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %pcpu_stats, align 8, !dbg !15874
  %syncp = getelementptr inbounds %struct.mlxsw_sp_port_pcpu_stats, %struct.mlxsw_sp_port_pcpu_stats* %30, i32 0, i32 4, !dbg !15875
  call void @u64_stats_update_begin(%struct.u64_stats_sync* %syncp) #9, !dbg !15876
  %31 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %pcpu_stats, align 8, !dbg !15877
  %tx_packets = getelementptr inbounds %struct.mlxsw_sp_port_pcpu_stats, %struct.mlxsw_sp_port_pcpu_stats* %31, i32 0, i32 2, !dbg !15878
  %32 = load i64, i64* %tx_packets, align 8, !dbg !15879
  %inc = add i64 %32, 1, !dbg !15879
  store i64 %inc, i64* %tx_packets, align 8, !dbg !15879
  %33 = load i64, i64* %len, align 8, !dbg !15880
  %34 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %pcpu_stats, align 8, !dbg !15881
  %tx_bytes = getelementptr inbounds %struct.mlxsw_sp_port_pcpu_stats, %struct.mlxsw_sp_port_pcpu_stats* %34, i32 0, i32 3, !dbg !15882
  %35 = load i64, i64* %tx_bytes, align 8, !dbg !15883
  %add = add i64 %35, %33, !dbg !15883
  store i64 %add, i64* %tx_bytes, align 8, !dbg !15883
  %36 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %pcpu_stats, align 8, !dbg !15884
  %syncp36 = getelementptr inbounds %struct.mlxsw_sp_port_pcpu_stats, %struct.mlxsw_sp_port_pcpu_stats* %36, i32 0, i32 4, !dbg !15885
  call void @u64_stats_update_end(%struct.u64_stats_sync* %syncp36) #9, !dbg !15886
  br label %if.end47, !dbg !15887

if.else:                                          ; preds = %if.end25
  br label %do.body37, !dbg !15888

do.body37:                                        ; preds = %if.else
  br label %do.body38, !dbg !15890

do.body38:                                        ; preds = %do.body37
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify39, metadata !15892, metadata !DIExpression()), !dbg !15894
  store i8* null, i8** %__vpp_verify39, align 8, !dbg !15894
  %37 = load i8*, i8** %__vpp_verify39, align 8, !dbg !15894
  br label %do.end40, !dbg !15894

do.end40:                                         ; preds = %do.body38
  br label %do.body41, !dbg !15890

do.body41:                                        ; preds = %do.end40
  call void @llvm.dbg.declare(metadata i32* %pao_ID__42, metadata !15895, metadata !DIExpression()), !dbg !15897
  store i32 1, i32* %pao_ID__42, align 4, !dbg !15897
  %38 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15898
  %pcpu_stats43 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %38, i32 0, i32 1, !dbg !15898
  %39 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %pcpu_stats43, align 8, !dbg !15898
  %tx_dropped44 = getelementptr inbounds %struct.mlxsw_sp_port_pcpu_stats, %struct.mlxsw_sp_port_pcpu_stats* %39, i32 0, i32 5, !dbg !15898
  call void asm sideeffect "incl $0", "=*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* %tx_dropped44, i32* %tx_dropped44) #10, !dbg !15898, !srcloc !15901
  br label %do.end45, !dbg !15897

do.end45:                                         ; preds = %do.body41
  br label %do.end46, !dbg !15890

do.end46:                                         ; preds = %do.end45
  %40 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15902
  call void @dev_kfree_skb_any(%struct.sk_buff* %40) #9, !dbg !15903
  br label %if.end47

if.end47:                                         ; preds = %do.end46, %do.end33
  store i32 0, i32* %retval, align 4, !dbg !15904
  br label %return, !dbg !15904

return:                                           ; preds = %if.end47, %do.end24, %if.then10, %do.end8
  %41 = load i32, i32* %retval, align 4, !dbg !15905
  ret i32 %41, !dbg !15905
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_set_rx_mode(%struct.net_device* %dev) #0 !dbg !15906 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15907, metadata !DIExpression()), !dbg !15908
  ret void, !dbg !15909
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_set_mac_address(%struct.net_device* %dev, i8* %p) #0 !dbg !15910 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %p.addr = alloca i8*, align 8
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %addr = alloca %struct.sockaddr*, align 8
  %err = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15911, metadata !DIExpression()), !dbg !15912
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !15913, metadata !DIExpression()), !dbg !15914
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !15915, metadata !DIExpression()), !dbg !15916
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15917
  %call = call i8* @netdev_priv(%struct.net_device* %0) #9, !dbg !15918
  %1 = bitcast i8* %call to %struct.mlxsw_sp_port*, !dbg !15918
  store %struct.mlxsw_sp_port* %1, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15916
  call void @llvm.dbg.declare(metadata %struct.sockaddr** %addr, metadata !15919, metadata !DIExpression()), !dbg !15920
  %2 = load i8*, i8** %p.addr, align 8, !dbg !15921
  %3 = bitcast i8* %2 to %struct.sockaddr*, !dbg !15921
  store %struct.sockaddr* %3, %struct.sockaddr** %addr, align 8, !dbg !15920
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15922, metadata !DIExpression()), !dbg !15923
  %4 = load %struct.sockaddr*, %struct.sockaddr** %addr, align 8, !dbg !15924
  %sa_data = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %4, i32 0, i32 1, !dbg !15926
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data, i64 0, i64 0, !dbg !15924
  %call1 = call zeroext i1 @is_valid_ether_addr(i8* %arraydecay) #9, !dbg !15927
  br i1 %call1, label %if.end, label %if.then, !dbg !15928

if.then:                                          ; preds = %entry
  store i32 -99, i32* %retval, align 4, !dbg !15929
  br label %return, !dbg !15929

if.end:                                           ; preds = %entry
  %5 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15930
  %6 = load %struct.sockaddr*, %struct.sockaddr** %addr, align 8, !dbg !15931
  %sa_data2 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %6, i32 0, i32 1, !dbg !15932
  %arraydecay3 = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data2, i64 0, i64 0, !dbg !15931
  %call4 = call i32 @mlxsw_sp_port_dev_addr_set(%struct.mlxsw_sp_port* %5, i8* %arraydecay3) #9, !dbg !15933
  store i32 %call4, i32* %err, align 4, !dbg !15934
  %7 = load i32, i32* %err, align 4, !dbg !15935
  %tobool = icmp ne i32 %7, 0, !dbg !15935
  br i1 %tobool, label %if.then5, label %if.end6, !dbg !15937

if.then5:                                         ; preds = %if.end
  %8 = load i32, i32* %err, align 4, !dbg !15938
  store i32 %8, i32* %retval, align 4, !dbg !15939
  br label %return, !dbg !15939

if.end6:                                          ; preds = %if.end
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15940
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %9, i32 0, i32 74, !dbg !15941
  %10 = load i8*, i8** %dev_addr, align 8, !dbg !15941
  %11 = load %struct.sockaddr*, %struct.sockaddr** %addr, align 8, !dbg !15942
  %sa_data7 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %11, i32 0, i32 1, !dbg !15943
  %arraydecay8 = getelementptr inbounds [14 x i8], [14 x i8]* %sa_data7, i64 0, i64 0, !dbg !15944
  %12 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15945
  %addr_len = getelementptr inbounds %struct.net_device, %struct.net_device* %12, i32 0, i32 55, !dbg !15946
  %13 = load i8, i8* %addr_len, align 1, !dbg !15946
  %conv = zext i8 %13 to i64, !dbg !15945
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 2 %arraydecay8, i64 %conv, i1 false), !dbg !15944
  store i32 0, i32* %retval, align 4, !dbg !15947
  br label %return, !dbg !15947

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !15948
  ret i32 %14, !dbg !15948
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_ioctl(%struct.net_device* %dev, %struct.ifreq* %ifr, i32 %cmd) #0 !dbg !15949 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %ifr.addr = alloca %struct.ifreq*, align 8
  %cmd.addr = alloca i32, align 4
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15950, metadata !DIExpression()), !dbg !15951
  store %struct.ifreq* %ifr, %struct.ifreq** %ifr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ifreq** %ifr.addr, metadata !15952, metadata !DIExpression()), !dbg !15953
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !15954, metadata !DIExpression()), !dbg !15955
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !15956, metadata !DIExpression()), !dbg !15957
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15958
  %call = call i8* @netdev_priv(%struct.net_device* %0) #9, !dbg !15959
  %1 = bitcast i8* %call to %struct.mlxsw_sp_port*, !dbg !15959
  store %struct.mlxsw_sp_port* %1, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15957
  %2 = load i32, i32* %cmd.addr, align 4, !dbg !15960
  switch i32 %2, label %sw.default [
    i32 35248, label %sw.bb
    i32 35249, label %sw.bb2
  ], !dbg !15961

sw.bb:                                            ; preds = %entry
  %3 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15962
  %4 = load %struct.ifreq*, %struct.ifreq** %ifr.addr, align 8, !dbg !15964
  %call1 = call i32 @mlxsw_sp_port_hwtstamp_set(%struct.mlxsw_sp_port* %3, %struct.ifreq* %4) #9, !dbg !15965
  store i32 %call1, i32* %retval, align 4, !dbg !15966
  br label %return, !dbg !15966

sw.bb2:                                           ; preds = %entry
  %5 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15967
  %6 = load %struct.ifreq*, %struct.ifreq** %ifr.addr, align 8, !dbg !15968
  %call3 = call i32 @mlxsw_sp_port_hwtstamp_get(%struct.mlxsw_sp_port* %5, %struct.ifreq* %6) #9, !dbg !15969
  store i32 %call3, i32* %retval, align 4, !dbg !15970
  br label %return, !dbg !15970

sw.default:                                       ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !15971
  br label %return, !dbg !15971

return:                                           ; preds = %sw.default, %sw.bb2, %sw.bb
  %7 = load i32, i32* %retval, align 4, !dbg !15972
  ret i32 %7, !dbg !15972
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_change_mtu(%struct.net_device* %dev, i32 %mtu) #0 !dbg !15973 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %mtu.addr = alloca i32, align 4
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %orig_hdroom = alloca %struct.mlxsw_sp_hdroom, align 4
  %hdroom = alloca %struct.mlxsw_sp_hdroom, align 4
  %err = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15974, metadata !DIExpression()), !dbg !15975
  store i32 %mtu, i32* %mtu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mtu.addr, metadata !15976, metadata !DIExpression()), !dbg !15977
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !15978, metadata !DIExpression()), !dbg !15979
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15980
  %call = call i8* @netdev_priv(%struct.net_device* %0) #9, !dbg !15981
  %1 = bitcast i8* %call to %struct.mlxsw_sp_port*, !dbg !15981
  store %struct.mlxsw_sp_port* %1, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15979
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_hdroom* %orig_hdroom, metadata !15982, metadata !DIExpression()), !dbg !15983
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_hdroom* %hdroom, metadata !15984, metadata !DIExpression()), !dbg !15985
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15986, metadata !DIExpression()), !dbg !15987
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15988
  %hdroom1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %2, i32 0, i32 22, !dbg !15989
  %3 = load %struct.mlxsw_sp_hdroom*, %struct.mlxsw_sp_hdroom** %hdroom1, align 8, !dbg !15989
  %4 = bitcast %struct.mlxsw_sp_hdroom* %orig_hdroom to i8*, !dbg !15990
  %5 = bitcast %struct.mlxsw_sp_hdroom* %3 to i8*, !dbg !15990
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 216, i1 false), !dbg !15990
  %6 = bitcast %struct.mlxsw_sp_hdroom* %hdroom to i8*, !dbg !15991
  %7 = bitcast %struct.mlxsw_sp_hdroom* %orig_hdroom to i8*, !dbg !15991
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 216, i1 false), !dbg !15991
  %8 = load i32, i32* %mtu.addr, align 4, !dbg !15992
  %mtu2 = getelementptr inbounds %struct.mlxsw_sp_hdroom, %struct.mlxsw_sp_hdroom* %hdroom, i32 0, i32 5, !dbg !15993
  store i32 %8, i32* %mtu2, align 4, !dbg !15994
  %9 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15995
  call void @mlxsw_sp_hdroom_bufs_reset_sizes(%struct.mlxsw_sp_port* %9, %struct.mlxsw_sp_hdroom* %hdroom) #9, !dbg !15996
  %10 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !15997
  %call3 = call i32 @mlxsw_sp_hdroom_configure(%struct.mlxsw_sp_port* %10, %struct.mlxsw_sp_hdroom* %hdroom) #9, !dbg !15998
  store i32 %call3, i32* %err, align 4, !dbg !15999
  %11 = load i32, i32* %err, align 4, !dbg !16000
  %tobool = icmp ne i32 %11, 0, !dbg !16000
  br i1 %tobool, label %if.then, label %if.end, !dbg !16002

if.then:                                          ; preds = %entry
  %12 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16003
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %12, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.144, i64 0, i64 0)) #13, !dbg !16005
  %13 = load i32, i32* %err, align 4, !dbg !16006
  store i32 %13, i32* %retval, align 4, !dbg !16007
  br label %return, !dbg !16007

if.end:                                           ; preds = %entry
  %14 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !16008
  %15 = load i32, i32* %mtu.addr, align 4, !dbg !16009
  %conv = trunc i32 %15 to i16, !dbg !16009
  %call4 = call i32 @mlxsw_sp_port_mtu_set(%struct.mlxsw_sp_port* %14, i16 zeroext %conv) #9, !dbg !16010
  store i32 %call4, i32* %err, align 4, !dbg !16011
  %16 = load i32, i32* %err, align 4, !dbg !16012
  %tobool5 = icmp ne i32 %16, 0, !dbg !16012
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !16014

if.then6:                                         ; preds = %if.end
  br label %err_port_mtu_set, !dbg !16015

if.end7:                                          ; preds = %if.end
  %17 = load i32, i32* %mtu.addr, align 4, !dbg !16016
  %18 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16017
  %mtu8 = getelementptr inbounds %struct.net_device, %struct.net_device* %18, i32 0, i32 44, !dbg !16018
  store i32 %17, i32* %mtu8, align 8, !dbg !16019
  store i32 0, i32* %retval, align 4, !dbg !16020
  br label %return, !dbg !16020

err_port_mtu_set:                                 ; preds = %if.then6
  call void @llvm.dbg.label(metadata !16021), !dbg !16022
  %19 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !16023
  %call9 = call i32 @mlxsw_sp_hdroom_configure(%struct.mlxsw_sp_port* %19, %struct.mlxsw_sp_hdroom* %orig_hdroom) #9, !dbg !16024
  %20 = load i32, i32* %err, align 4, !dbg !16025
  store i32 %20, i32* %retval, align 4, !dbg !16026
  br label %return, !dbg !16026

return:                                           ; preds = %err_port_mtu_set, %if.end7, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !16027
  ret i32 %21, !dbg !16027
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_port_get_stats64(%struct.net_device* %dev, %struct.rtnl_link_stats64* %stats) #0 !dbg !16028 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %stats.addr = alloca %struct.rtnl_link_stats64*, align 8
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16029, metadata !DIExpression()), !dbg !16030
  store %struct.rtnl_link_stats64* %stats, %struct.rtnl_link_stats64** %stats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtnl_link_stats64** %stats.addr, metadata !16031, metadata !DIExpression()), !dbg !16032
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !16033, metadata !DIExpression()), !dbg !16034
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16035
  %call = call i8* @netdev_priv(%struct.net_device* %0) #9, !dbg !16036
  %1 = bitcast i8* %call to %struct.mlxsw_sp_port*, !dbg !16036
  store %struct.mlxsw_sp_port* %1, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !16034
  %2 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !16037
  %3 = bitcast %struct.rtnl_link_stats64* %2 to i8*, !dbg !16038
  %4 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !16039
  %periodic_hw_stats = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %4, i32 0, i32 10, !dbg !16040
  %stats1 = getelementptr inbounds %struct.anon.158, %struct.anon.158* %periodic_hw_stats, i32 0, i32 0, !dbg !16041
  %5 = bitcast %struct.rtnl_link_stats64* %stats1 to i8*, !dbg !16038
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %5, i64 192, i1 false), !dbg !16038
  ret void, !dbg !16042
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mlxsw_sp_port_has_offload_stats(%struct.net_device* %dev, i32 %attr_id) #0 !dbg !16043 {
entry:
  %retval = alloca i1, align 1
  %dev.addr = alloca %struct.net_device*, align 8
  %attr_id.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16044, metadata !DIExpression()), !dbg !16045
  store i32 %attr_id, i32* %attr_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %attr_id.addr, metadata !16046, metadata !DIExpression()), !dbg !16047
  %0 = load i32, i32* %attr_id.addr, align 4, !dbg !16048
  switch i32 %0, label %sw.epilog [
    i32 1, label %sw.bb
  ], !dbg !16049

sw.bb:                                            ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !16050
  br label %return, !dbg !16050

sw.epilog:                                        ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !16052
  br label %return, !dbg !16052

return:                                           ; preds = %sw.epilog, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !16053
  ret i1 %1, !dbg !16053
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_get_offload_stats(i32 %attr_id, %struct.net_device* %dev, i8* %sp) #0 !dbg !16054 {
entry:
  %retval = alloca i32, align 4
  %attr_id.addr = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %sp.addr = alloca i8*, align 8
  store i32 %attr_id, i32* %attr_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %attr_id.addr, metadata !16055, metadata !DIExpression()), !dbg !16056
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16057, metadata !DIExpression()), !dbg !16058
  store i8* %sp, i8** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sp.addr, metadata !16059, metadata !DIExpression()), !dbg !16060
  %0 = load i32, i32* %attr_id.addr, align 4, !dbg !16061
  switch i32 %0, label %sw.epilog [
    i32 1, label %sw.bb
  ], !dbg !16062

sw.bb:                                            ; preds = %entry
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16063
  %2 = load i8*, i8** %sp.addr, align 8, !dbg !16065
  %3 = bitcast i8* %2 to %struct.rtnl_link_stats64*, !dbg !16065
  %call = call i32 @mlxsw_sp_port_get_sw_stats64(%struct.net_device* %1, %struct.rtnl_link_stats64* %3) #9, !dbg !16066
  store i32 %call, i32* %retval, align 4, !dbg !16067
  br label %return, !dbg !16067

sw.epilog:                                        ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !16068
  br label %return, !dbg !16068

return:                                           ; preds = %sw.epilog, %sw.bb
  %4 = load i32, i32* %retval, align 4, !dbg !16069
  ret i32 %4, !dbg !16069
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_add_vid(%struct.net_device* %dev, i16 zeroext %proto, i16 zeroext %vid) #0 !dbg !16070 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %proto.addr = alloca i16, align 2
  %vid.addr = alloca i16, align 2
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16071, metadata !DIExpression()), !dbg !16072
  store i16 %proto, i16* %proto.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %proto.addr, metadata !16073, metadata !DIExpression()), !dbg !16074
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !16075, metadata !DIExpression()), !dbg !16076
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !16077, metadata !DIExpression()), !dbg !16078
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16079
  %call = call i8* @netdev_priv(%struct.net_device* %0) #9, !dbg !16080
  %1 = bitcast i8* %call to %struct.mlxsw_sp_port*, !dbg !16080
  store %struct.mlxsw_sp_port* %1, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !16078
  %2 = load i16, i16* %vid.addr, align 2, !dbg !16081
  %tobool = icmp ne i16 %2, 0, !dbg !16081
  br i1 %tobool, label %if.end, label %if.then, !dbg !16083

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !16084
  br label %return, !dbg !16084

if.end:                                           ; preds = %entry
  %3 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !16085
  %4 = load i16, i16* %vid.addr, align 2, !dbg !16086
  %call1 = call %struct.mlxsw_sp_port_vlan* @mlxsw_sp_port_vlan_create(%struct.mlxsw_sp_port* %3, i16 zeroext %4) #9, !dbg !16087
  %5 = bitcast %struct.mlxsw_sp_port_vlan* %call1 to i8*, !dbg !16087
  %call2 = call i32 @PTR_ERR_OR_ZERO(i8* %5) #9, !dbg !16088
  store i32 %call2, i32* %retval, align 4, !dbg !16089
  br label %return, !dbg !16089

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !16090
  ret i32 %6, !dbg !16090
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_kill_vid(%struct.net_device* %dev, i16 zeroext %proto, i16 zeroext %vid) #0 !dbg !16091 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %proto.addr = alloca i16, align 2
  %vid.addr = alloca i16, align 2
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %mlxsw_sp_port_vlan = alloca %struct.mlxsw_sp_port_vlan*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16092, metadata !DIExpression()), !dbg !16093
  store i16 %proto, i16* %proto.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %proto.addr, metadata !16094, metadata !DIExpression()), !dbg !16095
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !16096, metadata !DIExpression()), !dbg !16097
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !16098, metadata !DIExpression()), !dbg !16099
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16100
  %call = call i8* @netdev_priv(%struct.net_device* %0) #9, !dbg !16101
  %1 = bitcast i8* %call to %struct.mlxsw_sp_port*, !dbg !16101
  store %struct.mlxsw_sp_port* %1, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !16099
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, metadata !16102, metadata !DIExpression()), !dbg !16103
  %2 = load i16, i16* %vid.addr, align 2, !dbg !16104
  %tobool = icmp ne i16 %2, 0, !dbg !16104
  br i1 %tobool, label %if.end, label %if.then, !dbg !16106

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !16107
  br label %return, !dbg !16107

if.end:                                           ; preds = %entry
  %3 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !16108
  %4 = load i16, i16* %vid.addr, align 2, !dbg !16109
  %call1 = call %struct.mlxsw_sp_port_vlan* @mlxsw_sp_port_vlan_find_by_vid(%struct.mlxsw_sp_port* %3, i16 zeroext %4) #9, !dbg !16110
  store %struct.mlxsw_sp_port_vlan* %call1, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !16111
  %5 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !16112
  %tobool2 = icmp ne %struct.mlxsw_sp_port_vlan* %5, null, !dbg !16112
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !16114

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !16115
  br label %return, !dbg !16115

if.end4:                                          ; preds = %if.end
  %6 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !16116
  call void @mlxsw_sp_port_vlan_destroy(%struct.mlxsw_sp_port_vlan* %6) #9, !dbg !16117
  store i32 0, i32* %retval, align 4, !dbg !16118
  br label %return, !dbg !16118

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !16119
  ret i32 %7, !dbg !16119
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_setup_tc(%struct.net_device* %dev, i32 %type, i8* %type_data) #0 !dbg !16120 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %type.addr = alloca i32, align 4
  %type_data.addr = alloca i8*, align 8
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16121, metadata !DIExpression()), !dbg !16122
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !16123, metadata !DIExpression()), !dbg !16124
  store i8* %type_data, i8** %type_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %type_data.addr, metadata !16125, metadata !DIExpression()), !dbg !16126
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !16127, metadata !DIExpression()), !dbg !16128
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16129
  %call = call i8* @netdev_priv(%struct.net_device* %0) #9, !dbg !16130
  %1 = bitcast i8* %call to %struct.mlxsw_sp_port*, !dbg !16130
  store %struct.mlxsw_sp_port* %1, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !16128
  %2 = load i32, i32* %type.addr, align 4, !dbg !16131
  switch i32 %2, label %sw.default [
    i32 5, label %sw.bb
    i32 7, label %sw.bb2
    i32 8, label %sw.bb4
    i32 15, label %sw.bb6
    i32 16, label %sw.bb8
    i32 17, label %sw.bb10
  ], !dbg !16132

sw.bb:                                            ; preds = %entry
  %3 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !16133
  %4 = load i8*, i8** %type_data.addr, align 8, !dbg !16135
  %5 = bitcast i8* %4 to %struct.flow_block_offload*, !dbg !16135
  %call1 = call i32 @mlxsw_sp_setup_tc_block(%struct.mlxsw_sp_port* %3, %struct.flow_block_offload* %5) #9, !dbg !16136
  store i32 %call1, i32* %retval, align 4, !dbg !16137
  br label %return, !dbg !16137

sw.bb2:                                           ; preds = %entry
  %6 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !16138
  %7 = load i8*, i8** %type_data.addr, align 8, !dbg !16139
  %8 = bitcast i8* %7 to %struct.tc_red_qopt_offload*, !dbg !16139
  %call3 = call i32 @mlxsw_sp_setup_tc_red(%struct.mlxsw_sp_port* %6, %struct.tc_red_qopt_offload* %8) #9, !dbg !16140
  store i32 %call3, i32* %retval, align 4, !dbg !16141
  br label %return, !dbg !16141

sw.bb4:                                           ; preds = %entry
  %9 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !16142
  %10 = load i8*, i8** %type_data.addr, align 8, !dbg !16143
  %11 = bitcast i8* %10 to %struct.tc_prio_qopt_offload*, !dbg !16143
  %call5 = call i32 @mlxsw_sp_setup_tc_prio(%struct.mlxsw_sp_port* %9, %struct.tc_prio_qopt_offload* %11) #9, !dbg !16144
  store i32 %call5, i32* %retval, align 4, !dbg !16145
  br label %return, !dbg !16145

sw.bb6:                                           ; preds = %entry
  %12 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !16146
  %13 = load i8*, i8** %type_data.addr, align 8, !dbg !16147
  %14 = bitcast i8* %13 to %struct.tc_ets_qopt_offload*, !dbg !16147
  %call7 = call i32 @mlxsw_sp_setup_tc_ets(%struct.mlxsw_sp_port* %12, %struct.tc_ets_qopt_offload* %14) #9, !dbg !16148
  store i32 %call7, i32* %retval, align 4, !dbg !16149
  br label %return, !dbg !16149

sw.bb8:                                           ; preds = %entry
  %15 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !16150
  %16 = load i8*, i8** %type_data.addr, align 8, !dbg !16151
  %17 = bitcast i8* %16 to %struct.tc_tbf_qopt_offload*, !dbg !16151
  %call9 = call i32 @mlxsw_sp_setup_tc_tbf(%struct.mlxsw_sp_port* %15, %struct.tc_tbf_qopt_offload* %17) #9, !dbg !16152
  store i32 %call9, i32* %retval, align 4, !dbg !16153
  br label %return, !dbg !16153

sw.bb10:                                          ; preds = %entry
  %18 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !16154
  %19 = load i8*, i8** %type_data.addr, align 8, !dbg !16155
  %20 = bitcast i8* %19 to %struct.tc_fifo_qopt_offload*, !dbg !16155
  %call11 = call i32 @mlxsw_sp_setup_tc_fifo(%struct.mlxsw_sp_port* %18, %struct.tc_fifo_qopt_offload* %20) #9, !dbg !16156
  store i32 %call11, i32* %retval, align 4, !dbg !16157
  br label %return, !dbg !16157

sw.default:                                       ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !16158
  br label %return, !dbg !16158

return:                                           ; preds = %sw.default, %sw.bb10, %sw.bb8, %sw.bb6, %sw.bb4, %sw.bb2, %sw.bb
  %21 = load i32, i32* %retval, align 4, !dbg !16159
  ret i32 %21, !dbg !16159
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_set_features(%struct.net_device* %dev, i64 %features) #0 !dbg !16160 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %features.addr = alloca i64, align 8
  %oper_features = alloca i64, align 8
  %err = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16161, metadata !DIExpression()), !dbg !16162
  store i64 %features, i64* %features.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %features.addr, metadata !16163, metadata !DIExpression()), !dbg !16164
  call void @llvm.dbg.declare(metadata i64* %oper_features, metadata !16165, metadata !DIExpression()), !dbg !16166
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16167
  %features1 = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 15, !dbg !16168
  %1 = load i64, i64* %features1, align 8, !dbg !16168
  store i64 %1, i64* %oper_features, align 8, !dbg !16166
  call void @llvm.dbg.declare(metadata i32* %err, metadata !16169, metadata !DIExpression()), !dbg !16170
  store i32 0, i32* %err, align 4, !dbg !16170
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16171
  %3 = load i64, i64* %features.addr, align 8, !dbg !16172
  %call = call i32 @mlxsw_sp_handle_feature(%struct.net_device* %2, i64 %3, i64 562949953421312, i32 (%struct.net_device*, i1)* @mlxsw_sp_feature_hw_tc) #9, !dbg !16173
  %4 = load i32, i32* %err, align 4, !dbg !16174
  %or = or i32 %4, %call, !dbg !16174
  store i32 %or, i32* %err, align 4, !dbg !16174
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16175
  %6 = load i64, i64* %features.addr, align 8, !dbg !16176
  %call2 = call i32 @mlxsw_sp_handle_feature(%struct.net_device* %5, i64 %6, i64 4398046511104, i32 (%struct.net_device*, i1)* @mlxsw_sp_feature_loopback) #9, !dbg !16177
  %7 = load i32, i32* %err, align 4, !dbg !16178
  %or3 = or i32 %7, %call2, !dbg !16178
  store i32 %or3, i32* %err, align 4, !dbg !16178
  %8 = load i32, i32* %err, align 4, !dbg !16179
  %tobool = icmp ne i32 %8, 0, !dbg !16179
  br i1 %tobool, label %if.then, label %if.end, !dbg !16181

if.then:                                          ; preds = %entry
  %9 = load i64, i64* %oper_features, align 8, !dbg !16182
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16184
  %features4 = getelementptr inbounds %struct.net_device, %struct.net_device* %10, i32 0, i32 15, !dbg !16185
  store i64 %9, i64* %features4, align 8, !dbg !16186
  store i32 -22, i32* %retval, align 4, !dbg !16187
  br label %return, !dbg !16187

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !16188
  br label %return, !dbg !16188

return:                                           ; preds = %if.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !16189
  ret i32 %11, !dbg !16189
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.devlink_port* @mlxsw_sp_port_get_devlink_port(%struct.net_device* %dev) #0 !dbg !16190 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16191, metadata !DIExpression()), !dbg !16192
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !16193, metadata !DIExpression()), !dbg !16194
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16195
  %call = call i8* @netdev_priv(%struct.net_device* %0) #9, !dbg !16196
  %1 = bitcast i8* %call to %struct.mlxsw_sp_port*, !dbg !16196
  store %struct.mlxsw_sp_port* %1, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !16194
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !16197, metadata !DIExpression()), !dbg !16198
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !16199
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %2, i32 0, i32 2, !dbg !16200
  %3 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !16200
  store %struct.mlxsw_sp* %3, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !16198
  %4 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !16201
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %4, i32 0, i32 1, !dbg !16202
  %5 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !16202
  %6 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !16203
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %6, i32 0, i32 3, !dbg !16204
  %7 = load i8, i8* %local_port, align 8, !dbg !16204
  %call2 = call %struct.devlink_port* @mlxsw_core_port_devlink_port_get(%struct.mlxsw_core* %5, i8 zeroext %7) #9, !dbg !16205
  ret %struct.devlink_port* %call2, !dbg !16206
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_start_queue(%struct.net_device* %dev) #0 !dbg !16207 {
entry:
  %dev_queue.addr.i = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i, metadata !16208, metadata !DIExpression()), !dbg !16212
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16214, metadata !DIExpression()), !dbg !16215
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16216
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #9, !dbg !16217
  store %struct.netdev_queue* %call, %struct.netdev_queue** %dev_queue.addr.i, align 8
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i, align 8, !dbg !16218
  %state.i = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 10, !dbg !16219
  call void @clear_bit(i64 0, i64* %state.i) #12, !dbg !16220
  ret void, !dbg !16221
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %dev, i32 %index) #0 !dbg !16222 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %index.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16225, metadata !DIExpression()), !dbg !16226
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !16227, metadata !DIExpression()), !dbg !16228
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16229
  %_tx = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 86, !dbg !16230
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %_tx, align 8, !dbg !16230
  %2 = load i32, i32* %index.addr, align 4, !dbg !16231
  %idxprom = zext i32 %2 to i64, !dbg !16229
  %arrayidx = getelementptr %struct.netdev_queue, %struct.netdev_queue* %1, i64 %idxprom, !dbg !16229
  ret %struct.netdev_queue* %arrayidx, !dbg !16232
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #0 !dbg !16233 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !16239, metadata !DIExpression()), !dbg !16241
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !16243, metadata !DIExpression()), !dbg !16244
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !16245, metadata !DIExpression()), !dbg !16253
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !16255, metadata !DIExpression()), !dbg !16256
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !16257, metadata !DIExpression()), !dbg !16258
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !16259, metadata !DIExpression()), !dbg !16260
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !16261
  %1 = load i64, i64* %nr.addr, align 8, !dbg !16262
  %div = sdiv i64 %1, 64, !dbg !16262
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !16263
  %2 = bitcast i64* %add.ptr to i8*, !dbg !16261
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !16264
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !16265
  %conv.i = trunc i64 %4 to i32, !dbg !16265
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !16266
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !16267
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !16267
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #12, !dbg !16267
  %7 = load i64, i64* %nr.addr, align 8, !dbg !16268
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !16269
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !16270
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #10, !dbg !16272
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !16273

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !16274
  %12 = bitcast i64* %11 to i8*, !dbg !16274
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !16274
  %shr.i = ashr i64 %13, 3, !dbg !16274
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !16274
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !16276
  %and.i = and i64 %14, 7, !dbg !16276
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !16276
  %shl.i = shl i32 1, %sh_prom.i, !dbg !16276
  %neg.i = xor i32 %shl.i, -1, !dbg !16277
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #10, !dbg !16278, !srcloc !16279
  br label %arch_clear_bit.exit, !dbg !16280

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !16281
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !16283
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #10, !dbg !16284, !srcloc !16285
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !16286
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !16287 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !16291, metadata !DIExpression()), !dbg !16292
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !16293, metadata !DIExpression()), !dbg !16294
  ret i1 true, !dbg !16295
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !16296 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !16300, metadata !DIExpression()), !dbg !16301
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !16302, metadata !DIExpression()), !dbg !16303
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !16304, metadata !DIExpression()), !dbg !16305
  ret void, !dbg !16306
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_stop_queue(%struct.net_device* %dev) #0 !dbg !16307 {
entry:
  %dev_queue.addr.i = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i, metadata !16308, metadata !DIExpression()), !dbg !16310
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16312, metadata !DIExpression()), !dbg !16313
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16314
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #9, !dbg !16315
  store %struct.netdev_queue* %call, %struct.netdev_queue** %dev_queue.addr.i, align 8
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i, align 8, !dbg !16316
  %state.i = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 10, !dbg !16317
  call void @set_bit(i64 0, i64* %state.i) #12, !dbg !16318
  ret void, !dbg !16319
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #0 !dbg !16320 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !16321, metadata !DIExpression()), !dbg !16323
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !16325, metadata !DIExpression()), !dbg !16326
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !16245, metadata !DIExpression()), !dbg !16327
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !16255, metadata !DIExpression()), !dbg !16329
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !16330, metadata !DIExpression()), !dbg !16331
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !16332, metadata !DIExpression()), !dbg !16333
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !16334
  %1 = load i64, i64* %nr.addr, align 8, !dbg !16335
  %div = sdiv i64 %1, 64, !dbg !16335
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !16336
  %2 = bitcast i64* %add.ptr to i8*, !dbg !16334
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !16337
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !16338
  %conv.i = trunc i64 %4 to i32, !dbg !16338
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !16339
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !16340
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !16340
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #12, !dbg !16340
  %7 = load i64, i64* %nr.addr, align 8, !dbg !16341
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !16342
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !16343
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #10, !dbg !16345
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !16346

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !16347
  %12 = bitcast i64* %11 to i8*, !dbg !16347
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !16347
  %shr.i = ashr i64 %13, 3, !dbg !16347
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !16347
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !16349
  %and.i = and i64 %14, 7, !dbg !16349
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !16349
  %shl.i = shl i32 1, %sh_prom.i, !dbg !16349
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #10, !dbg !16350, !srcloc !16351
  br label %arch_set_bit.exit, !dbg !16352

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !16353
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !16355
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #10, !dbg !16356, !srcloc !16357
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !16358
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_cow_head(%struct.sk_buff* %skb, i32 %headroom) #0 !dbg !16359 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %headroom.addr = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16362, metadata !DIExpression()), !dbg !16363
  store i32 %headroom, i32* %headroom.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %headroom.addr, metadata !16364, metadata !DIExpression()), !dbg !16365
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16366
  %1 = load i32, i32* %headroom.addr, align 4, !dbg !16367
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16368
  %call = call i32 @skb_header_cloned(%struct.sk_buff* %2) #9, !dbg !16369
  %call1 = call i32 @__skb_cow(%struct.sk_buff* %0, i32 %1, i32 %call) #9, !dbg !16370
  ret i32 %call1, !dbg !16371
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_kfree_skb_any(%struct.sk_buff* %skb) #0 !dbg !16372 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16373, metadata !DIExpression()), !dbg !16374
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16375
  call void @__dev_kfree_skb_any(%struct.sk_buff* %0, i32 1) #9, !dbg !16376
  ret void, !dbg !16377
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @mlxsw_core_skb_transmit_busy(%struct.mlxsw_core*, %struct.mlxsw_tx_info*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @eth_skb_pad(%struct.sk_buff* %skb) #0 !dbg !16378 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16380, metadata !DIExpression()), !dbg !16381
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16382
  %call = call i32 @skb_put_padto(%struct.sk_buff* %0, i32 60) #9, !dbg !16383
  ret i32 %call, !dbg !16384
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_txhdr_construct(%struct.sk_buff* %skb, %struct.mlxsw_tx_info* %tx_info) #0 !dbg !16385 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %tx_info.addr = alloca %struct.mlxsw_tx_info*, align 8
  %txhdr = alloca i8*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16386, metadata !DIExpression()), !dbg !16387
  store %struct.mlxsw_tx_info* %tx_info, %struct.mlxsw_tx_info** %tx_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_tx_info** %tx_info.addr, metadata !16388, metadata !DIExpression()), !dbg !16389
  call void @llvm.dbg.declare(metadata i8** %txhdr, metadata !16390, metadata !DIExpression()), !dbg !16391
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16392
  %call = call i8* @skb_push(%struct.sk_buff* %0, i32 16) #9, !dbg !16393
  store i8* %call, i8** %txhdr, align 8, !dbg !16391
  %1 = load i8*, i8** %txhdr, align 8, !dbg !16394
  call void @llvm.memset.p0i8.i64(i8* align 1 %1, i8 0, i64 16, i1 false), !dbg !16395
  %2 = load i8*, i8** %txhdr, align 8, !dbg !16396
  call void @mlxsw_tx_hdr_version_set(i8* %2, i32 1) #9, !dbg !16397
  %3 = load i8*, i8** %txhdr, align 8, !dbg !16398
  call void @mlxsw_tx_hdr_ctl_set(i8* %3, i32 0) #9, !dbg !16399
  %4 = load i8*, i8** %txhdr, align 8, !dbg !16400
  call void @mlxsw_tx_hdr_proto_set(i8* %4, i32 1) #9, !dbg !16401
  %5 = load i8*, i8** %txhdr, align 8, !dbg !16402
  call void @mlxsw_tx_hdr_swid_set(i8* %5, i32 0) #9, !dbg !16403
  %6 = load i8*, i8** %txhdr, align 8, !dbg !16404
  call void @mlxsw_tx_hdr_control_tclass_set(i8* %6, i32 1) #9, !dbg !16405
  %7 = load i8*, i8** %txhdr, align 8, !dbg !16406
  %8 = load %struct.mlxsw_tx_info*, %struct.mlxsw_tx_info** %tx_info.addr, align 8, !dbg !16407
  %local_port = getelementptr inbounds %struct.mlxsw_tx_info, %struct.mlxsw_tx_info* %8, i32 0, i32 0, !dbg !16408
  %9 = load i8, i8* %local_port, align 1, !dbg !16408
  %conv = zext i8 %9 to i32, !dbg !16407
  call void @mlxsw_tx_hdr_port_mid_set(i8* %7, i32 %conv) #9, !dbg !16409
  %10 = load i8*, i8** %txhdr, align 8, !dbg !16410
  call void @mlxsw_tx_hdr_type_set(i8* %10, i32 6) #9, !dbg !16411
  ret void, !dbg !16412
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_core_skb_transmit(%struct.mlxsw_core*, %struct.sk_buff*, %struct.mlxsw_tx_info*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__skb_cow(%struct.sk_buff* %skb, i32 %headroom, i32 %cloned) #0 !dbg !16413 {
entry:
  %retval = alloca i32, align 4
  %skb.addr = alloca %struct.sk_buff*, align 8
  %headroom.addr = alloca i32, align 4
  %cloned.addr = alloca i32, align 4
  %delta = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16416, metadata !DIExpression()), !dbg !16417
  store i32 %headroom, i32* %headroom.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %headroom.addr, metadata !16418, metadata !DIExpression()), !dbg !16419
  store i32 %cloned, i32* %cloned.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cloned.addr, metadata !16420, metadata !DIExpression()), !dbg !16421
  call void @llvm.dbg.declare(metadata i32* %delta, metadata !16422, metadata !DIExpression()), !dbg !16423
  store i32 0, i32* %delta, align 4, !dbg !16423
  %0 = load i32, i32* %headroom.addr, align 4, !dbg !16424
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16426
  %call = call i32 @skb_headroom(%struct.sk_buff* %1) #9, !dbg !16427
  %cmp = icmp ugt i32 %0, %call, !dbg !16428
  br i1 %cmp, label %if.then, label %if.end, !dbg !16429

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %headroom.addr, align 4, !dbg !16430
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16431
  %call1 = call i32 @skb_headroom(%struct.sk_buff* %3) #9, !dbg !16432
  %sub = sub i32 %2, %call1, !dbg !16433
  store i32 %sub, i32* %delta, align 4, !dbg !16434
  br label %if.end, !dbg !16435

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* %delta, align 4, !dbg !16436
  %tobool = icmp ne i32 %4, 0, !dbg !16436
  br i1 %tobool, label %if.then3, label %lor.lhs.false, !dbg !16438

lor.lhs.false:                                    ; preds = %if.end
  %5 = load i32, i32* %cloned.addr, align 4, !dbg !16439
  %tobool2 = icmp ne i32 %5, 0, !dbg !16439
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !16440

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  %6 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16441
  %7 = load i32, i32* %delta, align 4, !dbg !16442
  %add = add i32 %7, 63, !dbg !16442
  %and = and i32 %add, -64, !dbg !16442
  %call4 = call i32 @pskb_expand_head(%struct.sk_buff* %6, i32 %and, i32 0, i32 2592) #9, !dbg !16443
  store i32 %call4, i32* %retval, align 4, !dbg !16444
  br label %return, !dbg !16444

if.end5:                                          ; preds = %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !16445
  br label %return, !dbg !16445

return:                                           ; preds = %if.end5, %if.then3
  %8 = load i32, i32* %retval, align 4, !dbg !16446
  ret i32 %8, !dbg !16446
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_header_cloned(%struct.sk_buff* %skb) #0 !dbg !16447 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !16450, metadata !DIExpression()), !dbg !16457
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !16462, metadata !DIExpression()), !dbg !16464
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !16466, metadata !DIExpression()), !dbg !16467
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !16468, metadata !DIExpression()), !dbg !16469
  %retval = alloca i32, align 4
  %skb.addr = alloca %struct.sk_buff*, align 8
  %dataref = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16470, metadata !DIExpression()), !dbg !16471
  call void @llvm.dbg.declare(metadata i32* %dataref, metadata !16472, metadata !DIExpression()), !dbg !16473
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16474
  %cloned = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 11, !dbg !16476
  %bf.load = load i8, i8* %cloned, align 2, !dbg !16476
  %bf.clear = and i8 %bf.load, 1, !dbg !16476
  %tobool = icmp ne i8 %bf.clear, 0, !dbg !16474
  br i1 %tobool, label %if.end, label %if.then, !dbg !16477

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !16478
  br label %return, !dbg !16478

if.end:                                           ; preds = %entry
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16479
  %call = call i8* @skb_end_pointer(%struct.sk_buff* %1) #9, !dbg !16479
  %2 = bitcast i8* %call to %struct.skb_shared_info*, !dbg !16480
  %dataref1 = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %2, i32 0, i32 10, !dbg !16480
  store %struct.atomic_t* %dataref1, %struct.atomic_t** %v.addr.i, align 8
  %3 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !16481
  %4 = bitcast %struct.atomic_t* %3 to i8*, !dbg !16481
  store i8* %4, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !16482
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !16483
  %conv.i.i = trunc i64 %6 to i32, !dbg !16483
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %5, i32 %conv.i.i) #12, !dbg !16484
  %7 = load i8*, i8** %v.addr.i.i, align 8, !dbg !16485
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !16485
  call void @kcsan_check_access(i8* %7, i64 %8, i32 4) #12, !dbg !16485
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !16486
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !16487
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %10, i32 0, i32 0, !dbg !16487
  %11 = load volatile i32, i32* %counter.i.i, align 4, !dbg !16487
  store i32 %11, i32* %dataref, align 4, !dbg !16488
  %12 = load i32, i32* %dataref, align 4, !dbg !16489
  %and = and i32 %12, 65535, !dbg !16490
  %13 = load i32, i32* %dataref, align 4, !dbg !16491
  %shr = ashr i32 %13, 16, !dbg !16492
  %sub = sub i32 %and, %shr, !dbg !16493
  store i32 %sub, i32* %dataref, align 4, !dbg !16494
  %14 = load i32, i32* %dataref, align 4, !dbg !16495
  %cmp = icmp ne i32 %14, 1, !dbg !16496
  %conv = zext i1 %cmp to i32, !dbg !16496
  store i32 %conv, i32* %retval, align 4, !dbg !16497
  br label %return, !dbg !16497

return:                                           ; preds = %if.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !16498
  ret i32 %15, !dbg !16498
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_headroom(%struct.sk_buff* %skb) #0 !dbg !16499 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16502, metadata !DIExpression()), !dbg !16503
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16504
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 37, !dbg !16505
  %1 = load i8*, i8** %data, align 8, !dbg !16505
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16506
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 36, !dbg !16507
  %3 = load i8*, i8** %head, align 8, !dbg !16507
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !16508
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !16508
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !16508
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !16504
  ret i32 %conv, !dbg !16509
}

; Function Attrs: noredzone
declare dso_local i32 @pskb_expand_head(%struct.sk_buff*, i32, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_end_pointer(%struct.sk_buff* %skb) #0 !dbg !16510 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16513, metadata !DIExpression()), !dbg !16514
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16515
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 36, !dbg !16516
  %1 = load i8*, i8** %head, align 8, !dbg !16516
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16517
  %end = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 35, !dbg !16518
  %3 = load i32, i32* %end, align 4, !dbg !16518
  %idx.ext = zext i32 %3 to i64, !dbg !16519
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !16519
  ret i8* %add.ptr, !dbg !16520
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !16521 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !16522, metadata !DIExpression()), !dbg !16523
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !16524, metadata !DIExpression()), !dbg !16525
  ret i1 true, !dbg !16526
}

; Function Attrs: noredzone
declare dso_local void @__dev_kfree_skb_any(%struct.sk_buff*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_put_padto(%struct.sk_buff* %skb, i32 %len) #0 !dbg !16527 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %len.addr = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16528, metadata !DIExpression()), !dbg !16529
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !16530, metadata !DIExpression()), !dbg !16531
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16532
  %1 = load i32, i32* %len.addr, align 4, !dbg !16533
  %call = call i32 @__skb_put_padto(%struct.sk_buff* %0, i32 %1, i1 zeroext true) #9, !dbg !16534
  ret i32 %call, !dbg !16535
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__skb_put_padto(%struct.sk_buff* %skb, i32 %len, i1 zeroext %free_on_error) #0 !dbg !16536 {
entry:
  %retval = alloca i32, align 4
  %skb.addr = alloca %struct.sk_buff*, align 8
  %len.addr = alloca i32, align 4
  %free_on_error.addr = alloca i8, align 1
  %size = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16539, metadata !DIExpression()), !dbg !16540
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !16541, metadata !DIExpression()), !dbg !16542
  %frombool = zext i1 %free_on_error to i8
  store i8 %frombool, i8* %free_on_error.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %free_on_error.addr, metadata !16543, metadata !DIExpression()), !dbg !16544
  call void @llvm.dbg.declare(metadata i32* %size, metadata !16545, metadata !DIExpression()), !dbg !16546
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16547
  %len1 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 5, !dbg !16548
  %1 = load i32, i32* %len1, align 8, !dbg !16548
  store i32 %1, i32* %size, align 4, !dbg !16546
  %2 = load i32, i32* %size, align 4, !dbg !16549
  %3 = load i32, i32* %len.addr, align 4, !dbg !16549
  %cmp = icmp ult i32 %2, %3, !dbg !16549
  %lnot = xor i1 %cmp, true, !dbg !16549
  %lnot2 = xor i1 %lnot, true, !dbg !16549
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !16549
  %conv = sext i32 %lnot.ext to i64, !dbg !16549
  %tobool = icmp ne i64 %conv, 0, !dbg !16549
  br i1 %tobool, label %if.then, label %if.end7, !dbg !16551

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %size, align 4, !dbg !16552
  %5 = load i32, i32* %len.addr, align 4, !dbg !16554
  %sub = sub i32 %5, %4, !dbg !16554
  store i32 %sub, i32* %len.addr, align 4, !dbg !16554
  %6 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16555
  %7 = load i32, i32* %len.addr, align 4, !dbg !16557
  %8 = load i8, i8* %free_on_error.addr, align 1, !dbg !16558
  %tobool3 = trunc i8 %8 to i1, !dbg !16558
  %call = call i32 @__skb_pad(%struct.sk_buff* %6, i32 %7, i1 zeroext %tobool3) #9, !dbg !16559
  %tobool4 = icmp ne i32 %call, 0, !dbg !16559
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !16560

if.then5:                                         ; preds = %if.then
  store i32 -12, i32* %retval, align 4, !dbg !16561
  br label %return, !dbg !16561

if.end:                                           ; preds = %if.then
  %9 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16562
  %10 = load i32, i32* %len.addr, align 4, !dbg !16563
  %call6 = call i8* @__skb_put(%struct.sk_buff* %9, i32 %10) #9, !dbg !16564
  br label %if.end7, !dbg !16565

if.end7:                                          ; preds = %if.end, %entry
  store i32 0, i32* %retval, align 4, !dbg !16566
  br label %return, !dbg !16566

return:                                           ; preds = %if.end7, %if.then5
  %11 = load i32, i32* %retval, align 4, !dbg !16567
  ret i32 %11, !dbg !16567
}

; Function Attrs: noredzone
declare dso_local i32 @__skb_pad(%struct.sk_buff*, i32, i1 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @__skb_put(%struct.sk_buff* %skb, i32 %len) #0 !dbg !16568 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %len.addr = alloca i32, align 4
  %tmp = alloca i8*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16571, metadata !DIExpression()), !dbg !16572
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !16573, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !16575, metadata !DIExpression()), !dbg !16576
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16577
  %call = call i8* @skb_tail_pointer(%struct.sk_buff* %0) #9, !dbg !16578
  store i8* %call, i8** %tmp, align 8, !dbg !16576
  br label %do.body, !dbg !16579

do.body:                                          ; preds = %entry
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16580
  %call1 = call zeroext i1 @skb_is_nonlinear(%struct.sk_buff* %1) #9, !dbg !16580
  %lnot = xor i1 %call1, true, !dbg !16580
  %lnot2 = xor i1 %lnot, true, !dbg !16580
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !16580
  %conv = sext i32 %lnot.ext to i64, !dbg !16580
  %tobool = icmp ne i64 %conv, 0, !dbg !16580
  br i1 %tobool, label %if.then, label %if.end, !dbg !16583

if.then:                                          ; preds = %do.body
  br label %do.body3, !dbg !16580

do.body3:                                         ; preds = %if.then
  br label %do.body4, !dbg !16584

do.body4:                                         ; preds = %do.body3
  br label %do.end, !dbg !16586

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !16584

do.body5:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.121, i64 0, i64 0), i32 2233, i32 0, i64 12) #10, !dbg !16588, !srcloc !16590
  br label %do.end6, !dbg !16588

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !16584

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 268) #10, !dbg !16591, !srcloc !16594
  unreachable, !dbg !16595

do.end8:                                          ; No predecessors!
  br label %do.end9, !dbg !16584

do.end9:                                          ; preds = %do.end8
  br label %if.end, !dbg !16584

if.end:                                           ; preds = %do.end9, %do.body
  br label %do.end10, !dbg !16583

do.end10:                                         ; preds = %if.end
  %2 = load i32, i32* %len.addr, align 4, !dbg !16596
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16597
  %tail = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %3, i32 0, i32 34, !dbg !16598
  %4 = load i32, i32* %tail, align 8, !dbg !16599
  %add = add i32 %4, %2, !dbg !16599
  store i32 %add, i32* %tail, align 8, !dbg !16599
  %5 = load i32, i32* %len.addr, align 4, !dbg !16600
  %6 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16601
  %len11 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %6, i32 0, i32 5, !dbg !16602
  %7 = load i32, i32* %len11, align 8, !dbg !16603
  %add12 = add i32 %7, %5, !dbg !16603
  store i32 %add12, i32* %len11, align 8, !dbg !16603
  %8 = load i8*, i8** %tmp, align 8, !dbg !16604
  ret i8* %8, !dbg !16605
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_tail_pointer(%struct.sk_buff* %skb) #0 !dbg !16606 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16607, metadata !DIExpression()), !dbg !16608
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16609
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 36, !dbg !16610
  %1 = load i8*, i8** %head, align 8, !dbg !16610
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16611
  %tail = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 34, !dbg !16612
  %3 = load i32, i32* %tail, align 8, !dbg !16612
  %idx.ext = zext i32 %3 to i64, !dbg !16613
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !16613
  ret i8* %add.ptr, !dbg !16614
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @skb_is_nonlinear(%struct.sk_buff* %skb) #0 !dbg !16615 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16618, metadata !DIExpression()), !dbg !16619
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16620
  %data_len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 6, !dbg !16621
  %1 = load i32, i32* %data_len, align 4, !dbg !16621
  %tobool = icmp ne i32 %1, 0, !dbg !16620
  ret i1 %tobool, !dbg !16622
}

; Function Attrs: noredzone
declare dso_local i8* @skb_push(%struct.sk_buff*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_tx_hdr_version_set(i8* %buf, i32 %val) #0 !dbg !16623 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16624, metadata !DIExpression()), !dbg !16625
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !16626, metadata !DIExpression()), !dbg !16625
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16625
  %1 = load i32, i32* %val.addr, align 4, !dbg !16625
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_tx_hdr_version_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !16625
  ret void, !dbg !16625
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_tx_hdr_ctl_set(i8* %buf, i32 %val) #0 !dbg !16627 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16628, metadata !DIExpression()), !dbg !16629
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !16630, metadata !DIExpression()), !dbg !16629
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16629
  %1 = load i32, i32* %val.addr, align 4, !dbg !16629
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_tx_hdr_ctl_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !16629
  ret void, !dbg !16629
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_tx_hdr_proto_set(i8* %buf, i32 %val) #0 !dbg !16631 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16632, metadata !DIExpression()), !dbg !16633
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !16634, metadata !DIExpression()), !dbg !16633
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16633
  %1 = load i32, i32* %val.addr, align 4, !dbg !16633
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_tx_hdr_proto_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !16633
  ret void, !dbg !16633
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_tx_hdr_swid_set(i8* %buf, i32 %val) #0 !dbg !16635 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16636, metadata !DIExpression()), !dbg !16637
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !16638, metadata !DIExpression()), !dbg !16637
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16637
  %1 = load i32, i32* %val.addr, align 4, !dbg !16637
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_tx_hdr_swid_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !16637
  ret void, !dbg !16637
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_tx_hdr_control_tclass_set(i8* %buf, i32 %val) #0 !dbg !16639 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16640, metadata !DIExpression()), !dbg !16641
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !16642, metadata !DIExpression()), !dbg !16641
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16641
  %1 = load i32, i32* %val.addr, align 4, !dbg !16641
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_tx_hdr_control_tclass_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !16641
  ret void, !dbg !16641
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_tx_hdr_port_mid_set(i8* %buf, i32 %val) #0 !dbg !16643 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16644, metadata !DIExpression()), !dbg !16645
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !16646, metadata !DIExpression()), !dbg !16645
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16645
  %1 = load i32, i32* %val.addr, align 4, !dbg !16645
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_tx_hdr_port_mid_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !16645
  ret void, !dbg !16645
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_tx_hdr_type_set(i8* %buf, i32 %val) #0 !dbg !16647 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16648, metadata !DIExpression()), !dbg !16649
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !16650, metadata !DIExpression()), !dbg !16649
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16649
  %1 = load i32, i32* %val.addr, align 4, !dbg !16649
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_tx_hdr_type_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !16649
  ret void, !dbg !16649
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_valid_ether_addr(i8* %addr) #0 !dbg !16651 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !16654, metadata !DIExpression()), !dbg !16655
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !16656
  %call = call zeroext i1 @is_multicast_ether_addr(i8* %0) #9, !dbg !16657
  br i1 %call, label %land.end, label %land.rhs, !dbg !16658

land.rhs:                                         ; preds = %entry
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !16659
  %call1 = call zeroext i1 @is_zero_ether_addr(i8* %1) #9, !dbg !16660
  %lnot = xor i1 %call1, true, !dbg !16661
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !16662
  ret i1 %2, !dbg !16663
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_dev_addr_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, i8* %addr) #0 !dbg !16664 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %addr.addr = alloca i8*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %ppad_pl = alloca [16 x i8], align 16
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !16667, metadata !DIExpression()), !dbg !16668
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !16669, metadata !DIExpression()), !dbg !16670
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !16671, metadata !DIExpression()), !dbg !16672
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !16673
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !16674
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !16674
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !16672
  call void @llvm.dbg.declare(metadata [16 x i8]* %ppad_pl, metadata !16675, metadata !DIExpression()), !dbg !16676
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %ppad_pl, i64 0, i64 0, !dbg !16677
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !16678
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %2, i32 0, i32 3, !dbg !16679
  %3 = load i8, i8* %local_port, align 8, !dbg !16679
  call void @mlxsw_reg_ppad_pack(i8* %arraydecay, i1 zeroext true, i8 zeroext %3) #9, !dbg !16680
  %arraydecay2 = getelementptr inbounds [16 x i8], [16 x i8]* %ppad_pl, i64 0, i64 0, !dbg !16681
  %4 = load i8*, i8** %addr.addr, align 8, !dbg !16682
  call void @mlxsw_reg_ppad_mac_memcpy_to(i8* %arraydecay2, i8* %4) #9, !dbg !16683
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !16684
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %5, i32 0, i32 1, !dbg !16685
  %6 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !16685
  %arraydecay3 = getelementptr inbounds [16 x i8], [16 x i8]* %ppad_pl, i64 0, i64 0, !dbg !16686
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %6, %struct.mlxsw_reg_info* @mlxsw_reg_ppad, i8* %arraydecay3) #9, !dbg !16687
  ret i32 %call, !dbg !16688
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_multicast_ether_addr(i8* %addr) #0 !dbg !16689 {
entry:
  %addr.addr = alloca i8*, align 8
  %a = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !16690, metadata !DIExpression()), !dbg !16691
  call void @llvm.dbg.declare(metadata i32* %a, metadata !16692, metadata !DIExpression()), !dbg !16693
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !16694
  %1 = bitcast i8* %0 to i32*, !dbg !16695
  %2 = load i32, i32* %1, align 4, !dbg !16695
  store i32 %2, i32* %a, align 4, !dbg !16693
  %3 = load i32, i32* %a, align 4, !dbg !16696
  %and = and i32 1, %3, !dbg !16697
  %tobool = icmp ne i32 %and, 0, !dbg !16698
  ret i1 %tobool, !dbg !16699
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_zero_ether_addr(i8* %addr) #0 !dbg !16700 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !16701, metadata !DIExpression()), !dbg !16702
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !16703
  %1 = bitcast i8* %0 to i32*, !dbg !16704
  %2 = load i32, i32* %1, align 4, !dbg !16704
  %3 = load i8*, i8** %addr.addr, align 8, !dbg !16705
  %add.ptr = getelementptr i8, i8* %3, i64 4, !dbg !16706
  %4 = bitcast i8* %add.ptr to i16*, !dbg !16707
  %5 = load i16, i16* %4, align 2, !dbg !16707
  %conv = zext i16 %5 to i32, !dbg !16708
  %or = or i32 %2, %conv, !dbg !16709
  %cmp = icmp eq i32 %or, 0, !dbg !16710
  ret i1 %cmp, !dbg !16711
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_ppad_pack(i8* %payload, i1 zeroext %single_base_mac, i8 zeroext %local_port) #0 !dbg !16712 {
entry:
  %payload.addr = alloca i8*, align 8
  %single_base_mac.addr = alloca i8, align 1
  %local_port.addr = alloca i8, align 1
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !16715, metadata !DIExpression()), !dbg !16716
  %frombool = zext i1 %single_base_mac to i8
  store i8 %frombool, i8* %single_base_mac.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %single_base_mac.addr, metadata !16717, metadata !DIExpression()), !dbg !16718
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !16719, metadata !DIExpression()), !dbg !16720
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !16721
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_ppad, i32 0, i32 1), align 2, !dbg !16721
  %conv = zext i16 %1 to i64, !dbg !16721
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !16721
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !16722
  %3 = load i8, i8* %single_base_mac.addr, align 1, !dbg !16723
  %tobool = trunc i8 %3 to i1, !dbg !16723
  %lnot = xor i1 %tobool, true, !dbg !16724
  %lnot1 = xor i1 %lnot, true, !dbg !16725
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !16725
  call void @mlxsw_reg_ppad_single_base_mac_set(i8* %2, i32 %lnot.ext) #9, !dbg !16726
  %4 = load i8*, i8** %payload.addr, align 8, !dbg !16727
  %5 = load i8, i8* %local_port.addr, align 1, !dbg !16728
  %conv2 = zext i8 %5 to i32, !dbg !16728
  call void @mlxsw_reg_ppad_local_port_set(i8* %4, i32 %conv2) #9, !dbg !16729
  ret void, !dbg !16730
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_ppad_mac_memcpy_to(i8* %buf, i8* %src) #0 !dbg !16731 {
entry:
  %buf.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16734, metadata !DIExpression()), !dbg !16735
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !16736, metadata !DIExpression()), !dbg !16735
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16735
  %1 = load i8*, i8** %src.addr, align 8, !dbg !16735
  call void @__mlxsw_item_memcpy_to(i8* %0, i8* %1, %struct.mlxsw_item* @mlxsw_reg_ppad_mac_item, i16 zeroext 0) #9, !dbg !16735
  ret void, !dbg !16735
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_ppad_single_base_mac_set(i8* %buf, i32 %val) #0 !dbg !16737 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16738, metadata !DIExpression()), !dbg !16739
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !16740, metadata !DIExpression()), !dbg !16739
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16739
  %1 = load i32, i32* %val.addr, align 4, !dbg !16739
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_ppad_single_base_mac_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !16739
  ret void, !dbg !16739
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_ppad_local_port_set(i8* %buf, i32 %val) #0 !dbg !16741 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16742, metadata !DIExpression()), !dbg !16743
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !16744, metadata !DIExpression()), !dbg !16743
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16743
  %1 = load i32, i32* %val.addr, align 4, !dbg !16743
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_ppad_local_port_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !16743
  ret void, !dbg !16743
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__mlxsw_item_memcpy_to(i8* %buf, i8* %src, %struct.mlxsw_item* %item, i16 zeroext %index) #0 !dbg !16745 {
entry:
  %buf.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %item.addr = alloca %struct.mlxsw_item*, align 8
  %index.addr = alloca i16, align 2
  %offset = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16748, metadata !DIExpression()), !dbg !16749
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !16750, metadata !DIExpression()), !dbg !16751
  store %struct.mlxsw_item* %item, %struct.mlxsw_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_item** %item.addr, metadata !16752, metadata !DIExpression()), !dbg !16753
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !16754, metadata !DIExpression()), !dbg !16755
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !16756, metadata !DIExpression()), !dbg !16757
  %0 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !16758
  %1 = load i16, i16* %index.addr, align 2, !dbg !16759
  %call = call i32 @__mlxsw_item_offset(%struct.mlxsw_item* %0, i16 zeroext %1, i64 1) #9, !dbg !16760
  store i32 %call, i32* %offset, align 4, !dbg !16757
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !16761
  %3 = load i32, i32* %offset, align 4, !dbg !16762
  %idxprom = zext i32 %3 to i64, !dbg !16761
  %arrayidx = getelementptr i8, i8* %2, i64 %idxprom, !dbg !16761
  %4 = load i8*, i8** %src.addr, align 8, !dbg !16763
  %5 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !16764
  %size = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %5, i32 0, i32 6, !dbg !16765
  %bytes = bitcast %union.anon.166* %size to i16*, !dbg !16766
  %6 = load i16, i16* %bytes, align 2, !dbg !16766
  %conv = zext i16 %6 to i64, !dbg !16764
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx, i8* align 1 %4, i64 %conv, i1 false), !dbg !16767
  ret void, !dbg !16768
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_hwtstamp_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.ifreq* %ifr) #0 !dbg !16769 {
entry:
  %retval.i.i11 = alloca i1, align 1
  %addr.addr.i.i12 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i12, metadata !16772, metadata !DIExpression()), !dbg !16777
  %bytes.addr.i.i13 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i13, metadata !16786, metadata !DIExpression()), !dbg !16787
  %is_source.addr.i.i14 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i14, metadata !16788, metadata !DIExpression()), !dbg !16789
  %sz.i.i15 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i15, metadata !16790, metadata !DIExpression()), !dbg !16791
  %__ret_warn_on.i.i16 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i16, metadata !16792, metadata !DIExpression()), !dbg !16795
  %tmp.i.i17 = alloca i64, align 8
  %to.addr.i18 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i18, metadata !16796, metadata !DIExpression()), !dbg !16797
  %from.addr.i19 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i19, metadata !16798, metadata !DIExpression()), !dbg !16799
  %n.addr.i20 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i20, metadata !16800, metadata !DIExpression()), !dbg !16801
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !16772, metadata !DIExpression()), !dbg !16802
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !16786, metadata !DIExpression()), !dbg !16808
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !16788, metadata !DIExpression()), !dbg !16809
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !16790, metadata !DIExpression()), !dbg !16810
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !16792, metadata !DIExpression()), !dbg !16811
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !16812, metadata !DIExpression()), !dbg !16813
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !16814, metadata !DIExpression()), !dbg !16815
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !16816, metadata !DIExpression()), !dbg !16817
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %ifr.addr = alloca %struct.ifreq*, align 8
  %config = alloca %struct.hwtstamp_config, align 4
  %err = alloca i32, align 4
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !16818, metadata !DIExpression()), !dbg !16819
  store %struct.ifreq* %ifr, %struct.ifreq** %ifr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ifreq** %ifr.addr, metadata !16820, metadata !DIExpression()), !dbg !16821
  call void @llvm.dbg.declare(metadata %struct.hwtstamp_config* %config, metadata !16822, metadata !DIExpression()), !dbg !16823
  call void @llvm.dbg.declare(metadata i32* %err, metadata !16824, metadata !DIExpression()), !dbg !16825
  %0 = bitcast %struct.hwtstamp_config* %config to i8*, !dbg !16826
  %1 = load %struct.ifreq*, %struct.ifreq** %ifr.addr, align 8, !dbg !16827
  %ifr_ifru = getelementptr inbounds %struct.ifreq, %struct.ifreq* %1, i32 0, i32 1, !dbg !16828
  %ifru_data = bitcast %union.anon.140* %ifr_ifru to i8**, !dbg !16828
  %2 = load i8*, i8** %ifru_data, align 8, !dbg !16828
  store i8* %0, i8** %to.addr.i, align 8
  store i8* %2, i8** %from.addr.i, align 8
  store i64 12, i64* %n.addr.i, align 8
  %3 = load i8*, i8** %to.addr.i, align 8, !dbg !16829
  %4 = load i64, i64* %n.addr.i, align 8, !dbg !16829
  store i8* %3, i8** %addr.addr.i.i, align 8
  store i64 %4, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !16810
  %5 = load i32, i32* %sz.i.i, align 4, !dbg !16830
  %cmp.i.i = icmp sge i32 %5, 0, !dbg !16830
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !16830

land.rhs.i.i:                                     ; preds = %entry
  %6 = load i32, i32* %sz.i.i, align 4, !dbg !16830
  %conv.i.i = sext i32 %6 to i64, !dbg !16830
  %7 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !16830
  %cmp1.i.i = icmp ult i64 %conv.i.i, %7, !dbg !16830
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %8 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !16832
  %lnot.i.i = xor i1 %8, true, !dbg !16830
  %lnot.ext.i.i = zext i1 %8 to i32, !dbg !16830
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !16830
  br i1 %8, label %if.then.i.i, label %if.end10.i.i, !dbg !16833

if.then.i.i:                                      ; preds = %land.end.i.i
  %9 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !16834
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #10, !dbg !16837
  br i1 %10, label %if.else.i.i, label %if.then5.i.i, !dbg !16838

if.then5.i.i:                                     ; preds = %if.then.i.i
  %11 = load i32, i32* %sz.i.i, align 4, !dbg !16839
  %12 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !16840
  call void @copy_overflow(i32 %11, i64 %12) #12, !dbg !16841
  br label %if.end9.i.i, !dbg !16841

if.else.i.i:                                      ; preds = %if.then.i.i
  %13 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !16842
  %tobool6.i.i = trunc i8 %13 to i1, !dbg !16842
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !16844

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #12, !dbg !16845
  br label %if.end.i.i, !dbg !16845

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #12, !dbg !16846
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !16847
  br label %check_copy_size.exit.i, !dbg !16847

if.end10.i.i:                                     ; preds = %land.end.i.i
  %14 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !16811
  %cmp11.i.i = icmp ugt i64 %14, 2147483647, !dbg !16811
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !16811
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !16811
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !16811
  %15 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !16848
  %tobool17.i.i = icmp ne i32 %15, 0, !dbg !16848
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !16848
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !16848
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !16848
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !16811

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.142, i64 0, i64 0), i32 150, i32 2307, i64 12) #10, !dbg !16850, !srcloc !16853
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #10, !dbg !16854, !srcloc !16856
  br label %if.end31.i.i, !dbg !16857

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %16 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !16811
  %tobool32.i.i = icmp ne i32 %16, 0, !dbg !16811
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !16811
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !16811
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !16811
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !16848
  %17 = load i64, i64* %tmp.i.i, align 8, !dbg !16811
  %tobool38.i.i = icmp ne i64 %17, 0, !dbg !16858
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !16859

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !16860
  br label %check_copy_size.exit.i, !dbg !16860

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %18 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !16861
  %19 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !16862
  %20 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !16863
  %tobool41.i.i = trunc i8 %20 to i1, !dbg !16863
  call void @check_object_size(i8* %18, i64 %19, i1 zeroext %tobool41.i.i) #12, !dbg !16864
  store i1 true, i1* %retval.i.i, align 1, !dbg !16865
  br label %check_copy_size.exit.i, !dbg !16865

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %21 = load i1, i1* %retval.i.i, align 1, !dbg !16866
  %lnot.i = xor i1 %21, true, !dbg !16829
  %lnot.ext.i = zext i1 %21 to i32, !dbg !16829
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !16829
  br i1 %21, label %if.then.i, label %copy_from_user.exit, !dbg !16867

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %22 = load i8*, i8** %to.addr.i, align 8, !dbg !16868
  %23 = load i8*, i8** %from.addr.i, align 8, !dbg !16869
  %24 = load i64, i64* %n.addr.i, align 8, !dbg !16870
  %call2.i = call i64 @_copy_from_user(i8* %22, i8* %23, i64 %24) #12, !dbg !16871
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !16872
  br label %copy_from_user.exit, !dbg !16873

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %25 = load i64, i64* %n.addr.i, align 8, !dbg !16874
  %tobool = icmp ne i64 %25, 0, !dbg !16875
  br i1 %tobool, label %if.then, label %if.end, !dbg !16876

if.then:                                          ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !16877
  br label %return, !dbg !16877

if.end:                                           ; preds = %copy_from_user.exit
  %26 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !16878
  %mlxsw_sp = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %26, i32 0, i32 2, !dbg !16879
  %27 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !16879
  %ptp_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %27, i32 0, i32 34, !dbg !16880
  %28 = load %struct.mlxsw_sp_ptp_ops*, %struct.mlxsw_sp_ptp_ops** %ptp_ops, align 8, !dbg !16880
  %hwtstamp_set = getelementptr inbounds %struct.mlxsw_sp_ptp_ops, %struct.mlxsw_sp_ptp_ops* %28, i32 0, i32 7, !dbg !16881
  %29 = load i32 (%struct.mlxsw_sp_port*, %struct.hwtstamp_config*)*, i32 (%struct.mlxsw_sp_port*, %struct.hwtstamp_config*)** %hwtstamp_set, align 8, !dbg !16881
  %30 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !16882
  %call1 = call i32 %29(%struct.mlxsw_sp_port* %30, %struct.hwtstamp_config* %config) #9, !dbg !16878
  store i32 %call1, i32* %err, align 4, !dbg !16883
  %31 = load i32, i32* %err, align 4, !dbg !16884
  %tobool2 = icmp ne i32 %31, 0, !dbg !16884
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !16886

if.then3:                                         ; preds = %if.end
  %32 = load i32, i32* %err, align 4, !dbg !16887
  store i32 %32, i32* %retval, align 4, !dbg !16888
  br label %return, !dbg !16888

if.end4:                                          ; preds = %if.end
  %33 = load %struct.ifreq*, %struct.ifreq** %ifr.addr, align 8, !dbg !16889
  %ifr_ifru5 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %33, i32 0, i32 1, !dbg !16890
  %ifru_data6 = bitcast %union.anon.140* %ifr_ifru5 to i8**, !dbg !16890
  %34 = load i8*, i8** %ifru_data6, align 8, !dbg !16890
  %35 = bitcast %struct.hwtstamp_config* %config to i8*, !dbg !16891
  store i8* %34, i8** %to.addr.i18, align 8
  store i8* %35, i8** %from.addr.i19, align 8
  store i64 12, i64* %n.addr.i20, align 8
  %36 = load i8*, i8** %from.addr.i19, align 8, !dbg !16892
  %37 = load i64, i64* %n.addr.i20, align 8, !dbg !16892
  store i8* %36, i8** %addr.addr.i.i12, align 8
  store i64 %37, i64* %bytes.addr.i.i13, align 8
  store i8 1, i8* %is_source.addr.i.i14, align 1
  store i32 -1, i32* %sz.i.i15, align 4, !dbg !16791
  %38 = load i32, i32* %sz.i.i15, align 4, !dbg !16893
  %cmp.i.i21 = icmp sge i32 %38, 0, !dbg !16893
  br i1 %cmp.i.i21, label %land.rhs.i.i24, label %land.end.i.i28, !dbg !16893

land.rhs.i.i24:                                   ; preds = %if.end4
  %39 = load i32, i32* %sz.i.i15, align 4, !dbg !16893
  %conv.i.i22 = sext i32 %39 to i64, !dbg !16893
  %40 = load i64, i64* %bytes.addr.i.i13, align 8, !dbg !16893
  %cmp1.i.i23 = icmp ult i64 %conv.i.i22, %40, !dbg !16893
  br label %land.end.i.i28

land.end.i.i28:                                   ; preds = %land.rhs.i.i24, %if.end4
  %41 = phi i1 [ false, %if.end4 ], [ %cmp1.i.i23, %land.rhs.i.i24 ], !dbg !16894
  %lnot.i.i25 = xor i1 %41, true, !dbg !16893
  %lnot.ext.i.i26 = zext i1 %41 to i32, !dbg !16893
  %conv4.i.i27 = sext i32 %lnot.ext.i.i26 to i64, !dbg !16893
  br i1 %41, label %if.then.i.i29, label %if.end10.i.i44, !dbg !16895

if.then.i.i29:                                    ; preds = %land.end.i.i28
  %42 = load i64, i64* %bytes.addr.i.i13, align 8, !dbg !16896
  %43 = call i1 @llvm.is.constant.i64(i64 %42) #10, !dbg !16897
  br i1 %43, label %if.else.i.i32, label %if.then5.i.i30, !dbg !16898

if.then5.i.i30:                                   ; preds = %if.then.i.i29
  %44 = load i32, i32* %sz.i.i15, align 4, !dbg !16899
  %45 = load i64, i64* %bytes.addr.i.i13, align 8, !dbg !16900
  call void @copy_overflow(i32 %44, i64 %45) #12, !dbg !16901
  br label %if.end9.i.i36, !dbg !16901

if.else.i.i32:                                    ; preds = %if.then.i.i29
  %46 = load i8, i8* %is_source.addr.i.i14, align 1, !dbg !16902
  %tobool6.i.i31 = trunc i8 %46 to i1, !dbg !16902
  br i1 %tobool6.i.i31, label %if.then7.i.i33, label %if.else8.i.i34, !dbg !16903

if.then7.i.i33:                                   ; preds = %if.else.i.i32
  call void @__bad_copy_from() #12, !dbg !16904
  br label %if.end.i.i35, !dbg !16904

if.else8.i.i34:                                   ; preds = %if.else.i.i32
  call void @__bad_copy_to() #12, !dbg !16905
  br label %if.end.i.i35

if.end.i.i35:                                     ; preds = %if.else8.i.i34, %if.then7.i.i33
  br label %if.end9.i.i36

if.end9.i.i36:                                    ; preds = %if.end.i.i35, %if.then5.i.i30
  store i1 false, i1* %retval.i.i11, align 1, !dbg !16906
  br label %check_copy_size.exit.i58, !dbg !16906

if.end10.i.i44:                                   ; preds = %land.end.i.i28
  %47 = load i64, i64* %bytes.addr.i.i13, align 8, !dbg !16795
  %cmp11.i.i37 = icmp ugt i64 %47, 2147483647, !dbg !16795
  %lnot13.i.i38 = xor i1 %cmp11.i.i37, true, !dbg !16795
  %lnot.ext16.i.i39 = zext i1 %cmp11.i.i37 to i32, !dbg !16795
  store i32 %lnot.ext16.i.i39, i32* %__ret_warn_on.i.i16, align 4, !dbg !16795
  %48 = load i32, i32* %__ret_warn_on.i.i16, align 4, !dbg !16907
  %tobool17.i.i40 = icmp ne i32 %48, 0, !dbg !16907
  %lnot18.i.i41 = xor i1 %tobool17.i.i40, true, !dbg !16907
  %lnot.ext21.i.i42 = zext i1 %tobool17.i.i40 to i32, !dbg !16907
  %conv22.i.i43 = sext i32 %lnot.ext21.i.i42 to i64, !dbg !16907
  br i1 %tobool17.i.i40, label %if.then24.i.i45, label %if.end31.i.i51, !dbg !16795

if.then24.i.i45:                                  ; preds = %if.end10.i.i44
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.142, i64 0, i64 0), i32 150, i32 2307, i64 12) #10, !dbg !16908, !srcloc !16853
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #10, !dbg !16909, !srcloc !16856
  br label %if.end31.i.i51, !dbg !16910

if.end31.i.i51:                                   ; preds = %if.then24.i.i45, %if.end10.i.i44
  %49 = load i32, i32* %__ret_warn_on.i.i16, align 4, !dbg !16795
  %tobool32.i.i46 = icmp ne i32 %49, 0, !dbg !16795
  %lnot33.i.i47 = xor i1 %tobool32.i.i46, true, !dbg !16795
  %lnot.ext36.i.i48 = zext i1 %tobool32.i.i46 to i32, !dbg !16795
  %conv37.i.i49 = sext i32 %lnot.ext36.i.i48 to i64, !dbg !16795
  store i64 %conv37.i.i49, i64* %tmp.i.i17, align 8, !dbg !16907
  %50 = load i64, i64* %tmp.i.i17, align 8, !dbg !16795
  %tobool38.i.i50 = icmp ne i64 %50, 0, !dbg !16911
  br i1 %tobool38.i.i50, label %if.then39.i.i52, label %if.end40.i.i54, !dbg !16912

if.then39.i.i52:                                  ; preds = %if.end31.i.i51
  store i1 false, i1* %retval.i.i11, align 1, !dbg !16913
  br label %check_copy_size.exit.i58, !dbg !16913

if.end40.i.i54:                                   ; preds = %if.end31.i.i51
  %51 = load i8*, i8** %addr.addr.i.i12, align 8, !dbg !16914
  %52 = load i64, i64* %bytes.addr.i.i13, align 8, !dbg !16915
  %53 = load i8, i8* %is_source.addr.i.i14, align 1, !dbg !16916
  %tobool41.i.i53 = trunc i8 %53 to i1, !dbg !16916
  call void @check_object_size(i8* %51, i64 %52, i1 zeroext %tobool41.i.i53) #12, !dbg !16917
  store i1 true, i1* %retval.i.i11, align 1, !dbg !16918
  br label %check_copy_size.exit.i58, !dbg !16918

check_copy_size.exit.i58:                         ; preds = %if.end40.i.i54, %if.then39.i.i52, %if.end9.i.i36
  %54 = load i1, i1* %retval.i.i11, align 1, !dbg !16919
  %lnot.i55 = xor i1 %54, true, !dbg !16892
  %lnot.ext.i56 = zext i1 %54 to i32, !dbg !16892
  %conv.i57 = sext i32 %lnot.ext.i56 to i64, !dbg !16892
  br i1 %54, label %if.then.i60, label %copy_to_user.exit, !dbg !16920

if.then.i60:                                      ; preds = %check_copy_size.exit.i58
  %55 = load i8*, i8** %to.addr.i18, align 8, !dbg !16921
  %56 = load i8*, i8** %from.addr.i19, align 8, !dbg !16922
  %57 = load i64, i64* %n.addr.i20, align 8, !dbg !16923
  %call2.i59 = call i64 @_copy_to_user(i8* %55, i8* %56, i64 %57) #12, !dbg !16924
  store i64 %call2.i59, i64* %n.addr.i20, align 8, !dbg !16925
  br label %copy_to_user.exit, !dbg !16926

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i58, %if.then.i60
  %58 = load i64, i64* %n.addr.i20, align 8, !dbg !16927
  %tobool8 = icmp ne i64 %58, 0, !dbg !16928
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !16929

if.then9:                                         ; preds = %copy_to_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !16930
  br label %return, !dbg !16930

if.end10:                                         ; preds = %copy_to_user.exit
  store i32 0, i32* %retval, align 4, !dbg !16931
  br label %return, !dbg !16931

return:                                           ; preds = %if.end10, %if.then9, %if.then3, %if.then
  %59 = load i32, i32* %retval, align 4, !dbg !16932
  ret i32 %59, !dbg !16932
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_hwtstamp_get(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.ifreq* %ifr) #0 !dbg !16933 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !16772, metadata !DIExpression()), !dbg !16934
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !16786, metadata !DIExpression()), !dbg !16938
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !16788, metadata !DIExpression()), !dbg !16939
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !16790, metadata !DIExpression()), !dbg !16940
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !16792, metadata !DIExpression()), !dbg !16941
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !16796, metadata !DIExpression()), !dbg !16942
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !16798, metadata !DIExpression()), !dbg !16943
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !16800, metadata !DIExpression()), !dbg !16944
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %ifr.addr = alloca %struct.ifreq*, align 8
  %config = alloca %struct.hwtstamp_config, align 4
  %err = alloca i32, align 4
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !16945, metadata !DIExpression()), !dbg !16946
  store %struct.ifreq* %ifr, %struct.ifreq** %ifr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ifreq** %ifr.addr, metadata !16947, metadata !DIExpression()), !dbg !16948
  call void @llvm.dbg.declare(metadata %struct.hwtstamp_config* %config, metadata !16949, metadata !DIExpression()), !dbg !16950
  call void @llvm.dbg.declare(metadata i32* %err, metadata !16951, metadata !DIExpression()), !dbg !16952
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !16953
  %mlxsw_sp = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !16954
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !16954
  %ptp_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %1, i32 0, i32 34, !dbg !16955
  %2 = load %struct.mlxsw_sp_ptp_ops*, %struct.mlxsw_sp_ptp_ops** %ptp_ops, align 8, !dbg !16955
  %hwtstamp_get = getelementptr inbounds %struct.mlxsw_sp_ptp_ops, %struct.mlxsw_sp_ptp_ops* %2, i32 0, i32 6, !dbg !16956
  %3 = load i32 (%struct.mlxsw_sp_port*, %struct.hwtstamp_config*)*, i32 (%struct.mlxsw_sp_port*, %struct.hwtstamp_config*)** %hwtstamp_get, align 8, !dbg !16956
  %4 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !16957
  %call = call i32 %3(%struct.mlxsw_sp_port* %4, %struct.hwtstamp_config* %config) #9, !dbg !16953
  store i32 %call, i32* %err, align 4, !dbg !16958
  %5 = load i32, i32* %err, align 4, !dbg !16959
  %tobool = icmp ne i32 %5, 0, !dbg !16959
  br i1 %tobool, label %if.then, label %if.end, !dbg !16961

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %err, align 4, !dbg !16962
  store i32 %6, i32* %retval, align 4, !dbg !16963
  br label %return, !dbg !16963

if.end:                                           ; preds = %entry
  %7 = load %struct.ifreq*, %struct.ifreq** %ifr.addr, align 8, !dbg !16964
  %ifr_ifru = getelementptr inbounds %struct.ifreq, %struct.ifreq* %7, i32 0, i32 1, !dbg !16965
  %ifru_data = bitcast %union.anon.140* %ifr_ifru to i8**, !dbg !16965
  %8 = load i8*, i8** %ifru_data, align 8, !dbg !16965
  %9 = bitcast %struct.hwtstamp_config* %config to i8*, !dbg !16966
  store i8* %8, i8** %to.addr.i, align 8
  store i8* %9, i8** %from.addr.i, align 8
  store i64 12, i64* %n.addr.i, align 8
  %10 = load i8*, i8** %from.addr.i, align 8, !dbg !16967
  %11 = load i64, i64* %n.addr.i, align 8, !dbg !16967
  store i8* %10, i8** %addr.addr.i.i, align 8
  store i64 %11, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !16940
  %12 = load i32, i32* %sz.i.i, align 4, !dbg !16968
  %cmp.i.i = icmp sge i32 %12, 0, !dbg !16968
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !16968

land.rhs.i.i:                                     ; preds = %if.end
  %13 = load i32, i32* %sz.i.i, align 4, !dbg !16968
  %conv.i.i = sext i32 %13 to i64, !dbg !16968
  %14 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !16968
  %cmp1.i.i = icmp ult i64 %conv.i.i, %14, !dbg !16968
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.end
  %15 = phi i1 [ false, %if.end ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !16969
  %lnot.i.i = xor i1 %15, true, !dbg !16968
  %lnot.ext.i.i = zext i1 %15 to i32, !dbg !16968
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !16968
  br i1 %15, label %if.then.i.i, label %if.end10.i.i, !dbg !16970

if.then.i.i:                                      ; preds = %land.end.i.i
  %16 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !16971
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #10, !dbg !16972
  br i1 %17, label %if.else.i.i, label %if.then5.i.i, !dbg !16973

if.then5.i.i:                                     ; preds = %if.then.i.i
  %18 = load i32, i32* %sz.i.i, align 4, !dbg !16974
  %19 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !16975
  call void @copy_overflow(i32 %18, i64 %19) #12, !dbg !16976
  br label %if.end9.i.i, !dbg !16976

if.else.i.i:                                      ; preds = %if.then.i.i
  %20 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !16977
  %tobool6.i.i = trunc i8 %20 to i1, !dbg !16977
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !16978

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #12, !dbg !16979
  br label %if.end.i.i, !dbg !16979

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #12, !dbg !16980
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !16981
  br label %check_copy_size.exit.i, !dbg !16981

if.end10.i.i:                                     ; preds = %land.end.i.i
  %21 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !16941
  %cmp11.i.i = icmp ugt i64 %21, 2147483647, !dbg !16941
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !16941
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !16941
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !16941
  %22 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !16982
  %tobool17.i.i = icmp ne i32 %22, 0, !dbg !16982
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !16982
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !16982
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !16982
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !16941

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.142, i64 0, i64 0), i32 150, i32 2307, i64 12) #10, !dbg !16983, !srcloc !16853
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #10, !dbg !16984, !srcloc !16856
  br label %if.end31.i.i, !dbg !16985

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %23 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !16941
  %tobool32.i.i = icmp ne i32 %23, 0, !dbg !16941
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !16941
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !16941
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !16941
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !16982
  %24 = load i64, i64* %tmp.i.i, align 8, !dbg !16941
  %tobool38.i.i = icmp ne i64 %24, 0, !dbg !16986
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !16987

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !16988
  br label %check_copy_size.exit.i, !dbg !16988

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %25 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !16989
  %26 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !16990
  %27 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !16991
  %tobool41.i.i = trunc i8 %27 to i1, !dbg !16991
  call void @check_object_size(i8* %25, i64 %26, i1 zeroext %tobool41.i.i) #12, !dbg !16992
  store i1 true, i1* %retval.i.i, align 1, !dbg !16993
  br label %check_copy_size.exit.i, !dbg !16993

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %28 = load i1, i1* %retval.i.i, align 1, !dbg !16994
  %lnot.i = xor i1 %28, true, !dbg !16967
  %lnot.ext.i = zext i1 %28 to i32, !dbg !16967
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !16967
  br i1 %28, label %if.then.i, label %copy_to_user.exit, !dbg !16995

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %29 = load i8*, i8** %to.addr.i, align 8, !dbg !16996
  %30 = load i8*, i8** %from.addr.i, align 8, !dbg !16997
  %31 = load i64, i64* %n.addr.i, align 8, !dbg !16998
  %call2.i = call i64 @_copy_to_user(i8* %29, i8* %30, i64 %31) #12, !dbg !16999
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !17000
  br label %copy_to_user.exit, !dbg !17001

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %32 = load i64, i64* %n.addr.i, align 8, !dbg !17002
  %tobool2 = icmp ne i64 %32, 0, !dbg !17003
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !17004

if.then3:                                         ; preds = %copy_to_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !17005
  br label %return, !dbg !17005

if.end4:                                          ; preds = %copy_to_user.exit
  store i32 0, i32* %retval, align 4, !dbg !17006
  br label %return, !dbg !17006

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !17007
  ret i32 %33, !dbg !17007
}

; Function Attrs: noredzone
declare dso_local i64 @_copy_from_user(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @copy_overflow(i32 %size, i64 %count) #0 !dbg !17008 {
entry:
  %size.addr = alloca i32, align 4
  %count.addr = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !17011, metadata !DIExpression()), !dbg !17012
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !17013, metadata !DIExpression()), !dbg !17014
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !17015, metadata !DIExpression()), !dbg !17017
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !17017
  %0 = load i32, i32* %__ret_warn_on, align 4, !dbg !17018
  %tobool = icmp ne i32 %0, 0, !dbg !17018
  %lnot = xor i1 %tobool, true, !dbg !17018
  %lnot1 = xor i1 %lnot, true, !dbg !17018
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !17018
  %conv = sext i32 %lnot.ext to i64, !dbg !17018
  %tobool2 = icmp ne i64 %conv, 0, !dbg !17018
  br i1 %tobool2, label %if.then, label %if.end, !dbg !17017

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !17018

do.body:                                          ; preds = %if.then
  br label %do.body3, !dbg !17020

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !17022

do.end:                                           ; preds = %do.body3
  %1 = load i32, i32* %size.addr, align 4, !dbg !17020
  %2 = load i64, i64* %count.addr, align 8, !dbg !17020
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.143, i64 0, i64 0), i32 %1, i64 %2) #9, !dbg !17020
  br label %do.body4, !dbg !17020

do.body4:                                         ; preds = %do.end
  br label %do.body5, !dbg !17024

do.body5:                                         ; preds = %do.body4
  br label %do.end6, !dbg !17026

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !17024

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.142, i64 0, i64 0), i32 134, i32 2313, i64 12) #10, !dbg !17028, !srcloc !17030
  br label %do.end8, !dbg !17028

do.end8:                                          ; preds = %do.body7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 38) #10, !dbg !17031, !srcloc !17033
  br label %do.body9, !dbg !17024

do.body9:                                         ; preds = %do.end8
  br label %do.end10, !dbg !17034

do.end10:                                         ; preds = %do.body9
  br label %do.end11, !dbg !17024

do.end11:                                         ; preds = %do.end10
  br label %do.body12, !dbg !17020

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !17036

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !17020

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !17020

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !17017
  %tobool15 = icmp ne i32 %3, 0, !dbg !17017
  %lnot16 = xor i1 %tobool15, true, !dbg !17017
  %lnot18 = xor i1 %lnot16, true, !dbg !17017
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !17017
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !17017
  store i64 %conv20, i64* %tmp, align 8, !dbg !17018
  %4 = load i64, i64* %tmp, align 8, !dbg !17017
  ret void, !dbg !17038
}

; Function Attrs: noredzone
declare dso_local void @__bad_copy_from() #2

; Function Attrs: noredzone
declare dso_local void @__bad_copy_to() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @check_object_size(i8* %ptr, i64 %n, i1 zeroext %to_user) #0 !dbg !17039 {
entry:
  %ptr.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %to_user.addr = alloca i8, align 1
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !17042, metadata !DIExpression()), !dbg !17043
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17044, metadata !DIExpression()), !dbg !17045
  %frombool = zext i1 %to_user to i8
  store i8 %frombool, i8* %to_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %to_user.addr, metadata !17046, metadata !DIExpression()), !dbg !17047
  ret void, !dbg !17048
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i64 @_copy_to_user(i8*, i8*, i64) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_hdroom_bufs_reset_sizes(%struct.mlxsw_sp_port*, %struct.mlxsw_sp_hdroom*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_hdroom_configure(%struct.mlxsw_sp_port*, %struct.mlxsw_sp_hdroom*) #2

; Function Attrs: cold noredzone
declare dso_local void @netdev_err(%struct.net_device*, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_mtu_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, i16 zeroext %mtu) #0 !dbg !17049 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %mtu.addr = alloca i16, align 2
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %pmtu_pl = alloca [16 x i8], align 16
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !17050, metadata !DIExpression()), !dbg !17051
  store i16 %mtu, i16* %mtu.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %mtu.addr, metadata !17052, metadata !DIExpression()), !dbg !17053
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !17054, metadata !DIExpression()), !dbg !17055
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !17056
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !17057
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !17057
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17055
  call void @llvm.dbg.declare(metadata [16 x i8]* %pmtu_pl, metadata !17058, metadata !DIExpression()), !dbg !17059
  %2 = load i16, i16* %mtu.addr, align 2, !dbg !17060
  %conv = zext i16 %2 to i32, !dbg !17060
  %add = add i32 %conv, 30, !dbg !17060
  %conv2 = trunc i32 %add to i16, !dbg !17060
  store i16 %conv2, i16* %mtu.addr, align 2, !dbg !17060
  %3 = load i16, i16* %mtu.addr, align 2, !dbg !17061
  %conv3 = zext i16 %3 to i32, !dbg !17061
  %4 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !17063
  %max_mtu = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %4, i32 0, i32 20, !dbg !17064
  %5 = load i32, i32* %max_mtu, align 4, !dbg !17064
  %cmp = icmp sgt i32 %conv3, %5, !dbg !17065
  br i1 %cmp, label %if.then, label %if.end, !dbg !17066

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !17067
  br label %return, !dbg !17067

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %pmtu_pl, i64 0, i64 0, !dbg !17068
  %6 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !17069
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %6, i32 0, i32 3, !dbg !17070
  %7 = load i8, i8* %local_port, align 8, !dbg !17070
  %8 = load i16, i16* %mtu.addr, align 2, !dbg !17071
  call void @mlxsw_reg_pmtu_pack(i8* %arraydecay, i8 zeroext %7, i16 zeroext %8) #9, !dbg !17072
  %9 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17073
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %9, i32 0, i32 1, !dbg !17074
  %10 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !17074
  %arraydecay5 = getelementptr inbounds [16 x i8], [16 x i8]* %pmtu_pl, i64 0, i64 0, !dbg !17075
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %10, %struct.mlxsw_reg_info* @mlxsw_reg_pmtu, i8* %arraydecay5) #9, !dbg !17076
  store i32 %call, i32* %retval, align 4, !dbg !17077
  br label %return, !dbg !17077

return:                                           ; preds = %if.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !17078
  ret i32 %11, !dbg !17078
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_pmtu_pack(i8* %payload, i8 zeroext %local_port, i16 zeroext %new_mtu) #0 !dbg !17079 {
entry:
  %payload.addr = alloca i8*, align 8
  %local_port.addr = alloca i8, align 1
  %new_mtu.addr = alloca i16, align 2
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !17080, metadata !DIExpression()), !dbg !17081
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !17082, metadata !DIExpression()), !dbg !17083
  store i16 %new_mtu, i16* %new_mtu.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %new_mtu.addr, metadata !17084, metadata !DIExpression()), !dbg !17085
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !17086
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_pmtu, i32 0, i32 1), align 2, !dbg !17086
  %conv = zext i16 %1 to i64, !dbg !17086
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !17086
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !17087
  %3 = load i8, i8* %local_port.addr, align 1, !dbg !17088
  %conv1 = zext i8 %3 to i32, !dbg !17088
  call void @mlxsw_reg_pmtu_local_port_set(i8* %2, i32 %conv1) #9, !dbg !17089
  %4 = load i8*, i8** %payload.addr, align 8, !dbg !17090
  call void @mlxsw_reg_pmtu_max_mtu_set(i8* %4, i32 0) #9, !dbg !17091
  %5 = load i8*, i8** %payload.addr, align 8, !dbg !17092
  %6 = load i16, i16* %new_mtu.addr, align 2, !dbg !17093
  %conv2 = zext i16 %6 to i32, !dbg !17093
  call void @mlxsw_reg_pmtu_admin_mtu_set(i8* %5, i32 %conv2) #9, !dbg !17094
  %7 = load i8*, i8** %payload.addr, align 8, !dbg !17095
  call void @mlxsw_reg_pmtu_oper_mtu_set(i8* %7, i32 0) #9, !dbg !17096
  ret void, !dbg !17097
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_pmtu_local_port_set(i8* %buf, i32 %val) #0 !dbg !17098 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !17099, metadata !DIExpression()), !dbg !17100
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !17101, metadata !DIExpression()), !dbg !17100
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !17100
  %1 = load i32, i32* %val.addr, align 4, !dbg !17100
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_pmtu_local_port_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !17100
  ret void, !dbg !17100
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_pmtu_max_mtu_set(i8* %buf, i32 %val) #0 !dbg !17102 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !17103, metadata !DIExpression()), !dbg !17104
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !17105, metadata !DIExpression()), !dbg !17104
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !17104
  %1 = load i32, i32* %val.addr, align 4, !dbg !17104
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_pmtu_max_mtu_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !17104
  ret void, !dbg !17104
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_pmtu_admin_mtu_set(i8* %buf, i32 %val) #0 !dbg !17106 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !17107, metadata !DIExpression()), !dbg !17108
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !17109, metadata !DIExpression()), !dbg !17108
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !17108
  %1 = load i32, i32* %val.addr, align 4, !dbg !17108
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_pmtu_admin_mtu_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !17108
  ret void, !dbg !17108
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_pmtu_oper_mtu_set(i8* %buf, i32 %val) #0 !dbg !17110 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !17111, metadata !DIExpression()), !dbg !17112
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !17113, metadata !DIExpression()), !dbg !17112
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !17112
  %1 = load i32, i32* %val.addr, align 4, !dbg !17112
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_pmtu_oper_mtu_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !17112
  ret void, !dbg !17112
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_get_sw_stats64(%struct.net_device* %dev, %struct.rtnl_link_stats64* %stats) #0 !dbg !17114 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %stats.addr = alloca %struct.rtnl_link_stats64*, align 8
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %p = alloca %struct.mlxsw_sp_port_pcpu_stats*, align 8
  %rx_packets = alloca i64, align 8
  %rx_bytes = alloca i64, align 8
  %tx_packets = alloca i64, align 8
  %tx_bytes = alloca i64, align 8
  %tx_dropped = alloca i32, align 4
  %start = alloca i32, align 4
  %i = alloca i32, align 4
  %tmp = alloca %struct.mlxsw_sp_port_pcpu_stats*, align 8
  %__vpp_verify = alloca i8*, align 8
  %tmp1 = alloca %struct.mlxsw_sp_port_pcpu_stats*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17117, metadata !DIExpression()), !dbg !17118
  store %struct.rtnl_link_stats64* %stats, %struct.rtnl_link_stats64** %stats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtnl_link_stats64** %stats.addr, metadata !17119, metadata !DIExpression()), !dbg !17120
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !17121, metadata !DIExpression()), !dbg !17122
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17123
  %call = call i8* @netdev_priv(%struct.net_device* %0) #9, !dbg !17124
  %1 = bitcast i8* %call to %struct.mlxsw_sp_port*, !dbg !17124
  store %struct.mlxsw_sp_port* %1, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17122
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_pcpu_stats** %p, metadata !17125, metadata !DIExpression()), !dbg !17126
  call void @llvm.dbg.declare(metadata i64* %rx_packets, metadata !17127, metadata !DIExpression()), !dbg !17128
  call void @llvm.dbg.declare(metadata i64* %rx_bytes, metadata !17129, metadata !DIExpression()), !dbg !17130
  call void @llvm.dbg.declare(metadata i64* %tx_packets, metadata !17131, metadata !DIExpression()), !dbg !17132
  call void @llvm.dbg.declare(metadata i64* %tx_bytes, metadata !17133, metadata !DIExpression()), !dbg !17134
  call void @llvm.dbg.declare(metadata i32* %tx_dropped, metadata !17135, metadata !DIExpression()), !dbg !17136
  store i32 0, i32* %tx_dropped, align 4, !dbg !17136
  call void @llvm.dbg.declare(metadata i32* %start, metadata !17137, metadata !DIExpression()), !dbg !17138
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17139, metadata !DIExpression()), !dbg !17140
  store i32 0, i32* %i, align 4, !dbg !17141
  br label %for.cond, !dbg !17141

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !17143
  %cmp = icmp slt i32 %2, 1, !dbg !17143
  br i1 %cmp, label %for.body, label %for.end, !dbg !17141

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !17145
  br label %do.body, !dbg !17148

do.body:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !17150, metadata !DIExpression()), !dbg !17152
  store i8* null, i8** %__vpp_verify, align 8, !dbg !17152
  %4 = load i8*, i8** %__vpp_verify, align 8, !dbg !17152
  br label %do.end, !dbg !17152

do.end:                                           ; preds = %do.body
  %5 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17148
  %pcpu_stats = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %5, i32 0, i32 1, !dbg !17148
  %6 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %pcpu_stats, align 8, !dbg !17148
  store %struct.mlxsw_sp_port_pcpu_stats* %6, %struct.mlxsw_sp_port_pcpu_stats** %tmp1, align 8, !dbg !17152
  %7 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %tmp1, align 8, !dbg !17148
  store %struct.mlxsw_sp_port_pcpu_stats* %7, %struct.mlxsw_sp_port_pcpu_stats** %tmp, align 8, !dbg !17145
  %8 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %tmp, align 8, !dbg !17145
  store %struct.mlxsw_sp_port_pcpu_stats* %8, %struct.mlxsw_sp_port_pcpu_stats** %p, align 8, !dbg !17153
  br label %do.body2, !dbg !17154

do.body2:                                         ; preds = %do.cond, %do.end
  %9 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %p, align 8, !dbg !17155
  %syncp = getelementptr inbounds %struct.mlxsw_sp_port_pcpu_stats, %struct.mlxsw_sp_port_pcpu_stats* %9, i32 0, i32 4, !dbg !17157
  %call3 = call i32 @u64_stats_fetch_begin_irq(%struct.u64_stats_sync* %syncp) #9, !dbg !17158
  store i32 %call3, i32* %start, align 4, !dbg !17159
  %10 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %p, align 8, !dbg !17160
  %rx_packets4 = getelementptr inbounds %struct.mlxsw_sp_port_pcpu_stats, %struct.mlxsw_sp_port_pcpu_stats* %10, i32 0, i32 0, !dbg !17161
  %11 = load i64, i64* %rx_packets4, align 8, !dbg !17161
  store i64 %11, i64* %rx_packets, align 8, !dbg !17162
  %12 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %p, align 8, !dbg !17163
  %rx_bytes5 = getelementptr inbounds %struct.mlxsw_sp_port_pcpu_stats, %struct.mlxsw_sp_port_pcpu_stats* %12, i32 0, i32 1, !dbg !17164
  %13 = load i64, i64* %rx_bytes5, align 8, !dbg !17164
  store i64 %13, i64* %rx_bytes, align 8, !dbg !17165
  %14 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %p, align 8, !dbg !17166
  %tx_packets6 = getelementptr inbounds %struct.mlxsw_sp_port_pcpu_stats, %struct.mlxsw_sp_port_pcpu_stats* %14, i32 0, i32 2, !dbg !17167
  %15 = load i64, i64* %tx_packets6, align 8, !dbg !17167
  store i64 %15, i64* %tx_packets, align 8, !dbg !17168
  %16 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %p, align 8, !dbg !17169
  %tx_bytes7 = getelementptr inbounds %struct.mlxsw_sp_port_pcpu_stats, %struct.mlxsw_sp_port_pcpu_stats* %16, i32 0, i32 3, !dbg !17170
  %17 = load i64, i64* %tx_bytes7, align 8, !dbg !17170
  store i64 %17, i64* %tx_bytes, align 8, !dbg !17171
  br label %do.cond, !dbg !17172

do.cond:                                          ; preds = %do.body2
  %18 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %p, align 8, !dbg !17173
  %syncp8 = getelementptr inbounds %struct.mlxsw_sp_port_pcpu_stats, %struct.mlxsw_sp_port_pcpu_stats* %18, i32 0, i32 4, !dbg !17174
  %19 = load i32, i32* %start, align 4, !dbg !17175
  %call9 = call zeroext i1 @u64_stats_fetch_retry_irq(%struct.u64_stats_sync* %syncp8, i32 %19) #9, !dbg !17176
  br i1 %call9, label %do.body2, label %do.end10, !dbg !17172, !llvm.loop !17177

do.end10:                                         ; preds = %do.cond
  %20 = load i64, i64* %rx_packets, align 8, !dbg !17179
  %21 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !17180
  %rx_packets11 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %21, i32 0, i32 0, !dbg !17181
  %22 = load i64, i64* %rx_packets11, align 8, !dbg !17182
  %add = add i64 %22, %20, !dbg !17182
  store i64 %add, i64* %rx_packets11, align 8, !dbg !17182
  %23 = load i64, i64* %rx_bytes, align 8, !dbg !17183
  %24 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !17184
  %rx_bytes12 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %24, i32 0, i32 2, !dbg !17185
  %25 = load i64, i64* %rx_bytes12, align 8, !dbg !17186
  %add13 = add i64 %25, %23, !dbg !17186
  store i64 %add13, i64* %rx_bytes12, align 8, !dbg !17186
  %26 = load i64, i64* %tx_packets, align 8, !dbg !17187
  %27 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !17188
  %tx_packets14 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %27, i32 0, i32 1, !dbg !17189
  %28 = load i64, i64* %tx_packets14, align 8, !dbg !17190
  %add15 = add i64 %28, %26, !dbg !17190
  store i64 %add15, i64* %tx_packets14, align 8, !dbg !17190
  %29 = load i64, i64* %tx_bytes, align 8, !dbg !17191
  %30 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !17192
  %tx_bytes16 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %30, i32 0, i32 3, !dbg !17193
  %31 = load i64, i64* %tx_bytes16, align 8, !dbg !17194
  %add17 = add i64 %31, %29, !dbg !17194
  store i64 %add17, i64* %tx_bytes16, align 8, !dbg !17194
  %32 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %p, align 8, !dbg !17195
  %tx_dropped18 = getelementptr inbounds %struct.mlxsw_sp_port_pcpu_stats, %struct.mlxsw_sp_port_pcpu_stats* %32, i32 0, i32 5, !dbg !17196
  %33 = load i32, i32* %tx_dropped18, align 8, !dbg !17196
  %34 = load i32, i32* %tx_dropped, align 4, !dbg !17197
  %add19 = add i32 %34, %33, !dbg !17197
  store i32 %add19, i32* %tx_dropped, align 4, !dbg !17197
  br label %for.inc, !dbg !17198

for.inc:                                          ; preds = %do.end10
  %35 = load i32, i32* %i, align 4, !dbg !17143
  %inc = add i32 %35, 1, !dbg !17143
  store i32 %inc, i32* %i, align 4, !dbg !17143
  br label %for.cond, !dbg !17143, !llvm.loop !17199

for.end:                                          ; preds = %for.cond
  %36 = load i32, i32* %tx_dropped, align 4, !dbg !17201
  %conv = zext i32 %36 to i64, !dbg !17201
  %37 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !17202
  %tx_dropped20 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %37, i32 0, i32 7, !dbg !17203
  store i64 %conv, i64* %tx_dropped20, align 8, !dbg !17204
  ret i32 0, !dbg !17205
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @u64_stats_fetch_begin_irq(%struct.u64_stats_sync* %syncp) #0 !dbg !17206 {
entry:
  %syncp.addr = alloca %struct.u64_stats_sync*, align 8
  store %struct.u64_stats_sync* %syncp, %struct.u64_stats_sync** %syncp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.u64_stats_sync** %syncp.addr, metadata !17211, metadata !DIExpression()), !dbg !17212
  %0 = load %struct.u64_stats_sync*, %struct.u64_stats_sync** %syncp.addr, align 8, !dbg !17213
  %call = call i32 @__u64_stats_fetch_begin(%struct.u64_stats_sync* %0) #9, !dbg !17214
  ret i32 %call, !dbg !17215
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @u64_stats_fetch_retry_irq(%struct.u64_stats_sync* %syncp, i32 %start) #0 !dbg !17216 {
entry:
  %syncp.addr = alloca %struct.u64_stats_sync*, align 8
  %start.addr = alloca i32, align 4
  store %struct.u64_stats_sync* %syncp, %struct.u64_stats_sync** %syncp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.u64_stats_sync** %syncp.addr, metadata !17219, metadata !DIExpression()), !dbg !17220
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !17221, metadata !DIExpression()), !dbg !17222
  %0 = load %struct.u64_stats_sync*, %struct.u64_stats_sync** %syncp.addr, align 8, !dbg !17223
  %1 = load i32, i32* %start.addr, align 4, !dbg !17224
  %call = call zeroext i1 @__u64_stats_fetch_retry(%struct.u64_stats_sync* %0, i32 %1) #9, !dbg !17225
  ret i1 %call, !dbg !17226
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__u64_stats_fetch_begin(%struct.u64_stats_sync* %syncp) #0 !dbg !17227 {
entry:
  %syncp.addr = alloca %struct.u64_stats_sync*, align 8
  store %struct.u64_stats_sync* %syncp, %struct.u64_stats_sync** %syncp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.u64_stats_sync** %syncp.addr, metadata !17228, metadata !DIExpression()), !dbg !17229
  ret i32 0, !dbg !17230
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__u64_stats_fetch_retry(%struct.u64_stats_sync* %syncp, i32 %start) #0 !dbg !17231 {
entry:
  %syncp.addr = alloca %struct.u64_stats_sync*, align 8
  %start.addr = alloca i32, align 4
  store %struct.u64_stats_sync* %syncp, %struct.u64_stats_sync** %syncp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.u64_stats_sync** %syncp.addr, metadata !17232, metadata !DIExpression()), !dbg !17233
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !17234, metadata !DIExpression()), !dbg !17235
  ret i1 false, !dbg !17236
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @PTR_ERR_OR_ZERO(i8* %ptr) #0 !dbg !17237 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !17238, metadata !DIExpression()), !dbg !17239
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !17240
  %call = call zeroext i1 @IS_ERR(i8* %0) #9, !dbg !17242
  br i1 %call, label %if.then, label %if.else, !dbg !17243

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !17244
  %call1 = call i64 @PTR_ERR(i8* %1) #9, !dbg !17245
  %conv = trunc i64 %call1 to i32, !dbg !17245
  store i32 %conv, i32* %retval, align 4, !dbg !17246
  br label %return, !dbg !17246

if.else:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !17247
  br label %return, !dbg !17247

return:                                           ; preds = %if.else, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !17248
  ret i32 %2, !dbg !17248
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !17249 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !17252, metadata !DIExpression()), !dbg !17253
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !17254
  %1 = ptrtoint i8* %0 to i64, !dbg !17254
  %2 = inttoptr i64 %1 to i8*, !dbg !17254
  %3 = ptrtoint i8* %2 to i64, !dbg !17254
  %cmp = icmp uge i64 %3, -4095, !dbg !17254
  %lnot = xor i1 %cmp, true, !dbg !17254
  %lnot1 = xor i1 %lnot, true, !dbg !17254
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !17254
  %conv = sext i32 %lnot.ext to i64, !dbg !17254
  %tobool = icmp ne i64 %conv, 0, !dbg !17254
  ret i1 %tobool, !dbg !17255
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !17256 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !17259, metadata !DIExpression()), !dbg !17260
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !17261
  %1 = ptrtoint i8* %0 to i64, !dbg !17262
  ret i64 %1, !dbg !17263
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_setup_tc_block(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.flow_block_offload* %f) #0 !dbg !17264 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %f.addr = alloca %struct.flow_block_offload*, align 8
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !17281, metadata !DIExpression()), !dbg !17282
  store %struct.flow_block_offload* %f, %struct.flow_block_offload** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.flow_block_offload** %f.addr, metadata !17283, metadata !DIExpression()), !dbg !17284
  %0 = load %struct.flow_block_offload*, %struct.flow_block_offload** %f.addr, align 8, !dbg !17285
  %binder_type = getelementptr inbounds %struct.flow_block_offload, %struct.flow_block_offload* %0, i32 0, i32 1, !dbg !17286
  %1 = load i32, i32* %binder_type, align 4, !dbg !17286
  switch i32 %1, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb3
  ], !dbg !17287

sw.bb:                                            ; preds = %entry
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !17288
  %3 = load %struct.flow_block_offload*, %struct.flow_block_offload** %f.addr, align 8, !dbg !17290
  %call = call i32 @mlxsw_sp_setup_tc_block_clsact(%struct.mlxsw_sp_port* %2, %struct.flow_block_offload* %3, i1 zeroext true) #9, !dbg !17291
  store i32 %call, i32* %retval, align 4, !dbg !17292
  br label %return, !dbg !17292

sw.bb1:                                           ; preds = %entry
  %4 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !17293
  %5 = load %struct.flow_block_offload*, %struct.flow_block_offload** %f.addr, align 8, !dbg !17294
  %call2 = call i32 @mlxsw_sp_setup_tc_block_clsact(%struct.mlxsw_sp_port* %4, %struct.flow_block_offload* %5, i1 zeroext false) #9, !dbg !17295
  store i32 %call2, i32* %retval, align 4, !dbg !17296
  br label %return, !dbg !17296

sw.bb3:                                           ; preds = %entry
  %6 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !17297
  %7 = load %struct.flow_block_offload*, %struct.flow_block_offload** %f.addr, align 8, !dbg !17298
  %call4 = call i32 @mlxsw_sp_setup_tc_block_qevent_early_drop(%struct.mlxsw_sp_port* %6, %struct.flow_block_offload* %7) #9, !dbg !17299
  store i32 %call4, i32* %retval, align 4, !dbg !17300
  br label %return, !dbg !17300

sw.default:                                       ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !17301
  br label %return, !dbg !17301

return:                                           ; preds = %sw.default, %sw.bb3, %sw.bb1, %sw.bb
  %8 = load i32, i32* %retval, align 4, !dbg !17302
  ret i32 %8, !dbg !17302
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_setup_tc_red(%struct.mlxsw_sp_port*, %struct.tc_red_qopt_offload*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_setup_tc_prio(%struct.mlxsw_sp_port*, %struct.tc_prio_qopt_offload*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_setup_tc_ets(%struct.mlxsw_sp_port*, %struct.tc_ets_qopt_offload*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_setup_tc_tbf(%struct.mlxsw_sp_port*, %struct.tc_tbf_qopt_offload*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_setup_tc_fifo(%struct.mlxsw_sp_port*, %struct.tc_fifo_qopt_offload*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_setup_tc_block_clsact(%struct.mlxsw_sp_port*, %struct.flow_block_offload*, i1 zeroext) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_setup_tc_block_qevent_early_drop(%struct.mlxsw_sp_port*, %struct.flow_block_offload*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_handle_feature(%struct.net_device* %dev, i64 %wanted_features, i64 %feature, i32 (%struct.net_device*, i1)* %feature_handler) #0 !dbg !17303 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %wanted_features.addr = alloca i64, align 8
  %feature.addr = alloca i64, align 8
  %feature_handler.addr = alloca i32 (%struct.net_device*, i1)*, align 8
  %changes = alloca i64, align 8
  %enable = alloca i8, align 1
  %err = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17307, metadata !DIExpression()), !dbg !17308
  store i64 %wanted_features, i64* %wanted_features.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %wanted_features.addr, metadata !17309, metadata !DIExpression()), !dbg !17310
  store i64 %feature, i64* %feature.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %feature.addr, metadata !17311, metadata !DIExpression()), !dbg !17312
  store i32 (%struct.net_device*, i1)* %feature_handler, i32 (%struct.net_device*, i1)** %feature_handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.net_device*, i1)** %feature_handler.addr, metadata !17313, metadata !DIExpression()), !dbg !17314
  call void @llvm.dbg.declare(metadata i64* %changes, metadata !17315, metadata !DIExpression()), !dbg !17316
  %0 = load i64, i64* %wanted_features.addr, align 8, !dbg !17317
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17318
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 15, !dbg !17319
  %2 = load i64, i64* %features, align 8, !dbg !17319
  %xor = xor i64 %0, %2, !dbg !17320
  store i64 %xor, i64* %changes, align 8, !dbg !17316
  call void @llvm.dbg.declare(metadata i8* %enable, metadata !17321, metadata !DIExpression()), !dbg !17322
  %3 = load i64, i64* %wanted_features.addr, align 8, !dbg !17323
  %4 = load i64, i64* %feature.addr, align 8, !dbg !17324
  %and = and i64 %3, %4, !dbg !17325
  %tobool = icmp ne i64 %and, 0, !dbg !17326
  %lnot = xor i1 %tobool, true, !dbg !17326
  %lnot1 = xor i1 %lnot, true, !dbg !17327
  %frombool = zext i1 %lnot1 to i8, !dbg !17322
  store i8 %frombool, i8* %enable, align 1, !dbg !17322
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17328, metadata !DIExpression()), !dbg !17329
  %5 = load i64, i64* %changes, align 8, !dbg !17330
  %6 = load i64, i64* %feature.addr, align 8, !dbg !17332
  %and2 = and i64 %5, %6, !dbg !17333
  %tobool3 = icmp ne i64 %and2, 0, !dbg !17333
  br i1 %tobool3, label %if.end, label %if.then, !dbg !17334

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !17335
  br label %return, !dbg !17335

if.end:                                           ; preds = %entry
  %7 = load i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, i1)** %feature_handler.addr, align 8, !dbg !17336
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17337
  %9 = load i8, i8* %enable, align 1, !dbg !17338
  %tobool4 = trunc i8 %9 to i1, !dbg !17338
  %call = call i32 %7(%struct.net_device* %8, i1 zeroext %tobool4) #9, !dbg !17336
  store i32 %call, i32* %err, align 4, !dbg !17339
  %10 = load i32, i32* %err, align 4, !dbg !17340
  %tobool5 = icmp ne i32 %10, 0, !dbg !17340
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !17342

if.then6:                                         ; preds = %if.end
  %11 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17343
  %12 = load i8, i8* %enable, align 1, !dbg !17345
  %tobool7 = trunc i8 %12 to i1, !dbg !17345
  %13 = zext i1 %tobool7 to i64, !dbg !17345
  %cond = select i1 %tobool7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.155, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.156, i64 0, i64 0), !dbg !17345
  %14 = load i32, i32* %err, align 4, !dbg !17346
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %11, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.154, i64 0, i64 0), i8* %cond, i64* %feature.addr, i32 %14) #13, !dbg !17347
  %15 = load i32, i32* %err, align 4, !dbg !17348
  store i32 %15, i32* %retval, align 4, !dbg !17349
  br label %return, !dbg !17349

if.end8:                                          ; preds = %if.end
  %16 = load i8, i8* %enable, align 1, !dbg !17350
  %tobool9 = trunc i8 %16 to i1, !dbg !17350
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !17352

if.then10:                                        ; preds = %if.end8
  %17 = load i64, i64* %feature.addr, align 8, !dbg !17353
  %18 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17354
  %features11 = getelementptr inbounds %struct.net_device, %struct.net_device* %18, i32 0, i32 15, !dbg !17355
  %19 = load i64, i64* %features11, align 8, !dbg !17356
  %or = or i64 %19, %17, !dbg !17356
  store i64 %or, i64* %features11, align 8, !dbg !17356
  br label %if.end14, !dbg !17354

if.else:                                          ; preds = %if.end8
  %20 = load i64, i64* %feature.addr, align 8, !dbg !17357
  %neg = xor i64 %20, -1, !dbg !17358
  %21 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17359
  %features12 = getelementptr inbounds %struct.net_device, %struct.net_device* %21, i32 0, i32 15, !dbg !17360
  %22 = load i64, i64* %features12, align 8, !dbg !17361
  %and13 = and i64 %22, %neg, !dbg !17361
  store i64 %and13, i64* %features12, align 8, !dbg !17361
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then10
  store i32 0, i32* %retval, align 4, !dbg !17362
  br label %return, !dbg !17362

return:                                           ; preds = %if.end14, %if.then6, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !17363
  ret i32 %23, !dbg !17363
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_feature_hw_tc(%struct.net_device* %dev, i1 zeroext %enable) #0 !dbg !17364 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %enable.addr = alloca i8, align 1
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17365, metadata !DIExpression()), !dbg !17366
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !17367, metadata !DIExpression()), !dbg !17368
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !17369, metadata !DIExpression()), !dbg !17370
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17371
  %call = call i8* @netdev_priv(%struct.net_device* %0) #9, !dbg !17372
  %1 = bitcast i8* %call to %struct.mlxsw_sp_port*, !dbg !17372
  store %struct.mlxsw_sp_port* %1, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17370
  %2 = load i8, i8* %enable.addr, align 1, !dbg !17373
  %tobool = trunc i8 %2 to i1, !dbg !17373
  br i1 %tobool, label %if.else, label %if.then, !dbg !17375

if.then:                                          ; preds = %entry
  %3 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17376
  %ing_flow_block = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %3, i32 0, i32 16, !dbg !17379
  %4 = load %struct.mlxsw_sp_flow_block*, %struct.mlxsw_sp_flow_block** %ing_flow_block, align 8, !dbg !17379
  %call1 = call i32 @mlxsw_sp_flow_block_rule_count(%struct.mlxsw_sp_flow_block* %4) #9, !dbg !17380
  %tobool2 = icmp ne i32 %call1, 0, !dbg !17380
  br i1 %tobool2, label %if.then5, label %lor.lhs.false, !dbg !17381

lor.lhs.false:                                    ; preds = %if.then
  %5 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17382
  %eg_flow_block = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %5, i32 0, i32 17, !dbg !17383
  %6 = load %struct.mlxsw_sp_flow_block*, %struct.mlxsw_sp_flow_block** %eg_flow_block, align 8, !dbg !17383
  %call3 = call i32 @mlxsw_sp_flow_block_rule_count(%struct.mlxsw_sp_flow_block* %6) #9, !dbg !17384
  %tobool4 = icmp ne i32 %call3, 0, !dbg !17384
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !17385

if.then5:                                         ; preds = %lor.lhs.false, %if.then
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17386
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %7, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.157, i64 0, i64 0)) #13, !dbg !17388
  store i32 -22, i32* %retval, align 4, !dbg !17389
  br label %return, !dbg !17389

if.end:                                           ; preds = %lor.lhs.false
  %8 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17390
  %ing_flow_block6 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %8, i32 0, i32 16, !dbg !17391
  %9 = load %struct.mlxsw_sp_flow_block*, %struct.mlxsw_sp_flow_block** %ing_flow_block6, align 8, !dbg !17391
  call void @mlxsw_sp_flow_block_disable_inc(%struct.mlxsw_sp_flow_block* %9) #9, !dbg !17392
  %10 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17393
  %eg_flow_block7 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %10, i32 0, i32 17, !dbg !17394
  %11 = load %struct.mlxsw_sp_flow_block*, %struct.mlxsw_sp_flow_block** %eg_flow_block7, align 8, !dbg !17394
  call void @mlxsw_sp_flow_block_disable_inc(%struct.mlxsw_sp_flow_block* %11) #9, !dbg !17395
  br label %if.end10, !dbg !17396

if.else:                                          ; preds = %entry
  %12 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17397
  %ing_flow_block8 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %12, i32 0, i32 16, !dbg !17399
  %13 = load %struct.mlxsw_sp_flow_block*, %struct.mlxsw_sp_flow_block** %ing_flow_block8, align 8, !dbg !17399
  call void @mlxsw_sp_flow_block_disable_dec(%struct.mlxsw_sp_flow_block* %13) #9, !dbg !17400
  %14 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17401
  %eg_flow_block9 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %14, i32 0, i32 17, !dbg !17402
  %15 = load %struct.mlxsw_sp_flow_block*, %struct.mlxsw_sp_flow_block** %eg_flow_block9, align 8, !dbg !17402
  call void @mlxsw_sp_flow_block_disable_dec(%struct.mlxsw_sp_flow_block* %15) #9, !dbg !17403
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.end
  store i32 0, i32* %retval, align 4, !dbg !17404
  br label %return, !dbg !17404

return:                                           ; preds = %if.end10, %if.then5
  %16 = load i32, i32* %retval, align 4, !dbg !17405
  ret i32 %16, !dbg !17405
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_feature_loopback(%struct.net_device* %dev, i1 zeroext %enable) #0 !dbg !17406 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %enable.addr = alloca i8, align 1
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %pplr_pl = alloca [8 x i8], align 1
  %err = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17407, metadata !DIExpression()), !dbg !17408
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !17409, metadata !DIExpression()), !dbg !17410
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !17411, metadata !DIExpression()), !dbg !17412
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17413
  %call = call i8* @netdev_priv(%struct.net_device* %0) #9, !dbg !17414
  %1 = bitcast i8* %call to %struct.mlxsw_sp_port*, !dbg !17414
  store %struct.mlxsw_sp_port* %1, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17412
  call void @llvm.dbg.declare(metadata [8 x i8]* %pplr_pl, metadata !17415, metadata !DIExpression()), !dbg !17416
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17417, metadata !DIExpression()), !dbg !17418
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17419
  %call1 = call zeroext i1 @netif_running(%struct.net_device* %2) #9, !dbg !17421
  br i1 %call1, label %if.then, label %if.end, !dbg !17422

if.then:                                          ; preds = %entry
  %3 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17423
  %call2 = call i32 @mlxsw_sp_port_admin_status_set(%struct.mlxsw_sp_port* %3, i1 zeroext false) #9, !dbg !17424
  br label %if.end, !dbg !17424

if.end:                                           ; preds = %if.then, %entry
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %pplr_pl, i64 0, i64 0, !dbg !17425
  %4 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17426
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %4, i32 0, i32 3, !dbg !17427
  %5 = load i8, i8* %local_port, align 8, !dbg !17427
  %6 = load i8, i8* %enable.addr, align 1, !dbg !17428
  %tobool = trunc i8 %6 to i1, !dbg !17428
  call void @mlxsw_reg_pplr_pack(i8* %arraydecay, i8 zeroext %5, i1 zeroext %tobool) #9, !dbg !17429
  %7 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17430
  %mlxsw_sp = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %7, i32 0, i32 2, !dbg !17431
  %8 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17431
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %8, i32 0, i32 1, !dbg !17432
  %9 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !17432
  %arraydecay3 = getelementptr inbounds [8 x i8], [8 x i8]* %pplr_pl, i64 0, i64 0, !dbg !17433
  %call4 = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %9, %struct.mlxsw_reg_info* @mlxsw_reg_pplr, i8* %arraydecay3) #9, !dbg !17434
  store i32 %call4, i32* %err, align 4, !dbg !17435
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17436
  %call5 = call zeroext i1 @netif_running(%struct.net_device* %10) #9, !dbg !17438
  br i1 %call5, label %if.then6, label %if.end8, !dbg !17439

if.then6:                                         ; preds = %if.end
  %11 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17440
  %call7 = call i32 @mlxsw_sp_port_admin_status_set(%struct.mlxsw_sp_port* %11, i1 zeroext true) #9, !dbg !17441
  br label %if.end8, !dbg !17441

if.end8:                                          ; preds = %if.then6, %if.end
  %12 = load i32, i32* %err, align 4, !dbg !17442
  ret i32 %12, !dbg !17443
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_flow_block_rule_count(%struct.mlxsw_sp_flow_block* %block) #0 !dbg !17444 {
entry:
  %block.addr = alloca %struct.mlxsw_sp_flow_block*, align 8
  store %struct.mlxsw_sp_flow_block* %block, %struct.mlxsw_sp_flow_block** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_flow_block** %block.addr, metadata !17449, metadata !DIExpression()), !dbg !17450
  %0 = load %struct.mlxsw_sp_flow_block*, %struct.mlxsw_sp_flow_block** %block.addr, align 8, !dbg !17451
  %tobool = icmp ne %struct.mlxsw_sp_flow_block* %0, null, !dbg !17451
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17451

cond.true:                                        ; preds = %entry
  %1 = load %struct.mlxsw_sp_flow_block*, %struct.mlxsw_sp_flow_block** %block.addr, align 8, !dbg !17452
  %rule_count = getelementptr inbounds %struct.mlxsw_sp_flow_block, %struct.mlxsw_sp_flow_block* %1, i32 0, i32 4, !dbg !17453
  %2 = load i32, i32* %rule_count, align 8, !dbg !17453
  br label %cond.end, !dbg !17451

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !17451

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ 0, %cond.false ], !dbg !17451
  ret i32 %cond, !dbg !17454
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_flow_block_disable_inc(%struct.mlxsw_sp_flow_block* %block) #0 !dbg !17455 {
entry:
  %block.addr = alloca %struct.mlxsw_sp_flow_block*, align 8
  store %struct.mlxsw_sp_flow_block* %block, %struct.mlxsw_sp_flow_block** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_flow_block** %block.addr, metadata !17458, metadata !DIExpression()), !dbg !17459
  %0 = load %struct.mlxsw_sp_flow_block*, %struct.mlxsw_sp_flow_block** %block.addr, align 8, !dbg !17460
  %tobool = icmp ne %struct.mlxsw_sp_flow_block* %0, null, !dbg !17460
  br i1 %tobool, label %if.then, label %if.end, !dbg !17462

if.then:                                          ; preds = %entry
  %1 = load %struct.mlxsw_sp_flow_block*, %struct.mlxsw_sp_flow_block** %block.addr, align 8, !dbg !17463
  %disable_count = getelementptr inbounds %struct.mlxsw_sp_flow_block, %struct.mlxsw_sp_flow_block* %1, i32 0, i32 5, !dbg !17464
  %2 = load i32, i32* %disable_count, align 4, !dbg !17465
  %inc = add i32 %2, 1, !dbg !17465
  store i32 %inc, i32* %disable_count, align 4, !dbg !17465
  br label %if.end, !dbg !17463

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !17466
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_flow_block_disable_dec(%struct.mlxsw_sp_flow_block* %block) #0 !dbg !17467 {
entry:
  %block.addr = alloca %struct.mlxsw_sp_flow_block*, align 8
  store %struct.mlxsw_sp_flow_block* %block, %struct.mlxsw_sp_flow_block** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_flow_block** %block.addr, metadata !17468, metadata !DIExpression()), !dbg !17469
  %0 = load %struct.mlxsw_sp_flow_block*, %struct.mlxsw_sp_flow_block** %block.addr, align 8, !dbg !17470
  %tobool = icmp ne %struct.mlxsw_sp_flow_block* %0, null, !dbg !17470
  br i1 %tobool, label %if.then, label %if.end, !dbg !17472

if.then:                                          ; preds = %entry
  %1 = load %struct.mlxsw_sp_flow_block*, %struct.mlxsw_sp_flow_block** %block.addr, align 8, !dbg !17473
  %disable_count = getelementptr inbounds %struct.mlxsw_sp_flow_block, %struct.mlxsw_sp_flow_block* %1, i32 0, i32 5, !dbg !17474
  %2 = load i32, i32* %disable_count, align 4, !dbg !17475
  %dec = add i32 %2, -1, !dbg !17475
  store i32 %dec, i32* %disable_count, align 4, !dbg !17475
  br label %if.end, !dbg !17473

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !17476
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_running(%struct.net_device* %dev) #0 !dbg !17477 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17478, metadata !DIExpression()), !dbg !17479
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17480
  %state = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 7, !dbg !17481
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #9, !dbg !17482
  ret i1 %call, !dbg !17483
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_pplr_pack(i8* %payload, i8 zeroext %local_port, i1 zeroext %phy_local) #0 !dbg !17484 {
entry:
  %payload.addr = alloca i8*, align 8
  %local_port.addr = alloca i8, align 1
  %phy_local.addr = alloca i8, align 1
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !17485, metadata !DIExpression()), !dbg !17486
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !17487, metadata !DIExpression()), !dbg !17488
  %frombool = zext i1 %phy_local to i8
  store i8 %frombool, i8* %phy_local.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %phy_local.addr, metadata !17489, metadata !DIExpression()), !dbg !17490
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !17491
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_pplr, i32 0, i32 1), align 2, !dbg !17491
  %conv = zext i16 %1 to i64, !dbg !17491
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !17491
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !17492
  %3 = load i8, i8* %local_port.addr, align 1, !dbg !17493
  %conv1 = zext i8 %3 to i32, !dbg !17493
  call void @mlxsw_reg_pplr_local_port_set(i8* %2, i32 %conv1) #9, !dbg !17494
  %4 = load i8*, i8** %payload.addr, align 8, !dbg !17495
  %5 = load i8, i8* %phy_local.addr, align 1, !dbg !17496
  %tobool = trunc i8 %5 to i1, !dbg !17496
  %6 = zext i1 %tobool to i64, !dbg !17496
  %cond = select i1 %tobool, i64 2, i64 0, !dbg !17496
  %conv3 = trunc i64 %cond to i32, !dbg !17496
  call void @mlxsw_reg_pplr_lb_en_set(i8* %4, i32 %conv3) #9, !dbg !17497
  ret void, !dbg !17498
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #0 !dbg !17499 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !17505, metadata !DIExpression()), !dbg !17507
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !17509, metadata !DIExpression()), !dbg !17510
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !17511, metadata !DIExpression()), !dbg !17512
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !17513, metadata !DIExpression()), !dbg !17515
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !17517, metadata !DIExpression()), !dbg !17518
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !16462, metadata !DIExpression()), !dbg !17519
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !16466, metadata !DIExpression()), !dbg !17521
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !17522, metadata !DIExpression()), !dbg !17523
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !17524, metadata !DIExpression()), !dbg !17525
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !17526
  %1 = load i64, i64* %nr.addr, align 8, !dbg !17527
  %div = sdiv i64 %1, 64, !dbg !17527
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !17528
  %2 = bitcast i64* %add.ptr to i8*, !dbg !17526
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !17529
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !17530
  %conv.i = trunc i64 %4 to i32, !dbg !17530
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #12, !dbg !17531
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !17532
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !17532
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #12, !dbg !17532
  %7 = load i64, i64* %nr.addr, align 8, !dbg !17533
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !17533
  br i1 %8, label %cond.true, label %cond.false, !dbg !17533

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !17533
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !17533
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !17534
  %and.i = and i64 %11, 63, !dbg !17535
  %shl.i = shl i64 1, %and.i, !dbg !17536
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !17537
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !17538
  %shr.i = ashr i64 %13, 6, !dbg !17539
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !17537
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !17537
  %and1.i = and i64 %shl.i, %14, !dbg !17540
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !17541
  %conv = zext i1 %cmp.i to i32, !dbg !17533
  br label %cond.end, !dbg !17533

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !17533
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !17533
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !17542
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !17543
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #10, !dbg !17544, !srcloc !17545
  store i8 %19, i8* %oldbit.i, align 1, !dbg !17544
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !17546
  %tobool.i = trunc i8 %20 to i1, !dbg !17546
  %conv2 = zext i1 %tobool.i to i32, !dbg !17533
  br label %cond.end, !dbg !17533

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !17533
  %tobool = icmp ne i32 %cond, 0, !dbg !17533
  ret i1 %tobool, !dbg !17547
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_pplr_local_port_set(i8* %buf, i32 %val) #0 !dbg !17548 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !17549, metadata !DIExpression()), !dbg !17550
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !17551, metadata !DIExpression()), !dbg !17550
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !17550
  %1 = load i32, i32* %val.addr, align 4, !dbg !17550
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_pplr_local_port_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !17550
  ret void, !dbg !17550
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_pplr_lb_en_set(i8* %buf, i32 %val) #0 !dbg !17552 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !17553, metadata !DIExpression()), !dbg !17554
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !17555, metadata !DIExpression()), !dbg !17554
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !17554
  %1 = load i32, i32* %val.addr, align 4, !dbg !17554
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_pplr_lb_en_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !17554
  ret void, !dbg !17554
}

; Function Attrs: noredzone
declare dso_local %struct.devlink_port* @mlxsw_core_port_devlink_port_get(%struct.mlxsw_core*, i8 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp3_init(%struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_bus_info* %mlxsw_bus_info, %struct.netlink_ext_ack* %extack) #0 !dbg !17556 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %mlxsw_bus_info.addr = alloca %struct.mlxsw_bus_info*, align 8
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !17557, metadata !DIExpression()), !dbg !17558
  store %struct.mlxsw_bus_info* %mlxsw_bus_info, %struct.mlxsw_bus_info** %mlxsw_bus_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_bus_info** %mlxsw_bus_info.addr, metadata !17559, metadata !DIExpression()), !dbg !17560
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !17561, metadata !DIExpression()), !dbg !17562
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !17563, metadata !DIExpression()), !dbg !17564
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !17565
  %call = call i8* @mlxsw_core_driver_priv(%struct.mlxsw_core* %0) #9, !dbg !17566
  %1 = bitcast i8* %call to %struct.mlxsw_sp*, !dbg !17566
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17564
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17567
  %kvdl_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %2, i32 0, i32 23, !dbg !17568
  store %struct.mlxsw_sp_kvdl_ops* @mlxsw_sp2_kvdl_ops, %struct.mlxsw_sp_kvdl_ops** %kvdl_ops, align 8, !dbg !17569
  %3 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17570
  %afa_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %3, i32 0, i32 24, !dbg !17571
  store %struct.mlxsw_afa_ops* @mlxsw_sp2_act_afa_ops, %struct.mlxsw_afa_ops** %afa_ops, align 8, !dbg !17572
  %4 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17573
  %afk_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %4, i32 0, i32 25, !dbg !17574
  store %struct.mlxsw_afk_ops* @mlxsw_sp2_afk_ops, %struct.mlxsw_afk_ops** %afk_ops, align 8, !dbg !17575
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17576
  %mr_tcam_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %5, i32 0, i32 26, !dbg !17577
  store %struct.mlxsw_sp_mr_tcam_ops* @mlxsw_sp2_mr_tcam_ops, %struct.mlxsw_sp_mr_tcam_ops** %mr_tcam_ops, align 8, !dbg !17578
  %6 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17579
  %acl_rulei_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %6, i32 0, i32 27, !dbg !17580
  store %struct.mlxsw_sp_acl_rulei_ops* @mlxsw_sp2_acl_rulei_ops, %struct.mlxsw_sp_acl_rulei_ops** %acl_rulei_ops, align 8, !dbg !17581
  %7 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17582
  %acl_tcam_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %7, i32 0, i32 28, !dbg !17583
  store %struct.mlxsw_sp_acl_tcam_ops* @mlxsw_sp2_acl_tcam_ops, %struct.mlxsw_sp_acl_tcam_ops** %acl_tcam_ops, align 8, !dbg !17584
  %8 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17585
  %nve_ops_arr = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %8, i32 0, i32 29, !dbg !17586
  store %struct.mlxsw_sp_nve_ops** getelementptr inbounds ([0 x %struct.mlxsw_sp_nve_ops*], [0 x %struct.mlxsw_sp_nve_ops*]* @mlxsw_sp2_nve_ops_arr, i64 0, i64 0), %struct.mlxsw_sp_nve_ops*** %nve_ops_arr, align 8, !dbg !17587
  %9 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17588
  %mac_mask = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %9, i32 0, i32 4, !dbg !17589
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @mlxsw_sp2_mac_mask, i64 0, i64 0), i8** %mac_mask, align 8, !dbg !17590
  %10 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17591
  %rif_ops_arr = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %10, i32 0, i32 30, !dbg !17592
  store %struct.mlxsw_sp_rif_ops** getelementptr inbounds ([0 x %struct.mlxsw_sp_rif_ops*], [0 x %struct.mlxsw_sp_rif_ops*]* @mlxsw_sp2_rif_ops_arr, i64 0, i64 0), %struct.mlxsw_sp_rif_ops*** %rif_ops_arr, align 8, !dbg !17593
  %11 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17594
  %sb_vals = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %11, i32 0, i32 31, !dbg !17595
  store %struct.mlxsw_sp_sb_vals* @mlxsw_sp2_sb_vals, %struct.mlxsw_sp_sb_vals** %sb_vals, align 8, !dbg !17596
  %12 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17597
  %sb_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %12, i32 0, i32 32, !dbg !17598
  store %struct.mlxsw_sp_sb_ops* @mlxsw_sp3_sb_ops, %struct.mlxsw_sp_sb_ops** %sb_ops, align 8, !dbg !17599
  %13 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17600
  %port_type_speed_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %13, i32 0, i32 33, !dbg !17601
  store %struct.mlxsw_sp_port_type_speed_ops* @mlxsw_sp2_port_type_speed_ops, %struct.mlxsw_sp_port_type_speed_ops** %port_type_speed_ops, align 8, !dbg !17602
  %14 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17603
  %ptp_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %14, i32 0, i32 34, !dbg !17604
  store %struct.mlxsw_sp_ptp_ops* @mlxsw_sp2_ptp_ops, %struct.mlxsw_sp_ptp_ops** %ptp_ops, align 8, !dbg !17605
  %15 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17606
  %span_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %15, i32 0, i32 35, !dbg !17607
  store %struct.mlxsw_sp_span_ops* @mlxsw_sp3_span_ops, %struct.mlxsw_sp_span_ops** %span_ops, align 8, !dbg !17608
  %16 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17609
  %policer_core_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %16, i32 0, i32 36, !dbg !17610
  store %struct.mlxsw_sp_policer_core_ops* @mlxsw_sp2_policer_core_ops, %struct.mlxsw_sp_policer_core_ops** %policer_core_ops, align 8, !dbg !17611
  %17 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17612
  %trap_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %17, i32 0, i32 37, !dbg !17613
  store %struct.mlxsw_sp_trap_ops* @mlxsw_sp2_trap_ops, %struct.mlxsw_sp_trap_ops** %trap_ops, align 8, !dbg !17614
  %18 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17615
  %lowest_shaper_bs = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %18, i32 0, i32 40, !dbg !17616
  store i32 5, i32* %lowest_shaper_bs, align 8, !dbg !17617
  %19 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !17618
  %20 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %mlxsw_bus_info.addr, align 8, !dbg !17619
  %21 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !17620
  %call1 = call i32 @mlxsw_sp_init(%struct.mlxsw_core* %19, %struct.mlxsw_bus_info* %20, %struct.netlink_ext_ack* %21) #9, !dbg !17621
  ret i32 %call1, !dbg !17622
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_fini(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !17623 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !17624, metadata !DIExpression()), !dbg !17625
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !17626, metadata !DIExpression()), !dbg !17627
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !17628
  %call = call i8* @mlxsw_core_driver_priv(%struct.mlxsw_core* %0) #9, !dbg !17629
  %1 = bitcast i8* %call to %struct.mlxsw_sp*, !dbg !17629
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17627
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17630
  call void @mlxsw_sp_ports_remove(%struct.mlxsw_sp* %2) #9, !dbg !17631
  %3 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17632
  call void @mlxsw_sp_port_module_info_fini(%struct.mlxsw_sp* %3) #9, !dbg !17633
  %4 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17634
  call void @mlxsw_sp_dpipe_fini(%struct.mlxsw_sp* %4) #9, !dbg !17635
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17636
  %call1 = call %struct.net* @mlxsw_sp_net(%struct.mlxsw_sp* %5) #9, !dbg !17637
  %6 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17638
  %netdevice_nb = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %6, i32 0, i32 17, !dbg !17639
  %call2 = call i32 @unregister_netdevice_notifier_net(%struct.net* %call1, %struct.notifier_block* %netdevice_nb) #9, !dbg !17640
  %7 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17641
  %clock = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %7, i32 0, i32 18, !dbg !17643
  %8 = load %struct.mlxsw_sp_ptp_clock*, %struct.mlxsw_sp_ptp_clock** %clock, align 8, !dbg !17643
  %tobool = icmp ne %struct.mlxsw_sp_ptp_clock* %8, null, !dbg !17641
  br i1 %tobool, label %if.then, label %if.end, !dbg !17644

if.then:                                          ; preds = %entry
  %9 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17645
  %ptp_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %9, i32 0, i32 34, !dbg !17647
  %10 = load %struct.mlxsw_sp_ptp_ops*, %struct.mlxsw_sp_ptp_ops** %ptp_ops, align 8, !dbg !17647
  %fini = getelementptr inbounds %struct.mlxsw_sp_ptp_ops, %struct.mlxsw_sp_ptp_ops* %10, i32 0, i32 3, !dbg !17648
  %11 = load void (%struct.mlxsw_sp_ptp_state*)*, void (%struct.mlxsw_sp_ptp_state*)** %fini, align 8, !dbg !17648
  %12 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17649
  %ptp_state = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %12, i32 0, i32 19, !dbg !17650
  %13 = load %struct.mlxsw_sp_ptp_state*, %struct.mlxsw_sp_ptp_state** %ptp_state, align 8, !dbg !17650
  call void %11(%struct.mlxsw_sp_ptp_state* %13) #9, !dbg !17645
  %14 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17651
  %ptp_ops3 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %14, i32 0, i32 34, !dbg !17652
  %15 = load %struct.mlxsw_sp_ptp_ops*, %struct.mlxsw_sp_ptp_ops** %ptp_ops3, align 8, !dbg !17652
  %clock_fini = getelementptr inbounds %struct.mlxsw_sp_ptp_ops, %struct.mlxsw_sp_ptp_ops* %15, i32 0, i32 1, !dbg !17653
  %16 = load void (%struct.mlxsw_sp_ptp_clock*)*, void (%struct.mlxsw_sp_ptp_clock*)** %clock_fini, align 8, !dbg !17653
  %17 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17654
  %clock4 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %17, i32 0, i32 18, !dbg !17655
  %18 = load %struct.mlxsw_sp_ptp_clock*, %struct.mlxsw_sp_ptp_clock** %clock4, align 8, !dbg !17655
  call void %16(%struct.mlxsw_sp_ptp_clock* %18) #9, !dbg !17651
  br label %if.end, !dbg !17656

if.end:                                           ; preds = %if.then, %entry
  %19 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17657
  call void @mlxsw_sp_router_fini(%struct.mlxsw_sp* %19) #9, !dbg !17658
  %20 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17659
  call void @mlxsw_sp_acl_fini(%struct.mlxsw_sp* %20) #9, !dbg !17660
  %21 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17661
  call void @mlxsw_sp_nve_fini(%struct.mlxsw_sp* %21) #9, !dbg !17662
  %22 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17663
  call void @mlxsw_sp_afa_fini(%struct.mlxsw_sp* %22) #9, !dbg !17664
  %23 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17665
  call void @mlxsw_sp_counter_pool_fini(%struct.mlxsw_sp* %23) #9, !dbg !17666
  %24 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17667
  call void @mlxsw_sp_switchdev_fini(%struct.mlxsw_sp* %24) #9, !dbg !17668
  %25 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17669
  call void @mlxsw_sp_span_fini(%struct.mlxsw_sp* %25) #9, !dbg !17670
  %26 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17671
  call void @mlxsw_sp_lag_fini(%struct.mlxsw_sp* %26) #9, !dbg !17672
  %27 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17673
  call void @mlxsw_sp_buffers_fini(%struct.mlxsw_sp* %27) #9, !dbg !17674
  %28 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17675
  call void @mlxsw_sp_devlink_traps_fini(%struct.mlxsw_sp* %28) #9, !dbg !17676
  %29 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17677
  call void @mlxsw_sp_traps_fini(%struct.mlxsw_sp* %29) #9, !dbg !17678
  %30 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17679
  call void @mlxsw_sp_policers_fini(%struct.mlxsw_sp* %30) #9, !dbg !17680
  %31 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17681
  call void @mlxsw_sp_fids_fini(%struct.mlxsw_sp* %31) #9, !dbg !17682
  %32 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17683
  call void @mlxsw_sp_kvdl_fini(%struct.mlxsw_sp* %32) #9, !dbg !17684
  ret void, !dbg !17685
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_basic_trap_groups_set(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !17686 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %htgt_pl = alloca [32 x i8], align 16
  %err = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !17687, metadata !DIExpression()), !dbg !17688
  call void @llvm.dbg.declare(metadata [32 x i8]* %htgt_pl, metadata !17689, metadata !DIExpression()), !dbg !17690
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17691, metadata !DIExpression()), !dbg !17692
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %htgt_pl, i64 0, i64 0, !dbg !17693
  call void @mlxsw_reg_htgt_pack(i8* %arraydecay, i8 zeroext 0, i8 zeroext -1, i8 zeroext 0, i8 zeroext 7) #9, !dbg !17694
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !17695
  %arraydecay1 = getelementptr inbounds [32 x i8], [32 x i8]* %htgt_pl, i64 0, i64 0, !dbg !17696
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %0, %struct.mlxsw_reg_info* @mlxsw_reg_htgt, i8* %arraydecay1) #9, !dbg !17697
  store i32 %call, i32* %err, align 4, !dbg !17698
  %1 = load i32, i32* %err, align 4, !dbg !17699
  %tobool = icmp ne i32 %1, 0, !dbg !17699
  br i1 %tobool, label %if.then, label %if.end, !dbg !17701

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %err, align 4, !dbg !17702
  store i32 %2, i32* %retval, align 4, !dbg !17703
  br label %return, !dbg !17703

if.end:                                           ; preds = %entry
  %arraydecay2 = getelementptr inbounds [32 x i8], [32 x i8]* %htgt_pl, i64 0, i64 0, !dbg !17704
  call void @mlxsw_reg_htgt_pack(i8* %arraydecay2, i8 zeroext 1, i8 zeroext -1, i8 zeroext 0, i8 zeroext 7) #9, !dbg !17705
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !17706
  %arraydecay3 = getelementptr inbounds [32 x i8], [32 x i8]* %htgt_pl, i64 0, i64 0, !dbg !17707
  %call4 = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %3, %struct.mlxsw_reg_info* @mlxsw_reg_htgt, i8* %arraydecay3) #9, !dbg !17708
  store i32 %call4, i32* %err, align 4, !dbg !17709
  %4 = load i32, i32* %err, align 4, !dbg !17710
  %tobool5 = icmp ne i32 %4, 0, !dbg !17710
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !17712

if.then6:                                         ; preds = %if.end
  %5 = load i32, i32* %err, align 4, !dbg !17713
  store i32 %5, i32* %retval, align 4, !dbg !17714
  br label %return, !dbg !17714

if.end7:                                          ; preds = %if.end
  %arraydecay8 = getelementptr inbounds [32 x i8], [32 x i8]* %htgt_pl, i64 0, i64 0, !dbg !17715
  call void @mlxsw_reg_htgt_pack(i8* %arraydecay8, i8 zeroext 2, i8 zeroext -1, i8 zeroext 0, i8 zeroext 7) #9, !dbg !17716
  %6 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !17717
  %arraydecay9 = getelementptr inbounds [32 x i8], [32 x i8]* %htgt_pl, i64 0, i64 0, !dbg !17718
  %call10 = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %6, %struct.mlxsw_reg_info* @mlxsw_reg_htgt, i8* %arraydecay9) #9, !dbg !17719
  store i32 %call10, i32* %err, align 4, !dbg !17720
  %7 = load i32, i32* %err, align 4, !dbg !17721
  %tobool11 = icmp ne i32 %7, 0, !dbg !17721
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !17723

if.then12:                                        ; preds = %if.end7
  %8 = load i32, i32* %err, align 4, !dbg !17724
  store i32 %8, i32* %retval, align 4, !dbg !17725
  br label %return, !dbg !17725

if.end13:                                         ; preds = %if.end7
  %arraydecay14 = getelementptr inbounds [32 x i8], [32 x i8]* %htgt_pl, i64 0, i64 0, !dbg !17726
  call void @mlxsw_reg_htgt_pack(i8* %arraydecay14, i8 zeroext 3, i8 zeroext -1, i8 zeroext 0, i8 zeroext 7) #9, !dbg !17727
  %9 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !17728
  %arraydecay15 = getelementptr inbounds [32 x i8], [32 x i8]* %htgt_pl, i64 0, i64 0, !dbg !17729
  %call16 = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %9, %struct.mlxsw_reg_info* @mlxsw_reg_htgt, i8* %arraydecay15) #9, !dbg !17730
  store i32 %call16, i32* %retval, align 4, !dbg !17731
  br label %return, !dbg !17731

return:                                           ; preds = %if.end13, %if.then12, %if.then6, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !17732
  ret i32 %10, !dbg !17732
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_split(%struct.mlxsw_core* %mlxsw_core, i8 zeroext %local_port, i32 %count, %struct.netlink_ext_ack* %extack) #0 !dbg !12477 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %local_port.addr = alloca i8, align 1
  %count.addr = alloca i32, align 4
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %port_mapping = alloca %struct.mlxsw_sp_port_mapping, align 1
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %max_width = alloca i32, align 4
  %base_port = alloca i8, align 1
  %offset = alloca i32, align 4
  %i = alloca i32, align 4
  %err = alloca i32, align 4
  %__extack = alloca %struct.netlink_ext_ack*, align 8
  %__extack10 = alloca %struct.netlink_ext_ack*, align 8
  %__extack24 = alloca %struct.netlink_ext_ack*, align 8
  %__extack37 = alloca %struct.netlink_ext_ack*, align 8
  %__extack66 = alloca %struct.netlink_ext_ack*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !17733, metadata !DIExpression()), !dbg !17734
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !17735, metadata !DIExpression()), !dbg !17736
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !17737, metadata !DIExpression()), !dbg !17738
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !17739, metadata !DIExpression()), !dbg !17740
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !17741, metadata !DIExpression()), !dbg !17742
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !17743
  %call = call i8* @mlxsw_core_driver_priv(%struct.mlxsw_core* %0) #9, !dbg !17744
  %1 = bitcast i8* %call to %struct.mlxsw_sp*, !dbg !17744
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17742
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_mapping* %port_mapping, metadata !17745, metadata !DIExpression()), !dbg !17746
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !17747, metadata !DIExpression()), !dbg !17748
  call void @llvm.dbg.declare(metadata i32* %max_width, metadata !17749, metadata !DIExpression()), !dbg !17750
  call void @llvm.dbg.declare(metadata i8* %base_port, metadata !17751, metadata !DIExpression()), !dbg !17752
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !17753, metadata !DIExpression()), !dbg !17754
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17755, metadata !DIExpression()), !dbg !17756
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17757, metadata !DIExpression()), !dbg !17758
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17759
  %3 = load i8, i8* %local_port.addr, align 1, !dbg !17760
  %call1 = call %struct.mlxsw_sp_port* @mlxsw_sp_port_get_by_local_port(%struct.mlxsw_sp* %2, i8 zeroext %3) #9, !dbg !17761
  store %struct.mlxsw_sp_port* %call1, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17762
  %4 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17763
  %tobool = icmp ne %struct.mlxsw_sp_port* %4, null, !dbg !17763
  br i1 %tobool, label %if.end4, label %if.then, !dbg !17765

if.then:                                          ; preds = %entry
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17766
  %bus_info = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %5, i32 0, i32 2, !dbg !17766
  %6 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info, align 8, !dbg !17766
  %dev = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %6, i32 0, i32 2, !dbg !17766
  %7 = load %struct.device*, %struct.device** %dev, align 8, !dbg !17766
  %8 = load i8, i8* %local_port.addr, align 1, !dbg !17766
  %conv = zext i8 %8 to i32, !dbg !17766
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %7, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.369, i64 0, i64 0), i32 %conv) #13, !dbg !17766
  br label %do.body, !dbg !17768

do.body:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack, metadata !17769, metadata !DIExpression()), !dbg !17771
  %9 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !17771
  store %struct.netlink_ext_ack* %9, %struct.netlink_ext_ack** %__extack, align 8, !dbg !17771
  %10 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !17772
  %tobool2 = icmp ne %struct.netlink_ext_ack* %10, null, !dbg !17772
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !17771

if.then3:                                         ; preds = %do.body
  %11 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !17772
  %_msg = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %11, i32 0, i32 0, !dbg !17772
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @mlxsw_sp_port_split.__msg, i64 0, i64 0), i8** %_msg, align 8, !dbg !17772
  br label %if.end, !dbg !17772

if.end:                                           ; preds = %if.then3, %do.body
  br label %do.end, !dbg !17771

do.end:                                           ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !17774
  br label %return, !dbg !17774

if.end4:                                          ; preds = %entry
  %12 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !17775
  %13 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17776
  %mapping = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %13, i32 0, i32 9, !dbg !17777
  %module = getelementptr inbounds %struct.mlxsw_sp_port_mapping, %struct.mlxsw_sp_port_mapping* %mapping, i32 0, i32 0, !dbg !17778
  %14 = load i8, i8* %module, align 8, !dbg !17778
  %call5 = call i32 @mlxsw_core_module_max_width(%struct.mlxsw_core* %12, i8 zeroext %14) #9, !dbg !17779
  store i32 %call5, i32* %max_width, align 4, !dbg !17780
  %15 = load i32, i32* %max_width, align 4, !dbg !17781
  %cmp = icmp slt i32 %15, 0, !dbg !17783
  br i1 %cmp, label %if.then7, label %if.end16, !dbg !17784

if.then7:                                         ; preds = %if.end4
  %16 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17785
  %dev8 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %16, i32 0, i32 0, !dbg !17787
  %17 = load %struct.net_device*, %struct.net_device** %dev8, align 8, !dbg !17787
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %17, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.370, i64 0, i64 0)) #13, !dbg !17788
  br label %do.body9, !dbg !17789

do.body9:                                         ; preds = %if.then7
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack10, metadata !17790, metadata !DIExpression()), !dbg !17792
  %18 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !17792
  store %struct.netlink_ext_ack* %18, %struct.netlink_ext_ack** %__extack10, align 8, !dbg !17792
  %19 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack10, align 8, !dbg !17793
  %tobool11 = icmp ne %struct.netlink_ext_ack* %19, null, !dbg !17793
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !17792

if.then12:                                        ; preds = %do.body9
  %20 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack10, align 8, !dbg !17793
  %_msg13 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %20, i32 0, i32 0, !dbg !17793
  store i8* getelementptr inbounds ([52 x i8], [52 x i8]* @mlxsw_sp_port_split.__msg.371, i64 0, i64 0), i8** %_msg13, align 8, !dbg !17793
  br label %if.end14, !dbg !17793

if.end14:                                         ; preds = %if.then12, %do.body9
  br label %do.end15, !dbg !17792

do.end15:                                         ; preds = %if.end14
  %21 = load i32, i32* %max_width, align 4, !dbg !17795
  store i32 %21, i32* %retval, align 4, !dbg !17796
  br label %return, !dbg !17796

if.end16:                                         ; preds = %if.end4
  %22 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17797
  %mapping17 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %22, i32 0, i32 9, !dbg !17799
  %width = getelementptr inbounds %struct.mlxsw_sp_port_mapping, %struct.mlxsw_sp_port_mapping* %mapping17, i32 0, i32 1, !dbg !17800
  %23 = load i8, i8* %width, align 1, !dbg !17800
  %conv18 = zext i8 %23 to i32, !dbg !17797
  %24 = load i32, i32* %max_width, align 4, !dbg !17801
  %cmp19 = icmp ne i32 %conv18, %24, !dbg !17802
  br i1 %cmp19, label %if.then21, label %if.end30, !dbg !17803

if.then21:                                        ; preds = %if.end16
  %25 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17804
  %dev22 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %25, i32 0, i32 0, !dbg !17806
  %26 = load %struct.net_device*, %struct.net_device** %dev22, align 8, !dbg !17806
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %26, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.372, i64 0, i64 0)) #13, !dbg !17807
  br label %do.body23, !dbg !17808

do.body23:                                        ; preds = %if.then21
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack24, metadata !17809, metadata !DIExpression()), !dbg !17811
  %27 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !17811
  store %struct.netlink_ext_ack* %27, %struct.netlink_ext_ack** %__extack24, align 8, !dbg !17811
  %28 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack24, align 8, !dbg !17812
  %tobool25 = icmp ne %struct.netlink_ext_ack* %28, null, !dbg !17812
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !17811

if.then26:                                        ; preds = %do.body23
  %29 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack24, align 8, !dbg !17812
  %_msg27 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %29, i32 0, i32 0, !dbg !17812
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @mlxsw_sp_port_split.__msg.373, i64 0, i64 0), i8** %_msg27, align 8, !dbg !17812
  br label %if.end28, !dbg !17812

if.end28:                                         ; preds = %if.then26, %do.body23
  br label %do.end29, !dbg !17811

do.end29:                                         ; preds = %if.end28
  store i32 -22, i32* %retval, align 4, !dbg !17814
  br label %return, !dbg !17814

if.end30:                                         ; preds = %if.end16
  %30 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !17815
  %31 = load i32, i32* %count.addr, align 4, !dbg !17816
  %32 = load i32, i32* %max_width, align 4, !dbg !17817
  %call31 = call i32 @mlxsw_sp_local_ports_offset(%struct.mlxsw_core* %30, i32 %31, i32 %32) #9, !dbg !17818
  store i32 %call31, i32* %offset, align 4, !dbg !17819
  %33 = load i32, i32* %offset, align 4, !dbg !17820
  %cmp32 = icmp slt i32 %33, 0, !dbg !17822
  br i1 %cmp32, label %if.then34, label %if.end43, !dbg !17823

if.then34:                                        ; preds = %if.end30
  %34 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17824
  %dev35 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %34, i32 0, i32 0, !dbg !17826
  %35 = load %struct.net_device*, %struct.net_device** %dev35, align 8, !dbg !17826
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %35, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.374, i64 0, i64 0)) #13, !dbg !17827
  br label %do.body36, !dbg !17828

do.body36:                                        ; preds = %if.then34
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack37, metadata !17829, metadata !DIExpression()), !dbg !17831
  %36 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !17831
  store %struct.netlink_ext_ack* %36, %struct.netlink_ext_ack** %__extack37, align 8, !dbg !17831
  %37 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack37, align 8, !dbg !17832
  %tobool38 = icmp ne %struct.netlink_ext_ack* %37, null, !dbg !17832
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !17831

if.then39:                                        ; preds = %do.body36
  %38 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack37, align 8, !dbg !17832
  %_msg40 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %38, i32 0, i32 0, !dbg !17832
  store i8* getelementptr inbounds ([48 x i8], [48 x i8]* @mlxsw_sp_port_split.__msg.375, i64 0, i64 0), i8** %_msg40, align 8, !dbg !17832
  br label %if.end41, !dbg !17832

if.end41:                                         ; preds = %if.then39, %do.body36
  br label %do.end42, !dbg !17831

do.end42:                                         ; preds = %if.end41
  store i32 -22, i32* %retval, align 4, !dbg !17834
  br label %return, !dbg !17834

if.end43:                                         ; preds = %if.end30
  %39 = load i32, i32* %count.addr, align 4, !dbg !17835
  %40 = load i32, i32* %max_width, align 4, !dbg !17836
  %cmp44 = icmp eq i32 %39, %40, !dbg !17837
  br i1 %cmp44, label %cond.true, label %cond.false, !dbg !17835

cond.true:                                        ; preds = %if.end43
  %41 = load i8, i8* %local_port.addr, align 1, !dbg !17838
  %42 = load i32, i32* %max_width, align 4, !dbg !17839
  %call46 = call zeroext i8 @mlxsw_sp_cluster_base_port_get(i8 zeroext %41, i32 %42) #9, !dbg !17840
  %conv47 = zext i8 %call46 to i32, !dbg !17840
  br label %cond.end, !dbg !17835

cond.false:                                       ; preds = %if.end43
  %43 = load i8, i8* %local_port.addr, align 1, !dbg !17841
  %conv48 = zext i8 %43 to i32, !dbg !17841
  br label %cond.end, !dbg !17835

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv47, %cond.true ], [ %conv48, %cond.false ], !dbg !17835
  %conv49 = trunc i32 %cond to i8, !dbg !17835
  store i8 %conv49, i8* %base_port, align 1, !dbg !17842
  store i32 0, i32* %i, align 4, !dbg !17843
  br label %for.cond, !dbg !17845

for.cond:                                         ; preds = %for.inc, %cond.end
  %44 = load i32, i32* %i, align 4, !dbg !17846
  %45 = load i32, i32* %count.addr, align 4, !dbg !17848
  %46 = load i32, i32* %offset, align 4, !dbg !17849
  %mul = mul i32 %45, %46, !dbg !17850
  %cmp50 = icmp ult i32 %44, %mul, !dbg !17851
  br i1 %cmp50, label %for.body, label %for.end, !dbg !17852

for.body:                                         ; preds = %for.cond
  %47 = load i32, i32* %i, align 4, !dbg !17853
  %cmp52 = icmp eq i32 %47, 0, !dbg !17856
  br i1 %cmp52, label %if.then58, label %lor.lhs.false, !dbg !17857

lor.lhs.false:                                    ; preds = %for.body
  %48 = load i32, i32* %count.addr, align 4, !dbg !17858
  %49 = load i32, i32* %max_width, align 4, !dbg !17859
  %cmp54 = icmp eq i32 %48, %49, !dbg !17860
  br i1 %cmp54, label %land.lhs.true, label %if.end59, !dbg !17861

land.lhs.true:                                    ; preds = %lor.lhs.false
  %50 = load i32, i32* %i, align 4, !dbg !17862
  %51 = load i32, i32* %count.addr, align 4, !dbg !17863
  %div = udiv i32 %51, 2, !dbg !17864
  %cmp56 = icmp eq i32 %50, %div, !dbg !17865
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !17866

if.then58:                                        ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !17867

if.end59:                                         ; preds = %land.lhs.true, %lor.lhs.false
  %52 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17868
  %53 = load i8, i8* %base_port, align 1, !dbg !17870
  %conv60 = zext i8 %53 to i32, !dbg !17870
  %54 = load i32, i32* %i, align 4, !dbg !17871
  %add = add i32 %conv60, %54, !dbg !17872
  %conv61 = trunc i32 %add to i8, !dbg !17870
  %call62 = call zeroext i1 @mlxsw_sp_port_created(%struct.mlxsw_sp* %52, i8 zeroext %conv61) #9, !dbg !17873
  br i1 %call62, label %if.then63, label %if.end72, !dbg !17874

if.then63:                                        ; preds = %if.end59
  %55 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17875
  %dev64 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %55, i32 0, i32 0, !dbg !17877
  %56 = load %struct.net_device*, %struct.net_device** %dev64, align 8, !dbg !17877
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %56, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i64 0, i64 0)) #13, !dbg !17878
  br label %do.body65, !dbg !17879

do.body65:                                        ; preds = %if.then63
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack66, metadata !17880, metadata !DIExpression()), !dbg !17882
  %57 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !17882
  store %struct.netlink_ext_ack* %57, %struct.netlink_ext_ack** %__extack66, align 8, !dbg !17882
  %58 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack66, align 8, !dbg !17883
  %tobool67 = icmp ne %struct.netlink_ext_ack* %58, null, !dbg !17883
  br i1 %tobool67, label %if.then68, label %if.end70, !dbg !17882

if.then68:                                        ; preds = %do.body65
  %59 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack66, align 8, !dbg !17883
  %_msg69 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %59, i32 0, i32 0, !dbg !17883
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @mlxsw_sp_port_split.__msg.377, i64 0, i64 0), i8** %_msg69, align 8, !dbg !17883
  br label %if.end70, !dbg !17883

if.end70:                                         ; preds = %if.then68, %do.body65
  br label %do.end71, !dbg !17882

do.end71:                                         ; preds = %if.end70
  store i32 -22, i32* %retval, align 4, !dbg !17885
  br label %return, !dbg !17885

if.end72:                                         ; preds = %if.end59
  br label %for.inc, !dbg !17886

for.inc:                                          ; preds = %if.end72, %if.then58
  %60 = load i32, i32* %i, align 4, !dbg !17887
  %inc = add i32 %60, 1, !dbg !17887
  store i32 %inc, i32* %i, align 4, !dbg !17887
  br label %for.cond, !dbg !17888, !llvm.loop !17889

for.end:                                          ; preds = %for.cond
  %61 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17891
  %mapping73 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %61, i32 0, i32 9, !dbg !17892
  %62 = bitcast %struct.mlxsw_sp_port_mapping* %port_mapping to i8*, !dbg !17892
  %63 = bitcast %struct.mlxsw_sp_port_mapping* %mapping73 to i8*, !dbg !17892
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %62, i8* align 8 %63, i64 3, i1 false), !dbg !17892
  store i32 0, i32* %i, align 4, !dbg !17893
  br label %for.cond74, !dbg !17895

for.cond74:                                       ; preds = %for.inc89, %for.end
  %64 = load i32, i32* %i, align 4, !dbg !17896
  %65 = load i32, i32* %count.addr, align 4, !dbg !17898
  %cmp75 = icmp ult i32 %64, %65, !dbg !17899
  br i1 %cmp75, label %for.body77, label %for.end91, !dbg !17900

for.body77:                                       ; preds = %for.cond74
  %66 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17901
  %67 = load i8, i8* %base_port, align 1, !dbg !17903
  %conv78 = zext i8 %67 to i32, !dbg !17903
  %68 = load i32, i32* %i, align 4, !dbg !17904
  %69 = load i32, i32* %offset, align 4, !dbg !17905
  %mul79 = mul i32 %68, %69, !dbg !17906
  %add80 = add i32 %conv78, %mul79, !dbg !17907
  %conv81 = trunc i32 %add80 to i8, !dbg !17903
  %call82 = call zeroext i1 @mlxsw_sp_port_created(%struct.mlxsw_sp* %66, i8 zeroext %conv81) #9, !dbg !17908
  br i1 %call82, label %if.then83, label %if.end88, !dbg !17909

if.then83:                                        ; preds = %for.body77
  %70 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17910
  %71 = load i8, i8* %base_port, align 1, !dbg !17911
  %conv84 = zext i8 %71 to i32, !dbg !17911
  %72 = load i32, i32* %i, align 4, !dbg !17912
  %73 = load i32, i32* %offset, align 4, !dbg !17913
  %mul85 = mul i32 %72, %73, !dbg !17914
  %add86 = add i32 %conv84, %mul85, !dbg !17915
  %conv87 = trunc i32 %add86 to i8, !dbg !17911
  call void @mlxsw_sp_port_remove(%struct.mlxsw_sp* %70, i8 zeroext %conv87) #9, !dbg !17916
  br label %if.end88, !dbg !17916

if.end88:                                         ; preds = %if.then83, %for.body77
  br label %for.inc89, !dbg !17917

for.inc89:                                        ; preds = %if.end88
  %74 = load i32, i32* %i, align 4, !dbg !17918
  %inc90 = add i32 %74, 1, !dbg !17918
  store i32 %inc90, i32* %i, align 4, !dbg !17918
  br label %for.cond74, !dbg !17919, !llvm.loop !17920

for.end91:                                        ; preds = %for.cond74
  %75 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17922
  %76 = load i8, i8* %base_port, align 1, !dbg !17923
  %77 = load i32, i32* %count.addr, align 4, !dbg !17924
  %78 = load i32, i32* %offset, align 4, !dbg !17925
  %conv92 = trunc i32 %78 to i8, !dbg !17925
  %call93 = call i32 @mlxsw_sp_port_split_create(%struct.mlxsw_sp* %75, i8 zeroext %76, %struct.mlxsw_sp_port_mapping* %port_mapping, i32 %77, i8 zeroext %conv92) #9, !dbg !17926
  store i32 %call93, i32* %err, align 4, !dbg !17927
  %79 = load i32, i32* %err, align 4, !dbg !17928
  %tobool94 = icmp ne i32 %79, 0, !dbg !17928
  br i1 %tobool94, label %if.then95, label %if.end98, !dbg !17930

if.then95:                                        ; preds = %for.end91
  %80 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17931
  %bus_info96 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %80, i32 0, i32 2, !dbg !17931
  %81 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info96, align 8, !dbg !17931
  %dev97 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %81, i32 0, i32 2, !dbg !17931
  %82 = load %struct.device*, %struct.device** %dev97, align 8, !dbg !17931
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %82, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.378, i64 0, i64 0)) #13, !dbg !17931
  br label %err_port_split_create, !dbg !17933

if.end98:                                         ; preds = %for.end91
  store i32 0, i32* %retval, align 4, !dbg !17934
  br label %return, !dbg !17934

err_port_split_create:                            ; preds = %if.then95
  call void @llvm.dbg.label(metadata !17935), !dbg !17936
  %83 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17937
  %84 = load i8, i8* %base_port, align 1, !dbg !17938
  %85 = load i32, i32* %count.addr, align 4, !dbg !17939
  %86 = load i32, i32* %offset, align 4, !dbg !17940
  %conv99 = trunc i32 %86 to i8, !dbg !17940
  call void @mlxsw_sp_port_unsplit_create(%struct.mlxsw_sp* %83, i8 zeroext %84, i32 %85, i8 zeroext %conv99) #9, !dbg !17941
  %87 = load i32, i32* %err, align 4, !dbg !17942
  store i32 %87, i32* %retval, align 4, !dbg !17943
  br label %return, !dbg !17943

return:                                           ; preds = %err_port_split_create, %if.end98, %do.end71, %do.end42, %do.end29, %do.end15, %do.end
  %88 = load i32, i32* %retval, align 4, !dbg !17944
  ret i32 %88, !dbg !17944
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_unsplit(%struct.mlxsw_core* %mlxsw_core, i8 zeroext %local_port, %struct.netlink_ext_ack* %extack) #0 !dbg !12494 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %local_port.addr = alloca i8, align 1
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %count = alloca i32, align 4
  %max_width = alloca i32, align 4
  %base_port = alloca i8, align 1
  %offset = alloca i32, align 4
  %i = alloca i32, align 4
  %__extack = alloca %struct.netlink_ext_ack*, align 8
  %__extack9 = alloca %struct.netlink_ext_ack*, align 8
  %__extack21 = alloca %struct.netlink_ext_ack*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__extack61 = alloca %struct.netlink_ext_ack*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !17945, metadata !DIExpression()), !dbg !17946
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !17947, metadata !DIExpression()), !dbg !17948
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !17949, metadata !DIExpression()), !dbg !17950
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !17951, metadata !DIExpression()), !dbg !17952
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !17953
  %call = call i8* @mlxsw_core_driver_priv(%struct.mlxsw_core* %0) #9, !dbg !17954
  %1 = bitcast i8* %call to %struct.mlxsw_sp*, !dbg !17954
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17952
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !17955, metadata !DIExpression()), !dbg !17956
  call void @llvm.dbg.declare(metadata i32* %count, metadata !17957, metadata !DIExpression()), !dbg !17958
  call void @llvm.dbg.declare(metadata i32* %max_width, metadata !17959, metadata !DIExpression()), !dbg !17960
  call void @llvm.dbg.declare(metadata i8* %base_port, metadata !17961, metadata !DIExpression()), !dbg !17962
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !17963, metadata !DIExpression()), !dbg !17964
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17965, metadata !DIExpression()), !dbg !17966
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17967
  %3 = load i8, i8* %local_port.addr, align 1, !dbg !17968
  %call1 = call %struct.mlxsw_sp_port* @mlxsw_sp_port_get_by_local_port(%struct.mlxsw_sp* %2, i8 zeroext %3) #9, !dbg !17969
  store %struct.mlxsw_sp_port* %call1, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17970
  %4 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17971
  %tobool = icmp ne %struct.mlxsw_sp_port* %4, null, !dbg !17971
  br i1 %tobool, label %if.end4, label %if.then, !dbg !17973

if.then:                                          ; preds = %entry
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !17974
  %bus_info = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %5, i32 0, i32 2, !dbg !17974
  %6 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info, align 8, !dbg !17974
  %dev = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %6, i32 0, i32 2, !dbg !17974
  %7 = load %struct.device*, %struct.device** %dev, align 8, !dbg !17974
  %8 = load i8, i8* %local_port.addr, align 1, !dbg !17974
  %conv = zext i8 %8 to i32, !dbg !17974
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %7, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.369, i64 0, i64 0), i32 %conv) #13, !dbg !17974
  br label %do.body, !dbg !17976

do.body:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack, metadata !17977, metadata !DIExpression()), !dbg !17979
  %9 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !17979
  store %struct.netlink_ext_ack* %9, %struct.netlink_ext_ack** %__extack, align 8, !dbg !17979
  %10 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !17980
  %tobool2 = icmp ne %struct.netlink_ext_ack* %10, null, !dbg !17980
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !17979

if.then3:                                         ; preds = %do.body
  %11 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !17980
  %_msg = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %11, i32 0, i32 0, !dbg !17980
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @mlxsw_sp_port_unsplit.__msg, i64 0, i64 0), i8** %_msg, align 8, !dbg !17980
  br label %if.end, !dbg !17980

if.end:                                           ; preds = %if.then3, %do.body
  br label %do.end, !dbg !17979

do.end:                                           ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !17982
  br label %return, !dbg !17982

if.end4:                                          ; preds = %entry
  %12 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17983
  %split = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %12, i32 0, i32 4, !dbg !17985
  %bf.load = load i8, i8* %split, align 1, !dbg !17985
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !17985
  %bf.clear = and i8 %bf.lshr, 1, !dbg !17985
  %tobool5 = icmp ne i8 %bf.clear, 0, !dbg !17983
  br i1 %tobool5, label %if.end15, label %if.then6, !dbg !17986

if.then6:                                         ; preds = %if.end4
  %13 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17987
  %dev7 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %13, i32 0, i32 0, !dbg !17989
  %14 = load %struct.net_device*, %struct.net_device** %dev7, align 8, !dbg !17989
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %14, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.379, i64 0, i64 0)) #13, !dbg !17990
  br label %do.body8, !dbg !17991

do.body8:                                         ; preds = %if.then6
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack9, metadata !17992, metadata !DIExpression()), !dbg !17994
  %15 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !17994
  store %struct.netlink_ext_ack* %15, %struct.netlink_ext_ack** %__extack9, align 8, !dbg !17994
  %16 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack9, align 8, !dbg !17995
  %tobool10 = icmp ne %struct.netlink_ext_ack* %16, null, !dbg !17995
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !17994

if.then11:                                        ; preds = %do.body8
  %17 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack9, align 8, !dbg !17995
  %_msg12 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %17, i32 0, i32 0, !dbg !17995
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @mlxsw_sp_port_unsplit.__msg.380, i64 0, i64 0), i8** %_msg12, align 8, !dbg !17995
  br label %if.end13, !dbg !17995

if.end13:                                         ; preds = %if.then11, %do.body8
  br label %do.end14, !dbg !17994

do.end14:                                         ; preds = %if.end13
  store i32 -22, i32* %retval, align 4, !dbg !17997
  br label %return, !dbg !17997

if.end15:                                         ; preds = %if.end4
  %18 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !17998
  %19 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !17999
  %mapping = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %19, i32 0, i32 9, !dbg !18000
  %module = getelementptr inbounds %struct.mlxsw_sp_port_mapping, %struct.mlxsw_sp_port_mapping* %mapping, i32 0, i32 0, !dbg !18001
  %20 = load i8, i8* %module, align 8, !dbg !18001
  %call16 = call i32 @mlxsw_core_module_max_width(%struct.mlxsw_core* %18, i8 zeroext %20) #9, !dbg !18002
  store i32 %call16, i32* %max_width, align 4, !dbg !18003
  %21 = load i32, i32* %max_width, align 4, !dbg !18004
  %cmp = icmp slt i32 %21, 0, !dbg !18006
  br i1 %cmp, label %if.then18, label %if.end27, !dbg !18007

if.then18:                                        ; preds = %if.end15
  %22 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !18008
  %dev19 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %22, i32 0, i32 0, !dbg !18010
  %23 = load %struct.net_device*, %struct.net_device** %dev19, align 8, !dbg !18010
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %23, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.370, i64 0, i64 0)) #13, !dbg !18011
  br label %do.body20, !dbg !18012

do.body20:                                        ; preds = %if.then18
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack21, metadata !18013, metadata !DIExpression()), !dbg !18015
  %24 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !18015
  store %struct.netlink_ext_ack* %24, %struct.netlink_ext_ack** %__extack21, align 8, !dbg !18015
  %25 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack21, align 8, !dbg !18016
  %tobool22 = icmp ne %struct.netlink_ext_ack* %25, null, !dbg !18016
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !18015

if.then23:                                        ; preds = %do.body20
  %26 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack21, align 8, !dbg !18016
  %_msg24 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %26, i32 0, i32 0, !dbg !18016
  store i8* getelementptr inbounds ([52 x i8], [52 x i8]* @mlxsw_sp_port_unsplit.__msg.381, i64 0, i64 0), i8** %_msg24, align 8, !dbg !18016
  br label %if.end25, !dbg !18016

if.end25:                                         ; preds = %if.then23, %do.body20
  br label %do.end26, !dbg !18015

do.end26:                                         ; preds = %if.end25
  %27 = load i32, i32* %max_width, align 4, !dbg !18018
  store i32 %27, i32* %retval, align 4, !dbg !18019
  br label %return, !dbg !18019

if.end27:                                         ; preds = %if.end15
  %28 = load i32, i32* %max_width, align 4, !dbg !18020
  %29 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !18021
  %mapping28 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %29, i32 0, i32 9, !dbg !18022
  %width = getelementptr inbounds %struct.mlxsw_sp_port_mapping, %struct.mlxsw_sp_port_mapping* %mapping28, i32 0, i32 1, !dbg !18023
  %30 = load i8, i8* %width, align 1, !dbg !18023
  %conv29 = zext i8 %30 to i32, !dbg !18021
  %div = sdiv i32 %28, %conv29, !dbg !18024
  store i32 %div, i32* %count, align 4, !dbg !18025
  %31 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !18026
  %32 = load i32, i32* %count, align 4, !dbg !18027
  %33 = load i32, i32* %max_width, align 4, !dbg !18028
  %call30 = call i32 @mlxsw_sp_local_ports_offset(%struct.mlxsw_core* %31, i32 %32, i32 %33) #9, !dbg !18029
  store i32 %call30, i32* %offset, align 4, !dbg !18030
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !18031, metadata !DIExpression()), !dbg !18034
  %34 = load i32, i32* %offset, align 4, !dbg !18034
  %cmp31 = icmp slt i32 %34, 0, !dbg !18034
  %lnot = xor i1 %cmp31, true, !dbg !18034
  %lnot33 = xor i1 %lnot, true, !dbg !18034
  %lnot.ext = zext i1 %lnot33 to i32, !dbg !18034
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !18034
  %35 = load i32, i32* %__ret_warn_on, align 4, !dbg !18035
  %tobool34 = icmp ne i32 %35, 0, !dbg !18035
  %lnot35 = xor i1 %tobool34, true, !dbg !18035
  %lnot37 = xor i1 %lnot35, true, !dbg !18035
  %lnot.ext38 = zext i1 %lnot37 to i32, !dbg !18035
  %conv39 = sext i32 %lnot.ext38 to i64, !dbg !18035
  %tobool40 = icmp ne i64 %conv39, 0, !dbg !18035
  br i1 %tobool40, label %if.then41, label %if.end50, !dbg !18034

if.then41:                                        ; preds = %if.end27
  br label %do.body42, !dbg !18035

do.body42:                                        ; preds = %if.then41
  br label %do.body43, !dbg !18037

do.body43:                                        ; preds = %do.body42
  br label %do.end44, !dbg !18039

do.end44:                                         ; preds = %do.body43
  br label %do.body45, !dbg !18037

do.body45:                                        ; preds = %do.end44
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 2023, i32 2305, i64 12) #10, !dbg !18041, !srcloc !18043
  br label %do.end46, !dbg !18041

do.end46:                                         ; preds = %do.body45
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 662) #10, !dbg !18044, !srcloc !18046
  br label %do.body47, !dbg !18037

do.body47:                                        ; preds = %do.end46
  br label %do.end48, !dbg !18047

do.end48:                                         ; preds = %do.body47
  br label %do.end49, !dbg !18037

do.end49:                                         ; preds = %do.end48
  br label %if.end50, !dbg !18037

if.end50:                                         ; preds = %do.end49, %if.end27
  %36 = load i32, i32* %__ret_warn_on, align 4, !dbg !18034
  %tobool51 = icmp ne i32 %36, 0, !dbg !18034
  %lnot52 = xor i1 %tobool51, true, !dbg !18034
  %lnot54 = xor i1 %lnot52, true, !dbg !18034
  %lnot.ext55 = zext i1 %lnot54 to i32, !dbg !18034
  %conv56 = sext i32 %lnot.ext55 to i64, !dbg !18034
  store i64 %conv56, i64* %tmp, align 8, !dbg !18035
  %37 = load i64, i64* %tmp, align 8, !dbg !18034
  %tobool57 = icmp ne i64 %37, 0, !dbg !18049
  br i1 %tobool57, label %if.then58, label %if.end67, !dbg !18050

if.then58:                                        ; preds = %if.end50
  %38 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !18051
  %dev59 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %38, i32 0, i32 0, !dbg !18053
  %39 = load %struct.net_device*, %struct.net_device** %dev59, align 8, !dbg !18053
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %39, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.374, i64 0, i64 0)) #13, !dbg !18054
  br label %do.body60, !dbg !18055

do.body60:                                        ; preds = %if.then58
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack61, metadata !18056, metadata !DIExpression()), !dbg !18058
  %40 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !18058
  store %struct.netlink_ext_ack* %40, %struct.netlink_ext_ack** %__extack61, align 8, !dbg !18058
  %41 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack61, align 8, !dbg !18059
  %tobool62 = icmp ne %struct.netlink_ext_ack* %41, null, !dbg !18059
  br i1 %tobool62, label %if.then63, label %if.end65, !dbg !18058

if.then63:                                        ; preds = %do.body60
  %42 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack61, align 8, !dbg !18059
  %_msg64 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %42, i32 0, i32 0, !dbg !18059
  store i8* getelementptr inbounds ([48 x i8], [48 x i8]* @mlxsw_sp_port_unsplit.__msg.382, i64 0, i64 0), i8** %_msg64, align 8, !dbg !18059
  br label %if.end65, !dbg !18059

if.end65:                                         ; preds = %if.then63, %do.body60
  br label %do.end66, !dbg !18058

do.end66:                                         ; preds = %if.end65
  store i32 -22, i32* %retval, align 4, !dbg !18061
  br label %return, !dbg !18061

if.end67:                                         ; preds = %if.end50
  %43 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !18062
  %split_base_local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %43, i32 0, i32 19, !dbg !18063
  %44 = load i8, i8* %split_base_local_port, align 8, !dbg !18063
  store i8 %44, i8* %base_port, align 1, !dbg !18064
  store i32 0, i32* %i, align 4, !dbg !18065
  br label %for.cond, !dbg !18067

for.cond:                                         ; preds = %for.inc, %if.end67
  %45 = load i32, i32* %i, align 4, !dbg !18068
  %46 = load i32, i32* %count, align 4, !dbg !18070
  %cmp68 = icmp ult i32 %45, %46, !dbg !18071
  br i1 %cmp68, label %for.body, label %for.end, !dbg !18072

for.body:                                         ; preds = %for.cond
  %47 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18073
  %48 = load i8, i8* %base_port, align 1, !dbg !18075
  %conv70 = zext i8 %48 to i32, !dbg !18075
  %49 = load i32, i32* %i, align 4, !dbg !18076
  %50 = load i32, i32* %offset, align 4, !dbg !18077
  %mul = mul i32 %49, %50, !dbg !18078
  %add = add i32 %conv70, %mul, !dbg !18079
  %conv71 = trunc i32 %add to i8, !dbg !18075
  %call72 = call zeroext i1 @mlxsw_sp_port_created(%struct.mlxsw_sp* %47, i8 zeroext %conv71) #9, !dbg !18080
  br i1 %call72, label %if.then73, label %if.end78, !dbg !18081

if.then73:                                        ; preds = %for.body
  %51 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18082
  %52 = load i8, i8* %base_port, align 1, !dbg !18083
  %conv74 = zext i8 %52 to i32, !dbg !18083
  %53 = load i32, i32* %i, align 4, !dbg !18084
  %54 = load i32, i32* %offset, align 4, !dbg !18085
  %mul75 = mul i32 %53, %54, !dbg !18086
  %add76 = add i32 %conv74, %mul75, !dbg !18087
  %conv77 = trunc i32 %add76 to i8, !dbg !18083
  call void @mlxsw_sp_port_remove(%struct.mlxsw_sp* %51, i8 zeroext %conv77) #9, !dbg !18088
  br label %if.end78, !dbg !18088

if.end78:                                         ; preds = %if.then73, %for.body
  br label %for.inc, !dbg !18089

for.inc:                                          ; preds = %if.end78
  %55 = load i32, i32* %i, align 4, !dbg !18090
  %inc = add i32 %55, 1, !dbg !18090
  store i32 %inc, i32* %i, align 4, !dbg !18090
  br label %for.cond, !dbg !18091, !llvm.loop !18092

for.end:                                          ; preds = %for.cond
  %56 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18094
  %57 = load i8, i8* %base_port, align 1, !dbg !18095
  %58 = load i32, i32* %count, align 4, !dbg !18096
  %59 = load i32, i32* %offset, align 4, !dbg !18097
  %conv79 = trunc i32 %59 to i8, !dbg !18097
  call void @mlxsw_sp_port_unsplit_create(%struct.mlxsw_sp* %56, i8 zeroext %57, i32 %58, i8 zeroext %conv79) #9, !dbg !18098
  store i32 0, i32* %retval, align 4, !dbg !18099
  br label %return, !dbg !18099

return:                                           ; preds = %for.end, %do.end66, %do.end26, %do.end14, %do.end
  %60 = load i32, i32* %retval, align 4, !dbg !18100
  ret i32 %60, !dbg !18100
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_sb_pool_get(%struct.mlxsw_core*, i32, i16 zeroext, %struct.devlink_sb_pool_info*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_sb_pool_set(%struct.mlxsw_core*, i32, i16 zeroext, i32, i32, %struct.netlink_ext_ack*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_sb_port_pool_get(%struct.mlxsw_core_port*, i32, i16 zeroext, i32*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_sb_port_pool_set(%struct.mlxsw_core_port*, i32, i16 zeroext, i32, %struct.netlink_ext_ack*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_sb_tc_pool_bind_get(%struct.mlxsw_core_port*, i32, i16 zeroext, i32, i16*, i32*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_sb_tc_pool_bind_set(%struct.mlxsw_core_port*, i32, i16 zeroext, i32, i16 zeroext, i32, %struct.netlink_ext_ack*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_sb_occ_snapshot(%struct.mlxsw_core*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_sb_occ_max_clear(%struct.mlxsw_core*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_sb_occ_port_pool_get(%struct.mlxsw_core_port*, i32, i16 zeroext, i32*, i32*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_sb_occ_tc_port_bind_get(%struct.mlxsw_core_port*, i32, i16 zeroext, i32, i32*, i32*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_trap_init(%struct.mlxsw_core*, %struct.devlink_trap*, i8*) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_trap_fini(%struct.mlxsw_core*, %struct.devlink_trap*, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_trap_action_set(%struct.mlxsw_core*, %struct.devlink_trap*, i32, %struct.netlink_ext_ack*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_trap_group_init(%struct.mlxsw_core*, %struct.devlink_trap_group*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_trap_group_set(%struct.mlxsw_core*, %struct.devlink_trap_group*, %struct.devlink_trap_policer*, %struct.netlink_ext_ack*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_trap_policer_init(%struct.mlxsw_core*, %struct.devlink_trap_policer*) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_trap_policer_fini(%struct.mlxsw_core*, %struct.devlink_trap_policer*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_trap_policer_set(%struct.mlxsw_core*, %struct.devlink_trap_policer*, i64, i64, %struct.netlink_ext_ack*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_trap_policer_counter_get(%struct.mlxsw_core*, %struct.devlink_trap_policer*, i64*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp2_resources_register(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !18101 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !18102, metadata !DIExpression()), !dbg !18103
  call void @llvm.dbg.declare(metadata i32* %err, metadata !18104, metadata !DIExpression()), !dbg !18105
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !18106
  %call = call i32 @mlxsw_sp2_resources_kvd_register(%struct.mlxsw_core* %0) #9, !dbg !18107
  store i32 %call, i32* %err, align 4, !dbg !18108
  %1 = load i32, i32* %err, align 4, !dbg !18109
  %tobool = icmp ne i32 %1, 0, !dbg !18109
  br i1 %tobool, label %if.then, label %if.end, !dbg !18111

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %err, align 4, !dbg !18112
  store i32 %2, i32* %retval, align 4, !dbg !18113
  br label %return, !dbg !18113

if.end:                                           ; preds = %entry
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !18114
  %call1 = call i32 @mlxsw_sp_resources_span_register(%struct.mlxsw_core* %3) #9, !dbg !18115
  store i32 %call1, i32* %err, align 4, !dbg !18116
  %4 = load i32, i32* %err, align 4, !dbg !18117
  %tobool2 = icmp ne i32 %4, 0, !dbg !18117
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !18119

if.then3:                                         ; preds = %if.end
  br label %err_resources_span_register, !dbg !18120

if.end4:                                          ; preds = %if.end
  %5 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !18121
  %call5 = call i32 @mlxsw_sp_counter_resources_register(%struct.mlxsw_core* %5) #9, !dbg !18122
  store i32 %call5, i32* %err, align 4, !dbg !18123
  %6 = load i32, i32* %err, align 4, !dbg !18124
  %tobool6 = icmp ne i32 %6, 0, !dbg !18124
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !18126

if.then7:                                         ; preds = %if.end4
  br label %err_resources_counter_register, !dbg !18127

if.end8:                                          ; preds = %if.end4
  %7 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !18128
  %call9 = call i32 @mlxsw_sp_policer_resources_register(%struct.mlxsw_core* %7) #9, !dbg !18129
  store i32 %call9, i32* %err, align 4, !dbg !18130
  %8 = load i32, i32* %err, align 4, !dbg !18131
  %tobool10 = icmp ne i32 %8, 0, !dbg !18131
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !18133

if.then11:                                        ; preds = %if.end8
  br label %err_resources_counter_register, !dbg !18134

if.end12:                                         ; preds = %if.end8
  store i32 0, i32* %retval, align 4, !dbg !18135
  br label %return, !dbg !18135

err_resources_counter_register:                   ; preds = %if.then11, %if.then7
  call void @llvm.dbg.label(metadata !18136), !dbg !18137
  br label %err_resources_span_register, !dbg !18135

err_resources_span_register:                      ; preds = %err_resources_counter_register, %if.then3
  call void @llvm.dbg.label(metadata !18138), !dbg !18139
  %9 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !18140
  %10 = bitcast %struct.mlxsw_core* %9 to i8*, !dbg !18140
  %call13 = call %struct.devlink* @priv_to_devlink(i8* %10) #9, !dbg !18141
  call void @devlink_resources_unregister(%struct.devlink* %call13, %struct.devlink_resource* null) #9, !dbg !18142
  %11 = load i32, i32* %err, align 4, !dbg !18143
  store i32 %11, i32* %retval, align 4, !dbg !18144
  br label %return, !dbg !18144

return:                                           ; preds = %err_resources_span_register, %if.end12, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !18145
  ret i32 %12, !dbg !18145
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp2_params_register(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !18146 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %devlink = alloca %struct.devlink*, align 8
  %value = alloca %union.devlink_param_value, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !18147, metadata !DIExpression()), !dbg !18148
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink, metadata !18149, metadata !DIExpression()), !dbg !18150
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !18151
  %1 = bitcast %struct.mlxsw_core* %0 to i8*, !dbg !18151
  %call = call %struct.devlink* @priv_to_devlink(i8* %1) #9, !dbg !18152
  store %struct.devlink* %call, %struct.devlink** %devlink, align 8, !dbg !18150
  call void @llvm.dbg.declare(metadata %union.devlink_param_value* %value, metadata !18153, metadata !DIExpression()), !dbg !18154
  call void @llvm.dbg.declare(metadata i32* %err, metadata !18155, metadata !DIExpression()), !dbg !18156
  %2 = load %struct.devlink*, %struct.devlink** %devlink, align 8, !dbg !18157
  %call1 = call i32 @devlink_params_register(%struct.devlink* %2, %struct.devlink_param* getelementptr inbounds ([1 x %struct.devlink_param], [1 x %struct.devlink_param]* @mlxsw_sp2_devlink_params, i64 0, i64 0), i64 1) #9, !dbg !18158
  store i32 %call1, i32* %err, align 4, !dbg !18159
  %3 = load i32, i32* %err, align 4, !dbg !18160
  %tobool = icmp ne i32 %3, 0, !dbg !18160
  br i1 %tobool, label %if.then, label %if.end, !dbg !18162

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %err, align 4, !dbg !18163
  store i32 %4, i32* %retval, align 4, !dbg !18164
  br label %return, !dbg !18164

if.end:                                           ; preds = %entry
  %vu32 = bitcast %union.devlink_param_value* %value to i32*, !dbg !18165
  store i32 0, i32* %vu32, align 4, !dbg !18166
  %5 = load %struct.devlink*, %struct.devlink** %devlink, align 8, !dbg !18167
  %call2 = call i32 @devlink_param_driverinit_value_set(%struct.devlink* %5, i32 11, %union.devlink_param_value* byval(%union.devlink_param_value) align 8 %value) #9, !dbg !18168
  store i32 0, i32* %retval, align 4, !dbg !18169
  br label %return, !dbg !18169

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !18170
  ret i32 %6, !dbg !18170
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp2_params_unregister(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !18171 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !18172, metadata !DIExpression()), !dbg !18173
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !18174
  %1 = bitcast %struct.mlxsw_core* %0 to i8*, !dbg !18174
  %call = call %struct.devlink* @priv_to_devlink(i8* %1) #9, !dbg !18175
  call void @devlink_params_unregister(%struct.devlink* %call, %struct.devlink_param* getelementptr inbounds ([1 x %struct.devlink_param], [1 x %struct.devlink_param]* @mlxsw_sp2_devlink_params, i64 0, i64 0), i64 1) #9, !dbg !18176
  ret void, !dbg !18177
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_ptp_transmitted(%struct.mlxsw_core* %mlxsw_core, %struct.sk_buff* %skb, i8 zeroext %local_port) #0 !dbg !18178 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %local_port.addr = alloca i8, align 1
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !18179, metadata !DIExpression()), !dbg !18180
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !18181, metadata !DIExpression()), !dbg !18182
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !18183, metadata !DIExpression()), !dbg !18184
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !18185, metadata !DIExpression()), !dbg !18186
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !18187
  %call = call i8* @mlxsw_core_driver_priv(%struct.mlxsw_core* %0) #9, !dbg !18188
  %1 = bitcast i8* %call to %struct.mlxsw_sp*, !dbg !18188
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18186
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !18189
  %call1 = call i8* @skb_pull(%struct.sk_buff* %2, i32 16) #9, !dbg !18190
  %3 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18191
  %ptp_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %3, i32 0, i32 34, !dbg !18192
  %4 = load %struct.mlxsw_sp_ptp_ops*, %struct.mlxsw_sp_ptp_ops** %ptp_ops, align 8, !dbg !18192
  %transmitted = getelementptr inbounds %struct.mlxsw_sp_ptp_ops, %struct.mlxsw_sp_ptp_ops* %4, i32 0, i32 5, !dbg !18193
  %5 = load void (%struct.mlxsw_sp*, %struct.sk_buff*, i8)*, void (%struct.mlxsw_sp*, %struct.sk_buff*, i8)** %transmitted, align 8, !dbg !18193
  %6 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18194
  %7 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !18195
  %8 = load i8, i8* %local_port.addr, align 1, !dbg !18196
  call void %5(%struct.mlxsw_sp* %6, %struct.sk_buff* %7, i8 zeroext %8) #9, !dbg !18191
  ret void, !dbg !18197
}

; Function Attrs: noredzone
declare dso_local i8* @mlxsw_core_driver_priv(%struct.mlxsw_core*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_init(%struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_bus_info* %mlxsw_bus_info, %struct.netlink_ext_ack* %extack) #0 !dbg !18198 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %mlxsw_bus_info.addr = alloca %struct.mlxsw_bus_info*, align 8
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !18199, metadata !DIExpression()), !dbg !18200
  store %struct.mlxsw_bus_info* %mlxsw_bus_info, %struct.mlxsw_bus_info** %mlxsw_bus_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_bus_info** %mlxsw_bus_info.addr, metadata !18201, metadata !DIExpression()), !dbg !18202
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !18203, metadata !DIExpression()), !dbg !18204
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !18205, metadata !DIExpression()), !dbg !18206
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !18207
  %call = call i8* @mlxsw_core_driver_priv(%struct.mlxsw_core* %0) #9, !dbg !18208
  %1 = bitcast i8* %call to %struct.mlxsw_sp*, !dbg !18208
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18206
  call void @llvm.dbg.declare(metadata i32* %err, metadata !18209, metadata !DIExpression()), !dbg !18210
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !18211
  %3 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18212
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %3, i32 0, i32 1, !dbg !18213
  store %struct.mlxsw_core* %2, %struct.mlxsw_core** %core, align 8, !dbg !18214
  %4 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %mlxsw_bus_info.addr, align 8, !dbg !18215
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18216
  %bus_info = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %5, i32 0, i32 2, !dbg !18217
  store %struct.mlxsw_bus_info* %4, %struct.mlxsw_bus_info** %bus_info, align 8, !dbg !18218
  %6 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !18219
  call void @mlxsw_core_emad_string_tlv_enable(%struct.mlxsw_core* %6) #9, !dbg !18220
  %7 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18221
  %call1 = call i32 @mlxsw_sp_base_mac_get(%struct.mlxsw_sp* %7) #9, !dbg !18222
  store i32 %call1, i32* %err, align 4, !dbg !18223
  %8 = load i32, i32* %err, align 4, !dbg !18224
  %tobool = icmp ne i32 %8, 0, !dbg !18224
  br i1 %tobool, label %if.then, label %if.end, !dbg !18226

if.then:                                          ; preds = %entry
  %9 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18227
  %bus_info2 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %9, i32 0, i32 2, !dbg !18227
  %10 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info2, align 8, !dbg !18227
  %dev = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %10, i32 0, i32 2, !dbg !18227
  %11 = load %struct.device*, %struct.device** %dev, align 8, !dbg !18227
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %11, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.164, i64 0, i64 0)) #13, !dbg !18227
  %12 = load i32, i32* %err, align 4, !dbg !18229
  store i32 %12, i32* %retval, align 4, !dbg !18230
  br label %return, !dbg !18230

if.end:                                           ; preds = %entry
  %13 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18231
  %call3 = call i32 @mlxsw_sp_kvdl_init(%struct.mlxsw_sp* %13) #9, !dbg !18232
  store i32 %call3, i32* %err, align 4, !dbg !18233
  %14 = load i32, i32* %err, align 4, !dbg !18234
  %tobool4 = icmp ne i32 %14, 0, !dbg !18234
  br i1 %tobool4, label %if.then5, label %if.end8, !dbg !18236

if.then5:                                         ; preds = %if.end
  %15 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18237
  %bus_info6 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %15, i32 0, i32 2, !dbg !18237
  %16 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info6, align 8, !dbg !18237
  %dev7 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %16, i32 0, i32 2, !dbg !18237
  %17 = load %struct.device*, %struct.device** %dev7, align 8, !dbg !18237
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %17, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.165, i64 0, i64 0)) #13, !dbg !18237
  %18 = load i32, i32* %err, align 4, !dbg !18239
  store i32 %18, i32* %retval, align 4, !dbg !18240
  br label %return, !dbg !18240

if.end8:                                          ; preds = %if.end
  %19 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18241
  %call9 = call i32 @mlxsw_sp_fids_init(%struct.mlxsw_sp* %19) #9, !dbg !18242
  store i32 %call9, i32* %err, align 4, !dbg !18243
  %20 = load i32, i32* %err, align 4, !dbg !18244
  %tobool10 = icmp ne i32 %20, 0, !dbg !18244
  br i1 %tobool10, label %if.then11, label %if.end14, !dbg !18246

if.then11:                                        ; preds = %if.end8
  %21 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18247
  %bus_info12 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %21, i32 0, i32 2, !dbg !18247
  %22 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info12, align 8, !dbg !18247
  %dev13 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %22, i32 0, i32 2, !dbg !18247
  %23 = load %struct.device*, %struct.device** %dev13, align 8, !dbg !18247
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %23, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.166, i64 0, i64 0)) #13, !dbg !18247
  br label %err_fids_init, !dbg !18249

if.end14:                                         ; preds = %if.end8
  %24 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18250
  %call15 = call i32 @mlxsw_sp_policers_init(%struct.mlxsw_sp* %24) #9, !dbg !18251
  store i32 %call15, i32* %err, align 4, !dbg !18252
  %25 = load i32, i32* %err, align 4, !dbg !18253
  %tobool16 = icmp ne i32 %25, 0, !dbg !18253
  br i1 %tobool16, label %if.then17, label %if.end20, !dbg !18255

if.then17:                                        ; preds = %if.end14
  %26 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18256
  %bus_info18 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %26, i32 0, i32 2, !dbg !18256
  %27 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info18, align 8, !dbg !18256
  %dev19 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %27, i32 0, i32 2, !dbg !18256
  %28 = load %struct.device*, %struct.device** %dev19, align 8, !dbg !18256
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %28, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.167, i64 0, i64 0)) #13, !dbg !18256
  br label %err_policers_init, !dbg !18258

if.end20:                                         ; preds = %if.end14
  %29 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18259
  %call21 = call i32 @mlxsw_sp_traps_init(%struct.mlxsw_sp* %29) #9, !dbg !18260
  store i32 %call21, i32* %err, align 4, !dbg !18261
  %30 = load i32, i32* %err, align 4, !dbg !18262
  %tobool22 = icmp ne i32 %30, 0, !dbg !18262
  br i1 %tobool22, label %if.then23, label %if.end26, !dbg !18264

if.then23:                                        ; preds = %if.end20
  %31 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18265
  %bus_info24 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %31, i32 0, i32 2, !dbg !18265
  %32 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info24, align 8, !dbg !18265
  %dev25 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %32, i32 0, i32 2, !dbg !18265
  %33 = load %struct.device*, %struct.device** %dev25, align 8, !dbg !18265
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %33, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.168, i64 0, i64 0)) #13, !dbg !18265
  br label %err_traps_init, !dbg !18267

if.end26:                                         ; preds = %if.end20
  %34 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18268
  %call27 = call i32 @mlxsw_sp_devlink_traps_init(%struct.mlxsw_sp* %34) #9, !dbg !18269
  store i32 %call27, i32* %err, align 4, !dbg !18270
  %35 = load i32, i32* %err, align 4, !dbg !18271
  %tobool28 = icmp ne i32 %35, 0, !dbg !18271
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !18273

if.then29:                                        ; preds = %if.end26
  %36 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18274
  %bus_info30 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %36, i32 0, i32 2, !dbg !18274
  %37 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info30, align 8, !dbg !18274
  %dev31 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %37, i32 0, i32 2, !dbg !18274
  %38 = load %struct.device*, %struct.device** %dev31, align 8, !dbg !18274
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %38, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.169, i64 0, i64 0)) #13, !dbg !18274
  br label %err_devlink_traps_init, !dbg !18276

if.end32:                                         ; preds = %if.end26
  %39 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18277
  %call33 = call i32 @mlxsw_sp_buffers_init(%struct.mlxsw_sp* %39) #9, !dbg !18278
  store i32 %call33, i32* %err, align 4, !dbg !18279
  %40 = load i32, i32* %err, align 4, !dbg !18280
  %tobool34 = icmp ne i32 %40, 0, !dbg !18280
  br i1 %tobool34, label %if.then35, label %if.end38, !dbg !18282

if.then35:                                        ; preds = %if.end32
  %41 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18283
  %bus_info36 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %41, i32 0, i32 2, !dbg !18283
  %42 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info36, align 8, !dbg !18283
  %dev37 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %42, i32 0, i32 2, !dbg !18283
  %43 = load %struct.device*, %struct.device** %dev37, align 8, !dbg !18283
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %43, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.170, i64 0, i64 0)) #13, !dbg !18283
  br label %err_buffers_init, !dbg !18285

if.end38:                                         ; preds = %if.end32
  %44 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18286
  %call39 = call i32 @mlxsw_sp_lag_init(%struct.mlxsw_sp* %44) #9, !dbg !18287
  store i32 %call39, i32* %err, align 4, !dbg !18288
  %45 = load i32, i32* %err, align 4, !dbg !18289
  %tobool40 = icmp ne i32 %45, 0, !dbg !18289
  br i1 %tobool40, label %if.then41, label %if.end44, !dbg !18291

if.then41:                                        ; preds = %if.end38
  %46 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18292
  %bus_info42 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %46, i32 0, i32 2, !dbg !18292
  %47 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info42, align 8, !dbg !18292
  %dev43 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %47, i32 0, i32 2, !dbg !18292
  %48 = load %struct.device*, %struct.device** %dev43, align 8, !dbg !18292
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %48, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.171, i64 0, i64 0)) #13, !dbg !18292
  br label %err_lag_init, !dbg !18294

if.end44:                                         ; preds = %if.end38
  %49 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18295
  %call45 = call i32 @mlxsw_sp_span_init(%struct.mlxsw_sp* %49) #9, !dbg !18296
  store i32 %call45, i32* %err, align 4, !dbg !18297
  %50 = load i32, i32* %err, align 4, !dbg !18298
  %tobool46 = icmp ne i32 %50, 0, !dbg !18298
  br i1 %tobool46, label %if.then47, label %if.end50, !dbg !18300

if.then47:                                        ; preds = %if.end44
  %51 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18301
  %bus_info48 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %51, i32 0, i32 2, !dbg !18301
  %52 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info48, align 8, !dbg !18301
  %dev49 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %52, i32 0, i32 2, !dbg !18301
  %53 = load %struct.device*, %struct.device** %dev49, align 8, !dbg !18301
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %53, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.172, i64 0, i64 0)) #13, !dbg !18301
  br label %err_span_init, !dbg !18303

if.end50:                                         ; preds = %if.end44
  %54 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18304
  %call51 = call i32 @mlxsw_sp_switchdev_init(%struct.mlxsw_sp* %54) #9, !dbg !18305
  store i32 %call51, i32* %err, align 4, !dbg !18306
  %55 = load i32, i32* %err, align 4, !dbg !18307
  %tobool52 = icmp ne i32 %55, 0, !dbg !18307
  br i1 %tobool52, label %if.then53, label %if.end56, !dbg !18309

if.then53:                                        ; preds = %if.end50
  %56 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18310
  %bus_info54 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %56, i32 0, i32 2, !dbg !18310
  %57 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info54, align 8, !dbg !18310
  %dev55 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %57, i32 0, i32 2, !dbg !18310
  %58 = load %struct.device*, %struct.device** %dev55, align 8, !dbg !18310
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %58, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.173, i64 0, i64 0)) #13, !dbg !18310
  br label %err_switchdev_init, !dbg !18312

if.end56:                                         ; preds = %if.end50
  %59 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18313
  %call57 = call i32 @mlxsw_sp_counter_pool_init(%struct.mlxsw_sp* %59) #9, !dbg !18314
  store i32 %call57, i32* %err, align 4, !dbg !18315
  %60 = load i32, i32* %err, align 4, !dbg !18316
  %tobool58 = icmp ne i32 %60, 0, !dbg !18316
  br i1 %tobool58, label %if.then59, label %if.end62, !dbg !18318

if.then59:                                        ; preds = %if.end56
  %61 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18319
  %bus_info60 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %61, i32 0, i32 2, !dbg !18319
  %62 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info60, align 8, !dbg !18319
  %dev61 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %62, i32 0, i32 2, !dbg !18319
  %63 = load %struct.device*, %struct.device** %dev61, align 8, !dbg !18319
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %63, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.174, i64 0, i64 0)) #13, !dbg !18319
  br label %err_counter_pool_init, !dbg !18321

if.end62:                                         ; preds = %if.end56
  %64 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18322
  %call63 = call i32 @mlxsw_sp_afa_init(%struct.mlxsw_sp* %64) #9, !dbg !18323
  store i32 %call63, i32* %err, align 4, !dbg !18324
  %65 = load i32, i32* %err, align 4, !dbg !18325
  %tobool64 = icmp ne i32 %65, 0, !dbg !18325
  br i1 %tobool64, label %if.then65, label %if.end68, !dbg !18327

if.then65:                                        ; preds = %if.end62
  %66 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18328
  %bus_info66 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %66, i32 0, i32 2, !dbg !18328
  %67 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info66, align 8, !dbg !18328
  %dev67 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %67, i32 0, i32 2, !dbg !18328
  %68 = load %struct.device*, %struct.device** %dev67, align 8, !dbg !18328
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %68, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.175, i64 0, i64 0)) #13, !dbg !18328
  br label %err_afa_init, !dbg !18330

if.end68:                                         ; preds = %if.end62
  %69 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18331
  %call69 = call i32 @mlxsw_sp_nve_init(%struct.mlxsw_sp* %69) #9, !dbg !18332
  store i32 %call69, i32* %err, align 4, !dbg !18333
  %70 = load i32, i32* %err, align 4, !dbg !18334
  %tobool70 = icmp ne i32 %70, 0, !dbg !18334
  br i1 %tobool70, label %if.then71, label %if.end74, !dbg !18336

if.then71:                                        ; preds = %if.end68
  %71 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18337
  %bus_info72 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %71, i32 0, i32 2, !dbg !18337
  %72 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info72, align 8, !dbg !18337
  %dev73 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %72, i32 0, i32 2, !dbg !18337
  %73 = load %struct.device*, %struct.device** %dev73, align 8, !dbg !18337
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %73, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.176, i64 0, i64 0)) #13, !dbg !18337
  br label %err_nve_init, !dbg !18339

if.end74:                                         ; preds = %if.end68
  %74 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18340
  %call75 = call i32 @mlxsw_sp_acl_init(%struct.mlxsw_sp* %74) #9, !dbg !18341
  store i32 %call75, i32* %err, align 4, !dbg !18342
  %75 = load i32, i32* %err, align 4, !dbg !18343
  %tobool76 = icmp ne i32 %75, 0, !dbg !18343
  br i1 %tobool76, label %if.then77, label %if.end80, !dbg !18345

if.then77:                                        ; preds = %if.end74
  %76 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18346
  %bus_info78 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %76, i32 0, i32 2, !dbg !18346
  %77 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info78, align 8, !dbg !18346
  %dev79 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %77, i32 0, i32 2, !dbg !18346
  %78 = load %struct.device*, %struct.device** %dev79, align 8, !dbg !18346
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %78, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.177, i64 0, i64 0)) #13, !dbg !18346
  br label %err_acl_init, !dbg !18348

if.end80:                                         ; preds = %if.end74
  %79 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18349
  %80 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !18350
  %call81 = call i32 @mlxsw_sp_router_init(%struct.mlxsw_sp* %79, %struct.netlink_ext_ack* %80) #9, !dbg !18351
  store i32 %call81, i32* %err, align 4, !dbg !18352
  %81 = load i32, i32* %err, align 4, !dbg !18353
  %tobool82 = icmp ne i32 %81, 0, !dbg !18353
  br i1 %tobool82, label %if.then83, label %if.end86, !dbg !18355

if.then83:                                        ; preds = %if.end80
  %82 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18356
  %bus_info84 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %82, i32 0, i32 2, !dbg !18356
  %83 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info84, align 8, !dbg !18356
  %dev85 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %83, i32 0, i32 2, !dbg !18356
  %84 = load %struct.device*, %struct.device** %dev85, align 8, !dbg !18356
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %84, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.178, i64 0, i64 0)) #13, !dbg !18356
  br label %err_router_init, !dbg !18358

if.end86:                                         ; preds = %if.end80
  %85 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18359
  %bus_info87 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %85, i32 0, i32 2, !dbg !18361
  %86 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info87, align 8, !dbg !18361
  %read_frc_capable = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %86, i32 0, i32 6, !dbg !18362
  %bf.load = load i8, i8* %read_frc_capable, align 8, !dbg !18362
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !18362
  %bf.clear = and i8 %bf.lshr, 1, !dbg !18362
  %tobool88 = icmp ne i8 %bf.clear, 0, !dbg !18359
  br i1 %tobool88, label %if.then89, label %if.end101, !dbg !18363

if.then89:                                        ; preds = %if.end86
  %87 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18364
  %ptp_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %87, i32 0, i32 34, !dbg !18366
  %88 = load %struct.mlxsw_sp_ptp_ops*, %struct.mlxsw_sp_ptp_ops** %ptp_ops, align 8, !dbg !18366
  %clock_init = getelementptr inbounds %struct.mlxsw_sp_ptp_ops, %struct.mlxsw_sp_ptp_ops* %88, i32 0, i32 0, !dbg !18367
  %89 = load %struct.mlxsw_sp_ptp_clock* (%struct.mlxsw_sp*, %struct.device*)*, %struct.mlxsw_sp_ptp_clock* (%struct.mlxsw_sp*, %struct.device*)** %clock_init, align 8, !dbg !18367
  %90 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18368
  %91 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18369
  %bus_info90 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %91, i32 0, i32 2, !dbg !18370
  %92 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info90, align 8, !dbg !18370
  %dev91 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %92, i32 0, i32 2, !dbg !18371
  %93 = load %struct.device*, %struct.device** %dev91, align 8, !dbg !18371
  %call92 = call %struct.mlxsw_sp_ptp_clock* %89(%struct.mlxsw_sp* %90, %struct.device* %93) #9, !dbg !18364
  %94 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18372
  %clock = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %94, i32 0, i32 18, !dbg !18373
  store %struct.mlxsw_sp_ptp_clock* %call92, %struct.mlxsw_sp_ptp_clock** %clock, align 8, !dbg !18374
  %95 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18375
  %clock93 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %95, i32 0, i32 18, !dbg !18377
  %96 = load %struct.mlxsw_sp_ptp_clock*, %struct.mlxsw_sp_ptp_clock** %clock93, align 8, !dbg !18377
  %97 = bitcast %struct.mlxsw_sp_ptp_clock* %96 to i8*, !dbg !18375
  %call94 = call zeroext i1 @IS_ERR(i8* %97) #9, !dbg !18378
  br i1 %call94, label %if.then95, label %if.end100, !dbg !18379

if.then95:                                        ; preds = %if.then89
  %98 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18380
  %clock96 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %98, i32 0, i32 18, !dbg !18382
  %99 = load %struct.mlxsw_sp_ptp_clock*, %struct.mlxsw_sp_ptp_clock** %clock96, align 8, !dbg !18382
  %100 = bitcast %struct.mlxsw_sp_ptp_clock* %99 to i8*, !dbg !18380
  %call97 = call i64 @PTR_ERR(i8* %100) #9, !dbg !18383
  %conv = trunc i64 %call97 to i32, !dbg !18383
  store i32 %conv, i32* %err, align 4, !dbg !18384
  %101 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18385
  %bus_info98 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %101, i32 0, i32 2, !dbg !18385
  %102 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info98, align 8, !dbg !18385
  %dev99 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %102, i32 0, i32 2, !dbg !18385
  %103 = load %struct.device*, %struct.device** %dev99, align 8, !dbg !18385
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %103, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.179, i64 0, i64 0)) #13, !dbg !18385
  br label %err_ptp_clock_init, !dbg !18386

if.end100:                                        ; preds = %if.then89
  br label %if.end101, !dbg !18387

if.end101:                                        ; preds = %if.end100, %if.end86
  %104 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18388
  %clock102 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %104, i32 0, i32 18, !dbg !18390
  %105 = load %struct.mlxsw_sp_ptp_clock*, %struct.mlxsw_sp_ptp_clock** %clock102, align 8, !dbg !18390
  %tobool103 = icmp ne %struct.mlxsw_sp_ptp_clock* %105, null, !dbg !18388
  br i1 %tobool103, label %if.then104, label %if.end116, !dbg !18391

if.then104:                                       ; preds = %if.end101
  %106 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18392
  %ptp_ops105 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %106, i32 0, i32 34, !dbg !18394
  %107 = load %struct.mlxsw_sp_ptp_ops*, %struct.mlxsw_sp_ptp_ops** %ptp_ops105, align 8, !dbg !18394
  %init = getelementptr inbounds %struct.mlxsw_sp_ptp_ops, %struct.mlxsw_sp_ptp_ops* %107, i32 0, i32 2, !dbg !18395
  %108 = load %struct.mlxsw_sp_ptp_state* (%struct.mlxsw_sp*)*, %struct.mlxsw_sp_ptp_state* (%struct.mlxsw_sp*)** %init, align 8, !dbg !18395
  %109 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18396
  %call106 = call %struct.mlxsw_sp_ptp_state* %108(%struct.mlxsw_sp* %109) #9, !dbg !18392
  %110 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18397
  %ptp_state = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %110, i32 0, i32 19, !dbg !18398
  store %struct.mlxsw_sp_ptp_state* %call106, %struct.mlxsw_sp_ptp_state** %ptp_state, align 8, !dbg !18399
  %111 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18400
  %ptp_state107 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %111, i32 0, i32 19, !dbg !18402
  %112 = load %struct.mlxsw_sp_ptp_state*, %struct.mlxsw_sp_ptp_state** %ptp_state107, align 8, !dbg !18402
  %113 = bitcast %struct.mlxsw_sp_ptp_state* %112 to i8*, !dbg !18400
  %call108 = call zeroext i1 @IS_ERR(i8* %113) #9, !dbg !18403
  br i1 %call108, label %if.then109, label %if.end115, !dbg !18404

if.then109:                                       ; preds = %if.then104
  %114 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18405
  %ptp_state110 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %114, i32 0, i32 19, !dbg !18407
  %115 = load %struct.mlxsw_sp_ptp_state*, %struct.mlxsw_sp_ptp_state** %ptp_state110, align 8, !dbg !18407
  %116 = bitcast %struct.mlxsw_sp_ptp_state* %115 to i8*, !dbg !18405
  %call111 = call i64 @PTR_ERR(i8* %116) #9, !dbg !18408
  %conv112 = trunc i64 %call111 to i32, !dbg !18408
  store i32 %conv112, i32* %err, align 4, !dbg !18409
  %117 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18410
  %bus_info113 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %117, i32 0, i32 2, !dbg !18410
  %118 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info113, align 8, !dbg !18410
  %dev114 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %118, i32 0, i32 2, !dbg !18410
  %119 = load %struct.device*, %struct.device** %dev114, align 8, !dbg !18410
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %119, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.180, i64 0, i64 0)) #13, !dbg !18410
  br label %err_ptp_init, !dbg !18411

if.end115:                                        ; preds = %if.then104
  br label %if.end116, !dbg !18412

if.end116:                                        ; preds = %if.end115, %if.end101
  %120 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18413
  %netdevice_nb = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %120, i32 0, i32 17, !dbg !18414
  %notifier_call = getelementptr inbounds %struct.notifier_block, %struct.notifier_block* %netdevice_nb, i32 0, i32 0, !dbg !18415
  store i32 (%struct.notifier_block*, i64, i8*)* @mlxsw_sp_netdevice_event, i32 (%struct.notifier_block*, i64, i8*)** %notifier_call, align 8, !dbg !18416
  %121 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18417
  %call117 = call %struct.net* @mlxsw_sp_net(%struct.mlxsw_sp* %121) #9, !dbg !18418
  %122 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18419
  %netdevice_nb118 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %122, i32 0, i32 17, !dbg !18420
  %call119 = call i32 @register_netdevice_notifier_net(%struct.net* %call117, %struct.notifier_block* %netdevice_nb118) #9, !dbg !18421
  store i32 %call119, i32* %err, align 4, !dbg !18422
  %123 = load i32, i32* %err, align 4, !dbg !18423
  %tobool120 = icmp ne i32 %123, 0, !dbg !18423
  br i1 %tobool120, label %if.then121, label %if.end124, !dbg !18425

if.then121:                                       ; preds = %if.end116
  %124 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18426
  %bus_info122 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %124, i32 0, i32 2, !dbg !18426
  %125 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info122, align 8, !dbg !18426
  %dev123 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %125, i32 0, i32 2, !dbg !18426
  %126 = load %struct.device*, %struct.device** %dev123, align 8, !dbg !18426
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %126, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.181, i64 0, i64 0)) #13, !dbg !18426
  br label %err_netdev_notifier, !dbg !18428

if.end124:                                        ; preds = %if.end116
  %127 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18429
  %call125 = call i32 @mlxsw_sp_dpipe_init(%struct.mlxsw_sp* %127) #9, !dbg !18430
  store i32 %call125, i32* %err, align 4, !dbg !18431
  %128 = load i32, i32* %err, align 4, !dbg !18432
  %tobool126 = icmp ne i32 %128, 0, !dbg !18432
  br i1 %tobool126, label %if.then127, label %if.end130, !dbg !18434

if.then127:                                       ; preds = %if.end124
  %129 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18435
  %bus_info128 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %129, i32 0, i32 2, !dbg !18435
  %130 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info128, align 8, !dbg !18435
  %dev129 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %130, i32 0, i32 2, !dbg !18435
  %131 = load %struct.device*, %struct.device** %dev129, align 8, !dbg !18435
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %131, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.182, i64 0, i64 0)) #13, !dbg !18435
  br label %err_dpipe_init, !dbg !18437

if.end130:                                        ; preds = %if.end124
  %132 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18438
  %call131 = call i32 @mlxsw_sp_port_module_info_init(%struct.mlxsw_sp* %132) #9, !dbg !18439
  store i32 %call131, i32* %err, align 4, !dbg !18440
  %133 = load i32, i32* %err, align 4, !dbg !18441
  %tobool132 = icmp ne i32 %133, 0, !dbg !18441
  br i1 %tobool132, label %if.then133, label %if.end136, !dbg !18443

if.then133:                                       ; preds = %if.end130
  %134 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18444
  %bus_info134 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %134, i32 0, i32 2, !dbg !18444
  %135 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info134, align 8, !dbg !18444
  %dev135 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %135, i32 0, i32 2, !dbg !18444
  %136 = load %struct.device*, %struct.device** %dev135, align 8, !dbg !18444
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %136, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.183, i64 0, i64 0)) #13, !dbg !18444
  br label %err_port_module_info_init, !dbg !18446

if.end136:                                        ; preds = %if.end130
  %137 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18447
  %call137 = call i32 @mlxsw_sp_ports_create(%struct.mlxsw_sp* %137) #9, !dbg !18448
  store i32 %call137, i32* %err, align 4, !dbg !18449
  %138 = load i32, i32* %err, align 4, !dbg !18450
  %tobool138 = icmp ne i32 %138, 0, !dbg !18450
  br i1 %tobool138, label %if.then139, label %if.end142, !dbg !18452

if.then139:                                       ; preds = %if.end136
  %139 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18453
  %bus_info140 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %139, i32 0, i32 2, !dbg !18453
  %140 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info140, align 8, !dbg !18453
  %dev141 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %140, i32 0, i32 2, !dbg !18453
  %141 = load %struct.device*, %struct.device** %dev141, align 8, !dbg !18453
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %141, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.184, i64 0, i64 0)) #13, !dbg !18453
  br label %err_ports_create, !dbg !18455

if.end142:                                        ; preds = %if.end136
  store i32 0, i32* %retval, align 4, !dbg !18456
  br label %return, !dbg !18456

err_ports_create:                                 ; preds = %if.then139
  call void @llvm.dbg.label(metadata !18457), !dbg !18458
  %142 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18459
  call void @mlxsw_sp_port_module_info_fini(%struct.mlxsw_sp* %142) #9, !dbg !18460
  br label %err_port_module_info_init, !dbg !18460

err_port_module_info_init:                        ; preds = %err_ports_create, %if.then133
  call void @llvm.dbg.label(metadata !18461), !dbg !18462
  %143 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18463
  call void @mlxsw_sp_dpipe_fini(%struct.mlxsw_sp* %143) #9, !dbg !18464
  br label %err_dpipe_init, !dbg !18464

err_dpipe_init:                                   ; preds = %err_port_module_info_init, %if.then127
  call void @llvm.dbg.label(metadata !18465), !dbg !18466
  %144 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18467
  %call143 = call %struct.net* @mlxsw_sp_net(%struct.mlxsw_sp* %144) #9, !dbg !18468
  %145 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18469
  %netdevice_nb144 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %145, i32 0, i32 17, !dbg !18470
  %call145 = call i32 @unregister_netdevice_notifier_net(%struct.net* %call143, %struct.notifier_block* %netdevice_nb144) #9, !dbg !18471
  br label %err_netdev_notifier, !dbg !18471

err_netdev_notifier:                              ; preds = %err_dpipe_init, %if.then121
  call void @llvm.dbg.label(metadata !18472), !dbg !18473
  %146 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18474
  %clock146 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %146, i32 0, i32 18, !dbg !18476
  %147 = load %struct.mlxsw_sp_ptp_clock*, %struct.mlxsw_sp_ptp_clock** %clock146, align 8, !dbg !18476
  %tobool147 = icmp ne %struct.mlxsw_sp_ptp_clock* %147, null, !dbg !18474
  br i1 %tobool147, label %if.then148, label %if.end151, !dbg !18477

if.then148:                                       ; preds = %err_netdev_notifier
  %148 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18478
  %ptp_ops149 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %148, i32 0, i32 34, !dbg !18479
  %149 = load %struct.mlxsw_sp_ptp_ops*, %struct.mlxsw_sp_ptp_ops** %ptp_ops149, align 8, !dbg !18479
  %fini = getelementptr inbounds %struct.mlxsw_sp_ptp_ops, %struct.mlxsw_sp_ptp_ops* %149, i32 0, i32 3, !dbg !18480
  %150 = load void (%struct.mlxsw_sp_ptp_state*)*, void (%struct.mlxsw_sp_ptp_state*)** %fini, align 8, !dbg !18480
  %151 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18481
  %ptp_state150 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %151, i32 0, i32 19, !dbg !18482
  %152 = load %struct.mlxsw_sp_ptp_state*, %struct.mlxsw_sp_ptp_state** %ptp_state150, align 8, !dbg !18482
  call void %150(%struct.mlxsw_sp_ptp_state* %152) #9, !dbg !18478
  br label %if.end151, !dbg !18478

if.end151:                                        ; preds = %if.then148, %err_netdev_notifier
  br label %err_ptp_init, !dbg !18476

err_ptp_init:                                     ; preds = %if.end151, %if.then109
  call void @llvm.dbg.label(metadata !18483), !dbg !18484
  %153 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18485
  %clock152 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %153, i32 0, i32 18, !dbg !18487
  %154 = load %struct.mlxsw_sp_ptp_clock*, %struct.mlxsw_sp_ptp_clock** %clock152, align 8, !dbg !18487
  %tobool153 = icmp ne %struct.mlxsw_sp_ptp_clock* %154, null, !dbg !18485
  br i1 %tobool153, label %if.then154, label %if.end157, !dbg !18488

if.then154:                                       ; preds = %err_ptp_init
  %155 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18489
  %ptp_ops155 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %155, i32 0, i32 34, !dbg !18490
  %156 = load %struct.mlxsw_sp_ptp_ops*, %struct.mlxsw_sp_ptp_ops** %ptp_ops155, align 8, !dbg !18490
  %clock_fini = getelementptr inbounds %struct.mlxsw_sp_ptp_ops, %struct.mlxsw_sp_ptp_ops* %156, i32 0, i32 1, !dbg !18491
  %157 = load void (%struct.mlxsw_sp_ptp_clock*)*, void (%struct.mlxsw_sp_ptp_clock*)** %clock_fini, align 8, !dbg !18491
  %158 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18492
  %clock156 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %158, i32 0, i32 18, !dbg !18493
  %159 = load %struct.mlxsw_sp_ptp_clock*, %struct.mlxsw_sp_ptp_clock** %clock156, align 8, !dbg !18493
  call void %157(%struct.mlxsw_sp_ptp_clock* %159) #9, !dbg !18489
  br label %if.end157, !dbg !18489

if.end157:                                        ; preds = %if.then154, %err_ptp_init
  br label %err_ptp_clock_init, !dbg !18487

err_ptp_clock_init:                               ; preds = %if.end157, %if.then95
  call void @llvm.dbg.label(metadata !18494), !dbg !18495
  %160 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18496
  call void @mlxsw_sp_router_fini(%struct.mlxsw_sp* %160) #9, !dbg !18497
  br label %err_router_init, !dbg !18497

err_router_init:                                  ; preds = %err_ptp_clock_init, %if.then83
  call void @llvm.dbg.label(metadata !18498), !dbg !18499
  %161 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18500
  call void @mlxsw_sp_acl_fini(%struct.mlxsw_sp* %161) #9, !dbg !18501
  br label %err_acl_init, !dbg !18501

err_acl_init:                                     ; preds = %err_router_init, %if.then77
  call void @llvm.dbg.label(metadata !18502), !dbg !18503
  %162 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18504
  call void @mlxsw_sp_nve_fini(%struct.mlxsw_sp* %162) #9, !dbg !18505
  br label %err_nve_init, !dbg !18505

err_nve_init:                                     ; preds = %err_acl_init, %if.then71
  call void @llvm.dbg.label(metadata !18506), !dbg !18507
  %163 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18508
  call void @mlxsw_sp_afa_fini(%struct.mlxsw_sp* %163) #9, !dbg !18509
  br label %err_afa_init, !dbg !18509

err_afa_init:                                     ; preds = %err_nve_init, %if.then65
  call void @llvm.dbg.label(metadata !18510), !dbg !18511
  %164 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18512
  call void @mlxsw_sp_counter_pool_fini(%struct.mlxsw_sp* %164) #9, !dbg !18513
  br label %err_counter_pool_init, !dbg !18513

err_counter_pool_init:                            ; preds = %err_afa_init, %if.then59
  call void @llvm.dbg.label(metadata !18514), !dbg !18515
  %165 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18516
  call void @mlxsw_sp_switchdev_fini(%struct.mlxsw_sp* %165) #9, !dbg !18517
  br label %err_switchdev_init, !dbg !18517

err_switchdev_init:                               ; preds = %err_counter_pool_init, %if.then53
  call void @llvm.dbg.label(metadata !18518), !dbg !18519
  %166 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18520
  call void @mlxsw_sp_span_fini(%struct.mlxsw_sp* %166) #9, !dbg !18521
  br label %err_span_init, !dbg !18521

err_span_init:                                    ; preds = %err_switchdev_init, %if.then47
  call void @llvm.dbg.label(metadata !18522), !dbg !18523
  %167 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18524
  call void @mlxsw_sp_lag_fini(%struct.mlxsw_sp* %167) #9, !dbg !18525
  br label %err_lag_init, !dbg !18525

err_lag_init:                                     ; preds = %err_span_init, %if.then41
  call void @llvm.dbg.label(metadata !18526), !dbg !18527
  %168 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18528
  call void @mlxsw_sp_buffers_fini(%struct.mlxsw_sp* %168) #9, !dbg !18529
  br label %err_buffers_init, !dbg !18529

err_buffers_init:                                 ; preds = %err_lag_init, %if.then35
  call void @llvm.dbg.label(metadata !18530), !dbg !18531
  %169 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18532
  call void @mlxsw_sp_devlink_traps_fini(%struct.mlxsw_sp* %169) #9, !dbg !18533
  br label %err_devlink_traps_init, !dbg !18533

err_devlink_traps_init:                           ; preds = %err_buffers_init, %if.then29
  call void @llvm.dbg.label(metadata !18534), !dbg !18535
  %170 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18536
  call void @mlxsw_sp_traps_fini(%struct.mlxsw_sp* %170) #9, !dbg !18537
  br label %err_traps_init, !dbg !18537

err_traps_init:                                   ; preds = %err_devlink_traps_init, %if.then23
  call void @llvm.dbg.label(metadata !18538), !dbg !18539
  %171 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18540
  call void @mlxsw_sp_policers_fini(%struct.mlxsw_sp* %171) #9, !dbg !18541
  br label %err_policers_init, !dbg !18541

err_policers_init:                                ; preds = %err_traps_init, %if.then17
  call void @llvm.dbg.label(metadata !18542), !dbg !18543
  %172 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18544
  call void @mlxsw_sp_fids_fini(%struct.mlxsw_sp* %172) #9, !dbg !18545
  br label %err_fids_init, !dbg !18545

err_fids_init:                                    ; preds = %err_policers_init, %if.then11
  call void @llvm.dbg.label(metadata !18546), !dbg !18547
  %173 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18548
  call void @mlxsw_sp_kvdl_fini(%struct.mlxsw_sp* %173) #9, !dbg !18549
  %174 = load i32, i32* %err, align 4, !dbg !18550
  store i32 %174, i32* %retval, align 4, !dbg !18551
  br label %return, !dbg !18551

return:                                           ; preds = %err_fids_init, %if.end142, %if.then5, %if.then
  %175 = load i32, i32* %retval, align 4, !dbg !18552
  ret i32 %175, !dbg !18552
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_sp_ptp_clock* @mlxsw_sp2_ptp_clock_init(%struct.mlxsw_sp* %mlxsw_sp, %struct.device* %dev) #0 !dbg !18553 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !18555, metadata !DIExpression()), !dbg !18556
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !18557, metadata !DIExpression()), !dbg !18558
  ret %struct.mlxsw_sp_ptp_clock* null, !dbg !18559
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp2_ptp_clock_fini(%struct.mlxsw_sp_ptp_clock* %clock) #0 !dbg !18560 {
entry:
  %clock.addr = alloca %struct.mlxsw_sp_ptp_clock*, align 8
  store %struct.mlxsw_sp_ptp_clock* %clock, %struct.mlxsw_sp_ptp_clock** %clock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_ptp_clock** %clock.addr, metadata !18561, metadata !DIExpression()), !dbg !18562
  ret void, !dbg !18563
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_sp_ptp_state* @mlxsw_sp2_ptp_init(%struct.mlxsw_sp* %mlxsw_sp) #0 !dbg !18564 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !18565, metadata !DIExpression()), !dbg !18566
  ret %struct.mlxsw_sp_ptp_state* null, !dbg !18567
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp2_ptp_fini(%struct.mlxsw_sp_ptp_state* %ptp_state) #0 !dbg !18568 {
entry:
  %ptp_state.addr = alloca %struct.mlxsw_sp_ptp_state*, align 8
  store %struct.mlxsw_sp_ptp_state* %ptp_state, %struct.mlxsw_sp_ptp_state** %ptp_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_ptp_state** %ptp_state.addr, metadata !18569, metadata !DIExpression()), !dbg !18570
  ret void, !dbg !18571
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp2_ptp_receive(%struct.mlxsw_sp* %mlxsw_sp, %struct.sk_buff* %skb, i8 zeroext %local_port) #0 !dbg !18572 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %local_port.addr = alloca i8, align 1
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !18573, metadata !DIExpression()), !dbg !18574
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !18575, metadata !DIExpression()), !dbg !18576
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !18577, metadata !DIExpression()), !dbg !18578
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !18579
  %1 = load i8, i8* %local_port.addr, align 1, !dbg !18580
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !18581
  %3 = bitcast %struct.mlxsw_sp* %2 to i8*, !dbg !18581
  call void @mlxsw_sp_rx_listener_no_mark_func(%struct.sk_buff* %0, i8 zeroext %1, i8* %3) #9, !dbg !18582
  ret void, !dbg !18583
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp2_ptp_transmitted(%struct.mlxsw_sp* %mlxsw_sp, %struct.sk_buff* %skb, i8 zeroext %local_port) #0 !dbg !18584 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %local_port.addr = alloca i8, align 1
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !18585, metadata !DIExpression()), !dbg !18586
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !18587, metadata !DIExpression()), !dbg !18588
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !18589, metadata !DIExpression()), !dbg !18590
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !18591
  call void @dev_kfree_skb_any(%struct.sk_buff* %0) #9, !dbg !18592
  ret void, !dbg !18593
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp2_ptp_hwtstamp_get(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.hwtstamp_config* %config) #0 !dbg !18594 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %config.addr = alloca %struct.hwtstamp_config*, align 8
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !18595, metadata !DIExpression()), !dbg !18596
  store %struct.hwtstamp_config* %config, %struct.hwtstamp_config** %config.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hwtstamp_config** %config.addr, metadata !18597, metadata !DIExpression()), !dbg !18598
  ret i32 -95, !dbg !18599
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp2_ptp_hwtstamp_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.hwtstamp_config* %config) #0 !dbg !18600 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %config.addr = alloca %struct.hwtstamp_config*, align 8
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !18601, metadata !DIExpression()), !dbg !18602
  store %struct.hwtstamp_config* %config, %struct.hwtstamp_config** %config.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hwtstamp_config** %config.addr, metadata !18603, metadata !DIExpression()), !dbg !18604
  ret i32 -95, !dbg !18605
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp2_ptp_shaper_work(%struct.work_struct* %work) #0 !dbg !18606 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !18607, metadata !DIExpression()), !dbg !18608
  ret void, !dbg !18609
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp2_ptp_get_ts_info(%struct.mlxsw_sp* %mlxsw_sp, %struct.ethtool_ts_info* %info) #0 !dbg !18610 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %info.addr = alloca %struct.ethtool_ts_info*, align 8
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !18611, metadata !DIExpression()), !dbg !18612
  store %struct.ethtool_ts_info* %info, %struct.ethtool_ts_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_ts_info** %info.addr, metadata !18613, metadata !DIExpression()), !dbg !18614
  %0 = load %struct.ethtool_ts_info*, %struct.ethtool_ts_info** %info.addr, align 8, !dbg !18615
  %call = call i32 @mlxsw_sp_ptp_get_ts_info_noptp(%struct.ethtool_ts_info* %0) #9, !dbg !18616
  ret i32 %call, !dbg !18617
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp2_get_stats_count() #0 !dbg !18618 {
entry:
  ret i32 0, !dbg !18619
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp2_get_stats_strings(i8** %p) #0 !dbg !18620 {
entry:
  %p.addr = alloca i8**, align 8
  store i8** %p, i8*** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %p.addr, metadata !18621, metadata !DIExpression()), !dbg !18622
  ret void, !dbg !18623
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp2_get_stats(%struct.mlxsw_sp_port* %mlxsw_sp_port, i64* %data, i32 %data_index) #0 !dbg !18624 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %data.addr = alloca i64*, align 8
  %data_index.addr = alloca i32, align 4
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !18625, metadata !DIExpression()), !dbg !18626
  store i64* %data, i64** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %data.addr, metadata !18627, metadata !DIExpression()), !dbg !18628
  store i32 %data_index, i32* %data_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data_index.addr, metadata !18629, metadata !DIExpression()), !dbg !18630
  ret void, !dbg !18631
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_ptp_get_ts_info_noptp(%struct.ethtool_ts_info* %info) #0 !dbg !18632 {
entry:
  %info.addr = alloca %struct.ethtool_ts_info*, align 8
  store %struct.ethtool_ts_info* %info, %struct.ethtool_ts_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_ts_info** %info.addr, metadata !18635, metadata !DIExpression()), !dbg !18636
  %0 = load %struct.ethtool_ts_info*, %struct.ethtool_ts_info** %info.addr, align 8, !dbg !18637
  %so_timestamping = getelementptr inbounds %struct.ethtool_ts_info, %struct.ethtool_ts_info* %0, i32 0, i32 1, !dbg !18638
  store i32 24, i32* %so_timestamping, align 4, !dbg !18639
  %1 = load %struct.ethtool_ts_info*, %struct.ethtool_ts_info** %info.addr, align 8, !dbg !18640
  %phc_index = getelementptr inbounds %struct.ethtool_ts_info, %struct.ethtool_ts_info* %1, i32 0, i32 2, !dbg !18641
  store i32 -1, i32* %phc_index, align 4, !dbg !18642
  ret i32 0, !dbg !18643
}

; Function Attrs: noredzone
declare dso_local void @mlxsw_core_emad_string_tlv_enable(%struct.mlxsw_core*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_base_mac_get(%struct.mlxsw_sp* %mlxsw_sp) #0 !dbg !18644 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %spad_pl = alloca [16 x i8], align 16
  %err = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !18645, metadata !DIExpression()), !dbg !18646
  call void @llvm.dbg.declare(metadata [16 x i8]* %spad_pl, metadata !18647, metadata !DIExpression()), !dbg !18648
  %0 = bitcast [16 x i8]* %spad_pl to i8*, !dbg !18648
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 16, i1 false), !dbg !18648
  call void @llvm.dbg.declare(metadata i32* %err, metadata !18649, metadata !DIExpression()), !dbg !18650
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !18651
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %1, i32 0, i32 1, !dbg !18652
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !18652
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %spad_pl, i64 0, i64 0, !dbg !18653
  %call = call i32 @mlxsw_reg_query(%struct.mlxsw_core* %2, %struct.mlxsw_reg_info* @mlxsw_reg_spad, i8* %arraydecay) #9, !dbg !18654
  store i32 %call, i32* %err, align 4, !dbg !18655
  %3 = load i32, i32* %err, align 4, !dbg !18656
  %tobool = icmp ne i32 %3, 0, !dbg !18656
  br i1 %tobool, label %if.then, label %if.end, !dbg !18658

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %err, align 4, !dbg !18659
  store i32 %4, i32* %retval, align 4, !dbg !18660
  br label %return, !dbg !18660

if.end:                                           ; preds = %entry
  %arraydecay1 = getelementptr inbounds [16 x i8], [16 x i8]* %spad_pl, i64 0, i64 0, !dbg !18661
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !18662
  %base_mac = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %5, i32 0, i32 3, !dbg !18663
  %arraydecay2 = getelementptr inbounds [6 x i8], [6 x i8]* %base_mac, i64 0, i64 0, !dbg !18662
  call void @mlxsw_reg_spad_base_mac_memcpy_from(i8* %arraydecay1, i8* %arraydecay2) #9, !dbg !18664
  store i32 0, i32* %retval, align 4, !dbg !18665
  br label %return, !dbg !18665

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !18666
  ret i32 %6, !dbg !18666
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #3

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_kvdl_init(%struct.mlxsw_sp*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_fids_init(%struct.mlxsw_sp*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_policers_init(%struct.mlxsw_sp*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_traps_init(%struct.mlxsw_sp* %mlxsw_sp) #0 !dbg !18667 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %trap = alloca %struct.mlxsw_sp_trap*, align 8
  %max_policers = alloca i64, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !18668, metadata !DIExpression()), !dbg !18669
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_trap** %trap, metadata !18670, metadata !DIExpression()), !dbg !18671
  call void @llvm.dbg.declare(metadata i64* %max_policers, metadata !18672, metadata !DIExpression()), !dbg !18673
  call void @llvm.dbg.declare(metadata i32* %err, metadata !18674, metadata !DIExpression()), !dbg !18675
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !18676
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %0, i32 0, i32 1, !dbg !18676
  %1 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !18676
  %call = call zeroext i1 @mlxsw_core_res_valid(%struct.mlxsw_core* %1, i32 40) #9, !dbg !18676
  br i1 %call, label %if.end, label %if.then, !dbg !18678

if.then:                                          ; preds = %entry
  store i32 -5, i32* %retval, align 4, !dbg !18679
  br label %return, !dbg !18679

if.end:                                           ; preds = %entry
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !18680
  %core1 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %2, i32 0, i32 1, !dbg !18680
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core1, align 8, !dbg !18680
  %call2 = call i64 @mlxsw_core_res_get(%struct.mlxsw_core* %3, i32 40) #9, !dbg !18680
  store i64 %call2, i64* %max_policers, align 8, !dbg !18681
  %4 = load i64, i64* %max_policers, align 8, !dbg !18682
  %add = add i64 %4, 64, !dbg !18682
  %sub = sub i64 %add, 1, !dbg !18682
  %div = udiv i64 %sub, 64, !dbg !18682
  %call3 = call i64 @__ab_c_size(i64 %div, i64 8, i64 64) #9, !dbg !18682
  %call4 = call i8* @kzalloc(i64 %call3, i32 3264) #9, !dbg !18683
  %5 = bitcast i8* %call4 to %struct.mlxsw_sp_trap*, !dbg !18683
  store %struct.mlxsw_sp_trap* %5, %struct.mlxsw_sp_trap** %trap, align 8, !dbg !18684
  %6 = load %struct.mlxsw_sp_trap*, %struct.mlxsw_sp_trap** %trap, align 8, !dbg !18685
  %tobool = icmp ne %struct.mlxsw_sp_trap* %6, null, !dbg !18685
  br i1 %tobool, label %if.end6, label %if.then5, !dbg !18687

if.then5:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !18688
  br label %return, !dbg !18688

if.end6:                                          ; preds = %if.end
  %7 = load i64, i64* %max_policers, align 8, !dbg !18689
  %8 = load %struct.mlxsw_sp_trap*, %struct.mlxsw_sp_trap** %trap, align 8, !dbg !18690
  %max_policers7 = getelementptr inbounds %struct.mlxsw_sp_trap, %struct.mlxsw_sp_trap* %8, i32 0, i32 7, !dbg !18691
  store i64 %7, i64* %max_policers7, align 8, !dbg !18692
  %9 = load %struct.mlxsw_sp_trap*, %struct.mlxsw_sp_trap** %trap, align 8, !dbg !18693
  %10 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !18694
  %trap8 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %10, i32 0, i32 22, !dbg !18695
  store %struct.mlxsw_sp_trap* %9, %struct.mlxsw_sp_trap** %trap8, align 8, !dbg !18696
  %11 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !18697
  %core9 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %11, i32 0, i32 1, !dbg !18698
  %12 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core9, align 8, !dbg !18698
  %call10 = call i32 @mlxsw_sp_cpu_policers_set(%struct.mlxsw_core* %12) #9, !dbg !18699
  store i32 %call10, i32* %err, align 4, !dbg !18700
  %13 = load i32, i32* %err, align 4, !dbg !18701
  %tobool11 = icmp ne i32 %13, 0, !dbg !18701
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !18703

if.then12:                                        ; preds = %if.end6
  br label %err_cpu_policers_set, !dbg !18704

if.end13:                                         ; preds = %if.end6
  %14 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !18705
  %core14 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %14, i32 0, i32 1, !dbg !18706
  %15 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core14, align 8, !dbg !18706
  %call15 = call i32 @mlxsw_sp_trap_groups_set(%struct.mlxsw_core* %15) #9, !dbg !18707
  store i32 %call15, i32* %err, align 4, !dbg !18708
  %16 = load i32, i32* %err, align 4, !dbg !18709
  %tobool16 = icmp ne i32 %16, 0, !dbg !18709
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !18711

if.then17:                                        ; preds = %if.end13
  br label %err_trap_groups_set, !dbg !18712

if.end18:                                         ; preds = %if.end13
  %17 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !18713
  %call19 = call i32 @mlxsw_sp_traps_register(%struct.mlxsw_sp* %17, %struct.mlxsw_listener* getelementptr inbounds ([12 x %struct.mlxsw_listener], [12 x %struct.mlxsw_listener]* bitcast (<{ { i16, { %struct.mlxsw_event_listener }, i32, i32, i8, i8, i8 }, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener }>* @mlxsw_sp_listener to [12 x %struct.mlxsw_listener]*), i64 0, i64 0), i64 12) #9, !dbg !18714
  store i32 %call19, i32* %err, align 4, !dbg !18715
  %18 = load i32, i32* %err, align 4, !dbg !18716
  %tobool20 = icmp ne i32 %18, 0, !dbg !18716
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !18718

if.then21:                                        ; preds = %if.end18
  br label %err_traps_register, !dbg !18719

if.end22:                                         ; preds = %if.end18
  %19 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !18720
  %20 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !18721
  %listeners = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %20, i32 0, i32 38, !dbg !18722
  %21 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listeners, align 8, !dbg !18722
  %22 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !18723
  %listeners_count = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %22, i32 0, i32 39, !dbg !18724
  %23 = load i64, i64* %listeners_count, align 8, !dbg !18724
  %call23 = call i32 @mlxsw_sp_traps_register(%struct.mlxsw_sp* %19, %struct.mlxsw_listener* %21, i64 %23) #9, !dbg !18725
  store i32 %call23, i32* %err, align 4, !dbg !18726
  %24 = load i32, i32* %err, align 4, !dbg !18727
  %tobool24 = icmp ne i32 %24, 0, !dbg !18727
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !18729

if.then25:                                        ; preds = %if.end22
  br label %err_extra_traps_init, !dbg !18730

if.end26:                                         ; preds = %if.end22
  store i32 0, i32* %retval, align 4, !dbg !18731
  br label %return, !dbg !18731

err_extra_traps_init:                             ; preds = %if.then25
  call void @llvm.dbg.label(metadata !18732), !dbg !18733
  %25 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !18734
  call void @mlxsw_sp_traps_unregister(%struct.mlxsw_sp* %25, %struct.mlxsw_listener* getelementptr inbounds ([12 x %struct.mlxsw_listener], [12 x %struct.mlxsw_listener]* bitcast (<{ { i16, { %struct.mlxsw_event_listener }, i32, i32, i8, i8, i8 }, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener }>* @mlxsw_sp_listener to [12 x %struct.mlxsw_listener]*), i64 0, i64 0), i64 12) #9, !dbg !18735
  br label %err_traps_register, !dbg !18735

err_traps_register:                               ; preds = %err_extra_traps_init, %if.then21
  call void @llvm.dbg.label(metadata !18736), !dbg !18737
  br label %err_trap_groups_set, !dbg !18735

err_trap_groups_set:                              ; preds = %err_traps_register, %if.then17
  call void @llvm.dbg.label(metadata !18738), !dbg !18739
  br label %err_cpu_policers_set, !dbg !18735

err_cpu_policers_set:                             ; preds = %err_trap_groups_set, %if.then12
  call void @llvm.dbg.label(metadata !18740), !dbg !18741
  %26 = load %struct.mlxsw_sp_trap*, %struct.mlxsw_sp_trap** %trap, align 8, !dbg !18742
  %27 = bitcast %struct.mlxsw_sp_trap* %26 to i8*, !dbg !18742
  call void @kfree(i8* %27) #9, !dbg !18743
  %28 = load i32, i32* %err, align 4, !dbg !18744
  store i32 %28, i32* %retval, align 4, !dbg !18745
  br label %return, !dbg !18745

return:                                           ; preds = %err_cpu_policers_set, %if.end26, %if.then5, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !18746
  ret i32 %29, !dbg !18746
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_devlink_traps_init(%struct.mlxsw_sp*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_buffers_init(%struct.mlxsw_sp*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_lag_init(%struct.mlxsw_sp* %mlxsw_sp) #0 !dbg !18747 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %slcr_pl = alloca [16 x i8], align 16
  %seed = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !18748, metadata !DIExpression()), !dbg !18749
  call void @llvm.dbg.declare(metadata [16 x i8]* %slcr_pl, metadata !18750, metadata !DIExpression()), !dbg !18751
  call void @llvm.dbg.declare(metadata i32* %seed, metadata !18752, metadata !DIExpression()), !dbg !18753
  call void @llvm.dbg.declare(metadata i32* %err, metadata !18754, metadata !DIExpression()), !dbg !18755
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !18756
  %base_mac = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %0, i32 0, i32 3, !dbg !18757
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %base_mac, i64 0, i64 0, !dbg !18756
  %call = call i32 @jhash(i8* %arraydecay, i32 6, i32 -889271554) #9, !dbg !18758
  store i32 %call, i32* %seed, align 4, !dbg !18759
  %arraydecay1 = getelementptr inbounds [16 x i8], [16 x i8]* %slcr_pl, i64 0, i64 0, !dbg !18760
  %1 = load i32, i32* %seed, align 4, !dbg !18761
  call void @mlxsw_reg_slcr_pack(i8* %arraydecay1, i16 zeroext 16382, i32 %1) #9, !dbg !18762
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !18763
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %2, i32 0, i32 1, !dbg !18764
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !18764
  %arraydecay2 = getelementptr inbounds [16 x i8], [16 x i8]* %slcr_pl, i64 0, i64 0, !dbg !18765
  %call3 = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %3, %struct.mlxsw_reg_info* @mlxsw_reg_slcr, i8* %arraydecay2) #9, !dbg !18766
  store i32 %call3, i32* %err, align 4, !dbg !18767
  %4 = load i32, i32* %err, align 4, !dbg !18768
  %tobool = icmp ne i32 %4, 0, !dbg !18768
  br i1 %tobool, label %if.then, label %if.end, !dbg !18770

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %err, align 4, !dbg !18771
  store i32 %5, i32* %retval, align 4, !dbg !18772
  br label %return, !dbg !18772

if.end:                                           ; preds = %entry
  %6 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !18773
  %core4 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %6, i32 0, i32 1, !dbg !18773
  %7 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core4, align 8, !dbg !18773
  %call5 = call zeroext i1 @mlxsw_core_res_valid(%struct.mlxsw_core* %7, i32 15) #9, !dbg !18773
  br i1 %call5, label %lor.lhs.false, label %if.then8, !dbg !18775

lor.lhs.false:                                    ; preds = %if.end
  %8 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !18776
  %core6 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %8, i32 0, i32 1, !dbg !18776
  %9 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core6, align 8, !dbg !18776
  %call7 = call zeroext i1 @mlxsw_core_res_valid(%struct.mlxsw_core* %9, i32 16) #9, !dbg !18776
  br i1 %call7, label %if.end9, label %if.then8, !dbg !18777

if.then8:                                         ; preds = %lor.lhs.false, %if.end
  store i32 -5, i32* %retval, align 4, !dbg !18778
  br label %return, !dbg !18778

if.end9:                                          ; preds = %lor.lhs.false
  %10 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !18779
  %core10 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %10, i32 0, i32 1, !dbg !18779
  %11 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core10, align 8, !dbg !18779
  %call11 = call i64 @mlxsw_core_res_get(%struct.mlxsw_core* %11, i32 15) #9, !dbg !18779
  %call12 = call i8* @kcalloc(i64 %call11, i64 16, i32 3264) #9, !dbg !18780
  %12 = bitcast i8* %call12 to %struct.mlxsw_sp_upper*, !dbg !18780
  %13 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !18781
  %lags = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %13, i32 0, i32 5, !dbg !18782
  store %struct.mlxsw_sp_upper* %12, %struct.mlxsw_sp_upper** %lags, align 8, !dbg !18783
  %14 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !18784
  %lags13 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %14, i32 0, i32 5, !dbg !18786
  %15 = load %struct.mlxsw_sp_upper*, %struct.mlxsw_sp_upper** %lags13, align 8, !dbg !18786
  %tobool14 = icmp ne %struct.mlxsw_sp_upper* %15, null, !dbg !18784
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !18787

if.then15:                                        ; preds = %if.end9
  store i32 -12, i32* %retval, align 4, !dbg !18788
  br label %return, !dbg !18788

if.end16:                                         ; preds = %if.end9
  store i32 0, i32* %retval, align 4, !dbg !18789
  br label %return, !dbg !18789

return:                                           ; preds = %if.end16, %if.then15, %if.then8, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !18790
  ret i32 %16, !dbg !18790
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_span_init(%struct.mlxsw_sp*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_switchdev_init(%struct.mlxsw_sp*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_counter_pool_init(%struct.mlxsw_sp*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_afa_init(%struct.mlxsw_sp*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_nve_init(%struct.mlxsw_sp*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_acl_init(%struct.mlxsw_sp*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_router_init(%struct.mlxsw_sp*, %struct.netlink_ext_ack*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_netdevice_event(%struct.notifier_block* %nb, i64 %event, i8* %ptr) #0 !dbg !18791 {
entry:
  %nb.addr = alloca %struct.notifier_block*, align 8
  %event.addr = alloca i64, align 8
  %ptr.addr = alloca i8*, align 8
  %dev = alloca %struct.net_device*, align 8
  %span_entry = alloca %struct.mlxsw_sp_span_entry*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %err = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_sp*, align 8
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !18792, metadata !DIExpression()), !dbg !18793
  store i64 %event, i64* %event.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %event.addr, metadata !18794, metadata !DIExpression()), !dbg !18795
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !18796, metadata !DIExpression()), !dbg !18797
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !18798, metadata !DIExpression()), !dbg !18799
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !18800
  %1 = bitcast i8* %0 to %struct.netdev_notifier_info*, !dbg !18800
  %call = call %struct.net_device* @netdev_notifier_info_to_dev(%struct.netdev_notifier_info* %1) #9, !dbg !18801
  store %struct.net_device* %call, %struct.net_device** %dev, align 8, !dbg !18799
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_span_entry** %span_entry, metadata !18802, metadata !DIExpression()), !dbg !18841
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !18842, metadata !DIExpression()), !dbg !18843
  call void @llvm.dbg.declare(metadata i32* %err, metadata !18844, metadata !DIExpression()), !dbg !18845
  store i32 0, i32* %err, align 4, !dbg !18845
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !18846, metadata !DIExpression()), !dbg !18848
  %2 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !18848
  %3 = bitcast %struct.notifier_block* %2 to i8*, !dbg !18848
  store i8* %3, i8** %__mptr, align 8, !dbg !18848
  br label %do.body, !dbg !18848

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !18849

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !18848
  %add.ptr = getelementptr i8, i8* %4, i64 -136, !dbg !18848
  %5 = bitcast i8* %add.ptr to %struct.mlxsw_sp*, !dbg !18848
  store %struct.mlxsw_sp* %5, %struct.mlxsw_sp** %tmp, align 8, !dbg !18849
  %6 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %tmp, align 8, !dbg !18848
  store %struct.mlxsw_sp* %6, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18851
  %7 = load i64, i64* %event.addr, align 8, !dbg !18852
  %cmp = icmp eq i64 %7, 6, !dbg !18854
  br i1 %cmp, label %if.then, label %if.end3, !dbg !18855

if.then:                                          ; preds = %do.end
  %8 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18856
  %9 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18858
  %call1 = call %struct.mlxsw_sp_span_entry* @mlxsw_sp_span_entry_find_by_port(%struct.mlxsw_sp* %8, %struct.net_device* %9) #9, !dbg !18859
  store %struct.mlxsw_sp_span_entry* %call1, %struct.mlxsw_sp_span_entry** %span_entry, align 8, !dbg !18860
  %10 = load %struct.mlxsw_sp_span_entry*, %struct.mlxsw_sp_span_entry** %span_entry, align 8, !dbg !18861
  %tobool = icmp ne %struct.mlxsw_sp_span_entry* %10, null, !dbg !18861
  br i1 %tobool, label %if.then2, label %if.end, !dbg !18863

if.then2:                                         ; preds = %if.then
  %11 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18864
  %12 = load %struct.mlxsw_sp_span_entry*, %struct.mlxsw_sp_span_entry** %span_entry, align 8, !dbg !18865
  call void @mlxsw_sp_span_entry_invalidate(%struct.mlxsw_sp* %11, %struct.mlxsw_sp_span_entry* %12) #9, !dbg !18866
  br label %if.end, !dbg !18866

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end3, !dbg !18867

if.end3:                                          ; preds = %if.end, %do.end
  %13 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18868
  call void @mlxsw_sp_span_respin(%struct.mlxsw_sp* %13) #9, !dbg !18869
  %14 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18870
  %call4 = call zeroext i1 @netif_is_vxlan(%struct.net_device* %14) #9, !dbg !18872
  br i1 %call4, label %if.then5, label %if.end7, !dbg !18873

if.then5:                                         ; preds = %if.end3
  %15 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18874
  %16 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18875
  %17 = load i64, i64* %event.addr, align 8, !dbg !18876
  %18 = load i8*, i8** %ptr.addr, align 8, !dbg !18877
  %call6 = call i32 @mlxsw_sp_netdevice_vxlan_event(%struct.mlxsw_sp* %15, %struct.net_device* %16, i64 %17, i8* %18) #9, !dbg !18878
  store i32 %call6, i32* %err, align 4, !dbg !18879
  br label %if.end7, !dbg !18880

if.end7:                                          ; preds = %if.then5, %if.end3
  %19 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18881
  %20 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18883
  %call8 = call zeroext i1 @mlxsw_sp_netdev_is_ipip_ol(%struct.mlxsw_sp* %19, %struct.net_device* %20) #9, !dbg !18884
  br i1 %call8, label %if.then9, label %if.else, !dbg !18885

if.then9:                                         ; preds = %if.end7
  %21 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18886
  %22 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18887
  %23 = load i64, i64* %event.addr, align 8, !dbg !18888
  %24 = load i8*, i8** %ptr.addr, align 8, !dbg !18889
  %25 = bitcast i8* %24 to %struct.netdev_notifier_info*, !dbg !18889
  %call10 = call i32 @mlxsw_sp_netdevice_ipip_ol_event(%struct.mlxsw_sp* %21, %struct.net_device* %22, i64 %23, %struct.netdev_notifier_info* %25) #9, !dbg !18890
  store i32 %call10, i32* %err, align 4, !dbg !18891
  br label %if.end53, !dbg !18892

if.else:                                          ; preds = %if.end7
  %26 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18893
  %27 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18895
  %call11 = call zeroext i1 @mlxsw_sp_netdev_is_ipip_ul(%struct.mlxsw_sp* %26, %struct.net_device* %27) #9, !dbg !18896
  br i1 %call11, label %if.then12, label %if.else14, !dbg !18897

if.then12:                                        ; preds = %if.else
  %28 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !18898
  %29 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18899
  %30 = load i64, i64* %event.addr, align 8, !dbg !18900
  %31 = load i8*, i8** %ptr.addr, align 8, !dbg !18901
  %32 = bitcast i8* %31 to %struct.netdev_notifier_info*, !dbg !18901
  %call13 = call i32 @mlxsw_sp_netdevice_ipip_ul_event(%struct.mlxsw_sp* %28, %struct.net_device* %29, i64 %30, %struct.netdev_notifier_info* %32) #9, !dbg !18902
  store i32 %call13, i32* %err, align 4, !dbg !18903
  br label %if.end52, !dbg !18904

if.else14:                                        ; preds = %if.else
  %33 = load i64, i64* %event.addr, align 8, !dbg !18905
  %cmp15 = icmp eq i64 %33, 9, !dbg !18907
  br i1 %cmp15, label %if.then19, label %lor.lhs.false, !dbg !18908

lor.lhs.false:                                    ; preds = %if.else14
  %34 = load i64, i64* %event.addr, align 8, !dbg !18909
  %cmp16 = icmp eq i64 %34, 8, !dbg !18910
  br i1 %cmp16, label %if.then19, label %lor.lhs.false17, !dbg !18911

lor.lhs.false17:                                  ; preds = %lor.lhs.false
  %35 = load i64, i64* %event.addr, align 8, !dbg !18912
  %cmp18 = icmp eq i64 %35, 7, !dbg !18913
  br i1 %cmp18, label %if.then19, label %if.else21, !dbg !18914

if.then19:                                        ; preds = %lor.lhs.false17, %lor.lhs.false, %if.else14
  %36 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18915
  %37 = load i64, i64* %event.addr, align 8, !dbg !18916
  %38 = load i8*, i8** %ptr.addr, align 8, !dbg !18917
  %call20 = call i32 @mlxsw_sp_netdevice_router_port_event(%struct.net_device* %36, i64 %37, i8* %38) #9, !dbg !18918
  store i32 %call20, i32* %err, align 4, !dbg !18919
  br label %if.end51, !dbg !18920

if.else21:                                        ; preds = %lor.lhs.false17
  %39 = load i64, i64* %event.addr, align 8, !dbg !18921
  %40 = load i8*, i8** %ptr.addr, align 8, !dbg !18923
  %call22 = call zeroext i1 @mlxsw_sp_is_vrf_event(i64 %39, i8* %40) #9, !dbg !18924
  br i1 %call22, label %if.then23, label %if.else25, !dbg !18925

if.then23:                                        ; preds = %if.else21
  %41 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18926
  %42 = load i64, i64* %event.addr, align 8, !dbg !18927
  %43 = load i8*, i8** %ptr.addr, align 8, !dbg !18928
  %44 = bitcast i8* %43 to %struct.netdev_notifier_changeupper_info*, !dbg !18928
  %call24 = call i32 @mlxsw_sp_netdevice_vrf_event(%struct.net_device* %41, i64 %42, %struct.netdev_notifier_changeupper_info* %44) #9, !dbg !18929
  store i32 %call24, i32* %err, align 4, !dbg !18930
  br label %if.end50, !dbg !18931

if.else25:                                        ; preds = %if.else21
  %45 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18932
  %call26 = call zeroext i1 @mlxsw_sp_port_dev_check(%struct.net_device* %45) #9, !dbg !18934
  br i1 %call26, label %if.then27, label %if.else29, !dbg !18935

if.then27:                                        ; preds = %if.else25
  %46 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18936
  %47 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18937
  %48 = load i64, i64* %event.addr, align 8, !dbg !18938
  %49 = load i8*, i8** %ptr.addr, align 8, !dbg !18939
  %call28 = call i32 @mlxsw_sp_netdevice_port_event(%struct.net_device* %46, %struct.net_device* %47, i64 %48, i8* %49) #9, !dbg !18940
  store i32 %call28, i32* %err, align 4, !dbg !18941
  br label %if.end49, !dbg !18942

if.else29:                                        ; preds = %if.else25
  %50 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18943
  %call30 = call zeroext i1 @netif_is_lag_master(%struct.net_device* %50) #9, !dbg !18945
  br i1 %call30, label %if.then31, label %if.else33, !dbg !18946

if.then31:                                        ; preds = %if.else29
  %51 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18947
  %52 = load i64, i64* %event.addr, align 8, !dbg !18948
  %53 = load i8*, i8** %ptr.addr, align 8, !dbg !18949
  %call32 = call i32 @mlxsw_sp_netdevice_lag_event(%struct.net_device* %51, i64 %52, i8* %53) #9, !dbg !18950
  store i32 %call32, i32* %err, align 4, !dbg !18951
  br label %if.end48, !dbg !18952

if.else33:                                        ; preds = %if.else29
  %54 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18953
  %call34 = call zeroext i1 @is_vlan_dev(%struct.net_device* %54) #9, !dbg !18955
  br i1 %call34, label %if.then35, label %if.else37, !dbg !18956

if.then35:                                        ; preds = %if.else33
  %55 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18957
  %56 = load i64, i64* %event.addr, align 8, !dbg !18958
  %57 = load i8*, i8** %ptr.addr, align 8, !dbg !18959
  %call36 = call i32 @mlxsw_sp_netdevice_vlan_event(%struct.net_device* %55, i64 %56, i8* %57) #9, !dbg !18960
  store i32 %call36, i32* %err, align 4, !dbg !18961
  br label %if.end47, !dbg !18962

if.else37:                                        ; preds = %if.else33
  %58 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18963
  %call38 = call zeroext i1 @netif_is_bridge_master(%struct.net_device* %58) #9, !dbg !18965
  br i1 %call38, label %if.then39, label %if.else41, !dbg !18966

if.then39:                                        ; preds = %if.else37
  %59 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18967
  %60 = load i64, i64* %event.addr, align 8, !dbg !18968
  %61 = load i8*, i8** %ptr.addr, align 8, !dbg !18969
  %call40 = call i32 @mlxsw_sp_netdevice_bridge_event(%struct.net_device* %59, i64 %60, i8* %61) #9, !dbg !18970
  store i32 %call40, i32* %err, align 4, !dbg !18971
  br label %if.end46, !dbg !18972

if.else41:                                        ; preds = %if.else37
  %62 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18973
  %call42 = call zeroext i1 @netif_is_macvlan(%struct.net_device* %62) #9, !dbg !18975
  br i1 %call42, label %if.then43, label %if.end45, !dbg !18976

if.then43:                                        ; preds = %if.else41
  %63 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18977
  %64 = load i64, i64* %event.addr, align 8, !dbg !18978
  %65 = load i8*, i8** %ptr.addr, align 8, !dbg !18979
  %call44 = call i32 @mlxsw_sp_netdevice_macvlan_event(%struct.net_device* %63, i64 %64, i8* %65) #9, !dbg !18980
  store i32 %call44, i32* %err, align 4, !dbg !18981
  br label %if.end45, !dbg !18982

if.end45:                                         ; preds = %if.then43, %if.else41
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.then39
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then35
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then31
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then27
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then23
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then19
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then12
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then9
  %66 = load i32, i32* %err, align 4, !dbg !18983
  %call54 = call i32 @notifier_from_errno(i32 %66) #9, !dbg !18984
  ret i32 %call54, !dbg !18985
}

; Function Attrs: noredzone
declare dso_local i32 @register_netdevice_notifier_net(%struct.net*, %struct.notifier_block*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.net* @mlxsw_sp_net(%struct.mlxsw_sp* %mlxsw_sp) #0 !dbg !18986 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !18989, metadata !DIExpression()), !dbg !18990
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !18991
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %0, i32 0, i32 1, !dbg !18992
  %1 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !18992
  %call = call %struct.net* @mlxsw_core_net(%struct.mlxsw_core* %1) #9, !dbg !18993
  ret %struct.net* %call, !dbg !18994
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_dpipe_init(%struct.mlxsw_sp*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_module_info_init(%struct.mlxsw_sp* %mlxsw_sp) #0 !dbg !18995 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %max_ports = alloca i32, align 4
  %port_mapping = alloca %struct.mlxsw_sp_port_mapping, align 1
  %i = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !18996, metadata !DIExpression()), !dbg !18997
  call void @llvm.dbg.declare(metadata i32* %max_ports, metadata !18998, metadata !DIExpression()), !dbg !18999
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19000
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %0, i32 0, i32 1, !dbg !19001
  %1 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !19001
  %call = call i32 @mlxsw_core_max_ports(%struct.mlxsw_core* %1) #9, !dbg !19002
  store i32 %call, i32* %max_ports, align 4, !dbg !18999
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_mapping* %port_mapping, metadata !19003, metadata !DIExpression()), !dbg !19004
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19005, metadata !DIExpression()), !dbg !19006
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19007, metadata !DIExpression()), !dbg !19008
  %2 = load i32, i32* %max_ports, align 4, !dbg !19009
  %conv = zext i32 %2 to i64, !dbg !19009
  %call1 = call i8* @kcalloc(i64 %conv, i64 8, i32 3264) #9, !dbg !19010
  %3 = bitcast i8* %call1 to %struct.mlxsw_sp_port_mapping**, !dbg !19010
  %4 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19011
  %port_mapping2 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %4, i32 0, i32 6, !dbg !19012
  store %struct.mlxsw_sp_port_mapping** %3, %struct.mlxsw_sp_port_mapping*** %port_mapping2, align 8, !dbg !19013
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19014
  %port_mapping3 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %5, i32 0, i32 6, !dbg !19016
  %6 = load %struct.mlxsw_sp_port_mapping**, %struct.mlxsw_sp_port_mapping*** %port_mapping3, align 8, !dbg !19016
  %tobool = icmp ne %struct.mlxsw_sp_port_mapping** %6, null, !dbg !19014
  br i1 %tobool, label %if.end, label %if.then, !dbg !19017

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !19018
  br label %return, !dbg !19018

if.end:                                           ; preds = %entry
  store i32 1, i32* %i, align 4, !dbg !19019
  br label %for.cond, !dbg !19021

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i32, i32* %i, align 4, !dbg !19022
  %8 = load i32, i32* %max_ports, align 4, !dbg !19024
  %cmp = icmp ult i32 %7, %8, !dbg !19025
  br i1 %cmp, label %for.body, label %for.end, !dbg !19026

for.body:                                         ; preds = %for.cond
  %9 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19027
  %10 = load i32, i32* %i, align 4, !dbg !19029
  %conv5 = trunc i32 %10 to i8, !dbg !19029
  %call6 = call i32 @mlxsw_sp_port_module_info_get(%struct.mlxsw_sp* %9, i8 zeroext %conv5, %struct.mlxsw_sp_port_mapping* %port_mapping) #9, !dbg !19030
  store i32 %call6, i32* %err, align 4, !dbg !19031
  %11 = load i32, i32* %err, align 4, !dbg !19032
  %tobool7 = icmp ne i32 %11, 0, !dbg !19032
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !19034

if.then8:                                         ; preds = %for.body
  br label %err_port_module_info_get, !dbg !19035

if.end9:                                          ; preds = %for.body
  %width = getelementptr inbounds %struct.mlxsw_sp_port_mapping, %struct.mlxsw_sp_port_mapping* %port_mapping, i32 0, i32 1, !dbg !19036
  %12 = load i8, i8* %width, align 1, !dbg !19036
  %tobool10 = icmp ne i8 %12, 0, !dbg !19038
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !19039

if.then11:                                        ; preds = %if.end9
  br label %for.inc, !dbg !19040

if.end12:                                         ; preds = %if.end9
  %13 = bitcast %struct.mlxsw_sp_port_mapping* %port_mapping to i8*, !dbg !19041
  %call13 = call i8* @kmemdup(i8* %13, i64 3, i32 3264) #9, !dbg !19042
  %14 = bitcast i8* %call13 to %struct.mlxsw_sp_port_mapping*, !dbg !19042
  %15 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19043
  %port_mapping14 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %15, i32 0, i32 6, !dbg !19044
  %16 = load %struct.mlxsw_sp_port_mapping**, %struct.mlxsw_sp_port_mapping*** %port_mapping14, align 8, !dbg !19044
  %17 = load i32, i32* %i, align 4, !dbg !19045
  %idxprom = sext i32 %17 to i64, !dbg !19043
  %arrayidx = getelementptr %struct.mlxsw_sp_port_mapping*, %struct.mlxsw_sp_port_mapping** %16, i64 %idxprom, !dbg !19043
  store %struct.mlxsw_sp_port_mapping* %14, %struct.mlxsw_sp_port_mapping** %arrayidx, align 8, !dbg !19046
  %18 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19047
  %port_mapping15 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %18, i32 0, i32 6, !dbg !19049
  %19 = load %struct.mlxsw_sp_port_mapping**, %struct.mlxsw_sp_port_mapping*** %port_mapping15, align 8, !dbg !19049
  %20 = load i32, i32* %i, align 4, !dbg !19050
  %idxprom16 = sext i32 %20 to i64, !dbg !19047
  %arrayidx17 = getelementptr %struct.mlxsw_sp_port_mapping*, %struct.mlxsw_sp_port_mapping** %19, i64 %idxprom16, !dbg !19047
  %21 = load %struct.mlxsw_sp_port_mapping*, %struct.mlxsw_sp_port_mapping** %arrayidx17, align 8, !dbg !19047
  %tobool18 = icmp ne %struct.mlxsw_sp_port_mapping* %21, null, !dbg !19047
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !19051

if.then19:                                        ; preds = %if.end12
  store i32 -12, i32* %err, align 4, !dbg !19052
  br label %err_port_module_info_dup, !dbg !19054

if.end20:                                         ; preds = %if.end12
  br label %for.inc, !dbg !19055

for.inc:                                          ; preds = %if.end20, %if.then11
  %22 = load i32, i32* %i, align 4, !dbg !19056
  %inc = add i32 %22, 1, !dbg !19056
  store i32 %inc, i32* %i, align 4, !dbg !19056
  br label %for.cond, !dbg !19057, !llvm.loop !19058

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !19060
  br label %return, !dbg !19060

err_port_module_info_get:                         ; preds = %if.then8
  call void @llvm.dbg.label(metadata !19061), !dbg !19062
  br label %err_port_module_info_dup, !dbg !19060

err_port_module_info_dup:                         ; preds = %err_port_module_info_get, %if.then19
  call void @llvm.dbg.label(metadata !19063), !dbg !19064
  %23 = load i32, i32* %i, align 4, !dbg !19065
  %dec = add i32 %23, -1, !dbg !19065
  store i32 %dec, i32* %i, align 4, !dbg !19065
  br label %for.cond21, !dbg !19067

for.cond21:                                       ; preds = %for.inc28, %err_port_module_info_dup
  %24 = load i32, i32* %i, align 4, !dbg !19068
  %cmp22 = icmp sge i32 %24, 1, !dbg !19070
  br i1 %cmp22, label %for.body24, label %for.end30, !dbg !19071

for.body24:                                       ; preds = %for.cond21
  %25 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19072
  %port_mapping25 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %25, i32 0, i32 6, !dbg !19073
  %26 = load %struct.mlxsw_sp_port_mapping**, %struct.mlxsw_sp_port_mapping*** %port_mapping25, align 8, !dbg !19073
  %27 = load i32, i32* %i, align 4, !dbg !19074
  %idxprom26 = sext i32 %27 to i64, !dbg !19072
  %arrayidx27 = getelementptr %struct.mlxsw_sp_port_mapping*, %struct.mlxsw_sp_port_mapping** %26, i64 %idxprom26, !dbg !19072
  %28 = load %struct.mlxsw_sp_port_mapping*, %struct.mlxsw_sp_port_mapping** %arrayidx27, align 8, !dbg !19072
  %29 = bitcast %struct.mlxsw_sp_port_mapping* %28 to i8*, !dbg !19072
  call void @kfree(i8* %29) #9, !dbg !19075
  br label %for.inc28, !dbg !19075

for.inc28:                                        ; preds = %for.body24
  %30 = load i32, i32* %i, align 4, !dbg !19076
  %dec29 = add i32 %30, -1, !dbg !19076
  store i32 %dec29, i32* %i, align 4, !dbg !19076
  br label %for.cond21, !dbg !19077, !llvm.loop !19078

for.end30:                                        ; preds = %for.cond21
  %31 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19080
  %port_mapping31 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %31, i32 0, i32 6, !dbg !19081
  %32 = load %struct.mlxsw_sp_port_mapping**, %struct.mlxsw_sp_port_mapping*** %port_mapping31, align 8, !dbg !19081
  %33 = bitcast %struct.mlxsw_sp_port_mapping** %32 to i8*, !dbg !19080
  call void @kfree(i8* %33) #9, !dbg !19082
  %34 = load i32, i32* %err, align 4, !dbg !19083
  store i32 %34, i32* %retval, align 4, !dbg !19084
  br label %return, !dbg !19084

return:                                           ; preds = %for.end30, %for.end, %if.then
  %35 = load i32, i32* %retval, align 4, !dbg !19085
  ret i32 %35, !dbg !19085
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_ports_create(%struct.mlxsw_sp* %mlxsw_sp) #0 !dbg !19086 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %max_ports = alloca i32, align 4
  %port_mapping = alloca %struct.mlxsw_sp_port_mapping*, align 8
  %alloc_size = alloca i64, align 8
  %i = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !19087, metadata !DIExpression()), !dbg !19088
  call void @llvm.dbg.declare(metadata i32* %max_ports, metadata !19089, metadata !DIExpression()), !dbg !19090
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19091
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %0, i32 0, i32 1, !dbg !19092
  %1 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !19092
  %call = call i32 @mlxsw_core_max_ports(%struct.mlxsw_core* %1) #9, !dbg !19093
  store i32 %call, i32* %max_ports, align 4, !dbg !19090
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_mapping** %port_mapping, metadata !19094, metadata !DIExpression()), !dbg !19095
  call void @llvm.dbg.declare(metadata i64* %alloc_size, metadata !19096, metadata !DIExpression()), !dbg !19097
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19098, metadata !DIExpression()), !dbg !19099
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19100, metadata !DIExpression()), !dbg !19101
  %2 = load i32, i32* %max_ports, align 4, !dbg !19102
  %conv = zext i32 %2 to i64, !dbg !19102
  %mul = mul i64 8, %conv, !dbg !19103
  store i64 %mul, i64* %alloc_size, align 8, !dbg !19104
  %3 = load i64, i64* %alloc_size, align 8, !dbg !19105
  %call1 = call i8* @kzalloc(i64 %3, i32 3264) #9, !dbg !19106
  %4 = bitcast i8* %call1 to %struct.mlxsw_sp_port**, !dbg !19106
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19107
  %ports = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %5, i32 0, i32 0, !dbg !19108
  store %struct.mlxsw_sp_port** %4, %struct.mlxsw_sp_port*** %ports, align 8, !dbg !19109
  %6 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19110
  %ports2 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %6, i32 0, i32 0, !dbg !19112
  %7 = load %struct.mlxsw_sp_port**, %struct.mlxsw_sp_port*** %ports2, align 8, !dbg !19112
  %tobool = icmp ne %struct.mlxsw_sp_port** %7, null, !dbg !19110
  br i1 %tobool, label %if.end, label %if.then, !dbg !19113

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !19114
  br label %return, !dbg !19114

if.end:                                           ; preds = %entry
  %8 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19115
  %call3 = call i32 @mlxsw_sp_cpu_port_create(%struct.mlxsw_sp* %8) #9, !dbg !19116
  store i32 %call3, i32* %err, align 4, !dbg !19117
  %9 = load i32, i32* %err, align 4, !dbg !19118
  %tobool4 = icmp ne i32 %9, 0, !dbg !19118
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !19120

if.then5:                                         ; preds = %if.end
  br label %err_cpu_port_create, !dbg !19121

if.end6:                                          ; preds = %if.end
  store i32 1, i32* %i, align 4, !dbg !19122
  br label %for.cond, !dbg !19124

for.cond:                                         ; preds = %for.inc, %if.end6
  %10 = load i32, i32* %i, align 4, !dbg !19125
  %11 = load i32, i32* %max_ports, align 4, !dbg !19127
  %cmp = icmp ult i32 %10, %11, !dbg !19128
  br i1 %cmp, label %for.body, label %for.end, !dbg !19129

for.body:                                         ; preds = %for.cond
  %12 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19130
  %port_mapping8 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %12, i32 0, i32 6, !dbg !19132
  %13 = load %struct.mlxsw_sp_port_mapping**, %struct.mlxsw_sp_port_mapping*** %port_mapping8, align 8, !dbg !19132
  %14 = load i32, i32* %i, align 4, !dbg !19133
  %idxprom = sext i32 %14 to i64, !dbg !19130
  %arrayidx = getelementptr %struct.mlxsw_sp_port_mapping*, %struct.mlxsw_sp_port_mapping** %13, i64 %idxprom, !dbg !19130
  %15 = load %struct.mlxsw_sp_port_mapping*, %struct.mlxsw_sp_port_mapping** %arrayidx, align 8, !dbg !19130
  store %struct.mlxsw_sp_port_mapping* %15, %struct.mlxsw_sp_port_mapping** %port_mapping, align 8, !dbg !19134
  %16 = load %struct.mlxsw_sp_port_mapping*, %struct.mlxsw_sp_port_mapping** %port_mapping, align 8, !dbg !19135
  %tobool9 = icmp ne %struct.mlxsw_sp_port_mapping* %16, null, !dbg !19135
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !19137

if.then10:                                        ; preds = %for.body
  br label %for.inc, !dbg !19138

if.end11:                                         ; preds = %for.body
  %17 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19139
  %18 = load i32, i32* %i, align 4, !dbg !19140
  %conv12 = trunc i32 %18 to i8, !dbg !19140
  %19 = load %struct.mlxsw_sp_port_mapping*, %struct.mlxsw_sp_port_mapping** %port_mapping, align 8, !dbg !19141
  %call13 = call i32 @mlxsw_sp_port_create(%struct.mlxsw_sp* %17, i8 zeroext %conv12, i8 zeroext 0, %struct.mlxsw_sp_port_mapping* %19) #9, !dbg !19142
  store i32 %call13, i32* %err, align 4, !dbg !19143
  %20 = load i32, i32* %err, align 4, !dbg !19144
  %tobool14 = icmp ne i32 %20, 0, !dbg !19144
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !19146

if.then15:                                        ; preds = %if.end11
  br label %err_port_create, !dbg !19147

if.end16:                                         ; preds = %if.end11
  br label %for.inc, !dbg !19148

for.inc:                                          ; preds = %if.end16, %if.then10
  %21 = load i32, i32* %i, align 4, !dbg !19149
  %inc = add i32 %21, 1, !dbg !19149
  store i32 %inc, i32* %i, align 4, !dbg !19149
  br label %for.cond, !dbg !19150, !llvm.loop !19151

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !19153
  br label %return, !dbg !19153

err_port_create:                                  ; preds = %if.then15
  call void @llvm.dbg.label(metadata !19154), !dbg !19155
  %22 = load i32, i32* %i, align 4, !dbg !19156
  %dec = add i32 %22, -1, !dbg !19156
  store i32 %dec, i32* %i, align 4, !dbg !19156
  br label %for.cond17, !dbg !19158

for.cond17:                                       ; preds = %for.inc26, %err_port_create
  %23 = load i32, i32* %i, align 4, !dbg !19159
  %cmp18 = icmp sge i32 %23, 1, !dbg !19161
  br i1 %cmp18, label %for.body20, label %for.end28, !dbg !19162

for.body20:                                       ; preds = %for.cond17
  %24 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19163
  %25 = load i32, i32* %i, align 4, !dbg !19165
  %conv21 = trunc i32 %25 to i8, !dbg !19165
  %call22 = call zeroext i1 @mlxsw_sp_port_created(%struct.mlxsw_sp* %24, i8 zeroext %conv21) #9, !dbg !19166
  br i1 %call22, label %if.then23, label %if.end25, !dbg !19167

if.then23:                                        ; preds = %for.body20
  %26 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19168
  %27 = load i32, i32* %i, align 4, !dbg !19169
  %conv24 = trunc i32 %27 to i8, !dbg !19169
  call void @mlxsw_sp_port_remove(%struct.mlxsw_sp* %26, i8 zeroext %conv24) #9, !dbg !19170
  br label %if.end25, !dbg !19170

if.end25:                                         ; preds = %if.then23, %for.body20
  br label %for.inc26, !dbg !19171

for.inc26:                                        ; preds = %if.end25
  %28 = load i32, i32* %i, align 4, !dbg !19172
  %dec27 = add i32 %28, -1, !dbg !19172
  store i32 %dec27, i32* %i, align 4, !dbg !19172
  br label %for.cond17, !dbg !19173, !llvm.loop !19174

for.end28:                                        ; preds = %for.cond17
  %29 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19176
  call void @mlxsw_sp_cpu_port_remove(%struct.mlxsw_sp* %29) #9, !dbg !19177
  br label %err_cpu_port_create, !dbg !19177

err_cpu_port_create:                              ; preds = %for.end28, %if.then5
  call void @llvm.dbg.label(metadata !19178), !dbg !19179
  %30 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19180
  %ports29 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %30, i32 0, i32 0, !dbg !19181
  %31 = load %struct.mlxsw_sp_port**, %struct.mlxsw_sp_port*** %ports29, align 8, !dbg !19181
  %32 = bitcast %struct.mlxsw_sp_port** %31 to i8*, !dbg !19180
  call void @kfree(i8* %32) #9, !dbg !19182
  %33 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19183
  %ports30 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %33, i32 0, i32 0, !dbg !19184
  store %struct.mlxsw_sp_port** null, %struct.mlxsw_sp_port*** %ports30, align 8, !dbg !19185
  %34 = load i32, i32* %err, align 4, !dbg !19186
  store i32 %34, i32* %retval, align 4, !dbg !19187
  br label %return, !dbg !19187

return:                                           ; preds = %err_cpu_port_create, %for.end, %if.then
  %35 = load i32, i32* %retval, align 4, !dbg !19188
  ret i32 %35, !dbg !19188
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_port_module_info_fini(%struct.mlxsw_sp* %mlxsw_sp) #0 !dbg !19189 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %i = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !19192, metadata !DIExpression()), !dbg !19193
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19194, metadata !DIExpression()), !dbg !19195
  store i32 1, i32* %i, align 4, !dbg !19196
  br label %for.cond, !dbg !19198

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !19199
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19201
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %1, i32 0, i32 1, !dbg !19202
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !19202
  %call = call i32 @mlxsw_core_max_ports(%struct.mlxsw_core* %2) #9, !dbg !19203
  %cmp = icmp ult i32 %0, %call, !dbg !19204
  br i1 %cmp, label %for.body, label %for.end, !dbg !19205

for.body:                                         ; preds = %for.cond
  %3 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19206
  %port_mapping = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %3, i32 0, i32 6, !dbg !19207
  %4 = load %struct.mlxsw_sp_port_mapping**, %struct.mlxsw_sp_port_mapping*** %port_mapping, align 8, !dbg !19207
  %5 = load i32, i32* %i, align 4, !dbg !19208
  %idxprom = sext i32 %5 to i64, !dbg !19206
  %arrayidx = getelementptr %struct.mlxsw_sp_port_mapping*, %struct.mlxsw_sp_port_mapping** %4, i64 %idxprom, !dbg !19206
  %6 = load %struct.mlxsw_sp_port_mapping*, %struct.mlxsw_sp_port_mapping** %arrayidx, align 8, !dbg !19206
  %7 = bitcast %struct.mlxsw_sp_port_mapping* %6 to i8*, !dbg !19206
  call void @kfree(i8* %7) #9, !dbg !19209
  br label %for.inc, !dbg !19209

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !19210
  %inc = add i32 %8, 1, !dbg !19210
  store i32 %inc, i32* %i, align 4, !dbg !19210
  br label %for.cond, !dbg !19211, !llvm.loop !19212

for.end:                                          ; preds = %for.cond
  %9 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19214
  %port_mapping1 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %9, i32 0, i32 6, !dbg !19215
  %10 = load %struct.mlxsw_sp_port_mapping**, %struct.mlxsw_sp_port_mapping*** %port_mapping1, align 8, !dbg !19215
  %11 = bitcast %struct.mlxsw_sp_port_mapping** %10 to i8*, !dbg !19214
  call void @kfree(i8* %11) #9, !dbg !19216
  ret void, !dbg !19217
}

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_dpipe_fini(%struct.mlxsw_sp*) #2

; Function Attrs: noredzone
declare dso_local i32 @unregister_netdevice_notifier_net(%struct.net*, %struct.notifier_block*) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_router_fini(%struct.mlxsw_sp*) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_acl_fini(%struct.mlxsw_sp*) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_nve_fini(%struct.mlxsw_sp*) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_afa_fini(%struct.mlxsw_sp*) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_counter_pool_fini(%struct.mlxsw_sp*) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_switchdev_fini(%struct.mlxsw_sp*) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_span_fini(%struct.mlxsw_sp*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_lag_fini(%struct.mlxsw_sp* %mlxsw_sp) #0 !dbg !19218 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !19219, metadata !DIExpression()), !dbg !19220
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19221
  %lags = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %0, i32 0, i32 5, !dbg !19222
  %1 = load %struct.mlxsw_sp_upper*, %struct.mlxsw_sp_upper** %lags, align 8, !dbg !19222
  %2 = bitcast %struct.mlxsw_sp_upper* %1 to i8*, !dbg !19221
  call void @kfree(i8* %2) #9, !dbg !19223
  ret void, !dbg !19224
}

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_buffers_fini(%struct.mlxsw_sp*) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_devlink_traps_fini(%struct.mlxsw_sp*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_traps_fini(%struct.mlxsw_sp* %mlxsw_sp) #0 !dbg !19225 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !19226, metadata !DIExpression()), !dbg !19227
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19228
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19229
  %listeners = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %1, i32 0, i32 38, !dbg !19230
  %2 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listeners, align 8, !dbg !19230
  %3 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19231
  %listeners_count = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %3, i32 0, i32 39, !dbg !19232
  %4 = load i64, i64* %listeners_count, align 8, !dbg !19232
  call void @mlxsw_sp_traps_unregister(%struct.mlxsw_sp* %0, %struct.mlxsw_listener* %2, i64 %4) #9, !dbg !19233
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19234
  call void @mlxsw_sp_traps_unregister(%struct.mlxsw_sp* %5, %struct.mlxsw_listener* getelementptr inbounds ([12 x %struct.mlxsw_listener], [12 x %struct.mlxsw_listener]* bitcast (<{ { i16, { %struct.mlxsw_event_listener }, i32, i32, i8, i8, i8 }, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener, %struct.mlxsw_listener }>* @mlxsw_sp_listener to [12 x %struct.mlxsw_listener]*), i64 0, i64 0), i64 12) #9, !dbg !19235
  %6 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19236
  %trap = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %6, i32 0, i32 22, !dbg !19237
  %7 = load %struct.mlxsw_sp_trap*, %struct.mlxsw_sp_trap** %trap, align 8, !dbg !19237
  %8 = bitcast %struct.mlxsw_sp_trap* %7 to i8*, !dbg !19236
  call void @kfree(i8* %8) #9, !dbg !19238
  ret void, !dbg !19239
}

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_policers_fini(%struct.mlxsw_sp*) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_fids_fini(%struct.mlxsw_sp*) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_kvdl_fini(%struct.mlxsw_sp*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_spad_base_mac_memcpy_from(i8* %buf, i8* %dst) #0 !dbg !19240 {
entry:
  %buf.addr = alloca i8*, align 8
  %dst.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !19243, metadata !DIExpression()), !dbg !19244
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !19245, metadata !DIExpression()), !dbg !19244
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !19244
  %1 = load i8*, i8** %dst.addr, align 8, !dbg !19244
  call void @__mlxsw_item_memcpy_from(i8* %0, i8* %1, %struct.mlxsw_item* @mlxsw_reg_spad_base_mac_item, i16 zeroext 0) #9, !dbg !19244
  ret void, !dbg !19244
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__mlxsw_item_memcpy_from(i8* %buf, i8* %dst, %struct.mlxsw_item* %item, i16 zeroext %index) #0 !dbg !19246 {
entry:
  %buf.addr = alloca i8*, align 8
  %dst.addr = alloca i8*, align 8
  %item.addr = alloca %struct.mlxsw_item*, align 8
  %index.addr = alloca i16, align 2
  %offset = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !19249, metadata !DIExpression()), !dbg !19250
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !19251, metadata !DIExpression()), !dbg !19252
  store %struct.mlxsw_item* %item, %struct.mlxsw_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_item** %item.addr, metadata !19253, metadata !DIExpression()), !dbg !19254
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !19255, metadata !DIExpression()), !dbg !19256
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !19257, metadata !DIExpression()), !dbg !19258
  %0 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !19259
  %1 = load i16, i16* %index.addr, align 2, !dbg !19260
  %call = call i32 @__mlxsw_item_offset(%struct.mlxsw_item* %0, i16 zeroext %1, i64 1) #9, !dbg !19261
  store i32 %call, i32* %offset, align 4, !dbg !19258
  %2 = load i8*, i8** %dst.addr, align 8, !dbg !19262
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !19263
  %4 = load i32, i32* %offset, align 4, !dbg !19264
  %idxprom = zext i32 %4 to i64, !dbg !19263
  %arrayidx = getelementptr i8, i8* %3, i64 %idxprom, !dbg !19263
  %5 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !19265
  %size = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %5, i32 0, i32 6, !dbg !19266
  %bytes = bitcast %union.anon.166* %size to i16*, !dbg !19267
  %6 = load i16, i16* %bytes, align 2, !dbg !19267
  %conv = zext i16 %6 to i64, !dbg !19265
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %arrayidx, i64 %conv, i1 false), !dbg !19268
  ret void, !dbg !19269
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @mlxsw_core_res_valid(%struct.mlxsw_core*, i32) #2

; Function Attrs: noredzone
declare dso_local i64 @mlxsw_core_res_get(%struct.mlxsw_core*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__ab_c_size(i64 %a, i64 %b, i64 %c) #0 !dbg !19270 {
entry:
  %retval = alloca i64, align 8
  %a.addr = alloca i64, align 8
  %b.addr = alloca i64, align 8
  %c.addr = alloca i64, align 8
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  %__a3 = alloca i64, align 8
  %__b4 = alloca i64, align 8
  %__d5 = alloca i64*, align 8
  %tmp10 = alloca i8, align 1
  store i64 %a, i64* %a.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !19274, metadata !DIExpression()), !dbg !19275
  store i64 %b, i64* %b.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !19276, metadata !DIExpression()), !dbg !19277
  store i64 %c, i64* %c.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %c.addr, metadata !19278, metadata !DIExpression()), !dbg !19279
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !19280, metadata !DIExpression()), !dbg !19281
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !19282, metadata !DIExpression()), !dbg !19285
  %0 = load i64, i64* %a.addr, align 8, !dbg !19285
  store i64 %0, i64* %__a, align 8, !dbg !19285
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !19286, metadata !DIExpression()), !dbg !19285
  %1 = load i64, i64* %b.addr, align 8, !dbg !19285
  store i64 %1, i64* %__b, align 8, !dbg !19285
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !19287, metadata !DIExpression()), !dbg !19285
  store i64* %bytes, i64** %__d, align 8, !dbg !19285
  %cmp = icmp eq i64* %__a, %__b, !dbg !19285
  %conv = zext i1 %cmp to i32, !dbg !19285
  %2 = load i64*, i64** %__d, align 8, !dbg !19285
  %cmp1 = icmp eq i64* %__a, %2, !dbg !19285
  %conv2 = zext i1 %cmp1 to i32, !dbg !19285
  %3 = load i64, i64* %__a, align 8, !dbg !19285
  %4 = load i64, i64* %__b, align 8, !dbg !19285
  %5 = load i64*, i64** %__d, align 8, !dbg !19285
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !19285
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !19285
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !19285
  store i64 %8, i64* %5, align 8, !dbg !19285
  %frombool = zext i1 %7 to i8, !dbg !19285
  store i8 %frombool, i8* %tmp, align 1, !dbg !19285
  %9 = load i8, i8* %tmp, align 1, !dbg !19285
  %tobool = trunc i8 %9 to i1, !dbg !19285
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #9, !dbg !19288
  br i1 %call, label %if.then, label %if.end, !dbg !19289

if.then:                                          ; preds = %entry
  store i64 -1, i64* %retval, align 8, !dbg !19290
  br label %return, !dbg !19290

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %__a3, metadata !19291, metadata !DIExpression()), !dbg !19294
  %10 = load i64, i64* %bytes, align 8, !dbg !19294
  store i64 %10, i64* %__a3, align 8, !dbg !19294
  call void @llvm.dbg.declare(metadata i64* %__b4, metadata !19295, metadata !DIExpression()), !dbg !19294
  %11 = load i64, i64* %c.addr, align 8, !dbg !19294
  store i64 %11, i64* %__b4, align 8, !dbg !19294
  call void @llvm.dbg.declare(metadata i64** %__d5, metadata !19296, metadata !DIExpression()), !dbg !19294
  store i64* %bytes, i64** %__d5, align 8, !dbg !19294
  %cmp6 = icmp eq i64* %__a3, %__b4, !dbg !19294
  %conv7 = zext i1 %cmp6 to i32, !dbg !19294
  %12 = load i64*, i64** %__d5, align 8, !dbg !19294
  %cmp8 = icmp eq i64* %__a3, %12, !dbg !19294
  %conv9 = zext i1 %cmp8 to i32, !dbg !19294
  %13 = load i64, i64* %__a3, align 8, !dbg !19294
  %14 = load i64, i64* %__b4, align 8, !dbg !19294
  %15 = load i64*, i64** %__d5, align 8, !dbg !19294
  %16 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %13, i64 %14), !dbg !19294
  %17 = extractvalue { i64, i1 } %16, 1, !dbg !19294
  %18 = extractvalue { i64, i1 } %16, 0, !dbg !19294
  store i64 %18, i64* %15, align 8, !dbg !19294
  %frombool11 = zext i1 %17 to i8, !dbg !19294
  store i8 %frombool11, i8* %tmp10, align 1, !dbg !19294
  %19 = load i8, i8* %tmp10, align 1, !dbg !19294
  %tobool12 = trunc i8 %19 to i1, !dbg !19294
  %call13 = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool12) #9, !dbg !19297
  br i1 %call13, label %if.then14, label %if.end15, !dbg !19298

if.then14:                                        ; preds = %if.end
  store i64 -1, i64* %retval, align 8, !dbg !19299
  br label %return, !dbg !19299

if.end15:                                         ; preds = %if.end
  %20 = load i64, i64* %bytes, align 8, !dbg !19300
  store i64 %20, i64* %retval, align 8, !dbg !19301
  br label %return, !dbg !19301

return:                                           ; preds = %if.end15, %if.then14, %if.then
  %21 = load i64, i64* %retval, align 8, !dbg !19302
  ret i64 %21, !dbg !19302
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_cpu_policers_set(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !19303 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %qpcr_pl = alloca [40 x i8], align 16
  %ir_units = alloca i32, align 4
  %max_cpu_policers = alloca i32, align 4
  %is_bytes = alloca i8, align 1
  %burst_size = alloca i8, align 1
  %rate = alloca i32, align 4
  %i = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !19304, metadata !DIExpression()), !dbg !19305
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !19306, metadata !DIExpression()), !dbg !19307
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !19308
  %call = call i8* @mlxsw_core_driver_priv(%struct.mlxsw_core* %0) #9, !dbg !19309
  %1 = bitcast i8* %call to %struct.mlxsw_sp*, !dbg !19309
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !19307
  call void @llvm.dbg.declare(metadata [40 x i8]* %qpcr_pl, metadata !19310, metadata !DIExpression()), !dbg !19314
  call void @llvm.dbg.declare(metadata i32* %ir_units, metadata !19315, metadata !DIExpression()), !dbg !19316
  call void @llvm.dbg.declare(metadata i32* %max_cpu_policers, metadata !19317, metadata !DIExpression()), !dbg !19318
  call void @llvm.dbg.declare(metadata i8* %is_bytes, metadata !19319, metadata !DIExpression()), !dbg !19320
  call void @llvm.dbg.declare(metadata i8* %burst_size, metadata !19321, metadata !DIExpression()), !dbg !19322
  call void @llvm.dbg.declare(metadata i32* %rate, metadata !19323, metadata !DIExpression()), !dbg !19324
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19325, metadata !DIExpression()), !dbg !19326
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19327, metadata !DIExpression()), !dbg !19328
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !19329
  %call1 = call zeroext i1 @mlxsw_core_res_valid(%struct.mlxsw_core* %2, i32 40) #9, !dbg !19329
  br i1 %call1, label %if.end, label %if.then, !dbg !19331

if.then:                                          ; preds = %entry
  store i32 -5, i32* %retval, align 4, !dbg !19332
  br label %return, !dbg !19332

if.end:                                           ; preds = %entry
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !19333
  %call2 = call i64 @mlxsw_core_res_get(%struct.mlxsw_core* %3, i32 40) #9, !dbg !19333
  %conv = trunc i64 %call2 to i32, !dbg !19333
  store i32 %conv, i32* %max_cpu_policers, align 4, !dbg !19334
  store i32 0, i32* %ir_units, align 4, !dbg !19335
  store i32 0, i32* %i, align 4, !dbg !19336
  br label %for.cond, !dbg !19338

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32, i32* %i, align 4, !dbg !19339
  %5 = load i32, i32* %max_cpu_policers, align 4, !dbg !19341
  %cmp = icmp slt i32 %4, %5, !dbg !19342
  br i1 %cmp, label %for.body, label %for.end, !dbg !19343

for.body:                                         ; preds = %for.cond
  store i8 0, i8* %is_bytes, align 1, !dbg !19344
  %6 = load i32, i32* %i, align 4, !dbg !19346
  switch i32 %6, label %sw.default [
    i32 13, label %sw.bb
    i32 11, label %sw.bb
    i32 25, label %sw.bb
  ], !dbg !19347

sw.bb:                                            ; preds = %for.body, %for.body, %for.body
  store i32 1024, i32* %rate, align 4, !dbg !19348
  store i8 7, i8* %burst_size, align 1, !dbg !19350
  br label %sw.epilog, !dbg !19351

sw.default:                                       ; preds = %for.body
  br label %for.inc, !dbg !19352

sw.epilog:                                        ; preds = %sw.bb
  %7 = load i32, i32* %i, align 4, !dbg !19353
  %conv4 = sext i32 %7 to i64, !dbg !19353
  %8 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !19354
  %trap = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %8, i32 0, i32 22, !dbg !19355
  %9 = load %struct.mlxsw_sp_trap*, %struct.mlxsw_sp_trap** %trap, align 8, !dbg !19355
  %policers_usage = getelementptr inbounds %struct.mlxsw_sp_trap, %struct.mlxsw_sp_trap* %9, i32 0, i32 8, !dbg !19356
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %policers_usage, i64 0, i64 0, !dbg !19354
  call void @__set_bit(i64 %conv4, i64* %arraydecay) #9, !dbg !19357
  %arraydecay5 = getelementptr inbounds [40 x i8], [40 x i8]* %qpcr_pl, i64 0, i64 0, !dbg !19358
  %10 = load i32, i32* %i, align 4, !dbg !19359
  %conv6 = trunc i32 %10 to i16, !dbg !19359
  %11 = load i32, i32* %ir_units, align 4, !dbg !19360
  %12 = load i8, i8* %is_bytes, align 1, !dbg !19361
  %tobool = trunc i8 %12 to i1, !dbg !19361
  %13 = load i32, i32* %rate, align 4, !dbg !19362
  %14 = load i8, i8* %burst_size, align 1, !dbg !19363
  %conv7 = zext i8 %14 to i16, !dbg !19363
  call void @mlxsw_reg_qpcr_pack(i8* %arraydecay5, i16 zeroext %conv6, i32 %11, i1 zeroext %tobool, i32 %13, i16 zeroext %conv7) #9, !dbg !19364
  %15 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !19365
  %arraydecay8 = getelementptr inbounds [40 x i8], [40 x i8]* %qpcr_pl, i64 0, i64 0, !dbg !19366
  %call9 = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %15, %struct.mlxsw_reg_info* @mlxsw_reg_qpcr, i8* %arraydecay8) #9, !dbg !19367
  store i32 %call9, i32* %err, align 4, !dbg !19368
  %16 = load i32, i32* %err, align 4, !dbg !19369
  %tobool10 = icmp ne i32 %16, 0, !dbg !19369
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !19371

if.then11:                                        ; preds = %sw.epilog
  %17 = load i32, i32* %err, align 4, !dbg !19372
  store i32 %17, i32* %retval, align 4, !dbg !19373
  br label %return, !dbg !19373

if.end12:                                         ; preds = %sw.epilog
  br label %for.inc, !dbg !19374

for.inc:                                          ; preds = %if.end12, %sw.default
  %18 = load i32, i32* %i, align 4, !dbg !19375
  %inc = add i32 %18, 1, !dbg !19375
  store i32 %inc, i32* %i, align 4, !dbg !19375
  br label %for.cond, !dbg !19376, !llvm.loop !19377

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !19379
  br label %return, !dbg !19379

return:                                           ; preds = %for.end, %if.then11, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !19380
  ret i32 %19, !dbg !19380
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_trap_groups_set(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !19381 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %htgt_pl = alloca [32 x i8], align 16
  %i = alloca i32, align 4
  %max_cpu_policers = alloca i32, align 4
  %max_trap_groups = alloca i32, align 4
  %priority = alloca i8, align 1
  %tc = alloca i8, align 1
  %policer_id = alloca i16, align 2
  %err = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !19382, metadata !DIExpression()), !dbg !19383
  call void @llvm.dbg.declare(metadata [32 x i8]* %htgt_pl, metadata !19384, metadata !DIExpression()), !dbg !19385
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19386, metadata !DIExpression()), !dbg !19387
  call void @llvm.dbg.declare(metadata i32* %max_cpu_policers, metadata !19388, metadata !DIExpression()), !dbg !19389
  call void @llvm.dbg.declare(metadata i32* %max_trap_groups, metadata !19390, metadata !DIExpression()), !dbg !19391
  call void @llvm.dbg.declare(metadata i8* %priority, metadata !19392, metadata !DIExpression()), !dbg !19393
  call void @llvm.dbg.declare(metadata i8* %tc, metadata !19394, metadata !DIExpression()), !dbg !19395
  call void @llvm.dbg.declare(metadata i16* %policer_id, metadata !19396, metadata !DIExpression()), !dbg !19397
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19398, metadata !DIExpression()), !dbg !19399
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !19400
  %call = call zeroext i1 @mlxsw_core_res_valid(%struct.mlxsw_core* %0, i32 5) #9, !dbg !19400
  br i1 %call, label %if.end, label %if.then, !dbg !19402

if.then:                                          ; preds = %entry
  store i32 -5, i32* %retval, align 4, !dbg !19403
  br label %return, !dbg !19403

if.end:                                           ; preds = %entry
  %1 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !19404
  %call1 = call i64 @mlxsw_core_res_get(%struct.mlxsw_core* %1, i32 5) #9, !dbg !19404
  %conv = trunc i64 %call1 to i32, !dbg !19404
  store i32 %conv, i32* %max_trap_groups, align 4, !dbg !19405
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !19406
  %call2 = call i64 @mlxsw_core_res_get(%struct.mlxsw_core* %2, i32 40) #9, !dbg !19406
  %conv3 = trunc i64 %call2 to i32, !dbg !19406
  store i32 %conv3, i32* %max_cpu_policers, align 4, !dbg !19407
  store i32 0, i32* %i, align 4, !dbg !19408
  br label %for.cond, !dbg !19410

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %i, align 4, !dbg !19411
  %4 = load i32, i32* %max_trap_groups, align 4, !dbg !19413
  %cmp = icmp ult i32 %3, %4, !dbg !19414
  br i1 %cmp, label %for.body, label %for.end, !dbg !19415

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %i, align 4, !dbg !19416
  %conv5 = trunc i32 %5 to i16, !dbg !19416
  store i16 %conv5, i16* %policer_id, align 2, !dbg !19418
  %6 = load i32, i32* %i, align 4, !dbg !19419
  switch i32 %6, label %sw.default [
    i32 13, label %sw.bb
    i32 11, label %sw.bb
    i32 25, label %sw.bb
    i32 17, label %sw.bb6
  ], !dbg !19420

sw.bb:                                            ; preds = %for.body, %for.body, %for.body
  store i8 1, i8* %priority, align 1, !dbg !19421
  store i8 1, i8* %tc, align 1, !dbg !19423
  br label %sw.epilog, !dbg !19424

sw.bb6:                                           ; preds = %for.body
  store i8 0, i8* %priority, align 1, !dbg !19425
  store i8 7, i8* %tc, align 1, !dbg !19426
  store i16 255, i16* %policer_id, align 2, !dbg !19427
  br label %sw.epilog, !dbg !19428

sw.default:                                       ; preds = %for.body
  br label %for.inc, !dbg !19429

sw.epilog:                                        ; preds = %sw.bb6, %sw.bb
  %7 = load i32, i32* %max_cpu_policers, align 4, !dbg !19430
  %8 = load i16, i16* %policer_id, align 2, !dbg !19432
  %conv7 = zext i16 %8 to i32, !dbg !19432
  %cmp8 = icmp sle i32 %7, %conv7, !dbg !19433
  br i1 %cmp8, label %land.lhs.true, label %if.end14, !dbg !19434

land.lhs.true:                                    ; preds = %sw.epilog
  %9 = load i16, i16* %policer_id, align 2, !dbg !19435
  %conv10 = zext i16 %9 to i32, !dbg !19435
  %cmp11 = icmp ne i32 %conv10, 255, !dbg !19436
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !19437

if.then13:                                        ; preds = %land.lhs.true
  store i32 -5, i32* %retval, align 4, !dbg !19438
  br label %return, !dbg !19438

if.end14:                                         ; preds = %land.lhs.true, %sw.epilog
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %htgt_pl, i64 0, i64 0, !dbg !19439
  %10 = load i32, i32* %i, align 4, !dbg !19440
  %conv15 = trunc i32 %10 to i8, !dbg !19440
  %11 = load i16, i16* %policer_id, align 2, !dbg !19441
  %conv16 = trunc i16 %11 to i8, !dbg !19441
  %12 = load i8, i8* %priority, align 1, !dbg !19442
  %13 = load i8, i8* %tc, align 1, !dbg !19443
  call void @mlxsw_reg_htgt_pack(i8* %arraydecay, i8 zeroext %conv15, i8 zeroext %conv16, i8 zeroext %12, i8 zeroext %13) #9, !dbg !19444
  %14 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !19445
  %arraydecay17 = getelementptr inbounds [32 x i8], [32 x i8]* %htgt_pl, i64 0, i64 0, !dbg !19446
  %call18 = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %14, %struct.mlxsw_reg_info* @mlxsw_reg_htgt, i8* %arraydecay17) #9, !dbg !19447
  store i32 %call18, i32* %err, align 4, !dbg !19448
  %15 = load i32, i32* %err, align 4, !dbg !19449
  %tobool = icmp ne i32 %15, 0, !dbg !19449
  br i1 %tobool, label %if.then19, label %if.end20, !dbg !19451

if.then19:                                        ; preds = %if.end14
  %16 = load i32, i32* %err, align 4, !dbg !19452
  store i32 %16, i32* %retval, align 4, !dbg !19453
  br label %return, !dbg !19453

if.end20:                                         ; preds = %if.end14
  br label %for.inc, !dbg !19454

for.inc:                                          ; preds = %if.end20, %sw.default
  %17 = load i32, i32* %i, align 4, !dbg !19455
  %inc = add i32 %17, 1, !dbg !19455
  store i32 %inc, i32* %i, align 4, !dbg !19455
  br label %for.cond, !dbg !19456, !llvm.loop !19457

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !19459
  br label %return, !dbg !19459

return:                                           ; preds = %for.end, %if.then19, %if.then13, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !19460
  ret i32 %18, !dbg !19460
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_traps_register(%struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_listener* %listeners, i64 %listeners_count) #0 !dbg !19461 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %listeners.addr = alloca %struct.mlxsw_listener*, align 8
  %listeners_count.addr = alloca i64, align 8
  %i = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !19464, metadata !DIExpression()), !dbg !19465
  store %struct.mlxsw_listener* %listeners, %struct.mlxsw_listener** %listeners.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_listener** %listeners.addr, metadata !19466, metadata !DIExpression()), !dbg !19467
  store i64 %listeners_count, i64* %listeners_count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %listeners_count.addr, metadata !19468, metadata !DIExpression()), !dbg !19469
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19470, metadata !DIExpression()), !dbg !19471
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19472, metadata !DIExpression()), !dbg !19473
  store i32 0, i32* %i, align 4, !dbg !19474
  br label %for.cond, !dbg !19476

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !19477
  %conv = sext i32 %0 to i64, !dbg !19477
  %1 = load i64, i64* %listeners_count.addr, align 8, !dbg !19479
  %cmp = icmp ult i64 %conv, %1, !dbg !19480
  br i1 %cmp, label %for.body, label %for.end, !dbg !19481

for.body:                                         ; preds = %for.cond
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19482
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %2, i32 0, i32 1, !dbg !19484
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !19484
  %4 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listeners.addr, align 8, !dbg !19485
  %5 = load i32, i32* %i, align 4, !dbg !19486
  %idxprom = sext i32 %5 to i64, !dbg !19485
  %arrayidx = getelementptr %struct.mlxsw_listener, %struct.mlxsw_listener* %4, i64 %idxprom, !dbg !19485
  %6 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19487
  %7 = bitcast %struct.mlxsw_sp* %6 to i8*, !dbg !19487
  %call = call i32 @mlxsw_core_trap_register(%struct.mlxsw_core* %3, %struct.mlxsw_listener* %arrayidx, i8* %7) #9, !dbg !19488
  store i32 %call, i32* %err, align 4, !dbg !19489
  %8 = load i32, i32* %err, align 4, !dbg !19490
  %tobool = icmp ne i32 %8, 0, !dbg !19490
  br i1 %tobool, label %if.then, label %if.end, !dbg !19492

if.then:                                          ; preds = %for.body
  br label %err_listener_register, !dbg !19493

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !19494

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4, !dbg !19495
  %inc = add i32 %9, 1, !dbg !19495
  store i32 %inc, i32* %i, align 4, !dbg !19495
  br label %for.cond, !dbg !19496, !llvm.loop !19497

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !19499
  br label %return, !dbg !19499

err_listener_register:                            ; preds = %if.then
  call void @llvm.dbg.label(metadata !19500), !dbg !19501
  %10 = load i32, i32* %i, align 4, !dbg !19502
  %dec = add i32 %10, -1, !dbg !19502
  store i32 %dec, i32* %i, align 4, !dbg !19502
  br label %for.cond2, !dbg !19504

for.cond2:                                        ; preds = %for.inc9, %err_listener_register
  %11 = load i32, i32* %i, align 4, !dbg !19505
  %cmp3 = icmp sge i32 %11, 0, !dbg !19507
  br i1 %cmp3, label %for.body5, label %for.end11, !dbg !19508

for.body5:                                        ; preds = %for.cond2
  %12 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19509
  %core6 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %12, i32 0, i32 1, !dbg !19511
  %13 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core6, align 8, !dbg !19511
  %14 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listeners.addr, align 8, !dbg !19512
  %15 = load i32, i32* %i, align 4, !dbg !19513
  %idxprom7 = sext i32 %15 to i64, !dbg !19512
  %arrayidx8 = getelementptr %struct.mlxsw_listener, %struct.mlxsw_listener* %14, i64 %idxprom7, !dbg !19512
  %16 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19514
  %17 = bitcast %struct.mlxsw_sp* %16 to i8*, !dbg !19514
  call void @mlxsw_core_trap_unregister(%struct.mlxsw_core* %13, %struct.mlxsw_listener* %arrayidx8, i8* %17) #9, !dbg !19515
  br label %for.inc9, !dbg !19516

for.inc9:                                         ; preds = %for.body5
  %18 = load i32, i32* %i, align 4, !dbg !19517
  %dec10 = add i32 %18, -1, !dbg !19517
  store i32 %dec10, i32* %i, align 4, !dbg !19517
  br label %for.cond2, !dbg !19518, !llvm.loop !19519

for.end11:                                        ; preds = %for.cond2
  %19 = load i32, i32* %err, align 4, !dbg !19521
  store i32 %19, i32* %retval, align 4, !dbg !19522
  br label %return, !dbg !19522

return:                                           ; preds = %for.end11, %for.end
  %20 = load i32, i32* %retval, align 4, !dbg !19523
  ret i32 %20, !dbg !19523
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_traps_unregister(%struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_listener* %listeners, i64 %listeners_count) #0 !dbg !19524 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %listeners.addr = alloca %struct.mlxsw_listener*, align 8
  %listeners_count.addr = alloca i64, align 8
  %i = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !19527, metadata !DIExpression()), !dbg !19528
  store %struct.mlxsw_listener* %listeners, %struct.mlxsw_listener** %listeners.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_listener** %listeners.addr, metadata !19529, metadata !DIExpression()), !dbg !19530
  store i64 %listeners_count, i64* %listeners_count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %listeners_count.addr, metadata !19531, metadata !DIExpression()), !dbg !19532
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19533, metadata !DIExpression()), !dbg !19534
  store i32 0, i32* %i, align 4, !dbg !19535
  br label %for.cond, !dbg !19537

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !19538
  %conv = sext i32 %0 to i64, !dbg !19538
  %1 = load i64, i64* %listeners_count.addr, align 8, !dbg !19540
  %cmp = icmp ult i64 %conv, %1, !dbg !19541
  br i1 %cmp, label %for.body, label %for.end, !dbg !19542

for.body:                                         ; preds = %for.cond
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19543
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %2, i32 0, i32 1, !dbg !19545
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !19545
  %4 = load %struct.mlxsw_listener*, %struct.mlxsw_listener** %listeners.addr, align 8, !dbg !19546
  %5 = load i32, i32* %i, align 4, !dbg !19547
  %idxprom = sext i32 %5 to i64, !dbg !19546
  %arrayidx = getelementptr %struct.mlxsw_listener, %struct.mlxsw_listener* %4, i64 %idxprom, !dbg !19546
  %6 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !19548
  %7 = bitcast %struct.mlxsw_sp* %6 to i8*, !dbg !19548
  call void @mlxsw_core_trap_unregister(%struct.mlxsw_core* %3, %struct.mlxsw_listener* %arrayidx, i8* %7) #9, !dbg !19549
  br label %for.inc, !dbg !19550

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !19551
  %inc = add i32 %8, 1, !dbg !19551
  store i32 %inc, i32* %i, align 4, !dbg !19551
  br label %for.cond, !dbg !19552, !llvm.loop !19553

for.end:                                          ; preds = %for.cond
  ret void, !dbg !19555
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #0 !dbg !19556 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !19559, metadata !DIExpression()), !dbg !19560
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !19561
  %tobool = trunc i8 %0 to i1, !dbg !19561
  %lnot = xor i1 %tobool, true, !dbg !19561
  %lnot1 = xor i1 %lnot, true, !dbg !19561
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !19561
  %conv = sext i32 %lnot.ext to i64, !dbg !19561
  %tobool2 = icmp ne i64 %conv, 0, !dbg !19561
  ret i1 %tobool2, !dbg !19562
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__set_bit(i64 %nr, i64* %addr) #0 !dbg !19563 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !19564, metadata !DIExpression()), !dbg !19566
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !19568, metadata !DIExpression()), !dbg !19569
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !19570, metadata !DIExpression()), !dbg !19572
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !19574, metadata !DIExpression()), !dbg !19575
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !19576, metadata !DIExpression()), !dbg !19577
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !19578, metadata !DIExpression()), !dbg !19579
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !19580
  %1 = load i64, i64* %nr.addr, align 8, !dbg !19581
  %div = sdiv i64 %1, 64, !dbg !19581
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !19582
  %2 = bitcast i64* %add.ptr to i8*, !dbg !19580
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !19583
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !19584
  %conv.i = trunc i64 %4 to i32, !dbg !19584
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !19585
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !19586
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !19586
  call void @kcsan_check_access(i8* %5, i64 %6, i32 1) #12, !dbg !19586
  %7 = load i64, i64* %nr.addr, align 8, !dbg !19587
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !19588
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !19589
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !19590
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10) #10, !dbg !19591, !srcloc !19592
  ret void, !dbg !19593
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_qpcr_pack(i8* %payload, i16 zeroext %pid, i32 %ir_units, i1 zeroext %bytes, i32 %cir, i16 zeroext %cbs) #0 !dbg !19594 {
entry:
  %payload.addr = alloca i8*, align 8
  %pid.addr = alloca i16, align 2
  %ir_units.addr = alloca i32, align 4
  %bytes.addr = alloca i8, align 1
  %cir.addr = alloca i32, align 4
  %cbs.addr = alloca i16, align 2
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !19597, metadata !DIExpression()), !dbg !19598
  store i16 %pid, i16* %pid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %pid.addr, metadata !19599, metadata !DIExpression()), !dbg !19600
  store i32 %ir_units, i32* %ir_units.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ir_units.addr, metadata !19601, metadata !DIExpression()), !dbg !19602
  %frombool = zext i1 %bytes to i8
  store i8 %frombool, i8* %bytes.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %bytes.addr, metadata !19603, metadata !DIExpression()), !dbg !19604
  store i32 %cir, i32* %cir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cir.addr, metadata !19605, metadata !DIExpression()), !dbg !19606
  store i16 %cbs, i16* %cbs.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %cbs.addr, metadata !19607, metadata !DIExpression()), !dbg !19608
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !19609
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_qpcr, i32 0, i32 1), align 2, !dbg !19609
  %conv = zext i16 %1 to i64, !dbg !19609
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !19609
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !19610
  %3 = load i16, i16* %pid.addr, align 2, !dbg !19611
  %conv1 = zext i16 %3 to i32, !dbg !19611
  call void @mlxsw_reg_qpcr_pid_set(i8* %2, i32 %conv1) #9, !dbg !19612
  %4 = load i8*, i8** %payload.addr, align 8, !dbg !19613
  call void @mlxsw_reg_qpcr_g_set(i8* %4, i32 2) #9, !dbg !19614
  %5 = load i8*, i8** %payload.addr, align 8, !dbg !19615
  call void @mlxsw_reg_qpcr_rate_type_set(i8* %5, i32 1) #9, !dbg !19616
  %6 = load i8*, i8** %payload.addr, align 8, !dbg !19617
  call void @mlxsw_reg_qpcr_violate_action_set(i8* %6, i32 1) #9, !dbg !19618
  %7 = load i8*, i8** %payload.addr, align 8, !dbg !19619
  %8 = load i32, i32* %cir.addr, align 4, !dbg !19620
  call void @mlxsw_reg_qpcr_cir_set(i8* %7, i32 %8) #9, !dbg !19621
  %9 = load i8*, i8** %payload.addr, align 8, !dbg !19622
  %10 = load i32, i32* %ir_units.addr, align 4, !dbg !19623
  call void @mlxsw_reg_qpcr_ir_units_set(i8* %9, i32 %10) #9, !dbg !19624
  %11 = load i8*, i8** %payload.addr, align 8, !dbg !19625
  %12 = load i8, i8* %bytes.addr, align 1, !dbg !19626
  %tobool = trunc i8 %12 to i1, !dbg !19626
  %conv2 = zext i1 %tobool to i32, !dbg !19626
  call void @mlxsw_reg_qpcr_bytes_set(i8* %11, i32 %conv2) #9, !dbg !19627
  %13 = load i8*, i8** %payload.addr, align 8, !dbg !19628
  %14 = load i16, i16* %cbs.addr, align 2, !dbg !19629
  %conv3 = zext i16 %14 to i32, !dbg !19629
  call void @mlxsw_reg_qpcr_cbs_set(i8* %13, i32 %conv3) #9, !dbg !19630
  ret void, !dbg !19631
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_qpcr_pid_set(i8* %buf, i32 %val) #0 !dbg !19632 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !19633, metadata !DIExpression()), !dbg !19634
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !19635, metadata !DIExpression()), !dbg !19634
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !19634
  %1 = load i32, i32* %val.addr, align 4, !dbg !19634
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_qpcr_pid_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !19634
  ret void, !dbg !19634
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_qpcr_g_set(i8* %buf, i32 %val) #0 !dbg !19636 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !19637, metadata !DIExpression()), !dbg !19638
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !19639, metadata !DIExpression()), !dbg !19638
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !19638
  %1 = load i32, i32* %val.addr, align 4, !dbg !19638
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_qpcr_g_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !19638
  ret void, !dbg !19638
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_qpcr_rate_type_set(i8* %buf, i32 %val) #0 !dbg !19640 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !19641, metadata !DIExpression()), !dbg !19642
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !19643, metadata !DIExpression()), !dbg !19642
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !19642
  %1 = load i32, i32* %val.addr, align 4, !dbg !19642
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_qpcr_rate_type_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !19642
  ret void, !dbg !19642
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_qpcr_violate_action_set(i8* %buf, i32 %val) #0 !dbg !19644 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !19645, metadata !DIExpression()), !dbg !19646
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !19647, metadata !DIExpression()), !dbg !19646
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !19646
  %1 = load i32, i32* %val.addr, align 4, !dbg !19646
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_qpcr_violate_action_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !19646
  ret void, !dbg !19646
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_qpcr_cir_set(i8* %buf, i32 %val) #0 !dbg !19648 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !19649, metadata !DIExpression()), !dbg !19650
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !19651, metadata !DIExpression()), !dbg !19650
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !19650
  %1 = load i32, i32* %val.addr, align 4, !dbg !19650
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_qpcr_cir_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !19650
  ret void, !dbg !19650
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_qpcr_ir_units_set(i8* %buf, i32 %val) #0 !dbg !19652 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !19653, metadata !DIExpression()), !dbg !19654
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !19655, metadata !DIExpression()), !dbg !19654
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !19654
  %1 = load i32, i32* %val.addr, align 4, !dbg !19654
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_qpcr_ir_units_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !19654
  ret void, !dbg !19654
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_qpcr_bytes_set(i8* %buf, i32 %val) #0 !dbg !19656 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !19657, metadata !DIExpression()), !dbg !19658
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !19659, metadata !DIExpression()), !dbg !19658
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !19658
  %1 = load i32, i32* %val.addr, align 4, !dbg !19658
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_qpcr_bytes_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !19658
  ret void, !dbg !19658
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_qpcr_cbs_set(i8* %buf, i32 %val) #0 !dbg !19660 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !19661, metadata !DIExpression()), !dbg !19662
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !19663, metadata !DIExpression()), !dbg !19662
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !19662
  %1 = load i32, i32* %val.addr, align 4, !dbg !19662
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_qpcr_cbs_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !19662
  ret void, !dbg !19662
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_htgt_pack(i8* %payload, i8 zeroext %group, i8 zeroext %policer_id, i8 zeroext %priority, i8 zeroext %tc) #0 !dbg !19664 {
entry:
  %payload.addr = alloca i8*, align 8
  %group.addr = alloca i8, align 1
  %policer_id.addr = alloca i8, align 1
  %priority.addr = alloca i8, align 1
  %tc.addr = alloca i8, align 1
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !19667, metadata !DIExpression()), !dbg !19668
  store i8 %group, i8* %group.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %group.addr, metadata !19669, metadata !DIExpression()), !dbg !19670
  store i8 %policer_id, i8* %policer_id.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %policer_id.addr, metadata !19671, metadata !DIExpression()), !dbg !19672
  store i8 %priority, i8* %priority.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %priority.addr, metadata !19673, metadata !DIExpression()), !dbg !19674
  store i8 %tc, i8* %tc.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %tc.addr, metadata !19675, metadata !DIExpression()), !dbg !19676
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !19677
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_htgt, i32 0, i32 1), align 2, !dbg !19677
  %conv = zext i16 %1 to i64, !dbg !19677
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !19677
  %2 = load i8, i8* %policer_id.addr, align 1, !dbg !19678
  %conv1 = zext i8 %2 to i32, !dbg !19678
  %cmp = icmp eq i32 %conv1, 255, !dbg !19680
  br i1 %cmp, label %if.then, label %if.else, !dbg !19681

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %payload.addr, align 8, !dbg !19682
  call void @mlxsw_reg_htgt_pide_set(i8* %3, i32 0) #9, !dbg !19684
  br label %if.end, !dbg !19685

if.else:                                          ; preds = %entry
  %4 = load i8*, i8** %payload.addr, align 8, !dbg !19686
  call void @mlxsw_reg_htgt_pide_set(i8* %4, i32 1) #9, !dbg !19688
  %5 = load i8*, i8** %payload.addr, align 8, !dbg !19689
  %6 = load i8, i8* %policer_id.addr, align 1, !dbg !19690
  %conv3 = zext i8 %6 to i32, !dbg !19690
  call void @mlxsw_reg_htgt_pid_set(i8* %5, i32 %conv3) #9, !dbg !19691
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = load i8*, i8** %payload.addr, align 8, !dbg !19692
  call void @mlxsw_reg_htgt_type_set(i8* %7, i32 0) #9, !dbg !19693
  %8 = load i8*, i8** %payload.addr, align 8, !dbg !19694
  %9 = load i8, i8* %group.addr, align 1, !dbg !19695
  %conv4 = zext i8 %9 to i32, !dbg !19695
  call void @mlxsw_reg_htgt_trap_group_set(i8* %8, i32 %conv4) #9, !dbg !19696
  %10 = load i8*, i8** %payload.addr, align 8, !dbg !19697
  call void @mlxsw_reg_htgt_mirror_action_set(i8* %10, i32 0) #9, !dbg !19698
  %11 = load i8*, i8** %payload.addr, align 8, !dbg !19699
  call void @mlxsw_reg_htgt_mirroring_agent_set(i8* %11, i32 0) #9, !dbg !19700
  %12 = load i8*, i8** %payload.addr, align 8, !dbg !19701
  %13 = load i8, i8* %priority.addr, align 1, !dbg !19702
  %conv5 = zext i8 %13 to i32, !dbg !19702
  call void @mlxsw_reg_htgt_priority_set(i8* %12, i32 %conv5) #9, !dbg !19703
  %14 = load i8*, i8** %payload.addr, align 8, !dbg !19704
  %15 = load i8, i8* %tc.addr, align 1, !dbg !19705
  %conv6 = zext i8 %15 to i32, !dbg !19705
  call void @mlxsw_reg_htgt_local_path_cpu_tclass_set(i8* %14, i32 %conv6) #9, !dbg !19706
  %16 = load i8*, i8** %payload.addr, align 8, !dbg !19707
  %17 = load i8, i8* %group.addr, align 1, !dbg !19708
  %conv7 = zext i8 %17 to i32, !dbg !19708
  call void @mlxsw_reg_htgt_local_path_rdq_set(i8* %16, i32 %conv7) #9, !dbg !19709
  ret void, !dbg !19710
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_htgt_pide_set(i8* %buf, i32 %val) #0 !dbg !19711 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !19712, metadata !DIExpression()), !dbg !19713
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !19714, metadata !DIExpression()), !dbg !19713
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !19713
  %1 = load i32, i32* %val.addr, align 4, !dbg !19713
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_htgt_pide_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !19713
  ret void, !dbg !19713
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_htgt_pid_set(i8* %buf, i32 %val) #0 !dbg !19715 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !19716, metadata !DIExpression()), !dbg !19717
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !19718, metadata !DIExpression()), !dbg !19717
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !19717
  %1 = load i32, i32* %val.addr, align 4, !dbg !19717
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_htgt_pid_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !19717
  ret void, !dbg !19717
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_htgt_type_set(i8* %buf, i32 %val) #0 !dbg !19719 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !19720, metadata !DIExpression()), !dbg !19721
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !19722, metadata !DIExpression()), !dbg !19721
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !19721
  %1 = load i32, i32* %val.addr, align 4, !dbg !19721
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_htgt_type_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !19721
  ret void, !dbg !19721
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_htgt_trap_group_set(i8* %buf, i32 %val) #0 !dbg !19723 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !19724, metadata !DIExpression()), !dbg !19725
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !19726, metadata !DIExpression()), !dbg !19725
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !19725
  %1 = load i32, i32* %val.addr, align 4, !dbg !19725
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_htgt_trap_group_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !19725
  ret void, !dbg !19725
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_htgt_mirror_action_set(i8* %buf, i32 %val) #0 !dbg !19727 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !19728, metadata !DIExpression()), !dbg !19729
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !19730, metadata !DIExpression()), !dbg !19729
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !19729
  %1 = load i32, i32* %val.addr, align 4, !dbg !19729
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_htgt_mirror_action_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !19729
  ret void, !dbg !19729
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_htgt_mirroring_agent_set(i8* %buf, i32 %val) #0 !dbg !19731 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !19732, metadata !DIExpression()), !dbg !19733
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !19734, metadata !DIExpression()), !dbg !19733
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !19733
  %1 = load i32, i32* %val.addr, align 4, !dbg !19733
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_htgt_mirroring_agent_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !19733
  ret void, !dbg !19733
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_htgt_priority_set(i8* %buf, i32 %val) #0 !dbg !19735 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !19736, metadata !DIExpression()), !dbg !19737
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !19738, metadata !DIExpression()), !dbg !19737
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !19737
  %1 = load i32, i32* %val.addr, align 4, !dbg !19737
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_htgt_priority_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !19737
  ret void, !dbg !19737
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_htgt_local_path_cpu_tclass_set(i8* %buf, i32 %val) #0 !dbg !19739 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !19740, metadata !DIExpression()), !dbg !19741
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !19742, metadata !DIExpression()), !dbg !19741
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !19741
  %1 = load i32, i32* %val.addr, align 4, !dbg !19741
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_htgt_local_path_cpu_tclass_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !19741
  ret void, !dbg !19741
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_htgt_local_path_rdq_set(i8* %buf, i32 %val) #0 !dbg !19743 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !19744, metadata !DIExpression()), !dbg !19745
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !19746, metadata !DIExpression()), !dbg !19745
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !19745
  %1 = load i32, i32* %val.addr, align 4, !dbg !19745
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_htgt_local_path_rdq_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !19745
  ret void, !dbg !19745
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_core_trap_register(%struct.mlxsw_core*, %struct.mlxsw_listener*, i8*) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_core_trap_unregister(%struct.mlxsw_core*, %struct.mlxsw_listener*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_pude_event_func(%struct.mlxsw_reg_info* %reg, i8* %pude_pl, i8* %priv) #0 !dbg !19747 {
entry:
  %reg.addr = alloca %struct.mlxsw_reg_info*, align 8
  %pude_pl.addr = alloca i8*, align 8
  %priv.addr = alloca i8*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %status = alloca i32, align 4
  %local_port = alloca i8, align 1
  store %struct.mlxsw_reg_info* %reg, %struct.mlxsw_reg_info** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_reg_info** %reg.addr, metadata !19748, metadata !DIExpression()), !dbg !19749
  store i8* %pude_pl, i8** %pude_pl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pude_pl.addr, metadata !19750, metadata !DIExpression()), !dbg !19751
  store i8* %priv, i8** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %priv.addr, metadata !19752, metadata !DIExpression()), !dbg !19753
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !19754, metadata !DIExpression()), !dbg !19755
  %0 = load i8*, i8** %priv.addr, align 8, !dbg !19756
  %1 = bitcast i8* %0 to %struct.mlxsw_sp*, !dbg !19756
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !19755
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !19757, metadata !DIExpression()), !dbg !19758
  call void @llvm.dbg.declare(metadata i32* %status, metadata !19759, metadata !DIExpression()), !dbg !19760
  call void @llvm.dbg.declare(metadata i8* %local_port, metadata !19761, metadata !DIExpression()), !dbg !19762
  %2 = load i8*, i8** %pude_pl.addr, align 8, !dbg !19763
  %call = call i32 @mlxsw_reg_pude_local_port_get(i8* %2) #9, !dbg !19764
  %conv = trunc i32 %call to i8, !dbg !19764
  store i8 %conv, i8* %local_port, align 1, !dbg !19765
  %3 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !19766
  %ports = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %3, i32 0, i32 0, !dbg !19767
  %4 = load %struct.mlxsw_sp_port**, %struct.mlxsw_sp_port*** %ports, align 8, !dbg !19767
  %5 = load i8, i8* %local_port, align 1, !dbg !19768
  %idxprom = zext i8 %5 to i64, !dbg !19766
  %arrayidx = getelementptr %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %4, i64 %idxprom, !dbg !19766
  %6 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %arrayidx, align 8, !dbg !19766
  store %struct.mlxsw_sp_port* %6, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !19769
  %7 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !19770
  %tobool = icmp ne %struct.mlxsw_sp_port* %7, null, !dbg !19770
  br i1 %tobool, label %if.end, label %if.then, !dbg !19772

if.then:                                          ; preds = %entry
  br label %if.end8, !dbg !19773

if.end:                                           ; preds = %entry
  %8 = load i8*, i8** %pude_pl.addr, align 8, !dbg !19774
  %call1 = call i32 @mlxsw_reg_pude_oper_status_get(i8* %8) #9, !dbg !19775
  store i32 %call1, i32* %status, align 4, !dbg !19776
  %9 = load i32, i32* %status, align 4, !dbg !19777
  %cmp = icmp eq i32 %9, 1, !dbg !19779
  br i1 %cmp, label %if.then3, label %if.else, !dbg !19780

if.then3:                                         ; preds = %if.end
  %10 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !19781
  %dev = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %10, i32 0, i32 0, !dbg !19783
  %11 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !19783
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.224, i64 0, i64 0)) #13, !dbg !19784
  %12 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !19785
  %dev4 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %12, i32 0, i32 0, !dbg !19786
  %13 = load %struct.net_device*, %struct.net_device** %dev4, align 8, !dbg !19786
  call void @netif_carrier_on(%struct.net_device* %13) #9, !dbg !19787
  %14 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !19788
  %ptp = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %14, i32 0, i32 18, !dbg !19789
  %shaper_dw = getelementptr inbounds %struct.anon.160, %struct.anon.160* %ptp, i32 0, i32 0, !dbg !19790
  %call5 = call i32 @mlxsw_core_schedule_dw(%struct.delayed_work* %shaper_dw, i64 0) #9, !dbg !19791
  br label %if.end8, !dbg !19792

if.else:                                          ; preds = %if.end
  %15 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !19793
  %dev6 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %15, i32 0, i32 0, !dbg !19795
  %16 = load %struct.net_device*, %struct.net_device** %dev6, align 8, !dbg !19795
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %16, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.225, i64 0, i64 0)) #13, !dbg !19796
  %17 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !19797
  %dev7 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %17, i32 0, i32 0, !dbg !19798
  %18 = load %struct.net_device*, %struct.net_device** %dev7, align 8, !dbg !19798
  call void @netif_carrier_off(%struct.net_device* %18) #9, !dbg !19799
  %19 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !19800
  call void @mlxsw_sp_port_down_wipe_counters(%struct.mlxsw_sp_port* %19) #9, !dbg !19801
  br label %if.end8

if.end8:                                          ; preds = %if.then, %if.else, %if.then3
  ret void, !dbg !19802
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_rx_listener_mark_func(%struct.sk_buff* %skb, i8 zeroext %local_port, i8* %priv) #0 !dbg !19803 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %local_port.addr = alloca i8, align 1
  %priv.addr = alloca i8*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !19804, metadata !DIExpression()), !dbg !19805
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !19806, metadata !DIExpression()), !dbg !19807
  store i8* %priv, i8** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %priv.addr, metadata !19808, metadata !DIExpression()), !dbg !19809
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19810
  %offload_fwd_mark = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 16, !dbg !19811
  %bf.load = load i16, i16* %offload_fwd_mark, align 2, !dbg !19812
  %bf.clear = and i16 %bf.load, -2049, !dbg !19812
  %bf.set = or i16 %bf.clear, 2048, !dbg !19812
  store i16 %bf.set, i16* %offload_fwd_mark, align 2, !dbg !19812
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19813
  %2 = load i8, i8* %local_port.addr, align 1, !dbg !19814
  %3 = load i8*, i8** %priv.addr, align 8, !dbg !19815
  call void @mlxsw_sp_rx_listener_no_mark_func(%struct.sk_buff* %1, i8 zeroext %2, i8* %3) #9, !dbg !19816
  ret void, !dbg !19817
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_rx_listener_l3_mark_func(%struct.sk_buff* %skb, i8 zeroext %local_port, i8* %priv) #0 !dbg !19818 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %local_port.addr = alloca i8, align 1
  %priv.addr = alloca i8*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !19819, metadata !DIExpression()), !dbg !19820
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !19821, metadata !DIExpression()), !dbg !19822
  store i8* %priv, i8** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %priv.addr, metadata !19823, metadata !DIExpression()), !dbg !19824
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19825
  %offload_l3_fwd_mark = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 16, !dbg !19826
  %bf.load = load i16, i16* %offload_l3_fwd_mark, align 2, !dbg !19827
  %bf.clear = and i16 %bf.load, -4097, !dbg !19827
  %bf.set = or i16 %bf.clear, 4096, !dbg !19827
  store i16 %bf.set, i16* %offload_l3_fwd_mark, align 2, !dbg !19827
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19828
  %offload_fwd_mark = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 16, !dbg !19829
  %bf.load1 = load i16, i16* %offload_fwd_mark, align 2, !dbg !19830
  %bf.clear2 = and i16 %bf.load1, -2049, !dbg !19830
  %bf.set3 = or i16 %bf.clear2, 2048, !dbg !19830
  store i16 %bf.set3, i16* %offload_fwd_mark, align 2, !dbg !19830
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !19831
  %3 = load i8, i8* %local_port.addr, align 1, !dbg !19832
  %4 = load i8*, i8** %priv.addr, align 8, !dbg !19833
  call void @mlxsw_sp_rx_listener_no_mark_func(%struct.sk_buff* %2, i8 zeroext %3, i8* %4) #9, !dbg !19834
  ret void, !dbg !19835
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_pude_local_port_get(i8* %buf) #0 !dbg !19836 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !19839, metadata !DIExpression()), !dbg !19840
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !19840
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_pude_local_port_item to %struct.mlxsw_item*), i16 zeroext 0) #9, !dbg !19840
  ret i32 %call, !dbg !19840
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_pude_oper_status_get(i8* %buf) #0 !dbg !19841 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !19842, metadata !DIExpression()), !dbg !19843
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !19843
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_pude_oper_status_item to %struct.mlxsw_item*), i16 zeroext 0) #9, !dbg !19843
  ret i32 %call, !dbg !19843
}

; Function Attrs: cold noredzone
declare dso_local void @netdev_info(%struct.net_device*, i8*, ...) #3

; Function Attrs: noredzone
declare dso_local void @netif_carrier_on(%struct.net_device*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_core_schedule_dw(%struct.delayed_work*, i64) #2

; Function Attrs: noredzone
declare dso_local void @netif_carrier_off(%struct.net_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_port_down_wipe_counters(%struct.mlxsw_sp_port* %mlxsw_sp_port) #0 !dbg !19844 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %i = alloca i32, align 4
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !19845, metadata !DIExpression()), !dbg !19846
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19847, metadata !DIExpression()), !dbg !19848
  store i32 0, i32* %i, align 4, !dbg !19849
  br label %for.cond, !dbg !19851

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !19852
  %cmp = icmp slt i32 %0, 16, !dbg !19854
  br i1 %cmp, label %for.body, label %for.end, !dbg !19855

for.body:                                         ; preds = %for.cond
  %1 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !19856
  %periodic_hw_stats = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %1, i32 0, i32 10, !dbg !19857
  %xstats = getelementptr inbounds %struct.anon.158, %struct.anon.158* %periodic_hw_stats, i32 0, i32 1, !dbg !19858
  %backlog = getelementptr inbounds %struct.mlxsw_sp_port_xstats, %struct.mlxsw_sp_port_xstats* %xstats, i32 0, i32 3, !dbg !19859
  %2 = load i32, i32* %i, align 4, !dbg !19860
  %idxprom = sext i32 %2 to i64, !dbg !19856
  %arrayidx = getelementptr [16 x i64], [16 x i64]* %backlog, i64 0, i64 %idxprom, !dbg !19856
  store i64 0, i64* %arrayidx, align 8, !dbg !19861
  br label %for.inc, !dbg !19856

for.inc:                                          ; preds = %for.body
  %3 = load i32, i32* %i, align 4, !dbg !19862
  %inc = add i32 %3, 1, !dbg !19862
  store i32 %inc, i32* %i, align 4, !dbg !19862
  br label %for.cond, !dbg !19863, !llvm.loop !19864

for.end:                                          ; preds = %for.cond
  ret void, !dbg !19866
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__mlxsw_item_get32(i8* %buf, %struct.mlxsw_item* %item, i16 zeroext %index) #0 !dbg !19867 {
entry:
  %buf.addr = alloca i8*, align 8
  %item.addr = alloca %struct.mlxsw_item*, align 8
  %index.addr = alloca i16, align 2
  %offset = alloca i32, align 4
  %b = alloca i32*, align 8
  %tmp = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !19870, metadata !DIExpression()), !dbg !19871
  store %struct.mlxsw_item* %item, %struct.mlxsw_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_item** %item.addr, metadata !19872, metadata !DIExpression()), !dbg !19873
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !19874, metadata !DIExpression()), !dbg !19875
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !19876, metadata !DIExpression()), !dbg !19877
  %0 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !19878
  %1 = load i16, i16* %index.addr, align 2, !dbg !19879
  %call = call i32 @__mlxsw_item_offset(%struct.mlxsw_item* %0, i16 zeroext %1, i64 4) #9, !dbg !19880
  store i32 %call, i32* %offset, align 4, !dbg !19877
  call void @llvm.dbg.declare(metadata i32** %b, metadata !19881, metadata !DIExpression()), !dbg !19882
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !19883
  %3 = bitcast i8* %2 to i32*, !dbg !19884
  store i32* %3, i32** %b, align 8, !dbg !19882
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !19885, metadata !DIExpression()), !dbg !19886
  %4 = load i32*, i32** %b, align 8, !dbg !19887
  %5 = load i32, i32* %offset, align 4, !dbg !19887
  %idxprom = zext i32 %5 to i64, !dbg !19887
  %arrayidx = getelementptr i32, i32* %4, i64 %idxprom, !dbg !19887
  %6 = load i32, i32* %arrayidx, align 4, !dbg !19887
  %7 = call i1 @llvm.is.constant.i32(i32 %6), !dbg !19887
  br i1 %7, label %cond.true, label %cond.false, !dbg !19887

cond.true:                                        ; preds = %entry
  %8 = load i32*, i32** %b, align 8, !dbg !19887
  %9 = load i32, i32* %offset, align 4, !dbg !19887
  %idxprom1 = zext i32 %9 to i64, !dbg !19887
  %arrayidx2 = getelementptr i32, i32* %8, i64 %idxprom1, !dbg !19887
  %10 = load i32, i32* %arrayidx2, align 4, !dbg !19887
  %and = and i32 %10, 255, !dbg !19887
  %shl = shl i32 %and, 24, !dbg !19887
  %11 = load i32*, i32** %b, align 8, !dbg !19887
  %12 = load i32, i32* %offset, align 4, !dbg !19887
  %idxprom3 = zext i32 %12 to i64, !dbg !19887
  %arrayidx4 = getelementptr i32, i32* %11, i64 %idxprom3, !dbg !19887
  %13 = load i32, i32* %arrayidx4, align 4, !dbg !19887
  %and5 = and i32 %13, 65280, !dbg !19887
  %shl6 = shl i32 %and5, 8, !dbg !19887
  %or = or i32 %shl, %shl6, !dbg !19887
  %14 = load i32*, i32** %b, align 8, !dbg !19887
  %15 = load i32, i32* %offset, align 4, !dbg !19887
  %idxprom7 = zext i32 %15 to i64, !dbg !19887
  %arrayidx8 = getelementptr i32, i32* %14, i64 %idxprom7, !dbg !19887
  %16 = load i32, i32* %arrayidx8, align 4, !dbg !19887
  %and9 = and i32 %16, 16711680, !dbg !19887
  %shr = lshr i32 %and9, 8, !dbg !19887
  %or10 = or i32 %or, %shr, !dbg !19887
  %17 = load i32*, i32** %b, align 8, !dbg !19887
  %18 = load i32, i32* %offset, align 4, !dbg !19887
  %idxprom11 = zext i32 %18 to i64, !dbg !19887
  %arrayidx12 = getelementptr i32, i32* %17, i64 %idxprom11, !dbg !19887
  %19 = load i32, i32* %arrayidx12, align 4, !dbg !19887
  %and13 = and i32 %19, -16777216, !dbg !19887
  %shr14 = lshr i32 %and13, 24, !dbg !19887
  %or15 = or i32 %or10, %shr14, !dbg !19887
  br label %cond.end, !dbg !19887

cond.false:                                       ; preds = %entry
  %20 = load i32*, i32** %b, align 8, !dbg !19887
  %21 = load i32, i32* %offset, align 4, !dbg !19887
  %idxprom16 = zext i32 %21 to i64, !dbg !19887
  %arrayidx17 = getelementptr i32, i32* %20, i64 %idxprom16, !dbg !19887
  %22 = load i32, i32* %arrayidx17, align 4, !dbg !19887
  %call18 = call i32 @__fswab32(i32 %22) #11, !dbg !19887
  br label %cond.end, !dbg !19887

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or15, %cond.true ], [ %call18, %cond.false ], !dbg !19887
  store i32 %cond, i32* %tmp, align 4, !dbg !19888
  %23 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !19889
  %shift = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %23, i32 0, i32 3, !dbg !19890
  %24 = load i8, i8* %shift, align 2, !dbg !19890
  %conv = zext i8 %24 to i32, !dbg !19889
  %25 = load i32, i32* %tmp, align 4, !dbg !19891
  %shr19 = lshr i32 %25, %conv, !dbg !19891
  store i32 %shr19, i32* %tmp, align 4, !dbg !19891
  %26 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !19892
  %size = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %26, i32 0, i32 6, !dbg !19892
  %bits = bitcast %union.anon.166* %size to i8*, !dbg !19892
  %27 = load i8, i8* %bits, align 2, !dbg !19892
  %conv20 = zext i8 %27 to i32, !dbg !19892
  %sub = sub i32 %conv20, 1, !dbg !19892
  %sub21 = sub i32 63, %sub, !dbg !19892
  %sh_prom = zext i32 %sub21 to i64, !dbg !19892
  %shr22 = lshr i64 -1, %sh_prom, !dbg !19892
  %and23 = and i64 -1, %shr22, !dbg !19892
  %add = add i64 0, %and23, !dbg !19892
  %28 = load i32, i32* %tmp, align 4, !dbg !19893
  %conv24 = zext i32 %28 to i64, !dbg !19893
  %and25 = and i64 %conv24, %add, !dbg !19893
  %conv26 = trunc i64 %and25 to i32, !dbg !19893
  store i32 %conv26, i32* %tmp, align 4, !dbg !19893
  %29 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !19894
  %no_real_shift = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %29, i32 0, i32 5, !dbg !19896
  %30 = load i8, i8* %no_real_shift, align 8, !dbg !19896
  %tobool = trunc i8 %30 to i1, !dbg !19896
  br i1 %tobool, label %if.then, label %if.end, !dbg !19897

if.then:                                          ; preds = %cond.end
  %31 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !19898
  %shift27 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %31, i32 0, i32 3, !dbg !19899
  %32 = load i8, i8* %shift27, align 2, !dbg !19899
  %conv28 = zext i8 %32 to i32, !dbg !19898
  %33 = load i32, i32* %tmp, align 4, !dbg !19900
  %shl29 = shl i32 %33, %conv28, !dbg !19900
  store i32 %shl29, i32* %tmp, align 4, !dbg !19900
  br label %if.end, !dbg !19901

if.end:                                           ; preds = %if.then, %cond.end
  %34 = load i32, i32* %tmp, align 4, !dbg !19902
  ret i32 %34, !dbg !19903
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @jhash(i8* %key, i32 %length, i32 %initval) #0 !dbg !19904 {
entry:
  %key.addr = alloca i8*, align 8
  %length.addr = alloca i32, align 4
  %initval.addr = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %k = alloca i8*, align 8
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !19906, metadata !DIExpression()), !dbg !19907
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !19908, metadata !DIExpression()), !dbg !19909
  store i32 %initval, i32* %initval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %initval.addr, metadata !19910, metadata !DIExpression()), !dbg !19911
  call void @llvm.dbg.declare(metadata i32* %a, metadata !19912, metadata !DIExpression()), !dbg !19913
  call void @llvm.dbg.declare(metadata i32* %b, metadata !19914, metadata !DIExpression()), !dbg !19915
  call void @llvm.dbg.declare(metadata i32* %c, metadata !19916, metadata !DIExpression()), !dbg !19917
  call void @llvm.dbg.declare(metadata i8** %k, metadata !19918, metadata !DIExpression()), !dbg !19919
  %0 = load i8*, i8** %key.addr, align 8, !dbg !19920
  store i8* %0, i8** %k, align 8, !dbg !19919
  %1 = load i32, i32* %length.addr, align 4, !dbg !19921
  %add = add i32 -559038737, %1, !dbg !19922
  %2 = load i32, i32* %initval.addr, align 4, !dbg !19923
  %add1 = add i32 %add, %2, !dbg !19924
  store i32 %add1, i32* %c, align 4, !dbg !19925
  store i32 %add1, i32* %b, align 4, !dbg !19926
  store i32 %add1, i32* %a, align 4, !dbg !19927
  br label %while.cond, !dbg !19928

while.cond:                                       ; preds = %while.body, %entry
  %3 = load i32, i32* %length.addr, align 4, !dbg !19929
  %cmp = icmp ugt i32 %3, 12, !dbg !19930
  br i1 %cmp, label %while.body, label %while.end, !dbg !19928

while.body:                                       ; preds = %while.cond
  %4 = load i8*, i8** %k, align 8, !dbg !19931
  %call = call i32 @__get_unaligned_cpu32(i8* %4) #9, !dbg !19933
  %5 = load i32, i32* %a, align 4, !dbg !19934
  %add2 = add i32 %5, %call, !dbg !19934
  store i32 %add2, i32* %a, align 4, !dbg !19934
  %6 = load i8*, i8** %k, align 8, !dbg !19935
  %add.ptr = getelementptr i8, i8* %6, i64 4, !dbg !19936
  %call3 = call i32 @__get_unaligned_cpu32(i8* %add.ptr) #9, !dbg !19937
  %7 = load i32, i32* %b, align 4, !dbg !19938
  %add4 = add i32 %7, %call3, !dbg !19938
  store i32 %add4, i32* %b, align 4, !dbg !19938
  %8 = load i8*, i8** %k, align 8, !dbg !19939
  %add.ptr5 = getelementptr i8, i8* %8, i64 8, !dbg !19940
  %call6 = call i32 @__get_unaligned_cpu32(i8* %add.ptr5) #9, !dbg !19941
  %9 = load i32, i32* %c, align 4, !dbg !19942
  %add7 = add i32 %9, %call6, !dbg !19942
  store i32 %add7, i32* %c, align 4, !dbg !19942
  %10 = load i32, i32* %c, align 4, !dbg !19943
  %11 = load i32, i32* %a, align 4, !dbg !19943
  %sub = sub i32 %11, %10, !dbg !19943
  store i32 %sub, i32* %a, align 4, !dbg !19943
  %12 = load i32, i32* %c, align 4, !dbg !19943
  %call8 = call i32 @rol32(i32 %12, i32 4) #9, !dbg !19943
  %13 = load i32, i32* %a, align 4, !dbg !19943
  %xor = xor i32 %13, %call8, !dbg !19943
  store i32 %xor, i32* %a, align 4, !dbg !19943
  %14 = load i32, i32* %b, align 4, !dbg !19943
  %15 = load i32, i32* %c, align 4, !dbg !19943
  %add9 = add i32 %15, %14, !dbg !19943
  store i32 %add9, i32* %c, align 4, !dbg !19943
  %16 = load i32, i32* %a, align 4, !dbg !19943
  %17 = load i32, i32* %b, align 4, !dbg !19943
  %sub10 = sub i32 %17, %16, !dbg !19943
  store i32 %sub10, i32* %b, align 4, !dbg !19943
  %18 = load i32, i32* %a, align 4, !dbg !19943
  %call11 = call i32 @rol32(i32 %18, i32 6) #9, !dbg !19943
  %19 = load i32, i32* %b, align 4, !dbg !19943
  %xor12 = xor i32 %19, %call11, !dbg !19943
  store i32 %xor12, i32* %b, align 4, !dbg !19943
  %20 = load i32, i32* %c, align 4, !dbg !19943
  %21 = load i32, i32* %a, align 4, !dbg !19943
  %add13 = add i32 %21, %20, !dbg !19943
  store i32 %add13, i32* %a, align 4, !dbg !19943
  %22 = load i32, i32* %b, align 4, !dbg !19943
  %23 = load i32, i32* %c, align 4, !dbg !19943
  %sub14 = sub i32 %23, %22, !dbg !19943
  store i32 %sub14, i32* %c, align 4, !dbg !19943
  %24 = load i32, i32* %b, align 4, !dbg !19943
  %call15 = call i32 @rol32(i32 %24, i32 8) #9, !dbg !19943
  %25 = load i32, i32* %c, align 4, !dbg !19943
  %xor16 = xor i32 %25, %call15, !dbg !19943
  store i32 %xor16, i32* %c, align 4, !dbg !19943
  %26 = load i32, i32* %a, align 4, !dbg !19943
  %27 = load i32, i32* %b, align 4, !dbg !19943
  %add17 = add i32 %27, %26, !dbg !19943
  store i32 %add17, i32* %b, align 4, !dbg !19943
  %28 = load i32, i32* %c, align 4, !dbg !19943
  %29 = load i32, i32* %a, align 4, !dbg !19943
  %sub18 = sub i32 %29, %28, !dbg !19943
  store i32 %sub18, i32* %a, align 4, !dbg !19943
  %30 = load i32, i32* %c, align 4, !dbg !19943
  %call19 = call i32 @rol32(i32 %30, i32 16) #9, !dbg !19943
  %31 = load i32, i32* %a, align 4, !dbg !19943
  %xor20 = xor i32 %31, %call19, !dbg !19943
  store i32 %xor20, i32* %a, align 4, !dbg !19943
  %32 = load i32, i32* %b, align 4, !dbg !19943
  %33 = load i32, i32* %c, align 4, !dbg !19943
  %add21 = add i32 %33, %32, !dbg !19943
  store i32 %add21, i32* %c, align 4, !dbg !19943
  %34 = load i32, i32* %a, align 4, !dbg !19943
  %35 = load i32, i32* %b, align 4, !dbg !19943
  %sub22 = sub i32 %35, %34, !dbg !19943
  store i32 %sub22, i32* %b, align 4, !dbg !19943
  %36 = load i32, i32* %a, align 4, !dbg !19943
  %call23 = call i32 @rol32(i32 %36, i32 19) #9, !dbg !19943
  %37 = load i32, i32* %b, align 4, !dbg !19943
  %xor24 = xor i32 %37, %call23, !dbg !19943
  store i32 %xor24, i32* %b, align 4, !dbg !19943
  %38 = load i32, i32* %c, align 4, !dbg !19943
  %39 = load i32, i32* %a, align 4, !dbg !19943
  %add25 = add i32 %39, %38, !dbg !19943
  store i32 %add25, i32* %a, align 4, !dbg !19943
  %40 = load i32, i32* %b, align 4, !dbg !19943
  %41 = load i32, i32* %c, align 4, !dbg !19943
  %sub26 = sub i32 %41, %40, !dbg !19943
  store i32 %sub26, i32* %c, align 4, !dbg !19943
  %42 = load i32, i32* %b, align 4, !dbg !19943
  %call27 = call i32 @rol32(i32 %42, i32 4) #9, !dbg !19943
  %43 = load i32, i32* %c, align 4, !dbg !19943
  %xor28 = xor i32 %43, %call27, !dbg !19943
  store i32 %xor28, i32* %c, align 4, !dbg !19943
  %44 = load i32, i32* %a, align 4, !dbg !19943
  %45 = load i32, i32* %b, align 4, !dbg !19943
  %add29 = add i32 %45, %44, !dbg !19943
  store i32 %add29, i32* %b, align 4, !dbg !19943
  %46 = load i32, i32* %length.addr, align 4, !dbg !19945
  %sub30 = sub i32 %46, 12, !dbg !19945
  store i32 %sub30, i32* %length.addr, align 4, !dbg !19945
  %47 = load i8*, i8** %k, align 8, !dbg !19946
  %add.ptr31 = getelementptr i8, i8* %47, i64 12, !dbg !19946
  store i8* %add.ptr31, i8** %k, align 8, !dbg !19946
  br label %while.cond, !dbg !19928, !llvm.loop !19947

while.end:                                        ; preds = %while.cond
  %48 = load i32, i32* %length.addr, align 4, !dbg !19949
  switch i32 %48, label %sw.epilog [
    i32 12, label %sw.bb
    i32 11, label %sw.bb33
    i32 10, label %sw.bb38
    i32 9, label %sw.bb43
    i32 8, label %sw.bb47
    i32 7, label %sw.bb52
    i32 6, label %sw.bb57
    i32 5, label %sw.bb62
    i32 4, label %sw.bb66
    i32 3, label %sw.bb71
    i32 2, label %sw.bb76
    i32 1, label %sw.bb81
    i32 0, label %sw.bb106
  ], !dbg !19950

sw.bb:                                            ; preds = %while.end
  %49 = load i8*, i8** %k, align 8, !dbg !19951
  %arrayidx = getelementptr i8, i8* %49, i64 11, !dbg !19951
  %50 = load i8, i8* %arrayidx, align 1, !dbg !19951
  %conv = zext i8 %50 to i32, !dbg !19953
  %shl = shl i32 %conv, 24, !dbg !19954
  %51 = load i32, i32* %c, align 4, !dbg !19955
  %add32 = add i32 %51, %shl, !dbg !19955
  store i32 %add32, i32* %c, align 4, !dbg !19955
  br label %sw.bb33, !dbg !19956

sw.bb33:                                          ; preds = %while.end, %sw.bb
  %52 = load i8*, i8** %k, align 8, !dbg !19957
  %arrayidx34 = getelementptr i8, i8* %52, i64 10, !dbg !19957
  %53 = load i8, i8* %arrayidx34, align 1, !dbg !19957
  %conv35 = zext i8 %53 to i32, !dbg !19958
  %shl36 = shl i32 %conv35, 16, !dbg !19959
  %54 = load i32, i32* %c, align 4, !dbg !19960
  %add37 = add i32 %54, %shl36, !dbg !19960
  store i32 %add37, i32* %c, align 4, !dbg !19960
  br label %sw.bb38, !dbg !19961

sw.bb38:                                          ; preds = %while.end, %sw.bb33
  %55 = load i8*, i8** %k, align 8, !dbg !19962
  %arrayidx39 = getelementptr i8, i8* %55, i64 9, !dbg !19962
  %56 = load i8, i8* %arrayidx39, align 1, !dbg !19962
  %conv40 = zext i8 %56 to i32, !dbg !19963
  %shl41 = shl i32 %conv40, 8, !dbg !19964
  %57 = load i32, i32* %c, align 4, !dbg !19965
  %add42 = add i32 %57, %shl41, !dbg !19965
  store i32 %add42, i32* %c, align 4, !dbg !19965
  br label %sw.bb43, !dbg !19966

sw.bb43:                                          ; preds = %while.end, %sw.bb38
  %58 = load i8*, i8** %k, align 8, !dbg !19967
  %arrayidx44 = getelementptr i8, i8* %58, i64 8, !dbg !19967
  %59 = load i8, i8* %arrayidx44, align 1, !dbg !19967
  %conv45 = zext i8 %59 to i32, !dbg !19967
  %60 = load i32, i32* %c, align 4, !dbg !19968
  %add46 = add i32 %60, %conv45, !dbg !19968
  store i32 %add46, i32* %c, align 4, !dbg !19968
  br label %sw.bb47, !dbg !19969

sw.bb47:                                          ; preds = %while.end, %sw.bb43
  %61 = load i8*, i8** %k, align 8, !dbg !19970
  %arrayidx48 = getelementptr i8, i8* %61, i64 7, !dbg !19970
  %62 = load i8, i8* %arrayidx48, align 1, !dbg !19970
  %conv49 = zext i8 %62 to i32, !dbg !19971
  %shl50 = shl i32 %conv49, 24, !dbg !19972
  %63 = load i32, i32* %b, align 4, !dbg !19973
  %add51 = add i32 %63, %shl50, !dbg !19973
  store i32 %add51, i32* %b, align 4, !dbg !19973
  br label %sw.bb52, !dbg !19974

sw.bb52:                                          ; preds = %while.end, %sw.bb47
  %64 = load i8*, i8** %k, align 8, !dbg !19975
  %arrayidx53 = getelementptr i8, i8* %64, i64 6, !dbg !19975
  %65 = load i8, i8* %arrayidx53, align 1, !dbg !19975
  %conv54 = zext i8 %65 to i32, !dbg !19976
  %shl55 = shl i32 %conv54, 16, !dbg !19977
  %66 = load i32, i32* %b, align 4, !dbg !19978
  %add56 = add i32 %66, %shl55, !dbg !19978
  store i32 %add56, i32* %b, align 4, !dbg !19978
  br label %sw.bb57, !dbg !19979

sw.bb57:                                          ; preds = %while.end, %sw.bb52
  %67 = load i8*, i8** %k, align 8, !dbg !19980
  %arrayidx58 = getelementptr i8, i8* %67, i64 5, !dbg !19980
  %68 = load i8, i8* %arrayidx58, align 1, !dbg !19980
  %conv59 = zext i8 %68 to i32, !dbg !19981
  %shl60 = shl i32 %conv59, 8, !dbg !19982
  %69 = load i32, i32* %b, align 4, !dbg !19983
  %add61 = add i32 %69, %shl60, !dbg !19983
  store i32 %add61, i32* %b, align 4, !dbg !19983
  br label %sw.bb62, !dbg !19984

sw.bb62:                                          ; preds = %while.end, %sw.bb57
  %70 = load i8*, i8** %k, align 8, !dbg !19985
  %arrayidx63 = getelementptr i8, i8* %70, i64 4, !dbg !19985
  %71 = load i8, i8* %arrayidx63, align 1, !dbg !19985
  %conv64 = zext i8 %71 to i32, !dbg !19985
  %72 = load i32, i32* %b, align 4, !dbg !19986
  %add65 = add i32 %72, %conv64, !dbg !19986
  store i32 %add65, i32* %b, align 4, !dbg !19986
  br label %sw.bb66, !dbg !19987

sw.bb66:                                          ; preds = %while.end, %sw.bb62
  %73 = load i8*, i8** %k, align 8, !dbg !19988
  %arrayidx67 = getelementptr i8, i8* %73, i64 3, !dbg !19988
  %74 = load i8, i8* %arrayidx67, align 1, !dbg !19988
  %conv68 = zext i8 %74 to i32, !dbg !19989
  %shl69 = shl i32 %conv68, 24, !dbg !19990
  %75 = load i32, i32* %a, align 4, !dbg !19991
  %add70 = add i32 %75, %shl69, !dbg !19991
  store i32 %add70, i32* %a, align 4, !dbg !19991
  br label %sw.bb71, !dbg !19992

sw.bb71:                                          ; preds = %while.end, %sw.bb66
  %76 = load i8*, i8** %k, align 8, !dbg !19993
  %arrayidx72 = getelementptr i8, i8* %76, i64 2, !dbg !19993
  %77 = load i8, i8* %arrayidx72, align 1, !dbg !19993
  %conv73 = zext i8 %77 to i32, !dbg !19994
  %shl74 = shl i32 %conv73, 16, !dbg !19995
  %78 = load i32, i32* %a, align 4, !dbg !19996
  %add75 = add i32 %78, %shl74, !dbg !19996
  store i32 %add75, i32* %a, align 4, !dbg !19996
  br label %sw.bb76, !dbg !19997

sw.bb76:                                          ; preds = %while.end, %sw.bb71
  %79 = load i8*, i8** %k, align 8, !dbg !19998
  %arrayidx77 = getelementptr i8, i8* %79, i64 1, !dbg !19998
  %80 = load i8, i8* %arrayidx77, align 1, !dbg !19998
  %conv78 = zext i8 %80 to i32, !dbg !19999
  %shl79 = shl i32 %conv78, 8, !dbg !20000
  %81 = load i32, i32* %a, align 4, !dbg !20001
  %add80 = add i32 %81, %shl79, !dbg !20001
  store i32 %add80, i32* %a, align 4, !dbg !20001
  br label %sw.bb81, !dbg !20002

sw.bb81:                                          ; preds = %while.end, %sw.bb76
  %82 = load i8*, i8** %k, align 8, !dbg !20003
  %arrayidx82 = getelementptr i8, i8* %82, i64 0, !dbg !20003
  %83 = load i8, i8* %arrayidx82, align 1, !dbg !20003
  %conv83 = zext i8 %83 to i32, !dbg !20003
  %84 = load i32, i32* %a, align 4, !dbg !20004
  %add84 = add i32 %84, %conv83, !dbg !20004
  store i32 %add84, i32* %a, align 4, !dbg !20004
  %85 = load i32, i32* %b, align 4, !dbg !20005
  %86 = load i32, i32* %c, align 4, !dbg !20005
  %xor85 = xor i32 %86, %85, !dbg !20005
  store i32 %xor85, i32* %c, align 4, !dbg !20005
  %87 = load i32, i32* %b, align 4, !dbg !20005
  %call86 = call i32 @rol32(i32 %87, i32 14) #9, !dbg !20005
  %88 = load i32, i32* %c, align 4, !dbg !20005
  %sub87 = sub i32 %88, %call86, !dbg !20005
  store i32 %sub87, i32* %c, align 4, !dbg !20005
  %89 = load i32, i32* %c, align 4, !dbg !20005
  %90 = load i32, i32* %a, align 4, !dbg !20005
  %xor88 = xor i32 %90, %89, !dbg !20005
  store i32 %xor88, i32* %a, align 4, !dbg !20005
  %91 = load i32, i32* %c, align 4, !dbg !20005
  %call89 = call i32 @rol32(i32 %91, i32 11) #9, !dbg !20005
  %92 = load i32, i32* %a, align 4, !dbg !20005
  %sub90 = sub i32 %92, %call89, !dbg !20005
  store i32 %sub90, i32* %a, align 4, !dbg !20005
  %93 = load i32, i32* %a, align 4, !dbg !20005
  %94 = load i32, i32* %b, align 4, !dbg !20005
  %xor91 = xor i32 %94, %93, !dbg !20005
  store i32 %xor91, i32* %b, align 4, !dbg !20005
  %95 = load i32, i32* %a, align 4, !dbg !20005
  %call92 = call i32 @rol32(i32 %95, i32 25) #9, !dbg !20005
  %96 = load i32, i32* %b, align 4, !dbg !20005
  %sub93 = sub i32 %96, %call92, !dbg !20005
  store i32 %sub93, i32* %b, align 4, !dbg !20005
  %97 = load i32, i32* %b, align 4, !dbg !20005
  %98 = load i32, i32* %c, align 4, !dbg !20005
  %xor94 = xor i32 %98, %97, !dbg !20005
  store i32 %xor94, i32* %c, align 4, !dbg !20005
  %99 = load i32, i32* %b, align 4, !dbg !20005
  %call95 = call i32 @rol32(i32 %99, i32 16) #9, !dbg !20005
  %100 = load i32, i32* %c, align 4, !dbg !20005
  %sub96 = sub i32 %100, %call95, !dbg !20005
  store i32 %sub96, i32* %c, align 4, !dbg !20005
  %101 = load i32, i32* %c, align 4, !dbg !20005
  %102 = load i32, i32* %a, align 4, !dbg !20005
  %xor97 = xor i32 %102, %101, !dbg !20005
  store i32 %xor97, i32* %a, align 4, !dbg !20005
  %103 = load i32, i32* %c, align 4, !dbg !20005
  %call98 = call i32 @rol32(i32 %103, i32 4) #9, !dbg !20005
  %104 = load i32, i32* %a, align 4, !dbg !20005
  %sub99 = sub i32 %104, %call98, !dbg !20005
  store i32 %sub99, i32* %a, align 4, !dbg !20005
  %105 = load i32, i32* %a, align 4, !dbg !20005
  %106 = load i32, i32* %b, align 4, !dbg !20005
  %xor100 = xor i32 %106, %105, !dbg !20005
  store i32 %xor100, i32* %b, align 4, !dbg !20005
  %107 = load i32, i32* %a, align 4, !dbg !20005
  %call101 = call i32 @rol32(i32 %107, i32 14) #9, !dbg !20005
  %108 = load i32, i32* %b, align 4, !dbg !20005
  %sub102 = sub i32 %108, %call101, !dbg !20005
  store i32 %sub102, i32* %b, align 4, !dbg !20005
  %109 = load i32, i32* %b, align 4, !dbg !20005
  %110 = load i32, i32* %c, align 4, !dbg !20005
  %xor103 = xor i32 %110, %109, !dbg !20005
  store i32 %xor103, i32* %c, align 4, !dbg !20005
  %111 = load i32, i32* %b, align 4, !dbg !20005
  %call104 = call i32 @rol32(i32 %111, i32 24) #9, !dbg !20005
  %112 = load i32, i32* %c, align 4, !dbg !20005
  %sub105 = sub i32 %112, %call104, !dbg !20005
  store i32 %sub105, i32* %c, align 4, !dbg !20005
  br label %sw.epilog, !dbg !20007

sw.bb106:                                         ; preds = %while.end
  br label %sw.epilog, !dbg !20008

sw.epilog:                                        ; preds = %while.end, %sw.bb106, %sw.bb81
  %113 = load i32, i32* %c, align 4, !dbg !20009
  ret i32 %113, !dbg !20010
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_slcr_pack(i8* %payload, i16 zeroext %lag_hash, i32 %seed) #0 !dbg !20011 {
entry:
  %payload.addr = alloca i8*, align 8
  %lag_hash.addr = alloca i16, align 2
  %seed.addr = alloca i32, align 4
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !20014, metadata !DIExpression()), !dbg !20015
  store i16 %lag_hash, i16* %lag_hash.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %lag_hash.addr, metadata !20016, metadata !DIExpression()), !dbg !20017
  store i32 %seed, i32* %seed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %seed.addr, metadata !20018, metadata !DIExpression()), !dbg !20019
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !20020
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_slcr, i32 0, i32 1), align 2, !dbg !20020
  %conv = zext i16 %1 to i64, !dbg !20020
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !20020
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !20021
  call void @mlxsw_reg_slcr_pp_set(i8* %2, i32 0) #9, !dbg !20022
  %3 = load i8*, i8** %payload.addr, align 8, !dbg !20023
  call void @mlxsw_reg_slcr_type_set(i8* %3, i32 0) #9, !dbg !20024
  %4 = load i8*, i8** %payload.addr, align 8, !dbg !20025
  %5 = load i16, i16* %lag_hash.addr, align 2, !dbg !20026
  %conv1 = zext i16 %5 to i32, !dbg !20026
  call void @mlxsw_reg_slcr_lag_hash_set(i8* %4, i32 %conv1) #9, !dbg !20027
  %6 = load i8*, i8** %payload.addr, align 8, !dbg !20028
  %7 = load i32, i32* %seed.addr, align 4, !dbg !20029
  call void @mlxsw_reg_slcr_seed_set(i8* %6, i32 %7) #9, !dbg !20030
  ret void, !dbg !20031
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #0 !dbg !20032 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !20035, metadata !DIExpression()), !dbg !20036
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !20037, metadata !DIExpression()), !dbg !20038
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !20039, metadata !DIExpression()), !dbg !20040
  %0 = load i64, i64* %n.addr, align 8, !dbg !20041
  %1 = load i64, i64* %size.addr, align 8, !dbg !20042
  %2 = load i32, i32* %flags.addr, align 4, !dbg !20043
  %or = or i32 %2, 256, !dbg !20044
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #9, !dbg !20045
  ret i8* %call, !dbg !20046
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__get_unaligned_cpu32(i8* %p) #0 !dbg !20047 {
entry:
  %p.addr = alloca i8*, align 8
  %ptr = alloca %struct.__una_u32*, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !20050, metadata !DIExpression()), !dbg !20051
  call void @llvm.dbg.declare(metadata %struct.__una_u32** %ptr, metadata !20052, metadata !DIExpression()), !dbg !20053
  %0 = load i8*, i8** %p.addr, align 8, !dbg !20054
  %1 = bitcast i8* %0 to %struct.__una_u32*, !dbg !20055
  store %struct.__una_u32* %1, %struct.__una_u32** %ptr, align 8, !dbg !20053
  %2 = load %struct.__una_u32*, %struct.__una_u32** %ptr, align 8, !dbg !20056
  %x = getelementptr inbounds %struct.__una_u32, %struct.__una_u32* %2, i32 0, i32 0, !dbg !20057
  %3 = load i32, i32* %x, align 1, !dbg !20057
  ret i32 %3, !dbg !20058
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rol32(i32 %word, i32 %shift) #0 !dbg !20059 {
entry:
  %word.addr = alloca i32, align 4
  %shift.addr = alloca i32, align 4
  store i32 %word, i32* %word.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %word.addr, metadata !20063, metadata !DIExpression()), !dbg !20064
  store i32 %shift, i32* %shift.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %shift.addr, metadata !20065, metadata !DIExpression()), !dbg !20066
  %0 = load i32, i32* %word.addr, align 4, !dbg !20067
  %1 = load i32, i32* %shift.addr, align 4, !dbg !20068
  %and = and i32 %1, 31, !dbg !20069
  %shl = shl i32 %0, %and, !dbg !20070
  %2 = load i32, i32* %word.addr, align 4, !dbg !20071
  %3 = load i32, i32* %shift.addr, align 4, !dbg !20072
  %sub = sub i32 0, %3, !dbg !20073
  %and1 = and i32 %sub, 31, !dbg !20074
  %shr = lshr i32 %2, %and1, !dbg !20075
  %or = or i32 %shl, %shr, !dbg !20076
  ret i32 %or, !dbg !20077
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_slcr_pp_set(i8* %buf, i32 %val) #0 !dbg !20078 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !20079, metadata !DIExpression()), !dbg !20080
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !20081, metadata !DIExpression()), !dbg !20080
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !20080
  %1 = load i32, i32* %val.addr, align 4, !dbg !20080
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_slcr_pp_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !20080
  ret void, !dbg !20080
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_slcr_type_set(i8* %buf, i32 %val) #0 !dbg !20082 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !20083, metadata !DIExpression()), !dbg !20084
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !20085, metadata !DIExpression()), !dbg !20084
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !20084
  %1 = load i32, i32* %val.addr, align 4, !dbg !20084
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_slcr_type_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !20084
  ret void, !dbg !20084
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_slcr_lag_hash_set(i8* %buf, i32 %val) #0 !dbg !20086 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !20087, metadata !DIExpression()), !dbg !20088
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !20089, metadata !DIExpression()), !dbg !20088
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !20088
  %1 = load i32, i32* %val.addr, align 4, !dbg !20088
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_slcr_lag_hash_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !20088
  ret void, !dbg !20088
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_slcr_seed_set(i8* %buf, i32 %val) #0 !dbg !20090 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !20091, metadata !DIExpression()), !dbg !20092
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !20093, metadata !DIExpression()), !dbg !20092
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !20092
  %1 = load i32, i32* %val.addr, align 4, !dbg !20092
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_slcr_seed_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !20092
  ret void, !dbg !20092
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #0 !dbg !20094 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !12749, metadata !DIExpression()), !dbg !20095
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !12761, metadata !DIExpression()), !dbg !20099
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !12763, metadata !DIExpression()), !dbg !20100
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !12765, metadata !DIExpression()), !dbg !20101
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !12767, metadata !DIExpression()), !dbg !20102
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !12773, metadata !DIExpression()), !dbg !20104
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !12779, metadata !DIExpression()), !dbg !20106
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !12788, metadata !DIExpression()), !dbg !20109
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !12790, metadata !DIExpression()), !dbg !20110
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12792, metadata !DIExpression()), !dbg !20111
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !12794, metadata !DIExpression()), !dbg !20112
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !12796, metadata !DIExpression()), !dbg !20113
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12798, metadata !DIExpression()), !dbg !20114
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !12800, metadata !DIExpression()), !dbg !20115
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !12802, metadata !DIExpression()), !dbg !20116
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !20117, metadata !DIExpression()), !dbg !20118
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !20119, metadata !DIExpression()), !dbg !20120
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !20121, metadata !DIExpression()), !dbg !20122
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !20123, metadata !DIExpression()), !dbg !20124
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !20125, metadata !DIExpression()), !dbg !20128
  %0 = load i64, i64* %n.addr, align 8, !dbg !20128
  store i64 %0, i64* %__a, align 8, !dbg !20128
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !20129, metadata !DIExpression()), !dbg !20128
  %1 = load i64, i64* %size.addr, align 8, !dbg !20128
  store i64 %1, i64* %__b, align 8, !dbg !20128
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !20130, metadata !DIExpression()), !dbg !20128
  store i64* %bytes, i64** %__d, align 8, !dbg !20128
  %cmp = icmp eq i64* %__a, %__b, !dbg !20128
  %conv = zext i1 %cmp to i32, !dbg !20128
  %2 = load i64*, i64** %__d, align 8, !dbg !20128
  %cmp1 = icmp eq i64* %__a, %2, !dbg !20128
  %conv2 = zext i1 %cmp1 to i32, !dbg !20128
  %3 = load i64, i64* %__a, align 8, !dbg !20128
  %4 = load i64, i64* %__b, align 8, !dbg !20128
  %5 = load i64*, i64** %__d, align 8, !dbg !20128
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !20128
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !20128
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !20128
  store i64 %8, i64* %5, align 8, !dbg !20128
  %frombool = zext i1 %7 to i8, !dbg !20128
  store i8 %frombool, i8* %tmp, align 1, !dbg !20128
  %9 = load i8, i8* %tmp, align 1, !dbg !20128
  %tobool = trunc i8 %9 to i1, !dbg !20128
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #9, !dbg !20131
  %lnot = xor i1 %call, true, !dbg !20131
  %lnot3 = xor i1 %lnot, true, !dbg !20131
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !20131
  %conv4 = sext i32 %lnot.ext to i64, !dbg !20131
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !20131
  br i1 %tobool5, label %if.then, label %if.end, !dbg !20132

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !20133
  br label %return, !dbg !20133

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !20134
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !20135
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !20136

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !20137
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !20138
  br i1 %13, label %if.then6, label %if.end8, !dbg !20139

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !20140
  %15 = load i32, i32* %flags.addr, align 4, !dbg !20141
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !20142
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #10, !dbg !20143
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !20144

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !20145
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !20146
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !20147

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !20148
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !20149
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !20150
  %call.i.i = call i32 @get_order(i64 %21) #11, !dbg !20151
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !20113
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !20152
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !20153
  %24 = load i32, i32* %order.i.i, align 4, !dbg !20154
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !20155
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !20156
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !20157
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #12, !dbg !20158
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !20158
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !20158
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !20158
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !20158
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !20159
  br label %kmalloc.exit, !dbg !20159

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !20160
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20161
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !20161
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !20162

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !20163
  br label %kmalloc_index.exit.i, !dbg !20163

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20164
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !20165
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !20166

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !20167
  br label %kmalloc_index.exit.i, !dbg !20167

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20168
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !20169
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !20170

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20171
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !20172
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !20173

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !20174
  br label %kmalloc_index.exit.i, !dbg !20174

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20175
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !20176
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !20177

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20178
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !20179
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !20180

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !20181
  br label %kmalloc_index.exit.i, !dbg !20181

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20182
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !20183
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !20184

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !20185
  br label %kmalloc_index.exit.i, !dbg !20185

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20186
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !20187
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !20188

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !20189
  br label %kmalloc_index.exit.i, !dbg !20189

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20190
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !20191
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !20192

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !20193
  br label %kmalloc_index.exit.i, !dbg !20193

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20194
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !20195
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !20196

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !20197
  br label %kmalloc_index.exit.i, !dbg !20197

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20198
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !20199
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !20200

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !20201
  br label %kmalloc_index.exit.i, !dbg !20201

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20202
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !20203
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !20204

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !20205
  br label %kmalloc_index.exit.i, !dbg !20205

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20206
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !20207
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !20208

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !20209
  br label %kmalloc_index.exit.i, !dbg !20209

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20210
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !20211
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !20212

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !20213
  br label %kmalloc_index.exit.i, !dbg !20213

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20214
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !20215
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !20216

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !20217
  br label %kmalloc_index.exit.i, !dbg !20217

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20218
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !20219
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !20220

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !20221
  br label %kmalloc_index.exit.i, !dbg !20221

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20222
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !20223
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !20224

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !20225
  br label %kmalloc_index.exit.i, !dbg !20225

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20226
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !20227
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !20228

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !20229
  br label %kmalloc_index.exit.i, !dbg !20229

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20230
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !20231
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !20232

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !20233
  br label %kmalloc_index.exit.i, !dbg !20233

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20234
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !20235
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !20236

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !20237
  br label %kmalloc_index.exit.i, !dbg !20237

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20238
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !20239
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !20240

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !20241
  br label %kmalloc_index.exit.i, !dbg !20241

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20242
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !20243
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !20244

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !20245
  br label %kmalloc_index.exit.i, !dbg !20245

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20246
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !20247
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !20248

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !20249
  br label %kmalloc_index.exit.i, !dbg !20249

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20250
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !20251
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !20252

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !20253
  br label %kmalloc_index.exit.i, !dbg !20253

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20254
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !20255
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !20256

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !20257
  br label %kmalloc_index.exit.i, !dbg !20257

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20258
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !20259
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !20260

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !20261
  br label %kmalloc_index.exit.i, !dbg !20261

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20262
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !20263
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !20264

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !20265
  br label %kmalloc_index.exit.i, !dbg !20265

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20266
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !20267
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !20268

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !20269
  br label %kmalloc_index.exit.i, !dbg !20269

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20270
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !20271
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !20272

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !20273
  br label %kmalloc_index.exit.i, !dbg !20273

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !20274
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !20275
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !20276

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !20277
  br label %kmalloc_index.exit.i, !dbg !20277

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !20278, !srcloc !12989
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 160) #10, !dbg !20279, !srcloc !12993
  unreachable, !dbg !20280

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !20281
  store i32 %59, i32* %index.i, align 4, !dbg !20282
  %60 = load i32, i32* %index.i, align 4, !dbg !20283
  %tobool.i = icmp ne i32 %60, 0, !dbg !20283
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !20284

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !20285
  br label %kmalloc.exit, !dbg !20285

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !20286
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !20287
  %and.i.i = and i32 %62, 17, !dbg !20287
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !20287
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !20287
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !20287
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !20287
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !20288

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !20289
  br label %kmalloc_type.exit.i, !dbg !20289

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !20290
  %and2.i.i = and i32 %63, 1, !dbg !20291
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !20290
  %64 = zext i1 %tobool3.i.i to i64, !dbg !20290
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !20290
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !20292
  br label %kmalloc_type.exit.i, !dbg !20292

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !20293
  %idxprom.i = zext i32 %65 to i64, !dbg !20294
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !20294
  %66 = load i32, i32* %index.i, align 4, !dbg !20295
  %idxprom6.i = zext i32 %66 to i64, !dbg !20294
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !20294
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !20294
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !20296
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !20297
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !20298
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !20299
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #12, !dbg !20300
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !20300
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !20300
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !20300
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !20300
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !20101
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !20301
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !20302
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !20303
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !20304
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #12, !dbg !20305
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !20306
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !20307
  store i8* %76, i8** %retval.i, align 8, !dbg !20308
  br label %kmalloc.exit, !dbg !20308

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !20309
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !20310
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #12, !dbg !20311
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !20311
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !20311
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !20311
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !20311
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !20312
  br label %kmalloc.exit, !dbg !20312

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !20313
  store i8* %79, i8** %retval, align 8, !dbg !20314
  br label %return, !dbg !20314

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !20315
  %81 = load i32, i32* %flags.addr, align 4, !dbg !20316
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #9, !dbg !20317
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !20317
  %maskedptr = and i64 %ptrint, 7, !dbg !20317
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !20317
  call void @llvm.assume(i1 %maskcond), !dbg !20317
  store i8* %call9, i8** %retval, align 8, !dbg !20318
  br label %return, !dbg !20318

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !20319
  ret i8* %82, !dbg !20319
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.net_device* @netdev_notifier_info_to_dev(%struct.netdev_notifier_info* %info) #0 !dbg !20320 {
entry:
  %info.addr = alloca %struct.netdev_notifier_info*, align 8
  store %struct.netdev_notifier_info* %info, %struct.netdev_notifier_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_notifier_info** %info.addr, metadata !20325, metadata !DIExpression()), !dbg !20326
  %0 = load %struct.netdev_notifier_info*, %struct.netdev_notifier_info** %info.addr, align 8, !dbg !20327
  %dev = getelementptr inbounds %struct.netdev_notifier_info, %struct.netdev_notifier_info* %0, i32 0, i32 0, !dbg !20328
  %1 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20328
  ret %struct.net_device* %1, !dbg !20329
}

; Function Attrs: noredzone
declare dso_local %struct.mlxsw_sp_span_entry* @mlxsw_sp_span_entry_find_by_port(%struct.mlxsw_sp*, %struct.net_device*) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_span_entry_invalidate(%struct.mlxsw_sp*, %struct.mlxsw_sp_span_entry*) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_span_respin(%struct.mlxsw_sp*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_is_vxlan(%struct.net_device* %dev) #0 !dbg !20330 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !20332, metadata !DIExpression()), !dbg !20333
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20334
  %rtnl_link_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 109, !dbg !20335
  %1 = load %struct.rtnl_link_ops*, %struct.rtnl_link_ops** %rtnl_link_ops, align 8, !dbg !20335
  %tobool = icmp ne %struct.rtnl_link_ops* %1, null, !dbg !20334
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !20336

land.rhs:                                         ; preds = %entry
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20337
  %rtnl_link_ops1 = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 109, !dbg !20338
  %3 = load %struct.rtnl_link_ops*, %struct.rtnl_link_ops** %rtnl_link_ops1, align 8, !dbg !20338
  %kind = getelementptr inbounds %struct.rtnl_link_ops, %struct.rtnl_link_ops* %3, i32 0, i32 1, !dbg !20339
  %4 = load i8*, i8** %kind, align 8, !dbg !20339
  %call = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.239, i64 0, i64 0)) #9, !dbg !20340
  %tobool2 = icmp ne i32 %call, 0, !dbg !20341
  %lnot = xor i1 %tobool2, true, !dbg !20341
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !20342
  ret i1 %5, !dbg !20343
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_netdevice_vxlan_event(%struct.mlxsw_sp* %mlxsw_sp, %struct.net_device* %dev, i64 %event, i8* %ptr) #0 !dbg !20344 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %event.addr = alloca i64, align 8
  %ptr.addr = alloca i8*, align 8
  %cu_info = alloca %struct.netdev_notifier_changeupper_info*, align 8
  %info = alloca %struct.netdev_notifier_info*, align 8
  %extack = alloca %struct.netlink_ext_ack*, align 8
  %upper_dev = alloca %struct.net_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.netdev_notifier_changeupper_info*, align 8
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !20347, metadata !DIExpression()), !dbg !20348
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !20349, metadata !DIExpression()), !dbg !20350
  store i64 %event, i64* %event.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %event.addr, metadata !20351, metadata !DIExpression()), !dbg !20352
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !20353, metadata !DIExpression()), !dbg !20354
  call void @llvm.dbg.declare(metadata %struct.netdev_notifier_changeupper_info** %cu_info, metadata !20355, metadata !DIExpression()), !dbg !20356
  call void @llvm.dbg.declare(metadata %struct.netdev_notifier_info** %info, metadata !20357, metadata !DIExpression()), !dbg !20359
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !20360
  %1 = bitcast i8* %0 to %struct.netdev_notifier_info*, !dbg !20360
  store %struct.netdev_notifier_info* %1, %struct.netdev_notifier_info** %info, align 8, !dbg !20359
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack, metadata !20361, metadata !DIExpression()), !dbg !20362
  call void @llvm.dbg.declare(metadata %struct.net_device** %upper_dev, metadata !20363, metadata !DIExpression()), !dbg !20364
  %2 = load %struct.netdev_notifier_info*, %struct.netdev_notifier_info** %info, align 8, !dbg !20365
  %call = call %struct.netlink_ext_ack* @netdev_notifier_info_to_extack(%struct.netdev_notifier_info* %2) #9, !dbg !20366
  store %struct.netlink_ext_ack* %call, %struct.netlink_ext_ack** %extack, align 8, !dbg !20367
  %3 = load i64, i64* %event.addr, align 8, !dbg !20368
  switch i64 %3, label %sw.epilog [
    i64 21, label %sw.bb
    i64 14, label %sw.bb22
    i64 2, label %sw.bb35
  ], !dbg !20369

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !20370, metadata !DIExpression()), !dbg !20373
  %4 = load %struct.netdev_notifier_info*, %struct.netdev_notifier_info** %info, align 8, !dbg !20373
  %5 = bitcast %struct.netdev_notifier_info* %4 to i8*, !dbg !20373
  store i8* %5, i8** %__mptr, align 8, !dbg !20373
  br label %do.body, !dbg !20373

do.body:                                          ; preds = %sw.bb
  br label %do.end, !dbg !20374

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr, align 8, !dbg !20373
  %add.ptr = getelementptr i8, i8* %6, i64 0, !dbg !20373
  %7 = bitcast i8* %add.ptr to %struct.netdev_notifier_changeupper_info*, !dbg !20373
  store %struct.netdev_notifier_changeupper_info* %7, %struct.netdev_notifier_changeupper_info** %tmp, align 8, !dbg !20374
  %8 = load %struct.netdev_notifier_changeupper_info*, %struct.netdev_notifier_changeupper_info** %tmp, align 8, !dbg !20373
  store %struct.netdev_notifier_changeupper_info* %8, %struct.netdev_notifier_changeupper_info** %cu_info, align 8, !dbg !20376
  %9 = load %struct.netdev_notifier_changeupper_info*, %struct.netdev_notifier_changeupper_info** %cu_info, align 8, !dbg !20377
  %upper_dev1 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, %struct.netdev_notifier_changeupper_info* %9, i32 0, i32 1, !dbg !20378
  %10 = load %struct.net_device*, %struct.net_device** %upper_dev1, align 8, !dbg !20378
  store %struct.net_device* %10, %struct.net_device** %upper_dev, align 8, !dbg !20379
  %11 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !20380
  %call2 = call zeroext i1 @netif_is_bridge_master(%struct.net_device* %11) #9, !dbg !20382
  br i1 %call2, label %if.end, label %if.then, !dbg !20383

if.then:                                          ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !20384
  br label %return, !dbg !20384

if.end:                                           ; preds = %do.end
  %12 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !20385
  %call3 = call %struct.mlxsw_sp* @mlxsw_sp_lower_get(%struct.net_device* %12) #9, !dbg !20387
  %tobool = icmp ne %struct.mlxsw_sp* %call3, null, !dbg !20387
  br i1 %tobool, label %if.end5, label %if.then4, !dbg !20388

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !20389
  br label %return, !dbg !20389

if.end5:                                          ; preds = %if.end
  %13 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !20390
  %14 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack, align 8, !dbg !20392
  %call6 = call zeroext i1 @mlxsw_sp_bridge_vxlan_is_valid(%struct.net_device* %13, %struct.netlink_ext_ack* %14) #9, !dbg !20393
  br i1 %call6, label %if.end8, label %if.then7, !dbg !20394

if.then7:                                         ; preds = %if.end5
  store i32 -95, i32* %retval, align 4, !dbg !20395
  br label %return, !dbg !20395

if.end8:                                          ; preds = %if.end5
  %15 = load %struct.netdev_notifier_changeupper_info*, %struct.netdev_notifier_changeupper_info** %cu_info, align 8, !dbg !20396
  %linking = getelementptr inbounds %struct.netdev_notifier_changeupper_info, %struct.netdev_notifier_changeupper_info* %15, i32 0, i32 3, !dbg !20398
  %16 = load i8, i8* %linking, align 1, !dbg !20398
  %tobool9 = trunc i8 %16 to i1, !dbg !20398
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !20399

if.then10:                                        ; preds = %if.end8
  %17 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20400
  %call11 = call zeroext i1 @netif_running(%struct.net_device* %17) #9, !dbg !20403
  br i1 %call11, label %if.end13, label %if.then12, !dbg !20404

if.then12:                                        ; preds = %if.then10
  store i32 0, i32* %retval, align 4, !dbg !20405
  br label %return, !dbg !20405

if.end13:                                         ; preds = %if.then10
  %18 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !20406
  %call14 = call zeroext i1 @br_vlan_enabled(%struct.net_device* %18) #9, !dbg !20408
  br i1 %call14, label %if.then15, label %if.end16, !dbg !20409

if.then15:                                        ; preds = %if.end13
  store i32 0, i32* %retval, align 4, !dbg !20410
  br label %return, !dbg !20410

if.end16:                                         ; preds = %if.end13
  %19 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !20411
  %20 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !20412
  %21 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20413
  %22 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack, align 8, !dbg !20414
  %call17 = call i32 @mlxsw_sp_bridge_vxlan_join(%struct.mlxsw_sp* %19, %struct.net_device* %20, %struct.net_device* %21, i16 zeroext 0, %struct.netlink_ext_ack* %22) #9, !dbg !20415
  store i32 %call17, i32* %retval, align 4, !dbg !20416
  br label %return, !dbg !20416

if.else:                                          ; preds = %if.end8
  %23 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !20417
  %call18 = call zeroext i1 @br_vlan_enabled(%struct.net_device* %23) #9, !dbg !20420
  br i1 %call18, label %if.then19, label %if.end20, !dbg !20421

if.then19:                                        ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !20422
  br label %return, !dbg !20422

if.end20:                                         ; preds = %if.else
  %24 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !20423
  %25 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20424
  call void @mlxsw_sp_bridge_vxlan_leave(%struct.mlxsw_sp* %24, %struct.net_device* %25) #9, !dbg !20425
  br label %if.end21

if.end21:                                         ; preds = %if.end20
  br label %sw.epilog, !dbg !20426

sw.bb22:                                          ; preds = %entry
  %26 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20427
  %call23 = call %struct.net_device* @netdev_master_upper_dev_get(%struct.net_device* %26) #9, !dbg !20428
  store %struct.net_device* %call23, %struct.net_device** %upper_dev, align 8, !dbg !20429
  %27 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !20430
  %tobool24 = icmp ne %struct.net_device* %27, null, !dbg !20430
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !20432

if.then25:                                        ; preds = %sw.bb22
  store i32 0, i32* %retval, align 4, !dbg !20433
  br label %return, !dbg !20433

if.end26:                                         ; preds = %sw.bb22
  %28 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !20434
  %call27 = call zeroext i1 @netif_is_bridge_master(%struct.net_device* %28) #9, !dbg !20436
  br i1 %call27, label %if.end29, label %if.then28, !dbg !20437

if.then28:                                        ; preds = %if.end26
  store i32 0, i32* %retval, align 4, !dbg !20438
  br label %return, !dbg !20438

if.end29:                                         ; preds = %if.end26
  %29 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !20439
  %call30 = call %struct.mlxsw_sp* @mlxsw_sp_lower_get(%struct.net_device* %29) #9, !dbg !20441
  %tobool31 = icmp ne %struct.mlxsw_sp* %call30, null, !dbg !20441
  br i1 %tobool31, label %if.end33, label %if.then32, !dbg !20442

if.then32:                                        ; preds = %if.end29
  store i32 0, i32* %retval, align 4, !dbg !20443
  br label %return, !dbg !20443

if.end33:                                         ; preds = %if.end29
  %30 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !20444
  %31 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !20445
  %32 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20446
  %33 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack, align 8, !dbg !20447
  %call34 = call i32 @mlxsw_sp_bridge_vxlan_join(%struct.mlxsw_sp* %30, %struct.net_device* %31, %struct.net_device* %32, i16 zeroext 0, %struct.netlink_ext_ack* %33) #9, !dbg !20448
  store i32 %call34, i32* %retval, align 4, !dbg !20449
  br label %return, !dbg !20449

sw.bb35:                                          ; preds = %entry
  %34 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20450
  %call36 = call %struct.net_device* @netdev_master_upper_dev_get(%struct.net_device* %34) #9, !dbg !20451
  store %struct.net_device* %call36, %struct.net_device** %upper_dev, align 8, !dbg !20452
  %35 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !20453
  %tobool37 = icmp ne %struct.net_device* %35, null, !dbg !20453
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !20455

if.then38:                                        ; preds = %sw.bb35
  store i32 0, i32* %retval, align 4, !dbg !20456
  br label %return, !dbg !20456

if.end39:                                         ; preds = %sw.bb35
  %36 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !20457
  %call40 = call zeroext i1 @netif_is_bridge_master(%struct.net_device* %36) #9, !dbg !20459
  br i1 %call40, label %if.end42, label %if.then41, !dbg !20460

if.then41:                                        ; preds = %if.end39
  store i32 0, i32* %retval, align 4, !dbg !20461
  br label %return, !dbg !20461

if.end42:                                         ; preds = %if.end39
  %37 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !20462
  %call43 = call %struct.mlxsw_sp* @mlxsw_sp_lower_get(%struct.net_device* %37) #9, !dbg !20464
  %tobool44 = icmp ne %struct.mlxsw_sp* %call43, null, !dbg !20464
  br i1 %tobool44, label %if.end46, label %if.then45, !dbg !20465

if.then45:                                        ; preds = %if.end42
  store i32 0, i32* %retval, align 4, !dbg !20466
  br label %return, !dbg !20466

if.end46:                                         ; preds = %if.end42
  %38 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !20467
  %39 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20468
  call void @mlxsw_sp_bridge_vxlan_leave(%struct.mlxsw_sp* %38, %struct.net_device* %39) #9, !dbg !20469
  br label %sw.epilog, !dbg !20470

sw.epilog:                                        ; preds = %entry, %if.end46, %if.end21
  store i32 0, i32* %retval, align 4, !dbg !20471
  br label %return, !dbg !20471

return:                                           ; preds = %sw.epilog, %if.then45, %if.then41, %if.then38, %if.end33, %if.then32, %if.then28, %if.then25, %if.then19, %if.end16, %if.then15, %if.then12, %if.then7, %if.then4, %if.then
  %40 = load i32, i32* %retval, align 4, !dbg !20472
  ret i32 %40, !dbg !20472
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @mlxsw_sp_netdev_is_ipip_ol(%struct.mlxsw_sp*, %struct.net_device*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_netdevice_ipip_ol_event(%struct.mlxsw_sp*, %struct.net_device*, i64, %struct.netdev_notifier_info*) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @mlxsw_sp_netdev_is_ipip_ul(%struct.mlxsw_sp*, %struct.net_device*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_netdevice_ipip_ul_event(%struct.mlxsw_sp*, %struct.net_device*, i64, %struct.netdev_notifier_info*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_netdevice_router_port_event(%struct.net_device*, i64, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mlxsw_sp_is_vrf_event(i64 %event, i8* %ptr) #0 !dbg !20473 {
entry:
  %retval = alloca i1, align 1
  %event.addr = alloca i64, align 8
  %ptr.addr = alloca i8*, align 8
  %info = alloca %struct.netdev_notifier_changeupper_info*, align 8
  store i64 %event, i64* %event.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %event.addr, metadata !20476, metadata !DIExpression()), !dbg !20477
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !20478, metadata !DIExpression()), !dbg !20479
  call void @llvm.dbg.declare(metadata %struct.netdev_notifier_changeupper_info** %info, metadata !20480, metadata !DIExpression()), !dbg !20481
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !20482
  %1 = bitcast i8* %0 to %struct.netdev_notifier_changeupper_info*, !dbg !20482
  store %struct.netdev_notifier_changeupper_info* %1, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !20481
  %2 = load i64, i64* %event.addr, align 8, !dbg !20483
  %cmp = icmp ne i64 %2, 26, !dbg !20485
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !20486

land.lhs.true:                                    ; preds = %entry
  %3 = load i64, i64* %event.addr, align 8, !dbg !20487
  %cmp1 = icmp ne i64 %3, 21, !dbg !20488
  br i1 %cmp1, label %if.then, label %if.end, !dbg !20489

if.then:                                          ; preds = %land.lhs.true
  store i1 false, i1* %retval, align 1, !dbg !20490
  br label %return, !dbg !20490

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.netdev_notifier_changeupper_info*, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !20491
  %upper_dev = getelementptr inbounds %struct.netdev_notifier_changeupper_info, %struct.netdev_notifier_changeupper_info* %4, i32 0, i32 1, !dbg !20492
  %5 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !20492
  %call = call zeroext i1 @netif_is_l3_master(%struct.net_device* %5) #9, !dbg !20493
  store i1 %call, i1* %retval, align 1, !dbg !20494
  br label %return, !dbg !20494

return:                                           ; preds = %if.end, %if.then
  %6 = load i1, i1* %retval, align 1, !dbg !20495
  ret i1 %6, !dbg !20495
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_netdevice_vrf_event(%struct.net_device*, i64, %struct.netdev_notifier_changeupper_info*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_netdevice_port_event(%struct.net_device* %lower_dev, %struct.net_device* %port_dev, i64 %event, i8* %ptr) #0 !dbg !20496 {
entry:
  %retval = alloca i32, align 4
  %lower_dev.addr = alloca %struct.net_device*, align 8
  %port_dev.addr = alloca %struct.net_device*, align 8
  %event.addr = alloca i64, align 8
  %ptr.addr = alloca i8*, align 8
  store %struct.net_device* %lower_dev, %struct.net_device** %lower_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %lower_dev.addr, metadata !20497, metadata !DIExpression()), !dbg !20498
  store %struct.net_device* %port_dev, %struct.net_device** %port_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %port_dev.addr, metadata !20499, metadata !DIExpression()), !dbg !20500
  store i64 %event, i64* %event.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %event.addr, metadata !20501, metadata !DIExpression()), !dbg !20502
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !20503, metadata !DIExpression()), !dbg !20504
  %0 = load i64, i64* %event.addr, align 8, !dbg !20505
  switch i64 %0, label %sw.epilog [
    i64 26, label %sw.bb
    i64 21, label %sw.bb
    i64 27, label %sw.bb1
  ], !dbg !20506

sw.bb:                                            ; preds = %entry, %entry
  %1 = load %struct.net_device*, %struct.net_device** %lower_dev.addr, align 8, !dbg !20507
  %2 = load %struct.net_device*, %struct.net_device** %port_dev.addr, align 8, !dbg !20509
  %3 = load i64, i64* %event.addr, align 8, !dbg !20510
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !20511
  %call = call i32 @mlxsw_sp_netdevice_port_upper_event(%struct.net_device* %1, %struct.net_device* %2, i64 %3, i8* %4) #9, !dbg !20512
  store i32 %call, i32* %retval, align 4, !dbg !20513
  br label %return, !dbg !20513

sw.bb1:                                           ; preds = %entry
  %5 = load %struct.net_device*, %struct.net_device** %port_dev.addr, align 8, !dbg !20514
  %6 = load i64, i64* %event.addr, align 8, !dbg !20515
  %7 = load i8*, i8** %ptr.addr, align 8, !dbg !20516
  %call2 = call i32 @mlxsw_sp_netdevice_port_lower_event(%struct.net_device* %5, i64 %6, i8* %7) #9, !dbg !20517
  store i32 %call2, i32* %retval, align 4, !dbg !20518
  br label %return, !dbg !20518

sw.epilog:                                        ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !20519
  br label %return, !dbg !20519

return:                                           ; preds = %sw.epilog, %sw.bb1, %sw.bb
  %8 = load i32, i32* %retval, align 4, !dbg !20520
  ret i32 %8, !dbg !20520
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_is_lag_master(%struct.net_device* %dev) #0 !dbg !20521 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !20522, metadata !DIExpression()), !dbg !20523
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20524
  %call = call zeroext i1 @netif_is_bond_master(%struct.net_device* %0) #9, !dbg !20525
  br i1 %call, label %lor.end, label %lor.rhs, !dbg !20526

lor.rhs:                                          ; preds = %entry
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20527
  %call1 = call zeroext i1 @netif_is_team_master(%struct.net_device* %1) #9, !dbg !20528
  br label %lor.end, !dbg !20526

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %call1, %lor.rhs ]
  ret i1 %2, !dbg !20529
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_netdevice_lag_event(%struct.net_device* %lag_dev, i64 %event, i8* %ptr) #0 !dbg !20530 {
entry:
  %retval = alloca i32, align 4
  %lag_dev.addr = alloca %struct.net_device*, align 8
  %event.addr = alloca i64, align 8
  %ptr.addr = alloca i8*, align 8
  %dev = alloca %struct.net_device*, align 8
  %iter = alloca %struct.list_head*, align 8
  %ret = alloca i32, align 4
  store %struct.net_device* %lag_dev, %struct.net_device** %lag_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %lag_dev.addr, metadata !20531, metadata !DIExpression()), !dbg !20532
  store i64 %event, i64* %event.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %event.addr, metadata !20533, metadata !DIExpression()), !dbg !20534
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !20535, metadata !DIExpression()), !dbg !20536
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !20537, metadata !DIExpression()), !dbg !20538
  call void @llvm.dbg.declare(metadata %struct.list_head** %iter, metadata !20539, metadata !DIExpression()), !dbg !20540
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !20541, metadata !DIExpression()), !dbg !20542
  %0 = load %struct.net_device*, %struct.net_device** %lag_dev.addr, align 8, !dbg !20543
  %adj_list = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 14, !dbg !20543
  %lower = getelementptr inbounds %struct.anon, %struct.anon* %adj_list, i32 0, i32 1, !dbg !20543
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %lower, i32 0, i32 0, !dbg !20543
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !20543
  store %struct.list_head* %1, %struct.list_head** %iter, align 8, !dbg !20543
  %2 = load %struct.net_device*, %struct.net_device** %lag_dev.addr, align 8, !dbg !20543
  %call = call i8* @netdev_lower_get_next(%struct.net_device* %2, %struct.list_head** %iter) #9, !dbg !20543
  %3 = bitcast i8* %call to %struct.net_device*, !dbg !20543
  store %struct.net_device* %3, %struct.net_device** %dev, align 8, !dbg !20543
  br label %for.cond, !dbg !20543

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20545
  %tobool = icmp ne %struct.net_device* %4, null, !dbg !20543
  br i1 %tobool, label %for.body, label %for.end, !dbg !20543

for.body:                                         ; preds = %for.cond
  %5 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20547
  %call1 = call zeroext i1 @mlxsw_sp_port_dev_check(%struct.net_device* %5) #9, !dbg !20550
  br i1 %call1, label %if.then, label %if.end5, !dbg !20551

if.then:                                          ; preds = %for.body
  %6 = load %struct.net_device*, %struct.net_device** %lag_dev.addr, align 8, !dbg !20552
  %7 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20554
  %8 = load i64, i64* %event.addr, align 8, !dbg !20555
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !20556
  %call2 = call i32 @mlxsw_sp_netdevice_port_event(%struct.net_device* %6, %struct.net_device* %7, i64 %8, i8* %9) #9, !dbg !20557
  store i32 %call2, i32* %ret, align 4, !dbg !20558
  %10 = load i32, i32* %ret, align 4, !dbg !20559
  %tobool3 = icmp ne i32 %10, 0, !dbg !20559
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !20561

if.then4:                                         ; preds = %if.then
  %11 = load i32, i32* %ret, align 4, !dbg !20562
  store i32 %11, i32* %retval, align 4, !dbg !20563
  br label %return, !dbg !20563

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !20564

if.end5:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !20565

for.inc:                                          ; preds = %if.end5
  %12 = load %struct.net_device*, %struct.net_device** %lag_dev.addr, align 8, !dbg !20545
  %call6 = call i8* @netdev_lower_get_next(%struct.net_device* %12, %struct.list_head** %iter) #9, !dbg !20545
  %13 = bitcast i8* %call6 to %struct.net_device*, !dbg !20545
  store %struct.net_device* %13, %struct.net_device** %dev, align 8, !dbg !20545
  br label %for.cond, !dbg !20545, !llvm.loop !20566

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !20568
  br label %return, !dbg !20568

return:                                           ; preds = %for.end, %if.then4
  %14 = load i32, i32* %retval, align 4, !dbg !20569
  ret i32 %14, !dbg !20569
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_vlan_dev(%struct.net_device* %dev) #0 !dbg !20570 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !20572, metadata !DIExpression()), !dbg !20573
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20574
  %priv_flags = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 37, !dbg !20575
  %1 = load i32, i32* %priv_flags, align 4, !dbg !20575
  %and = and i32 %1, 1, !dbg !20576
  %tobool = icmp ne i32 %and, 0, !dbg !20574
  ret i1 %tobool, !dbg !20577
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_netdevice_vlan_event(%struct.net_device* %vlan_dev, i64 %event, i8* %ptr) #0 !dbg !20578 {
entry:
  %retval = alloca i32, align 4
  %vlan_dev.addr = alloca %struct.net_device*, align 8
  %event.addr = alloca i64, align 8
  %ptr.addr = alloca i8*, align 8
  %real_dev = alloca %struct.net_device*, align 8
  %vid = alloca i16, align 2
  store %struct.net_device* %vlan_dev, %struct.net_device** %vlan_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %vlan_dev.addr, metadata !20579, metadata !DIExpression()), !dbg !20580
  store i64 %event, i64* %event.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %event.addr, metadata !20581, metadata !DIExpression()), !dbg !20582
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !20583, metadata !DIExpression()), !dbg !20584
  call void @llvm.dbg.declare(metadata %struct.net_device** %real_dev, metadata !20585, metadata !DIExpression()), !dbg !20586
  %0 = load %struct.net_device*, %struct.net_device** %vlan_dev.addr, align 8, !dbg !20587
  %call = call %struct.net_device* @vlan_dev_real_dev(%struct.net_device* %0) #9, !dbg !20588
  store %struct.net_device* %call, %struct.net_device** %real_dev, align 8, !dbg !20586
  call void @llvm.dbg.declare(metadata i16* %vid, metadata !20589, metadata !DIExpression()), !dbg !20590
  %1 = load %struct.net_device*, %struct.net_device** %vlan_dev.addr, align 8, !dbg !20591
  %call1 = call zeroext i16 @vlan_dev_vlan_id(%struct.net_device* %1) #9, !dbg !20592
  store i16 %call1, i16* %vid, align 2, !dbg !20590
  %2 = load %struct.net_device*, %struct.net_device** %real_dev, align 8, !dbg !20593
  %call2 = call zeroext i1 @mlxsw_sp_port_dev_check(%struct.net_device* %2) #9, !dbg !20595
  br i1 %call2, label %if.then, label %if.else, !dbg !20596

if.then:                                          ; preds = %entry
  %3 = load %struct.net_device*, %struct.net_device** %vlan_dev.addr, align 8, !dbg !20597
  %4 = load %struct.net_device*, %struct.net_device** %real_dev, align 8, !dbg !20598
  %5 = load i64, i64* %event.addr, align 8, !dbg !20599
  %6 = load i8*, i8** %ptr.addr, align 8, !dbg !20600
  %7 = load i16, i16* %vid, align 2, !dbg !20601
  %call3 = call i32 @mlxsw_sp_netdevice_port_vlan_event(%struct.net_device* %3, %struct.net_device* %4, i64 %5, i8* %6, i16 zeroext %7) #9, !dbg !20602
  store i32 %call3, i32* %retval, align 4, !dbg !20603
  br label %return, !dbg !20603

if.else:                                          ; preds = %entry
  %8 = load %struct.net_device*, %struct.net_device** %real_dev, align 8, !dbg !20604
  %call4 = call zeroext i1 @netif_is_lag_master(%struct.net_device* %8) #9, !dbg !20606
  br i1 %call4, label %if.then5, label %if.else7, !dbg !20607

if.then5:                                         ; preds = %if.else
  %9 = load %struct.net_device*, %struct.net_device** %vlan_dev.addr, align 8, !dbg !20608
  %10 = load %struct.net_device*, %struct.net_device** %real_dev, align 8, !dbg !20609
  %11 = load i64, i64* %event.addr, align 8, !dbg !20610
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !20611
  %13 = load i16, i16* %vid, align 2, !dbg !20612
  %call6 = call i32 @mlxsw_sp_netdevice_lag_port_vlan_event(%struct.net_device* %9, %struct.net_device* %10, i64 %11, i8* %12, i16 zeroext %13) #9, !dbg !20613
  store i32 %call6, i32* %retval, align 4, !dbg !20614
  br label %return, !dbg !20614

if.else7:                                         ; preds = %if.else
  %14 = load %struct.net_device*, %struct.net_device** %real_dev, align 8, !dbg !20615
  %call8 = call zeroext i1 @netif_is_bridge_master(%struct.net_device* %14) #9, !dbg !20617
  br i1 %call8, label %if.then9, label %if.end, !dbg !20618

if.then9:                                         ; preds = %if.else7
  %15 = load %struct.net_device*, %struct.net_device** %vlan_dev.addr, align 8, !dbg !20619
  %16 = load %struct.net_device*, %struct.net_device** %real_dev, align 8, !dbg !20620
  %17 = load i64, i64* %event.addr, align 8, !dbg !20621
  %18 = load i8*, i8** %ptr.addr, align 8, !dbg !20622
  %19 = load i16, i16* %vid, align 2, !dbg !20623
  %call10 = call i32 @mlxsw_sp_netdevice_bridge_vlan_event(%struct.net_device* %15, %struct.net_device* %16, i64 %17, i8* %18, i16 zeroext %19) #9, !dbg !20624
  store i32 %call10, i32* %retval, align 4, !dbg !20625
  br label %return, !dbg !20625

if.end:                                           ; preds = %if.else7
  br label %if.end11

if.end11:                                         ; preds = %if.end
  br label %if.end12

if.end12:                                         ; preds = %if.end11
  store i32 0, i32* %retval, align 4, !dbg !20626
  br label %return, !dbg !20626

return:                                           ; preds = %if.end12, %if.then9, %if.then5, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !20627
  ret i32 %20, !dbg !20627
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_is_bridge_master(%struct.net_device* %dev) #0 !dbg !20628 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !20629, metadata !DIExpression()), !dbg !20630
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20631
  %priv_flags = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 37, !dbg !20632
  %1 = load i32, i32* %priv_flags, align 4, !dbg !20632
  %and = and i32 %1, 2, !dbg !20633
  %tobool = icmp ne i32 %and, 0, !dbg !20631
  ret i1 %tobool, !dbg !20634
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_netdevice_bridge_event(%struct.net_device* %br_dev, i64 %event, i8* %ptr) #0 !dbg !12393 {
entry:
  %retval = alloca i32, align 4
  %br_dev.addr = alloca %struct.net_device*, align 8
  %event.addr = alloca i64, align 8
  %ptr.addr = alloca i8*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %info = alloca %struct.netdev_notifier_changeupper_info*, align 8
  %extack = alloca %struct.netlink_ext_ack*, align 8
  %upper_dev = alloca %struct.net_device*, align 8
  %__extack = alloca %struct.netlink_ext_ack*, align 8
  %__extack19 = alloca %struct.netlink_ext_ack*, align 8
  store %struct.net_device* %br_dev, %struct.net_device** %br_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %br_dev.addr, metadata !20635, metadata !DIExpression()), !dbg !20636
  store i64 %event, i64* %event.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %event.addr, metadata !20637, metadata !DIExpression()), !dbg !20638
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !20639, metadata !DIExpression()), !dbg !20640
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !20641, metadata !DIExpression()), !dbg !20642
  %0 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !20643
  %call = call %struct.mlxsw_sp* @mlxsw_sp_lower_get(%struct.net_device* %0) #9, !dbg !20644
  store %struct.mlxsw_sp* %call, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !20642
  call void @llvm.dbg.declare(metadata %struct.netdev_notifier_changeupper_info** %info, metadata !20645, metadata !DIExpression()), !dbg !20646
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !20647
  %2 = bitcast i8* %1 to %struct.netdev_notifier_changeupper_info*, !dbg !20647
  store %struct.netdev_notifier_changeupper_info* %2, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !20646
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack, metadata !20648, metadata !DIExpression()), !dbg !20649
  call void @llvm.dbg.declare(metadata %struct.net_device** %upper_dev, metadata !20650, metadata !DIExpression()), !dbg !20651
  %3 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !20652
  %tobool = icmp ne %struct.mlxsw_sp* %3, null, !dbg !20652
  br i1 %tobool, label %if.end, label %if.then, !dbg !20654

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !20655
  br label %return, !dbg !20655

if.end:                                           ; preds = %entry
  %4 = load %struct.netdev_notifier_changeupper_info*, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !20656
  %info1 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, %struct.netdev_notifier_changeupper_info* %4, i32 0, i32 0, !dbg !20657
  %call2 = call %struct.netlink_ext_ack* @netdev_notifier_info_to_extack(%struct.netdev_notifier_info* %info1) #9, !dbg !20658
  store %struct.netlink_ext_ack* %call2, %struct.netlink_ext_ack** %extack, align 8, !dbg !20659
  %5 = load i64, i64* %event.addr, align 8, !dbg !20660
  switch i64 %5, label %sw.epilog [
    i64 26, label %sw.bb
    i64 21, label %sw.bb26
  ], !dbg !20661

sw.bb:                                            ; preds = %if.end
  %6 = load %struct.netdev_notifier_changeupper_info*, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !20662
  %upper_dev3 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, %struct.netdev_notifier_changeupper_info* %6, i32 0, i32 1, !dbg !20664
  %7 = load %struct.net_device*, %struct.net_device** %upper_dev3, align 8, !dbg !20664
  store %struct.net_device* %7, %struct.net_device** %upper_dev, align 8, !dbg !20665
  %8 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !20666
  %call4 = call zeroext i1 @is_vlan_dev(%struct.net_device* %8) #9, !dbg !20668
  br i1 %call4, label %if.end10, label %land.lhs.true, !dbg !20669

land.lhs.true:                                    ; preds = %sw.bb
  %9 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !20670
  %call5 = call zeroext i1 @netif_is_macvlan(%struct.net_device* %9) #9, !dbg !20671
  br i1 %call5, label %if.end10, label %if.then6, !dbg !20672

if.then6:                                         ; preds = %land.lhs.true
  br label %do.body, !dbg !20673

do.body:                                          ; preds = %if.then6
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack, metadata !20675, metadata !DIExpression()), !dbg !20677
  %10 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack, align 8, !dbg !20677
  store %struct.netlink_ext_ack* %10, %struct.netlink_ext_ack** %__extack, align 8, !dbg !20677
  %11 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !20678
  %tobool7 = icmp ne %struct.netlink_ext_ack* %11, null, !dbg !20678
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !20677

if.then8:                                         ; preds = %do.body
  %12 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !20678
  %_msg = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %12, i32 0, i32 0, !dbg !20678
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @mlxsw_sp_netdevice_bridge_event.__msg, i64 0, i64 0), i8** %_msg, align 8, !dbg !20678
  br label %if.end9, !dbg !20678

if.end9:                                          ; preds = %if.then8, %do.body
  br label %do.end, !dbg !20677

do.end:                                           ; preds = %if.end9
  store i32 -95, i32* %retval, align 4, !dbg !20680
  br label %return, !dbg !20680

if.end10:                                         ; preds = %land.lhs.true, %sw.bb
  %13 = load %struct.netdev_notifier_changeupper_info*, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !20681
  %linking = getelementptr inbounds %struct.netdev_notifier_changeupper_info, %struct.netdev_notifier_changeupper_info* %13, i32 0, i32 3, !dbg !20683
  %14 = load i8, i8* %linking, align 1, !dbg !20683
  %tobool11 = trunc i8 %14 to i1, !dbg !20683
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !20684

if.then12:                                        ; preds = %if.end10
  br label %sw.epilog, !dbg !20685

if.end13:                                         ; preds = %if.end10
  %15 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !20686
  %call14 = call zeroext i1 @netif_is_macvlan(%struct.net_device* %15) #9, !dbg !20688
  br i1 %call14, label %land.lhs.true15, label %if.end25, !dbg !20689

land.lhs.true15:                                  ; preds = %if.end13
  %16 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !20690
  %17 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !20691
  %call16 = call zeroext i1 @mlxsw_sp_rif_exists(%struct.mlxsw_sp* %16, %struct.net_device* %17) #9, !dbg !20692
  br i1 %call16, label %if.end25, label %if.then17, !dbg !20693

if.then17:                                        ; preds = %land.lhs.true15
  br label %do.body18, !dbg !20694

do.body18:                                        ; preds = %if.then17
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack19, metadata !20696, metadata !DIExpression()), !dbg !20698
  %18 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack, align 8, !dbg !20698
  store %struct.netlink_ext_ack* %18, %struct.netlink_ext_ack** %__extack19, align 8, !dbg !20698
  %19 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack19, align 8, !dbg !20699
  %tobool20 = icmp ne %struct.netlink_ext_ack* %19, null, !dbg !20699
  br i1 %tobool20, label %if.then21, label %if.end23, !dbg !20698

if.then21:                                        ; preds = %do.body18
  %20 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack19, align 8, !dbg !20699
  %_msg22 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %20, i32 0, i32 0, !dbg !20699
  store i8* getelementptr inbounds ([70 x i8], [70 x i8]* @mlxsw_sp_netdevice_bridge_event.__msg.271, i64 0, i64 0), i8** %_msg22, align 8, !dbg !20699
  br label %if.end23, !dbg !20699

if.end23:                                         ; preds = %if.then21, %do.body18
  br label %do.end24, !dbg !20698

do.end24:                                         ; preds = %if.end23
  store i32 -95, i32* %retval, align 4, !dbg !20701
  br label %return, !dbg !20701

if.end25:                                         ; preds = %land.lhs.true15, %if.end13
  br label %sw.epilog, !dbg !20702

sw.bb26:                                          ; preds = %if.end
  %21 = load %struct.netdev_notifier_changeupper_info*, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !20703
  %upper_dev27 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, %struct.netdev_notifier_changeupper_info* %21, i32 0, i32 1, !dbg !20704
  %22 = load %struct.net_device*, %struct.net_device** %upper_dev27, align 8, !dbg !20704
  store %struct.net_device* %22, %struct.net_device** %upper_dev, align 8, !dbg !20705
  %23 = load %struct.netdev_notifier_changeupper_info*, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !20706
  %linking28 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, %struct.netdev_notifier_changeupper_info* %23, i32 0, i32 3, !dbg !20708
  %24 = load i8, i8* %linking28, align 1, !dbg !20708
  %tobool29 = trunc i8 %24 to i1, !dbg !20708
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !20709

if.then30:                                        ; preds = %sw.bb26
  br label %sw.epilog, !dbg !20710

if.end31:                                         ; preds = %sw.bb26
  %25 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !20711
  %call32 = call zeroext i1 @is_vlan_dev(%struct.net_device* %25) #9, !dbg !20713
  br i1 %call32, label %if.then33, label %if.end34, !dbg !20714

if.then33:                                        ; preds = %if.end31
  %26 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !20715
  %27 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !20716
  call void @mlxsw_sp_rif_destroy_by_dev(%struct.mlxsw_sp* %26, %struct.net_device* %27) #9, !dbg !20717
  br label %if.end34, !dbg !20717

if.end34:                                         ; preds = %if.then33, %if.end31
  %28 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !20718
  %call35 = call zeroext i1 @netif_is_macvlan(%struct.net_device* %28) #9, !dbg !20720
  br i1 %call35, label %if.then36, label %if.end37, !dbg !20721

if.then36:                                        ; preds = %if.end34
  %29 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !20722
  %30 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !20723
  call void @mlxsw_sp_rif_macvlan_del(%struct.mlxsw_sp* %29, %struct.net_device* %30) #9, !dbg !20724
  br label %if.end37, !dbg !20724

if.end37:                                         ; preds = %if.then36, %if.end34
  br label %sw.epilog, !dbg !20725

sw.epilog:                                        ; preds = %if.end, %if.end37, %if.then30, %if.end25, %if.then12
  store i32 0, i32* %retval, align 4, !dbg !20726
  br label %return, !dbg !20726

return:                                           ; preds = %sw.epilog, %do.end24, %do.end, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !20727
  ret i32 %31, !dbg !20727
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_is_macvlan(%struct.net_device* %dev) #0 !dbg !20728 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !20729, metadata !DIExpression()), !dbg !20730
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20731
  %priv_flags = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 37, !dbg !20732
  %1 = load i32, i32* %priv_flags, align 4, !dbg !20732
  %and = and i32 %1, 65536, !dbg !20733
  %tobool = icmp ne i32 %and, 0, !dbg !20731
  ret i1 %tobool, !dbg !20734
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_netdevice_macvlan_event(%struct.net_device* %macvlan_dev, i64 %event, i8* %ptr) #0 !dbg !12400 {
entry:
  %retval = alloca i32, align 4
  %macvlan_dev.addr = alloca %struct.net_device*, align 8
  %event.addr = alloca i64, align 8
  %ptr.addr = alloca i8*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %info = alloca %struct.netdev_notifier_changeupper_info*, align 8
  %extack = alloca %struct.netlink_ext_ack*, align 8
  %__extack = alloca %struct.netlink_ext_ack*, align 8
  store %struct.net_device* %macvlan_dev, %struct.net_device** %macvlan_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %macvlan_dev.addr, metadata !20735, metadata !DIExpression()), !dbg !20736
  store i64 %event, i64* %event.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %event.addr, metadata !20737, metadata !DIExpression()), !dbg !20738
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !20739, metadata !DIExpression()), !dbg !20740
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !20741, metadata !DIExpression()), !dbg !20742
  %0 = load %struct.net_device*, %struct.net_device** %macvlan_dev.addr, align 8, !dbg !20743
  %call = call %struct.mlxsw_sp* @mlxsw_sp_lower_get(%struct.net_device* %0) #9, !dbg !20744
  store %struct.mlxsw_sp* %call, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !20742
  call void @llvm.dbg.declare(metadata %struct.netdev_notifier_changeupper_info** %info, metadata !20745, metadata !DIExpression()), !dbg !20746
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !20747
  %2 = bitcast i8* %1 to %struct.netdev_notifier_changeupper_info*, !dbg !20747
  store %struct.netdev_notifier_changeupper_info* %2, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !20746
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack, metadata !20748, metadata !DIExpression()), !dbg !20749
  %3 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !20750
  %tobool = icmp ne %struct.mlxsw_sp* %3, null, !dbg !20750
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !20752

lor.lhs.false:                                    ; preds = %entry
  %4 = load i64, i64* %event.addr, align 8, !dbg !20753
  %cmp = icmp ne i64 %4, 26, !dbg !20754
  br i1 %cmp, label %if.then, label %if.end, !dbg !20755

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !20756
  br label %return, !dbg !20756

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.netdev_notifier_changeupper_info*, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !20757
  %info1 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, %struct.netdev_notifier_changeupper_info* %5, i32 0, i32 0, !dbg !20758
  %call2 = call %struct.netlink_ext_ack* @netdev_notifier_info_to_extack(%struct.netdev_notifier_info* %info1) #9, !dbg !20759
  store %struct.netlink_ext_ack* %call2, %struct.netlink_ext_ack** %extack, align 8, !dbg !20760
  br label %do.body, !dbg !20761

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack, metadata !20762, metadata !DIExpression()), !dbg !20764
  %6 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack, align 8, !dbg !20764
  store %struct.netlink_ext_ack* %6, %struct.netlink_ext_ack** %__extack, align 8, !dbg !20764
  %7 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !20765
  %tobool3 = icmp ne %struct.netlink_ext_ack* %7, null, !dbg !20765
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !20764

if.then4:                                         ; preds = %do.body
  %8 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !20765
  %_msg = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %8, i32 0, i32 0, !dbg !20765
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @mlxsw_sp_netdevice_macvlan_event.__msg, i64 0, i64 0), i8** %_msg, align 8, !dbg !20765
  br label %if.end5, !dbg !20765

if.end5:                                          ; preds = %if.then4, %do.body
  br label %do.end, !dbg !20764

do.end:                                           ; preds = %if.end5
  store i32 -95, i32* %retval, align 4, !dbg !20767
  br label %return, !dbg !20767

return:                                           ; preds = %do.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !20768
  ret i32 %9, !dbg !20768
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @notifier_from_errno(i32 %err) #0 !dbg !20769 {
entry:
  %retval = alloca i32, align 4
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !20770, metadata !DIExpression()), !dbg !20771
  %0 = load i32, i32* %err.addr, align 4, !dbg !20772
  %tobool = icmp ne i32 %0, 0, !dbg !20772
  br i1 %tobool, label %if.then, label %if.end, !dbg !20774

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !20775
  %sub = sub i32 1, %1, !dbg !20776
  %or = or i32 32768, %sub, !dbg !20777
  store i32 %or, i32* %retval, align 4, !dbg !20778
  br label %return, !dbg !20778

if.end:                                           ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !20779
  br label %return, !dbg !20779

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !20780
  ret i32 %2, !dbg !20780
}

; Function Attrs: noredzone
declare dso_local i32 @strcmp(i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.netlink_ext_ack* @netdev_notifier_info_to_extack(%struct.netdev_notifier_info* %info) #0 !dbg !20781 {
entry:
  %info.addr = alloca %struct.netdev_notifier_info*, align 8
  store %struct.netdev_notifier_info* %info, %struct.netdev_notifier_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_notifier_info** %info.addr, metadata !20784, metadata !DIExpression()), !dbg !20785
  %0 = load %struct.netdev_notifier_info*, %struct.netdev_notifier_info** %info.addr, align 8, !dbg !20786
  %extack = getelementptr inbounds %struct.netdev_notifier_info, %struct.netdev_notifier_info* %0, i32 0, i32 1, !dbg !20787
  %1 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack, align 8, !dbg !20787
  ret %struct.netlink_ext_ack* %1, !dbg !20788
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mlxsw_sp_bridge_vxlan_is_valid(%struct.net_device* %br_dev, %struct.netlink_ext_ack* %extack) #0 !dbg !12288 {
entry:
  %retval = alloca i1, align 1
  %br_dev.addr = alloca %struct.net_device*, align 8
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %__extack = alloca %struct.netlink_ext_ack*, align 8
  %__extack7 = alloca %struct.netlink_ext_ack*, align 8
  %__extack19 = alloca %struct.netlink_ext_ack*, align 8
  store %struct.net_device* %br_dev, %struct.net_device** %br_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %br_dev.addr, metadata !20789, metadata !DIExpression()), !dbg !20790
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !20791, metadata !DIExpression()), !dbg !20792
  %0 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !20793
  %call = call zeroext i1 @br_multicast_enabled(%struct.net_device* %0) #9, !dbg !20795
  br i1 %call, label %if.then, label %if.end2, !dbg !20796

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !20797

do.body:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack, metadata !20799, metadata !DIExpression()), !dbg !20801
  %1 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !20801
  store %struct.netlink_ext_ack* %1, %struct.netlink_ext_ack** %__extack, align 8, !dbg !20801
  %2 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !20802
  %tobool = icmp ne %struct.netlink_ext_ack* %2, null, !dbg !20802
  br i1 %tobool, label %if.then1, label %if.end, !dbg !20801

if.then1:                                         ; preds = %do.body
  %3 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !20802
  %_msg = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %3, i32 0, i32 0, !dbg !20802
  store i8* getelementptr inbounds ([77 x i8], [77 x i8]* @mlxsw_sp_bridge_vxlan_is_valid.__msg, i64 0, i64 0), i8** %_msg, align 8, !dbg !20802
  br label %if.end, !dbg !20802

if.end:                                           ; preds = %if.then1, %do.body
  br label %do.end, !dbg !20801

do.end:                                           ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !20804
  br label %return, !dbg !20804

if.end2:                                          ; preds = %entry
  %4 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !20805
  %call3 = call zeroext i1 @br_vlan_enabled(%struct.net_device* %4) #9, !dbg !20807
  br i1 %call3, label %if.end13, label %land.lhs.true, !dbg !20808

land.lhs.true:                                    ; preds = %if.end2
  %5 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !20809
  %call4 = call zeroext i1 @mlxsw_sp_bridge_has_multiple_vxlans(%struct.net_device* %5) #9, !dbg !20810
  br i1 %call4, label %if.then5, label %if.end13, !dbg !20811

if.then5:                                         ; preds = %land.lhs.true
  br label %do.body6, !dbg !20812

do.body6:                                         ; preds = %if.then5
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack7, metadata !20814, metadata !DIExpression()), !dbg !20816
  %6 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !20816
  store %struct.netlink_ext_ack* %6, %struct.netlink_ext_ack** %__extack7, align 8, !dbg !20816
  %7 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack7, align 8, !dbg !20817
  %tobool8 = icmp ne %struct.netlink_ext_ack* %7, null, !dbg !20817
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !20816

if.then9:                                         ; preds = %do.body6
  %8 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack7, align 8, !dbg !20817
  %_msg10 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %8, i32 0, i32 0, !dbg !20817
  store i8* getelementptr inbounds ([82 x i8], [82 x i8]* @mlxsw_sp_bridge_vxlan_is_valid.__msg.240, i64 0, i64 0), i8** %_msg10, align 8, !dbg !20817
  br label %if.end11, !dbg !20817

if.end11:                                         ; preds = %if.then9, %do.body6
  br label %do.end12, !dbg !20816

do.end12:                                         ; preds = %if.end11
  store i1 false, i1* %retval, align 1, !dbg !20819
  br label %return, !dbg !20819

if.end13:                                         ; preds = %land.lhs.true, %if.end2
  %9 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !20820
  %call14 = call zeroext i1 @br_vlan_enabled(%struct.net_device* %9) #9, !dbg !20822
  br i1 %call14, label %land.lhs.true15, label %if.end25, !dbg !20823

land.lhs.true15:                                  ; preds = %if.end13
  %10 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !20824
  %call16 = call zeroext i1 @mlxsw_sp_bridge_vxlan_vlan_is_valid(%struct.net_device* %10) #9, !dbg !20825
  br i1 %call16, label %if.end25, label %if.then17, !dbg !20826

if.then17:                                        ; preds = %land.lhs.true15
  br label %do.body18, !dbg !20827

do.body18:                                        ; preds = %if.then17
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack19, metadata !20829, metadata !DIExpression()), !dbg !20831
  %11 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !20831
  store %struct.netlink_ext_ack* %11, %struct.netlink_ext_ack** %__extack19, align 8, !dbg !20831
  %12 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack19, align 8, !dbg !20832
  %tobool20 = icmp ne %struct.netlink_ext_ack* %12, null, !dbg !20832
  br i1 %tobool20, label %if.then21, label %if.end23, !dbg !20831

if.then21:                                        ; preds = %do.body18
  %13 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack19, align 8, !dbg !20832
  %_msg22 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %13, i32 0, i32 0, !dbg !20832
  store i8* getelementptr inbounds ([93 x i8], [93 x i8]* @mlxsw_sp_bridge_vxlan_is_valid.__msg.241, i64 0, i64 0), i8** %_msg22, align 8, !dbg !20832
  br label %if.end23, !dbg !20832

if.end23:                                         ; preds = %if.then21, %do.body18
  br label %do.end24, !dbg !20831

do.end24:                                         ; preds = %if.end23
  store i1 false, i1* %retval, align 1, !dbg !20834
  br label %return, !dbg !20834

if.end25:                                         ; preds = %land.lhs.true15, %if.end13
  store i1 true, i1* %retval, align 1, !dbg !20835
  br label %return, !dbg !20835

return:                                           ; preds = %if.end25, %do.end24, %do.end12, %do.end
  %14 = load i1, i1* %retval, align 1, !dbg !20836
  ret i1 %14, !dbg !20836
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @br_vlan_enabled(%struct.net_device* %dev) #0 !dbg !20837 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !20839, metadata !DIExpression()), !dbg !20840
  ret i1 false, !dbg !20841
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_bridge_vxlan_join(%struct.mlxsw_sp*, %struct.net_device*, %struct.net_device*, i16 zeroext, %struct.netlink_ext_ack*) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_bridge_vxlan_leave(%struct.mlxsw_sp*, %struct.net_device*) #2

; Function Attrs: noredzone
declare dso_local %struct.net_device* @netdev_master_upper_dev_get(%struct.net_device*) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @br_multicast_enabled(%struct.net_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mlxsw_sp_bridge_has_multiple_vxlans(%struct.net_device* %br_dev) #0 !dbg !20842 {
entry:
  %br_dev.addr = alloca %struct.net_device*, align 8
  %num_vxlans = alloca i32, align 4
  %dev = alloca %struct.net_device*, align 8
  %iter = alloca %struct.list_head*, align 8
  store %struct.net_device* %br_dev, %struct.net_device** %br_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %br_dev.addr, metadata !20845, metadata !DIExpression()), !dbg !20846
  call void @llvm.dbg.declare(metadata i32* %num_vxlans, metadata !20847, metadata !DIExpression()), !dbg !20848
  store i32 0, i32* %num_vxlans, align 4, !dbg !20848
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !20849, metadata !DIExpression()), !dbg !20850
  call void @llvm.dbg.declare(metadata %struct.list_head** %iter, metadata !20851, metadata !DIExpression()), !dbg !20852
  %0 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !20853
  %adj_list = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 14, !dbg !20853
  %lower = getelementptr inbounds %struct.anon, %struct.anon* %adj_list, i32 0, i32 1, !dbg !20853
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %lower, i32 0, i32 0, !dbg !20853
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !20853
  store %struct.list_head* %1, %struct.list_head** %iter, align 8, !dbg !20853
  %2 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !20853
  %call = call i8* @netdev_lower_get_next(%struct.net_device* %2, %struct.list_head** %iter) #9, !dbg !20853
  %3 = bitcast i8* %call to %struct.net_device*, !dbg !20853
  store %struct.net_device* %3, %struct.net_device** %dev, align 8, !dbg !20853
  br label %for.cond, !dbg !20853

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20855
  %tobool = icmp ne %struct.net_device* %4, null, !dbg !20853
  br i1 %tobool, label %for.body, label %for.end, !dbg !20853

for.body:                                         ; preds = %for.cond
  %5 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20857
  %call1 = call zeroext i1 @netif_is_vxlan(%struct.net_device* %5) #9, !dbg !20860
  br i1 %call1, label %if.then, label %if.end, !dbg !20861

if.then:                                          ; preds = %for.body
  %6 = load i32, i32* %num_vxlans, align 4, !dbg !20862
  %inc = add i32 %6, 1, !dbg !20862
  store i32 %inc, i32* %num_vxlans, align 4, !dbg !20862
  br label %if.end, !dbg !20863

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !20864

for.inc:                                          ; preds = %if.end
  %7 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !20855
  %call2 = call i8* @netdev_lower_get_next(%struct.net_device* %7, %struct.list_head** %iter) #9, !dbg !20855
  %8 = bitcast i8* %call2 to %struct.net_device*, !dbg !20855
  store %struct.net_device* %8, %struct.net_device** %dev, align 8, !dbg !20855
  br label %for.cond, !dbg !20855, !llvm.loop !20865

for.end:                                          ; preds = %for.cond
  %9 = load i32, i32* %num_vxlans, align 4, !dbg !20867
  %cmp = icmp ugt i32 %9, 1, !dbg !20868
  ret i1 %cmp, !dbg !20869
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mlxsw_sp_bridge_vxlan_vlan_is_valid(%struct.net_device* %br_dev) #0 !dbg !20870 {
entry:
  %retval = alloca i1, align 1
  %br_dev.addr = alloca %struct.net_device*, align 8
  %vlans = alloca [64 x i64], align 16
  %dev = alloca %struct.net_device*, align 8
  %iter = alloca %struct.list_head*, align 8
  %pvid = alloca i16, align 2
  %err = alloca i32, align 4
  store %struct.net_device* %br_dev, %struct.net_device** %br_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %br_dev.addr, metadata !20871, metadata !DIExpression()), !dbg !20872
  call void @llvm.dbg.declare(metadata [64 x i64]* %vlans, metadata !20873, metadata !DIExpression()), !dbg !20875
  %0 = bitcast [64 x i64]* %vlans to i8*, !dbg !20875
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 512, i1 false), !dbg !20875
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !20876, metadata !DIExpression()), !dbg !20877
  call void @llvm.dbg.declare(metadata %struct.list_head** %iter, metadata !20878, metadata !DIExpression()), !dbg !20879
  %1 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !20880
  %adj_list = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 14, !dbg !20880
  %lower = getelementptr inbounds %struct.anon, %struct.anon* %adj_list, i32 0, i32 1, !dbg !20880
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %lower, i32 0, i32 0, !dbg !20880
  %2 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !20880
  store %struct.list_head* %2, %struct.list_head** %iter, align 8, !dbg !20880
  %3 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !20880
  %call = call i8* @netdev_lower_get_next(%struct.net_device* %3, %struct.list_head** %iter) #9, !dbg !20880
  %4 = bitcast i8* %call to %struct.net_device*, !dbg !20880
  store %struct.net_device* %4, %struct.net_device** %dev, align 8, !dbg !20880
  br label %for.cond, !dbg !20880

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20882
  %tobool = icmp ne %struct.net_device* %5, null, !dbg !20880
  br i1 %tobool, label %for.body, label %for.end, !dbg !20880

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16* %pvid, metadata !20884, metadata !DIExpression()), !dbg !20886
  call void @llvm.dbg.declare(metadata i32* %err, metadata !20887, metadata !DIExpression()), !dbg !20888
  %6 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20889
  %call1 = call zeroext i1 @netif_is_vxlan(%struct.net_device* %6) #9, !dbg !20891
  br i1 %call1, label %if.end, label %if.then, !dbg !20892

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !20893

if.end:                                           ; preds = %for.body
  %7 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20894
  %call2 = call i32 @mlxsw_sp_vxlan_mapped_vid(%struct.net_device* %7, i16* %pvid) #9, !dbg !20895
  store i32 %call2, i32* %err, align 4, !dbg !20896
  %8 = load i32, i32* %err, align 4, !dbg !20897
  %tobool3 = icmp ne i32 %8, 0, !dbg !20897
  br i1 %tobool3, label %if.then5, label %lor.lhs.false, !dbg !20899

lor.lhs.false:                                    ; preds = %if.end
  %9 = load i16, i16* %pvid, align 2, !dbg !20900
  %tobool4 = icmp ne i16 %9, 0, !dbg !20900
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !20901

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  br label %for.inc, !dbg !20902

if.end6:                                          ; preds = %lor.lhs.false
  %10 = load i16, i16* %pvid, align 2, !dbg !20903
  %conv = zext i16 %10 to i64, !dbg !20903
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %vlans, i64 0, i64 0, !dbg !20905
  %call7 = call zeroext i1 @test_and_set_bit(i64 %conv, i64* %arraydecay) #9, !dbg !20906
  br i1 %call7, label %if.then8, label %if.end9, !dbg !20907

if.then8:                                         ; preds = %if.end6
  store i1 false, i1* %retval, align 1, !dbg !20908
  br label %return, !dbg !20908

if.end9:                                          ; preds = %if.end6
  br label %for.inc, !dbg !20909

for.inc:                                          ; preds = %if.end9, %if.then5, %if.then
  %11 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !20882
  %call10 = call i8* @netdev_lower_get_next(%struct.net_device* %11, %struct.list_head** %iter) #9, !dbg !20882
  %12 = bitcast i8* %call10 to %struct.net_device*, !dbg !20882
  store %struct.net_device* %12, %struct.net_device** %dev, align 8, !dbg !20882
  br label %for.cond, !dbg !20882, !llvm.loop !20910

for.end:                                          ; preds = %for.cond
  store i1 true, i1* %retval, align 1, !dbg !20912
  br label %return, !dbg !20912

return:                                           ; preds = %for.end, %if.then8
  %13 = load i1, i1* %retval, align 1, !dbg !20913
  ret i1 %13, !dbg !20913
}

; Function Attrs: noredzone
declare dso_local i8* @netdev_lower_get_next(%struct.net_device*, %struct.list_head**) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_vxlan_mapped_vid(%struct.net_device* %vxlan_dev, i16* %p_vid) #0 !dbg !20914 {
entry:
  %vxlan_dev.addr = alloca %struct.net_device*, align 8
  %p_vid.addr = alloca i16*, align 8
  %vinfo = alloca %struct.bridge_vlan_info, align 2
  %vid = alloca i16, align 2
  %err = alloca i32, align 4
  store %struct.net_device* %vxlan_dev, %struct.net_device** %vxlan_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %vxlan_dev.addr, metadata !20917, metadata !DIExpression()), !dbg !20918
  store i16* %p_vid, i16** %p_vid.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %p_vid.addr, metadata !20919, metadata !DIExpression()), !dbg !20920
  call void @llvm.dbg.declare(metadata %struct.bridge_vlan_info* %vinfo, metadata !20921, metadata !DIExpression()), !dbg !20927
  call void @llvm.dbg.declare(metadata i16* %vid, metadata !20928, metadata !DIExpression()), !dbg !20929
  store i16 0, i16* %vid, align 2, !dbg !20929
  call void @llvm.dbg.declare(metadata i32* %err, metadata !20930, metadata !DIExpression()), !dbg !20931
  %0 = load %struct.net_device*, %struct.net_device** %vxlan_dev.addr, align 8, !dbg !20932
  %call = call i32 @br_vlan_get_pvid(%struct.net_device* %0, i16* %vid) #9, !dbg !20933
  store i32 %call, i32* %err, align 4, !dbg !20934
  %1 = load i32, i32* %err, align 4, !dbg !20935
  %tobool = icmp ne i32 %1, 0, !dbg !20935
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !20937

lor.lhs.false:                                    ; preds = %entry
  %2 = load i16, i16* %vid, align 2, !dbg !20938
  %tobool1 = icmp ne i16 %2, 0, !dbg !20938
  br i1 %tobool1, label %if.end, label %if.then, !dbg !20939

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %out, !dbg !20940

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.net_device*, %struct.net_device** %vxlan_dev.addr, align 8, !dbg !20941
  %4 = load i16, i16* %vid, align 2, !dbg !20942
  %call2 = call i32 @br_vlan_get_info(%struct.net_device* %3, i16 zeroext %4, %struct.bridge_vlan_info* %vinfo) #9, !dbg !20943
  store i32 %call2, i32* %err, align 4, !dbg !20944
  %5 = load i32, i32* %err, align 4, !dbg !20945
  %tobool3 = icmp ne i32 %5, 0, !dbg !20945
  br i1 %tobool3, label %if.then6, label %lor.lhs.false4, !dbg !20947

lor.lhs.false4:                                   ; preds = %if.end
  %flags = getelementptr inbounds %struct.bridge_vlan_info, %struct.bridge_vlan_info* %vinfo, i32 0, i32 0, !dbg !20948
  %6 = load i16, i16* %flags, align 2, !dbg !20948
  %conv = zext i16 %6 to i32, !dbg !20949
  %and = and i32 %conv, 4, !dbg !20950
  %tobool5 = icmp ne i32 %and, 0, !dbg !20950
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !20951

if.then6:                                         ; preds = %lor.lhs.false4, %if.end
  store i16 0, i16* %vid, align 2, !dbg !20952
  br label %if.end7, !dbg !20953

if.end7:                                          ; preds = %if.then6, %lor.lhs.false4
  br label %out, !dbg !20954

out:                                              ; preds = %if.end7, %if.then
  call void @llvm.dbg.label(metadata !20955), !dbg !20956
  %7 = load i16, i16* %vid, align 2, !dbg !20957
  %8 = load i16*, i16** %p_vid.addr, align 8, !dbg !20958
  store i16 %7, i16* %8, align 2, !dbg !20959
  %9 = load i32, i32* %err, align 4, !dbg !20960
  ret i32 %9, !dbg !20961
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_set_bit(i64 %nr, i64* %addr) #0 !dbg !20962 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !20965, metadata !DIExpression()), !dbg !20967
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !20969, metadata !DIExpression()), !dbg !20970
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !20971, metadata !DIExpression()), !dbg !20973
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !20974, metadata !DIExpression()), !dbg !20976
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !20978, metadata !DIExpression()), !dbg !20979
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !20980, metadata !DIExpression()), !dbg !20981
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !20982, metadata !DIExpression()), !dbg !20983
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !20984
  %1 = load i64, i64* %nr.addr, align 8, !dbg !20985
  %div = sdiv i64 %1, 64, !dbg !20985
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !20986
  %2 = bitcast i64* %add.ptr to i8*, !dbg !20984
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !20987
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !20988
  %conv.i = trunc i64 %4 to i32, !dbg !20988
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !20989
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !20990
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !20990
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #12, !dbg !20990
  %7 = load i64, i64* %nr.addr, align 8, !dbg !20991
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !20992
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !20973
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !20973
  %11 = call i8 asm sideeffect " btsq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #10, !dbg !20973, !srcloc !20993
  store i8 %11, i8* %c.i, align 1, !dbg !20973
  %12 = load i8, i8* %c.i, align 1, !dbg !20973
  %tobool.i = trunc i8 %12 to i1, !dbg !20973
  %frombool.i = zext i1 %tobool.i to i8, !dbg !20973
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !20973
  %13 = load i8, i8* %tmp.i, align 1, !dbg !20973
  %tobool1.i = trunc i8 %13 to i1, !dbg !20973
  ret i1 %tobool1.i, !dbg !20994
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @br_vlan_get_pvid(%struct.net_device* %dev, i16* %p_pvid) #0 !dbg !20995 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %p_pvid.addr = alloca i16*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !20996, metadata !DIExpression()), !dbg !20997
  store i16* %p_pvid, i16** %p_pvid.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %p_pvid.addr, metadata !20998, metadata !DIExpression()), !dbg !20999
  ret i32 -22, !dbg !21000
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @br_vlan_get_info(%struct.net_device* %dev, i16 zeroext %vid, %struct.bridge_vlan_info* %p_vinfo) #0 !dbg !21001 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %vid.addr = alloca i16, align 2
  %p_vinfo.addr = alloca %struct.bridge_vlan_info*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21005, metadata !DIExpression()), !dbg !21006
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !21007, metadata !DIExpression()), !dbg !21008
  store %struct.bridge_vlan_info* %p_vinfo, %struct.bridge_vlan_info** %p_vinfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bridge_vlan_info** %p_vinfo.addr, metadata !21009, metadata !DIExpression()), !dbg !21010
  ret i32 -22, !dbg !21011
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_is_l3_master(%struct.net_device* %dev) #0 !dbg !21012 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21013, metadata !DIExpression()), !dbg !21014
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21015
  %priv_flags = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 37, !dbg !21016
  %1 = load i32, i32* %priv_flags, align 4, !dbg !21016
  %and = and i32 %1, 262144, !dbg !21017
  %tobool = icmp ne i32 %and, 0, !dbg !21015
  ret i1 %tobool, !dbg !21018
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_netdevice_port_upper_event(%struct.net_device* %lower_dev, %struct.net_device* %dev, i64 %event, i8* %ptr) #0 !dbg !12306 {
entry:
  %retval = alloca i32, align 4
  %lower_dev.addr = alloca %struct.net_device*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %event.addr = alloca i64, align 8
  %ptr.addr = alloca i8*, align 8
  %info = alloca %struct.netdev_notifier_changeupper_info*, align 8
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %extack = alloca %struct.netlink_ext_ack*, align 8
  %upper_dev = alloca %struct.net_device*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %err = alloca i32, align 4
  %__extack = alloca %struct.netlink_ext_ack*, align 8
  %__extack33 = alloca %struct.netlink_ext_ack*, align 8
  %__extack50 = alloca %struct.netlink_ext_ack*, align 8
  %__extack65 = alloca %struct.netlink_ext_ack*, align 8
  %__extack77 = alloca %struct.netlink_ext_ack*, align 8
  %__extack89 = alloca %struct.netlink_ext_ack*, align 8
  %__extack101 = alloca %struct.netlink_ext_ack*, align 8
  %br_dev = alloca %struct.net_device*, align 8
  store %struct.net_device* %lower_dev, %struct.net_device** %lower_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %lower_dev.addr, metadata !21019, metadata !DIExpression()), !dbg !21020
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21021, metadata !DIExpression()), !dbg !21022
  store i64 %event, i64* %event.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %event.addr, metadata !21023, metadata !DIExpression()), !dbg !21024
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !21025, metadata !DIExpression()), !dbg !21026
  call void @llvm.dbg.declare(metadata %struct.netdev_notifier_changeupper_info** %info, metadata !21027, metadata !DIExpression()), !dbg !21028
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !21029, metadata !DIExpression()), !dbg !21030
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack, metadata !21031, metadata !DIExpression()), !dbg !21032
  call void @llvm.dbg.declare(metadata %struct.net_device** %upper_dev, metadata !21033, metadata !DIExpression()), !dbg !21034
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !21035, metadata !DIExpression()), !dbg !21036
  call void @llvm.dbg.declare(metadata i32* %err, metadata !21037, metadata !DIExpression()), !dbg !21038
  store i32 0, i32* %err, align 4, !dbg !21038
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21039
  %call = call i8* @netdev_priv(%struct.net_device* %0) #9, !dbg !21040
  %1 = bitcast i8* %call to %struct.mlxsw_sp_port*, !dbg !21040
  store %struct.mlxsw_sp_port* %1, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !21041
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !21042
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %2, i32 0, i32 2, !dbg !21043
  %3 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !21043
  store %struct.mlxsw_sp* %3, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !21044
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !21045
  %5 = bitcast i8* %4 to %struct.netdev_notifier_changeupper_info*, !dbg !21045
  store %struct.netdev_notifier_changeupper_info* %5, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !21046
  %6 = load %struct.netdev_notifier_changeupper_info*, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !21047
  %info2 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, %struct.netdev_notifier_changeupper_info* %6, i32 0, i32 0, !dbg !21048
  %call3 = call %struct.netlink_ext_ack* @netdev_notifier_info_to_extack(%struct.netdev_notifier_info* %info2) #9, !dbg !21049
  store %struct.netlink_ext_ack* %call3, %struct.netlink_ext_ack** %extack, align 8, !dbg !21050
  %7 = load i64, i64* %event.addr, align 8, !dbg !21051
  switch i64 %7, label %sw.epilog [
    i64 26, label %sw.bb
    i64 21, label %sw.bb108
  ], !dbg !21052

sw.bb:                                            ; preds = %entry
  %8 = load %struct.netdev_notifier_changeupper_info*, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !21053
  %upper_dev4 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, %struct.netdev_notifier_changeupper_info* %8, i32 0, i32 1, !dbg !21055
  %9 = load %struct.net_device*, %struct.net_device** %upper_dev4, align 8, !dbg !21055
  store %struct.net_device* %9, %struct.net_device** %upper_dev, align 8, !dbg !21056
  %10 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21057
  %call5 = call zeroext i1 @is_vlan_dev(%struct.net_device* %10) #9, !dbg !21059
  br i1 %call5, label %if.end14, label %land.lhs.true, !dbg !21060

land.lhs.true:                                    ; preds = %sw.bb
  %11 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21061
  %call6 = call zeroext i1 @netif_is_lag_master(%struct.net_device* %11) #9, !dbg !21062
  br i1 %call6, label %if.end14, label %land.lhs.true7, !dbg !21063

land.lhs.true7:                                   ; preds = %land.lhs.true
  %12 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21064
  %call8 = call zeroext i1 @netif_is_bridge_master(%struct.net_device* %12) #9, !dbg !21065
  br i1 %call8, label %if.end14, label %land.lhs.true9, !dbg !21066

land.lhs.true9:                                   ; preds = %land.lhs.true7
  %13 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21067
  %call10 = call zeroext i1 @netif_is_ovs_master(%struct.net_device* %13) #9, !dbg !21068
  br i1 %call10, label %if.end14, label %land.lhs.true11, !dbg !21069

land.lhs.true11:                                  ; preds = %land.lhs.true9
  %14 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21070
  %call12 = call zeroext i1 @netif_is_macvlan(%struct.net_device* %14) #9, !dbg !21071
  br i1 %call12, label %if.end14, label %if.then, !dbg !21072

if.then:                                          ; preds = %land.lhs.true11
  br label %do.body, !dbg !21073

do.body:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack, metadata !21075, metadata !DIExpression()), !dbg !21077
  %15 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack, align 8, !dbg !21077
  store %struct.netlink_ext_ack* %15, %struct.netlink_ext_ack** %__extack, align 8, !dbg !21077
  %16 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !21078
  %tobool = icmp ne %struct.netlink_ext_ack* %16, null, !dbg !21078
  br i1 %tobool, label %if.then13, label %if.end, !dbg !21077

if.then13:                                        ; preds = %do.body
  %17 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !21078
  %_msg = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %17, i32 0, i32 0, !dbg !21078
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @mlxsw_sp_netdevice_port_upper_event.__msg, i64 0, i64 0), i8** %_msg, align 8, !dbg !21078
  br label %if.end, !dbg !21078

if.end:                                           ; preds = %if.then13, %do.body
  br label %do.end, !dbg !21077

do.end:                                           ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !21080
  br label %return, !dbg !21080

if.end14:                                         ; preds = %land.lhs.true11, %land.lhs.true9, %land.lhs.true7, %land.lhs.true, %sw.bb
  %18 = load %struct.netdev_notifier_changeupper_info*, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !21081
  %linking = getelementptr inbounds %struct.netdev_notifier_changeupper_info, %struct.netdev_notifier_changeupper_info* %18, i32 0, i32 3, !dbg !21083
  %19 = load i8, i8* %linking, align 1, !dbg !21083
  %tobool15 = trunc i8 %19 to i1, !dbg !21083
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !21084

if.then16:                                        ; preds = %if.end14
  br label %sw.epilog, !dbg !21085

if.end17:                                         ; preds = %if.end14
  %20 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21086
  %call18 = call zeroext i1 @netif_is_bridge_master(%struct.net_device* %20) #9, !dbg !21088
  br i1 %call18, label %land.lhs.true19, label %if.end26, !dbg !21089

land.lhs.true19:                                  ; preds = %if.end17
  %21 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !21090
  %22 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21091
  %call20 = call zeroext i1 @mlxsw_sp_bridge_device_is_offloaded(%struct.mlxsw_sp* %21, %struct.net_device* %22) #9, !dbg !21092
  br i1 %call20, label %if.end26, label %land.lhs.true21, !dbg !21093

land.lhs.true21:                                  ; preds = %land.lhs.true19
  %23 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21094
  %call22 = call zeroext i1 @mlxsw_sp_bridge_has_vxlan(%struct.net_device* %23) #9, !dbg !21095
  br i1 %call22, label %land.lhs.true23, label %if.end26, !dbg !21096

land.lhs.true23:                                  ; preds = %land.lhs.true21
  %24 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21097
  %25 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack, align 8, !dbg !21098
  %call24 = call zeroext i1 @mlxsw_sp_bridge_vxlan_is_valid(%struct.net_device* %24, %struct.netlink_ext_ack* %25) #9, !dbg !21099
  br i1 %call24, label %if.end26, label %if.then25, !dbg !21100

if.then25:                                        ; preds = %land.lhs.true23
  store i32 -95, i32* %retval, align 4, !dbg !21101
  br label %return, !dbg !21101

if.end26:                                         ; preds = %land.lhs.true23, %land.lhs.true21, %land.lhs.true19, %if.end17
  %26 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21102
  %call27 = call zeroext i1 @netdev_has_any_upper_dev(%struct.net_device* %26) #9, !dbg !21104
  br i1 %call27, label %land.lhs.true28, label %if.end39, !dbg !21105

land.lhs.true28:                                  ; preds = %if.end26
  %27 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21106
  %call29 = call zeroext i1 @netif_is_bridge_master(%struct.net_device* %27) #9, !dbg !21107
  br i1 %call29, label %lor.lhs.false, label %if.then31, !dbg !21108

lor.lhs.false:                                    ; preds = %land.lhs.true28
  %28 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !21109
  %29 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21110
  %call30 = call zeroext i1 @mlxsw_sp_bridge_device_is_offloaded(%struct.mlxsw_sp* %28, %struct.net_device* %29) #9, !dbg !21111
  br i1 %call30, label %if.end39, label %if.then31, !dbg !21112

if.then31:                                        ; preds = %lor.lhs.false, %land.lhs.true28
  br label %do.body32, !dbg !21113

do.body32:                                        ; preds = %if.then31
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack33, metadata !21115, metadata !DIExpression()), !dbg !21117
  %30 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack, align 8, !dbg !21117
  store %struct.netlink_ext_ack* %30, %struct.netlink_ext_ack** %__extack33, align 8, !dbg !21117
  %31 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack33, align 8, !dbg !21118
  %tobool34 = icmp ne %struct.netlink_ext_ack* %31, null, !dbg !21118
  br i1 %tobool34, label %if.then35, label %if.end37, !dbg !21117

if.then35:                                        ; preds = %do.body32
  %32 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack33, align 8, !dbg !21118
  %_msg36 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %32, i32 0, i32 0, !dbg !21118
  store i8* getelementptr inbounds ([95 x i8], [95 x i8]* @mlxsw_sp_netdevice_port_upper_event.__msg.242, i64 0, i64 0), i8** %_msg36, align 8, !dbg !21118
  br label %if.end37, !dbg !21118

if.end37:                                         ; preds = %if.then35, %do.body32
  br label %do.end38, !dbg !21117

do.end38:                                         ; preds = %if.end37
  store i32 -22, i32* %retval, align 4, !dbg !21120
  br label %return, !dbg !21120

if.end39:                                         ; preds = %lor.lhs.false, %if.end26
  %33 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21121
  %call40 = call zeroext i1 @netif_is_lag_master(%struct.net_device* %33) #9, !dbg !21123
  br i1 %call40, label %land.lhs.true41, label %if.end44, !dbg !21124

land.lhs.true41:                                  ; preds = %if.end39
  %34 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !21125
  %35 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21126
  %36 = load %struct.netdev_notifier_changeupper_info*, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !21127
  %upper_info = getelementptr inbounds %struct.netdev_notifier_changeupper_info, %struct.netdev_notifier_changeupper_info* %36, i32 0, i32 4, !dbg !21128
  %37 = load i8*, i8** %upper_info, align 8, !dbg !21128
  %38 = bitcast i8* %37 to %struct.netdev_lag_upper_info*, !dbg !21127
  %39 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack, align 8, !dbg !21129
  %call42 = call zeroext i1 @mlxsw_sp_master_lag_check(%struct.mlxsw_sp* %34, %struct.net_device* %35, %struct.netdev_lag_upper_info* %38, %struct.netlink_ext_ack* %39) #9, !dbg !21130
  br i1 %call42, label %if.end44, label %if.then43, !dbg !21131

if.then43:                                        ; preds = %land.lhs.true41
  store i32 -22, i32* %retval, align 4, !dbg !21132
  br label %return, !dbg !21132

if.end44:                                         ; preds = %land.lhs.true41, %if.end39
  %40 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21133
  %call45 = call zeroext i1 @netif_is_lag_master(%struct.net_device* %40) #9, !dbg !21135
  br i1 %call45, label %land.lhs.true46, label %if.end56, !dbg !21136

land.lhs.true46:                                  ; preds = %if.end44
  %41 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21137
  %call47 = call zeroext i1 @vlan_uses_dev(%struct.net_device* %41) #9, !dbg !21138
  br i1 %call47, label %if.then48, label %if.end56, !dbg !21139

if.then48:                                        ; preds = %land.lhs.true46
  br label %do.body49, !dbg !21140

do.body49:                                        ; preds = %if.then48
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack50, metadata !21142, metadata !DIExpression()), !dbg !21144
  %42 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack, align 8, !dbg !21144
  store %struct.netlink_ext_ack* %42, %struct.netlink_ext_ack** %__extack50, align 8, !dbg !21144
  %43 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack50, align 8, !dbg !21145
  %tobool51 = icmp ne %struct.netlink_ext_ack* %43, null, !dbg !21145
  br i1 %tobool51, label %if.then52, label %if.end54, !dbg !21144

if.then52:                                        ; preds = %do.body49
  %44 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack50, align 8, !dbg !21145
  %_msg53 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %44, i32 0, i32 0, !dbg !21145
  store i8* getelementptr inbounds ([73 x i8], [73 x i8]* @mlxsw_sp_netdevice_port_upper_event.__msg.243, i64 0, i64 0), i8** %_msg53, align 8, !dbg !21145
  br label %if.end54, !dbg !21145

if.end54:                                         ; preds = %if.then52, %do.body49
  br label %do.end55, !dbg !21144

do.end55:                                         ; preds = %if.end54
  store i32 -22, i32* %retval, align 4, !dbg !21147
  br label %return, !dbg !21147

if.end56:                                         ; preds = %land.lhs.true46, %if.end44
  %45 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21148
  %call57 = call zeroext i1 @netif_is_lag_port(%struct.net_device* %45) #9, !dbg !21150
  br i1 %call57, label %land.lhs.true58, label %if.end71, !dbg !21151

land.lhs.true58:                                  ; preds = %if.end56
  %46 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21152
  %call59 = call zeroext i1 @is_vlan_dev(%struct.net_device* %46) #9, !dbg !21153
  br i1 %call59, label %land.lhs.true60, label %if.end71, !dbg !21154

land.lhs.true60:                                  ; preds = %land.lhs.true58
  %47 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21155
  %call61 = call %struct.net_device* @vlan_dev_real_dev(%struct.net_device* %47) #9, !dbg !21156
  %call62 = call zeroext i1 @netif_is_lag_master(%struct.net_device* %call61) #9, !dbg !21157
  br i1 %call62, label %if.end71, label %if.then63, !dbg !21158

if.then63:                                        ; preds = %land.lhs.true60
  br label %do.body64, !dbg !21159

do.body64:                                        ; preds = %if.then63
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack65, metadata !21161, metadata !DIExpression()), !dbg !21163
  %48 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack, align 8, !dbg !21163
  store %struct.netlink_ext_ack* %48, %struct.netlink_ext_ack** %__extack65, align 8, !dbg !21163
  %49 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack65, align 8, !dbg !21164
  %tobool66 = icmp ne %struct.netlink_ext_ack* %49, null, !dbg !21164
  br i1 %tobool66, label %if.then67, label %if.end69, !dbg !21163

if.then67:                                        ; preds = %do.body64
  %50 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack65, align 8, !dbg !21164
  %_msg68 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %50, i32 0, i32 0, !dbg !21164
  store i8* getelementptr inbounds ([49 x i8], [49 x i8]* @mlxsw_sp_netdevice_port_upper_event.__msg.244, i64 0, i64 0), i8** %_msg68, align 8, !dbg !21164
  br label %if.end69, !dbg !21164

if.end69:                                         ; preds = %if.then67, %do.body64
  br label %do.end70, !dbg !21163

do.end70:                                         ; preds = %if.end69
  store i32 -22, i32* %retval, align 4, !dbg !21166
  br label %return, !dbg !21166

if.end71:                                         ; preds = %land.lhs.true60, %land.lhs.true58, %if.end56
  %51 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21167
  %call72 = call zeroext i1 @netif_is_macvlan(%struct.net_device* %51) #9, !dbg !21169
  br i1 %call72, label %land.lhs.true73, label %if.end83, !dbg !21170

land.lhs.true73:                                  ; preds = %if.end71
  %52 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !21171
  %53 = load %struct.net_device*, %struct.net_device** %lower_dev.addr, align 8, !dbg !21172
  %call74 = call zeroext i1 @mlxsw_sp_rif_exists(%struct.mlxsw_sp* %52, %struct.net_device* %53) #9, !dbg !21173
  br i1 %call74, label %if.end83, label %if.then75, !dbg !21174

if.then75:                                        ; preds = %land.lhs.true73
  br label %do.body76, !dbg !21175

do.body76:                                        ; preds = %if.then75
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack77, metadata !21177, metadata !DIExpression()), !dbg !21179
  %54 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack, align 8, !dbg !21179
  store %struct.netlink_ext_ack* %54, %struct.netlink_ext_ack** %__extack77, align 8, !dbg !21179
  %55 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack77, align 8, !dbg !21180
  %tobool78 = icmp ne %struct.netlink_ext_ack* %55, null, !dbg !21180
  br i1 %tobool78, label %if.then79, label %if.end81, !dbg !21179

if.then79:                                        ; preds = %do.body76
  %56 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack77, align 8, !dbg !21180
  %_msg80 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %56, i32 0, i32 0, !dbg !21180
  store i8* getelementptr inbounds ([70 x i8], [70 x i8]* @mlxsw_sp_netdevice_port_upper_event.__msg.245, i64 0, i64 0), i8** %_msg80, align 8, !dbg !21180
  br label %if.end81, !dbg !21180

if.end81:                                         ; preds = %if.then79, %do.body76
  br label %do.end82, !dbg !21179

do.end82:                                         ; preds = %if.end81
  store i32 -95, i32* %retval, align 4, !dbg !21182
  br label %return, !dbg !21182

if.end83:                                         ; preds = %land.lhs.true73, %if.end71
  %57 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21183
  %call84 = call zeroext i1 @netif_is_ovs_master(%struct.net_device* %57) #9, !dbg !21185
  br i1 %call84, label %land.lhs.true85, label %if.end95, !dbg !21186

land.lhs.true85:                                  ; preds = %if.end83
  %58 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21187
  %call86 = call zeroext i1 @vlan_uses_dev(%struct.net_device* %58) #9, !dbg !21188
  br i1 %call86, label %if.then87, label %if.end95, !dbg !21189

if.then87:                                        ; preds = %land.lhs.true85
  br label %do.body88, !dbg !21190

do.body88:                                        ; preds = %if.then87
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack89, metadata !21192, metadata !DIExpression()), !dbg !21194
  %59 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack, align 8, !dbg !21194
  store %struct.netlink_ext_ack* %59, %struct.netlink_ext_ack** %__extack89, align 8, !dbg !21194
  %60 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack89, align 8, !dbg !21195
  %tobool90 = icmp ne %struct.netlink_ext_ack* %60, null, !dbg !21195
  br i1 %tobool90, label %if.then91, label %if.end93, !dbg !21194

if.then91:                                        ; preds = %do.body88
  %61 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack89, align 8, !dbg !21195
  %_msg92 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %61, i32 0, i32 0, !dbg !21195
  store i8* getelementptr inbounds ([74 x i8], [74 x i8]* @mlxsw_sp_netdevice_port_upper_event.__msg.246, i64 0, i64 0), i8** %_msg92, align 8, !dbg !21195
  br label %if.end93, !dbg !21195

if.end93:                                         ; preds = %if.then91, %do.body88
  br label %do.end94, !dbg !21194

do.end94:                                         ; preds = %if.end93
  store i32 -22, i32* %retval, align 4, !dbg !21197
  br label %return, !dbg !21197

if.end95:                                         ; preds = %land.lhs.true85, %if.end83
  %62 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21198
  %call96 = call zeroext i1 @netif_is_ovs_port(%struct.net_device* %62) #9, !dbg !21200
  br i1 %call96, label %land.lhs.true97, label %if.end107, !dbg !21201

land.lhs.true97:                                  ; preds = %if.end95
  %63 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21202
  %call98 = call zeroext i1 @is_vlan_dev(%struct.net_device* %63) #9, !dbg !21203
  br i1 %call98, label %if.then99, label %if.end107, !dbg !21204

if.then99:                                        ; preds = %land.lhs.true97
  br label %do.body100, !dbg !21205

do.body100:                                       ; preds = %if.then99
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack101, metadata !21207, metadata !DIExpression()), !dbg !21209
  %64 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack, align 8, !dbg !21209
  store %struct.netlink_ext_ack* %64, %struct.netlink_ext_ack** %__extack101, align 8, !dbg !21209
  %65 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack101, align 8, !dbg !21210
  %tobool102 = icmp ne %struct.netlink_ext_ack* %65, null, !dbg !21210
  br i1 %tobool102, label %if.then103, label %if.end105, !dbg !21209

if.then103:                                       ; preds = %do.body100
  %66 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack101, align 8, !dbg !21210
  %_msg104 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %66, i32 0, i32 0, !dbg !21210
  store i8* getelementptr inbounds ([50 x i8], [50 x i8]* @mlxsw_sp_netdevice_port_upper_event.__msg.247, i64 0, i64 0), i8** %_msg104, align 8, !dbg !21210
  br label %if.end105, !dbg !21210

if.end105:                                        ; preds = %if.then103, %do.body100
  br label %do.end106, !dbg !21209

do.end106:                                        ; preds = %if.end105
  store i32 -22, i32* %retval, align 4, !dbg !21212
  br label %return, !dbg !21212

if.end107:                                        ; preds = %land.lhs.true97, %if.end95
  br label %sw.epilog, !dbg !21213

sw.bb108:                                         ; preds = %entry
  %67 = load %struct.netdev_notifier_changeupper_info*, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !21214
  %upper_dev109 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, %struct.netdev_notifier_changeupper_info* %67, i32 0, i32 1, !dbg !21215
  %68 = load %struct.net_device*, %struct.net_device** %upper_dev109, align 8, !dbg !21215
  store %struct.net_device* %68, %struct.net_device** %upper_dev, align 8, !dbg !21216
  %69 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21217
  %call110 = call zeroext i1 @netif_is_bridge_master(%struct.net_device* %69) #9, !dbg !21219
  br i1 %call110, label %if.then111, label %if.else117, !dbg !21220

if.then111:                                       ; preds = %sw.bb108
  %70 = load %struct.netdev_notifier_changeupper_info*, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !21221
  %linking112 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, %struct.netdev_notifier_changeupper_info* %70, i32 0, i32 3, !dbg !21224
  %71 = load i8, i8* %linking112, align 1, !dbg !21224
  %tobool113 = trunc i8 %71 to i1, !dbg !21224
  br i1 %tobool113, label %if.then114, label %if.else, !dbg !21225

if.then114:                                       ; preds = %if.then111
  %72 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !21226
  %73 = load %struct.net_device*, %struct.net_device** %lower_dev.addr, align 8, !dbg !21227
  %74 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21228
  %75 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack, align 8, !dbg !21229
  %call115 = call i32 @mlxsw_sp_port_bridge_join(%struct.mlxsw_sp_port* %72, %struct.net_device* %73, %struct.net_device* %74, %struct.netlink_ext_ack* %75) #9, !dbg !21230
  store i32 %call115, i32* %err, align 4, !dbg !21231
  br label %if.end116, !dbg !21232

if.else:                                          ; preds = %if.then111
  %76 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !21233
  %77 = load %struct.net_device*, %struct.net_device** %lower_dev.addr, align 8, !dbg !21234
  %78 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21235
  call void @mlxsw_sp_port_bridge_leave(%struct.mlxsw_sp_port* %76, %struct.net_device* %77, %struct.net_device* %78) #9, !dbg !21236
  br label %if.end116

if.end116:                                        ; preds = %if.else, %if.then114
  br label %if.end158, !dbg !21237

if.else117:                                       ; preds = %sw.bb108
  %79 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21238
  %call118 = call zeroext i1 @netif_is_lag_master(%struct.net_device* %79) #9, !dbg !21240
  br i1 %call118, label %if.then119, label %if.else127, !dbg !21241

if.then119:                                       ; preds = %if.else117
  %80 = load %struct.netdev_notifier_changeupper_info*, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !21242
  %linking120 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, %struct.netdev_notifier_changeupper_info* %80, i32 0, i32 3, !dbg !21245
  %81 = load i8, i8* %linking120, align 1, !dbg !21245
  %tobool121 = trunc i8 %81 to i1, !dbg !21245
  br i1 %tobool121, label %if.then122, label %if.else124, !dbg !21246

if.then122:                                       ; preds = %if.then119
  %82 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !21247
  %83 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21249
  %call123 = call i32 @mlxsw_sp_port_lag_join(%struct.mlxsw_sp_port* %82, %struct.net_device* %83) #9, !dbg !21250
  store i32 %call123, i32* %err, align 4, !dbg !21251
  br label %if.end126, !dbg !21252

if.else124:                                       ; preds = %if.then119
  %84 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !21253
  %call125 = call i32 @mlxsw_sp_port_lag_col_dist_disable(%struct.mlxsw_sp_port* %84) #9, !dbg !21255
  %85 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !21256
  %86 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21257
  call void @mlxsw_sp_port_lag_leave(%struct.mlxsw_sp_port* %85, %struct.net_device* %86) #9, !dbg !21258
  br label %if.end126

if.end126:                                        ; preds = %if.else124, %if.then122
  br label %if.end157, !dbg !21259

if.else127:                                       ; preds = %if.else117
  %87 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21260
  %call128 = call zeroext i1 @netif_is_ovs_master(%struct.net_device* %87) #9, !dbg !21262
  br i1 %call128, label %if.then129, label %if.else136, !dbg !21263

if.then129:                                       ; preds = %if.else127
  %88 = load %struct.netdev_notifier_changeupper_info*, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !21264
  %linking130 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, %struct.netdev_notifier_changeupper_info* %88, i32 0, i32 3, !dbg !21267
  %89 = load i8, i8* %linking130, align 1, !dbg !21267
  %tobool131 = trunc i8 %89 to i1, !dbg !21267
  br i1 %tobool131, label %if.then132, label %if.else134, !dbg !21268

if.then132:                                       ; preds = %if.then129
  %90 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !21269
  %call133 = call i32 @mlxsw_sp_port_ovs_join(%struct.mlxsw_sp_port* %90) #9, !dbg !21270
  store i32 %call133, i32* %err, align 4, !dbg !21271
  br label %if.end135, !dbg !21272

if.else134:                                       ; preds = %if.then129
  %91 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !21273
  call void @mlxsw_sp_port_ovs_leave(%struct.mlxsw_sp_port* %91) #9, !dbg !21274
  br label %if.end135

if.end135:                                        ; preds = %if.else134, %if.then132
  br label %if.end156, !dbg !21275

if.else136:                                       ; preds = %if.else127
  %92 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21276
  %call137 = call zeroext i1 @netif_is_macvlan(%struct.net_device* %92) #9, !dbg !21278
  br i1 %call137, label %if.then138, label %if.else143, !dbg !21279

if.then138:                                       ; preds = %if.else136
  %93 = load %struct.netdev_notifier_changeupper_info*, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !21280
  %linking139 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, %struct.netdev_notifier_changeupper_info* %93, i32 0, i32 3, !dbg !21283
  %94 = load i8, i8* %linking139, align 1, !dbg !21283
  %tobool140 = trunc i8 %94 to i1, !dbg !21283
  br i1 %tobool140, label %if.end142, label %if.then141, !dbg !21284

if.then141:                                       ; preds = %if.then138
  %95 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !21285
  %96 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21286
  call void @mlxsw_sp_rif_macvlan_del(%struct.mlxsw_sp* %95, %struct.net_device* %96) #9, !dbg !21287
  br label %if.end142, !dbg !21287

if.end142:                                        ; preds = %if.then141, %if.then138
  br label %if.end155, !dbg !21288

if.else143:                                       ; preds = %if.else136
  %97 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21289
  %call144 = call zeroext i1 @is_vlan_dev(%struct.net_device* %97) #9, !dbg !21291
  br i1 %call144, label %if.then145, label %if.end154, !dbg !21292

if.then145:                                       ; preds = %if.else143
  call void @llvm.dbg.declare(metadata %struct.net_device** %br_dev, metadata !21293, metadata !DIExpression()), !dbg !21295
  %98 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21296
  %call146 = call zeroext i1 @netif_is_bridge_port(%struct.net_device* %98) #9, !dbg !21298
  br i1 %call146, label %if.end148, label %if.then147, !dbg !21299

if.then147:                                       ; preds = %if.then145
  br label %sw.epilog, !dbg !21300

if.end148:                                        ; preds = %if.then145
  %99 = load %struct.netdev_notifier_changeupper_info*, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !21301
  %linking149 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, %struct.netdev_notifier_changeupper_info* %99, i32 0, i32 3, !dbg !21303
  %100 = load i8, i8* %linking149, align 1, !dbg !21303
  %tobool150 = trunc i8 %100 to i1, !dbg !21303
  br i1 %tobool150, label %if.then151, label %if.end152, !dbg !21304

if.then151:                                       ; preds = %if.end148
  br label %sw.epilog, !dbg !21305

if.end152:                                        ; preds = %if.end148
  %101 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21306
  %call153 = call %struct.net_device* @netdev_master_upper_dev_get(%struct.net_device* %101) #9, !dbg !21307
  store %struct.net_device* %call153, %struct.net_device** %br_dev, align 8, !dbg !21308
  %102 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !21309
  %103 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !21310
  %104 = load %struct.net_device*, %struct.net_device** %br_dev, align 8, !dbg !21311
  call void @mlxsw_sp_port_bridge_leave(%struct.mlxsw_sp_port* %102, %struct.net_device* %103, %struct.net_device* %104) #9, !dbg !21312
  br label %if.end154, !dbg !21313

if.end154:                                        ; preds = %if.end152, %if.else143
  br label %if.end155

if.end155:                                        ; preds = %if.end154, %if.end142
  br label %if.end156

if.end156:                                        ; preds = %if.end155, %if.end135
  br label %if.end157

if.end157:                                        ; preds = %if.end156, %if.end126
  br label %if.end158

if.end158:                                        ; preds = %if.end157, %if.end116
  br label %sw.epilog, !dbg !21314

sw.epilog:                                        ; preds = %entry, %if.end158, %if.then151, %if.then147, %if.end107, %if.then16
  %105 = load i32, i32* %err, align 4, !dbg !21315
  store i32 %105, i32* %retval, align 4, !dbg !21316
  br label %return, !dbg !21316

return:                                           ; preds = %sw.epilog, %do.end106, %do.end94, %do.end82, %do.end70, %do.end55, %if.then43, %do.end38, %if.then25, %do.end
  %106 = load i32, i32* %retval, align 4, !dbg !21317
  ret i32 %106, !dbg !21317
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_netdevice_port_lower_event(%struct.net_device* %dev, i64 %event, i8* %ptr) #0 !dbg !21318 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %event.addr = alloca i64, align 8
  %ptr.addr = alloca i8*, align 8
  %info = alloca %struct.netdev_notifier_changelowerstate_info*, align 8
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %err = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21319, metadata !DIExpression()), !dbg !21320
  store i64 %event, i64* %event.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %event.addr, metadata !21321, metadata !DIExpression()), !dbg !21322
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !21323, metadata !DIExpression()), !dbg !21324
  call void @llvm.dbg.declare(metadata %struct.netdev_notifier_changelowerstate_info** %info, metadata !21325, metadata !DIExpression()), !dbg !21331
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !21332, metadata !DIExpression()), !dbg !21333
  call void @llvm.dbg.declare(metadata i32* %err, metadata !21334, metadata !DIExpression()), !dbg !21335
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21336
  %call = call i8* @netdev_priv(%struct.net_device* %0) #9, !dbg !21337
  %1 = bitcast i8* %call to %struct.mlxsw_sp_port*, !dbg !21337
  store %struct.mlxsw_sp_port* %1, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !21338
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !21339
  %3 = bitcast i8* %2 to %struct.netdev_notifier_changelowerstate_info*, !dbg !21339
  store %struct.netdev_notifier_changelowerstate_info* %3, %struct.netdev_notifier_changelowerstate_info** %info, align 8, !dbg !21340
  %4 = load i64, i64* %event.addr, align 8, !dbg !21341
  switch i64 %4, label %sw.epilog [
    i64 27, label %sw.bb
  ], !dbg !21342

sw.bb:                                            ; preds = %entry
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21343
  %call1 = call zeroext i1 @netif_is_lag_port(%struct.net_device* %5) #9, !dbg !21346
  br i1 %call1, label %land.lhs.true, label %if.end5, !dbg !21347

land.lhs.true:                                    ; preds = %sw.bb
  %6 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !21348
  %lagged = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %6, i32 0, i32 4, !dbg !21349
  %bf.load = load i8, i8* %lagged, align 1, !dbg !21349
  %bf.clear = and i8 %bf.load, 1, !dbg !21349
  %conv = zext i8 %bf.clear to i32, !dbg !21348
  %tobool = icmp ne i32 %conv, 0, !dbg !21348
  br i1 %tobool, label %if.then, label %if.end5, !dbg !21350

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !21351
  %8 = load %struct.netdev_notifier_changelowerstate_info*, %struct.netdev_notifier_changelowerstate_info** %info, align 8, !dbg !21353
  %lower_state_info = getelementptr inbounds %struct.netdev_notifier_changelowerstate_info, %struct.netdev_notifier_changelowerstate_info* %8, i32 0, i32 1, !dbg !21354
  %9 = load i8*, i8** %lower_state_info, align 8, !dbg !21354
  %10 = bitcast i8* %9 to %struct.netdev_lag_lower_state_info*, !dbg !21353
  %call2 = call i32 @mlxsw_sp_port_lag_changed(%struct.mlxsw_sp_port* %7, %struct.netdev_lag_lower_state_info* %10) #9, !dbg !21355
  store i32 %call2, i32* %err, align 4, !dbg !21356
  %11 = load i32, i32* %err, align 4, !dbg !21357
  %tobool3 = icmp ne i32 %11, 0, !dbg !21357
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !21359

if.then4:                                         ; preds = %if.then
  %12 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21360
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %12, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.267, i64 0, i64 0)) #13, !dbg !21361
  br label %if.end, !dbg !21361

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end5, !dbg !21362

if.end5:                                          ; preds = %if.end, %land.lhs.true, %sw.bb
  br label %sw.epilog, !dbg !21363

sw.epilog:                                        ; preds = %entry, %if.end5
  ret i32 0, !dbg !21364
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_is_ovs_master(%struct.net_device* %dev) #0 !dbg !21365 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21366, metadata !DIExpression()), !dbg !21367
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21368
  %priv_flags = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 37, !dbg !21369
  %1 = load i32, i32* %priv_flags, align 4, !dbg !21369
  %and = and i32 %1, 1048576, !dbg !21370
  %tobool = icmp ne i32 %and, 0, !dbg !21368
  ret i1 %tobool, !dbg !21371
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @mlxsw_sp_bridge_device_is_offloaded(%struct.mlxsw_sp*, %struct.net_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mlxsw_sp_bridge_has_vxlan(%struct.net_device* %br_dev) #0 !dbg !21372 {
entry:
  %br_dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %br_dev, %struct.net_device** %br_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %br_dev.addr, metadata !21373, metadata !DIExpression()), !dbg !21374
  %0 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !21375
  %call = call %struct.net_device* @mlxsw_sp_bridge_vxlan_dev_find(%struct.net_device* %0) #9, !dbg !21376
  %tobool = icmp ne %struct.net_device* %call, null, !dbg !21377
  %lnot = xor i1 %tobool, true, !dbg !21377
  %lnot1 = xor i1 %lnot, true, !dbg !21378
  ret i1 %lnot1, !dbg !21379
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @netdev_has_any_upper_dev(%struct.net_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mlxsw_sp_master_lag_check(%struct.mlxsw_sp* %mlxsw_sp, %struct.net_device* %lag_dev, %struct.netdev_lag_upper_info* %lag_upper_info, %struct.netlink_ext_ack* %extack) #0 !dbg !12344 {
entry:
  %retval = alloca i1, align 1
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %lag_dev.addr = alloca %struct.net_device*, align 8
  %lag_upper_info.addr = alloca %struct.netdev_lag_upper_info*, align 8
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %lag_id = alloca i16, align 2
  %__extack = alloca %struct.netlink_ext_ack*, align 8
  %__extack6 = alloca %struct.netlink_ext_ack*, align 8
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !21380, metadata !DIExpression()), !dbg !21381
  store %struct.net_device* %lag_dev, %struct.net_device** %lag_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %lag_dev.addr, metadata !21382, metadata !DIExpression()), !dbg !21383
  store %struct.netdev_lag_upper_info* %lag_upper_info, %struct.netdev_lag_upper_info** %lag_upper_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_lag_upper_info** %lag_upper_info.addr, metadata !21384, metadata !DIExpression()), !dbg !21385
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !21386, metadata !DIExpression()), !dbg !21387
  call void @llvm.dbg.declare(metadata i16* %lag_id, metadata !21388, metadata !DIExpression()), !dbg !21389
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21390
  %1 = load %struct.net_device*, %struct.net_device** %lag_dev.addr, align 8, !dbg !21392
  %call = call i32 @mlxsw_sp_lag_index_get(%struct.mlxsw_sp* %0, %struct.net_device* %1, i16* %lag_id) #9, !dbg !21393
  %cmp = icmp ne i32 %call, 0, !dbg !21394
  br i1 %cmp, label %if.then, label %if.end2, !dbg !21395

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !21396

do.body:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack, metadata !21398, metadata !DIExpression()), !dbg !21400
  %2 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !21400
  store %struct.netlink_ext_ack* %2, %struct.netlink_ext_ack** %__extack, align 8, !dbg !21400
  %3 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !21401
  %tobool = icmp ne %struct.netlink_ext_ack* %3, null, !dbg !21401
  br i1 %tobool, label %if.then1, label %if.end, !dbg !21400

if.then1:                                         ; preds = %do.body
  %4 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !21401
  %_msg = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %4, i32 0, i32 0, !dbg !21401
  store i8* getelementptr inbounds ([57 x i8], [57 x i8]* @mlxsw_sp_master_lag_check.__msg, i64 0, i64 0), i8** %_msg, align 8, !dbg !21401
  br label %if.end, !dbg !21401

if.end:                                           ; preds = %if.then1, %do.body
  br label %do.end, !dbg !21400

do.end:                                           ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !21403
  br label %return, !dbg !21403

if.end2:                                          ; preds = %entry
  %5 = load %struct.netdev_lag_upper_info*, %struct.netdev_lag_upper_info** %lag_upper_info.addr, align 8, !dbg !21404
  %tx_type = getelementptr inbounds %struct.netdev_lag_upper_info, %struct.netdev_lag_upper_info* %5, i32 0, i32 0, !dbg !21406
  %6 = load i32, i32* %tx_type, align 4, !dbg !21406
  %cmp3 = icmp ne i32 %6, 5, !dbg !21407
  br i1 %cmp3, label %if.then4, label %if.end12, !dbg !21408

if.then4:                                         ; preds = %if.end2
  br label %do.body5, !dbg !21409

do.body5:                                         ; preds = %if.then4
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack6, metadata !21411, metadata !DIExpression()), !dbg !21413
  %7 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !21413
  store %struct.netlink_ext_ack* %7, %struct.netlink_ext_ack** %__extack6, align 8, !dbg !21413
  %8 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack6, align 8, !dbg !21414
  %tobool7 = icmp ne %struct.netlink_ext_ack* %8, null, !dbg !21414
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !21413

if.then8:                                         ; preds = %do.body5
  %9 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack6, align 8, !dbg !21414
  %_msg9 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %9, i32 0, i32 0, !dbg !21414
  store i8* getelementptr inbounds ([53 x i8], [53 x i8]* @mlxsw_sp_master_lag_check.__msg.248, i64 0, i64 0), i8** %_msg9, align 8, !dbg !21414
  br label %if.end10, !dbg !21414

if.end10:                                         ; preds = %if.then8, %do.body5
  br label %do.end11, !dbg !21413

do.end11:                                         ; preds = %if.end10
  store i1 false, i1* %retval, align 1, !dbg !21416
  br label %return, !dbg !21416

if.end12:                                         ; preds = %if.end2
  store i1 true, i1* %retval, align 1, !dbg !21417
  br label %return, !dbg !21417

return:                                           ; preds = %if.end12, %do.end11, %do.end
  %10 = load i1, i1* %retval, align 1, !dbg !21418
  ret i1 %10, !dbg !21418
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @vlan_uses_dev(%struct.net_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_is_lag_port(%struct.net_device* %dev) #0 !dbg !21419 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21420, metadata !DIExpression()), !dbg !21421
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21422
  %call = call zeroext i1 @netif_is_bond_slave(%struct.net_device* %0) #9, !dbg !21423
  br i1 %call, label %lor.end, label %lor.rhs, !dbg !21424

lor.rhs:                                          ; preds = %entry
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21425
  %call1 = call zeroext i1 @netif_is_team_port(%struct.net_device* %1) #9, !dbg !21426
  br label %lor.end, !dbg !21424

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %call1, %lor.rhs ]
  ret i1 %2, !dbg !21427
}

; Function Attrs: noredzone
declare dso_local %struct.net_device* @vlan_dev_real_dev(%struct.net_device*) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @mlxsw_sp_rif_exists(%struct.mlxsw_sp*, %struct.net_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_is_ovs_port(%struct.net_device* %dev) #0 !dbg !21428 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21429, metadata !DIExpression()), !dbg !21430
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21431
  %priv_flags = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 37, !dbg !21432
  %1 = load i32, i32* %priv_flags, align 4, !dbg !21432
  %and = and i32 %1, 1024, !dbg !21433
  %tobool = icmp ne i32 %and, 0, !dbg !21431
  ret i1 %tobool, !dbg !21434
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_port_bridge_join(%struct.mlxsw_sp_port*, %struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_port_bridge_leave(%struct.mlxsw_sp_port*, %struct.net_device*, %struct.net_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_lag_join(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.net_device* %lag_dev) #0 !dbg !21435 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %lag_dev.addr = alloca %struct.net_device*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %lag = alloca %struct.mlxsw_sp_upper*, align 8
  %lag_id = alloca i16, align 2
  %port_index = alloca i8, align 1
  %err = alloca i32, align 4
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !21438, metadata !DIExpression()), !dbg !21439
  store %struct.net_device* %lag_dev, %struct.net_device** %lag_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %lag_dev.addr, metadata !21440, metadata !DIExpression()), !dbg !21441
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !21442, metadata !DIExpression()), !dbg !21443
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21444
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !21445
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !21445
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !21443
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_upper** %lag, metadata !21446, metadata !DIExpression()), !dbg !21447
  call void @llvm.dbg.declare(metadata i16* %lag_id, metadata !21448, metadata !DIExpression()), !dbg !21449
  call void @llvm.dbg.declare(metadata i8* %port_index, metadata !21450, metadata !DIExpression()), !dbg !21451
  call void @llvm.dbg.declare(metadata i32* %err, metadata !21452, metadata !DIExpression()), !dbg !21453
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !21454
  %3 = load %struct.net_device*, %struct.net_device** %lag_dev.addr, align 8, !dbg !21455
  %call = call i32 @mlxsw_sp_lag_index_get(%struct.mlxsw_sp* %2, %struct.net_device* %3, i16* %lag_id) #9, !dbg !21456
  store i32 %call, i32* %err, align 4, !dbg !21457
  %4 = load i32, i32* %err, align 4, !dbg !21458
  %tobool = icmp ne i32 %4, 0, !dbg !21458
  br i1 %tobool, label %if.then, label %if.end, !dbg !21460

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %err, align 4, !dbg !21461
  store i32 %5, i32* %retval, align 4, !dbg !21462
  br label %return, !dbg !21462

if.end:                                           ; preds = %entry
  %6 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !21463
  %7 = load i16, i16* %lag_id, align 2, !dbg !21464
  %call2 = call %struct.mlxsw_sp_upper* @mlxsw_sp_lag_get(%struct.mlxsw_sp* %6, i16 zeroext %7) #9, !dbg !21465
  store %struct.mlxsw_sp_upper* %call2, %struct.mlxsw_sp_upper** %lag, align 8, !dbg !21466
  %8 = load %struct.mlxsw_sp_upper*, %struct.mlxsw_sp_upper** %lag, align 8, !dbg !21467
  %ref_count = getelementptr inbounds %struct.mlxsw_sp_upper, %struct.mlxsw_sp_upper* %8, i32 0, i32 1, !dbg !21469
  %9 = load i32, i32* %ref_count, align 8, !dbg !21469
  %tobool3 = icmp ne i32 %9, 0, !dbg !21467
  br i1 %tobool3, label %if.end9, label %if.then4, !dbg !21470

if.then4:                                         ; preds = %if.end
  %10 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !21471
  %11 = load i16, i16* %lag_id, align 2, !dbg !21473
  %call5 = call i32 @mlxsw_sp_lag_create(%struct.mlxsw_sp* %10, i16 zeroext %11) #9, !dbg !21474
  store i32 %call5, i32* %err, align 4, !dbg !21475
  %12 = load i32, i32* %err, align 4, !dbg !21476
  %tobool6 = icmp ne i32 %12, 0, !dbg !21476
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !21478

if.then7:                                         ; preds = %if.then4
  %13 = load i32, i32* %err, align 4, !dbg !21479
  store i32 %13, i32* %retval, align 4, !dbg !21480
  br label %return, !dbg !21480

if.end8:                                          ; preds = %if.then4
  %14 = load %struct.net_device*, %struct.net_device** %lag_dev.addr, align 8, !dbg !21481
  %15 = load %struct.mlxsw_sp_upper*, %struct.mlxsw_sp_upper** %lag, align 8, !dbg !21482
  %dev = getelementptr inbounds %struct.mlxsw_sp_upper, %struct.mlxsw_sp_upper* %15, i32 0, i32 0, !dbg !21483
  store %struct.net_device* %14, %struct.net_device** %dev, align 8, !dbg !21484
  br label %if.end9, !dbg !21485

if.end9:                                          ; preds = %if.end8, %if.end
  %16 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !21486
  %17 = load i16, i16* %lag_id, align 2, !dbg !21487
  %call10 = call i32 @mlxsw_sp_port_lag_index_get(%struct.mlxsw_sp* %16, i16 zeroext %17, i8* %port_index) #9, !dbg !21488
  store i32 %call10, i32* %err, align 4, !dbg !21489
  %18 = load i32, i32* %err, align 4, !dbg !21490
  %tobool11 = icmp ne i32 %18, 0, !dbg !21490
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !21492

if.then12:                                        ; preds = %if.end9
  %19 = load i32, i32* %err, align 4, !dbg !21493
  store i32 %19, i32* %retval, align 4, !dbg !21494
  br label %return, !dbg !21494

if.end13:                                         ; preds = %if.end9
  %20 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21495
  %21 = load i16, i16* %lag_id, align 2, !dbg !21496
  %22 = load i8, i8* %port_index, align 1, !dbg !21497
  %call14 = call i32 @mlxsw_sp_lag_col_port_add(%struct.mlxsw_sp_port* %20, i16 zeroext %21, i8 zeroext %22) #9, !dbg !21498
  store i32 %call14, i32* %err, align 4, !dbg !21499
  %23 = load i32, i32* %err, align 4, !dbg !21500
  %tobool15 = icmp ne i32 %23, 0, !dbg !21500
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !21502

if.then16:                                        ; preds = %if.end13
  br label %err_col_port_add, !dbg !21503

if.end17:                                         ; preds = %if.end13
  %24 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !21504
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %24, i32 0, i32 1, !dbg !21505
  %25 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !21505
  %26 = load i16, i16* %lag_id, align 2, !dbg !21506
  %27 = load i8, i8* %port_index, align 1, !dbg !21507
  %28 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21508
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %28, i32 0, i32 3, !dbg !21509
  %29 = load i8, i8* %local_port, align 8, !dbg !21509
  call void @mlxsw_core_lag_mapping_set(%struct.mlxsw_core* %25, i16 zeroext %26, i8 zeroext %27, i8 zeroext %29) #9, !dbg !21510
  %30 = load i16, i16* %lag_id, align 2, !dbg !21511
  %31 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21512
  %lag_id18 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %31, i32 0, i32 6, !dbg !21513
  store i16 %30, i16* %lag_id18, align 4, !dbg !21514
  %32 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21515
  %lagged = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %32, i32 0, i32 4, !dbg !21516
  %bf.load = load i8, i8* %lagged, align 1, !dbg !21517
  %bf.clear = and i8 %bf.load, -2, !dbg !21517
  %bf.set = or i8 %bf.clear, 1, !dbg !21517
  store i8 %bf.set, i8* %lagged, align 1, !dbg !21517
  %33 = load %struct.mlxsw_sp_upper*, %struct.mlxsw_sp_upper** %lag, align 8, !dbg !21518
  %ref_count19 = getelementptr inbounds %struct.mlxsw_sp_upper, %struct.mlxsw_sp_upper* %33, i32 0, i32 1, !dbg !21519
  %34 = load i32, i32* %ref_count19, align 8, !dbg !21520
  %inc = add i32 %34, 1, !dbg !21520
  store i32 %inc, i32* %ref_count19, align 8, !dbg !21520
  %35 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21521
  %default_vlan = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %35, i32 0, i32 13, !dbg !21523
  %36 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %default_vlan, align 8, !dbg !21523
  %fid = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %36, i32 0, i32 2, !dbg !21524
  %37 = load %struct.mlxsw_sp_fid*, %struct.mlxsw_sp_fid** %fid, align 8, !dbg !21524
  %tobool20 = icmp ne %struct.mlxsw_sp_fid* %37, null, !dbg !21521
  br i1 %tobool20, label %if.then21, label %if.end23, !dbg !21525

if.then21:                                        ; preds = %if.end17
  %38 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21526
  %default_vlan22 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %38, i32 0, i32 13, !dbg !21527
  %39 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %default_vlan22, align 8, !dbg !21527
  call void @mlxsw_sp_port_vlan_router_leave(%struct.mlxsw_sp_port_vlan* %39) #9, !dbg !21528
  br label %if.end23, !dbg !21528

if.end23:                                         ; preds = %if.then21, %if.end17
  store i32 0, i32* %retval, align 4, !dbg !21529
  br label %return, !dbg !21529

err_col_port_add:                                 ; preds = %if.then16
  call void @llvm.dbg.label(metadata !21530), !dbg !21531
  %40 = load %struct.mlxsw_sp_upper*, %struct.mlxsw_sp_upper** %lag, align 8, !dbg !21532
  %ref_count24 = getelementptr inbounds %struct.mlxsw_sp_upper, %struct.mlxsw_sp_upper* %40, i32 0, i32 1, !dbg !21534
  %41 = load i32, i32* %ref_count24, align 8, !dbg !21534
  %tobool25 = icmp ne i32 %41, 0, !dbg !21532
  br i1 %tobool25, label %if.end28, label %if.then26, !dbg !21535

if.then26:                                        ; preds = %err_col_port_add
  %42 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !21536
  %43 = load i16, i16* %lag_id, align 2, !dbg !21537
  %call27 = call i32 @mlxsw_sp_lag_destroy(%struct.mlxsw_sp* %42, i16 zeroext %43) #9, !dbg !21538
  br label %if.end28, !dbg !21538

if.end28:                                         ; preds = %if.then26, %err_col_port_add
  %44 = load i32, i32* %err, align 4, !dbg !21539
  store i32 %44, i32* %retval, align 4, !dbg !21540
  br label %return, !dbg !21540

return:                                           ; preds = %if.end28, %if.end23, %if.then12, %if.then7, %if.then
  %45 = load i32, i32* %retval, align 4, !dbg !21541
  ret i32 %45, !dbg !21541
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_lag_col_dist_disable(%struct.mlxsw_sp_port* %mlxsw_sp_port) #0 !dbg !21542 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !21545, metadata !DIExpression()), !dbg !21546
  call void @llvm.dbg.declare(metadata i32* %err, metadata !21547, metadata !DIExpression()), !dbg !21548
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21549
  %1 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21550
  %lag_id = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %1, i32 0, i32 6, !dbg !21551
  %2 = load i16, i16* %lag_id, align 4, !dbg !21551
  %call = call i32 @mlxsw_sp_lag_dist_port_remove(%struct.mlxsw_sp_port* %0, i16 zeroext %2) #9, !dbg !21552
  store i32 %call, i32* %err, align 4, !dbg !21553
  %3 = load i32, i32* %err, align 4, !dbg !21554
  %tobool = icmp ne i32 %3, 0, !dbg !21554
  br i1 %tobool, label %if.then, label %if.end, !dbg !21556

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %err, align 4, !dbg !21557
  store i32 %4, i32* %retval, align 4, !dbg !21558
  br label %return, !dbg !21558

if.end:                                           ; preds = %entry
  %5 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21559
  %6 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21560
  %lag_id1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %6, i32 0, i32 6, !dbg !21561
  %7 = load i16, i16* %lag_id1, align 4, !dbg !21561
  %call2 = call i32 @mlxsw_sp_lag_col_port_disable(%struct.mlxsw_sp_port* %5, i16 zeroext %7) #9, !dbg !21562
  store i32 %call2, i32* %err, align 4, !dbg !21563
  %8 = load i32, i32* %err, align 4, !dbg !21564
  %tobool3 = icmp ne i32 %8, 0, !dbg !21564
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !21566

if.then4:                                         ; preds = %if.end
  br label %err_col_port_disable, !dbg !21567

if.end5:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !21568
  br label %return, !dbg !21568

err_col_port_disable:                             ; preds = %if.then4
  call void @llvm.dbg.label(metadata !21569), !dbg !21570
  %9 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21571
  %10 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21572
  %lag_id6 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %10, i32 0, i32 6, !dbg !21573
  %11 = load i16, i16* %lag_id6, align 4, !dbg !21573
  %call7 = call i32 @mlxsw_sp_lag_dist_port_add(%struct.mlxsw_sp_port* %9, i16 zeroext %11) #9, !dbg !21574
  %12 = load i32, i32* %err, align 4, !dbg !21575
  store i32 %12, i32* %retval, align 4, !dbg !21576
  br label %return, !dbg !21576

return:                                           ; preds = %err_col_port_disable, %if.end5, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !21577
  ret i32 %13, !dbg !21577
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_port_lag_leave(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.net_device* %lag_dev) #0 !dbg !21578 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %lag_dev.addr = alloca %struct.net_device*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %lag_id = alloca i16, align 2
  %lag = alloca %struct.mlxsw_sp_upper*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !21581, metadata !DIExpression()), !dbg !21582
  store %struct.net_device* %lag_dev, %struct.net_device** %lag_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %lag_dev.addr, metadata !21583, metadata !DIExpression()), !dbg !21584
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !21585, metadata !DIExpression()), !dbg !21586
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21587
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !21588
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !21588
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !21586
  call void @llvm.dbg.declare(metadata i16* %lag_id, metadata !21589, metadata !DIExpression()), !dbg !21590
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21591
  %lag_id2 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %2, i32 0, i32 6, !dbg !21592
  %3 = load i16, i16* %lag_id2, align 4, !dbg !21592
  store i16 %3, i16* %lag_id, align 2, !dbg !21590
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_upper** %lag, metadata !21593, metadata !DIExpression()), !dbg !21594
  %4 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21595
  %lagged = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %4, i32 0, i32 4, !dbg !21597
  %bf.load = load i8, i8* %lagged, align 1, !dbg !21597
  %bf.clear = and i8 %bf.load, 1, !dbg !21597
  %tobool = icmp ne i8 %bf.clear, 0, !dbg !21595
  br i1 %tobool, label %if.end, label %if.then, !dbg !21598

if.then:                                          ; preds = %entry
  br label %return, !dbg !21599

if.end:                                           ; preds = %entry
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !21600
  %6 = load i16, i16* %lag_id, align 2, !dbg !21601
  %call = call %struct.mlxsw_sp_upper* @mlxsw_sp_lag_get(%struct.mlxsw_sp* %5, i16 zeroext %6) #9, !dbg !21602
  store %struct.mlxsw_sp_upper* %call, %struct.mlxsw_sp_upper** %lag, align 8, !dbg !21603
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !21604, metadata !DIExpression()), !dbg !21606
  %7 = load %struct.mlxsw_sp_upper*, %struct.mlxsw_sp_upper** %lag, align 8, !dbg !21606
  %ref_count = getelementptr inbounds %struct.mlxsw_sp_upper, %struct.mlxsw_sp_upper* %7, i32 0, i32 1, !dbg !21606
  %8 = load i32, i32* %ref_count, align 8, !dbg !21606
  %cmp = icmp eq i32 %8, 0, !dbg !21606
  %lnot = xor i1 %cmp, true, !dbg !21606
  %lnot3 = xor i1 %lnot, true, !dbg !21606
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !21606
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !21606
  %9 = load i32, i32* %__ret_warn_on, align 4, !dbg !21607
  %tobool4 = icmp ne i32 %9, 0, !dbg !21607
  %lnot5 = xor i1 %tobool4, true, !dbg !21607
  %lnot7 = xor i1 %lnot5, true, !dbg !21607
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !21607
  %conv = sext i32 %lnot.ext8 to i64, !dbg !21607
  %tobool9 = icmp ne i64 %conv, 0, !dbg !21607
  br i1 %tobool9, label %if.then10, label %if.end17, !dbg !21606

if.then10:                                        ; preds = %if.end
  br label %do.body, !dbg !21607

do.body:                                          ; preds = %if.then10
  br label %do.body11, !dbg !21609

do.body11:                                        ; preds = %do.body
  br label %do.end, !dbg !21611

do.end:                                           ; preds = %do.body11
  br label %do.body12, !dbg !21609

do.body12:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 3600, i32 2305, i64 12) #10, !dbg !21613, !srcloc !21615
  br label %do.end13, !dbg !21613

do.end13:                                         ; preds = %do.body12
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 664) #10, !dbg !21616, !srcloc !21618
  br label %do.body14, !dbg !21609

do.body14:                                        ; preds = %do.end13
  br label %do.end15, !dbg !21619

do.end15:                                         ; preds = %do.body14
  br label %do.end16, !dbg !21609

do.end16:                                         ; preds = %do.end15
  br label %if.end17, !dbg !21609

if.end17:                                         ; preds = %do.end16, %if.end
  %10 = load i32, i32* %__ret_warn_on, align 4, !dbg !21606
  %tobool18 = icmp ne i32 %10, 0, !dbg !21606
  %lnot19 = xor i1 %tobool18, true, !dbg !21606
  %lnot21 = xor i1 %lnot19, true, !dbg !21606
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !21606
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !21606
  store i64 %conv23, i64* %tmp, align 8, !dbg !21607
  %11 = load i64, i64* %tmp, align 8, !dbg !21606
  %12 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21621
  %13 = load i16, i16* %lag_id, align 2, !dbg !21622
  %call24 = call i32 @mlxsw_sp_lag_col_port_remove(%struct.mlxsw_sp_port* %12, i16 zeroext %13) #9, !dbg !21623
  %14 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21624
  call void @mlxsw_sp_port_vlan_flush(%struct.mlxsw_sp_port* %14, i1 zeroext false) #9, !dbg !21625
  %15 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21626
  %default_vlan = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %15, i32 0, i32 13, !dbg !21627
  %16 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %default_vlan, align 8, !dbg !21627
  call void @mlxsw_sp_port_vlan_cleanup(%struct.mlxsw_sp_port_vlan* %16) #9, !dbg !21628
  %17 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21629
  %18 = load %struct.net_device*, %struct.net_device** %lag_dev.addr, align 8, !dbg !21630
  call void @mlxsw_sp_port_lag_uppers_cleanup(%struct.mlxsw_sp_port* %17, %struct.net_device* %18) #9, !dbg !21631
  %19 = load %struct.mlxsw_sp_upper*, %struct.mlxsw_sp_upper** %lag, align 8, !dbg !21632
  %ref_count25 = getelementptr inbounds %struct.mlxsw_sp_upper, %struct.mlxsw_sp_upper* %19, i32 0, i32 1, !dbg !21634
  %20 = load i32, i32* %ref_count25, align 8, !dbg !21634
  %cmp26 = icmp eq i32 %20, 1, !dbg !21635
  br i1 %cmp26, label %if.then28, label %if.end30, !dbg !21636

if.then28:                                        ; preds = %if.end17
  %21 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !21637
  %22 = load i16, i16* %lag_id, align 2, !dbg !21638
  %call29 = call i32 @mlxsw_sp_lag_destroy(%struct.mlxsw_sp* %21, i16 zeroext %22) #9, !dbg !21639
  br label %if.end30, !dbg !21639

if.end30:                                         ; preds = %if.then28, %if.end17
  %23 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !21640
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %23, i32 0, i32 1, !dbg !21641
  %24 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !21641
  %25 = load i16, i16* %lag_id, align 2, !dbg !21642
  %26 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21643
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %26, i32 0, i32 3, !dbg !21644
  %27 = load i8, i8* %local_port, align 8, !dbg !21644
  call void @mlxsw_core_lag_mapping_clear(%struct.mlxsw_core* %24, i16 zeroext %25, i8 zeroext %27) #9, !dbg !21645
  %28 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21646
  %lagged31 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %28, i32 0, i32 4, !dbg !21647
  %bf.load32 = load i8, i8* %lagged31, align 1, !dbg !21648
  %bf.clear33 = and i8 %bf.load32, -2, !dbg !21648
  store i8 %bf.clear33, i8* %lagged31, align 1, !dbg !21648
  %29 = load %struct.mlxsw_sp_upper*, %struct.mlxsw_sp_upper** %lag, align 8, !dbg !21649
  %ref_count34 = getelementptr inbounds %struct.mlxsw_sp_upper, %struct.mlxsw_sp_upper* %29, i32 0, i32 1, !dbg !21650
  %30 = load i32, i32* %ref_count34, align 8, !dbg !21651
  %dec = add i32 %30, -1, !dbg !21651
  store i32 %dec, i32* %ref_count34, align 8, !dbg !21651
  %31 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21652
  %call35 = call i32 @mlxsw_sp_port_pvid_set(%struct.mlxsw_sp_port* %31, i16 zeroext 4095) #9, !dbg !21653
  br label %return, !dbg !21654

return:                                           ; preds = %if.end30, %if.then
  ret void, !dbg !21654
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_ovs_join(%struct.mlxsw_sp_port* %mlxsw_sp_port) #0 !dbg !21655 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %vid = alloca i16, align 2
  %err = alloca i32, align 4
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !21656, metadata !DIExpression()), !dbg !21657
  call void @llvm.dbg.declare(metadata i16* %vid, metadata !21658, metadata !DIExpression()), !dbg !21659
  store i16 1, i16* %vid, align 2, !dbg !21659
  call void @llvm.dbg.declare(metadata i32* %err, metadata !21660, metadata !DIExpression()), !dbg !21661
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21662
  %call = call i32 @mlxsw_sp_port_vp_mode_set(%struct.mlxsw_sp_port* %0, i1 zeroext true) #9, !dbg !21663
  store i32 %call, i32* %err, align 4, !dbg !21664
  %1 = load i32, i32* %err, align 4, !dbg !21665
  %tobool = icmp ne i32 %1, 0, !dbg !21665
  br i1 %tobool, label %if.then, label %if.end, !dbg !21667

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %err, align 4, !dbg !21668
  store i32 %2, i32* %retval, align 4, !dbg !21669
  br label %return, !dbg !21669

if.end:                                           ; preds = %entry
  %3 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21670
  %call1 = call i32 @mlxsw_sp_port_stp_set(%struct.mlxsw_sp_port* %3, i1 zeroext true) #9, !dbg !21671
  store i32 %call1, i32* %err, align 4, !dbg !21672
  %4 = load i32, i32* %err, align 4, !dbg !21673
  %tobool2 = icmp ne i32 %4, 0, !dbg !21673
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !21675

if.then3:                                         ; preds = %if.end
  br label %err_port_stp_set, !dbg !21676

if.end4:                                          ; preds = %if.end
  %5 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21677
  %call5 = call i32 @mlxsw_sp_port_vlan_set(%struct.mlxsw_sp_port* %5, i16 zeroext 1, i16 zeroext 4094, i1 zeroext true, i1 zeroext false) #9, !dbg !21678
  store i32 %call5, i32* %err, align 4, !dbg !21679
  %6 = load i32, i32* %err, align 4, !dbg !21680
  %tobool6 = icmp ne i32 %6, 0, !dbg !21680
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !21682

if.then7:                                         ; preds = %if.end4
  br label %err_port_vlan_set, !dbg !21683

if.end8:                                          ; preds = %if.end4
  br label %for.cond, !dbg !21684

for.cond:                                         ; preds = %for.inc, %if.end8
  %7 = load i16, i16* %vid, align 2, !dbg !21685
  %conv = zext i16 %7 to i32, !dbg !21685
  %cmp = icmp sle i32 %conv, 4095, !dbg !21688
  br i1 %cmp, label %for.body, label %for.end, !dbg !21689

for.body:                                         ; preds = %for.cond
  %8 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21690
  %9 = load i16, i16* %vid, align 2, !dbg !21692
  %call10 = call i32 @mlxsw_sp_port_vid_learning_set(%struct.mlxsw_sp_port* %8, i16 zeroext %9, i1 zeroext false) #9, !dbg !21693
  store i32 %call10, i32* %err, align 4, !dbg !21694
  %10 = load i32, i32* %err, align 4, !dbg !21695
  %tobool11 = icmp ne i32 %10, 0, !dbg !21695
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !21697

if.then12:                                        ; preds = %for.body
  br label %err_vid_learning_set, !dbg !21698

if.end13:                                         ; preds = %for.body
  br label %for.inc, !dbg !21699

for.inc:                                          ; preds = %if.end13
  %11 = load i16, i16* %vid, align 2, !dbg !21700
  %inc = add i16 %11, 1, !dbg !21700
  store i16 %inc, i16* %vid, align 2, !dbg !21700
  br label %for.cond, !dbg !21701, !llvm.loop !21702

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !21704
  br label %return, !dbg !21704

err_vid_learning_set:                             ; preds = %if.then12
  call void @llvm.dbg.label(metadata !21705), !dbg !21706
  %12 = load i16, i16* %vid, align 2, !dbg !21707
  %dec = add i16 %12, -1, !dbg !21707
  store i16 %dec, i16* %vid, align 2, !dbg !21707
  br label %for.cond14, !dbg !21709

for.cond14:                                       ; preds = %for.inc20, %err_vid_learning_set
  %13 = load i16, i16* %vid, align 2, !dbg !21710
  %conv15 = zext i16 %13 to i32, !dbg !21710
  %cmp16 = icmp sge i32 %conv15, 1, !dbg !21712
  br i1 %cmp16, label %for.body18, label %for.end22, !dbg !21713

for.body18:                                       ; preds = %for.cond14
  %14 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21714
  %15 = load i16, i16* %vid, align 2, !dbg !21715
  %call19 = call i32 @mlxsw_sp_port_vid_learning_set(%struct.mlxsw_sp_port* %14, i16 zeroext %15, i1 zeroext true) #9, !dbg !21716
  br label %for.inc20, !dbg !21716

for.inc20:                                        ; preds = %for.body18
  %16 = load i16, i16* %vid, align 2, !dbg !21717
  %dec21 = add i16 %16, -1, !dbg !21717
  store i16 %dec21, i16* %vid, align 2, !dbg !21717
  br label %for.cond14, !dbg !21718, !llvm.loop !21719

for.end22:                                        ; preds = %for.cond14
  br label %err_port_vlan_set, !dbg !21720

err_port_vlan_set:                                ; preds = %for.end22, %if.then7
  call void @llvm.dbg.label(metadata !21721), !dbg !21722
  %17 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21723
  %call23 = call i32 @mlxsw_sp_port_stp_set(%struct.mlxsw_sp_port* %17, i1 zeroext false) #9, !dbg !21724
  br label %err_port_stp_set, !dbg !21724

err_port_stp_set:                                 ; preds = %err_port_vlan_set, %if.then3
  call void @llvm.dbg.label(metadata !21725), !dbg !21726
  %18 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21727
  %call24 = call i32 @mlxsw_sp_port_vp_mode_set(%struct.mlxsw_sp_port* %18, i1 zeroext false) #9, !dbg !21728
  %19 = load i32, i32* %err, align 4, !dbg !21729
  store i32 %19, i32* %retval, align 4, !dbg !21730
  br label %return, !dbg !21730

return:                                           ; preds = %err_port_stp_set, %for.end, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !21731
  ret i32 %20, !dbg !21731
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_port_ovs_leave(%struct.mlxsw_sp_port* %mlxsw_sp_port) #0 !dbg !21732 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %vid = alloca i16, align 2
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !21733, metadata !DIExpression()), !dbg !21734
  call void @llvm.dbg.declare(metadata i16* %vid, metadata !21735, metadata !DIExpression()), !dbg !21736
  store i16 4095, i16* %vid, align 2, !dbg !21737
  br label %for.cond, !dbg !21739

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i16, i16* %vid, align 2, !dbg !21740
  %conv = zext i16 %0 to i32, !dbg !21740
  %cmp = icmp sge i32 %conv, 1, !dbg !21742
  br i1 %cmp, label %for.body, label %for.end, !dbg !21743

for.body:                                         ; preds = %for.cond
  %1 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21744
  %2 = load i16, i16* %vid, align 2, !dbg !21745
  %call = call i32 @mlxsw_sp_port_vid_learning_set(%struct.mlxsw_sp_port* %1, i16 zeroext %2, i1 zeroext true) #9, !dbg !21746
  br label %for.inc, !dbg !21746

for.inc:                                          ; preds = %for.body
  %3 = load i16, i16* %vid, align 2, !dbg !21747
  %dec = add i16 %3, -1, !dbg !21747
  store i16 %dec, i16* %vid, align 2, !dbg !21747
  br label %for.cond, !dbg !21748, !llvm.loop !21749

for.end:                                          ; preds = %for.cond
  %4 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21751
  %call2 = call i32 @mlxsw_sp_port_vlan_set(%struct.mlxsw_sp_port* %4, i16 zeroext 1, i16 zeroext 4094, i1 zeroext false, i1 zeroext false) #9, !dbg !21752
  %5 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21753
  %call3 = call i32 @mlxsw_sp_port_stp_set(%struct.mlxsw_sp_port* %5, i1 zeroext false) #9, !dbg !21754
  %6 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21755
  %call4 = call i32 @mlxsw_sp_port_vp_mode_set(%struct.mlxsw_sp_port* %6, i1 zeroext false) #9, !dbg !21756
  ret void, !dbg !21757
}

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_rif_macvlan_del(%struct.mlxsw_sp*, %struct.net_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_is_bridge_port(%struct.net_device* %dev) #0 !dbg !21758 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21759, metadata !DIExpression()), !dbg !21760
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21761
  %priv_flags = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 37, !dbg !21762
  %1 = load i32, i32* %priv_flags, align 4, !dbg !21762
  %and = and i32 %1, 512, !dbg !21763
  %tobool = icmp ne i32 %and, 0, !dbg !21761
  ret i1 %tobool, !dbg !21764
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.net_device* @mlxsw_sp_bridge_vxlan_dev_find(%struct.net_device* %br_dev) #0 !dbg !21765 {
entry:
  %retval = alloca %struct.net_device*, align 8
  %br_dev.addr = alloca %struct.net_device*, align 8
  %dev = alloca %struct.net_device*, align 8
  %iter = alloca %struct.list_head*, align 8
  store %struct.net_device* %br_dev, %struct.net_device** %br_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %br_dev.addr, metadata !21766, metadata !DIExpression()), !dbg !21767
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !21768, metadata !DIExpression()), !dbg !21769
  call void @llvm.dbg.declare(metadata %struct.list_head** %iter, metadata !21770, metadata !DIExpression()), !dbg !21771
  %0 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !21772
  %adj_list = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 14, !dbg !21772
  %lower = getelementptr inbounds %struct.anon, %struct.anon* %adj_list, i32 0, i32 1, !dbg !21772
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %lower, i32 0, i32 0, !dbg !21772
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !21772
  store %struct.list_head* %1, %struct.list_head** %iter, align 8, !dbg !21772
  %2 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !21772
  %call = call i8* @netdev_lower_get_next(%struct.net_device* %2, %struct.list_head** %iter) #9, !dbg !21772
  %3 = bitcast i8* %call to %struct.net_device*, !dbg !21772
  store %struct.net_device* %3, %struct.net_device** %dev, align 8, !dbg !21772
  br label %for.cond, !dbg !21772

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !21774
  %tobool = icmp ne %struct.net_device* %4, null, !dbg !21772
  br i1 %tobool, label %for.body, label %for.end, !dbg !21772

for.body:                                         ; preds = %for.cond
  %5 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !21776
  %call1 = call zeroext i1 @netif_is_vxlan(%struct.net_device* %5) #9, !dbg !21779
  br i1 %call1, label %if.then, label %if.end, !dbg !21780

if.then:                                          ; preds = %for.body
  %6 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !21781
  store %struct.net_device* %6, %struct.net_device** %retval, align 8, !dbg !21782
  br label %return, !dbg !21782

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !21783

for.inc:                                          ; preds = %if.end
  %7 = load %struct.net_device*, %struct.net_device** %br_dev.addr, align 8, !dbg !21774
  %call2 = call i8* @netdev_lower_get_next(%struct.net_device* %7, %struct.list_head** %iter) #9, !dbg !21774
  %8 = bitcast i8* %call2 to %struct.net_device*, !dbg !21774
  store %struct.net_device* %8, %struct.net_device** %dev, align 8, !dbg !21774
  br label %for.cond, !dbg !21774, !llvm.loop !21784

for.end:                                          ; preds = %for.cond
  store %struct.net_device* null, %struct.net_device** %retval, align 8, !dbg !21786
  br label %return, !dbg !21786

return:                                           ; preds = %for.end, %if.then
  %9 = load %struct.net_device*, %struct.net_device** %retval, align 8, !dbg !21787
  ret %struct.net_device* %9, !dbg !21787
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_lag_index_get(%struct.mlxsw_sp* %mlxsw_sp, %struct.net_device* %lag_dev, i16* %p_lag_id) #0 !dbg !21788 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %lag_dev.addr = alloca %struct.net_device*, align 8
  %p_lag_id.addr = alloca i16*, align 8
  %lag = alloca %struct.mlxsw_sp_upper*, align 8
  %free_lag_id = alloca i32, align 4
  %max_lag = alloca i64, align 8
  %i = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !21791, metadata !DIExpression()), !dbg !21792
  store %struct.net_device* %lag_dev, %struct.net_device** %lag_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %lag_dev.addr, metadata !21793, metadata !DIExpression()), !dbg !21794
  store i16* %p_lag_id, i16** %p_lag_id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %p_lag_id.addr, metadata !21795, metadata !DIExpression()), !dbg !21796
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_upper** %lag, metadata !21797, metadata !DIExpression()), !dbg !21798
  call void @llvm.dbg.declare(metadata i32* %free_lag_id, metadata !21799, metadata !DIExpression()), !dbg !21800
  store i32 -1, i32* %free_lag_id, align 4, !dbg !21800
  call void @llvm.dbg.declare(metadata i64* %max_lag, metadata !21801, metadata !DIExpression()), !dbg !21802
  call void @llvm.dbg.declare(metadata i32* %i, metadata !21803, metadata !DIExpression()), !dbg !21804
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21805
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %0, i32 0, i32 1, !dbg !21805
  %1 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !21805
  %call = call i64 @mlxsw_core_res_get(%struct.mlxsw_core* %1, i32 15) #9, !dbg !21805
  store i64 %call, i64* %max_lag, align 8, !dbg !21806
  store i32 0, i32* %i, align 4, !dbg !21807
  br label %for.cond, !dbg !21809

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !21810
  %conv = sext i32 %2 to i64, !dbg !21810
  %3 = load i64, i64* %max_lag, align 8, !dbg !21812
  %cmp = icmp ult i64 %conv, %3, !dbg !21813
  br i1 %cmp, label %for.body, label %for.end, !dbg !21814

for.body:                                         ; preds = %for.cond
  %4 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21815
  %5 = load i32, i32* %i, align 4, !dbg !21817
  %conv2 = trunc i32 %5 to i16, !dbg !21817
  %call3 = call %struct.mlxsw_sp_upper* @mlxsw_sp_lag_get(%struct.mlxsw_sp* %4, i16 zeroext %conv2) #9, !dbg !21818
  store %struct.mlxsw_sp_upper* %call3, %struct.mlxsw_sp_upper** %lag, align 8, !dbg !21819
  %6 = load %struct.mlxsw_sp_upper*, %struct.mlxsw_sp_upper** %lag, align 8, !dbg !21820
  %ref_count = getelementptr inbounds %struct.mlxsw_sp_upper, %struct.mlxsw_sp_upper* %6, i32 0, i32 1, !dbg !21822
  %7 = load i32, i32* %ref_count, align 8, !dbg !21822
  %tobool = icmp ne i32 %7, 0, !dbg !21820
  br i1 %tobool, label %if.then, label %if.else, !dbg !21823

if.then:                                          ; preds = %for.body
  %8 = load %struct.mlxsw_sp_upper*, %struct.mlxsw_sp_upper** %lag, align 8, !dbg !21824
  %dev = getelementptr inbounds %struct.mlxsw_sp_upper, %struct.mlxsw_sp_upper* %8, i32 0, i32 0, !dbg !21827
  %9 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !21827
  %10 = load %struct.net_device*, %struct.net_device** %lag_dev.addr, align 8, !dbg !21828
  %cmp4 = icmp eq %struct.net_device* %9, %10, !dbg !21829
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !21830

if.then6:                                         ; preds = %if.then
  %11 = load i32, i32* %i, align 4, !dbg !21831
  %conv7 = trunc i32 %11 to i16, !dbg !21831
  %12 = load i16*, i16** %p_lag_id.addr, align 8, !dbg !21833
  store i16 %conv7, i16* %12, align 2, !dbg !21834
  store i32 0, i32* %retval, align 4, !dbg !21835
  br label %return, !dbg !21835

if.end:                                           ; preds = %if.then
  br label %if.end12, !dbg !21836

if.else:                                          ; preds = %for.body
  %13 = load i32, i32* %free_lag_id, align 4, !dbg !21837
  %cmp8 = icmp slt i32 %13, 0, !dbg !21839
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !21840

if.then10:                                        ; preds = %if.else
  %14 = load i32, i32* %i, align 4, !dbg !21841
  store i32 %14, i32* %free_lag_id, align 4, !dbg !21843
  br label %if.end11, !dbg !21844

if.end11:                                         ; preds = %if.then10, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end
  br label %for.inc, !dbg !21845

for.inc:                                          ; preds = %if.end12
  %15 = load i32, i32* %i, align 4, !dbg !21846
  %inc = add i32 %15, 1, !dbg !21846
  store i32 %inc, i32* %i, align 4, !dbg !21846
  br label %for.cond, !dbg !21847, !llvm.loop !21848

for.end:                                          ; preds = %for.cond
  %16 = load i32, i32* %free_lag_id, align 4, !dbg !21850
  %cmp13 = icmp slt i32 %16, 0, !dbg !21852
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !21853

if.then15:                                        ; preds = %for.end
  store i32 -16, i32* %retval, align 4, !dbg !21854
  br label %return, !dbg !21854

if.end16:                                         ; preds = %for.end
  %17 = load i32, i32* %free_lag_id, align 4, !dbg !21855
  %conv17 = trunc i32 %17 to i16, !dbg !21855
  %18 = load i16*, i16** %p_lag_id.addr, align 8, !dbg !21856
  store i16 %conv17, i16* %18, align 2, !dbg !21857
  store i32 0, i32* %retval, align 4, !dbg !21858
  br label %return, !dbg !21858

return:                                           ; preds = %if.end16, %if.then15, %if.then6
  %19 = load i32, i32* %retval, align 4, !dbg !21859
  ret i32 %19, !dbg !21859
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_sp_upper* @mlxsw_sp_lag_get(%struct.mlxsw_sp* %mlxsw_sp, i16 zeroext %lag_id) #0 !dbg !21860 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %lag_id.addr = alloca i16, align 2
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !21863, metadata !DIExpression()), !dbg !21864
  store i16 %lag_id, i16* %lag_id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %lag_id.addr, metadata !21865, metadata !DIExpression()), !dbg !21866
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21867
  %lags = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %0, i32 0, i32 5, !dbg !21868
  %1 = load %struct.mlxsw_sp_upper*, %struct.mlxsw_sp_upper** %lags, align 8, !dbg !21868
  %2 = load i16, i16* %lag_id.addr, align 2, !dbg !21869
  %idxprom = zext i16 %2 to i64, !dbg !21867
  %arrayidx = getelementptr %struct.mlxsw_sp_upper, %struct.mlxsw_sp_upper* %1, i64 %idxprom, !dbg !21867
  ret %struct.mlxsw_sp_upper* %arrayidx, !dbg !21870
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_is_bond_slave(%struct.net_device* %dev) #0 !dbg !21871 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21872, metadata !DIExpression()), !dbg !21873
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21874
  %flags = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 36, !dbg !21875
  %1 = load i32, i32* %flags, align 8, !dbg !21875
  %and = and i32 %1, 2048, !dbg !21876
  %tobool = icmp ne i32 %and, 0, !dbg !21876
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !21877

land.rhs:                                         ; preds = %entry
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21878
  %priv_flags = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 37, !dbg !21879
  %3 = load i32, i32* %priv_flags, align 4, !dbg !21879
  %and1 = and i32 %3, 4, !dbg !21880
  %tobool2 = icmp ne i32 %and1, 0, !dbg !21877
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ], !dbg !21881
  ret i1 %4, !dbg !21882
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_is_team_port(%struct.net_device* %dev) #0 !dbg !21883 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21884, metadata !DIExpression()), !dbg !21885
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21886
  %priv_flags = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 37, !dbg !21887
  %1 = load i32, i32* %priv_flags, align 4, !dbg !21887
  %and = and i32 %1, 8192, !dbg !21888
  %tobool = icmp ne i32 %and, 0, !dbg !21886
  ret i1 %tobool, !dbg !21889
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_lag_create(%struct.mlxsw_sp* %mlxsw_sp, i16 zeroext %lag_id) #0 !dbg !21890 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %lag_id.addr = alloca i16, align 2
  %sldr_pl = alloca [12 x i8], align 1
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !21891, metadata !DIExpression()), !dbg !21892
  store i16 %lag_id, i16* %lag_id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %lag_id.addr, metadata !21893, metadata !DIExpression()), !dbg !21894
  call void @llvm.dbg.declare(metadata [12 x i8]* %sldr_pl, metadata !21895, metadata !DIExpression()), !dbg !21896
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %sldr_pl, i64 0, i64 0, !dbg !21897
  %0 = load i16, i16* %lag_id.addr, align 2, !dbg !21898
  %conv = trunc i16 %0 to i8, !dbg !21898
  call void @mlxsw_reg_sldr_lag_create_pack(i8* %arraydecay, i8 zeroext %conv) #9, !dbg !21899
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21900
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %1, i32 0, i32 1, !dbg !21901
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !21901
  %arraydecay1 = getelementptr inbounds [12 x i8], [12 x i8]* %sldr_pl, i64 0, i64 0, !dbg !21902
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %2, %struct.mlxsw_reg_info* @mlxsw_reg_sldr, i8* %arraydecay1) #9, !dbg !21903
  ret i32 %call, !dbg !21904
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_lag_index_get(%struct.mlxsw_sp* %mlxsw_sp, i16 zeroext %lag_id, i8* %p_port_index) #0 !dbg !21905 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %lag_id.addr = alloca i16, align 2
  %p_port_index.addr = alloca i8*, align 8
  %max_lag_members = alloca i64, align 8
  %i = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !21908, metadata !DIExpression()), !dbg !21909
  store i16 %lag_id, i16* %lag_id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %lag_id.addr, metadata !21910, metadata !DIExpression()), !dbg !21911
  store i8* %p_port_index, i8** %p_port_index.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p_port_index.addr, metadata !21912, metadata !DIExpression()), !dbg !21913
  call void @llvm.dbg.declare(metadata i64* %max_lag_members, metadata !21914, metadata !DIExpression()), !dbg !21915
  call void @llvm.dbg.declare(metadata i32* %i, metadata !21916, metadata !DIExpression()), !dbg !21917
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21918
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %0, i32 0, i32 1, !dbg !21918
  %1 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !21918
  %call = call i64 @mlxsw_core_res_get(%struct.mlxsw_core* %1, i32 16) #9, !dbg !21918
  store i64 %call, i64* %max_lag_members, align 8, !dbg !21919
  store i32 0, i32* %i, align 4, !dbg !21920
  br label %for.cond, !dbg !21922

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !21923
  %conv = sext i32 %2 to i64, !dbg !21923
  %3 = load i64, i64* %max_lag_members, align 8, !dbg !21925
  %cmp = icmp ult i64 %conv, %3, !dbg !21926
  br i1 %cmp, label %for.body, label %for.end, !dbg !21927

for.body:                                         ; preds = %for.cond
  %4 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21928
  %5 = load i16, i16* %lag_id.addr, align 2, !dbg !21931
  %6 = load i32, i32* %i, align 4, !dbg !21932
  %conv2 = trunc i32 %6 to i8, !dbg !21932
  %call3 = call %struct.mlxsw_sp_port* @mlxsw_sp_port_lagged_get(%struct.mlxsw_sp* %4, i16 zeroext %5, i8 zeroext %conv2) #9, !dbg !21933
  %tobool = icmp ne %struct.mlxsw_sp_port* %call3, null, !dbg !21933
  br i1 %tobool, label %if.end, label %if.then, !dbg !21934

if.then:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !21935
  %conv4 = trunc i32 %7 to i8, !dbg !21935
  %8 = load i8*, i8** %p_port_index.addr, align 8, !dbg !21937
  store i8 %conv4, i8* %8, align 1, !dbg !21938
  store i32 0, i32* %retval, align 4, !dbg !21939
  br label %return, !dbg !21939

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !21940

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4, !dbg !21941
  %inc = add i32 %9, 1, !dbg !21941
  store i32 %inc, i32* %i, align 4, !dbg !21941
  br label %for.cond, !dbg !21942, !llvm.loop !21943

for.end:                                          ; preds = %for.cond
  store i32 -16, i32* %retval, align 4, !dbg !21945
  br label %return, !dbg !21945

return:                                           ; preds = %for.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !21946
  ret i32 %10, !dbg !21946
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_lag_col_port_add(%struct.mlxsw_sp_port* %mlxsw_sp_port, i16 zeroext %lag_id, i8 zeroext %port_index) #0 !dbg !21947 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %lag_id.addr = alloca i16, align 2
  %port_index.addr = alloca i8, align 1
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %slcor_pl = alloca [16 x i8], align 16
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !21948, metadata !DIExpression()), !dbg !21949
  store i16 %lag_id, i16* %lag_id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %lag_id.addr, metadata !21950, metadata !DIExpression()), !dbg !21951
  store i8 %port_index, i8* %port_index.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %port_index.addr, metadata !21952, metadata !DIExpression()), !dbg !21953
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !21954, metadata !DIExpression()), !dbg !21955
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21956
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !21957
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !21957
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !21955
  call void @llvm.dbg.declare(metadata [16 x i8]* %slcor_pl, metadata !21958, metadata !DIExpression()), !dbg !21959
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %slcor_pl, i64 0, i64 0, !dbg !21960
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !21961
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %2, i32 0, i32 3, !dbg !21962
  %3 = load i8, i8* %local_port, align 8, !dbg !21962
  %4 = load i16, i16* %lag_id.addr, align 2, !dbg !21963
  %5 = load i8, i8* %port_index.addr, align 1, !dbg !21964
  call void @mlxsw_reg_slcor_port_add_pack(i8* %arraydecay, i8 zeroext %3, i16 zeroext %4, i8 zeroext %5) #9, !dbg !21965
  %6 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !21966
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %6, i32 0, i32 1, !dbg !21967
  %7 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !21967
  %arraydecay2 = getelementptr inbounds [16 x i8], [16 x i8]* %slcor_pl, i64 0, i64 0, !dbg !21968
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %7, %struct.mlxsw_reg_info* @mlxsw_reg_slcor, i8* %arraydecay2) #9, !dbg !21969
  ret i32 %call, !dbg !21970
}

; Function Attrs: noredzone
declare dso_local void @mlxsw_core_lag_mapping_set(%struct.mlxsw_core*, i16 zeroext, i8 zeroext, i8 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_lag_destroy(%struct.mlxsw_sp* %mlxsw_sp, i16 zeroext %lag_id) #0 !dbg !21971 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %lag_id.addr = alloca i16, align 2
  %sldr_pl = alloca [12 x i8], align 1
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !21972, metadata !DIExpression()), !dbg !21973
  store i16 %lag_id, i16* %lag_id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %lag_id.addr, metadata !21974, metadata !DIExpression()), !dbg !21975
  call void @llvm.dbg.declare(metadata [12 x i8]* %sldr_pl, metadata !21976, metadata !DIExpression()), !dbg !21977
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %sldr_pl, i64 0, i64 0, !dbg !21978
  %0 = load i16, i16* %lag_id.addr, align 2, !dbg !21979
  %conv = trunc i16 %0 to i8, !dbg !21979
  call void @mlxsw_reg_sldr_lag_destroy_pack(i8* %arraydecay, i8 zeroext %conv) #9, !dbg !21980
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !21981
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %1, i32 0, i32 1, !dbg !21982
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !21982
  %arraydecay1 = getelementptr inbounds [12 x i8], [12 x i8]* %sldr_pl, i64 0, i64 0, !dbg !21983
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %2, %struct.mlxsw_reg_info* @mlxsw_reg_sldr, i8* %arraydecay1) #9, !dbg !21984
  ret i32 %call, !dbg !21985
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sldr_lag_create_pack(i8* %payload, i8 zeroext %lag_id) #0 !dbg !21986 {
entry:
  %payload.addr = alloca i8*, align 8
  %lag_id.addr = alloca i8, align 1
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !21987, metadata !DIExpression()), !dbg !21988
  store i8 %lag_id, i8* %lag_id.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %lag_id.addr, metadata !21989, metadata !DIExpression()), !dbg !21990
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !21991
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_sldr, i32 0, i32 1), align 2, !dbg !21991
  %conv = zext i16 %1 to i64, !dbg !21991
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !21991
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !21992
  call void @mlxsw_reg_sldr_op_set(i8* %2, i32 0) #9, !dbg !21993
  %3 = load i8*, i8** %payload.addr, align 8, !dbg !21994
  %4 = load i8, i8* %lag_id.addr, align 1, !dbg !21995
  %conv1 = zext i8 %4 to i32, !dbg !21995
  call void @mlxsw_reg_sldr_lag_id_set(i8* %3, i32 %conv1) #9, !dbg !21996
  ret void, !dbg !21997
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sldr_op_set(i8* %buf, i32 %val) #0 !dbg !21998 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !21999, metadata !DIExpression()), !dbg !22000
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !22001, metadata !DIExpression()), !dbg !22000
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !22000
  %1 = load i32, i32* %val.addr, align 4, !dbg !22000
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sldr_op_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !22000
  ret void, !dbg !22000
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sldr_lag_id_set(i8* %buf, i32 %val) #0 !dbg !22002 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !22003, metadata !DIExpression()), !dbg !22004
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !22005, metadata !DIExpression()), !dbg !22004
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !22004
  %1 = load i32, i32* %val.addr, align 4, !dbg !22004
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sldr_lag_id_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !22004
  ret void, !dbg !22004
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_sp_port* @mlxsw_sp_port_lagged_get(%struct.mlxsw_sp* %mlxsw_sp, i16 zeroext %lag_id, i8 zeroext %port_index) #0 !dbg !22006 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %lag_id.addr = alloca i16, align 2
  %port_index.addr = alloca i8, align 1
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %local_port = alloca i8, align 1
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !22009, metadata !DIExpression()), !dbg !22010
  store i16 %lag_id, i16* %lag_id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %lag_id.addr, metadata !22011, metadata !DIExpression()), !dbg !22012
  store i8 %port_index, i8* %port_index.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %port_index.addr, metadata !22013, metadata !DIExpression()), !dbg !22014
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !22015, metadata !DIExpression()), !dbg !22016
  call void @llvm.dbg.declare(metadata i8* %local_port, metadata !22017, metadata !DIExpression()), !dbg !22018
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !22019
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %0, i32 0, i32 1, !dbg !22020
  %1 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !22020
  %2 = load i16, i16* %lag_id.addr, align 2, !dbg !22021
  %3 = load i8, i8* %port_index.addr, align 1, !dbg !22022
  %call = call zeroext i8 @mlxsw_core_lag_mapping_get(%struct.mlxsw_core* %1, i16 zeroext %2, i8 zeroext %3) #9, !dbg !22023
  store i8 %call, i8* %local_port, align 1, !dbg !22024
  %4 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !22025
  %ports = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %4, i32 0, i32 0, !dbg !22026
  %5 = load %struct.mlxsw_sp_port**, %struct.mlxsw_sp_port*** %ports, align 8, !dbg !22026
  %6 = load i8, i8* %local_port, align 1, !dbg !22027
  %idxprom = zext i8 %6 to i64, !dbg !22025
  %arrayidx = getelementptr %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %5, i64 %idxprom, !dbg !22025
  %7 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %arrayidx, align 8, !dbg !22025
  store %struct.mlxsw_sp_port* %7, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !22028
  %8 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !22029
  %tobool = icmp ne %struct.mlxsw_sp_port* %8, null, !dbg !22029
  br i1 %tobool, label %land.lhs.true, label %cond.false, !dbg !22030

land.lhs.true:                                    ; preds = %entry
  %9 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !22031
  %lagged = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %9, i32 0, i32 4, !dbg !22032
  %bf.load = load i8, i8* %lagged, align 1, !dbg !22032
  %bf.clear = and i8 %bf.load, 1, !dbg !22032
  %conv = zext i8 %bf.clear to i32, !dbg !22031
  %tobool1 = icmp ne i32 %conv, 0, !dbg !22031
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !22029

cond.true:                                        ; preds = %land.lhs.true
  %10 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !22033
  br label %cond.end, !dbg !22029

cond.false:                                       ; preds = %land.lhs.true, %entry
  br label %cond.end, !dbg !22029

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.mlxsw_sp_port* [ %10, %cond.true ], [ null, %cond.false ], !dbg !22029
  ret %struct.mlxsw_sp_port* %cond, !dbg !22034
}

; Function Attrs: noredzone
declare dso_local zeroext i8 @mlxsw_core_lag_mapping_get(%struct.mlxsw_core*, i16 zeroext, i8 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_slcor_port_add_pack(i8* %payload, i8 zeroext %local_port, i16 zeroext %lag_id, i8 zeroext %port_index) #0 !dbg !22035 {
entry:
  %payload.addr = alloca i8*, align 8
  %local_port.addr = alloca i8, align 1
  %lag_id.addr = alloca i16, align 2
  %port_index.addr = alloca i8, align 1
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !22038, metadata !DIExpression()), !dbg !22039
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !22040, metadata !DIExpression()), !dbg !22041
  store i16 %lag_id, i16* %lag_id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %lag_id.addr, metadata !22042, metadata !DIExpression()), !dbg !22043
  store i8 %port_index, i8* %port_index.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %port_index.addr, metadata !22044, metadata !DIExpression()), !dbg !22045
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !22046
  %1 = load i8, i8* %local_port.addr, align 1, !dbg !22047
  %2 = load i16, i16* %lag_id.addr, align 2, !dbg !22048
  call void @mlxsw_reg_slcor_pack(i8* %0, i8 zeroext %1, i16 zeroext %2, i32 0) #9, !dbg !22049
  %3 = load i8*, i8** %payload.addr, align 8, !dbg !22050
  %4 = load i8, i8* %port_index.addr, align 1, !dbg !22051
  %conv = zext i8 %4 to i32, !dbg !22051
  call void @mlxsw_reg_slcor_port_index_set(i8* %3, i32 %conv) #9, !dbg !22052
  ret void, !dbg !22053
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_slcor_pack(i8* %payload, i8 zeroext %local_port, i16 zeroext %lag_id, i32 %col) #0 !dbg !22054 {
entry:
  %payload.addr = alloca i8*, align 8
  %local_port.addr = alloca i8, align 1
  %lag_id.addr = alloca i16, align 2
  %col.addr = alloca i32, align 4
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !22057, metadata !DIExpression()), !dbg !22058
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !22059, metadata !DIExpression()), !dbg !22060
  store i16 %lag_id, i16* %lag_id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %lag_id.addr, metadata !22061, metadata !DIExpression()), !dbg !22062
  store i32 %col, i32* %col.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %col.addr, metadata !22063, metadata !DIExpression()), !dbg !22064
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !22065
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_slcor, i32 0, i32 1), align 2, !dbg !22065
  %conv = zext i16 %1 to i64, !dbg !22065
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !22065
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !22066
  %3 = load i32, i32* %col.addr, align 4, !dbg !22067
  call void @mlxsw_reg_slcor_col_set(i8* %2, i32 %3) #9, !dbg !22068
  %4 = load i8*, i8** %payload.addr, align 8, !dbg !22069
  %5 = load i8, i8* %local_port.addr, align 1, !dbg !22070
  %conv1 = zext i8 %5 to i32, !dbg !22070
  call void @mlxsw_reg_slcor_local_port_set(i8* %4, i32 %conv1) #9, !dbg !22071
  %6 = load i8*, i8** %payload.addr, align 8, !dbg !22072
  %7 = load i16, i16* %lag_id.addr, align 2, !dbg !22073
  %conv2 = zext i16 %7 to i32, !dbg !22073
  call void @mlxsw_reg_slcor_lag_id_set(i8* %6, i32 %conv2) #9, !dbg !22074
  ret void, !dbg !22075
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_slcor_port_index_set(i8* %buf, i32 %val) #0 !dbg !22076 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !22077, metadata !DIExpression()), !dbg !22078
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !22079, metadata !DIExpression()), !dbg !22078
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !22078
  %1 = load i32, i32* %val.addr, align 4, !dbg !22078
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_slcor_port_index_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !22078
  ret void, !dbg !22078
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_slcor_col_set(i8* %buf, i32 %val) #0 !dbg !22080 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !22081, metadata !DIExpression()), !dbg !22082
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !22083, metadata !DIExpression()), !dbg !22082
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !22082
  %1 = load i32, i32* %val.addr, align 4, !dbg !22082
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_slcor_col_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !22082
  ret void, !dbg !22082
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_slcor_local_port_set(i8* %buf, i32 %val) #0 !dbg !22084 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !22085, metadata !DIExpression()), !dbg !22086
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !22087, metadata !DIExpression()), !dbg !22086
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !22086
  %1 = load i32, i32* %val.addr, align 4, !dbg !22086
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_slcor_local_port_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !22086
  ret void, !dbg !22086
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_slcor_lag_id_set(i8* %buf, i32 %val) #0 !dbg !22088 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !22089, metadata !DIExpression()), !dbg !22090
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !22091, metadata !DIExpression()), !dbg !22090
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !22090
  %1 = load i32, i32* %val.addr, align 4, !dbg !22090
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_slcor_lag_id_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !22090
  ret void, !dbg !22090
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sldr_lag_destroy_pack(i8* %payload, i8 zeroext %lag_id) #0 !dbg !22092 {
entry:
  %payload.addr = alloca i8*, align 8
  %lag_id.addr = alloca i8, align 1
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !22093, metadata !DIExpression()), !dbg !22094
  store i8 %lag_id, i8* %lag_id.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %lag_id.addr, metadata !22095, metadata !DIExpression()), !dbg !22096
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !22097
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_sldr, i32 0, i32 1), align 2, !dbg !22097
  %conv = zext i16 %1 to i64, !dbg !22097
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !22097
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !22098
  call void @mlxsw_reg_sldr_op_set(i8* %2, i32 1) #9, !dbg !22099
  %3 = load i8*, i8** %payload.addr, align 8, !dbg !22100
  %4 = load i8, i8* %lag_id.addr, align 1, !dbg !22101
  %conv1 = zext i8 %4 to i32, !dbg !22101
  call void @mlxsw_reg_sldr_lag_id_set(i8* %3, i32 %conv1) #9, !dbg !22102
  ret void, !dbg !22103
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_lag_dist_port_remove(%struct.mlxsw_sp_port* %mlxsw_sp_port, i16 zeroext %lag_id) #0 !dbg !22104 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %lag_id.addr = alloca i16, align 2
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %sldr_pl = alloca [12 x i8], align 1
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !22105, metadata !DIExpression()), !dbg !22106
  store i16 %lag_id, i16* %lag_id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %lag_id.addr, metadata !22107, metadata !DIExpression()), !dbg !22108
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !22109, metadata !DIExpression()), !dbg !22110
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !22111
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !22112
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !22112
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !22110
  call void @llvm.dbg.declare(metadata [12 x i8]* %sldr_pl, metadata !22113, metadata !DIExpression()), !dbg !22114
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %sldr_pl, i64 0, i64 0, !dbg !22115
  %2 = load i16, i16* %lag_id.addr, align 2, !dbg !22116
  %conv = trunc i16 %2 to i8, !dbg !22116
  %3 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !22117
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %3, i32 0, i32 3, !dbg !22118
  %4 = load i8, i8* %local_port, align 8, !dbg !22118
  call void @mlxsw_reg_sldr_lag_remove_port_pack(i8* %arraydecay, i8 zeroext %conv, i8 zeroext %4) #9, !dbg !22119
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !22120
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %5, i32 0, i32 1, !dbg !22121
  %6 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !22121
  %arraydecay2 = getelementptr inbounds [12 x i8], [12 x i8]* %sldr_pl, i64 0, i64 0, !dbg !22122
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %6, %struct.mlxsw_reg_info* @mlxsw_reg_sldr, i8* %arraydecay2) #9, !dbg !22123
  ret i32 %call, !dbg !22124
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_lag_col_port_disable(%struct.mlxsw_sp_port* %mlxsw_sp_port, i16 zeroext %lag_id) #0 !dbg !22125 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %lag_id.addr = alloca i16, align 2
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %slcor_pl = alloca [16 x i8], align 16
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !22126, metadata !DIExpression()), !dbg !22127
  store i16 %lag_id, i16* %lag_id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %lag_id.addr, metadata !22128, metadata !DIExpression()), !dbg !22129
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !22130, metadata !DIExpression()), !dbg !22131
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !22132
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !22133
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !22133
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !22131
  call void @llvm.dbg.declare(metadata [16 x i8]* %slcor_pl, metadata !22134, metadata !DIExpression()), !dbg !22135
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %slcor_pl, i64 0, i64 0, !dbg !22136
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !22137
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %2, i32 0, i32 3, !dbg !22138
  %3 = load i8, i8* %local_port, align 8, !dbg !22138
  %4 = load i16, i16* %lag_id.addr, align 2, !dbg !22139
  call void @mlxsw_reg_slcor_col_disable_pack(i8* %arraydecay, i8 zeroext %3, i16 zeroext %4) #9, !dbg !22140
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !22141
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %5, i32 0, i32 1, !dbg !22142
  %6 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !22142
  %arraydecay2 = getelementptr inbounds [16 x i8], [16 x i8]* %slcor_pl, i64 0, i64 0, !dbg !22143
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %6, %struct.mlxsw_reg_info* @mlxsw_reg_slcor, i8* %arraydecay2) #9, !dbg !22144
  ret i32 %call, !dbg !22145
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_lag_dist_port_add(%struct.mlxsw_sp_port* %mlxsw_sp_port, i16 zeroext %lag_id) #0 !dbg !22146 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %lag_id.addr = alloca i16, align 2
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %sldr_pl = alloca [12 x i8], align 1
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !22147, metadata !DIExpression()), !dbg !22148
  store i16 %lag_id, i16* %lag_id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %lag_id.addr, metadata !22149, metadata !DIExpression()), !dbg !22150
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !22151, metadata !DIExpression()), !dbg !22152
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !22153
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !22154
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !22154
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !22152
  call void @llvm.dbg.declare(metadata [12 x i8]* %sldr_pl, metadata !22155, metadata !DIExpression()), !dbg !22156
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %sldr_pl, i64 0, i64 0, !dbg !22157
  %2 = load i16, i16* %lag_id.addr, align 2, !dbg !22158
  %conv = trunc i16 %2 to i8, !dbg !22158
  %3 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !22159
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %3, i32 0, i32 3, !dbg !22160
  %4 = load i8, i8* %local_port, align 8, !dbg !22160
  call void @mlxsw_reg_sldr_lag_add_port_pack(i8* %arraydecay, i8 zeroext %conv, i8 zeroext %4) #9, !dbg !22161
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !22162
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %5, i32 0, i32 1, !dbg !22163
  %6 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !22163
  %arraydecay2 = getelementptr inbounds [12 x i8], [12 x i8]* %sldr_pl, i64 0, i64 0, !dbg !22164
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %6, %struct.mlxsw_reg_info* @mlxsw_reg_sldr, i8* %arraydecay2) #9, !dbg !22165
  ret i32 %call, !dbg !22166
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sldr_lag_remove_port_pack(i8* %payload, i8 zeroext %lag_id, i8 zeroext %local_port) #0 !dbg !22167 {
entry:
  %payload.addr = alloca i8*, align 8
  %lag_id.addr = alloca i8, align 1
  %local_port.addr = alloca i8, align 1
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !22170, metadata !DIExpression()), !dbg !22171
  store i8 %lag_id, i8* %lag_id.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %lag_id.addr, metadata !22172, metadata !DIExpression()), !dbg !22173
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !22174, metadata !DIExpression()), !dbg !22175
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !22176
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_sldr, i32 0, i32 1), align 2, !dbg !22176
  %conv = zext i16 %1 to i64, !dbg !22176
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !22176
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !22177
  call void @mlxsw_reg_sldr_op_set(i8* %2, i32 3) #9, !dbg !22178
  %3 = load i8*, i8** %payload.addr, align 8, !dbg !22179
  %4 = load i8, i8* %lag_id.addr, align 1, !dbg !22180
  %conv1 = zext i8 %4 to i32, !dbg !22180
  call void @mlxsw_reg_sldr_lag_id_set(i8* %3, i32 %conv1) #9, !dbg !22181
  %5 = load i8*, i8** %payload.addr, align 8, !dbg !22182
  call void @mlxsw_reg_sldr_num_ports_set(i8* %5, i32 1) #9, !dbg !22183
  %6 = load i8*, i8** %payload.addr, align 8, !dbg !22184
  %7 = load i8, i8* %local_port.addr, align 1, !dbg !22185
  %conv2 = zext i8 %7 to i32, !dbg !22185
  call void @mlxsw_reg_sldr_system_port_set(i8* %6, i16 zeroext 0, i32 %conv2) #9, !dbg !22186
  ret void, !dbg !22187
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sldr_num_ports_set(i8* %buf, i32 %val) #0 !dbg !22188 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !22189, metadata !DIExpression()), !dbg !22190
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !22191, metadata !DIExpression()), !dbg !22190
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !22190
  %1 = load i32, i32* %val.addr, align 4, !dbg !22190
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sldr_num_ports_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !22190
  ret void, !dbg !22190
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sldr_system_port_set(i8* %buf, i16 zeroext %index, i32 %val) #0 !dbg !22192 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !22193, metadata !DIExpression()), !dbg !22194
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !22195, metadata !DIExpression()), !dbg !22194
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !22196, metadata !DIExpression()), !dbg !22194
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !22194
  %1 = load i16, i16* %index.addr, align 2, !dbg !22194
  %2 = load i32, i32* %val.addr, align 4, !dbg !22194
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sldr_system_port_item to %struct.mlxsw_item*), i16 zeroext %1, i32 %2) #9, !dbg !22194
  ret void, !dbg !22194
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_slcor_col_disable_pack(i8* %payload, i8 zeroext %local_port, i16 zeroext %lag_id) #0 !dbg !22197 {
entry:
  %payload.addr = alloca i8*, align 8
  %local_port.addr = alloca i8, align 1
  %lag_id.addr = alloca i16, align 2
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !22198, metadata !DIExpression()), !dbg !22199
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !22200, metadata !DIExpression()), !dbg !22201
  store i16 %lag_id, i16* %lag_id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %lag_id.addr, metadata !22202, metadata !DIExpression()), !dbg !22203
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !22204
  %1 = load i8, i8* %local_port.addr, align 1, !dbg !22205
  %2 = load i16, i16* %lag_id.addr, align 2, !dbg !22206
  call void @mlxsw_reg_slcor_pack(i8* %0, i8 zeroext %1, i16 zeroext %2, i32 1) #9, !dbg !22207
  ret void, !dbg !22208
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sldr_lag_add_port_pack(i8* %payload, i8 zeroext %lag_id, i8 zeroext %local_port) #0 !dbg !22209 {
entry:
  %payload.addr = alloca i8*, align 8
  %lag_id.addr = alloca i8, align 1
  %local_port.addr = alloca i8, align 1
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !22210, metadata !DIExpression()), !dbg !22211
  store i8 %lag_id, i8* %lag_id.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %lag_id.addr, metadata !22212, metadata !DIExpression()), !dbg !22213
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !22214, metadata !DIExpression()), !dbg !22215
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !22216
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_sldr, i32 0, i32 1), align 2, !dbg !22216
  %conv = zext i16 %1 to i64, !dbg !22216
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !22216
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !22217
  call void @mlxsw_reg_sldr_op_set(i8* %2, i32 2) #9, !dbg !22218
  %3 = load i8*, i8** %payload.addr, align 8, !dbg !22219
  %4 = load i8, i8* %lag_id.addr, align 1, !dbg !22220
  %conv1 = zext i8 %4 to i32, !dbg !22220
  call void @mlxsw_reg_sldr_lag_id_set(i8* %3, i32 %conv1) #9, !dbg !22221
  %5 = load i8*, i8** %payload.addr, align 8, !dbg !22222
  call void @mlxsw_reg_sldr_num_ports_set(i8* %5, i32 1) #9, !dbg !22223
  %6 = load i8*, i8** %payload.addr, align 8, !dbg !22224
  %7 = load i8, i8* %local_port.addr, align 1, !dbg !22225
  %conv2 = zext i8 %7 to i32, !dbg !22225
  call void @mlxsw_reg_sldr_system_port_set(i8* %6, i16 zeroext 0, i32 %conv2) #9, !dbg !22226
  ret void, !dbg !22227
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_lag_col_port_remove(%struct.mlxsw_sp_port* %mlxsw_sp_port, i16 zeroext %lag_id) #0 !dbg !22228 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %lag_id.addr = alloca i16, align 2
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %slcor_pl = alloca [16 x i8], align 16
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !22229, metadata !DIExpression()), !dbg !22230
  store i16 %lag_id, i16* %lag_id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %lag_id.addr, metadata !22231, metadata !DIExpression()), !dbg !22232
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !22233, metadata !DIExpression()), !dbg !22234
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !22235
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !22236
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !22236
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !22234
  call void @llvm.dbg.declare(metadata [16 x i8]* %slcor_pl, metadata !22237, metadata !DIExpression()), !dbg !22238
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %slcor_pl, i64 0, i64 0, !dbg !22239
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !22240
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %2, i32 0, i32 3, !dbg !22241
  %3 = load i8, i8* %local_port, align 8, !dbg !22241
  %4 = load i16, i16* %lag_id.addr, align 2, !dbg !22242
  call void @mlxsw_reg_slcor_port_remove_pack(i8* %arraydecay, i8 zeroext %3, i16 zeroext %4) #9, !dbg !22243
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !22244
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %5, i32 0, i32 1, !dbg !22245
  %6 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !22245
  %arraydecay2 = getelementptr inbounds [16 x i8], [16 x i8]* %slcor_pl, i64 0, i64 0, !dbg !22246
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %6, %struct.mlxsw_reg_info* @mlxsw_reg_slcor, i8* %arraydecay2) #9, !dbg !22247
  ret i32 %call, !dbg !22248
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_port_vlan_flush(%struct.mlxsw_sp_port* %mlxsw_sp_port, i1 zeroext %flush_default) #0 !dbg !22249 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %flush_default.addr = alloca i8, align 1
  %mlxsw_sp_port_vlan = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %tmp = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %__mptr = alloca i8*, align 8
  %tmp1 = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp6 = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %__mptr12 = alloca i8*, align 8
  %tmp17 = alloca %struct.mlxsw_sp_port_vlan*, align 8
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !22252, metadata !DIExpression()), !dbg !22253
  %frombool = zext i1 %flush_default to i8
  store i8 %frombool, i8* %flush_default.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %flush_default.addr, metadata !22254, metadata !DIExpression()), !dbg !22255
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, metadata !22256, metadata !DIExpression()), !dbg !22257
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_vlan** %tmp, metadata !22258, metadata !DIExpression()), !dbg !22259
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !22260, metadata !DIExpression()), !dbg !22263
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !22263
  %vlans_list = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 12, !dbg !22263
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %vlans_list, i32 0, i32 0, !dbg !22263
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !22263
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !22263
  store i8* %2, i8** %__mptr, align 8, !dbg !22263
  br label %do.body, !dbg !22263

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !22264

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !22263
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !22263
  %4 = bitcast i8* %add.ptr to %struct.mlxsw_sp_port_vlan*, !dbg !22263
  store %struct.mlxsw_sp_port_vlan* %4, %struct.mlxsw_sp_port_vlan** %tmp1, align 8, !dbg !22264
  %5 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %tmp1, align 8, !dbg !22263
  store %struct.mlxsw_sp_port_vlan* %5, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !22266
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !22267, metadata !DIExpression()), !dbg !22269
  %6 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !22269
  %list = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %6, i32 0, i32 0, !dbg !22269
  %next3 = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !22269
  %7 = load %struct.list_head*, %struct.list_head** %next3, align 8, !dbg !22269
  %8 = bitcast %struct.list_head* %7 to i8*, !dbg !22269
  store i8* %8, i8** %__mptr2, align 8, !dbg !22269
  br label %do.body4, !dbg !22269

do.body4:                                         ; preds = %do.end
  br label %do.end5, !dbg !22270

do.end5:                                          ; preds = %do.body4
  %9 = load i8*, i8** %__mptr2, align 8, !dbg !22269
  %add.ptr7 = getelementptr i8, i8* %9, i64 0, !dbg !22269
  %10 = bitcast i8* %add.ptr7 to %struct.mlxsw_sp_port_vlan*, !dbg !22269
  store %struct.mlxsw_sp_port_vlan* %10, %struct.mlxsw_sp_port_vlan** %tmp6, align 8, !dbg !22270
  %11 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %tmp6, align 8, !dbg !22269
  store %struct.mlxsw_sp_port_vlan* %11, %struct.mlxsw_sp_port_vlan** %tmp, align 8, !dbg !22266
  br label %for.cond, !dbg !22266

for.cond:                                         ; preds = %do.end16, %do.end5
  %12 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !22272
  %list8 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %12, i32 0, i32 0, !dbg !22272
  %13 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !22272
  %vlans_list9 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %13, i32 0, i32 12, !dbg !22272
  %cmp = icmp eq %struct.list_head* %list8, %vlans_list9, !dbg !22272
  %lnot = xor i1 %cmp, true, !dbg !22272
  br i1 %lnot, label %for.body, label %for.end, !dbg !22266

for.body:                                         ; preds = %for.cond
  %14 = load i8, i8* %flush_default.addr, align 1, !dbg !22274
  %tobool = trunc i8 %14 to i1, !dbg !22274
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !22277

land.lhs.true:                                    ; preds = %for.body
  %15 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !22278
  %vid = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %15, i32 0, i32 3, !dbg !22279
  %16 = load i16, i16* %vid, align 8, !dbg !22279
  %conv = zext i16 %16 to i32, !dbg !22278
  %cmp10 = icmp eq i32 %conv, 4095, !dbg !22280
  br i1 %cmp10, label %if.then, label %if.end, !dbg !22281

if.then:                                          ; preds = %land.lhs.true
  br label %for.inc, !dbg !22282

if.end:                                           ; preds = %land.lhs.true, %for.body
  %17 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !22283
  call void @mlxsw_sp_port_vlan_destroy(%struct.mlxsw_sp_port_vlan* %17) #9, !dbg !22284
  br label %for.inc, !dbg !22285

for.inc:                                          ; preds = %if.end, %if.then
  %18 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %tmp, align 8, !dbg !22272
  store %struct.mlxsw_sp_port_vlan* %18, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !22272
  call void @llvm.dbg.declare(metadata i8** %__mptr12, metadata !22286, metadata !DIExpression()), !dbg !22288
  %19 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %tmp, align 8, !dbg !22288
  %list13 = getelementptr inbounds %struct.mlxsw_sp_port_vlan, %struct.mlxsw_sp_port_vlan* %19, i32 0, i32 0, !dbg !22288
  %next14 = getelementptr inbounds %struct.list_head, %struct.list_head* %list13, i32 0, i32 0, !dbg !22288
  %20 = load %struct.list_head*, %struct.list_head** %next14, align 8, !dbg !22288
  %21 = bitcast %struct.list_head* %20 to i8*, !dbg !22288
  store i8* %21, i8** %__mptr12, align 8, !dbg !22288
  br label %do.body15, !dbg !22288

do.body15:                                        ; preds = %for.inc
  br label %do.end16, !dbg !22289

do.end16:                                         ; preds = %do.body15
  %22 = load i8*, i8** %__mptr12, align 8, !dbg !22288
  %add.ptr18 = getelementptr i8, i8* %22, i64 0, !dbg !22288
  %23 = bitcast i8* %add.ptr18 to %struct.mlxsw_sp_port_vlan*, !dbg !22288
  store %struct.mlxsw_sp_port_vlan* %23, %struct.mlxsw_sp_port_vlan** %tmp17, align 8, !dbg !22289
  %24 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %tmp17, align 8, !dbg !22288
  store %struct.mlxsw_sp_port_vlan* %24, %struct.mlxsw_sp_port_vlan** %tmp, align 8, !dbg !22272
  br label %for.cond, !dbg !22272, !llvm.loop !22291

for.end:                                          ; preds = %for.cond
  ret void, !dbg !22293
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_port_lag_uppers_cleanup(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.net_device* %lag_dev) #0 !dbg !22294 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %lag_dev.addr = alloca %struct.net_device*, align 8
  %br_dev = alloca %struct.net_device*, align 8
  %upper_dev = alloca %struct.net_device*, align 8
  %iter = alloca %struct.list_head*, align 8
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !22295, metadata !DIExpression()), !dbg !22296
  store %struct.net_device* %lag_dev, %struct.net_device** %lag_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %lag_dev.addr, metadata !22297, metadata !DIExpression()), !dbg !22298
  call void @llvm.dbg.declare(metadata %struct.net_device** %br_dev, metadata !22299, metadata !DIExpression()), !dbg !22300
  %0 = load %struct.net_device*, %struct.net_device** %lag_dev.addr, align 8, !dbg !22301
  %call = call %struct.net_device* @netdev_master_upper_dev_get(%struct.net_device* %0) #9, !dbg !22302
  store %struct.net_device* %call, %struct.net_device** %br_dev, align 8, !dbg !22300
  call void @llvm.dbg.declare(metadata %struct.net_device** %upper_dev, metadata !22303, metadata !DIExpression()), !dbg !22304
  call void @llvm.dbg.declare(metadata %struct.list_head** %iter, metadata !22305, metadata !DIExpression()), !dbg !22306
  %1 = load %struct.net_device*, %struct.net_device** %lag_dev.addr, align 8, !dbg !22307
  %call1 = call zeroext i1 @netif_is_bridge_port(%struct.net_device* %1) #9, !dbg !22309
  br i1 %call1, label %if.then, label %if.end, !dbg !22310

if.then:                                          ; preds = %entry
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !22311
  %3 = load %struct.net_device*, %struct.net_device** %lag_dev.addr, align 8, !dbg !22312
  %4 = load %struct.net_device*, %struct.net_device** %br_dev, align 8, !dbg !22313
  call void @mlxsw_sp_port_bridge_leave(%struct.mlxsw_sp_port* %2, %struct.net_device* %3, %struct.net_device* %4) #9, !dbg !22314
  br label %if.end, !dbg !22314

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.net_device*, %struct.net_device** %lag_dev.addr, align 8, !dbg !22315
  %adj_list = getelementptr inbounds %struct.net_device, %struct.net_device* %5, i32 0, i32 14, !dbg !22315
  %upper = getelementptr inbounds %struct.anon, %struct.anon* %adj_list, i32 0, i32 0, !dbg !22315
  store %struct.list_head* %upper, %struct.list_head** %iter, align 8, !dbg !22315
  %6 = load %struct.net_device*, %struct.net_device** %lag_dev.addr, align 8, !dbg !22315
  %call2 = call %struct.net_device* @netdev_upper_get_next_dev_rcu(%struct.net_device* %6, %struct.list_head** %iter) #9, !dbg !22315
  store %struct.net_device* %call2, %struct.net_device** %upper_dev, align 8, !dbg !22315
  br label %for.cond, !dbg !22315

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !22317
  %tobool = icmp ne %struct.net_device* %7, null, !dbg !22315
  br i1 %tobool, label %for.body, label %for.end, !dbg !22315

for.body:                                         ; preds = %for.cond
  %8 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !22319
  %call3 = call zeroext i1 @netif_is_bridge_port(%struct.net_device* %8) #9, !dbg !22322
  br i1 %call3, label %if.end5, label %if.then4, !dbg !22323

if.then4:                                         ; preds = %for.body
  br label %for.inc, !dbg !22324

if.end5:                                          ; preds = %for.body
  %9 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !22325
  %call6 = call %struct.net_device* @netdev_master_upper_dev_get(%struct.net_device* %9) #9, !dbg !22326
  store %struct.net_device* %call6, %struct.net_device** %br_dev, align 8, !dbg !22327
  %10 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !22328
  %11 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !22329
  %12 = load %struct.net_device*, %struct.net_device** %br_dev, align 8, !dbg !22330
  call void @mlxsw_sp_port_bridge_leave(%struct.mlxsw_sp_port* %10, %struct.net_device* %11, %struct.net_device* %12) #9, !dbg !22331
  br label %for.inc, !dbg !22332

for.inc:                                          ; preds = %if.end5, %if.then4
  %13 = load %struct.net_device*, %struct.net_device** %lag_dev.addr, align 8, !dbg !22317
  %call7 = call %struct.net_device* @netdev_upper_get_next_dev_rcu(%struct.net_device* %13, %struct.list_head** %iter) #9, !dbg !22317
  store %struct.net_device* %call7, %struct.net_device** %upper_dev, align 8, !dbg !22317
  br label %for.cond, !dbg !22317, !llvm.loop !22333

for.end:                                          ; preds = %for.cond
  ret void, !dbg !22335
}

; Function Attrs: noredzone
declare dso_local void @mlxsw_core_lag_mapping_clear(%struct.mlxsw_core*, i16 zeroext, i8 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_slcor_port_remove_pack(i8* %payload, i8 zeroext %local_port, i16 zeroext %lag_id) #0 !dbg !22336 {
entry:
  %payload.addr = alloca i8*, align 8
  %local_port.addr = alloca i8, align 1
  %lag_id.addr = alloca i16, align 2
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !22337, metadata !DIExpression()), !dbg !22338
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !22339, metadata !DIExpression()), !dbg !22340
  store i16 %lag_id, i16* %lag_id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %lag_id.addr, metadata !22341, metadata !DIExpression()), !dbg !22342
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !22343
  %1 = load i8, i8* %local_port.addr, align 1, !dbg !22344
  %2 = load i16, i16* %lag_id.addr, align 2, !dbg !22345
  call void @mlxsw_reg_slcor_pack(i8* %0, i8 zeroext %1, i16 zeroext %2, i32 3) #9, !dbg !22346
  ret void, !dbg !22347
}

; Function Attrs: noredzone
declare dso_local %struct.net_device* @netdev_upper_get_next_dev_rcu(%struct.net_device*, %struct.list_head**) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_stp_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, i1 zeroext %enable) #0 !dbg !22348 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !12749, metadata !DIExpression()), !dbg !22349
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !12761, metadata !DIExpression()), !dbg !22352
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !12763, metadata !DIExpression()), !dbg !22353
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !12765, metadata !DIExpression()), !dbg !22354
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !12767, metadata !DIExpression()), !dbg !22355
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !12773, metadata !DIExpression()), !dbg !22357
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !12779, metadata !DIExpression()), !dbg !22359
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !12788, metadata !DIExpression()), !dbg !22362
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !12790, metadata !DIExpression()), !dbg !22363
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12792, metadata !DIExpression()), !dbg !22364
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !12794, metadata !DIExpression()), !dbg !22365
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !12796, metadata !DIExpression()), !dbg !22366
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12798, metadata !DIExpression()), !dbg !22367
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !12800, metadata !DIExpression()), !dbg !22368
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !12802, metadata !DIExpression()), !dbg !22369
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %enable.addr = alloca i8, align 1
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %spms_state = alloca i32, align 4
  %spms_pl = alloca i8*, align 8
  %vid = alloca i16, align 2
  %err = alloca i32, align 4
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !22370, metadata !DIExpression()), !dbg !22371
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !22372, metadata !DIExpression()), !dbg !22373
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !22374, metadata !DIExpression()), !dbg !22375
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !22376
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !22377
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !22377
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !22375
  call void @llvm.dbg.declare(metadata i32* %spms_state, metadata !22378, metadata !DIExpression()), !dbg !22379
  call void @llvm.dbg.declare(metadata i8** %spms_pl, metadata !22380, metadata !DIExpression()), !dbg !22381
  call void @llvm.dbg.declare(metadata i16* %vid, metadata !22382, metadata !DIExpression()), !dbg !22383
  call void @llvm.dbg.declare(metadata i32* %err, metadata !22384, metadata !DIExpression()), !dbg !22385
  %2 = load i8, i8* %enable.addr, align 1, !dbg !22386
  %tobool = trunc i8 %2 to i1, !dbg !22386
  %3 = zext i1 %tobool to i64, !dbg !22386
  %cond = select i1 %tobool, i32 3, i32 1, !dbg !22386
  store i32 %cond, i32* %spms_state, align 4, !dbg !22387
  store i64 1028, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !22388
  %5 = call i1 @llvm.is.constant.i64(i64 %4) #10, !dbg !22389
  br i1 %5, label %if.then.i, label %if.end9.i, !dbg !22390

if.then.i:                                        ; preds = %entry
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !22391
  %cmp.i = icmp ugt i64 %6, 8192, !dbg !22392
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !22393

if.then1.i:                                       ; preds = %if.then.i
  %7 = load i64, i64* %size.addr.i, align 8, !dbg !22394
  %8 = load i32, i32* %flags.addr.i, align 4, !dbg !22395
  store i64 %7, i64* %size.addr.i.i, align 8
  store i32 %8, i32* %flags.addr.i.i, align 4
  %9 = load i64, i64* %size.addr.i.i, align 8, !dbg !22396
  %call.i.i = call i32 @get_order(i64 %9) #11, !dbg !22397
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !22366
  %10 = load i64, i64* %size.addr.i.i, align 8, !dbg !22398
  %11 = load i32, i32* %flags.addr.i.i, align 4, !dbg !22399
  %12 = load i32, i32* %order.i.i, align 4, !dbg !22400
  store i64 %10, i64* %size.addr.i.i.i, align 8
  store i32 %11, i32* %flags.addr.i.i.i, align 4
  store i32 %12, i32* %order.addr.i.i.i, align 4
  %13 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !22401
  %14 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !22402
  %15 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !22403
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %13, i32 %14, i32 %15) #12, !dbg !22404
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !22404
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !22404
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !22404
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !22404
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !22405
  br label %kmalloc.exit, !dbg !22405

if.end.i:                                         ; preds = %if.then.i
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !22406
  store i64 %16, i64* %size.addr.i11.i, align 8
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !22407
  %tobool.i.i = icmp ne i64 %17, 0, !dbg !22407
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !22408

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !22409
  br label %kmalloc_index.exit.i, !dbg !22409

if.end.i.i:                                       ; preds = %if.end.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !22410
  %cmp.i.i = icmp ule i64 %18, 8, !dbg !22411
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !22412

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !22413
  br label %kmalloc_index.exit.i, !dbg !22413

if.end2.i.i:                                      ; preds = %if.end.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !22414
  %cmp3.i.i = icmp ugt i64 %19, 64, !dbg !22415
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !22416

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !22417
  %cmp4.i.i = icmp ule i64 %20, 96, !dbg !22418
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !22419

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !22420
  br label %kmalloc_index.exit.i, !dbg !22420

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !22421
  %cmp7.i.i = icmp ugt i64 %21, 128, !dbg !22422
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !22423

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !22424
  %cmp9.i.i = icmp ule i64 %22, 192, !dbg !22425
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !22426

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !22427
  br label %kmalloc_index.exit.i, !dbg !22427

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !22428
  %cmp12.i.i = icmp ule i64 %23, 8, !dbg !22429
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !22430

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !22431
  br label %kmalloc_index.exit.i, !dbg !22431

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !22432
  %cmp15.i.i = icmp ule i64 %24, 16, !dbg !22433
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !22434

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !22435
  br label %kmalloc_index.exit.i, !dbg !22435

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !22436
  %cmp18.i.i = icmp ule i64 %25, 32, !dbg !22437
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !22438

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !22439
  br label %kmalloc_index.exit.i, !dbg !22439

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !22440
  %cmp21.i.i = icmp ule i64 %26, 64, !dbg !22441
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !22442

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !22443
  br label %kmalloc_index.exit.i, !dbg !22443

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !22444
  %cmp24.i.i = icmp ule i64 %27, 128, !dbg !22445
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !22446

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !22447
  br label %kmalloc_index.exit.i, !dbg !22447

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !22448
  %cmp27.i.i = icmp ule i64 %28, 256, !dbg !22449
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !22450

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !22451
  br label %kmalloc_index.exit.i, !dbg !22451

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !22452
  %cmp30.i.i = icmp ule i64 %29, 512, !dbg !22453
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !22454

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !22455
  br label %kmalloc_index.exit.i, !dbg !22455

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !22456
  %cmp33.i.i = icmp ule i64 %30, 1024, !dbg !22457
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !22458

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !22459
  br label %kmalloc_index.exit.i, !dbg !22459

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !22460
  %cmp36.i.i = icmp ule i64 %31, 2048, !dbg !22461
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !22462

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !22463
  br label %kmalloc_index.exit.i, !dbg !22463

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !22464
  %cmp39.i.i = icmp ule i64 %32, 4096, !dbg !22465
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !22466

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !22467
  br label %kmalloc_index.exit.i, !dbg !22467

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !22468
  %cmp42.i.i = icmp ule i64 %33, 8192, !dbg !22469
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !22470

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !22471
  br label %kmalloc_index.exit.i, !dbg !22471

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !22472
  %cmp45.i.i = icmp ule i64 %34, 16384, !dbg !22473
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !22474

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !22475
  br label %kmalloc_index.exit.i, !dbg !22475

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !22476
  %cmp48.i.i = icmp ule i64 %35, 32768, !dbg !22477
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !22478

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !22479
  br label %kmalloc_index.exit.i, !dbg !22479

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !22480
  %cmp51.i.i = icmp ule i64 %36, 65536, !dbg !22481
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !22482

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !22483
  br label %kmalloc_index.exit.i, !dbg !22483

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !22484
  %cmp54.i.i = icmp ule i64 %37, 131072, !dbg !22485
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !22486

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !22487
  br label %kmalloc_index.exit.i, !dbg !22487

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !22488
  %cmp57.i.i = icmp ule i64 %38, 262144, !dbg !22489
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !22490

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !22491
  br label %kmalloc_index.exit.i, !dbg !22491

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !22492
  %cmp60.i.i = icmp ule i64 %39, 524288, !dbg !22493
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !22494

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !22495
  br label %kmalloc_index.exit.i, !dbg !22495

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !22496
  %cmp63.i.i = icmp ule i64 %40, 1048576, !dbg !22497
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !22498

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !22499
  br label %kmalloc_index.exit.i, !dbg !22499

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !22500
  %cmp66.i.i = icmp ule i64 %41, 2097152, !dbg !22501
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !22502

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !22503
  br label %kmalloc_index.exit.i, !dbg !22503

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !22504
  %cmp69.i.i = icmp ule i64 %42, 4194304, !dbg !22505
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !22506

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !22507
  br label %kmalloc_index.exit.i, !dbg !22507

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !22508
  %cmp72.i.i = icmp ule i64 %43, 8388608, !dbg !22509
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !22510

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !22511
  br label %kmalloc_index.exit.i, !dbg !22511

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !22512
  %cmp75.i.i = icmp ule i64 %44, 16777216, !dbg !22513
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !22514

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !22515
  br label %kmalloc_index.exit.i, !dbg !22515

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !22516
  %cmp78.i.i = icmp ule i64 %45, 33554432, !dbg !22517
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !22518

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !22519
  br label %kmalloc_index.exit.i, !dbg !22519

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !22520
  %cmp81.i.i = icmp ule i64 %46, 67108864, !dbg !22521
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !22522

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !22523
  br label %kmalloc_index.exit.i, !dbg !22523

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !22524, !srcloc !12989
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 160) #10, !dbg !22525, !srcloc !12993
  unreachable, !dbg !22526

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %47 = load i32, i32* %retval.i.i, align 4, !dbg !22527
  store i32 %47, i32* %index.i, align 4, !dbg !22528
  %48 = load i32, i32* %index.i, align 4, !dbg !22529
  %tobool.i = icmp ne i32 %48, 0, !dbg !22529
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !22530

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !22531
  br label %kmalloc.exit, !dbg !22531

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %49 = load i32, i32* %flags.addr.i, align 4, !dbg !22532
  store i32 %49, i32* %flags.addr.i13.i, align 4
  %50 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !22533
  %and.i.i = and i32 %50, 17, !dbg !22533
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !22533
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !22533
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !22533
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !22533
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !22534

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !22535
  br label %kmalloc_type.exit.i, !dbg !22535

if.end.i16.i:                                     ; preds = %if.end4.i
  %51 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !22536
  %and2.i.i = and i32 %51, 1, !dbg !22537
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !22536
  %52 = zext i1 %tobool3.i.i to i64, !dbg !22536
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !22536
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !22538
  br label %kmalloc_type.exit.i, !dbg !22538

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %53 = load i32, i32* %retval.i12.i, align 4, !dbg !22539
  %idxprom.i = zext i32 %53 to i64, !dbg !22540
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !22540
  %54 = load i32, i32* %index.i, align 4, !dbg !22541
  %idxprom6.i = zext i32 %54 to i64, !dbg !22540
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !22540
  %55 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !22540
  %56 = load i32, i32* %flags.addr.i, align 4, !dbg !22542
  %57 = load i64, i64* %size.addr.i, align 8, !dbg !22543
  store %struct.kmem_cache* %55, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %56, i32* %flags.addr.i17.i, align 4
  store i64 %57, i64* %size.addr.i18.i, align 8
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !22544
  %59 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !22545
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %58, i32 %59) #12, !dbg !22546
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !22546
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !22546
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !22546
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !22546
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !22354
  %60 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !22547
  %61 = load i8*, i8** %ret.i.i, align 8, !dbg !22548
  %62 = load i64, i64* %size.addr.i18.i, align 8, !dbg !22549
  %63 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !22550
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %60, i8* %61, i64 %62, i32 %63) #12, !dbg !22551
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !22552
  %64 = load i8*, i8** %ret.i.i, align 8, !dbg !22553
  store i8* %64, i8** %retval.i, align 8, !dbg !22554
  br label %kmalloc.exit, !dbg !22554

if.end9.i:                                        ; preds = %entry
  %65 = load i64, i64* %size.addr.i, align 8, !dbg !22555
  %66 = load i32, i32* %flags.addr.i, align 4, !dbg !22556
  %call10.i = call noalias i8* @__kmalloc(i64 %65, i32 %66) #12, !dbg !22557
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !22557
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !22557
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !22557
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !22557
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !22558
  br label %kmalloc.exit, !dbg !22558

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %67 = load i8*, i8** %retval.i, align 8, !dbg !22559
  store i8* %67, i8** %spms_pl, align 8, !dbg !22560
  %68 = load i8*, i8** %spms_pl, align 8, !dbg !22561
  %tobool2 = icmp ne i8* %68, null, !dbg !22561
  br i1 %tobool2, label %if.end, label %if.then, !dbg !22563

if.then:                                          ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !22564
  br label %return, !dbg !22564

if.end:                                           ; preds = %kmalloc.exit
  %69 = load i8*, i8** %spms_pl, align 8, !dbg !22565
  %70 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !22566
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %70, i32 0, i32 3, !dbg !22567
  %71 = load i8, i8* %local_port, align 8, !dbg !22567
  call void @mlxsw_reg_spms_pack(i8* %69, i8 zeroext %71) #9, !dbg !22568
  store i16 0, i16* %vid, align 2, !dbg !22569
  br label %for.cond, !dbg !22571

for.cond:                                         ; preds = %for.inc, %if.end
  %72 = load i16, i16* %vid, align 2, !dbg !22572
  %conv = zext i16 %72 to i32, !dbg !22572
  %cmp = icmp slt i32 %conv, 4096, !dbg !22574
  br i1 %cmp, label %for.body, label %for.end, !dbg !22575

for.body:                                         ; preds = %for.cond
  %73 = load i8*, i8** %spms_pl, align 8, !dbg !22576
  %74 = load i16, i16* %vid, align 2, !dbg !22577
  %75 = load i32, i32* %spms_state, align 4, !dbg !22578
  call void @mlxsw_reg_spms_vid_pack(i8* %73, i16 zeroext %74, i32 %75) #9, !dbg !22579
  br label %for.inc, !dbg !22579

for.inc:                                          ; preds = %for.body
  %76 = load i16, i16* %vid, align 2, !dbg !22580
  %inc = add i16 %76, 1, !dbg !22580
  store i16 %inc, i16* %vid, align 2, !dbg !22580
  br label %for.cond, !dbg !22581, !llvm.loop !22582

for.end:                                          ; preds = %for.cond
  %77 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !22584
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %77, i32 0, i32 1, !dbg !22585
  %78 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !22585
  %79 = load i8*, i8** %spms_pl, align 8, !dbg !22586
  %call4 = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %78, %struct.mlxsw_reg_info* @mlxsw_reg_spms, i8* %79) #9, !dbg !22587
  store i32 %call4, i32* %err, align 4, !dbg !22588
  %80 = load i8*, i8** %spms_pl, align 8, !dbg !22589
  call void @kfree(i8* %80) #9, !dbg !22590
  %81 = load i32, i32* %err, align 4, !dbg !22591
  store i32 %81, i32* %retval, align 4, !dbg !22592
  br label %return, !dbg !22592

return:                                           ; preds = %for.end, %if.then
  %82 = load i32, i32* %retval, align 4, !dbg !22593
  ret i32 %82, !dbg !22593
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_lag_changed(%struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.netdev_lag_lower_state_info* %info) #0 !dbg !22594 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %info.addr = alloca %struct.netdev_lag_lower_state_info*, align 8
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !22602, metadata !DIExpression()), !dbg !22603
  store %struct.netdev_lag_lower_state_info* %info, %struct.netdev_lag_lower_state_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_lag_lower_state_info** %info.addr, metadata !22604, metadata !DIExpression()), !dbg !22605
  %0 = load %struct.netdev_lag_lower_state_info*, %struct.netdev_lag_lower_state_info** %info.addr, align 8, !dbg !22606
  %1 = bitcast %struct.netdev_lag_lower_state_info* %0 to i8*, !dbg !22608
  %bf.load = load i8, i8* %1, align 1, !dbg !22608
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !22608
  %bf.clear = and i8 %bf.lshr, 1, !dbg !22608
  %tobool = icmp ne i8 %bf.clear, 0, !dbg !22606
  br i1 %tobool, label %if.then, label %if.else, !dbg !22609

if.then:                                          ; preds = %entry
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !22610
  %call = call i32 @mlxsw_sp_port_lag_col_dist_enable(%struct.mlxsw_sp_port* %2) #9, !dbg !22611
  store i32 %call, i32* %retval, align 4, !dbg !22612
  br label %return, !dbg !22612

if.else:                                          ; preds = %entry
  %3 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !22613
  %call1 = call i32 @mlxsw_sp_port_lag_col_dist_disable(%struct.mlxsw_sp_port* %3) #9, !dbg !22614
  store i32 %call1, i32* %retval, align 4, !dbg !22615
  br label %return, !dbg !22615

return:                                           ; preds = %if.else, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !22616
  ret i32 %4, !dbg !22616
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_lag_col_dist_enable(%struct.mlxsw_sp_port* %mlxsw_sp_port) #0 !dbg !22617 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !22618, metadata !DIExpression()), !dbg !22619
  call void @llvm.dbg.declare(metadata i32* %err, metadata !22620, metadata !DIExpression()), !dbg !22621
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !22622
  %1 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !22623
  %lag_id = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %1, i32 0, i32 6, !dbg !22624
  %2 = load i16, i16* %lag_id, align 4, !dbg !22624
  %call = call i32 @mlxsw_sp_lag_col_port_enable(%struct.mlxsw_sp_port* %0, i16 zeroext %2) #9, !dbg !22625
  store i32 %call, i32* %err, align 4, !dbg !22626
  %3 = load i32, i32* %err, align 4, !dbg !22627
  %tobool = icmp ne i32 %3, 0, !dbg !22627
  br i1 %tobool, label %if.then, label %if.end, !dbg !22629

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %err, align 4, !dbg !22630
  store i32 %4, i32* %retval, align 4, !dbg !22631
  br label %return, !dbg !22631

if.end:                                           ; preds = %entry
  %5 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !22632
  %6 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !22633
  %lag_id1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %6, i32 0, i32 6, !dbg !22634
  %7 = load i16, i16* %lag_id1, align 4, !dbg !22634
  %call2 = call i32 @mlxsw_sp_lag_dist_port_add(%struct.mlxsw_sp_port* %5, i16 zeroext %7) #9, !dbg !22635
  store i32 %call2, i32* %err, align 4, !dbg !22636
  %8 = load i32, i32* %err, align 4, !dbg !22637
  %tobool3 = icmp ne i32 %8, 0, !dbg !22637
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !22639

if.then4:                                         ; preds = %if.end
  br label %err_dist_port_add, !dbg !22640

if.end5:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !22641
  br label %return, !dbg !22641

err_dist_port_add:                                ; preds = %if.then4
  call void @llvm.dbg.label(metadata !22642), !dbg !22643
  %9 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !22644
  %10 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !22645
  %lag_id6 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %10, i32 0, i32 6, !dbg !22646
  %11 = load i16, i16* %lag_id6, align 4, !dbg !22646
  %call7 = call i32 @mlxsw_sp_lag_col_port_disable(%struct.mlxsw_sp_port* %9, i16 zeroext %11) #9, !dbg !22647
  %12 = load i32, i32* %err, align 4, !dbg !22648
  store i32 %12, i32* %retval, align 4, !dbg !22649
  br label %return, !dbg !22649

return:                                           ; preds = %err_dist_port_add, %if.end5, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !22650
  ret i32 %13, !dbg !22650
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_lag_col_port_enable(%struct.mlxsw_sp_port* %mlxsw_sp_port, i16 zeroext %lag_id) #0 !dbg !22651 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %lag_id.addr = alloca i16, align 2
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %slcor_pl = alloca [16 x i8], align 16
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !22652, metadata !DIExpression()), !dbg !22653
  store i16 %lag_id, i16* %lag_id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %lag_id.addr, metadata !22654, metadata !DIExpression()), !dbg !22655
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !22656, metadata !DIExpression()), !dbg !22657
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !22658
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !22659
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !22659
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !22657
  call void @llvm.dbg.declare(metadata [16 x i8]* %slcor_pl, metadata !22660, metadata !DIExpression()), !dbg !22661
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %slcor_pl, i64 0, i64 0, !dbg !22662
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !22663
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %2, i32 0, i32 3, !dbg !22664
  %3 = load i8, i8* %local_port, align 8, !dbg !22664
  %4 = load i16, i16* %lag_id.addr, align 2, !dbg !22665
  call void @mlxsw_reg_slcor_col_enable_pack(i8* %arraydecay, i8 zeroext %3, i16 zeroext %4) #9, !dbg !22666
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !22667
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %5, i32 0, i32 1, !dbg !22668
  %6 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !22668
  %arraydecay2 = getelementptr inbounds [16 x i8], [16 x i8]* %slcor_pl, i64 0, i64 0, !dbg !22669
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %6, %struct.mlxsw_reg_info* @mlxsw_reg_slcor, i8* %arraydecay2) #9, !dbg !22670
  ret i32 %call, !dbg !22671
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_slcor_col_enable_pack(i8* %payload, i8 zeroext %local_port, i16 zeroext %lag_id) #0 !dbg !22672 {
entry:
  %payload.addr = alloca i8*, align 8
  %local_port.addr = alloca i8, align 1
  %lag_id.addr = alloca i16, align 2
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !22673, metadata !DIExpression()), !dbg !22674
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !22675, metadata !DIExpression()), !dbg !22676
  store i16 %lag_id, i16* %lag_id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %lag_id.addr, metadata !22677, metadata !DIExpression()), !dbg !22678
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !22679
  %1 = load i8, i8* %local_port.addr, align 1, !dbg !22680
  %2 = load i16, i16* %lag_id.addr, align 2, !dbg !22681
  call void @mlxsw_reg_slcor_pack(i8* %0, i8 zeroext %1, i16 zeroext %2, i32 1) #9, !dbg !22682
  ret void, !dbg !22683
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_is_bond_master(%struct.net_device* %dev) #0 !dbg !22684 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !22685, metadata !DIExpression()), !dbg !22686
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22687
  %flags = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 36, !dbg !22688
  %1 = load i32, i32* %flags, align 8, !dbg !22688
  %and = and i32 %1, 1024, !dbg !22689
  %tobool = icmp ne i32 %and, 0, !dbg !22689
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !22690

land.rhs:                                         ; preds = %entry
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22691
  %priv_flags = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 37, !dbg !22692
  %3 = load i32, i32* %priv_flags, align 4, !dbg !22692
  %and1 = and i32 %3, 4, !dbg !22693
  %tobool2 = icmp ne i32 %and1, 0, !dbg !22690
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ], !dbg !22694
  ret i1 %4, !dbg !22695
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_is_team_master(%struct.net_device* %dev) #0 !dbg !22696 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !22697, metadata !DIExpression()), !dbg !22698
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22699
  %priv_flags = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 37, !dbg !22700
  %1 = load i32, i32* %priv_flags, align 4, !dbg !22700
  %and = and i32 %1, 4194304, !dbg !22701
  %tobool = icmp ne i32 %and, 0, !dbg !22699
  ret i1 %tobool, !dbg !22702
}

; Function Attrs: noredzone
declare dso_local zeroext i16 @vlan_dev_vlan_id(%struct.net_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_netdevice_port_vlan_event(%struct.net_device* %vlan_dev, %struct.net_device* %dev, i64 %event, i8* %ptr, i16 zeroext %vid) #0 !dbg !12379 {
entry:
  %retval = alloca i32, align 4
  %vlan_dev.addr = alloca %struct.net_device*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %event.addr = alloca i64, align 8
  %ptr.addr = alloca i8*, align 8
  %vid.addr = alloca i16, align 2
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %info = alloca %struct.netdev_notifier_changeupper_info*, align 8
  %extack = alloca %struct.netlink_ext_ack*, align 8
  %upper_dev = alloca %struct.net_device*, align 8
  %err = alloca i32, align 4
  %__extack = alloca %struct.netlink_ext_ack*, align 8
  %__extack27 = alloca %struct.netlink_ext_ack*, align 8
  %__extack39 = alloca %struct.netlink_ext_ack*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.net_device* %vlan_dev, %struct.net_device** %vlan_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %vlan_dev.addr, metadata !22703, metadata !DIExpression()), !dbg !22704
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !22705, metadata !DIExpression()), !dbg !22706
  store i64 %event, i64* %event.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %event.addr, metadata !22707, metadata !DIExpression()), !dbg !22708
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !22709, metadata !DIExpression()), !dbg !22710
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !22711, metadata !DIExpression()), !dbg !22712
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !22713, metadata !DIExpression()), !dbg !22714
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22715
  %call = call i8* @netdev_priv(%struct.net_device* %0) #9, !dbg !22716
  %1 = bitcast i8* %call to %struct.mlxsw_sp_port*, !dbg !22716
  store %struct.mlxsw_sp_port* %1, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !22714
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !22717, metadata !DIExpression()), !dbg !22718
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !22719
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %2, i32 0, i32 2, !dbg !22720
  %3 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !22720
  store %struct.mlxsw_sp* %3, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !22718
  call void @llvm.dbg.declare(metadata %struct.netdev_notifier_changeupper_info** %info, metadata !22721, metadata !DIExpression()), !dbg !22722
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !22723
  %5 = bitcast i8* %4 to %struct.netdev_notifier_changeupper_info*, !dbg !22723
  store %struct.netdev_notifier_changeupper_info* %5, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !22722
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack, metadata !22724, metadata !DIExpression()), !dbg !22725
  call void @llvm.dbg.declare(metadata %struct.net_device** %upper_dev, metadata !22726, metadata !DIExpression()), !dbg !22727
  call void @llvm.dbg.declare(metadata i32* %err, metadata !22728, metadata !DIExpression()), !dbg !22729
  store i32 0, i32* %err, align 4, !dbg !22729
  %6 = load %struct.netdev_notifier_changeupper_info*, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !22730
  %info2 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, %struct.netdev_notifier_changeupper_info* %6, i32 0, i32 0, !dbg !22731
  %call3 = call %struct.netlink_ext_ack* @netdev_notifier_info_to_extack(%struct.netdev_notifier_info* %info2) #9, !dbg !22732
  store %struct.netlink_ext_ack* %call3, %struct.netlink_ext_ack** %extack, align 8, !dbg !22733
  %7 = load i64, i64* %event.addr, align 8, !dbg !22734
  switch i64 %7, label %sw.epilog [
    i64 26, label %sw.bb
    i64 21, label %sw.bb46
  ], !dbg !22735

sw.bb:                                            ; preds = %entry
  %8 = load %struct.netdev_notifier_changeupper_info*, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !22736
  %upper_dev4 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, %struct.netdev_notifier_changeupper_info* %8, i32 0, i32 1, !dbg !22738
  %9 = load %struct.net_device*, %struct.net_device** %upper_dev4, align 8, !dbg !22738
  store %struct.net_device* %9, %struct.net_device** %upper_dev, align 8, !dbg !22739
  %10 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !22740
  %call5 = call zeroext i1 @netif_is_bridge_master(%struct.net_device* %10) #9, !dbg !22742
  br i1 %call5, label %if.end8, label %land.lhs.true, !dbg !22743

land.lhs.true:                                    ; preds = %sw.bb
  %11 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !22744
  %call6 = call zeroext i1 @netif_is_macvlan(%struct.net_device* %11) #9, !dbg !22745
  br i1 %call6, label %if.end8, label %if.then, !dbg !22746

if.then:                                          ; preds = %land.lhs.true
  br label %do.body, !dbg !22747

do.body:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack, metadata !22749, metadata !DIExpression()), !dbg !22751
  %12 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack, align 8, !dbg !22751
  store %struct.netlink_ext_ack* %12, %struct.netlink_ext_ack** %__extack, align 8, !dbg !22751
  %13 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !22752
  %tobool = icmp ne %struct.netlink_ext_ack* %13, null, !dbg !22752
  br i1 %tobool, label %if.then7, label %if.end, !dbg !22751

if.then7:                                         ; preds = %do.body
  %14 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !22752
  %_msg = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %14, i32 0, i32 0, !dbg !22752
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @mlxsw_sp_netdevice_port_vlan_event.__msg, i64 0, i64 0), i8** %_msg, align 8, !dbg !22752
  br label %if.end, !dbg !22752

if.end:                                           ; preds = %if.then7, %do.body
  br label %do.end, !dbg !22751

do.end:                                           ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !22754
  br label %return, !dbg !22754

if.end8:                                          ; preds = %land.lhs.true, %sw.bb
  %15 = load %struct.netdev_notifier_changeupper_info*, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !22755
  %linking = getelementptr inbounds %struct.netdev_notifier_changeupper_info, %struct.netdev_notifier_changeupper_info* %15, i32 0, i32 3, !dbg !22757
  %16 = load i8, i8* %linking, align 1, !dbg !22757
  %tobool9 = trunc i8 %16 to i1, !dbg !22757
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !22758

if.then10:                                        ; preds = %if.end8
  br label %sw.epilog, !dbg !22759

if.end11:                                         ; preds = %if.end8
  %17 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !22760
  %call12 = call zeroext i1 @netif_is_bridge_master(%struct.net_device* %17) #9, !dbg !22762
  br i1 %call12, label %land.lhs.true13, label %if.end20, !dbg !22763

land.lhs.true13:                                  ; preds = %if.end11
  %18 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !22764
  %19 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !22765
  %call14 = call zeroext i1 @mlxsw_sp_bridge_device_is_offloaded(%struct.mlxsw_sp* %18, %struct.net_device* %19) #9, !dbg !22766
  br i1 %call14, label %if.end20, label %land.lhs.true15, !dbg !22767

land.lhs.true15:                                  ; preds = %land.lhs.true13
  %20 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !22768
  %call16 = call zeroext i1 @mlxsw_sp_bridge_has_vxlan(%struct.net_device* %20) #9, !dbg !22769
  br i1 %call16, label %land.lhs.true17, label %if.end20, !dbg !22770

land.lhs.true17:                                  ; preds = %land.lhs.true15
  %21 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !22771
  %22 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack, align 8, !dbg !22772
  %call18 = call zeroext i1 @mlxsw_sp_bridge_vxlan_is_valid(%struct.net_device* %21, %struct.netlink_ext_ack* %22) #9, !dbg !22773
  br i1 %call18, label %if.end20, label %if.then19, !dbg !22774

if.then19:                                        ; preds = %land.lhs.true17
  store i32 -95, i32* %retval, align 4, !dbg !22775
  br label %return, !dbg !22775

if.end20:                                         ; preds = %land.lhs.true17, %land.lhs.true15, %land.lhs.true13, %if.end11
  %23 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !22776
  %call21 = call zeroext i1 @netdev_has_any_upper_dev(%struct.net_device* %23) #9, !dbg !22778
  br i1 %call21, label %land.lhs.true22, label %if.end33, !dbg !22779

land.lhs.true22:                                  ; preds = %if.end20
  %24 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !22780
  %call23 = call zeroext i1 @netif_is_bridge_master(%struct.net_device* %24) #9, !dbg !22781
  br i1 %call23, label %lor.lhs.false, label %if.then25, !dbg !22782

lor.lhs.false:                                    ; preds = %land.lhs.true22
  %25 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !22783
  %26 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !22784
  %call24 = call zeroext i1 @mlxsw_sp_bridge_device_is_offloaded(%struct.mlxsw_sp* %25, %struct.net_device* %26) #9, !dbg !22785
  br i1 %call24, label %if.end33, label %if.then25, !dbg !22786

if.then25:                                        ; preds = %lor.lhs.false, %land.lhs.true22
  br label %do.body26, !dbg !22787

do.body26:                                        ; preds = %if.then25
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack27, metadata !22789, metadata !DIExpression()), !dbg !22791
  %27 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack, align 8, !dbg !22791
  store %struct.netlink_ext_ack* %27, %struct.netlink_ext_ack** %__extack27, align 8, !dbg !22791
  %28 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack27, align 8, !dbg !22792
  %tobool28 = icmp ne %struct.netlink_ext_ack* %28, null, !dbg !22792
  br i1 %tobool28, label %if.then29, label %if.end31, !dbg !22791

if.then29:                                        ; preds = %do.body26
  %29 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack27, align 8, !dbg !22792
  %_msg30 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %29, i32 0, i32 0, !dbg !22792
  store i8* getelementptr inbounds ([95 x i8], [95 x i8]* @mlxsw_sp_netdevice_port_vlan_event.__msg.268, i64 0, i64 0), i8** %_msg30, align 8, !dbg !22792
  br label %if.end31, !dbg !22792

if.end31:                                         ; preds = %if.then29, %do.body26
  br label %do.end32, !dbg !22791

do.end32:                                         ; preds = %if.end31
  store i32 -22, i32* %retval, align 4, !dbg !22794
  br label %return, !dbg !22794

if.end33:                                         ; preds = %lor.lhs.false, %if.end20
  %30 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !22795
  %call34 = call zeroext i1 @netif_is_macvlan(%struct.net_device* %30) #9, !dbg !22797
  br i1 %call34, label %land.lhs.true35, label %if.end45, !dbg !22798

land.lhs.true35:                                  ; preds = %if.end33
  %31 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !22799
  %32 = load %struct.net_device*, %struct.net_device** %vlan_dev.addr, align 8, !dbg !22800
  %call36 = call zeroext i1 @mlxsw_sp_rif_exists(%struct.mlxsw_sp* %31, %struct.net_device* %32) #9, !dbg !22801
  br i1 %call36, label %if.end45, label %if.then37, !dbg !22802

if.then37:                                        ; preds = %land.lhs.true35
  br label %do.body38, !dbg !22803

do.body38:                                        ; preds = %if.then37
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack39, metadata !22805, metadata !DIExpression()), !dbg !22807
  %33 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack, align 8, !dbg !22807
  store %struct.netlink_ext_ack* %33, %struct.netlink_ext_ack** %__extack39, align 8, !dbg !22807
  %34 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack39, align 8, !dbg !22808
  %tobool40 = icmp ne %struct.netlink_ext_ack* %34, null, !dbg !22808
  br i1 %tobool40, label %if.then41, label %if.end43, !dbg !22807

if.then41:                                        ; preds = %do.body38
  %35 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack39, align 8, !dbg !22808
  %_msg42 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %35, i32 0, i32 0, !dbg !22808
  store i8* getelementptr inbounds ([70 x i8], [70 x i8]* @mlxsw_sp_netdevice_port_vlan_event.__msg.269, i64 0, i64 0), i8** %_msg42, align 8, !dbg !22808
  br label %if.end43, !dbg !22808

if.end43:                                         ; preds = %if.then41, %do.body38
  br label %do.end44, !dbg !22807

do.end44:                                         ; preds = %if.end43
  store i32 -95, i32* %retval, align 4, !dbg !22810
  br label %return, !dbg !22810

if.end45:                                         ; preds = %land.lhs.true35, %if.end33
  br label %sw.epilog, !dbg !22811

sw.bb46:                                          ; preds = %entry
  %36 = load %struct.netdev_notifier_changeupper_info*, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !22812
  %upper_dev47 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, %struct.netdev_notifier_changeupper_info* %36, i32 0, i32 1, !dbg !22813
  %37 = load %struct.net_device*, %struct.net_device** %upper_dev47, align 8, !dbg !22813
  store %struct.net_device* %37, %struct.net_device** %upper_dev, align 8, !dbg !22814
  %38 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !22815
  %call48 = call zeroext i1 @netif_is_bridge_master(%struct.net_device* %38) #9, !dbg !22817
  br i1 %call48, label %if.then49, label %if.else55, !dbg !22818

if.then49:                                        ; preds = %sw.bb46
  %39 = load %struct.netdev_notifier_changeupper_info*, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !22819
  %linking50 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, %struct.netdev_notifier_changeupper_info* %39, i32 0, i32 3, !dbg !22822
  %40 = load i8, i8* %linking50, align 1, !dbg !22822
  %tobool51 = trunc i8 %40 to i1, !dbg !22822
  br i1 %tobool51, label %if.then52, label %if.else, !dbg !22823

if.then52:                                        ; preds = %if.then49
  %41 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !22824
  %42 = load %struct.net_device*, %struct.net_device** %vlan_dev.addr, align 8, !dbg !22825
  %43 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !22826
  %44 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack, align 8, !dbg !22827
  %call53 = call i32 @mlxsw_sp_port_bridge_join(%struct.mlxsw_sp_port* %41, %struct.net_device* %42, %struct.net_device* %43, %struct.netlink_ext_ack* %44) #9, !dbg !22828
  store i32 %call53, i32* %err, align 4, !dbg !22829
  br label %if.end54, !dbg !22830

if.else:                                          ; preds = %if.then49
  %45 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !22831
  %46 = load %struct.net_device*, %struct.net_device** %vlan_dev.addr, align 8, !dbg !22832
  %47 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !22833
  call void @mlxsw_sp_port_bridge_leave(%struct.mlxsw_sp_port* %45, %struct.net_device* %46, %struct.net_device* %47) #9, !dbg !22834
  br label %if.end54

if.end54:                                         ; preds = %if.else, %if.then52
  br label %if.end83, !dbg !22835

if.else55:                                        ; preds = %sw.bb46
  %48 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !22836
  %call56 = call zeroext i1 @netif_is_macvlan(%struct.net_device* %48) #9, !dbg !22838
  br i1 %call56, label %if.then57, label %if.else62, !dbg !22839

if.then57:                                        ; preds = %if.else55
  %49 = load %struct.netdev_notifier_changeupper_info*, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !22840
  %linking58 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, %struct.netdev_notifier_changeupper_info* %49, i32 0, i32 3, !dbg !22843
  %50 = load i8, i8* %linking58, align 1, !dbg !22843
  %tobool59 = trunc i8 %50 to i1, !dbg !22843
  br i1 %tobool59, label %if.end61, label %if.then60, !dbg !22844

if.then60:                                        ; preds = %if.then57
  %51 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !22845
  %52 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !22846
  call void @mlxsw_sp_rif_macvlan_del(%struct.mlxsw_sp* %51, %struct.net_device* %52) #9, !dbg !22847
  br label %if.end61, !dbg !22847

if.end61:                                         ; preds = %if.then60, %if.then57
  br label %if.end82, !dbg !22848

if.else62:                                        ; preds = %if.else55
  store i32 -22, i32* %err, align 4, !dbg !22849
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !22851, metadata !DIExpression()), !dbg !22853
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !22853
  %53 = load i32, i32* %__ret_warn_on, align 4, !dbg !22854
  %tobool63 = icmp ne i32 %53, 0, !dbg !22854
  %lnot = xor i1 %tobool63, true, !dbg !22854
  %lnot64 = xor i1 %lnot, true, !dbg !22854
  %lnot.ext = zext i1 %lnot64 to i32, !dbg !22854
  %conv = sext i32 %lnot.ext to i64, !dbg !22854
  %tobool65 = icmp ne i64 %conv, 0, !dbg !22854
  br i1 %tobool65, label %if.then66, label %if.end75, !dbg !22853

if.then66:                                        ; preds = %if.else62
  br label %do.body67, !dbg !22854

do.body67:                                        ; preds = %if.then66
  br label %do.body68, !dbg !22856

do.body68:                                        ; preds = %do.body67
  br label %do.end69, !dbg !22858

do.end69:                                         ; preds = %do.body68
  br label %do.body70, !dbg !22856

do.body70:                                        ; preds = %do.end69
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 4066, i32 2305, i64 12) #10, !dbg !22860, !srcloc !22862
  br label %do.end71, !dbg !22860

do.end71:                                         ; preds = %do.body70
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 665) #10, !dbg !22863, !srcloc !22865
  br label %do.body72, !dbg !22856

do.body72:                                        ; preds = %do.end71
  br label %do.end73, !dbg !22866

do.end73:                                         ; preds = %do.body72
  br label %do.end74, !dbg !22856

do.end74:                                         ; preds = %do.end73
  br label %if.end75, !dbg !22856

if.end75:                                         ; preds = %do.end74, %if.else62
  %54 = load i32, i32* %__ret_warn_on, align 4, !dbg !22853
  %tobool76 = icmp ne i32 %54, 0, !dbg !22853
  %lnot77 = xor i1 %tobool76, true, !dbg !22853
  %lnot79 = xor i1 %lnot77, true, !dbg !22853
  %lnot.ext80 = zext i1 %lnot79 to i32, !dbg !22853
  %conv81 = sext i32 %lnot.ext80 to i64, !dbg !22853
  store i64 %conv81, i64* %tmp, align 8, !dbg !22854
  %55 = load i64, i64* %tmp, align 8, !dbg !22853
  br label %if.end82

if.end82:                                         ; preds = %if.end75, %if.end61
  br label %if.end83

if.end83:                                         ; preds = %if.end82, %if.end54
  br label %sw.epilog, !dbg !22868

sw.epilog:                                        ; preds = %entry, %if.end83, %if.end45, %if.then10
  %56 = load i32, i32* %err, align 4, !dbg !22869
  store i32 %56, i32* %retval, align 4, !dbg !22870
  br label %return, !dbg !22870

return:                                           ; preds = %sw.epilog, %do.end44, %do.end32, %if.then19, %do.end
  %57 = load i32, i32* %retval, align 4, !dbg !22871
  ret i32 %57, !dbg !22871
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_netdevice_lag_port_vlan_event(%struct.net_device* %vlan_dev, %struct.net_device* %lag_dev, i64 %event, i8* %ptr, i16 zeroext %vid) #0 !dbg !22872 {
entry:
  %retval = alloca i32, align 4
  %vlan_dev.addr = alloca %struct.net_device*, align 8
  %lag_dev.addr = alloca %struct.net_device*, align 8
  %event.addr = alloca i64, align 8
  %ptr.addr = alloca i8*, align 8
  %vid.addr = alloca i16, align 2
  %dev = alloca %struct.net_device*, align 8
  %iter = alloca %struct.list_head*, align 8
  %ret = alloca i32, align 4
  store %struct.net_device* %vlan_dev, %struct.net_device** %vlan_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %vlan_dev.addr, metadata !22873, metadata !DIExpression()), !dbg !22874
  store %struct.net_device* %lag_dev, %struct.net_device** %lag_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %lag_dev.addr, metadata !22875, metadata !DIExpression()), !dbg !22876
  store i64 %event, i64* %event.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %event.addr, metadata !22877, metadata !DIExpression()), !dbg !22878
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !22879, metadata !DIExpression()), !dbg !22880
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !22881, metadata !DIExpression()), !dbg !22882
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !22883, metadata !DIExpression()), !dbg !22884
  call void @llvm.dbg.declare(metadata %struct.list_head** %iter, metadata !22885, metadata !DIExpression()), !dbg !22886
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !22887, metadata !DIExpression()), !dbg !22888
  %0 = load %struct.net_device*, %struct.net_device** %lag_dev.addr, align 8, !dbg !22889
  %adj_list = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 14, !dbg !22889
  %lower = getelementptr inbounds %struct.anon, %struct.anon* %adj_list, i32 0, i32 1, !dbg !22889
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %lower, i32 0, i32 0, !dbg !22889
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !22889
  store %struct.list_head* %1, %struct.list_head** %iter, align 8, !dbg !22889
  %2 = load %struct.net_device*, %struct.net_device** %lag_dev.addr, align 8, !dbg !22889
  %call = call i8* @netdev_lower_get_next(%struct.net_device* %2, %struct.list_head** %iter) #9, !dbg !22889
  %3 = bitcast i8* %call to %struct.net_device*, !dbg !22889
  store %struct.net_device* %3, %struct.net_device** %dev, align 8, !dbg !22889
  br label %for.cond, !dbg !22889

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22891
  %tobool = icmp ne %struct.net_device* %4, null, !dbg !22889
  br i1 %tobool, label %for.body, label %for.end, !dbg !22889

for.body:                                         ; preds = %for.cond
  %5 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22893
  %call1 = call zeroext i1 @mlxsw_sp_port_dev_check(%struct.net_device* %5) #9, !dbg !22896
  br i1 %call1, label %if.then, label %if.end5, !dbg !22897

if.then:                                          ; preds = %for.body
  %6 = load %struct.net_device*, %struct.net_device** %vlan_dev.addr, align 8, !dbg !22898
  %7 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22900
  %8 = load i64, i64* %event.addr, align 8, !dbg !22901
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !22902
  %10 = load i16, i16* %vid.addr, align 2, !dbg !22903
  %call2 = call i32 @mlxsw_sp_netdevice_port_vlan_event(%struct.net_device* %6, %struct.net_device* %7, i64 %8, i8* %9, i16 zeroext %10) #9, !dbg !22904
  store i32 %call2, i32* %ret, align 4, !dbg !22905
  %11 = load i32, i32* %ret, align 4, !dbg !22906
  %tobool3 = icmp ne i32 %11, 0, !dbg !22906
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !22908

if.then4:                                         ; preds = %if.then
  %12 = load i32, i32* %ret, align 4, !dbg !22909
  store i32 %12, i32* %retval, align 4, !dbg !22910
  br label %return, !dbg !22910

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !22911

if.end5:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !22912

for.inc:                                          ; preds = %if.end5
  %13 = load %struct.net_device*, %struct.net_device** %lag_dev.addr, align 8, !dbg !22891
  %call6 = call i8* @netdev_lower_get_next(%struct.net_device* %13, %struct.list_head** %iter) #9, !dbg !22891
  %14 = bitcast i8* %call6 to %struct.net_device*, !dbg !22891
  store %struct.net_device* %14, %struct.net_device** %dev, align 8, !dbg !22891
  br label %for.cond, !dbg !22891, !llvm.loop !22913

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !22915
  br label %return, !dbg !22915

return:                                           ; preds = %for.end, %if.then4
  %15 = load i32, i32* %retval, align 4, !dbg !22916
  ret i32 %15, !dbg !22916
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_netdevice_bridge_vlan_event(%struct.net_device* %vlan_dev, %struct.net_device* %br_dev, i64 %event, i8* %ptr, i16 zeroext %vid) #0 !dbg !12388 {
entry:
  %retval = alloca i32, align 4
  %vlan_dev.addr = alloca %struct.net_device*, align 8
  %br_dev.addr = alloca %struct.net_device*, align 8
  %event.addr = alloca i64, align 8
  %ptr.addr = alloca i8*, align 8
  %vid.addr = alloca i16, align 2
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %info = alloca %struct.netdev_notifier_changeupper_info*, align 8
  %extack = alloca %struct.netlink_ext_ack*, align 8
  %upper_dev = alloca %struct.net_device*, align 8
  %__extack = alloca %struct.netlink_ext_ack*, align 8
  %__extack17 = alloca %struct.netlink_ext_ack*, align 8
  store %struct.net_device* %vlan_dev, %struct.net_device** %vlan_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %vlan_dev.addr, metadata !22917, metadata !DIExpression()), !dbg !22918
  store %struct.net_device* %br_dev, %struct.net_device** %br_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %br_dev.addr, metadata !22919, metadata !DIExpression()), !dbg !22920
  store i64 %event, i64* %event.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %event.addr, metadata !22921, metadata !DIExpression()), !dbg !22922
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !22923, metadata !DIExpression()), !dbg !22924
  store i16 %vid, i16* %vid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vid.addr, metadata !22925, metadata !DIExpression()), !dbg !22926
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !22927, metadata !DIExpression()), !dbg !22928
  %0 = load %struct.net_device*, %struct.net_device** %vlan_dev.addr, align 8, !dbg !22929
  %call = call %struct.mlxsw_sp* @mlxsw_sp_lower_get(%struct.net_device* %0) #9, !dbg !22930
  store %struct.mlxsw_sp* %call, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !22928
  call void @llvm.dbg.declare(metadata %struct.netdev_notifier_changeupper_info** %info, metadata !22931, metadata !DIExpression()), !dbg !22932
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !22933
  %2 = bitcast i8* %1 to %struct.netdev_notifier_changeupper_info*, !dbg !22933
  store %struct.netdev_notifier_changeupper_info* %2, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !22932
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack, metadata !22934, metadata !DIExpression()), !dbg !22935
  call void @llvm.dbg.declare(metadata %struct.net_device** %upper_dev, metadata !22936, metadata !DIExpression()), !dbg !22937
  %3 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !22938
  %tobool = icmp ne %struct.mlxsw_sp* %3, null, !dbg !22938
  br i1 %tobool, label %if.end, label %if.then, !dbg !22940

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !22941
  br label %return, !dbg !22941

if.end:                                           ; preds = %entry
  %4 = load %struct.netdev_notifier_changeupper_info*, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !22942
  %info1 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, %struct.netdev_notifier_changeupper_info* %4, i32 0, i32 0, !dbg !22943
  %call2 = call %struct.netlink_ext_ack* @netdev_notifier_info_to_extack(%struct.netdev_notifier_info* %info1) #9, !dbg !22944
  store %struct.netlink_ext_ack* %call2, %struct.netlink_ext_ack** %extack, align 8, !dbg !22945
  %5 = load i64, i64* %event.addr, align 8, !dbg !22946
  switch i64 %5, label %sw.epilog [
    i64 26, label %sw.bb
    i64 21, label %sw.bb24
  ], !dbg !22947

sw.bb:                                            ; preds = %if.end
  %6 = load %struct.netdev_notifier_changeupper_info*, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !22948
  %upper_dev3 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, %struct.netdev_notifier_changeupper_info* %6, i32 0, i32 1, !dbg !22950
  %7 = load %struct.net_device*, %struct.net_device** %upper_dev3, align 8, !dbg !22950
  store %struct.net_device* %7, %struct.net_device** %upper_dev, align 8, !dbg !22951
  %8 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !22952
  %call4 = call zeroext i1 @netif_is_macvlan(%struct.net_device* %8) #9, !dbg !22954
  br i1 %call4, label %if.end9, label %if.then5, !dbg !22955

if.then5:                                         ; preds = %sw.bb
  br label %do.body, !dbg !22956

do.body:                                          ; preds = %if.then5
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack, metadata !22958, metadata !DIExpression()), !dbg !22960
  %9 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack, align 8, !dbg !22960
  store %struct.netlink_ext_ack* %9, %struct.netlink_ext_ack** %__extack, align 8, !dbg !22960
  %10 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !22961
  %tobool6 = icmp ne %struct.netlink_ext_ack* %10, null, !dbg !22961
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !22960

if.then7:                                         ; preds = %do.body
  %11 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !22961
  %_msg = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %11, i32 0, i32 0, !dbg !22961
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @mlxsw_sp_netdevice_bridge_vlan_event.__msg, i64 0, i64 0), i8** %_msg, align 8, !dbg !22961
  br label %if.end8, !dbg !22961

if.end8:                                          ; preds = %if.then7, %do.body
  br label %do.end, !dbg !22960

do.end:                                           ; preds = %if.end8
  store i32 -95, i32* %retval, align 4, !dbg !22963
  br label %return, !dbg !22963

if.end9:                                          ; preds = %sw.bb
  %12 = load %struct.netdev_notifier_changeupper_info*, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !22964
  %linking = getelementptr inbounds %struct.netdev_notifier_changeupper_info, %struct.netdev_notifier_changeupper_info* %12, i32 0, i32 3, !dbg !22966
  %13 = load i8, i8* %linking, align 1, !dbg !22966
  %tobool10 = trunc i8 %13 to i1, !dbg !22966
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !22967

if.then11:                                        ; preds = %if.end9
  br label %sw.epilog, !dbg !22968

if.end12:                                         ; preds = %if.end9
  %14 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !22969
  %call13 = call zeroext i1 @netif_is_macvlan(%struct.net_device* %14) #9, !dbg !22971
  br i1 %call13, label %land.lhs.true, label %if.end23, !dbg !22972

land.lhs.true:                                    ; preds = %if.end12
  %15 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !22973
  %16 = load %struct.net_device*, %struct.net_device** %vlan_dev.addr, align 8, !dbg !22974
  %call14 = call zeroext i1 @mlxsw_sp_rif_exists(%struct.mlxsw_sp* %15, %struct.net_device* %16) #9, !dbg !22975
  br i1 %call14, label %if.end23, label %if.then15, !dbg !22976

if.then15:                                        ; preds = %land.lhs.true
  br label %do.body16, !dbg !22977

do.body16:                                        ; preds = %if.then15
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack17, metadata !22979, metadata !DIExpression()), !dbg !22981
  %17 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack, align 8, !dbg !22981
  store %struct.netlink_ext_ack* %17, %struct.netlink_ext_ack** %__extack17, align 8, !dbg !22981
  %18 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack17, align 8, !dbg !22982
  %tobool18 = icmp ne %struct.netlink_ext_ack* %18, null, !dbg !22982
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !22981

if.then19:                                        ; preds = %do.body16
  %19 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack17, align 8, !dbg !22982
  %_msg20 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %19, i32 0, i32 0, !dbg !22982
  store i8* getelementptr inbounds ([70 x i8], [70 x i8]* @mlxsw_sp_netdevice_bridge_vlan_event.__msg.270, i64 0, i64 0), i8** %_msg20, align 8, !dbg !22982
  br label %if.end21, !dbg !22982

if.end21:                                         ; preds = %if.then19, %do.body16
  br label %do.end22, !dbg !22981

do.end22:                                         ; preds = %if.end21
  store i32 -95, i32* %retval, align 4, !dbg !22984
  br label %return, !dbg !22984

if.end23:                                         ; preds = %land.lhs.true, %if.end12
  br label %sw.epilog, !dbg !22985

sw.bb24:                                          ; preds = %if.end
  %20 = load %struct.netdev_notifier_changeupper_info*, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !22986
  %upper_dev25 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, %struct.netdev_notifier_changeupper_info* %20, i32 0, i32 1, !dbg !22987
  %21 = load %struct.net_device*, %struct.net_device** %upper_dev25, align 8, !dbg !22987
  store %struct.net_device* %21, %struct.net_device** %upper_dev, align 8, !dbg !22988
  %22 = load %struct.netdev_notifier_changeupper_info*, %struct.netdev_notifier_changeupper_info** %info, align 8, !dbg !22989
  %linking26 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, %struct.netdev_notifier_changeupper_info* %22, i32 0, i32 3, !dbg !22991
  %23 = load i8, i8* %linking26, align 1, !dbg !22991
  %tobool27 = trunc i8 %23 to i1, !dbg !22991
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !22992

if.then28:                                        ; preds = %sw.bb24
  br label %sw.epilog, !dbg !22993

if.end29:                                         ; preds = %sw.bb24
  %24 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !22994
  %call30 = call zeroext i1 @netif_is_macvlan(%struct.net_device* %24) #9, !dbg !22996
  br i1 %call30, label %if.then31, label %if.end32, !dbg !22997

if.then31:                                        ; preds = %if.end29
  %25 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !22998
  %26 = load %struct.net_device*, %struct.net_device** %upper_dev, align 8, !dbg !22999
  call void @mlxsw_sp_rif_macvlan_del(%struct.mlxsw_sp* %25, %struct.net_device* %26) #9, !dbg !23000
  br label %if.end32, !dbg !23000

if.end32:                                         ; preds = %if.then31, %if.end29
  br label %sw.epilog, !dbg !23001

sw.epilog:                                        ; preds = %if.end, %if.end32, %if.then28, %if.end23, %if.then11
  store i32 0, i32* %retval, align 4, !dbg !23002
  br label %return, !dbg !23002

return:                                           ; preds = %sw.epilog, %do.end22, %do.end, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !23003
  ret i32 %27, !dbg !23003
}

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_rif_destroy_by_dev(%struct.mlxsw_sp*, %struct.net_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.net* @mlxsw_core_net(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !23004 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !23007, metadata !DIExpression()), !dbg !23008
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !23009
  %1 = bitcast %struct.mlxsw_core* %0 to i8*, !dbg !23009
  %call = call %struct.devlink* @priv_to_devlink(i8* %1) #9, !dbg !23010
  %call1 = call %struct.net* @devlink_net(%struct.devlink* %call) #9, !dbg !23011
  ret %struct.net* %call1, !dbg !23012
}

; Function Attrs: noredzone
declare dso_local %struct.net* @devlink_net(%struct.devlink*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.devlink* @priv_to_devlink(i8* %priv) #0 !dbg !23013 {
entry:
  %priv.addr = alloca i8*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.devlink*, align 8
  store i8* %priv, i8** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %priv.addr, metadata !23016, metadata !DIExpression()), !dbg !23017
  br label %do.body, !dbg !23018

do.body:                                          ; preds = %entry
  %0 = load i8*, i8** %priv.addr, align 8, !dbg !23019
  %tobool = icmp ne i8* %0, null, !dbg !23019
  %lnot = xor i1 %tobool, true, !dbg !23019
  %lnot1 = xor i1 %lnot, true, !dbg !23019
  %lnot2 = xor i1 %lnot1, true, !dbg !23019
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !23019
  %conv = sext i32 %lnot.ext to i64, !dbg !23019
  %tobool3 = icmp ne i64 %conv, 0, !dbg !23019
  br i1 %tobool3, label %if.then, label %if.end, !dbg !23022

if.then:                                          ; preds = %do.body
  br label %do.body4, !dbg !23019

do.body4:                                         ; preds = %if.then
  br label %do.body5, !dbg !23023

do.body5:                                         ; preds = %do.body4
  br label %do.end, !dbg !23025

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !23023

do.body6:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.272, i64 0, i64 0), i32 1358, i32 0, i64 12) #10, !dbg !23027, !srcloc !23029
  br label %do.end7, !dbg !23027

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !23023

do.body8:                                         ; preds = %do.end7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 643) #10, !dbg !23030, !srcloc !23033
  unreachable, !dbg !23034

do.end9:                                          ; No predecessors!
  br label %do.end10, !dbg !23023

do.end10:                                         ; preds = %do.end9
  br label %if.end, !dbg !23023

if.end:                                           ; preds = %do.end10, %do.body
  br label %do.end11, !dbg !23022

do.end11:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !23035, metadata !DIExpression()), !dbg !23037
  %1 = load i8*, i8** %priv.addr, align 8, !dbg !23037
  store i8* %1, i8** %__mptr, align 8, !dbg !23037
  br label %do.body12, !dbg !23037

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !23038

do.end13:                                         ; preds = %do.body12
  %2 = load i8*, i8** %__mptr, align 8, !dbg !23037
  %add.ptr = getelementptr i8, i8* %2, i64 -352, !dbg !23037
  %3 = bitcast i8* %add.ptr to %struct.devlink*, !dbg !23037
  store %struct.devlink* %3, %struct.devlink** %tmp, align 8, !dbg !23038
  %4 = load %struct.devlink*, %struct.devlink** %tmp, align 8, !dbg !23037
  ret %struct.devlink* %4, !dbg !23040
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_core_max_ports(%struct.mlxsw_core*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_module_info_get(%struct.mlxsw_sp* %mlxsw_sp, i8 zeroext %local_port, %struct.mlxsw_sp_port_mapping* %port_mapping) #0 !dbg !23041 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %local_port.addr = alloca i8, align 1
  %port_mapping.addr = alloca %struct.mlxsw_sp_port_mapping*, align 8
  %pmlp_pl = alloca [64 x i8], align 16
  %separate_rxtx = alloca i8, align 1
  %module = alloca i8, align 1
  %width = alloca i8, align 1
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !23044, metadata !DIExpression()), !dbg !23045
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !23046, metadata !DIExpression()), !dbg !23047
  store %struct.mlxsw_sp_port_mapping* %port_mapping, %struct.mlxsw_sp_port_mapping** %port_mapping.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_mapping** %port_mapping.addr, metadata !23048, metadata !DIExpression()), !dbg !23049
  call void @llvm.dbg.declare(metadata [64 x i8]* %pmlp_pl, metadata !23050, metadata !DIExpression()), !dbg !23051
  call void @llvm.dbg.declare(metadata i8* %separate_rxtx, metadata !23052, metadata !DIExpression()), !dbg !23053
  call void @llvm.dbg.declare(metadata i8* %module, metadata !23054, metadata !DIExpression()), !dbg !23055
  call void @llvm.dbg.declare(metadata i8* %width, metadata !23056, metadata !DIExpression()), !dbg !23057
  call void @llvm.dbg.declare(metadata i32* %err, metadata !23058, metadata !DIExpression()), !dbg !23059
  call void @llvm.dbg.declare(metadata i32* %i, metadata !23060, metadata !DIExpression()), !dbg !23061
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %pmlp_pl, i64 0, i64 0, !dbg !23062
  %0 = load i8, i8* %local_port.addr, align 1, !dbg !23063
  call void @mlxsw_reg_pmlp_pack(i8* %arraydecay, i8 zeroext %0) #9, !dbg !23064
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23065
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %1, i32 0, i32 1, !dbg !23066
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !23066
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %pmlp_pl, i64 0, i64 0, !dbg !23067
  %call = call i32 @mlxsw_reg_query(%struct.mlxsw_core* %2, %struct.mlxsw_reg_info* @mlxsw_reg_pmlp, i8* %arraydecay1) #9, !dbg !23068
  store i32 %call, i32* %err, align 4, !dbg !23069
  %3 = load i32, i32* %err, align 4, !dbg !23070
  %tobool = icmp ne i32 %3, 0, !dbg !23070
  br i1 %tobool, label %if.then, label %if.end, !dbg !23072

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %err, align 4, !dbg !23073
  store i32 %4, i32* %retval, align 4, !dbg !23074
  br label %return, !dbg !23074

if.end:                                           ; preds = %entry
  %arraydecay2 = getelementptr inbounds [64 x i8], [64 x i8]* %pmlp_pl, i64 0, i64 0, !dbg !23075
  %call3 = call i32 @mlxsw_reg_pmlp_module_get(i8* %arraydecay2, i16 zeroext 0) #9, !dbg !23076
  %conv = trunc i32 %call3 to i8, !dbg !23076
  store i8 %conv, i8* %module, align 1, !dbg !23077
  %arraydecay4 = getelementptr inbounds [64 x i8], [64 x i8]* %pmlp_pl, i64 0, i64 0, !dbg !23078
  %call5 = call i32 @mlxsw_reg_pmlp_width_get(i8* %arraydecay4) #9, !dbg !23079
  %conv6 = trunc i32 %call5 to i8, !dbg !23079
  store i8 %conv6, i8* %width, align 1, !dbg !23080
  %arraydecay7 = getelementptr inbounds [64 x i8], [64 x i8]* %pmlp_pl, i64 0, i64 0, !dbg !23081
  %call8 = call i32 @mlxsw_reg_pmlp_rxtx_get(i8* %arraydecay7) #9, !dbg !23082
  %tobool9 = icmp ne i32 %call8, 0, !dbg !23082
  %frombool = zext i1 %tobool9 to i8, !dbg !23083
  store i8 %frombool, i8* %separate_rxtx, align 1, !dbg !23083
  %5 = load i8, i8* %width, align 1, !dbg !23084
  %conv10 = zext i8 %5 to i32, !dbg !23084
  %tobool11 = icmp ne i32 %conv10, 0, !dbg !23084
  br i1 %tobool11, label %land.lhs.true, label %if.end16, !dbg !23086

land.lhs.true:                                    ; preds = %if.end
  %6 = load i8, i8* %width, align 1, !dbg !23087
  %conv12 = zext i8 %6 to i64, !dbg !23087
  %call13 = call zeroext i1 @is_power_of_2(i64 %conv12) #11, !dbg !23088
  br i1 %call13, label %if.end16, label %if.then14, !dbg !23089

if.then14:                                        ; preds = %land.lhs.true
  %7 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23090
  %bus_info = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %7, i32 0, i32 2, !dbg !23090
  %8 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info, align 8, !dbg !23090
  %dev = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %8, i32 0, i32 2, !dbg !23090
  %9 = load %struct.device*, %struct.device** %dev, align 8, !dbg !23090
  %10 = load i8, i8* %local_port.addr, align 1, !dbg !23090
  %conv15 = zext i8 %10 to i32, !dbg !23090
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %9, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.273, i64 0, i64 0), i32 %conv15) #13, !dbg !23090
  store i32 -22, i32* %retval, align 4, !dbg !23092
  br label %return, !dbg !23092

if.end16:                                         ; preds = %land.lhs.true, %if.end
  store i32 0, i32* %i, align 4, !dbg !23093
  br label %for.cond, !dbg !23095

for.cond:                                         ; preds = %for.inc, %if.end16
  %11 = load i32, i32* %i, align 4, !dbg !23096
  %12 = load i8, i8* %width, align 1, !dbg !23098
  %conv17 = zext i8 %12 to i32, !dbg !23098
  %cmp = icmp slt i32 %11, %conv17, !dbg !23099
  br i1 %cmp, label %for.body, label %for.end, !dbg !23100

for.body:                                         ; preds = %for.cond
  %arraydecay19 = getelementptr inbounds [64 x i8], [64 x i8]* %pmlp_pl, i64 0, i64 0, !dbg !23101
  %13 = load i32, i32* %i, align 4, !dbg !23104
  %conv20 = trunc i32 %13 to i16, !dbg !23104
  %call21 = call i32 @mlxsw_reg_pmlp_module_get(i8* %arraydecay19, i16 zeroext %conv20) #9, !dbg !23105
  %14 = load i8, i8* %module, align 1, !dbg !23106
  %conv22 = zext i8 %14 to i32, !dbg !23106
  %cmp23 = icmp ne i32 %call21, %conv22, !dbg !23107
  br i1 %cmp23, label %if.then25, label %if.end29, !dbg !23108

if.then25:                                        ; preds = %for.body
  %15 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23109
  %bus_info26 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %15, i32 0, i32 2, !dbg !23109
  %16 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info26, align 8, !dbg !23109
  %dev27 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %16, i32 0, i32 2, !dbg !23109
  %17 = load %struct.device*, %struct.device** %dev27, align 8, !dbg !23109
  %18 = load i8, i8* %local_port.addr, align 1, !dbg !23109
  %conv28 = zext i8 %18 to i32, !dbg !23109
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %17, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.274, i64 0, i64 0), i32 %conv28) #13, !dbg !23109
  store i32 -22, i32* %retval, align 4, !dbg !23111
  br label %return, !dbg !23111

if.end29:                                         ; preds = %for.body
  %19 = load i8, i8* %separate_rxtx, align 1, !dbg !23112
  %tobool30 = trunc i8 %19 to i1, !dbg !23112
  br i1 %tobool30, label %land.lhs.true32, label %if.end45, !dbg !23114

land.lhs.true32:                                  ; preds = %if.end29
  %arraydecay33 = getelementptr inbounds [64 x i8], [64 x i8]* %pmlp_pl, i64 0, i64 0, !dbg !23115
  %20 = load i32, i32* %i, align 4, !dbg !23116
  %conv34 = trunc i32 %20 to i16, !dbg !23116
  %call35 = call i32 @mlxsw_reg_pmlp_tx_lane_get(i8* %arraydecay33, i16 zeroext %conv34) #9, !dbg !23117
  %arraydecay36 = getelementptr inbounds [64 x i8], [64 x i8]* %pmlp_pl, i64 0, i64 0, !dbg !23118
  %21 = load i32, i32* %i, align 4, !dbg !23119
  %conv37 = trunc i32 %21 to i16, !dbg !23119
  %call38 = call i32 @mlxsw_reg_pmlp_rx_lane_get(i8* %arraydecay36, i16 zeroext %conv37) #9, !dbg !23120
  %cmp39 = icmp ne i32 %call35, %call38, !dbg !23121
  br i1 %cmp39, label %if.then41, label %if.end45, !dbg !23122

if.then41:                                        ; preds = %land.lhs.true32
  %22 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23123
  %bus_info42 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %22, i32 0, i32 2, !dbg !23123
  %23 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info42, align 8, !dbg !23123
  %dev43 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %23, i32 0, i32 2, !dbg !23123
  %24 = load %struct.device*, %struct.device** %dev43, align 8, !dbg !23123
  %25 = load i8, i8* %local_port.addr, align 1, !dbg !23123
  %conv44 = zext i8 %25 to i32, !dbg !23123
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %24, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.275, i64 0, i64 0), i32 %conv44) #13, !dbg !23123
  store i32 -22, i32* %retval, align 4, !dbg !23125
  br label %return, !dbg !23125

if.end45:                                         ; preds = %land.lhs.true32, %if.end29
  %arraydecay46 = getelementptr inbounds [64 x i8], [64 x i8]* %pmlp_pl, i64 0, i64 0, !dbg !23126
  %26 = load i32, i32* %i, align 4, !dbg !23128
  %conv47 = trunc i32 %26 to i16, !dbg !23128
  %call48 = call i32 @mlxsw_reg_pmlp_tx_lane_get(i8* %arraydecay46, i16 zeroext %conv47) #9, !dbg !23129
  %27 = load i32, i32* %i, align 4, !dbg !23130
  %cmp49 = icmp ne i32 %call48, %27, !dbg !23131
  br i1 %cmp49, label %if.then51, label %if.end55, !dbg !23132

if.then51:                                        ; preds = %if.end45
  %28 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23133
  %bus_info52 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %28, i32 0, i32 2, !dbg !23133
  %29 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info52, align 8, !dbg !23133
  %dev53 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %29, i32 0, i32 2, !dbg !23133
  %30 = load %struct.device*, %struct.device** %dev53, align 8, !dbg !23133
  %31 = load i8, i8* %local_port.addr, align 1, !dbg !23133
  %conv54 = zext i8 %31 to i32, !dbg !23133
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %30, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.276, i64 0, i64 0), i32 %conv54) #13, !dbg !23133
  store i32 -22, i32* %retval, align 4, !dbg !23135
  br label %return, !dbg !23135

if.end55:                                         ; preds = %if.end45
  br label %for.inc, !dbg !23136

for.inc:                                          ; preds = %if.end55
  %32 = load i32, i32* %i, align 4, !dbg !23137
  %inc = add i32 %32, 1, !dbg !23137
  store i32 %inc, i32* %i, align 4, !dbg !23137
  br label %for.cond, !dbg !23138, !llvm.loop !23139

for.end:                                          ; preds = %for.cond
  %33 = load i8, i8* %module, align 1, !dbg !23141
  %34 = load %struct.mlxsw_sp_port_mapping*, %struct.mlxsw_sp_port_mapping** %port_mapping.addr, align 8, !dbg !23142
  %module56 = getelementptr inbounds %struct.mlxsw_sp_port_mapping, %struct.mlxsw_sp_port_mapping* %34, i32 0, i32 0, !dbg !23143
  store i8 %33, i8* %module56, align 1, !dbg !23144
  %35 = load i8, i8* %width, align 1, !dbg !23145
  %36 = load %struct.mlxsw_sp_port_mapping*, %struct.mlxsw_sp_port_mapping** %port_mapping.addr, align 8, !dbg !23146
  %width57 = getelementptr inbounds %struct.mlxsw_sp_port_mapping, %struct.mlxsw_sp_port_mapping* %36, i32 0, i32 1, !dbg !23147
  store i8 %35, i8* %width57, align 1, !dbg !23148
  %arraydecay58 = getelementptr inbounds [64 x i8], [64 x i8]* %pmlp_pl, i64 0, i64 0, !dbg !23149
  %call59 = call i32 @mlxsw_reg_pmlp_tx_lane_get(i8* %arraydecay58, i16 zeroext 0) #9, !dbg !23150
  %conv60 = trunc i32 %call59 to i8, !dbg !23150
  %37 = load %struct.mlxsw_sp_port_mapping*, %struct.mlxsw_sp_port_mapping** %port_mapping.addr, align 8, !dbg !23151
  %lane = getelementptr inbounds %struct.mlxsw_sp_port_mapping, %struct.mlxsw_sp_port_mapping* %37, i32 0, i32 2, !dbg !23152
  store i8 %conv60, i8* %lane, align 1, !dbg !23153
  store i32 0, i32* %retval, align 4, !dbg !23154
  br label %return, !dbg !23154

return:                                           ; preds = %for.end, %if.then51, %if.then41, %if.then25, %if.then14, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !23155
  ret i32 %38, !dbg !23155
}

; Function Attrs: noredzone
declare dso_local i8* @kmemdup(i8*, i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_pmlp_pack(i8* %payload, i8 zeroext %local_port) #0 !dbg !23156 {
entry:
  %payload.addr = alloca i8*, align 8
  %local_port.addr = alloca i8, align 1
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !23157, metadata !DIExpression()), !dbg !23158
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !23159, metadata !DIExpression()), !dbg !23160
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !23161
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_pmlp, i32 0, i32 1), align 2, !dbg !23161
  %conv = zext i16 %1 to i64, !dbg !23161
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !23161
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !23162
  %3 = load i8, i8* %local_port.addr, align 1, !dbg !23163
  %conv1 = zext i8 %3 to i32, !dbg !23163
  call void @mlxsw_reg_pmlp_local_port_set(i8* %2, i32 %conv1) #9, !dbg !23164
  ret void, !dbg !23165
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_pmlp_module_get(i8* %buf, i16 zeroext %index) #0 !dbg !23166 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !23169, metadata !DIExpression()), !dbg !23170
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !23171, metadata !DIExpression()), !dbg !23170
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !23170
  %1 = load i16, i16* %index.addr, align 2, !dbg !23170
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_pmlp_module_item to %struct.mlxsw_item*), i16 zeroext %1) #9, !dbg !23170
  ret i32 %call, !dbg !23170
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_pmlp_width_get(i8* %buf) #0 !dbg !23172 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !23173, metadata !DIExpression()), !dbg !23174
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !23174
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_pmlp_width_item to %struct.mlxsw_item*), i16 zeroext 0) #9, !dbg !23174
  ret i32 %call, !dbg !23174
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_pmlp_rxtx_get(i8* %buf) #0 !dbg !23175 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !23176, metadata !DIExpression()), !dbg !23177
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !23177
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_pmlp_rxtx_item to %struct.mlxsw_item*), i16 zeroext 0) #9, !dbg !23177
  ret i32 %call, !dbg !23177
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal zeroext i1 @is_power_of_2(i64 %n) #7 !dbg !23178 {
entry:
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !23181, metadata !DIExpression()), !dbg !23182
  %0 = load i64, i64* %n.addr, align 8, !dbg !23183
  %cmp = icmp ne i64 %0, 0, !dbg !23184
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !23185

land.rhs:                                         ; preds = %entry
  %1 = load i64, i64* %n.addr, align 8, !dbg !23186
  %2 = load i64, i64* %n.addr, align 8, !dbg !23187
  %sub = sub i64 %2, 1, !dbg !23188
  %and = and i64 %1, %sub, !dbg !23189
  %cmp1 = icmp eq i64 %and, 0, !dbg !23190
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !23191
  ret i1 %3, !dbg !23192
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_pmlp_tx_lane_get(i8* %buf, i16 zeroext %index) #0 !dbg !23193 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !23194, metadata !DIExpression()), !dbg !23195
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !23196, metadata !DIExpression()), !dbg !23195
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !23195
  %1 = load i16, i16* %index.addr, align 2, !dbg !23195
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_pmlp_tx_lane_item to %struct.mlxsw_item*), i16 zeroext %1) #9, !dbg !23195
  ret i32 %call, !dbg !23195
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_pmlp_rx_lane_get(i8* %buf, i16 zeroext %index) #0 !dbg !23197 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !23198, metadata !DIExpression()), !dbg !23199
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !23200, metadata !DIExpression()), !dbg !23199
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !23199
  %1 = load i16, i16* %index.addr, align 2, !dbg !23199
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_pmlp_rx_lane_item to %struct.mlxsw_item*), i16 zeroext %1) #9, !dbg !23199
  ret i32 %call, !dbg !23199
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_pmlp_local_port_set(i8* %buf, i32 %val) #0 !dbg !23201 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !23202, metadata !DIExpression()), !dbg !23203
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !23204, metadata !DIExpression()), !dbg !23203
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !23203
  %1 = load i32, i32* %val.addr, align 4, !dbg !23203
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_pmlp_local_port_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !23203
  ret void, !dbg !23203
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_cpu_port_create(%struct.mlxsw_sp* %mlxsw_sp) #0 !dbg !23205 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !23206, metadata !DIExpression()), !dbg !23207
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !23208, metadata !DIExpression()), !dbg !23209
  call void @llvm.dbg.declare(metadata i32* %err, metadata !23210, metadata !DIExpression()), !dbg !23211
  %call = call i8* @kzalloc(i64 1104, i32 3264) #9, !dbg !23212
  %0 = bitcast i8* %call to %struct.mlxsw_sp_port*, !dbg !23212
  store %struct.mlxsw_sp_port* %0, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23213
  %1 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23214
  %tobool = icmp ne %struct.mlxsw_sp_port* %1, null, !dbg !23214
  br i1 %tobool, label %if.end, label %if.then, !dbg !23216

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !23217
  br label %return, !dbg !23217

if.end:                                           ; preds = %entry
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23218
  %3 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23219
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %3, i32 0, i32 2, !dbg !23220
  store %struct.mlxsw_sp* %2, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !23221
  %4 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23222
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %4, i32 0, i32 3, !dbg !23223
  store i8 0, i8* %local_port, align 8, !dbg !23224
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23225
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %5, i32 0, i32 1, !dbg !23226
  %6 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !23226
  %7 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23227
  %8 = bitcast %struct.mlxsw_sp_port* %7 to i8*, !dbg !23227
  %9 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23228
  %base_mac = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %9, i32 0, i32 3, !dbg !23229
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %base_mac, i64 0, i64 0, !dbg !23228
  %call2 = call i32 @mlxsw_core_cpu_port_init(%struct.mlxsw_core* %6, i8* %8, i8* %arraydecay, i8 zeroext 6) #9, !dbg !23230
  store i32 %call2, i32* %err, align 4, !dbg !23231
  %10 = load i32, i32* %err, align 4, !dbg !23232
  %tobool3 = icmp ne i32 %10, 0, !dbg !23232
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !23234

if.then4:                                         ; preds = %if.end
  %11 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23235
  %bus_info = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %11, i32 0, i32 2, !dbg !23235
  %12 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info, align 8, !dbg !23235
  %dev = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %12, i32 0, i32 2, !dbg !23235
  %13 = load %struct.device*, %struct.device** %dev, align 8, !dbg !23235
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %13, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.290, i64 0, i64 0)) #13, !dbg !23235
  br label %err_core_cpu_port_init, !dbg !23237

if.end5:                                          ; preds = %if.end
  %14 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23238
  %15 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23239
  %ports = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %15, i32 0, i32 0, !dbg !23240
  %16 = load %struct.mlxsw_sp_port**, %struct.mlxsw_sp_port*** %ports, align 8, !dbg !23240
  %arrayidx = getelementptr %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %16, i64 0, !dbg !23239
  store %struct.mlxsw_sp_port* %14, %struct.mlxsw_sp_port** %arrayidx, align 8, !dbg !23241
  store i32 0, i32* %retval, align 4, !dbg !23242
  br label %return, !dbg !23242

err_core_cpu_port_init:                           ; preds = %if.then4
  call void @llvm.dbg.label(metadata !23243), !dbg !23244
  %17 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23245
  %18 = bitcast %struct.mlxsw_sp_port* %17 to i8*, !dbg !23245
  call void @kfree(i8* %18) #9, !dbg !23246
  %19 = load i32, i32* %err, align 4, !dbg !23247
  store i32 %19, i32* %retval, align 4, !dbg !23248
  br label %return, !dbg !23248

return:                                           ; preds = %err_core_cpu_port_init, %if.end5, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !23249
  ret i32 %20, !dbg !23249
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_create(%struct.mlxsw_sp* %mlxsw_sp, i8 zeroext %local_port, i8 zeroext %split_base_local_port, %struct.mlxsw_sp_port_mapping* %port_mapping) #0 !dbg !23250 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %local_port.addr = alloca i8, align 1
  %split_base_local_port.addr = alloca i8, align 1
  %port_mapping.addr = alloca %struct.mlxsw_sp_port_mapping*, align 8
  %mlxsw_sp_port_vlan = alloca %struct.mlxsw_sp_port_vlan*, align 8
  %split = alloca i8, align 1
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %lanes = alloca i32, align 4
  %dev = alloca %struct.net_device*, align 8
  %splittable = alloca i8, align 1
  %err = alloca i32, align 4
  %pcpu_stats = alloca %struct.mlxsw_sp_port_pcpu_stats*, align 8
  %__cpu = alloca i32, align 4
  %stat = alloca %struct.mlxsw_sp_port_pcpu_stats*, align 8
  %tmp = alloca %struct.mlxsw_sp_port_pcpu_stats*, align 8
  %__vpp_verify = alloca i8*, align 8
  %tmp37 = alloca %struct.mlxsw_sp_port_pcpu_stats*, align 8
  %tmp39 = alloca %struct.mlxsw_sp_port_pcpu_stats*, align 8
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  %.compoundliteral220 = alloca %struct.atomic64_t, align 8
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !23253, metadata !DIExpression()), !dbg !23254
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !23255, metadata !DIExpression()), !dbg !23256
  store i8 %split_base_local_port, i8* %split_base_local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %split_base_local_port.addr, metadata !23257, metadata !DIExpression()), !dbg !23258
  store %struct.mlxsw_sp_port_mapping* %port_mapping, %struct.mlxsw_sp_port_mapping** %port_mapping.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_mapping** %port_mapping.addr, metadata !23259, metadata !DIExpression()), !dbg !23260
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, metadata !23261, metadata !DIExpression()), !dbg !23262
  call void @llvm.dbg.declare(metadata i8* %split, metadata !23263, metadata !DIExpression()), !dbg !23264
  %0 = load i8, i8* %split_base_local_port.addr, align 1, !dbg !23265
  %tobool = icmp ne i8 %0, 0, !dbg !23266
  %lnot = xor i1 %tobool, true, !dbg !23266
  %lnot1 = xor i1 %lnot, true, !dbg !23267
  %frombool = zext i1 %lnot1 to i8, !dbg !23264
  store i8 %frombool, i8* %split, align 1, !dbg !23264
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !23268, metadata !DIExpression()), !dbg !23269
  call void @llvm.dbg.declare(metadata i32* %lanes, metadata !23270, metadata !DIExpression()), !dbg !23271
  %1 = load %struct.mlxsw_sp_port_mapping*, %struct.mlxsw_sp_port_mapping** %port_mapping.addr, align 8, !dbg !23272
  %width = getelementptr inbounds %struct.mlxsw_sp_port_mapping, %struct.mlxsw_sp_port_mapping* %1, i32 0, i32 1, !dbg !23273
  %2 = load i8, i8* %width, align 1, !dbg !23273
  %conv = zext i8 %2 to i32, !dbg !23272
  store i32 %conv, i32* %lanes, align 4, !dbg !23271
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !23274, metadata !DIExpression()), !dbg !23275
  call void @llvm.dbg.declare(metadata i8* %splittable, metadata !23276, metadata !DIExpression()), !dbg !23277
  call void @llvm.dbg.declare(metadata i32* %err, metadata !23278, metadata !DIExpression()), !dbg !23279
  %3 = load i32, i32* %lanes, align 4, !dbg !23280
  %cmp = icmp ugt i32 %3, 1, !dbg !23281
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !23282

land.rhs:                                         ; preds = %entry
  %4 = load i8, i8* %split, align 1, !dbg !23283
  %tobool3 = trunc i8 %4 to i1, !dbg !23283
  %lnot4 = xor i1 %tobool3, true, !dbg !23284
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %lnot4, %land.rhs ], !dbg !23285
  %frombool5 = zext i1 %5 to i8, !dbg !23286
  store i8 %frombool5, i8* %splittable, align 1, !dbg !23286
  %6 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23287
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %6, i32 0, i32 1, !dbg !23288
  %7 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !23288
  %8 = load i8, i8* %local_port.addr, align 1, !dbg !23289
  %9 = load %struct.mlxsw_sp_port_mapping*, %struct.mlxsw_sp_port_mapping** %port_mapping.addr, align 8, !dbg !23290
  %module = getelementptr inbounds %struct.mlxsw_sp_port_mapping, %struct.mlxsw_sp_port_mapping* %9, i32 0, i32 0, !dbg !23291
  %10 = load i8, i8* %module, align 1, !dbg !23291
  %conv6 = zext i8 %10 to i32, !dbg !23290
  %add = add i32 %conv6, 1, !dbg !23292
  %11 = load i8, i8* %split, align 1, !dbg !23293
  %tobool7 = trunc i8 %11 to i1, !dbg !23293
  %12 = load %struct.mlxsw_sp_port_mapping*, %struct.mlxsw_sp_port_mapping** %port_mapping.addr, align 8, !dbg !23294
  %lane = getelementptr inbounds %struct.mlxsw_sp_port_mapping, %struct.mlxsw_sp_port_mapping* %12, i32 0, i32 2, !dbg !23295
  %13 = load i8, i8* %lane, align 1, !dbg !23295
  %conv8 = zext i8 %13 to i32, !dbg !23294
  %14 = load i32, i32* %lanes, align 4, !dbg !23296
  %div = udiv i32 %conv8, %14, !dbg !23297
  %15 = load i8, i8* %splittable, align 1, !dbg !23298
  %tobool9 = trunc i8 %15 to i1, !dbg !23298
  %16 = load i32, i32* %lanes, align 4, !dbg !23299
  %17 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23300
  %base_mac = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %17, i32 0, i32 3, !dbg !23301
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %base_mac, i64 0, i64 0, !dbg !23300
  %call = call i32 @mlxsw_core_port_init(%struct.mlxsw_core* %7, i8 zeroext %8, i32 %add, i1 zeroext %tobool7, i32 %div, i1 zeroext %tobool9, i32 %16, i8* %arraydecay, i8 zeroext 6) #9, !dbg !23302
  store i32 %call, i32* %err, align 4, !dbg !23303
  %18 = load i32, i32* %err, align 4, !dbg !23304
  %tobool10 = icmp ne i32 %18, 0, !dbg !23304
  br i1 %tobool10, label %if.then, label %if.end, !dbg !23306

if.then:                                          ; preds = %land.end
  %19 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23307
  %bus_info = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %19, i32 0, i32 2, !dbg !23307
  %20 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info, align 8, !dbg !23307
  %dev11 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %20, i32 0, i32 2, !dbg !23307
  %21 = load %struct.device*, %struct.device** %dev11, align 8, !dbg !23307
  %22 = load i8, i8* %local_port.addr, align 1, !dbg !23307
  %conv12 = zext i8 %22 to i32, !dbg !23307
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %21, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.291, i64 0, i64 0), i32 %conv12) #13, !dbg !23307
  %23 = load i32, i32* %err, align 4, !dbg !23309
  store i32 %23, i32* %retval, align 4, !dbg !23310
  br label %return, !dbg !23310

if.end:                                           ; preds = %land.end
  %call13 = call %struct.net_device* @alloc_etherdev_mqs(i32 1104, i32 1, i32 1) #9, !dbg !23311
  store %struct.net_device* %call13, %struct.net_device** %dev, align 8, !dbg !23312
  %24 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23313
  %tobool14 = icmp ne %struct.net_device* %24, null, !dbg !23313
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !23315

if.then15:                                        ; preds = %if.end
  store i32 -12, i32* %err, align 4, !dbg !23316
  br label %err_alloc_etherdev, !dbg !23318

if.end16:                                         ; preds = %if.end
  %25 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23319
  %bus_info17 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %25, i32 0, i32 2, !dbg !23319
  %26 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info17, align 8, !dbg !23319
  %dev18 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %26, i32 0, i32 2, !dbg !23319
  %27 = load %struct.device*, %struct.device** %dev18, align 8, !dbg !23319
  %28 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23319
  %dev19 = getelementptr inbounds %struct.net_device, %struct.net_device* %28, i32 0, i32 106, !dbg !23319
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev19, i32 0, i32 1, !dbg !23319
  store %struct.device* %27, %struct.device** %parent, align 8, !dbg !23319
  %29 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23320
  %30 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23321
  %call20 = call %struct.net* @mlxsw_sp_net(%struct.mlxsw_sp* %30) #9, !dbg !23322
  call void @dev_net_set(%struct.net_device* %29, %struct.net* %call20) #9, !dbg !23323
  %31 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23324
  %call21 = call i8* @netdev_priv(%struct.net_device* %31) #9, !dbg !23325
  %32 = bitcast i8* %call21 to %struct.mlxsw_sp_port*, !dbg !23325
  store %struct.mlxsw_sp_port* %32, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23326
  %33 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23327
  %34 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23328
  %dev22 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %34, i32 0, i32 0, !dbg !23329
  store %struct.net_device* %33, %struct.net_device** %dev22, align 8, !dbg !23330
  %35 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23331
  %36 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23332
  %mlxsw_sp23 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %36, i32 0, i32 2, !dbg !23333
  store %struct.mlxsw_sp* %35, %struct.mlxsw_sp** %mlxsw_sp23, align 8, !dbg !23334
  %37 = load i8, i8* %local_port.addr, align 1, !dbg !23335
  %38 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23336
  %local_port24 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %38, i32 0, i32 3, !dbg !23337
  store i8 %37, i8* %local_port24, align 8, !dbg !23338
  %39 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23339
  %pvid = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %39, i32 0, i32 5, !dbg !23340
  store i16 4095, i16* %pvid, align 2, !dbg !23341
  %40 = load i8, i8* %split, align 1, !dbg !23342
  %tobool25 = trunc i8 %40 to i1, !dbg !23342
  %conv26 = zext i1 %tobool25 to i8, !dbg !23342
  %41 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23343
  %split27 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %41, i32 0, i32 4, !dbg !23344
  %bf.load = load i8, i8* %split27, align 1, !dbg !23345
  %bf.value = and i8 %conv26, 1, !dbg !23345
  %bf.shl = shl i8 %bf.value, 1, !dbg !23345
  %bf.clear = and i8 %bf.load, -3, !dbg !23345
  %bf.set = or i8 %bf.clear, %bf.shl, !dbg !23345
  store i8 %bf.set, i8* %split27, align 1, !dbg !23345
  %42 = load i8, i8* %split_base_local_port.addr, align 1, !dbg !23346
  %43 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23347
  %split_base_local_port28 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %43, i32 0, i32 19, !dbg !23348
  store i8 %42, i8* %split_base_local_port28, align 8, !dbg !23349
  %44 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23350
  %mapping = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %44, i32 0, i32 9, !dbg !23351
  %45 = load %struct.mlxsw_sp_port_mapping*, %struct.mlxsw_sp_port_mapping** %port_mapping.addr, align 8, !dbg !23352
  %46 = bitcast %struct.mlxsw_sp_port_mapping* %mapping to i8*, !dbg !23353
  %47 = bitcast %struct.mlxsw_sp_port_mapping* %45 to i8*, !dbg !23353
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 1 %47, i64 3, i1 false), !dbg !23353
  %48 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23354
  %link = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %48, i32 0, i32 7, !dbg !23355
  %49 = bitcast %struct.anon.156* %link to i8*, !dbg !23356
  %bf.load29 = load i8, i8* %49, align 2, !dbg !23357
  %bf.clear30 = and i8 %bf.load29, -5, !dbg !23357
  %bf.set31 = or i8 %bf.clear30, 4, !dbg !23357
  store i8 %bf.set31, i8* %49, align 2, !dbg !23357
  %50 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23358
  %vlans_list = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %50, i32 0, i32 12, !dbg !23359
  call void @INIT_LIST_HEAD(%struct.list_head* %vlans_list) #9, !dbg !23360
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_pcpu_stats** %pcpu_stats, metadata !23361, metadata !DIExpression()), !dbg !23363
  %call32 = call i8* @__alloc_percpu_gfp(i64 40, i64 8, i32 3264) #9, !dbg !23363
  %51 = bitcast i8* %call32 to %struct.mlxsw_sp_port_pcpu_stats*, !dbg !23363
  store %struct.mlxsw_sp_port_pcpu_stats* %51, %struct.mlxsw_sp_port_pcpu_stats** %pcpu_stats, align 8, !dbg !23363
  %52 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %pcpu_stats, align 8, !dbg !23364
  %tobool33 = icmp ne %struct.mlxsw_sp_port_pcpu_stats* %52, null, !dbg !23364
  br i1 %tobool33, label %if.then34, label %if.end38, !dbg !23363

if.then34:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i32* %__cpu, metadata !23366, metadata !DIExpression()), !dbg !23368
  store i32 0, i32* %__cpu, align 4, !dbg !23369
  br label %for.cond, !dbg !23369

for.cond:                                         ; preds = %for.inc, %if.then34
  %53 = load i32, i32* %__cpu, align 4, !dbg !23371
  %cmp35 = icmp slt i32 %53, 1, !dbg !23371
  br i1 %cmp35, label %for.body, label %for.end, !dbg !23369

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_pcpu_stats** %stat, metadata !23373, metadata !DIExpression()), !dbg !23375
  %54 = load i32, i32* %__cpu, align 4, !dbg !23376
  br label %do.body, !dbg !23378

do.body:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !23380, metadata !DIExpression()), !dbg !23382
  store i8* null, i8** %__vpp_verify, align 8, !dbg !23382
  %55 = load i8*, i8** %__vpp_verify, align 8, !dbg !23382
  br label %do.end, !dbg !23382

do.end:                                           ; preds = %do.body
  %56 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %pcpu_stats, align 8, !dbg !23378
  store %struct.mlxsw_sp_port_pcpu_stats* %56, %struct.mlxsw_sp_port_pcpu_stats** %tmp37, align 8, !dbg !23382
  %57 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %tmp37, align 8, !dbg !23378
  store %struct.mlxsw_sp_port_pcpu_stats* %57, %struct.mlxsw_sp_port_pcpu_stats** %tmp, align 8, !dbg !23376
  %58 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %tmp, align 8, !dbg !23376
  store %struct.mlxsw_sp_port_pcpu_stats* %58, %struct.mlxsw_sp_port_pcpu_stats** %stat, align 8, !dbg !23375
  %59 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %stat, align 8, !dbg !23375
  %syncp = getelementptr inbounds %struct.mlxsw_sp_port_pcpu_stats, %struct.mlxsw_sp_port_pcpu_stats* %59, i32 0, i32 4, !dbg !23375
  call void @u64_stats_init(%struct.u64_stats_sync* %syncp) #9, !dbg !23375
  br label %for.inc, !dbg !23375

for.inc:                                          ; preds = %do.end
  %60 = load i32, i32* %__cpu, align 4, !dbg !23371
  %inc = add i32 %60, 1, !dbg !23371
  store i32 %inc, i32* %__cpu, align 4, !dbg !23371
  br label %for.cond, !dbg !23371, !llvm.loop !23383

for.end:                                          ; preds = %for.cond
  br label %if.end38, !dbg !23368

if.end38:                                         ; preds = %for.end, %if.end16
  %61 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %pcpu_stats, align 8, !dbg !23363
  store %struct.mlxsw_sp_port_pcpu_stats* %61, %struct.mlxsw_sp_port_pcpu_stats** %tmp39, align 8, !dbg !23364
  %62 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %tmp39, align 8, !dbg !23363
  %63 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23384
  %pcpu_stats40 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %63, i32 0, i32 1, !dbg !23385
  store %struct.mlxsw_sp_port_pcpu_stats* %62, %struct.mlxsw_sp_port_pcpu_stats** %pcpu_stats40, align 8, !dbg !23386
  %64 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23387
  %pcpu_stats41 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %64, i32 0, i32 1, !dbg !23389
  %65 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %pcpu_stats41, align 8, !dbg !23389
  %tobool42 = icmp ne %struct.mlxsw_sp_port_pcpu_stats* %65, null, !dbg !23387
  br i1 %tobool42, label %if.end44, label %if.then43, !dbg !23390

if.then43:                                        ; preds = %if.end38
  store i32 -12, i32* %err, align 4, !dbg !23391
  br label %err_alloc_stats, !dbg !23393

if.end44:                                         ; preds = %if.end38
  br label %do.body45, !dbg !23394

do.body45:                                        ; preds = %if.end44
  br label %do.body46, !dbg !23395

do.body46:                                        ; preds = %do.body45
  %66 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23397
  %periodic_hw_stats = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %66, i32 0, i32 10, !dbg !23397
  %update_dw = getelementptr inbounds %struct.anon.158, %struct.anon.158* %periodic_hw_stats, i32 0, i32 2, !dbg !23397
  %work = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %update_dw, i32 0, i32 0, !dbg !23397
  call void @__init_work(%struct.work_struct* %work, i32 0) #9, !dbg !23397
  %67 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23397
  %periodic_hw_stats47 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %67, i32 0, i32 10, !dbg !23397
  %update_dw48 = getelementptr inbounds %struct.anon.158, %struct.anon.158* %periodic_hw_stats47, i32 0, i32 2, !dbg !23397
  %work49 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %update_dw48, i32 0, i32 0, !dbg !23397
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work49, i32 0, i32 0, !dbg !23397
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !23397
  store i64 68719476704, i64* %counter, align 8, !dbg !23397
  %68 = bitcast %struct.atomic64_t* %data to i8*, !dbg !23397
  %69 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !23397
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 8, i1 false), !dbg !23397
  %70 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23397
  %periodic_hw_stats50 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %70, i32 0, i32 10, !dbg !23397
  %update_dw51 = getelementptr inbounds %struct.anon.158, %struct.anon.158* %periodic_hw_stats50, i32 0, i32 2, !dbg !23397
  %work52 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %update_dw51, i32 0, i32 0, !dbg !23397
  %entry53 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work52, i32 0, i32 1, !dbg !23397
  call void @INIT_LIST_HEAD(%struct.list_head* %entry53) #9, !dbg !23397
  %71 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23397
  %periodic_hw_stats54 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %71, i32 0, i32 10, !dbg !23397
  %update_dw55 = getelementptr inbounds %struct.anon.158, %struct.anon.158* %periodic_hw_stats54, i32 0, i32 2, !dbg !23397
  %work56 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %update_dw55, i32 0, i32 0, !dbg !23397
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work56, i32 0, i32 2, !dbg !23397
  store void (%struct.work_struct*)* @update_stats_cache, void (%struct.work_struct*)** %func, align 8, !dbg !23397
  br label %do.end57, !dbg !23397

do.end57:                                         ; preds = %do.body46
  %72 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23395
  %periodic_hw_stats58 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %72, i32 0, i32 10, !dbg !23395
  %update_dw59 = getelementptr inbounds %struct.anon.158, %struct.anon.158* %periodic_hw_stats58, i32 0, i32 2, !dbg !23395
  %timer = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %update_dw59, i32 0, i32 1, !dbg !23395
  call void @init_timer_key(%struct.timer_list* %timer, void (%struct.timer_list*)* @delayed_work_timer_fn, i32 2097152, i8* null, %struct.lock_class_key* null) #9, !dbg !23395
  br label %do.end60, !dbg !23395

do.end60:                                         ; preds = %do.end57
  %73 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23399
  %netdev_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %73, i32 0, i32 32, !dbg !23400
  store %struct.net_device_ops* @mlxsw_sp_port_netdev_ops, %struct.net_device_ops** %netdev_ops, align 8, !dbg !23401
  %74 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23402
  %ethtool_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %74, i32 0, i32 33, !dbg !23403
  store %struct.ethtool_ops* @mlxsw_sp_port_ethtool_ops, %struct.ethtool_ops** %ethtool_ops, align 8, !dbg !23404
  %75 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23405
  %call61 = call i32 @mlxsw_sp_port_module_map(%struct.mlxsw_sp_port* %75) #9, !dbg !23406
  store i32 %call61, i32* %err, align 4, !dbg !23407
  %76 = load i32, i32* %err, align 4, !dbg !23408
  %tobool62 = icmp ne i32 %76, 0, !dbg !23408
  br i1 %tobool62, label %if.then63, label %if.end68, !dbg !23410

if.then63:                                        ; preds = %do.end60
  %77 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23411
  %bus_info64 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %77, i32 0, i32 2, !dbg !23411
  %78 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info64, align 8, !dbg !23411
  %dev65 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %78, i32 0, i32 2, !dbg !23411
  %79 = load %struct.device*, %struct.device** %dev65, align 8, !dbg !23411
  %80 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23411
  %local_port66 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %80, i32 0, i32 3, !dbg !23411
  %81 = load i8, i8* %local_port66, align 8, !dbg !23411
  %conv67 = zext i8 %81 to i32, !dbg !23411
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %79, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.292, i64 0, i64 0), i32 %conv67) #13, !dbg !23411
  br label %err_port_module_map, !dbg !23413

if.end68:                                         ; preds = %do.end60
  %82 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23414
  %call69 = call i32 @mlxsw_sp_port_swid_set(%struct.mlxsw_sp_port* %82, i8 zeroext 0) #9, !dbg !23415
  store i32 %call69, i32* %err, align 4, !dbg !23416
  %83 = load i32, i32* %err, align 4, !dbg !23417
  %tobool70 = icmp ne i32 %83, 0, !dbg !23417
  br i1 %tobool70, label %if.then71, label %if.end76, !dbg !23419

if.then71:                                        ; preds = %if.end68
  %84 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23420
  %bus_info72 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %84, i32 0, i32 2, !dbg !23420
  %85 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info72, align 8, !dbg !23420
  %dev73 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %85, i32 0, i32 2, !dbg !23420
  %86 = load %struct.device*, %struct.device** %dev73, align 8, !dbg !23420
  %87 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23420
  %local_port74 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %87, i32 0, i32 3, !dbg !23420
  %88 = load i8, i8* %local_port74, align 8, !dbg !23420
  %conv75 = zext i8 %88 to i32, !dbg !23420
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %86, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i64 0, i64 0), i32 %conv75) #13, !dbg !23420
  br label %err_port_swid_set, !dbg !23422

if.end76:                                         ; preds = %if.end68
  %89 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23423
  %call77 = call i32 @mlxsw_sp_port_dev_addr_init(%struct.mlxsw_sp_port* %89) #9, !dbg !23424
  store i32 %call77, i32* %err, align 4, !dbg !23425
  %90 = load i32, i32* %err, align 4, !dbg !23426
  %tobool78 = icmp ne i32 %90, 0, !dbg !23426
  br i1 %tobool78, label %if.then79, label %if.end84, !dbg !23428

if.then79:                                        ; preds = %if.end76
  %91 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23429
  %bus_info80 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %91, i32 0, i32 2, !dbg !23429
  %92 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info80, align 8, !dbg !23429
  %dev81 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %92, i32 0, i32 2, !dbg !23429
  %93 = load %struct.device*, %struct.device** %dev81, align 8, !dbg !23429
  %94 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23429
  %local_port82 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %94, i32 0, i32 3, !dbg !23429
  %95 = load i8, i8* %local_port82, align 8, !dbg !23429
  %conv83 = zext i8 %95 to i32, !dbg !23429
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %93, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.294, i64 0, i64 0), i32 %conv83) #13, !dbg !23429
  br label %err_dev_addr_init, !dbg !23431

if.end84:                                         ; preds = %if.end76
  %96 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23432
  call void @netif_carrier_off(%struct.net_device* %96) #9, !dbg !23433
  %97 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23434
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %97, i32 0, i32 15, !dbg !23435
  %98 = load i64, i64* %features, align 8, !dbg !23436
  %or = or i64 %98, 562949953434113, !dbg !23436
  store i64 %or, i64* %features, align 8, !dbg !23436
  %99 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23437
  %hw_features = getelementptr inbounds %struct.net_device, %struct.net_device* %99, i32 0, i32 16, !dbg !23438
  %100 = load i64, i64* %hw_features, align 8, !dbg !23439
  %or85 = or i64 %100, 567347999932416, !dbg !23439
  store i64 %or85, i64* %hw_features, align 8, !dbg !23439
  %101 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23440
  %min_mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %101, i32 0, i32 45, !dbg !23441
  store i32 0, i32* %min_mtu, align 4, !dbg !23442
  %102 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23443
  %max_mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %102, i32 0, i32 46, !dbg !23444
  store i32 65535, i32* %max_mtu, align 8, !dbg !23445
  %103 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23446
  %needed_headroom = getelementptr inbounds %struct.net_device, %struct.net_device* %103, i32 0, i32 51, !dbg !23447
  store i16 16, i16* %needed_headroom, align 2, !dbg !23448
  %104 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23449
  %call86 = call i32 @mlxsw_sp_port_system_port_mapping_set(%struct.mlxsw_sp_port* %104) #9, !dbg !23450
  store i32 %call86, i32* %err, align 4, !dbg !23451
  %105 = load i32, i32* %err, align 4, !dbg !23452
  %tobool87 = icmp ne i32 %105, 0, !dbg !23452
  br i1 %tobool87, label %if.then88, label %if.end93, !dbg !23454

if.then88:                                        ; preds = %if.end84
  %106 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23455
  %bus_info89 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %106, i32 0, i32 2, !dbg !23455
  %107 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info89, align 8, !dbg !23455
  %dev90 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %107, i32 0, i32 2, !dbg !23455
  %108 = load %struct.device*, %struct.device** %dev90, align 8, !dbg !23455
  %109 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23455
  %local_port91 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %109, i32 0, i32 3, !dbg !23455
  %110 = load i8, i8* %local_port91, align 8, !dbg !23455
  %conv92 = zext i8 %110 to i32, !dbg !23455
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %108, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.295, i64 0, i64 0), i32 %conv92) #13, !dbg !23455
  br label %err_port_system_port_mapping_set, !dbg !23457

if.end93:                                         ; preds = %if.end84
  %111 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23458
  %call94 = call i32 @mlxsw_sp_port_speed_by_width_set(%struct.mlxsw_sp_port* %111) #9, !dbg !23459
  store i32 %call94, i32* %err, align 4, !dbg !23460
  %112 = load i32, i32* %err, align 4, !dbg !23461
  %tobool95 = icmp ne i32 %112, 0, !dbg !23461
  br i1 %tobool95, label %if.then96, label %if.end101, !dbg !23463

if.then96:                                        ; preds = %if.end93
  %113 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23464
  %bus_info97 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %113, i32 0, i32 2, !dbg !23464
  %114 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info97, align 8, !dbg !23464
  %dev98 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %114, i32 0, i32 2, !dbg !23464
  %115 = load %struct.device*, %struct.device** %dev98, align 8, !dbg !23464
  %116 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23464
  %local_port99 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %116, i32 0, i32 3, !dbg !23464
  %117 = load i8, i8* %local_port99, align 8, !dbg !23464
  %conv100 = zext i8 %117 to i32, !dbg !23464
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %115, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.296, i64 0, i64 0), i32 %conv100) #13, !dbg !23464
  br label %err_port_speed_by_width_set, !dbg !23466

if.end101:                                        ; preds = %if.end93
  %118 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23467
  %port_type_speed_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %118, i32 0, i32 33, !dbg !23468
  %119 = load %struct.mlxsw_sp_port_type_speed_ops*, %struct.mlxsw_sp_port_type_speed_ops** %port_type_speed_ops, align 8, !dbg !23468
  %ptys_max_speed = getelementptr inbounds %struct.mlxsw_sp_port_type_speed_ops, %struct.mlxsw_sp_port_type_speed_ops* %119, i32 0, i32 4, !dbg !23469
  %120 = load i32 (%struct.mlxsw_sp_port*, i32*)*, i32 (%struct.mlxsw_sp_port*, i32*)** %ptys_max_speed, align 8, !dbg !23469
  %121 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23470
  %122 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23471
  %max_speed = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %122, i32 0, i32 21, !dbg !23472
  %call102 = call i32 %120(%struct.mlxsw_sp_port* %121, i32* %max_speed) #9, !dbg !23467
  store i32 %call102, i32* %err, align 4, !dbg !23473
  %123 = load i32, i32* %err, align 4, !dbg !23474
  %tobool103 = icmp ne i32 %123, 0, !dbg !23474
  br i1 %tobool103, label %if.then104, label %if.end109, !dbg !23476

if.then104:                                       ; preds = %if.end101
  %124 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23477
  %bus_info105 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %124, i32 0, i32 2, !dbg !23477
  %125 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info105, align 8, !dbg !23477
  %dev106 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %125, i32 0, i32 2, !dbg !23477
  %126 = load %struct.device*, %struct.device** %dev106, align 8, !dbg !23477
  %127 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23477
  %local_port107 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %127, i32 0, i32 3, !dbg !23477
  %128 = load i8, i8* %local_port107, align 8, !dbg !23477
  %conv108 = zext i8 %128 to i32, !dbg !23477
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %126, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.297, i64 0, i64 0), i32 %conv108) #13, !dbg !23477
  br label %err_max_speed_get, !dbg !23479

if.end109:                                        ; preds = %if.end101
  %129 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23480
  %130 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23481
  %max_mtu110 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %130, i32 0, i32 20, !dbg !23482
  %call111 = call i32 @mlxsw_sp_port_max_mtu_get(%struct.mlxsw_sp_port* %129, i32* %max_mtu110) #9, !dbg !23483
  store i32 %call111, i32* %err, align 4, !dbg !23484
  %131 = load i32, i32* %err, align 4, !dbg !23485
  %tobool112 = icmp ne i32 %131, 0, !dbg !23485
  br i1 %tobool112, label %if.then113, label %if.end118, !dbg !23487

if.then113:                                       ; preds = %if.end109
  %132 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23488
  %bus_info114 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %132, i32 0, i32 2, !dbg !23488
  %133 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info114, align 8, !dbg !23488
  %dev115 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %133, i32 0, i32 2, !dbg !23488
  %134 = load %struct.device*, %struct.device** %dev115, align 8, !dbg !23488
  %135 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23488
  %local_port116 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %135, i32 0, i32 3, !dbg !23488
  %136 = load i8, i8* %local_port116, align 8, !dbg !23488
  %conv117 = zext i8 %136 to i32, !dbg !23488
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %134, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.298, i64 0, i64 0), i32 %conv117) #13, !dbg !23488
  br label %err_port_max_mtu_get, !dbg !23490

if.end118:                                        ; preds = %if.end109
  %137 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23491
  %call119 = call i32 @mlxsw_sp_port_mtu_set(%struct.mlxsw_sp_port* %137, i16 zeroext 1500) #9, !dbg !23492
  store i32 %call119, i32* %err, align 4, !dbg !23493
  %138 = load i32, i32* %err, align 4, !dbg !23494
  %tobool120 = icmp ne i32 %138, 0, !dbg !23494
  br i1 %tobool120, label %if.then121, label %if.end126, !dbg !23496

if.then121:                                       ; preds = %if.end118
  %139 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23497
  %bus_info122 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %139, i32 0, i32 2, !dbg !23497
  %140 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info122, align 8, !dbg !23497
  %dev123 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %140, i32 0, i32 2, !dbg !23497
  %141 = load %struct.device*, %struct.device** %dev123, align 8, !dbg !23497
  %142 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23497
  %local_port124 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %142, i32 0, i32 3, !dbg !23497
  %143 = load i8, i8* %local_port124, align 8, !dbg !23497
  %conv125 = zext i8 %143 to i32, !dbg !23497
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %141, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.299, i64 0, i64 0), i32 %conv125) #13, !dbg !23497
  br label %err_port_mtu_set, !dbg !23499

if.end126:                                        ; preds = %if.end118
  %144 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23500
  %call127 = call i32 @mlxsw_sp_port_admin_status_set(%struct.mlxsw_sp_port* %144, i1 zeroext false) #9, !dbg !23501
  store i32 %call127, i32* %err, align 4, !dbg !23502
  %145 = load i32, i32* %err, align 4, !dbg !23503
  %tobool128 = icmp ne i32 %145, 0, !dbg !23503
  br i1 %tobool128, label %if.then129, label %if.end130, !dbg !23505

if.then129:                                       ; preds = %if.end126
  br label %err_port_admin_status_set, !dbg !23506

if.end130:                                        ; preds = %if.end126
  %146 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23507
  %call131 = call i32 @mlxsw_sp_port_buffers_init(%struct.mlxsw_sp_port* %146) #9, !dbg !23508
  store i32 %call131, i32* %err, align 4, !dbg !23509
  %147 = load i32, i32* %err, align 4, !dbg !23510
  %tobool132 = icmp ne i32 %147, 0, !dbg !23510
  br i1 %tobool132, label %if.then133, label %if.end138, !dbg !23512

if.then133:                                       ; preds = %if.end130
  %148 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23513
  %bus_info134 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %148, i32 0, i32 2, !dbg !23513
  %149 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info134, align 8, !dbg !23513
  %dev135 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %149, i32 0, i32 2, !dbg !23513
  %150 = load %struct.device*, %struct.device** %dev135, align 8, !dbg !23513
  %151 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23513
  %local_port136 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %151, i32 0, i32 3, !dbg !23513
  %152 = load i8, i8* %local_port136, align 8, !dbg !23513
  %conv137 = zext i8 %152 to i32, !dbg !23513
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %150, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.300, i64 0, i64 0), i32 %conv137) #13, !dbg !23513
  br label %err_port_buffers_init, !dbg !23515

if.end138:                                        ; preds = %if.end130
  %153 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23516
  %call139 = call i32 @mlxsw_sp_port_ets_init(%struct.mlxsw_sp_port* %153) #9, !dbg !23517
  store i32 %call139, i32* %err, align 4, !dbg !23518
  %154 = load i32, i32* %err, align 4, !dbg !23519
  %tobool140 = icmp ne i32 %154, 0, !dbg !23519
  br i1 %tobool140, label %if.then141, label %if.end146, !dbg !23521

if.then141:                                       ; preds = %if.end138
  %155 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23522
  %bus_info142 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %155, i32 0, i32 2, !dbg !23522
  %156 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info142, align 8, !dbg !23522
  %dev143 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %156, i32 0, i32 2, !dbg !23522
  %157 = load %struct.device*, %struct.device** %dev143, align 8, !dbg !23522
  %158 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23522
  %local_port144 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %158, i32 0, i32 3, !dbg !23522
  %159 = load i8, i8* %local_port144, align 8, !dbg !23522
  %conv145 = zext i8 %159 to i32, !dbg !23522
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %157, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.301, i64 0, i64 0), i32 %conv145) #13, !dbg !23522
  br label %err_port_ets_init, !dbg !23524

if.end146:                                        ; preds = %if.end138
  %160 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23525
  %call147 = call i32 @mlxsw_sp_port_tc_mc_mode_set(%struct.mlxsw_sp_port* %160, i1 zeroext true) #9, !dbg !23526
  store i32 %call147, i32* %err, align 4, !dbg !23527
  %161 = load i32, i32* %err, align 4, !dbg !23528
  %tobool148 = icmp ne i32 %161, 0, !dbg !23528
  br i1 %tobool148, label %if.then149, label %if.end154, !dbg !23530

if.then149:                                       ; preds = %if.end146
  %162 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23531
  %bus_info150 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %162, i32 0, i32 2, !dbg !23531
  %163 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info150, align 8, !dbg !23531
  %dev151 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %163, i32 0, i32 2, !dbg !23531
  %164 = load %struct.device*, %struct.device** %dev151, align 8, !dbg !23531
  %165 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23531
  %local_port152 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %165, i32 0, i32 3, !dbg !23531
  %166 = load i8, i8* %local_port152, align 8, !dbg !23531
  %conv153 = zext i8 %166 to i32, !dbg !23531
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %164, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.302, i64 0, i64 0), i32 %conv153) #13, !dbg !23531
  br label %err_port_tc_mc_mode, !dbg !23533

if.end154:                                        ; preds = %if.end146
  %167 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23534
  %call155 = call i32 @mlxsw_sp_port_dcb_init(%struct.mlxsw_sp_port* %167) #9, !dbg !23535
  store i32 %call155, i32* %err, align 4, !dbg !23536
  %168 = load i32, i32* %err, align 4, !dbg !23537
  %tobool156 = icmp ne i32 %168, 0, !dbg !23537
  br i1 %tobool156, label %if.then157, label %if.end162, !dbg !23539

if.then157:                                       ; preds = %if.end154
  %169 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23540
  %bus_info158 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %169, i32 0, i32 2, !dbg !23540
  %170 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info158, align 8, !dbg !23540
  %dev159 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %170, i32 0, i32 2, !dbg !23540
  %171 = load %struct.device*, %struct.device** %dev159, align 8, !dbg !23540
  %172 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23540
  %local_port160 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %172, i32 0, i32 3, !dbg !23540
  %173 = load i8, i8* %local_port160, align 8, !dbg !23540
  %conv161 = zext i8 %173 to i32, !dbg !23540
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %171, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.303, i64 0, i64 0), i32 %conv161) #13, !dbg !23540
  br label %err_port_dcb_init, !dbg !23542

if.end162:                                        ; preds = %if.end154
  %174 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23543
  %call163 = call i32 @mlxsw_sp_port_fids_init(%struct.mlxsw_sp_port* %174) #9, !dbg !23544
  store i32 %call163, i32* %err, align 4, !dbg !23545
  %175 = load i32, i32* %err, align 4, !dbg !23546
  %tobool164 = icmp ne i32 %175, 0, !dbg !23546
  br i1 %tobool164, label %if.then165, label %if.end170, !dbg !23548

if.then165:                                       ; preds = %if.end162
  %176 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23549
  %bus_info166 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %176, i32 0, i32 2, !dbg !23549
  %177 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info166, align 8, !dbg !23549
  %dev167 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %177, i32 0, i32 2, !dbg !23549
  %178 = load %struct.device*, %struct.device** %dev167, align 8, !dbg !23549
  %179 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23549
  %local_port168 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %179, i32 0, i32 3, !dbg !23549
  %180 = load i8, i8* %local_port168, align 8, !dbg !23549
  %conv169 = zext i8 %180 to i32, !dbg !23549
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %178, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.304, i64 0, i64 0), i32 %conv169) #13, !dbg !23549
  br label %err_port_fids_init, !dbg !23551

if.end170:                                        ; preds = %if.end162
  %181 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23552
  %call171 = call i32 @mlxsw_sp_tc_qdisc_init(%struct.mlxsw_sp_port* %181) #9, !dbg !23553
  store i32 %call171, i32* %err, align 4, !dbg !23554
  %182 = load i32, i32* %err, align 4, !dbg !23555
  %tobool172 = icmp ne i32 %182, 0, !dbg !23555
  br i1 %tobool172, label %if.then173, label %if.end178, !dbg !23557

if.then173:                                       ; preds = %if.end170
  %183 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23558
  %bus_info174 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %183, i32 0, i32 2, !dbg !23558
  %184 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info174, align 8, !dbg !23558
  %dev175 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %184, i32 0, i32 2, !dbg !23558
  %185 = load %struct.device*, %struct.device** %dev175, align 8, !dbg !23558
  %186 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23558
  %local_port176 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %186, i32 0, i32 3, !dbg !23558
  %187 = load i8, i8* %local_port176, align 8, !dbg !23558
  %conv177 = zext i8 %187 to i32, !dbg !23558
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %185, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.305, i64 0, i64 0), i32 %conv177) #13, !dbg !23558
  br label %err_port_qdiscs_init, !dbg !23560

if.end178:                                        ; preds = %if.end170
  %188 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23561
  %call179 = call i32 @mlxsw_sp_port_vlan_set(%struct.mlxsw_sp_port* %188, i16 zeroext 0, i16 zeroext 4095, i1 zeroext false, i1 zeroext false) #9, !dbg !23562
  store i32 %call179, i32* %err, align 4, !dbg !23563
  %189 = load i32, i32* %err, align 4, !dbg !23564
  %tobool180 = icmp ne i32 %189, 0, !dbg !23564
  br i1 %tobool180, label %if.then181, label %if.end186, !dbg !23566

if.then181:                                       ; preds = %if.end178
  %190 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23567
  %bus_info182 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %190, i32 0, i32 2, !dbg !23567
  %191 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info182, align 8, !dbg !23567
  %dev183 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %191, i32 0, i32 2, !dbg !23567
  %192 = load %struct.device*, %struct.device** %dev183, align 8, !dbg !23567
  %193 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23567
  %local_port184 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %193, i32 0, i32 3, !dbg !23567
  %194 = load i8, i8* %local_port184, align 8, !dbg !23567
  %conv185 = zext i8 %194 to i32, !dbg !23567
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %192, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.306, i64 0, i64 0), i32 %conv185) #13, !dbg !23567
  br label %err_port_vlan_clear, !dbg !23569

if.end186:                                        ; preds = %if.end178
  %195 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23570
  %call187 = call i32 @mlxsw_sp_port_nve_init(%struct.mlxsw_sp_port* %195) #9, !dbg !23571
  store i32 %call187, i32* %err, align 4, !dbg !23572
  %196 = load i32, i32* %err, align 4, !dbg !23573
  %tobool188 = icmp ne i32 %196, 0, !dbg !23573
  br i1 %tobool188, label %if.then189, label %if.end194, !dbg !23575

if.then189:                                       ; preds = %if.end186
  %197 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23576
  %bus_info190 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %197, i32 0, i32 2, !dbg !23576
  %198 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info190, align 8, !dbg !23576
  %dev191 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %198, i32 0, i32 2, !dbg !23576
  %199 = load %struct.device*, %struct.device** %dev191, align 8, !dbg !23576
  %200 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23576
  %local_port192 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %200, i32 0, i32 3, !dbg !23576
  %201 = load i8, i8* %local_port192, align 8, !dbg !23576
  %conv193 = zext i8 %201 to i32, !dbg !23576
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %199, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.307, i64 0, i64 0), i32 %conv193) #13, !dbg !23576
  br label %err_port_nve_init, !dbg !23578

if.end194:                                        ; preds = %if.end186
  %202 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23579
  %call195 = call i32 @mlxsw_sp_port_pvid_set(%struct.mlxsw_sp_port* %202, i16 zeroext 4095) #9, !dbg !23580
  store i32 %call195, i32* %err, align 4, !dbg !23581
  %203 = load i32, i32* %err, align 4, !dbg !23582
  %tobool196 = icmp ne i32 %203, 0, !dbg !23582
  br i1 %tobool196, label %if.then197, label %if.end202, !dbg !23584

if.then197:                                       ; preds = %if.end194
  %204 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23585
  %bus_info198 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %204, i32 0, i32 2, !dbg !23585
  %205 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info198, align 8, !dbg !23585
  %dev199 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %205, i32 0, i32 2, !dbg !23585
  %206 = load %struct.device*, %struct.device** %dev199, align 8, !dbg !23585
  %207 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23585
  %local_port200 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %207, i32 0, i32 3, !dbg !23585
  %208 = load i8, i8* %local_port200, align 8, !dbg !23585
  %conv201 = zext i8 %208 to i32, !dbg !23585
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %206, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.308, i64 0, i64 0), i32 %conv201) #13, !dbg !23585
  br label %err_port_pvid_set, !dbg !23587

if.end202:                                        ; preds = %if.end194
  %209 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23588
  %call203 = call %struct.mlxsw_sp_port_vlan* @mlxsw_sp_port_vlan_create(%struct.mlxsw_sp_port* %209, i16 zeroext 4095) #9, !dbg !23589
  store %struct.mlxsw_sp_port_vlan* %call203, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !23590
  %210 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !23591
  %211 = bitcast %struct.mlxsw_sp_port_vlan* %210 to i8*, !dbg !23591
  %call204 = call zeroext i1 @IS_ERR(i8* %211) #9, !dbg !23593
  br i1 %call204, label %if.then205, label %if.end212, !dbg !23594

if.then205:                                       ; preds = %if.end202
  %212 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23595
  %bus_info206 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %212, i32 0, i32 2, !dbg !23595
  %213 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info206, align 8, !dbg !23595
  %dev207 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %213, i32 0, i32 2, !dbg !23595
  %214 = load %struct.device*, %struct.device** %dev207, align 8, !dbg !23595
  %215 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23595
  %local_port208 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %215, i32 0, i32 3, !dbg !23595
  %216 = load i8, i8* %local_port208, align 8, !dbg !23595
  %conv209 = zext i8 %216 to i32, !dbg !23595
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %214, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.309, i64 0, i64 0), i32 %conv209) #13, !dbg !23595
  %217 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !23597
  %218 = bitcast %struct.mlxsw_sp_port_vlan* %217 to i8*, !dbg !23597
  %call210 = call i64 @PTR_ERR(i8* %218) #9, !dbg !23598
  %conv211 = trunc i64 %call210 to i32, !dbg !23598
  store i32 %conv211, i32* %err, align 4, !dbg !23599
  br label %err_port_vlan_create, !dbg !23600

if.end212:                                        ; preds = %if.end202
  %219 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !23601
  %220 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23602
  %default_vlan = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %220, i32 0, i32 13, !dbg !23603
  store %struct.mlxsw_sp_port_vlan* %219, %struct.mlxsw_sp_port_vlan** %default_vlan, align 8, !dbg !23604
  br label %do.body213, !dbg !23605

do.body213:                                       ; preds = %if.end212
  br label %do.body214, !dbg !23606

do.body214:                                       ; preds = %do.body213
  %221 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23608
  %ptp = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %221, i32 0, i32 18, !dbg !23608
  %shaper_dw = getelementptr inbounds %struct.anon.160, %struct.anon.160* %ptp, i32 0, i32 0, !dbg !23608
  %work215 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %shaper_dw, i32 0, i32 0, !dbg !23608
  call void @__init_work(%struct.work_struct* %work215, i32 0) #9, !dbg !23608
  %222 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23608
  %ptp216 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %222, i32 0, i32 18, !dbg !23608
  %shaper_dw217 = getelementptr inbounds %struct.anon.160, %struct.anon.160* %ptp216, i32 0, i32 0, !dbg !23608
  %work218 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %shaper_dw217, i32 0, i32 0, !dbg !23608
  %data219 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work218, i32 0, i32 0, !dbg !23608
  %counter221 = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral220, i32 0, i32 0, !dbg !23608
  store i64 68719476704, i64* %counter221, align 8, !dbg !23608
  %223 = bitcast %struct.atomic64_t* %data219 to i8*, !dbg !23608
  %224 = bitcast %struct.atomic64_t* %.compoundliteral220 to i8*, !dbg !23608
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %223, i8* align 8 %224, i64 8, i1 false), !dbg !23608
  %225 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23608
  %ptp222 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %225, i32 0, i32 18, !dbg !23608
  %shaper_dw223 = getelementptr inbounds %struct.anon.160, %struct.anon.160* %ptp222, i32 0, i32 0, !dbg !23608
  %work224 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %shaper_dw223, i32 0, i32 0, !dbg !23608
  %entry225 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work224, i32 0, i32 1, !dbg !23608
  call void @INIT_LIST_HEAD(%struct.list_head* %entry225) #9, !dbg !23608
  %226 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23608
  %ptp_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %226, i32 0, i32 34, !dbg !23608
  %227 = load %struct.mlxsw_sp_ptp_ops*, %struct.mlxsw_sp_ptp_ops** %ptp_ops, align 8, !dbg !23608
  %shaper_work = getelementptr inbounds %struct.mlxsw_sp_ptp_ops, %struct.mlxsw_sp_ptp_ops* %227, i32 0, i32 8, !dbg !23608
  %228 = load void (%struct.work_struct*)*, void (%struct.work_struct*)** %shaper_work, align 8, !dbg !23608
  %229 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23608
  %ptp226 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %229, i32 0, i32 18, !dbg !23608
  %shaper_dw227 = getelementptr inbounds %struct.anon.160, %struct.anon.160* %ptp226, i32 0, i32 0, !dbg !23608
  %work228 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %shaper_dw227, i32 0, i32 0, !dbg !23608
  %func229 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work228, i32 0, i32 2, !dbg !23608
  store void (%struct.work_struct*)* %228, void (%struct.work_struct*)** %func229, align 8, !dbg !23608
  br label %do.end230, !dbg !23608

do.end230:                                        ; preds = %do.body214
  %230 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23606
  %ptp231 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %230, i32 0, i32 18, !dbg !23606
  %shaper_dw232 = getelementptr inbounds %struct.anon.160, %struct.anon.160* %ptp231, i32 0, i32 0, !dbg !23606
  %timer233 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %shaper_dw232, i32 0, i32 1, !dbg !23606
  call void @init_timer_key(%struct.timer_list* %timer233, void (%struct.timer_list*)* @delayed_work_timer_fn, i32 2097152, i8* null, %struct.lock_class_key* null) #9, !dbg !23606
  br label %do.end234, !dbg !23606

do.end234:                                        ; preds = %do.end230
  %231 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23610
  %232 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23611
  %ports = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %232, i32 0, i32 0, !dbg !23612
  %233 = load %struct.mlxsw_sp_port**, %struct.mlxsw_sp_port*** %ports, align 8, !dbg !23612
  %234 = load i8, i8* %local_port.addr, align 1, !dbg !23613
  %idxprom = zext i8 %234 to i64, !dbg !23611
  %arrayidx = getelementptr %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %233, i64 %idxprom, !dbg !23611
  store %struct.mlxsw_sp_port* %231, %struct.mlxsw_sp_port** %arrayidx, align 8, !dbg !23614
  %235 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23615
  %call235 = call i32 @mlxsw_sp_port_overheat_init_val_set(%struct.mlxsw_sp_port* %235) #9, !dbg !23616
  store i32 %call235, i32* %err, align 4, !dbg !23617
  %236 = load i32, i32* %err, align 4, !dbg !23618
  %tobool236 = icmp ne i32 %236, 0, !dbg !23618
  br i1 %tobool236, label %if.then237, label %if.end242, !dbg !23620

if.then237:                                       ; preds = %do.end234
  %237 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23621
  %bus_info238 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %237, i32 0, i32 2, !dbg !23621
  %238 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info238, align 8, !dbg !23621
  %dev239 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %238, i32 0, i32 2, !dbg !23621
  %239 = load %struct.device*, %struct.device** %dev239, align 8, !dbg !23621
  %240 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23621
  %local_port240 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %240, i32 0, i32 3, !dbg !23621
  %241 = load i8, i8* %local_port240, align 8, !dbg !23621
  %conv241 = zext i8 %241 to i32, !dbg !23621
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %239, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.310, i64 0, i64 0), i32 %conv241) #13, !dbg !23621
  br label %err_port_overheat_init_val_set, !dbg !23623

if.end242:                                        ; preds = %do.end234
  %242 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23624
  %call243 = call i32 @register_netdev(%struct.net_device* %242) #9, !dbg !23625
  store i32 %call243, i32* %err, align 4, !dbg !23626
  %243 = load i32, i32* %err, align 4, !dbg !23627
  %tobool244 = icmp ne i32 %243, 0, !dbg !23627
  br i1 %tobool244, label %if.then245, label %if.end250, !dbg !23629

if.then245:                                       ; preds = %if.end242
  %244 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23630
  %bus_info246 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %244, i32 0, i32 2, !dbg !23630
  %245 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info246, align 8, !dbg !23630
  %dev247 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %245, i32 0, i32 2, !dbg !23630
  %246 = load %struct.device*, %struct.device** %dev247, align 8, !dbg !23630
  %247 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23630
  %local_port248 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %247, i32 0, i32 3, !dbg !23630
  %248 = load i8, i8* %local_port248, align 8, !dbg !23630
  %conv249 = zext i8 %248 to i32, !dbg !23630
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %246, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.311, i64 0, i64 0), i32 %conv249) #13, !dbg !23630
  br label %err_register_netdev, !dbg !23632

if.end250:                                        ; preds = %if.end242
  %249 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23633
  %core251 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %249, i32 0, i32 1, !dbg !23634
  %250 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core251, align 8, !dbg !23634
  %251 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23635
  %local_port252 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %251, i32 0, i32 3, !dbg !23636
  %252 = load i8, i8* %local_port252, align 8, !dbg !23636
  %253 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23637
  %254 = bitcast %struct.mlxsw_sp_port* %253 to i8*, !dbg !23637
  %255 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23638
  call void @mlxsw_core_port_eth_set(%struct.mlxsw_core* %250, i8 zeroext %252, i8* %254, %struct.net_device* %255) #9, !dbg !23639
  %256 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23640
  %periodic_hw_stats253 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %256, i32 0, i32 10, !dbg !23641
  %update_dw254 = getelementptr inbounds %struct.anon.158, %struct.anon.158* %periodic_hw_stats253, i32 0, i32 2, !dbg !23642
  %call255 = call i32 @mlxsw_core_schedule_dw(%struct.delayed_work* %update_dw254, i64 0) #9, !dbg !23643
  store i32 0, i32* %retval, align 4, !dbg !23644
  br label %return, !dbg !23644

err_register_netdev:                              ; preds = %if.then245
  call void @llvm.dbg.label(metadata !23645), !dbg !23646
  br label %err_port_overheat_init_val_set, !dbg !23644

err_port_overheat_init_val_set:                   ; preds = %err_register_netdev, %if.then237
  call void @llvm.dbg.label(metadata !23647), !dbg !23648
  %257 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23649
  %ports256 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %257, i32 0, i32 0, !dbg !23650
  %258 = load %struct.mlxsw_sp_port**, %struct.mlxsw_sp_port*** %ports256, align 8, !dbg !23650
  %259 = load i8, i8* %local_port.addr, align 1, !dbg !23651
  %idxprom257 = zext i8 %259 to i64, !dbg !23649
  %arrayidx258 = getelementptr %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %258, i64 %idxprom257, !dbg !23649
  store %struct.mlxsw_sp_port* null, %struct.mlxsw_sp_port** %arrayidx258, align 8, !dbg !23652
  %260 = load %struct.mlxsw_sp_port_vlan*, %struct.mlxsw_sp_port_vlan** %mlxsw_sp_port_vlan, align 8, !dbg !23653
  call void @mlxsw_sp_port_vlan_destroy(%struct.mlxsw_sp_port_vlan* %260) #9, !dbg !23654
  br label %err_port_vlan_create, !dbg !23654

err_port_vlan_create:                             ; preds = %err_port_overheat_init_val_set, %if.then205
  call void @llvm.dbg.label(metadata !23655), !dbg !23656
  br label %err_port_pvid_set, !dbg !23654

err_port_pvid_set:                                ; preds = %err_port_vlan_create, %if.then197
  call void @llvm.dbg.label(metadata !23657), !dbg !23658
  %261 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23659
  call void @mlxsw_sp_port_nve_fini(%struct.mlxsw_sp_port* %261) #9, !dbg !23660
  br label %err_port_nve_init, !dbg !23660

err_port_nve_init:                                ; preds = %err_port_pvid_set, %if.then189
  call void @llvm.dbg.label(metadata !23661), !dbg !23662
  br label %err_port_vlan_clear, !dbg !23660

err_port_vlan_clear:                              ; preds = %err_port_nve_init, %if.then181
  call void @llvm.dbg.label(metadata !23663), !dbg !23664
  %262 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23665
  call void @mlxsw_sp_tc_qdisc_fini(%struct.mlxsw_sp_port* %262) #9, !dbg !23666
  br label %err_port_qdiscs_init, !dbg !23666

err_port_qdiscs_init:                             ; preds = %err_port_vlan_clear, %if.then173
  call void @llvm.dbg.label(metadata !23667), !dbg !23668
  %263 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23669
  call void @mlxsw_sp_port_fids_fini(%struct.mlxsw_sp_port* %263) #9, !dbg !23670
  br label %err_port_fids_init, !dbg !23670

err_port_fids_init:                               ; preds = %err_port_qdiscs_init, %if.then165
  call void @llvm.dbg.label(metadata !23671), !dbg !23672
  %264 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23673
  call void @mlxsw_sp_port_dcb_fini(%struct.mlxsw_sp_port* %264) #9, !dbg !23674
  br label %err_port_dcb_init, !dbg !23674

err_port_dcb_init:                                ; preds = %err_port_fids_init, %if.then157
  call void @llvm.dbg.label(metadata !23675), !dbg !23676
  %265 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23677
  %call259 = call i32 @mlxsw_sp_port_tc_mc_mode_set(%struct.mlxsw_sp_port* %265, i1 zeroext false) #9, !dbg !23678
  br label %err_port_tc_mc_mode, !dbg !23678

err_port_tc_mc_mode:                              ; preds = %err_port_dcb_init, %if.then149
  call void @llvm.dbg.label(metadata !23679), !dbg !23680
  br label %err_port_ets_init, !dbg !23678

err_port_ets_init:                                ; preds = %err_port_tc_mc_mode, %if.then141
  call void @llvm.dbg.label(metadata !23681), !dbg !23682
  %266 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23683
  call void @mlxsw_sp_port_buffers_fini(%struct.mlxsw_sp_port* %266) #9, !dbg !23684
  br label %err_port_buffers_init, !dbg !23684

err_port_buffers_init:                            ; preds = %err_port_ets_init, %if.then133
  call void @llvm.dbg.label(metadata !23685), !dbg !23686
  br label %err_port_admin_status_set, !dbg !23684

err_port_admin_status_set:                        ; preds = %err_port_buffers_init, %if.then129
  call void @llvm.dbg.label(metadata !23687), !dbg !23688
  br label %err_port_mtu_set, !dbg !23684

err_port_mtu_set:                                 ; preds = %err_port_admin_status_set, %if.then121
  call void @llvm.dbg.label(metadata !23689), !dbg !23690
  br label %err_port_max_mtu_get, !dbg !23684

err_port_max_mtu_get:                             ; preds = %err_port_mtu_set, %if.then113
  call void @llvm.dbg.label(metadata !23691), !dbg !23692
  br label %err_max_speed_get, !dbg !23684

err_max_speed_get:                                ; preds = %err_port_max_mtu_get, %if.then104
  call void @llvm.dbg.label(metadata !23693), !dbg !23694
  br label %err_port_speed_by_width_set, !dbg !23684

err_port_speed_by_width_set:                      ; preds = %err_max_speed_get, %if.then96
  call void @llvm.dbg.label(metadata !23695), !dbg !23696
  br label %err_port_system_port_mapping_set, !dbg !23684

err_port_system_port_mapping_set:                 ; preds = %err_port_speed_by_width_set, %if.then88
  call void @llvm.dbg.label(metadata !23697), !dbg !23698
  br label %err_dev_addr_init, !dbg !23684

err_dev_addr_init:                                ; preds = %err_port_system_port_mapping_set, %if.then79
  call void @llvm.dbg.label(metadata !23699), !dbg !23700
  %267 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23701
  %call260 = call i32 @mlxsw_sp_port_swid_set(%struct.mlxsw_sp_port* %267, i8 zeroext -1) #9, !dbg !23702
  br label %err_port_swid_set, !dbg !23702

err_port_swid_set:                                ; preds = %err_dev_addr_init, %if.then71
  call void @llvm.dbg.label(metadata !23703), !dbg !23704
  %268 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23705
  %call261 = call i32 @mlxsw_sp_port_module_unmap(%struct.mlxsw_sp_port* %268) #9, !dbg !23706
  br label %err_port_module_map, !dbg !23706

err_port_module_map:                              ; preds = %err_port_swid_set, %if.then63
  call void @llvm.dbg.label(metadata !23707), !dbg !23708
  %269 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23709
  %pcpu_stats262 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %269, i32 0, i32 1, !dbg !23710
  %270 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %pcpu_stats262, align 8, !dbg !23710
  %271 = bitcast %struct.mlxsw_sp_port_pcpu_stats* %270 to i8*, !dbg !23709
  call void @free_percpu(i8* %271) #9, !dbg !23711
  br label %err_alloc_stats, !dbg !23711

err_alloc_stats:                                  ; preds = %err_port_module_map, %if.then43
  call void @llvm.dbg.label(metadata !23712), !dbg !23713
  %272 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23714
  call void @free_netdev(%struct.net_device* %272) #9, !dbg !23715
  br label %err_alloc_etherdev, !dbg !23715

err_alloc_etherdev:                               ; preds = %err_alloc_stats, %if.then15
  call void @llvm.dbg.label(metadata !23716), !dbg !23717
  %273 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23718
  %core263 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %273, i32 0, i32 1, !dbg !23719
  %274 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core263, align 8, !dbg !23719
  %275 = load i8, i8* %local_port.addr, align 1, !dbg !23720
  call void @mlxsw_core_port_fini(%struct.mlxsw_core* %274, i8 zeroext %275) #9, !dbg !23721
  %276 = load i32, i32* %err, align 4, !dbg !23722
  store i32 %276, i32* %retval, align 4, !dbg !23723
  br label %return, !dbg !23723

return:                                           ; preds = %err_alloc_etherdev, %if.end250, %if.then
  %277 = load i32, i32* %retval, align 4, !dbg !23724
  ret i32 %277, !dbg !23724
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mlxsw_sp_port_created(%struct.mlxsw_sp* %mlxsw_sp, i8 zeroext %local_port) #0 !dbg !23725 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %local_port.addr = alloca i8, align 1
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !23728, metadata !DIExpression()), !dbg !23729
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !23730, metadata !DIExpression()), !dbg !23731
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23732
  %ports = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %0, i32 0, i32 0, !dbg !23733
  %1 = load %struct.mlxsw_sp_port**, %struct.mlxsw_sp_port*** %ports, align 8, !dbg !23733
  %2 = load i8, i8* %local_port.addr, align 1, !dbg !23734
  %idxprom = zext i8 %2 to i64, !dbg !23732
  %arrayidx = getelementptr %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %1, i64 %idxprom, !dbg !23732
  %3 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %arrayidx, align 8, !dbg !23732
  %cmp = icmp ne %struct.mlxsw_sp_port* %3, null, !dbg !23735
  ret i1 %cmp, !dbg !23736
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_port_remove(%struct.mlxsw_sp* %mlxsw_sp, i8 zeroext %local_port) #0 !dbg !23737 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %local_port.addr = alloca i8, align 1
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !23740, metadata !DIExpression()), !dbg !23741
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !23742, metadata !DIExpression()), !dbg !23743
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !23744, metadata !DIExpression()), !dbg !23745
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23746
  %ports = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %0, i32 0, i32 0, !dbg !23747
  %1 = load %struct.mlxsw_sp_port**, %struct.mlxsw_sp_port*** %ports, align 8, !dbg !23747
  %2 = load i8, i8* %local_port.addr, align 1, !dbg !23748
  %idxprom = zext i8 %2 to i64, !dbg !23746
  %arrayidx = getelementptr %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %1, i64 %idxprom, !dbg !23746
  %3 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %arrayidx, align 8, !dbg !23746
  store %struct.mlxsw_sp_port* %3, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23745
  %4 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23749
  %periodic_hw_stats = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %4, i32 0, i32 10, !dbg !23750
  %update_dw = getelementptr inbounds %struct.anon.158, %struct.anon.158* %periodic_hw_stats, i32 0, i32 2, !dbg !23751
  %call = call zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work* %update_dw) #9, !dbg !23752
  %5 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23753
  %ptp = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %5, i32 0, i32 18, !dbg !23754
  %shaper_dw = getelementptr inbounds %struct.anon.160, %struct.anon.160* %ptp, i32 0, i32 0, !dbg !23755
  %call1 = call zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work* %shaper_dw) #9, !dbg !23756
  %6 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23757
  call void @mlxsw_sp_port_ptp_clear(%struct.mlxsw_sp_port* %6) #9, !dbg !23758
  %7 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23759
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %7, i32 0, i32 1, !dbg !23760
  %8 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !23760
  %9 = load i8, i8* %local_port.addr, align 1, !dbg !23761
  %10 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23762
  %11 = bitcast %struct.mlxsw_sp* %10 to i8*, !dbg !23762
  call void @mlxsw_core_port_clear(%struct.mlxsw_core* %8, i8 zeroext %9, i8* %11) #9, !dbg !23763
  %12 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23764
  %dev = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %12, i32 0, i32 0, !dbg !23765
  %13 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23765
  call void @unregister_netdev(%struct.net_device* %13) #9, !dbg !23766
  %14 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23767
  %ports2 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %14, i32 0, i32 0, !dbg !23768
  %15 = load %struct.mlxsw_sp_port**, %struct.mlxsw_sp_port*** %ports2, align 8, !dbg !23768
  %16 = load i8, i8* %local_port.addr, align 1, !dbg !23769
  %idxprom3 = zext i8 %16 to i64, !dbg !23767
  %arrayidx4 = getelementptr %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %15, i64 %idxprom3, !dbg !23767
  store %struct.mlxsw_sp_port* null, %struct.mlxsw_sp_port** %arrayidx4, align 8, !dbg !23770
  %17 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23771
  call void @mlxsw_sp_port_vlan_flush(%struct.mlxsw_sp_port* %17, i1 zeroext true) #9, !dbg !23772
  %18 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23773
  call void @mlxsw_sp_port_nve_fini(%struct.mlxsw_sp_port* %18) #9, !dbg !23774
  %19 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23775
  call void @mlxsw_sp_tc_qdisc_fini(%struct.mlxsw_sp_port* %19) #9, !dbg !23776
  %20 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23777
  call void @mlxsw_sp_port_fids_fini(%struct.mlxsw_sp_port* %20) #9, !dbg !23778
  %21 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23779
  call void @mlxsw_sp_port_dcb_fini(%struct.mlxsw_sp_port* %21) #9, !dbg !23780
  %22 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23781
  %call5 = call i32 @mlxsw_sp_port_tc_mc_mode_set(%struct.mlxsw_sp_port* %22, i1 zeroext false) #9, !dbg !23782
  %23 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23783
  call void @mlxsw_sp_port_buffers_fini(%struct.mlxsw_sp_port* %23) #9, !dbg !23784
  %24 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23785
  %call6 = call i32 @mlxsw_sp_port_swid_set(%struct.mlxsw_sp_port* %24, i8 zeroext -1) #9, !dbg !23786
  %25 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23787
  %call7 = call i32 @mlxsw_sp_port_module_unmap(%struct.mlxsw_sp_port* %25) #9, !dbg !23788
  %26 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23789
  %pcpu_stats = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %26, i32 0, i32 1, !dbg !23790
  %27 = load %struct.mlxsw_sp_port_pcpu_stats*, %struct.mlxsw_sp_port_pcpu_stats** %pcpu_stats, align 8, !dbg !23790
  %28 = bitcast %struct.mlxsw_sp_port_pcpu_stats* %27 to i8*, !dbg !23789
  call void @free_percpu(i8* %28) #9, !dbg !23791
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !23792, metadata !DIExpression()), !dbg !23794
  %29 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23794
  %vlans_list = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %29, i32 0, i32 12, !dbg !23794
  %call8 = call i32 @list_empty(%struct.list_head* %vlans_list) #9, !dbg !23794
  %tobool = icmp ne i32 %call8, 0, !dbg !23794
  %lnot = xor i1 %tobool, true, !dbg !23794
  %lnot9 = xor i1 %lnot, true, !dbg !23794
  %lnot10 = xor i1 %lnot9, true, !dbg !23794
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !23794
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !23794
  %30 = load i32, i32* %__ret_warn_on, align 4, !dbg !23795
  %tobool11 = icmp ne i32 %30, 0, !dbg !23795
  %lnot12 = xor i1 %tobool11, true, !dbg !23795
  %lnot14 = xor i1 %lnot12, true, !dbg !23795
  %lnot.ext15 = zext i1 %lnot14 to i32, !dbg !23795
  %conv = sext i32 %lnot.ext15 to i64, !dbg !23795
  %tobool16 = icmp ne i64 %conv, 0, !dbg !23795
  br i1 %tobool16, label %if.then, label %if.end, !dbg !23794

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !23795

do.body:                                          ; preds = %if.then
  br label %do.body17, !dbg !23797

do.body17:                                        ; preds = %do.body
  br label %do.end, !dbg !23799

do.end:                                           ; preds = %do.body17
  br label %do.body18, !dbg !23797

do.body18:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 1678, i32 2307, i64 12) #10, !dbg !23801, !srcloc !23803
  br label %do.end19, !dbg !23801

do.end19:                                         ; preds = %do.body18
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 661) #10, !dbg !23804, !srcloc !23806
  br label %do.body20, !dbg !23797

do.body20:                                        ; preds = %do.end19
  br label %do.end21, !dbg !23807

do.end21:                                         ; preds = %do.body20
  br label %do.end22, !dbg !23797

do.end22:                                         ; preds = %do.end21
  br label %if.end, !dbg !23797

if.end:                                           ; preds = %do.end22, %entry
  %31 = load i32, i32* %__ret_warn_on, align 4, !dbg !23794
  %tobool23 = icmp ne i32 %31, 0, !dbg !23794
  %lnot24 = xor i1 %tobool23, true, !dbg !23794
  %lnot26 = xor i1 %lnot24, true, !dbg !23794
  %lnot.ext27 = zext i1 %lnot26 to i32, !dbg !23794
  %conv28 = sext i32 %lnot.ext27 to i64, !dbg !23794
  store i64 %conv28, i64* %tmp, align 8, !dbg !23795
  %32 = load i64, i64* %tmp, align 8, !dbg !23794
  %33 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23809
  %dev29 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %33, i32 0, i32 0, !dbg !23810
  %34 = load %struct.net_device*, %struct.net_device** %dev29, align 8, !dbg !23810
  call void @free_netdev(%struct.net_device* %34) #9, !dbg !23811
  %35 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23812
  %core30 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %35, i32 0, i32 1, !dbg !23813
  %36 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core30, align 8, !dbg !23813
  %37 = load i8, i8* %local_port.addr, align 1, !dbg !23814
  call void @mlxsw_core_port_fini(%struct.mlxsw_core* %36, i8 zeroext %37) #9, !dbg !23815
  ret void, !dbg !23816
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_cpu_port_remove(%struct.mlxsw_sp* %mlxsw_sp) #0 !dbg !23817 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !23818, metadata !DIExpression()), !dbg !23819
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !23820, metadata !DIExpression()), !dbg !23821
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23822
  %ports = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %0, i32 0, i32 0, !dbg !23823
  %1 = load %struct.mlxsw_sp_port**, %struct.mlxsw_sp_port*** %ports, align 8, !dbg !23823
  %arrayidx = getelementptr %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %1, i64 0, !dbg !23822
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %arrayidx, align 8, !dbg !23822
  store %struct.mlxsw_sp_port* %2, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23821
  %3 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23824
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %3, i32 0, i32 1, !dbg !23825
  %4 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !23825
  call void @mlxsw_core_cpu_port_fini(%struct.mlxsw_core* %4) #9, !dbg !23826
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !23827
  %ports1 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %5, i32 0, i32 0, !dbg !23828
  %6 = load %struct.mlxsw_sp_port**, %struct.mlxsw_sp_port*** %ports1, align 8, !dbg !23828
  %arrayidx2 = getelementptr %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %6, i64 0, !dbg !23827
  store %struct.mlxsw_sp_port* null, %struct.mlxsw_sp_port** %arrayidx2, align 8, !dbg !23829
  %7 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23830
  %8 = bitcast %struct.mlxsw_sp_port* %7 to i8*, !dbg !23830
  call void @kfree(i8* %8) #9, !dbg !23831
  ret void, !dbg !23832
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_core_cpu_port_init(%struct.mlxsw_core*, i8*, i8*, i8 zeroext) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_core_port_init(%struct.mlxsw_core*, i8 zeroext, i32, i1 zeroext, i32, i1 zeroext, i32, i8*, i8 zeroext) #2

; Function Attrs: noredzone
declare dso_local %struct.net_device* @alloc_etherdev_mqs(i32, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_net_set(%struct.net_device* %dev, %struct.net* %net) #0 !dbg !23833 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %net.addr = alloca %struct.net*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !23836, metadata !DIExpression()), !dbg !23837
  store %struct.net* %net, %struct.net** %net.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net** %net.addr, metadata !23838, metadata !DIExpression()), !dbg !23839
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !23840
  %nd_net = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 104, !dbg !23841
  %1 = load %struct.net*, %struct.net** %net.addr, align 8, !dbg !23842
  call void @write_pnet(%struct.possible_net_t* %nd_net, %struct.net* %1) #9, !dbg !23843
  ret void, !dbg !23844
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !23845 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !23846, metadata !DIExpression()), !dbg !23847
  br label %do.body, !dbg !23848

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !23849

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !23851

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !23849

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !23853
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !23853
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !23853
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !23853
  br label %do.end3, !dbg !23853

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !23849

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !23855
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !23856
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !23857
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !23858
  ret void, !dbg !23859
}

; Function Attrs: noredzone
declare dso_local i8* @__alloc_percpu_gfp(i64, i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @u64_stats_init(%struct.u64_stats_sync* %syncp) #0 !dbg !23860 {
entry:
  %syncp.addr = alloca %struct.u64_stats_sync*, align 8
  store %struct.u64_stats_sync* %syncp, %struct.u64_stats_sync** %syncp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.u64_stats_sync** %syncp.addr, metadata !23861, metadata !DIExpression()), !dbg !23862
  ret void, !dbg !23863
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #0 !dbg !23864 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !23867, metadata !DIExpression()), !dbg !23868
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !23869, metadata !DIExpression()), !dbg !23870
  ret void, !dbg !23871
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @update_stats_cache(%struct.work_struct* %work) #0 !dbg !23872 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %mlxsw_sp_port = alloca %struct.mlxsw_sp_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_sp_port*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !23873, metadata !DIExpression()), !dbg !23874
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port, metadata !23875, metadata !DIExpression()), !dbg !23876
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !23877, metadata !DIExpression()), !dbg !23879
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !23879
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !23879
  store i8* %1, i8** %__mptr, align 8, !dbg !23879
  br label %do.body, !dbg !23879

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !23880

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !23879
  %add.ptr = getelementptr i8, i8* %2, i64 -784, !dbg !23879
  %3 = bitcast i8* %add.ptr to %struct.mlxsw_sp_port*, !dbg !23879
  store %struct.mlxsw_sp_port* %3, %struct.mlxsw_sp_port** %tmp, align 8, !dbg !23880
  %4 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %tmp, align 8, !dbg !23879
  store %struct.mlxsw_sp_port* %4, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23876
  %5 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23882
  %dev = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %5, i32 0, i32 0, !dbg !23884
  %6 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23884
  %call = call zeroext i1 @netif_carrier_ok(%struct.net_device* %6) #9, !dbg !23885
  br i1 %call, label %if.end, label %if.then, !dbg !23886

if.then:                                          ; preds = %do.end
  br label %out, !dbg !23887

if.end:                                           ; preds = %do.end
  %7 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23888
  %dev1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %7, i32 0, i32 0, !dbg !23889
  %8 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !23889
  %9 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23890
  %periodic_hw_stats = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %9, i32 0, i32 10, !dbg !23891
  %stats = getelementptr inbounds %struct.anon.158, %struct.anon.158* %periodic_hw_stats, i32 0, i32 0, !dbg !23892
  %call2 = call i32 @mlxsw_sp_port_get_hw_stats(%struct.net_device* %8, %struct.rtnl_link_stats64* %stats) #9, !dbg !23893
  %10 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23894
  %dev3 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %10, i32 0, i32 0, !dbg !23895
  %11 = load %struct.net_device*, %struct.net_device** %dev3, align 8, !dbg !23895
  %12 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23896
  %periodic_hw_stats4 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %12, i32 0, i32 10, !dbg !23897
  %xstats = getelementptr inbounds %struct.anon.158, %struct.anon.158* %periodic_hw_stats4, i32 0, i32 1, !dbg !23898
  call void @mlxsw_sp_port_get_hw_xstats(%struct.net_device* %11, %struct.mlxsw_sp_port_xstats* %xstats) #9, !dbg !23899
  br label %out, !dbg !23899

out:                                              ; preds = %if.end, %if.then
  call void @llvm.dbg.label(metadata !23900), !dbg !23901
  %13 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port, align 8, !dbg !23902
  %periodic_hw_stats5 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %13, i32 0, i32 10, !dbg !23903
  %update_dw = getelementptr inbounds %struct.anon.158, %struct.anon.158* %periodic_hw_stats5, i32 0, i32 2, !dbg !23904
  %call6 = call i32 @mlxsw_core_schedule_dw(%struct.delayed_work* %update_dw, i64 250) #9, !dbg !23905
  ret void, !dbg !23906
}

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #2

; Function Attrs: noredzone
declare dso_local void @delayed_work_timer_fn(%struct.timer_list*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_module_map(%struct.mlxsw_sp_port* %mlxsw_sp_port) #0 !dbg !23907 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %port_mapping = alloca %struct.mlxsw_sp_port_mapping*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %pmlp_pl = alloca [64 x i8], align 16
  %i = alloca i32, align 4
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !23908, metadata !DIExpression()), !dbg !23909
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_mapping** %port_mapping, metadata !23910, metadata !DIExpression()), !dbg !23911
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !23912
  %mapping = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 9, !dbg !23913
  store %struct.mlxsw_sp_port_mapping* %mapping, %struct.mlxsw_sp_port_mapping** %port_mapping, align 8, !dbg !23911
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !23914, metadata !DIExpression()), !dbg !23915
  %1 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !23916
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %1, i32 0, i32 2, !dbg !23917
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !23917
  store %struct.mlxsw_sp* %2, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !23915
  call void @llvm.dbg.declare(metadata [64 x i8]* %pmlp_pl, metadata !23918, metadata !DIExpression()), !dbg !23919
  call void @llvm.dbg.declare(metadata i32* %i, metadata !23920, metadata !DIExpression()), !dbg !23921
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %pmlp_pl, i64 0, i64 0, !dbg !23922
  %3 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !23923
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %3, i32 0, i32 3, !dbg !23924
  %4 = load i8, i8* %local_port, align 8, !dbg !23924
  call void @mlxsw_reg_pmlp_pack(i8* %arraydecay, i8 zeroext %4) #9, !dbg !23925
  %arraydecay2 = getelementptr inbounds [64 x i8], [64 x i8]* %pmlp_pl, i64 0, i64 0, !dbg !23926
  %5 = load %struct.mlxsw_sp_port_mapping*, %struct.mlxsw_sp_port_mapping** %port_mapping, align 8, !dbg !23927
  %width = getelementptr inbounds %struct.mlxsw_sp_port_mapping, %struct.mlxsw_sp_port_mapping* %5, i32 0, i32 1, !dbg !23928
  %6 = load i8, i8* %width, align 1, !dbg !23928
  %conv = zext i8 %6 to i32, !dbg !23927
  call void @mlxsw_reg_pmlp_width_set(i8* %arraydecay2, i32 %conv) #9, !dbg !23929
  store i32 0, i32* %i, align 4, !dbg !23930
  br label %for.cond, !dbg !23932

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !23933
  %8 = load %struct.mlxsw_sp_port_mapping*, %struct.mlxsw_sp_port_mapping** %port_mapping, align 8, !dbg !23935
  %width3 = getelementptr inbounds %struct.mlxsw_sp_port_mapping, %struct.mlxsw_sp_port_mapping* %8, i32 0, i32 1, !dbg !23936
  %9 = load i8, i8* %width3, align 1, !dbg !23936
  %conv4 = zext i8 %9 to i32, !dbg !23935
  %cmp = icmp slt i32 %7, %conv4, !dbg !23937
  br i1 %cmp, label %for.body, label %for.end, !dbg !23938

for.body:                                         ; preds = %for.cond
  %arraydecay6 = getelementptr inbounds [64 x i8], [64 x i8]* %pmlp_pl, i64 0, i64 0, !dbg !23939
  %10 = load i32, i32* %i, align 4, !dbg !23941
  %conv7 = trunc i32 %10 to i16, !dbg !23941
  %11 = load %struct.mlxsw_sp_port_mapping*, %struct.mlxsw_sp_port_mapping** %port_mapping, align 8, !dbg !23942
  %module = getelementptr inbounds %struct.mlxsw_sp_port_mapping, %struct.mlxsw_sp_port_mapping* %11, i32 0, i32 0, !dbg !23943
  %12 = load i8, i8* %module, align 1, !dbg !23943
  %conv8 = zext i8 %12 to i32, !dbg !23942
  call void @mlxsw_reg_pmlp_module_set(i8* %arraydecay6, i16 zeroext %conv7, i32 %conv8) #9, !dbg !23944
  %arraydecay9 = getelementptr inbounds [64 x i8], [64 x i8]* %pmlp_pl, i64 0, i64 0, !dbg !23945
  %13 = load i32, i32* %i, align 4, !dbg !23946
  %conv10 = trunc i32 %13 to i16, !dbg !23946
  %14 = load %struct.mlxsw_sp_port_mapping*, %struct.mlxsw_sp_port_mapping** %port_mapping, align 8, !dbg !23947
  %lane = getelementptr inbounds %struct.mlxsw_sp_port_mapping, %struct.mlxsw_sp_port_mapping* %14, i32 0, i32 2, !dbg !23948
  %15 = load i8, i8* %lane, align 1, !dbg !23948
  %conv11 = zext i8 %15 to i32, !dbg !23947
  %16 = load i32, i32* %i, align 4, !dbg !23949
  %add = add i32 %conv11, %16, !dbg !23950
  call void @mlxsw_reg_pmlp_tx_lane_set(i8* %arraydecay9, i16 zeroext %conv10, i32 %add) #9, !dbg !23951
  br label %for.inc, !dbg !23952

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !23953
  %inc = add i32 %17, 1, !dbg !23953
  store i32 %inc, i32* %i, align 4, !dbg !23953
  br label %for.cond, !dbg !23954, !llvm.loop !23955

for.end:                                          ; preds = %for.cond
  %18 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !23957
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %18, i32 0, i32 1, !dbg !23958
  %19 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !23958
  %arraydecay12 = getelementptr inbounds [64 x i8], [64 x i8]* %pmlp_pl, i64 0, i64 0, !dbg !23959
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %19, %struct.mlxsw_reg_info* @mlxsw_reg_pmlp, i8* %arraydecay12) #9, !dbg !23960
  ret i32 %call, !dbg !23961
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_swid_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, i8 zeroext %swid) #0 !dbg !23962 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %swid.addr = alloca i8, align 1
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %pspa_pl = alloca [8 x i8], align 1
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !23965, metadata !DIExpression()), !dbg !23966
  store i8 %swid, i8* %swid.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %swid.addr, metadata !23967, metadata !DIExpression()), !dbg !23968
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !23969, metadata !DIExpression()), !dbg !23970
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !23971
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !23972
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !23972
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !23970
  call void @llvm.dbg.declare(metadata [8 x i8]* %pspa_pl, metadata !23973, metadata !DIExpression()), !dbg !23974
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %pspa_pl, i64 0, i64 0, !dbg !23975
  %2 = load i8, i8* %swid.addr, align 1, !dbg !23976
  %3 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !23977
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %3, i32 0, i32 3, !dbg !23978
  %4 = load i8, i8* %local_port, align 8, !dbg !23978
  call void @mlxsw_reg_pspa_pack(i8* %arraydecay, i8 zeroext %2, i8 zeroext %4) #9, !dbg !23979
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !23980
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %5, i32 0, i32 1, !dbg !23981
  %6 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !23981
  %arraydecay2 = getelementptr inbounds [8 x i8], [8 x i8]* %pspa_pl, i64 0, i64 0, !dbg !23982
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %6, %struct.mlxsw_reg_info* @mlxsw_reg_pspa, i8* %arraydecay2) #9, !dbg !23983
  ret i32 %call, !dbg !23984
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_dev_addr_init(%struct.mlxsw_sp_port* %mlxsw_sp_port) #0 !dbg !23985 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %addr = alloca i8*, align 8
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !23986, metadata !DIExpression()), !dbg !23987
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !23988, metadata !DIExpression()), !dbg !23989
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !23990
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !23991
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !23991
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !23989
  call void @llvm.dbg.declare(metadata i8** %addr, metadata !23992, metadata !DIExpression()), !dbg !23993
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !23994
  %dev = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %2, i32 0, i32 0, !dbg !23995
  %3 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23995
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %3, i32 0, i32 74, !dbg !23996
  %4 = load i8*, i8** %dev_addr, align 8, !dbg !23996
  store i8* %4, i8** %addr, align 8, !dbg !23993
  %5 = load i8*, i8** %addr, align 8, !dbg !23997
  %6 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !23998
  %base_mac = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %6, i32 0, i32 3, !dbg !23999
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %base_mac, i64 0, i64 0, !dbg !23998
  call void @ether_addr_copy(i8* %5, i8* %arraydecay) #9, !dbg !24000
  %7 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !24001
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %7, i32 0, i32 3, !dbg !24002
  %8 = load i8, i8* %local_port, align 8, !dbg !24002
  %conv = zext i8 %8 to i32, !dbg !24001
  %9 = load i8*, i8** %addr, align 8, !dbg !24003
  %arrayidx = getelementptr i8, i8* %9, i64 5, !dbg !24003
  %10 = load i8, i8* %arrayidx, align 1, !dbg !24004
  %conv2 = zext i8 %10 to i32, !dbg !24004
  %add = add i32 %conv2, %conv, !dbg !24004
  %conv3 = trunc i32 %add to i8, !dbg !24004
  store i8 %conv3, i8* %arrayidx, align 1, !dbg !24004
  %11 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !24005
  %12 = load i8*, i8** %addr, align 8, !dbg !24006
  %call = call i32 @mlxsw_sp_port_dev_addr_set(%struct.mlxsw_sp_port* %11, i8* %12) #9, !dbg !24007
  ret i32 %call, !dbg !24008
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_system_port_mapping_set(%struct.mlxsw_sp_port* %mlxsw_sp_port) #0 !dbg !24009 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %sspr_pl = alloca [8 x i8], align 1
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !24010, metadata !DIExpression()), !dbg !24011
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !24012, metadata !DIExpression()), !dbg !24013
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !24014
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !24015
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !24015
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !24013
  call void @llvm.dbg.declare(metadata [8 x i8]* %sspr_pl, metadata !24016, metadata !DIExpression()), !dbg !24017
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %sspr_pl, i64 0, i64 0, !dbg !24018
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !24019
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %2, i32 0, i32 3, !dbg !24020
  %3 = load i8, i8* %local_port, align 8, !dbg !24020
  call void @mlxsw_reg_sspr_pack(i8* %arraydecay, i8 zeroext %3) #9, !dbg !24021
  %4 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !24022
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %4, i32 0, i32 1, !dbg !24023
  %5 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !24023
  %arraydecay2 = getelementptr inbounds [8 x i8], [8 x i8]* %sspr_pl, i64 0, i64 0, !dbg !24024
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %5, %struct.mlxsw_reg_info* @mlxsw_reg_sspr, i8* %arraydecay2) #9, !dbg !24025
  ret i32 %call, !dbg !24026
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_speed_by_width_set(%struct.mlxsw_sp_port* %mlxsw_sp_port) #0 !dbg !24027 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %eth_proto_cap = alloca i32, align 4
  %eth_proto_admin = alloca i32, align 4
  %eth_proto_oper = alloca i32, align 4
  %ops = alloca %struct.mlxsw_sp_port_type_speed_ops*, align 8
  %ptys_pl = alloca [64 x i8], align 16
  %eth_proto_cap_masked = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !24028, metadata !DIExpression()), !dbg !24029
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !24030, metadata !DIExpression()), !dbg !24031
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !24032
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !24033
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !24033
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !24031
  call void @llvm.dbg.declare(metadata i32* %eth_proto_cap, metadata !24034, metadata !DIExpression()), !dbg !24035
  call void @llvm.dbg.declare(metadata i32* %eth_proto_admin, metadata !24036, metadata !DIExpression()), !dbg !24037
  call void @llvm.dbg.declare(metadata i32* %eth_proto_oper, metadata !24038, metadata !DIExpression()), !dbg !24039
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_type_speed_ops** %ops, metadata !24040, metadata !DIExpression()), !dbg !24041
  call void @llvm.dbg.declare(metadata [64 x i8]* %ptys_pl, metadata !24042, metadata !DIExpression()), !dbg !24043
  call void @llvm.dbg.declare(metadata i32* %eth_proto_cap_masked, metadata !24044, metadata !DIExpression()), !dbg !24045
  call void @llvm.dbg.declare(metadata i32* %err, metadata !24046, metadata !DIExpression()), !dbg !24047
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !24048
  %port_type_speed_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %2, i32 0, i32 33, !dbg !24049
  %3 = load %struct.mlxsw_sp_port_type_speed_ops*, %struct.mlxsw_sp_port_type_speed_ops** %port_type_speed_ops, align 8, !dbg !24049
  store %struct.mlxsw_sp_port_type_speed_ops* %3, %struct.mlxsw_sp_port_type_speed_ops** %ops, align 8, !dbg !24050
  %4 = load %struct.mlxsw_sp_port_type_speed_ops*, %struct.mlxsw_sp_port_type_speed_ops** %ops, align 8, !dbg !24051
  %reg_ptys_eth_pack = getelementptr inbounds %struct.mlxsw_sp_port_type_speed_ops, %struct.mlxsw_sp_port_type_speed_ops* %4, i32 0, i32 7, !dbg !24052
  %5 = load void (%struct.mlxsw_sp*, i8*, i8, i32, i1)*, void (%struct.mlxsw_sp*, i8*, i8, i32, i1)** %reg_ptys_eth_pack, align 8, !dbg !24052
  %6 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !24053
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %ptys_pl, i64 0, i64 0, !dbg !24054
  %7 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !24055
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %7, i32 0, i32 3, !dbg !24056
  %8 = load i8, i8* %local_port, align 8, !dbg !24056
  call void %5(%struct.mlxsw_sp* %6, i8* %arraydecay, i8 zeroext %8, i32 0, i1 zeroext false) #9, !dbg !24051
  %9 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !24057
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %9, i32 0, i32 1, !dbg !24058
  %10 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !24058
  %arraydecay2 = getelementptr inbounds [64 x i8], [64 x i8]* %ptys_pl, i64 0, i64 0, !dbg !24059
  %call = call i32 @mlxsw_reg_query(%struct.mlxsw_core* %10, %struct.mlxsw_reg_info* @mlxsw_reg_ptys, i8* %arraydecay2) #9, !dbg !24060
  store i32 %call, i32* %err, align 4, !dbg !24061
  %11 = load i32, i32* %err, align 4, !dbg !24062
  %tobool = icmp ne i32 %11, 0, !dbg !24062
  br i1 %tobool, label %if.then, label %if.end, !dbg !24064

if.then:                                          ; preds = %entry
  %12 = load i32, i32* %err, align 4, !dbg !24065
  store i32 %12, i32* %retval, align 4, !dbg !24066
  br label %return, !dbg !24066

if.end:                                           ; preds = %entry
  %13 = load %struct.mlxsw_sp_port_type_speed_ops*, %struct.mlxsw_sp_port_type_speed_ops** %ops, align 8, !dbg !24067
  %reg_ptys_eth_unpack = getelementptr inbounds %struct.mlxsw_sp_port_type_speed_ops, %struct.mlxsw_sp_port_type_speed_ops* %13, i32 0, i32 8, !dbg !24068
  %14 = load void (%struct.mlxsw_sp*, i8*, i32*, i32*, i32*)*, void (%struct.mlxsw_sp*, i8*, i32*, i32*, i32*)** %reg_ptys_eth_unpack, align 8, !dbg !24068
  %15 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !24069
  %arraydecay3 = getelementptr inbounds [64 x i8], [64 x i8]* %ptys_pl, i64 0, i64 0, !dbg !24070
  call void %14(%struct.mlxsw_sp* %15, i8* %arraydecay3, i32* %eth_proto_cap, i32* %eth_proto_admin, i32* %eth_proto_oper) #9, !dbg !24067
  %16 = load %struct.mlxsw_sp_port_type_speed_ops*, %struct.mlxsw_sp_port_type_speed_ops** %ops, align 8, !dbg !24071
  %ptys_proto_cap_masked_get = getelementptr inbounds %struct.mlxsw_sp_port_type_speed_ops, %struct.mlxsw_sp_port_type_speed_ops* %16, i32 0, i32 9, !dbg !24072
  %17 = load i32 (i32)*, i32 (i32)** %ptys_proto_cap_masked_get, align 8, !dbg !24072
  %18 = load i32, i32* %eth_proto_cap, align 4, !dbg !24073
  %call4 = call i32 %17(i32 %18) #9, !dbg !24071
  store i32 %call4, i32* %eth_proto_cap_masked, align 4, !dbg !24074
  %19 = load %struct.mlxsw_sp_port_type_speed_ops*, %struct.mlxsw_sp_port_type_speed_ops** %ops, align 8, !dbg !24075
  %reg_ptys_eth_pack5 = getelementptr inbounds %struct.mlxsw_sp_port_type_speed_ops, %struct.mlxsw_sp_port_type_speed_ops* %19, i32 0, i32 7, !dbg !24076
  %20 = load void (%struct.mlxsw_sp*, i8*, i8, i32, i1)*, void (%struct.mlxsw_sp*, i8*, i8, i32, i1)** %reg_ptys_eth_pack5, align 8, !dbg !24076
  %21 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !24077
  %arraydecay6 = getelementptr inbounds [64 x i8], [64 x i8]* %ptys_pl, i64 0, i64 0, !dbg !24078
  %22 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !24079
  %local_port7 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %22, i32 0, i32 3, !dbg !24080
  %23 = load i8, i8* %local_port7, align 8, !dbg !24080
  %24 = load i32, i32* %eth_proto_cap_masked, align 4, !dbg !24081
  %25 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !24082
  %link = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %25, i32 0, i32 7, !dbg !24083
  %26 = bitcast %struct.anon.156* %link to i8*, !dbg !24084
  %bf.load = load i8, i8* %26, align 2, !dbg !24084
  %bf.lshr = lshr i8 %bf.load, 2, !dbg !24084
  %bf.clear = and i8 %bf.lshr, 1, !dbg !24084
  %tobool8 = icmp ne i8 %bf.clear, 0, !dbg !24082
  call void %20(%struct.mlxsw_sp* %21, i8* %arraydecay6, i8 zeroext %23, i32 %24, i1 zeroext %tobool8) #9, !dbg !24075
  %27 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !24085
  %core9 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %27, i32 0, i32 1, !dbg !24086
  %28 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core9, align 8, !dbg !24086
  %arraydecay10 = getelementptr inbounds [64 x i8], [64 x i8]* %ptys_pl, i64 0, i64 0, !dbg !24087
  %call11 = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %28, %struct.mlxsw_reg_info* @mlxsw_reg_ptys, i8* %arraydecay10) #9, !dbg !24088
  store i32 %call11, i32* %retval, align 4, !dbg !24089
  br label %return, !dbg !24089

return:                                           ; preds = %if.end, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !24090
  ret i32 %29, !dbg !24090
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_max_mtu_get(%struct.mlxsw_sp_port* %mlxsw_sp_port, i32* %p_max_mtu) #0 !dbg !24091 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %p_max_mtu.addr = alloca i32*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %pmtu_pl = alloca [16 x i8], align 16
  %err = alloca i32, align 4
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !24094, metadata !DIExpression()), !dbg !24095
  store i32* %p_max_mtu, i32** %p_max_mtu.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p_max_mtu.addr, metadata !24096, metadata !DIExpression()), !dbg !24097
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !24098, metadata !DIExpression()), !dbg !24099
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !24100
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !24101
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !24101
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !24099
  call void @llvm.dbg.declare(metadata [16 x i8]* %pmtu_pl, metadata !24102, metadata !DIExpression()), !dbg !24103
  call void @llvm.dbg.declare(metadata i32* %err, metadata !24104, metadata !DIExpression()), !dbg !24105
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %pmtu_pl, i64 0, i64 0, !dbg !24106
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !24107
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %2, i32 0, i32 3, !dbg !24108
  %3 = load i8, i8* %local_port, align 8, !dbg !24108
  call void @mlxsw_reg_pmtu_pack(i8* %arraydecay, i8 zeroext %3, i16 zeroext 0) #9, !dbg !24109
  %4 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !24110
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %4, i32 0, i32 1, !dbg !24111
  %5 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !24111
  %arraydecay2 = getelementptr inbounds [16 x i8], [16 x i8]* %pmtu_pl, i64 0, i64 0, !dbg !24112
  %call = call i32 @mlxsw_reg_query(%struct.mlxsw_core* %5, %struct.mlxsw_reg_info* @mlxsw_reg_pmtu, i8* %arraydecay2) #9, !dbg !24113
  store i32 %call, i32* %err, align 4, !dbg !24114
  %6 = load i32, i32* %err, align 4, !dbg !24115
  %tobool = icmp ne i32 %6, 0, !dbg !24115
  br i1 %tobool, label %if.then, label %if.end, !dbg !24117

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %err, align 4, !dbg !24118
  store i32 %7, i32* %retval, align 4, !dbg !24119
  br label %return, !dbg !24119

if.end:                                           ; preds = %entry
  %arraydecay3 = getelementptr inbounds [16 x i8], [16 x i8]* %pmtu_pl, i64 0, i64 0, !dbg !24120
  %call4 = call i32 @mlxsw_reg_pmtu_max_mtu_get(i8* %arraydecay3) #9, !dbg !24121
  %8 = load i32*, i32** %p_max_mtu.addr, align 8, !dbg !24122
  store i32 %call4, i32* %8, align 4, !dbg !24123
  store i32 0, i32* %retval, align 4, !dbg !24124
  br label %return, !dbg !24124

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !24125
  ret i32 %9, !dbg !24125
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_port_buffers_init(%struct.mlxsw_sp_port*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_ets_init(%struct.mlxsw_sp_port* %mlxsw_sp_port) #0 !dbg !24126 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !24127, metadata !DIExpression()), !dbg !24128
  call void @llvm.dbg.declare(metadata i32* %err, metadata !24129, metadata !DIExpression()), !dbg !24130
  call void @llvm.dbg.declare(metadata i32* %i, metadata !24131, metadata !DIExpression()), !dbg !24132
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !24133
  %call = call i32 @mlxsw_sp_port_ets_set(%struct.mlxsw_sp_port* %0, i32 1, i8 zeroext 0, i8 zeroext 0, i1 zeroext false, i8 zeroext 0) #9, !dbg !24134
  store i32 %call, i32* %err, align 4, !dbg !24135
  %1 = load i32, i32* %err, align 4, !dbg !24136
  %tobool = icmp ne i32 %1, 0, !dbg !24136
  br i1 %tobool, label %if.then, label %if.end, !dbg !24138

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %err, align 4, !dbg !24139
  store i32 %2, i32* %retval, align 4, !dbg !24140
  br label %return, !dbg !24140

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !24141
  br label %for.cond, !dbg !24143

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %i, align 4, !dbg !24144
  %cmp = icmp slt i32 %3, 8, !dbg !24146
  br i1 %cmp, label %for.body, label %for.end, !dbg !24147

for.body:                                         ; preds = %for.cond
  %4 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !24148
  %5 = load i32, i32* %i, align 4, !dbg !24150
  %conv = trunc i32 %5 to i8, !dbg !24150
  %call1 = call i32 @mlxsw_sp_port_ets_set(%struct.mlxsw_sp_port* %4, i32 2, i8 zeroext %conv, i8 zeroext 0, i1 zeroext false, i8 zeroext 0) #9, !dbg !24151
  store i32 %call1, i32* %err, align 4, !dbg !24152
  %6 = load i32, i32* %err, align 4, !dbg !24153
  %tobool2 = icmp ne i32 %6, 0, !dbg !24153
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !24155

if.then3:                                         ; preds = %for.body
  %7 = load i32, i32* %err, align 4, !dbg !24156
  store i32 %7, i32* %retval, align 4, !dbg !24157
  br label %return, !dbg !24157

if.end4:                                          ; preds = %for.body
  br label %for.inc, !dbg !24158

for.inc:                                          ; preds = %if.end4
  %8 = load i32, i32* %i, align 4, !dbg !24159
  %inc = add i32 %8, 1, !dbg !24159
  store i32 %inc, i32* %i, align 4, !dbg !24159
  br label %for.cond, !dbg !24160, !llvm.loop !24161

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !24163
  br label %for.cond5, !dbg !24165

for.cond5:                                        ; preds = %for.inc21, %for.end
  %9 = load i32, i32* %i, align 4, !dbg !24166
  %cmp6 = icmp slt i32 %9, 8, !dbg !24168
  br i1 %cmp6, label %for.body8, label %for.end23, !dbg !24169

for.body8:                                        ; preds = %for.cond5
  %10 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !24170
  %11 = load i32, i32* %i, align 4, !dbg !24172
  %conv9 = trunc i32 %11 to i8, !dbg !24172
  %12 = load i32, i32* %i, align 4, !dbg !24173
  %conv10 = trunc i32 %12 to i8, !dbg !24173
  %call11 = call i32 @mlxsw_sp_port_ets_set(%struct.mlxsw_sp_port* %10, i32 3, i8 zeroext %conv9, i8 zeroext %conv10, i1 zeroext false, i8 zeroext 0) #9, !dbg !24174
  store i32 %call11, i32* %err, align 4, !dbg !24175
  %13 = load i32, i32* %err, align 4, !dbg !24176
  %tobool12 = icmp ne i32 %13, 0, !dbg !24176
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !24178

if.then13:                                        ; preds = %for.body8
  %14 = load i32, i32* %err, align 4, !dbg !24179
  store i32 %14, i32* %retval, align 4, !dbg !24180
  br label %return, !dbg !24180

if.end14:                                         ; preds = %for.body8
  %15 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !24181
  %16 = load i32, i32* %i, align 4, !dbg !24182
  %add = add i32 %16, 8, !dbg !24183
  %conv15 = trunc i32 %add to i8, !dbg !24182
  %17 = load i32, i32* %i, align 4, !dbg !24184
  %conv16 = trunc i32 %17 to i8, !dbg !24184
  %call17 = call i32 @mlxsw_sp_port_ets_set(%struct.mlxsw_sp_port* %15, i32 3, i8 zeroext %conv15, i8 zeroext %conv16, i1 zeroext true, i8 zeroext 100) #9, !dbg !24185
  store i32 %call17, i32* %err, align 4, !dbg !24186
  %18 = load i32, i32* %err, align 4, !dbg !24187
  %tobool18 = icmp ne i32 %18, 0, !dbg !24187
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !24189

if.then19:                                        ; preds = %if.end14
  %19 = load i32, i32* %err, align 4, !dbg !24190
  store i32 %19, i32* %retval, align 4, !dbg !24191
  br label %return, !dbg !24191

if.end20:                                         ; preds = %if.end14
  br label %for.inc21, !dbg !24192

for.inc21:                                        ; preds = %if.end20
  %20 = load i32, i32* %i, align 4, !dbg !24193
  %inc22 = add i32 %20, 1, !dbg !24193
  store i32 %inc22, i32* %i, align 4, !dbg !24193
  br label %for.cond5, !dbg !24194, !llvm.loop !24195

for.end23:                                        ; preds = %for.cond5
  %21 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !24197
  %call24 = call i32 @mlxsw_sp_port_ets_maxrate_set(%struct.mlxsw_sp_port* %21, i32 0, i8 zeroext 0, i8 zeroext 0, i32 2147483647, i8 zeroext 0) #9, !dbg !24198
  store i32 %call24, i32* %err, align 4, !dbg !24199
  %22 = load i32, i32* %err, align 4, !dbg !24200
  %tobool25 = icmp ne i32 %22, 0, !dbg !24200
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !24202

if.then26:                                        ; preds = %for.end23
  %23 = load i32, i32* %err, align 4, !dbg !24203
  store i32 %23, i32* %retval, align 4, !dbg !24204
  br label %return, !dbg !24204

if.end27:                                         ; preds = %for.end23
  store i32 0, i32* %i, align 4, !dbg !24205
  br label %for.cond28, !dbg !24207

for.cond28:                                       ; preds = %for.inc37, %if.end27
  %24 = load i32, i32* %i, align 4, !dbg !24208
  %cmp29 = icmp slt i32 %24, 8, !dbg !24210
  br i1 %cmp29, label %for.body31, label %for.end39, !dbg !24211

for.body31:                                       ; preds = %for.cond28
  %25 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !24212
  %26 = load i32, i32* %i, align 4, !dbg !24214
  %conv32 = trunc i32 %26 to i8, !dbg !24214
  %call33 = call i32 @mlxsw_sp_port_ets_maxrate_set(%struct.mlxsw_sp_port* %25, i32 2, i8 zeroext %conv32, i8 zeroext 0, i32 2147483647, i8 zeroext 0) #9, !dbg !24215
  store i32 %call33, i32* %err, align 4, !dbg !24216
  %27 = load i32, i32* %err, align 4, !dbg !24217
  %tobool34 = icmp ne i32 %27, 0, !dbg !24217
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !24219

if.then35:                                        ; preds = %for.body31
  %28 = load i32, i32* %err, align 4, !dbg !24220
  store i32 %28, i32* %retval, align 4, !dbg !24221
  br label %return, !dbg !24221

if.end36:                                         ; preds = %for.body31
  br label %for.inc37, !dbg !24222

for.inc37:                                        ; preds = %if.end36
  %29 = load i32, i32* %i, align 4, !dbg !24223
  %inc38 = add i32 %29, 1, !dbg !24223
  store i32 %inc38, i32* %i, align 4, !dbg !24223
  br label %for.cond28, !dbg !24224, !llvm.loop !24225

for.end39:                                        ; preds = %for.cond28
  store i32 0, i32* %i, align 4, !dbg !24227
  br label %for.cond40, !dbg !24229

for.cond40:                                       ; preds = %for.inc57, %for.end39
  %30 = load i32, i32* %i, align 4, !dbg !24230
  %cmp41 = icmp slt i32 %30, 8, !dbg !24232
  br i1 %cmp41, label %for.body43, label %for.end59, !dbg !24233

for.body43:                                       ; preds = %for.cond40
  %31 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !24234
  %32 = load i32, i32* %i, align 4, !dbg !24236
  %conv44 = trunc i32 %32 to i8, !dbg !24236
  %33 = load i32, i32* %i, align 4, !dbg !24237
  %conv45 = trunc i32 %33 to i8, !dbg !24237
  %call46 = call i32 @mlxsw_sp_port_ets_maxrate_set(%struct.mlxsw_sp_port* %31, i32 3, i8 zeroext %conv44, i8 zeroext %conv45, i32 2147483647, i8 zeroext 0) #9, !dbg !24238
  store i32 %call46, i32* %err, align 4, !dbg !24239
  %34 = load i32, i32* %err, align 4, !dbg !24240
  %tobool47 = icmp ne i32 %34, 0, !dbg !24240
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !24242

if.then48:                                        ; preds = %for.body43
  %35 = load i32, i32* %err, align 4, !dbg !24243
  store i32 %35, i32* %retval, align 4, !dbg !24244
  br label %return, !dbg !24244

if.end49:                                         ; preds = %for.body43
  %36 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !24245
  %37 = load i32, i32* %i, align 4, !dbg !24246
  %add50 = add i32 %37, 8, !dbg !24247
  %conv51 = trunc i32 %add50 to i8, !dbg !24246
  %38 = load i32, i32* %i, align 4, !dbg !24248
  %conv52 = trunc i32 %38 to i8, !dbg !24248
  %call53 = call i32 @mlxsw_sp_port_ets_maxrate_set(%struct.mlxsw_sp_port* %36, i32 3, i8 zeroext %conv51, i8 zeroext %conv52, i32 2147483647, i8 zeroext 0) #9, !dbg !24249
  store i32 %call53, i32* %err, align 4, !dbg !24250
  %39 = load i32, i32* %err, align 4, !dbg !24251
  %tobool54 = icmp ne i32 %39, 0, !dbg !24251
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !24253

if.then55:                                        ; preds = %if.end49
  %40 = load i32, i32* %err, align 4, !dbg !24254
  store i32 %40, i32* %retval, align 4, !dbg !24255
  br label %return, !dbg !24255

if.end56:                                         ; preds = %if.end49
  br label %for.inc57, !dbg !24256

for.inc57:                                        ; preds = %if.end56
  %41 = load i32, i32* %i, align 4, !dbg !24257
  %inc58 = add i32 %41, 1, !dbg !24257
  store i32 %inc58, i32* %i, align 4, !dbg !24257
  br label %for.cond40, !dbg !24258, !llvm.loop !24259

for.end59:                                        ; preds = %for.cond40
  store i32 0, i32* %i, align 4, !dbg !24261
  br label %for.cond60, !dbg !24263

for.cond60:                                       ; preds = %for.inc71, %for.end59
  %42 = load i32, i32* %i, align 4, !dbg !24264
  %cmp61 = icmp slt i32 %42, 8, !dbg !24266
  br i1 %cmp61, label %for.body63, label %for.end73, !dbg !24267

for.body63:                                       ; preds = %for.cond60
  %43 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !24268
  %44 = load i32, i32* %i, align 4, !dbg !24270
  %add64 = add i32 %44, 8, !dbg !24271
  %conv65 = trunc i32 %add64 to i8, !dbg !24270
  %45 = load i32, i32* %i, align 4, !dbg !24272
  %conv66 = trunc i32 %45 to i8, !dbg !24272
  %call67 = call i32 @mlxsw_sp_port_min_bw_set(%struct.mlxsw_sp_port* %43, i32 3, i8 zeroext %conv65, i8 zeroext %conv66, i32 200000) #9, !dbg !24273
  store i32 %call67, i32* %err, align 4, !dbg !24274
  %46 = load i32, i32* %err, align 4, !dbg !24275
  %tobool68 = icmp ne i32 %46, 0, !dbg !24275
  br i1 %tobool68, label %if.then69, label %if.end70, !dbg !24277

if.then69:                                        ; preds = %for.body63
  %47 = load i32, i32* %err, align 4, !dbg !24278
  store i32 %47, i32* %retval, align 4, !dbg !24279
  br label %return, !dbg !24279

if.end70:                                         ; preds = %for.body63
  br label %for.inc71, !dbg !24280

for.inc71:                                        ; preds = %if.end70
  %48 = load i32, i32* %i, align 4, !dbg !24281
  %inc72 = add i32 %48, 1, !dbg !24281
  store i32 %inc72, i32* %i, align 4, !dbg !24281
  br label %for.cond60, !dbg !24282, !llvm.loop !24283

for.end73:                                        ; preds = %for.cond60
  store i32 0, i32* %i, align 4, !dbg !24285
  br label %for.cond74, !dbg !24287

for.cond74:                                       ; preds = %for.inc83, %for.end73
  %49 = load i32, i32* %i, align 4, !dbg !24288
  %cmp75 = icmp slt i32 %49, 8, !dbg !24290
  br i1 %cmp75, label %for.body77, label %for.end85, !dbg !24291

for.body77:                                       ; preds = %for.cond74
  %50 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !24292
  %51 = load i32, i32* %i, align 4, !dbg !24294
  %conv78 = trunc i32 %51 to i8, !dbg !24294
  %call79 = call i32 @mlxsw_sp_port_prio_tc_set(%struct.mlxsw_sp_port* %50, i8 zeroext %conv78, i8 zeroext 0) #9, !dbg !24295
  store i32 %call79, i32* %err, align 4, !dbg !24296
  %52 = load i32, i32* %err, align 4, !dbg !24297
  %tobool80 = icmp ne i32 %52, 0, !dbg !24297
  br i1 %tobool80, label %if.then81, label %if.end82, !dbg !24299

if.then81:                                        ; preds = %for.body77
  %53 = load i32, i32* %err, align 4, !dbg !24300
  store i32 %53, i32* %retval, align 4, !dbg !24301
  br label %return, !dbg !24301

if.end82:                                         ; preds = %for.body77
  br label %for.inc83, !dbg !24302

for.inc83:                                        ; preds = %if.end82
  %54 = load i32, i32* %i, align 4, !dbg !24303
  %inc84 = add i32 %54, 1, !dbg !24303
  store i32 %inc84, i32* %i, align 4, !dbg !24303
  br label %for.cond74, !dbg !24304, !llvm.loop !24305

for.end85:                                        ; preds = %for.cond74
  store i32 0, i32* %retval, align 4, !dbg !24307
  br label %return, !dbg !24307

return:                                           ; preds = %for.end85, %if.then81, %if.then69, %if.then55, %if.then48, %if.then35, %if.then26, %if.then19, %if.then13, %if.then3, %if.then
  %55 = load i32, i32* %retval, align 4, !dbg !24308
  ret i32 %55, !dbg !24308
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_tc_mc_mode_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, i1 zeroext %enable) #0 !dbg !24309 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %enable.addr = alloca i8, align 1
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %qtctm_pl = alloca [8 x i8], align 1
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !24310, metadata !DIExpression()), !dbg !24311
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !24312, metadata !DIExpression()), !dbg !24313
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !24314, metadata !DIExpression()), !dbg !24315
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !24316
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !24317
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !24317
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !24315
  call void @llvm.dbg.declare(metadata [8 x i8]* %qtctm_pl, metadata !24318, metadata !DIExpression()), !dbg !24319
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %qtctm_pl, i64 0, i64 0, !dbg !24320
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !24321
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %2, i32 0, i32 3, !dbg !24322
  %3 = load i8, i8* %local_port, align 8, !dbg !24322
  %4 = load i8, i8* %enable.addr, align 1, !dbg !24323
  %tobool = trunc i8 %4 to i1, !dbg !24323
  call void @mlxsw_reg_qtctm_pack(i8* %arraydecay, i8 zeroext %3, i1 zeroext %tobool) #9, !dbg !24324
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !24325
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %5, i32 0, i32 1, !dbg !24326
  %6 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !24326
  %arraydecay2 = getelementptr inbounds [8 x i8], [8 x i8]* %qtctm_pl, i64 0, i64 0, !dbg !24327
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %6, %struct.mlxsw_reg_info* @mlxsw_reg_qtctm, i8* %arraydecay2) #9, !dbg !24328
  ret i32 %call, !dbg !24329
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_dcb_init(%struct.mlxsw_sp_port* %mlxsw_sp_port) #0 !dbg !24330 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !24331, metadata !DIExpression()), !dbg !24332
  ret i32 0, !dbg !24333
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_port_fids_init(%struct.mlxsw_sp_port*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_tc_qdisc_init(%struct.mlxsw_sp_port*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_port_nve_init(%struct.mlxsw_sp_port*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_overheat_init_val_set(%struct.mlxsw_sp_port* %mlxsw_sp_port) #0 !dbg !24334 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %module = alloca i8, align 1
  %overheat_counter = alloca i64, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !24335, metadata !DIExpression()), !dbg !24336
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !24337, metadata !DIExpression()), !dbg !24338
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !24339
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !24340
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !24340
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !24338
  call void @llvm.dbg.declare(metadata i8* %module, metadata !24341, metadata !DIExpression()), !dbg !24342
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !24343
  %mapping = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %2, i32 0, i32 9, !dbg !24344
  %module2 = getelementptr inbounds %struct.mlxsw_sp_port_mapping, %struct.mlxsw_sp_port_mapping* %mapping, i32 0, i32 0, !dbg !24345
  %3 = load i8, i8* %module2, align 8, !dbg !24345
  store i8 %3, i8* %module, align 1, !dbg !24342
  call void @llvm.dbg.declare(metadata i64* %overheat_counter, metadata !24346, metadata !DIExpression()), !dbg !24347
  call void @llvm.dbg.declare(metadata i32* %err, metadata !24348, metadata !DIExpression()), !dbg !24349
  %4 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !24350
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %4, i32 0, i32 1, !dbg !24351
  %5 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !24351
  %6 = load i8, i8* %module, align 1, !dbg !24352
  %call = call i32 @mlxsw_env_module_overheat_counter_get(%struct.mlxsw_core* %5, i8 zeroext %6, i64* %overheat_counter) #9, !dbg !24353
  store i32 %call, i32* %err, align 4, !dbg !24354
  %7 = load i32, i32* %err, align 4, !dbg !24355
  %tobool = icmp ne i32 %7, 0, !dbg !24355
  br i1 %tobool, label %if.then, label %if.end, !dbg !24357

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %err, align 4, !dbg !24358
  store i32 %8, i32* %retval, align 4, !dbg !24359
  br label %return, !dbg !24359

if.end:                                           ; preds = %entry
  %9 = load i64, i64* %overheat_counter, align 8, !dbg !24360
  %10 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !24361
  %module_overheat_initial_val = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %10, i32 0, i32 23, !dbg !24362
  store i64 %9, i64* %module_overheat_initial_val, align 8, !dbg !24363
  store i32 0, i32* %retval, align 4, !dbg !24364
  br label %return, !dbg !24364

return:                                           ; preds = %if.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !24365
  ret i32 %11, !dbg !24365
}

; Function Attrs: noredzone
declare dso_local i32 @register_netdev(%struct.net_device*) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_core_port_eth_set(%struct.mlxsw_core*, i8 zeroext, i8*, %struct.net_device*) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_port_nve_fini(%struct.mlxsw_sp_port*) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_tc_qdisc_fini(%struct.mlxsw_sp_port*) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_port_fids_fini(%struct.mlxsw_sp_port*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_port_dcb_fini(%struct.mlxsw_sp_port* %mlxsw_sp_port) #0 !dbg !24366 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !24367, metadata !DIExpression()), !dbg !24368
  ret void, !dbg !24369
}

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp_port_buffers_fini(%struct.mlxsw_sp_port*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_module_unmap(%struct.mlxsw_sp_port* %mlxsw_sp_port) #0 !dbg !24370 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %pmlp_pl = alloca [64 x i8], align 16
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !24371, metadata !DIExpression()), !dbg !24372
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !24373, metadata !DIExpression()), !dbg !24374
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !24375
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !24376
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !24376
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !24374
  call void @llvm.dbg.declare(metadata [64 x i8]* %pmlp_pl, metadata !24377, metadata !DIExpression()), !dbg !24378
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %pmlp_pl, i64 0, i64 0, !dbg !24379
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !24380
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %2, i32 0, i32 3, !dbg !24381
  %3 = load i8, i8* %local_port, align 8, !dbg !24381
  call void @mlxsw_reg_pmlp_pack(i8* %arraydecay, i8 zeroext %3) #9, !dbg !24382
  %arraydecay2 = getelementptr inbounds [64 x i8], [64 x i8]* %pmlp_pl, i64 0, i64 0, !dbg !24383
  call void @mlxsw_reg_pmlp_width_set(i8* %arraydecay2, i32 0) #9, !dbg !24384
  %4 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !24385
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %4, i32 0, i32 1, !dbg !24386
  %5 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !24386
  %arraydecay3 = getelementptr inbounds [64 x i8], [64 x i8]* %pmlp_pl, i64 0, i64 0, !dbg !24387
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %5, %struct.mlxsw_reg_info* @mlxsw_reg_pmlp, i8* %arraydecay3) #9, !dbg !24388
  ret i32 %call, !dbg !24389
}

; Function Attrs: noredzone
declare dso_local void @free_percpu(i8*) #2

; Function Attrs: noredzone
declare dso_local void @free_netdev(%struct.net_device*) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_core_port_fini(%struct.mlxsw_core*, i8 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @write_pnet(%struct.possible_net_t* %pnet, %struct.net* %net) #0 !dbg !24390 {
entry:
  %pnet.addr = alloca %struct.possible_net_t*, align 8
  %net.addr = alloca %struct.net*, align 8
  store %struct.possible_net_t* %pnet, %struct.possible_net_t** %pnet.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.possible_net_t** %pnet.addr, metadata !24394, metadata !DIExpression()), !dbg !24395
  store %struct.net* %net, %struct.net** %net.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net** %net.addr, metadata !24396, metadata !DIExpression()), !dbg !24397
  %0 = load %struct.net*, %struct.net** %net.addr, align 8, !dbg !24398
  %1 = load %struct.possible_net_t*, %struct.possible_net_t** %pnet.addr, align 8, !dbg !24399
  %net1 = getelementptr inbounds %struct.possible_net_t, %struct.possible_net_t* %1, i32 0, i32 0, !dbg !24400
  store %struct.net* %0, %struct.net** %net1, align 8, !dbg !24401
  ret void, !dbg !24402
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_carrier_ok(%struct.net_device* %dev) #0 !dbg !24403 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !24404, metadata !DIExpression()), !dbg !24405
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !24406
  %state = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 7, !dbg !24407
  %call = call zeroext i1 @test_bit(i64 2, i64* %state) #9, !dbg !24408
  %lnot = xor i1 %call, true, !dbg !24409
  ret i1 %lnot, !dbg !24410
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_get_hw_stats(%struct.net_device* %dev, %struct.rtnl_link_stats64* %stats) #0 !dbg !24411 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %stats.addr = alloca %struct.rtnl_link_stats64*, align 8
  %ppcnt_pl = alloca [256 x i8], align 16
  %err = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !24414, metadata !DIExpression()), !dbg !24415
  store %struct.rtnl_link_stats64* %stats, %struct.rtnl_link_stats64** %stats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtnl_link_stats64** %stats.addr, metadata !24416, metadata !DIExpression()), !dbg !24417
  call void @llvm.dbg.declare(metadata [256 x i8]* %ppcnt_pl, metadata !24418, metadata !DIExpression()), !dbg !24422
  call void @llvm.dbg.declare(metadata i32* %err, metadata !24423, metadata !DIExpression()), !dbg !24424
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !24425
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %ppcnt_pl, i64 0, i64 0, !dbg !24426
  %call = call i32 @mlxsw_sp_port_get_stats_raw(%struct.net_device* %0, i32 0, i32 0, i8* %arraydecay) #9, !dbg !24427
  store i32 %call, i32* %err, align 4, !dbg !24428
  %1 = load i32, i32* %err, align 4, !dbg !24429
  %tobool = icmp ne i32 %1, 0, !dbg !24429
  br i1 %tobool, label %if.then, label %if.end, !dbg !24431

if.then:                                          ; preds = %entry
  br label %out, !dbg !24432

if.end:                                           ; preds = %entry
  %arraydecay1 = getelementptr inbounds [256 x i8], [256 x i8]* %ppcnt_pl, i64 0, i64 0, !dbg !24433
  %call2 = call i64 @mlxsw_reg_ppcnt_a_frames_transmitted_ok_get(i8* %arraydecay1) #9, !dbg !24434
  %2 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !24435
  %tx_packets = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %2, i32 0, i32 1, !dbg !24436
  store i64 %call2, i64* %tx_packets, align 8, !dbg !24437
  %arraydecay3 = getelementptr inbounds [256 x i8], [256 x i8]* %ppcnt_pl, i64 0, i64 0, !dbg !24438
  %call4 = call i64 @mlxsw_reg_ppcnt_a_frames_received_ok_get(i8* %arraydecay3) #9, !dbg !24439
  %3 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !24440
  %rx_packets = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %3, i32 0, i32 0, !dbg !24441
  store i64 %call4, i64* %rx_packets, align 8, !dbg !24442
  %arraydecay5 = getelementptr inbounds [256 x i8], [256 x i8]* %ppcnt_pl, i64 0, i64 0, !dbg !24443
  %call6 = call i64 @mlxsw_reg_ppcnt_a_octets_transmitted_ok_get(i8* %arraydecay5) #9, !dbg !24444
  %4 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !24445
  %tx_bytes = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %4, i32 0, i32 3, !dbg !24446
  store i64 %call6, i64* %tx_bytes, align 8, !dbg !24447
  %arraydecay7 = getelementptr inbounds [256 x i8], [256 x i8]* %ppcnt_pl, i64 0, i64 0, !dbg !24448
  %call8 = call i64 @mlxsw_reg_ppcnt_a_octets_received_ok_get(i8* %arraydecay7) #9, !dbg !24449
  %5 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !24450
  %rx_bytes = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %5, i32 0, i32 2, !dbg !24451
  store i64 %call8, i64* %rx_bytes, align 8, !dbg !24452
  %arraydecay9 = getelementptr inbounds [256 x i8], [256 x i8]* %ppcnt_pl, i64 0, i64 0, !dbg !24453
  %call10 = call i64 @mlxsw_reg_ppcnt_a_multicast_frames_received_ok_get(i8* %arraydecay9) #9, !dbg !24454
  %6 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !24455
  %multicast = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %6, i32 0, i32 8, !dbg !24456
  store i64 %call10, i64* %multicast, align 8, !dbg !24457
  %arraydecay11 = getelementptr inbounds [256 x i8], [256 x i8]* %ppcnt_pl, i64 0, i64 0, !dbg !24458
  %call12 = call i64 @mlxsw_reg_ppcnt_a_frame_check_sequence_errors_get(i8* %arraydecay11) #9, !dbg !24459
  %7 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !24460
  %rx_crc_errors = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %7, i32 0, i32 12, !dbg !24461
  store i64 %call12, i64* %rx_crc_errors, align 8, !dbg !24462
  %arraydecay13 = getelementptr inbounds [256 x i8], [256 x i8]* %ppcnt_pl, i64 0, i64 0, !dbg !24463
  %call14 = call i64 @mlxsw_reg_ppcnt_a_alignment_errors_get(i8* %arraydecay13) #9, !dbg !24464
  %8 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !24465
  %rx_frame_errors = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %8, i32 0, i32 13, !dbg !24466
  store i64 %call14, i64* %rx_frame_errors, align 8, !dbg !24467
  %arraydecay15 = getelementptr inbounds [256 x i8], [256 x i8]* %ppcnt_pl, i64 0, i64 0, !dbg !24468
  %call16 = call i64 @mlxsw_reg_ppcnt_a_in_range_length_errors_get(i8* %arraydecay15) #9, !dbg !24469
  %arraydecay17 = getelementptr inbounds [256 x i8], [256 x i8]* %ppcnt_pl, i64 0, i64 0, !dbg !24470
  %call18 = call i64 @mlxsw_reg_ppcnt_a_out_of_range_length_field_get(i8* %arraydecay17) #9, !dbg !24471
  %add = add i64 %call16, %call18, !dbg !24472
  %arraydecay19 = getelementptr inbounds [256 x i8], [256 x i8]* %ppcnt_pl, i64 0, i64 0, !dbg !24473
  %call20 = call i64 @mlxsw_reg_ppcnt_a_frame_too_long_errors_get(i8* %arraydecay19) #9, !dbg !24474
  %add21 = add i64 %add, %call20, !dbg !24475
  %9 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !24476
  %rx_length_errors = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %9, i32 0, i32 10, !dbg !24477
  store i64 %add21, i64* %rx_length_errors, align 8, !dbg !24478
  %10 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !24479
  %rx_crc_errors22 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %10, i32 0, i32 12, !dbg !24480
  %11 = load i64, i64* %rx_crc_errors22, align 8, !dbg !24480
  %12 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !24481
  %rx_frame_errors23 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %12, i32 0, i32 13, !dbg !24482
  %13 = load i64, i64* %rx_frame_errors23, align 8, !dbg !24482
  %add24 = add i64 %11, %13, !dbg !24483
  %14 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !24484
  %rx_length_errors25 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %14, i32 0, i32 10, !dbg !24485
  %15 = load i64, i64* %rx_length_errors25, align 8, !dbg !24485
  %add26 = add i64 %add24, %15, !dbg !24486
  %16 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %stats.addr, align 8, !dbg !24487
  %rx_errors = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %16, i32 0, i32 4, !dbg !24488
  store i64 %add26, i64* %rx_errors, align 8, !dbg !24489
  br label %out, !dbg !24487

out:                                              ; preds = %if.end, %if.then
  call void @llvm.dbg.label(metadata !24490), !dbg !24491
  %17 = load i32, i32* %err, align 4, !dbg !24492
  ret i32 %17, !dbg !24493
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_port_get_hw_xstats(%struct.net_device* %dev, %struct.mlxsw_sp_port_xstats* %xstats) #0 !dbg !24494 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %xstats.addr = alloca %struct.mlxsw_sp_port_xstats*, align 8
  %ppcnt_pl = alloca [256 x i8], align 16
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !24498, metadata !DIExpression()), !dbg !24499
  store %struct.mlxsw_sp_port_xstats* %xstats, %struct.mlxsw_sp_port_xstats** %xstats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_xstats** %xstats.addr, metadata !24500, metadata !DIExpression()), !dbg !24501
  call void @llvm.dbg.declare(metadata [256 x i8]* %ppcnt_pl, metadata !24502, metadata !DIExpression()), !dbg !24503
  call void @llvm.dbg.declare(metadata i32* %err, metadata !24504, metadata !DIExpression()), !dbg !24505
  call void @llvm.dbg.declare(metadata i32* %i, metadata !24506, metadata !DIExpression()), !dbg !24507
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !24508
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %ppcnt_pl, i64 0, i64 0, !dbg !24509
  %call = call i32 @mlxsw_sp_port_get_stats_raw(%struct.net_device* %0, i32 5, i32 0, i8* %arraydecay) #9, !dbg !24510
  store i32 %call, i32* %err, align 4, !dbg !24511
  %1 = load i32, i32* %err, align 4, !dbg !24512
  %tobool = icmp ne i32 %1, 0, !dbg !24512
  br i1 %tobool, label %if.end, label %if.then, !dbg !24514

if.then:                                          ; preds = %entry
  %arraydecay1 = getelementptr inbounds [256 x i8], [256 x i8]* %ppcnt_pl, i64 0, i64 0, !dbg !24515
  %call2 = call i64 @mlxsw_reg_ppcnt_ecn_marked_get(i8* %arraydecay1) #9, !dbg !24516
  %2 = load %struct.mlxsw_sp_port_xstats*, %struct.mlxsw_sp_port_xstats** %xstats.addr, align 8, !dbg !24517
  %ecn = getelementptr inbounds %struct.mlxsw_sp_port_xstats, %struct.mlxsw_sp_port_xstats* %2, i32 0, i32 0, !dbg !24518
  store i64 %call2, i64* %ecn, align 8, !dbg !24519
  br label %if.end, !dbg !24517

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4, !dbg !24520
  br label %for.cond, !dbg !24522

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %i, align 4, !dbg !24523
  %cmp = icmp slt i32 %3, 16, !dbg !24525
  br i1 %cmp, label %for.body, label %for.end, !dbg !24526

for.body:                                         ; preds = %for.cond
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !24527
  %5 = load i32, i32* %i, align 4, !dbg !24529
  %arraydecay3 = getelementptr inbounds [256 x i8], [256 x i8]* %ppcnt_pl, i64 0, i64 0, !dbg !24530
  %call4 = call i32 @mlxsw_sp_port_get_stats_raw(%struct.net_device* %4, i32 19, i32 %5, i8* %arraydecay3) #9, !dbg !24531
  store i32 %call4, i32* %err, align 4, !dbg !24532
  %6 = load i32, i32* %err, align 4, !dbg !24533
  %tobool5 = icmp ne i32 %6, 0, !dbg !24533
  br i1 %tobool5, label %if.end9, label %if.then6, !dbg !24535

if.then6:                                         ; preds = %for.body
  %arraydecay7 = getelementptr inbounds [256 x i8], [256 x i8]* %ppcnt_pl, i64 0, i64 0, !dbg !24536
  %call8 = call i64 @mlxsw_reg_ppcnt_wred_discard_get(i8* %arraydecay7) #9, !dbg !24537
  %7 = load %struct.mlxsw_sp_port_xstats*, %struct.mlxsw_sp_port_xstats** %xstats.addr, align 8, !dbg !24538
  %wred_drop = getelementptr inbounds %struct.mlxsw_sp_port_xstats, %struct.mlxsw_sp_port_xstats* %7, i32 0, i32 1, !dbg !24539
  %8 = load i32, i32* %i, align 4, !dbg !24540
  %idxprom = sext i32 %8 to i64, !dbg !24538
  %arrayidx = getelementptr [16 x i64], [16 x i64]* %wred_drop, i64 0, i64 %idxprom, !dbg !24538
  store i64 %call8, i64* %arrayidx, align 8, !dbg !24541
  br label %if.end9, !dbg !24538

if.end9:                                          ; preds = %if.then6, %for.body
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !24542
  %10 = load i32, i32* %i, align 4, !dbg !24543
  %arraydecay10 = getelementptr inbounds [256 x i8], [256 x i8]* %ppcnt_pl, i64 0, i64 0, !dbg !24544
  %call11 = call i32 @mlxsw_sp_port_get_stats_raw(%struct.net_device* %9, i32 17, i32 %10, i8* %arraydecay10) #9, !dbg !24545
  store i32 %call11, i32* %err, align 4, !dbg !24546
  %11 = load i32, i32* %err, align 4, !dbg !24547
  %tobool12 = icmp ne i32 %11, 0, !dbg !24547
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !24549

if.then13:                                        ; preds = %if.end9
  br label %for.inc, !dbg !24550

if.end14:                                         ; preds = %if.end9
  %arraydecay15 = getelementptr inbounds [256 x i8], [256 x i8]* %ppcnt_pl, i64 0, i64 0, !dbg !24551
  %call16 = call i64 @mlxsw_reg_ppcnt_tc_transmit_queue_get(i8* %arraydecay15) #9, !dbg !24552
  %12 = load %struct.mlxsw_sp_port_xstats*, %struct.mlxsw_sp_port_xstats** %xstats.addr, align 8, !dbg !24553
  %backlog = getelementptr inbounds %struct.mlxsw_sp_port_xstats, %struct.mlxsw_sp_port_xstats* %12, i32 0, i32 3, !dbg !24554
  %13 = load i32, i32* %i, align 4, !dbg !24555
  %idxprom17 = sext i32 %13 to i64, !dbg !24553
  %arrayidx18 = getelementptr [16 x i64], [16 x i64]* %backlog, i64 0, i64 %idxprom17, !dbg !24553
  store i64 %call16, i64* %arrayidx18, align 8, !dbg !24556
  %arraydecay19 = getelementptr inbounds [256 x i8], [256 x i8]* %ppcnt_pl, i64 0, i64 0, !dbg !24557
  %call20 = call i64 @mlxsw_reg_ppcnt_tc_no_buffer_discard_uc_get(i8* %arraydecay19) #9, !dbg !24558
  %14 = load %struct.mlxsw_sp_port_xstats*, %struct.mlxsw_sp_port_xstats** %xstats.addr, align 8, !dbg !24559
  %tail_drop = getelementptr inbounds %struct.mlxsw_sp_port_xstats, %struct.mlxsw_sp_port_xstats* %14, i32 0, i32 2, !dbg !24560
  %15 = load i32, i32* %i, align 4, !dbg !24561
  %idxprom21 = sext i32 %15 to i64, !dbg !24559
  %arrayidx22 = getelementptr [16 x i64], [16 x i64]* %tail_drop, i64 0, i64 %idxprom21, !dbg !24559
  store i64 %call20, i64* %arrayidx22, align 8, !dbg !24562
  br label %for.inc, !dbg !24563

for.inc:                                          ; preds = %if.end14, %if.then13
  %16 = load i32, i32* %i, align 4, !dbg !24564
  %inc = add i32 %16, 1, !dbg !24564
  store i32 %inc, i32* %i, align 4, !dbg !24564
  br label %for.cond, !dbg !24565, !llvm.loop !24566

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !24568
  br label %for.cond23, !dbg !24570

for.cond23:                                       ; preds = %for.inc39, %for.end
  %17 = load i32, i32* %i, align 4, !dbg !24571
  %cmp24 = icmp slt i32 %17, 8, !dbg !24573
  br i1 %cmp24, label %for.body25, label %for.end41, !dbg !24574

for.body25:                                       ; preds = %for.cond23
  %18 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !24575
  %19 = load i32, i32* %i, align 4, !dbg !24577
  %arraydecay26 = getelementptr inbounds [256 x i8], [256 x i8]* %ppcnt_pl, i64 0, i64 0, !dbg !24578
  %call27 = call i32 @mlxsw_sp_port_get_stats_raw(%struct.net_device* %18, i32 16, i32 %19, i8* %arraydecay26) #9, !dbg !24579
  store i32 %call27, i32* %err, align 4, !dbg !24580
  %20 = load i32, i32* %err, align 4, !dbg !24581
  %tobool28 = icmp ne i32 %20, 0, !dbg !24581
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !24583

if.then29:                                        ; preds = %for.body25
  br label %for.inc39, !dbg !24584

if.end30:                                         ; preds = %for.body25
  %arraydecay31 = getelementptr inbounds [256 x i8], [256 x i8]* %ppcnt_pl, i64 0, i64 0, !dbg !24585
  %call32 = call i64 @mlxsw_reg_ppcnt_tx_frames_get(i8* %arraydecay31) #9, !dbg !24586
  %21 = load %struct.mlxsw_sp_port_xstats*, %struct.mlxsw_sp_port_xstats** %xstats.addr, align 8, !dbg !24587
  %tx_packets = getelementptr inbounds %struct.mlxsw_sp_port_xstats, %struct.mlxsw_sp_port_xstats* %21, i32 0, i32 5, !dbg !24588
  %22 = load i32, i32* %i, align 4, !dbg !24589
  %idxprom33 = sext i32 %22 to i64, !dbg !24587
  %arrayidx34 = getelementptr [8 x i64], [8 x i64]* %tx_packets, i64 0, i64 %idxprom33, !dbg !24587
  store i64 %call32, i64* %arrayidx34, align 8, !dbg !24590
  %arraydecay35 = getelementptr inbounds [256 x i8], [256 x i8]* %ppcnt_pl, i64 0, i64 0, !dbg !24591
  %call36 = call i64 @mlxsw_reg_ppcnt_tx_octets_get(i8* %arraydecay35) #9, !dbg !24592
  %23 = load %struct.mlxsw_sp_port_xstats*, %struct.mlxsw_sp_port_xstats** %xstats.addr, align 8, !dbg !24593
  %tx_bytes = getelementptr inbounds %struct.mlxsw_sp_port_xstats, %struct.mlxsw_sp_port_xstats* %23, i32 0, i32 4, !dbg !24594
  %24 = load i32, i32* %i, align 4, !dbg !24595
  %idxprom37 = sext i32 %24 to i64, !dbg !24593
  %arrayidx38 = getelementptr [8 x i64], [8 x i64]* %tx_bytes, i64 0, i64 %idxprom37, !dbg !24593
  store i64 %call36, i64* %arrayidx38, align 8, !dbg !24596
  br label %for.inc39, !dbg !24597

for.inc39:                                        ; preds = %if.end30, %if.then29
  %25 = load i32, i32* %i, align 4, !dbg !24598
  %inc40 = add i32 %25, 1, !dbg !24598
  store i32 %inc40, i32* %i, align 4, !dbg !24598
  br label %for.cond23, !dbg !24599, !llvm.loop !24600

for.end41:                                        ; preds = %for.cond23
  ret void, !dbg !24602
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mlxsw_reg_ppcnt_a_frames_transmitted_ok_get(i8* %buf) #0 !dbg !24603 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !24604, metadata !DIExpression()), !dbg !24605
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !24605
  %call = call i64 @__mlxsw_item_get64(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_ppcnt_a_frames_transmitted_ok_item to %struct.mlxsw_item*), i16 zeroext 0) #9, !dbg !24605
  ret i64 %call, !dbg !24605
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mlxsw_reg_ppcnt_a_frames_received_ok_get(i8* %buf) #0 !dbg !24606 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !24607, metadata !DIExpression()), !dbg !24608
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !24608
  %call = call i64 @__mlxsw_item_get64(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_ppcnt_a_frames_received_ok_item to %struct.mlxsw_item*), i16 zeroext 0) #9, !dbg !24608
  ret i64 %call, !dbg !24608
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mlxsw_reg_ppcnt_a_octets_transmitted_ok_get(i8* %buf) #0 !dbg !24609 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !24610, metadata !DIExpression()), !dbg !24611
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !24611
  %call = call i64 @__mlxsw_item_get64(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_ppcnt_a_octets_transmitted_ok_item to %struct.mlxsw_item*), i16 zeroext 0) #9, !dbg !24611
  ret i64 %call, !dbg !24611
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mlxsw_reg_ppcnt_a_octets_received_ok_get(i8* %buf) #0 !dbg !24612 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !24613, metadata !DIExpression()), !dbg !24614
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !24614
  %call = call i64 @__mlxsw_item_get64(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_ppcnt_a_octets_received_ok_item to %struct.mlxsw_item*), i16 zeroext 0) #9, !dbg !24614
  ret i64 %call, !dbg !24614
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mlxsw_reg_ppcnt_a_multicast_frames_received_ok_get(i8* %buf) #0 !dbg !24615 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !24616, metadata !DIExpression()), !dbg !24617
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !24617
  %call = call i64 @__mlxsw_item_get64(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_ppcnt_a_multicast_frames_received_ok_item to %struct.mlxsw_item*), i16 zeroext 0) #9, !dbg !24617
  ret i64 %call, !dbg !24617
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mlxsw_reg_ppcnt_a_frame_check_sequence_errors_get(i8* %buf) #0 !dbg !24618 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !24619, metadata !DIExpression()), !dbg !24620
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !24620
  %call = call i64 @__mlxsw_item_get64(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_ppcnt_a_frame_check_sequence_errors_item to %struct.mlxsw_item*), i16 zeroext 0) #9, !dbg !24620
  ret i64 %call, !dbg !24620
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mlxsw_reg_ppcnt_a_alignment_errors_get(i8* %buf) #0 !dbg !24621 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !24622, metadata !DIExpression()), !dbg !24623
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !24623
  %call = call i64 @__mlxsw_item_get64(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_ppcnt_a_alignment_errors_item to %struct.mlxsw_item*), i16 zeroext 0) #9, !dbg !24623
  ret i64 %call, !dbg !24623
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mlxsw_reg_ppcnt_a_in_range_length_errors_get(i8* %buf) #0 !dbg !24624 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !24625, metadata !DIExpression()), !dbg !24626
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !24626
  %call = call i64 @__mlxsw_item_get64(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_ppcnt_a_in_range_length_errors_item to %struct.mlxsw_item*), i16 zeroext 0) #9, !dbg !24626
  ret i64 %call, !dbg !24626
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mlxsw_reg_ppcnt_a_out_of_range_length_field_get(i8* %buf) #0 !dbg !24627 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !24628, metadata !DIExpression()), !dbg !24629
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !24629
  %call = call i64 @__mlxsw_item_get64(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_ppcnt_a_out_of_range_length_field_item to %struct.mlxsw_item*), i16 zeroext 0) #9, !dbg !24629
  ret i64 %call, !dbg !24629
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mlxsw_reg_ppcnt_a_frame_too_long_errors_get(i8* %buf) #0 !dbg !24630 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !24631, metadata !DIExpression()), !dbg !24632
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !24632
  %call = call i64 @__mlxsw_item_get64(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_ppcnt_a_frame_too_long_errors_item to %struct.mlxsw_item*), i16 zeroext 0) #9, !dbg !24632
  ret i64 %call, !dbg !24632
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mlxsw_reg_ppcnt_ecn_marked_get(i8* %buf) #0 !dbg !24633 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !24634, metadata !DIExpression()), !dbg !24635
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !24635
  %call = call i64 @__mlxsw_item_get64(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_ppcnt_ecn_marked_item to %struct.mlxsw_item*), i16 zeroext 0) #9, !dbg !24635
  ret i64 %call, !dbg !24635
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mlxsw_reg_ppcnt_wred_discard_get(i8* %buf) #0 !dbg !24636 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !24637, metadata !DIExpression()), !dbg !24638
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !24638
  %call = call i64 @__mlxsw_item_get64(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_ppcnt_wred_discard_item to %struct.mlxsw_item*), i16 zeroext 0) #9, !dbg !24638
  ret i64 %call, !dbg !24638
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mlxsw_reg_ppcnt_tc_transmit_queue_get(i8* %buf) #0 !dbg !24639 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !24640, metadata !DIExpression()), !dbg !24641
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !24641
  %call = call i64 @__mlxsw_item_get64(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_ppcnt_tc_transmit_queue_item to %struct.mlxsw_item*), i16 zeroext 0) #9, !dbg !24641
  ret i64 %call, !dbg !24641
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mlxsw_reg_ppcnt_tc_no_buffer_discard_uc_get(i8* %buf) #0 !dbg !24642 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !24643, metadata !DIExpression()), !dbg !24644
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !24644
  %call = call i64 @__mlxsw_item_get64(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_ppcnt_tc_no_buffer_discard_uc_item to %struct.mlxsw_item*), i16 zeroext 0) #9, !dbg !24644
  ret i64 %call, !dbg !24644
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mlxsw_reg_ppcnt_tx_frames_get(i8* %buf) #0 !dbg !24645 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !24646, metadata !DIExpression()), !dbg !24647
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !24647
  %call = call i64 @__mlxsw_item_get64(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_ppcnt_tx_frames_item to %struct.mlxsw_item*), i16 zeroext 0) #9, !dbg !24647
  ret i64 %call, !dbg !24647
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mlxsw_reg_ppcnt_tx_octets_get(i8* %buf) #0 !dbg !24648 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !24649, metadata !DIExpression()), !dbg !24650
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !24650
  %call = call i64 @__mlxsw_item_get64(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_ppcnt_tx_octets_item to %struct.mlxsw_item*), i16 zeroext 0) #9, !dbg !24650
  ret i64 %call, !dbg !24650
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_pmlp_width_set(i8* %buf, i32 %val) #0 !dbg !24651 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !24652, metadata !DIExpression()), !dbg !24653
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !24654, metadata !DIExpression()), !dbg !24653
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !24653
  %1 = load i32, i32* %val.addr, align 4, !dbg !24653
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_pmlp_width_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !24653
  ret void, !dbg !24653
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_pmlp_module_set(i8* %buf, i16 zeroext %index, i32 %val) #0 !dbg !24655 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !24656, metadata !DIExpression()), !dbg !24657
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !24658, metadata !DIExpression()), !dbg !24657
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !24659, metadata !DIExpression()), !dbg !24657
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !24657
  %1 = load i16, i16* %index.addr, align 2, !dbg !24657
  %2 = load i32, i32* %val.addr, align 4, !dbg !24657
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_pmlp_module_item to %struct.mlxsw_item*), i16 zeroext %1, i32 %2) #9, !dbg !24657
  ret void, !dbg !24657
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_pmlp_tx_lane_set(i8* %buf, i16 zeroext %index, i32 %val) #0 !dbg !24660 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !24661, metadata !DIExpression()), !dbg !24662
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !24663, metadata !DIExpression()), !dbg !24662
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !24664, metadata !DIExpression()), !dbg !24662
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !24662
  %1 = load i16, i16* %index.addr, align 2, !dbg !24662
  %2 = load i32, i32* %val.addr, align 4, !dbg !24662
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_pmlp_tx_lane_item to %struct.mlxsw_item*), i16 zeroext %1, i32 %2) #9, !dbg !24662
  ret void, !dbg !24662
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_pspa_pack(i8* %payload, i8 zeroext %swid, i8 zeroext %local_port) #0 !dbg !24665 {
entry:
  %payload.addr = alloca i8*, align 8
  %swid.addr = alloca i8, align 1
  %local_port.addr = alloca i8, align 1
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !24666, metadata !DIExpression()), !dbg !24667
  store i8 %swid, i8* %swid.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %swid.addr, metadata !24668, metadata !DIExpression()), !dbg !24669
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !24670, metadata !DIExpression()), !dbg !24671
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !24672
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_pspa, i32 0, i32 1), align 2, !dbg !24672
  %conv = zext i16 %1 to i64, !dbg !24672
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !24672
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !24673
  %3 = load i8, i8* %swid.addr, align 1, !dbg !24674
  %conv1 = zext i8 %3 to i32, !dbg !24674
  call void @mlxsw_reg_pspa_swid_set(i8* %2, i32 %conv1) #9, !dbg !24675
  %4 = load i8*, i8** %payload.addr, align 8, !dbg !24676
  %5 = load i8, i8* %local_port.addr, align 1, !dbg !24677
  %conv2 = zext i8 %5 to i32, !dbg !24677
  call void @mlxsw_reg_pspa_local_port_set(i8* %4, i32 %conv2) #9, !dbg !24678
  %6 = load i8*, i8** %payload.addr, align 8, !dbg !24679
  call void @mlxsw_reg_pspa_sub_port_set(i8* %6, i32 0) #9, !dbg !24680
  ret void, !dbg !24681
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_pspa_swid_set(i8* %buf, i32 %val) #0 !dbg !24682 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !24683, metadata !DIExpression()), !dbg !24684
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !24685, metadata !DIExpression()), !dbg !24684
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !24684
  %1 = load i32, i32* %val.addr, align 4, !dbg !24684
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_pspa_swid_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !24684
  ret void, !dbg !24684
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_pspa_local_port_set(i8* %buf, i32 %val) #0 !dbg !24686 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !24687, metadata !DIExpression()), !dbg !24688
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !24689, metadata !DIExpression()), !dbg !24688
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !24688
  %1 = load i32, i32* %val.addr, align 4, !dbg !24688
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_pspa_local_port_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !24688
  ret void, !dbg !24688
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_pspa_sub_port_set(i8* %buf, i32 %val) #0 !dbg !24690 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !24691, metadata !DIExpression()), !dbg !24692
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !24693, metadata !DIExpression()), !dbg !24692
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !24692
  %1 = load i32, i32* %val.addr, align 4, !dbg !24692
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_pspa_sub_port_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !24692
  ret void, !dbg !24692
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ether_addr_copy(i8* %dst, i8* %src) #0 !dbg !24694 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !24697, metadata !DIExpression()), !dbg !24698
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !24699, metadata !DIExpression()), !dbg !24700
  %0 = load i8*, i8** %src.addr, align 8, !dbg !24701
  %1 = bitcast i8* %0 to i32*, !dbg !24702
  %2 = load i32, i32* %1, align 4, !dbg !24702
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !24703
  %4 = bitcast i8* %3 to i32*, !dbg !24704
  store i32 %2, i32* %4, align 4, !dbg !24705
  %5 = load i8*, i8** %src.addr, align 8, !dbg !24706
  %add.ptr = getelementptr i8, i8* %5, i64 4, !dbg !24707
  %6 = bitcast i8* %add.ptr to i16*, !dbg !24708
  %7 = load i16, i16* %6, align 2, !dbg !24708
  %8 = load i8*, i8** %dst.addr, align 8, !dbg !24709
  %add.ptr1 = getelementptr i8, i8* %8, i64 4, !dbg !24710
  %9 = bitcast i8* %add.ptr1 to i16*, !dbg !24711
  store i16 %7, i16* %9, align 2, !dbg !24712
  ret void, !dbg !24713
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sspr_pack(i8* %payload, i8 zeroext %local_port) #0 !dbg !24714 {
entry:
  %payload.addr = alloca i8*, align 8
  %local_port.addr = alloca i8, align 1
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !24715, metadata !DIExpression()), !dbg !24716
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !24717, metadata !DIExpression()), !dbg !24718
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !24719
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_sspr, i32 0, i32 1), align 2, !dbg !24719
  %conv = zext i16 %1 to i64, !dbg !24719
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !24719
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !24720
  call void @mlxsw_reg_sspr_m_set(i8* %2, i32 1) #9, !dbg !24721
  %3 = load i8*, i8** %payload.addr, align 8, !dbg !24722
  %4 = load i8, i8* %local_port.addr, align 1, !dbg !24723
  %conv1 = zext i8 %4 to i32, !dbg !24723
  call void @mlxsw_reg_sspr_local_port_set(i8* %3, i32 %conv1) #9, !dbg !24724
  %5 = load i8*, i8** %payload.addr, align 8, !dbg !24725
  call void @mlxsw_reg_sspr_sub_port_set(i8* %5, i32 0) #9, !dbg !24726
  %6 = load i8*, i8** %payload.addr, align 8, !dbg !24727
  %7 = load i8, i8* %local_port.addr, align 1, !dbg !24728
  %conv2 = zext i8 %7 to i32, !dbg !24728
  call void @mlxsw_reg_sspr_system_port_set(i8* %6, i32 %conv2) #9, !dbg !24729
  ret void, !dbg !24730
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sspr_m_set(i8* %buf, i32 %val) #0 !dbg !24731 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !24732, metadata !DIExpression()), !dbg !24733
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !24734, metadata !DIExpression()), !dbg !24733
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !24733
  %1 = load i32, i32* %val.addr, align 4, !dbg !24733
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sspr_m_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !24733
  ret void, !dbg !24733
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sspr_local_port_set(i8* %buf, i32 %val) #0 !dbg !24735 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !24736, metadata !DIExpression()), !dbg !24737
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !24738, metadata !DIExpression()), !dbg !24737
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !24737
  %1 = load i32, i32* %val.addr, align 4, !dbg !24737
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sspr_local_port_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !24737
  ret void, !dbg !24737
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sspr_sub_port_set(i8* %buf, i32 %val) #0 !dbg !24739 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !24740, metadata !DIExpression()), !dbg !24741
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !24742, metadata !DIExpression()), !dbg !24741
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !24741
  %1 = load i32, i32* %val.addr, align 4, !dbg !24741
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sspr_sub_port_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !24741
  ret void, !dbg !24741
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_sspr_system_port_set(i8* %buf, i32 %val) #0 !dbg !24743 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !24744, metadata !DIExpression()), !dbg !24745
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !24746, metadata !DIExpression()), !dbg !24745
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !24745
  %1 = load i32, i32* %val.addr, align 4, !dbg !24745
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_sspr_system_port_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !24745
  ret void, !dbg !24745
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_pmtu_max_mtu_get(i8* %buf) #0 !dbg !24747 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !24748, metadata !DIExpression()), !dbg !24749
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !24749
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_pmtu_max_mtu_item to %struct.mlxsw_item*), i16 zeroext 0) #9, !dbg !24749
  ret i32 %call, !dbg !24749
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_min_bw_set(%struct.mlxsw_sp_port* %mlxsw_sp_port, i32 %hr, i8 zeroext %index, i8 zeroext %next_index, i32 %minrate) #0 !dbg !24750 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %hr.addr = alloca i32, align 4
  %index.addr = alloca i8, align 1
  %next_index.addr = alloca i8, align 1
  %minrate.addr = alloca i32, align 4
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  %qeec_pl = alloca [32 x i8], align 16
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !24753, metadata !DIExpression()), !dbg !24754
  store i32 %hr, i32* %hr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hr.addr, metadata !24755, metadata !DIExpression()), !dbg !24756
  store i8 %index, i8* %index.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %index.addr, metadata !24757, metadata !DIExpression()), !dbg !24758
  store i8 %next_index, i8* %next_index.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %next_index.addr, metadata !24759, metadata !DIExpression()), !dbg !24760
  store i32 %minrate, i32* %minrate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %minrate.addr, metadata !24761, metadata !DIExpression()), !dbg !24762
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !24763, metadata !DIExpression()), !dbg !24764
  %0 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !24765
  %mlxsw_sp1 = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %0, i32 0, i32 2, !dbg !24766
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp1, align 8, !dbg !24766
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !24764
  call void @llvm.dbg.declare(metadata [32 x i8]* %qeec_pl, metadata !24767, metadata !DIExpression()), !dbg !24768
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %qeec_pl, i64 0, i64 0, !dbg !24769
  %2 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !24770
  %local_port = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %2, i32 0, i32 3, !dbg !24771
  %3 = load i8, i8* %local_port, align 8, !dbg !24771
  %4 = load i32, i32* %hr.addr, align 4, !dbg !24772
  %5 = load i8, i8* %index.addr, align 1, !dbg !24773
  %6 = load i8, i8* %next_index.addr, align 1, !dbg !24774
  call void @mlxsw_reg_qeec_pack(i8* %arraydecay, i8 zeroext %3, i32 %4, i8 zeroext %5, i8 zeroext %6) #9, !dbg !24775
  %arraydecay2 = getelementptr inbounds [32 x i8], [32 x i8]* %qeec_pl, i64 0, i64 0, !dbg !24776
  call void @mlxsw_reg_qeec_mise_set(i8* %arraydecay2, i32 1) #9, !dbg !24777
  %arraydecay3 = getelementptr inbounds [32 x i8], [32 x i8]* %qeec_pl, i64 0, i64 0, !dbg !24778
  %7 = load i32, i32* %minrate.addr, align 4, !dbg !24779
  call void @mlxsw_reg_qeec_min_shaper_rate_set(i8* %arraydecay3, i32 %7) #9, !dbg !24780
  %8 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !24781
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %8, i32 0, i32 1, !dbg !24782
  %9 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !24782
  %arraydecay4 = getelementptr inbounds [32 x i8], [32 x i8]* %qeec_pl, i64 0, i64 0, !dbg !24783
  %call = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %9, %struct.mlxsw_reg_info* @mlxsw_reg_qeec, i8* %arraydecay4) #9, !dbg !24784
  ret i32 %call, !dbg !24785
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_qeec_mise_set(i8* %buf, i32 %val) #0 !dbg !24786 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !24787, metadata !DIExpression()), !dbg !24788
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !24789, metadata !DIExpression()), !dbg !24788
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !24788
  %1 = load i32, i32* %val.addr, align 4, !dbg !24788
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_qeec_mise_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !24788
  ret void, !dbg !24788
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_qeec_min_shaper_rate_set(i8* %buf, i32 %val) #0 !dbg !24790 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !24791, metadata !DIExpression()), !dbg !24792
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !24793, metadata !DIExpression()), !dbg !24792
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !24792
  %1 = load i32, i32* %val.addr, align 4, !dbg !24792
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_qeec_min_shaper_rate_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !24792
  ret void, !dbg !24792
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_qtctm_pack(i8* %payload, i8 zeroext %local_port, i1 zeroext %mc) #0 !dbg !24794 {
entry:
  %payload.addr = alloca i8*, align 8
  %local_port.addr = alloca i8, align 1
  %mc.addr = alloca i8, align 1
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !24795, metadata !DIExpression()), !dbg !24796
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !24797, metadata !DIExpression()), !dbg !24798
  %frombool = zext i1 %mc to i8
  store i8 %frombool, i8* %mc.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %mc.addr, metadata !24799, metadata !DIExpression()), !dbg !24800
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !24801
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_qtctm, i32 0, i32 1), align 2, !dbg !24801
  %conv = zext i16 %1 to i64, !dbg !24801
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !24801
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !24802
  %3 = load i8, i8* %local_port.addr, align 1, !dbg !24803
  %conv1 = zext i8 %3 to i32, !dbg !24803
  call void @mlxsw_reg_qtctm_local_port_set(i8* %2, i32 %conv1) #9, !dbg !24804
  %4 = load i8*, i8** %payload.addr, align 8, !dbg !24805
  %5 = load i8, i8* %mc.addr, align 1, !dbg !24806
  %tobool = trunc i8 %5 to i1, !dbg !24806
  %conv2 = zext i1 %tobool to i32, !dbg !24806
  call void @mlxsw_reg_qtctm_mc_set(i8* %4, i32 %conv2) #9, !dbg !24807
  ret void, !dbg !24808
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_qtctm_local_port_set(i8* %buf, i32 %val) #0 !dbg !24809 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !24810, metadata !DIExpression()), !dbg !24811
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !24812, metadata !DIExpression()), !dbg !24811
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !24811
  %1 = load i32, i32* %val.addr, align 4, !dbg !24811
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_qtctm_local_port_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !24811
  ret void, !dbg !24811
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_qtctm_mc_set(i8* %buf, i32 %val) #0 !dbg !24813 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !24814, metadata !DIExpression()), !dbg !24815
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !24816, metadata !DIExpression()), !dbg !24815
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !24815
  %1 = load i32, i32* %val.addr, align 4, !dbg !24815
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_qtctm_mc_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #9, !dbg !24815
  ret void, !dbg !24815
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_env_module_overheat_counter_get(%struct.mlxsw_core*, i8 zeroext, i64*) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_port_ptp_clear(%struct.mlxsw_sp_port* %mlxsw_sp_port) #0 !dbg !24817 {
entry:
  %mlxsw_sp_port.addr = alloca %struct.mlxsw_sp_port*, align 8
  %config = alloca %struct.hwtstamp_config, align 4
  store %struct.mlxsw_sp_port* %mlxsw_sp_port, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, metadata !24818, metadata !DIExpression()), !dbg !24819
  call void @llvm.dbg.declare(metadata %struct.hwtstamp_config* %config, metadata !24820, metadata !DIExpression()), !dbg !24821
  %0 = bitcast %struct.hwtstamp_config* %config to i8*, !dbg !24821
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 12, i1 false), !dbg !24821
  %1 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !24822
  %mlxsw_sp = getelementptr inbounds %struct.mlxsw_sp_port, %struct.mlxsw_sp_port* %1, i32 0, i32 2, !dbg !24823
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !24823
  %ptp_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %2, i32 0, i32 34, !dbg !24824
  %3 = load %struct.mlxsw_sp_ptp_ops*, %struct.mlxsw_sp_ptp_ops** %ptp_ops, align 8, !dbg !24824
  %hwtstamp_set = getelementptr inbounds %struct.mlxsw_sp_ptp_ops, %struct.mlxsw_sp_ptp_ops* %3, i32 0, i32 7, !dbg !24825
  %4 = load i32 (%struct.mlxsw_sp_port*, %struct.hwtstamp_config*)*, i32 (%struct.mlxsw_sp_port*, %struct.hwtstamp_config*)** %hwtstamp_set, align 8, !dbg !24825
  %5 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %mlxsw_sp_port.addr, align 8, !dbg !24826
  %call = call i32 %4(%struct.mlxsw_sp_port* %5, %struct.hwtstamp_config* %config) #9, !dbg !24822
  ret void, !dbg !24827
}

; Function Attrs: noredzone
declare dso_local void @mlxsw_core_port_clear(%struct.mlxsw_core*, i8 zeroext, i8*) #2

; Function Attrs: noredzone
declare dso_local void @unregister_netdev(%struct.net_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !24828 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !24833, metadata !DIExpression()), !dbg !24834
  br label %do.body, !dbg !24835

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !24837

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !24835
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !24835
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !24835
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !24837
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !24835
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !24839
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !24840
  %conv = zext i1 %cmp to i32, !dbg !24840
  ret i32 %conv, !dbg !24841
}

; Function Attrs: noredzone
declare dso_local void @mlxsw_core_cpu_port_fini(%struct.mlxsw_core*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_ports_remove(%struct.mlxsw_sp* %mlxsw_sp) #0 !dbg !24842 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %i = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !24843, metadata !DIExpression()), !dbg !24844
  call void @llvm.dbg.declare(metadata i32* %i, metadata !24845, metadata !DIExpression()), !dbg !24846
  store i32 1, i32* %i, align 4, !dbg !24847
  br label %for.cond, !dbg !24849

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !24850
  %1 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !24852
  %core = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %1, i32 0, i32 1, !dbg !24853
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !24853
  %call = call i32 @mlxsw_core_max_ports(%struct.mlxsw_core* %2) #9, !dbg !24854
  %cmp = icmp ult i32 %0, %call, !dbg !24855
  br i1 %cmp, label %for.body, label %for.end, !dbg !24856

for.body:                                         ; preds = %for.cond
  %3 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !24857
  %4 = load i32, i32* %i, align 4, !dbg !24859
  %conv = trunc i32 %4 to i8, !dbg !24859
  %call1 = call zeroext i1 @mlxsw_sp_port_created(%struct.mlxsw_sp* %3, i8 zeroext %conv) #9, !dbg !24860
  br i1 %call1, label %if.then, label %if.end, !dbg !24861

if.then:                                          ; preds = %for.body
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !24862
  %6 = load i32, i32* %i, align 4, !dbg !24863
  %conv2 = trunc i32 %6 to i8, !dbg !24863
  call void @mlxsw_sp_port_remove(%struct.mlxsw_sp* %5, i8 zeroext %conv2) #9, !dbg !24864
  br label %if.end, !dbg !24864

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !24865

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %i, align 4, !dbg !24866
  %inc = add i32 %7, 1, !dbg !24866
  store i32 %inc, i32* %i, align 4, !dbg !24866
  br label %for.cond, !dbg !24867, !llvm.loop !24868

for.end:                                          ; preds = %for.cond
  %8 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !24870
  call void @mlxsw_sp_cpu_port_remove(%struct.mlxsw_sp* %8) #9, !dbg !24871
  %9 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !24872
  %ports = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %9, i32 0, i32 0, !dbg !24873
  %10 = load %struct.mlxsw_sp_port**, %struct.mlxsw_sp_port*** %ports, align 8, !dbg !24873
  %11 = bitcast %struct.mlxsw_sp_port** %10 to i8*, !dbg !24872
  call void @kfree(i8* %11) #9, !dbg !24874
  %12 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !24875
  %ports3 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %12, i32 0, i32 0, !dbg !24876
  store %struct.mlxsw_sp_port** null, %struct.mlxsw_sp_port*** %ports3, align 8, !dbg !24877
  ret void, !dbg !24878
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_sp_port* @mlxsw_sp_port_get_by_local_port(%struct.mlxsw_sp* %mlxsw_sp, i8 zeroext %local_port) #0 !dbg !24879 {
entry:
  %retval = alloca %struct.mlxsw_sp_port*, align 8
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %local_port.addr = alloca i8, align 1
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !24882, metadata !DIExpression()), !dbg !24883
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !24884, metadata !DIExpression()), !dbg !24885
  %0 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !24886
  %ports = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %0, i32 0, i32 0, !dbg !24888
  %1 = load %struct.mlxsw_sp_port**, %struct.mlxsw_sp_port*** %ports, align 8, !dbg !24888
  %tobool = icmp ne %struct.mlxsw_sp_port** %1, null, !dbg !24886
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !24889

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !24890
  %ports1 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %2, i32 0, i32 0, !dbg !24891
  %3 = load %struct.mlxsw_sp_port**, %struct.mlxsw_sp_port*** %ports1, align 8, !dbg !24891
  %4 = load i8, i8* %local_port.addr, align 1, !dbg !24892
  %idxprom = zext i8 %4 to i64, !dbg !24890
  %arrayidx = getelementptr %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %3, i64 %idxprom, !dbg !24890
  %5 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %arrayidx, align 8, !dbg !24890
  %tobool2 = icmp ne %struct.mlxsw_sp_port* %5, null, !dbg !24890
  br i1 %tobool2, label %if.then, label %if.end, !dbg !24893

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !24894
  %ports3 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %6, i32 0, i32 0, !dbg !24895
  %7 = load %struct.mlxsw_sp_port**, %struct.mlxsw_sp_port*** %ports3, align 8, !dbg !24895
  %8 = load i8, i8* %local_port.addr, align 1, !dbg !24896
  %idxprom4 = zext i8 %8 to i64, !dbg !24894
  %arrayidx5 = getelementptr %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %7, i64 %idxprom4, !dbg !24894
  %9 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %arrayidx5, align 8, !dbg !24894
  store %struct.mlxsw_sp_port* %9, %struct.mlxsw_sp_port** %retval, align 8, !dbg !24897
  br label %return, !dbg !24897

if.end:                                           ; preds = %land.lhs.true, %entry
  store %struct.mlxsw_sp_port* null, %struct.mlxsw_sp_port** %retval, align 8, !dbg !24898
  br label %return, !dbg !24898

return:                                           ; preds = %if.end, %if.then
  %10 = load %struct.mlxsw_sp_port*, %struct.mlxsw_sp_port** %retval, align 8, !dbg !24899
  ret %struct.mlxsw_sp_port* %10, !dbg !24899
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_core_module_max_width(%struct.mlxsw_core*, i8 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_local_ports_offset(%struct.mlxsw_core* %mlxsw_core, i32 %count, i32 %max_width) #0 !dbg !24900 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %count.addr = alloca i32, align 4
  %max_width.addr = alloca i32, align 4
  %local_ports_in_x_res_id = alloca i32, align 4
  %split_width = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !24903, metadata !DIExpression()), !dbg !24904
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !24905, metadata !DIExpression()), !dbg !24906
  store i32 %max_width, i32* %max_width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_width.addr, metadata !24907, metadata !DIExpression()), !dbg !24908
  call void @llvm.dbg.declare(metadata i32* %local_ports_in_x_res_id, metadata !24909, metadata !DIExpression()), !dbg !24910
  call void @llvm.dbg.declare(metadata i32* %split_width, metadata !24911, metadata !DIExpression()), !dbg !24912
  %0 = load i32, i32* %max_width.addr, align 4, !dbg !24913
  %1 = load i32, i32* %count.addr, align 4, !dbg !24914
  %div = udiv i32 %0, %1, !dbg !24915
  store i32 %div, i32* %split_width, align 4, !dbg !24912
  %2 = load i32, i32* %split_width, align 4, !dbg !24916
  %cmp = icmp eq i32 %2, 1, !dbg !24918
  br i1 %cmp, label %if.then, label %if.else, !dbg !24919

if.then:                                          ; preds = %entry
  store i32 17, i32* %local_ports_in_x_res_id, align 4, !dbg !24920
  br label %if.end8, !dbg !24921

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %split_width, align 4, !dbg !24922
  %cmp1 = icmp eq i32 %3, 2, !dbg !24924
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !24925

if.then2:                                         ; preds = %if.else
  store i32 18, i32* %local_ports_in_x_res_id, align 4, !dbg !24926
  br label %if.end7, !dbg !24927

if.else3:                                         ; preds = %if.else
  %4 = load i32, i32* %split_width, align 4, !dbg !24928
  %cmp4 = icmp eq i32 %4, 4, !dbg !24930
  br i1 %cmp4, label %if.then5, label %if.else6, !dbg !24931

if.then5:                                         ; preds = %if.else3
  store i32 19, i32* %local_ports_in_x_res_id, align 4, !dbg !24932
  br label %if.end, !dbg !24933

if.else6:                                         ; preds = %if.else3
  store i32 -22, i32* %retval, align 4, !dbg !24934
  br label %return, !dbg !24934

if.end:                                           ; preds = %if.then5
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then2
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.then
  %5 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !24935
  %6 = load i32, i32* %local_ports_in_x_res_id, align 4, !dbg !24937
  %call = call zeroext i1 @mlxsw_core_res_valid(%struct.mlxsw_core* %5, i32 %6) #9, !dbg !24938
  br i1 %call, label %if.end10, label %if.then9, !dbg !24939

if.then9:                                         ; preds = %if.end8
  store i32 -22, i32* %retval, align 4, !dbg !24940
  br label %return, !dbg !24940

if.end10:                                         ; preds = %if.end8
  %7 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !24941
  %8 = load i32, i32* %local_ports_in_x_res_id, align 4, !dbg !24942
  %call11 = call i64 @mlxsw_core_res_get(%struct.mlxsw_core* %7, i32 %8) #9, !dbg !24943
  %conv = trunc i64 %call11 to i32, !dbg !24943
  store i32 %conv, i32* %retval, align 4, !dbg !24944
  br label %return, !dbg !24944

return:                                           ; preds = %if.end10, %if.then9, %if.else6
  %9 = load i32, i32* %retval, align 4, !dbg !24945
  ret i32 %9, !dbg !24945
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @mlxsw_sp_cluster_base_port_get(i8 zeroext %local_port, i32 %max_width) #0 !dbg !24946 {
entry:
  %local_port.addr = alloca i8, align 1
  %max_width.addr = alloca i32, align 4
  %offset = alloca i8, align 1
  store i8 %local_port, i8* %local_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local_port.addr, metadata !24949, metadata !DIExpression()), !dbg !24950
  store i32 %max_width, i32* %max_width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_width.addr, metadata !24951, metadata !DIExpression()), !dbg !24952
  call void @llvm.dbg.declare(metadata i8* %offset, metadata !24953, metadata !DIExpression()), !dbg !24954
  %0 = load i8, i8* %local_port.addr, align 1, !dbg !24955
  %conv = zext i8 %0 to i32, !dbg !24955
  %sub = sub i32 %conv, 1, !dbg !24956
  %1 = load i32, i32* %max_width.addr, align 4, !dbg !24957
  %rem = urem i32 %sub, %1, !dbg !24958
  %conv1 = trunc i32 %rem to i8, !dbg !24959
  store i8 %conv1, i8* %offset, align 1, !dbg !24954
  %2 = load i8, i8* %local_port.addr, align 1, !dbg !24960
  %conv2 = zext i8 %2 to i32, !dbg !24960
  %3 = load i8, i8* %offset, align 1, !dbg !24961
  %conv3 = zext i8 %3 to i32, !dbg !24961
  %sub4 = sub i32 %conv2, %conv3, !dbg !24962
  %conv5 = trunc i32 %sub4 to i8, !dbg !24960
  ret i8 %conv5, !dbg !24963
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_port_split_create(%struct.mlxsw_sp* %mlxsw_sp, i8 zeroext %base_port, %struct.mlxsw_sp_port_mapping* %port_mapping, i32 %count, i8 zeroext %offset) #0 !dbg !24964 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %base_port.addr = alloca i8, align 1
  %port_mapping.addr = alloca %struct.mlxsw_sp_port_mapping*, align 8
  %count.addr = alloca i32, align 4
  %offset.addr = alloca i8, align 1
  %split_port_mapping = alloca %struct.mlxsw_sp_port_mapping, align 1
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !24967, metadata !DIExpression()), !dbg !24968
  store i8 %base_port, i8* %base_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %base_port.addr, metadata !24969, metadata !DIExpression()), !dbg !24970
  store %struct.mlxsw_sp_port_mapping* %port_mapping, %struct.mlxsw_sp_port_mapping** %port_mapping.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_mapping** %port_mapping.addr, metadata !24971, metadata !DIExpression()), !dbg !24972
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !24973, metadata !DIExpression()), !dbg !24974
  store i8 %offset, i8* %offset.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %offset.addr, metadata !24975, metadata !DIExpression()), !dbg !24976
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_mapping* %split_port_mapping, metadata !24977, metadata !DIExpression()), !dbg !24978
  call void @llvm.dbg.declare(metadata i32* %err, metadata !24979, metadata !DIExpression()), !dbg !24980
  call void @llvm.dbg.declare(metadata i32* %i, metadata !24981, metadata !DIExpression()), !dbg !24982
  %0 = load %struct.mlxsw_sp_port_mapping*, %struct.mlxsw_sp_port_mapping** %port_mapping.addr, align 8, !dbg !24983
  %1 = bitcast %struct.mlxsw_sp_port_mapping* %split_port_mapping to i8*, !dbg !24984
  %2 = bitcast %struct.mlxsw_sp_port_mapping* %0 to i8*, !dbg !24984
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 3, i1 false), !dbg !24984
  %3 = load i32, i32* %count.addr, align 4, !dbg !24985
  %width = getelementptr inbounds %struct.mlxsw_sp_port_mapping, %struct.mlxsw_sp_port_mapping* %split_port_mapping, i32 0, i32 1, !dbg !24986
  %4 = load i8, i8* %width, align 1, !dbg !24987
  %conv = zext i8 %4 to i32, !dbg !24987
  %div = udiv i32 %conv, %3, !dbg !24987
  %conv1 = trunc i32 %div to i8, !dbg !24987
  store i8 %conv1, i8* %width, align 1, !dbg !24987
  store i32 0, i32* %i, align 4, !dbg !24988
  br label %for.cond, !dbg !24990

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !dbg !24991
  %6 = load i32, i32* %count.addr, align 4, !dbg !24993
  %cmp = icmp ult i32 %5, %6, !dbg !24994
  br i1 %cmp, label %for.body, label %for.end, !dbg !24995

for.body:                                         ; preds = %for.cond
  %7 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !24996
  %8 = load i8, i8* %base_port.addr, align 1, !dbg !24998
  %conv3 = zext i8 %8 to i32, !dbg !24998
  %9 = load i32, i32* %i, align 4, !dbg !24999
  %10 = load i8, i8* %offset.addr, align 1, !dbg !25000
  %conv4 = zext i8 %10 to i32, !dbg !25000
  %mul = mul i32 %9, %conv4, !dbg !25001
  %add = add i32 %conv3, %mul, !dbg !25002
  %conv5 = trunc i32 %add to i8, !dbg !24998
  %11 = load i8, i8* %base_port.addr, align 1, !dbg !25003
  %call = call i32 @mlxsw_sp_port_create(%struct.mlxsw_sp* %7, i8 zeroext %conv5, i8 zeroext %11, %struct.mlxsw_sp_port_mapping* %split_port_mapping) #9, !dbg !25004
  store i32 %call, i32* %err, align 4, !dbg !25005
  %12 = load i32, i32* %err, align 4, !dbg !25006
  %tobool = icmp ne i32 %12, 0, !dbg !25006
  br i1 %tobool, label %if.then, label %if.end, !dbg !25008

if.then:                                          ; preds = %for.body
  br label %err_port_create, !dbg !25009

if.end:                                           ; preds = %for.body
  %width6 = getelementptr inbounds %struct.mlxsw_sp_port_mapping, %struct.mlxsw_sp_port_mapping* %split_port_mapping, i32 0, i32 1, !dbg !25010
  %13 = load i8, i8* %width6, align 1, !dbg !25010
  %conv7 = zext i8 %13 to i32, !dbg !25011
  %lane = getelementptr inbounds %struct.mlxsw_sp_port_mapping, %struct.mlxsw_sp_port_mapping* %split_port_mapping, i32 0, i32 2, !dbg !25012
  %14 = load i8, i8* %lane, align 1, !dbg !25013
  %conv8 = zext i8 %14 to i32, !dbg !25013
  %add9 = add i32 %conv8, %conv7, !dbg !25013
  %conv10 = trunc i32 %add9 to i8, !dbg !25013
  store i8 %conv10, i8* %lane, align 1, !dbg !25013
  br label %for.inc, !dbg !25014

for.inc:                                          ; preds = %if.end
  %15 = load i32, i32* %i, align 4, !dbg !25015
  %inc = add i32 %15, 1, !dbg !25015
  store i32 %inc, i32* %i, align 4, !dbg !25015
  br label %for.cond, !dbg !25016, !llvm.loop !25017

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !25019
  br label %return, !dbg !25019

err_port_create:                                  ; preds = %if.then
  call void @llvm.dbg.label(metadata !25020), !dbg !25021
  %16 = load i32, i32* %i, align 4, !dbg !25022
  %dec = add i32 %16, -1, !dbg !25022
  store i32 %dec, i32* %i, align 4, !dbg !25022
  br label %for.cond11, !dbg !25024

for.cond11:                                       ; preds = %for.inc28, %err_port_create
  %17 = load i32, i32* %i, align 4, !dbg !25025
  %cmp12 = icmp sge i32 %17, 0, !dbg !25027
  br i1 %cmp12, label %for.body14, label %for.end30, !dbg !25028

for.body14:                                       ; preds = %for.cond11
  %18 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !25029
  %19 = load i8, i8* %base_port.addr, align 1, !dbg !25031
  %conv15 = zext i8 %19 to i32, !dbg !25031
  %20 = load i32, i32* %i, align 4, !dbg !25032
  %21 = load i8, i8* %offset.addr, align 1, !dbg !25033
  %conv16 = zext i8 %21 to i32, !dbg !25033
  %mul17 = mul i32 %20, %conv16, !dbg !25034
  %add18 = add i32 %conv15, %mul17, !dbg !25035
  %conv19 = trunc i32 %add18 to i8, !dbg !25031
  %call20 = call zeroext i1 @mlxsw_sp_port_created(%struct.mlxsw_sp* %18, i8 zeroext %conv19) #9, !dbg !25036
  br i1 %call20, label %if.then21, label %if.end27, !dbg !25037

if.then21:                                        ; preds = %for.body14
  %22 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !25038
  %23 = load i8, i8* %base_port.addr, align 1, !dbg !25039
  %conv22 = zext i8 %23 to i32, !dbg !25039
  %24 = load i32, i32* %i, align 4, !dbg !25040
  %25 = load i8, i8* %offset.addr, align 1, !dbg !25041
  %conv23 = zext i8 %25 to i32, !dbg !25041
  %mul24 = mul i32 %24, %conv23, !dbg !25042
  %add25 = add i32 %conv22, %mul24, !dbg !25043
  %conv26 = trunc i32 %add25 to i8, !dbg !25039
  call void @mlxsw_sp_port_remove(%struct.mlxsw_sp* %22, i8 zeroext %conv26) #9, !dbg !25044
  br label %if.end27, !dbg !25044

if.end27:                                         ; preds = %if.then21, %for.body14
  br label %for.inc28, !dbg !25045

for.inc28:                                        ; preds = %if.end27
  %26 = load i32, i32* %i, align 4, !dbg !25046
  %dec29 = add i32 %26, -1, !dbg !25046
  store i32 %dec29, i32* %i, align 4, !dbg !25046
  br label %for.cond11, !dbg !25047, !llvm.loop !25048

for.end30:                                        ; preds = %for.cond11
  %27 = load i32, i32* %err, align 4, !dbg !25050
  store i32 %27, i32* %retval, align 4, !dbg !25051
  br label %return, !dbg !25051

return:                                           ; preds = %for.end30, %for.end
  %28 = load i32, i32* %retval, align 4, !dbg !25052
  ret i32 %28, !dbg !25052
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_port_unsplit_create(%struct.mlxsw_sp* %mlxsw_sp, i8 zeroext %base_port, i32 %count, i8 zeroext %offset) #0 !dbg !25053 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %base_port.addr = alloca i8, align 1
  %count.addr = alloca i32, align 4
  %offset.addr = alloca i8, align 1
  %port_mapping = alloca %struct.mlxsw_sp_port_mapping*, align 8
  %i = alloca i32, align 4
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !25056, metadata !DIExpression()), !dbg !25057
  store i8 %base_port, i8* %base_port.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %base_port.addr, metadata !25058, metadata !DIExpression()), !dbg !25059
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !25060, metadata !DIExpression()), !dbg !25061
  store i8 %offset, i8* %offset.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %offset.addr, metadata !25062, metadata !DIExpression()), !dbg !25063
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp_port_mapping** %port_mapping, metadata !25064, metadata !DIExpression()), !dbg !25065
  call void @llvm.dbg.declare(metadata i32* %i, metadata !25066, metadata !DIExpression()), !dbg !25067
  store i32 0, i32* %i, align 4, !dbg !25068
  br label %for.cond, !dbg !25070

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !25071
  %1 = load i32, i32* %count.addr, align 4, !dbg !25073
  %2 = load i8, i8* %offset.addr, align 1, !dbg !25074
  %conv = zext i8 %2 to i32, !dbg !25074
  %mul = mul i32 %1, %conv, !dbg !25075
  %cmp = icmp ult i32 %0, %mul, !dbg !25076
  br i1 %cmp, label %for.body, label %for.end, !dbg !25077

for.body:                                         ; preds = %for.cond
  %3 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !25078
  %port_mapping2 = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %3, i32 0, i32 6, !dbg !25080
  %4 = load %struct.mlxsw_sp_port_mapping**, %struct.mlxsw_sp_port_mapping*** %port_mapping2, align 8, !dbg !25080
  %5 = load i8, i8* %base_port.addr, align 1, !dbg !25081
  %conv3 = zext i8 %5 to i32, !dbg !25081
  %6 = load i32, i32* %i, align 4, !dbg !25082
  %add = add i32 %conv3, %6, !dbg !25083
  %idxprom = sext i32 %add to i64, !dbg !25078
  %arrayidx = getelementptr %struct.mlxsw_sp_port_mapping*, %struct.mlxsw_sp_port_mapping** %4, i64 %idxprom, !dbg !25078
  %7 = load %struct.mlxsw_sp_port_mapping*, %struct.mlxsw_sp_port_mapping** %arrayidx, align 8, !dbg !25078
  store %struct.mlxsw_sp_port_mapping* %7, %struct.mlxsw_sp_port_mapping** %port_mapping, align 8, !dbg !25084
  %8 = load %struct.mlxsw_sp_port_mapping*, %struct.mlxsw_sp_port_mapping** %port_mapping, align 8, !dbg !25085
  %tobool = icmp ne %struct.mlxsw_sp_port_mapping* %8, null, !dbg !25085
  br i1 %tobool, label %if.end, label %if.then, !dbg !25087

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !25088

if.end:                                           ; preds = %for.body
  %9 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !25089
  %10 = load i8, i8* %base_port.addr, align 1, !dbg !25090
  %conv4 = zext i8 %10 to i32, !dbg !25090
  %11 = load i32, i32* %i, align 4, !dbg !25091
  %add5 = add i32 %conv4, %11, !dbg !25092
  %conv6 = trunc i32 %add5 to i8, !dbg !25090
  %12 = load %struct.mlxsw_sp_port_mapping*, %struct.mlxsw_sp_port_mapping** %port_mapping, align 8, !dbg !25093
  %call = call i32 @mlxsw_sp_port_create(%struct.mlxsw_sp* %9, i8 zeroext %conv6, i8 zeroext 0, %struct.mlxsw_sp_port_mapping* %12) #9, !dbg !25094
  br label %for.inc, !dbg !25095

for.inc:                                          ; preds = %if.end, %if.then
  %13 = load i32, i32* %i, align 4, !dbg !25096
  %inc = add i32 %13, 1, !dbg !25096
  store i32 %inc, i32* %i, align 4, !dbg !25096
  br label %for.cond, !dbg !25097, !llvm.loop !25098

for.end:                                          ; preds = %for.cond
  ret void, !dbg !25100
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp2_resources_kvd_register(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !25101 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %devlink = alloca %struct.devlink*, align 8
  %kvd_size_params = alloca %struct.devlink_resource_size_params, align 8
  %kvd_size = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !25102, metadata !DIExpression()), !dbg !25103
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink, metadata !25104, metadata !DIExpression()), !dbg !25105
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !25106
  %1 = bitcast %struct.mlxsw_core* %0 to i8*, !dbg !25106
  %call = call %struct.devlink* @priv_to_devlink(i8* %1) #9, !dbg !25107
  store %struct.devlink* %call, %struct.devlink** %devlink, align 8, !dbg !25105
  call void @llvm.dbg.declare(metadata %struct.devlink_resource_size_params* %kvd_size_params, metadata !25108, metadata !DIExpression()), !dbg !25115
  call void @llvm.dbg.declare(metadata i32* %kvd_size, metadata !25116, metadata !DIExpression()), !dbg !25117
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !25118
  %call1 = call zeroext i1 @mlxsw_core_res_valid(%struct.mlxsw_core* %2, i32 0) #9, !dbg !25118
  br i1 %call1, label %if.end, label %if.then, !dbg !25120

if.then:                                          ; preds = %entry
  store i32 -5, i32* %retval, align 4, !dbg !25121
  br label %return, !dbg !25121

if.end:                                           ; preds = %entry
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !25122
  %call2 = call i64 @mlxsw_core_res_get(%struct.mlxsw_core* %3, i32 0) #9, !dbg !25122
  %conv = trunc i64 %call2 to i32, !dbg !25122
  store i32 %conv, i32* %kvd_size, align 4, !dbg !25123
  %4 = load i32, i32* %kvd_size, align 4, !dbg !25124
  %conv3 = zext i32 %4 to i64, !dbg !25124
  %5 = load i32, i32* %kvd_size, align 4, !dbg !25125
  %conv4 = zext i32 %5 to i64, !dbg !25125
  call void @devlink_resource_size_params_init(%struct.devlink_resource_size_params* %kvd_size_params, i64 %conv3, i64 %conv4, i64 128, i32 0) #9, !dbg !25126
  %6 = load %struct.devlink*, %struct.devlink** %devlink, align 8, !dbg !25127
  %7 = load i32, i32* %kvd_size, align 4, !dbg !25128
  %conv5 = zext i32 %7 to i64, !dbg !25128
  %call6 = call i32 @devlink_resource_register(%struct.devlink* %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.383, i64 0, i64 0), i64 %conv5, i64 1, i64 0, %struct.devlink_resource_size_params* %kvd_size_params) #9, !dbg !25129
  store i32 %call6, i32* %retval, align 4, !dbg !25130
  br label %return, !dbg !25130

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !25131
  ret i32 %8, !dbg !25131
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_resources_span_register(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !25132 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %devlink = alloca %struct.devlink*, align 8
  %span_size_params = alloca %struct.devlink_resource_size_params, align 8
  %max_span = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !25133, metadata !DIExpression()), !dbg !25134
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink, metadata !25135, metadata !DIExpression()), !dbg !25136
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !25137
  %1 = bitcast %struct.mlxsw_core* %0 to i8*, !dbg !25137
  %call = call %struct.devlink* @priv_to_devlink(i8* %1) #9, !dbg !25138
  store %struct.devlink* %call, %struct.devlink** %devlink, align 8, !dbg !25136
  call void @llvm.dbg.declare(metadata %struct.devlink_resource_size_params* %span_size_params, metadata !25139, metadata !DIExpression()), !dbg !25140
  call void @llvm.dbg.declare(metadata i32* %max_span, metadata !25141, metadata !DIExpression()), !dbg !25142
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !25143
  %call1 = call zeroext i1 @mlxsw_core_res_valid(%struct.mlxsw_core* %2, i32 11) #9, !dbg !25143
  br i1 %call1, label %if.end, label %if.then, !dbg !25145

if.then:                                          ; preds = %entry
  store i32 -5, i32* %retval, align 4, !dbg !25146
  br label %return, !dbg !25146

if.end:                                           ; preds = %entry
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !25147
  %call2 = call i64 @mlxsw_core_res_get(%struct.mlxsw_core* %3, i32 11) #9, !dbg !25147
  %conv = trunc i64 %call2 to i32, !dbg !25147
  store i32 %conv, i32* %max_span, align 4, !dbg !25148
  %4 = load i32, i32* %max_span, align 4, !dbg !25149
  %conv3 = zext i32 %4 to i64, !dbg !25149
  %5 = load i32, i32* %max_span, align 4, !dbg !25150
  %conv4 = zext i32 %5 to i64, !dbg !25150
  call void @devlink_resource_size_params_init(%struct.devlink_resource_size_params* %span_size_params, i64 %conv3, i64 %conv4, i64 1, i32 0) #9, !dbg !25151
  %6 = load %struct.devlink*, %struct.devlink** %devlink, align 8, !dbg !25152
  %7 = load i32, i32* %max_span, align 4, !dbg !25153
  %conv5 = zext i32 %7 to i64, !dbg !25153
  %call6 = call i32 @devlink_resource_register(%struct.devlink* %6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.384, i64 0, i64 0), i64 %conv5, i64 8, i64 0, %struct.devlink_resource_size_params* %span_size_params) #9, !dbg !25154
  store i32 %call6, i32* %retval, align 4, !dbg !25155
  br label %return, !dbg !25155

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !25156
  ret i32 %8, !dbg !25156
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_counter_resources_register(%struct.mlxsw_core*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_policer_resources_register(%struct.mlxsw_core*) #2

; Function Attrs: noredzone
declare dso_local void @devlink_resources_unregister(%struct.devlink*, %struct.devlink_resource*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @devlink_resource_size_params_init(%struct.devlink_resource_size_params* %size_params, i64 %size_min, i64 %size_max, i64 %size_granularity, i32 %unit) #0 !dbg !25157 {
entry:
  %size_params.addr = alloca %struct.devlink_resource_size_params*, align 8
  %size_min.addr = alloca i64, align 8
  %size_max.addr = alloca i64, align 8
  %size_granularity.addr = alloca i64, align 8
  %unit.addr = alloca i32, align 4
  store %struct.devlink_resource_size_params* %size_params, %struct.devlink_resource_size_params** %size_params.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_resource_size_params** %size_params.addr, metadata !25161, metadata !DIExpression()), !dbg !25162
  store i64 %size_min, i64* %size_min.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size_min.addr, metadata !25163, metadata !DIExpression()), !dbg !25164
  store i64 %size_max, i64* %size_max.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size_max.addr, metadata !25165, metadata !DIExpression()), !dbg !25166
  store i64 %size_granularity, i64* %size_granularity.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size_granularity.addr, metadata !25167, metadata !DIExpression()), !dbg !25168
  store i32 %unit, i32* %unit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %unit.addr, metadata !25169, metadata !DIExpression()), !dbg !25170
  %0 = load i64, i64* %size_min.addr, align 8, !dbg !25171
  %1 = load %struct.devlink_resource_size_params*, %struct.devlink_resource_size_params** %size_params.addr, align 8, !dbg !25172
  %size_min1 = getelementptr inbounds %struct.devlink_resource_size_params, %struct.devlink_resource_size_params* %1, i32 0, i32 0, !dbg !25173
  store i64 %0, i64* %size_min1, align 8, !dbg !25174
  %2 = load i64, i64* %size_max.addr, align 8, !dbg !25175
  %3 = load %struct.devlink_resource_size_params*, %struct.devlink_resource_size_params** %size_params.addr, align 8, !dbg !25176
  %size_max2 = getelementptr inbounds %struct.devlink_resource_size_params, %struct.devlink_resource_size_params* %3, i32 0, i32 1, !dbg !25177
  store i64 %2, i64* %size_max2, align 8, !dbg !25178
  %4 = load i64, i64* %size_granularity.addr, align 8, !dbg !25179
  %5 = load %struct.devlink_resource_size_params*, %struct.devlink_resource_size_params** %size_params.addr, align 8, !dbg !25180
  %size_granularity3 = getelementptr inbounds %struct.devlink_resource_size_params, %struct.devlink_resource_size_params* %5, i32 0, i32 2, !dbg !25181
  store i64 %4, i64* %size_granularity3, align 8, !dbg !25182
  %6 = load i32, i32* %unit.addr, align 4, !dbg !25183
  %7 = load %struct.devlink_resource_size_params*, %struct.devlink_resource_size_params** %size_params.addr, align 8, !dbg !25184
  %unit4 = getelementptr inbounds %struct.devlink_resource_size_params, %struct.devlink_resource_size_params* %7, i32 0, i32 3, !dbg !25185
  store i32 %6, i32* %unit4, align 8, !dbg !25186
  ret void, !dbg !25187
}

; Function Attrs: noredzone
declare dso_local i32 @devlink_resource_register(%struct.devlink*, i8*, i64, i64, i64, %struct.devlink_resource_size_params*) #2

; Function Attrs: noredzone
declare dso_local i32 @devlink_params_register(%struct.devlink*, %struct.devlink_param*, i64) #2

; Function Attrs: noredzone
declare dso_local i32 @devlink_param_driverinit_value_set(%struct.devlink*, i32, %union.devlink_param_value* byval(%union.devlink_param_value) align 8) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_params_acl_region_rehash_intrvl_get(%struct.devlink* %devlink, i32 %id, %struct.devlink_param_gset_ctx* %ctx) #0 !dbg !25188 {
entry:
  %devlink.addr = alloca %struct.devlink*, align 8
  %id.addr = alloca i32, align 4
  %ctx.addr = alloca %struct.devlink_param_gset_ctx*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !25189, metadata !DIExpression()), !dbg !25190
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !25191, metadata !DIExpression()), !dbg !25192
  store %struct.devlink_param_gset_ctx* %ctx, %struct.devlink_param_gset_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_param_gset_ctx** %ctx.addr, metadata !25193, metadata !DIExpression()), !dbg !25194
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !25195, metadata !DIExpression()), !dbg !25196
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !25197
  %call = call i8* @devlink_priv(%struct.devlink* %0) #9, !dbg !25198
  %1 = bitcast i8* %call to %struct.mlxsw_core*, !dbg !25198
  store %struct.mlxsw_core* %1, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !25196
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !25199, metadata !DIExpression()), !dbg !25200
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !25201
  %call1 = call i8* @mlxsw_core_driver_priv(%struct.mlxsw_core* %2) #9, !dbg !25202
  %3 = bitcast i8* %call1 to %struct.mlxsw_sp*, !dbg !25202
  store %struct.mlxsw_sp* %3, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25200
  %4 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25203
  %call2 = call i32 @mlxsw_sp_acl_region_rehash_intrvl_get(%struct.mlxsw_sp* %4) #9, !dbg !25204
  %5 = load %struct.devlink_param_gset_ctx*, %struct.devlink_param_gset_ctx** %ctx.addr, align 8, !dbg !25205
  %val = getelementptr inbounds %struct.devlink_param_gset_ctx, %struct.devlink_param_gset_ctx* %5, i32 0, i32 0, !dbg !25206
  %vu32 = bitcast %union.devlink_param_value* %val to i32*, !dbg !25207
  store i32 %call2, i32* %vu32, align 4, !dbg !25208
  ret i32 0, !dbg !25209
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_params_acl_region_rehash_intrvl_set(%struct.devlink* %devlink, i32 %id, %struct.devlink_param_gset_ctx* %ctx) #0 !dbg !25210 {
entry:
  %devlink.addr = alloca %struct.devlink*, align 8
  %id.addr = alloca i32, align 4
  %ctx.addr = alloca %struct.devlink_param_gset_ctx*, align 8
  %mlxsw_core = alloca %struct.mlxsw_core*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !25211, metadata !DIExpression()), !dbg !25212
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !25213, metadata !DIExpression()), !dbg !25214
  store %struct.devlink_param_gset_ctx* %ctx, %struct.devlink_param_gset_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_param_gset_ctx** %ctx.addr, metadata !25215, metadata !DIExpression()), !dbg !25216
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core, metadata !25217, metadata !DIExpression()), !dbg !25218
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !25219
  %call = call i8* @devlink_priv(%struct.devlink* %0) #9, !dbg !25220
  %1 = bitcast i8* %call to %struct.mlxsw_core*, !dbg !25220
  store %struct.mlxsw_core* %1, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !25218
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !25221, metadata !DIExpression()), !dbg !25222
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core, align 8, !dbg !25223
  %call1 = call i8* @mlxsw_core_driver_priv(%struct.mlxsw_core* %2) #9, !dbg !25224
  %3 = bitcast i8* %call1 to %struct.mlxsw_sp*, !dbg !25224
  store %struct.mlxsw_sp* %3, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25222
  %4 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25225
  %5 = load %struct.devlink_param_gset_ctx*, %struct.devlink_param_gset_ctx** %ctx.addr, align 8, !dbg !25226
  %val = getelementptr inbounds %struct.devlink_param_gset_ctx, %struct.devlink_param_gset_ctx* %5, i32 0, i32 0, !dbg !25227
  %vu32 = bitcast %union.devlink_param_value* %val to i32*, !dbg !25228
  %6 = load i32, i32* %vu32, align 4, !dbg !25228
  %call2 = call i32 @mlxsw_sp_acl_region_rehash_intrvl_set(%struct.mlxsw_sp* %4, i32 %6) #9, !dbg !25229
  ret i32 %call2, !dbg !25230
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devlink_priv(%struct.devlink* %devlink) #0 !dbg !25231 {
entry:
  %devlink.addr = alloca %struct.devlink*, align 8
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !25234, metadata !DIExpression()), !dbg !25235
  br label %do.body, !dbg !25236

do.body:                                          ; preds = %entry
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !25237
  %tobool = icmp ne %struct.devlink* %0, null, !dbg !25237
  %lnot = xor i1 %tobool, true, !dbg !25237
  %lnot1 = xor i1 %lnot, true, !dbg !25237
  %lnot2 = xor i1 %lnot1, true, !dbg !25237
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !25237
  %conv = sext i32 %lnot.ext to i64, !dbg !25237
  %tobool3 = icmp ne i64 %conv, 0, !dbg !25237
  br i1 %tobool3, label %if.then, label %if.end, !dbg !25240

if.then:                                          ; preds = %do.body
  br label %do.body4, !dbg !25237

do.body4:                                         ; preds = %if.then
  br label %do.body5, !dbg !25241

do.body5:                                         ; preds = %do.body4
  br label %do.end, !dbg !25243

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !25241

do.body6:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.272, i64 0, i64 0), i32 1352, i32 0, i64 12) #10, !dbg !25245, !srcloc !25247
  br label %do.end7, !dbg !25245

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !25241

do.body8:                                         ; preds = %do.end7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 642) #10, !dbg !25248, !srcloc !25251
  unreachable, !dbg !25252

do.end9:                                          ; No predecessors!
  br label %do.end10, !dbg !25241

do.end10:                                         ; preds = %do.end9
  br label %if.end, !dbg !25241

if.end:                                           ; preds = %do.end10, %do.body
  br label %do.end11, !dbg !25240

do.end11:                                         ; preds = %if.end
  %1 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !25253
  %priv = getelementptr inbounds %struct.devlink, %struct.devlink* %1, i32 0, i32 21, !dbg !25254
  %2 = bitcast [0 x i8]* %priv to i8*, !dbg !25255
  ret i8* %2, !dbg !25256
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_acl_region_rehash_intrvl_get(%struct.mlxsw_sp*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_acl_region_rehash_intrvl_set(%struct.mlxsw_sp*, i32) #2

; Function Attrs: noredzone
declare dso_local void @devlink_params_unregister(%struct.devlink*, %struct.devlink_param*, i64) #2

; Function Attrs: noredzone
declare dso_local i8* @skb_pull(%struct.sk_buff*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp2_init(%struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_bus_info* %mlxsw_bus_info, %struct.netlink_ext_ack* %extack) #0 !dbg !25257 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %mlxsw_bus_info.addr = alloca %struct.mlxsw_bus_info*, align 8
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !25258, metadata !DIExpression()), !dbg !25259
  store %struct.mlxsw_bus_info* %mlxsw_bus_info, %struct.mlxsw_bus_info** %mlxsw_bus_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_bus_info** %mlxsw_bus_info.addr, metadata !25260, metadata !DIExpression()), !dbg !25261
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !25262, metadata !DIExpression()), !dbg !25263
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !25264, metadata !DIExpression()), !dbg !25265
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !25266
  %call = call i8* @mlxsw_core_driver_priv(%struct.mlxsw_core* %0) #9, !dbg !25267
  %1 = bitcast i8* %call to %struct.mlxsw_sp*, !dbg !25267
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25265
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25268
  %kvdl_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %2, i32 0, i32 23, !dbg !25269
  store %struct.mlxsw_sp_kvdl_ops* @mlxsw_sp2_kvdl_ops, %struct.mlxsw_sp_kvdl_ops** %kvdl_ops, align 8, !dbg !25270
  %3 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25271
  %afa_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %3, i32 0, i32 24, !dbg !25272
  store %struct.mlxsw_afa_ops* @mlxsw_sp2_act_afa_ops, %struct.mlxsw_afa_ops** %afa_ops, align 8, !dbg !25273
  %4 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25274
  %afk_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %4, i32 0, i32 25, !dbg !25275
  store %struct.mlxsw_afk_ops* @mlxsw_sp2_afk_ops, %struct.mlxsw_afk_ops** %afk_ops, align 8, !dbg !25276
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25277
  %mr_tcam_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %5, i32 0, i32 26, !dbg !25278
  store %struct.mlxsw_sp_mr_tcam_ops* @mlxsw_sp2_mr_tcam_ops, %struct.mlxsw_sp_mr_tcam_ops** %mr_tcam_ops, align 8, !dbg !25279
  %6 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25280
  %acl_rulei_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %6, i32 0, i32 27, !dbg !25281
  store %struct.mlxsw_sp_acl_rulei_ops* @mlxsw_sp2_acl_rulei_ops, %struct.mlxsw_sp_acl_rulei_ops** %acl_rulei_ops, align 8, !dbg !25282
  %7 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25283
  %acl_tcam_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %7, i32 0, i32 28, !dbg !25284
  store %struct.mlxsw_sp_acl_tcam_ops* @mlxsw_sp2_acl_tcam_ops, %struct.mlxsw_sp_acl_tcam_ops** %acl_tcam_ops, align 8, !dbg !25285
  %8 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25286
  %nve_ops_arr = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %8, i32 0, i32 29, !dbg !25287
  store %struct.mlxsw_sp_nve_ops** getelementptr inbounds ([0 x %struct.mlxsw_sp_nve_ops*], [0 x %struct.mlxsw_sp_nve_ops*]* @mlxsw_sp2_nve_ops_arr, i64 0, i64 0), %struct.mlxsw_sp_nve_ops*** %nve_ops_arr, align 8, !dbg !25288
  %9 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25289
  %mac_mask = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %9, i32 0, i32 4, !dbg !25290
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @mlxsw_sp2_mac_mask, i64 0, i64 0), i8** %mac_mask, align 8, !dbg !25291
  %10 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25292
  %rif_ops_arr = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %10, i32 0, i32 30, !dbg !25293
  store %struct.mlxsw_sp_rif_ops** getelementptr inbounds ([0 x %struct.mlxsw_sp_rif_ops*], [0 x %struct.mlxsw_sp_rif_ops*]* @mlxsw_sp2_rif_ops_arr, i64 0, i64 0), %struct.mlxsw_sp_rif_ops*** %rif_ops_arr, align 8, !dbg !25294
  %11 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25295
  %sb_vals = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %11, i32 0, i32 31, !dbg !25296
  store %struct.mlxsw_sp_sb_vals* @mlxsw_sp2_sb_vals, %struct.mlxsw_sp_sb_vals** %sb_vals, align 8, !dbg !25297
  %12 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25298
  %sb_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %12, i32 0, i32 32, !dbg !25299
  store %struct.mlxsw_sp_sb_ops* @mlxsw_sp2_sb_ops, %struct.mlxsw_sp_sb_ops** %sb_ops, align 8, !dbg !25300
  %13 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25301
  %port_type_speed_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %13, i32 0, i32 33, !dbg !25302
  store %struct.mlxsw_sp_port_type_speed_ops* @mlxsw_sp2_port_type_speed_ops, %struct.mlxsw_sp_port_type_speed_ops** %port_type_speed_ops, align 8, !dbg !25303
  %14 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25304
  %ptp_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %14, i32 0, i32 34, !dbg !25305
  store %struct.mlxsw_sp_ptp_ops* @mlxsw_sp2_ptp_ops, %struct.mlxsw_sp_ptp_ops** %ptp_ops, align 8, !dbg !25306
  %15 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25307
  %span_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %15, i32 0, i32 35, !dbg !25308
  store %struct.mlxsw_sp_span_ops* @mlxsw_sp2_span_ops, %struct.mlxsw_sp_span_ops** %span_ops, align 8, !dbg !25309
  %16 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25310
  %policer_core_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %16, i32 0, i32 36, !dbg !25311
  store %struct.mlxsw_sp_policer_core_ops* @mlxsw_sp2_policer_core_ops, %struct.mlxsw_sp_policer_core_ops** %policer_core_ops, align 8, !dbg !25312
  %17 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25313
  %trap_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %17, i32 0, i32 37, !dbg !25314
  store %struct.mlxsw_sp_trap_ops* @mlxsw_sp2_trap_ops, %struct.mlxsw_sp_trap_ops** %trap_ops, align 8, !dbg !25315
  %18 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25316
  %lowest_shaper_bs = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %18, i32 0, i32 40, !dbg !25317
  store i32 11, i32* %lowest_shaper_bs, align 8, !dbg !25318
  %19 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !25319
  %20 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %mlxsw_bus_info.addr, align 8, !dbg !25320
  %21 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !25321
  %call1 = call i32 @mlxsw_sp_init(%struct.mlxsw_core* %19, %struct.mlxsw_bus_info* %20, %struct.netlink_ext_ack* %21) #9, !dbg !25322
  ret i32 %call1, !dbg !25323
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp1_init(%struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_bus_info* %mlxsw_bus_info, %struct.netlink_ext_ack* %extack) #0 !dbg !25324 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %mlxsw_bus_info.addr = alloca %struct.mlxsw_bus_info*, align 8
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !25325, metadata !DIExpression()), !dbg !25326
  store %struct.mlxsw_bus_info* %mlxsw_bus_info, %struct.mlxsw_bus_info** %mlxsw_bus_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_bus_info** %mlxsw_bus_info.addr, metadata !25327, metadata !DIExpression()), !dbg !25328
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !25329, metadata !DIExpression()), !dbg !25330
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !25331, metadata !DIExpression()), !dbg !25332
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !25333
  %call = call i8* @mlxsw_core_driver_priv(%struct.mlxsw_core* %0) #9, !dbg !25334
  %1 = bitcast i8* %call to %struct.mlxsw_sp*, !dbg !25334
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25332
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25335
  %kvdl_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %2, i32 0, i32 23, !dbg !25336
  store %struct.mlxsw_sp_kvdl_ops* @mlxsw_sp1_kvdl_ops, %struct.mlxsw_sp_kvdl_ops** %kvdl_ops, align 8, !dbg !25337
  %3 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25338
  %afa_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %3, i32 0, i32 24, !dbg !25339
  store %struct.mlxsw_afa_ops* @mlxsw_sp1_act_afa_ops, %struct.mlxsw_afa_ops** %afa_ops, align 8, !dbg !25340
  %4 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25341
  %afk_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %4, i32 0, i32 25, !dbg !25342
  store %struct.mlxsw_afk_ops* @mlxsw_sp1_afk_ops, %struct.mlxsw_afk_ops** %afk_ops, align 8, !dbg !25343
  %5 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25344
  %mr_tcam_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %5, i32 0, i32 26, !dbg !25345
  store %struct.mlxsw_sp_mr_tcam_ops* @mlxsw_sp1_mr_tcam_ops, %struct.mlxsw_sp_mr_tcam_ops** %mr_tcam_ops, align 8, !dbg !25346
  %6 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25347
  %acl_rulei_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %6, i32 0, i32 27, !dbg !25348
  store %struct.mlxsw_sp_acl_rulei_ops* @mlxsw_sp1_acl_rulei_ops, %struct.mlxsw_sp_acl_rulei_ops** %acl_rulei_ops, align 8, !dbg !25349
  %7 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25350
  %acl_tcam_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %7, i32 0, i32 28, !dbg !25351
  store %struct.mlxsw_sp_acl_tcam_ops* @mlxsw_sp1_acl_tcam_ops, %struct.mlxsw_sp_acl_tcam_ops** %acl_tcam_ops, align 8, !dbg !25352
  %8 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25353
  %nve_ops_arr = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %8, i32 0, i32 29, !dbg !25354
  store %struct.mlxsw_sp_nve_ops** getelementptr inbounds ([0 x %struct.mlxsw_sp_nve_ops*], [0 x %struct.mlxsw_sp_nve_ops*]* @mlxsw_sp1_nve_ops_arr, i64 0, i64 0), %struct.mlxsw_sp_nve_ops*** %nve_ops_arr, align 8, !dbg !25355
  %9 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25356
  %mac_mask = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %9, i32 0, i32 4, !dbg !25357
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @mlxsw_sp1_mac_mask, i64 0, i64 0), i8** %mac_mask, align 8, !dbg !25358
  %10 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25359
  %rif_ops_arr = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %10, i32 0, i32 30, !dbg !25360
  store %struct.mlxsw_sp_rif_ops** getelementptr inbounds ([0 x %struct.mlxsw_sp_rif_ops*], [0 x %struct.mlxsw_sp_rif_ops*]* @mlxsw_sp1_rif_ops_arr, i64 0, i64 0), %struct.mlxsw_sp_rif_ops*** %rif_ops_arr, align 8, !dbg !25361
  %11 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25362
  %sb_vals = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %11, i32 0, i32 31, !dbg !25363
  store %struct.mlxsw_sp_sb_vals* @mlxsw_sp1_sb_vals, %struct.mlxsw_sp_sb_vals** %sb_vals, align 8, !dbg !25364
  %12 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25365
  %sb_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %12, i32 0, i32 32, !dbg !25366
  store %struct.mlxsw_sp_sb_ops* @mlxsw_sp1_sb_ops, %struct.mlxsw_sp_sb_ops** %sb_ops, align 8, !dbg !25367
  %13 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25368
  %port_type_speed_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %13, i32 0, i32 33, !dbg !25369
  store %struct.mlxsw_sp_port_type_speed_ops* @mlxsw_sp1_port_type_speed_ops, %struct.mlxsw_sp_port_type_speed_ops** %port_type_speed_ops, align 8, !dbg !25370
  %14 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25371
  %ptp_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %14, i32 0, i32 34, !dbg !25372
  store %struct.mlxsw_sp_ptp_ops* @mlxsw_sp1_ptp_ops, %struct.mlxsw_sp_ptp_ops** %ptp_ops, align 8, !dbg !25373
  %15 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25374
  %span_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %15, i32 0, i32 35, !dbg !25375
  store %struct.mlxsw_sp_span_ops* @mlxsw_sp1_span_ops, %struct.mlxsw_sp_span_ops** %span_ops, align 8, !dbg !25376
  %16 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25377
  %policer_core_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %16, i32 0, i32 36, !dbg !25378
  store %struct.mlxsw_sp_policer_core_ops* @mlxsw_sp1_policer_core_ops, %struct.mlxsw_sp_policer_core_ops** %policer_core_ops, align 8, !dbg !25379
  %17 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25380
  %trap_ops = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %17, i32 0, i32 37, !dbg !25381
  store %struct.mlxsw_sp_trap_ops* @mlxsw_sp1_trap_ops, %struct.mlxsw_sp_trap_ops** %trap_ops, align 8, !dbg !25382
  %18 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25383
  %listeners = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %18, i32 0, i32 38, !dbg !25384
  store %struct.mlxsw_listener* getelementptr inbounds ([2 x %struct.mlxsw_listener], [2 x %struct.mlxsw_listener]* bitcast ([2 x { i16, { %struct.mlxsw_event_listener }, i32, i32, i8, i8, i8 }]* @mlxsw_sp1_listener to [2 x %struct.mlxsw_listener]*), i64 0, i64 0), %struct.mlxsw_listener** %listeners, align 8, !dbg !25385
  %19 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25386
  %listeners_count = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %19, i32 0, i32 39, !dbg !25387
  store i64 2, i64* %listeners_count, align 8, !dbg !25388
  %20 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25389
  %lowest_shaper_bs = getelementptr inbounds %struct.mlxsw_sp, %struct.mlxsw_sp* %20, i32 0, i32 40, !dbg !25390
  store i32 5, i32* %lowest_shaper_bs, align 8, !dbg !25391
  %21 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !25392
  %22 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %mlxsw_bus_info.addr, align 8, !dbg !25393
  %23 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !25394
  %call1 = call i32 @mlxsw_sp_init(%struct.mlxsw_core* %21, %struct.mlxsw_bus_info* %22, %struct.netlink_ext_ack* %23) #9, !dbg !25395
  ret i32 %call1, !dbg !25396
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp1_resources_register(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !25397 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !25398, metadata !DIExpression()), !dbg !25399
  call void @llvm.dbg.declare(metadata i32* %err, metadata !25400, metadata !DIExpression()), !dbg !25401
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !25402
  %call = call i32 @mlxsw_sp1_resources_kvd_register(%struct.mlxsw_core* %0) #9, !dbg !25403
  store i32 %call, i32* %err, align 4, !dbg !25404
  %1 = load i32, i32* %err, align 4, !dbg !25405
  %tobool = icmp ne i32 %1, 0, !dbg !25405
  br i1 %tobool, label %if.then, label %if.end, !dbg !25407

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %err, align 4, !dbg !25408
  store i32 %2, i32* %retval, align 4, !dbg !25409
  br label %return, !dbg !25409

if.end:                                           ; preds = %entry
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !25410
  %call1 = call i32 @mlxsw_sp_resources_span_register(%struct.mlxsw_core* %3) #9, !dbg !25411
  store i32 %call1, i32* %err, align 4, !dbg !25412
  %4 = load i32, i32* %err, align 4, !dbg !25413
  %tobool2 = icmp ne i32 %4, 0, !dbg !25413
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !25415

if.then3:                                         ; preds = %if.end
  br label %err_resources_span_register, !dbg !25416

if.end4:                                          ; preds = %if.end
  %5 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !25417
  %call5 = call i32 @mlxsw_sp_counter_resources_register(%struct.mlxsw_core* %5) #9, !dbg !25418
  store i32 %call5, i32* %err, align 4, !dbg !25419
  %6 = load i32, i32* %err, align 4, !dbg !25420
  %tobool6 = icmp ne i32 %6, 0, !dbg !25420
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !25422

if.then7:                                         ; preds = %if.end4
  br label %err_resources_counter_register, !dbg !25423

if.end8:                                          ; preds = %if.end4
  %7 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !25424
  %call9 = call i32 @mlxsw_sp_policer_resources_register(%struct.mlxsw_core* %7) #9, !dbg !25425
  store i32 %call9, i32* %err, align 4, !dbg !25426
  %8 = load i32, i32* %err, align 4, !dbg !25427
  %tobool10 = icmp ne i32 %8, 0, !dbg !25427
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !25429

if.then11:                                        ; preds = %if.end8
  br label %err_resources_counter_register, !dbg !25430

if.end12:                                         ; preds = %if.end8
  store i32 0, i32* %retval, align 4, !dbg !25431
  br label %return, !dbg !25431

err_resources_counter_register:                   ; preds = %if.then11, %if.then7
  call void @llvm.dbg.label(metadata !25432), !dbg !25433
  br label %err_resources_span_register, !dbg !25431

err_resources_span_register:                      ; preds = %err_resources_counter_register, %if.then3
  call void @llvm.dbg.label(metadata !25434), !dbg !25435
  %9 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !25436
  %10 = bitcast %struct.mlxsw_core* %9 to i8*, !dbg !25436
  %call13 = call %struct.devlink* @priv_to_devlink(i8* %10) #9, !dbg !25437
  call void @devlink_resources_unregister(%struct.devlink* %call13, %struct.devlink_resource* null) #9, !dbg !25438
  %11 = load i32, i32* %err, align 4, !dbg !25439
  store i32 %11, i32* %retval, align 4, !dbg !25440
  br label %return, !dbg !25440

return:                                           ; preds = %err_resources_span_register, %if.end12, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !25441
  ret i32 %12, !dbg !25441
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp_kvd_sizes_get(%struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_config_profile* %profile, i64* %p_single_size, i64* %p_double_size, i64* %p_linear_size) #0 !dbg !25442 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %profile.addr = alloca %struct.mlxsw_config_profile*, align 8
  %p_single_size.addr = alloca i64*, align 8
  %p_double_size.addr = alloca i64*, align 8
  %p_linear_size.addr = alloca i64*, align 8
  %devlink = alloca %struct.devlink*, align 8
  %double_size = alloca i32, align 4
  %err = alloca i32, align 4
  %__x = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !25443, metadata !DIExpression()), !dbg !25444
  store %struct.mlxsw_config_profile* %profile, %struct.mlxsw_config_profile** %profile.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_config_profile** %profile.addr, metadata !25445, metadata !DIExpression()), !dbg !25446
  store i64* %p_single_size, i64** %p_single_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %p_single_size.addr, metadata !25447, metadata !DIExpression()), !dbg !25448
  store i64* %p_double_size, i64** %p_double_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %p_double_size.addr, metadata !25449, metadata !DIExpression()), !dbg !25450
  store i64* %p_linear_size, i64** %p_linear_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %p_linear_size.addr, metadata !25451, metadata !DIExpression()), !dbg !25452
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink, metadata !25453, metadata !DIExpression()), !dbg !25454
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !25455
  %1 = bitcast %struct.mlxsw_core* %0 to i8*, !dbg !25455
  %call = call %struct.devlink* @priv_to_devlink(i8* %1) #9, !dbg !25456
  store %struct.devlink* %call, %struct.devlink** %devlink, align 8, !dbg !25454
  call void @llvm.dbg.declare(metadata i32* %double_size, metadata !25457, metadata !DIExpression()), !dbg !25458
  call void @llvm.dbg.declare(metadata i32* %err, metadata !25459, metadata !DIExpression()), !dbg !25460
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !25461
  %call1 = call zeroext i1 @mlxsw_core_res_valid(%struct.mlxsw_core* %2, i32 1) #9, !dbg !25461
  br i1 %call1, label %lor.lhs.false, label %if.then, !dbg !25463

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !25464
  %call2 = call zeroext i1 @mlxsw_core_res_valid(%struct.mlxsw_core* %3, i32 2) #9, !dbg !25464
  br i1 %call2, label %if.end, label %if.then, !dbg !25465

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -5, i32* %retval, align 4, !dbg !25466
  br label %return, !dbg !25466

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.devlink*, %struct.devlink** %devlink, align 8, !dbg !25467
  %5 = load i64*, i64** %p_linear_size.addr, align 8, !dbg !25468
  %call3 = call i32 @devlink_resource_size_get(%struct.devlink* %4, i64 2, i64* %5) #9, !dbg !25469
  store i32 %call3, i32* %err, align 4, !dbg !25470
  %6 = load i32, i32* %err, align 4, !dbg !25471
  %tobool = icmp ne i32 %6, 0, !dbg !25471
  br i1 %tobool, label %if.then4, label %if.end5, !dbg !25473

if.then4:                                         ; preds = %if.end
  %7 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !25474
  %kvd_linear_size = getelementptr inbounds %struct.mlxsw_config_profile, %struct.mlxsw_config_profile* %7, i32 0, i32 19, !dbg !25475
  %8 = load i32, i32* %kvd_linear_size, align 4, !dbg !25475
  %conv = zext i32 %8 to i64, !dbg !25474
  %9 = load i64*, i64** %p_linear_size.addr, align 8, !dbg !25476
  store i64 %conv, i64* %9, align 8, !dbg !25477
  br label %if.end5, !dbg !25478

if.end5:                                          ; preds = %if.then4, %if.end
  %10 = load %struct.devlink*, %struct.devlink** %devlink, align 8, !dbg !25479
  %11 = load i64*, i64** %p_double_size.addr, align 8, !dbg !25480
  %call6 = call i32 @devlink_resource_size_get(%struct.devlink* %10, i64 4, i64* %11) #9, !dbg !25481
  store i32 %call6, i32* %err, align 4, !dbg !25482
  %12 = load i32, i32* %err, align 4, !dbg !25483
  %tobool7 = icmp ne i32 %12, 0, !dbg !25483
  br i1 %tobool7, label %if.then8, label %if.end17, !dbg !25485

if.then8:                                         ; preds = %if.end5
  %13 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !25486
  %call9 = call i64 @mlxsw_core_res_get(%struct.mlxsw_core* %13, i32 0) #9, !dbg !25486
  %14 = load i64*, i64** %p_linear_size.addr, align 8, !dbg !25488
  %15 = load i64, i64* %14, align 8, !dbg !25489
  %sub = sub i64 %call9, %15, !dbg !25490
  %conv10 = trunc i64 %sub to i32, !dbg !25486
  store i32 %conv10, i32* %double_size, align 4, !dbg !25491
  %16 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !25492
  %kvd_hash_double_parts = getelementptr inbounds %struct.mlxsw_config_profile, %struct.mlxsw_config_profile* %16, i32 0, i32 21, !dbg !25493
  %17 = load i8, i8* %kvd_hash_double_parts, align 1, !dbg !25493
  %conv11 = zext i8 %17 to i32, !dbg !25492
  %18 = load i32, i32* %double_size, align 4, !dbg !25494
  %mul = mul i32 %18, %conv11, !dbg !25494
  store i32 %mul, i32* %double_size, align 4, !dbg !25494
  %19 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !25495
  %kvd_hash_double_parts12 = getelementptr inbounds %struct.mlxsw_config_profile, %struct.mlxsw_config_profile* %19, i32 0, i32 21, !dbg !25496
  %20 = load i8, i8* %kvd_hash_double_parts12, align 1, !dbg !25496
  %conv13 = zext i8 %20 to i32, !dbg !25495
  %21 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !25497
  %kvd_hash_single_parts = getelementptr inbounds %struct.mlxsw_config_profile, %struct.mlxsw_config_profile* %21, i32 0, i32 20, !dbg !25498
  %22 = load i8, i8* %kvd_hash_single_parts, align 4, !dbg !25498
  %conv14 = zext i8 %22 to i32, !dbg !25497
  %add = add i32 %conv13, %conv14, !dbg !25499
  %23 = load i32, i32* %double_size, align 4, !dbg !25500
  %div = udiv i32 %23, %add, !dbg !25500
  store i32 %div, i32* %double_size, align 4, !dbg !25500
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !25501, metadata !DIExpression()), !dbg !25503
  %24 = load i32, i32* %double_size, align 4, !dbg !25503
  store i32 %24, i32* %__x, align 4, !dbg !25503
  %25 = load i32, i32* %__x, align 4, !dbg !25503
  %26 = load i32, i32* %__x, align 4, !dbg !25503
  %rem = urem i32 %26, 128, !dbg !25503
  %sub15 = sub i32 %25, %rem, !dbg !25503
  store i32 %sub15, i32* %tmp, align 4, !dbg !25503
  %27 = load i32, i32* %tmp, align 4, !dbg !25503
  %conv16 = zext i32 %27 to i64, !dbg !25504
  %28 = load i64*, i64** %p_double_size.addr, align 8, !dbg !25505
  store i64 %conv16, i64* %28, align 8, !dbg !25506
  br label %if.end17, !dbg !25507

if.end17:                                         ; preds = %if.then8, %if.end5
  %29 = load %struct.devlink*, %struct.devlink** %devlink, align 8, !dbg !25508
  %30 = load i64*, i64** %p_single_size.addr, align 8, !dbg !25509
  %call18 = call i32 @devlink_resource_size_get(%struct.devlink* %29, i64 3, i64* %30) #9, !dbg !25510
  store i32 %call18, i32* %err, align 4, !dbg !25511
  %31 = load i32, i32* %err, align 4, !dbg !25512
  %tobool19 = icmp ne i32 %31, 0, !dbg !25512
  br i1 %tobool19, label %if.then20, label %if.end24, !dbg !25514

if.then20:                                        ; preds = %if.end17
  %32 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !25515
  %call21 = call i64 @mlxsw_core_res_get(%struct.mlxsw_core* %32, i32 0) #9, !dbg !25515
  %33 = load i64*, i64** %p_double_size.addr, align 8, !dbg !25516
  %34 = load i64, i64* %33, align 8, !dbg !25517
  %sub22 = sub i64 %call21, %34, !dbg !25518
  %35 = load i64*, i64** %p_linear_size.addr, align 8, !dbg !25519
  %36 = load i64, i64* %35, align 8, !dbg !25520
  %sub23 = sub i64 %sub22, %36, !dbg !25521
  %37 = load i64*, i64** %p_single_size.addr, align 8, !dbg !25522
  store i64 %sub23, i64* %37, align 8, !dbg !25523
  br label %if.end24, !dbg !25524

if.end24:                                         ; preds = %if.then20, %if.end17
  %38 = load i64*, i64** %p_single_size.addr, align 8, !dbg !25525
  %39 = load i64, i64* %38, align 8, !dbg !25527
  %40 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !25528
  %call25 = call i64 @mlxsw_core_res_get(%struct.mlxsw_core* %40, i32 1) #9, !dbg !25528
  %cmp = icmp ult i64 %39, %call25, !dbg !25529
  br i1 %cmp, label %if.then35, label %lor.lhs.false27, !dbg !25530

lor.lhs.false27:                                  ; preds = %if.end24
  %41 = load i64*, i64** %p_double_size.addr, align 8, !dbg !25531
  %42 = load i64, i64* %41, align 8, !dbg !25532
  %43 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !25533
  %call28 = call i64 @mlxsw_core_res_get(%struct.mlxsw_core* %43, i32 2) #9, !dbg !25533
  %cmp29 = icmp ult i64 %42, %call28, !dbg !25534
  br i1 %cmp29, label %if.then35, label %lor.lhs.false31, !dbg !25535

lor.lhs.false31:                                  ; preds = %lor.lhs.false27
  %44 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !25536
  %call32 = call i64 @mlxsw_core_res_get(%struct.mlxsw_core* %44, i32 0) #9, !dbg !25536
  %45 = load i64*, i64** %p_linear_size.addr, align 8, !dbg !25537
  %46 = load i64, i64* %45, align 8, !dbg !25538
  %cmp33 = icmp ult i64 %call32, %46, !dbg !25539
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !25540

if.then35:                                        ; preds = %lor.lhs.false31, %lor.lhs.false27, %if.end24
  store i32 -5, i32* %retval, align 4, !dbg !25541
  br label %return, !dbg !25541

if.end36:                                         ; preds = %lor.lhs.false31
  store i32 0, i32* %retval, align 4, !dbg !25542
  br label %return, !dbg !25542

return:                                           ; preds = %if.end36, %if.then35, %if.then
  %47 = load i32, i32* %retval, align 4, !dbg !25543
  ret i32 %47, !dbg !25543
}

; Function Attrs: noredzone
declare dso_local %struct.mlxsw_sp_ptp_clock* @mlxsw_sp1_ptp_clock_init(%struct.mlxsw_sp*, %struct.device*) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp1_ptp_clock_fini(%struct.mlxsw_sp_ptp_clock*) #2

; Function Attrs: noredzone
declare dso_local %struct.mlxsw_sp_ptp_state* @mlxsw_sp1_ptp_init(%struct.mlxsw_sp*) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp1_ptp_fini(%struct.mlxsw_sp_ptp_state*) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp1_ptp_receive(%struct.mlxsw_sp*, %struct.sk_buff*, i8 zeroext) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp1_ptp_transmitted(%struct.mlxsw_sp*, %struct.sk_buff*, i8 zeroext) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp1_ptp_hwtstamp_get(%struct.mlxsw_sp_port*, %struct.hwtstamp_config*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp1_ptp_hwtstamp_set(%struct.mlxsw_sp_port*, %struct.hwtstamp_config*) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp1_ptp_shaper_work(%struct.work_struct*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp1_ptp_get_ts_info(%struct.mlxsw_sp*, %struct.ethtool_ts_info*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp1_get_stats_count() #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp1_get_stats_strings(i8**) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp1_get_stats(%struct.mlxsw_sp_port*, i64*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp1_ptp_egr_fifo_event_func(%struct.mlxsw_reg_info* %reg, i8* %mtpptr_pl, i8* %priv) #0 !dbg !25544 {
entry:
  %reg.addr = alloca %struct.mlxsw_reg_info*, align 8
  %mtpptr_pl.addr = alloca i8*, align 8
  %priv.addr = alloca i8*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  store %struct.mlxsw_reg_info* %reg, %struct.mlxsw_reg_info** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_reg_info** %reg.addr, metadata !25545, metadata !DIExpression()), !dbg !25546
  store i8* %mtpptr_pl, i8** %mtpptr_pl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mtpptr_pl.addr, metadata !25547, metadata !DIExpression()), !dbg !25548
  store i8* %priv, i8** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %priv.addr, metadata !25549, metadata !DIExpression()), !dbg !25550
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !25551, metadata !DIExpression()), !dbg !25552
  %0 = load i8*, i8** %priv.addr, align 8, !dbg !25553
  %1 = bitcast i8* %0 to %struct.mlxsw_sp*, !dbg !25553
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25552
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25554
  %3 = load i8*, i8** %mtpptr_pl.addr, align 8, !dbg !25555
  call void @mlxsw_sp1_ptp_fifo_event_func(%struct.mlxsw_sp* %2, i8* %3, i1 zeroext false) #9, !dbg !25556
  ret void, !dbg !25557
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp1_ptp_ing_fifo_event_func(%struct.mlxsw_reg_info* %reg, i8* %mtpptr_pl, i8* %priv) #0 !dbg !25558 {
entry:
  %reg.addr = alloca %struct.mlxsw_reg_info*, align 8
  %mtpptr_pl.addr = alloca i8*, align 8
  %priv.addr = alloca i8*, align 8
  %mlxsw_sp = alloca %struct.mlxsw_sp*, align 8
  store %struct.mlxsw_reg_info* %reg, %struct.mlxsw_reg_info** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_reg_info** %reg.addr, metadata !25559, metadata !DIExpression()), !dbg !25560
  store i8* %mtpptr_pl, i8** %mtpptr_pl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mtpptr_pl.addr, metadata !25561, metadata !DIExpression()), !dbg !25562
  store i8* %priv, i8** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %priv.addr, metadata !25563, metadata !DIExpression()), !dbg !25564
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp, metadata !25565, metadata !DIExpression()), !dbg !25566
  %0 = load i8*, i8** %priv.addr, align 8, !dbg !25567
  %1 = bitcast i8* %0 to %struct.mlxsw_sp*, !dbg !25567
  store %struct.mlxsw_sp* %1, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25566
  %2 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp, align 8, !dbg !25568
  %3 = load i8*, i8** %mtpptr_pl.addr, align 8, !dbg !25569
  call void @mlxsw_sp1_ptp_fifo_event_func(%struct.mlxsw_sp* %2, i8* %3, i1 zeroext true) #9, !dbg !25570
  ret void, !dbg !25571
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp1_ptp_fifo_event_func(%struct.mlxsw_sp* %mlxsw_sp, i8* %mtpptr_pl, i1 zeroext %ingress) #0 !dbg !25572 {
entry:
  %mlxsw_sp.addr = alloca %struct.mlxsw_sp*, align 8
  %mtpptr_pl.addr = alloca i8*, align 8
  %ingress.addr = alloca i8, align 1
  %local_port = alloca i8, align 1
  %num_rec = alloca i8, align 1
  %i = alloca i32, align 4
  %domain_number = alloca i8, align 1
  %message_type = alloca i8, align 1
  %sequence_id = alloca i16, align 2
  %timestamp = alloca i64, align 8
  store %struct.mlxsw_sp* %mlxsw_sp, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_sp** %mlxsw_sp.addr, metadata !25575, metadata !DIExpression()), !dbg !25576
  store i8* %mtpptr_pl, i8** %mtpptr_pl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mtpptr_pl.addr, metadata !25577, metadata !DIExpression()), !dbg !25578
  %frombool = zext i1 %ingress to i8
  store i8 %frombool, i8* %ingress.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ingress.addr, metadata !25579, metadata !DIExpression()), !dbg !25580
  call void @llvm.dbg.declare(metadata i8* %local_port, metadata !25581, metadata !DIExpression()), !dbg !25582
  call void @llvm.dbg.declare(metadata i8* %num_rec, metadata !25583, metadata !DIExpression()), !dbg !25584
  call void @llvm.dbg.declare(metadata i32* %i, metadata !25585, metadata !DIExpression()), !dbg !25586
  %0 = load i8*, i8** %mtpptr_pl.addr, align 8, !dbg !25587
  %call = call i32 @mlxsw_reg_mtpptr_local_port_get(i8* %0) #9, !dbg !25588
  %conv = trunc i32 %call to i8, !dbg !25588
  store i8 %conv, i8* %local_port, align 1, !dbg !25589
  %1 = load i8*, i8** %mtpptr_pl.addr, align 8, !dbg !25590
  %call1 = call i32 @mlxsw_reg_mtpptr_num_rec_get(i8* %1) #9, !dbg !25591
  %conv2 = trunc i32 %call1 to i8, !dbg !25591
  store i8 %conv2, i8* %num_rec, align 1, !dbg !25592
  store i32 0, i32* %i, align 4, !dbg !25593
  br label %for.cond, !dbg !25595

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !25596
  %3 = load i8, i8* %num_rec, align 1, !dbg !25598
  %conv3 = zext i8 %3 to i32, !dbg !25598
  %cmp = icmp slt i32 %2, %conv3, !dbg !25599
  br i1 %cmp, label %for.body, label %for.end, !dbg !25600

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8* %domain_number, metadata !25601, metadata !DIExpression()), !dbg !25603
  call void @llvm.dbg.declare(metadata i8* %message_type, metadata !25604, metadata !DIExpression()), !dbg !25605
  call void @llvm.dbg.declare(metadata i16* %sequence_id, metadata !25606, metadata !DIExpression()), !dbg !25607
  call void @llvm.dbg.declare(metadata i64* %timestamp, metadata !25608, metadata !DIExpression()), !dbg !25609
  %4 = load i8*, i8** %mtpptr_pl.addr, align 8, !dbg !25610
  %5 = load i32, i32* %i, align 4, !dbg !25611
  call void @mlxsw_reg_mtpptr_unpack(i8* %4, i32 %5, i8* %message_type, i8* %domain_number, i16* %sequence_id, i64* %timestamp) #9, !dbg !25612
  %6 = load %struct.mlxsw_sp*, %struct.mlxsw_sp** %mlxsw_sp.addr, align 8, !dbg !25613
  %7 = load i8, i8* %ingress.addr, align 1, !dbg !25614
  %tobool = trunc i8 %7 to i1, !dbg !25614
  %8 = load i8, i8* %local_port, align 1, !dbg !25615
  %9 = load i8, i8* %message_type, align 1, !dbg !25616
  %10 = load i8, i8* %domain_number, align 1, !dbg !25617
  %11 = load i16, i16* %sequence_id, align 2, !dbg !25618
  %12 = load i64, i64* %timestamp, align 8, !dbg !25619
  call void @mlxsw_sp1_ptp_got_timestamp(%struct.mlxsw_sp* %6, i1 zeroext %tobool, i8 zeroext %8, i8 zeroext %9, i8 zeroext %10, i16 zeroext %11, i64 %12) #9, !dbg !25620
  br label %for.inc, !dbg !25621

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !dbg !25622
  %inc = add i32 %13, 1, !dbg !25622
  store i32 %inc, i32* %i, align 4, !dbg !25622
  br label %for.cond, !dbg !25623, !llvm.loop !25624

for.end:                                          ; preds = %for.cond
  ret void, !dbg !25626
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_mtpptr_local_port_get(i8* %buf) #0 !dbg !25627 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !25628, metadata !DIExpression()), !dbg !25629
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !25629
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mtpptr_local_port_item to %struct.mlxsw_item*), i16 zeroext 0) #9, !dbg !25629
  ret i32 %call, !dbg !25629
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_mtpptr_num_rec_get(i8* %buf) #0 !dbg !25630 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !25631, metadata !DIExpression()), !dbg !25632
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !25632
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mtpptr_num_rec_item to %struct.mlxsw_item*), i16 zeroext 0) #9, !dbg !25632
  ret i32 %call, !dbg !25632
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_mtpptr_unpack(i8* %payload, i32 %rec, i8* %p_message_type, i8* %p_domain_number, i16* %p_sequence_id, i64* %p_timestamp) #0 !dbg !25633 {
entry:
  %payload.addr = alloca i8*, align 8
  %rec.addr = alloca i32, align 4
  %p_message_type.addr = alloca i8*, align 8
  %p_domain_number.addr = alloca i8*, align 8
  %p_sequence_id.addr = alloca i16*, align 8
  %p_timestamp.addr = alloca i64*, align 8
  %timestamp_high = alloca i32, align 4
  %timestamp_low = alloca i32, align 4
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !25636, metadata !DIExpression()), !dbg !25637
  store i32 %rec, i32* %rec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rec.addr, metadata !25638, metadata !DIExpression()), !dbg !25639
  store i8* %p_message_type, i8** %p_message_type.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p_message_type.addr, metadata !25640, metadata !DIExpression()), !dbg !25641
  store i8* %p_domain_number, i8** %p_domain_number.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p_domain_number.addr, metadata !25642, metadata !DIExpression()), !dbg !25643
  store i16* %p_sequence_id, i16** %p_sequence_id.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %p_sequence_id.addr, metadata !25644, metadata !DIExpression()), !dbg !25645
  store i64* %p_timestamp, i64** %p_timestamp.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %p_timestamp.addr, metadata !25646, metadata !DIExpression()), !dbg !25647
  call void @llvm.dbg.declare(metadata i32* %timestamp_high, metadata !25648, metadata !DIExpression()), !dbg !25649
  call void @llvm.dbg.declare(metadata i32* %timestamp_low, metadata !25650, metadata !DIExpression()), !dbg !25651
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !25652
  %1 = load i32, i32* %rec.addr, align 4, !dbg !25653
  %conv = trunc i32 %1 to i16, !dbg !25653
  %call = call i32 @mlxsw_reg_mtpptr_rec_message_type_get(i8* %0, i16 zeroext %conv) #9, !dbg !25654
  %conv1 = trunc i32 %call to i8, !dbg !25654
  %2 = load i8*, i8** %p_message_type.addr, align 8, !dbg !25655
  store i8 %conv1, i8* %2, align 1, !dbg !25656
  %3 = load i8*, i8** %payload.addr, align 8, !dbg !25657
  %4 = load i32, i32* %rec.addr, align 4, !dbg !25658
  %conv2 = trunc i32 %4 to i16, !dbg !25658
  %call3 = call i32 @mlxsw_reg_mtpptr_rec_domain_number_get(i8* %3, i16 zeroext %conv2) #9, !dbg !25659
  %conv4 = trunc i32 %call3 to i8, !dbg !25659
  %5 = load i8*, i8** %p_domain_number.addr, align 8, !dbg !25660
  store i8 %conv4, i8* %5, align 1, !dbg !25661
  %6 = load i8*, i8** %payload.addr, align 8, !dbg !25662
  %7 = load i32, i32* %rec.addr, align 4, !dbg !25663
  %conv5 = trunc i32 %7 to i16, !dbg !25663
  %call6 = call i32 @mlxsw_reg_mtpptr_rec_sequence_id_get(i8* %6, i16 zeroext %conv5) #9, !dbg !25664
  %conv7 = trunc i32 %call6 to i16, !dbg !25664
  %8 = load i16*, i16** %p_sequence_id.addr, align 8, !dbg !25665
  store i16 %conv7, i16* %8, align 2, !dbg !25666
  %9 = load i8*, i8** %payload.addr, align 8, !dbg !25667
  %10 = load i32, i32* %rec.addr, align 4, !dbg !25668
  %conv8 = trunc i32 %10 to i16, !dbg !25668
  %call9 = call i32 @mlxsw_reg_mtpptr_rec_timestamp_high_get(i8* %9, i16 zeroext %conv8) #9, !dbg !25669
  store i32 %call9, i32* %timestamp_high, align 4, !dbg !25670
  %11 = load i8*, i8** %payload.addr, align 8, !dbg !25671
  %12 = load i32, i32* %rec.addr, align 4, !dbg !25672
  %conv10 = trunc i32 %12 to i16, !dbg !25672
  %call11 = call i32 @mlxsw_reg_mtpptr_rec_timestamp_low_get(i8* %11, i16 zeroext %conv10) #9, !dbg !25673
  store i32 %call11, i32* %timestamp_low, align 4, !dbg !25674
  %13 = load i32, i32* %timestamp_high, align 4, !dbg !25675
  %conv12 = zext i32 %13 to i64, !dbg !25676
  %shl = shl i64 %conv12, 32, !dbg !25677
  %14 = load i32, i32* %timestamp_low, align 4, !dbg !25678
  %conv13 = zext i32 %14 to i64, !dbg !25678
  %or = or i64 %shl, %conv13, !dbg !25679
  %15 = load i64*, i64** %p_timestamp.addr, align 8, !dbg !25680
  store i64 %or, i64* %15, align 8, !dbg !25681
  ret void, !dbg !25682
}

; Function Attrs: noredzone
declare dso_local void @mlxsw_sp1_ptp_got_timestamp(%struct.mlxsw_sp*, i1 zeroext, i8 zeroext, i8 zeroext, i8 zeroext, i16 zeroext, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_mtpptr_rec_message_type_get(i8* %buf, i16 zeroext %index) #0 !dbg !25683 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !25684, metadata !DIExpression()), !dbg !25685
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !25686, metadata !DIExpression()), !dbg !25685
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !25685
  %1 = load i16, i16* %index.addr, align 2, !dbg !25685
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mtpptr_rec_message_type_item to %struct.mlxsw_item*), i16 zeroext %1) #9, !dbg !25685
  ret i32 %call, !dbg !25685
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_mtpptr_rec_domain_number_get(i8* %buf, i16 zeroext %index) #0 !dbg !25687 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !25688, metadata !DIExpression()), !dbg !25689
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !25690, metadata !DIExpression()), !dbg !25689
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !25689
  %1 = load i16, i16* %index.addr, align 2, !dbg !25689
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mtpptr_rec_domain_number_item to %struct.mlxsw_item*), i16 zeroext %1) #9, !dbg !25689
  ret i32 %call, !dbg !25689
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_mtpptr_rec_sequence_id_get(i8* %buf, i16 zeroext %index) #0 !dbg !25691 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !25692, metadata !DIExpression()), !dbg !25693
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !25694, metadata !DIExpression()), !dbg !25693
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !25693
  %1 = load i16, i16* %index.addr, align 2, !dbg !25693
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mtpptr_rec_sequence_id_item to %struct.mlxsw_item*), i16 zeroext %1) #9, !dbg !25693
  ret i32 %call, !dbg !25693
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_mtpptr_rec_timestamp_high_get(i8* %buf, i16 zeroext %index) #0 !dbg !25695 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !25696, metadata !DIExpression()), !dbg !25697
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !25698, metadata !DIExpression()), !dbg !25697
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !25697
  %1 = load i16, i16* %index.addr, align 2, !dbg !25697
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mtpptr_rec_timestamp_high_item to %struct.mlxsw_item*), i16 zeroext %1) #9, !dbg !25697
  ret i32 %call, !dbg !25697
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_reg_mtpptr_rec_timestamp_low_get(i8* %buf, i16 zeroext %index) #0 !dbg !25699 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !25700, metadata !DIExpression()), !dbg !25701
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !25702, metadata !DIExpression()), !dbg !25701
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !25701
  %1 = load i16, i16* %index.addr, align 2, !dbg !25701
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mtpptr_rec_timestamp_low_item to %struct.mlxsw_item*), i16 zeroext %1) #9, !dbg !25701
  ret i32 %call, !dbg !25701
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_sp1_resources_kvd_register(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !25703 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %devlink = alloca %struct.devlink*, align 8
  %hash_single_size_params = alloca %struct.devlink_resource_size_params, align 8
  %hash_double_size_params = alloca %struct.devlink_resource_size_params, align 8
  %linear_size_params = alloca %struct.devlink_resource_size_params, align 8
  %kvd_size_params = alloca %struct.devlink_resource_size_params, align 8
  %kvd_size = alloca i32, align 4
  %single_size = alloca i32, align 4
  %double_size = alloca i32, align 4
  %linear_size = alloca i32, align 4
  %profile = alloca %struct.mlxsw_config_profile*, align 8
  %err = alloca i32, align 4
  %__x = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !25704, metadata !DIExpression()), !dbg !25705
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink, metadata !25706, metadata !DIExpression()), !dbg !25707
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !25708
  %1 = bitcast %struct.mlxsw_core* %0 to i8*, !dbg !25708
  %call = call %struct.devlink* @priv_to_devlink(i8* %1) #9, !dbg !25709
  store %struct.devlink* %call, %struct.devlink** %devlink, align 8, !dbg !25707
  call void @llvm.dbg.declare(metadata %struct.devlink_resource_size_params* %hash_single_size_params, metadata !25710, metadata !DIExpression()), !dbg !25711
  call void @llvm.dbg.declare(metadata %struct.devlink_resource_size_params* %hash_double_size_params, metadata !25712, metadata !DIExpression()), !dbg !25713
  call void @llvm.dbg.declare(metadata %struct.devlink_resource_size_params* %linear_size_params, metadata !25714, metadata !DIExpression()), !dbg !25715
  call void @llvm.dbg.declare(metadata %struct.devlink_resource_size_params* %kvd_size_params, metadata !25716, metadata !DIExpression()), !dbg !25717
  call void @llvm.dbg.declare(metadata i32* %kvd_size, metadata !25718, metadata !DIExpression()), !dbg !25719
  call void @llvm.dbg.declare(metadata i32* %single_size, metadata !25720, metadata !DIExpression()), !dbg !25721
  call void @llvm.dbg.declare(metadata i32* %double_size, metadata !25722, metadata !DIExpression()), !dbg !25723
  call void @llvm.dbg.declare(metadata i32* %linear_size, metadata !25724, metadata !DIExpression()), !dbg !25725
  call void @llvm.dbg.declare(metadata %struct.mlxsw_config_profile** %profile, metadata !25726, metadata !DIExpression()), !dbg !25727
  call void @llvm.dbg.declare(metadata i32* %err, metadata !25728, metadata !DIExpression()), !dbg !25729
  store %struct.mlxsw_config_profile* bitcast ({ i8, i8, i8, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i8, i16, i16, i16, i8, i16, i8, i32, i8, i8, [8 x %struct.mlxsw_swid_config] }* @mlxsw_sp1_config_profile to %struct.mlxsw_config_profile*), %struct.mlxsw_config_profile** %profile, align 8, !dbg !25730
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !25731
  %call1 = call zeroext i1 @mlxsw_core_res_valid(%struct.mlxsw_core* %2, i32 0) #9, !dbg !25731
  br i1 %call1, label %if.end, label %if.then, !dbg !25733

if.then:                                          ; preds = %entry
  store i32 -5, i32* %retval, align 4, !dbg !25734
  br label %return, !dbg !25734

if.end:                                           ; preds = %entry
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !25735
  call void @mlxsw_sp_resource_size_params_prepare(%struct.mlxsw_core* %3, %struct.devlink_resource_size_params* %kvd_size_params, %struct.devlink_resource_size_params* %linear_size_params, %struct.devlink_resource_size_params* %hash_double_size_params, %struct.devlink_resource_size_params* %hash_single_size_params) #9, !dbg !25736
  %4 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !25737
  %call2 = call i64 @mlxsw_core_res_get(%struct.mlxsw_core* %4, i32 0) #9, !dbg !25737
  %conv = trunc i64 %call2 to i32, !dbg !25737
  store i32 %conv, i32* %kvd_size, align 4, !dbg !25738
  %5 = load %struct.devlink*, %struct.devlink** %devlink, align 8, !dbg !25739
  %6 = load i32, i32* %kvd_size, align 4, !dbg !25740
  %conv3 = zext i32 %6 to i64, !dbg !25740
  %call4 = call i32 @devlink_resource_register(%struct.devlink* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.383, i64 0, i64 0), i64 %conv3, i64 1, i64 0, %struct.devlink_resource_size_params* %kvd_size_params) #9, !dbg !25741
  store i32 %call4, i32* %err, align 4, !dbg !25742
  %7 = load i32, i32* %err, align 4, !dbg !25743
  %tobool = icmp ne i32 %7, 0, !dbg !25743
  br i1 %tobool, label %if.then5, label %if.end6, !dbg !25745

if.then5:                                         ; preds = %if.end
  %8 = load i32, i32* %err, align 4, !dbg !25746
  store i32 %8, i32* %retval, align 4, !dbg !25747
  br label %return, !dbg !25747

if.end6:                                          ; preds = %if.end
  %9 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile, align 8, !dbg !25748
  %kvd_linear_size = getelementptr inbounds %struct.mlxsw_config_profile, %struct.mlxsw_config_profile* %9, i32 0, i32 19, !dbg !25749
  %10 = load i32, i32* %kvd_linear_size, align 4, !dbg !25749
  store i32 %10, i32* %linear_size, align 4, !dbg !25750
  %11 = load %struct.devlink*, %struct.devlink** %devlink, align 8, !dbg !25751
  %12 = load i32, i32* %linear_size, align 4, !dbg !25752
  %conv7 = zext i32 %12 to i64, !dbg !25752
  %call8 = call i32 @devlink_resource_register(%struct.devlink* %11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.404, i64 0, i64 0), i64 %conv7, i64 2, i64 1, %struct.devlink_resource_size_params* %linear_size_params) #9, !dbg !25753
  store i32 %call8, i32* %err, align 4, !dbg !25754
  %13 = load i32, i32* %err, align 4, !dbg !25755
  %tobool9 = icmp ne i32 %13, 0, !dbg !25755
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !25757

if.then10:                                        ; preds = %if.end6
  %14 = load i32, i32* %err, align 4, !dbg !25758
  store i32 %14, i32* %retval, align 4, !dbg !25759
  br label %return, !dbg !25759

if.end11:                                         ; preds = %if.end6
  %15 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !25760
  %call12 = call i32 @mlxsw_sp1_kvdl_resources_register(%struct.mlxsw_core* %15) #9, !dbg !25761
  store i32 %call12, i32* %err, align 4, !dbg !25762
  %16 = load i32, i32* %err, align 4, !dbg !25763
  %tobool13 = icmp ne i32 %16, 0, !dbg !25763
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !25765

if.then14:                                        ; preds = %if.end11
  %17 = load i32, i32* %err, align 4, !dbg !25766
  store i32 %17, i32* %retval, align 4, !dbg !25767
  br label %return, !dbg !25767

if.end15:                                         ; preds = %if.end11
  %18 = load i32, i32* %kvd_size, align 4, !dbg !25768
  %19 = load i32, i32* %linear_size, align 4, !dbg !25769
  %sub = sub i32 %18, %19, !dbg !25770
  store i32 %sub, i32* %double_size, align 4, !dbg !25771
  %20 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile, align 8, !dbg !25772
  %kvd_hash_double_parts = getelementptr inbounds %struct.mlxsw_config_profile, %struct.mlxsw_config_profile* %20, i32 0, i32 21, !dbg !25773
  %21 = load i8, i8* %kvd_hash_double_parts, align 1, !dbg !25773
  %conv16 = zext i8 %21 to i32, !dbg !25772
  %22 = load i32, i32* %double_size, align 4, !dbg !25774
  %mul = mul i32 %22, %conv16, !dbg !25774
  store i32 %mul, i32* %double_size, align 4, !dbg !25774
  %23 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile, align 8, !dbg !25775
  %kvd_hash_double_parts17 = getelementptr inbounds %struct.mlxsw_config_profile, %struct.mlxsw_config_profile* %23, i32 0, i32 21, !dbg !25776
  %24 = load i8, i8* %kvd_hash_double_parts17, align 1, !dbg !25776
  %conv18 = zext i8 %24 to i32, !dbg !25775
  %25 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile, align 8, !dbg !25777
  %kvd_hash_single_parts = getelementptr inbounds %struct.mlxsw_config_profile, %struct.mlxsw_config_profile* %25, i32 0, i32 20, !dbg !25778
  %26 = load i8, i8* %kvd_hash_single_parts, align 4, !dbg !25778
  %conv19 = zext i8 %26 to i32, !dbg !25777
  %add = add i32 %conv18, %conv19, !dbg !25779
  %27 = load i32, i32* %double_size, align 4, !dbg !25780
  %div = udiv i32 %27, %add, !dbg !25780
  store i32 %div, i32* %double_size, align 4, !dbg !25780
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !25781, metadata !DIExpression()), !dbg !25783
  %28 = load i32, i32* %double_size, align 4, !dbg !25783
  store i32 %28, i32* %__x, align 4, !dbg !25783
  %29 = load i32, i32* %__x, align 4, !dbg !25783
  %30 = load i32, i32* %__x, align 4, !dbg !25783
  %rem = urem i32 %30, 128, !dbg !25783
  %sub20 = sub i32 %29, %rem, !dbg !25783
  store i32 %sub20, i32* %tmp, align 4, !dbg !25783
  %31 = load i32, i32* %tmp, align 4, !dbg !25783
  store i32 %31, i32* %double_size, align 4, !dbg !25784
  %32 = load %struct.devlink*, %struct.devlink** %devlink, align 8, !dbg !25785
  %33 = load i32, i32* %double_size, align 4, !dbg !25786
  %conv21 = zext i32 %33 to i64, !dbg !25786
  %call22 = call i32 @devlink_resource_register(%struct.devlink* %32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.405, i64 0, i64 0), i64 %conv21, i64 4, i64 1, %struct.devlink_resource_size_params* %hash_double_size_params) #9, !dbg !25787
  store i32 %call22, i32* %err, align 4, !dbg !25788
  %34 = load i32, i32* %err, align 4, !dbg !25789
  %tobool23 = icmp ne i32 %34, 0, !dbg !25789
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !25791

if.then24:                                        ; preds = %if.end15
  %35 = load i32, i32* %err, align 4, !dbg !25792
  store i32 %35, i32* %retval, align 4, !dbg !25793
  br label %return, !dbg !25793

if.end25:                                         ; preds = %if.end15
  %36 = load i32, i32* %kvd_size, align 4, !dbg !25794
  %37 = load i32, i32* %double_size, align 4, !dbg !25795
  %sub26 = sub i32 %36, %37, !dbg !25796
  %38 = load i32, i32* %linear_size, align 4, !dbg !25797
  %sub27 = sub i32 %sub26, %38, !dbg !25798
  store i32 %sub27, i32* %single_size, align 4, !dbg !25799
  %39 = load %struct.devlink*, %struct.devlink** %devlink, align 8, !dbg !25800
  %40 = load i32, i32* %single_size, align 4, !dbg !25801
  %conv28 = zext i32 %40 to i64, !dbg !25801
  %call29 = call i32 @devlink_resource_register(%struct.devlink* %39, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.406, i64 0, i64 0), i64 %conv28, i64 3, i64 1, %struct.devlink_resource_size_params* %hash_single_size_params) #9, !dbg !25802
  store i32 %call29, i32* %err, align 4, !dbg !25803
  %41 = load i32, i32* %err, align 4, !dbg !25804
  %tobool30 = icmp ne i32 %41, 0, !dbg !25804
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !25806

if.then31:                                        ; preds = %if.end25
  %42 = load i32, i32* %err, align 4, !dbg !25807
  store i32 %42, i32* %retval, align 4, !dbg !25808
  br label %return, !dbg !25808

if.end32:                                         ; preds = %if.end25
  store i32 0, i32* %retval, align 4, !dbg !25809
  br label %return, !dbg !25809

return:                                           ; preds = %if.end32, %if.then31, %if.then24, %if.then14, %if.then10, %if.then5, %if.then
  %43 = load i32, i32* %retval, align 4, !dbg !25810
  ret i32 %43, !dbg !25810
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_sp_resource_size_params_prepare(%struct.mlxsw_core* %mlxsw_core, %struct.devlink_resource_size_params* %kvd_size_params, %struct.devlink_resource_size_params* %linear_size_params, %struct.devlink_resource_size_params* %hash_double_size_params, %struct.devlink_resource_size_params* %hash_single_size_params) #0 !dbg !25811 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %kvd_size_params.addr = alloca %struct.devlink_resource_size_params*, align 8
  %linear_size_params.addr = alloca %struct.devlink_resource_size_params*, align 8
  %hash_double_size_params.addr = alloca %struct.devlink_resource_size_params*, align 8
  %hash_single_size_params.addr = alloca %struct.devlink_resource_size_params*, align 8
  %single_size_min = alloca i32, align 4
  %double_size_min = alloca i32, align 4
  %kvd_size = alloca i32, align 4
  %linear_size_min = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !25814, metadata !DIExpression()), !dbg !25815
  store %struct.devlink_resource_size_params* %kvd_size_params, %struct.devlink_resource_size_params** %kvd_size_params.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_resource_size_params** %kvd_size_params.addr, metadata !25816, metadata !DIExpression()), !dbg !25817
  store %struct.devlink_resource_size_params* %linear_size_params, %struct.devlink_resource_size_params** %linear_size_params.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_resource_size_params** %linear_size_params.addr, metadata !25818, metadata !DIExpression()), !dbg !25819
  store %struct.devlink_resource_size_params* %hash_double_size_params, %struct.devlink_resource_size_params** %hash_double_size_params.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_resource_size_params** %hash_double_size_params.addr, metadata !25820, metadata !DIExpression()), !dbg !25821
  store %struct.devlink_resource_size_params* %hash_single_size_params, %struct.devlink_resource_size_params** %hash_single_size_params.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink_resource_size_params** %hash_single_size_params.addr, metadata !25822, metadata !DIExpression()), !dbg !25823
  call void @llvm.dbg.declare(metadata i32* %single_size_min, metadata !25824, metadata !DIExpression()), !dbg !25825
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !25826
  %call = call i64 @mlxsw_core_res_get(%struct.mlxsw_core* %0, i32 1) #9, !dbg !25826
  %conv = trunc i64 %call to i32, !dbg !25826
  store i32 %conv, i32* %single_size_min, align 4, !dbg !25825
  call void @llvm.dbg.declare(metadata i32* %double_size_min, metadata !25827, metadata !DIExpression()), !dbg !25828
  %1 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !25829
  %call1 = call i64 @mlxsw_core_res_get(%struct.mlxsw_core* %1, i32 2) #9, !dbg !25829
  %conv2 = trunc i64 %call1 to i32, !dbg !25829
  store i32 %conv2, i32* %double_size_min, align 4, !dbg !25828
  call void @llvm.dbg.declare(metadata i32* %kvd_size, metadata !25830, metadata !DIExpression()), !dbg !25831
  %2 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !25832
  %call3 = call i64 @mlxsw_core_res_get(%struct.mlxsw_core* %2, i32 0) #9, !dbg !25832
  %conv4 = trunc i64 %call3 to i32, !dbg !25832
  store i32 %conv4, i32* %kvd_size, align 4, !dbg !25831
  call void @llvm.dbg.declare(metadata i32* %linear_size_min, metadata !25833, metadata !DIExpression()), !dbg !25834
  store i32 0, i32* %linear_size_min, align 4, !dbg !25834
  %3 = load %struct.devlink_resource_size_params*, %struct.devlink_resource_size_params** %kvd_size_params.addr, align 8, !dbg !25835
  %4 = load i32, i32* %kvd_size, align 4, !dbg !25836
  %conv5 = zext i32 %4 to i64, !dbg !25836
  %5 = load i32, i32* %kvd_size, align 4, !dbg !25837
  %conv6 = zext i32 %5 to i64, !dbg !25837
  call void @devlink_resource_size_params_init(%struct.devlink_resource_size_params* %3, i64 %conv5, i64 %conv6, i64 128, i32 0) #9, !dbg !25838
  %6 = load %struct.devlink_resource_size_params*, %struct.devlink_resource_size_params** %linear_size_params.addr, align 8, !dbg !25839
  %7 = load i32, i32* %linear_size_min, align 4, !dbg !25840
  %conv7 = zext i32 %7 to i64, !dbg !25840
  %8 = load i32, i32* %kvd_size, align 4, !dbg !25841
  %9 = load i32, i32* %single_size_min, align 4, !dbg !25842
  %sub = sub i32 %8, %9, !dbg !25843
  %10 = load i32, i32* %double_size_min, align 4, !dbg !25844
  %sub8 = sub i32 %sub, %10, !dbg !25845
  %conv9 = zext i32 %sub8 to i64, !dbg !25841
  call void @devlink_resource_size_params_init(%struct.devlink_resource_size_params* %6, i64 %conv7, i64 %conv9, i64 128, i32 0) #9, !dbg !25846
  %11 = load %struct.devlink_resource_size_params*, %struct.devlink_resource_size_params** %hash_double_size_params.addr, align 8, !dbg !25847
  %12 = load i32, i32* %double_size_min, align 4, !dbg !25848
  %conv10 = zext i32 %12 to i64, !dbg !25848
  %13 = load i32, i32* %kvd_size, align 4, !dbg !25849
  %14 = load i32, i32* %single_size_min, align 4, !dbg !25850
  %sub11 = sub i32 %13, %14, !dbg !25851
  %15 = load i32, i32* %linear_size_min, align 4, !dbg !25852
  %sub12 = sub i32 %sub11, %15, !dbg !25853
  %conv13 = zext i32 %sub12 to i64, !dbg !25849
  call void @devlink_resource_size_params_init(%struct.devlink_resource_size_params* %11, i64 %conv10, i64 %conv13, i64 128, i32 0) #9, !dbg !25854
  %16 = load %struct.devlink_resource_size_params*, %struct.devlink_resource_size_params** %hash_single_size_params.addr, align 8, !dbg !25855
  %17 = load i32, i32* %single_size_min, align 4, !dbg !25856
  %conv14 = zext i32 %17 to i64, !dbg !25856
  %18 = load i32, i32* %kvd_size, align 4, !dbg !25857
  %19 = load i32, i32* %double_size_min, align 4, !dbg !25858
  %sub15 = sub i32 %18, %19, !dbg !25859
  %20 = load i32, i32* %linear_size_min, align 4, !dbg !25860
  %sub16 = sub i32 %sub15, %20, !dbg !25861
  %conv17 = zext i32 %sub16 to i64, !dbg !25857
  call void @devlink_resource_size_params_init(%struct.devlink_resource_size_params* %16, i64 %conv14, i64 %conv17, i64 128, i32 0) #9, !dbg !25862
  ret void, !dbg !25863
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp1_kvdl_resources_register(%struct.mlxsw_core*) #2

; Function Attrs: noredzone
declare dso_local i32 @devlink_resource_size_get(%struct.devlink*, i64, i64*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_inet6addr_valid_event(%struct.notifier_block*, i64, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_sp_inetaddr_valid_event(%struct.notifier_block*, i64, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @register_inetaddr_validator_notifier(%struct.notifier_block*) #2

; Function Attrs: noredzone
declare dso_local i32 @register_inet6addr_validator_notifier(%struct.notifier_block*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_core_driver_register(%struct.mlxsw_driver*) #2

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_pci_driver_register(%struct.pci_driver*) #2

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind willreturn }
attributes #9 = { noredzone }
attributes #10 = { nounwind }
attributes #11 = { noredzone nounwind readnone }
attributes #12 = { noredzone nounwind }
attributes #13 = { cold noredzone }
attributes #14 = { nounwind readnone }
attributes #15 = { nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!12573, !12574, !12575, !12576}
!llvm.ident = !{!12577}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "mlxsw_reg_mgpc", scope: !2, file: !10113, line: 9544, type: !11306, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !10685, globals: !11539, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/spectrum.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !12, !18, !23, !29, !63, !104, !135, !142, !173, !179, !185, !191, !198, !206, !212, !224, !230, !237, !242, !251, !259, !265, !272, !279, !287, !307, !314, !319, !326, !332, !338, !342, !346, !350, !355, !360, !369, !382, !390, !396, !403, !407, !411, !418, !424, !9927, !10112, !10117, !10122, !10126, !10133, !10162, !10166, !10172, !10176, !10185, !10195, !10199, !10204, !10209, !10215, !10222, !10227, !10233, !10240, !10251, !10256, !10260, !10265, !10269, !10273, !10280, !10344, !10352, !10372, !10426, !10430, !10434, !10438, !10442, !10480, !10484, !10489, !10493, !10498, !10534, !10567, !10575, !10584, !10605, !10611, !10617, !10648, !10651, !10666, !10671, !10678}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_tx", file: !6, line: 115, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/netdevice.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11}
!9 = !DIEnumerator(name: "__NETDEV_TX_MIN", value: -2147483648)
!10 = !DIEnumerator(name: "NETDEV_TX_OK", value: 0)
!11 = !DIEnumerator(name: "NETDEV_TX_BUSY", value: 16)
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "writeback_sync_modes", file: !13, line: 41, baseType: !14, size: 32, elements: !15)
!13 = !DIFile(filename: "./include/linux/writeback.h", directory: "/home/lizy2001/genbc/linux")
!14 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!15 = !{!16, !17}
!16 = !DIEnumerator(name: "WB_SYNC_NONE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "WB_SYNC_ALL", value: 1, isUnsigned: true)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !19, line: 65, baseType: !14, size: 32, elements: !20)
!19 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!20 = !{!21, !22}
!21 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!22 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!23 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !24, line: 16, baseType: !14, size: 32, elements: !25)
!24 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!25 = !{!26, !27, !28}
!26 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!27 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!29 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_prog_type", file: !30, line: 170, baseType: !14, size: 32, elements: !31)
!30 = !DIFile(filename: "./include/uapi/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!31 = !{!32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62}
!32 = !DIEnumerator(name: "BPF_PROG_TYPE_UNSPEC", value: 0, isUnsigned: true)
!33 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCKET_FILTER", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "BPF_PROG_TYPE_KPROBE", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_CLS", value: 3, isUnsigned: true)
!36 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_ACT", value: 4, isUnsigned: true)
!37 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACEPOINT", value: 5, isUnsigned: true)
!38 = !DIEnumerator(name: "BPF_PROG_TYPE_XDP", value: 6, isUnsigned: true)
!39 = !DIEnumerator(name: "BPF_PROG_TYPE_PERF_EVENT", value: 7, isUnsigned: true)
!40 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SKB", value: 8, isUnsigned: true)
!41 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK", value: 9, isUnsigned: true)
!42 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_IN", value: 10, isUnsigned: true)
!43 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_OUT", value: 11, isUnsigned: true)
!44 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_XMIT", value: 12, isUnsigned: true)
!45 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCK_OPS", value: 13, isUnsigned: true)
!46 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_SKB", value: 14, isUnsigned: true)
!47 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_DEVICE", value: 15, isUnsigned: true)
!48 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_MSG", value: 16, isUnsigned: true)
!49 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT", value: 17, isUnsigned: true)
!50 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK_ADDR", value: 18, isUnsigned: true)
!51 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_SEG6LOCAL", value: 19, isUnsigned: true)
!52 = !DIEnumerator(name: "BPF_PROG_TYPE_LIRC_MODE2", value: 20, isUnsigned: true)
!53 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_REUSEPORT", value: 21, isUnsigned: true)
!54 = !DIEnumerator(name: "BPF_PROG_TYPE_FLOW_DISSECTOR", value: 22, isUnsigned: true)
!55 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SYSCTL", value: 23, isUnsigned: true)
!56 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE", value: 24, isUnsigned: true)
!57 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCKOPT", value: 25, isUnsigned: true)
!58 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACING", value: 26, isUnsigned: true)
!59 = !DIEnumerator(name: "BPF_PROG_TYPE_STRUCT_OPS", value: 27, isUnsigned: true)
!60 = !DIEnumerator(name: "BPF_PROG_TYPE_EXT", value: 28, isUnsigned: true)
!61 = !DIEnumerator(name: "BPF_PROG_TYPE_LSM", value: 29, isUnsigned: true)
!62 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_LOOKUP", value: 30, isUnsigned: true)
!63 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_attach_type", file: !30, line: 204, baseType: !14, size: 32, elements: !64)
!64 = !{!65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103}
!65 = !DIEnumerator(name: "BPF_CGROUP_INET_INGRESS", value: 0, isUnsigned: true)
!66 = !DIEnumerator(name: "BPF_CGROUP_INET_EGRESS", value: 1, isUnsigned: true)
!67 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_CREATE", value: 2, isUnsigned: true)
!68 = !DIEnumerator(name: "BPF_CGROUP_SOCK_OPS", value: 3, isUnsigned: true)
!69 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_PARSER", value: 4, isUnsigned: true)
!70 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_VERDICT", value: 5, isUnsigned: true)
!71 = !DIEnumerator(name: "BPF_CGROUP_DEVICE", value: 6, isUnsigned: true)
!72 = !DIEnumerator(name: "BPF_SK_MSG_VERDICT", value: 7, isUnsigned: true)
!73 = !DIEnumerator(name: "BPF_CGROUP_INET4_BIND", value: 8, isUnsigned: true)
!74 = !DIEnumerator(name: "BPF_CGROUP_INET6_BIND", value: 9, isUnsigned: true)
!75 = !DIEnumerator(name: "BPF_CGROUP_INET4_CONNECT", value: 10, isUnsigned: true)
!76 = !DIEnumerator(name: "BPF_CGROUP_INET6_CONNECT", value: 11, isUnsigned: true)
!77 = !DIEnumerator(name: "BPF_CGROUP_INET4_POST_BIND", value: 12, isUnsigned: true)
!78 = !DIEnumerator(name: "BPF_CGROUP_INET6_POST_BIND", value: 13, isUnsigned: true)
!79 = !DIEnumerator(name: "BPF_CGROUP_UDP4_SENDMSG", value: 14, isUnsigned: true)
!80 = !DIEnumerator(name: "BPF_CGROUP_UDP6_SENDMSG", value: 15, isUnsigned: true)
!81 = !DIEnumerator(name: "BPF_LIRC_MODE2", value: 16, isUnsigned: true)
!82 = !DIEnumerator(name: "BPF_FLOW_DISSECTOR", value: 17, isUnsigned: true)
!83 = !DIEnumerator(name: "BPF_CGROUP_SYSCTL", value: 18, isUnsigned: true)
!84 = !DIEnumerator(name: "BPF_CGROUP_UDP4_RECVMSG", value: 19, isUnsigned: true)
!85 = !DIEnumerator(name: "BPF_CGROUP_UDP6_RECVMSG", value: 20, isUnsigned: true)
!86 = !DIEnumerator(name: "BPF_CGROUP_GETSOCKOPT", value: 21, isUnsigned: true)
!87 = !DIEnumerator(name: "BPF_CGROUP_SETSOCKOPT", value: 22, isUnsigned: true)
!88 = !DIEnumerator(name: "BPF_TRACE_RAW_TP", value: 23, isUnsigned: true)
!89 = !DIEnumerator(name: "BPF_TRACE_FENTRY", value: 24, isUnsigned: true)
!90 = !DIEnumerator(name: "BPF_TRACE_FEXIT", value: 25, isUnsigned: true)
!91 = !DIEnumerator(name: "BPF_MODIFY_RETURN", value: 26, isUnsigned: true)
!92 = !DIEnumerator(name: "BPF_LSM_MAC", value: 27, isUnsigned: true)
!93 = !DIEnumerator(name: "BPF_TRACE_ITER", value: 28, isUnsigned: true)
!94 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETPEERNAME", value: 29, isUnsigned: true)
!95 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETPEERNAME", value: 30, isUnsigned: true)
!96 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETSOCKNAME", value: 31, isUnsigned: true)
!97 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETSOCKNAME", value: 32, isUnsigned: true)
!98 = !DIEnumerator(name: "BPF_XDP_DEVMAP", value: 33, isUnsigned: true)
!99 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_RELEASE", value: 34, isUnsigned: true)
!100 = !DIEnumerator(name: "BPF_XDP_CPUMAP", value: 35, isUnsigned: true)
!101 = !DIEnumerator(name: "BPF_SK_LOOKUP", value: 36, isUnsigned: true)
!102 = !DIEnumerator(name: "BPF_XDP", value: 37, isUnsigned: true)
!103 = !DIEnumerator(name: "__MAX_BPF_ATTACH_TYPE", value: 38, isUnsigned: true)
!104 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_reg_type", file: !105, line: 369, baseType: !14, size: 32, elements: !106)
!105 = !DIFile(filename: "./include/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!106 = !{!107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134}
!107 = !DIEnumerator(name: "NOT_INIT", value: 0, isUnsigned: true)
!108 = !DIEnumerator(name: "SCALAR_VALUE", value: 1, isUnsigned: true)
!109 = !DIEnumerator(name: "PTR_TO_CTX", value: 2, isUnsigned: true)
!110 = !DIEnumerator(name: "CONST_PTR_TO_MAP", value: 3, isUnsigned: true)
!111 = !DIEnumerator(name: "PTR_TO_MAP_VALUE", value: 4, isUnsigned: true)
!112 = !DIEnumerator(name: "PTR_TO_MAP_VALUE_OR_NULL", value: 5, isUnsigned: true)
!113 = !DIEnumerator(name: "PTR_TO_STACK", value: 6, isUnsigned: true)
!114 = !DIEnumerator(name: "PTR_TO_PACKET_META", value: 7, isUnsigned: true)
!115 = !DIEnumerator(name: "PTR_TO_PACKET", value: 8, isUnsigned: true)
!116 = !DIEnumerator(name: "PTR_TO_PACKET_END", value: 9, isUnsigned: true)
!117 = !DIEnumerator(name: "PTR_TO_FLOW_KEYS", value: 10, isUnsigned: true)
!118 = !DIEnumerator(name: "PTR_TO_SOCKET", value: 11, isUnsigned: true)
!119 = !DIEnumerator(name: "PTR_TO_SOCKET_OR_NULL", value: 12, isUnsigned: true)
!120 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON", value: 13, isUnsigned: true)
!121 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON_OR_NULL", value: 14, isUnsigned: true)
!122 = !DIEnumerator(name: "PTR_TO_TCP_SOCK", value: 15, isUnsigned: true)
!123 = !DIEnumerator(name: "PTR_TO_TCP_SOCK_OR_NULL", value: 16, isUnsigned: true)
!124 = !DIEnumerator(name: "PTR_TO_TP_BUFFER", value: 17, isUnsigned: true)
!125 = !DIEnumerator(name: "PTR_TO_XDP_SOCK", value: 18, isUnsigned: true)
!126 = !DIEnumerator(name: "PTR_TO_BTF_ID", value: 19, isUnsigned: true)
!127 = !DIEnumerator(name: "PTR_TO_BTF_ID_OR_NULL", value: 20, isUnsigned: true)
!128 = !DIEnumerator(name: "PTR_TO_MEM", value: 21, isUnsigned: true)
!129 = !DIEnumerator(name: "PTR_TO_MEM_OR_NULL", value: 22, isUnsigned: true)
!130 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF", value: 23, isUnsigned: true)
!131 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF_OR_NULL", value: 24, isUnsigned: true)
!132 = !DIEnumerator(name: "PTR_TO_RDWR_BUF", value: 25, isUnsigned: true)
!133 = !DIEnumerator(name: "PTR_TO_RDWR_BUF_OR_NULL", value: 26, isUnsigned: true)
!134 = !DIEnumerator(name: "PTR_TO_PERCPU_BTF_ID", value: 27, isUnsigned: true)
!135 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_tramp_prog_type", file: !105, line: 578, baseType: !14, size: 32, elements: !136)
!136 = !{!137, !138, !139, !140, !141}
!137 = !DIEnumerator(name: "BPF_TRAMP_FENTRY", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "BPF_TRAMP_FEXIT", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "BPF_TRAMP_MODIFY_RETURN", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "BPF_TRAMP_MAX", value: 3, isUnsigned: true)
!141 = !DIEnumerator(name: "BPF_TRAMP_REPLACE", value: 4, isUnsigned: true)
!142 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_map_type", file: !30, line: 130, baseType: !14, size: 32, elements: !143)
!143 = !{!144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172}
!144 = !DIEnumerator(name: "BPF_MAP_TYPE_UNSPEC", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY", value: 2, isUnsigned: true)
!147 = !DIEnumerator(name: "BPF_MAP_TYPE_PROG_ARRAY", value: 3, isUnsigned: true)
!148 = !DIEnumerator(name: "BPF_MAP_TYPE_PERF_EVENT_ARRAY", value: 4, isUnsigned: true)
!149 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_HASH", value: 5, isUnsigned: true)
!150 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_ARRAY", value: 6, isUnsigned: true)
!151 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK_TRACE", value: 7, isUnsigned: true)
!152 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_ARRAY", value: 8, isUnsigned: true)
!153 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_HASH", value: 9, isUnsigned: true)
!154 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_PERCPU_HASH", value: 10, isUnsigned: true)
!155 = !DIEnumerator(name: "BPF_MAP_TYPE_LPM_TRIE", value: 11, isUnsigned: true)
!156 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY_OF_MAPS", value: 12, isUnsigned: true)
!157 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH_OF_MAPS", value: 13, isUnsigned: true)
!158 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP", value: 14, isUnsigned: true)
!159 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKMAP", value: 15, isUnsigned: true)
!160 = !DIEnumerator(name: "BPF_MAP_TYPE_CPUMAP", value: 16, isUnsigned: true)
!161 = !DIEnumerator(name: "BPF_MAP_TYPE_XSKMAP", value: 17, isUnsigned: true)
!162 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKHASH", value: 18, isUnsigned: true)
!163 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_STORAGE", value: 19, isUnsigned: true)
!164 = !DIEnumerator(name: "BPF_MAP_TYPE_REUSEPORT_SOCKARRAY", value: 20, isUnsigned: true)
!165 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE", value: 21, isUnsigned: true)
!166 = !DIEnumerator(name: "BPF_MAP_TYPE_QUEUE", value: 22, isUnsigned: true)
!167 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK", value: 23, isUnsigned: true)
!168 = !DIEnumerator(name: "BPF_MAP_TYPE_SK_STORAGE", value: 24, isUnsigned: true)
!169 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP_HASH", value: 25, isUnsigned: true)
!170 = !DIEnumerator(name: "BPF_MAP_TYPE_STRUCT_OPS", value: 26, isUnsigned: true)
!171 = !DIEnumerator(name: "BPF_MAP_TYPE_RINGBUF", value: 27, isUnsigned: true)
!172 = !DIEnumerator(name: "BPF_MAP_TYPE_INODE_STORAGE", value: 28, isUnsigned: true)
!173 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !174, line: 26, baseType: !14, size: 32, elements: !175)
!174 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!175 = !{!176, !177, !178}
!176 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!177 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!178 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!179 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !180, line: 546, baseType: !14, size: 32, elements: !181)
!180 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!181 = !{!182, !183, !184}
!182 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!183 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!184 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!185 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !186, line: 44, baseType: !14, size: 32, elements: !187)
!186 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!187 = !{!188, !189, !190}
!188 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!189 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!190 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!191 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !192, line: 343, baseType: !14, size: 32, elements: !193)
!192 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!193 = !{!194, !195, !196, !197}
!194 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!195 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!196 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!197 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!198 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !199, line: 524, baseType: !14, size: 32, elements: !200)
!199 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!200 = !{!201, !202, !203, !204, !205}
!201 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!202 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!203 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!204 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!205 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!206 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !199, line: 502, baseType: !14, size: 32, elements: !207)
!207 = !{!208, !209, !210, !211}
!208 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!209 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!210 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!211 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!212 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !213, line: 49, baseType: !14, size: 32, elements: !214)
!213 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!214 = !{!215, !216, !217, !218, !219, !220, !221, !222, !223}
!215 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!216 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!217 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!218 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!219 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!220 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!221 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!222 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!223 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!224 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !225, line: 118, baseType: !14, size: 32, elements: !226)
!225 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!226 = !{!227, !228, !229}
!227 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!228 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!229 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!230 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !231, line: 19, baseType: !14, size: 32, elements: !232)
!231 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!232 = !{!233, !234, !235, !236}
!233 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!234 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!235 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!236 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!237 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !225, line: 315, baseType: !14, size: 32, elements: !238)
!238 = !{!239, !240, !241}
!239 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!240 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!241 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!242 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !243, line: 296, baseType: !14, size: 32, elements: !244)
!243 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!244 = !{!245, !246, !247, !248, !249, !250}
!245 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!246 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!247 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!248 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!249 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!250 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!251 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !252, line: 9, baseType: !14, size: 32, elements: !253)
!252 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!253 = !{!254, !255, !256, !257, !258}
!254 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!255 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!256 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!257 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!258 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!259 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !260, line: 54, baseType: !14, size: 32, elements: !261)
!260 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!261 = !{!262, !263, !264}
!262 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!263 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!264 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!265 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !266, line: 15, baseType: !14, size: 32, elements: !267)
!266 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!267 = !{!268, !269, !270, !271}
!268 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!269 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!270 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!271 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!272 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !273, line: 59, baseType: !14, size: 32, elements: !274)
!273 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!274 = !{!275, !276, !277, !278}
!275 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!276 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!277 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!278 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!279 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !280, line: 48, baseType: !14, size: 32, elements: !281)
!280 = !DIFile(filename: "./include/uapi/linux/net.h", directory: "/home/lizy2001/genbc/linux")
!281 = !{!282, !283, !284, !285, !286}
!282 = !DIEnumerator(name: "SS_FREE", value: 0, isUnsigned: true)
!283 = !DIEnumerator(name: "SS_UNCONNECTED", value: 1, isUnsigned: true)
!284 = !DIEnumerator(name: "SS_CONNECTING", value: 2, isUnsigned: true)
!285 = !DIEnumerator(name: "SS_CONNECTED", value: 3, isUnsigned: true)
!286 = !DIEnumerator(name: "SS_DISCONNECTING", value: 4, isUnsigned: true)
!287 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tc_setup_type", file: !6, line: 836, baseType: !14, size: 32, elements: !288)
!288 = !{!289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306}
!289 = !DIEnumerator(name: "TC_SETUP_QDISC_MQPRIO", value: 0, isUnsigned: true)
!290 = !DIEnumerator(name: "TC_SETUP_CLSU32", value: 1, isUnsigned: true)
!291 = !DIEnumerator(name: "TC_SETUP_CLSFLOWER", value: 2, isUnsigned: true)
!292 = !DIEnumerator(name: "TC_SETUP_CLSMATCHALL", value: 3, isUnsigned: true)
!293 = !DIEnumerator(name: "TC_SETUP_CLSBPF", value: 4, isUnsigned: true)
!294 = !DIEnumerator(name: "TC_SETUP_BLOCK", value: 5, isUnsigned: true)
!295 = !DIEnumerator(name: "TC_SETUP_QDISC_CBS", value: 6, isUnsigned: true)
!296 = !DIEnumerator(name: "TC_SETUP_QDISC_RED", value: 7, isUnsigned: true)
!297 = !DIEnumerator(name: "TC_SETUP_QDISC_PRIO", value: 8, isUnsigned: true)
!298 = !DIEnumerator(name: "TC_SETUP_QDISC_MQ", value: 9, isUnsigned: true)
!299 = !DIEnumerator(name: "TC_SETUP_QDISC_ETF", value: 10, isUnsigned: true)
!300 = !DIEnumerator(name: "TC_SETUP_ROOT_QDISC", value: 11, isUnsigned: true)
!301 = !DIEnumerator(name: "TC_SETUP_QDISC_GRED", value: 12, isUnsigned: true)
!302 = !DIEnumerator(name: "TC_SETUP_QDISC_TAPRIO", value: 13, isUnsigned: true)
!303 = !DIEnumerator(name: "TC_SETUP_FT", value: 14, isUnsigned: true)
!304 = !DIEnumerator(name: "TC_SETUP_QDISC_ETS", value: 15, isUnsigned: true)
!305 = !DIEnumerator(name: "TC_SETUP_QDISC_TBF", value: 16, isUnsigned: true)
!306 = !DIEnumerator(name: "TC_SETUP_QDISC_FIFO", value: 17, isUnsigned: true)
!307 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_netdev_command", file: !6, line: 860, baseType: !14, size: 32, elements: !308)
!308 = !{!309, !310, !311, !312, !313}
!309 = !DIEnumerator(name: "XDP_SETUP_PROG", value: 0, isUnsigned: true)
!310 = !DIEnumerator(name: "XDP_SETUP_PROG_HW", value: 1, isUnsigned: true)
!311 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_ALLOC", value: 2, isUnsigned: true)
!312 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_FREE", value: 3, isUnsigned: true)
!313 = !DIEnumerator(name: "XDP_SETUP_XSK_POOL", value: 4, isUnsigned: true)
!314 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_dpipe_field_mapping_type", file: !315, line: 541, baseType: !14, size: 32, elements: !316)
!315 = !DIFile(filename: "./include/uapi/linux/devlink.h", directory: "/home/lizy2001/genbc/linux")
!316 = !{!317, !318}
!317 = !DIEnumerator(name: "DEVLINK_DPIPE_FIELD_MAPPING_TYPE_NONE", value: 0, isUnsigned: true)
!318 = !DIEnumerator(name: "DEVLINK_DPIPE_FIELD_MAPPING_TYPE_IFINDEX", value: 1, isUnsigned: true)
!319 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_reload_action", file: !315, line: 304, baseType: !14, size: 32, elements: !320)
!320 = !{!321, !322, !323, !324, !325}
!321 = !DIEnumerator(name: "DEVLINK_RELOAD_ACTION_UNSPEC", value: 0, isUnsigned: true)
!322 = !DIEnumerator(name: "DEVLINK_RELOAD_ACTION_DRIVER_REINIT", value: 1, isUnsigned: true)
!323 = !DIEnumerator(name: "DEVLINK_RELOAD_ACTION_FW_ACTIVATE", value: 2, isUnsigned: true)
!324 = !DIEnumerator(name: "__DEVLINK_RELOAD_ACTION_MAX", value: 3, isUnsigned: true)
!325 = !DIEnumerator(name: "DEVLINK_RELOAD_ACTION_MAX", value: 2, isUnsigned: true)
!326 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_reload_limit", file: !315, line: 314, baseType: !14, size: 32, elements: !327)
!327 = !{!328, !329, !330, !331}
!328 = !DIEnumerator(name: "DEVLINK_RELOAD_LIMIT_UNSPEC", value: 0, isUnsigned: true)
!329 = !DIEnumerator(name: "DEVLINK_RELOAD_LIMIT_NO_RESET", value: 1, isUnsigned: true)
!330 = !DIEnumerator(name: "__DEVLINK_RELOAD_LIMIT_MAX", value: 2, isUnsigned: true)
!331 = !DIEnumerator(name: "DEVLINK_RELOAD_LIMIT_MAX", value: 1, isUnsigned: true)
!332 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_port_type", file: !315, line: 134, baseType: !14, size: 32, elements: !333)
!333 = !{!334, !335, !336, !337}
!334 = !DIEnumerator(name: "DEVLINK_PORT_TYPE_NOTSET", value: 0, isUnsigned: true)
!335 = !DIEnumerator(name: "DEVLINK_PORT_TYPE_AUTO", value: 1, isUnsigned: true)
!336 = !DIEnumerator(name: "DEVLINK_PORT_TYPE_ETH", value: 2, isUnsigned: true)
!337 = !DIEnumerator(name: "DEVLINK_PORT_TYPE_IB", value: 3, isUnsigned: true)
!338 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_sb_pool_type", file: !315, line: 141, baseType: !14, size: 32, elements: !339)
!339 = !{!340, !341}
!340 = !DIEnumerator(name: "DEVLINK_SB_POOL_TYPE_INGRESS", value: 0, isUnsigned: true)
!341 = !DIEnumerator(name: "DEVLINK_SB_POOL_TYPE_EGRESS", value: 1, isUnsigned: true)
!342 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_sb_threshold_type", file: !315, line: 159, baseType: !14, size: 32, elements: !343)
!343 = !{!344, !345}
!344 = !DIEnumerator(name: "DEVLINK_SB_THRESHOLD_TYPE_STATIC", value: 0, isUnsigned: true)
!345 = !DIEnumerator(name: "DEVLINK_SB_THRESHOLD_TYPE_DYNAMIC", value: 1, isUnsigned: true)
!346 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_eswitch_encap_mode", file: !315, line: 178, baseType: !14, size: 32, elements: !347)
!347 = !{!348, !349}
!348 = !DIEnumerator(name: "DEVLINK_ESWITCH_ENCAP_MODE_NONE", value: 0, isUnsigned: true)
!349 = !DIEnumerator(name: "DEVLINK_ESWITCH_ENCAP_MODE_BASIC", value: 1, isUnsigned: true)
!350 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_trap_type", file: !315, line: 291, baseType: !14, size: 32, elements: !351)
!351 = !{!352, !353, !354}
!352 = !DIEnumerator(name: "DEVLINK_TRAP_TYPE_DROP", value: 0, isUnsigned: true)
!353 = !DIEnumerator(name: "DEVLINK_TRAP_TYPE_EXCEPTION", value: 1, isUnsigned: true)
!354 = !DIEnumerator(name: "DEVLINK_TRAP_TYPE_CONTROL", value: 2, isUnsigned: true)
!355 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_trap_action", file: !315, line: 268, baseType: !14, size: 32, elements: !356)
!356 = !{!357, !358, !359}
!357 = !DIEnumerator(name: "DEVLINK_TRAP_ACTION_DROP", value: 0, isUnsigned: true)
!358 = !DIEnumerator(name: "DEVLINK_TRAP_ACTION_TRAP", value: 1, isUnsigned: true)
!359 = !DIEnumerator(name: "DEVLINK_TRAP_ACTION_MIRROR", value: 2, isUnsigned: true)
!360 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_port_flavour", file: !315, line: 183, baseType: !14, size: 32, elements: !361)
!361 = !{!362, !363, !364, !365, !366, !367, !368}
!362 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_PHYSICAL", value: 0, isUnsigned: true)
!363 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_CPU", value: 1, isUnsigned: true)
!364 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_DSA", value: 2, isUnsigned: true)
!365 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_PCI_PF", value: 3, isUnsigned: true)
!366 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_PCI_VF", value: 4, isUnsigned: true)
!367 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_VIRTUAL", value: 5, isUnsigned: true)
!368 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_UNUSED", value: 6, isUnsigned: true)
!369 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_state", file: !370, line: 585, baseType: !14, size: 32, elements: !371)
!370 = !DIFile(filename: "./include/uapi/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!371 = !{!372, !373, !374, !375, !376, !377, !378, !379, !380, !381}
!372 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_AUTONEG", value: 0, isUnsigned: true)
!373 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_TRAINING_FAILURE", value: 1, isUnsigned: true)
!374 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_LOGICAL_MISMATCH", value: 2, isUnsigned: true)
!375 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_BAD_SIGNAL_INTEGRITY", value: 3, isUnsigned: true)
!376 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_NO_CABLE", value: 4, isUnsigned: true)
!377 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CABLE_ISSUE", value: 5, isUnsigned: true)
!378 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_EEPROM_ISSUE", value: 6, isUnsigned: true)
!379 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CALIBRATION_FAILURE", value: 7, isUnsigned: true)
!380 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_POWER_BUDGET_EXCEEDED", value: 8, isUnsigned: true)
!381 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_OVERHEAT", value: 9, isUnsigned: true)
!382 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_autoneg", file: !370, line: 602, baseType: !14, size: 32, elements: !383)
!383 = !{!384, !385, !386, !387, !388, !389}
!384 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED", value: 1, isUnsigned: true)
!385 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_ACK_NOT_RECEIVED", value: 2, isUnsigned: true)
!386 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NEXT_PAGE_EXCHANGE_FAILED", value: 3, isUnsigned: true)
!387 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED_FORCE_MODE", value: 4, isUnsigned: true)
!388 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_FEC_MISMATCH_DURING_OVERRIDE", value: 5, isUnsigned: true)
!389 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_HCD", value: 6, isUnsigned: true)
!390 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_training", file: !370, line: 615, baseType: !14, size: 32, elements: !391)
!391 = !{!392, !393, !394, !395}
!392 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_FRAME_LOCK_NOT_ACQUIRED", value: 1, isUnsigned: true)
!393 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_INHIBIT_TIMEOUT", value: 2, isUnsigned: true)
!394 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_PARTNER_DID_NOT_SET_RECEIVER_READY", value: 3, isUnsigned: true)
!395 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_REMOTE_FAULT", value: 4, isUnsigned: true)
!396 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_logical_mismatch", file: !370, line: 626, baseType: !14, size: 32, elements: !397)
!397 = !{!398, !399, !400, !401, !402}
!398 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_BLOCK_LOCK", value: 1, isUnsigned: true)
!399 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_AM_LOCK", value: 2, isUnsigned: true)
!400 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_GET_ALIGN_STATUS", value: 3, isUnsigned: true)
!401 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_FC_FEC_IS_NOT_LOCKED", value: 4, isUnsigned: true)
!402 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_RS_FEC_IS_NOT_LOCKED", value: 5, isUnsigned: true)
!403 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_bad_signal_integrity", file: !370, line: 638, baseType: !14, size: 32, elements: !404)
!404 = !{!405, !406}
!405 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_LARGE_NUMBER_OF_PHYSICAL_ERRORS", value: 1, isUnsigned: true)
!406 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_UNSUPPORTED_RATE", value: 2, isUnsigned: true)
!407 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_cable_issue", file: !370, line: 647, baseType: !14, size: 32, elements: !408)
!408 = !{!409, !410}
!409 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_UNSUPPORTED_CABLE", value: 1, isUnsigned: true)
!410 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_CABLE_TEST_FAILURE", value: 2, isUnsigned: true)
!411 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_phys_id_state", file: !412, line: 54, baseType: !14, size: 32, elements: !413)
!412 = !DIFile(filename: "./include/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!413 = !{!414, !415, !416, !417}
!414 = !DIEnumerator(name: "ETHTOOL_ID_INACTIVE", value: 0, isUnsigned: true)
!415 = !DIEnumerator(name: "ETHTOOL_ID_ACTIVE", value: 1, isUnsigned: true)
!416 = !DIEnumerator(name: "ETHTOOL_ID_ON", value: 2, isUnsigned: true)
!417 = !DIEnumerator(name: "ETHTOOL_ID_OFF", value: 3, isUnsigned: true)
!418 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rx_handler_result", file: !6, line: 423, baseType: !14, size: 32, elements: !419)
!419 = !{!420, !421, !422, !423}
!420 = !DIEnumerator(name: "RX_HANDLER_CONSUMED", value: 0, isUnsigned: true)
!421 = !DIEnumerator(name: "RX_HANDLER_ANOTHER", value: 1, isUnsigned: true)
!422 = !DIEnumerator(name: "RX_HANDLER_EXACT", value: 2, isUnsigned: true)
!423 = !DIEnumerator(name: "RX_HANDLER_PASS", value: 3, isUnsigned: true)
!424 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !425, file: !6, line: 2085, baseType: !14, size: 32, elements: !10105)
!425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device", file: !6, line: 1858, size: 15808, elements: !426)
!426 = !{!427, !432, !455, !472, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !489, !497, !498, !499, !500, !501, !502, !503, !504, !505, !531, !541, !542, !543, !548, !549, !553, !556, !8749, !9260, !9323, !9355, !9356, !9357, !9358, !9359, !9360, !9361, !9362, !9363, !9364, !9365, !9366, !9367, !9368, !9369, !9370, !9371, !9372, !9373, !9374, !9375, !9376, !9377, !9378, !9379, !9380, !9381, !9386, !9387, !9388, !9389, !9390, !9391, !9392, !9395, !9444, !9445, !9448, !9451, !9452, !9465, !9466, !9467, !9468, !9469, !9470, !9477, !9478, !9907, !9908, !9909, !9910, !9911, !9912, !9913, !9914, !9915, !9918, !9919, !9920, !9921, !9922, !9923, !9924, !9925, !9926, !9931, !9932, !9933, !9934, !9971, !9972, !9974, !9975, !10044, !10045, !10046, !10047, !10053, !10055, !10058, !10061, !10063, !10064, !10065, !10066, !10067, !10096, !10097}
!427 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !425, file: !6, line: 1859, baseType: !428, size: 128)
!428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 128, elements: !430)
!429 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!430 = !{!431}
!431 = !DISubrange(count: 16)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "name_node", scope: !425, file: !6, line: 1860, baseType: !433, size: 64, offset: 128)
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_name_node", file: !6, line: 938, size: 384, elements: !435)
!435 = !{!436, !444, !450, !452}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !434, file: !6, line: 939, baseType: !437, size: 128)
!437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !438, line: 186, size: 128, elements: !439)
!438 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!439 = !{!440, !442}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !437, file: !438, line: 187, baseType: !441, size: 64)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !437, file: !438, line: 187, baseType: !443, size: 64, offset: 64)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 64)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !434, file: !6, line: 940, baseType: !445, size: 128, offset: 128)
!445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !438, line: 178, size: 128, elements: !446)
!446 = !{!447, !449}
!447 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !445, file: !438, line: 179, baseType: !448, size: 64)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !445, file: !438, line: 179, baseType: !448, size: 64, offset: 64)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !434, file: !6, line: 941, baseType: !451, size: 64, offset: 256)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 64)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !434, file: !6, line: 942, baseType: !453, size: 64, offset: 320)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 64)
!454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !429)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !425, file: !6, line: 1861, baseType: !456, size: 64, offset: 192)
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !457, size: 64)
!457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ifalias", file: !6, line: 930, size: 128, elements: !458)
!458 = !{!459, !468}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "rcuhead", scope: !457, file: !6, line: 931, baseType: !460, size: 128, align: 64)
!460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !438, line: 216, size: 128, align: 64, elements: !461)
!461 = !{!462, !464}
!462 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !460, file: !438, line: 217, baseType: !463, size: 64)
!463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !460, file: !438, line: 218, baseType: !465, size: 64, offset: 64)
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64)
!466 = !DISubroutineType(types: !467)
!467 = !{null, !463}
!468 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !457, file: !6, line: 932, baseType: !469, offset: 128)
!469 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, elements: !470)
!470 = !{!471}
!471 = !DISubrange(count: -1)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !425, file: !6, line: 1866, baseType: !473, size: 64, offset: 256)
!473 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !425, file: !6, line: 1867, baseType: !473, size: 64, offset: 320)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !425, file: !6, line: 1868, baseType: !473, size: 64, offset: 384)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !425, file: !6, line: 1869, baseType: !7, size: 32, offset: 448)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !425, file: !6, line: 1877, baseType: !473, size: 64, offset: 512)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !425, file: !6, line: 1879, baseType: !445, size: 128, offset: 576)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "napi_list", scope: !425, file: !6, line: 1880, baseType: !445, size: 128, offset: 704)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "unreg_list", scope: !425, file: !6, line: 1881, baseType: !445, size: 128, offset: 832)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "close_list", scope: !425, file: !6, line: 1882, baseType: !445, size: 128, offset: 960)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_all", scope: !425, file: !6, line: 1883, baseType: !445, size: 128, offset: 1088)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_specific", scope: !425, file: !6, line: 1884, baseType: !445, size: 128, offset: 1216)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "adj_list", scope: !425, file: !6, line: 1889, baseType: !485, size: 256, offset: 1344)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !425, file: !6, line: 1886, size: 256, elements: !486)
!486 = !{!487, !488}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "upper", scope: !485, file: !6, line: 1887, baseType: !445, size: 128)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "lower", scope: !485, file: !6, line: 1888, baseType: !445, size: 128, offset: 128)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !425, file: !6, line: 1891, baseType: !490, size: 64, offset: 1600)
!490 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_features_t", file: !491, line: 12, baseType: !492)
!491 = !DIFile(filename: "./include/linux/netdev_features.h", directory: "/home/lizy2001/genbc/linux")
!492 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !493, line: 23, baseType: !494)
!493 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!494 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !495, line: 31, baseType: !496)
!495 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!496 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "hw_features", scope: !425, file: !6, line: 1892, baseType: !490, size: 64, offset: 1664)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "wanted_features", scope: !425, file: !6, line: 1893, baseType: !490, size: 64, offset: 1728)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_features", scope: !425, file: !6, line: 1894, baseType: !490, size: 64, offset: 1792)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "hw_enc_features", scope: !425, file: !6, line: 1895, baseType: !490, size: 64, offset: 1856)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "mpls_features", scope: !425, file: !6, line: 1896, baseType: !490, size: 64, offset: 1920)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "gso_partial_features", scope: !425, file: !6, line: 1897, baseType: !490, size: 64, offset: 1984)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !425, file: !6, line: 1899, baseType: !7, size: 32, offset: 2048)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !425, file: !6, line: 1900, baseType: !7, size: 32, offset: 2080)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !425, file: !6, line: 1902, baseType: !506, size: 1472, offset: 2112)
!506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_stats", file: !6, line: 169, size: 1472, elements: !507)
!507 = !{!508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530}
!508 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !506, file: !6, line: 170, baseType: !473, size: 64)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !506, file: !6, line: 171, baseType: !473, size: 64, offset: 64)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !506, file: !6, line: 172, baseType: !473, size: 64, offset: 128)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !506, file: !6, line: 173, baseType: !473, size: 64, offset: 192)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !506, file: !6, line: 174, baseType: !473, size: 64, offset: 256)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !506, file: !6, line: 175, baseType: !473, size: 64, offset: 320)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !506, file: !6, line: 176, baseType: !473, size: 64, offset: 384)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !506, file: !6, line: 177, baseType: !473, size: 64, offset: 448)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !506, file: !6, line: 178, baseType: !473, size: 64, offset: 512)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !506, file: !6, line: 179, baseType: !473, size: 64, offset: 576)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !506, file: !6, line: 180, baseType: !473, size: 64, offset: 640)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !506, file: !6, line: 181, baseType: !473, size: 64, offset: 704)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !506, file: !6, line: 182, baseType: !473, size: 64, offset: 768)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !506, file: !6, line: 183, baseType: !473, size: 64, offset: 832)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !506, file: !6, line: 184, baseType: !473, size: 64, offset: 896)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !506, file: !6, line: 185, baseType: !473, size: 64, offset: 960)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !506, file: !6, line: 186, baseType: !473, size: 64, offset: 1024)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !506, file: !6, line: 187, baseType: !473, size: 64, offset: 1088)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !506, file: !6, line: 188, baseType: !473, size: 64, offset: 1152)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !506, file: !6, line: 189, baseType: !473, size: 64, offset: 1216)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !506, file: !6, line: 190, baseType: !473, size: 64, offset: 1280)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !506, file: !6, line: 191, baseType: !473, size: 64, offset: 1344)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !506, file: !6, line: 192, baseType: !473, size: 64, offset: 1408)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !425, file: !6, line: 1904, baseType: !532, size: 64, offset: 3584)
!532 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !533, line: 13, baseType: !534)
!533 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!534 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !438, line: 175, baseType: !535)
!535 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !438, line: 173, size: 64, elements: !536)
!536 = !{!537}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !535, file: !438, line: 174, baseType: !538, size: 64)
!538 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !493, line: 22, baseType: !539)
!539 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !495, line: 30, baseType: !540)
!540 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !425, file: !6, line: 1905, baseType: !532, size: 64, offset: 3648)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !425, file: !6, line: 1906, baseType: !532, size: 64, offset: 3712)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_up_count", scope: !425, file: !6, line: 1909, baseType: !544, size: 32, offset: 3776)
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !438, line: 168, baseType: !545)
!545 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !438, line: 166, size: 32, elements: !546)
!546 = !{!547}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !545, file: !438, line: 167, baseType: !7, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_down_count", scope: !425, file: !6, line: 1910, baseType: !544, size: 32, offset: 3808)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_handlers", scope: !425, file: !6, line: 1913, baseType: !550, size: 64, offset: 3840)
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 64)
!551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !552)
!552 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_handler_def", file: !6, line: 1913, flags: DIFlagFwdDecl)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_data", scope: !425, file: !6, line: 1914, baseType: !554, size: 64, offset: 3904)
!554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !555, size: 64)
!555 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_public_data", file: !6, line: 1914, flags: DIFlagFwdDecl)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_ops", scope: !425, file: !6, line: 1916, baseType: !557, size: 64, offset: 3968)
!557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 64)
!558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !559)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_ops", file: !6, line: 1283, size: 4416, elements: !560)
!560 = !{!561, !565, !569, !570, !571, !7900, !7904, !7908, !7912, !7913, !7917, !7918, !8029, !8034, !8038, !8042, !8046, !8078, !8082, !8086, !8091, !8095, !8096, !8101, !8105, !8109, !8113, !8114, !8134, !8138, !8153, !8159, !8163, !8172, !8176, !8177, !8181, !8185, !8189, !8193, !8197, !8201, !8205, !8209, !8224, !8228, !8270, !8274, !8279, !8283, !8287, !8291, !8300, !8301, !8305, !8317, !8318, !8322, !8326, !8330, !8334, !8335, !8339, !8340, !8393, !8413, !8417, !8715, !8745}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_init", scope: !559, file: !6, line: 1284, baseType: !562, size: 64)
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 64)
!563 = !DISubroutineType(types: !564)
!564 = !{!7, !451}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_uninit", scope: !559, file: !6, line: 1285, baseType: !566, size: 64, offset: 64)
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!567 = !DISubroutineType(types: !568)
!568 = !{null, !451}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_open", scope: !559, file: !6, line: 1286, baseType: !562, size: 64, offset: 128)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_stop", scope: !559, file: !6, line: 1287, baseType: !562, size: 64, offset: 192)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_start_xmit", scope: !559, file: !6, line: 1288, baseType: !572, size: 64, offset: 256)
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 64)
!573 = !DISubroutineType(types: !574)
!574 = !{!575, !576, !451}
!575 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_tx_t", file: !6, line: 120, baseType: !5)
!576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !577, size: 64)
!577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff", file: !578, line: 713, size: 1600, elements: !579)
!578 = !DIFile(filename: "./include/linux/skbuff.h", directory: "/home/lizy2001/genbc/linux")
!579 = !{!580, !602, !7795, !7800, !7804, !7813, !7814, !7815, !7816, !7817, !7818, !7820, !7821, !7822, !7823, !7824, !7825, !7826, !7828, !7829, !7830, !7831, !7832, !7833, !7834, !7835, !7836, !7837, !7838, !7839, !7840, !7841, !7842, !7843, !7844, !7845, !7846, !7847, !7848, !7849, !7850, !7851, !7852, !7853, !7854, !7864, !7865, !7866, !7867, !7868, !7869, !7874, !7879, !7884, !7885, !7886, !7887, !7888, !7889, !7890, !7891, !7892, !7894, !7895, !7897, !7898, !7899}
!580 = !DIDerivedType(tag: DW_TAG_member, scope: !577, file: !578, line: 714, baseType: !581, size: 192)
!581 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !577, file: !578, line: 714, size: 192, elements: !582)
!582 = !{!583, !593, !601}
!583 = !DIDerivedType(tag: DW_TAG_member, scope: !581, file: !578, line: 715, baseType: !584, size: 192)
!584 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !581, file: !578, line: 715, size: 192, elements: !585)
!585 = !{!586, !587, !588}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !584, file: !578, line: 717, baseType: !576, size: 64)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !584, file: !578, line: 718, baseType: !576, size: 64, offset: 64)
!588 = !DIDerivedType(tag: DW_TAG_member, scope: !584, file: !578, line: 720, baseType: !589, size: 64, offset: 128)
!589 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !584, file: !578, line: 720, size: 64, elements: !590)
!590 = !{!591, !592}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !589, file: !578, line: 721, baseType: !451, size: 64)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "dev_scratch", scope: !589, file: !578, line: 726, baseType: !473, size: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "rbnode", scope: !581, file: !578, line: 729, baseType: !594, size: 192, align: 64)
!594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !595, line: 24, size: 192, align: 64, elements: !596)
!595 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!596 = !{!597, !598, !600}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !594, file: !595, line: 25, baseType: !473, size: 64)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !594, file: !595, line: 26, baseType: !599, size: 64, offset: 64)
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !594, file: !595, line: 27, baseType: !599, size: 64, offset: 128)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !581, file: !578, line: 730, baseType: !445, size: 128)
!602 = !DIDerivedType(tag: DW_TAG_member, scope: !577, file: !578, line: 733, baseType: !603, size: 64, offset: 192)
!603 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !577, file: !578, line: 733, size: 64, elements: !604)
!604 = !{!605, !7794}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !603, file: !578, line: 734, baseType: !606, size: 64)
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64)
!607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !608, line: 347, size: 5568, elements: !609)
!608 = !DIFile(filename: "./include/net/sock.h", directory: "/home/lizy2001/genbc/linux")
!609 = !{!610, !7561, !7568, !7569, !7570, !7571, !7572, !7573, !7580, !7581, !7582, !7583, !7584, !7591, !7604, !7605, !7606, !7607, !7608, !7609, !7610, !7611, !7616, !7617, !7618, !7619, !7620, !7621, !7622, !7623, !7624, !7625, !7626, !7627, !7628, !7629, !7630, !7631, !7632, !7633, !7634, !7635, !7636, !7637, !7638, !7639, !7640, !7641, !7642, !7643, !7644, !7645, !7646, !7647, !7648, !7649, !7650, !7651, !7652, !7653, !7654, !7655, !7656, !7657, !7658, !7659, !7660, !7661, !7662, !7663, !7664, !7665, !7779, !7780, !7783, !7784, !7785, !7786, !7787, !7788, !7789, !7790, !7793}
!610 = !DIDerivedType(tag: DW_TAG_member, name: "__sk_common", scope: !607, file: !608, line: 352, baseType: !611, size: 1088)
!611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_common", file: !608, line: 162, size: 1088, elements: !612)
!612 = !{!613, !626, !636, !647, !648, !651, !652, !653, !654, !655, !656, !661, !7521, !7522, !7523, !7524, !7525, !7532, !7534, !7546, !7547, !7553, !7554, !7555}
!613 = !DIDerivedType(tag: DW_TAG_member, scope: !611, file: !608, line: 166, baseType: !614, size: 64)
!614 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !611, file: !608, line: 166, size: 64, elements: !615)
!615 = !{!616, !618}
!616 = !DIDerivedType(tag: DW_TAG_member, name: "skc_addrpair", scope: !614, file: !608, line: 167, baseType: !617, size: 64)
!617 = !DIDerivedType(tag: DW_TAG_typedef, name: "__addrpair", file: !608, line: 115, baseType: !494)
!618 = !DIDerivedType(tag: DW_TAG_member, scope: !614, file: !608, line: 168, baseType: !619, size: 64)
!619 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !614, file: !608, line: 168, size: 64, elements: !620)
!620 = !{!621, !625}
!621 = !DIDerivedType(tag: DW_TAG_member, name: "skc_daddr", scope: !619, file: !608, line: 169, baseType: !622, size: 32)
!622 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !623, line: 32, baseType: !624)
!623 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!624 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !495, line: 27, baseType: !14)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rcv_saddr", scope: !619, file: !608, line: 170, baseType: !622, size: 32, offset: 32)
!626 = !DIDerivedType(tag: DW_TAG_member, scope: !611, file: !608, line: 173, baseType: !627, size: 32, offset: 64)
!627 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !611, file: !608, line: 173, size: 32, elements: !628)
!628 = !{!629, !630}
!629 = !DIDerivedType(tag: DW_TAG_member, name: "skc_hash", scope: !627, file: !608, line: 174, baseType: !14, size: 32)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "skc_u16hashes", scope: !627, file: !608, line: 175, baseType: !631, size: 32)
!631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !632, size: 32, elements: !634)
!632 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !495, line: 24, baseType: !633)
!633 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!634 = !{!635}
!635 = !DISubrange(count: 2)
!636 = !DIDerivedType(tag: DW_TAG_member, scope: !611, file: !608, line: 178, baseType: !637, size: 32, offset: 96)
!637 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !611, file: !608, line: 178, size: 32, elements: !638)
!638 = !{!639, !641}
!639 = !DIDerivedType(tag: DW_TAG_member, name: "skc_portpair", scope: !637, file: !608, line: 179, baseType: !640, size: 32)
!640 = !DIDerivedType(tag: DW_TAG_typedef, name: "__portpair", file: !608, line: 114, baseType: !624)
!641 = !DIDerivedType(tag: DW_TAG_member, scope: !637, file: !608, line: 180, baseType: !642, size: 32)
!642 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !637, file: !608, line: 180, size: 32, elements: !643)
!643 = !{!644, !646}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dport", scope: !642, file: !608, line: 181, baseType: !645, size: 16)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be16", file: !623, line: 30, baseType: !632)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "skc_num", scope: !642, file: !608, line: 182, baseType: !632, size: 16, offset: 16)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "skc_family", scope: !611, file: !608, line: 186, baseType: !633, size: 16, offset: 128)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "skc_state", scope: !611, file: !608, line: 187, baseType: !649, size: 8, offset: 144)
!649 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !650)
!650 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "skc_reuse", scope: !611, file: !608, line: 188, baseType: !650, size: 4, offset: 152, flags: DIFlagBitField, extraData: i64 152)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "skc_reuseport", scope: !611, file: !608, line: 189, baseType: !650, size: 1, offset: 156, flags: DIFlagBitField, extraData: i64 152)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "skc_ipv6only", scope: !611, file: !608, line: 190, baseType: !650, size: 1, offset: 157, flags: DIFlagBitField, extraData: i64 152)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "skc_net_refcnt", scope: !611, file: !608, line: 191, baseType: !650, size: 1, offset: 158, flags: DIFlagBitField, extraData: i64 152)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "skc_bound_dev_if", scope: !611, file: !608, line: 192, baseType: !7, size: 32, offset: 160)
!656 = !DIDerivedType(tag: DW_TAG_member, scope: !611, file: !608, line: 193, baseType: !657, size: 128, offset: 192)
!657 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !611, file: !608, line: 193, size: 128, elements: !658)
!658 = !{!659, !660}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "skc_bind_node", scope: !657, file: !608, line: 194, baseType: !437, size: 128)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "skc_portaddr_node", scope: !657, file: !608, line: 195, baseType: !437, size: 128)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "skc_prot", scope: !611, file: !608, line: 197, baseType: !662, size: 64, offset: 320)
!662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "proto", file: !608, line: 1127, size: 3264, elements: !664)
!664 = !{!665, !670, !686, !687, !691, !698, !702, !706, !710, !714, !729, !734, !735, !7369, !7373, !7377, !7378, !7379, !7383, !7384, !7385, !7386, !7387, !7391, !7392, !7398, !7402, !7403, !7404, !7405, !7407, !7408, !7410, !7411, !7412, !7413, !7414, !7415, !7416, !7417, !7418, !7420, !7421, !7422, !7423, !7479, !7492, !7517, !7518, !7519, !7520}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !663, file: !608, line: 1128, baseType: !666, size: 64)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = !DISubroutineType(types: !668)
!668 = !{null, !606, !669}
!669 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "pre_connect", scope: !663, file: !608, line: 1130, baseType: !671, size: 64, offset: 64)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 64)
!672 = !DISubroutineType(types: !673)
!673 = !{!7, !606, !674, !7}
!674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !675, size: 64)
!675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !676, line: 32, size: 128, elements: !677)
!676 = !DIFile(filename: "./include/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!677 = !{!678, !682}
!678 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !675, file: !676, line: 33, baseType: !679, size: 16)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !676, line: 26, baseType: !680)
!680 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_sa_family_t", file: !681, line: 10, baseType: !633)
!681 = !DIFile(filename: "./include/uapi/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!682 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !675, file: !676, line: 34, baseType: !683, size: 112, offset: 16)
!683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 112, elements: !684)
!684 = !{!685}
!685 = !DISubrange(count: 14)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !663, file: !608, line: 1133, baseType: !671, size: 64, offset: 128)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !663, file: !608, line: 1136, baseType: !688, size: 64, offset: 192)
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64)
!689 = !DISubroutineType(types: !690)
!690 = !{!7, !606, !7}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !663, file: !608, line: 1138, baseType: !692, size: 64, offset: 256)
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!693 = !DISubroutineType(types: !694)
!694 = !{!606, !606, !7, !695, !696}
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!696 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !438, line: 30, baseType: !697)
!697 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !663, file: !608, line: 1141, baseType: !699, size: 64, offset: 320)
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 64)
!700 = !DISubroutineType(types: !701)
!701 = !{!7, !606, !7, !473}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !663, file: !608, line: 1143, baseType: !703, size: 64, offset: 384)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DISubroutineType(types: !705)
!705 = !{!7, !606}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !663, file: !608, line: 1144, baseType: !707, size: 64, offset: 448)
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 64)
!708 = !DISubroutineType(types: !709)
!709 = !{null, !606}
!710 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !663, file: !608, line: 1145, baseType: !711, size: 64, offset: 512)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 64)
!712 = !DISubroutineType(types: !713)
!713 = !{null, !606, !7}
!714 = !DIDerivedType(tag: DW_TAG_member, name: "setsockopt", scope: !663, file: !608, line: 1146, baseType: !715, size: 64, offset: 576)
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64)
!716 = !DISubroutineType(types: !717)
!717 = !{!7, !606, !7, !7, !718, !14}
!718 = !DIDerivedType(tag: DW_TAG_typedef, name: "sockptr_t", file: !719, line: 20, baseType: !720)
!719 = !DIFile(filename: "./include/linux/sockptr.h", directory: "/home/lizy2001/genbc/linux")
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !719, line: 14, size: 128, elements: !721)
!721 = !{!722, !728}
!722 = !DIDerivedType(tag: DW_TAG_member, scope: !720, file: !719, line: 15, baseType: !723, size: 64)
!723 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !720, file: !719, line: 15, size: 64, elements: !724)
!724 = !{!725, !727}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "kernel", scope: !723, file: !719, line: 16, baseType: !726, size: 64)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !723, file: !719, line: 17, baseType: !726, size: 64)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "is_kernel", scope: !720, file: !719, line: 19, baseType: !696, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "getsockopt", scope: !663, file: !608, line: 1149, baseType: !730, size: 64, offset: 640)
!730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 64)
!731 = !DISubroutineType(types: !732)
!732 = !{!7, !606, !7, !7, !733, !695}
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 64)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "keepalive", scope: !663, file: !608, line: 1152, baseType: !711, size: 64, offset: 704)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg", scope: !663, file: !608, line: 1157, baseType: !736, size: 64, offset: 768)
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!737 = !DISubroutineType(types: !738)
!738 = !{!7, !606, !739, !750}
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 64)
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msghdr", file: !676, line: 50, size: 768, elements: !741)
!741 = !{!742, !743, !744, !7360, !7365, !7366, !7367, !7368}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "msg_name", scope: !740, file: !676, line: 51, baseType: !726, size: 64)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "msg_namelen", scope: !740, file: !676, line: 52, baseType: !7, size: 32, offset: 64)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iter", scope: !740, file: !676, line: 53, baseType: !745, size: 320, offset: 128)
!745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !746, line: 29, size: 320, elements: !747)
!746 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!747 = !{!748, !749, !754, !755, !7351}
!748 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !745, file: !746, line: 35, baseType: !14, size: 32)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !745, file: !746, line: 36, baseType: !750, size: 64, offset: 64)
!750 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !438, line: 55, baseType: !751)
!751 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !752, line: 72, baseType: !753)
!752 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!753 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !752, line: 16, baseType: !473)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !745, file: !746, line: 37, baseType: !750, size: 64, offset: 128)
!755 = !DIDerivedType(tag: DW_TAG_member, scope: !745, file: !746, line: 38, baseType: !756, size: 64, offset: 192)
!756 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !745, file: !746, line: 38, size: 64, elements: !757)
!757 = !{!758, !766, !773, !7350}
!758 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !756, file: !746, line: 39, baseType: !759, size: 64)
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !761)
!761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !762, line: 17, size: 128, elements: !763)
!762 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!763 = !{!764, !765}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !761, file: !762, line: 19, baseType: !726, size: 64)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !761, file: !762, line: 20, baseType: !751, size: 64, offset: 64)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !756, file: !746, line: 40, baseType: !767, size: 64)
!767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !768, size: 64)
!768 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !769)
!769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !746, line: 15, size: 128, elements: !770)
!770 = !{!771, !772}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !769, file: !746, line: 16, baseType: !726, size: 64)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !769, file: !746, line: 17, baseType: !750, size: 64, offset: 64)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !756, file: !746, line: 41, baseType: !774, size: 64)
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 64)
!775 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !776)
!776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !777, line: 31, size: 128, elements: !778)
!777 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!778 = !{!779, !7348, !7349}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !776, file: !777, line: 32, baseType: !780, size: 64)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !782, line: 68, size: 512, align: 128, elements: !783)
!782 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!783 = !{!784, !785, !7340, !7347}
!784 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !781, file: !782, line: 69, baseType: !473, size: 64)
!785 = !DIDerivedType(tag: DW_TAG_member, scope: !781, file: !782, line: 77, baseType: !786, size: 320, offset: 64)
!786 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !781, file: !782, line: 77, size: 320, elements: !787)
!787 = !{!788, !7234, !7239, !7265, !7273, !7279, !7291, !7339}
!788 = !DIDerivedType(tag: DW_TAG_member, scope: !786, file: !782, line: 78, baseType: !789, size: 320)
!789 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !786, file: !782, line: 78, size: 320, elements: !790)
!790 = !{!791, !792, !7232, !7233}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !789, file: !782, line: 84, baseType: !445, size: 128)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !789, file: !782, line: 86, baseType: !793, size: 64, offset: 128)
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !243, line: 451, size: 1216, align: 64, elements: !795)
!795 = !{!796, !7121, !7122, !7123, !7124, !7125, !7126, !7127, !7128, !7129, !7227, !7228, !7229, !7230, !7231}
!796 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !794, file: !243, line: 452, baseType: !797, size: 64)
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64)
!798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !243, line: 610, size: 4224, elements: !799)
!799 = !{!800, !802, !803, !811, !818, !819, !7054, !7055, !7056, !7057, !7062, !7063, !7064, !7065, !7066, !7067, !7068, !7069, !7070, !7071, !7072, !7073, !7074, !7075, !7076, !7077, !7078, !7079, !7080, !7081, !7086, !7087, !7088, !7089, !7090, !7091, !7092, !7097, !7105, !7106, !7107, !7117, !7118, !7119, !7120}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !798, file: !243, line: 611, baseType: !801, size: 16)
!801 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !438, line: 19, baseType: !633)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !798, file: !243, line: 612, baseType: !633, size: 16, offset: 16)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !798, file: !243, line: 613, baseType: !804, size: 32, offset: 32)
!804 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !805, line: 23, baseType: !806)
!805 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!806 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !805, line: 21, size: 32, elements: !807)
!807 = !{!808}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !806, file: !805, line: 22, baseType: !809, size: 32)
!809 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !438, line: 32, baseType: !810)
!810 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !752, line: 49, baseType: !14)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !798, file: !243, line: 614, baseType: !812, size: 32, offset: 64)
!812 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !805, line: 28, baseType: !813)
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !805, line: 26, size: 32, elements: !814)
!814 = !{!815}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !813, file: !805, line: 27, baseType: !816, size: 32)
!816 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !438, line: 33, baseType: !817)
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !752, line: 50, baseType: !14)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !798, file: !243, line: 615, baseType: !14, size: 32, offset: 96)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !798, file: !243, line: 622, baseType: !820, size: 64, offset: 128)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 64)
!821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !822)
!822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !243, line: 1864, size: 1536, align: 512, elements: !823)
!823 = !{!824, !6931, !6941, !6945, !6951, !6955, !6959, !6963, !6967, !6971, !6975, !6976, !6980, !6984, !7004, !7030, !7034, !7040, !7045, !7049, !7050}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !822, file: !243, line: 1865, baseType: !825, size: 64)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 64)
!826 = !DISubroutineType(types: !827)
!827 = !{!828, !797, !828, !14}
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !830, line: 89, size: 1536, elements: !831)
!830 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!831 = !{!832, !833, !843, !851, !852, !868, !869, !873, !900, !968, !6916, !6917, !6918, !6923, !6924, !6925}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !829, file: !830, line: 91, baseType: !14, size: 32)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !829, file: !830, line: 92, baseType: !834, size: 32, offset: 32)
!834 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !835, line: 277, baseType: !836)
!835 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !835, line: 277, size: 32, elements: !837)
!837 = !{!838}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !836, file: !835, line: 277, baseType: !839, size: 32)
!839 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !835, line: 70, baseType: !840)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !835, line: 65, size: 32, elements: !841)
!841 = !{!842}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !840, file: !835, line: 66, baseType: !14, size: 32)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !829, file: !830, line: 93, baseType: !844, size: 128, offset: 64)
!844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !845, line: 38, size: 128, elements: !846)
!845 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!846 = !{!847, !849}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !844, file: !845, line: 39, baseType: !848, size: 64)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !844, file: !845, line: 39, baseType: !850, size: 64, offset: 64)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !829, file: !830, line: 94, baseType: !828, size: 64, offset: 192)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !829, file: !830, line: 95, baseType: !853, size: 128, offset: 256)
!853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !830, line: 47, size: 128, elements: !854)
!854 = !{!855, !865}
!855 = !DIDerivedType(tag: DW_TAG_member, scope: !853, file: !830, line: 48, baseType: !856, size: 64)
!856 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !853, file: !830, line: 48, size: 64, elements: !857)
!857 = !{!858, !864}
!858 = !DIDerivedType(tag: DW_TAG_member, scope: !856, file: !830, line: 49, baseType: !859, size: 64)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !856, file: !830, line: 49, size: 64, elements: !860)
!860 = !{!861, !863}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !859, file: !830, line: 50, baseType: !862, size: 32)
!862 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !493, line: 21, baseType: !624)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !859, file: !830, line: 50, baseType: !862, size: 32, offset: 32)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !856, file: !830, line: 52, baseType: !492, size: 64)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !853, file: !830, line: 54, baseType: !866, size: 64, offset: 64)
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 64)
!867 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !650)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !829, file: !830, line: 96, baseType: !797, size: 64, offset: 384)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !829, file: !830, line: 98, baseType: !870, size: 256, offset: 448)
!870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !650, size: 256, elements: !871)
!871 = !{!872}
!872 = !DISubrange(count: 32)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !829, file: !830, line: 101, baseType: !874, size: 32, offset: 704)
!874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !875, line: 25, size: 32, elements: !876)
!875 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!876 = !{!877}
!877 = !DIDerivedType(tag: DW_TAG_member, scope: !874, file: !875, line: 26, baseType: !878, size: 32)
!878 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !874, file: !875, line: 26, size: 32, elements: !879)
!879 = !{!880}
!880 = !DIDerivedType(tag: DW_TAG_member, scope: !878, file: !875, line: 30, baseType: !881, size: 32)
!881 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !878, file: !875, line: 30, size: 32, elements: !882)
!882 = !{!883, !899}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !881, file: !875, line: 31, baseType: !884)
!884 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !885, line: 83, baseType: !886)
!885 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !885, line: 71, elements: !887)
!887 = !{!888}
!888 = !DIDerivedType(tag: DW_TAG_member, scope: !886, file: !885, line: 72, baseType: !889)
!889 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !886, file: !885, line: 72, elements: !890)
!890 = !{!891}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !889, file: !885, line: 73, baseType: !892)
!892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !885, line: 20, elements: !893)
!893 = !{!894}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !892, file: !885, line: 21, baseType: !895)
!895 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !896, line: 25, baseType: !897)
!896 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!897 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !896, line: 25, elements: !898)
!898 = !{}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !881, file: !875, line: 32, baseType: !7, size: 32)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !829, file: !830, line: 102, baseType: !901, size: 64, offset: 768)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64)
!902 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !903)
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !830, line: 135, size: 1024, align: 512, elements: !904)
!904 = !{!905, !909, !910, !917, !923, !927, !931, !935, !936, !940, !944, !956, !962}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !903, file: !830, line: 136, baseType: !906, size: 64)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64)
!907 = !DISubroutineType(types: !908)
!908 = !{!7, !828, !14}
!909 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !903, file: !830, line: 137, baseType: !906, size: 64, offset: 64)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !903, file: !830, line: 138, baseType: !911, size: 64, offset: 128)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = !DISubroutineType(types: !913)
!913 = !{!7, !914, !916}
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!915 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !829)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 64)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !903, file: !830, line: 139, baseType: !918, size: 64, offset: 192)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64)
!919 = !DISubroutineType(types: !920)
!920 = !{!7, !914, !14, !453, !921}
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!922 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !853)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !903, file: !830, line: 141, baseType: !924, size: 64, offset: 256)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64)
!925 = !DISubroutineType(types: !926)
!926 = !{!7, !914}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !903, file: !830, line: 142, baseType: !928, size: 64, offset: 320)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 64)
!929 = !DISubroutineType(types: !930)
!930 = !{!7, !828}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !903, file: !830, line: 143, baseType: !932, size: 64, offset: 384)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 64)
!933 = !DISubroutineType(types: !934)
!934 = !{null, !828}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !903, file: !830, line: 144, baseType: !932, size: 64, offset: 448)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !903, file: !830, line: 145, baseType: !937, size: 64, offset: 512)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64)
!938 = !DISubroutineType(types: !939)
!939 = !{null, !828, !797}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !903, file: !830, line: 146, baseType: !941, size: 64, offset: 576)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64)
!942 = !DISubroutineType(types: !943)
!943 = !{!733, !828, !733, !7}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !903, file: !830, line: 147, baseType: !945, size: 64, offset: 640)
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64)
!946 = !DISubroutineType(types: !947)
!947 = !{!948, !950}
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 64)
!949 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !830, line: 18, flags: DIFlagFwdDecl)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !952, line: 8, size: 128, elements: !953)
!952 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!953 = !{!954, !955}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !951, file: !952, line: 9, baseType: !948, size: 64)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !951, file: !952, line: 10, baseType: !828, size: 64, offset: 64)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !903, file: !830, line: 148, baseType: !957, size: 64, offset: 704)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 64)
!958 = !DISubroutineType(types: !959)
!959 = !{!7, !960, !696}
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64)
!961 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !951)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !903, file: !830, line: 149, baseType: !963, size: 64, offset: 768)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 64)
!964 = !DISubroutineType(types: !965)
!965 = !{!828, !828, !966}
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64)
!967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !798)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !829, file: !830, line: 103, baseType: !969, size: 64, offset: 832)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64)
!970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !243, line: 1416, size: 9472, elements: !971)
!971 = !{!972, !973, !976, !977, !978, !981, !1027, !6588, !6670, !6753, !6757, !6758, !6759, !6760, !6761, !6762, !6763, !6764, !6769, !6773, !6774, !6775, !6776, !6779, !6780, !6781, !6822, !6849, !6850, !6851, !6852, !6853, !6854, !6857, !6858, !6864, !6865, !6866, !6867, !6868, !6869, !6870, !6885, !6886, !6887, !6888, !6889, !6890, !6891, !6892, !6907, !6908, !6909, !6910, !6911, !6912, !6913, !6914, !6915}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !970, file: !243, line: 1417, baseType: !445, size: 128)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !970, file: !243, line: 1418, baseType: !974, size: 32, offset: 128)
!974 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !438, line: 16, baseType: !975)
!975 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !438, line: 13, baseType: !862)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !970, file: !243, line: 1419, baseType: !650, size: 8, offset: 160)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !970, file: !243, line: 1420, baseType: !473, size: 64, offset: 192)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !970, file: !243, line: 1421, baseType: !979, size: 64, offset: 256)
!979 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !438, line: 46, baseType: !980)
!980 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !752, line: 88, baseType: !540)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !970, file: !243, line: 1422, baseType: !982, size: 64, offset: 320)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !243, line: 2228, size: 576, elements: !984)
!984 = !{!985, !986, !987, !994, !998, !1002, !1006, !1010, !1011, !1015, !1018, !1019, !1020, !1024, !1025, !1026}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !983, file: !243, line: 2229, baseType: !453, size: 64)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !983, file: !243, line: 2230, baseType: !7, size: 32, offset: 64)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !983, file: !243, line: 2238, baseType: !988, size: 64, offset: 128)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64)
!989 = !DISubroutineType(types: !990)
!990 = !{!7, !991}
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64)
!992 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !993, line: 28, flags: DIFlagFwdDecl)
!993 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!994 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !983, file: !243, line: 2239, baseType: !995, size: 64, offset: 192)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64)
!996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !997)
!997 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !243, line: 70, flags: DIFlagFwdDecl)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !983, file: !243, line: 2240, baseType: !999, size: 64, offset: 256)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 64)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{!828, !982, !7, !453, !726}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !983, file: !243, line: 2242, baseType: !1003, size: 64, offset: 320)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64)
!1004 = !DISubroutineType(types: !1005)
!1005 = !{null, !969}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !983, file: !243, line: 2243, baseType: !1007, size: 64, offset: 384)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !1009, line: 76, flags: DIFlagFwdDecl)
!1009 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !983, file: !243, line: 2244, baseType: !982, size: 64, offset: 448)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !983, file: !243, line: 2245, baseType: !1012, size: 64, offset: 512)
!1012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !438, line: 182, size: 64, elements: !1013)
!1013 = !{!1014}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1012, file: !438, line: 183, baseType: !441, size: 64)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !983, file: !243, line: 2247, baseType: !1016, offset: 576)
!1016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !1017, line: 187, elements: !898)
!1017 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !983, file: !243, line: 2248, baseType: !1016, offset: 576)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !983, file: !243, line: 2249, baseType: !1016, offset: 576)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !983, file: !243, line: 2250, baseType: !1021, offset: 576)
!1021 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1016, elements: !1022)
!1022 = !{!1023}
!1023 = !DISubrange(count: 3)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !983, file: !243, line: 2252, baseType: !1016, offset: 576)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !983, file: !243, line: 2253, baseType: !1016, offset: 576)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !983, file: !243, line: 2254, baseType: !1016, offset: 576)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !970, file: !243, line: 1423, baseType: !1028, size: 64, offset: 384)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64)
!1029 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1030)
!1030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !243, line: 1935, size: 1472, elements: !1031)
!1031 = !{!1032, !1036, !1040, !1041, !1045, !1065, !1069, !1070, !1071, !1075, !1079, !1080, !1081, !1082, !1088, !1092, !1093, !6565, !6566, !6567, !6568, !6572, !6587}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !1030, file: !243, line: 1936, baseType: !1033, size: 64)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 64)
!1034 = !DISubroutineType(types: !1035)
!1035 = !{!797, !969}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !1030, file: !243, line: 1937, baseType: !1037, size: 64, offset: 64)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64)
!1038 = !DISubroutineType(types: !1039)
!1039 = !{null, !797}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !1030, file: !243, line: 1938, baseType: !1037, size: 64, offset: 128)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !1030, file: !243, line: 1940, baseType: !1042, size: 64, offset: 192)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64)
!1043 = !DISubroutineType(types: !1044)
!1044 = !{null, !797, !7}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !1030, file: !243, line: 1941, baseType: !1046, size: 64, offset: 256)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 64)
!1047 = !DISubroutineType(types: !1048)
!1048 = !{!7, !797, !1049}
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64)
!1050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !13, line: 51, size: 320, elements: !1051)
!1051 = !{!1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064}
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_write", scope: !1050, file: !13, line: 52, baseType: !669, size: 64)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "pages_skipped", scope: !1050, file: !13, line: 54, baseType: !669, size: 64, offset: 64)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "range_start", scope: !1050, file: !13, line: 61, baseType: !979, size: 64, offset: 128)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "range_end", scope: !1050, file: !13, line: 62, baseType: !979, size: 64, offset: 192)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "sync_mode", scope: !1050, file: !13, line: 64, baseType: !12, size: 32, offset: 256)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "for_kupdate", scope: !1050, file: !13, line: 66, baseType: !14, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "for_background", scope: !1050, file: !13, line: 67, baseType: !14, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_writepages", scope: !1050, file: !13, line: 68, baseType: !14, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "for_reclaim", scope: !1050, file: !13, line: 69, baseType: !14, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "range_cyclic", scope: !1050, file: !13, line: 70, baseType: !14, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "for_sync", scope: !1050, file: !13, line: 71, baseType: !14, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "no_cgroup_owner", scope: !1050, file: !13, line: 79, baseType: !14, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "punt_to_cgroup", scope: !1050, file: !13, line: 81, baseType: !14, size: 1, offset: 295, flags: DIFlagBitField, extraData: i64 288)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !1030, file: !243, line: 1942, baseType: !1066, size: 64, offset: 320)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{!7, !797}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !1030, file: !243, line: 1943, baseType: !1037, size: 64, offset: 384)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !1030, file: !243, line: 1944, baseType: !1003, size: 64, offset: 448)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !1030, file: !243, line: 1945, baseType: !1072, size: 64, offset: 512)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64)
!1073 = !DISubroutineType(types: !1074)
!1074 = !{!7, !969, !7}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !1030, file: !243, line: 1946, baseType: !1076, size: 64, offset: 576)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64)
!1077 = !DISubroutineType(types: !1078)
!1078 = !{!7, !969}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !1030, file: !243, line: 1947, baseType: !1076, size: 64, offset: 640)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !1030, file: !243, line: 1948, baseType: !1076, size: 64, offset: 704)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !1030, file: !243, line: 1949, baseType: !1076, size: 64, offset: 768)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !1030, file: !243, line: 1950, baseType: !1083, size: 64, offset: 832)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 64)
!1084 = !DISubroutineType(types: !1085)
!1085 = !{!7, !828, !1086}
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64)
!1087 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !243, line: 57, flags: DIFlagFwdDecl)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !1030, file: !243, line: 1951, baseType: !1089, size: 64, offset: 896)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{!7, !969, !695, !733}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !1030, file: !243, line: 1952, baseType: !1003, size: 64, offset: 960)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1030, file: !243, line: 1954, baseType: !1094, size: 64, offset: 1024)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!7, !1097, !828}
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64)
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !1099, line: 16, size: 896, elements: !1100)
!1099 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!1100 = !{!1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1115, !1137, !1138, !6564}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1098, file: !1099, line: 17, baseType: !733, size: 64)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1098, file: !1099, line: 18, baseType: !750, size: 64, offset: 64)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1098, file: !1099, line: 19, baseType: !750, size: 64, offset: 128)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1098, file: !1099, line: 20, baseType: !750, size: 64, offset: 192)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !1098, file: !1099, line: 21, baseType: !750, size: 64, offset: 256)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1098, file: !1099, line: 22, baseType: !979, size: 64, offset: 320)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !1098, file: !1099, line: 23, baseType: !979, size: 64, offset: 384)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1098, file: !1099, line: 24, baseType: !1109, size: 192, offset: 448)
!1109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1110, line: 53, size: 192, elements: !1111)
!1110 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1111 = !{!1112, !1113, !1114}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1109, file: !1110, line: 54, baseType: !532, size: 64)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1109, file: !1110, line: 55, baseType: !884, offset: 64)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1109, file: !1110, line: 59, baseType: !445, size: 128, offset: 64)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1098, file: !1099, line: 25, baseType: !1116, size: 64, offset: 640)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 64)
!1117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1118)
!1118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !1099, line: 31, size: 256, elements: !1119)
!1119 = !{!1120, !1125, !1129, !1133}
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1118, file: !1099, line: 32, baseType: !1121, size: 64)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64)
!1122 = !DISubroutineType(types: !1123)
!1123 = !{!726, !1097, !1124}
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1118, file: !1099, line: 33, baseType: !1126, size: 64, offset: 64)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1127 = !DISubroutineType(types: !1128)
!1128 = !{null, !1097, !726}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1118, file: !1099, line: 34, baseType: !1130, size: 64, offset: 128)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 64)
!1131 = !DISubroutineType(types: !1132)
!1132 = !{!726, !1097, !726, !1124}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1118, file: !1099, line: 35, baseType: !1134, size: 64, offset: 192)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 64)
!1135 = !DISubroutineType(types: !1136)
!1136 = !{!7, !1097, !726}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !1098, file: !1099, line: 26, baseType: !7, size: 32, offset: 704)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1098, file: !1099, line: 27, baseType: !1139, size: 64, offset: 768)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 64)
!1140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1141)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !243, line: 916, size: 1856, align: 32, elements: !1142)
!1142 = !{!1143, !1153, !1154, !1155, !6529, !6530, !6531, !6532, !6533, !6534, !6535, !6536, !6545, !6546, !6555, !6556, !6557, !6558, !6559, !6560, !6563}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !1141, file: !243, line: 920, baseType: !1144, size: 128)
!1144 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1141, file: !243, line: 917, size: 128, elements: !1145)
!1145 = !{!1146, !1152}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !1144, file: !243, line: 918, baseType: !1147, size: 64)
!1147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !1148, line: 58, size: 64, elements: !1149)
!1148 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1149 = !{!1150}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1147, file: !1148, line: 59, baseType: !1151, size: 64)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !1144, file: !243, line: 919, baseType: !460, size: 128, align: 64)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !1141, file: !243, line: 921, baseType: !951, size: 128, offset: 128)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !1141, file: !243, line: 922, baseType: !797, size: 64, offset: 256)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !1141, file: !243, line: 923, baseType: !1156, size: 64, offset: 320)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64)
!1157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1158)
!1158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !243, line: 1822, size: 2048, elements: !1159)
!1159 = !{!1160, !1161, !1166, !1173, !1177, !1221, !1222, !1226, !1239, !1240, !1261, !1265, !1266, !6378, !6379, !6383, !6388, !6389, !6393, !6397, !6489, !6493, !6494, !6498, !6499, !6503, !6507, !6512, !6516, !6520, !6524, !6528}
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1158, file: !243, line: 1823, baseType: !1007, size: 64)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !1158, file: !243, line: 1824, baseType: !1162, size: 64, offset: 64)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 64)
!1163 = !DISubroutineType(types: !1164)
!1164 = !{!979, !1165, !979, !7}
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1158, file: !243, line: 1825, baseType: !1167, size: 64, offset: 128)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64)
!1168 = !DISubroutineType(types: !1169)
!1169 = !{!1170, !1165, !733, !750, !1124}
!1170 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !438, line: 60, baseType: !1171)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !752, line: 73, baseType: !1172)
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !752, line: 15, baseType: !669)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1158, file: !243, line: 1826, baseType: !1174, size: 64, offset: 192)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 64)
!1175 = !DISubroutineType(types: !1176)
!1176 = !{!1170, !1165, !453, !750, !1124}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !1158, file: !243, line: 1827, baseType: !1178, size: 64, offset: 256)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 64)
!1179 = !DISubroutineType(types: !1180)
!1180 = !{!1170, !1181, !1220}
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 64)
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !243, line: 320, size: 384, elements: !1183)
!1183 = !{!1184, !1185, !1186, !1190, !1191, !1192, !1194, !1195}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1182, file: !243, line: 321, baseType: !1165, size: 64)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1182, file: !243, line: 326, baseType: !979, size: 64, offset: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1182, file: !243, line: 327, baseType: !1187, size: 64, offset: 128)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64)
!1188 = !DISubroutineType(types: !1189)
!1189 = !{null, !1181, !669, !669}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1182, file: !243, line: 328, baseType: !726, size: 64, offset: 192)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1182, file: !243, line: 329, baseType: !7, size: 32, offset: 256)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1182, file: !243, line: 330, baseType: !1193, size: 16, offset: 288)
!1193 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !493, line: 19, baseType: !632)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1182, file: !243, line: 331, baseType: !1193, size: 16, offset: 304)
!1195 = !DIDerivedType(tag: DW_TAG_member, scope: !1182, file: !243, line: 332, baseType: !1196, size: 64, offset: 320)
!1196 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1182, file: !243, line: 332, size: 64, elements: !1197)
!1197 = !{!1198, !1199}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1196, file: !243, line: 333, baseType: !14, size: 32)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1196, file: !243, line: 334, baseType: !1200, size: 64)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1202, line: 569, size: 448, elements: !1203)
!1202 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!1203 = !{!1204, !1205, !1206}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1201, file: !1202, line: 570, baseType: !780, size: 64)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !1201, file: !1202, line: 571, baseType: !7, size: 32, offset: 64)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1201, file: !1202, line: 572, baseType: !1207, size: 320, offset: 128)
!1207 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !1208, line: 14, baseType: !1209)
!1208 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1208, line: 29, size: 320, elements: !1210)
!1210 = !{!1211, !1212, !1213, !1219}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1209, file: !1208, line: 30, baseType: !14, size: 32)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1209, file: !1208, line: 31, baseType: !726, size: 64, offset: 64)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1209, file: !1208, line: 32, baseType: !1214, size: 64, offset: 128)
!1214 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1208, line: 16, baseType: !1215)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64)
!1216 = !DISubroutineType(types: !1217)
!1217 = !{!7, !1218, !14, !7, !726}
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1209, file: !1208, line: 33, baseType: !445, size: 128, offset: 192)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !1158, file: !243, line: 1828, baseType: !1178, size: 64, offset: 320)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !1158, file: !243, line: 1829, baseType: !1223, size: 64, offset: 384)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64)
!1224 = !DISubroutineType(types: !1225)
!1225 = !{!7, !1181, !696}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !1158, file: !243, line: 1830, baseType: !1227, size: 64, offset: 448)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{!7, !1165, !1230}
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64)
!1231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !243, line: 1776, size: 128, elements: !1232)
!1232 = !{!1233, !1238}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !1231, file: !243, line: 1777, baseType: !1234, size: 64)
!1234 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !243, line: 1773, baseType: !1235)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64)
!1236 = !DISubroutineType(types: !1237)
!1237 = !{!7, !1230, !453, !7, !979, !492, !14}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1231, file: !243, line: 1778, baseType: !979, size: 64, offset: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !1158, file: !243, line: 1831, baseType: !1227, size: 64, offset: 512)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1158, file: !243, line: 1832, baseType: !1241, size: 64, offset: 576)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 64)
!1242 = !DISubroutineType(types: !1243)
!1243 = !{!1244, !1165, !1245}
!1244 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !623, line: 52, baseType: !14)
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 64)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1247, line: 43, size: 128, elements: !1248)
!1247 = !DIFile(filename: "./include/linux/poll.h", directory: "/home/lizy2001/genbc/linux")
!1248 = !{!1249, !1260}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "_qproc", scope: !1246, file: !1247, line: 44, baseType: !1250, size: 64)
!1250 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_queue_proc", file: !1247, line: 37, baseType: !1251)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 64)
!1252 = !DISubroutineType(types: !1253)
!1253 = !{null, !1165, !1254, !1245}
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 64)
!1255 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1208, line: 40, baseType: !1256)
!1256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1208, line: 36, size: 128, elements: !1257)
!1257 = !{!1258, !1259}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1256, file: !1208, line: 37, baseType: !884)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1256, file: !1208, line: 38, baseType: !445, size: 128)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "_key", scope: !1246, file: !1247, line: 45, baseType: !1244, size: 32, offset: 64)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !1158, file: !243, line: 1833, baseType: !1262, size: 64, offset: 640)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 64)
!1263 = !DISubroutineType(types: !1264)
!1264 = !{!669, !1165, !14, !473}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !1158, file: !243, line: 1834, baseType: !1262, size: 64, offset: 704)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1158, file: !243, line: 1835, baseType: !1267, size: 64, offset: 768)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!1268 = !DISubroutineType(types: !1269)
!1269 = !{!7, !1165, !1270}
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !782, line: 305, size: 1472, elements: !1272)
!1272 = !{!1273, !1274, !1275, !1276, !1277, !1278, !1279, !6355, !6361, !6362, !6367, !6368, !6371, !6372, !6373, !6374, !6375, !6376}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1271, file: !782, line: 308, baseType: !473, size: 64)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1271, file: !782, line: 309, baseType: !473, size: 64, offset: 64)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1271, file: !782, line: 313, baseType: !1270, size: 64, offset: 128)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1271, file: !782, line: 313, baseType: !1270, size: 64, offset: 192)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1271, file: !782, line: 315, baseType: !594, size: 192, align: 64, offset: 256)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1271, file: !782, line: 323, baseType: !473, size: 64, offset: 448)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1271, file: !782, line: 327, baseType: !1280, size: 64, offset: 512)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !782, line: 388, size: 7296, elements: !1282)
!1282 = !{!1283, !6353}
!1283 = !DIDerivedType(tag: DW_TAG_member, scope: !1281, file: !782, line: 389, baseType: !1284, size: 7296)
!1284 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1281, file: !782, line: 389, size: 7296, elements: !1285)
!1285 = !{!1286, !1287, !1291, !1292, !1296, !1297, !1298, !1299, !1300, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1351, !1359, !1362, !1402, !1403, !6337, !6338, !6341, !6342, !6343, !6346, !6347, !6348, !6351, !6352}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1284, file: !782, line: 390, baseType: !1270, size: 64)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1284, file: !782, line: 391, baseType: !1288, size: 64, offset: 64)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !595, line: 31, size: 64, elements: !1289)
!1289 = !{!1290}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1288, file: !595, line: 32, baseType: !599, size: 64)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1284, file: !782, line: 392, baseType: !492, size: 64, offset: 128)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1284, file: !782, line: 394, baseType: !1293, size: 64, offset: 192)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{!473, !1165, !473, !473, !473, !473}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1284, file: !782, line: 398, baseType: !473, size: 64, offset: 256)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1284, file: !782, line: 399, baseType: !473, size: 64, offset: 320)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1284, file: !782, line: 405, baseType: !473, size: 64, offset: 384)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1284, file: !782, line: 406, baseType: !473, size: 64, offset: 448)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1284, file: !782, line: 407, baseType: !1301, size: 64, offset: 512)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 64)
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1303, line: 286, baseType: !1304)
!1303 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1303, line: 286, size: 64, elements: !1305)
!1305 = !{!1306}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1304, file: !1303, line: 286, baseType: !1307, size: 64)
!1307 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1308, line: 18, baseType: !473)
!1308 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1284, file: !782, line: 416, baseType: !544, size: 32, offset: 576)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1284, file: !782, line: 428, baseType: !544, size: 32, offset: 608)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1284, file: !782, line: 437, baseType: !544, size: 32, offset: 640)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1284, file: !782, line: 447, baseType: !544, size: 32, offset: 672)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1284, file: !782, line: 450, baseType: !532, size: 64, offset: 704)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1284, file: !782, line: 452, baseType: !7, size: 32, offset: 768)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1284, file: !782, line: 454, baseType: !884, offset: 800)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1284, file: !782, line: 457, baseType: !1317, size: 256, offset: 832)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1318, line: 35, size: 256, elements: !1319)
!1318 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1319 = !{!1320, !1321, !1322, !1324}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1317, file: !1318, line: 36, baseType: !532, size: 64)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1317, file: !1318, line: 42, baseType: !532, size: 64, offset: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1317, file: !1318, line: 46, baseType: !1323, offset: 128)
!1323 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !885, line: 29, baseType: !892)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1317, file: !1318, line: 47, baseType: !445, size: 128, offset: 128)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1284, file: !782, line: 459, baseType: !445, size: 128, offset: 1088)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1284, file: !782, line: 466, baseType: !473, size: 64, offset: 1216)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1284, file: !782, line: 467, baseType: !473, size: 64, offset: 1280)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1284, file: !782, line: 469, baseType: !473, size: 64, offset: 1344)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1284, file: !782, line: 470, baseType: !473, size: 64, offset: 1408)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1284, file: !782, line: 471, baseType: !534, size: 64, offset: 1472)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1284, file: !782, line: 472, baseType: !473, size: 64, offset: 1536)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1284, file: !782, line: 473, baseType: !473, size: 64, offset: 1600)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1284, file: !782, line: 474, baseType: !473, size: 64, offset: 1664)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1284, file: !782, line: 475, baseType: !473, size: 64, offset: 1728)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1284, file: !782, line: 477, baseType: !884, offset: 1792)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1284, file: !782, line: 478, baseType: !473, size: 64, offset: 1792)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1284, file: !782, line: 478, baseType: !473, size: 64, offset: 1856)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1284, file: !782, line: 478, baseType: !473, size: 64, offset: 1920)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1284, file: !782, line: 478, baseType: !473, size: 64, offset: 1984)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1284, file: !782, line: 479, baseType: !473, size: 64, offset: 2048)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1284, file: !782, line: 479, baseType: !473, size: 64, offset: 2112)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1284, file: !782, line: 479, baseType: !473, size: 64, offset: 2176)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1284, file: !782, line: 480, baseType: !473, size: 64, offset: 2240)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1284, file: !782, line: 480, baseType: !473, size: 64, offset: 2304)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1284, file: !782, line: 480, baseType: !473, size: 64, offset: 2368)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1284, file: !782, line: 480, baseType: !473, size: 64, offset: 2432)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1284, file: !782, line: 482, baseType: !1348, size: 2816, offset: 2496)
!1348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 2816, elements: !1349)
!1349 = !{!1350}
!1350 = !DISubrange(count: 44)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1284, file: !782, line: 488, baseType: !1352, size: 256, offset: 5312)
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1353, line: 60, size: 256, elements: !1354)
!1353 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1354 = !{!1355}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1352, file: !1353, line: 61, baseType: !1356, size: 256)
!1356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !532, size: 256, elements: !1357)
!1357 = !{!1358}
!1358 = !DISubrange(count: 4)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1284, file: !782, line: 490, baseType: !1360, size: 64, offset: 5568)
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1361, size: 64)
!1361 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !782, line: 490, flags: DIFlagFwdDecl)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1284, file: !782, line: 493, baseType: !1363, size: 896, offset: 5632)
!1363 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1364, line: 53, baseType: !1365)
!1364 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1365 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1364, line: 13, size: 896, elements: !1366)
!1366 = !{!1367, !1368, !1369, !1370, !1373, !1374, !1375, !1376, !1396, !1397, !1398}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1365, file: !1364, line: 18, baseType: !492, size: 64)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1365, file: !1364, line: 28, baseType: !534, size: 64, offset: 64)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1365, file: !1364, line: 31, baseType: !1317, size: 256, offset: 128)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1365, file: !1364, line: 32, baseType: !1371, size: 64, offset: 384)
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 64)
!1372 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1364, line: 32, flags: DIFlagFwdDecl)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1365, file: !1364, line: 37, baseType: !633, size: 16, offset: 448)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1365, file: !1364, line: 40, baseType: !1109, size: 192, offset: 512)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1365, file: !1364, line: 41, baseType: !726, size: 64, offset: 704)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1365, file: !1364, line: 42, baseType: !1377, size: 64, offset: 768)
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 64)
!1378 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1379)
!1379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1380, line: 13, size: 896, elements: !1381)
!1380 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1381 = !{!1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395}
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1379, file: !1380, line: 14, baseType: !726, size: 64)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1379, file: !1380, line: 15, baseType: !473, size: 64, offset: 64)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1379, file: !1380, line: 17, baseType: !473, size: 64, offset: 128)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1379, file: !1380, line: 17, baseType: !473, size: 64, offset: 192)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1379, file: !1380, line: 19, baseType: !669, size: 64, offset: 256)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1379, file: !1380, line: 21, baseType: !669, size: 64, offset: 320)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1379, file: !1380, line: 22, baseType: !669, size: 64, offset: 384)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1379, file: !1380, line: 23, baseType: !669, size: 64, offset: 448)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1379, file: !1380, line: 24, baseType: !669, size: 64, offset: 512)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1379, file: !1380, line: 25, baseType: !669, size: 64, offset: 576)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1379, file: !1380, line: 26, baseType: !669, size: 64, offset: 640)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1379, file: !1380, line: 27, baseType: !669, size: 64, offset: 704)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1379, file: !1380, line: 28, baseType: !669, size: 64, offset: 768)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1379, file: !1380, line: 29, baseType: !669, size: 64, offset: 832)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1365, file: !1364, line: 44, baseType: !544, size: 32, offset: 832)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1365, file: !1364, line: 50, baseType: !1193, size: 16, offset: 864)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1365, file: !1364, line: 51, baseType: !1399, size: 16, offset: 880)
!1399 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !493, line: 18, baseType: !1400)
!1400 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !495, line: 23, baseType: !1401)
!1401 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1284, file: !782, line: 495, baseType: !473, size: 64, offset: 6528)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1284, file: !782, line: 497, baseType: !1404, size: 64, offset: 6592)
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 64)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !782, line: 381, size: 384, elements: !1406)
!1406 = !{!1407, !1408, !6336}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1405, file: !782, line: 382, baseType: !544, size: 32)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1405, file: !782, line: 383, baseType: !1409, size: 128, offset: 64)
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !782, line: 376, size: 128, elements: !1410)
!1410 = !{!1411, !6334}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1409, file: !782, line: 377, baseType: !1412, size: 64)
!1412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 64)
!1413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1414, line: 640, size: 48640, elements: !1415)
!1414 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1415 = !{!1416, !1422, !1424, !1425, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1442, !1460, !1471, !1560, !1561, !1562, !1573, !1574, !1576, !1577, !1578, !1579, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1663, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1695, !1697, !1698, !1699, !1711, !1712, !1713, !1714, !1715, !1716, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1740, !1745, !2083, !2084, !2085, !2086, !2087, !2090, !2093, !2096, !2099, !4177, !4273, !4304, !4305, !4306, !4307, !4308, !4309, !4310, !4311, !4312, !4321, !4322, !4323, !4324, !4325, !4330, !4331, !4332, !4335, !4336, !5931, !5940, !5943, !5944, !5945, !5948, !5949, !6028, !6029, !6032, !6033, !6036, !6037, !6038, !6042, !6043, !6044, !6057, !6058, !6059, !6069, !6074, !6132, !6138, !6139, !6140, !6141, !6142, !6143, !6144, !6145, !6160, !6161, !6162, !6163, !6164, !6165, !6166, !6167, !6168}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1413, file: !1414, line: 646, baseType: !1417, size: 128)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1418, line: 56, size: 128, elements: !1419)
!1418 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1419 = !{!1420, !1421}
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1417, file: !1418, line: 57, baseType: !473, size: 64)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1417, file: !1418, line: 58, baseType: !862, size: 32, offset: 64)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1413, file: !1414, line: 649, baseType: !1423, size: 64, offset: 128)
!1423 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !669)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1413, file: !1414, line: 657, baseType: !726, size: 64, offset: 192)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1413, file: !1414, line: 658, baseType: !1426, size: 32, offset: 256)
!1426 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1427, line: 113, baseType: !1428)
!1427 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1427, line: 111, size: 32, elements: !1429)
!1429 = !{!1430}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1428, file: !1427, line: 112, baseType: !544, size: 32)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1413, file: !1414, line: 660, baseType: !14, size: 32, offset: 288)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1413, file: !1414, line: 661, baseType: !14, size: 32, offset: 320)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1413, file: !1414, line: 684, baseType: !7, size: 32, offset: 352)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1413, file: !1414, line: 686, baseType: !7, size: 32, offset: 384)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1413, file: !1414, line: 687, baseType: !7, size: 32, offset: 416)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1413, file: !1414, line: 688, baseType: !7, size: 32, offset: 448)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1413, file: !1414, line: 689, baseType: !14, size: 32, offset: 480)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1413, file: !1414, line: 691, baseType: !1439, size: 64, offset: 512)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 64)
!1440 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1441)
!1441 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1414, line: 691, flags: DIFlagFwdDecl)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1413, file: !1414, line: 692, baseType: !1443, size: 832, offset: 576)
!1443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1414, line: 451, size: 832, elements: !1444)
!1444 = !{!1445, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1443, file: !1414, line: 453, baseType: !1446, size: 128)
!1446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1414, line: 325, size: 128, elements: !1447)
!1447 = !{!1448, !1449}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1446, file: !1414, line: 326, baseType: !473, size: 64)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1446, file: !1414, line: 327, baseType: !862, size: 32, offset: 64)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1443, file: !1414, line: 454, baseType: !594, size: 192, align: 64, offset: 128)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1443, file: !1414, line: 455, baseType: !445, size: 128, offset: 320)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1443, file: !1414, line: 456, baseType: !14, size: 32, offset: 448)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1443, file: !1414, line: 458, baseType: !492, size: 64, offset: 512)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1443, file: !1414, line: 459, baseType: !492, size: 64, offset: 576)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1443, file: !1414, line: 460, baseType: !492, size: 64, offset: 640)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1443, file: !1414, line: 461, baseType: !492, size: 64, offset: 704)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1443, file: !1414, line: 463, baseType: !492, size: 64, offset: 768)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1443, file: !1414, line: 465, baseType: !1459, offset: 832)
!1459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1414, line: 415, elements: !898)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1413, file: !1414, line: 693, baseType: !1461, size: 384, offset: 1408)
!1461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1414, line: 489, size: 384, elements: !1462)
!1462 = !{!1463, !1464, !1465, !1466, !1467, !1468, !1469}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1461, file: !1414, line: 490, baseType: !445, size: 128)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1461, file: !1414, line: 491, baseType: !473, size: 64, offset: 128)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1461, file: !1414, line: 492, baseType: !473, size: 64, offset: 192)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1461, file: !1414, line: 493, baseType: !14, size: 32, offset: 256)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1461, file: !1414, line: 494, baseType: !633, size: 16, offset: 288)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1461, file: !1414, line: 495, baseType: !633, size: 16, offset: 304)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1461, file: !1414, line: 497, baseType: !1470, size: 64, offset: 320)
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 64)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1413, file: !1414, line: 697, baseType: !1472, size: 1792, offset: 1792)
!1472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1414, line: 507, size: 1792, elements: !1473)
!1473 = !{!1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1557, !1558}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1472, file: !1414, line: 508, baseType: !594, size: 192, align: 64)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1472, file: !1414, line: 515, baseType: !492, size: 64, offset: 192)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1472, file: !1414, line: 516, baseType: !492, size: 64, offset: 256)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1472, file: !1414, line: 517, baseType: !492, size: 64, offset: 320)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1472, file: !1414, line: 518, baseType: !492, size: 64, offset: 384)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1472, file: !1414, line: 519, baseType: !492, size: 64, offset: 448)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1472, file: !1414, line: 526, baseType: !538, size: 64, offset: 512)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1472, file: !1414, line: 527, baseType: !492, size: 64, offset: 576)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1472, file: !1414, line: 528, baseType: !14, size: 32, offset: 640)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1472, file: !1414, line: 554, baseType: !14, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1472, file: !1414, line: 555, baseType: !14, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1472, file: !1414, line: 556, baseType: !14, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1472, file: !1414, line: 557, baseType: !14, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1472, file: !1414, line: 563, baseType: !1488, size: 512, offset: 704)
!1488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !19, line: 118, size: 512, elements: !1489)
!1489 = !{!1490, !1498, !1499, !1504, !1551, !1554, !1555, !1556}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1488, file: !19, line: 119, baseType: !1491, size: 256)
!1491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1492, line: 9, size: 256, elements: !1493)
!1492 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1493 = !{!1494, !1495}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1491, file: !1492, line: 10, baseType: !594, size: 192, align: 64)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1491, file: !1492, line: 11, baseType: !1496, size: 64, offset: 192)
!1496 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1497, line: 29, baseType: !538)
!1497 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1488, file: !19, line: 120, baseType: !1496, size: 64, offset: 256)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1488, file: !19, line: 121, baseType: !1500, size: 64, offset: 320)
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 64)
!1501 = !DISubroutineType(types: !1502)
!1502 = !{!18, !1503}
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 64)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1488, file: !19, line: 122, baseType: !1505, size: 64, offset: 384)
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 64)
!1506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !19, line: 159, size: 512, align: 512, elements: !1507)
!1507 = !{!1508, !1528, !1529, !1532, !1537, !1538, !1546, !1550}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1506, file: !19, line: 160, baseType: !1509, size: 64)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 64)
!1510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !19, line: 214, size: 4608, align: 512, elements: !1511)
!1511 = !{!1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1510, file: !19, line: 215, baseType: !1323)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1510, file: !19, line: 216, baseType: !14, size: 32)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1510, file: !19, line: 217, baseType: !14, size: 32, offset: 32)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1510, file: !19, line: 218, baseType: !14, size: 32, offset: 64)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1510, file: !19, line: 219, baseType: !14, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1510, file: !19, line: 220, baseType: !14, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1510, file: !19, line: 221, baseType: !14, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1510, file: !19, line: 222, baseType: !14, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1510, file: !19, line: 233, baseType: !1496, size: 64, offset: 128)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1510, file: !19, line: 234, baseType: !1503, size: 64, offset: 192)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1510, file: !19, line: 235, baseType: !1496, size: 64, offset: 256)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1510, file: !19, line: 236, baseType: !1503, size: 64, offset: 320)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1510, file: !19, line: 237, baseType: !1525, size: 4096, offset: 512)
!1525 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1506, size: 4096, elements: !1526)
!1526 = !{!1527}
!1527 = !DISubrange(count: 8)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1506, file: !19, line: 161, baseType: !14, size: 32, offset: 64)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1506, file: !19, line: 162, baseType: !1530, size: 32, offset: 96)
!1530 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !438, line: 27, baseType: !1531)
!1531 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !752, line: 96, baseType: !7)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1506, file: !19, line: 163, baseType: !1533, size: 32, offset: 128)
!1533 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !835, line: 276, baseType: !1534)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !835, line: 276, size: 32, elements: !1535)
!1535 = !{!1536}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1534, file: !835, line: 276, baseType: !839, size: 32)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1506, file: !19, line: 164, baseType: !1503, size: 64, offset: 192)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1506, file: !19, line: 165, baseType: !1539, size: 128, offset: 256)
!1539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1492, line: 14, size: 128, elements: !1540)
!1540 = !{!1541}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1539, file: !1492, line: 15, baseType: !1542, size: 128)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !595, line: 125, size: 128, elements: !1543)
!1543 = !{!1544, !1545}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1542, file: !595, line: 126, baseType: !1288, size: 64)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1542, file: !595, line: 127, baseType: !599, size: 64, offset: 64)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1506, file: !19, line: 166, baseType: !1547, size: 64, offset: 384)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 64)
!1548 = !DISubroutineType(types: !1549)
!1549 = !{!1496}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1506, file: !19, line: 167, baseType: !1496, size: 64, offset: 448)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1488, file: !19, line: 123, baseType: !1552, size: 8, offset: 448)
!1552 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !493, line: 17, baseType: !1553)
!1553 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !495, line: 21, baseType: !650)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1488, file: !19, line: 124, baseType: !1552, size: 8, offset: 456)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1488, file: !19, line: 125, baseType: !1552, size: 8, offset: 464)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1488, file: !19, line: 126, baseType: !1552, size: 8, offset: 472)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1472, file: !1414, line: 572, baseType: !1488, size: 512, offset: 1216)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1472, file: !1414, line: 580, baseType: !1559, size: 64, offset: 1728)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 64)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1413, file: !1414, line: 721, baseType: !14, size: 32, offset: 3584)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1413, file: !1414, line: 722, baseType: !7, size: 32, offset: 3616)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1413, file: !1414, line: 723, baseType: !1563, size: 64, offset: 3648)
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 64)
!1564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1565)
!1565 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1566, line: 17, baseType: !1567)
!1566 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1566, line: 17, size: 64, elements: !1568)
!1568 = !{!1569}
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1567, file: !1566, line: 17, baseType: !1570, size: 64)
!1570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 64, elements: !1571)
!1571 = !{!1572}
!1572 = !DISubrange(count: 1)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1413, file: !1414, line: 724, baseType: !1565, size: 64, offset: 3712)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1413, file: !1414, line: 749, baseType: !1575, offset: 3776)
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1414, line: 290, elements: !898)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1413, file: !1414, line: 751, baseType: !445, size: 128, offset: 3776)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1413, file: !1414, line: 757, baseType: !1280, size: 64, offset: 3904)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1413, file: !1414, line: 758, baseType: !1280, size: 64, offset: 3968)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1413, file: !1414, line: 761, baseType: !1580, size: 320, offset: 4032)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1353, line: 34, size: 320, elements: !1581)
!1581 = !{!1582, !1583}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1580, file: !1353, line: 35, baseType: !492, size: 64)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1580, file: !1353, line: 36, baseType: !1584, size: 256, offset: 64)
!1584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1270, size: 256, elements: !1357)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1413, file: !1414, line: 766, baseType: !7, size: 32, offset: 4352)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1413, file: !1414, line: 767, baseType: !7, size: 32, offset: 4384)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1413, file: !1414, line: 768, baseType: !7, size: 32, offset: 4416)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1413, file: !1414, line: 770, baseType: !7, size: 32, offset: 4448)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1413, file: !1414, line: 772, baseType: !473, size: 64, offset: 4480)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1413, file: !1414, line: 775, baseType: !14, size: 32, offset: 4544)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1413, file: !1414, line: 778, baseType: !14, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1413, file: !1414, line: 779, baseType: !14, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1413, file: !1414, line: 780, baseType: !14, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1413, file: !1414, line: 803, baseType: !14, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1413, file: !1414, line: 806, baseType: !14, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1413, file: !1414, line: 807, baseType: !14, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1413, file: !1414, line: 809, baseType: !14, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1413, file: !1414, line: 815, baseType: !14, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1413, file: !1414, line: 831, baseType: !473, size: 64, offset: 4672)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1413, file: !1414, line: 833, baseType: !1601, size: 384, offset: 4736)
!1601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !24, line: 25, size: 384, elements: !1602)
!1602 = !{!1603, !1608}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1601, file: !24, line: 26, baseType: !1604, size: 64)
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 64)
!1605 = !DISubroutineType(types: !1606)
!1606 = !{!669, !1607}
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 64)
!1608 = !DIDerivedType(tag: DW_TAG_member, scope: !1601, file: !24, line: 27, baseType: !1609, size: 320, offset: 64)
!1609 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1601, file: !24, line: 27, size: 320, elements: !1610)
!1610 = !{!1611, !1621, !1648}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1609, file: !24, line: 36, baseType: !1612, size: 320)
!1612 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1609, file: !24, line: 29, size: 320, elements: !1613)
!1613 = !{!1614, !1616, !1617, !1618, !1619, !1620}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1612, file: !24, line: 30, baseType: !1615, size: 64)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1612, file: !24, line: 31, baseType: !862, size: 32, offset: 64)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1612, file: !24, line: 32, baseType: !862, size: 32, offset: 96)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1612, file: !24, line: 33, baseType: !862, size: 32, offset: 128)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1612, file: !24, line: 34, baseType: !492, size: 64, offset: 192)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1612, file: !24, line: 35, baseType: !1615, size: 64, offset: 256)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1609, file: !24, line: 46, baseType: !1622, size: 192)
!1622 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1609, file: !24, line: 38, size: 192, elements: !1623)
!1623 = !{!1624, !1625, !1626, !1647}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1622, file: !24, line: 39, baseType: !1530, size: 32)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1622, file: !24, line: 40, baseType: !23, size: 32, offset: 32)
!1626 = !DIDerivedType(tag: DW_TAG_member, scope: !1622, file: !24, line: 41, baseType: !1627, size: 64, offset: 64)
!1627 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1622, file: !24, line: 41, size: 64, elements: !1628)
!1628 = !{!1629, !1637}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1627, file: !24, line: 42, baseType: !1630, size: 64)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64)
!1631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1632, line: 7, size: 128, elements: !1633)
!1632 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1633 = !{!1634, !1636}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1631, file: !1632, line: 8, baseType: !1635, size: 64)
!1635 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !752, line: 93, baseType: !540)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1631, file: !1632, line: 9, baseType: !540, size: 64, offset: 64)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1627, file: !24, line: 43, baseType: !1638, size: 64)
!1638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 64)
!1639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1640, line: 7, size: 64, elements: !1641)
!1640 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1641 = !{!1642, !1646}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1639, file: !1640, line: 8, baseType: !1643, size: 32)
!1643 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1640, line: 5, baseType: !1644)
!1644 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !493, line: 20, baseType: !1645)
!1645 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !495, line: 26, baseType: !7)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1639, file: !1640, line: 9, baseType: !1644, size: 32, offset: 32)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1622, file: !24, line: 45, baseType: !492, size: 64, offset: 128)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1609, file: !24, line: 54, baseType: !1649, size: 256)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1609, file: !24, line: 48, size: 256, elements: !1650)
!1650 = !{!1651, !1659, !1660, !1661, !1662}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1649, file: !24, line: 49, baseType: !1652, size: 64)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 64)
!1653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !1654, line: 36, size: 64, elements: !1655)
!1654 = !DIFile(filename: "./include/uapi/asm-generic/poll.h", directory: "/home/lizy2001/genbc/linux")
!1655 = !{!1656, !1657, !1658}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1653, file: !1654, line: 37, baseType: !7, size: 32)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1653, file: !1654, line: 38, baseType: !1401, size: 16, offset: 32)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !1653, file: !1654, line: 39, baseType: !1401, size: 16, offset: 48)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1649, file: !24, line: 50, baseType: !7, size: 32, offset: 64)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1649, file: !24, line: 51, baseType: !7, size: 32, offset: 96)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1649, file: !24, line: 52, baseType: !473, size: 64, offset: 128)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1649, file: !24, line: 53, baseType: !473, size: 64, offset: 192)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1413, file: !1414, line: 835, baseType: !1664, size: 32, offset: 5120)
!1664 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !438, line: 22, baseType: !1665)
!1665 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !752, line: 28, baseType: !7)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1413, file: !1414, line: 836, baseType: !1664, size: 32, offset: 5152)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1413, file: !1414, line: 840, baseType: !473, size: 64, offset: 5184)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1413, file: !1414, line: 849, baseType: !1412, size: 64, offset: 5248)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1413, file: !1414, line: 852, baseType: !1412, size: 64, offset: 5312)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1413, file: !1414, line: 857, baseType: !445, size: 128, offset: 5376)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1413, file: !1414, line: 858, baseType: !445, size: 128, offset: 5504)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1413, file: !1414, line: 859, baseType: !1412, size: 64, offset: 5632)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1413, file: !1414, line: 867, baseType: !445, size: 128, offset: 5696)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1413, file: !1414, line: 868, baseType: !445, size: 128, offset: 5824)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1413, file: !1414, line: 871, baseType: !1676, size: 64, offset: 5952)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 64)
!1677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !252, line: 59, size: 768, elements: !1678)
!1678 = !{!1679, !1680, !1681, !1682, !1684, !1685, !1686, !1687}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1677, file: !252, line: 61, baseType: !1426, size: 32)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1677, file: !252, line: 62, baseType: !14, size: 32, offset: 32)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1677, file: !252, line: 63, baseType: !884, offset: 64)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1677, file: !252, line: 65, baseType: !1683, size: 256, offset: 64)
!1683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 256, elements: !1357)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1677, file: !252, line: 66, baseType: !1012, size: 64, offset: 320)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1677, file: !252, line: 68, baseType: !1255, size: 128, offset: 384)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1677, file: !252, line: 69, baseType: !460, size: 128, align: 64, offset: 512)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1677, file: !252, line: 70, baseType: !1688, size: 128, offset: 640)
!1688 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1689, size: 128, elements: !1571)
!1689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !252, line: 54, size: 128, elements: !1690)
!1690 = !{!1691, !1692}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1689, file: !252, line: 55, baseType: !7, size: 32)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1689, file: !252, line: 56, baseType: !1693, size: 64, offset: 64)
!1693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1694, size: 64)
!1694 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !252, line: 56, flags: DIFlagFwdDecl)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1413, file: !1414, line: 872, baseType: !1696, size: 512, offset: 6016)
!1696 = !DICompositeType(tag: DW_TAG_array_type, baseType: !437, size: 512, elements: !1357)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1413, file: !1414, line: 873, baseType: !445, size: 128, offset: 6528)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1413, file: !1414, line: 874, baseType: !445, size: 128, offset: 6656)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1413, file: !1414, line: 876, baseType: !1700, size: 64, offset: 6784)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 64)
!1701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1702, line: 26, size: 192, elements: !1703)
!1702 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1703 = !{!1704, !1705}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1701, file: !1702, line: 27, baseType: !14, size: 32)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1701, file: !1702, line: 28, baseType: !1706, size: 128, offset: 64)
!1706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1707, line: 43, size: 128, elements: !1708)
!1707 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1708 = !{!1709, !1710}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1706, file: !1707, line: 44, baseType: !1323)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1706, file: !1707, line: 45, baseType: !445, size: 128)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1413, file: !1414, line: 879, baseType: !695, size: 64, offset: 6848)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1413, file: !1414, line: 882, baseType: !695, size: 64, offset: 6912)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1413, file: !1414, line: 884, baseType: !492, size: 64, offset: 6976)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1413, file: !1414, line: 885, baseType: !492, size: 64, offset: 7040)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1413, file: !1414, line: 890, baseType: !492, size: 64, offset: 7104)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1413, file: !1414, line: 891, baseType: !1717, size: 128, offset: 7168)
!1717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1414, line: 242, size: 128, elements: !1718)
!1718 = !{!1719, !1720, !1721}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1717, file: !1414, line: 244, baseType: !492, size: 64)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1717, file: !1414, line: 245, baseType: !492, size: 64, offset: 64)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1717, file: !1414, line: 246, baseType: !1323, offset: 128)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1413, file: !1414, line: 900, baseType: !473, size: 64, offset: 7296)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1413, file: !1414, line: 901, baseType: !473, size: 64, offset: 7360)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1413, file: !1414, line: 904, baseType: !492, size: 64, offset: 7424)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1413, file: !1414, line: 907, baseType: !492, size: 64, offset: 7488)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1413, file: !1414, line: 910, baseType: !473, size: 64, offset: 7552)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1413, file: !1414, line: 911, baseType: !473, size: 64, offset: 7616)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1413, file: !1414, line: 914, baseType: !1729, size: 640, offset: 7680)
!1729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1730, line: 123, size: 640, elements: !1731)
!1730 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1731 = !{!1732, !1738, !1739}
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1729, file: !1730, line: 124, baseType: !1733, size: 576)
!1733 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1734, size: 576, elements: !1022)
!1734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1730, line: 108, size: 192, elements: !1735)
!1735 = !{!1736, !1737}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1734, file: !1730, line: 109, baseType: !492, size: 64)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1734, file: !1730, line: 110, baseType: !1539, size: 128, offset: 64)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1729, file: !1730, line: 125, baseType: !14, size: 32, offset: 576)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1729, file: !1730, line: 126, baseType: !14, size: 32, offset: 608)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1413, file: !1414, line: 917, baseType: !1741, size: 192, offset: 8320)
!1741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1730, line: 134, size: 192, elements: !1742)
!1742 = !{!1743, !1744}
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1741, file: !1730, line: 135, baseType: !460, size: 128, align: 64)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1741, file: !1730, line: 136, baseType: !14, size: 32, offset: 128)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1413, file: !1414, line: 923, baseType: !1746, size: 64, offset: 8512)
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 64)
!1747 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1748)
!1748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1749, line: 111, size: 1280, elements: !1750)
!1749 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1750 = !{!1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1768, !1769, !1770, !1771, !1772, !1773, !1883, !1884, !1885, !1886, !1912, !2068, !2078}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1748, file: !1749, line: 112, baseType: !544, size: 32)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1748, file: !1749, line: 120, baseType: !804, size: 32, offset: 32)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1748, file: !1749, line: 121, baseType: !812, size: 32, offset: 64)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1748, file: !1749, line: 122, baseType: !804, size: 32, offset: 96)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1748, file: !1749, line: 123, baseType: !812, size: 32, offset: 128)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1748, file: !1749, line: 124, baseType: !804, size: 32, offset: 160)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1748, file: !1749, line: 125, baseType: !812, size: 32, offset: 192)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1748, file: !1749, line: 126, baseType: !804, size: 32, offset: 224)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1748, file: !1749, line: 127, baseType: !812, size: 32, offset: 256)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1748, file: !1749, line: 128, baseType: !14, size: 32, offset: 288)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1748, file: !1749, line: 129, baseType: !1762, size: 64, offset: 320)
!1762 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1763, line: 26, baseType: !1764)
!1763 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1763, line: 24, size: 64, elements: !1765)
!1765 = !{!1766}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1764, file: !1763, line: 25, baseType: !1767, size: 64)
!1767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !624, size: 64, elements: !634)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1748, file: !1749, line: 130, baseType: !1762, size: 64, offset: 384)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1748, file: !1749, line: 131, baseType: !1762, size: 64, offset: 448)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1748, file: !1749, line: 132, baseType: !1762, size: 64, offset: 512)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1748, file: !1749, line: 133, baseType: !1762, size: 64, offset: 576)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1748, file: !1749, line: 135, baseType: !650, size: 8, offset: 640)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1748, file: !1749, line: 137, baseType: !1774, size: 64, offset: 704)
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 64)
!1775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1776, line: 189, size: 1664, elements: !1777)
!1776 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1777 = !{!1778, !1779, !1782, !1787, !1788, !1791, !1792, !1799, !1800, !1801, !1802, !1805, !1806, !1807, !1808, !1809, !1847, !1868}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1775, file: !1776, line: 190, baseType: !1426, size: 32)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1775, file: !1776, line: 191, baseType: !1780, size: 32, offset: 32)
!1780 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1776, line: 28, baseType: !1781)
!1781 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !438, line: 98, baseType: !1644)
!1782 = !DIDerivedType(tag: DW_TAG_member, scope: !1775, file: !1776, line: 192, baseType: !1783, size: 192, offset: 64)
!1783 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1775, file: !1776, line: 192, size: 192, elements: !1784)
!1784 = !{!1785, !1786}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1783, file: !1776, line: 193, baseType: !445, size: 128)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1783, file: !1776, line: 194, baseType: !594, size: 192, align: 64)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1775, file: !1776, line: 199, baseType: !1317, size: 256, offset: 256)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1775, file: !1776, line: 200, baseType: !1789, size: 64, offset: 512)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 64)
!1790 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1776, line: 200, flags: DIFlagFwdDecl)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1775, file: !1776, line: 201, baseType: !726, size: 64, offset: 576)
!1792 = !DIDerivedType(tag: DW_TAG_member, scope: !1775, file: !1776, line: 202, baseType: !1793, size: 64, offset: 640)
!1793 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1775, file: !1776, line: 202, size: 64, elements: !1794)
!1794 = !{!1795, !1798}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1793, file: !1776, line: 203, baseType: !1796, size: 64)
!1796 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1797, line: 8, baseType: !539)
!1797 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1793, file: !1776, line: 204, baseType: !1796, size: 64)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1775, file: !1776, line: 206, baseType: !1796, size: 64, offset: 704)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1775, file: !1776, line: 207, baseType: !804, size: 32, offset: 768)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1775, file: !1776, line: 208, baseType: !812, size: 32, offset: 800)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1775, file: !1776, line: 209, baseType: !1803, size: 32, offset: 832)
!1803 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1776, line: 31, baseType: !1804)
!1804 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !438, line: 104, baseType: !862)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1775, file: !1776, line: 210, baseType: !633, size: 16, offset: 864)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1775, file: !1776, line: 211, baseType: !633, size: 16, offset: 880)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1775, file: !1776, line: 215, baseType: !1401, size: 16, offset: 896)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1775, file: !1776, line: 222, baseType: !473, size: 64, offset: 960)
!1809 = !DIDerivedType(tag: DW_TAG_member, scope: !1775, file: !1776, line: 239, baseType: !1810, size: 320, offset: 1024)
!1810 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1775, file: !1776, line: 239, size: 320, elements: !1811)
!1811 = !{!1812, !1839}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1810, file: !1776, line: 240, baseType: !1813, size: 320)
!1813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1776, line: 108, size: 320, elements: !1814)
!1814 = !{!1815, !1816, !1828, !1831, !1838}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1813, file: !1776, line: 110, baseType: !473, size: 64)
!1816 = !DIDerivedType(tag: DW_TAG_member, scope: !1813, file: !1776, line: 111, baseType: !1817, size: 64, offset: 64)
!1817 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1813, file: !1776, line: 111, size: 64, elements: !1818)
!1818 = !{!1819, !1827}
!1819 = !DIDerivedType(tag: DW_TAG_member, scope: !1817, file: !1776, line: 112, baseType: !1820, size: 64)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1817, file: !1776, line: 112, size: 64, elements: !1821)
!1821 = !{!1822, !1823}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1820, file: !1776, line: 114, baseType: !1193, size: 16)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1820, file: !1776, line: 115, baseType: !1824, size: 48, offset: 16)
!1824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 48, elements: !1825)
!1825 = !{!1826}
!1826 = !DISubrange(count: 6)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1817, file: !1776, line: 121, baseType: !473, size: 64)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1813, file: !1776, line: 123, baseType: !1829, size: 64, offset: 128)
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 64)
!1830 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1776, line: 96, flags: DIFlagFwdDecl)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1813, file: !1776, line: 124, baseType: !1832, size: 64, offset: 192)
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1833, size: 64)
!1833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1776, line: 102, size: 192, elements: !1834)
!1834 = !{!1835, !1836, !1837}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1833, file: !1776, line: 103, baseType: !460, size: 128, align: 64)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1833, file: !1776, line: 104, baseType: !1426, size: 32, offset: 128)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1833, file: !1776, line: 105, baseType: !696, size: 8, offset: 160)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1813, file: !1776, line: 125, baseType: !453, size: 64, offset: 256)
!1839 = !DIDerivedType(tag: DW_TAG_member, scope: !1810, file: !1776, line: 241, baseType: !1840, size: 320)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1810, file: !1776, line: 241, size: 320, elements: !1841)
!1841 = !{!1842, !1843, !1844, !1845, !1846}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1840, file: !1776, line: 242, baseType: !473, size: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1840, file: !1776, line: 243, baseType: !473, size: 64, offset: 64)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1840, file: !1776, line: 244, baseType: !1829, size: 64, offset: 128)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1840, file: !1776, line: 245, baseType: !1832, size: 64, offset: 192)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1840, file: !1776, line: 246, baseType: !733, size: 64, offset: 256)
!1847 = !DIDerivedType(tag: DW_TAG_member, scope: !1775, file: !1776, line: 254, baseType: !1848, size: 256, offset: 1344)
!1848 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1775, file: !1776, line: 254, size: 256, elements: !1849)
!1849 = !{!1850, !1856}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1848, file: !1776, line: 255, baseType: !1851, size: 256)
!1851 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1776, line: 128, size: 256, elements: !1852)
!1852 = !{!1853, !1854}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1851, file: !1776, line: 129, baseType: !726, size: 64)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1851, file: !1776, line: 130, baseType: !1855, size: 256)
!1855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !726, size: 256, elements: !1357)
!1856 = !DIDerivedType(tag: DW_TAG_member, scope: !1848, file: !1776, line: 256, baseType: !1857, size: 256)
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1848, file: !1776, line: 256, size: 256, elements: !1858)
!1858 = !{!1859, !1860}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1857, file: !1776, line: 258, baseType: !445, size: 128)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1857, file: !1776, line: 259, baseType: !1861, size: 128, offset: 128)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1862, line: 22, size: 128, elements: !1863)
!1862 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1863 = !{!1864, !1867}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1861, file: !1862, line: 23, baseType: !1865, size: 64)
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 64)
!1866 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1862, line: 23, flags: DIFlagFwdDecl)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1861, file: !1862, line: 24, baseType: !473, size: 64, offset: 64)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1775, file: !1776, line: 274, baseType: !1869, size: 64, offset: 1600)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 64)
!1870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1776, line: 170, size: 192, elements: !1871)
!1871 = !{!1872, !1881, !1882}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1870, file: !1776, line: 171, baseType: !1873, size: 64)
!1873 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1776, line: 165, baseType: !1874)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 64)
!1875 = !DISubroutineType(types: !1876)
!1876 = !{!7, !1774, !1877, !1879, !1774}
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1878, size: 64)
!1878 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1830)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 64)
!1880 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1851)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1870, file: !1776, line: 172, baseType: !1774, size: 64, offset: 64)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1870, file: !1776, line: 173, baseType: !1829, size: 64, offset: 128)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1748, file: !1749, line: 138, baseType: !1774, size: 64, offset: 768)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1748, file: !1749, line: 139, baseType: !1774, size: 64, offset: 832)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1748, file: !1749, line: 140, baseType: !1774, size: 64, offset: 896)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1748, file: !1749, line: 145, baseType: !1887, size: 64, offset: 960)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 64)
!1888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1889, line: 13, size: 896, elements: !1890)
!1889 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1890 = !{!1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1888, file: !1889, line: 14, baseType: !1426, size: 32)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1888, file: !1889, line: 15, baseType: !544, size: 32, offset: 32)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1888, file: !1889, line: 16, baseType: !544, size: 32, offset: 64)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1888, file: !1889, line: 21, baseType: !532, size: 64, offset: 128)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1888, file: !1889, line: 27, baseType: !473, size: 64, offset: 192)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1888, file: !1889, line: 28, baseType: !473, size: 64, offset: 256)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1888, file: !1889, line: 29, baseType: !532, size: 64, offset: 320)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1888, file: !1889, line: 32, baseType: !437, size: 128, offset: 384)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1888, file: !1889, line: 33, baseType: !804, size: 32, offset: 512)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1888, file: !1889, line: 37, baseType: !532, size: 64, offset: 576)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1888, file: !1889, line: 44, baseType: !1902, size: 256, offset: 640)
!1902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1903, line: 15, size: 256, elements: !1904)
!1903 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1904 = !{!1905, !1906, !1907, !1908, !1909, !1910, !1911}
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1902, file: !1903, line: 16, baseType: !1323)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1902, file: !1903, line: 18, baseType: !7, size: 32)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1902, file: !1903, line: 19, baseType: !7, size: 32, offset: 32)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1902, file: !1903, line: 20, baseType: !7, size: 32, offset: 64)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1902, file: !1903, line: 21, baseType: !7, size: 32, offset: 96)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1902, file: !1903, line: 22, baseType: !473, size: 64, offset: 128)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1902, file: !1903, line: 23, baseType: !473, size: 64, offset: 192)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1748, file: !1749, line: 146, baseType: !1913, size: 64, offset: 1024)
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1914, size: 64)
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !1915, line: 56, size: 4160, elements: !1916)
!1915 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1916 = !{!1917, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1956, !1957, !1958, !1959, !1960, !1972, !2053, !2054, !2066}
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !1914, file: !1915, line: 57, baseType: !1918, size: 576)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !1915, line: 23, size: 576, elements: !1919)
!1919 = !{!1920, !1921}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !1918, file: !1915, line: 24, baseType: !862, size: 32)
!1921 = !DIDerivedType(tag: DW_TAG_member, scope: !1918, file: !1915, line: 25, baseType: !1922, size: 512, offset: 64)
!1922 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1918, file: !1915, line: 25, size: 512, elements: !1923)
!1923 = !{!1924, !1933}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !1922, file: !1915, line: 26, baseType: !1925, size: 480)
!1925 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1926, size: 480, elements: !1931)
!1926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !1915, line: 17, size: 96, elements: !1927)
!1927 = !{!1928, !1929, !1930}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1926, file: !1915, line: 18, baseType: !862, size: 32)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !1926, file: !1915, line: 19, baseType: !862, size: 32, offset: 32)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1926, file: !1915, line: 20, baseType: !862, size: 32, offset: 64)
!1931 = !{!1932}
!1932 = !DISubrange(count: 5)
!1933 = !DIDerivedType(tag: DW_TAG_member, scope: !1922, file: !1915, line: 27, baseType: !1934, size: 128)
!1934 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1922, file: !1915, line: 27, size: 128, elements: !1935)
!1935 = !{!1936, !1938}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !1934, file: !1915, line: 28, baseType: !1937, size: 64)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1926, size: 64)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !1934, file: !1915, line: 29, baseType: !1937, size: 64, offset: 64)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !1914, file: !1915, line: 58, baseType: !1918, size: 576, offset: 576)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !1914, file: !1915, line: 59, baseType: !1918, size: 576, offset: 1152)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1914, file: !1915, line: 60, baseType: !544, size: 32, offset: 1728)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1914, file: !1915, line: 61, baseType: !1913, size: 64, offset: 1792)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1914, file: !1915, line: 62, baseType: !7, size: 32, offset: 1856)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1914, file: !1915, line: 63, baseType: !804, size: 32, offset: 1888)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1914, file: !1915, line: 64, baseType: !812, size: 32, offset: 1920)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1914, file: !1915, line: 65, baseType: !1947, size: 192, offset: 1984)
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !1948, line: 7, size: 192, elements: !1949)
!1948 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!1949 = !{!1950, !1951, !1955}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !1947, file: !1948, line: 8, baseType: !532, size: 64)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1947, file: !1948, line: 9, baseType: !1952, size: 64, offset: 64)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 64)
!1953 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1954)
!1954 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !1948, line: 5, flags: DIFlagFwdDecl)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !1947, file: !1948, line: 10, baseType: !14, size: 32, offset: 128)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1914, file: !1915, line: 66, baseType: !473, size: 64, offset: 2176)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !1914, file: !1915, line: 74, baseType: !445, size: 128, offset: 2240)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !1914, file: !1915, line: 75, baseType: !1774, size: 64, offset: 2368)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !1914, file: !1915, line: 76, baseType: !1317, size: 256, offset: 2432)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1914, file: !1915, line: 83, baseType: !1961, size: 256, offset: 2688)
!1961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1962, line: 102, size: 256, elements: !1963)
!1962 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1963 = !{!1964, !1965, !1966}
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1961, file: !1962, line: 103, baseType: !532, size: 64)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1961, file: !1962, line: 104, baseType: !445, size: 128, offset: 64)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1961, file: !1962, line: 105, baseType: !1967, size: 64, offset: 192)
!1967 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1962, line: 21, baseType: !1968)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 64)
!1969 = !DISubroutineType(types: !1970)
!1970 = !{null, !1971}
!1971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 64)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1914, file: !1915, line: 85, baseType: !1973, size: 768, offset: 2944)
!1973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !1974, line: 156, size: 768, elements: !1975)
!1974 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1975 = !{!1976, !1981}
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !1973, file: !1974, line: 157, baseType: !1977, size: 64)
!1977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1978, size: 64)
!1978 = !DISubroutineType(types: !1979)
!1979 = !{!7, !1980}
!1980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1973, size: 64)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1973, file: !1974, line: 158, baseType: !1982, size: 704, offset: 64)
!1982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !1974, line: 150, size: 704, elements: !1983)
!1983 = !{!1984, !2052}
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1982, file: !1974, line: 152, baseType: !1985, size: 640)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !1974, line: 131, size: 640, elements: !1986)
!1986 = !{!1987, !2020, !2021, !2022, !2042, !2043, !2045, !2051}
!1987 = !DIDerivedType(tag: DW_TAG_member, scope: !1985, file: !1974, line: 132, baseType: !1988, size: 192)
!1988 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1985, file: !1974, line: 132, size: 192, elements: !1989)
!1989 = !{!1990, !2019}
!1990 = !DIDerivedType(tag: DW_TAG_member, scope: !1988, file: !1974, line: 133, baseType: !1991, size: 192)
!1991 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1988, file: !1974, line: 133, size: 192, elements: !1992)
!1992 = !{!1993, !2016, !2017, !2018}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !1991, file: !1974, line: 134, baseType: !1994, size: 64)
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1995, size: 64)
!1995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !1974, line: 112, size: 512, elements: !1996)
!1996 = !{!1997, !1998, !1999, !2000, !2001, !2002, !2008, !2014, !2015}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !1995, file: !1974, line: 113, baseType: !453, size: 64)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1995, file: !1974, line: 114, baseType: !726, size: 64, offset: 64)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !1995, file: !1974, line: 115, baseType: !7, size: 32, offset: 128)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1995, file: !1974, line: 116, baseType: !801, size: 16, offset: 160)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1995, file: !1974, line: 117, baseType: !1994, size: 64, offset: 192)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !1995, file: !1974, line: 118, baseType: !2003, size: 64, offset: 256)
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 64)
!2004 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !1974, line: 47, baseType: !2005)
!2005 = !DISubroutineType(types: !2006)
!2006 = !{!7, !1994, !7, !726, !2007, !1124}
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 64)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1995, file: !1974, line: 119, baseType: !2009, size: 64, offset: 320)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 64)
!2010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !1974, line: 94, size: 192, elements: !2011)
!2011 = !{!2012, !2013}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2010, file: !1974, line: 95, baseType: !544, size: 32)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2010, file: !1974, line: 96, baseType: !1255, size: 128, offset: 64)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !1995, file: !1974, line: 120, baseType: !726, size: 64, offset: 384)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !1995, file: !1974, line: 121, baseType: !726, size: 64, offset: 448)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1991, file: !1974, line: 135, baseType: !7, size: 32, offset: 64)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1991, file: !1974, line: 136, baseType: !7, size: 32, offset: 96)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !1991, file: !1974, line: 137, baseType: !7, size: 32, offset: 128)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1988, file: !1974, line: 139, baseType: !460, size: 128, align: 64)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !1985, file: !1974, line: 141, baseType: !1700, size: 64, offset: 192)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !1985, file: !1974, line: 142, baseType: !1994, size: 64, offset: 256)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1985, file: !1974, line: 143, baseType: !2023, size: 64, offset: 320)
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2024, size: 64)
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !1974, line: 161, size: 960, elements: !2025)
!2025 = !{!2026, !2027, !2031, !2038}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !2024, file: !1974, line: 162, baseType: !1973, size: 768)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !2024, file: !1974, line: 163, baseType: !2028, size: 64, offset: 768)
!2028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2029, size: 64)
!2029 = !DISubroutineType(types: !2030)
!2030 = !{!1980, !2023}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !2024, file: !1974, line: 164, baseType: !2032, size: 64, offset: 832)
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 64)
!2033 = !DISubroutineType(types: !2034)
!2034 = !{null, !2035, !1994, !2036, !2037}
!2035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 64)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !2024, file: !1974, line: 167, baseType: !2039, size: 64, offset: 896)
!2039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2040, size: 64)
!2040 = !DISubroutineType(types: !2041)
!2041 = !{!7, !2035, !1994}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1985, file: !1974, line: 144, baseType: !1980, size: 64, offset: 384)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1985, file: !1974, line: 145, baseType: !2044, size: 64, offset: 448)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1982, size: 64)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1985, file: !1974, line: 146, baseType: !2046, size: 64, offset: 512)
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 64)
!2047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !1974, line: 124, size: 256, elements: !2048)
!2048 = !{!2049, !2050}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2047, file: !1974, line: 125, baseType: !594, size: 192, align: 64)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2047, file: !1974, line: 126, baseType: !2035, size: 64, offset: 192)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1985, file: !1974, line: 147, baseType: !1012, size: 64, offset: 576)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1982, file: !1974, line: 153, baseType: !1288, size: 64, offset: 640)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !1914, file: !1915, line: 86, baseType: !2035, size: 64, offset: 3712)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1914, file: !1915, line: 88, baseType: !2055, size: 64, offset: 3776)
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 64)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !1915, line: 92, size: 576, elements: !2057)
!2057 = !{!2058, !2059, !2060, !2061, !2062}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2056, file: !1915, line: 93, baseType: !437, size: 128)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2056, file: !1915, line: 94, baseType: !1913, size: 64, offset: 128)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2056, file: !1915, line: 95, baseType: !804, size: 32, offset: 192)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2056, file: !1915, line: 96, baseType: !7, size: 32, offset: 224)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !2056, file: !1915, line: 97, baseType: !2063, size: 320, offset: 256)
!2063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !544, size: 320, elements: !2064)
!2064 = !{!2065}
!2065 = !DISubrange(count: 10)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !1914, file: !1915, line: 89, baseType: !2067, size: 320, offset: 3840)
!2067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 320, elements: !2064)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1748, file: !1749, line: 147, baseType: !2069, size: 64, offset: 1088)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 64)
!2070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1749, line: 25, size: 64, elements: !2071)
!2071 = !{!2072, !2073, !2074}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2070, file: !1749, line: 26, baseType: !544, size: 32)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2070, file: !1749, line: 27, baseType: !7, size: 32, offset: 32)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2070, file: !1749, line: 28, baseType: !2075, offset: 64)
!2075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !812, elements: !2076)
!2076 = !{!2077}
!2077 = !DISubrange(count: 0)
!2078 = !DIDerivedType(tag: DW_TAG_member, scope: !1748, file: !1749, line: 149, baseType: !2079, size: 128, offset: 1152)
!2079 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1748, file: !1749, line: 149, size: 128, elements: !2080)
!2080 = !{!2081, !2082}
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2079, file: !1749, line: 150, baseType: !7, size: 32)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2079, file: !1749, line: 151, baseType: !460, size: 128, align: 64)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1413, file: !1414, line: 926, baseType: !1746, size: 64, offset: 8576)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1413, file: !1414, line: 929, baseType: !1746, size: 64, offset: 8640)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1413, file: !1414, line: 933, baseType: !1774, size: 64, offset: 8704)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1413, file: !1414, line: 943, baseType: !428, size: 128, offset: 8768)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1413, file: !1414, line: 945, baseType: !2088, size: 64, offset: 8896)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 64)
!2089 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1414, line: 49, flags: DIFlagFwdDecl)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1413, file: !1414, line: 956, baseType: !2091, size: 64, offset: 8960)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 64)
!2092 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1414, line: 45, flags: DIFlagFwdDecl)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1413, file: !1414, line: 959, baseType: !2094, size: 64, offset: 9024)
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 64)
!2095 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1414, line: 959, flags: DIFlagFwdDecl)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1413, file: !1414, line: 962, baseType: !2097, size: 64, offset: 9088)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 64)
!2098 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1414, line: 66, flags: DIFlagFwdDecl)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1413, file: !1414, line: 966, baseType: !2100, size: 64, offset: 9152)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 64)
!2101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2102, line: 31, size: 576, elements: !2103)
!2102 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!2103 = !{!2104, !2105, !2108, !2111, !2114, !2115, !4160, !4163, !4164}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2101, file: !2102, line: 32, baseType: !544, size: 32)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !2101, file: !2102, line: 33, baseType: !2106, size: 64, offset: 64)
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2107, size: 64)
!2107 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !2102, line: 9, flags: DIFlagFwdDecl)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !2101, file: !2102, line: 34, baseType: !2109, size: 64, offset: 128)
!2109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 64)
!2110 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !2102, line: 10, flags: DIFlagFwdDecl)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !2101, file: !2102, line: 35, baseType: !2112, size: 64, offset: 192)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 64)
!2113 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !2102, line: 8, flags: DIFlagFwdDecl)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !2101, file: !2102, line: 36, baseType: !1693, size: 64, offset: 256)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !2101, file: !2102, line: 37, baseType: !2116, size: 64, offset: 320)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 64)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !2118, line: 56, size: 16896, elements: !2119)
!2118 = !DIFile(filename: "./include/net/net_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2119 = !{!2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2148, !2149, !2150, !2154, !2155, !2156, !2157, !2158, !2161, !2163, !2164, !2179, !2180, !2181, !2182, !2192, !2262, !2268, !2274, !2287, !2703, !3473, !3474, !3489, !4132, !4133, !4159}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "passive", scope: !2117, file: !2118, line: 60, baseType: !1426, size: 32)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2117, file: !2118, line: 63, baseType: !1426, size: 32, offset: 32)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "rules_mod_lock", scope: !2117, file: !2118, line: 66, baseType: !884, offset: 64)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "dev_unreg_count", scope: !2117, file: !2118, line: 68, baseType: !14, size: 32, offset: 64)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_seq", scope: !2117, file: !2118, line: 70, baseType: !14, size: 32, offset: 96)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !2117, file: !2118, line: 71, baseType: !7, size: 32, offset: 128)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "nsid_lock", scope: !2117, file: !2118, line: 73, baseType: !884, offset: 160)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_genid", scope: !2117, file: !2118, line: 74, baseType: !544, size: 32, offset: 160)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2117, file: !2118, line: 76, baseType: !445, size: 128, offset: 192)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "exit_list", scope: !2117, file: !2118, line: 77, baseType: !445, size: 128, offset: 320)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_list", scope: !2117, file: !2118, line: 83, baseType: !1147, size: 64, offset: 448)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "key_domain", scope: !2117, file: !2118, line: 86, baseType: !1832, size: 64, offset: 512)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2117, file: !2118, line: 88, baseType: !1913, size: 64, offset: 576)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2117, file: !2118, line: 89, baseType: !2055, size: 64, offset: 640)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "netns_ids", scope: !2117, file: !2118, line: 90, baseType: !2135, size: 192, offset: 704)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !2136, line: 19, size: 192, elements: !2137)
!2136 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!2137 = !{!2138, !2146, !2147}
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !2135, file: !2136, line: 20, baseType: !2139, size: 128)
!2139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !2140, line: 292, size: 128, elements: !2141)
!2140 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!2141 = !{!2142, !2143, !2145}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !2139, file: !2140, line: 293, baseType: !884)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !2139, file: !2140, line: 295, baseType: !2144, size: 32)
!2144 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !438, line: 148, baseType: !14)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !2139, file: !2140, line: 296, baseType: !726, size: 64, offset: 64)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !2135, file: !2136, line: 21, baseType: !14, size: 32, offset: 128)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !2135, file: !2136, line: 22, baseType: !14, size: 32, offset: 160)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2117, file: !2118, line: 92, baseType: !1947, size: 192, offset: 896)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_head", scope: !2117, file: !2118, line: 94, baseType: !445, size: 128, offset: 1088)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net", scope: !2117, file: !2118, line: 95, baseType: !2151, size: 64, offset: 1216)
!2151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 64)
!2152 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !2153, line: 123, flags: DIFlagFwdDecl)
!2153 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_stat", scope: !2117, file: !2118, line: 96, baseType: !2151, size: 64, offset: 1280)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2117, file: !2118, line: 99, baseType: !1973, size: 768, offset: 1344)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl", scope: !2117, file: !2118, line: 102, baseType: !606, size: 64, offset: 2112)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "genl_sock", scope: !2117, file: !2118, line: 103, baseType: !606, size: 64, offset: 2176)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_sock", scope: !2117, file: !2118, line: 105, baseType: !2159, size: 64, offset: 2240)
!2159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2160, size: 64)
!2160 = !DICompositeType(tag: DW_TAG_structure_type, name: "uevent_sock", file: !2118, line: 48, flags: DIFlagFwdDecl)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name_head", scope: !2117, file: !2118, line: 107, baseType: !2162, size: 64, offset: 2304)
!2162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "dev_index_head", scope: !2117, file: !2118, line: 108, baseType: !2162, size: 64, offset: 2368)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_chain", scope: !2117, file: !2118, line: 109, baseType: !2165, size: 64, offset: 2432)
!2165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_notifier_head", file: !2166, line: 70, size: 64, elements: !2167)
!2166 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!2167 = !{!2168}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2165, file: !2166, line: 71, baseType: !2169, size: 64)
!2169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2170, size: 64)
!2170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !2166, line: 54, size: 192, elements: !2171)
!2171 = !{!2172, !2177, !2178}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !2170, file: !2166, line: 55, baseType: !2173, size: 64)
!2173 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !2166, line: 51, baseType: !2174)
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2175, size: 64)
!2175 = !DISubroutineType(types: !2176)
!2176 = !{!7, !2169, !473, !726}
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2170, file: !2166, line: 56, baseType: !2169, size: 64, offset: 64)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !2170, file: !2166, line: 57, baseType: !7, size: 32, offset: 128)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "hash_mix", scope: !2117, file: !2118, line: 114, baseType: !862, size: 32, offset: 2496)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "loopback_dev", scope: !2117, file: !2118, line: 116, baseType: !451, size: 64, offset: 2560)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "rules_ops", scope: !2117, file: !2118, line: 119, baseType: !445, size: 128, offset: 2624)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !2117, file: !2118, line: 121, baseType: !2183, size: 256, offset: 2752)
!2183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_core", file: !2184, line: 8, size: 256, elements: !2185)
!2184 = !DIFile(filename: "./include/net/netns/core.h", directory: "/home/lizy2001/genbc/linux")
!2185 = !{!2186, !2187, !2188, !2189}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_hdr", scope: !2183, file: !2184, line: 10, baseType: !2035, size: 64)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_somaxconn", scope: !2183, file: !2184, line: 12, baseType: !7, size: 32, offset: 64)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "sock_inuse", scope: !2183, file: !2184, line: 15, baseType: !695, size: 64, offset: 128)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "prot_inuse", scope: !2183, file: !2184, line: 16, baseType: !2190, size: 64, offset: 192)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2191, size: 64)
!2191 = !DICompositeType(tag: DW_TAG_structure_type, name: "prot_inuse", file: !2184, line: 6, flags: DIFlagFwdDecl)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "mib", scope: !2117, file: !2118, line: 122, baseType: !2193, size: 832, offset: 3008)
!2193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_mib", file: !2194, line: 7, size: 832, elements: !2195)
!2194 = !DIFile(filename: "./include/net/netns/mib.h", directory: "/home/lizy2001/genbc/linux")
!2195 = !{!2196, !2203, !2214, !2222, !2230, !2231, !2239, !2247, !2248, !2249, !2250, !2251, !2257}
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_statistics", scope: !2193, file: !2194, line: 8, baseType: !2197, size: 64)
!2197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 64)
!2198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_mib", file: !2199, line: 92, size: 1024, elements: !2200)
!2199 = !DIFile(filename: "./include/net/snmp.h", directory: "/home/lizy2001/genbc/linux")
!2200 = !{!2201}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2198, file: !2199, line: 93, baseType: !2202, size: 1024)
!2202 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 1024, elements: !430)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "ip_statistics", scope: !2193, file: !2194, line: 9, baseType: !2204, size: 64, offset: 64)
!2204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2205, size: 64)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipstats_mib", file: !2199, line: 51, size: 2368, elements: !2206)
!2206 = !{!2207, !2211}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2205, file: !2199, line: 53, baseType: !2208, size: 2368)
!2208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !492, size: 2368, elements: !2209)
!2209 = !{!2210}
!2210 = !DISubrange(count: 37)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !2205, file: !2199, line: 54, baseType: !2212, offset: 2368)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "u64_stats_sync", file: !2213, line: 68, elements: !898)
!2213 = !DIFile(filename: "./include/linux/u64_stats_sync.h", directory: "/home/lizy2001/genbc/linux")
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "net_statistics", scope: !2193, file: !2194, line: 10, baseType: !2215, size: 64, offset: 128)
!2215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2216, size: 64)
!2216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "linux_mib", file: !2199, line: 104, size: 7936, elements: !2217)
!2217 = !{!2218}
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2216, file: !2199, line: 105, baseType: !2219, size: 7936)
!2219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 7936, elements: !2220)
!2220 = !{!2221}
!2221 = !DISubrange(count: 124)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "udp_statistics", scope: !2193, file: !2194, line: 11, baseType: !2223, size: 64, offset: 192)
!2223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2224, size: 64)
!2224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_mib", file: !2199, line: 98, size: 576, elements: !2225)
!2225 = !{!2226}
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2224, file: !2199, line: 99, baseType: !2227, size: 576)
!2227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 576, elements: !2228)
!2228 = !{!2229}
!2229 = !DISubrange(count: 9)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_statistics", scope: !2193, file: !2194, line: 12, baseType: !2223, size: 64, offset: 256)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_statistics", scope: !2193, file: !2194, line: 13, baseType: !2232, size: 64, offset: 320)
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 64)
!2233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmp_mib", file: !2199, line: 59, size: 1792, elements: !2234)
!2234 = !{!2235}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2233, file: !2199, line: 60, baseType: !2236, size: 1792)
!2236 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 1792, elements: !2237)
!2237 = !{!2238}
!2238 = !DISubrange(count: 28)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "icmpmsg_statistics", scope: !2193, file: !2194, line: 14, baseType: !2240, size: 64, offset: 384)
!2240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2241, size: 64)
!2241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpmsg_mib", file: !2199, line: 64, size: 32768, elements: !2242)
!2242 = !{!2243}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2241, file: !2199, line: 65, baseType: !2244, size: 32768)
!2244 = !DICompositeType(tag: DW_TAG_array_type, baseType: !532, size: 32768, elements: !2245)
!2245 = !{!2246}
!2246 = !DISubrange(count: 512)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_devsnmp6", scope: !2193, file: !2194, line: 17, baseType: !2151, size: 64, offset: 448)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "udp_stats_in6", scope: !2193, file: !2194, line: 18, baseType: !2223, size: 64, offset: 512)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_stats_in6", scope: !2193, file: !2194, line: 19, baseType: !2223, size: 64, offset: 576)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6_statistics", scope: !2193, file: !2194, line: 20, baseType: !2204, size: 64, offset: 640)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_statistics", scope: !2193, file: !2194, line: 21, baseType: !2252, size: 64, offset: 704)
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 64)
!2253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib", file: !2199, line: 71, size: 384, elements: !2254)
!2254 = !{!2255}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2253, file: !2199, line: 72, baseType: !2256, size: 384)
!2256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 384, elements: !1825)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msg_statistics", scope: !2193, file: !2194, line: 22, baseType: !2258, size: 64, offset: 768)
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 64)
!2259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib", file: !2199, line: 81, size: 32768, elements: !2260)
!2260 = !{!2261}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2259, file: !2199, line: 82, baseType: !2244, size: 32768)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !2117, file: !2118, line: 123, baseType: !2263, size: 256, offset: 3840)
!2263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_packet", file: !2264, line: 11, size: 256, elements: !2265)
!2264 = !DIFile(filename: "./include/net/netns/packet.h", directory: "/home/lizy2001/genbc/linux")
!2265 = !{!2266, !2267}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "sklist_lock", scope: !2263, file: !2264, line: 12, baseType: !1109, size: 192)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "sklist", scope: !2263, file: !2264, line: 13, baseType: !1012, size: 64, offset: 192)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "unx", scope: !2117, file: !2118, line: 124, baseType: !2269, size: 128, offset: 4096)
!2269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_unix", file: !2270, line: 9, size: 128, elements: !2271)
!2270 = !DIFile(filename: "./include/net/netns/unix.h", directory: "/home/lizy2001/genbc/linux")
!2271 = !{!2272, !2273}
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_dgram_qlen", scope: !2269, file: !2270, line: 10, baseType: !7, size: 32)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !2269, file: !2270, line: 11, baseType: !2035, size: 64, offset: 64)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop", scope: !2117, file: !2118, line: 125, baseType: !2275, size: 512, offset: 4224)
!2275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_nexthop", file: !2276, line: 11, size: 512, elements: !2277)
!2276 = !DIFile(filename: "./include/net/netns/nexthop.h", directory: "/home/lizy2001/genbc/linux")
!2277 = !{!2278, !2279, !2280, !2281, !2282}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2275, file: !2276, line: 12, baseType: !1288, size: 64)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "devhash", scope: !2275, file: !2276, line: 13, baseType: !2162, size: 64, offset: 64)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2275, file: !2276, line: 15, baseType: !14, size: 32, offset: 128)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_allocated", scope: !2275, file: !2276, line: 16, baseType: !862, size: 32, offset: 160)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_chain", scope: !2275, file: !2276, line: 17, baseType: !2283, size: 320, offset: 192)
!2283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !2166, line: 65, size: 320, elements: !2284)
!2284 = !{!2285, !2286}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !2283, file: !2166, line: 66, baseType: !1317, size: 256)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2283, file: !2166, line: 67, baseType: !2169, size: 64, offset: 256)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !2117, file: !2118, line: 126, baseType: !2288, size: 5440, offset: 4736)
!2288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv4", file: !2289, line: 43, size: 5440, elements: !2290)
!2289 = !DIFile(filename: "./include/net/netns/ipv4.h", directory: "/home/lizy2001/genbc/linux")
!2290 = !{!2291, !2292, !2293, !2294, !2295, !2296, !2305, !2306, !2319, !2320, !2321, !2322, !2323, !2324, !2326, !2327, !2340, !2341, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2576, !2577, !2578, !2579, !2580, !2588, !2589, !2590, !2594, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2614, !2615, !2617, !2618, !2692, !2693, !2694, !2695, !2696}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "forw_hdr", scope: !2288, file: !2289, line: 45, baseType: !2035, size: 64)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !2288, file: !2289, line: 46, baseType: !2035, size: 64, offset: 64)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4_hdr", scope: !2288, file: !2289, line: 47, baseType: !2035, size: 64, offset: 128)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !2288, file: !2289, line: 48, baseType: !2035, size: 64, offset: 192)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm4_hdr", scope: !2288, file: !2289, line: 49, baseType: !2035, size: 64, offset: 256)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !2288, file: !2289, line: 51, baseType: !2297, size: 64, offset: 320)
!2297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2298, size: 64)
!2298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipv4_devconf", file: !2299, line: 17, size: 1152, elements: !2300)
!2299 = !DIFile(filename: "./include/linux/inetdevice.h", directory: "/home/lizy2001/genbc/linux")
!2300 = !{!2301, !2302, !2304}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl", scope: !2298, file: !2299, line: 18, baseType: !726, size: 64)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2298, file: !2299, line: 19, baseType: !2303, size: 1024, offset: 64)
!2303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 1024, elements: !871)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2298, file: !2299, line: 20, baseType: !1570, size: 64, offset: 1088)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !2288, file: !2289, line: 52, baseType: !2297, size: 64, offset: 384)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "ra_chain", scope: !2288, file: !2289, line: 53, baseType: !2307, size: 64, offset: 448)
!2307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2308, size: 64)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip_ra_chain", file: !2309, line: 122, size: 320, elements: !2310)
!2309 = !DIFile(filename: "./include/net/ip.h", directory: "/home/lizy2001/genbc/linux")
!2310 = !{!2311, !2312, !2313, !2318}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2308, file: !2309, line: 123, baseType: !2307, size: 64)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !2308, file: !2309, line: 124, baseType: !606, size: 64, offset: 64)
!2313 = !DIDerivedType(tag: DW_TAG_member, scope: !2308, file: !2309, line: 125, baseType: !2314, size: 64, offset: 128)
!2314 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2308, file: !2309, line: 125, size: 64, elements: !2315)
!2315 = !{!2316, !2317}
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !2314, file: !2309, line: 126, baseType: !707, size: 64)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sk", scope: !2314, file: !2309, line: 127, baseType: !606, size: 64)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2308, file: !2309, line: 129, baseType: !460, size: 128, align: 64, offset: 192)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "ra_mutex", scope: !2288, file: !2289, line: 54, baseType: !1109, size: 192, offset: 512)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "fib_has_custom_local_routes", scope: !2288, file: !2289, line: 62, baseType: !696, size: 8, offset: 704)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !2288, file: !2289, line: 66, baseType: !2162, size: 64, offset: 768)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "fib_offload_disabled", scope: !2288, file: !2289, line: 67, baseType: !696, size: 8, offset: 832)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "fibnl", scope: !2288, file: !2289, line: 68, baseType: !606, size: 64, offset: 896)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !2288, file: !2289, line: 70, baseType: !2325, size: 64, offset: 960)
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !606, size: 64)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !2288, file: !2289, line: 71, baseType: !606, size: 64, offset: 1024)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !2288, file: !2289, line: 73, baseType: !2328, size: 64, offset: 1088)
!2328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2329, size: 64)
!2329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_peer_base", file: !2330, line: 61, size: 128, elements: !2331)
!2330 = !DIFile(filename: "./include/net/inetpeer.h", directory: "/home/lizy2001/genbc/linux")
!2331 = !{!2332, !2333, !2339}
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2329, file: !2330, line: 62, baseType: !1288, size: 64)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2329, file: !2330, line: 63, baseType: !2334, size: 32, offset: 64)
!2334 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !835, line: 805, baseType: !2335)
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !835, line: 798, size: 32, elements: !2336)
!2336 = !{!2337, !2338}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2335, file: !835, line: 803, baseType: !834, size: 32)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2335, file: !835, line: 804, baseType: !884, offset: 32)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !2329, file: !2330, line: 64, baseType: !7, size: 32, offset: 96)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !2288, file: !2289, line: 74, baseType: !2325, size: 64, offset: 1152)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !2288, file: !2289, line: 75, baseType: !2342, size: 64, offset: 1216)
!2342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2343, size: 64)
!2343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fqdir", file: !2344, line: 9, size: 1728, elements: !2345)
!2344 = !DIFile(filename: "./include/net/inet_frag.h", directory: "/home/lizy2001/genbc/linux")
!2345 = !{!2346, !2347, !2348, !2349, !2350, !2492, !2493, !2494, !2495, !2496}
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "high_thresh", scope: !2343, file: !2344, line: 11, baseType: !669, size: 64)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "low_thresh", scope: !2343, file: !2344, line: 12, baseType: !669, size: 64, offset: 64)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2343, file: !2344, line: 13, baseType: !7, size: 32, offset: 128)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "max_dist", scope: !2343, file: !2344, line: 14, baseType: !7, size: 32, offset: 160)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2343, file: !2344, line: 15, baseType: !2351, size: 64, offset: 192)
!2351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2352, size: 64)
!2352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frags", file: !2344, line: 98, size: 960, elements: !2353)
!2353 = !{!2354, !2355, !2426, !2430, !2431, !2434, !2435, !2490, !2491}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "qsize", scope: !2352, file: !2344, line: 99, baseType: !14, size: 32)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !2352, file: !2344, line: 101, baseType: !2356, size: 64, offset: 64)
!2356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2357, size: 64)
!2357 = !DISubroutineType(types: !2358)
!2358 = !{null, !2359, !2424}
!2359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 64)
!2360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frag_queue", file: !2344, line: 77, size: 1408, elements: !2361)
!2361 = !{!2362, !2368, !2400, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2360, file: !2344, line: 78, baseType: !2363, size: 64)
!2363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhash_head", file: !2364, line: 17, size: 64, elements: !2365)
!2364 = !DIFile(filename: "./include/linux/rhashtable-types.h", directory: "/home/lizy2001/genbc/linux")
!2365 = !{!2366}
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2363, file: !2364, line: 18, baseType: !2367, size: 64)
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 64)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2360, file: !2344, line: 82, baseType: !2369, size: 352, offset: 64)
!2369 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2360, file: !2344, line: 79, size: 352, elements: !2370)
!2370 = !{!2371, !2380}
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2369, file: !2344, line: 80, baseType: !2372, size: 160)
!2372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v4_compare_key", file: !2344, line: 41, size: 160, elements: !2373)
!2373 = !{!2374, !2375, !2376, !2377, !2378, !2379}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !2372, file: !2344, line: 42, baseType: !622, size: 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !2372, file: !2344, line: 43, baseType: !622, size: 32, offset: 32)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2372, file: !2344, line: 44, baseType: !862, size: 32, offset: 64)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !2372, file: !2344, line: 45, baseType: !862, size: 32, offset: 96)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2372, file: !2344, line: 46, baseType: !645, size: 16, offset: 128)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2372, file: !2344, line: 47, baseType: !1193, size: 16, offset: 144)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2369, file: !2344, line: 81, baseType: !2381, size: 352)
!2381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v6_compare_key", file: !2344, line: 50, size: 352, elements: !2382)
!2382 = !{!2383, !2396, !2397, !2398, !2399}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !2381, file: !2344, line: 51, baseType: !2384, size: 128)
!2384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !2385, line: 33, size: 128, elements: !2386)
!2385 = !DIFile(filename: "./include/uapi/linux/in6.h", directory: "/home/lizy2001/genbc/linux")
!2386 = !{!2387}
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "in6_u", scope: !2384, file: !2385, line: 40, baseType: !2388, size: 128)
!2388 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2384, file: !2385, line: 34, size: 128, elements: !2389)
!2389 = !{!2390, !2392, !2394}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr8", scope: !2388, file: !2385, line: 35, baseType: !2391, size: 128)
!2391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1553, size: 128, elements: !430)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr16", scope: !2388, file: !2385, line: 37, baseType: !2393, size: 128)
!2393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !645, size: 128, elements: !1526)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr32", scope: !2388, file: !2385, line: 38, baseType: !2395, size: 128)
!2395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !622, size: 128, elements: !1357)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !2381, file: !2344, line: 52, baseType: !2384, size: 128, offset: 128)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2381, file: !2344, line: 53, baseType: !862, size: 32, offset: 256)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2381, file: !2344, line: 54, baseType: !622, size: 32, offset: 288)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "iif", scope: !2381, file: !2344, line: 55, baseType: !862, size: 32, offset: 320)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2360, file: !2344, line: 83, baseType: !2401, size: 320, offset: 448)
!2401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !2402, line: 11, size: 320, elements: !2403)
!2402 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!2403 = !{!2404, !2405, !2406, !2411}
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2401, file: !2402, line: 16, baseType: !437, size: 128)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2401, file: !2402, line: 17, baseType: !473, size: 64, offset: 128)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2401, file: !2402, line: 18, baseType: !2407, size: 64, offset: 192)
!2407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2408, size: 64)
!2408 = !DISubroutineType(types: !2409)
!2409 = !{null, !2410}
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2401, size: 64)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2401, file: !2402, line: 19, baseType: !862, size: 32, offset: 256)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2360, file: !2344, line: 84, baseType: !884, offset: 768)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2360, file: !2344, line: 85, baseType: !1426, size: 32, offset: 768)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "rb_fragments", scope: !2360, file: !2344, line: 86, baseType: !1288, size: 64, offset: 832)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "fragments_tail", scope: !2360, file: !2344, line: 87, baseType: !576, size: 64, offset: 896)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "last_run_head", scope: !2360, file: !2344, line: 88, baseType: !576, size: 64, offset: 960)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2360, file: !2344, line: 89, baseType: !1496, size: 64, offset: 1024)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2360, file: !2344, line: 90, baseType: !7, size: 32, offset: 1088)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "meat", scope: !2360, file: !2344, line: 91, baseType: !7, size: 32, offset: 1120)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2360, file: !2344, line: 92, baseType: !1553, size: 8, offset: 1152)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !2360, file: !2344, line: 93, baseType: !1193, size: 16, offset: 1168)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !2360, file: !2344, line: 94, baseType: !2342, size: 64, offset: 1216)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2360, file: !2344, line: 95, baseType: !460, size: 128, align: 64, offset: 1280)
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 64)
!2425 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !2352, file: !2344, line: 103, baseType: !2427, size: 64, offset: 128)
!2427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2428, size: 64)
!2428 = !DISubroutineType(types: !2429)
!2429 = !{null, !2359}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "frag_expire", scope: !2352, file: !2344, line: 104, baseType: !2407, size: 64, offset: 192)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cachep", scope: !2352, file: !2344, line: 105, baseType: !2432, size: 64, offset: 256)
!2432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2433, size: 64)
!2433 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !782, line: 117, flags: DIFlagFwdDecl)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cache_name", scope: !2352, file: !2344, line: 106, baseType: !453, size: 64, offset: 320)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "rhash_params", scope: !2352, file: !2344, line: 107, baseType: !2436, size: 320, offset: 384)
!2436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_params", file: !2364, line: 56, size: 320, elements: !2437)
!2437 = !{!2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2450, !2452}
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "nelem_hint", scope: !2436, file: !2364, line: 57, baseType: !1193, size: 16)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2436, file: !2364, line: 58, baseType: !1193, size: 16, offset: 16)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "key_offset", scope: !2436, file: !2364, line: 59, baseType: !1193, size: 16, offset: 32)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "head_offset", scope: !2436, file: !2364, line: 60, baseType: !1193, size: 16, offset: 48)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !2436, file: !2364, line: 61, baseType: !14, size: 32, offset: 64)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "min_size", scope: !2436, file: !2364, line: 62, baseType: !1193, size: 16, offset: 96)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "automatic_shrinking", scope: !2436, file: !2364, line: 63, baseType: !696, size: 8, offset: 112)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "hashfn", scope: !2436, file: !2364, line: 64, baseType: !2446, size: 64, offset: 128)
!2446 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_hashfn_t", file: !2364, line: 38, baseType: !2447)
!2447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2448, size: 64)
!2448 = !DISubroutineType(types: !2449)
!2449 = !{!862, !2424, !862, !862}
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "obj_hashfn", scope: !2436, file: !2364, line: 65, baseType: !2451, size: 64, offset: 192)
!2451 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_hashfn_t", file: !2364, line: 39, baseType: !2447)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "obj_cmpfn", scope: !2436, file: !2364, line: 66, baseType: !2453, size: 64, offset: 256)
!2453 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_cmpfn_t", file: !2364, line: 40, baseType: !2454)
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 64)
!2455 = !DISubroutineType(types: !2456)
!2456 = !{!7, !2457, !2424}
!2457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 64)
!2458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_compare_arg", file: !2364, line: 33, size: 128, elements: !2459)
!2459 = !{!2460, !2489}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !2458, file: !2364, line: 34, baseType: !2461, size: 64)
!2461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2462, size: 64)
!2462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable", file: !2364, line: 81, size: 1024, elements: !2463)
!2463 = !{!2464, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488}
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !2462, file: !2364, line: 82, baseType: !2465, size: 64)
!2465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2466, size: 64)
!2466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bucket_table", file: !2467, line: 76, size: 448, elements: !2468)
!2467 = !DIFile(filename: "./include/linux/rhashtable.h", directory: "/home/lizy2001/genbc/linux")
!2468 = !{!2469, !2470, !2471, !2472, !2473, !2474, !2475, !2477}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2466, file: !2467, line: 77, baseType: !14, size: 32)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "nest", scope: !2466, file: !2467, line: 78, baseType: !14, size: 32, offset: 32)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "hash_rnd", scope: !2466, file: !2467, line: 79, baseType: !862, size: 32, offset: 64)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "walkers", scope: !2466, file: !2467, line: 80, baseType: !445, size: 128, offset: 128)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2466, file: !2467, line: 81, baseType: !460, size: 128, align: 64, offset: 256)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "future_tbl", scope: !2466, file: !2467, line: 83, baseType: !2465, size: 64, offset: 384)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "dep_map", scope: !2466, file: !2467, line: 85, baseType: !2476, offset: 448)
!2476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !1017, line: 192, elements: !898)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2466, file: !2467, line: 87, baseType: !2478, offset: 448)
!2478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2479, elements: !470)
!2479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2480, size: 64)
!2480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhash_lock_head", file: !2467, line: 47, elements: !898)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2462, file: !2364, line: 83, baseType: !14, size: 32, offset: 64)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "max_elems", scope: !2462, file: !2364, line: 84, baseType: !14, size: 32, offset: 96)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2462, file: !2364, line: 85, baseType: !2436, size: 320, offset: 128)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "rhlist", scope: !2462, file: !2364, line: 86, baseType: !696, size: 8, offset: 448)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !2462, file: !2364, line: 87, baseType: !1961, size: 256, offset: 512)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !2462, file: !2364, line: 88, baseType: !1109, size: 192, offset: 768)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2462, file: !2364, line: 89, baseType: !884, offset: 960)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "nelems", scope: !2462, file: !2364, line: 90, baseType: !544, size: 32, offset: 960)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2458, file: !2364, line: 35, baseType: !2424, size: 64, offset: 64)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2352, file: !2344, line: 108, baseType: !1426, size: 32, offset: 704)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !2352, file: !2344, line: 109, baseType: !1701, size: 192, offset: 768)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2343, file: !2344, line: 16, baseType: !2116, size: 64, offset: 256)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !2343, file: !2344, line: 17, baseType: !696, size: 8, offset: 320)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "rhashtable", scope: !2343, file: !2344, line: 19, baseType: !2462, size: 1024, offset: 384)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !2343, file: !2344, line: 22, baseType: !532, size: 64, offset: 1408)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !2343, file: !2344, line: 23, baseType: !1961, size: 256, offset: 1472)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_all", scope: !2288, file: !2289, line: 87, baseType: !7, size: 32, offset: 1280)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_broadcasts", scope: !2288, file: !2289, line: 88, baseType: !7, size: 32, offset: 1312)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ignore_bogus_error_responses", scope: !2288, file: !2289, line: 89, baseType: !7, size: 32, offset: 1344)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratelimit", scope: !2288, file: !2289, line: 90, baseType: !7, size: 32, offset: 1376)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratemask", scope: !2288, file: !2289, line: 91, baseType: !7, size: 32, offset: 1408)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_errors_use_inbound_ifaddr", scope: !2288, file: !2289, line: 92, baseType: !7, size: 32, offset: 1440)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "ip_local_ports", scope: !2288, file: !2289, line: 94, baseType: !2504, size: 128, offset: 1472)
!2504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "local_ports", file: !2289, line: 21, size: 128, elements: !2505)
!2505 = !{!2506, !2507, !2509}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2504, file: !2289, line: 22, baseType: !2334, size: 32)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2504, file: !2289, line: 23, baseType: !2508, size: 64, offset: 32)
!2508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !634)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "warned", scope: !2504, file: !2289, line: 24, baseType: !696, size: 8, offset: 96)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn", scope: !2288, file: !2289, line: 96, baseType: !7, size: 32, offset: 1600)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn_fallback", scope: !2288, file: !2289, line: 97, baseType: !7, size: 32, offset: 1632)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_default_ttl", scope: !2288, file: !2289, line: 99, baseType: !7, size: 32, offset: 1664)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_no_pmtu_disc", scope: !2288, file: !2289, line: 100, baseType: !7, size: 32, offset: 1696)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_use_pmtu", scope: !2288, file: !2289, line: 101, baseType: !7, size: 32, offset: 1728)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_update_priority", scope: !2288, file: !2289, line: 102, baseType: !7, size: 32, offset: 1760)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_nonlocal_bind", scope: !2288, file: !2289, line: 103, baseType: !7, size: 32, offset: 1792)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_autobind_reuse", scope: !2288, file: !2289, line: 104, baseType: !7, size: 32, offset: 1824)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_dynaddr", scope: !2288, file: !2289, line: 106, baseType: !7, size: 32, offset: 1856)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_early_demux", scope: !2288, file: !2289, line: 107, baseType: !7, size: 32, offset: 1888)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_demux", scope: !2288, file: !2289, line: 111, baseType: !7, size: 32, offset: 1920)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_early_demux", scope: !2288, file: !2289, line: 112, baseType: !7, size: 32, offset: 1952)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_nexthop_compat_mode", scope: !2288, file: !2289, line: 114, baseType: !7, size: 32, offset: 1984)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_fwmark_reflect", scope: !2288, file: !2289, line: 116, baseType: !7, size: 32, offset: 2016)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fwmark_accept", scope: !2288, file: !2289, line: 117, baseType: !7, size: 32, offset: 2048)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probing", scope: !2288, file: !2289, line: 121, baseType: !7, size: 32, offset: 2080)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probe_floor", scope: !2288, file: !2289, line: 122, baseType: !7, size: 32, offset: 2112)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_base_mss", scope: !2288, file: !2289, line: 123, baseType: !7, size: 32, offset: 2144)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_snd_mss", scope: !2288, file: !2289, line: 124, baseType: !7, size: 32, offset: 2176)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_threshold", scope: !2288, file: !2289, line: 125, baseType: !7, size: 32, offset: 2208)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_interval", scope: !2288, file: !2289, line: 126, baseType: !862, size: 32, offset: 2240)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_time", scope: !2288, file: !2289, line: 128, baseType: !7, size: 32, offset: 2272)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_probes", scope: !2288, file: !2289, line: 129, baseType: !7, size: 32, offset: 2304)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_intvl", scope: !2288, file: !2289, line: 130, baseType: !7, size: 32, offset: 2336)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syn_retries", scope: !2288, file: !2289, line: 132, baseType: !7, size: 32, offset: 2368)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_synack_retries", scope: !2288, file: !2289, line: 133, baseType: !7, size: 32, offset: 2400)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syncookies", scope: !2288, file: !2289, line: 134, baseType: !7, size: 32, offset: 2432)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reordering", scope: !2288, file: !2289, line: 135, baseType: !7, size: 32, offset: 2464)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries1", scope: !2288, file: !2289, line: 136, baseType: !7, size: 32, offset: 2496)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries2", scope: !2288, file: !2289, line: 137, baseType: !7, size: 32, offset: 2528)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_orphan_retries", scope: !2288, file: !2289, line: 138, baseType: !7, size: 32, offset: 2560)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fin_timeout", scope: !2288, file: !2289, line: 139, baseType: !7, size: 32, offset: 2592)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_notsent_lowat", scope: !2288, file: !2289, line: 140, baseType: !14, size: 32, offset: 2624)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tw_reuse", scope: !2288, file: !2289, line: 141, baseType: !7, size: 32, offset: 2656)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_sack", scope: !2288, file: !2289, line: 142, baseType: !7, size: 32, offset: 2688)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_window_scaling", scope: !2288, file: !2289, line: 143, baseType: !7, size: 32, offset: 2720)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_timestamps", scope: !2288, file: !2289, line: 144, baseType: !7, size: 32, offset: 2752)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_retrans", scope: !2288, file: !2289, line: 145, baseType: !7, size: 32, offset: 2784)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_recovery", scope: !2288, file: !2289, line: 146, baseType: !7, size: 32, offset: 2816)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_thin_linear_timeouts", scope: !2288, file: !2289, line: 147, baseType: !7, size: 32, offset: 2848)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_slow_start_after_idle", scope: !2288, file: !2289, line: 148, baseType: !7, size: 32, offset: 2880)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retrans_collapse", scope: !2288, file: !2289, line: 149, baseType: !7, size: 32, offset: 2912)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_stdurg", scope: !2288, file: !2289, line: 150, baseType: !7, size: 32, offset: 2944)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rfc1337", scope: !2288, file: !2289, line: 151, baseType: !7, size: 32, offset: 2976)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_abort_on_overflow", scope: !2288, file: !2289, line: 152, baseType: !7, size: 32, offset: 3008)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fack", scope: !2288, file: !2289, line: 153, baseType: !7, size: 32, offset: 3040)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_max_reordering", scope: !2288, file: !2289, line: 154, baseType: !7, size: 32, offset: 3072)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_dsack", scope: !2288, file: !2289, line: 155, baseType: !7, size: 32, offset: 3104)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_app_win", scope: !2288, file: !2289, line: 156, baseType: !7, size: 32, offset: 3136)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_adv_win_scale", scope: !2288, file: !2289, line: 157, baseType: !7, size: 32, offset: 3168)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_frto", scope: !2288, file: !2289, line: 158, baseType: !7, size: 32, offset: 3200)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_nometrics_save", scope: !2288, file: !2289, line: 159, baseType: !7, size: 32, offset: 3232)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_no_ssthresh_metrics_save", scope: !2288, file: !2289, line: 160, baseType: !7, size: 32, offset: 3264)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_moderate_rcvbuf", scope: !2288, file: !2289, line: 161, baseType: !7, size: 32, offset: 3296)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tso_win_divisor", scope: !2288, file: !2289, line: 162, baseType: !7, size: 32, offset: 3328)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_workaround_signed_windows", scope: !2288, file: !2289, line: 163, baseType: !7, size: 32, offset: 3360)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_limit_output_bytes", scope: !2288, file: !2289, line: 164, baseType: !7, size: 32, offset: 3392)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_challenge_ack_limit", scope: !2288, file: !2289, line: 165, baseType: !7, size: 32, offset: 3424)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_tso_segs", scope: !2288, file: !2289, line: 166, baseType: !7, size: 32, offset: 3456)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_rtt_wlen", scope: !2288, file: !2289, line: 167, baseType: !7, size: 32, offset: 3488)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_autocorking", scope: !2288, file: !2289, line: 168, baseType: !7, size: 32, offset: 3520)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_invalid_ratelimit", scope: !2288, file: !2289, line: 169, baseType: !7, size: 32, offset: 3552)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ss_ratio", scope: !2288, file: !2289, line: 170, baseType: !7, size: 32, offset: 3584)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ca_ratio", scope: !2288, file: !2289, line: 171, baseType: !7, size: 32, offset: 3616)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_wmem", scope: !2288, file: !2289, line: 172, baseType: !2575, size: 96, offset: 3648)
!2575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 96, elements: !1022)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rmem", scope: !2288, file: !2289, line: 173, baseType: !2575, size: 96, offset: 3744)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_nr", scope: !2288, file: !2289, line: 174, baseType: !7, size: 32, offset: 3840)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_delay_ns", scope: !2288, file: !2289, line: 175, baseType: !473, size: 64, offset: 3904)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_slack_ns", scope: !2288, file: !2289, line: 176, baseType: !473, size: 64, offset: 3968)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_death_row", scope: !2288, file: !2289, line: 177, baseType: !2581, size: 192, offset: 4032)
!2581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_timewait_death_row", file: !2289, line: 34, size: 192, elements: !2582)
!2582 = !{!2583, !2584, !2587}
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "tw_count", scope: !2581, file: !2289, line: 35, baseType: !544, size: 32)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !2581, file: !2289, line: 37, baseType: !2585, size: 64, offset: 64)
!2585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2586, size: 64)
!2586 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_hashinfo", file: !2289, line: 32, flags: DIFlagFwdDecl)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_tw_buckets", scope: !2581, file: !2289, line: 38, baseType: !7, size: 32, offset: 128)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_syn_backlog", scope: !2288, file: !2289, line: 178, baseType: !7, size: 32, offset: 4224)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen", scope: !2288, file: !2289, line: 179, baseType: !7, size: 32, offset: 4256)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_congestion_control", scope: !2288, file: !2289, line: 180, baseType: !2591, size: 64, offset: 4288)
!2591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2592, size: 64)
!2592 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2593)
!2593 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_congestion_ops", file: !2289, line: 180, flags: DIFlagFwdDecl)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx", scope: !2288, file: !2289, line: 181, baseType: !2595, size: 64, offset: 4352)
!2595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2596, size: 64)
!2596 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_fastopen_context", file: !2289, line: 41, flags: DIFlagFwdDecl)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx_lock", scope: !2288, file: !2289, line: 182, baseType: !884, offset: 4416)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen_blackhole_timeout", scope: !2288, file: !2289, line: 183, baseType: !14, size: 32, offset: 4416)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_times", scope: !2288, file: !2289, line: 184, baseType: !544, size: 32, offset: 4448)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_stamp", scope: !2288, file: !2289, line: 185, baseType: !473, size: 64, offset: 4480)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reflect_tos", scope: !2288, file: !2289, line: 186, baseType: !7, size: 32, offset: 4544)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_wmem_min", scope: !2288, file: !2289, line: 188, baseType: !7, size: 32, offset: 4576)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_rmem_min", scope: !2288, file: !2289, line: 189, baseType: !7, size: 32, offset: 4608)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_memberships", scope: !2288, file: !2289, line: 195, baseType: !7, size: 32, offset: 4640)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_msf", scope: !2288, file: !2289, line: 196, baseType: !7, size: 32, offset: 4672)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_llm_reports", scope: !2288, file: !2289, line: 197, baseType: !7, size: 32, offset: 4704)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_qrv", scope: !2288, file: !2289, line: 198, baseType: !7, size: 32, offset: 4736)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "ping_group_range", scope: !2288, file: !2289, line: 200, baseType: !2609, size: 96, offset: 4768)
!2609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ping_group_range", file: !2289, line: 27, size: 96, elements: !2610)
!2610 = !{!2611, !2612}
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2609, file: !2289, line: 28, baseType: !2334, size: 32)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2609, file: !2289, line: 29, baseType: !2613, size: 64, offset: 32)
!2613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !812, size: 64, elements: !634)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !2288, file: !2289, line: 202, baseType: !544, size: 32, offset: 4864)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_local_reserved_ports", scope: !2288, file: !2289, line: 205, baseType: !2616, size: 64, offset: 4928)
!2616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_prot_sock", scope: !2288, file: !2289, line: 206, baseType: !7, size: 32, offset: 4992)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !2288, file: !2289, line: 222, baseType: !2619, size: 64, offset: 5056)
!2619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2620, size: 64)
!2620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib_notifier_ops", file: !2621, line: 28, size: 512, elements: !2622)
!2621 = !DIFile(filename: "./include/net/fib_notifier.h", directory: "/home/lizy2001/genbc/linux")
!2622 = !{!2623, !2624, !2625, !2629, !2690, !2691}
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2620, file: !2621, line: 29, baseType: !7, size: 32)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2620, file: !2621, line: 30, baseType: !445, size: 128, offset: 64)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq_read", scope: !2620, file: !2621, line: 31, baseType: !2626, size: 64, offset: 192)
!2626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2627, size: 64)
!2627 = !DISubroutineType(types: !2628)
!2628 = !{!14, !2116}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "fib_dump", scope: !2620, file: !2621, line: 32, baseType: !2630, size: 64, offset: 256)
!2630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2631, size: 64)
!2631 = !DISubroutineType(types: !2632)
!2632 = !{!7, !2116, !2169, !2633}
!2633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2634, size: 64)
!2634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_ext_ack", file: !2635, line: 75, size: 384, elements: !2636)
!2635 = !DIFile(filename: "./include/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2636 = !{!2637, !2638, !2646, !2685, !2689}
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "_msg", scope: !2634, file: !2635, line: 76, baseType: !453, size: 64)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "bad_attr", scope: !2634, file: !2635, line: 77, baseType: !2639, size: 64, offset: 64)
!2639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2640, size: 64)
!2640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2641)
!2641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlattr", file: !2642, line: 213, size: 32, elements: !2643)
!2642 = !DIFile(filename: "./include/uapi/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2643 = !{!2644, !2645}
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "nla_len", scope: !2641, file: !2642, line: 214, baseType: !632, size: 16)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "nla_type", scope: !2641, file: !2642, line: 215, baseType: !632, size: 16, offset: 16)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2634, file: !2635, line: 78, baseType: !2647, size: 64, offset: 128)
!2647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2648, size: 64)
!2648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2649)
!2649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nla_policy", file: !2650, line: 315, size: 128, elements: !2651)
!2650 = !DIFile(filename: "./include/net/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2651 = !{!2652, !2653, !2654, !2655}
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2649, file: !2650, line: 316, baseType: !1552, size: 8)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "validation_type", scope: !2649, file: !2650, line: 317, baseType: !1552, size: 8, offset: 8)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2649, file: !2650, line: 318, baseType: !1193, size: 16, offset: 16)
!2655 = !DIDerivedType(tag: DW_TAG_member, scope: !2649, file: !2650, line: 319, baseType: !2656, size: 64, offset: 64)
!2656 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2649, file: !2650, line: 319, size: 64, elements: !2657)
!2657 = !{!2658, !2660, !2661, !2662, !2663, !2669, !2675, !2680, !2684}
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "bitfield32_valid", scope: !2656, file: !2650, line: 320, baseType: !2659, size: 32)
!2659 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !862)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2656, file: !2650, line: 321, baseType: !2659, size: 32)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "reject_message", scope: !2656, file: !2650, line: 322, baseType: !453, size: 64)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "nested_policy", scope: !2656, file: !2650, line: 323, baseType: !2647, size: 64)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2656, file: !2650, line: 324, baseType: !2664, size: 64)
!2664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2665, size: 64)
!2665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_range_validation", file: !2650, line: 189, size: 128, elements: !2666)
!2666 = !{!2667, !2668}
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2665, file: !2650, line: 190, baseType: !492, size: 64)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2665, file: !2650, line: 190, baseType: !492, size: 64, offset: 64)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "range_signed", scope: !2656, file: !2650, line: 325, baseType: !2670, size: 64)
!2670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2671, size: 64)
!2671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_range_validation_signed", file: !2650, line: 193, size: 128, elements: !2672)
!2672 = !{!2673, !2674}
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2671, file: !2650, line: 194, baseType: !538, size: 64)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2671, file: !2650, line: 194, baseType: !538, size: 64, offset: 64)
!2675 = !DIDerivedType(tag: DW_TAG_member, scope: !2656, file: !2650, line: 326, baseType: !2676, size: 32)
!2676 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2656, file: !2650, line: 326, size: 32, elements: !2677)
!2677 = !{!2678, !2679}
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2676, file: !2650, line: 327, baseType: !1399, size: 16)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2676, file: !2650, line: 327, baseType: !1399, size: 16, offset: 16)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !2656, file: !2650, line: 329, baseType: !2681, size: 64)
!2681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2682, size: 64)
!2682 = !DISubroutineType(types: !2683)
!2683 = !{!7, !2639, !2633}
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "strict_start_type", scope: !2656, file: !2650, line: 349, baseType: !1193, size: 16)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !2634, file: !2635, line: 79, baseType: !2686, size: 160, offset: 192)
!2686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1552, size: 160, elements: !2687)
!2687 = !{!2688}
!2688 = !DISubrange(count: 20)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "cookie_len", scope: !2634, file: !2635, line: 80, baseType: !1552, size: 8, offset: 352)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2620, file: !2621, line: 34, baseType: !1007, size: 64, offset: 320)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2620, file: !2621, line: 35, baseType: !460, size: 128, align: 64, offset: 384)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq", scope: !2288, file: !2289, line: 223, baseType: !14, size: 32, offset: 5120)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_notifier_ops", scope: !2288, file: !2289, line: 225, baseType: !2619, size: 64, offset: 5184)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !2288, file: !2289, line: 226, baseType: !14, size: 32, offset: 5248)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "rt_genid", scope: !2288, file: !2289, line: 228, baseType: !544, size: 32, offset: 5280)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "ip_id_key", scope: !2288, file: !2289, line: 229, baseType: !2697, size: 128, offset: 5312)
!2697 = !DIDerivedType(tag: DW_TAG_typedef, name: "siphash_key_t", file: !2698, line: 22, baseType: !2699)
!2698 = !DIFile(filename: "./include/linux/siphash.h", directory: "/home/lizy2001/genbc/linux")
!2699 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2698, line: 20, size: 128, elements: !2700)
!2700 = !{!2701}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2699, file: !2698, line: 21, baseType: !2702, size: 128)
!2702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !492, size: 128, elements: !634)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !2117, file: !2118, line: 128, baseType: !2704, size: 4608, offset: 10176)
!2704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv6", file: !2705, line: 56, size: 4608, elements: !2706)
!2705 = !DIFile(filename: "./include/net/netns/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!2706 = !{!2707, !2747, !2801, !2802, !2803, !2804, !3433, !3434, !3445, !3446, !3447, !3448, !3449, !3450, !3451, !3452, !3453, !3454, !3455, !3456, !3457, !3458, !3459, !3460, !3461, !3464, !3465, !3466, !3467}
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl", scope: !2704, file: !2705, line: 57, baseType: !2708, size: 1600)
!2708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_sysctl_ipv6", file: !2705, line: 15, size: 1600, elements: !2709)
!2709 = !{!2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746}
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !2708, file: !2705, line: 17, baseType: !2035, size: 64)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !2708, file: !2705, line: 18, baseType: !2035, size: 64, offset: 64)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_hdr", scope: !2708, file: !2705, line: 19, baseType: !2035, size: 64, offset: 128)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !2708, file: !2705, line: 20, baseType: !2035, size: 64, offset: 192)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm6_hdr", scope: !2708, file: !2705, line: 21, baseType: !2035, size: 64, offset: 256)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "bindv6only", scope: !2708, file: !2705, line: 23, baseType: !7, size: 32, offset: 320)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "flush_delay", scope: !2708, file: !2705, line: 24, baseType: !7, size: 32, offset: 352)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_max_size", scope: !2708, file: !2705, line: 25, baseType: !7, size: 32, offset: 384)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_min_interval", scope: !2708, file: !2705, line: 26, baseType: !7, size: 32, offset: 416)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_timeout", scope: !2708, file: !2705, line: 27, baseType: !7, size: 32, offset: 448)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_interval", scope: !2708, file: !2705, line: 28, baseType: !7, size: 32, offset: 480)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_elasticity", scope: !2708, file: !2705, line: 29, baseType: !7, size: 32, offset: 512)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_mtu_expires", scope: !2708, file: !2705, line: 30, baseType: !7, size: 32, offset: 544)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_min_advmss", scope: !2708, file: !2705, line: 31, baseType: !7, size: 32, offset: 576)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "multipath_hash_policy", scope: !2708, file: !2705, line: 32, baseType: !7, size: 32, offset: 608)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_consistency", scope: !2708, file: !2705, line: 33, baseType: !7, size: 32, offset: 640)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "auto_flowlabels", scope: !2708, file: !2705, line: 34, baseType: !7, size: 32, offset: 672)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_time", scope: !2708, file: !2705, line: 35, baseType: !7, size: 32, offset: 704)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_all", scope: !2708, file: !2705, line: 36, baseType: !7, size: 32, offset: 736)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_multicast", scope: !2708, file: !2705, line: 37, baseType: !7, size: 32, offset: 768)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_anycast", scope: !2708, file: !2705, line: 38, baseType: !7, size: 32, offset: 800)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask", scope: !2708, file: !2705, line: 39, baseType: !2732, size: 256, offset: 832)
!2732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 256, elements: !1357)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask_ptr", scope: !2708, file: !2705, line: 40, baseType: !2616, size: 64, offset: 1088)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "anycast_src_echo_reply", scope: !2708, file: !2705, line: 41, baseType: !7, size: 32, offset: 1152)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "ip_nonlocal_bind", scope: !2708, file: !2705, line: 42, baseType: !7, size: 32, offset: 1184)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "fwmark_reflect", scope: !2708, file: !2705, line: 43, baseType: !7, size: 32, offset: 1216)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_retries", scope: !2708, file: !2705, line: 44, baseType: !7, size: 32, offset: 1248)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_delay", scope: !2708, file: !2705, line: 45, baseType: !7, size: 32, offset: 1280)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_state_ranges", scope: !2708, file: !2705, line: 46, baseType: !7, size: 32, offset: 1312)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_reflect", scope: !2708, file: !2705, line: 47, baseType: !7, size: 32, offset: 1344)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_cnt", scope: !2708, file: !2705, line: 48, baseType: !7, size: 32, offset: 1376)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_cnt", scope: !2708, file: !2705, line: 49, baseType: !7, size: 32, offset: 1408)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_len", scope: !2708, file: !2705, line: 50, baseType: !7, size: 32, offset: 1440)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_len", scope: !2708, file: !2705, line: 51, baseType: !7, size: 32, offset: 1472)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_flowlabel", scope: !2708, file: !2705, line: 52, baseType: !7, size: 32, offset: 1504)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "skip_notify_on_dev_down", scope: !2708, file: !2705, line: 53, baseType: !696, size: 8, offset: 1536)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !2704, file: !2705, line: 58, baseType: !2748, size: 64, offset: 1600)
!2748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2749, size: 64)
!2749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devconf", file: !2750, line: 12, size: 1600, elements: !2751)
!2750 = !DIFile(filename: "./include/linux/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!2751 = !{!2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800}
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "forwarding", scope: !2749, file: !2750, line: 13, baseType: !1645, size: 32)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "hop_limit", scope: !2749, file: !2750, line: 14, baseType: !1645, size: 32, offset: 32)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "mtu6", scope: !2749, file: !2750, line: 15, baseType: !1645, size: 32, offset: 64)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra", scope: !2749, file: !2750, line: 16, baseType: !1645, size: 32, offset: 96)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "accept_redirects", scope: !2749, file: !2750, line: 17, baseType: !1645, size: 32, offset: 128)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "autoconf", scope: !2749, file: !2750, line: 18, baseType: !1645, size: 32, offset: 160)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "dad_transmits", scope: !2749, file: !2750, line: 19, baseType: !1645, size: 32, offset: 192)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicits", scope: !2749, file: !2750, line: 20, baseType: !1645, size: 32, offset: 224)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicit_interval", scope: !2749, file: !2750, line: 21, baseType: !1645, size: 32, offset: 256)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicit_max_interval", scope: !2749, file: !2750, line: 22, baseType: !1645, size: 32, offset: 288)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicit_delay", scope: !2749, file: !2750, line: 23, baseType: !1645, size: 32, offset: 320)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "force_mld_version", scope: !2749, file: !2750, line: 24, baseType: !1645, size: 32, offset: 352)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "mldv1_unsolicited_report_interval", scope: !2749, file: !2750, line: 25, baseType: !1645, size: 32, offset: 384)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "mldv2_unsolicited_report_interval", scope: !2749, file: !2750, line: 26, baseType: !1645, size: 32, offset: 416)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "use_tempaddr", scope: !2749, file: !2750, line: 27, baseType: !1645, size: 32, offset: 448)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "temp_valid_lft", scope: !2749, file: !2750, line: 28, baseType: !1645, size: 32, offset: 480)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "temp_prefered_lft", scope: !2749, file: !2750, line: 29, baseType: !1645, size: 32, offset: 512)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "regen_max_retry", scope: !2749, file: !2750, line: 30, baseType: !1645, size: 32, offset: 544)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "max_desync_factor", scope: !2749, file: !2750, line: 31, baseType: !1645, size: 32, offset: 576)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "max_addresses", scope: !2749, file: !2750, line: 32, baseType: !1645, size: 32, offset: 608)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_defrtr", scope: !2749, file: !2750, line: 33, baseType: !1645, size: 32, offset: 640)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_min_hop_limit", scope: !2749, file: !2750, line: 34, baseType: !1645, size: 32, offset: 672)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_pinfo", scope: !2749, file: !2750, line: 35, baseType: !1645, size: 32, offset: 704)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_routes_with_linkdown", scope: !2749, file: !2750, line: 36, baseType: !1645, size: 32, offset: 736)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_ndp", scope: !2749, file: !2750, line: 45, baseType: !1645, size: 32, offset: 768)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "accept_source_route", scope: !2749, file: !2750, line: 46, baseType: !1645, size: 32, offset: 800)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_from_local", scope: !2749, file: !2750, line: 47, baseType: !1645, size: 32, offset: 832)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "disable_ipv6", scope: !2749, file: !2750, line: 55, baseType: !1645, size: 32, offset: 864)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "drop_unicast_in_l2_multicast", scope: !2749, file: !2750, line: 56, baseType: !1645, size: 32, offset: 896)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "accept_dad", scope: !2749, file: !2750, line: 57, baseType: !1645, size: 32, offset: 928)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "force_tllao", scope: !2749, file: !2750, line: 58, baseType: !1645, size: 32, offset: 960)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_notify", scope: !2749, file: !2750, line: 59, baseType: !1645, size: 32, offset: 992)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_frag_ndisc", scope: !2749, file: !2750, line: 60, baseType: !1645, size: 32, offset: 1024)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_mtu", scope: !2749, file: !2750, line: 61, baseType: !1645, size: 32, offset: 1056)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "drop_unsolicited_na", scope: !2749, file: !2750, line: 62, baseType: !1645, size: 32, offset: 1088)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "stable_secret", scope: !2749, file: !2750, line: 66, baseType: !2788, size: 160, offset: 1120)
!2788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_stable_secret", file: !2750, line: 63, size: 160, elements: !2789)
!2789 = !{!2790, !2791}
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2788, file: !2750, line: 64, baseType: !696, size: 8)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "secret", scope: !2788, file: !2750, line: 65, baseType: !2384, size: 128, offset: 32)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "use_oif_addrs_only", scope: !2749, file: !2750, line: 67, baseType: !1645, size: 32, offset: 1280)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "keep_addr_on_down", scope: !2749, file: !2750, line: 68, baseType: !1645, size: 32, offset: 1312)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_enabled", scope: !2749, file: !2750, line: 69, baseType: !1645, size: 32, offset: 1344)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "enhanced_dad", scope: !2749, file: !2750, line: 73, baseType: !624, size: 32, offset: 1376)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "addr_gen_mode", scope: !2749, file: !2750, line: 74, baseType: !624, size: 32, offset: 1408)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "disable_policy", scope: !2749, file: !2750, line: 75, baseType: !1645, size: 32, offset: 1440)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_tclass", scope: !2749, file: !2750, line: 76, baseType: !1645, size: 32, offset: 1472)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "rpl_seg_enabled", scope: !2749, file: !2750, line: 77, baseType: !1645, size: 32, offset: 1504)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_header", scope: !2749, file: !2750, line: 79, baseType: !2035, size: 64, offset: 1536)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !2704, file: !2705, line: 59, baseType: !2748, size: 64, offset: 1664)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !2704, file: !2705, line: 60, baseType: !2328, size: 64, offset: 1728)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !2704, file: !2705, line: 61, baseType: !2342, size: 64, offset: 1792)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_null_entry", scope: !2704, file: !2705, line: 71, baseType: !2805, size: 64, offset: 1856)
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2806, size: 64)
!2806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_info", file: !2807, line: 163, size: 1280, elements: !2808)
!2807 = !DIFile(filename: "./include/net/ip6_fib.h", directory: "/home/lizy2001/genbc/linux")
!2808 = !{!2809, !2832, !2833, !2834, !2839, !2840, !2841, !2842, !2852, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !3431}
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_table", scope: !2806, file: !2807, line: 164, baseType: !2810, size: 64)
!2810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2811, size: 64)
!2811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_table", file: !2807, line: 390, size: 896, elements: !2812)
!2812 = !{!2813, !2814, !2815, !2816, !2829, !2830, !2831}
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "tb6_hlist", scope: !2811, file: !2807, line: 391, baseType: !437, size: 128)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "tb6_id", scope: !2811, file: !2807, line: 392, baseType: !862, size: 32, offset: 128)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "tb6_lock", scope: !2811, file: !2807, line: 393, baseType: !884, offset: 160)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "tb6_root", scope: !2811, file: !2807, line: 394, baseType: !2817, size: 512, offset: 192)
!2817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_node", file: !2807, line: 72, size: 512, elements: !2818)
!2818 = !{!2819, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2817, file: !2807, line: 73, baseType: !2820, size: 64)
!2820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 64)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !2817, file: !2807, line: 74, baseType: !2820, size: 64, offset: 64)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !2817, file: !2807, line: 75, baseType: !2820, size: 64, offset: 128)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !2817, file: !2807, line: 79, baseType: !2805, size: 64, offset: 192)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "fn_bit", scope: !2817, file: !2807, line: 81, baseType: !632, size: 16, offset: 256)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "fn_flags", scope: !2817, file: !2807, line: 82, baseType: !632, size: 16, offset: 272)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "fn_sernum", scope: !2817, file: !2807, line: 83, baseType: !7, size: 32, offset: 288)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "rr_ptr", scope: !2817, file: !2807, line: 84, baseType: !2805, size: 64, offset: 320)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2817, file: !2807, line: 85, baseType: !460, size: 128, align: 64, offset: 384)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "tb6_peers", scope: !2811, file: !2807, line: 395, baseType: !2329, size: 128, offset: 704)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2811, file: !2807, line: 396, baseType: !14, size: 32, offset: 832)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq", scope: !2811, file: !2807, line: 397, baseType: !14, size: 32, offset: 864)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_next", scope: !2806, file: !2807, line: 165, baseType: !2805, size: 64, offset: 64)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_node", scope: !2806, file: !2807, line: 166, baseType: !2820, size: 64, offset: 128)
!2834 = !DIDerivedType(tag: DW_TAG_member, scope: !2806, file: !2807, line: 173, baseType: !2835, size: 128, offset: 192)
!2835 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2806, file: !2807, line: 173, size: 128, elements: !2836)
!2836 = !{!2837, !2838}
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_siblings", scope: !2835, file: !2807, line: 174, baseType: !445, size: 128)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "nh_list", scope: !2835, file: !2807, line: 175, baseType: !445, size: 128)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_nsiblings", scope: !2806, file: !2807, line: 177, baseType: !14, size: 32, offset: 320)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_ref", scope: !2806, file: !2807, line: 179, baseType: !1426, size: 32, offset: 352)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2806, file: !2807, line: 180, baseType: !473, size: 64, offset: 384)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_metrics", scope: !2806, file: !2807, line: 181, baseType: !2843, size: 64, offset: 448)
!2843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2844, size: 64)
!2844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_metrics", file: !2845, line: 81, size: 576, align: 32, elements: !2846)
!2845 = !DIFile(filename: "./include/net/dst.h", directory: "/home/lizy2001/genbc/linux")
!2846 = !{!2847, !2851}
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "metrics", scope: !2844, file: !2845, line: 82, baseType: !2848, size: 544)
!2848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !862, size: 544, elements: !2849)
!2849 = !{!2850}
!2850 = !DISubrange(count: 17)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2844, file: !2845, line: 83, baseType: !1426, size: 32, offset: 544)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_dst", scope: !2806, file: !2807, line: 184, baseType: !2853, size: 160, offset: 512)
!2853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rt6key", file: !2807, line: 129, size: 160, elements: !2854)
!2854 = !{!2855, !2856}
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2853, file: !2807, line: 130, baseType: !2384, size: 128)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "plen", scope: !2853, file: !2807, line: 131, baseType: !7, size: 32, offset: 128)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_flags", scope: !2806, file: !2807, line: 185, baseType: !862, size: 32, offset: 672)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_src", scope: !2806, file: !2807, line: 186, baseType: !2853, size: 160, offset: 704)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_prefsrc", scope: !2806, file: !2807, line: 187, baseType: !2853, size: 160, offset: 864)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_metric", scope: !2806, file: !2807, line: 189, baseType: !862, size: 32, offset: 1024)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_protocol", scope: !2806, file: !2807, line: 190, baseType: !1552, size: 8, offset: 1056)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_type", scope: !2806, file: !2807, line: 191, baseType: !1552, size: 8, offset: 1064)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "should_flush", scope: !2806, file: !2807, line: 192, baseType: !1552, size: 1, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "dst_nocount", scope: !2806, file: !2807, line: 193, baseType: !1552, size: 1, offset: 1073, flags: DIFlagBitField, extraData: i64 1072)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "dst_nopolicy", scope: !2806, file: !2807, line: 194, baseType: !1552, size: 1, offset: 1074, flags: DIFlagBitField, extraData: i64 1072)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_destroying", scope: !2806, file: !2807, line: 195, baseType: !1552, size: 1, offset: 1075, flags: DIFlagBitField, extraData: i64 1072)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "offload", scope: !2806, file: !2807, line: 196, baseType: !1552, size: 1, offset: 1076, flags: DIFlagBitField, extraData: i64 1072)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "trap", scope: !2806, file: !2807, line: 197, baseType: !1552, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2806, file: !2807, line: 198, baseType: !1552, size: 2, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2806, file: !2807, line: 200, baseType: !460, size: 128, align: 64, offset: 1088)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "nh", scope: !2806, file: !2807, line: 201, baseType: !2872, size: 64, offset: 1216)
!2872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2873, size: 64)
!2873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nexthop", file: !2874, line: 84, size: 1088, elements: !2875)
!2874 = !DIFile(filename: "./include/net/nexthop.h", directory: "/home/lizy2001/genbc/linux")
!2875 = !{!2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888}
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2873, file: !2874, line: 85, baseType: !594, size: 192, align: 64)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "fi_list", scope: !2873, file: !2874, line: 86, baseType: !445, size: 128, offset: 192)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "f6i_list", scope: !2873, file: !2874, line: 87, baseType: !445, size: 128, offset: 320)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "fdb_list", scope: !2873, file: !2874, line: 88, baseType: !445, size: 128, offset: 448)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "grp_list", scope: !2873, file: !2874, line: 89, baseType: !445, size: 128, offset: 576)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2873, file: !2874, line: 90, baseType: !2116, size: 64, offset: 704)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2873, file: !2874, line: 92, baseType: !862, size: 32, offset: 768)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2873, file: !2874, line: 94, baseType: !1552, size: 8, offset: 800)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "nh_flags", scope: !2873, file: !2874, line: 95, baseType: !1552, size: 8, offset: 808)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "is_group", scope: !2873, file: !2874, line: 96, baseType: !696, size: 8, offset: 816)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2873, file: !2874, line: 98, baseType: !1426, size: 32, offset: 832)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2873, file: !2874, line: 99, baseType: !460, size: 128, align: 64, offset: 896)
!2888 = !DIDerivedType(tag: DW_TAG_member, scope: !2873, file: !2874, line: 101, baseType: !2889, size: 64, offset: 1024)
!2889 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2873, file: !2874, line: 101, size: 64, elements: !2890)
!2890 = !{!2891, !3413}
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "nh_info", scope: !2889, file: !2874, line: 102, baseType: !2892, size: 64)
!2892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2893, size: 64)
!2893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nh_info", file: !2874, line: 51, size: 1088, elements: !2894)
!2894 = !{!2895, !2896, !2897, !2898, !2899, !2900}
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "dev_hash", scope: !2893, file: !2874, line: 52, baseType: !437, size: 128)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "nh_parent", scope: !2893, file: !2874, line: 53, baseType: !2872, size: 64, offset: 128)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2893, file: !2874, line: 55, baseType: !1552, size: 8, offset: 192)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "reject_nh", scope: !2893, file: !2874, line: 56, baseType: !696, size: 8, offset: 200)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "fdb_nh", scope: !2893, file: !2874, line: 57, baseType: !696, size: 8, offset: 208)
!2900 = !DIDerivedType(tag: DW_TAG_member, scope: !2893, file: !2874, line: 59, baseType: !2901, size: 832, offset: 256)
!2901 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2893, file: !2874, line: 59, size: 832, elements: !2902)
!2902 = !{!2903, !3263, !3296}
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "fib_nhc", scope: !2901, file: !2874, line: 60, baseType: !2904, size: 576)
!2904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib_nh_common", file: !2905, line: 80, size: 576, elements: !2906)
!2905 = !DIFile(filename: "./include/net/ip_fib.h", directory: "/home/lizy2001/genbc/linux")
!2906 = !{!2907, !2908, !2909, !2910, !2911, !2912, !2913, !2933, !2938, !2939, !2940, !3243, !3244}
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_dev", scope: !2904, file: !2905, line: 81, baseType: !451, size: 64)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_oif", scope: !2904, file: !2905, line: 82, baseType: !7, size: 32, offset: 64)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_scope", scope: !2904, file: !2905, line: 83, baseType: !650, size: 8, offset: 96)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_family", scope: !2904, file: !2905, line: 84, baseType: !1552, size: 8, offset: 104)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_gw_family", scope: !2904, file: !2905, line: 85, baseType: !1552, size: 8, offset: 112)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_flags", scope: !2904, file: !2905, line: 86, baseType: !650, size: 8, offset: 120)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_lwtstate", scope: !2904, file: !2905, line: 87, baseType: !2914, size: 64, offset: 128)
!2914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2915, size: 64)
!2915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwtunnel_state", file: !2916, line: 25, size: 384, elements: !2917)
!2916 = !DIFile(filename: "./include/net/lwtunnel.h", directory: "/home/lizy2001/genbc/linux")
!2917 = !{!2918, !2919, !2920, !2921, !2922, !2926, !2930, !2931}
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2915, file: !2916, line: 26, baseType: !632, size: 16)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2915, file: !2916, line: 27, baseType: !632, size: 16, offset: 16)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "headroom", scope: !2915, file: !2916, line: 28, baseType: !632, size: 16, offset: 32)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2915, file: !2916, line: 29, baseType: !544, size: 32, offset: 64)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "orig_output", scope: !2915, file: !2916, line: 30, baseType: !2923, size: 64, offset: 128)
!2923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2924, size: 64)
!2924 = !DISubroutineType(types: !2925)
!2925 = !{!7, !2116, !606, !576}
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "orig_input", scope: !2915, file: !2916, line: 31, baseType: !2927, size: 64, offset: 192)
!2927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2928, size: 64)
!2928 = !DISubroutineType(types: !2929)
!2929 = !{!7, !576}
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2915, file: !2916, line: 32, baseType: !460, size: 128, align: 64, offset: 256)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2915, file: !2916, line: 33, baseType: !2932, offset: 384)
!2932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1553, elements: !470)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_gw", scope: !2904, file: !2905, line: 92, baseType: !2934, size: 128, offset: 192)
!2934 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2904, file: !2905, line: 89, size: 128, elements: !2935)
!2935 = !{!2936, !2937}
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !2934, file: !2905, line: 90, baseType: !622, size: 32)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !2934, file: !2905, line: 91, baseType: !2384, size: 128)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_weight", scope: !2904, file: !2905, line: 94, baseType: !7, size: 32, offset: 320)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_upper_bound", scope: !2904, file: !2905, line: 95, baseType: !544, size: 32, offset: 352)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_pcpu_rth_output", scope: !2904, file: !2905, line: 98, baseType: !2941, size: 64, offset: 384)
!2941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2942, size: 64)
!2942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2943, size: 64)
!2943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtable", file: !2944, line: 49, size: 1408, elements: !2945)
!2944 = !DIFile(filename: "./include/net/route.h", directory: "/home/lizy2001/genbc/linux")
!2945 = !{!2946, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3232, !3237, !3238, !3239, !3240}
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !2943, file: !2944, line: 50, baseType: !2947, size: 896)
!2947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_entry", file: !2845, line: 24, size: 896, elements: !2948)
!2948 = !{!2949, !2950, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215, !3216, !3217, !3218, !3219, !3220, !3221, !3222, !3223, !3224}
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2947, file: !2845, line: 25, baseType: !451, size: 64)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2947, file: !2845, line: 26, baseType: !2951, size: 64, offset: 64)
!2951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2952, size: 64)
!2952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_ops", file: !2953, line: 15, size: 1088, elements: !2954)
!2953 = !DIFile(filename: "./include/net/dst_ops.h", directory: "/home/lizy2001/genbc/linux")
!2954 = !{!2955, !2956, !2957, !2961, !2966, !2972, !2973, !2977, !2981, !2985, !2989, !2993, !2997, !3001, !3002, !3198, !3202, !3203}
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2952, file: !2953, line: 16, baseType: !633, size: 16)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh", scope: !2952, file: !2953, line: 17, baseType: !14, size: 32, offset: 32)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !2952, file: !2953, line: 19, baseType: !2958, size: 64, offset: 64)
!2958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2959, size: 64)
!2959 = !DISubroutineType(types: !2960)
!2960 = !{!7, !2951}
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2952, file: !2953, line: 20, baseType: !2962, size: 64, offset: 128)
!2962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2963, size: 64)
!2963 = !DISubroutineType(types: !2964)
!2964 = !{!2965, !2965, !624}
!2965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2947, size: 64)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "default_advmss", scope: !2952, file: !2953, line: 21, baseType: !2967, size: 64, offset: 192)
!2967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2968, size: 64)
!2968 = !DISubroutineType(types: !2969)
!2969 = !{!14, !2970}
!2970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2971, size: 64)
!2971 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2947)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !2952, file: !2953, line: 22, baseType: !2967, size: 64, offset: 256)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "cow_metrics", scope: !2952, file: !2953, line: 23, baseType: !2974, size: 64, offset: 320)
!2974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2975, size: 64)
!2975 = !DISubroutineType(types: !2976)
!2976 = !{!1615, !2965, !473}
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !2952, file: !2953, line: 24, baseType: !2978, size: 64, offset: 384)
!2978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2979, size: 64)
!2979 = !DISubroutineType(types: !2980)
!2980 = !{null, !2965}
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "ifdown", scope: !2952, file: !2953, line: 25, baseType: !2982, size: 64, offset: 448)
!2982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2983, size: 64)
!2983 = !DISubroutineType(types: !2984)
!2984 = !{null, !2965, !451, !7}
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "negative_advice", scope: !2952, file: !2953, line: 27, baseType: !2986, size: 64, offset: 512)
!2986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2987, size: 64)
!2987 = !DISubroutineType(types: !2988)
!2988 = !{!2965, !2965}
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "link_failure", scope: !2952, file: !2953, line: 28, baseType: !2990, size: 64, offset: 576)
!2990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2991, size: 64)
!2991 = !DISubroutineType(types: !2992)
!2992 = !{null, !576}
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "update_pmtu", scope: !2952, file: !2953, line: 29, baseType: !2994, size: 64, offset: 640)
!2994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2995, size: 64)
!2995 = !DISubroutineType(types: !2996)
!2996 = !{null, !2965, !606, !576, !862, !696}
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "redirect", scope: !2952, file: !2953, line: 32, baseType: !2998, size: 64, offset: 704)
!2998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2999, size: 64)
!2999 = !DISubroutineType(types: !3000)
!3000 = !{null, !2965, !606, !576}
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "local_out", scope: !2952, file: !2953, line: 34, baseType: !2923, size: 64, offset: 768)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_lookup", scope: !2952, file: !2953, line: 35, baseType: !3003, size: 64, offset: 832)
!3003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3004, size: 64)
!3004 = !DISubroutineType(types: !3005)
!3005 = !{!3006, !2970, !576, !2424}
!3006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3007, size: 64)
!3007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neighbour", file: !3008, line: 134, size: 2624, elements: !3009)
!3008 = !DIFile(filename: "./include/net/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!3009 = !{!3010, !3011, !3149, !3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3176, !3180, !3193, !3194, !3195, !3196}
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3007, file: !3008, line: 135, baseType: !3006, size: 64)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !3007, file: !3008, line: 136, baseType: !3012, size: 64, offset: 64)
!3012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3013, size: 64)
!3013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_table", file: !3008, line: 194, size: 3840, elements: !3014)
!3014 = !{!3015, !3016, !3017, !3018, !3019, !3026, !3032, !3036, !3054, !3058, !3059, !3063, !3067, !3068, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3101, !3102, !3109, !3110, !3111, !3112, !3120, !3121, !3137, !3147}
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !3013, file: !3008, line: 195, baseType: !7, size: 32)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "entry_size", scope: !3013, file: !3008, line: 196, baseType: !14, size: 32, offset: 32)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !3013, file: !3008, line: 197, baseType: !14, size: 32, offset: 64)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !3013, file: !3008, line: 198, baseType: !645, size: 16, offset: 96)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3013, file: !3008, line: 199, baseType: !3020, size: 64, offset: 128)
!3020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3021, size: 64)
!3021 = !DISubroutineType(types: !3022)
!3022 = !{!624, !2424, !3023, !3025}
!3023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3024, size: 64)
!3024 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !425)
!3025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 64)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "key_eq", scope: !3013, file: !3008, line: 202, baseType: !3027, size: 64, offset: 192)
!3027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3028, size: 64)
!3028 = !DISubroutineType(types: !3029)
!3029 = !{!696, !3030, !2424}
!3030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3031, size: 64)
!3031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3007)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !3013, file: !3008, line: 203, baseType: !3033, size: 64, offset: 256)
!3033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3034, size: 64)
!3034 = !DISubroutineType(types: !3035)
!3035 = !{!7, !3006}
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "pconstructor", scope: !3013, file: !3008, line: 204, baseType: !3037, size: 64, offset: 320)
!3037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3038, size: 64)
!3038 = !DISubroutineType(types: !3039)
!3039 = !{!7, !3040}
!3040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3041, size: 64)
!3041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pneigh_entry", file: !3008, line: 171, size: 256, elements: !3042)
!3042 = !{!3043, !3044, !3049, !3050, !3051, !3052}
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3041, file: !3008, line: 172, baseType: !3040, size: 64)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !3041, file: !3008, line: 173, baseType: !3045, size: 64, offset: 64)
!3045 = !DIDerivedType(tag: DW_TAG_typedef, name: "possible_net_t", file: !2118, line: 318, baseType: !3046)
!3046 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2118, line: 314, size: 64, elements: !3047)
!3047 = !{!3048}
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !3046, file: !2118, line: 316, baseType: !2116, size: 64)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3041, file: !3008, line: 174, baseType: !451, size: 64, offset: 128)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3041, file: !3008, line: 175, baseType: !1552, size: 8, offset: 192)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !3041, file: !3008, line: 176, baseType: !1552, size: 8, offset: 200)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3041, file: !3008, line: 177, baseType: !3053, offset: 208)
!3053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1552, elements: !470)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "pdestructor", scope: !3013, file: !3008, line: 205, baseType: !3055, size: 64, offset: 384)
!3055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3056, size: 64)
!3056 = !DISubroutineType(types: !3057)
!3057 = !{null, !3040}
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_redo", scope: !3013, file: !3008, line: 206, baseType: !2990, size: 64, offset: 448)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "is_multicast", scope: !3013, file: !3008, line: 207, baseType: !3060, size: 64, offset: 512)
!3060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3061, size: 64)
!3061 = !DISubroutineType(types: !3062)
!3062 = !{!7, !2424}
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "allow_add", scope: !3013, file: !3008, line: 208, baseType: !3064, size: 64, offset: 576)
!3064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3065, size: 64)
!3065 = !DISubroutineType(types: !3066)
!3066 = !{!696, !3023, !2633}
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3013, file: !3008, line: 210, baseType: !733, size: 64, offset: 640)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "parms", scope: !3013, file: !3008, line: 211, baseType: !3069, size: 1152, offset: 704)
!3069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_parms", file: !3008, line: 70, size: 1152, elements: !3070)
!3070 = !{!3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3085}
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !3069, file: !3008, line: 71, baseType: !3045, size: 64)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3069, file: !3008, line: 72, baseType: !451, size: 64, offset: 64)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3069, file: !3008, line: 73, baseType: !445, size: 128, offset: 128)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_setup", scope: !3069, file: !3008, line: 74, baseType: !3033, size: 64, offset: 256)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !3069, file: !3008, line: 75, baseType: !3012, size: 64, offset: 320)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_table", scope: !3069, file: !3008, line: 77, baseType: !726, size: 64, offset: 384)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !3069, file: !3008, line: 79, baseType: !7, size: 32, offset: 448)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3069, file: !3008, line: 80, baseType: !1426, size: 32, offset: 480)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !3069, file: !3008, line: 81, baseType: !460, size: 128, align: 64, offset: 512)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "reachable_time", scope: !3069, file: !3008, line: 83, baseType: !7, size: 32, offset: 640)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3069, file: !3008, line: 84, baseType: !3082, size: 416, offset: 672)
!3082 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 416, elements: !3083)
!3083 = !{!3084}
!3084 = !DISubrange(count: 13)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "data_state", scope: !3069, file: !3008, line: 85, baseType: !1570, size: 64, offset: 1088)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "parms_list", scope: !3013, file: !3008, line: 212, baseType: !445, size: 128, offset: 1856)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "gc_interval", scope: !3013, file: !3008, line: 213, baseType: !7, size: 32, offset: 1984)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh1", scope: !3013, file: !3008, line: 214, baseType: !7, size: 32, offset: 2016)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh2", scope: !3013, file: !3008, line: 215, baseType: !7, size: 32, offset: 2048)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh3", scope: !3013, file: !3008, line: 216, baseType: !7, size: 32, offset: 2080)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "last_flush", scope: !3013, file: !3008, line: 217, baseType: !473, size: 64, offset: 2112)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "gc_work", scope: !3013, file: !3008, line: 218, baseType: !3093, size: 704, offset: 2176)
!3093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !1962, line: 115, size: 704, elements: !3094)
!3094 = !{!3095, !3096, !3097, !3100}
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3093, file: !1962, line: 116, baseType: !1961, size: 256)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3093, file: !1962, line: 117, baseType: !2401, size: 320, offset: 256)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !3093, file: !1962, line: 120, baseType: !3098, size: 64, offset: 576)
!3098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3099, size: 64)
!3099 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1962, line: 18, flags: DIFlagFwdDecl)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !3093, file: !1962, line: 121, baseType: !7, size: 32, offset: 640)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_timer", scope: !3013, file: !3008, line: 219, baseType: !2401, size: 320, offset: 2880)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_queue", scope: !3013, file: !3008, line: 220, baseType: !3103, size: 192, offset: 3200)
!3103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff_head", file: !578, line: 291, size: 192, elements: !3104)
!3104 = !{!3105, !3106, !3107, !3108}
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3103, file: !578, line: 293, baseType: !576, size: 64)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3103, file: !578, line: 294, baseType: !576, size: 64, offset: 64)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !3103, file: !578, line: 296, baseType: !624, size: 32, offset: 128)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3103, file: !578, line: 297, baseType: !884, offset: 160)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !3013, file: !3008, line: 221, baseType: !544, size: 32, offset: 3392)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "gc_entries", scope: !3013, file: !3008, line: 222, baseType: !544, size: 32, offset: 3424)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "gc_list", scope: !3013, file: !3008, line: 223, baseType: !445, size: 128, offset: 3456)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3013, file: !3008, line: 224, baseType: !3113, offset: 3584)
!3113 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !3114, line: 20, baseType: !3115)
!3114 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!3115 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3114, line: 11, elements: !3116)
!3116 = !{!3117}
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !3115, file: !3114, line: 12, baseType: !3118)
!3118 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !896, line: 33, baseType: !3119)
!3119 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !896, line: 31, elements: !898)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "last_rand", scope: !3013, file: !3008, line: 225, baseType: !473, size: 64, offset: 3584)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !3013, file: !3008, line: 226, baseType: !3122, size: 64, offset: 3648)
!3122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3123, size: 64)
!3123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_statistics", file: !3008, line: 112, size: 768, elements: !3124)
!3124 = !{!3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136}
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "allocs", scope: !3123, file: !3008, line: 113, baseType: !473, size: 64)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "destroys", scope: !3123, file: !3008, line: 114, baseType: !473, size: 64, offset: 64)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "hash_grows", scope: !3123, file: !3008, line: 115, baseType: !473, size: 64, offset: 128)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "res_failed", scope: !3123, file: !3008, line: 117, baseType: !473, size: 64, offset: 192)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "lookups", scope: !3123, file: !3008, line: 119, baseType: !473, size: 64, offset: 256)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "hits", scope: !3123, file: !3008, line: 120, baseType: !473, size: 64, offset: 320)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_probes_mcast", scope: !3123, file: !3008, line: 122, baseType: !473, size: 64, offset: 384)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_probes_ucast", scope: !3123, file: !3008, line: 123, baseType: !473, size: 64, offset: 448)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "periodic_gc_runs", scope: !3123, file: !3008, line: 125, baseType: !473, size: 64, offset: 512)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "forced_gc_runs", scope: !3123, file: !3008, line: 126, baseType: !473, size: 64, offset: 576)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "unres_discards", scope: !3123, file: !3008, line: 128, baseType: !473, size: 64, offset: 640)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "table_fulls", scope: !3123, file: !3008, line: 129, baseType: !473, size: 64, offset: 704)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "nht", scope: !3013, file: !3008, line: 227, baseType: !3138, size: 64, offset: 3712)
!3138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3139, size: 64)
!3139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_hash_table", file: !3008, line: 186, size: 384, elements: !3140)
!3140 = !{!3141, !3143, !3144, !3146}
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "hash_buckets", scope: !3139, file: !3008, line: 187, baseType: !3142, size: 64)
!3142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3006, size: 64)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "hash_shift", scope: !3139, file: !3008, line: 188, baseType: !14, size: 32, offset: 64)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "hash_rnd", scope: !3139, file: !3008, line: 189, baseType: !3145, size: 128, offset: 96)
!3145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !624, size: 128, elements: !1357)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3139, file: !3008, line: 190, baseType: !460, size: 128, align: 64, offset: 256)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "phash_buckets", scope: !3013, file: !3008, line: 228, baseType: !3148, size: 64, offset: 3776)
!3148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3040, size: 64)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "parms", scope: !3007, file: !3008, line: 137, baseType: !3150, size: 64, offset: 128)
!3150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3069, size: 64)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "confirmed", scope: !3007, file: !3008, line: 138, baseType: !473, size: 64, offset: 192)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "updated", scope: !3007, file: !3008, line: 139, baseType: !473, size: 64, offset: 256)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3007, file: !3008, line: 140, baseType: !3113, offset: 320)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3007, file: !3008, line: 141, baseType: !1426, size: 32, offset: 320)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "arp_queue_len_bytes", scope: !3007, file: !3008, line: 142, baseType: !14, size: 32, offset: 352)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "arp_queue", scope: !3007, file: !3008, line: 143, baseType: !3103, size: 192, offset: 384)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3007, file: !3008, line: 144, baseType: !2401, size: 320, offset: 576)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !3007, file: !3008, line: 145, baseType: !473, size: 64, offset: 896)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "probes", scope: !3007, file: !3008, line: 146, baseType: !544, size: 32, offset: 960)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3007, file: !3008, line: 147, baseType: !1553, size: 8, offset: 992)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "nud_state", scope: !3007, file: !3008, line: 148, baseType: !1553, size: 8, offset: 1000)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3007, file: !3008, line: 149, baseType: !1553, size: 8, offset: 1008)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !3007, file: !3008, line: 150, baseType: !1553, size: 8, offset: 1016)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !3007, file: !3008, line: 151, baseType: !1552, size: 8, offset: 1024)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "ha_lock", scope: !3007, file: !3008, line: 152, baseType: !2334, size: 32, offset: 1056)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "ha", scope: !3007, file: !3008, line: 153, baseType: !870, size: 256, align: 64, offset: 1088)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "hh", scope: !3007, file: !3008, line: 154, baseType: !3168, size: 832, offset: 1344)
!3168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hh_cache", file: !6, line: 244, size: 832, elements: !3169)
!3169 = !{!3170, !3171, !3172}
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "hh_len", scope: !3168, file: !6, line: 245, baseType: !14, size: 32)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "hh_lock", scope: !3168, file: !6, line: 246, baseType: !2334, size: 32, offset: 32)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "hh_data", scope: !3168, file: !6, line: 254, baseType: !3173, size: 768, offset: 64)
!3173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 768, elements: !3174)
!3174 = !{!3175}
!3175 = !DISubrange(count: 12)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !3007, file: !3008, line: 155, baseType: !3177, size: 64, offset: 2176)
!3177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3178, size: 64)
!3178 = !DISubroutineType(types: !3179)
!3179 = !{!7, !3006, !576}
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3007, file: !3008, line: 156, baseType: !3181, size: 64, offset: 2240)
!3181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3182, size: 64)
!3182 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3183)
!3183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_ops", file: !3008, line: 163, size: 320, elements: !3184)
!3184 = !{!3185, !3186, !3190, !3191, !3192}
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !3183, file: !3008, line: 164, baseType: !7, size: 32)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "solicit", scope: !3183, file: !3008, line: 165, baseType: !3187, size: 64, offset: 64)
!3187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3188, size: 64)
!3188 = !DISubroutineType(types: !3189)
!3189 = !{null, !3006, !576}
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "error_report", scope: !3183, file: !3008, line: 166, baseType: !3187, size: 64, offset: 128)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !3183, file: !3008, line: 167, baseType: !3177, size: 64, offset: 192)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "connected_output", scope: !3183, file: !3008, line: 168, baseType: !3177, size: 64, offset: 256)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "gc_list", scope: !3007, file: !3008, line: 157, baseType: !445, size: 128, offset: 2304)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3007, file: !3008, line: 158, baseType: !460, size: 128, align: 64, offset: 2432)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3007, file: !3008, line: 159, baseType: !451, size: 64, offset: 2560)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "primary_key", scope: !3007, file: !3008, line: 160, baseType: !3197, offset: 2624)
!3197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1552, elements: !2076)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_neigh", scope: !2952, file: !2953, line: 38, baseType: !3199, size: 64, offset: 896)
!3199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3200, size: 64)
!3200 = !DISubroutineType(types: !3201)
!3201 = !{null, !2970, !2424}
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "kmem_cachep", scope: !2952, file: !2953, line: 41, baseType: !2432, size: 64, offset: 960)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "pcpuc_entries", scope: !2952, file: !2953, line: 43, baseType: !3204, size: 64, offset: 1024)
!3204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !3205, line: 97, size: 64, elements: !3206)
!3205 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!3206 = !{!3207}
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3204, file: !3205, line: 98, baseType: !538, size: 64)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "_metrics", scope: !2947, file: !2845, line: 27, baseType: !473, size: 64, offset: 128)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2947, file: !2845, line: 28, baseType: !473, size: 64, offset: 192)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2947, file: !2845, line: 32, baseType: !726, size: 64, offset: 256)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !2947, file: !2845, line: 34, baseType: !2927, size: 64, offset: 320)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2947, file: !2845, line: 35, baseType: !2923, size: 64, offset: 384)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2947, file: !2845, line: 37, baseType: !633, size: 16, offset: 448)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "obsolete", scope: !2947, file: !2845, line: 54, baseType: !1401, size: 16, offset: 464)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "header_len", scope: !2947, file: !2845, line: 59, baseType: !633, size: 16, offset: 480)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "trailer_len", scope: !2947, file: !2845, line: 60, baseType: !633, size: 16, offset: 496)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "__refcnt", scope: !2947, file: !2845, line: 67, baseType: !544, size: 32, offset: 512)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "__use", scope: !2947, file: !2845, line: 69, baseType: !7, size: 32, offset: 544)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "lastuse", scope: !2947, file: !2845, line: 70, baseType: !473, size: 64, offset: 576)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "lwtstate", scope: !2947, file: !2845, line: 71, baseType: !2914, size: 64, offset: 640)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2947, file: !2845, line: 72, baseType: !460, size: 128, align: 64, offset: 704)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2947, file: !2845, line: 73, baseType: !1401, size: 16, offset: 832)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "__pad", scope: !2947, file: !2845, line: 74, baseType: !1401, size: 16, offset: 848)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "tclassid", scope: !2947, file: !2845, line: 75, baseType: !624, size: 32, offset: 864)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "rt_genid", scope: !2943, file: !2944, line: 52, baseType: !7, size: 32, offset: 896)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "rt_flags", scope: !2943, file: !2944, line: 53, baseType: !14, size: 32, offset: 928)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !2943, file: !2944, line: 54, baseType: !632, size: 16, offset: 960)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "rt_is_input", scope: !2943, file: !2944, line: 55, baseType: !1553, size: 8, offset: 976)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uses_gateway", scope: !2943, file: !2944, line: 56, baseType: !1553, size: 8, offset: 984)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "rt_iif", scope: !2943, file: !2944, line: 58, baseType: !7, size: 32, offset: 992)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "rt_gw_family", scope: !2943, file: !2944, line: 60, baseType: !1552, size: 8, offset: 1024)
!3232 = !DIDerivedType(tag: DW_TAG_member, scope: !2943, file: !2944, line: 62, baseType: !3233, size: 128, offset: 1056)
!3233 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2943, file: !2944, line: 62, size: 128, elements: !3234)
!3234 = !{!3235, !3236}
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "rt_gw4", scope: !3233, file: !2944, line: 63, baseType: !622, size: 32)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "rt_gw6", scope: !3233, file: !2944, line: 64, baseType: !2384, size: 128)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mtu_locked", scope: !2943, file: !2944, line: 68, baseType: !862, size: 1, offset: 1184, flags: DIFlagBitField, extraData: i64 1184)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "rt_pmtu", scope: !2943, file: !2944, line: 69, baseType: !862, size: 31, offset: 1185, flags: DIFlagBitField, extraData: i64 1184)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uncached", scope: !2943, file: !2944, line: 71, baseType: !445, size: 128, offset: 1216)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uncached_list", scope: !2943, file: !2944, line: 72, baseType: !3241, size: 64, offset: 1344)
!3241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3242, size: 64)
!3242 = !DICompositeType(tag: DW_TAG_structure_type, name: "uncached_list", file: !2944, line: 48, flags: DIFlagFwdDecl)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_rth_input", scope: !2904, file: !2905, line: 99, baseType: !2942, size: 64, offset: 448)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_exceptions", scope: !2904, file: !2905, line: 100, baseType: !3245, size: 64, offset: 512)
!3245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3246, size: 64)
!3246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fnhe_hash_bucket", file: !2905, line: 72, size: 64, elements: !3247)
!3247 = !{!3248}
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !3246, file: !2905, line: 73, baseType: !3249, size: 64)
!3249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3250, size: 64)
!3250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib_nh_exception", file: !2905, line: 58, size: 640, elements: !3251)
!3251 = !{!3252, !3253, !3254, !3255, !3256, !3257, !3258, !3259, !3260, !3261, !3262}
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_next", scope: !3250, file: !2905, line: 59, baseType: !3249, size: 64)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_genid", scope: !3250, file: !2905, line: 60, baseType: !7, size: 32, offset: 64)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_daddr", scope: !3250, file: !2905, line: 61, baseType: !622, size: 32, offset: 96)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_pmtu", scope: !3250, file: !2905, line: 62, baseType: !862, size: 32, offset: 128)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_mtu_locked", scope: !3250, file: !2905, line: 63, baseType: !696, size: 8, offset: 160)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_gw", scope: !3250, file: !2905, line: 64, baseType: !622, size: 32, offset: 192)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_expires", scope: !3250, file: !2905, line: 65, baseType: !473, size: 64, offset: 256)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_rth_input", scope: !3250, file: !2905, line: 66, baseType: !2942, size: 64, offset: 320)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_rth_output", scope: !3250, file: !2905, line: 67, baseType: !2942, size: 64, offset: 384)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_stamp", scope: !3250, file: !2905, line: 68, baseType: !473, size: 64, offset: 448)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3250, file: !2905, line: 69, baseType: !460, size: 128, align: 64, offset: 512)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "fib_nh", scope: !2901, file: !2874, line: 61, baseType: !3264, size: 832)
!3264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib_nh", file: !2905, line: 103, size: 832, elements: !3265)
!3265 = !{!3266, !3267, !3268, !3294, !3295}
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "nh_common", scope: !3264, file: !2905, line: 104, baseType: !2904, size: 576)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "nh_hash", scope: !3264, file: !2905, line: 105, baseType: !437, size: 128, offset: 576)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "nh_parent", scope: !3264, file: !2905, line: 106, baseType: !3269, size: 64, offset: 704)
!3269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3270, size: 64)
!3270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib_info", file: !2905, line: 131, size: 1024, elements: !3271)
!3271 = !{!3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292}
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "fib_hash", scope: !3270, file: !2905, line: 132, baseType: !437, size: 128)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "fib_lhash", scope: !3270, file: !2905, line: 133, baseType: !437, size: 128, offset: 128)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "nh_list", scope: !3270, file: !2905, line: 134, baseType: !445, size: 128, offset: 256)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "fib_net", scope: !3270, file: !2905, line: 135, baseType: !2116, size: 64, offset: 384)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "fib_treeref", scope: !3270, file: !2905, line: 136, baseType: !7, size: 32, offset: 448)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "fib_clntref", scope: !3270, file: !2905, line: 137, baseType: !1426, size: 32, offset: 480)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "fib_flags", scope: !3270, file: !2905, line: 138, baseType: !14, size: 32, offset: 512)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "fib_dead", scope: !3270, file: !2905, line: 139, baseType: !650, size: 8, offset: 544)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "fib_protocol", scope: !3270, file: !2905, line: 140, baseType: !650, size: 8, offset: 552)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "fib_scope", scope: !3270, file: !2905, line: 141, baseType: !650, size: 8, offset: 560)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "fib_type", scope: !3270, file: !2905, line: 142, baseType: !650, size: 8, offset: 568)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "fib_prefsrc", scope: !3270, file: !2905, line: 143, baseType: !622, size: 32, offset: 576)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "fib_tb_id", scope: !3270, file: !2905, line: 144, baseType: !862, size: 32, offset: 608)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "fib_priority", scope: !3270, file: !2905, line: 145, baseType: !862, size: 32, offset: 640)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "fib_metrics", scope: !3270, file: !2905, line: 146, baseType: !2843, size: 64, offset: 704)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "fib_nhs", scope: !3270, file: !2905, line: 151, baseType: !7, size: 32, offset: 768)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "fib_nh_is_v6", scope: !3270, file: !2905, line: 152, baseType: !696, size: 8, offset: 800)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "nh_updated", scope: !3270, file: !2905, line: 153, baseType: !696, size: 8, offset: 808)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "nh", scope: !3270, file: !2905, line: 154, baseType: !2872, size: 64, offset: 832)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3270, file: !2905, line: 155, baseType: !460, size: 128, align: 64, offset: 896)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "fib_nh", scope: !3270, file: !2905, line: 156, baseType: !3293, offset: 1024)
!3293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3264, elements: !470)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "nh_saddr", scope: !3264, file: !2905, line: 110, baseType: !622, size: 32, offset: 768)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "nh_saddr_genid", scope: !3264, file: !2905, line: 111, baseType: !7, size: 32, offset: 800)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_nh", scope: !2901, file: !2874, line: 62, baseType: !3297, size: 704)
!3297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_nh", file: !2807, line: 152, size: 704, elements: !3298)
!3298 = !{!3299, !3300, !3407}
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "nh_common", scope: !3297, file: !2807, line: 153, baseType: !2904, size: 576)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_pcpu", scope: !3297, file: !2807, line: 159, baseType: !3301, size: 64, offset: 576)
!3301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3302, size: 64)
!3302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3303, size: 64)
!3303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_info", file: !2807, line: 205, size: 1856, elements: !3304)
!3304 = !{!3305, !3306, !3307, !3308, !3309, !3310, !3311, !3403, !3404, !3405, !3406}
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !3303, file: !2807, line: 206, baseType: !2947, size: 896)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !3303, file: !2807, line: 207, baseType: !2805, size: 64, offset: 896)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "sernum", scope: !3303, file: !2807, line: 208, baseType: !7, size: 32, offset: 960)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_dst", scope: !3303, file: !2807, line: 210, baseType: !2853, size: 160, offset: 992)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_src", scope: !3303, file: !2807, line: 211, baseType: !2853, size: 160, offset: 1152)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_gateway", scope: !3303, file: !2807, line: 212, baseType: !2384, size: 128, offset: 1312)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_idev", scope: !3303, file: !2807, line: 213, baseType: !3312, size: 64, offset: 1472)
!3312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3313, size: 64)
!3313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet6_dev", file: !3314, line: 163, size: 4544, elements: !3315)
!3314 = !DIFile(filename: "./include/net/if_inet6.h", directory: "/home/lizy2001/genbc/linux")
!3315 = !{!3316, !3317, !3318, !3347, !3348, !3349, !3350, !3351, !3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359, !3360, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3398, !3399, !3400, !3401, !3402}
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3313, file: !3314, line: 164, baseType: !451, size: 64)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list", scope: !3313, file: !3314, line: 166, baseType: !445, size: 128, offset: 64)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "mc_list", scope: !3313, file: !3314, line: 168, baseType: !3319, size: 64, offset: 192)
!3319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3320, size: 64)
!3320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmcaddr6", file: !3314, line: 114, size: 1152, elements: !3321)
!3321 = !{!3322, !3323, !3324, !3325, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346}
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "mca_addr", scope: !3320, file: !3314, line: 115, baseType: !2384, size: 128)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "idev", scope: !3320, file: !3314, line: 116, baseType: !3312, size: 64, offset: 128)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3320, file: !3314, line: 117, baseType: !3319, size: 64, offset: 192)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "mca_sources", scope: !3320, file: !3314, line: 118, baseType: !3326, size: 64, offset: 256)
!3326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3327, size: 64)
!3327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip6_sf_list", file: !3314, line: 99, size: 384, elements: !3328)
!3328 = !{!3329, !3330, !3331, !3333, !3334, !3335}
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "sf_next", scope: !3327, file: !3314, line: 100, baseType: !3326, size: 64)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "sf_addr", scope: !3327, file: !3314, line: 101, baseType: !2384, size: 128, offset: 64)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "sf_count", scope: !3327, file: !3314, line: 102, baseType: !3332, size: 128, offset: 192)
!3332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 128, elements: !634)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "sf_gsresp", scope: !3327, file: !3314, line: 103, baseType: !650, size: 8, offset: 320)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "sf_oldin", scope: !3327, file: !3314, line: 104, baseType: !650, size: 8, offset: 328)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "sf_crcount", scope: !3327, file: !3314, line: 105, baseType: !650, size: 8, offset: 336)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "mca_tomb", scope: !3320, file: !3314, line: 119, baseType: !3326, size: 64, offset: 320)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "mca_sfmode", scope: !3320, file: !3314, line: 120, baseType: !14, size: 32, offset: 384)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "mca_crcount", scope: !3320, file: !3314, line: 121, baseType: !650, size: 8, offset: 416)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "mca_sfcount", scope: !3320, file: !3314, line: 122, baseType: !3332, size: 128, offset: 448)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "mca_timer", scope: !3320, file: !3314, line: 123, baseType: !2401, size: 320, offset: 576)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "mca_flags", scope: !3320, file: !3314, line: 124, baseType: !14, size: 32, offset: 896)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "mca_users", scope: !3320, file: !3314, line: 125, baseType: !7, size: 32, offset: 928)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "mca_refcnt", scope: !3320, file: !3314, line: 126, baseType: !1426, size: 32, offset: 960)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "mca_lock", scope: !3320, file: !3314, line: 127, baseType: !884, offset: 992)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "mca_cstamp", scope: !3320, file: !3314, line: 128, baseType: !473, size: 64, offset: 1024)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "mca_tstamp", scope: !3320, file: !3314, line: 129, baseType: !473, size: 64, offset: 1088)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "mc_tomb", scope: !3313, file: !3314, line: 169, baseType: !3319, size: 64, offset: 256)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "mc_lock", scope: !3313, file: !3314, line: 170, baseType: !884, offset: 320)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "mc_qrv", scope: !3313, file: !3314, line: 172, baseType: !650, size: 8, offset: 320)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "mc_gq_running", scope: !3313, file: !3314, line: 173, baseType: !650, size: 8, offset: 328)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "mc_ifc_count", scope: !3313, file: !3314, line: 174, baseType: !650, size: 8, offset: 336)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "mc_dad_count", scope: !3313, file: !3314, line: 175, baseType: !650, size: 8, offset: 344)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "mc_v1_seen", scope: !3313, file: !3314, line: 177, baseType: !473, size: 64, offset: 384)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "mc_qi", scope: !3313, file: !3314, line: 178, baseType: !473, size: 64, offset: 448)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "mc_qri", scope: !3313, file: !3314, line: 179, baseType: !473, size: 64, offset: 512)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "mc_maxdelay", scope: !3313, file: !3314, line: 180, baseType: !473, size: 64, offset: 576)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "mc_gq_timer", scope: !3313, file: !3314, line: 182, baseType: !2401, size: 320, offset: 640)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "mc_ifc_timer", scope: !3313, file: !3314, line: 183, baseType: !2401, size: 320, offset: 960)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "mc_dad_timer", scope: !3313, file: !3314, line: 184, baseType: !2401, size: 320, offset: 1280)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "ac_list", scope: !3313, file: !3314, line: 186, baseType: !3361, size: 64, offset: 1600)
!3361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3362, size: 64)
!3362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifacaddr6", file: !3314, line: 140, size: 704, elements: !3363)
!3363 = !{!3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372}
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "aca_addr", scope: !3362, file: !3314, line: 141, baseType: !2384, size: 128)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "aca_rt", scope: !3362, file: !3314, line: 142, baseType: !2805, size: 64, offset: 128)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "aca_next", scope: !3362, file: !3314, line: 143, baseType: !3361, size: 64, offset: 192)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "aca_addr_lst", scope: !3362, file: !3314, line: 144, baseType: !437, size: 128, offset: 256)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "aca_users", scope: !3362, file: !3314, line: 145, baseType: !7, size: 32, offset: 384)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "aca_refcnt", scope: !3362, file: !3314, line: 146, baseType: !1426, size: 32, offset: 416)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "aca_cstamp", scope: !3362, file: !3314, line: 147, baseType: !473, size: 64, offset: 448)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "aca_tstamp", scope: !3362, file: !3314, line: 148, baseType: !473, size: 64, offset: 512)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3362, file: !3314, line: 149, baseType: !460, size: 128, align: 64, offset: 576)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3313, file: !3314, line: 187, baseType: !3113, offset: 1664)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3313, file: !3314, line: 188, baseType: !1426, size: 32, offset: 1664)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "if_flags", scope: !3313, file: !3314, line: 189, baseType: !624, size: 32, offset: 1696)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !3313, file: !3314, line: 190, baseType: !7, size: 32, offset: 1728)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "desync_factor", scope: !3313, file: !3314, line: 192, baseType: !862, size: 32, offset: 1760)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "tempaddr_list", scope: !3313, file: !3314, line: 193, baseType: !445, size: 128, offset: 1792)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "token", scope: !3313, file: !3314, line: 195, baseType: !2384, size: 128, offset: 1920)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "nd_parms", scope: !3313, file: !3314, line: 197, baseType: !3150, size: 64, offset: 2048)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "cnf", scope: !3313, file: !3314, line: 198, baseType: !2749, size: 1600, offset: 2112)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !3313, file: !3314, line: 199, baseType: !3383, size: 256, offset: 3712)
!3383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devstat", file: !3314, line: 156, size: 256, elements: !3384)
!3384 = !{!3385, !3386, !3387, !3393}
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir_entry", scope: !3383, file: !3314, line: 157, baseType: !2151, size: 64)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !3383, file: !3314, line: 158, baseType: !2204, size: 64, offset: 64)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6dev", scope: !3383, file: !3314, line: 159, baseType: !3388, size: 64, offset: 128)
!3388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3389, size: 64)
!3389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib_device", file: !2199, line: 75, size: 384, elements: !3390)
!3390 = !{!3391}
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3389, file: !2199, line: 76, baseType: !3392, size: 384)
!3392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !532, size: 384, elements: !1825)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msgdev", scope: !3383, file: !3314, line: 160, baseType: !3394, size: 64, offset: 192)
!3394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3395, size: 64)
!3395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib_device", file: !2199, line: 85, size: 32768, elements: !3396)
!3396 = !{!3397}
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3395, file: !2199, line: 86, baseType: !2244, size: 32768)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "rs_timer", scope: !3313, file: !3314, line: 201, baseType: !2401, size: 320, offset: 3968)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "rs_interval", scope: !3313, file: !3314, line: 202, baseType: !1645, size: 32, offset: 4288)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "rs_probes", scope: !3313, file: !3314, line: 203, baseType: !1553, size: 8, offset: 4320)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !3313, file: !3314, line: 205, baseType: !473, size: 64, offset: 4352)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3313, file: !3314, line: 206, baseType: !460, size: 128, align: 64, offset: 4416)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_flags", scope: !3303, file: !2807, line: 214, baseType: !862, size: 32, offset: 1536)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_uncached", scope: !3303, file: !2807, line: 216, baseType: !445, size: 128, offset: 1600)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_uncached_list", scope: !3303, file: !2807, line: 217, baseType: !3241, size: 64, offset: 1728)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_nfheader_len", scope: !3303, file: !2807, line: 220, baseType: !633, size: 16, offset: 1792)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_exception_bucket", scope: !3297, file: !2807, line: 160, baseType: !3408, size: 64, offset: 640)
!3408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3409, size: 64)
!3409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_exception_bucket", file: !2807, line: 136, size: 128, elements: !3410)
!3410 = !{!3411, !3412}
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !3409, file: !2807, line: 137, baseType: !1012, size: 64)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3409, file: !2807, line: 138, baseType: !7, size: 32, offset: 64)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "nh_grp", scope: !2889, file: !2874, line: 103, baseType: !3414, size: 64)
!3414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3415, size: 64)
!3415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nh_group", file: !2874, line: 75, size: 128, elements: !3416)
!3416 = !{!3417, !3418, !3419, !3420, !3421, !3422}
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !3415, file: !2874, line: 76, baseType: !3414, size: 64)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "num_nh", scope: !3415, file: !2874, line: 77, baseType: !1193, size: 16, offset: 64)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !3415, file: !2874, line: 78, baseType: !696, size: 8, offset: 80)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "fdb_nh", scope: !3415, file: !2874, line: 79, baseType: !696, size: 8, offset: 88)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "has_v4", scope: !3415, file: !2874, line: 80, baseType: !696, size: 8, offset: 96)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "nh_entries", scope: !3415, file: !2874, line: 81, baseType: !3423, offset: 128)
!3423 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3424, elements: !470)
!3424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nh_grp_entry", file: !2874, line: 66, size: 320, elements: !3425)
!3425 = !{!3426, !3427, !3428, !3429, !3430}
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "nh", scope: !3424, file: !2874, line: 67, baseType: !2872, size: 64)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !3424, file: !2874, line: 68, baseType: !1552, size: 8, offset: 64)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "upper_bound", scope: !3424, file: !2874, line: 69, baseType: !544, size: 32, offset: 96)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "nh_list", scope: !3424, file: !2874, line: 71, baseType: !445, size: 128, offset: 128)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "nh_parent", scope: !3424, file: !2874, line: 72, baseType: !2872, size: 64, offset: 256)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_nh", scope: !2806, file: !2807, line: 202, baseType: !3432, offset: 1280)
!3432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3297, elements: !470)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_null_entry", scope: !2704, file: !2705, line: 72, baseType: !3302, size: 64, offset: 1920)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "rt6_stats", scope: !2704, file: !2705, line: 73, baseType: !3435, size: 64, offset: 1984)
!3435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3436, size: 64)
!3436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_statistics", file: !2807, line: 368, size: 224, elements: !3437)
!3437 = !{!3438, !3439, !3440, !3441, !3442, !3443, !3444}
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "fib_nodes", scope: !3436, file: !2807, line: 369, baseType: !624, size: 32)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "fib_route_nodes", scope: !3436, file: !2807, line: 370, baseType: !624, size: 32, offset: 32)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "fib_rt_entries", scope: !3436, file: !2807, line: 371, baseType: !624, size: 32, offset: 64)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "fib_rt_cache", scope: !3436, file: !2807, line: 372, baseType: !624, size: 32, offset: 96)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "fib_discarded_routes", scope: !3436, file: !2807, line: 373, baseType: !624, size: 32, offset: 128)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "fib_rt_alloc", scope: !3436, file: !2807, line: 376, baseType: !544, size: 32, offset: 160)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "fib_rt_uncache", scope: !3436, file: !2807, line: 377, baseType: !544, size: 32, offset: 192)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_fib_timer", scope: !2704, file: !2705, line: 74, baseType: !2401, size: 320, offset: 2048)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !2704, file: !2705, line: 75, baseType: !2162, size: 64, offset: 2368)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_main_tbl", scope: !2704, file: !2705, line: 76, baseType: !2810, size: 64, offset: 2432)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walkers", scope: !2704, file: !2705, line: 77, baseType: !445, size: 128, offset: 2496)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_dst_ops", scope: !2704, file: !2705, line: 78, baseType: !2952, size: 1088, offset: 2624)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walker_lock", scope: !2704, file: !2705, line: 79, baseType: !3113, offset: 3712)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_gc_lock", scope: !2704, file: !2705, line: 80, baseType: !884, offset: 3712)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_expire", scope: !2704, file: !2705, line: 81, baseType: !14, size: 32, offset: 3712)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_last_gc", scope: !2704, file: !2705, line: 82, baseType: !473, size: 64, offset: 3776)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !2704, file: !2705, line: 94, baseType: !2325, size: 64, offset: 3840)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_sk", scope: !2704, file: !2705, line: 95, baseType: !606, size: 64, offset: 3904)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !2704, file: !2705, line: 96, baseType: !606, size: 64, offset: 3968)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "igmp_sk", scope: !2704, file: !2705, line: 97, baseType: !606, size: 64, offset: 4032)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !2704, file: !2705, line: 98, baseType: !606, size: 64, offset: 4096)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !2704, file: !2705, line: 107, baseType: !544, size: 32, offset: 4160)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_sernum", scope: !2704, file: !2705, line: 108, baseType: !544, size: 32, offset: 4192)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_data", scope: !2704, file: !2705, line: 109, baseType: !3462, size: 64, offset: 4224)
!3462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3463, size: 64)
!3463 = !DICompositeType(tag: DW_TAG_structure_type, name: "seg6_pernet_data", file: !2705, line: 109, flags: DIFlagFwdDecl)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !2704, file: !2705, line: 110, baseType: !2619, size: 64, offset: 4288)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "ip6mr_notifier_ops", scope: !2704, file: !2705, line: 111, baseType: !2619, size: 64, offset: 4352)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !2704, file: !2705, line: 112, baseType: !14, size: 32, offset: 4416)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "ip6addrlbl_table", scope: !2704, file: !2705, line: 117, baseType: !3468, size: 128, offset: 4480)
!3468 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2704, file: !2705, line: 113, size: 128, elements: !3469)
!3469 = !{!3470, !3471, !3472}
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3468, file: !2705, line: 114, baseType: !1012, size: 64)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3468, file: !2705, line: 115, baseType: !884, offset: 64)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3468, file: !2705, line: 116, baseType: !862, size: 32, offset: 64)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "wext_nlevents", scope: !2117, file: !2118, line: 162, baseType: !3103, size: 192, offset: 14784)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !2117, file: !2118, line: 164, baseType: !3475, size: 64, offset: 14976)
!3475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3476, size: 64)
!3476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_generic", file: !3477, line: 28, size: 192, elements: !3478)
!3477 = !DIFile(filename: "./include/net/netns/generic.h", directory: "/home/lizy2001/genbc/linux")
!3478 = !{!3479}
!3479 = !DIDerivedType(tag: DW_TAG_member, scope: !3476, file: !3477, line: 29, baseType: !3480, size: 192)
!3480 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3476, file: !3477, line: 29, size: 192, elements: !3481)
!3481 = !{!3482, !3487}
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !3480, file: !3477, line: 33, baseType: !3483, size: 192)
!3483 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3480, file: !3477, line: 30, size: 192, elements: !3484)
!3484 = !{!3485, !3486}
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3483, file: !3477, line: 31, baseType: !14, size: 32)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3483, file: !3477, line: 32, baseType: !460, size: 128, align: 64, offset: 64)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3480, file: !3477, line: 35, baseType: !3488)
!3488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !726, elements: !2076)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "bpf", scope: !2117, file: !2118, line: 167, baseType: !3490, size: 512, offset: 15040)
!3490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_bpf", file: !3491, line: 14, size: 512, elements: !3492)
!3491 = !DIFile(filename: "./include/net/netns/bpf.h", directory: "/home/lizy2001/genbc/linux")
!3492 = !{!3493, !4128, !4130}
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "run_array", scope: !3490, file: !3491, line: 16, baseType: !3494, size: 128)
!3494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3495, size: 128, elements: !634)
!3495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3496, size: 64)
!3496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array", file: !105, line: 1037, size: 128, elements: !3497)
!3497 = !{!3498, !3499}
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3496, file: !105, line: 1038, baseType: !460, size: 128, align: 64)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !3496, file: !105, line: 1039, baseType: !3500, offset: 128)
!3500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3501, elements: !470)
!3501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array_item", file: !105, line: 1032, size: 192, elements: !3502)
!3502 = !{!3503, !4124}
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3501, file: !105, line: 1033, baseType: !3504, size: 64)
!3504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3505, size: 64)
!3505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog", file: !3506, line: 525, size: 448, elements: !3507)
!3506 = !DIFile(filename: "./include/linux/filter.h", directory: "/home/lizy2001/genbc/linux")
!3507 = !{!3508, !3509, !3510, !3511, !3512, !3513, !3514, !3515, !3516, !3517, !3518, !3519, !3520, !3521, !3522, !3523, !3524, !3526, !4100, !4114, !4120, !4122}
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3505, file: !3506, line: 526, baseType: !1193, size: 16)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "jited", scope: !3505, file: !3506, line: 527, baseType: !1193, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 16)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "jit_requested", scope: !3505, file: !3506, line: 528, baseType: !1193, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 16)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "gpl_compatible", scope: !3505, file: !3506, line: 529, baseType: !1193, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 16)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "cb_access", scope: !3505, file: !3506, line: 530, baseType: !1193, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 16)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "dst_needed", scope: !3505, file: !3506, line: 531, baseType: !1193, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 16)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "blinded", scope: !3505, file: !3506, line: 532, baseType: !1193, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 16)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "is_func", scope: !3505, file: !3506, line: 533, baseType: !1193, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 16)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "kprobe_override", scope: !3505, file: !3506, line: 534, baseType: !1193, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 16)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "has_callchain_buf", scope: !3505, file: !3506, line: 535, baseType: !1193, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 16)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "enforce_expected_attach_type", scope: !3505, file: !3506, line: 536, baseType: !1193, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 16)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "call_get_stack", scope: !3505, file: !3506, line: 537, baseType: !1193, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 16)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3505, file: !3506, line: 538, baseType: !29, size: 32, offset: 32)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !3505, file: !3506, line: 539, baseType: !63, size: 32, offset: 64)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3505, file: !3506, line: 540, baseType: !862, size: 32, offset: 96)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !3505, file: !3506, line: 541, baseType: !862, size: 32, offset: 128)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !3505, file: !3506, line: 542, baseType: !3525, size: 64, offset: 160)
!3525 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1552, size: 64, elements: !1526)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !3505, file: !3506, line: 543, baseType: !3527, size: 64, offset: 256)
!3527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3528, size: 64)
!3528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_aux", file: !105, line: 757, size: 4928, elements: !3529)
!3529 = !{!3530, !3531, !3532, !3533, !3534, !3535, !3536, !3537, !3538, !3539, !3540, !3541, !3542, !3543, !3551, !3552, !3553, !3596, !3597, !3598, !3599, !3600, !3601, !3602, !3603, !3604, !3605, !3606, !3610, !3611, !3613, !3614, !4018, !4019, !4020, !4029, !4031, !4032, !4033, !4034, !4035, !4037, !4038, !4053, !4054, !4060, !4066, !4074, !4076, !4077, !4078, !4079, !4080, !4088, !4095}
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3528, file: !105, line: 758, baseType: !534, size: 64)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "used_map_cnt", scope: !3528, file: !105, line: 759, baseType: !862, size: 32, offset: 64)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "max_ctx_offset", scope: !3528, file: !105, line: 760, baseType: !862, size: 32, offset: 96)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "max_pkt_offset", scope: !3528, file: !105, line: 761, baseType: !862, size: 32, offset: 128)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "max_tp_access", scope: !3528, file: !105, line: 762, baseType: !862, size: 32, offset: 160)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "stack_depth", scope: !3528, file: !105, line: 763, baseType: !862, size: 32, offset: 192)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3528, file: !105, line: 764, baseType: !862, size: 32, offset: 224)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "func_cnt", scope: !3528, file: !105, line: 765, baseType: !862, size: 32, offset: 256)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "func_idx", scope: !3528, file: !105, line: 766, baseType: !862, size: 32, offset: 288)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !3528, file: !105, line: 767, baseType: !862, size: 32, offset: 320)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info_size", scope: !3528, file: !105, line: 768, baseType: !862, size: 32, offset: 352)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdonly_access", scope: !3528, file: !105, line: 769, baseType: !862, size: 32, offset: 384)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdwr_access", scope: !3528, file: !105, line: 770, baseType: !862, size: 32, offset: 416)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info", scope: !3528, file: !105, line: 771, baseType: !3544, size: 64, offset: 448)
!3544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3545, size: 64)
!3545 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3546)
!3546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ctx_arg_aux", file: !105, line: 751, size: 96, elements: !3547)
!3547 = !{!3548, !3549, !3550}
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3546, file: !105, line: 752, baseType: !862, size: 32)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "reg_type", scope: !3546, file: !105, line: 753, baseType: !104, size: 32, offset: 32)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !3546, file: !105, line: 754, baseType: !862, size: 32, offset: 64)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "dst_mutex", scope: !3528, file: !105, line: 772, baseType: !1109, size: 192, offset: 512)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "dst_prog", scope: !3528, file: !105, line: 773, baseType: !3504, size: 64, offset: 704)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "dst_trampoline", scope: !3528, file: !105, line: 774, baseType: !3554, size: 64, offset: 768)
!3554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3555, size: 64)
!3555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_trampoline", file: !105, line: 586, size: 2944, elements: !3556)
!3556 = !{!3557, !3558, !3559, !3560, !3561, !3573, !3574, !3576, !3577, !3578, !3579}
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !3555, file: !105, line: 588, baseType: !437, size: 128)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3555, file: !105, line: 590, baseType: !1109, size: 192, offset: 128)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3555, file: !105, line: 591, baseType: !1426, size: 32, offset: 320)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3555, file: !105, line: 592, baseType: !492, size: 64, offset: 384)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3555, file: !105, line: 597, baseType: !3562, size: 256, offset: 448)
!3562 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3555, file: !105, line: 593, size: 256, elements: !3563)
!3563 = !{!3564, !3571, !3572}
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !3562, file: !105, line: 594, baseType: !3565, size: 112)
!3565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "btf_func_model", file: !105, line: 509, size: 112, elements: !3566)
!3566 = !{!3567, !3568, !3569}
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "ret_size", scope: !3565, file: !105, line: 510, baseType: !1552, size: 8)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "nr_args", scope: !3565, file: !105, line: 511, baseType: !1552, size: 8, offset: 8)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !3565, file: !105, line: 512, baseType: !3570, size: 96, offset: 16)
!3570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1552, size: 96, elements: !3174)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !3562, file: !105, line: 595, baseType: !726, size: 64, offset: 128)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "ftrace_managed", scope: !3562, file: !105, line: 596, baseType: !696, size: 8, offset: 192)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "extension_prog", scope: !3555, file: !105, line: 602, baseType: !3504, size: 64, offset: 704)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "progs_hlist", scope: !3555, file: !105, line: 604, baseType: !3575, size: 192, offset: 768)
!3575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 192, elements: !1022)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "progs_cnt", scope: !3555, file: !105, line: 606, baseType: !2575, size: 96, offset: 960)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !3555, file: !105, line: 608, baseType: !726, size: 64, offset: 1088)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "selector", scope: !3555, file: !105, line: 609, baseType: !492, size: 64, offset: 1152)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !3555, file: !105, line: 610, baseType: !3580, size: 1728, offset: 1216)
!3580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ksym", file: !105, line: 569, size: 1728, elements: !3581)
!3581 = !{!3582, !3583, !3584, !3588, !3589, !3595}
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3580, file: !105, line: 570, baseType: !473, size: 64)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3580, file: !105, line: 571, baseType: !473, size: 64, offset: 64)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3580, file: !105, line: 572, baseType: !3585, size: 1024, offset: 128)
!3585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 1024, elements: !3586)
!3586 = !{!3587}
!3587 = !DISubrange(count: 128)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "lnode", scope: !3580, file: !105, line: 573, baseType: !445, size: 128, offset: 1152)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "tnode", scope: !3580, file: !105, line: 574, baseType: !3590, size: 384, offset: 1280)
!3590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "latch_tree_node", file: !3591, line: 40, size: 384, elements: !3592)
!3591 = !DIFile(filename: "./include/linux/rbtree_latch.h", directory: "/home/lizy2001/genbc/linux")
!3592 = !{!3593}
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3590, file: !3591, line: 41, baseType: !3594, size: 384)
!3594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !594, size: 384, elements: !634)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3580, file: !105, line: 575, baseType: !696, size: 8, offset: 1664)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_prog_type", scope: !3528, file: !105, line: 775, baseType: !29, size: 32, offset: 832)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_attach_type", scope: !3528, file: !105, line: 776, baseType: !63, size: 32, offset: 864)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "verifier_zext", scope: !3528, file: !105, line: 777, baseType: !696, size: 8, offset: 896)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "offload_requested", scope: !3528, file: !105, line: 778, baseType: !696, size: 8, offset: 904)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_trace", scope: !3528, file: !105, line: 779, baseType: !696, size: 8, offset: 912)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "func_proto_unreliable", scope: !3528, file: !105, line: 780, baseType: !696, size: 8, offset: 920)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "sleepable", scope: !3528, file: !105, line: 781, baseType: !696, size: 8, offset: 928)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call_reachable", scope: !3528, file: !105, line: 782, baseType: !696, size: 8, offset: 936)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "trampoline_prog_type", scope: !3528, file: !105, line: 783, baseType: !135, size: 32, offset: 960)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "tramp_hlist", scope: !3528, file: !105, line: 784, baseType: !437, size: 128, offset: 1024)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_proto", scope: !3528, file: !105, line: 786, baseType: !3607, size: 64, offset: 1152)
!3607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3608, size: 64)
!3608 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3609)
!3609 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf_type", file: !105, line: 33, flags: DIFlagFwdDecl)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_name", scope: !3528, file: !105, line: 788, baseType: !453, size: 64, offset: 1216)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3528, file: !105, line: 789, baseType: !3612, size: 64, offset: 1280)
!3612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3504, size: 64)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "jit_data", scope: !3528, file: !105, line: 790, baseType: !726, size: 64, offset: 1344)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "poke_tab", scope: !3528, file: !105, line: 791, baseType: !3615, size: 64, offset: 1408)
!3615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3616, size: 64)
!3616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_jit_poke_descriptor", file: !105, line: 734, size: 384, elements: !3617)
!3617 = !{!3618, !3619, !3620, !3621, !4014, !4015, !4016, !4017}
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target", scope: !3616, file: !105, line: 735, baseType: !726, size: 64)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_bypass", scope: !3616, file: !105, line: 736, baseType: !726, size: 64, offset: 64)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_addr", scope: !3616, file: !105, line: 737, baseType: !726, size: 64, offset: 128)
!3621 = !DIDerivedType(tag: DW_TAG_member, scope: !3616, file: !105, line: 738, baseType: !3622, size: 128, offset: 192)
!3622 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3616, file: !105, line: 738, size: 128, elements: !3623)
!3623 = !{!3624}
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call", scope: !3622, file: !105, line: 742, baseType: !3625, size: 128)
!3625 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3622, file: !105, line: 739, size: 128, elements: !3626)
!3626 = !{!3627, !4013}
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3625, file: !105, line: 740, baseType: !3628, size: 64)
!3628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3629, size: 64)
!3629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map", file: !105, line: 141, size: 2048, elements: !3630)
!3630 = !{!3631, !3986, !3987, !3988, !3989, !3990, !3991, !3992, !3993, !3994, !3995, !3996, !3997, !3999, !4004, !4005, !4006, !4007, !4008, !4009, !4010, !4011, !4012}
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3629, file: !105, line: 145, baseType: !3632, size: 64, align: 512)
!3632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3633, size: 64)
!3633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3634)
!3634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_ops", file: !105, line: 54, size: 2368, elements: !3635)
!3635 = !{!3636, !3835, !3839, !3843, !3847, !3851, !3852, !3856, !3862, !3863, !3864, !3865, !3866, !3870, !3874, !3878, !3879, !3880, !3884, !3888, !3900, !3904, !3908, !3917, !3921, !3925, !3929, !3934, !3938, !3942, !3946, !3952, !3956, !3963, !3967, !3969, !3970}
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc_check", scope: !3634, file: !105, line: 56, baseType: !3637, size: 64)
!3637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3638, size: 64)
!3638 = !DISubroutineType(types: !3639)
!3639 = !{!7, !3640}
!3640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3641, size: 64)
!3641 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "bpf_attr", file: !30, line: 483, size: 960, align: 64, elements: !3642)
!3642 = !{!3643, !3659, !3670, !3681, !3705, !3711, !3719, !3736, !3749, !3755, !3764, !3769, !3777, !3789, !3809, !3816, !3820, !3824, !3829}
!3643 = !DIDerivedType(tag: DW_TAG_member, scope: !3641, file: !30, line: 484, baseType: !3644, size: 512)
!3644 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3641, file: !30, line: 484, size: 512, elements: !3645)
!3645 = !{!3646, !3647, !3648, !3649, !3650, !3651, !3652, !3653, !3654, !3655, !3656, !3657, !3658}
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !3644, file: !30, line: 485, baseType: !624, size: 32)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !3644, file: !30, line: 486, baseType: !624, size: 32, offset: 32)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !3644, file: !30, line: 487, baseType: !624, size: 32, offset: 64)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !3644, file: !30, line: 488, baseType: !624, size: 32, offset: 96)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !3644, file: !30, line: 489, baseType: !624, size: 32, offset: 128)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_fd", scope: !3644, file: !30, line: 492, baseType: !624, size: 32, offset: 160)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3644, file: !30, line: 493, baseType: !624, size: 32, offset: 192)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "map_name", scope: !3644, file: !30, line: 496, baseType: !428, size: 128, offset: 224)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "map_ifindex", scope: !3644, file: !30, line: 497, baseType: !624, size: 32, offset: 352)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "btf_fd", scope: !3644, file: !30, line: 498, baseType: !624, size: 32, offset: 384)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !3644, file: !30, line: 499, baseType: !624, size: 32, offset: 416)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !3644, file: !30, line: 500, baseType: !624, size: 32, offset: 448)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !3644, file: !30, line: 501, baseType: !624, size: 32, offset: 480)
!3659 = !DIDerivedType(tag: DW_TAG_member, scope: !3641, file: !30, line: 507, baseType: !3660, size: 256)
!3660 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3641, file: !30, line: 507, size: 256, elements: !3661)
!3661 = !{!3662, !3663, !3664, !3669}
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3660, file: !30, line: 508, baseType: !624, size: 32)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3660, file: !30, line: 509, baseType: !494, size: 64, align: 64, offset: 64)
!3664 = !DIDerivedType(tag: DW_TAG_member, scope: !3660, file: !30, line: 510, baseType: !3665, size: 64, offset: 128)
!3665 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3660, file: !30, line: 510, size: 64, elements: !3666)
!3666 = !{!3667, !3668}
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3665, file: !30, line: 511, baseType: !494, size: 64, align: 64)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "next_key", scope: !3665, file: !30, line: 512, baseType: !494, size: 64, align: 64)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3660, file: !30, line: 514, baseType: !494, size: 64, offset: 192)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3641, file: !30, line: 532, baseType: !3671, size: 448)
!3671 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3641, file: !30, line: 517, size: 448, elements: !3672)
!3672 = !{!3673, !3674, !3675, !3676, !3677, !3678, !3679, !3680}
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "in_batch", scope: !3671, file: !30, line: 518, baseType: !494, size: 64, align: 64)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "out_batch", scope: !3671, file: !30, line: 521, baseType: !494, size: 64, align: 64, offset: 64)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !3671, file: !30, line: 522, baseType: !494, size: 64, align: 64, offset: 128)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !3671, file: !30, line: 523, baseType: !494, size: 64, align: 64, offset: 192)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3671, file: !30, line: 524, baseType: !624, size: 32, offset: 256)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3671, file: !30, line: 529, baseType: !624, size: 32, offset: 288)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "elem_flags", scope: !3671, file: !30, line: 530, baseType: !494, size: 64, offset: 320)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3671, file: !30, line: 531, baseType: !494, size: 64, offset: 384)
!3681 = !DIDerivedType(tag: DW_TAG_member, scope: !3641, file: !30, line: 534, baseType: !3682, size: 960)
!3682 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3641, file: !30, line: 534, size: 960, elements: !3683)
!3683 = !{!3684, !3685, !3686, !3687, !3688, !3689, !3690, !3691, !3692, !3693, !3694, !3695, !3696, !3697, !3698, !3699, !3700, !3701, !3702, !3703, !3704}
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "prog_type", scope: !3682, file: !30, line: 535, baseType: !624, size: 32)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "insn_cnt", scope: !3682, file: !30, line: 536, baseType: !624, size: 32, offset: 32)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !3682, file: !30, line: 537, baseType: !494, size: 64, align: 64, offset: 64)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "license", scope: !3682, file: !30, line: 538, baseType: !494, size: 64, align: 64, offset: 128)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "log_level", scope: !3682, file: !30, line: 539, baseType: !624, size: 32, offset: 192)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "log_size", scope: !3682, file: !30, line: 540, baseType: !624, size: 32, offset: 224)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "log_buf", scope: !3682, file: !30, line: 541, baseType: !494, size: 64, align: 64, offset: 256)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "kern_version", scope: !3682, file: !30, line: 542, baseType: !624, size: 32, offset: 320)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "prog_flags", scope: !3682, file: !30, line: 543, baseType: !624, size: 32, offset: 352)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "prog_name", scope: !3682, file: !30, line: 544, baseType: !428, size: 128, offset: 384)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ifindex", scope: !3682, file: !30, line: 545, baseType: !624, size: 32, offset: 512)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !3682, file: !30, line: 550, baseType: !624, size: 32, offset: 544)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "prog_btf_fd", scope: !3682, file: !30, line: 551, baseType: !624, size: 32, offset: 576)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_rec_size", scope: !3682, file: !30, line: 552, baseType: !624, size: 32, offset: 608)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !3682, file: !30, line: 553, baseType: !494, size: 64, align: 64, offset: 640)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !3682, file: !30, line: 554, baseType: !624, size: 32, offset: 704)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_rec_size", scope: !3682, file: !30, line: 555, baseType: !624, size: 32, offset: 736)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "line_info", scope: !3682, file: !30, line: 556, baseType: !494, size: 64, align: 64, offset: 768)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_cnt", scope: !3682, file: !30, line: 557, baseType: !624, size: 32, offset: 832)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !3682, file: !30, line: 558, baseType: !624, size: 32, offset: 864)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "attach_prog_fd", scope: !3682, file: !30, line: 559, baseType: !624, size: 32, offset: 896)
!3705 = !DIDerivedType(tag: DW_TAG_member, scope: !3641, file: !30, line: 562, baseType: !3706, size: 128)
!3706 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3641, file: !30, line: 562, size: 128, elements: !3707)
!3707 = !{!3708, !3709, !3710}
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "pathname", scope: !3706, file: !30, line: 563, baseType: !494, size: 64, align: 64)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !3706, file: !30, line: 564, baseType: !624, size: 32, offset: 64)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "file_flags", scope: !3706, file: !30, line: 565, baseType: !624, size: 32, offset: 96)
!3711 = !DIDerivedType(tag: DW_TAG_member, scope: !3641, file: !30, line: 568, baseType: !3712, size: 160)
!3712 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3641, file: !30, line: 568, size: 160, elements: !3713)
!3713 = !{!3714, !3715, !3716, !3717, !3718}
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3712, file: !30, line: 569, baseType: !624, size: 32)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "attach_bpf_fd", scope: !3712, file: !30, line: 570, baseType: !624, size: 32, offset: 32)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3712, file: !30, line: 571, baseType: !624, size: 32, offset: 64)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !3712, file: !30, line: 572, baseType: !624, size: 32, offset: 96)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "replace_bpf_fd", scope: !3712, file: !30, line: 573, baseType: !624, size: 32, offset: 128)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !3641, file: !30, line: 600, baseType: !3720, size: 576)
!3720 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3641, file: !30, line: 579, size: 576, elements: !3721)
!3721 = !{!3722, !3723, !3724, !3725, !3726, !3727, !3728, !3729, !3730, !3731, !3732, !3733, !3734, !3735}
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3720, file: !30, line: 580, baseType: !624, size: 32)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !3720, file: !30, line: 581, baseType: !624, size: 32, offset: 32)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_in", scope: !3720, file: !30, line: 582, baseType: !624, size: 32, offset: 64)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_out", scope: !3720, file: !30, line: 583, baseType: !624, size: 32, offset: 96)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "data_in", scope: !3720, file: !30, line: 587, baseType: !494, size: 64, align: 64, offset: 128)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "data_out", scope: !3720, file: !30, line: 588, baseType: !494, size: 64, align: 64, offset: 192)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !3720, file: !30, line: 589, baseType: !624, size: 32, offset: 256)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !3720, file: !30, line: 590, baseType: !624, size: 32, offset: 288)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_in", scope: !3720, file: !30, line: 591, baseType: !624, size: 32, offset: 320)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_out", scope: !3720, file: !30, line: 592, baseType: !624, size: 32, offset: 352)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_in", scope: !3720, file: !30, line: 596, baseType: !494, size: 64, align: 64, offset: 384)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_out", scope: !3720, file: !30, line: 597, baseType: !494, size: 64, align: 64, offset: 448)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3720, file: !30, line: 598, baseType: !624, size: 32, offset: 512)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !3720, file: !30, line: 599, baseType: !624, size: 32, offset: 544)
!3736 = !DIDerivedType(tag: DW_TAG_member, scope: !3641, file: !30, line: 602, baseType: !3737, size: 96)
!3737 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3641, file: !30, line: 602, size: 96, elements: !3738)
!3738 = !{!3739, !3747, !3748}
!3739 = !DIDerivedType(tag: DW_TAG_member, scope: !3737, file: !30, line: 603, baseType: !3740, size: 32)
!3740 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3737, file: !30, line: 603, size: 32, elements: !3741)
!3741 = !{!3742, !3743, !3744, !3745, !3746}
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "start_id", scope: !3740, file: !30, line: 604, baseType: !624, size: 32)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !3740, file: !30, line: 605, baseType: !624, size: 32)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "map_id", scope: !3740, file: !30, line: 606, baseType: !624, size: 32)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !3740, file: !30, line: 607, baseType: !624, size: 32)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "link_id", scope: !3740, file: !30, line: 608, baseType: !624, size: 32)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "next_id", scope: !3737, file: !30, line: 610, baseType: !624, size: 32, offset: 32)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "open_flags", scope: !3737, file: !30, line: 611, baseType: !624, size: 32, offset: 64)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3641, file: !30, line: 618, baseType: !3750, size: 128)
!3750 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3641, file: !30, line: 614, size: 128, elements: !3751)
!3751 = !{!3752, !3753, !3754}
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !3750, file: !30, line: 615, baseType: !624, size: 32)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "info_len", scope: !3750, file: !30, line: 616, baseType: !624, size: 32, offset: 32)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3750, file: !30, line: 617, baseType: !494, size: 64, align: 64, offset: 64)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "query", scope: !3641, file: !30, line: 627, baseType: !3756, size: 256)
!3756 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3641, file: !30, line: 620, size: 256, elements: !3757)
!3757 = !{!3758, !3759, !3760, !3761, !3762, !3763}
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3756, file: !30, line: 621, baseType: !624, size: 32)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3756, file: !30, line: 622, baseType: !624, size: 32, offset: 32)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "query_flags", scope: !3756, file: !30, line: 623, baseType: !624, size: 32, offset: 64)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !3756, file: !30, line: 624, baseType: !624, size: 32, offset: 96)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ids", scope: !3756, file: !30, line: 625, baseType: !494, size: 64, align: 64, offset: 128)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "prog_cnt", scope: !3756, file: !30, line: 626, baseType: !624, size: 32, offset: 192)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "raw_tracepoint", scope: !3641, file: !30, line: 632, baseType: !3765, size: 128)
!3765 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3641, file: !30, line: 629, size: 128, elements: !3766)
!3766 = !{!3767, !3768}
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3765, file: !30, line: 630, baseType: !494, size: 64)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3765, file: !30, line: 631, baseType: !624, size: 32, offset: 64)
!3769 = !DIDerivedType(tag: DW_TAG_member, scope: !3641, file: !30, line: 634, baseType: !3770, size: 256)
!3770 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3641, file: !30, line: 634, size: 256, elements: !3771)
!3771 = !{!3772, !3773, !3774, !3775, !3776}
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3770, file: !30, line: 635, baseType: !494, size: 64, align: 64)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_buf", scope: !3770, file: !30, line: 636, baseType: !494, size: 64, align: 64, offset: 64)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "btf_size", scope: !3770, file: !30, line: 637, baseType: !624, size: 32, offset: 128)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_size", scope: !3770, file: !30, line: 638, baseType: !624, size: 32, offset: 160)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_level", scope: !3770, file: !30, line: 639, baseType: !624, size: 32, offset: 192)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "task_fd_query", scope: !3641, file: !30, line: 656, baseType: !3778, size: 384)
!3778 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3641, file: !30, line: 642, size: 384, elements: !3779)
!3779 = !{!3780, !3781, !3782, !3783, !3784, !3785, !3786, !3787, !3788}
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3778, file: !30, line: 643, baseType: !624, size: 32)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !3778, file: !30, line: 644, baseType: !624, size: 32, offset: 32)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3778, file: !30, line: 645, baseType: !624, size: 32, offset: 64)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !3778, file: !30, line: 646, baseType: !624, size: 32, offset: 96)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3778, file: !30, line: 647, baseType: !494, size: 64, align: 64, offset: 128)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !3778, file: !30, line: 652, baseType: !624, size: 32, offset: 192)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "fd_type", scope: !3778, file: !30, line: 653, baseType: !624, size: 32, offset: 224)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "probe_offset", scope: !3778, file: !30, line: 654, baseType: !494, size: 64, offset: 256)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "probe_addr", scope: !3778, file: !30, line: 655, baseType: !494, size: 64, offset: 320)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "link_create", scope: !3641, file: !30, line: 673, baseType: !3790, size: 256)
!3790 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3641, file: !30, line: 658, size: 256, elements: !3791)
!3791 = !{!3792, !3793, !3798, !3799, !3800}
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3790, file: !30, line: 659, baseType: !624, size: 32)
!3793 = !DIDerivedType(tag: DW_TAG_member, scope: !3790, file: !30, line: 660, baseType: !3794, size: 32, offset: 32)
!3794 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3790, file: !30, line: 660, size: 32, elements: !3795)
!3795 = !{!3796, !3797}
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3794, file: !30, line: 661, baseType: !624, size: 32)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "target_ifindex", scope: !3794, file: !30, line: 662, baseType: !624, size: 32)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3790, file: !30, line: 664, baseType: !624, size: 32, offset: 64)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3790, file: !30, line: 665, baseType: !624, size: 32, offset: 96)
!3800 = !DIDerivedType(tag: DW_TAG_member, scope: !3790, file: !30, line: 666, baseType: !3801, size: 128, offset: 128)
!3801 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3790, file: !30, line: 666, size: 128, elements: !3802)
!3802 = !{!3803, !3804}
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "target_btf_id", scope: !3801, file: !30, line: 667, baseType: !624, size: 32)
!3804 = !DIDerivedType(tag: DW_TAG_member, scope: !3801, file: !30, line: 668, baseType: !3805, size: 128)
!3805 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3801, file: !30, line: 668, size: 128, elements: !3806)
!3806 = !{!3807, !3808}
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info", scope: !3805, file: !30, line: 669, baseType: !494, size: 64, align: 64)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info_len", scope: !3805, file: !30, line: 670, baseType: !624, size: 32, offset: 64)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "link_update", scope: !3641, file: !30, line: 683, baseType: !3810, size: 128)
!3810 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3641, file: !30, line: 675, size: 128, elements: !3811)
!3811 = !{!3812, !3813, !3814, !3815}
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3810, file: !30, line: 676, baseType: !624, size: 32)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "new_prog_fd", scope: !3810, file: !30, line: 678, baseType: !624, size: 32, offset: 32)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3810, file: !30, line: 679, baseType: !624, size: 32, offset: 64)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "old_prog_fd", scope: !3810, file: !30, line: 682, baseType: !624, size: 32, offset: 96)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "link_detach", scope: !3641, file: !30, line: 687, baseType: !3817, size: 32)
!3817 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3641, file: !30, line: 685, size: 32, elements: !3818)
!3818 = !{!3819}
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3817, file: !30, line: 686, baseType: !624, size: 32)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "enable_stats", scope: !3641, file: !30, line: 691, baseType: !3821, size: 32)
!3821 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3641, file: !30, line: 689, size: 32, elements: !3822)
!3822 = !{!3823}
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3821, file: !30, line: 690, baseType: !624, size: 32)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "iter_create", scope: !3641, file: !30, line: 696, baseType: !3825, size: 64)
!3825 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3641, file: !30, line: 693, size: 64, elements: !3826)
!3826 = !{!3827, !3828}
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3825, file: !30, line: 694, baseType: !624, size: 32)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3825, file: !30, line: 695, baseType: !624, size: 32, offset: 32)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "prog_bind_map", scope: !3641, file: !30, line: 702, baseType: !3830, size: 96)
!3830 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3641, file: !30, line: 698, size: 96, elements: !3831)
!3831 = !{!3832, !3833, !3834}
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3830, file: !30, line: 699, baseType: !624, size: 32)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3830, file: !30, line: 700, baseType: !624, size: 32, offset: 32)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3830, file: !30, line: 701, baseType: !624, size: 32, offset: 64)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc", scope: !3634, file: !105, line: 57, baseType: !3836, size: 64, offset: 64)
!3836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3837, size: 64)
!3837 = !DISubroutineType(types: !3838)
!3838 = !{!3628, !3640}
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "map_release", scope: !3634, file: !105, line: 58, baseType: !3840, size: 64, offset: 128)
!3840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3841, size: 64)
!3841 = !DISubroutineType(types: !3842)
!3842 = !{null, !3628, !1165}
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "map_free", scope: !3634, file: !105, line: 59, baseType: !3844, size: 64, offset: 192)
!3844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3845, size: 64)
!3845 = !DISubroutineType(types: !3846)
!3846 = !{null, !3628}
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !3634, file: !105, line: 60, baseType: !3848, size: 64, offset: 256)
!3848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3849, size: 64)
!3849 = !DISubroutineType(types: !3850)
!3850 = !{!7, !3628, !726, !726}
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "map_release_uref", scope: !3634, file: !105, line: 61, baseType: !3844, size: 64, offset: 320)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem_sys_only", scope: !3634, file: !105, line: 62, baseType: !3853, size: 64, offset: 384)
!3853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3854, size: 64)
!3854 = !DISubroutineType(types: !3855)
!3855 = !{!726, !3628, !726}
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_batch", scope: !3634, file: !105, line: 63, baseType: !3857, size: 64, offset: 448)
!3857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3858, size: 64)
!3858 = !DISubroutineType(types: !3859)
!3859 = !{!7, !3628, !3860, !3640}
!3860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3861, size: 64)
!3861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3641)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_and_delete_batch", scope: !3634, file: !105, line: 65, baseType: !3857, size: 64, offset: 512)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_batch", scope: !3634, file: !105, line: 68, baseType: !3857, size: 64, offset: 576)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_batch", scope: !3634, file: !105, line: 70, baseType: !3857, size: 64, offset: 640)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !3634, file: !105, line: 74, baseType: !3853, size: 64, offset: 704)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !3634, file: !105, line: 75, baseType: !3867, size: 64, offset: 768)
!3867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3868, size: 64)
!3868 = !DISubroutineType(types: !3869)
!3869 = !{!7, !3628, !726, !726, !492}
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !3634, file: !105, line: 76, baseType: !3871, size: 64, offset: 832)
!3871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3872, size: 64)
!3872 = !DISubroutineType(types: !3873)
!3873 = !{!7, !3628, !726}
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "map_push_elem", scope: !3634, file: !105, line: 77, baseType: !3875, size: 64, offset: 896)
!3875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3876, size: 64)
!3876 = !DISubroutineType(types: !3877)
!3877 = !{!7, !3628, !726, !492}
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "map_pop_elem", scope: !3634, file: !105, line: 78, baseType: !3871, size: 64, offset: 960)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "map_peek_elem", scope: !3634, file: !105, line: 79, baseType: !3871, size: 64, offset: 1024)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_get_ptr", scope: !3634, file: !105, line: 82, baseType: !3881, size: 64, offset: 1088)
!3881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3882, size: 64)
!3882 = !DISubroutineType(types: !3883)
!3883 = !{!726, !3628, !1165, !7}
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_put_ptr", scope: !3634, file: !105, line: 84, baseType: !3885, size: 64, offset: 1152)
!3885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3886, size: 64)
!3886 = !DISubroutineType(types: !3887)
!3887 = !{null, !726}
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "map_gen_lookup", scope: !3634, file: !105, line: 85, baseType: !3889, size: 64, offset: 1216)
!3889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3890, size: 64)
!3890 = !DISubroutineType(types: !3891)
!3891 = !{!7, !3628, !3892}
!3892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3893, size: 64)
!3893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_insn", file: !30, line: 65, size: 64, elements: !3894)
!3894 = !{!3895, !3896, !3897, !3898, !3899}
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3893, file: !30, line: 66, baseType: !1553, size: 8)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "dst_reg", scope: !3893, file: !30, line: 67, baseType: !1553, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "src_reg", scope: !3893, file: !30, line: 68, baseType: !1553, size: 4, offset: 12, flags: DIFlagBitField, extraData: i64 8)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !3893, file: !30, line: 69, baseType: !1400, size: 16, offset: 16)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "imm", scope: !3893, file: !30, line: 70, baseType: !1645, size: 32, offset: 32)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_sys_lookup_elem", scope: !3634, file: !105, line: 86, baseType: !3901, size: 64, offset: 1280)
!3901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3902, size: 64)
!3902 = !DISubroutineType(types: !3903)
!3903 = !{!862, !726}
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "map_seq_show_elem", scope: !3634, file: !105, line: 87, baseType: !3905, size: 64, offset: 1344)
!3905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3906, size: 64)
!3906 = !DISubroutineType(types: !3907)
!3907 = !{null, !3628, !726, !1097}
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "map_check_btf", scope: !3634, file: !105, line: 89, baseType: !3909, size: 64, offset: 1408)
!3909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3910, size: 64)
!3910 = !DISubroutineType(types: !3911)
!3911 = !{!7, !3912, !3914, !3607, !3607}
!3912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3913, size: 64)
!3913 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3629)
!3914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3915, size: 64)
!3915 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3916)
!3916 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf", file: !105, line: 32, flags: DIFlagFwdDecl)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_track", scope: !3634, file: !105, line: 95, baseType: !3918, size: 64, offset: 1472)
!3918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3919, size: 64)
!3919 = !DISubroutineType(types: !3920)
!3920 = !{!7, !3628, !3527}
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_untrack", scope: !3634, file: !105, line: 96, baseType: !3922, size: 64, offset: 1536)
!3922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3923, size: 64)
!3923 = !DISubroutineType(types: !3924)
!3924 = !{null, !3628, !3527}
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_run", scope: !3634, file: !105, line: 97, baseType: !3926, size: 64, offset: 1600)
!3926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3927, size: 64)
!3927 = !DISubroutineType(types: !3928)
!3928 = !{null, !3628, !862, !3504, !3504}
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_addr", scope: !3634, file: !105, line: 101, baseType: !3930, size: 64, offset: 1664)
!3930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3931, size: 64)
!3931 = !DISubroutineType(types: !3932)
!3932 = !{!7, !3912, !3933, !862}
!3933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 64)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_meta", scope: !3634, file: !105, line: 103, baseType: !3935, size: 64, offset: 1728)
!3935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3936, size: 64)
!3936 = !DISubroutineType(types: !3937)
!3937 = !{!7, !3912, !492, !1615}
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "map_mmap", scope: !3634, file: !105, line: 105, baseType: !3939, size: 64, offset: 1792)
!3939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3940, size: 64)
!3940 = !DISubroutineType(types: !3941)
!3941 = !{!7, !3628, !1270}
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "map_poll", scope: !3634, file: !105, line: 106, baseType: !3943, size: 64, offset: 1856)
!3943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3944, size: 64)
!3944 = !DISubroutineType(types: !3945)
!3945 = !{!1244, !3628, !1165, !1245}
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_charge", scope: !3634, file: !105, line: 110, baseType: !3947, size: 64, offset: 1920)
!3947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3948, size: 64)
!3948 = !DISubroutineType(types: !3949)
!3949 = !{!7, !3950, !726, !862}
!3950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3951, size: 64)
!3951 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage_map", file: !105, line: 38, flags: DIFlagFwdDecl)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_uncharge", scope: !3634, file: !105, line: 112, baseType: !3953, size: 64, offset: 1984)
!3953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3954, size: 64)
!3954 = !DISubroutineType(types: !3955)
!3955 = !{null, !3950, !726, !862}
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "map_owner_storage_ptr", scope: !3634, file: !105, line: 114, baseType: !3957, size: 64, offset: 2048)
!3957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3958, size: 64)
!3958 = !DISubroutineType(types: !3959)
!3959 = !{!3960, !726}
!3960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3961, size: 64)
!3961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3962, size: 64)
!3962 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage", file: !105, line: 37, flags: DIFlagFwdDecl)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "map_meta_equal", scope: !3634, file: !105, line: 125, baseType: !3964, size: 64, offset: 2112)
!3964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3965, size: 64)
!3965 = !DISubroutineType(types: !3966)
!3966 = !{!696, !3912, !3912}
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_name", scope: !3634, file: !105, line: 129, baseType: !3968, size: 64, offset: 2176)
!3968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !453)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_id", scope: !3634, file: !105, line: 130, baseType: !695, size: 64, offset: 2240)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "iter_seq_info", scope: !3634, file: !105, line: 133, baseType: !3971, size: 64, offset: 2304)
!3971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3972, size: 64)
!3972 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3973)
!3973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_seq_info", file: !105, line: 46, size: 256, elements: !3974)
!3974 = !{!3975, !3976, !3983, !3985}
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "seq_ops", scope: !3973, file: !105, line: 47, baseType: !1116, size: 64)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "init_seq_private", scope: !3973, file: !105, line: 48, baseType: !3977, size: 64, offset: 64)
!3977 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_init_seq_priv_t", file: !105, line: 43, baseType: !3978)
!3978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3979, size: 64)
!3979 = !DISubroutineType(types: !3980)
!3980 = !{!7, !726, !3981}
!3981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3982, size: 64)
!3982 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_aux_info", file: !105, line: 36, flags: DIFlagFwdDecl)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "fini_seq_private", scope: !3973, file: !105, line: 49, baseType: !3984, size: 64, offset: 128)
!3984 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_fini_seq_priv_t", file: !105, line: 45, baseType: !3885)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "seq_priv_size", scope: !3973, file: !105, line: 50, baseType: !862, size: 32, offset: 192)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_meta", scope: !3629, file: !105, line: 146, baseType: !3628, size: 64, offset: 64)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !3629, file: !105, line: 150, baseType: !142, size: 32, offset: 128)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !3629, file: !105, line: 151, baseType: !862, size: 32, offset: 160)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !3629, file: !105, line: 152, baseType: !862, size: 32, offset: 192)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !3629, file: !105, line: 153, baseType: !862, size: 32, offset: 224)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !3629, file: !105, line: 154, baseType: !862, size: 32, offset: 256)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "spin_lock_off", scope: !3629, file: !105, line: 155, baseType: !7, size: 32, offset: 288)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3629, file: !105, line: 156, baseType: !862, size: 32, offset: 320)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3629, file: !105, line: 157, baseType: !7, size: 32, offset: 352)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !3629, file: !105, line: 158, baseType: !862, size: 32, offset: 384)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !3629, file: !105, line: 159, baseType: !862, size: 32, offset: 416)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3629, file: !105, line: 160, baseType: !3998, size: 64, offset: 448)
!3998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3916, size: 64)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !3629, file: !105, line: 161, baseType: !4000, size: 128, offset: 512)
!4000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_memory", file: !105, line: 136, size: 128, elements: !4001)
!4001 = !{!4002, !4003}
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !4000, file: !105, line: 137, baseType: !862, size: 32)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !4000, file: !105, line: 138, baseType: !1887, size: 64, offset: 64)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3629, file: !105, line: 162, baseType: !428, size: 128, offset: 640)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !3629, file: !105, line: 163, baseType: !862, size: 32, offset: 768)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_spec_v1", scope: !3629, file: !105, line: 164, baseType: !696, size: 8, offset: 800)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3629, file: !105, line: 165, baseType: !696, size: 8, offset: 808)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3629, file: !105, line: 171, baseType: !534, size: 64, align: 512, offset: 1024)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "usercnt", scope: !3629, file: !105, line: 172, baseType: !534, size: 64, offset: 1088)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3629, file: !105, line: 173, baseType: !1961, size: 256, offset: 1152)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_mutex", scope: !3629, file: !105, line: 174, baseType: !1109, size: 192, offset: 1408)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "writecnt", scope: !3629, file: !105, line: 175, baseType: !492, size: 64, offset: 1600)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3625, file: !105, line: 741, baseType: !862, size: 32, offset: 64)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target_stable", scope: !3616, file: !105, line: 744, baseType: !696, size: 8, offset: 320)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "adj_off", scope: !3616, file: !105, line: 745, baseType: !1552, size: 8, offset: 328)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !3616, file: !105, line: 746, baseType: !1193, size: 16, offset: 336)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "insn_idx", scope: !3616, file: !105, line: 747, baseType: !862, size: 32, offset: 352)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "size_poke_tab", scope: !3528, file: !105, line: 792, baseType: !862, size: 32, offset: 1472)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !3528, file: !105, line: 793, baseType: !3580, size: 1728, offset: 1536)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3528, file: !105, line: 794, baseType: !4021, size: 64, offset: 3264)
!4021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4022, size: 64)
!4022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4023)
!4023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_ops", file: !105, line: 432, size: 64, elements: !4024)
!4024 = !{!4025}
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "test_run", scope: !4023, file: !105, line: 433, baseType: !4026, size: 64)
!4026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4027, size: 64)
!4027 = !DISubroutineType(types: !4028)
!4028 = !{!7, !3504, !3860, !3640}
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps", scope: !3528, file: !105, line: 795, baseType: !4030, size: 64, offset: 3328)
!4030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3628, size: 64)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps_mutex", scope: !3528, file: !105, line: 796, baseType: !1109, size: 192, offset: 3392)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3528, file: !105, line: 797, baseType: !3504, size: 64, offset: 3584)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3528, file: !105, line: 798, baseType: !1887, size: 64, offset: 3648)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "load_time", scope: !3528, file: !105, line: 799, baseType: !492, size: 64, offset: 3712)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !3528, file: !105, line: 800, baseType: !4036, size: 128, offset: 3776)
!4036 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3628, size: 128, elements: !634)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3528, file: !105, line: 801, baseType: !428, size: 128, offset: 3904)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "offload", scope: !3528, file: !105, line: 805, baseType: !4039, size: 64, offset: 4032)
!4039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4040, size: 64)
!4040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_offload", file: !105, line: 478, size: 576, elements: !4041)
!4041 = !{!4042, !4043, !4044, !4047, !4048, !4049, !4050, !4051, !4052}
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !4040, file: !105, line: 479, baseType: !3504, size: 64)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !4040, file: !105, line: 480, baseType: !451, size: 64, offset: 64)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "offdev", scope: !4040, file: !105, line: 481, baseType: !4045, size: 64, offset: 128)
!4045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4046, size: 64)
!4046 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offload_dev", file: !105, line: 209, flags: DIFlagFwdDecl)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !4040, file: !105, line: 482, baseType: !726, size: 64, offset: 192)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !4040, file: !105, line: 483, baseType: !445, size: 128, offset: 256)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "dev_state", scope: !4040, file: !105, line: 484, baseType: !696, size: 8, offset: 384)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "opt_failed", scope: !4040, file: !105, line: 485, baseType: !696, size: 8, offset: 392)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "jited_image", scope: !4040, file: !105, line: 486, baseType: !726, size: 64, offset: 448)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !4040, file: !105, line: 487, baseType: !862, size: 32, offset: 512)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3528, file: !105, line: 806, baseType: !3998, size: 64, offset: 4096)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !3528, file: !105, line: 807, baseType: !4055, size: 64, offset: 4160)
!4055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4056, size: 64)
!4056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info", file: !30, line: 4963, size: 64, elements: !4057)
!4057 = !{!4058, !4059}
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !4056, file: !30, line: 4964, baseType: !624, size: 32)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !4056, file: !30, line: 4965, baseType: !624, size: 32, offset: 32)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_aux", scope: !3528, file: !105, line: 808, baseType: !4061, size: 64, offset: 4224)
!4061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4062, size: 64)
!4062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info_aux", file: !105, line: 724, size: 32, elements: !4063)
!4063 = !{!4064, !4065}
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "linkage", scope: !4062, file: !105, line: 725, baseType: !1193, size: 16)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "unreliable", scope: !4062, file: !105, line: 726, baseType: !696, size: 8, offset: 16)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "linfo", scope: !3528, file: !105, line: 815, baseType: !4067, size: 64, offset: 4288)
!4067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4068, size: 64)
!4068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_line_info", file: !30, line: 4971, size: 128, elements: !4069)
!4069 = !{!4070, !4071, !4072, !4073}
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !4068, file: !30, line: 4972, baseType: !624, size: 32)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "file_name_off", scope: !4068, file: !30, line: 4973, baseType: !624, size: 32, offset: 32)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "line_off", scope: !4068, file: !30, line: 4974, baseType: !624, size: 32, offset: 64)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !4068, file: !30, line: 4975, baseType: !624, size: 32, offset: 96)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "jited_linfo", scope: !3528, file: !105, line: 823, baseType: !4075, size: 64, offset: 4352)
!4075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !726, size: 64)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !3528, file: !105, line: 824, baseType: !862, size: 32, offset: 4416)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "nr_linfo", scope: !3528, file: !105, line: 825, baseType: !862, size: 32, offset: 4448)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "linfo_idx", scope: !3528, file: !105, line: 830, baseType: !862, size: 32, offset: 4480)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "num_exentries", scope: !3528, file: !105, line: 831, baseType: !862, size: 32, offset: 4512)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "extable", scope: !3528, file: !105, line: 832, baseType: !4081, size: 64, offset: 4544)
!4081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4082, size: 64)
!4082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "exception_table_entry", file: !4083, line: 17, size: 96, elements: !4084)
!4083 = !DIFile(filename: "./arch/x86/include/asm/extable.h", directory: "/home/lizy2001/genbc/linux")
!4084 = !{!4085, !4086, !4087}
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !4082, file: !4083, line: 18, baseType: !7, size: 32)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !4082, file: !4083, line: 18, baseType: !7, size: 32, offset: 32)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !4082, file: !4083, line: 18, baseType: !7, size: 32, offset: 64)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !3528, file: !105, line: 833, baseType: !4089, size: 64, offset: 4608)
!4089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4090, size: 64)
!4090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_stats", file: !105, line: 503, size: 128, align: 128, elements: !4091)
!4091 = !{!4092, !4093, !4094}
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !4090, file: !105, line: 504, baseType: !492, size: 64)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "nsecs", scope: !4090, file: !105, line: 505, baseType: !492, size: 64, offset: 64)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !4090, file: !105, line: 506, baseType: !2212, offset: 128)
!4095 = !DIDerivedType(tag: DW_TAG_member, scope: !3528, file: !105, line: 834, baseType: !4096, size: 256, offset: 4672)
!4096 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3528, file: !105, line: 834, size: 256, elements: !4097)
!4097 = !{!4098, !4099}
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4096, file: !105, line: 835, baseType: !1961, size: 256)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4096, file: !105, line: 836, baseType: !460, size: 128, align: 64)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "orig_prog", scope: !3505, file: !3506, line: 544, baseType: !4101, size: 64, offset: 320)
!4101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4102, size: 64)
!4102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_fprog_kern", file: !3506, line: 512, size: 128, elements: !4103)
!4103 = !{!4104, !4105}
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4102, file: !3506, line: 513, baseType: !1193, size: 16)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !4102, file: !3506, line: 514, baseType: !4106, size: 64, offset: 64)
!4106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4107, size: 64)
!4107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_filter", file: !4108, line: 24, size: 64, elements: !4109)
!4108 = !DIFile(filename: "./include/uapi/linux/filter.h", directory: "/home/lizy2001/genbc/linux")
!4109 = !{!4110, !4111, !4112, !4113}
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !4107, file: !4108, line: 25, baseType: !632, size: 16)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "jt", scope: !4107, file: !4108, line: 26, baseType: !1553, size: 8, offset: 16)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "jf", scope: !4107, file: !4108, line: 27, baseType: !1553, size: 8, offset: 24)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !4107, file: !4108, line: 28, baseType: !624, size: 32, offset: 32)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_func", scope: !3505, file: !3506, line: 545, baseType: !4115, size: 64, offset: 384)
!4115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4116, size: 64)
!4116 = !DISubroutineType(types: !4117)
!4117 = !{!14, !2424, !4118}
!4118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4119, size: 64)
!4119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3893)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !3505, file: !3506, line: 548, baseType: !4121, offset: 448)
!4121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4107, elements: !2076)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "insnsi", scope: !3505, file: !3506, line: 549, baseType: !4123, offset: 448)
!4123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3893, elements: !470)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !3501, file: !105, line: 1034, baseType: !4125, size: 128, offset: 64)
!4125 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4126, size: 128, elements: !634)
!4126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4127, size: 64)
!4127 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_cgroup_storage", file: !105, line: 1034, flags: DIFlagFwdDecl)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "progs", scope: !3490, file: !3491, line: 17, baseType: !4129, size: 128, offset: 128)
!4129 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3504, size: 128, elements: !634)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3490, file: !3491, line: 18, baseType: !4131, size: 256, offset: 256)
!4131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !445, size: 256, elements: !634)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "net_cookie", scope: !2117, file: !2118, line: 174, baseType: !534, size: 64, offset: 15552)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "can", scope: !2117, file: !2118, line: 183, baseType: !4134, size: 1216, offset: 15616)
!4134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_can", file: !4135, line: 15, size: 1216, elements: !4136)
!4135 = !DIFile(filename: "./include/net/netns/can.h", directory: "/home/lizy2001/genbc/linux")
!4136 = !{!4137, !4138, !4139, !4140, !4141, !4142, !4143, !4144, !4145, !4146, !4147, !4150, !4151, !4152, !4155, !4158}
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !4134, file: !4135, line: 17, baseType: !2151, size: 64)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "pde_stats", scope: !4134, file: !4135, line: 18, baseType: !2151, size: 64, offset: 64)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "pde_reset_stats", scope: !4134, file: !4135, line: 19, baseType: !2151, size: 64, offset: 128)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_all", scope: !4134, file: !4135, line: 20, baseType: !2151, size: 64, offset: 192)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_fil", scope: !4134, file: !4135, line: 21, baseType: !2151, size: 64, offset: 256)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_inv", scope: !4134, file: !4135, line: 22, baseType: !2151, size: 64, offset: 320)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_sff", scope: !4134, file: !4135, line: 23, baseType: !2151, size: 64, offset: 384)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_eff", scope: !4134, file: !4135, line: 24, baseType: !2151, size: 64, offset: 448)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_err", scope: !4134, file: !4135, line: 25, baseType: !2151, size: 64, offset: 512)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "bcmproc_dir", scope: !4134, file: !4135, line: 26, baseType: !2151, size: 64, offset: 576)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "rx_alldev_list", scope: !4134, file: !4135, line: 30, baseType: !4148, size: 64, offset: 640)
!4148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4149, size: 64)
!4149 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_dev_rcv_lists", file: !4135, line: 11, flags: DIFlagFwdDecl)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "rcvlists_lock", scope: !4134, file: !4135, line: 31, baseType: !884, offset: 704)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "stattimer", scope: !4134, file: !4135, line: 32, baseType: !2401, size: 320, offset: 704)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "pkg_stats", scope: !4134, file: !4135, line: 33, baseType: !4153, size: 64, offset: 1024)
!4153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4154, size: 64)
!4154 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_pkg_stats", file: !4135, line: 12, flags: DIFlagFwdDecl)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_lists_stats", scope: !4134, file: !4135, line: 34, baseType: !4156, size: 64, offset: 1088)
!4156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4157, size: 64)
!4157 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_rcv_lists_stats", file: !4135, line: 13, flags: DIFlagFwdDecl)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "cgw_list", scope: !4134, file: !4135, line: 37, baseType: !1012, size: 64, offset: 1152)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "diag_nlsk", scope: !2117, file: !2118, line: 191, baseType: !606, size: 64, offset: 16832)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !2101, file: !2102, line: 38, baseType: !4161, size: 64, offset: 384)
!4161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4162, size: 64)
!4162 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !2102, line: 38, flags: DIFlagFwdDecl)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !2101, file: !2102, line: 39, baseType: !4161, size: 64, offset: 448)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !2101, file: !2102, line: 40, baseType: !4165, size: 64, offset: 512)
!4165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4166, size: 64)
!4166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !4167, line: 856, size: 448, elements: !4168)
!4167 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!4168 = !{!4169, !4170, !4171, !4172, !4173}
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4166, file: !4167, line: 857, baseType: !1426, size: 32)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !4166, file: !4167, line: 858, baseType: !1947, size: 192, offset: 64)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !4166, file: !4167, line: 859, baseType: !1913, size: 64, offset: 256)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !4166, file: !4167, line: 860, baseType: !2055, size: 64, offset: 320)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !4166, file: !4167, line: 861, baseType: !4174, size: 64, offset: 384)
!4174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4175, size: 64)
!4175 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !4176, line: 16, flags: DIFlagFwdDecl)
!4176 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1413, file: !1414, line: 969, baseType: !4178, size: 64, offset: 9216)
!4178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4179, size: 64)
!4179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !4180, line: 82, size: 7296, elements: !4181)
!4180 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!4181 = !{!4182, !4183, !4184, !4185, !4186, !4187, !4188, !4199, !4200, !4201, !4202, !4203, !4204, !4205, !4206, !4207, !4208, !4209, !4210, !4211, !4217, !4226, !4227, !4229, !4230, !4231, !4234, !4235, !4236, !4237, !4238, !4239, !4240, !4241, !4242, !4243, !4244, !4245, !4246, !4247, !4248, !4249, !4250, !4251, !4252, !4253, !4254, !4255, !4256, !4259, !4260, !4267, !4268, !4269, !4270, !4271, !4272}
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !4179, file: !4180, line: 83, baseType: !1426, size: 32)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !4179, file: !4180, line: 84, baseType: !544, size: 32, offset: 32)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !4179, file: !4180, line: 85, baseType: !7, size: 32, offset: 64)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !4179, file: !4180, line: 86, baseType: !445, size: 128, offset: 128)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !4179, file: !4180, line: 88, baseType: !1255, size: 128, offset: 256)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !4179, file: !4180, line: 91, baseType: !1412, size: 64, offset: 384)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !4179, file: !4180, line: 94, baseType: !4189, size: 192, offset: 448)
!4189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !4190, line: 30, size: 192, elements: !4191)
!4190 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!4191 = !{!4192, !4193}
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4189, file: !4190, line: 31, baseType: !445, size: 128)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !4189, file: !4190, line: 32, baseType: !4194, size: 64, offset: 128)
!4194 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !4195, line: 25, baseType: !4196)
!4195 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!4196 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4195, line: 23, size: 64, elements: !4197)
!4197 = !{!4198}
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !4196, file: !4195, line: 24, baseType: !1570, size: 64)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !4179, file: !4180, line: 97, baseType: !1012, size: 64, offset: 640)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !4179, file: !4180, line: 100, baseType: !7, size: 32, offset: 704)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !4179, file: !4180, line: 106, baseType: !7, size: 32, offset: 736)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !4179, file: !4180, line: 107, baseType: !1412, size: 64, offset: 768)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !4179, file: !4180, line: 110, baseType: !7, size: 32, offset: 832)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4179, file: !4180, line: 111, baseType: !14, size: 32, offset: 864)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !4179, file: !4180, line: 122, baseType: !14, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !4179, file: !4180, line: 123, baseType: !14, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !4179, file: !4180, line: 128, baseType: !7, size: 32, offset: 928)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !4179, file: !4180, line: 129, baseType: !445, size: 128, offset: 960)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !4179, file: !4180, line: 132, baseType: !1488, size: 512, offset: 1088)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !4179, file: !4180, line: 133, baseType: !1496, size: 64, offset: 1600)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !4179, file: !4180, line: 140, baseType: !4212, size: 256, offset: 1664)
!4212 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4213, size: 256, elements: !634)
!4213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !4180, line: 38, size: 128, elements: !4214)
!4214 = !{!4215, !4216}
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !4213, file: !4180, line: 39, baseType: !492, size: 64)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !4213, file: !4180, line: 40, baseType: !492, size: 64, offset: 64)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !4179, file: !4180, line: 146, baseType: !4218, size: 192, offset: 1920)
!4218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !4180, line: 66, size: 192, elements: !4219)
!4219 = !{!4220}
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !4218, file: !4180, line: 67, baseType: !4221, size: 192)
!4221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !4180, line: 47, size: 192, elements: !4222)
!4222 = !{!4223, !4224, !4225}
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !4221, file: !4180, line: 48, baseType: !534, size: 64)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !4221, file: !4180, line: 49, baseType: !534, size: 64, offset: 64)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !4221, file: !4180, line: 50, baseType: !534, size: 64, offset: 128)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !4179, file: !4180, line: 150, baseType: !1729, size: 640, offset: 2112)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !4179, file: !4180, line: 153, baseType: !4228, size: 256, offset: 2752)
!4228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1676, size: 256, elements: !1357)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !4179, file: !4180, line: 159, baseType: !1676, size: 64, offset: 3008)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !4179, file: !4180, line: 162, baseType: !7, size: 32, offset: 3072)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !4179, file: !4180, line: 164, baseType: !4232, size: 64, offset: 3136)
!4232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4233, size: 64)
!4233 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !4180, line: 164, flags: DIFlagFwdDecl)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !4179, file: !4180, line: 175, baseType: !2334, size: 32, offset: 3200)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !4179, file: !4180, line: 176, baseType: !492, size: 64, offset: 3264)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !4179, file: !4180, line: 176, baseType: !492, size: 64, offset: 3328)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !4179, file: !4180, line: 176, baseType: !492, size: 64, offset: 3392)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !4179, file: !4180, line: 176, baseType: !492, size: 64, offset: 3456)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !4179, file: !4180, line: 177, baseType: !492, size: 64, offset: 3520)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !4179, file: !4180, line: 178, baseType: !492, size: 64, offset: 3584)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !4179, file: !4180, line: 179, baseType: !1717, size: 128, offset: 3648)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !4179, file: !4180, line: 180, baseType: !473, size: 64, offset: 3776)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !4179, file: !4180, line: 180, baseType: !473, size: 64, offset: 3840)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !4179, file: !4180, line: 180, baseType: !473, size: 64, offset: 3904)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !4179, file: !4180, line: 180, baseType: !473, size: 64, offset: 3968)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !4179, file: !4180, line: 181, baseType: !473, size: 64, offset: 4032)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !4179, file: !4180, line: 181, baseType: !473, size: 64, offset: 4096)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !4179, file: !4180, line: 181, baseType: !473, size: 64, offset: 4160)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !4179, file: !4180, line: 181, baseType: !473, size: 64, offset: 4224)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !4179, file: !4180, line: 182, baseType: !473, size: 64, offset: 4288)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !4179, file: !4180, line: 182, baseType: !473, size: 64, offset: 4352)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !4179, file: !4180, line: 182, baseType: !473, size: 64, offset: 4416)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !4179, file: !4180, line: 182, baseType: !473, size: 64, offset: 4480)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !4179, file: !4180, line: 183, baseType: !473, size: 64, offset: 4544)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !4179, file: !4180, line: 183, baseType: !473, size: 64, offset: 4608)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !4179, file: !4180, line: 184, baseType: !4257, offset: 4672)
!4257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !4258, line: 12, elements: !898)
!4258 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !4179, file: !4180, line: 192, baseType: !496, size: 64, offset: 4672)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !4179, file: !4180, line: 203, baseType: !4261, size: 2048, offset: 4736)
!4261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4262, size: 2048, elements: !430)
!4262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !4263, line: 43, size: 128, elements: !4264)
!4263 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!4264 = !{!4265, !4266}
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !4262, file: !4263, line: 44, baseType: !753, size: 64)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !4262, file: !4263, line: 45, baseType: !753, size: 64, offset: 64)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !4179, file: !4180, line: 220, baseType: !696, size: 8, offset: 6784)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !4179, file: !4180, line: 221, baseType: !1401, size: 16, offset: 6800)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !4179, file: !4180, line: 222, baseType: !1401, size: 16, offset: 6816)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !4179, file: !4180, line: 224, baseType: !1280, size: 64, offset: 6848)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !4179, file: !4180, line: 227, baseType: !1109, size: 192, offset: 6912)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !4179, file: !4180, line: 233, baseType: !1109, size: 192, offset: 7104)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1413, file: !1414, line: 970, baseType: !4274, size: 64, offset: 9280)
!4274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4275, size: 64)
!4275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !4180, line: 20, size: 16576, elements: !4276)
!4276 = !{!4277, !4278, !4279, !4280}
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !4275, file: !4180, line: 21, baseType: !884)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4275, file: !4180, line: 22, baseType: !1426, size: 32)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !4275, file: !4180, line: 23, baseType: !1255, size: 128, offset: 64)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !4275, file: !4180, line: 24, baseType: !4281, size: 16384, offset: 192)
!4281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4282, size: 16384, elements: !4302)
!4282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !4190, line: 49, size: 256, elements: !4283)
!4283 = !{!4284}
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !4282, file: !4190, line: 50, baseType: !4285, size: 256)
!4285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !4190, line: 35, size: 256, elements: !4286)
!4286 = !{!4287, !4294, !4295, !4301}
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !4285, file: !4190, line: 37, baseType: !4288, size: 64)
!4288 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !4289, line: 19, baseType: !4290)
!4289 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!4290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4291, size: 64)
!4291 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !4289, line: 18, baseType: !4292)
!4292 = !DISubroutineType(types: !4293)
!4293 = !{null, !7}
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !4285, file: !4190, line: 38, baseType: !473, size: 64, offset: 64)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !4285, file: !4190, line: 44, baseType: !4296, size: 64, offset: 128)
!4296 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !4289, line: 22, baseType: !4297)
!4297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4298, size: 64)
!4298 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !4289, line: 21, baseType: !4299)
!4299 = !DISubroutineType(types: !4300)
!4300 = !{null}
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !4285, file: !4190, line: 46, baseType: !4194, size: 64, offset: 192)
!4302 = !{!4303}
!4303 = !DISubrange(count: 64)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1413, file: !1414, line: 971, baseType: !4194, size: 64, offset: 9344)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1413, file: !1414, line: 972, baseType: !4194, size: 64, offset: 9408)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1413, file: !1414, line: 974, baseType: !4194, size: 64, offset: 9472)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1413, file: !1414, line: 975, baseType: !4189, size: 192, offset: 9536)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1413, file: !1414, line: 976, baseType: !473, size: 64, offset: 9728)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1413, file: !1414, line: 977, baseType: !750, size: 64, offset: 9792)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1413, file: !1414, line: 978, baseType: !14, size: 32, offset: 9856)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1413, file: !1414, line: 980, baseType: !463, size: 64, offset: 9920)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1413, file: !1414, line: 989, baseType: !4313, size: 128, offset: 9984)
!4313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !4314, line: 35, size: 128, elements: !4315)
!4314 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!4315 = !{!4316, !4317, !4318}
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4313, file: !4314, line: 36, baseType: !7, size: 32)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !4313, file: !4314, line: 37, baseType: !544, size: 32, offset: 32)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !4313, file: !4314, line: 38, baseType: !4319, size: 64, offset: 64)
!4319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4320, size: 64)
!4320 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !4314, line: 23, flags: DIFlagFwdDecl)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1413, file: !1414, line: 992, baseType: !492, size: 64, offset: 10112)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1413, file: !1414, line: 993, baseType: !492, size: 64, offset: 10176)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1413, file: !1414, line: 996, baseType: !884, offset: 10240)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1413, file: !1414, line: 999, baseType: !1323, offset: 10240)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1413, file: !1414, line: 1001, baseType: !4326, size: 64, offset: 10240)
!4326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1414, line: 636, size: 64, elements: !4327)
!4327 = !{!4328}
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4326, file: !1414, line: 637, baseType: !4329, size: 64)
!4329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4326, size: 64)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1413, file: !1414, line: 1005, baseType: !1542, size: 128, offset: 10304)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1413, file: !1414, line: 1007, baseType: !1412, size: 64, offset: 10432)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1413, file: !1414, line: 1009, baseType: !4333, size: 64, offset: 10496)
!4333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4334, size: 64)
!4334 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1414, line: 1009, flags: DIFlagFwdDecl)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1413, file: !1414, line: 1043, baseType: !726, size: 64, offset: 10560)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1413, file: !1414, line: 1046, baseType: !4337, size: 64, offset: 10624)
!4337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4338, size: 64)
!4338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !4339, line: 554, size: 128, elements: !4340)
!4339 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!4340 = !{!4341, !5930}
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4338, file: !4339, line: 555, baseType: !4342, size: 64)
!4342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4343, size: 64)
!4343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !4344, line: 203, size: 832, elements: !4345)
!4344 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!4345 = !{!4346, !4347, !5884, !5885, !5886, !5887, !5888, !5889, !5890, !5891, !5898, !5903, !5904, !5923, !5924, !5925, !5926, !5927, !5929}
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !4343, file: !4344, line: 204, baseType: !4342, size: 64)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !4343, file: !4344, line: 205, baseType: !4348, size: 64, offset: 64)
!4348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4349, size: 64)
!4349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !4350, line: 167, size: 8512, elements: !4351)
!4350 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!4351 = !{!4352, !4353, !4354, !4355, !4357, !4358, !4359, !5208, !5209, !5372, !5866, !5867, !5868, !5869, !5870, !5871, !5874, !5875, !5878, !5879, !5880, !5883}
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !4349, file: !4350, line: 171, baseType: !7, size: 32)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !4349, file: !4350, line: 172, baseType: !7, size: 32, offset: 32)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !4349, file: !4350, line: 173, baseType: !7, size: 32, offset: 64)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !4349, file: !4350, line: 176, baseType: !4356, size: 256, offset: 96)
!4356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 256, elements: !871)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !4349, file: !4350, line: 178, baseType: !633, size: 16, offset: 352)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !4349, file: !4350, line: 179, baseType: !633, size: 16, offset: 368)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !4349, file: !4350, line: 186, baseType: !4360, size: 64, offset: 384)
!4360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4361, size: 64)
!4361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !4350, line: 149, size: 256, elements: !4362)
!4362 = !{!4363, !4364, !4365, !5206}
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !4361, file: !4350, line: 150, baseType: !460, size: 128, align: 64)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4361, file: !4350, line: 151, baseType: !7, size: 32, offset: 128)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !4361, file: !4350, line: 152, baseType: !4366, size: 64, offset: 192)
!4366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4367, size: 64)
!4367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !4350, line: 53, size: 6592, elements: !4368)
!4368 = !{!4369, !4371, !4372, !4373, !4376, !4397, !5189, !5190, !5191, !5192, !5200}
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !4367, file: !4350, line: 54, baseType: !4370, size: 64)
!4370 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !438, line: 125, baseType: !492)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !4367, file: !4350, line: 60, baseType: !4370, size: 64, offset: 64)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !4367, file: !4350, line: 64, baseType: !473, size: 64, offset: 128)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !4367, file: !4350, line: 65, baseType: !4374, size: 64, offset: 192)
!4374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4375, size: 64)
!4375 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !4350, line: 65, flags: DIFlagFwdDecl)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4367, file: !4350, line: 66, baseType: !4377, size: 128, offset: 256)
!4377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !4378, line: 105, size: 128, elements: !4379)
!4378 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!4379 = !{!4380, !4381}
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !4377, file: !4378, line: 110, baseType: !473, size: 64)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4377, file: !4378, line: 118, baseType: !4382, size: 64, offset: 64)
!4382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4383, size: 64)
!4383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !4378, line: 95, size: 448, elements: !4384)
!4384 = !{!4385, !4386, !4392, !4393, !4394, !4395, !4396}
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4383, file: !4378, line: 96, baseType: !532, size: 64)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4383, file: !4378, line: 97, baseType: !4387, size: 64, offset: 64)
!4387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4388, size: 64)
!4388 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !4378, line: 60, baseType: !4389)
!4389 = !DISubroutineType(types: !4390)
!4390 = !{null, !4391}
!4391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4377, size: 64)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !4383, file: !4378, line: 98, baseType: !4387, size: 64, offset: 128)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !4383, file: !4378, line: 99, baseType: !696, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !4383, file: !4378, line: 100, baseType: !696, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4383, file: !4378, line: 101, baseType: !460, size: 128, align: 64, offset: 256)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4383, file: !4378, line: 102, baseType: !4391, size: 64, offset: 384)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !4367, file: !4350, line: 68, baseType: !4398, size: 5568, offset: 384)
!4398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !192, line: 461, size: 5568, elements: !4399)
!4399 = !{!4400, !4759, !4761, !4764, !4765, !4816, !4902, !4903, !4904, !4905, !4906, !4915, !5009, !5022, !5025, !5026, !5030, !5031, !5032, !5033, !5037, !5043, !5044, !5047, !5051, !5141, !5142, !5143, !5144, !5145, !5177, !5178, !5179, !5182, !5185, !5186, !5187, !5188}
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4398, file: !192, line: 462, baseType: !4401, size: 512)
!4401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !4402, line: 64, size: 512, elements: !4403)
!4402 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!4403 = !{!4404, !4405, !4406, !4408, !4448, !4544, !4749, !4754, !4755, !4756, !4757, !4758}
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4401, file: !4402, line: 65, baseType: !453, size: 64)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4401, file: !4402, line: 66, baseType: !445, size: 128, offset: 64)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4401, file: !4402, line: 67, baseType: !4407, size: 64, offset: 192)
!4407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4401, size: 64)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !4401, file: !4402, line: 68, baseType: !4409, size: 64, offset: 256)
!4409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4410, size: 64)
!4410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !4402, line: 192, size: 704, elements: !4411)
!4411 = !{!4412, !4413, !4414, !4415}
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4410, file: !4402, line: 193, baseType: !445, size: 128)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !4410, file: !4402, line: 194, baseType: !884, offset: 128)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4410, file: !4402, line: 195, baseType: !4401, size: 512, offset: 128)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !4410, file: !4402, line: 196, baseType: !4416, size: 64, offset: 640)
!4416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4417, size: 64)
!4417 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4418)
!4418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !4402, line: 156, size: 192, elements: !4419)
!4419 = !{!4420, !4425, !4430}
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !4418, file: !4402, line: 157, baseType: !4421, size: 64)
!4421 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4422)
!4422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4423, size: 64)
!4423 = !DISubroutineType(types: !4424)
!4424 = !{!7, !4409, !4407}
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4418, file: !4402, line: 158, baseType: !4426, size: 64, offset: 64)
!4426 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4427)
!4427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4428, size: 64)
!4428 = !DISubroutineType(types: !4429)
!4429 = !{!453, !4409, !4407}
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4418, file: !4402, line: 159, baseType: !4431, size: 64, offset: 128)
!4431 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4432)
!4432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4433, size: 64)
!4433 = !DISubroutineType(types: !4434)
!4434 = !{!7, !4409, !4407, !4435}
!4435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4436, size: 64)
!4436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !4402, line: 148, size: 20736, elements: !4437)
!4437 = !{!4438, !4440, !4442, !4443, !4447}
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !4436, file: !4402, line: 149, baseType: !4439, size: 192)
!4439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !733, size: 192, elements: !1022)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !4436, file: !4402, line: 150, baseType: !4441, size: 4096, offset: 192)
!4441 = !DICompositeType(tag: DW_TAG_array_type, baseType: !733, size: 4096, elements: !4302)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !4436, file: !4402, line: 151, baseType: !7, size: 32, offset: 4288)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4436, file: !4402, line: 152, baseType: !4444, size: 16384, offset: 4320)
!4444 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 16384, elements: !4445)
!4445 = !{!4446}
!4446 = !DISubrange(count: 2048)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !4436, file: !4402, line: 153, baseType: !7, size: 32, offset: 20704)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !4401, file: !4402, line: 69, baseType: !4449, size: 64, offset: 320)
!4449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4450, size: 64)
!4450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !4402, line: 138, size: 448, elements: !4451)
!4451 = !{!4452, !4456, !4475, !4477, !4510, !4536, !4540}
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4450, file: !4402, line: 139, baseType: !4453, size: 64)
!4453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4454, size: 64)
!4454 = !DISubroutineType(types: !4455)
!4455 = !{null, !4407}
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !4450, file: !4402, line: 140, baseType: !4457, size: 64, offset: 64)
!4457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4458, size: 64)
!4458 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4459)
!4459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !4460, line: 230, size: 128, elements: !4461)
!4460 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!4461 = !{!4462, !4471}
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !4459, file: !4460, line: 231, baseType: !4463, size: 64)
!4463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4464, size: 64)
!4464 = !DISubroutineType(types: !4465)
!4465 = !{!1170, !4407, !4466, !733}
!4466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4467, size: 64)
!4467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !4460, line: 30, size: 128, elements: !4468)
!4468 = !{!4469, !4470}
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4467, file: !4460, line: 31, baseType: !453, size: 64)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4467, file: !4460, line: 32, baseType: !801, size: 16, offset: 64)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !4459, file: !4460, line: 232, baseType: !4472, size: 64, offset: 64)
!4472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4473, size: 64)
!4473 = !DISubroutineType(types: !4474)
!4474 = !{!1170, !4407, !4466, !453, !750}
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !4450, file: !4402, line: 141, baseType: !4476, size: 64, offset: 128)
!4476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4466, size: 64)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !4450, file: !4402, line: 142, baseType: !4478, size: 64, offset: 192)
!4478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4479, size: 64)
!4479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4480, size: 64)
!4480 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4481)
!4481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !4460, line: 84, size: 320, elements: !4482)
!4482 = !{!4483, !4484, !4488, !4507, !4508}
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4481, file: !4460, line: 85, baseType: !453, size: 64)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !4481, file: !4460, line: 86, baseType: !4485, size: 64, offset: 64)
!4485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4486, size: 64)
!4486 = !DISubroutineType(types: !4487)
!4487 = !{!801, !4407, !4466, !7}
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !4481, file: !4460, line: 88, baseType: !4489, size: 64, offset: 128)
!4489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4490, size: 64)
!4490 = !DISubroutineType(types: !4491)
!4491 = !{!801, !4407, !4492, !7}
!4492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4493, size: 64)
!4493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !4460, line: 168, size: 448, elements: !4494)
!4494 = !{!4495, !4496, !4497, !4498, !4502, !4503}
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4493, file: !4460, line: 169, baseType: !4467, size: 128)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4493, file: !4460, line: 170, baseType: !750, size: 64, offset: 128)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !4493, file: !4460, line: 171, baseType: !726, size: 64, offset: 192)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4493, file: !4460, line: 172, baseType: !4499, size: 64, offset: 256)
!4499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4500, size: 64)
!4500 = !DISubroutineType(types: !4501)
!4501 = !{!1170, !1165, !4407, !4492, !733, !979, !750}
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4493, file: !4460, line: 174, baseType: !4499, size: 64, offset: 320)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4493, file: !4460, line: 176, baseType: !4504, size: 64, offset: 384)
!4504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4505, size: 64)
!4505 = !DISubroutineType(types: !4506)
!4506 = !{!7, !1165, !4407, !4492, !1270}
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !4481, file: !4460, line: 90, baseType: !4476, size: 64, offset: 192)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !4481, file: !4460, line: 91, baseType: !4509, size: 64, offset: 256)
!4509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4492, size: 64)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !4450, file: !4402, line: 143, baseType: !4511, size: 64, offset: 256)
!4511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4512, size: 64)
!4512 = !DISubroutineType(types: !4513)
!4513 = !{!4514, !4407}
!4514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4515, size: 64)
!4515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4516)
!4516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !174, line: 39, size: 384, elements: !4517)
!4517 = !{!4518, !4519, !4523, !4527, !4531, !4535}
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4516, file: !174, line: 40, baseType: !173, size: 32)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !4516, file: !174, line: 41, baseType: !4520, size: 64, offset: 64)
!4520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4521, size: 64)
!4521 = !DISubroutineType(types: !4522)
!4522 = !{!696}
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !4516, file: !174, line: 42, baseType: !4524, size: 64, offset: 128)
!4524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4525, size: 64)
!4525 = !DISubroutineType(types: !4526)
!4526 = !{!726}
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !4516, file: !174, line: 43, baseType: !4528, size: 64, offset: 192)
!4528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4529, size: 64)
!4529 = !DISubroutineType(types: !4530)
!4530 = !{!2424, !606}
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !4516, file: !174, line: 44, baseType: !4532, size: 64, offset: 256)
!4532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4533, size: 64)
!4533 = !DISubroutineType(types: !4534)
!4534 = !{!2424}
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !4516, file: !174, line: 45, baseType: !3885, size: 64, offset: 320)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4450, file: !4402, line: 144, baseType: !4537, size: 64, offset: 320)
!4537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4538, size: 64)
!4538 = !DISubroutineType(types: !4539)
!4539 = !{!2424, !4407}
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4450, file: !4402, line: 145, baseType: !4541, size: 64, offset: 384)
!4541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4542, size: 64)
!4542 = !DISubroutineType(types: !4543)
!4543 = !{null, !4407, !2036, !2037}
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !4401, file: !4402, line: 70, baseType: !4545, size: 64, offset: 384)
!4545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4546, size: 64)
!4546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !993, line: 123, size: 1024, elements: !4547)
!4547 = !{!4548, !4549, !4550, !4551, !4552, !4553, !4554, !4555, !4742, !4743, !4744, !4745, !4746}
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4546, file: !993, line: 124, baseType: !544, size: 32)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4546, file: !993, line: 125, baseType: !544, size: 32, offset: 32)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4546, file: !993, line: 135, baseType: !4545, size: 64, offset: 64)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4546, file: !993, line: 136, baseType: !453, size: 64, offset: 128)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !4546, file: !993, line: 138, baseType: !594, size: 192, align: 64, offset: 192)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !4546, file: !993, line: 140, baseType: !2424, size: 64, offset: 384)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !4546, file: !993, line: 141, baseType: !14, size: 32, offset: 448)
!4555 = !DIDerivedType(tag: DW_TAG_member, scope: !4546, file: !993, line: 142, baseType: !4556, size: 256, offset: 512)
!4556 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4546, file: !993, line: 142, size: 256, elements: !4557)
!4557 = !{!4558, !4598, !4602}
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4556, file: !993, line: 143, baseType: !4559, size: 192)
!4559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !993, line: 91, size: 192, elements: !4560)
!4560 = !{!4561, !4562, !4563}
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !4559, file: !993, line: 92, baseType: !473, size: 64)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4559, file: !993, line: 94, baseType: !1288, size: 64, offset: 64)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !4559, file: !993, line: 100, baseType: !4564, size: 64, offset: 128)
!4564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4565, size: 64)
!4565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !993, line: 180, size: 704, elements: !4566)
!4566 = !{!4567, !4568, !4569, !4570, !4571, !4572, !4596, !4597}
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4565, file: !993, line: 182, baseType: !4545, size: 64)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4565, file: !993, line: 183, baseType: !14, size: 32, offset: 64)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !4565, file: !993, line: 186, baseType: !2135, size: 192, offset: 128)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !4565, file: !993, line: 187, baseType: !862, size: 32, offset: 320)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !4565, file: !993, line: 188, baseType: !862, size: 32, offset: 352)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !4565, file: !993, line: 189, baseType: !4573, size: 64, offset: 384)
!4573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4574, size: 64)
!4574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !993, line: 168, size: 320, elements: !4575)
!4575 = !{!4576, !4580, !4584, !4588, !4592}
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !4574, file: !993, line: 169, baseType: !4577, size: 64)
!4577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4578, size: 64)
!4578 = !DISubroutineType(types: !4579)
!4579 = !{!7, !1097, !4564}
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !4574, file: !993, line: 171, baseType: !4581, size: 64, offset: 64)
!4581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4582, size: 64)
!4582 = !DISubroutineType(types: !4583)
!4583 = !{!7, !4545, !453, !801}
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !4574, file: !993, line: 173, baseType: !4585, size: 64, offset: 128)
!4585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4586, size: 64)
!4586 = !DISubroutineType(types: !4587)
!4587 = !{!7, !4545}
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !4574, file: !993, line: 174, baseType: !4589, size: 64, offset: 192)
!4589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4590, size: 64)
!4590 = !DISubroutineType(types: !4591)
!4591 = !{!7, !4545, !4545, !453}
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !4574, file: !993, line: 176, baseType: !4593, size: 64, offset: 256)
!4593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4594, size: 64)
!4594 = !DISubroutineType(types: !4595)
!4595 = !{!7, !1097, !4545, !4564}
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !4565, file: !993, line: 192, baseType: !445, size: 128, offset: 448)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !4565, file: !993, line: 194, baseType: !1255, size: 128, offset: 576)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !4556, file: !993, line: 144, baseType: !4599, size: 64)
!4599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !993, line: 103, size: 64, elements: !4600)
!4600 = !{!4601}
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !4599, file: !993, line: 104, baseType: !4545, size: 64)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4556, file: !993, line: 145, baseType: !4603, size: 256)
!4603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !993, line: 107, size: 256, elements: !4604)
!4604 = !{!4605, !4737, !4740, !4741}
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4603, file: !993, line: 108, baseType: !4606, size: 64)
!4606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4607, size: 64)
!4607 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4608)
!4608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !993, line: 217, size: 768, elements: !4609)
!4609 = !{!4610, !4714, !4718, !4719, !4720, !4721, !4722, !4726, !4727, !4728, !4729, !4733}
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4608, file: !993, line: 222, baseType: !4611, size: 64)
!4611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4612, size: 64)
!4612 = !DISubroutineType(types: !4613)
!4613 = !{!7, !4614}
!4614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4615, size: 64)
!4615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !993, line: 197, size: 1088, elements: !4616)
!4616 = !{!4617, !4618, !4619, !4620, !4621, !4622, !4623, !4624, !4625, !4626, !4627, !4628, !4629}
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4615, file: !993, line: 199, baseType: !4545, size: 64)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !4615, file: !993, line: 200, baseType: !1165, size: 64, offset: 64)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !4615, file: !993, line: 201, baseType: !1097, size: 64, offset: 128)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4615, file: !993, line: 202, baseType: !726, size: 64, offset: 192)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4615, file: !993, line: 205, baseType: !1109, size: 192, offset: 256)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !4615, file: !993, line: 206, baseType: !1109, size: 192, offset: 448)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4615, file: !993, line: 207, baseType: !7, size: 32, offset: 640)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4615, file: !993, line: 208, baseType: !445, size: 128, offset: 704)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !4615, file: !993, line: 209, baseType: !733, size: 64, offset: 832)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4615, file: !993, line: 211, baseType: !750, size: 64, offset: 896)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !4615, file: !993, line: 212, baseType: !696, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !4615, file: !993, line: 213, baseType: !696, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !4615, file: !993, line: 214, baseType: !4630, size: 64, offset: 1024)
!4630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4631, size: 64)
!4631 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4632)
!4632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !180, line: 557, size: 832, elements: !4633)
!4633 = !{!4634, !4638, !4639, !4643, !4647, !4688, !4692, !4696, !4700, !4701, !4702, !4706, !4710}
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4632, file: !180, line: 558, baseType: !4635, size: 64)
!4635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4636, size: 64)
!4636 = !DISubroutineType(types: !4637)
!4637 = !{null, !1270}
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !4632, file: !180, line: 559, baseType: !4635, size: 64, offset: 64)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !4632, file: !180, line: 560, baseType: !4640, size: 64, offset: 128)
!4640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4641, size: 64)
!4641 = !DISubroutineType(types: !4642)
!4642 = !{!7, !1270, !473}
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !4632, file: !180, line: 561, baseType: !4644, size: 64, offset: 192)
!4644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4645, size: 64)
!4645 = !DISubroutineType(types: !4646)
!4646 = !{!7, !1270}
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !4632, file: !180, line: 562, baseType: !4648, size: 64, offset: 256)
!4648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4649, size: 64)
!4649 = !DISubroutineType(types: !4650)
!4650 = !{!4651, !4652}
!4651 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !782, line: 682, baseType: !14)
!4652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4653, size: 64)
!4653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !180, line: 508, size: 768, elements: !4654)
!4654 = !{!4655, !4656, !4657, !4658, !4659, !4660, !4667, !4674, !4680, !4681, !4682, !4684, !4686}
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !4653, file: !180, line: 509, baseType: !1270, size: 64)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4653, file: !180, line: 510, baseType: !14, size: 32, offset: 64)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !4653, file: !180, line: 511, baseType: !2144, size: 32, offset: 96)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !4653, file: !180, line: 512, baseType: !473, size: 64, offset: 128)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !4653, file: !180, line: 513, baseType: !473, size: 64, offset: 192)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !4653, file: !180, line: 514, baseType: !4661, size: 64, offset: 256)
!4661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4662, size: 64)
!4662 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1303, line: 385, baseType: !4663)
!4663 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1303, line: 385, size: 64, elements: !4664)
!4664 = !{!4665}
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !4663, file: !1303, line: 385, baseType: !4666, size: 64)
!4666 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1308, line: 15, baseType: !473)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !4653, file: !180, line: 516, baseType: !4668, size: 64, offset: 320)
!4668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4669, size: 64)
!4669 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1303, line: 359, baseType: !4670)
!4670 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1303, line: 359, size: 64, elements: !4671)
!4671 = !{!4672}
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !4670, file: !1303, line: 359, baseType: !4673, size: 64)
!4673 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1308, line: 16, baseType: !473)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !4653, file: !180, line: 519, baseType: !4675, size: 64, offset: 384)
!4675 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1308, line: 21, baseType: !4676)
!4676 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1308, line: 21, size: 64, elements: !4677)
!4677 = !{!4678}
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !4676, file: !1308, line: 21, baseType: !4679, size: 64)
!4679 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1308, line: 14, baseType: !473)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !4653, file: !180, line: 521, baseType: !780, size: 64, offset: 448)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !4653, file: !180, line: 522, baseType: !780, size: 64, offset: 512)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !4653, file: !180, line: 528, baseType: !4683, size: 64, offset: 576)
!4683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4675, size: 64)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !4653, file: !180, line: 532, baseType: !4685, size: 64, offset: 640)
!4685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 64)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !4653, file: !180, line: 536, baseType: !4687, size: 64, offset: 704)
!4687 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1303, line: 509, baseType: !780)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !4632, file: !180, line: 563, baseType: !4689, size: 64, offset: 320)
!4689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4690, size: 64)
!4690 = !DISubroutineType(types: !4691)
!4691 = !{!4651, !4652, !179}
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !4632, file: !180, line: 565, baseType: !4693, size: 64, offset: 384)
!4693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4694, size: 64)
!4694 = !DISubroutineType(types: !4695)
!4695 = !{null, !4652, !473, !473}
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !4632, file: !180, line: 567, baseType: !4697, size: 64, offset: 448)
!4697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4698, size: 64)
!4698 = !DISubroutineType(types: !4699)
!4699 = !{!473, !1270}
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !4632, file: !180, line: 571, baseType: !4648, size: 64, offset: 512)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !4632, file: !180, line: 574, baseType: !4648, size: 64, offset: 576)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !4632, file: !180, line: 579, baseType: !4703, size: 64, offset: 640)
!4703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4704, size: 64)
!4704 = !DISubroutineType(types: !4705)
!4705 = !{!7, !1270, !473, !726, !7, !7}
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4632, file: !180, line: 585, baseType: !4707, size: 64, offset: 704)
!4707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4708, size: 64)
!4708 = !DISubroutineType(types: !4709)
!4709 = !{!453, !1270}
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !4632, file: !180, line: 615, baseType: !4711, size: 64, offset: 768)
!4711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4712, size: 64)
!4712 = !DISubroutineType(types: !4713)
!4713 = !{!780, !1270, !473}
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4608, file: !993, line: 223, baseType: !4715, size: 64, offset: 64)
!4715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4716, size: 64)
!4716 = !DISubroutineType(types: !4717)
!4717 = !{null, !4614}
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !4608, file: !993, line: 236, baseType: !1134, size: 64, offset: 128)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !4608, file: !993, line: 238, baseType: !1121, size: 64, offset: 192)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !4608, file: !993, line: 239, baseType: !1130, size: 64, offset: 256)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !4608, file: !993, line: 240, baseType: !1126, size: 64, offset: 320)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4608, file: !993, line: 242, baseType: !4723, size: 64, offset: 384)
!4723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4724, size: 64)
!4724 = !DISubroutineType(types: !4725)
!4725 = !{!1170, !4614, !733, !750, !979}
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4608, file: !993, line: 252, baseType: !750, size: 64, offset: 448)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !4608, file: !993, line: 259, baseType: !696, size: 8, offset: 512)
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4608, file: !993, line: 260, baseType: !4723, size: 64, offset: 576)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4608, file: !993, line: 263, baseType: !4730, size: 64, offset: 640)
!4730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4731, size: 64)
!4731 = !DISubroutineType(types: !4732)
!4732 = !{!1244, !4614, !1245}
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4608, file: !993, line: 266, baseType: !4734, size: 64, offset: 704)
!4734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4735, size: 64)
!4735 = !DISubroutineType(types: !4736)
!4736 = !{!7, !4614, !1270}
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4603, file: !993, line: 109, baseType: !4738, size: 64, offset: 64)
!4738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4739, size: 64)
!4739 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !993, line: 31, flags: DIFlagFwdDecl)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4603, file: !993, line: 110, baseType: !979, size: 64, offset: 128)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !4603, file: !993, line: 111, baseType: !4545, size: 64, offset: 192)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4546, file: !993, line: 148, baseType: !726, size: 64, offset: 768)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4546, file: !993, line: 154, baseType: !492, size: 64, offset: 832)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4546, file: !993, line: 156, baseType: !633, size: 16, offset: 896)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4546, file: !993, line: 157, baseType: !801, size: 16, offset: 912)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !4546, file: !993, line: 158, baseType: !4747, size: 64, offset: 960)
!4747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4748, size: 64)
!4748 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !993, line: 32, flags: DIFlagFwdDecl)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !4401, file: !4402, line: 71, baseType: !4750, size: 32, offset: 448)
!4750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !4751, line: 19, size: 32, elements: !4752)
!4751 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!4752 = !{!4753}
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4750, file: !4751, line: 20, baseType: !1426, size: 32)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !4401, file: !4402, line: 75, baseType: !14, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !4401, file: !4402, line: 76, baseType: !14, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !4401, file: !4402, line: 77, baseType: !14, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !4401, file: !4402, line: 78, baseType: !14, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !4401, file: !4402, line: 79, baseType: !14, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4398, file: !192, line: 463, baseType: !4760, size: 64, offset: 512)
!4760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4398, size: 64)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4398, file: !192, line: 465, baseType: !4762, size: 64, offset: 576)
!4762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4763, size: 64)
!4763 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !192, line: 36, flags: DIFlagFwdDecl)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !4398, file: !192, line: 467, baseType: !453, size: 64, offset: 640)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4398, file: !192, line: 468, baseType: !4766, size: 64, offset: 704)
!4766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4767, size: 64)
!4767 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4768)
!4768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !192, line: 87, size: 384, elements: !4769)
!4769 = !{!4770, !4771, !4772, !4776, !4781, !4785}
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4768, file: !192, line: 88, baseType: !453, size: 64)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4768, file: !192, line: 89, baseType: !4478, size: 64, offset: 64)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4768, file: !192, line: 90, baseType: !4773, size: 64, offset: 128)
!4773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4774, size: 64)
!4774 = !DISubroutineType(types: !4775)
!4775 = !{!7, !4760, !4435}
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4768, file: !192, line: 91, baseType: !4777, size: 64, offset: 192)
!4777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4778, size: 64)
!4778 = !DISubroutineType(types: !4779)
!4779 = !{!733, !4760, !4780, !2036, !2037}
!4780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4768, file: !192, line: 93, baseType: !4782, size: 64, offset: 256)
!4782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4783, size: 64)
!4783 = !DISubroutineType(types: !4784)
!4784 = !{null, !4760}
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4768, file: !192, line: 95, baseType: !4786, size: 64, offset: 320)
!4786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4787, size: 64)
!4787 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4788)
!4788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !199, line: 278, size: 1472, elements: !4789)
!4789 = !{!4790, !4794, !4795, !4796, !4797, !4798, !4799, !4800, !4801, !4802, !4803, !4804, !4805, !4806, !4807, !4808, !4809, !4810, !4811, !4812, !4813, !4814, !4815}
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !4788, file: !199, line: 279, baseType: !4791, size: 64)
!4791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4792, size: 64)
!4792 = !DISubroutineType(types: !4793)
!4793 = !{!7, !4760}
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4788, file: !199, line: 280, baseType: !4782, size: 64, offset: 64)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4788, file: !199, line: 281, baseType: !4791, size: 64, offset: 128)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4788, file: !199, line: 282, baseType: !4791, size: 64, offset: 192)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !4788, file: !199, line: 283, baseType: !4791, size: 64, offset: 256)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !4788, file: !199, line: 284, baseType: !4791, size: 64, offset: 320)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !4788, file: !199, line: 285, baseType: !4791, size: 64, offset: 384)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !4788, file: !199, line: 286, baseType: !4791, size: 64, offset: 448)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !4788, file: !199, line: 287, baseType: !4791, size: 64, offset: 512)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !4788, file: !199, line: 288, baseType: !4791, size: 64, offset: 576)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !4788, file: !199, line: 289, baseType: !4791, size: 64, offset: 640)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !4788, file: !199, line: 290, baseType: !4791, size: 64, offset: 704)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !4788, file: !199, line: 291, baseType: !4791, size: 64, offset: 768)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !4788, file: !199, line: 292, baseType: !4791, size: 64, offset: 832)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !4788, file: !199, line: 293, baseType: !4791, size: 64, offset: 896)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !4788, file: !199, line: 294, baseType: !4791, size: 64, offset: 960)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !4788, file: !199, line: 295, baseType: !4791, size: 64, offset: 1024)
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !4788, file: !199, line: 296, baseType: !4791, size: 64, offset: 1088)
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !4788, file: !199, line: 297, baseType: !4791, size: 64, offset: 1152)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !4788, file: !199, line: 298, baseType: !4791, size: 64, offset: 1216)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !4788, file: !199, line: 299, baseType: !4791, size: 64, offset: 1280)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !4788, file: !199, line: 300, baseType: !4791, size: 64, offset: 1344)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !4788, file: !199, line: 301, baseType: !4791, size: 64, offset: 1408)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4398, file: !192, line: 470, baseType: !4817, size: 64, offset: 768)
!4817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4818, size: 64)
!4818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !4819, line: 82, size: 1408, elements: !4820)
!4819 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!4820 = !{!4821, !4822, !4823, !4824, !4825, !4826, !4827, !4881, !4882, !4883, !4884, !4885, !4886, !4887, !4888, !4889, !4890, !4891, !4892, !4893, !4897, !4900, !4901}
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4818, file: !4819, line: 83, baseType: !453, size: 64)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4818, file: !4819, line: 84, baseType: !453, size: 64, offset: 64)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !4818, file: !4819, line: 85, baseType: !4760, size: 64, offset: 128)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !4818, file: !4819, line: 86, baseType: !4478, size: 64, offset: 192)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4818, file: !4819, line: 87, baseType: !4478, size: 64, offset: 256)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !4818, file: !4819, line: 88, baseType: !4478, size: 64, offset: 320)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4818, file: !4819, line: 90, baseType: !4828, size: 64, offset: 384)
!4828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4829, size: 64)
!4829 = !DISubroutineType(types: !4830)
!4830 = !{!7, !4760, !4831}
!4831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4832, size: 64)
!4832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !186, line: 95, size: 1152, elements: !4833)
!4833 = !{!4834, !4835, !4836, !4837, !4838, !4839, !4840, !4850, !4861, !4862, !4863, !4864, !4865, !4873, !4874, !4875, !4876, !4877, !4878}
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4832, file: !186, line: 96, baseType: !453, size: 64)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4832, file: !186, line: 97, baseType: !4817, size: 64, offset: 64)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4832, file: !186, line: 99, baseType: !1007, size: 64, offset: 128)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !4832, file: !186, line: 100, baseType: !453, size: 64, offset: 192)
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !4832, file: !186, line: 102, baseType: !696, size: 8, offset: 256)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !4832, file: !186, line: 103, baseType: !185, size: 32, offset: 288)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !4832, file: !186, line: 105, baseType: !4841, size: 64, offset: 320)
!4841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4842, size: 64)
!4842 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4843)
!4843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !4844, line: 262, size: 1600, elements: !4845)
!4844 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!4845 = !{!4846, !4847, !4848, !4849}
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4843, file: !4844, line: 263, baseType: !4356, size: 256)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4843, file: !4844, line: 264, baseType: !4356, size: 256, offset: 256)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !4843, file: !4844, line: 265, baseType: !3585, size: 1024, offset: 512)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4843, file: !4844, line: 266, baseType: !2424, size: 64, offset: 1536)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !4832, file: !186, line: 106, baseType: !4851, size: 64, offset: 384)
!4851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4852, size: 64)
!4852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4853)
!4853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !4844, line: 210, size: 256, elements: !4854)
!4854 = !{!4855, !4857, !4859, !4860}
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4853, file: !4844, line: 211, baseType: !4856, size: 72)
!4856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1553, size: 72, elements: !2228)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4853, file: !4844, line: 212, baseType: !4858, size: 64, offset: 128)
!4858 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !4844, line: 14, baseType: !473)
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !4853, file: !4844, line: 213, baseType: !624, size: 32, offset: 192)
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !4853, file: !4844, line: 214, baseType: !624, size: 32, offset: 224)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4832, file: !186, line: 108, baseType: !4791, size: 64, offset: 448)
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4832, file: !186, line: 109, baseType: !4782, size: 64, offset: 512)
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4832, file: !186, line: 110, baseType: !4791, size: 64, offset: 576)
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4832, file: !186, line: 111, baseType: !4782, size: 64, offset: 640)
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4832, file: !186, line: 112, baseType: !4866, size: 64, offset: 704)
!4866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4867, size: 64)
!4867 = !DISubroutineType(types: !4868)
!4868 = !{!7, !4760, !4869}
!4869 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !199, line: 52, baseType: !4870)
!4870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !199, line: 50, size: 32, elements: !4871)
!4871 = !{!4872}
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4870, file: !199, line: 51, baseType: !7, size: 32)
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4832, file: !186, line: 113, baseType: !4791, size: 64, offset: 768)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4832, file: !186, line: 114, baseType: !4478, size: 64, offset: 832)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4832, file: !186, line: 115, baseType: !4478, size: 64, offset: 896)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4832, file: !186, line: 117, baseType: !4786, size: 64, offset: 960)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !4832, file: !186, line: 118, baseType: !4782, size: 64, offset: 1024)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4832, file: !186, line: 120, baseType: !4879, size: 64, offset: 1088)
!4879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4880, size: 64)
!4880 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !186, line: 120, flags: DIFlagFwdDecl)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4818, file: !4819, line: 91, baseType: !4773, size: 64, offset: 448)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4818, file: !4819, line: 92, baseType: !4791, size: 64, offset: 512)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4818, file: !4819, line: 93, baseType: !4782, size: 64, offset: 576)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4818, file: !4819, line: 94, baseType: !4791, size: 64, offset: 640)
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4818, file: !4819, line: 95, baseType: !4782, size: 64, offset: 704)
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !4818, file: !4819, line: 97, baseType: !4791, size: 64, offset: 768)
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !4818, file: !4819, line: 98, baseType: !4791, size: 64, offset: 832)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4818, file: !4819, line: 100, baseType: !4866, size: 64, offset: 896)
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4818, file: !4819, line: 101, baseType: !4791, size: 64, offset: 960)
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !4818, file: !4819, line: 103, baseType: !4791, size: 64, offset: 1024)
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !4818, file: !4819, line: 105, baseType: !4791, size: 64, offset: 1088)
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4818, file: !4819, line: 107, baseType: !4786, size: 64, offset: 1152)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !4818, file: !4819, line: 109, baseType: !4894, size: 64, offset: 1216)
!4894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4895, size: 64)
!4895 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4896)
!4896 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !4819, line: 109, flags: DIFlagFwdDecl)
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4818, file: !4819, line: 111, baseType: !4898, size: 64, offset: 1280)
!4898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4899, size: 64)
!4899 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !4819, line: 111, flags: DIFlagFwdDecl)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !4818, file: !4819, line: 112, baseType: !1016, offset: 1344)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !4818, file: !4819, line: 114, baseType: !696, size: 8, offset: 1344)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4398, file: !192, line: 471, baseType: !4831, size: 64, offset: 832)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !4398, file: !192, line: 473, baseType: !726, size: 64, offset: 896)
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4398, file: !192, line: 475, baseType: !726, size: 64, offset: 960)
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4398, file: !192, line: 480, baseType: !1109, size: 192, offset: 1024)
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !4398, file: !192, line: 484, baseType: !4907, size: 576, offset: 1216)
!4907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !192, line: 361, size: 576, elements: !4908)
!4908 = !{!4909, !4910, !4911, !4912, !4913, !4914}
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !4907, file: !192, line: 362, baseType: !445, size: 128)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !4907, file: !192, line: 363, baseType: !445, size: 128, offset: 128)
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !4907, file: !192, line: 364, baseType: !445, size: 128, offset: 256)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !4907, file: !192, line: 365, baseType: !445, size: 128, offset: 384)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !4907, file: !192, line: 366, baseType: !696, size: 8, offset: 512)
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4907, file: !192, line: 367, baseType: !191, size: 32, offset: 544)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !4398, file: !192, line: 485, baseType: !4916, size: 2304, offset: 1792)
!4916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !199, line: 565, size: 2304, elements: !4917)
!4917 = !{!4918, !4919, !4920, !4921, !4922, !4923, !4924, !4925, !4926, !4927, !4928, !4929, !4930, !4931, !4932, !4933, !4960, !4961, !4962, !4963, !4964, !4965, !4966, !4967, !4968, !4969, !4970, !4971, !4972, !4973, !4974, !4975, !4976, !4977, !4978, !4979, !4980, !4981, !4982, !4983, !4984, !4985, !4986, !4987, !4988, !4989, !4990, !4991, !4992, !5002, !5006}
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !4916, file: !199, line: 566, baseType: !4869, size: 32)
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !4916, file: !199, line: 567, baseType: !14, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !4916, file: !199, line: 568, baseType: !14, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !4916, file: !199, line: 569, baseType: !696, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !4916, file: !199, line: 570, baseType: !696, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !4916, file: !199, line: 571, baseType: !696, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!4924 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !4916, file: !199, line: 572, baseType: !696, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !4916, file: !199, line: 573, baseType: !696, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !4916, file: !199, line: 574, baseType: !696, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !4916, file: !199, line: 575, baseType: !696, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !4916, file: !199, line: 576, baseType: !696, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !4916, file: !199, line: 577, baseType: !862, size: 32, offset: 64)
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4916, file: !199, line: 578, baseType: !884, offset: 96)
!4931 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4916, file: !199, line: 580, baseType: !445, size: 128, offset: 128)
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !4916, file: !199, line: 581, baseType: !1701, size: 192, offset: 256)
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !4916, file: !199, line: 582, baseType: !4934, size: 64, offset: 448)
!4934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4935, size: 64)
!4935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !4936, line: 43, size: 1472, elements: !4937)
!4936 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!4937 = !{!4938, !4939, !4940, !4941, !4942, !4945, !4946, !4947, !4948, !4949, !4950, !4951, !4952, !4953, !4954, !4955, !4956, !4957, !4958, !4959}
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4935, file: !4936, line: 44, baseType: !453, size: 64)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4935, file: !4936, line: 45, baseType: !7, size: 32, offset: 64)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4935, file: !4936, line: 46, baseType: !445, size: 128, offset: 128)
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4935, file: !4936, line: 47, baseType: !884, offset: 256)
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4935, file: !4936, line: 48, baseType: !4943, size: 64, offset: 256)
!4943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4944, size: 64)
!4944 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !199, line: 533, flags: DIFlagFwdDecl)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4935, file: !4936, line: 49, baseType: !2401, size: 320, offset: 320)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4935, file: !4936, line: 50, baseType: !473, size: 64, offset: 640)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !4935, file: !4936, line: 51, baseType: !1496, size: 64, offset: 704)
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !4935, file: !4936, line: 52, baseType: !1496, size: 64, offset: 768)
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !4935, file: !4936, line: 53, baseType: !1496, size: 64, offset: 832)
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !4935, file: !4936, line: 54, baseType: !1496, size: 64, offset: 896)
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !4935, file: !4936, line: 55, baseType: !1496, size: 64, offset: 960)
!4952 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !4935, file: !4936, line: 56, baseType: !473, size: 64, offset: 1024)
!4953 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !4935, file: !4936, line: 57, baseType: !473, size: 64, offset: 1088)
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !4935, file: !4936, line: 58, baseType: !473, size: 64, offset: 1152)
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !4935, file: !4936, line: 59, baseType: !473, size: 64, offset: 1216)
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !4935, file: !4936, line: 60, baseType: !473, size: 64, offset: 1280)
!4957 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4935, file: !4936, line: 61, baseType: !4760, size: 64, offset: 1344)
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4935, file: !4936, line: 62, baseType: !696, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !4935, file: !4936, line: 63, baseType: !696, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !4916, file: !199, line: 583, baseType: !696, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !4916, file: !199, line: 584, baseType: !696, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !4916, file: !199, line: 585, baseType: !696, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !4916, file: !199, line: 586, baseType: !14, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!4964 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !4916, file: !199, line: 587, baseType: !14, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !4916, file: !199, line: 592, baseType: !1488, size: 512, offset: 576)
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4916, file: !199, line: 593, baseType: !492, size: 64, offset: 1088)
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4916, file: !199, line: 594, baseType: !1961, size: 256, offset: 1152)
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !4916, file: !199, line: 595, baseType: !1255, size: 128, offset: 1408)
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4916, file: !199, line: 596, baseType: !4943, size: 64, offset: 1536)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !4916, file: !199, line: 597, baseType: !544, size: 32, offset: 1600)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !4916, file: !199, line: 598, baseType: !544, size: 32, offset: 1632)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !4916, file: !199, line: 599, baseType: !14, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !4916, file: !199, line: 600, baseType: !14, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!4974 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !4916, file: !199, line: 601, baseType: !14, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!4975 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !4916, file: !199, line: 602, baseType: !14, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!4976 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !4916, file: !199, line: 603, baseType: !14, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !4916, file: !199, line: 604, baseType: !696, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !4916, file: !199, line: 605, baseType: !14, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!4979 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !4916, file: !199, line: 606, baseType: !14, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !4916, file: !199, line: 607, baseType: !14, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !4916, file: !199, line: 608, baseType: !14, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !4916, file: !199, line: 609, baseType: !14, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!4983 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !4916, file: !199, line: 610, baseType: !14, size: 32, offset: 1696)
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4916, file: !199, line: 611, baseType: !198, size: 32, offset: 1728)
!4985 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !4916, file: !199, line: 612, baseType: !206, size: 32, offset: 1760)
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !4916, file: !199, line: 613, baseType: !7, size: 32, offset: 1792)
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !4916, file: !199, line: 614, baseType: !7, size: 32, offset: 1824)
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !4916, file: !199, line: 615, baseType: !492, size: 64, offset: 1856)
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !4916, file: !199, line: 616, baseType: !492, size: 64, offset: 1920)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !4916, file: !199, line: 617, baseType: !492, size: 64, offset: 1984)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !4916, file: !199, line: 618, baseType: !492, size: 64, offset: 2048)
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !4916, file: !199, line: 620, baseType: !4993, size: 64, offset: 2112)
!4993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4994, size: 64)
!4994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !199, line: 536, size: 256, elements: !4995)
!4995 = !{!4996, !4997, !4998, !4999}
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4994, file: !199, line: 537, baseType: !884)
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4994, file: !199, line: 538, baseType: !14, size: 32)
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !4994, file: !199, line: 540, baseType: !445, size: 128, offset: 64)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !4994, file: !199, line: 543, baseType: !5000, size: 64, offset: 192)
!5000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5001, size: 64)
!5001 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !199, line: 534, flags: DIFlagFwdDecl)
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !4916, file: !199, line: 621, baseType: !5003, size: 64, offset: 2176)
!5003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5004, size: 64)
!5004 = !DISubroutineType(types: !5005)
!5005 = !{null, !4760, !1644}
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !4916, file: !199, line: 622, baseType: !5007, size: 64, offset: 2240)
!5007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5008, size: 64)
!5008 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !199, line: 622, flags: DIFlagFwdDecl)
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !4398, file: !192, line: 486, baseType: !5010, size: 64, offset: 4096)
!5010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5011, size: 64)
!5011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !199, line: 642, size: 1792, elements: !5012)
!5012 = !{!5013, !5014, !5015, !5019, !5020, !5021}
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5011, file: !199, line: 643, baseType: !4788, size: 1472)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5011, file: !199, line: 644, baseType: !4791, size: 64, offset: 1472)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !5011, file: !199, line: 645, baseType: !5016, size: 64, offset: 1536)
!5016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5017, size: 64)
!5017 = !DISubroutineType(types: !5018)
!5018 = !{null, !4760, !696}
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !5011, file: !199, line: 646, baseType: !4791, size: 64, offset: 1600)
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !5011, file: !199, line: 647, baseType: !4782, size: 64, offset: 1664)
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !5011, file: !199, line: 648, baseType: !4782, size: 64, offset: 1728)
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !4398, file: !192, line: 493, baseType: !5023, size: 64, offset: 4160)
!5023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5024, size: 64)
!5024 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !192, line: 493, flags: DIFlagFwdDecl)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !4398, file: !192, line: 499, baseType: !445, size: 128, offset: 4224)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !4398, file: !192, line: 502, baseType: !5027, size: 64, offset: 4352)
!5027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5028, size: 64)
!5028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5029)
!5029 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !192, line: 502, flags: DIFlagFwdDecl)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !4398, file: !192, line: 504, baseType: !3933, size: 64, offset: 4416)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !4398, file: !192, line: 505, baseType: !492, size: 64, offset: 4480)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !4398, file: !192, line: 510, baseType: !492, size: 64, offset: 4544)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !4398, file: !192, line: 511, baseType: !5034, size: 64, offset: 4608)
!5034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5035, size: 64)
!5035 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5036)
!5036 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !192, line: 511, flags: DIFlagFwdDecl)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !4398, file: !192, line: 513, baseType: !5038, size: 64, offset: 4672)
!5038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5039, size: 64)
!5039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !192, line: 288, size: 128, elements: !5040)
!5040 = !{!5041, !5042}
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !5039, file: !192, line: 293, baseType: !14, size: 32)
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !5039, file: !192, line: 294, baseType: !473, size: 64, offset: 64)
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !4398, file: !192, line: 515, baseType: !445, size: 128, offset: 4736)
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !4398, file: !192, line: 526, baseType: !5045, offset: 4864)
!5045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !5046, line: 5, elements: !898)
!5046 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !4398, file: !192, line: 528, baseType: !5048, size: 64, offset: 4864)
!5048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5049, size: 64)
!5049 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !5050, line: 14, flags: DIFlagFwdDecl)
!5050 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4398, file: !192, line: 529, baseType: !5052, size: 64, offset: 4928)
!5052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5053, size: 64)
!5053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !5054, line: 17, size: 192, elements: !5055)
!5054 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!5055 = !{!5056, !5057, !5140}
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !5053, file: !5054, line: 18, baseType: !5052, size: 64)
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5053, file: !5054, line: 19, baseType: !5058, size: 64, offset: 64)
!5058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5059, size: 64)
!5059 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5060)
!5060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !5054, line: 110, size: 1152, elements: !5061)
!5061 = !{!5062, !5066, !5070, !5076, !5082, !5086, !5090, !5095, !5099, !5100, !5104, !5108, !5112, !5123, !5124, !5125, !5126, !5136}
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !5060, file: !5054, line: 111, baseType: !5063, size: 64)
!5063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5064, size: 64)
!5064 = !DISubroutineType(types: !5065)
!5065 = !{!5052, !5052}
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !5060, file: !5054, line: 112, baseType: !5067, size: 64, offset: 64)
!5067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5068, size: 64)
!5068 = !DISubroutineType(types: !5069)
!5069 = !{null, !5052}
!5070 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !5060, file: !5054, line: 113, baseType: !5071, size: 64, offset: 128)
!5071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5072, size: 64)
!5072 = !DISubroutineType(types: !5073)
!5073 = !{!696, !5074}
!5074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5075, size: 64)
!5075 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5053)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !5060, file: !5054, line: 114, baseType: !5077, size: 64, offset: 192)
!5077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5078, size: 64)
!5078 = !DISubroutineType(types: !5079)
!5079 = !{!2424, !5074, !5080}
!5080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5081, size: 64)
!5081 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4398)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !5060, file: !5054, line: 116, baseType: !5083, size: 64, offset: 256)
!5083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5084, size: 64)
!5084 = !DISubroutineType(types: !5085)
!5085 = !{!696, !5074, !453}
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !5060, file: !5054, line: 118, baseType: !5087, size: 64, offset: 320)
!5087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5088, size: 64)
!5088 = !DISubroutineType(types: !5089)
!5089 = !{!7, !5074, !453, !14, !726, !750}
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !5060, file: !5054, line: 123, baseType: !5091, size: 64, offset: 384)
!5091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5092, size: 64)
!5092 = !DISubroutineType(types: !5093)
!5093 = !{!7, !5074, !453, !5094, !750}
!5094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !453, size: 64)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !5060, file: !5054, line: 126, baseType: !5096, size: 64, offset: 448)
!5096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5097, size: 64)
!5097 = !DISubroutineType(types: !5098)
!5098 = !{!453, !5074}
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !5060, file: !5054, line: 127, baseType: !5096, size: 64, offset: 512)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !5060, file: !5054, line: 128, baseType: !5101, size: 64, offset: 576)
!5101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5102, size: 64)
!5102 = !DISubroutineType(types: !5103)
!5103 = !{!5052, !5074}
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !5060, file: !5054, line: 130, baseType: !5105, size: 64, offset: 640)
!5105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5106, size: 64)
!5106 = !DISubroutineType(types: !5107)
!5107 = !{!5052, !5074, !5052}
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !5060, file: !5054, line: 133, baseType: !5109, size: 64, offset: 704)
!5109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5110, size: 64)
!5110 = !DISubroutineType(types: !5111)
!5111 = !{!5052, !5074, !453}
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !5060, file: !5054, line: 135, baseType: !5113, size: 64, offset: 768)
!5113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5114, size: 64)
!5114 = !DISubroutineType(types: !5115)
!5115 = !{!7, !5074, !453, !453, !14, !14, !5116}
!5116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5117, size: 64)
!5117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !5054, line: 43, size: 640, elements: !5118)
!5118 = !{!5119, !5120, !5121}
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !5117, file: !5054, line: 44, baseType: !5052, size: 64)
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !5117, file: !5054, line: 45, baseType: !14, size: 32, offset: 64)
!5121 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !5117, file: !5054, line: 46, baseType: !5122, size: 512, offset: 128)
!5122 = !DICompositeType(tag: DW_TAG_array_type, baseType: !492, size: 512, elements: !1526)
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !5060, file: !5054, line: 140, baseType: !5105, size: 64, offset: 832)
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !5060, file: !5054, line: 143, baseType: !5101, size: 64, offset: 896)
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !5060, file: !5054, line: 145, baseType: !5063, size: 64, offset: 960)
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !5060, file: !5054, line: 146, baseType: !5127, size: 64, offset: 1024)
!5127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5128, size: 64)
!5128 = !DISubroutineType(types: !5129)
!5129 = !{!7, !5074, !5130}
!5130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5131, size: 64)
!5131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !5054, line: 29, size: 128, elements: !5132)
!5132 = !{!5133, !5134, !5135}
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !5131, file: !5054, line: 30, baseType: !14, size: 32)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5131, file: !5054, line: 31, baseType: !14, size: 32, offset: 32)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !5131, file: !5054, line: 32, baseType: !5074, size: 64, offset: 64)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !5060, file: !5054, line: 148, baseType: !5137, size: 64, offset: 1088)
!5137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5138, size: 64)
!5138 = !DISubroutineType(types: !5139)
!5139 = !{!7, !5074, !4760}
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5053, file: !5054, line: 20, baseType: !4760, size: 64, offset: 128)
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !4398, file: !192, line: 534, baseType: !974, size: 32, offset: 4992)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4398, file: !192, line: 535, baseType: !862, size: 32, offset: 5024)
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !4398, file: !192, line: 537, baseType: !884, offset: 5056)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !4398, file: !192, line: 538, baseType: !445, size: 128, offset: 5056)
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4398, file: !192, line: 540, baseType: !5146, size: 64, offset: 5184)
!5146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5147, size: 64)
!5147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !5148, line: 54, size: 960, elements: !5149)
!5148 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!5149 = !{!5150, !5151, !5152, !5153, !5154, !5155, !5156, !5160, !5164, !5165, !5166, !5167, !5171, !5175, !5176}
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5147, file: !5148, line: 55, baseType: !453, size: 64)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5147, file: !5148, line: 56, baseType: !1007, size: 64, offset: 64)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !5147, file: !5148, line: 58, baseType: !4478, size: 64, offset: 128)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !5147, file: !5148, line: 59, baseType: !4478, size: 64, offset: 192)
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !5147, file: !5148, line: 60, baseType: !4407, size: 64, offset: 256)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !5147, file: !5148, line: 62, baseType: !4773, size: 64, offset: 320)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !5147, file: !5148, line: 63, baseType: !5157, size: 64, offset: 384)
!5157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5158, size: 64)
!5158 = !DISubroutineType(types: !5159)
!5159 = !{!733, !4760, !4780}
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !5147, file: !5148, line: 65, baseType: !5161, size: 64, offset: 448)
!5161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5162, size: 64)
!5162 = !DISubroutineType(types: !5163)
!5163 = !{null, !5146}
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !5147, file: !5148, line: 66, baseType: !4782, size: 64, offset: 512)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !5147, file: !5148, line: 68, baseType: !4791, size: 64, offset: 576)
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !5147, file: !5148, line: 70, baseType: !4514, size: 64, offset: 640)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !5147, file: !5148, line: 71, baseType: !5168, size: 64, offset: 704)
!5168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5169, size: 64)
!5169 = !DISubroutineType(types: !5170)
!5170 = !{!2424, !4760}
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !5147, file: !5148, line: 73, baseType: !5172, size: 64, offset: 768)
!5172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5173, size: 64)
!5173 = !DISubroutineType(types: !5174)
!5174 = !{null, !4760, !2036, !2037}
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !5147, file: !5148, line: 75, baseType: !4786, size: 64, offset: 832)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5147, file: !5148, line: 77, baseType: !4898, size: 64, offset: 896)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4398, file: !192, line: 541, baseType: !4478, size: 64, offset: 5248)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4398, file: !192, line: 543, baseType: !4782, size: 64, offset: 5312)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !4398, file: !192, line: 544, baseType: !5180, size: 64, offset: 5376)
!5180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5181, size: 64)
!5181 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !192, line: 45, flags: DIFlagFwdDecl)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !4398, file: !192, line: 545, baseType: !5183, size: 64, offset: 5440)
!5183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5184, size: 64)
!5184 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !192, line: 47, flags: DIFlagFwdDecl)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !4398, file: !192, line: 547, baseType: !696, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !4398, file: !192, line: 548, baseType: !696, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !4398, file: !192, line: 549, baseType: !696, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !4398, file: !192, line: 550, baseType: !696, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !4367, file: !4350, line: 69, baseType: !4407, size: 64, offset: 5952)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !4367, file: !4350, line: 70, baseType: !7, size: 32, offset: 6016)
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !4367, file: !4350, line: 70, baseType: !7, size: 32, offset: 6048)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4367, file: !4350, line: 71, baseType: !5193, size: 64, offset: 6080)
!5193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5194, size: 64)
!5194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !4350, line: 48, size: 808, elements: !5195)
!5195 = !{!5196, !5198}
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !5194, file: !4350, line: 49, baseType: !5197, size: 296)
!5197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 296, elements: !2209)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !5194, file: !4350, line: 50, baseType: !5199, size: 512, offset: 296)
!5199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1552, size: 512, elements: !4302)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !4367, file: !4350, line: 75, baseType: !5201, size: 448, offset: 6144)
!5201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !1962, line: 124, size: 448, elements: !5202)
!5202 = !{!5203, !5204, !5205}
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5201, file: !1962, line: 125, baseType: !1961, size: 256)
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5201, file: !1962, line: 126, baseType: !460, size: 128, align: 64, offset: 256)
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !5201, file: !1962, line: 129, baseType: !3098, size: 64, offset: 384)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !4361, file: !4350, line: 153, baseType: !5207, offset: 256)
!5207 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4366, elements: !470)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !4349, file: !4350, line: 187, baseType: !4367, size: 6592, offset: 448)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !4349, file: !4350, line: 189, baseType: !5210, size: 64, offset: 7040)
!5210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5211, size: 64)
!5211 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5212)
!5212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !225, line: 1844, size: 960, elements: !5213)
!5213 = !{!5214, !5219, !5302, !5306, !5310, !5314, !5315, !5319, !5323, !5327, !5333, !5337, !5363, !5367, !5368}
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !5212, file: !225, line: 1845, baseType: !5215, size: 64)
!5215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5216, size: 64)
!5216 = !DISubroutineType(types: !5217)
!5217 = !{!5218, !4342}
!5218 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !4344, line: 515, baseType: !14)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !5212, file: !225, line: 1846, baseType: !5220, size: 64, offset: 64)
!5220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5221, size: 64)
!5221 = !DISubroutineType(types: !5222)
!5222 = !{!7, !5223, !5301}
!5223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5224, size: 64)
!5224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !4344, line: 22, size: 1344, elements: !5225)
!5225 = !{!5226, !5227, !5228, !5229, !5230, !5231, !5232, !5233, !5234, !5235, !5236, !5237, !5238, !5239, !5240, !5241, !5242, !5299, !5300}
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !5224, file: !4344, line: 23, baseType: !974, size: 32)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !5224, file: !4344, line: 24, baseType: !7, size: 32, offset: 32)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !5224, file: !4344, line: 25, baseType: !797, size: 64, offset: 64)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !5224, file: !4344, line: 26, baseType: !969, size: 64, offset: 128)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !5224, file: !4344, line: 27, baseType: !1109, size: 192, offset: 192)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !5224, file: !4344, line: 28, baseType: !726, size: 64, offset: 384)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !5224, file: !4344, line: 29, baseType: !726, size: 64, offset: 448)
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !5224, file: !4344, line: 30, baseType: !7, size: 32, offset: 512)
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !5224, file: !4344, line: 31, baseType: !696, size: 8, offset: 544)
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !5224, file: !4344, line: 33, baseType: !445, size: 128, offset: 576)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !5224, file: !4344, line: 35, baseType: !5223, size: 64, offset: 704)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !5224, file: !4344, line: 36, baseType: !1552, size: 8, offset: 768)
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !5224, file: !4344, line: 37, baseType: !4366, size: 64, offset: 832)
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !5224, file: !4344, line: 39, baseType: !14, size: 32, offset: 896)
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !5224, file: !4344, line: 41, baseType: !884, offset: 928)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !5224, file: !4344, line: 42, baseType: !4348, size: 64, offset: 960)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !5224, file: !4344, line: 43, baseType: !5243, size: 64, offset: 1024)
!5243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5244, size: 64)
!5244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !213, line: 165, size: 4672, elements: !5245)
!5245 = !{!5246, !5247, !5248, !5249, !5250, !5251, !5252, !5253, !5254, !5255, !5256, !5257, !5292, !5293, !5294, !5295, !5297, !5298}
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5244, file: !213, line: 166, baseType: !492, size: 64)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !5244, file: !213, line: 167, baseType: !594, size: 192, align: 64, offset: 64)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !5244, file: !213, line: 168, baseType: !445, size: 128, offset: 256)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !5244, file: !213, line: 169, baseType: !473, size: 64, offset: 384)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !5244, file: !213, line: 170, baseType: !473, size: 64, offset: 448)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5244, file: !213, line: 172, baseType: !4750, size: 32, offset: 512)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !5244, file: !213, line: 173, baseType: !14, size: 32, offset: 544)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !5244, file: !213, line: 174, baseType: !14, size: 32, offset: 576)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !5244, file: !213, line: 175, baseType: !14, size: 32, offset: 608)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !5244, file: !213, line: 175, baseType: !14, size: 32, offset: 640)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !5244, file: !213, line: 181, baseType: !532, size: 64, offset: 704)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !5244, file: !213, line: 183, baseType: !5258, size: 2688, offset: 768)
!5258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !213, line: 107, size: 2688, elements: !5259)
!5259 = !{!5260, !5261, !5262, !5263, !5264, !5265, !5266, !5267, !5268, !5270, !5271, !5272, !5273, !5274, !5275, !5276, !5277, !5278, !5285, !5286, !5287, !5288, !5289, !5290, !5291}
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !5258, file: !213, line: 108, baseType: !5243, size: 64)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5258, file: !213, line: 110, baseType: !473, size: 64, offset: 64)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !5258, file: !213, line: 111, baseType: !473, size: 64, offset: 128)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !5258, file: !213, line: 113, baseType: !445, size: 128, offset: 192)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !5258, file: !213, line: 114, baseType: !445, size: 128, offset: 320)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !5258, file: !213, line: 115, baseType: !445, size: 128, offset: 448)
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !5258, file: !213, line: 116, baseType: !445, size: 128, offset: 576)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !5258, file: !213, line: 117, baseType: !884, offset: 704)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !5258, file: !213, line: 119, baseType: !5269, size: 256, offset: 704)
!5269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3204, size: 256, elements: !1357)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !5258, file: !213, line: 121, baseType: !473, size: 64, offset: 960)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !5258, file: !213, line: 123, baseType: !473, size: 64, offset: 1024)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !5258, file: !213, line: 124, baseType: !473, size: 64, offset: 1088)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !5258, file: !213, line: 125, baseType: !473, size: 64, offset: 1152)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !5258, file: !213, line: 126, baseType: !473, size: 64, offset: 1216)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !5258, file: !213, line: 127, baseType: !473, size: 64, offset: 1280)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !5258, file: !213, line: 135, baseType: !473, size: 64, offset: 1344)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !5258, file: !213, line: 136, baseType: !473, size: 64, offset: 1408)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !5258, file: !213, line: 138, baseType: !5279, size: 128, offset: 1472)
!5279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !5280, line: 76, size: 128, elements: !5281)
!5280 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!5281 = !{!5282, !5283, !5284}
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !5279, file: !5280, line: 78, baseType: !3204, size: 64)
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !5279, file: !5280, line: 80, baseType: !14, size: 32, offset: 64)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5279, file: !5280, line: 81, baseType: !1323, offset: 96)
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !5258, file: !213, line: 139, baseType: !7, size: 32, offset: 1600)
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !5258, file: !213, line: 140, baseType: !212, size: 32, offset: 1632)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !5258, file: !213, line: 142, baseType: !884, offset: 1664)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !5258, file: !213, line: 143, baseType: !445, size: 128, offset: 1664)
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !5258, file: !213, line: 144, baseType: !3093, size: 704, offset: 1792)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !5258, file: !213, line: 146, baseType: !473, size: 64, offset: 2496)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !5258, file: !213, line: 148, baseType: !445, size: 128, offset: 2560)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !5244, file: !213, line: 184, baseType: !445, size: 128, offset: 3456)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !5244, file: !213, line: 190, baseType: !1255, size: 128, offset: 3584)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5244, file: !213, line: 192, baseType: !4760, size: 64, offset: 3712)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !5244, file: !213, line: 193, baseType: !5296, size: 512, offset: 3776)
!5296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 512, elements: !4302)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5244, file: !213, line: 194, baseType: !4760, size: 64, offset: 4288)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !5244, file: !213, line: 196, baseType: !2401, size: 320, offset: 4352)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !5224, file: !4344, line: 46, baseType: !7, size: 32, offset: 1088)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !5224, file: !4344, line: 48, baseType: !1109, size: 192, offset: 1152)
!5301 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !438, line: 150, baseType: !14)
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5212, file: !225, line: 1847, baseType: !5303, size: 64, offset: 128)
!5303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5304, size: 64)
!5304 = !DISubroutineType(types: !5305)
!5305 = !{null, !4348, !5301}
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !5212, file: !225, line: 1848, baseType: !5307, size: 64, offset: 192)
!5307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5308, size: 64)
!5308 = !DISubroutineType(types: !5309)
!5309 = !{!7, !5223, !4370, !780, !14}
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !5212, file: !225, line: 1849, baseType: !5311, size: 64, offset: 256)
!5311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5312, size: 64)
!5312 = !DISubroutineType(types: !5313)
!5313 = !{!7, !5223, !5301, !14, !473}
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !5212, file: !225, line: 1850, baseType: !5311, size: 64, offset: 320)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !5212, file: !225, line: 1851, baseType: !5316, size: 64, offset: 384)
!5316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5317, size: 64)
!5317 = !DISubroutineType(types: !5318)
!5318 = !{!14, !4348, !14}
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !5212, file: !225, line: 1853, baseType: !5320, size: 64, offset: 448)
!5320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5321, size: 64)
!5321 = !DISubroutineType(types: !5322)
!5322 = !{null, !4348}
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !5212, file: !225, line: 1854, baseType: !5324, size: 64, offset: 512)
!5324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5325, size: 64)
!5325 = !DISubroutineType(types: !5326)
!5326 = !{!7, !4348}
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !5212, file: !225, line: 1855, baseType: !5328, size: 64, offset: 576)
!5328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5329, size: 64)
!5329 = !DISubroutineType(types: !5330)
!5330 = !{!7, !5223, !5331}
!5331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5332, size: 64)
!5332 = !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !243, line: 51, flags: DIFlagFwdDecl)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !5212, file: !225, line: 1857, baseType: !5334, size: 64, offset: 640)
!5334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5335, size: 64)
!5335 = !DISubroutineType(types: !5336)
!5336 = !{null, !5223, !473}
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !5212, file: !225, line: 1858, baseType: !5338, size: 64, offset: 704)
!5338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5339, size: 64)
!5339 = !DISubroutineType(types: !5340)
!5340 = !{!7, !4348, !4370, !14, !5341, !726}
!5341 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !225, line: 354, baseType: !5342)
!5342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5343, size: 64)
!5343 = !DISubroutineType(types: !5344)
!5344 = !{!7, !5345, !14, !726}
!5345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5346, size: 64)
!5346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !5347, line: 106, size: 512, elements: !5348)
!5347 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!5348 = !{!5349, !5350, !5351, !5352, !5353, !5354, !5355, !5356, !5358, !5359}
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5346, file: !5347, line: 107, baseType: !494, size: 64)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5346, file: !5347, line: 108, baseType: !494, size: 64, offset: 64)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !5346, file: !5347, line: 109, baseType: !494, size: 64, offset: 128)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5346, file: !5347, line: 110, baseType: !1553, size: 8, offset: 192)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !5346, file: !5347, line: 111, baseType: !1553, size: 8, offset: 200)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !5346, file: !5347, line: 112, baseType: !1553, size: 8, offset: 208)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !5346, file: !5347, line: 113, baseType: !1553, size: 8, offset: 216)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !5346, file: !5347, line: 114, baseType: !5357, size: 32, offset: 224)
!5357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1553, size: 32, elements: !1357)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !5346, file: !5347, line: 115, baseType: !494, size: 64, offset: 256)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5346, file: !5347, line: 116, baseType: !5360, size: 192, offset: 320)
!5360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1553, size: 192, elements: !5361)
!5361 = !{!5362}
!5362 = !DISubrange(count: 24)
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !5212, file: !225, line: 1860, baseType: !5364, size: 64, offset: 768)
!5364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5365, size: 64)
!5365 = !DISubroutineType(types: !5366)
!5366 = !{!733, !4348, !4780}
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5212, file: !225, line: 1861, baseType: !1007, size: 64, offset: 832)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !5212, file: !225, line: 1862, baseType: !5369, size: 64, offset: 896)
!5369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5370, size: 64)
!5370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5371)
!5371 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !225, line: 41, flags: DIFlagFwdDecl)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !4349, file: !4350, line: 190, baseType: !5373, size: 64, offset: 7104)
!5373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5374, size: 64)
!5374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !225, line: 399, size: 14464, elements: !5375)
!5375 = !{!5376, !5506, !5628, !5629, !5632, !5635, !5639, !5640, !5641, !5643, !5644, !5645, !5646, !5647, !5648, !5649, !5650, !5651, !5652, !5653, !5689, !5690, !5691, !5692, !5693, !5694, !5695, !5696, !5697, !5700, !5709, !5710, !5711, !5712, !5713, !5743, !5744, !5745, !5746, !5747, !5748, !5751, !5752, !5753, !5754, !5755, !5756, !5757, !5758, !5759, !5821, !5822, !5823, !5824, !5827, !5828, !5861, !5862, !5863, !5864}
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !5374, file: !225, line: 400, baseType: !5377, size: 64)
!5377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5378, size: 64)
!5378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !225, line: 130, size: 2176, elements: !5379)
!5379 = !{!5380, !5381, !5384, !5387, !5388, !5390, !5391, !5392, !5393, !5394, !5395, !5396, !5397, !5402, !5409, !5458, !5459, !5460, !5461, !5462, !5463, !5464, !5465, !5466, !5467, !5468, !5469, !5470, !5471, !5504, !5505}
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !5378, file: !225, line: 131, baseType: !5373, size: 64)
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !5378, file: !225, line: 132, baseType: !5382, size: 64, offset: 64)
!5382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5383, size: 64)
!5383 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !225, line: 132, flags: DIFlagFwdDecl)
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !5378, file: !225, line: 133, baseType: !5385, size: 64, offset: 128)
!5385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5386, size: 64)
!5386 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !225, line: 133, flags: DIFlagFwdDecl)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !5378, file: !225, line: 135, baseType: !14, size: 32, offset: 192)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !5378, file: !225, line: 136, baseType: !5389, size: 32, offset: 224)
!5389 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !225, line: 66, baseType: !624)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !5378, file: !225, line: 138, baseType: !7, size: 32, offset: 256)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !5378, file: !225, line: 139, baseType: !7, size: 32, offset: 288)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !5378, file: !225, line: 142, baseType: !14, size: 32, offset: 320)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !5378, file: !225, line: 143, baseType: !4370, size: 64, offset: 384)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !5378, file: !225, line: 145, baseType: !4342, size: 64, offset: 448)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !5378, file: !225, line: 146, baseType: !4342, size: 64, offset: 512)
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !5378, file: !225, line: 148, baseType: !445, size: 128, offset: 576)
!5397 = !DIDerivedType(tag: DW_TAG_member, scope: !5378, file: !225, line: 157, baseType: !5398, size: 128, offset: 704)
!5398 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5378, file: !225, line: 157, size: 128, elements: !5399)
!5399 = !{!5400, !5401}
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !5398, file: !225, line: 158, baseType: !437, size: 128)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !5398, file: !225, line: 159, baseType: !445, size: 128)
!5402 = !DIDerivedType(tag: DW_TAG_member, scope: !5378, file: !225, line: 167, baseType: !5403, size: 192, offset: 832)
!5403 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5378, file: !225, line: 167, size: 192, elements: !5404)
!5404 = !{!5405, !5406, !5407, !5408}
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !5403, file: !225, line: 168, baseType: !594, size: 192, align: 64)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !5403, file: !225, line: 169, baseType: !776, size: 128)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !5403, file: !225, line: 170, baseType: !726, size: 64)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !5403, file: !225, line: 171, baseType: !7, size: 32)
!5409 = !DIDerivedType(tag: DW_TAG_member, scope: !5378, file: !225, line: 180, baseType: !5410, size: 256, offset: 1024)
!5410 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5378, file: !225, line: 180, size: 256, elements: !5411)
!5411 = !{!5412, !5447}
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !5410, file: !225, line: 184, baseType: !5413, size: 192)
!5413 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5410, file: !225, line: 181, size: 192, elements: !5414)
!5414 = !{!5415, !5445}
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !5413, file: !225, line: 182, baseType: !5416, size: 64)
!5416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5417, size: 64)
!5417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !5418, line: 73, size: 448, elements: !5419)
!5418 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!5419 = !{!5420, !5421, !5434, !5439, !5444}
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !5417, file: !5418, line: 74, baseType: !5373, size: 64)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !5417, file: !5418, line: 75, baseType: !5422, size: 64, offset: 64)
!5422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5423, size: 64)
!5423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !5418, line: 99, size: 704, elements: !5424)
!5424 = !{!5425, !5426, !5427, !5428, !5429, !5430, !5431, !5432, !5433}
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !5423, file: !5418, line: 100, baseType: !532, size: 64)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !5423, file: !5418, line: 101, baseType: !544, size: 32, offset: 64)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !5423, file: !5418, line: 102, baseType: !544, size: 32, offset: 96)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5423, file: !5418, line: 105, baseType: !884, offset: 128)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !5423, file: !5418, line: 107, baseType: !633, size: 16, offset: 128)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !5423, file: !5418, line: 109, baseType: !2139, size: 128, offset: 192)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !5423, file: !5418, line: 110, baseType: !5416, size: 64, offset: 320)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !5423, file: !5418, line: 111, baseType: !1012, size: 64, offset: 384)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !5423, file: !5418, line: 113, baseType: !1961, size: 256, offset: 448)
!5434 = !DIDerivedType(tag: DW_TAG_member, scope: !5417, file: !5418, line: 83, baseType: !5435, size: 128, offset: 128)
!5435 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5417, file: !5418, line: 83, size: 128, elements: !5436)
!5436 = !{!5437, !5438}
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !5435, file: !5418, line: 84, baseType: !445, size: 128)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !5435, file: !5418, line: 85, baseType: !2432, size: 64)
!5439 = !DIDerivedType(tag: DW_TAG_member, scope: !5417, file: !5418, line: 87, baseType: !5440, size: 128, offset: 256)
!5440 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5417, file: !5418, line: 87, size: 128, elements: !5441)
!5441 = !{!5442, !5443}
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !5440, file: !5418, line: 88, baseType: !437, size: 128)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !5440, file: !5418, line: 89, baseType: !460, size: 128, align: 64)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5417, file: !5418, line: 92, baseType: !14, size: 32, offset: 384)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !5413, file: !225, line: 183, baseType: !5446, size: 128, offset: 64)
!5446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !726, size: 128, elements: !634)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !5410, file: !225, line: 190, baseType: !5448, size: 256)
!5448 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5410, file: !225, line: 186, size: 256, elements: !5449)
!5449 = !{!5450, !5451, !5452}
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !5448, file: !225, line: 187, baseType: !14, size: 32)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5448, file: !225, line: 188, baseType: !445, size: 128, offset: 64)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !5448, file: !225, line: 189, baseType: !5453, size: 64, offset: 192)
!5453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5454, size: 64)
!5454 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !225, line: 62, baseType: !5455)
!5455 = !DISubroutineType(types: !5456)
!5456 = !{null, !5377, !5457}
!5457 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !4344, line: 58, baseType: !1552)
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !5378, file: !225, line: 193, baseType: !4348, size: 64, offset: 1280)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !5378, file: !225, line: 194, baseType: !4366, size: 64, offset: 1344)
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !5378, file: !225, line: 200, baseType: !492, size: 64, offset: 1408)
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !5378, file: !225, line: 202, baseType: !492, size: 64, offset: 1472)
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !5378, file: !225, line: 212, baseType: !633, size: 16, offset: 1536)
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !5378, file: !225, line: 218, baseType: !633, size: 16, offset: 1552)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !5378, file: !225, line: 221, baseType: !633, size: 16, offset: 1568)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !5378, file: !225, line: 229, baseType: !633, size: 16, offset: 1584)
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !5378, file: !225, line: 230, baseType: !633, size: 16, offset: 1600)
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5378, file: !225, line: 232, baseType: !224, size: 32, offset: 1632)
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !5378, file: !225, line: 233, baseType: !1426, size: 32, offset: 1664)
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5378, file: !225, line: 235, baseType: !14, size: 32, offset: 1696)
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !5378, file: !225, line: 236, baseType: !473, size: 64, offset: 1728)
!5471 = !DIDerivedType(tag: DW_TAG_member, scope: !5378, file: !225, line: 238, baseType: !5472, size: 256, offset: 1792)
!5472 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5378, file: !225, line: 238, size: 256, elements: !5473)
!5473 = !{!5474, !5503}
!5474 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !5472, file: !225, line: 239, baseType: !5475, size: 256)
!5475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !5476, line: 23, size: 256, elements: !5477)
!5476 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!5477 = !{!5478, !5500, !5502}
!5478 = !DIDerivedType(tag: DW_TAG_member, scope: !5475, file: !5476, line: 24, baseType: !5479, size: 128)
!5479 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5475, file: !5476, line: 24, size: 128, elements: !5480)
!5480 = !{!5481, !5493}
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5479, file: !5476, line: 25, baseType: !5482, size: 128)
!5482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !5483, line: 58, size: 128, elements: !5484)
!5483 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!5484 = !{!5485, !5486, !5491, !5492}
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !5482, file: !5483, line: 59, baseType: !1147, size: 64)
!5486 = !DIDerivedType(tag: DW_TAG_member, scope: !5482, file: !5483, line: 60, baseType: !5487, size: 32, offset: 64)
!5487 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5482, file: !5483, line: 60, size: 32, elements: !5488)
!5488 = !{!5489, !5490}
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !5487, file: !5483, line: 61, baseType: !14, size: 32)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !5487, file: !5483, line: 62, baseType: !544, size: 32)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !5482, file: !5483, line: 65, baseType: !1193, size: 16, offset: 96)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !5482, file: !5483, line: 65, baseType: !1193, size: 16, offset: 112)
!5493 = !DIDerivedType(tag: DW_TAG_member, scope: !5479, file: !5476, line: 26, baseType: !5494, size: 128)
!5494 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5479, file: !5476, line: 26, size: 128, elements: !5495)
!5495 = !{!5496, !5497, !5498, !5499}
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !5494, file: !5476, line: 27, baseType: !1147, size: 64)
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5494, file: !5476, line: 28, baseType: !14, size: 32, offset: 64)
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !5494, file: !5476, line: 30, baseType: !1193, size: 16, offset: 96)
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !5494, file: !5476, line: 30, baseType: !1193, size: 16, offset: 112)
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5475, file: !5476, line: 34, baseType: !5501, size: 64, offset: 128)
!5501 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !5476, line: 17, baseType: !3885)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5475, file: !5476, line: 35, baseType: !726, size: 64, offset: 192)
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !5472, file: !225, line: 240, baseType: !492, size: 64)
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !5378, file: !225, line: 246, baseType: !5453, size: 64, offset: 2048)
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !5378, file: !225, line: 247, baseType: !726, size: 64, offset: 2112)
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !5374, file: !225, line: 401, baseType: !5507, size: 64, offset: 64)
!5507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5508, size: 64)
!5508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !231, line: 101, size: 4992, elements: !5509)
!5509 = !{!5510, !5622, !5623, !5624, !5625, !5626}
!5510 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5508, file: !231, line: 103, baseType: !5511, size: 64)
!5511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5512, size: 64)
!5512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !231, line: 66, size: 2240, elements: !5513)
!5513 = !{!5514, !5515, !5597, !5598, !5599, !5612, !5613, !5614, !5616, !5617, !5621}
!5514 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !5512, file: !231, line: 69, baseType: !2432, size: 64)
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5512, file: !231, line: 72, baseType: !5516, size: 1408, offset: 64)
!5516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !231, line: 29, size: 1408, elements: !5517)
!5517 = !{!5518, !5522, !5526, !5530, !5534, !5538, !5542, !5546, !5551, !5555, !5559, !5565, !5569, !5570, !5574, !5578, !5582, !5586, !5587, !5591, !5592, !5596}
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !5516, file: !231, line: 30, baseType: !5519, size: 64)
!5519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5520, size: 64)
!5520 = !DISubroutineType(types: !5521)
!5521 = !{!7, !5373, !5511}
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !5516, file: !231, line: 31, baseType: !5523, size: 64, offset: 64)
!5523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5524, size: 64)
!5524 = !DISubroutineType(types: !5525)
!5525 = !{null, !5507}
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !5516, file: !231, line: 32, baseType: !5527, size: 64, offset: 128)
!5527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5528, size: 64)
!5528 = !DISubroutineType(types: !5529)
!5529 = !{!7, !5385, !14}
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !5516, file: !231, line: 33, baseType: !5531, size: 64, offset: 192)
!5531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5532, size: 64)
!5532 = !DISubroutineType(types: !5533)
!5533 = !{null, !5385, !14}
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !5516, file: !231, line: 34, baseType: !5535, size: 64, offset: 256)
!5535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5536, size: 64)
!5536 = !DISubroutineType(types: !5537)
!5537 = !{null, !5385}
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !5516, file: !231, line: 36, baseType: !5539, size: 64, offset: 320)
!5539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5540, size: 64)
!5540 = !DISubroutineType(types: !5541)
!5541 = !{!696, !5373, !5377, !4342}
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !5516, file: !231, line: 37, baseType: !5543, size: 64, offset: 384)
!5543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5544, size: 64)
!5544 = !DISubroutineType(types: !5545)
!5545 = !{!696, !5385, !4342, !14}
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !5516, file: !231, line: 38, baseType: !5547, size: 64, offset: 448)
!5547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5548, size: 64)
!5548 = !DISubroutineType(types: !5549)
!5549 = !{!7, !5373, !5550, !4342}
!5550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5377, size: 64)
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !5516, file: !231, line: 39, baseType: !5552, size: 64, offset: 512)
!5552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5553, size: 64)
!5553 = !DISubroutineType(types: !5554)
!5554 = !{null, !5373, !5377, !230}
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !5516, file: !231, line: 40, baseType: !5556, size: 64, offset: 576)
!5556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5557, size: 64)
!5557 = !DISubroutineType(types: !5558)
!5558 = !{null, !5373, !5377, !5377}
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !5516, file: !231, line: 41, baseType: !5560, size: 64, offset: 640)
!5560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5561, size: 64)
!5561 = !DISubroutineType(types: !5562)
!5562 = !{null, !14, !5563}
!5563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5564, size: 64)
!5564 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !231, line: 26, flags: DIFlagFwdDecl)
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !5516, file: !231, line: 42, baseType: !5566, size: 64, offset: 704)
!5566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5567, size: 64)
!5567 = !DISubroutineType(types: !5568)
!5568 = !{null, !5377}
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !5516, file: !231, line: 43, baseType: !5566, size: 64, offset: 768)
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !5516, file: !231, line: 44, baseType: !5571, size: 64, offset: 832)
!5571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5572, size: 64)
!5572 = !DISubroutineType(types: !5573)
!5573 = !{null, !5385, !448, !696}
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !5516, file: !231, line: 45, baseType: !5575, size: 64, offset: 896)
!5575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5576, size: 64)
!5576 = !DISubroutineType(types: !5577)
!5577 = !{!5377, !5385}
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !5516, file: !231, line: 46, baseType: !5579, size: 64, offset: 960)
!5579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5580, size: 64)
!5580 = !DISubroutineType(types: !5581)
!5581 = !{!696, !5385}
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !5516, file: !231, line: 47, baseType: !5583, size: 64, offset: 1024)
!5583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5584, size: 64)
!5584 = !DISubroutineType(types: !5585)
!5585 = !{null, !5377, !492}
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !5516, file: !231, line: 48, baseType: !5566, size: 64, offset: 1088)
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !5516, file: !231, line: 49, baseType: !5588, size: 64, offset: 1152)
!5588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5589, size: 64)
!5589 = !DISubroutineType(types: !5590)
!5590 = !{!5377, !5373, !5377}
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !5516, file: !231, line: 50, baseType: !5588, size: 64, offset: 1216)
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !5516, file: !231, line: 51, baseType: !5593, size: 64, offset: 1280)
!5593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5594, size: 64)
!5594 = !DISubroutineType(types: !5595)
!5595 = !{null, !5416}
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !5516, file: !231, line: 52, baseType: !5593, size: 64, offset: 1344)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !5512, file: !231, line: 74, baseType: !750, size: 64, offset: 1472)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !5512, file: !231, line: 75, baseType: !750, size: 64, offset: 1536)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !5512, file: !231, line: 76, baseType: !5600, size: 64, offset: 1600)
!5600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5601, size: 64)
!5601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !231, line: 57, size: 256, elements: !5602)
!5602 = !{!5603, !5604, !5608}
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5601, file: !231, line: 58, baseType: !4467, size: 128)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !5601, file: !231, line: 59, baseType: !5605, size: 64, offset: 128)
!5605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5606, size: 64)
!5606 = !DISubroutineType(types: !5607)
!5607 = !{!1170, !5507, !733}
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !5601, file: !231, line: 60, baseType: !5609, size: 64, offset: 192)
!5609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5610, size: 64)
!5610 = !DISubroutineType(types: !5611)
!5611 = !{!1170, !5507, !453, !750}
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !5512, file: !231, line: 77, baseType: !453, size: 64, offset: 1664)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !5512, file: !231, line: 78, baseType: !453, size: 64, offset: 1728)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !5512, file: !231, line: 79, baseType: !5615, size: 32, offset: 1792)
!5615 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14)
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !5512, file: !231, line: 80, baseType: !1007, size: 64, offset: 1856)
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !5512, file: !231, line: 87, baseType: !5618, size: 176, offset: 1920)
!5618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 176, elements: !5619)
!5619 = !{!5620}
!5620 = !DISubrange(count: 22)
!5621 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5512, file: !231, line: 88, baseType: !445, size: 128, offset: 2112)
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !5508, file: !231, line: 104, baseType: !726, size: 64, offset: 64)
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5508, file: !231, line: 105, baseType: !4401, size: 512, offset: 128)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !5508, file: !231, line: 106, baseType: !1109, size: 192, offset: 640)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !5508, file: !231, line: 107, baseType: !14, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !5508, file: !231, line: 108, baseType: !5627, size: 4096, offset: 896)
!5627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 4096, elements: !4302)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !5374, file: !225, line: 403, baseType: !4377, size: 128, offset: 128)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !5374, file: !225, line: 405, baseType: !5630, size: 64, offset: 256)
!5630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5631, size: 64)
!5631 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !225, line: 43, flags: DIFlagFwdDecl)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !5374, file: !225, line: 406, baseType: !5633, size: 64, offset: 320)
!5633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5634, size: 64)
!5634 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !225, line: 42, flags: DIFlagFwdDecl)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !5374, file: !225, line: 408, baseType: !5636, size: 64, offset: 384)
!5636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5637, size: 64)
!5637 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5638)
!5638 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !225, line: 408, flags: DIFlagFwdDecl)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !5374, file: !225, line: 411, baseType: !5382, size: 64, offset: 448)
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !5374, file: !225, line: 413, baseType: !14, size: 32, offset: 512)
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !5374, file: !225, line: 416, baseType: !5642, size: 64, offset: 576)
!5642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5385, size: 64)
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !5374, file: !225, line: 417, baseType: !14, size: 32, offset: 640)
!5644 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !5374, file: !225, line: 419, baseType: !5243, size: 64, offset: 704)
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !5374, file: !225, line: 425, baseType: !726, size: 64, offset: 768)
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !5374, file: !225, line: 430, baseType: !473, size: 64, offset: 832)
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !5374, file: !225, line: 436, baseType: !544, size: 32, offset: 896)
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5374, file: !225, line: 442, baseType: !7, size: 32, offset: 928)
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !5374, file: !225, line: 447, baseType: !2144, size: 32, offset: 960)
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !5374, file: !225, line: 449, baseType: !884, offset: 992)
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5374, file: !225, line: 454, baseType: !4401, size: 512, offset: 1024)
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !5374, file: !225, line: 459, baseType: !4407, size: 64, offset: 1536)
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !5374, file: !225, line: 462, baseType: !5654, size: 128, offset: 1600)
!5654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !4350, line: 159, size: 128, elements: !5655)
!5655 = !{!5656, !5685, !5686, !5687, !5688}
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !5654, file: !4350, line: 160, baseType: !5657, size: 64)
!5657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5658, size: 64)
!5658 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5659)
!5659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !225, line: 1664, size: 320, elements: !5660)
!5660 = !{!5661, !5675, !5676, !5679, !5684}
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !5659, file: !225, line: 1665, baseType: !5662, size: 64)
!5662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5663, size: 64)
!5663 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !225, line: 1660, baseType: !5664)
!5664 = !DISubroutineType(types: !5665)
!5665 = !{!5457, !5666}
!5666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5667, size: 64)
!5667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !225, line: 1651, size: 320, elements: !5668)
!5668 = !{!5669, !5670, !5671, !5672, !5673, !5674}
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !5667, file: !225, line: 1652, baseType: !726, size: 64)
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !5667, file: !225, line: 1653, baseType: !726, size: 64, offset: 64)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !5667, file: !225, line: 1654, baseType: !4370, size: 64, offset: 128)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !5667, file: !225, line: 1655, baseType: !14, size: 32, offset: 192)
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !5667, file: !225, line: 1656, baseType: !633, size: 16, offset: 224)
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !5667, file: !225, line: 1657, baseType: !453, size: 64, offset: 256)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !5659, file: !225, line: 1666, baseType: !5662, size: 64, offset: 64)
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !5659, file: !225, line: 1667, baseType: !5677, size: 64, offset: 128)
!5677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5678, size: 64)
!5678 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !225, line: 1661, baseType: !5567)
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !5659, file: !225, line: 1668, baseType: !5680, size: 64, offset: 192)
!5680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5681, size: 64)
!5681 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !225, line: 1662, baseType: !5682)
!5682 = !DISubroutineType(types: !5683)
!5683 = !{null, !5377, !14}
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5659, file: !225, line: 1669, baseType: !453, size: 64, offset: 256)
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5654, file: !4350, line: 161, baseType: !650, size: 8, offset: 64)
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !5654, file: !4350, line: 162, baseType: !650, size: 8, offset: 72)
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !5654, file: !4350, line: 163, baseType: !650, size: 8, offset: 80)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !5654, file: !4350, line: 164, baseType: !650, size: 8, offset: 88)
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5374, file: !225, line: 466, baseType: !4760, size: 64, offset: 1728)
!5690 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !5374, file: !225, line: 467, baseType: !206, size: 32, offset: 1792)
!5691 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !5374, file: !225, line: 468, baseType: !14, size: 32, offset: 1824)
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !5374, file: !225, line: 474, baseType: !473, size: 64, offset: 1856)
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !5374, file: !225, line: 476, baseType: !14, size: 32, offset: 1920)
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !5374, file: !225, line: 477, baseType: !14, size: 32, offset: 1952)
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !5374, file: !225, line: 484, baseType: !14, size: 32, offset: 1984)
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !5374, file: !225, line: 485, baseType: !7, size: 32, offset: 2016)
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !5374, file: !225, line: 487, baseType: !5698, size: 64, offset: 2048)
!5698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5699, size: 64)
!5699 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !225, line: 44, flags: DIFlagFwdDecl)
!5700 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !5374, file: !225, line: 488, baseType: !5701, size: 5120, offset: 2112)
!5701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5702, size: 5120, elements: !430)
!5702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !4344, line: 540, size: 320, elements: !5703)
!5703 = !{!5704, !5705, !5706, !5707, !5708}
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !5702, file: !4344, line: 541, baseType: !492, size: 64)
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !5702, file: !4344, line: 542, baseType: !492, size: 64, offset: 64)
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5702, file: !4344, line: 543, baseType: !492, size: 64, offset: 128)
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !5702, file: !4344, line: 544, baseType: !862, size: 32, offset: 192)
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !5702, file: !4344, line: 545, baseType: !492, size: 64, offset: 256)
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5374, file: !225, line: 490, baseType: !2401, size: 320, offset: 7232)
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !5374, file: !225, line: 491, baseType: !1961, size: 256, offset: 7552)
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !5374, file: !225, line: 493, baseType: !544, size: 32, offset: 7808)
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !5374, file: !225, line: 495, baseType: !445, size: 128, offset: 7872)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !5374, file: !225, line: 502, baseType: !5714, size: 896, offset: 8000)
!5714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !225, line: 321, size: 896, elements: !5715)
!5715 = !{!5716, !5717, !5718, !5719, !5720, !5721, !5722, !5723, !5724, !5725, !5726, !5727, !5728, !5729, !5730, !5731, !5732, !5733, !5734, !5735, !5736, !5737, !5738, !5739, !5740, !5741, !5742}
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !5714, file: !225, line: 322, baseType: !473, size: 64)
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !5714, file: !225, line: 323, baseType: !473, size: 64, offset: 64)
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !5714, file: !225, line: 324, baseType: !473, size: 64, offset: 128)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !5714, file: !225, line: 326, baseType: !14, size: 32, offset: 192)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !5714, file: !225, line: 327, baseType: !14, size: 32, offset: 224)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !5714, file: !225, line: 328, baseType: !14, size: 32, offset: 256)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !5714, file: !225, line: 329, baseType: !14, size: 32, offset: 288)
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !5714, file: !225, line: 330, baseType: !14, size: 32, offset: 320)
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !5714, file: !225, line: 331, baseType: !14, size: 32, offset: 352)
!5725 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !5714, file: !225, line: 332, baseType: !14, size: 32, offset: 384)
!5726 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !5714, file: !225, line: 333, baseType: !14, size: 32, offset: 416)
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !5714, file: !225, line: 334, baseType: !14, size: 32, offset: 448)
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !5714, file: !225, line: 335, baseType: !14, size: 32, offset: 480)
!5729 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !5714, file: !225, line: 336, baseType: !14, size: 32, offset: 512)
!5730 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !5714, file: !225, line: 337, baseType: !14, size: 32, offset: 544)
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !5714, file: !225, line: 338, baseType: !14, size: 32, offset: 576)
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !5714, file: !225, line: 339, baseType: !14, size: 32, offset: 608)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !5714, file: !225, line: 340, baseType: !14, size: 32, offset: 640)
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !5714, file: !225, line: 341, baseType: !14, size: 32, offset: 672)
!5735 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !5714, file: !225, line: 342, baseType: !14, size: 32, offset: 704)
!5736 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !5714, file: !225, line: 344, baseType: !633, size: 16, offset: 736)
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !5714, file: !225, line: 345, baseType: !633, size: 16, offset: 752)
!5738 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !5714, file: !225, line: 346, baseType: !633, size: 16, offset: 768)
!5739 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !5714, file: !225, line: 348, baseType: !650, size: 8, offset: 784)
!5740 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !5714, file: !225, line: 349, baseType: !650, size: 8, offset: 792)
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !5714, file: !225, line: 350, baseType: !650, size: 8, offset: 800)
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !5714, file: !225, line: 351, baseType: !237, size: 32, offset: 832)
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !5374, file: !225, line: 504, baseType: !14, size: 32, offset: 8896)
!5744 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !5374, file: !225, line: 534, baseType: !14, size: 32, offset: 8928)
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !5374, file: !225, line: 535, baseType: !14, size: 32, offset: 8960)
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5374, file: !225, line: 536, baseType: !7, size: 32, offset: 8992)
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !5374, file: !225, line: 537, baseType: !1109, size: 192, offset: 9024)
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !5374, file: !225, line: 544, baseType: !5749, size: 64, offset: 9216)
!5749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5750, size: 64)
!5750 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !225, line: 40, flags: DIFlagFwdDecl)
!5751 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !5374, file: !225, line: 546, baseType: !445, size: 128, offset: 9280)
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !5374, file: !225, line: 547, baseType: !884, offset: 9408)
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !5374, file: !225, line: 548, baseType: !3093, size: 704, offset: 9408)
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !5374, file: !225, line: 550, baseType: !1109, size: 192, offset: 10112)
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !5374, file: !225, line: 551, baseType: !1109, size: 192, offset: 10304)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !5374, file: !225, line: 557, baseType: !445, size: 128, offset: 10496)
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !5374, file: !225, line: 558, baseType: !884, offset: 10624)
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !5374, file: !225, line: 560, baseType: !7, size: 32, offset: 10624)
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !5374, file: !225, line: 563, baseType: !5760, size: 256, offset: 10688)
!5760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !5761, line: 18, size: 256, elements: !5762)
!5761 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!5762 = !{!5763, !5764, !5765, !5766}
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !5760, file: !5761, line: 19, baseType: !4760, size: 64)
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !5760, file: !5761, line: 20, baseType: !7, size: 32, offset: 64)
!5765 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !5760, file: !5761, line: 21, baseType: !5373, size: 64, offset: 128)
!5766 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5760, file: !5761, line: 22, baseType: !5767, size: 64, offset: 192)
!5767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5768, size: 64)
!5768 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5769)
!5769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !5761, line: 10, size: 256, elements: !5770)
!5770 = !{!5771, !5812, !5816, !5820}
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !5769, file: !5761, line: 11, baseType: !5772, size: 64)
!5772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5773, size: 64)
!5773 = !DISubroutineType(types: !5774)
!5774 = !{!7, !5775}
!5775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5776, size: 64)
!5776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !5777, line: 22, size: 1280, elements: !5778)
!5777 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!5778 = !{!5779, !5780, !5781, !5782, !5783, !5784, !5785, !5786, !5787, !5788, !5789, !5790, !5791, !5792, !5793, !5794, !5795, !5796, !5797, !5798, !5799, !5800, !5801, !5802, !5803, !5804, !5805, !5806, !5807, !5808, !5809, !5810, !5811}
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !5776, file: !5777, line: 23, baseType: !1645, size: 32)
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !5776, file: !5777, line: 24, baseType: !624, size: 32, offset: 32)
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !5776, file: !5777, line: 25, baseType: !624, size: 32, offset: 64)
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !5776, file: !5777, line: 28, baseType: !624, size: 32, offset: 96)
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !5776, file: !5777, line: 29, baseType: !494, size: 64, offset: 128)
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !5776, file: !5777, line: 30, baseType: !494, size: 64, offset: 192)
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !5776, file: !5777, line: 31, baseType: !624, size: 32, offset: 256)
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !5776, file: !5777, line: 32, baseType: !624, size: 32, offset: 288)
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !5776, file: !5777, line: 33, baseType: !624, size: 32, offset: 320)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !5776, file: !5777, line: 34, baseType: !624, size: 32, offset: 352)
!5789 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !5776, file: !5777, line: 35, baseType: !494, size: 64, offset: 384)
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !5776, file: !5777, line: 38, baseType: !624, size: 32, offset: 448)
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !5776, file: !5777, line: 40, baseType: !624, size: 32, offset: 480)
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !5776, file: !5777, line: 41, baseType: !624, size: 32, offset: 512)
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !5776, file: !5777, line: 42, baseType: !624, size: 32, offset: 544)
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !5776, file: !5777, line: 43, baseType: !494, size: 64, offset: 576)
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !5776, file: !5777, line: 44, baseType: !494, size: 64, offset: 640)
!5796 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5776, file: !5777, line: 46, baseType: !624, size: 32, offset: 704)
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5776, file: !5777, line: 47, baseType: !624, size: 32, offset: 736)
!5798 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !5776, file: !5777, line: 48, baseType: !494, size: 64, offset: 768)
!5799 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !5776, file: !5777, line: 49, baseType: !624, size: 32, offset: 832)
!5800 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !5776, file: !5777, line: 51, baseType: !624, size: 32, offset: 864)
!5801 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !5776, file: !5777, line: 52, baseType: !624, size: 32, offset: 896)
!5802 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !5776, file: !5777, line: 53, baseType: !624, size: 32, offset: 928)
!5803 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !5776, file: !5777, line: 54, baseType: !624, size: 32, offset: 960)
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5776, file: !5777, line: 55, baseType: !624, size: 32, offset: 992)
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !5776, file: !5777, line: 56, baseType: !624, size: 32, offset: 1024)
!5806 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !5776, file: !5777, line: 57, baseType: !624, size: 32, offset: 1056)
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !5776, file: !5777, line: 58, baseType: !1645, size: 32, offset: 1088)
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !5776, file: !5777, line: 59, baseType: !1645, size: 32, offset: 1120)
!5809 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !5776, file: !5777, line: 60, baseType: !494, size: 64, offset: 1152)
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !5776, file: !5777, line: 61, baseType: !624, size: 32, offset: 1216)
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !5776, file: !5777, line: 63, baseType: !624, size: 32, offset: 1248)
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !5769, file: !5761, line: 12, baseType: !5813, size: 64, offset: 64)
!5813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5814, size: 64)
!5814 = !DISubroutineType(types: !5815)
!5815 = !{!7, !5377, !5775, !5301}
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !5769, file: !5761, line: 14, baseType: !5817, size: 64, offset: 128)
!5817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5818, size: 64)
!5818 = !DISubroutineType(types: !5819)
!5819 = !{!7, !5377, !5775}
!5820 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !5769, file: !5761, line: 15, baseType: !5566, size: 64, offset: 192)
!5821 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !5374, file: !225, line: 570, baseType: !460, size: 128, align: 64, offset: 10944)
!5822 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !5374, file: !225, line: 571, baseType: !1255, size: 128, offset: 11072)
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !5374, file: !225, line: 576, baseType: !1109, size: 192, offset: 11200)
!5824 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !5374, file: !225, line: 578, baseType: !5825, size: 64, offset: 11392)
!5825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5826, size: 64)
!5826 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !225, line: 578, flags: DIFlagFwdDecl)
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !5374, file: !225, line: 579, baseType: !445, size: 128, offset: 11456)
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !5374, file: !225, line: 580, baseType: !5829, size: 2368, offset: 11584)
!5829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !4339, line: 682, size: 2368, elements: !5830)
!5830 = !{!5831, !5832, !5833, !5854, !5855, !5856, !5857, !5858, !5859, !5860}
!5831 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !5829, file: !4339, line: 683, baseType: !2432, size: 64)
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !5829, file: !4339, line: 684, baseType: !14, size: 32, offset: 64)
!5833 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !5829, file: !4339, line: 686, baseType: !5834, size: 448, offset: 128)
!5834 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !5835, line: 26, baseType: !5836)
!5835 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!5836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !5835, line: 16, size: 448, elements: !5837)
!5837 = !{!5838, !5839, !5840, !5841, !5842, !5843, !5848, !5853}
!5838 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5836, file: !5835, line: 17, baseType: !884)
!5839 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !5836, file: !5835, line: 18, baseType: !7, size: 32)
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !5836, file: !5835, line: 19, baseType: !7, size: 32, offset: 32)
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !5836, file: !5835, line: 20, baseType: !4075, size: 64, offset: 64)
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !5836, file: !5835, line: 22, baseType: !726, size: 64, offset: 128)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !5836, file: !5835, line: 23, baseType: !5844, size: 64, offset: 192)
!5844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5845, size: 64)
!5845 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !5835, line: 13, baseType: !5846)
!5846 = !DISubroutineType(types: !5847)
!5847 = !{!726, !2144, !726}
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5836, file: !5835, line: 24, baseType: !5849, size: 64, offset: 256)
!5849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5850, size: 64)
!5850 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !5835, line: 14, baseType: !5851)
!5851 = !DISubroutineType(types: !5852)
!5852 = !{null, !726, !726}
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !5836, file: !5835, line: 25, baseType: !1255, size: 128, offset: 320)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !5829, file: !4339, line: 687, baseType: !5834, size: 448, offset: 576)
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !5829, file: !4339, line: 689, baseType: !5834, size: 448, offset: 1024)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !5829, file: !4339, line: 690, baseType: !5834, size: 448, offset: 1472)
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !5829, file: !4339, line: 697, baseType: !884, offset: 1920)
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !5829, file: !4339, line: 698, baseType: !4338, size: 128, offset: 1920)
!5859 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !5829, file: !4339, line: 699, baseType: !1961, size: 256, offset: 2048)
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !5829, file: !4339, line: 700, baseType: !3098, size: 64, offset: 2304)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !5374, file: !225, line: 582, baseType: !828, size: 64, offset: 13952)
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !5374, file: !225, line: 589, baseType: !696, size: 8, offset: 14016)
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !5374, file: !225, line: 591, baseType: !750, size: 64, offset: 14080)
!5864 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !5374, file: !225, line: 594, baseType: !5865, size: 320, offset: 14144)
!5865 = !DICompositeType(tag: DW_TAG_array_type, baseType: !492, size: 320, elements: !1931)
!5866 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !4349, file: !4350, line: 191, baseType: !726, size: 64, offset: 7168)
!5867 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4349, file: !4350, line: 193, baseType: !7, size: 32, offset: 7232)
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4349, file: !4350, line: 194, baseType: !473, size: 64, offset: 7296)
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !4349, file: !4350, line: 196, baseType: !1317, size: 256, offset: 7360)
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !4349, file: !4350, line: 197, baseType: !4407, size: 64, offset: 7616)
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !4349, file: !4350, line: 199, baseType: !5872, size: 64, offset: 7680)
!5872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5873, size: 64)
!5873 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !4350, line: 199, flags: DIFlagFwdDecl)
!5874 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !4349, file: !4350, line: 200, baseType: !544, size: 32, offset: 7744)
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !4349, file: !4350, line: 201, baseType: !5876, size: 64, offset: 7808)
!5876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5877, size: 64)
!5877 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !4350, line: 156, flags: DIFlagFwdDecl)
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !4349, file: !4350, line: 203, baseType: !4401, size: 512, offset: 7872)
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !4349, file: !4350, line: 208, baseType: !7, size: 32, offset: 8384)
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !4349, file: !4350, line: 209, baseType: !5881, size: 64, offset: 8448)
!5881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5882, size: 64)
!5882 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !4350, line: 157, flags: DIFlagFwdDecl)
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !4349, file: !4350, line: 210, baseType: !2476, offset: 8512)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !4343, file: !4344, line: 206, baseType: !14, size: 32, offset: 128)
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !4343, file: !4344, line: 210, baseType: !633, size: 16, offset: 160)
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !4343, file: !4344, line: 211, baseType: !633, size: 16, offset: 176)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !4343, file: !4344, line: 212, baseType: !633, size: 16, offset: 192)
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !4343, file: !4344, line: 213, baseType: !5457, size: 8, offset: 208)
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !4343, file: !4344, line: 214, baseType: !1552, size: 8, offset: 216)
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !4343, file: !4344, line: 215, baseType: !544, size: 32, offset: 224)
!5891 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !4343, file: !4344, line: 217, baseType: !5892, size: 192, offset: 256)
!5892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !777, line: 37, size: 192, elements: !5893)
!5893 = !{!5894, !5895, !5896, !5897}
!5894 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !5892, file: !777, line: 38, baseType: !4370, size: 64)
!5895 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !5892, file: !777, line: 40, baseType: !14, size: 32, offset: 64)
!5896 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !5892, file: !777, line: 42, baseType: !14, size: 32, offset: 96)
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !5892, file: !777, line: 44, baseType: !14, size: 32, offset: 128)
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !4343, file: !4344, line: 219, baseType: !5899, size: 64, offset: 448)
!5899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5900, size: 64)
!5900 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !4344, line: 19, baseType: !5901)
!5901 = !DISubroutineType(types: !5902)
!5902 = !{null, !4342}
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !4343, file: !4344, line: 221, baseType: !726, size: 64, offset: 512)
!5904 = !DIDerivedType(tag: DW_TAG_member, scope: !4343, file: !4344, line: 240, baseType: !5905, size: 64, offset: 576)
!5905 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4343, file: !4344, line: 240, size: 64, elements: !5906)
!5906 = !{!5907}
!5907 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !5905, file: !4344, line: 242, baseType: !5908, size: 64)
!5908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5909, size: 64)
!5909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !4339, line: 313, size: 832, elements: !5910)
!5910 = !{!5911, !5912, !5913, !5914, !5915, !5916, !5917, !5918, !5919, !5921}
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !5909, file: !4339, line: 314, baseType: !4342, size: 64)
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !5909, file: !4339, line: 316, baseType: !5892, size: 192, offset: 64)
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !5909, file: !4339, line: 318, baseType: !633, size: 16, offset: 256)
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !5909, file: !4339, line: 319, baseType: !633, size: 16, offset: 272)
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !5909, file: !4339, line: 320, baseType: !633, size: 16, offset: 288)
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !5909, file: !4339, line: 321, baseType: !633, size: 16, offset: 304)
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !5909, file: !4339, line: 323, baseType: !5892, size: 192, offset: 320)
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !5909, file: !4339, line: 325, baseType: !1961, size: 256, offset: 512)
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !5909, file: !4339, line: 327, baseType: !5920, size: 64, offset: 768)
!5920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64)
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !5909, file: !4339, line: 328, baseType: !5922, offset: 832)
!5922 = !DICompositeType(tag: DW_TAG_array_type, baseType: !776, elements: !470)
!5923 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !4343, file: !4344, line: 246, baseType: !633, size: 16, offset: 640)
!5924 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !4343, file: !4344, line: 252, baseType: !633, size: 16, offset: 656)
!5925 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !4343, file: !4344, line: 254, baseType: !544, size: 32, offset: 672)
!5926 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !4343, file: !4344, line: 256, baseType: !5920, size: 64, offset: 704)
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !4343, file: !4344, line: 258, baseType: !5928, size: 64, offset: 768)
!5928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5829, size: 64)
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !4343, file: !4344, line: 265, baseType: !5922, offset: 832)
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4338, file: !4339, line: 556, baseType: !4342, size: 64, offset: 64)
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1413, file: !1414, line: 1050, baseType: !5932, size: 64, offset: 10688)
!5932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5933, size: 64)
!5933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !225, line: 1236, size: 320, elements: !5934)
!5934 = !{!5935, !5936, !5937, !5938, !5939}
!5935 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !5933, file: !225, line: 1237, baseType: !445, size: 128)
!5936 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !5933, file: !225, line: 1238, baseType: !445, size: 128, offset: 128)
!5937 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !5933, file: !225, line: 1239, baseType: !633, size: 16, offset: 256)
!5938 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !5933, file: !225, line: 1240, baseType: !696, size: 8, offset: 272)
!5939 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !5933, file: !225, line: 1241, baseType: !696, size: 8, offset: 280)
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1413, file: !1414, line: 1054, baseType: !5941, size: 64, offset: 10752)
!5941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5942, size: 64)
!5942 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1414, line: 55, flags: DIFlagFwdDecl)
!5943 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1413, file: !1414, line: 1056, baseType: !5243, size: 64, offset: 10816)
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1413, file: !1414, line: 1058, baseType: !5422, size: 64, offset: 10880)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1413, file: !1414, line: 1061, baseType: !5946, size: 64, offset: 10944)
!5946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5947, size: 64)
!5947 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1414, line: 43, flags: DIFlagFwdDecl)
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1413, file: !1414, line: 1064, baseType: !473, size: 64, offset: 11008)
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1413, file: !1414, line: 1065, baseType: !5950, size: 64, offset: 11072)
!5950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5951, size: 64)
!5951 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !4190, line: 14, baseType: !5952)
!5952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !4190, line: 12, size: 384, elements: !5953)
!5953 = !{!5954}
!5954 = !DIDerivedType(tag: DW_TAG_member, scope: !5952, file: !4190, line: 13, baseType: !5955, size: 384)
!5955 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5952, file: !4190, line: 13, size: 384, elements: !5956)
!5956 = !{!5957, !5958, !5959, !5960}
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !5955, file: !4190, line: 13, baseType: !7, size: 32)
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !5955, file: !4190, line: 13, baseType: !7, size: 32, offset: 32)
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !5955, file: !4190, line: 13, baseType: !7, size: 32, offset: 64)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !5955, file: !4190, line: 13, baseType: !5961, size: 256, offset: 128)
!5961 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !5962, line: 32, size: 256, elements: !5963)
!5962 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!5963 = !{!5964, !5969, !5982, !5988, !5997, !6017, !6022}
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !5961, file: !5962, line: 37, baseType: !5965, size: 64)
!5965 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5961, file: !5962, line: 34, size: 64, elements: !5966)
!5966 = !{!5967, !5968}
!5967 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5965, file: !5962, line: 35, baseType: !1665, size: 32)
!5968 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5965, file: !5962, line: 36, baseType: !810, size: 32, offset: 32)
!5969 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !5961, file: !5962, line: 45, baseType: !5970, size: 192)
!5970 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5961, file: !5962, line: 40, size: 192, elements: !5971)
!5971 = !{!5972, !5974, !5975, !5981}
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !5970, file: !5962, line: 41, baseType: !5973, size: 32)
!5973 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !752, line: 95, baseType: !7)
!5974 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !5970, file: !5962, line: 42, baseType: !7, size: 32, offset: 32)
!5975 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !5970, file: !5962, line: 43, baseType: !5976, size: 64, offset: 64)
!5976 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !5962, line: 11, baseType: !5977)
!5977 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !5962, line: 8, size: 64, elements: !5978)
!5978 = !{!5979, !5980}
!5979 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !5977, file: !5962, line: 9, baseType: !7, size: 32)
!5980 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !5977, file: !5962, line: 10, baseType: !726, size: 64)
!5981 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !5970, file: !5962, line: 44, baseType: !7, size: 32, offset: 128)
!5982 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !5961, file: !5962, line: 52, baseType: !5983, size: 128)
!5983 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5961, file: !5962, line: 48, size: 128, elements: !5984)
!5984 = !{!5985, !5986, !5987}
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5983, file: !5962, line: 49, baseType: !1665, size: 32)
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5983, file: !5962, line: 50, baseType: !810, size: 32, offset: 32)
!5987 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !5983, file: !5962, line: 51, baseType: !5976, size: 64, offset: 64)
!5988 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !5961, file: !5962, line: 61, baseType: !5989, size: 256)
!5989 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5961, file: !5962, line: 55, size: 256, elements: !5990)
!5990 = !{!5991, !5992, !5993, !5994, !5996}
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5989, file: !5962, line: 56, baseType: !1665, size: 32)
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5989, file: !5962, line: 57, baseType: !810, size: 32, offset: 32)
!5993 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !5989, file: !5962, line: 58, baseType: !7, size: 32, offset: 64)
!5994 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !5989, file: !5962, line: 59, baseType: !5995, size: 64, offset: 128)
!5995 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !752, line: 94, baseType: !1172)
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !5989, file: !5962, line: 60, baseType: !5995, size: 64, offset: 192)
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !5961, file: !5962, line: 95, baseType: !5998, size: 256)
!5998 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5961, file: !5962, line: 64, size: 256, elements: !5999)
!5999 = !{!6000, !6001}
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !5998, file: !5962, line: 65, baseType: !726, size: 64)
!6001 = !DIDerivedType(tag: DW_TAG_member, scope: !5998, file: !5962, line: 77, baseType: !6002, size: 192, offset: 64)
!6002 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5998, file: !5962, line: 77, size: 192, elements: !6003)
!6003 = !{!6004, !6005, !6012}
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !6002, file: !5962, line: 82, baseType: !1401, size: 16)
!6005 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !6002, file: !5962, line: 88, baseType: !6006, size: 192)
!6006 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6002, file: !5962, line: 84, size: 192, elements: !6007)
!6007 = !{!6008, !6010, !6011}
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !6006, file: !5962, line: 85, baseType: !6009, size: 64)
!6009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 64, elements: !1526)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !6006, file: !5962, line: 86, baseType: !726, size: 64, offset: 64)
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !6006, file: !5962, line: 87, baseType: !726, size: 64, offset: 128)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !6002, file: !5962, line: 93, baseType: !6013, size: 96)
!6013 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6002, file: !5962, line: 90, size: 96, elements: !6014)
!6014 = !{!6015, !6016}
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !6013, file: !5962, line: 91, baseType: !6009, size: 64)
!6016 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !6013, file: !5962, line: 92, baseType: !624, size: 32, offset: 64)
!6017 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !5961, file: !5962, line: 101, baseType: !6018, size: 128)
!6018 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5961, file: !5962, line: 98, size: 128, elements: !6019)
!6019 = !{!6020, !6021}
!6020 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !6018, file: !5962, line: 99, baseType: !669, size: 64)
!6021 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !6018, file: !5962, line: 100, baseType: !7, size: 32, offset: 64)
!6022 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !5961, file: !5962, line: 108, baseType: !6023, size: 128)
!6023 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5961, file: !5962, line: 104, size: 128, elements: !6024)
!6024 = !{!6025, !6026, !6027}
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !6023, file: !5962, line: 105, baseType: !726, size: 64)
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !6023, file: !5962, line: 106, baseType: !7, size: 32, offset: 64)
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !6023, file: !5962, line: 107, baseType: !14, size: 32, offset: 96)
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1413, file: !1414, line: 1067, baseType: !4257, offset: 11136)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1413, file: !1414, line: 1099, baseType: !6030, size: 64, offset: 11136)
!6030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6031, size: 64)
!6031 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1414, line: 56, flags: DIFlagFwdDecl)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1413, file: !1414, line: 1103, baseType: !445, size: 128, offset: 11200)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1413, file: !1414, line: 1104, baseType: !6034, size: 64, offset: 11328)
!6034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6035, size: 64)
!6035 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1414, line: 46, flags: DIFlagFwdDecl)
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1413, file: !1414, line: 1105, baseType: !1109, size: 192, offset: 11392)
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1413, file: !1414, line: 1106, baseType: !14, size: 32, offset: 11584)
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1413, file: !1414, line: 1109, baseType: !6039, size: 128, offset: 11648)
!6039 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6040, size: 128, elements: !634)
!6040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6041, size: 64)
!6041 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1414, line: 51, flags: DIFlagFwdDecl)
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1413, file: !1414, line: 1110, baseType: !1109, size: 192, offset: 11776)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1413, file: !1414, line: 1111, baseType: !445, size: 128, offset: 11968)
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1413, file: !1414, line: 1173, baseType: !6045, size: 64, offset: 12096)
!6045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6046, size: 64)
!6046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !6047, line: 62, size: 256, align: 256, elements: !6048)
!6047 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!6048 = !{!6049, !6050, !6051, !6056}
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !6046, file: !6047, line: 75, baseType: !624, size: 32)
!6050 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !6046, file: !6047, line: 90, baseType: !624, size: 32, offset: 32)
!6051 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !6046, file: !6047, line: 124, baseType: !6052, size: 64, offset: 64)
!6052 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6046, file: !6047, line: 109, size: 64, elements: !6053)
!6053 = !{!6054, !6055}
!6054 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !6052, file: !6047, line: 110, baseType: !494, size: 64)
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !6052, file: !6047, line: 112, baseType: !494, size: 64)
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6046, file: !6047, line: 144, baseType: !624, size: 32, offset: 128)
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1413, file: !1414, line: 1174, baseType: !862, size: 32, offset: 12160)
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1413, file: !1414, line: 1179, baseType: !473, size: 64, offset: 12224)
!6059 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1413, file: !1414, line: 1182, baseType: !6060, size: 128, offset: 12288)
!6060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1353, line: 76, size: 128, elements: !6061)
!6061 = !{!6062, !6067, !6068}
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6060, file: !1353, line: 85, baseType: !6063, size: 64)
!6063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !6064, line: 7, size: 64, elements: !6065)
!6064 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!6065 = !{!6066}
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !6063, file: !6064, line: 12, baseType: !1567, size: 64)
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !6060, file: !1353, line: 88, baseType: !696, size: 8, offset: 64)
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !6060, file: !1353, line: 95, baseType: !696, size: 8, offset: 72)
!6069 = !DIDerivedType(tag: DW_TAG_member, scope: !1413, file: !1414, line: 1184, baseType: !6070, size: 128, offset: 12416)
!6070 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1413, file: !1414, line: 1184, size: 128, elements: !6071)
!6071 = !{!6072, !6073}
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !6070, file: !1414, line: 1185, baseType: !1426, size: 32)
!6073 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !6070, file: !1414, line: 1186, baseType: !460, size: 128, align: 64)
!6074 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1413, file: !1414, line: 1190, baseType: !6075, size: 64, offset: 12544)
!6075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6076, size: 64)
!6076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !6077, line: 57, size: 1088, elements: !6078)
!6077 = !DIFile(filename: "./include/linux/pipe_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!6078 = !{!6079, !6080, !6081, !6082, !6083, !6084, !6085, !6086, !6087, !6088, !6089, !6090, !6091, !6092, !6093, !6103, !6104, !6131}
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !6076, file: !6077, line: 58, baseType: !1109, size: 192)
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "rd_wait", scope: !6076, file: !6077, line: 59, baseType: !1255, size: 128, offset: 192)
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "wr_wait", scope: !6076, file: !6077, line: 59, baseType: !1255, size: 128, offset: 320)
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6076, file: !6077, line: 60, baseType: !14, size: 32, offset: 448)
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6076, file: !6077, line: 61, baseType: !14, size: 32, offset: 480)
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "max_usage", scope: !6076, file: !6077, line: 62, baseType: !14, size: 32, offset: 512)
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "ring_size", scope: !6076, file: !6077, line: 63, baseType: !14, size: 32, offset: 544)
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "nr_accounted", scope: !6076, file: !6077, line: 67, baseType: !14, size: 32, offset: 576)
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !6076, file: !6077, line: 68, baseType: !14, size: 32, offset: 608)
!6088 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !6076, file: !6077, line: 69, baseType: !14, size: 32, offset: 640)
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !6076, file: !6077, line: 70, baseType: !14, size: 32, offset: 672)
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "r_counter", scope: !6076, file: !6077, line: 71, baseType: !14, size: 32, offset: 704)
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "w_counter", scope: !6076, file: !6077, line: 72, baseType: !14, size: 32, offset: 736)
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_page", scope: !6076, file: !6077, line: 73, baseType: !780, size: 64, offset: 768)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_readers", scope: !6076, file: !6077, line: 74, baseType: !6094, size: 64, offset: 832)
!6094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6095, size: 64)
!6095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !243, line: 1314, size: 320, elements: !6096)
!6096 = !{!6097, !6098, !6099, !6100, !6101, !6102}
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !6095, file: !243, line: 1315, baseType: !3113)
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !6095, file: !243, line: 1316, baseType: !7, size: 32)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !6095, file: !243, line: 1317, baseType: !7, size: 32, offset: 32)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !6095, file: !243, line: 1318, baseType: !6094, size: 64, offset: 64)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !6095, file: !243, line: 1319, baseType: !1165, size: 64, offset: 128)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !6095, file: !243, line: 1320, baseType: !460, size: 128, align: 64, offset: 192)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_writers", scope: !6076, file: !6077, line: 75, baseType: !6094, size: 64, offset: 896)
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "bufs", scope: !6076, file: !6077, line: 76, baseType: !6105, size: 64, offset: 960)
!6105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6106, size: 64)
!6106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buffer", file: !6077, line: 26, size: 320, elements: !6107)
!6107 = !{!6108, !6109, !6110, !6111, !6129, !6130}
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !6106, file: !6077, line: 27, baseType: !780, size: 64)
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !6106, file: !6077, line: 28, baseType: !14, size: 32, offset: 64)
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6106, file: !6077, line: 28, baseType: !14, size: 32, offset: 96)
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6106, file: !6077, line: 29, baseType: !6112, size: 64, offset: 128)
!6112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6113, size: 64)
!6113 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6114)
!6114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buf_operations", file: !6077, line: 93, size: 256, elements: !6115)
!6115 = !{!6116, !6120, !6124, !6128}
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "confirm", scope: !6114, file: !6077, line: 101, baseType: !6117, size: 64)
!6117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6118, size: 64)
!6118 = !DISubroutineType(types: !6119)
!6119 = !{!7, !6075, !6105}
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6114, file: !6077, line: 107, baseType: !6121, size: 64, offset: 64)
!6121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6122, size: 64)
!6122 = !DISubroutineType(types: !6123)
!6123 = !{null, !6075, !6105}
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "try_steal", scope: !6114, file: !6077, line: 117, baseType: !6125, size: 64, offset: 128)
!6125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6126, size: 64)
!6126 = !DISubroutineType(types: !6127)
!6127 = !{!696, !6075, !6105}
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !6114, file: !6077, line: 122, baseType: !6125, size: 64, offset: 192)
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6106, file: !6077, line: 30, baseType: !14, size: 32, offset: 192)
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !6106, file: !6077, line: 31, baseType: !473, size: 64, offset: 256)
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !6076, file: !6077, line: 77, baseType: !1887, size: 64, offset: 1024)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1413, file: !1414, line: 1192, baseType: !6133, size: 128, offset: 12608)
!6133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1353, line: 64, size: 128, elements: !6134)
!6134 = !{!6135, !6136, !6137}
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !6133, file: !1353, line: 65, baseType: !780, size: 64)
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !6133, file: !1353, line: 67, baseType: !624, size: 32, offset: 64)
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6133, file: !1353, line: 68, baseType: !624, size: 32, offset: 96)
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1413, file: !1414, line: 1206, baseType: !7, size: 32, offset: 12736)
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1413, file: !1414, line: 1207, baseType: !7, size: 32, offset: 12768)
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1413, file: !1414, line: 1209, baseType: !473, size: 64, offset: 12800)
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1413, file: !1414, line: 1219, baseType: !492, size: 64, offset: 12864)
!6142 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1413, file: !1414, line: 1220, baseType: !492, size: 64, offset: 12928)
!6143 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1413, file: !1414, line: 1317, baseType: !7, size: 32, offset: 12992)
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1413, file: !1414, line: 1319, baseType: !1412, size: 64, offset: 13056)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1413, file: !1414, line: 1322, baseType: !6146, size: 64, offset: 13120)
!6146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6147, size: 64)
!6147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !6148, line: 56, size: 512, elements: !6149)
!6148 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!6149 = !{!6150, !6151, !6152, !6153, !6154, !6156, !6157, !6159}
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6147, file: !6148, line: 57, baseType: !6146, size: 64)
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !6147, file: !6148, line: 58, baseType: !726, size: 64, offset: 64)
!6152 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6147, file: !6148, line: 59, baseType: !473, size: 64, offset: 128)
!6153 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6147, file: !6148, line: 60, baseType: !473, size: 64, offset: 192)
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !6147, file: !6148, line: 61, baseType: !6155, size: 64, offset: 256)
!6155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!6156 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !6147, file: !6148, line: 62, baseType: !14, size: 32, offset: 320)
!6157 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !6147, file: !6148, line: 63, baseType: !6158, size: 64, offset: 384)
!6158 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !438, line: 153, baseType: !492)
!6159 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !6147, file: !6148, line: 64, baseType: !2424, size: 64, offset: 448)
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1413, file: !1414, line: 1326, baseType: !1426, size: 32, offset: 13184)
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1413, file: !1414, line: 1342, baseType: !726, size: 64, offset: 13248)
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1413, file: !1414, line: 1343, baseType: !494, size: 64, offset: 13312)
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1413, file: !1414, line: 1344, baseType: !492, size: 64, offset: 13376)
!6164 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1413, file: !1414, line: 1345, baseType: !494, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!6165 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1413, file: !1414, line: 1346, baseType: !494, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!6166 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1413, file: !1414, line: 1347, baseType: !494, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!6167 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1413, file: !1414, line: 1348, baseType: !460, size: 128, align: 64, offset: 13504)
!6168 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1413, file: !1414, line: 1358, baseType: !6169, size: 34816, offset: 13824)
!6169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !6170, line: 485, size: 34816, elements: !6171)
!6170 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!6171 = !{!6172, !6190, !6191, !6192, !6193, !6194, !6195, !6196, !6197, !6201, !6202, !6203, !6204, !6205, !6206, !6209, !6210, !6211}
!6172 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !6169, file: !6170, line: 487, baseType: !6173, size: 192)
!6173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6174, size: 192, elements: !1022)
!6174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !6175, line: 16, size: 64, elements: !6176)
!6175 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!6176 = !{!6177, !6178, !6179, !6180, !6181, !6182, !6183, !6184, !6185, !6186, !6187, !6188, !6189}
!6177 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !6174, file: !6175, line: 17, baseType: !1193, size: 16)
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !6174, file: !6175, line: 18, baseType: !1193, size: 16, offset: 16)
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !6174, file: !6175, line: 19, baseType: !1193, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6174, file: !6175, line: 19, baseType: !1193, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !6174, file: !6175, line: 19, baseType: !1193, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !6174, file: !6175, line: 19, baseType: !1193, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6174, file: !6175, line: 19, baseType: !1193, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !6174, file: !6175, line: 20, baseType: !1193, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !6174, file: !6175, line: 20, baseType: !1193, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !6174, file: !6175, line: 20, baseType: !1193, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !6174, file: !6175, line: 20, baseType: !1193, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !6174, file: !6175, line: 20, baseType: !1193, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !6174, file: !6175, line: 20, baseType: !1193, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !6169, file: !6170, line: 491, baseType: !473, size: 64, offset: 192)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !6169, file: !6170, line: 495, baseType: !633, size: 16, offset: 256)
!6192 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !6169, file: !6170, line: 496, baseType: !633, size: 16, offset: 272)
!6193 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !6169, file: !6170, line: 497, baseType: !633, size: 16, offset: 288)
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !6169, file: !6170, line: 498, baseType: !633, size: 16, offset: 304)
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !6169, file: !6170, line: 502, baseType: !473, size: 64, offset: 320)
!6196 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !6169, file: !6170, line: 503, baseType: !473, size: 64, offset: 384)
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !6169, file: !6170, line: 514, baseType: !6198, size: 256, offset: 448)
!6198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6199, size: 256, elements: !1357)
!6199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6200, size: 64)
!6200 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !6170, line: 483, flags: DIFlagFwdDecl)
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !6169, file: !6170, line: 516, baseType: !473, size: 64, offset: 704)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !6169, file: !6170, line: 518, baseType: !473, size: 64, offset: 768)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !6169, file: !6170, line: 520, baseType: !473, size: 64, offset: 832)
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !6169, file: !6170, line: 521, baseType: !473, size: 64, offset: 896)
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !6169, file: !6170, line: 522, baseType: !473, size: 64, offset: 960)
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !6169, file: !6170, line: 528, baseType: !6207, size: 64, offset: 1024)
!6207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6208, size: 64)
!6208 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !6170, line: 10, flags: DIFlagFwdDecl)
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !6169, file: !6170, line: 535, baseType: !473, size: 64, offset: 1088)
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !6169, file: !6170, line: 537, baseType: !14, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!6211 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !6169, file: !6170, line: 540, baseType: !6212, size: 33280, offset: 1536)
!6212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !6213, line: 317, size: 33280, elements: !6214)
!6213 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!6214 = !{!6215, !6216, !6217}
!6215 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !6212, file: !6213, line: 330, baseType: !14, size: 32)
!6216 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !6212, file: !6213, line: 337, baseType: !473, size: 64, offset: 64)
!6217 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6212, file: !6213, line: 348, baseType: !6218, size: 32768, offset: 512)
!6218 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !6213, line: 304, size: 32768, elements: !6219)
!6219 = !{!6220, !6233, !6268, !6318, !6330}
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !6218, file: !6213, line: 305, baseType: !6221, size: 896)
!6221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !6213, line: 12, size: 896, elements: !6222)
!6222 = !{!6223, !6224, !6225, !6226, !6227, !6228, !6229, !6230, !6232}
!6223 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !6221, file: !6213, line: 13, baseType: !862, size: 32)
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !6221, file: !6213, line: 14, baseType: !862, size: 32, offset: 32)
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !6221, file: !6213, line: 15, baseType: !862, size: 32, offset: 64)
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !6221, file: !6213, line: 16, baseType: !862, size: 32, offset: 96)
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !6221, file: !6213, line: 17, baseType: !862, size: 32, offset: 128)
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !6221, file: !6213, line: 18, baseType: !862, size: 32, offset: 160)
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !6221, file: !6213, line: 19, baseType: !862, size: 32, offset: 192)
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !6221, file: !6213, line: 22, baseType: !6231, size: 640, offset: 224)
!6231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !862, size: 640, elements: !2687)
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !6221, file: !6213, line: 25, baseType: !862, size: 32, offset: 864)
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !6218, file: !6213, line: 306, baseType: !6234, size: 4096, align: 128)
!6234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !6213, line: 34, size: 4096, align: 128, elements: !6235)
!6235 = !{!6236, !6237, !6238, !6239, !6240, !6255, !6256, !6257, !6259, !6261, !6263}
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !6234, file: !6213, line: 35, baseType: !1193, size: 16)
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !6234, file: !6213, line: 36, baseType: !1193, size: 16, offset: 16)
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !6234, file: !6213, line: 37, baseType: !1193, size: 16, offset: 32)
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !6234, file: !6213, line: 38, baseType: !1193, size: 16, offset: 48)
!6240 = !DIDerivedType(tag: DW_TAG_member, scope: !6234, file: !6213, line: 39, baseType: !6241, size: 128, offset: 64)
!6241 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6234, file: !6213, line: 39, size: 128, elements: !6242)
!6242 = !{!6243, !6248}
!6243 = !DIDerivedType(tag: DW_TAG_member, scope: !6241, file: !6213, line: 40, baseType: !6244, size: 128)
!6244 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6241, file: !6213, line: 40, size: 128, elements: !6245)
!6245 = !{!6246, !6247}
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !6244, file: !6213, line: 41, baseType: !492, size: 64)
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !6244, file: !6213, line: 42, baseType: !492, size: 64, offset: 64)
!6248 = !DIDerivedType(tag: DW_TAG_member, scope: !6241, file: !6213, line: 44, baseType: !6249, size: 128)
!6249 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6241, file: !6213, line: 44, size: 128, elements: !6250)
!6250 = !{!6251, !6252, !6253, !6254}
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !6249, file: !6213, line: 45, baseType: !862, size: 32)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !6249, file: !6213, line: 46, baseType: !862, size: 32, offset: 32)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !6249, file: !6213, line: 47, baseType: !862, size: 32, offset: 64)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !6249, file: !6213, line: 48, baseType: !862, size: 32, offset: 96)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !6234, file: !6213, line: 51, baseType: !862, size: 32, offset: 192)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !6234, file: !6213, line: 52, baseType: !862, size: 32, offset: 224)
!6257 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !6234, file: !6213, line: 55, baseType: !6258, size: 1024, offset: 256)
!6258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !862, size: 1024, elements: !871)
!6259 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !6234, file: !6213, line: 58, baseType: !6260, size: 2048, offset: 1280)
!6260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !862, size: 2048, elements: !4302)
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !6234, file: !6213, line: 60, baseType: !6262, size: 384, offset: 3328)
!6262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !862, size: 384, elements: !3174)
!6263 = !DIDerivedType(tag: DW_TAG_member, scope: !6234, file: !6213, line: 62, baseType: !6264, size: 384, offset: 3712)
!6264 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6234, file: !6213, line: 62, size: 384, elements: !6265)
!6265 = !{!6266, !6267}
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !6264, file: !6213, line: 63, baseType: !6262, size: 384)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !6264, file: !6213, line: 64, baseType: !6262, size: 384)
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !6218, file: !6213, line: 307, baseType: !6269, size: 1088)
!6269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !6213, line: 79, size: 1088, elements: !6270)
!6270 = !{!6271, !6272, !6273, !6274, !6275, !6276, !6277, !6278, !6279, !6280, !6281, !6282, !6283, !6284, !6285, !6317}
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !6269, file: !6213, line: 80, baseType: !862, size: 32)
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !6269, file: !6213, line: 81, baseType: !862, size: 32, offset: 32)
!6273 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !6269, file: !6213, line: 82, baseType: !862, size: 32, offset: 64)
!6274 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !6269, file: !6213, line: 83, baseType: !862, size: 32, offset: 96)
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !6269, file: !6213, line: 84, baseType: !862, size: 32, offset: 128)
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !6269, file: !6213, line: 85, baseType: !862, size: 32, offset: 160)
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !6269, file: !6213, line: 86, baseType: !862, size: 32, offset: 192)
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !6269, file: !6213, line: 88, baseType: !6231, size: 640, offset: 224)
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !6269, file: !6213, line: 89, baseType: !1552, size: 8, offset: 864)
!6280 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !6269, file: !6213, line: 90, baseType: !1552, size: 8, offset: 872)
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !6269, file: !6213, line: 91, baseType: !1552, size: 8, offset: 880)
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !6269, file: !6213, line: 92, baseType: !1552, size: 8, offset: 888)
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !6269, file: !6213, line: 93, baseType: !1552, size: 8, offset: 896)
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !6269, file: !6213, line: 94, baseType: !1552, size: 8, offset: 904)
!6285 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !6269, file: !6213, line: 95, baseType: !6286, size: 64, offset: 960)
!6286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6287, size: 64)
!6287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !6288, line: 11, size: 128, elements: !6289)
!6288 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!6289 = !{!6290, !6291}
!6290 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !6287, file: !6288, line: 12, baseType: !669, size: 64)
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !6287, file: !6288, line: 13, baseType: !6292, size: 64, offset: 64)
!6292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6293, size: 64)
!6293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !6294, line: 56, size: 1344, elements: !6295)
!6294 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!6295 = !{!6296, !6297, !6298, !6299, !6300, !6301, !6302, !6303, !6304, !6305, !6306, !6307, !6308, !6309, !6310, !6311, !6312, !6313, !6314, !6315, !6316}
!6296 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6293, file: !6294, line: 61, baseType: !473, size: 64)
!6297 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6293, file: !6294, line: 62, baseType: !473, size: 64, offset: 64)
!6298 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !6293, file: !6294, line: 63, baseType: !473, size: 64, offset: 128)
!6299 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6293, file: !6294, line: 64, baseType: !473, size: 64, offset: 192)
!6300 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !6293, file: !6294, line: 65, baseType: !473, size: 64, offset: 256)
!6301 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !6293, file: !6294, line: 66, baseType: !473, size: 64, offset: 320)
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !6293, file: !6294, line: 68, baseType: !473, size: 64, offset: 384)
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !6293, file: !6294, line: 69, baseType: !473, size: 64, offset: 448)
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !6293, file: !6294, line: 70, baseType: !473, size: 64, offset: 512)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !6293, file: !6294, line: 71, baseType: !473, size: 64, offset: 576)
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !6293, file: !6294, line: 72, baseType: !473, size: 64, offset: 640)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !6293, file: !6294, line: 73, baseType: !473, size: 64, offset: 704)
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !6293, file: !6294, line: 74, baseType: !473, size: 64, offset: 768)
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !6293, file: !6294, line: 75, baseType: !473, size: 64, offset: 832)
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !6293, file: !6294, line: 76, baseType: !473, size: 64, offset: 896)
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !6293, file: !6294, line: 81, baseType: !473, size: 64, offset: 960)
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6293, file: !6294, line: 83, baseType: !473, size: 64, offset: 1024)
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !6293, file: !6294, line: 84, baseType: !473, size: 64, offset: 1088)
!6314 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6293, file: !6294, line: 85, baseType: !473, size: 64, offset: 1152)
!6315 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !6293, file: !6294, line: 86, baseType: !473, size: 64, offset: 1216)
!6316 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !6293, file: !6294, line: 87, baseType: !473, size: 64, offset: 1280)
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !6269, file: !6213, line: 96, baseType: !862, size: 32, offset: 1024)
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !6218, file: !6213, line: 308, baseType: !6319, size: 4608, align: 512)
!6319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !6213, line: 289, size: 4608, align: 512, elements: !6320)
!6320 = !{!6321, !6322, !6329}
!6321 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !6319, file: !6213, line: 290, baseType: !6234, size: 4096, align: 128)
!6322 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !6319, file: !6213, line: 291, baseType: !6323, size: 512, offset: 4096)
!6323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !6213, line: 268, size: 512, elements: !6324)
!6324 = !{!6325, !6326, !6327}
!6325 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !6323, file: !6213, line: 269, baseType: !492, size: 64)
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !6323, file: !6213, line: 270, baseType: !492, size: 64, offset: 64)
!6327 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !6323, file: !6213, line: 271, baseType: !6328, size: 384, offset: 128)
!6328 = !DICompositeType(tag: DW_TAG_array_type, baseType: !492, size: 384, elements: !1825)
!6329 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !6319, file: !6213, line: 292, baseType: !3197, offset: 4608)
!6330 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !6218, file: !6213, line: 309, baseType: !6331, size: 32768)
!6331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1552, size: 32768, elements: !6332)
!6332 = !{!6333}
!6333 = !DISubrange(count: 4096)
!6334 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1409, file: !782, line: 378, baseType: !6335, size: 64, offset: 64)
!6335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 64)
!6336 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1405, file: !782, line: 384, baseType: !1701, size: 192, offset: 192)
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1284, file: !782, line: 500, baseType: !884, offset: 6656)
!6338 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1284, file: !782, line: 501, baseType: !6339, size: 64, offset: 6656)
!6339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6340, size: 64)
!6340 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !782, line: 387, flags: DIFlagFwdDecl)
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1284, file: !782, line: 516, baseType: !1913, size: 64, offset: 6720)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1284, file: !782, line: 519, baseType: !1165, size: 64, offset: 6784)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1284, file: !782, line: 521, baseType: !6344, size: 64, offset: 6848)
!6344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6345, size: 64)
!6345 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !782, line: 521, flags: DIFlagFwdDecl)
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1284, file: !782, line: 545, baseType: !544, size: 32, offset: 6912)
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1284, file: !782, line: 548, baseType: !696, size: 8, offset: 6944)
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1284, file: !782, line: 550, baseType: !6349, offset: 6952)
!6349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !6350, line: 142, elements: !898)
!6350 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!6351 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1284, file: !782, line: 554, baseType: !1961, size: 256, offset: 6976)
!6352 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1284, file: !782, line: 557, baseType: !862, size: 32, offset: 7232)
!6353 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1281, file: !782, line: 565, baseType: !6354, offset: 7296)
!6354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, elements: !470)
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1271, file: !782, line: 333, baseType: !6356, size: 64, offset: 576)
!6356 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1303, line: 284, baseType: !6357)
!6357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1303, line: 284, size: 64, elements: !6358)
!6358 = !{!6359}
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !6357, file: !1303, line: 284, baseType: !6360, size: 64)
!6360 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1308, line: 19, baseType: !473)
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1271, file: !782, line: 334, baseType: !473, size: 64, offset: 640)
!6362 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1271, file: !782, line: 343, baseType: !6363, size: 256, offset: 704)
!6363 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1271, file: !782, line: 340, size: 256, elements: !6364)
!6364 = !{!6365, !6366}
!6365 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !6363, file: !782, line: 341, baseType: !594, size: 192, align: 64)
!6366 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !6363, file: !782, line: 342, baseType: !473, size: 64, offset: 192)
!6367 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1271, file: !782, line: 351, baseType: !445, size: 128, offset: 960)
!6368 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1271, file: !782, line: 353, baseType: !6369, size: 64, offset: 1088)
!6369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6370, size: 64)
!6370 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !782, line: 353, flags: DIFlagFwdDecl)
!6371 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1271, file: !782, line: 356, baseType: !4630, size: 64, offset: 1152)
!6372 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1271, file: !782, line: 359, baseType: !473, size: 64, offset: 1216)
!6373 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1271, file: !782, line: 361, baseType: !1165, size: 64, offset: 1280)
!6374 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1271, file: !782, line: 362, baseType: !726, size: 64, offset: 1344)
!6375 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1271, file: !782, line: 365, baseType: !532, size: 64, offset: 1408)
!6376 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1271, file: !782, line: 373, baseType: !6377, offset: 1472)
!6377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !782, line: 296, elements: !898)
!6378 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !1158, file: !243, line: 1836, baseType: !473, size: 64, offset: 832)
!6379 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1158, file: !243, line: 1837, baseType: !6380, size: 64, offset: 896)
!6380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6381, size: 64)
!6381 = !DISubroutineType(types: !6382)
!6382 = !{!7, !797, !1165}
!6383 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1158, file: !243, line: 1838, baseType: !6384, size: 64, offset: 960)
!6384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6385, size: 64)
!6385 = !DISubroutineType(types: !6386)
!6386 = !{!7, !1165, !6387}
!6387 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !243, line: 1007, baseType: !726)
!6388 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1158, file: !243, line: 1839, baseType: !6380, size: 64, offset: 1024)
!6389 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !1158, file: !243, line: 1840, baseType: !6390, size: 64, offset: 1088)
!6390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6391, size: 64)
!6391 = !DISubroutineType(types: !6392)
!6392 = !{!7, !1165, !979, !979, !7}
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !1158, file: !243, line: 1841, baseType: !6394, size: 64, offset: 1152)
!6394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6395, size: 64)
!6395 = !DISubroutineType(types: !6396)
!6396 = !{!7, !7, !1165, !7}
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1158, file: !243, line: 1842, baseType: !6398, size: 64, offset: 1216)
!6398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6399, size: 64)
!6399 = !DISubroutineType(types: !6400)
!6400 = !{!7, !1165, !7, !6401}
!6401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6402, size: 64)
!6402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !243, line: 1062, size: 1664, elements: !6403)
!6403 = !{!6404, !6405, !6406, !6407, !6408, !6409, !6410, !6411, !6412, !6413, !6414, !6415, !6416, !6417, !6418, !6419, !6420, !6421, !6434, !6465}
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !6402, file: !243, line: 1063, baseType: !6401, size: 64)
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !6402, file: !243, line: 1064, baseType: !445, size: 128, offset: 64)
!6406 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !6402, file: !243, line: 1065, baseType: !437, size: 128, offset: 192)
!6407 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !6402, file: !243, line: 1066, baseType: !445, size: 128, offset: 320)
!6408 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !6402, file: !243, line: 1069, baseType: !445, size: 128, offset: 448)
!6409 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !6402, file: !243, line: 1072, baseType: !6387, size: 64, offset: 576)
!6410 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !6402, file: !243, line: 1073, baseType: !14, size: 32, offset: 640)
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !6402, file: !243, line: 1074, baseType: !650, size: 8, offset: 672)
!6412 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !6402, file: !243, line: 1075, baseType: !14, size: 32, offset: 704)
!6413 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !6402, file: !243, line: 1076, baseType: !7, size: 32, offset: 736)
!6414 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !6402, file: !243, line: 1077, baseType: !1255, size: 128, offset: 768)
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !6402, file: !243, line: 1078, baseType: !1165, size: 64, offset: 896)
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !6402, file: !243, line: 1079, baseType: !979, size: 64, offset: 960)
!6417 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !6402, file: !243, line: 1080, baseType: !979, size: 64, offset: 1024)
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !6402, file: !243, line: 1082, baseType: !6094, size: 64, offset: 1088)
!6419 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !6402, file: !243, line: 1084, baseType: !473, size: 64, offset: 1152)
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !6402, file: !243, line: 1085, baseType: !473, size: 64, offset: 1216)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !6402, file: !243, line: 1087, baseType: !6422, size: 64, offset: 1280)
!6422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6423, size: 64)
!6423 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6424)
!6424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !243, line: 1011, size: 128, elements: !6425)
!6425 = !{!6426, !6430}
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !6424, file: !243, line: 1012, baseType: !6427, size: 64)
!6427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6428, size: 64)
!6428 = !DISubroutineType(types: !6429)
!6429 = !{null, !6401, !6401}
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !6424, file: !243, line: 1013, baseType: !6431, size: 64, offset: 64)
!6431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6432, size: 64)
!6432 = !DISubroutineType(types: !6433)
!6433 = !{null, !6401}
!6434 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !6402, file: !243, line: 1088, baseType: !6435, size: 64, offset: 1344)
!6435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6436, size: 64)
!6436 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6437)
!6437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !243, line: 1016, size: 512, elements: !6438)
!6438 = !{!6439, !6443, !6447, !6448, !6452, !6456, !6460, !6464}
!6439 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !6437, file: !243, line: 1017, baseType: !6440, size: 64)
!6440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6441, size: 64)
!6441 = !DISubroutineType(types: !6442)
!6442 = !{!6387, !6387}
!6443 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !6437, file: !243, line: 1018, baseType: !6444, size: 64, offset: 64)
!6444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6445, size: 64)
!6445 = !DISubroutineType(types: !6446)
!6446 = !{null, !6387}
!6447 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !6437, file: !243, line: 1019, baseType: !6431, size: 64, offset: 128)
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !6437, file: !243, line: 1020, baseType: !6449, size: 64, offset: 192)
!6449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6450, size: 64)
!6450 = !DISubroutineType(types: !6451)
!6451 = !{!7, !6401, !7}
!6452 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !6437, file: !243, line: 1021, baseType: !6453, size: 64, offset: 256)
!6453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6454, size: 64)
!6454 = !DISubroutineType(types: !6455)
!6455 = !{!696, !6401}
!6456 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !6437, file: !243, line: 1022, baseType: !6457, size: 64, offset: 320)
!6457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6458, size: 64)
!6458 = !DISubroutineType(types: !6459)
!6459 = !{!7, !6401, !7, !448}
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !6437, file: !243, line: 1023, baseType: !6461, size: 64, offset: 384)
!6461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6462, size: 64)
!6462 = !DISubroutineType(types: !6463)
!6463 = !{null, !6401, !4075}
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !6437, file: !243, line: 1024, baseType: !6453, size: 64, offset: 448)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !6402, file: !243, line: 1097, baseType: !6466, size: 256, offset: 1408)
!6466 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6402, file: !243, line: 1089, size: 256, elements: !6467)
!6467 = !{!6468, !6477, !6483}
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !6466, file: !243, line: 1090, baseType: !6469, size: 256)
!6469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !6470, line: 10, size: 256, elements: !6471)
!6470 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!6471 = !{!6472, !6473, !6476}
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6469, file: !6470, line: 11, baseType: !862, size: 32)
!6473 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6469, file: !6470, line: 12, baseType: !6474, size: 64, offset: 64)
!6474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6475, size: 64)
!6475 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !6470, line: 5, flags: DIFlagFwdDecl)
!6476 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6469, file: !6470, line: 13, baseType: !445, size: 128, offset: 128)
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !6466, file: !243, line: 1091, baseType: !6478, size: 64)
!6478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !6470, line: 17, size: 64, elements: !6479)
!6479 = !{!6480}
!6480 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6478, file: !6470, line: 18, baseType: !6481, size: 64)
!6481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6482, size: 64)
!6482 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !6470, line: 16, flags: DIFlagFwdDecl)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !6466, file: !243, line: 1096, baseType: !6484, size: 192)
!6484 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6466, file: !243, line: 1092, size: 192, elements: !6485)
!6485 = !{!6486, !6487, !6488}
!6486 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !6484, file: !243, line: 1093, baseType: !445, size: 128)
!6487 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6484, file: !243, line: 1094, baseType: !7, size: 32, offset: 128)
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !6484, file: !243, line: 1095, baseType: !14, size: 32, offset: 160)
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !1158, file: !243, line: 1843, baseType: !6490, size: 64, offset: 1280)
!6490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6491, size: 64)
!6491 = !DISubroutineType(types: !6492)
!6492 = !{!1170, !1165, !780, !7, !750, !1124, !7}
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1158, file: !243, line: 1844, baseType: !1293, size: 64, offset: 1344)
!6494 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !1158, file: !243, line: 1845, baseType: !6495, size: 64, offset: 1408)
!6495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6496, size: 64)
!6496 = !DISubroutineType(types: !6497)
!6497 = !{!7, !7}
!6498 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !1158, file: !243, line: 1846, baseType: !6398, size: 64, offset: 1472)
!6499 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !1158, file: !243, line: 1847, baseType: !6500, size: 64, offset: 1536)
!6500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6501, size: 64)
!6501 = !DISubroutineType(types: !6502)
!6502 = !{!1170, !6075, !1165, !1124, !750, !14}
!6503 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !1158, file: !243, line: 1848, baseType: !6504, size: 64, offset: 1600)
!6504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6505, size: 64)
!6505 = !DISubroutineType(types: !6506)
!6506 = !{!1170, !1165, !1124, !6075, !750, !14}
!6507 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !1158, file: !243, line: 1849, baseType: !6508, size: 64, offset: 1664)
!6508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6509, size: 64)
!6509 = !DISubroutineType(types: !6510)
!6510 = !{!7, !1165, !669, !6511, !4075}
!6511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6401, size: 64)
!6512 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !1158, file: !243, line: 1850, baseType: !6513, size: 64, offset: 1728)
!6513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6514, size: 64)
!6514 = !DISubroutineType(types: !6515)
!6515 = !{!669, !1165, !7, !979, !979}
!6516 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !1158, file: !243, line: 1852, baseType: !6517, size: 64, offset: 1792)
!6517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6518, size: 64)
!6518 = !DISubroutineType(types: !6519)
!6519 = !{null, !1097, !1165}
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !1158, file: !243, line: 1856, baseType: !6521, size: 64, offset: 1856)
!6521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6522, size: 64)
!6522 = !DISubroutineType(types: !6523)
!6523 = !{!1170, !1165, !979, !1165, !979, !750, !14}
!6524 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !1158, file: !243, line: 1858, baseType: !6525, size: 64, offset: 1920)
!6525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6526, size: 64)
!6526 = !DISubroutineType(types: !6527)
!6527 = !{!979, !1165, !979, !1165, !979, !979, !14}
!6528 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !1158, file: !243, line: 1861, baseType: !6390, size: 64, offset: 1984)
!6529 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !1141, file: !243, line: 929, baseType: !884, offset: 384)
!6530 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !1141, file: !243, line: 930, baseType: !242, size: 32, offset: 384)
!6531 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1141, file: !243, line: 931, baseType: !532, size: 64, offset: 448)
!6532 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1141, file: !243, line: 932, baseType: !14, size: 32, offset: 512)
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !1141, file: !243, line: 933, baseType: !5301, size: 32, offset: 544)
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !1141, file: !243, line: 934, baseType: !1109, size: 192, offset: 576)
!6535 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !1141, file: !243, line: 935, baseType: !979, size: 64, offset: 768)
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !1141, file: !243, line: 936, baseType: !6537, size: 192, offset: 832)
!6537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !243, line: 885, size: 192, elements: !6538)
!6538 = !{!6539, !6540, !6541, !6542, !6543, !6544}
!6539 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6537, file: !243, line: 886, baseType: !3113)
!6540 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !6537, file: !243, line: 887, baseType: !1676, size: 64)
!6541 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !6537, file: !243, line: 888, baseType: !251, size: 32, offset: 64)
!6542 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6537, file: !243, line: 889, baseType: !804, size: 32, offset: 96)
!6543 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !6537, file: !243, line: 889, baseType: !804, size: 32, offset: 128)
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !6537, file: !243, line: 890, baseType: !7, size: 32, offset: 160)
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !1141, file: !243, line: 937, baseType: !1746, size: 64, offset: 1024)
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !1141, file: !243, line: 938, baseType: !6547, size: 256, offset: 1088)
!6547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !243, line: 896, size: 256, elements: !6548)
!6548 = !{!6549, !6550, !6551, !6552, !6553, !6554}
!6549 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6547, file: !243, line: 897, baseType: !473, size: 64)
!6550 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6547, file: !243, line: 898, baseType: !14, size: 32, offset: 64)
!6551 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !6547, file: !243, line: 899, baseType: !14, size: 32, offset: 96)
!6552 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !6547, file: !243, line: 902, baseType: !14, size: 32, offset: 128)
!6553 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !6547, file: !243, line: 903, baseType: !14, size: 32, offset: 160)
!6554 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !6547, file: !243, line: 904, baseType: !979, size: 64, offset: 192)
!6555 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !1141, file: !243, line: 940, baseType: !492, size: 64, offset: 1344)
!6556 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1141, file: !243, line: 945, baseType: !726, size: 64, offset: 1408)
!6557 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !1141, file: !243, line: 949, baseType: !445, size: 128, offset: 1472)
!6558 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !1141, file: !243, line: 950, baseType: !445, size: 128, offset: 1600)
!6559 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !1141, file: !243, line: 952, baseType: !793, size: 64, offset: 1728)
!6560 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !1141, file: !243, line: 953, baseType: !6561, size: 32, offset: 1792)
!6561 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !6562, line: 8, baseType: !862)
!6562 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!6563 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !1141, file: !243, line: 954, baseType: !6561, size: 32, offset: 1824)
!6564 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1098, file: !1099, line: 28, baseType: !726, size: 64, offset: 832)
!6565 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !1030, file: !243, line: 1955, baseType: !1094, size: 64, offset: 1088)
!6566 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1030, file: !243, line: 1956, baseType: !1094, size: 64, offset: 1152)
!6567 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !1030, file: !243, line: 1957, baseType: !1094, size: 64, offset: 1216)
!6568 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !1030, file: !243, line: 1963, baseType: !6569, size: 64, offset: 1280)
!6569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6570, size: 64)
!6570 = !DISubroutineType(types: !6571)
!6571 = !{!7, !969, !780, !2144}
!6572 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !1030, file: !243, line: 1964, baseType: !6573, size: 64, offset: 1344)
!6573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6574, size: 64)
!6574 = !DISubroutineType(types: !6575)
!6575 = !{!669, !969, !6576}
!6576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6577, size: 64)
!6577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !6578, line: 12, size: 256, elements: !6579)
!6578 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!6579 = !{!6580, !6581, !6582, !6583, !6584}
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !6577, file: !6578, line: 13, baseType: !2144, size: 32)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !6577, file: !6578, line: 16, baseType: !7, size: 32, offset: 32)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !6577, file: !6578, line: 23, baseType: !473, size: 64, offset: 64)
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !6577, file: !6578, line: 30, baseType: !473, size: 64, offset: 128)
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !6577, file: !6578, line: 33, baseType: !6585, size: 64, offset: 192)
!6585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6586, size: 64)
!6586 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !782, line: 27, flags: DIFlagFwdDecl)
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !1030, file: !243, line: 1966, baseType: !6573, size: 64, offset: 1408)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !970, file: !243, line: 1424, baseType: !6589, size: 64, offset: 448)
!6589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6590, size: 64)
!6590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6591)
!6591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !260, line: 322, size: 704, elements: !6592)
!6592 = !{!6593, !6639, !6643, !6647, !6648, !6649, !6650, !6651, !6656, !6661, !6665}
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !6591, file: !260, line: 323, baseType: !6594, size: 64)
!6594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6595, size: 64)
!6595 = !DISubroutineType(types: !6596)
!6596 = !{!7, !6597}
!6597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6598, size: 64)
!6598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !260, line: 294, size: 1600, elements: !6599)
!6599 = !{!6600, !6601, !6602, !6603, !6604, !6605, !6606, !6607, !6608, !6624, !6625, !6626}
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !6598, file: !260, line: 295, baseType: !437, size: 128)
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !6598, file: !260, line: 296, baseType: !445, size: 128, offset: 128)
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !6598, file: !260, line: 297, baseType: !445, size: 128, offset: 256)
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !6598, file: !260, line: 298, baseType: !445, size: 128, offset: 384)
!6604 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !6598, file: !260, line: 299, baseType: !1109, size: 192, offset: 512)
!6605 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !6598, file: !260, line: 300, baseType: !884, offset: 704)
!6606 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !6598, file: !260, line: 301, baseType: !544, size: 32, offset: 704)
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !6598, file: !260, line: 302, baseType: !969, size: 64, offset: 768)
!6608 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !6598, file: !260, line: 303, baseType: !6609, size: 64, offset: 832)
!6609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !260, line: 68, size: 64, elements: !6610)
!6610 = !{!6611, !6623}
!6611 = !DIDerivedType(tag: DW_TAG_member, scope: !6609, file: !260, line: 69, baseType: !6612, size: 32)
!6612 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6609, file: !260, line: 69, size: 32, elements: !6613)
!6613 = !{!6614, !6615, !6616}
!6614 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6612, file: !260, line: 70, baseType: !804, size: 32)
!6615 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !6612, file: !260, line: 71, baseType: !812, size: 32)
!6616 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !6612, file: !260, line: 72, baseType: !6617, size: 32)
!6617 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !6618, line: 24, baseType: !6619)
!6618 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!6619 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6618, line: 22, size: 32, elements: !6620)
!6620 = !{!6621}
!6621 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !6619, file: !6618, line: 23, baseType: !6622, size: 32)
!6622 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !6618, line: 20, baseType: !810)
!6623 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6609, file: !260, line: 74, baseType: !259, size: 32, offset: 32)
!6624 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !6598, file: !260, line: 304, baseType: !979, size: 64, offset: 896)
!6625 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !6598, file: !260, line: 305, baseType: !473, size: 64, offset: 960)
!6626 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !6598, file: !260, line: 306, baseType: !6627, size: 576, offset: 1024)
!6627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !260, line: 205, size: 576, elements: !6628)
!6628 = !{!6629, !6631, !6632, !6633, !6634, !6635, !6636, !6637, !6638}
!6629 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !6627, file: !260, line: 206, baseType: !6630, size: 64)
!6630 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !260, line: 66, baseType: !540)
!6631 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !6627, file: !260, line: 207, baseType: !6630, size: 64, offset: 64)
!6632 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !6627, file: !260, line: 208, baseType: !6630, size: 64, offset: 128)
!6633 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !6627, file: !260, line: 209, baseType: !6630, size: 64, offset: 192)
!6634 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !6627, file: !260, line: 210, baseType: !6630, size: 64, offset: 256)
!6635 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !6627, file: !260, line: 211, baseType: !6630, size: 64, offset: 320)
!6636 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !6627, file: !260, line: 212, baseType: !6630, size: 64, offset: 384)
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !6627, file: !260, line: 213, baseType: !1796, size: 64, offset: 448)
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !6627, file: !260, line: 214, baseType: !1796, size: 64, offset: 512)
!6639 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !6591, file: !260, line: 324, baseType: !6640, size: 64, offset: 64)
!6640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6641, size: 64)
!6641 = !DISubroutineType(types: !6642)
!6642 = !{!6597, !969, !7}
!6643 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !6591, file: !260, line: 325, baseType: !6644, size: 64, offset: 128)
!6644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6645, size: 64)
!6645 = !DISubroutineType(types: !6646)
!6646 = !{null, !6597}
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !6591, file: !260, line: 326, baseType: !6594, size: 64, offset: 192)
!6648 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !6591, file: !260, line: 327, baseType: !6594, size: 64, offset: 256)
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !6591, file: !260, line: 328, baseType: !6594, size: 64, offset: 320)
!6650 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !6591, file: !260, line: 329, baseType: !1072, size: 64, offset: 384)
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !6591, file: !260, line: 332, baseType: !6652, size: 64, offset: 448)
!6652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6653, size: 64)
!6653 = !DISubroutineType(types: !6654)
!6654 = !{!6655, !797}
!6655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6630, size: 64)
!6656 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !6591, file: !260, line: 333, baseType: !6657, size: 64, offset: 512)
!6657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6658, size: 64)
!6658 = !DISubroutineType(types: !6659)
!6659 = !{!7, !797, !6660}
!6660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6617, size: 64)
!6661 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !6591, file: !260, line: 335, baseType: !6662, size: 64, offset: 576)
!6662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6663, size: 64)
!6663 = !DISubroutineType(types: !6664)
!6664 = !{!7, !797, !6655}
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !6591, file: !260, line: 337, baseType: !6666, size: 64, offset: 640)
!6666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6667, size: 64)
!6667 = !DISubroutineType(types: !6668)
!6668 = !{!7, !969, !6669}
!6669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6609, size: 64)
!6670 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !970, file: !243, line: 1425, baseType: !6671, size: 64, offset: 512)
!6671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6672, size: 64)
!6672 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6673)
!6673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !260, line: 428, size: 704, elements: !6674)
!6674 = !{!6675, !6679, !6680, !6684, !6685, !6686, !6701, !6724, !6728, !6729, !6752}
!6675 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !6673, file: !260, line: 429, baseType: !6676, size: 64)
!6676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6677, size: 64)
!6677 = !DISubroutineType(types: !6678)
!6678 = !{!7, !969, !7, !7, !960}
!6679 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !6673, file: !260, line: 430, baseType: !1072, size: 64, offset: 64)
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !6673, file: !260, line: 431, baseType: !6681, size: 64, offset: 128)
!6681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6682, size: 64)
!6682 = !DISubroutineType(types: !6683)
!6683 = !{!7, !969, !14}
!6684 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !6673, file: !260, line: 432, baseType: !6681, size: 64, offset: 192)
!6685 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !6673, file: !260, line: 433, baseType: !1072, size: 64, offset: 256)
!6686 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !6673, file: !260, line: 434, baseType: !6687, size: 64, offset: 320)
!6687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6688, size: 64)
!6688 = !DISubroutineType(types: !6689)
!6689 = !{!7, !969, !7, !6690}
!6690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6691, size: 64)
!6691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !260, line: 415, size: 256, elements: !6692)
!6692 = !{!6693, !6694, !6695, !6696, !6697, !6698, !6699, !6700}
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !6691, file: !260, line: 416, baseType: !7, size: 32)
!6694 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !6691, file: !260, line: 417, baseType: !14, size: 32, offset: 32)
!6695 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !6691, file: !260, line: 418, baseType: !14, size: 32, offset: 64)
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !6691, file: !260, line: 420, baseType: !14, size: 32, offset: 96)
!6697 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !6691, file: !260, line: 421, baseType: !14, size: 32, offset: 128)
!6698 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !6691, file: !260, line: 422, baseType: !14, size: 32, offset: 160)
!6699 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !6691, file: !260, line: 423, baseType: !14, size: 32, offset: 192)
!6700 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !6691, file: !260, line: 424, baseType: !14, size: 32, offset: 224)
!6701 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !6673, file: !260, line: 435, baseType: !6702, size: 64, offset: 384)
!6702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6703, size: 64)
!6703 = !DISubroutineType(types: !6704)
!6704 = !{!7, !969, !6609, !6705}
!6705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6706, size: 64)
!6706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !260, line: 343, size: 960, elements: !6707)
!6707 = !{!6708, !6709, !6710, !6711, !6712, !6713, !6714, !6715, !6716, !6717, !6718, !6719, !6720, !6721, !6722, !6723}
!6708 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !6706, file: !260, line: 344, baseType: !7, size: 32)
!6709 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !6706, file: !260, line: 345, baseType: !492, size: 64, offset: 64)
!6710 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !6706, file: !260, line: 346, baseType: !492, size: 64, offset: 128)
!6711 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !6706, file: !260, line: 347, baseType: !492, size: 64, offset: 192)
!6712 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !6706, file: !260, line: 348, baseType: !492, size: 64, offset: 256)
!6713 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !6706, file: !260, line: 349, baseType: !492, size: 64, offset: 320)
!6714 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !6706, file: !260, line: 350, baseType: !492, size: 64, offset: 384)
!6715 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !6706, file: !260, line: 351, baseType: !538, size: 64, offset: 448)
!6716 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !6706, file: !260, line: 353, baseType: !538, size: 64, offset: 512)
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !6706, file: !260, line: 354, baseType: !7, size: 32, offset: 576)
!6718 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !6706, file: !260, line: 355, baseType: !7, size: 32, offset: 608)
!6719 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !6706, file: !260, line: 356, baseType: !492, size: 64, offset: 640)
!6720 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !6706, file: !260, line: 357, baseType: !492, size: 64, offset: 704)
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !6706, file: !260, line: 358, baseType: !492, size: 64, offset: 768)
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !6706, file: !260, line: 359, baseType: !538, size: 64, offset: 832)
!6723 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !6706, file: !260, line: 360, baseType: !7, size: 32, offset: 896)
!6724 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !6673, file: !260, line: 436, baseType: !6725, size: 64, offset: 448)
!6725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6726, size: 64)
!6726 = !DISubroutineType(types: !6727)
!6727 = !{!7, !969, !6669, !6705}
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !6673, file: !260, line: 438, baseType: !6702, size: 64, offset: 512)
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !6673, file: !260, line: 439, baseType: !6730, size: 64, offset: 576)
!6730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6731, size: 64)
!6731 = !DISubroutineType(types: !6732)
!6732 = !{!7, !969, !6733}
!6733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6734, size: 64)
!6734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !260, line: 409, size: 1408, elements: !6735)
!6735 = !{!6736, !6737}
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !6734, file: !260, line: 410, baseType: !14, size: 32)
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !6734, file: !260, line: 411, baseType: !6738, size: 1344, offset: 64)
!6738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6739, size: 1344, elements: !1022)
!6739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !260, line: 395, size: 448, elements: !6740)
!6740 = !{!6741, !6742, !6743, !6744, !6745, !6746, !6747, !6748, !6749, !6751}
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6739, file: !260, line: 396, baseType: !14, size: 32)
!6742 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !6739, file: !260, line: 397, baseType: !14, size: 32, offset: 32)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !6739, file: !260, line: 399, baseType: !14, size: 32, offset: 64)
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !6739, file: !260, line: 400, baseType: !14, size: 32, offset: 96)
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !6739, file: !260, line: 401, baseType: !14, size: 32, offset: 128)
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !6739, file: !260, line: 402, baseType: !14, size: 32, offset: 160)
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !6739, file: !260, line: 403, baseType: !14, size: 32, offset: 192)
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !6739, file: !260, line: 404, baseType: !496, size: 64, offset: 256)
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !6739, file: !260, line: 405, baseType: !6750, size: 64, offset: 320)
!6750 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !438, line: 126, baseType: !492)
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !6739, file: !260, line: 406, baseType: !6750, size: 64, offset: 384)
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !6673, file: !260, line: 440, baseType: !6681, size: 64, offset: 640)
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !970, file: !243, line: 1426, baseType: !6754, size: 64, offset: 576)
!6754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6755, size: 64)
!6755 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6756)
!6756 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !243, line: 49, flags: DIFlagFwdDecl)
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !970, file: !243, line: 1427, baseType: !473, size: 64, offset: 640)
!6758 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !970, file: !243, line: 1428, baseType: !473, size: 64, offset: 704)
!6759 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !970, file: !243, line: 1429, baseType: !473, size: 64, offset: 768)
!6760 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !970, file: !243, line: 1430, baseType: !828, size: 64, offset: 832)
!6761 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !970, file: !243, line: 1431, baseType: !1317, size: 256, offset: 896)
!6762 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !970, file: !243, line: 1432, baseType: !7, size: 32, offset: 1152)
!6763 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !970, file: !243, line: 1433, baseType: !544, size: 32, offset: 1184)
!6764 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !970, file: !243, line: 1437, baseType: !6765, size: 64, offset: 1216)
!6765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6766, size: 64)
!6766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6767, size: 64)
!6767 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6768)
!6768 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !243, line: 1437, flags: DIFlagFwdDecl)
!6769 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !970, file: !243, line: 1449, baseType: !6770, size: 64, offset: 1280)
!6770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !845, line: 34, size: 64, elements: !6771)
!6771 = !{!6772}
!6772 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !6770, file: !845, line: 35, baseType: !848, size: 64)
!6773 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !970, file: !243, line: 1450, baseType: !445, size: 128, offset: 1344)
!6774 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !970, file: !243, line: 1451, baseType: !5223, size: 64, offset: 1472)
!6775 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !970, file: !243, line: 1452, baseType: !5243, size: 64, offset: 1536)
!6776 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !970, file: !243, line: 1453, baseType: !6777, size: 64, offset: 1600)
!6777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6778, size: 64)
!6778 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !243, line: 1453, flags: DIFlagFwdDecl)
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !970, file: !243, line: 1454, baseType: !437, size: 128, offset: 1664)
!6780 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !970, file: !243, line: 1455, baseType: !14, size: 32, offset: 1792)
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !970, file: !243, line: 1456, baseType: !6782, size: 2432, offset: 1856)
!6782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !260, line: 518, size: 2432, elements: !6783)
!6783 = !{!6784, !6785, !6786, !6788, !6820}
!6784 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6782, file: !260, line: 519, baseType: !14, size: 32)
!6785 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !6782, file: !260, line: 520, baseType: !1317, size: 256, offset: 64)
!6786 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !6782, file: !260, line: 521, baseType: !6787, size: 192, offset: 320)
!6787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !797, size: 192, elements: !1022)
!6788 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !6782, file: !260, line: 522, baseType: !6789, size: 1728, offset: 512)
!6789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6790, size: 1728, elements: !1022)
!6790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !260, line: 222, size: 576, elements: !6791)
!6791 = !{!6792, !6812, !6813, !6814, !6815, !6816, !6817, !6818, !6819}
!6792 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !6790, file: !260, line: 223, baseType: !6793, size: 64)
!6793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6794, size: 64)
!6794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !260, line: 443, size: 256, elements: !6795)
!6795 = !{!6796, !6797, !6810, !6811}
!6796 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !6794, file: !260, line: 444, baseType: !7, size: 32)
!6797 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !6794, file: !260, line: 445, baseType: !6798, size: 64, offset: 64)
!6798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6799, size: 64)
!6799 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6800)
!6800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !260, line: 310, size: 512, elements: !6801)
!6801 = !{!6802, !6803, !6804, !6805, !6806, !6807, !6808, !6809}
!6802 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !6800, file: !260, line: 311, baseType: !1072, size: 64)
!6803 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !6800, file: !260, line: 312, baseType: !1072, size: 64, offset: 64)
!6804 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !6800, file: !260, line: 313, baseType: !1072, size: 64, offset: 128)
!6805 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !6800, file: !260, line: 314, baseType: !1072, size: 64, offset: 192)
!6806 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !6800, file: !260, line: 315, baseType: !6594, size: 64, offset: 256)
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !6800, file: !260, line: 316, baseType: !6594, size: 64, offset: 320)
!6808 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !6800, file: !260, line: 317, baseType: !6594, size: 64, offset: 384)
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !6800, file: !260, line: 318, baseType: !6666, size: 64, offset: 448)
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !6794, file: !260, line: 446, baseType: !1007, size: 64, offset: 128)
!6811 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !6794, file: !260, line: 447, baseType: !6793, size: 64, offset: 192)
!6812 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !6790, file: !260, line: 224, baseType: !7, size: 32, offset: 64)
!6813 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !6790, file: !260, line: 226, baseType: !445, size: 128, offset: 128)
!6814 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !6790, file: !260, line: 227, baseType: !473, size: 64, offset: 256)
!6815 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !6790, file: !260, line: 228, baseType: !14, size: 32, offset: 320)
!6816 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !6790, file: !260, line: 229, baseType: !14, size: 32, offset: 352)
!6817 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !6790, file: !260, line: 230, baseType: !6630, size: 64, offset: 384)
!6818 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !6790, file: !260, line: 231, baseType: !6630, size: 64, offset: 448)
!6819 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !6790, file: !260, line: 232, baseType: !726, size: 64, offset: 512)
!6820 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6782, file: !260, line: 523, baseType: !6821, size: 192, offset: 2240)
!6821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6798, size: 192, elements: !1022)
!6822 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !970, file: !243, line: 1458, baseType: !6823, size: 2112, offset: 4288)
!6823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !243, line: 1410, size: 2112, elements: !6824)
!6824 = !{!6825, !6826, !6827}
!6825 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !6823, file: !243, line: 1411, baseType: !7, size: 32)
!6826 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !6823, file: !243, line: 1412, baseType: !1255, size: 128, offset: 64)
!6827 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !6823, file: !243, line: 1413, baseType: !6828, size: 1920, offset: 192)
!6828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6829, size: 1920, elements: !1022)
!6829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !6830, line: 12, size: 640, elements: !6831)
!6830 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!6831 = !{!6832, !6840, !6842, !6847, !6848}
!6832 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !6829, file: !6830, line: 13, baseType: !6833, size: 320)
!6833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !6834, line: 17, size: 320, elements: !6835)
!6834 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!6835 = !{!6836, !6837, !6838, !6839}
!6836 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !6833, file: !6834, line: 18, baseType: !7, size: 32)
!6837 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !6833, file: !6834, line: 19, baseType: !7, size: 32, offset: 32)
!6838 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !6833, file: !6834, line: 20, baseType: !1255, size: 128, offset: 64)
!6839 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !6833, file: !6834, line: 22, baseType: !460, size: 128, align: 64, offset: 192)
!6840 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !6829, file: !6830, line: 14, baseType: !6841, size: 64, offset: 320)
!6841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64)
!6842 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !6829, file: !6830, line: 15, baseType: !6843, size: 64, offset: 384)
!6843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !6844, line: 16, size: 64, elements: !6845)
!6844 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!6845 = !{!6846}
!6846 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !6843, file: !6844, line: 17, baseType: !1412, size: 64)
!6847 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !6829, file: !6830, line: 16, baseType: !1255, size: 128, offset: 448)
!6848 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !6829, file: !6830, line: 17, baseType: !544, size: 32, offset: 576)
!6849 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !970, file: !243, line: 1465, baseType: !726, size: 64, offset: 6400)
!6850 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !970, file: !243, line: 1468, baseType: !862, size: 32, offset: 6464)
!6851 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !970, file: !243, line: 1470, baseType: !1796, size: 64, offset: 6528)
!6852 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !970, file: !243, line: 1471, baseType: !1796, size: 64, offset: 6592)
!6853 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !970, file: !243, line: 1473, baseType: !624, size: 32, offset: 6656)
!6854 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !970, file: !243, line: 1474, baseType: !6855, size: 64, offset: 6720)
!6855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6856, size: 64)
!6856 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !243, line: 603, flags: DIFlagFwdDecl)
!6857 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !970, file: !243, line: 1477, baseType: !4356, size: 256, offset: 6784)
!6858 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !970, file: !243, line: 1478, baseType: !6859, size: 128, offset: 7040)
!6859 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !6860, line: 18, baseType: !6861)
!6860 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!6861 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6860, line: 16, size: 128, elements: !6862)
!6862 = !{!6863}
!6863 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !6861, file: !6860, line: 17, baseType: !2391, size: 128)
!6864 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !970, file: !243, line: 1480, baseType: !14, size: 32, offset: 7168)
!6865 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !970, file: !243, line: 1481, baseType: !5301, size: 32, offset: 7200)
!6866 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !970, file: !243, line: 1487, baseType: !1109, size: 192, offset: 7232)
!6867 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !970, file: !243, line: 1493, baseType: !453, size: 64, offset: 7424)
!6868 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !970, file: !243, line: 1495, baseType: !901, size: 64, offset: 7488)
!6869 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !970, file: !243, line: 1500, baseType: !7, size: 32, offset: 7552)
!6870 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !970, file: !243, line: 1502, baseType: !6871, size: 448, offset: 7616)
!6871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !6578, line: 60, size: 448, elements: !6872)
!6872 = !{!6873, !6878, !6879, !6880, !6881, !6882, !6883}
!6873 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !6871, file: !6578, line: 61, baseType: !6874, size: 64)
!6874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6875, size: 64)
!6875 = !DISubroutineType(types: !6876)
!6876 = !{!473, !6877, !6576}
!6877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6871, size: 64)
!6878 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !6871, file: !6578, line: 63, baseType: !6874, size: 64, offset: 64)
!6879 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !6871, file: !6578, line: 66, baseType: !669, size: 64, offset: 128)
!6880 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !6871, file: !6578, line: 67, baseType: !7, size: 32, offset: 192)
!6881 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6871, file: !6578, line: 68, baseType: !14, size: 32, offset: 224)
!6882 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6871, file: !6578, line: 71, baseType: !445, size: 128, offset: 256)
!6883 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !6871, file: !6578, line: 77, baseType: !6884, size: 64, offset: 384)
!6884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 64)
!6885 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !970, file: !243, line: 1505, baseType: !532, size: 64, offset: 8064)
!6886 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !970, file: !243, line: 1508, baseType: !532, size: 64, offset: 8128)
!6887 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !970, file: !243, line: 1511, baseType: !7, size: 32, offset: 8192)
!6888 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !970, file: !243, line: 1514, baseType: !6561, size: 32, offset: 8224)
!6889 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !970, file: !243, line: 1517, baseType: !3098, size: 64, offset: 8256)
!6890 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !970, file: !243, line: 1518, baseType: !1012, size: 64, offset: 8320)
!6891 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !970, file: !243, line: 1525, baseType: !1913, size: 64, offset: 8384)
!6892 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !970, file: !243, line: 1532, baseType: !6893, size: 64, offset: 8448)
!6893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !6894, line: 52, size: 64, elements: !6895)
!6894 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!6895 = !{!6896}
!6896 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6893, file: !6894, line: 53, baseType: !6897, size: 64)
!6897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6898, size: 64)
!6898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !6894, line: 40, size: 256, elements: !6899)
!6899 = !{!6900, !6901, !6906}
!6900 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6898, file: !6894, line: 42, baseType: !884)
!6901 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !6898, file: !6894, line: 44, baseType: !6902, size: 192)
!6902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !6894, line: 28, size: 192, elements: !6903)
!6903 = !{!6904, !6905}
!6904 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6902, file: !6894, line: 29, baseType: !445, size: 128)
!6905 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !6902, file: !6894, line: 31, baseType: !669, size: 64, offset: 128)
!6906 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !6898, file: !6894, line: 49, baseType: !669, size: 64, offset: 192)
!6907 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !970, file: !243, line: 1533, baseType: !6893, size: 64, offset: 8512)
!6908 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !970, file: !243, line: 1534, baseType: !460, size: 128, align: 64, offset: 8576)
!6909 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !970, file: !243, line: 1535, baseType: !1961, size: 256, offset: 8704)
!6910 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !970, file: !243, line: 1537, baseType: !1109, size: 192, offset: 8960)
!6911 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !970, file: !243, line: 1542, baseType: !7, size: 32, offset: 9152)
!6912 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !970, file: !243, line: 1545, baseType: !884, offset: 9184)
!6913 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !970, file: !243, line: 1546, baseType: !445, size: 128, offset: 9216)
!6914 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !970, file: !243, line: 1548, baseType: !884, offset: 9344)
!6915 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !970, file: !243, line: 1549, baseType: !445, size: 128, offset: 9344)
!6916 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !829, file: !830, line: 104, baseType: !473, size: 64, offset: 896)
!6917 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !829, file: !830, line: 105, baseType: !726, size: 64, offset: 960)
!6918 = !DIDerivedType(tag: DW_TAG_member, scope: !829, file: !830, line: 107, baseType: !6919, size: 128, offset: 1024)
!6919 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !829, file: !830, line: 107, size: 128, elements: !6920)
!6920 = !{!6921, !6922}
!6921 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !6919, file: !830, line: 108, baseType: !445, size: 128)
!6922 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !6919, file: !830, line: 109, baseType: !1254, size: 64)
!6923 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !829, file: !830, line: 111, baseType: !445, size: 128, offset: 1152)
!6924 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !829, file: !830, line: 112, baseType: !445, size: 128, offset: 1280)
!6925 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !829, file: !830, line: 120, baseType: !6926, size: 128, offset: 1408)
!6926 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !829, file: !830, line: 116, size: 128, elements: !6927)
!6927 = !{!6928, !6929, !6930}
!6928 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !6926, file: !830, line: 117, baseType: !437, size: 128)
!6929 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !6926, file: !830, line: 118, baseType: !844, size: 128)
!6930 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !6926, file: !830, line: 119, baseType: !460, size: 128, align: 64)
!6931 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !822, file: !243, line: 1866, baseType: !6932, size: 64, offset: 64)
!6932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6933, size: 64)
!6933 = !DISubroutineType(types: !6934)
!6934 = !{!453, !828, !797, !6935}
!6935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6936, size: 64)
!6936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !6937, line: 10, size: 128, elements: !6938)
!6937 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!6938 = !{!6939, !6940}
!6939 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6936, file: !6937, line: 11, baseType: !3885, size: 64)
!6940 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !6936, file: !6937, line: 12, baseType: !726, size: 64, offset: 64)
!6941 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !822, file: !243, line: 1867, baseType: !6942, size: 64, offset: 128)
!6942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6943, size: 64)
!6943 = !DISubroutineType(types: !6944)
!6944 = !{!7, !797, !7}
!6945 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !822, file: !243, line: 1868, baseType: !6946, size: 64, offset: 192)
!6946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6947, size: 64)
!6947 = !DISubroutineType(types: !6948)
!6948 = !{!6949, !797, !7}
!6949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6950, size: 64)
!6950 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !243, line: 581, flags: DIFlagFwdDecl)
!6951 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !822, file: !243, line: 1870, baseType: !6952, size: 64, offset: 256)
!6952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6953, size: 64)
!6953 = !DISubroutineType(types: !6954)
!6954 = !{!7, !828, !733, !7}
!6955 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !822, file: !243, line: 1872, baseType: !6956, size: 64, offset: 320)
!6956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6957, size: 64)
!6957 = !DISubroutineType(types: !6958)
!6958 = !{!7, !797, !828, !801, !696}
!6959 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !822, file: !243, line: 1873, baseType: !6960, size: 64, offset: 384)
!6960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6961, size: 64)
!6961 = !DISubroutineType(types: !6962)
!6962 = !{!7, !828, !797, !828}
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !822, file: !243, line: 1874, baseType: !6964, size: 64, offset: 448)
!6964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6965, size: 64)
!6965 = !DISubroutineType(types: !6966)
!6966 = !{!7, !797, !828}
!6967 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !822, file: !243, line: 1875, baseType: !6968, size: 64, offset: 512)
!6968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6969, size: 64)
!6969 = !DISubroutineType(types: !6970)
!6970 = !{!7, !797, !828, !453}
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !822, file: !243, line: 1876, baseType: !6972, size: 64, offset: 576)
!6972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6973, size: 64)
!6973 = !DISubroutineType(types: !6974)
!6974 = !{!7, !797, !828, !801}
!6975 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !822, file: !243, line: 1877, baseType: !6964, size: 64, offset: 640)
!6976 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !822, file: !243, line: 1878, baseType: !6977, size: 64, offset: 704)
!6977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6978, size: 64)
!6978 = !DISubroutineType(types: !6979)
!6979 = !{!7, !797, !828, !801, !974}
!6980 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !822, file: !243, line: 1879, baseType: !6981, size: 64, offset: 768)
!6981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6982, size: 64)
!6982 = !DISubroutineType(types: !6983)
!6983 = !{!7, !797, !828, !797, !828, !14}
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !822, file: !243, line: 1881, baseType: !6985, size: 64, offset: 832)
!6985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6986, size: 64)
!6986 = !DISubroutineType(types: !6987)
!6987 = !{!7, !828, !6988}
!6988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6989, size: 64)
!6989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !243, line: 219, size: 640, elements: !6990)
!6990 = !{!6991, !6992, !6993, !6994, !6995, !6996, !7001, !7002, !7003}
!6991 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !6989, file: !243, line: 220, baseType: !14, size: 32)
!6992 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !6989, file: !243, line: 221, baseType: !801, size: 16, offset: 32)
!6993 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !6989, file: !243, line: 222, baseType: !804, size: 32, offset: 64)
!6994 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !6989, file: !243, line: 223, baseType: !812, size: 32, offset: 96)
!6995 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !6989, file: !243, line: 224, baseType: !979, size: 64, offset: 128)
!6996 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !6989, file: !243, line: 225, baseType: !6997, size: 128, offset: 192)
!6997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1797, line: 13, size: 128, elements: !6998)
!6998 = !{!6999, !7000}
!6999 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !6997, file: !1797, line: 14, baseType: !1796, size: 64)
!7000 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !6997, file: !1797, line: 15, baseType: !669, size: 64, offset: 64)
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !6989, file: !243, line: 226, baseType: !6997, size: 128, offset: 320)
!7002 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !6989, file: !243, line: 227, baseType: !6997, size: 128, offset: 448)
!7003 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !6989, file: !243, line: 234, baseType: !1165, size: 64, offset: 576)
!7004 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !822, file: !243, line: 1882, baseType: !7005, size: 64, offset: 896)
!7005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7006, size: 64)
!7006 = !DISubroutineType(types: !7007)
!7007 = !{!7, !960, !7008, !862, !14}
!7008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7009, size: 64)
!7009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !7010, line: 22, size: 1152, elements: !7011)
!7010 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!7011 = !{!7012, !7013, !7014, !7015, !7016, !7017, !7018, !7019, !7020, !7021, !7022, !7023, !7024, !7025, !7026, !7027, !7028, !7029}
!7012 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !7009, file: !7010, line: 23, baseType: !862, size: 32)
!7013 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !7009, file: !7010, line: 24, baseType: !801, size: 16, offset: 32)
!7014 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !7009, file: !7010, line: 25, baseType: !14, size: 32, offset: 64)
!7015 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !7009, file: !7010, line: 26, baseType: !1804, size: 32, offset: 96)
!7016 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !7009, file: !7010, line: 27, baseType: !492, size: 64, offset: 128)
!7017 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !7009, file: !7010, line: 28, baseType: !492, size: 64, offset: 192)
!7018 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !7009, file: !7010, line: 37, baseType: !492, size: 64, offset: 256)
!7019 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7009, file: !7010, line: 38, baseType: !974, size: 32, offset: 320)
!7020 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !7009, file: !7010, line: 39, baseType: !974, size: 32, offset: 352)
!7021 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !7009, file: !7010, line: 40, baseType: !804, size: 32, offset: 384)
!7022 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !7009, file: !7010, line: 41, baseType: !812, size: 32, offset: 416)
!7023 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7009, file: !7010, line: 42, baseType: !979, size: 64, offset: 448)
!7024 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !7009, file: !7010, line: 43, baseType: !6997, size: 128, offset: 512)
!7025 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !7009, file: !7010, line: 44, baseType: !6997, size: 128, offset: 640)
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !7009, file: !7010, line: 45, baseType: !6997, size: 128, offset: 768)
!7027 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !7009, file: !7010, line: 46, baseType: !6997, size: 128, offset: 896)
!7028 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !7009, file: !7010, line: 47, baseType: !492, size: 64, offset: 1024)
!7029 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !7009, file: !7010, line: 48, baseType: !492, size: 64, offset: 1088)
!7030 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !822, file: !243, line: 1883, baseType: !7031, size: 64, offset: 960)
!7031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7032, size: 64)
!7032 = !DISubroutineType(types: !7033)
!7033 = !{!1170, !828, !733, !750}
!7034 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !822, file: !243, line: 1884, baseType: !7035, size: 64, offset: 1024)
!7035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7036, size: 64)
!7036 = !DISubroutineType(types: !7037)
!7037 = !{!7, !797, !7038, !492, !492}
!7038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7039, size: 64)
!7039 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !243, line: 50, flags: DIFlagFwdDecl)
!7040 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !822, file: !243, line: 1886, baseType: !7041, size: 64, offset: 1088)
!7041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7042, size: 64)
!7042 = !DISubroutineType(types: !7043)
!7043 = !{!7, !797, !7044, !7}
!7044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6997, size: 64)
!7045 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !822, file: !243, line: 1887, baseType: !7046, size: 64, offset: 1152)
!7046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7047, size: 64)
!7047 = !DISubroutineType(types: !7048)
!7048 = !{!7, !797, !828, !1165, !14, !801}
!7049 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !822, file: !243, line: 1890, baseType: !6972, size: 64, offset: 1216)
!7050 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !822, file: !243, line: 1891, baseType: !7051, size: 64, offset: 1280)
!7051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7052, size: 64)
!7052 = !DISubroutineType(types: !7053)
!7053 = !{!7, !797, !6949, !7}
!7054 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !798, file: !243, line: 623, baseType: !969, size: 64, offset: 192)
!7055 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !798, file: !243, line: 624, baseType: !793, size: 64, offset: 256)
!7056 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !798, file: !243, line: 631, baseType: !473, size: 64, offset: 320)
!7057 = !DIDerivedType(tag: DW_TAG_member, scope: !798, file: !243, line: 639, baseType: !7058, size: 32, offset: 384)
!7058 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !798, file: !243, line: 639, size: 32, elements: !7059)
!7059 = !{!7060, !7061}
!7060 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !7058, file: !243, line: 640, baseType: !5615, size: 32)
!7061 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !7058, file: !243, line: 641, baseType: !14, size: 32)
!7062 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !798, file: !243, line: 643, baseType: !974, size: 32, offset: 416)
!7063 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !798, file: !243, line: 644, baseType: !979, size: 64, offset: 448)
!7064 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !798, file: !243, line: 645, baseType: !6997, size: 128, offset: 512)
!7065 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !798, file: !243, line: 646, baseType: !6997, size: 128, offset: 640)
!7066 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !798, file: !243, line: 647, baseType: !6997, size: 128, offset: 768)
!7067 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !798, file: !243, line: 648, baseType: !884, offset: 896)
!7068 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !798, file: !243, line: 649, baseType: !633, size: 16, offset: 896)
!7069 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !798, file: !243, line: 650, baseType: !1552, size: 8, offset: 912)
!7070 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !798, file: !243, line: 651, baseType: !1552, size: 8, offset: 920)
!7071 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !798, file: !243, line: 652, baseType: !6750, size: 64, offset: 960)
!7072 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !798, file: !243, line: 659, baseType: !473, size: 64, offset: 1024)
!7073 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !798, file: !243, line: 660, baseType: !1317, size: 256, offset: 1088)
!7074 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !798, file: !243, line: 662, baseType: !473, size: 64, offset: 1344)
!7075 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !798, file: !243, line: 663, baseType: !473, size: 64, offset: 1408)
!7076 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !798, file: !243, line: 665, baseType: !437, size: 128, offset: 1472)
!7077 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !798, file: !243, line: 666, baseType: !445, size: 128, offset: 1600)
!7078 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !798, file: !243, line: 675, baseType: !445, size: 128, offset: 1728)
!7079 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !798, file: !243, line: 676, baseType: !445, size: 128, offset: 1856)
!7080 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !798, file: !243, line: 677, baseType: !445, size: 128, offset: 1984)
!7081 = !DIDerivedType(tag: DW_TAG_member, scope: !798, file: !243, line: 678, baseType: !7082, size: 128, offset: 2112)
!7082 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !798, file: !243, line: 678, size: 128, elements: !7083)
!7083 = !{!7084, !7085}
!7084 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !7082, file: !243, line: 679, baseType: !1012, size: 64)
!7085 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !7082, file: !243, line: 680, baseType: !460, size: 128, align: 64)
!7086 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !798, file: !243, line: 682, baseType: !534, size: 64, offset: 2240)
!7087 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !798, file: !243, line: 683, baseType: !534, size: 64, offset: 2304)
!7088 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !798, file: !243, line: 684, baseType: !544, size: 32, offset: 2368)
!7089 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !798, file: !243, line: 685, baseType: !544, size: 32, offset: 2400)
!7090 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !798, file: !243, line: 686, baseType: !544, size: 32, offset: 2432)
!7091 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !798, file: !243, line: 688, baseType: !544, size: 32, offset: 2464)
!7092 = !DIDerivedType(tag: DW_TAG_member, scope: !798, file: !243, line: 690, baseType: !7093, size: 64, offset: 2496)
!7093 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !798, file: !243, line: 690, size: 64, elements: !7094)
!7094 = !{!7095, !7096}
!7095 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !7093, file: !243, line: 691, baseType: !1156, size: 64)
!7096 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !7093, file: !243, line: 692, baseType: !1037, size: 64)
!7097 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !798, file: !243, line: 694, baseType: !7098, size: 64, offset: 2560)
!7098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7099, size: 64)
!7099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !243, line: 1100, size: 384, elements: !7100)
!7100 = !{!7101, !7102, !7103, !7104}
!7101 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !7099, file: !243, line: 1101, baseType: !884)
!7102 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !7099, file: !243, line: 1102, baseType: !445, size: 128)
!7103 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !7099, file: !243, line: 1103, baseType: !445, size: 128, offset: 128)
!7104 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !7099, file: !243, line: 1104, baseType: !445, size: 128, offset: 256)
!7105 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !798, file: !243, line: 695, baseType: !794, size: 1216, align: 64, offset: 2624)
!7106 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !798, file: !243, line: 696, baseType: !445, size: 128, offset: 3840)
!7107 = !DIDerivedType(tag: DW_TAG_member, scope: !798, file: !243, line: 697, baseType: !7108, size: 64, offset: 3968)
!7108 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !798, file: !243, line: 697, size: 64, elements: !7109)
!7109 = !{!7110, !7111, !7112, !7115, !7116}
!7110 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !7108, file: !243, line: 698, baseType: !6075, size: 64)
!7111 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !7108, file: !243, line: 699, baseType: !5223, size: 64)
!7112 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !7108, file: !243, line: 700, baseType: !7113, size: 64)
!7113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7114, size: 64)
!7114 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !243, line: 700, flags: DIFlagFwdDecl)
!7115 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !7108, file: !243, line: 701, baseType: !733, size: 64)
!7116 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !7108, file: !243, line: 702, baseType: !14, size: 32)
!7117 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !798, file: !243, line: 705, baseType: !624, size: 32, offset: 4032)
!7118 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !798, file: !243, line: 708, baseType: !624, size: 32, offset: 4064)
!7119 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !798, file: !243, line: 709, baseType: !6855, size: 64, offset: 4096)
!7120 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !798, file: !243, line: 720, baseType: !726, size: 64, offset: 4160)
!7121 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !794, file: !243, line: 453, baseType: !2139, size: 128, offset: 64)
!7122 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !794, file: !243, line: 454, baseType: !2144, size: 32, offset: 192)
!7123 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !794, file: !243, line: 455, baseType: !544, size: 32, offset: 224)
!7124 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !794, file: !243, line: 460, baseType: !1542, size: 128, offset: 256)
!7125 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !794, file: !243, line: 461, baseType: !1317, size: 256, offset: 384)
!7126 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !794, file: !243, line: 462, baseType: !473, size: 64, offset: 640)
!7127 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !794, file: !243, line: 463, baseType: !473, size: 64, offset: 704)
!7128 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !794, file: !243, line: 464, baseType: !473, size: 64, offset: 768)
!7129 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !794, file: !243, line: 465, baseType: !7130, size: 64, offset: 832)
!7130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7131, size: 64)
!7131 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7132)
!7132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !243, line: 367, size: 1408, elements: !7133)
!7133 = !{!7134, !7138, !7142, !7146, !7150, !7154, !7166, !7170, !7174, !7178, !7182, !7186, !7190, !7191, !7195, !7201, !7202, !7203, !7207, !7212, !7216, !7223}
!7134 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !7132, file: !243, line: 368, baseType: !7135, size: 64)
!7135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7136, size: 64)
!7136 = !DISubroutineType(types: !7137)
!7137 = !{!7, !780, !1049}
!7138 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !7132, file: !243, line: 369, baseType: !7139, size: 64, offset: 64)
!7139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7140, size: 64)
!7140 = !DISubroutineType(types: !7141)
!7141 = !{!7, !1165, !780}
!7142 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !7132, file: !243, line: 372, baseType: !7143, size: 64, offset: 128)
!7143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7144, size: 64)
!7144 = !DISubroutineType(types: !7145)
!7145 = !{!7, !793, !1049}
!7146 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !7132, file: !243, line: 375, baseType: !7147, size: 64, offset: 192)
!7147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7148, size: 64)
!7148 = !DISubroutineType(types: !7149)
!7149 = !{!7, !780}
!7150 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !7132, file: !243, line: 381, baseType: !7151, size: 64, offset: 256)
!7151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7152, size: 64)
!7152 = !DISubroutineType(types: !7153)
!7153 = !{!7, !1165, !793, !448, !14}
!7154 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !7132, file: !243, line: 383, baseType: !7155, size: 64, offset: 320)
!7155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7156, size: 64)
!7156 = !DISubroutineType(types: !7157)
!7157 = !{null, !7158}
!7158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7159, size: 64)
!7159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1202, line: 795, size: 256, elements: !7160)
!7160 = !{!7161, !7162, !7163, !7164, !7165}
!7161 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !7159, file: !1202, line: 796, baseType: !1165, size: 64)
!7162 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !7159, file: !1202, line: 797, baseType: !793, size: 64, offset: 64)
!7163 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !7159, file: !1202, line: 799, baseType: !473, size: 64, offset: 128)
!7164 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !7159, file: !1202, line: 800, baseType: !14, size: 32, offset: 192)
!7165 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !7159, file: !1202, line: 801, baseType: !14, size: 32, offset: 224)
!7166 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !7132, file: !243, line: 385, baseType: !7167, size: 64, offset: 384)
!7167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7168, size: 64)
!7168 = !DISubroutineType(types: !7169)
!7169 = !{!7, !1165, !793, !979, !14, !14, !6155, !4075}
!7170 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !7132, file: !243, line: 388, baseType: !7171, size: 64, offset: 448)
!7171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7172, size: 64)
!7172 = !DISubroutineType(types: !7173)
!7173 = !{!7, !1165, !793, !979, !14, !14, !780, !726}
!7174 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !7132, file: !243, line: 393, baseType: !7175, size: 64, offset: 512)
!7175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7176, size: 64)
!7176 = !DISubroutineType(types: !7177)
!7177 = !{!4370, !793, !4370}
!7178 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !7132, file: !243, line: 394, baseType: !7179, size: 64, offset: 576)
!7179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7180, size: 64)
!7180 = !DISubroutineType(types: !7181)
!7181 = !{null, !780, !14, !14}
!7182 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !7132, file: !243, line: 395, baseType: !7183, size: 64, offset: 640)
!7183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7184, size: 64)
!7184 = !DISubroutineType(types: !7185)
!7185 = !{!7, !780, !2144}
!7186 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !7132, file: !243, line: 396, baseType: !7187, size: 64, offset: 704)
!7187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7188, size: 64)
!7188 = !DISubroutineType(types: !7189)
!7189 = !{null, !780}
!7190 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !7132, file: !243, line: 397, baseType: !1178, size: 64, offset: 768)
!7191 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !7132, file: !243, line: 402, baseType: !7192, size: 64, offset: 832)
!7192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7193, size: 64)
!7193 = !DISubroutineType(types: !7194)
!7194 = !{!7, !793, !780, !780, !265}
!7195 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !7132, file: !243, line: 404, baseType: !7196, size: 64, offset: 896)
!7196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7197, size: 64)
!7197 = !DISubroutineType(types: !7198)
!7198 = !{!696, !780, !7199}
!7199 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !7200, line: 305, baseType: !14)
!7200 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!7201 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !7132, file: !243, line: 405, baseType: !7187, size: 64, offset: 960)
!7202 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !7132, file: !243, line: 406, baseType: !7147, size: 64, offset: 1024)
!7203 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !7132, file: !243, line: 407, baseType: !7204, size: 64, offset: 1088)
!7204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7205, size: 64)
!7205 = !DISubroutineType(types: !7206)
!7206 = !{!7, !780, !473, !473}
!7207 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !7132, file: !243, line: 409, baseType: !7208, size: 64, offset: 1152)
!7208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7209, size: 64)
!7209 = !DISubroutineType(types: !7210)
!7210 = !{null, !780, !7211, !7211}
!7211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64)
!7212 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !7132, file: !243, line: 410, baseType: !7213, size: 64, offset: 1216)
!7213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7214, size: 64)
!7214 = !DISubroutineType(types: !7215)
!7215 = !{!7, !793, !780}
!7216 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !7132, file: !243, line: 413, baseType: !7217, size: 64, offset: 1280)
!7217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7218, size: 64)
!7218 = !DISubroutineType(types: !7219)
!7219 = !{!7, !7220, !1165, !7222}
!7220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7221, size: 64)
!7221 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !243, line: 61, flags: DIFlagFwdDecl)
!7222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4370, size: 64)
!7223 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !7132, file: !243, line: 415, baseType: !7224, size: 64, offset: 1344)
!7224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7225, size: 64)
!7225 = !DISubroutineType(types: !7226)
!7226 = !{null, !1165}
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !794, file: !243, line: 466, baseType: !473, size: 64, offset: 896)
!7228 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !794, file: !243, line: 467, baseType: !6561, size: 32, offset: 960)
!7229 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !794, file: !243, line: 468, baseType: !884, offset: 992)
!7230 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !794, file: !243, line: 469, baseType: !445, size: 128, offset: 1024)
!7231 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !794, file: !243, line: 470, baseType: !726, size: 64, offset: 1152)
!7232 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !789, file: !782, line: 87, baseType: !473, size: 64, offset: 192)
!7233 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !789, file: !782, line: 94, baseType: !473, size: 64, offset: 256)
!7234 = !DIDerivedType(tag: DW_TAG_member, scope: !786, file: !782, line: 96, baseType: !7235, size: 64)
!7235 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !786, file: !782, line: 96, size: 64, elements: !7236)
!7236 = !{!7237}
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !7235, file: !782, line: 101, baseType: !7238, size: 64)
!7238 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !438, line: 143, baseType: !492)
!7239 = !DIDerivedType(tag: DW_TAG_member, scope: !786, file: !782, line: 103, baseType: !7240, size: 320)
!7240 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !786, file: !782, line: 103, size: 320, elements: !7241)
!7241 = !{!7242, !7252, !7253, !7254}
!7242 = !DIDerivedType(tag: DW_TAG_member, scope: !7240, file: !782, line: 104, baseType: !7243, size: 128)
!7243 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7240, file: !782, line: 104, size: 128, elements: !7244)
!7244 = !{!7245, !7246}
!7245 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !7243, file: !782, line: 105, baseType: !445, size: 128)
!7246 = !DIDerivedType(tag: DW_TAG_member, scope: !7243, file: !782, line: 106, baseType: !7247, size: 128)
!7247 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7243, file: !782, line: 106, size: 128, elements: !7248)
!7248 = !{!7249, !7250, !7251}
!7249 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7247, file: !782, line: 107, baseType: !780, size: 64)
!7250 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !7247, file: !782, line: 109, baseType: !7, size: 32, offset: 64)
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !7247, file: !782, line: 110, baseType: !7, size: 32, offset: 96)
!7252 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !7240, file: !782, line: 117, baseType: !2432, size: 64, offset: 128)
!7253 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !7240, file: !782, line: 119, baseType: !726, size: 64, offset: 192)
!7254 = !DIDerivedType(tag: DW_TAG_member, scope: !7240, file: !782, line: 120, baseType: !7255, size: 64, offset: 256)
!7255 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7240, file: !782, line: 120, size: 64, elements: !7256)
!7256 = !{!7257, !7258, !7259}
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !7255, file: !782, line: 121, baseType: !726, size: 64)
!7258 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !7255, file: !782, line: 122, baseType: !473, size: 64)
!7259 = !DIDerivedType(tag: DW_TAG_member, scope: !7255, file: !782, line: 123, baseType: !7260, size: 32)
!7260 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7255, file: !782, line: 123, size: 32, elements: !7261)
!7261 = !{!7262, !7263, !7264}
!7262 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !7260, file: !782, line: 124, baseType: !14, size: 16, flags: DIFlagBitField, extraData: i64 0)
!7263 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !7260, file: !782, line: 125, baseType: !14, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!7264 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !7260, file: !782, line: 126, baseType: !14, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!7265 = !DIDerivedType(tag: DW_TAG_member, scope: !786, file: !782, line: 130, baseType: !7266, size: 192)
!7266 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !786, file: !782, line: 130, size: 192, elements: !7267)
!7267 = !{!7268, !7269, !7270, !7271, !7272}
!7268 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !7266, file: !782, line: 131, baseType: !473, size: 64)
!7269 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !7266, file: !782, line: 134, baseType: !650, size: 8, offset: 64)
!7270 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !7266, file: !782, line: 135, baseType: !650, size: 8, offset: 72)
!7271 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !7266, file: !782, line: 136, baseType: !544, size: 32, offset: 96)
!7272 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !7266, file: !782, line: 137, baseType: !14, size: 32, offset: 128)
!7273 = !DIDerivedType(tag: DW_TAG_member, scope: !786, file: !782, line: 139, baseType: !7274, size: 256)
!7274 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !786, file: !782, line: 139, size: 256, elements: !7275)
!7275 = !{!7276, !7277, !7278}
!7276 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !7274, file: !782, line: 140, baseType: !473, size: 64)
!7277 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !7274, file: !782, line: 141, baseType: !544, size: 32, offset: 64)
!7278 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !7274, file: !782, line: 143, baseType: !445, size: 128, offset: 128)
!7279 = !DIDerivedType(tag: DW_TAG_member, scope: !786, file: !782, line: 145, baseType: !7280, size: 256)
!7280 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !786, file: !782, line: 145, size: 256, elements: !7281)
!7281 = !{!7282, !7283, !7284, !7285, !7290}
!7282 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !7280, file: !782, line: 146, baseType: !473, size: 64)
!7283 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !7280, file: !782, line: 147, baseType: !4687, size: 64, offset: 64)
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !7280, file: !782, line: 148, baseType: !473, size: 64, offset: 128)
!7285 = !DIDerivedType(tag: DW_TAG_member, scope: !7280, file: !782, line: 149, baseType: !7286, size: 64, offset: 192)
!7286 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7280, file: !782, line: 149, size: 64, elements: !7287)
!7287 = !{!7288, !7289}
!7288 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !7286, file: !782, line: 150, baseType: !1280, size: 64)
!7289 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !7286, file: !782, line: 151, baseType: !544, size: 32)
!7290 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !7280, file: !782, line: 156, baseType: !884, offset: 256)
!7291 = !DIDerivedType(tag: DW_TAG_member, scope: !786, file: !782, line: 159, baseType: !7292, size: 128)
!7292 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !786, file: !782, line: 159, size: 128, elements: !7293)
!7293 = !{!7294, !7338}
!7294 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !7292, file: !782, line: 161, baseType: !7295, size: 64)
!7295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7296, size: 64)
!7296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !273, line: 110, size: 1152, elements: !7297)
!7297 = !{!7298, !7308, !7309, !7310, !7311, !7312, !7313, !7325, !7326, !7327}
!7298 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !7296, file: !273, line: 111, baseType: !7299, size: 384)
!7299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !273, line: 19, size: 384, elements: !7300)
!7300 = !{!7301, !7303, !7304, !7305, !7306, !7307}
!7301 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !7299, file: !273, line: 20, baseType: !7302, size: 64)
!7302 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!7303 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !7299, file: !273, line: 21, baseType: !7302, size: 64, offset: 64)
!7304 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !7299, file: !273, line: 22, baseType: !7302, size: 64, offset: 128)
!7305 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !7299, file: !273, line: 23, baseType: !473, size: 64, offset: 192)
!7306 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !7299, file: !273, line: 24, baseType: !473, size: 64, offset: 256)
!7307 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !7299, file: !273, line: 25, baseType: !473, size: 64, offset: 320)
!7308 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !7296, file: !273, line: 112, baseType: !4391, size: 64, offset: 384)
!7309 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !7296, file: !273, line: 113, baseType: !4377, size: 128, offset: 448)
!7310 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !7296, file: !273, line: 114, baseType: !1701, size: 192, offset: 576)
!7311 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7296, file: !273, line: 115, baseType: !272, size: 32, offset: 768)
!7312 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7296, file: !273, line: 116, baseType: !14, size: 32, offset: 800)
!7313 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7296, file: !273, line: 117, baseType: !7314, size: 64, offset: 832)
!7314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7315, size: 64)
!7315 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7316)
!7316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !273, line: 67, size: 256, elements: !7317)
!7317 = !{!7318, !7319, !7323, !7324}
!7318 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !7316, file: !273, line: 73, baseType: !7187, size: 64)
!7319 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !7316, file: !273, line: 78, baseType: !7320, size: 64, offset: 64)
!7320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7321, size: 64)
!7321 = !DISubroutineType(types: !7322)
!7322 = !{null, !7295}
!7323 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !7316, file: !273, line: 83, baseType: !7320, size: 64, offset: 128)
!7324 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !7316, file: !273, line: 89, baseType: !4648, size: 64, offset: 192)
!7325 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !7296, file: !273, line: 118, baseType: !726, size: 64, offset: 896)
!7326 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !7296, file: !273, line: 119, baseType: !7, size: 32, offset: 960)
!7327 = !DIDerivedType(tag: DW_TAG_member, scope: !7296, file: !273, line: 120, baseType: !7328, size: 128, offset: 1024)
!7328 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7296, file: !273, line: 120, size: 128, elements: !7329)
!7329 = !{!7330, !7336}
!7330 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !7328, file: !273, line: 121, baseType: !7331, size: 128)
!7331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !7332, line: 6, size: 128, elements: !7333)
!7332 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!7333 = !{!7334, !7335}
!7334 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7331, file: !7332, line: 7, baseType: !492, size: 64)
!7335 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !7331, file: !7332, line: 8, baseType: !492, size: 64, offset: 64)
!7336 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !7328, file: !273, line: 122, baseType: !7337)
!7337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7331, elements: !2076)
!7338 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !7292, file: !782, line: 162, baseType: !726, size: 64, offset: 64)
!7339 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !786, file: !782, line: 176, baseType: !460, size: 128, align: 64)
!7340 = !DIDerivedType(tag: DW_TAG_member, scope: !781, file: !782, line: 179, baseType: !7341, size: 32, offset: 384)
!7341 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !781, file: !782, line: 179, size: 32, elements: !7342)
!7342 = !{!7343, !7344, !7345, !7346}
!7343 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !7341, file: !782, line: 184, baseType: !544, size: 32)
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !7341, file: !782, line: 192, baseType: !14, size: 32)
!7345 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !7341, file: !782, line: 194, baseType: !14, size: 32)
!7346 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !7341, file: !782, line: 195, baseType: !7, size: 32)
!7347 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !781, file: !782, line: 199, baseType: !544, size: 32, offset: 416)
!7348 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !776, file: !777, line: 33, baseType: !14, size: 32, offset: 64)
!7349 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !776, file: !777, line: 34, baseType: !14, size: 32, offset: 96)
!7350 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !756, file: !746, line: 42, baseType: !6075, size: 64)
!7351 = !DIDerivedType(tag: DW_TAG_member, scope: !745, file: !746, line: 44, baseType: !7352, size: 64, offset: 256)
!7352 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !745, file: !746, line: 44, size: 64, elements: !7353)
!7353 = !{!7354, !7355}
!7354 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !7352, file: !746, line: 45, baseType: !473, size: 64)
!7355 = !DIDerivedType(tag: DW_TAG_member, scope: !7352, file: !746, line: 46, baseType: !7356, size: 64)
!7356 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7352, file: !746, line: 46, size: 64, elements: !7357)
!7357 = !{!7358, !7359}
!7358 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7356, file: !746, line: 47, baseType: !14, size: 32)
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !7356, file: !746, line: 48, baseType: !14, size: 32, offset: 32)
!7360 = !DIDerivedType(tag: DW_TAG_member, scope: !740, file: !676, line: 60, baseType: !7361, size: 64, offset: 448)
!7361 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !740, file: !676, line: 60, size: 64, elements: !7362)
!7362 = !{!7363, !7364}
!7363 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control", scope: !7361, file: !676, line: 61, baseType: !726, size: 64)
!7364 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control_user", scope: !7361, file: !676, line: 62, baseType: !726, size: 64)
!7365 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control_is_user", scope: !740, file: !676, line: 64, baseType: !696, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!7366 = !DIDerivedType(tag: DW_TAG_member, name: "msg_controllen", scope: !740, file: !676, line: 65, baseType: !751, size: 64, offset: 576)
!7367 = !DIDerivedType(tag: DW_TAG_member, name: "msg_flags", scope: !740, file: !676, line: 66, baseType: !14, size: 32, offset: 640)
!7368 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iocb", scope: !740, file: !676, line: 67, baseType: !1181, size: 64, offset: 704)
!7369 = !DIDerivedType(tag: DW_TAG_member, name: "recvmsg", scope: !663, file: !608, line: 1159, baseType: !7370, size: 64, offset: 832)
!7370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7371, size: 64)
!7371 = !DISubroutineType(types: !7372)
!7372 = !{!7, !606, !739, !750, !7, !7, !695}
!7373 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !663, file: !608, line: 1162, baseType: !7374, size: 64, offset: 896)
!7374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7375, size: 64)
!7375 = !DISubroutineType(types: !7376)
!7376 = !{!7, !606, !780, !7, !750, !7}
!7377 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !663, file: !608, line: 1164, baseType: !671, size: 64, offset: 960)
!7378 = !DIDerivedType(tag: DW_TAG_member, name: "bind_add", scope: !663, file: !608, line: 1166, baseType: !671, size: 64, offset: 1024)
!7379 = !DIDerivedType(tag: DW_TAG_member, name: "backlog_rcv", scope: !663, file: !608, line: 1169, baseType: !7380, size: 64, offset: 1088)
!7380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7381, size: 64)
!7381 = !DISubroutineType(types: !7382)
!7382 = !{!7, !606, !576}
!7383 = !DIDerivedType(tag: DW_TAG_member, name: "release_cb", scope: !663, file: !608, line: 1172, baseType: !707, size: 64, offset: 1152)
!7384 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !663, file: !608, line: 1175, baseType: !703, size: 64, offset: 1216)
!7385 = !DIDerivedType(tag: DW_TAG_member, name: "unhash", scope: !663, file: !608, line: 1176, baseType: !707, size: 64, offset: 1280)
!7386 = !DIDerivedType(tag: DW_TAG_member, name: "rehash", scope: !663, file: !608, line: 1177, baseType: !707, size: 64, offset: 1344)
!7387 = !DIDerivedType(tag: DW_TAG_member, name: "get_port", scope: !663, file: !608, line: 1178, baseType: !7388, size: 64, offset: 1408)
!7388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7389, size: 64)
!7389 = !DISubroutineType(types: !7390)
!7390 = !{!7, !606, !633}
!7391 = !DIDerivedType(tag: DW_TAG_member, name: "inuse_idx", scope: !663, file: !608, line: 1182, baseType: !14, size: 32, offset: 1472)
!7392 = !DIDerivedType(tag: DW_TAG_member, name: "stream_memory_free", scope: !663, file: !608, line: 1185, baseType: !7393, size: 64, offset: 1536)
!7393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7394, size: 64)
!7394 = !DISubroutineType(types: !7395)
!7395 = !{!696, !7396, !7}
!7396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7397, size: 64)
!7397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !607)
!7398 = !DIDerivedType(tag: DW_TAG_member, name: "stream_memory_read", scope: !663, file: !608, line: 1186, baseType: !7399, size: 64, offset: 1600)
!7399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7400, size: 64)
!7400 = !DISubroutineType(types: !7401)
!7401 = !{!696, !7396}
!7402 = !DIDerivedType(tag: DW_TAG_member, name: "enter_memory_pressure", scope: !663, file: !608, line: 1188, baseType: !707, size: 64, offset: 1664)
!7403 = !DIDerivedType(tag: DW_TAG_member, name: "leave_memory_pressure", scope: !663, file: !608, line: 1189, baseType: !707, size: 64, offset: 1728)
!7404 = !DIDerivedType(tag: DW_TAG_member, name: "memory_allocated", scope: !663, file: !608, line: 1190, baseType: !6884, size: 64, offset: 1792)
!7405 = !DIDerivedType(tag: DW_TAG_member, name: "sockets_allocated", scope: !663, file: !608, line: 1191, baseType: !7406, size: 64, offset: 1856)
!7406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3204, size: 64)
!7407 = !DIDerivedType(tag: DW_TAG_member, name: "memory_pressure", scope: !663, file: !608, line: 1198, baseType: !2616, size: 64, offset: 1920)
!7408 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_mem", scope: !663, file: !608, line: 1199, baseType: !7409, size: 64, offset: 1984)
!7409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 64)
!7410 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_wmem", scope: !663, file: !608, line: 1201, baseType: !695, size: 64, offset: 2048)
!7411 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_rmem", scope: !663, file: !608, line: 1202, baseType: !695, size: 64, offset: 2112)
!7412 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_wmem_offset", scope: !663, file: !608, line: 1203, baseType: !862, size: 32, offset: 2176)
!7413 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_rmem_offset", scope: !663, file: !608, line: 1204, baseType: !862, size: 32, offset: 2208)
!7414 = !DIDerivedType(tag: DW_TAG_member, name: "max_header", scope: !663, file: !608, line: 1206, baseType: !7, size: 32, offset: 2240)
!7415 = !DIDerivedType(tag: DW_TAG_member, name: "no_autobind", scope: !663, file: !608, line: 1207, baseType: !696, size: 8, offset: 2272)
!7416 = !DIDerivedType(tag: DW_TAG_member, name: "slab", scope: !663, file: !608, line: 1209, baseType: !2432, size: 64, offset: 2304)
!7417 = !DIDerivedType(tag: DW_TAG_member, name: "obj_size", scope: !663, file: !608, line: 1210, baseType: !14, size: 32, offset: 2368)
!7418 = !DIDerivedType(tag: DW_TAG_member, name: "slab_flags", scope: !663, file: !608, line: 1211, baseType: !7419, size: 32, offset: 2400)
!7419 = !DIDerivedType(tag: DW_TAG_typedef, name: "slab_flags_t", file: !438, line: 149, baseType: !14)
!7420 = !DIDerivedType(tag: DW_TAG_member, name: "useroffset", scope: !663, file: !608, line: 1212, baseType: !14, size: 32, offset: 2432)
!7421 = !DIDerivedType(tag: DW_TAG_member, name: "usersize", scope: !663, file: !608, line: 1213, baseType: !14, size: 32, offset: 2464)
!7422 = !DIDerivedType(tag: DW_TAG_member, name: "orphan_count", scope: !663, file: !608, line: 1215, baseType: !7406, size: 64, offset: 2496)
!7423 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_prot", scope: !663, file: !608, line: 1217, baseType: !7424, size: 64, offset: 2560)
!7424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7425, size: 64)
!7425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_sock_ops", file: !7426, line: 27, size: 512, elements: !7427)
!7426 = !DIFile(filename: "./include/net/request_sock.h", directory: "/home/lizy2001/genbc/linux")
!7427 = !{!7428, !7429, !7430, !7431, !7432, !7461, !7465, !7469, !7473}
!7428 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !7425, file: !7426, line: 28, baseType: !7, size: 32)
!7429 = !DIDerivedType(tag: DW_TAG_member, name: "obj_size", scope: !7425, file: !7426, line: 29, baseType: !14, size: 32, offset: 32)
!7430 = !DIDerivedType(tag: DW_TAG_member, name: "slab", scope: !7425, file: !7426, line: 30, baseType: !2432, size: 64, offset: 64)
!7431 = !DIDerivedType(tag: DW_TAG_member, name: "slab_name", scope: !7425, file: !7426, line: 31, baseType: !733, size: 64, offset: 128)
!7432 = !DIDerivedType(tag: DW_TAG_member, name: "rtx_syn_ack", scope: !7425, file: !7426, line: 32, baseType: !7433, size: 64, offset: 192)
!7433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7434, size: 64)
!7434 = !DISubroutineType(types: !7435)
!7435 = !{!7, !7396, !7436}
!7436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7437, size: 64)
!7437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_sock", file: !7426, line: 53, size: 1792, elements: !7438)
!7438 = !{!7439, !7440, !7441, !7442, !7443, !7444, !7445, !7446, !7447, !7450, !7451, !7459, !7460}
!7439 = !DIDerivedType(tag: DW_TAG_member, name: "__req_common", scope: !7437, file: !7426, line: 54, baseType: !611, size: 1088)
!7440 = !DIDerivedType(tag: DW_TAG_member, name: "dl_next", scope: !7437, file: !7426, line: 61, baseType: !7436, size: 64, offset: 1088)
!7441 = !DIDerivedType(tag: DW_TAG_member, name: "mss", scope: !7437, file: !7426, line: 62, baseType: !1193, size: 16, offset: 1152)
!7442 = !DIDerivedType(tag: DW_TAG_member, name: "num_retrans", scope: !7437, file: !7426, line: 63, baseType: !1552, size: 8, offset: 1168)
!7443 = !DIDerivedType(tag: DW_TAG_member, name: "syncookie", scope: !7437, file: !7426, line: 64, baseType: !1552, size: 1, offset: 1176, flags: DIFlagBitField, extraData: i64 1176)
!7444 = !DIDerivedType(tag: DW_TAG_member, name: "num_timeout", scope: !7437, file: !7426, line: 65, baseType: !1552, size: 7, offset: 1177, flags: DIFlagBitField, extraData: i64 1176)
!7445 = !DIDerivedType(tag: DW_TAG_member, name: "ts_recent", scope: !7437, file: !7426, line: 66, baseType: !862, size: 32, offset: 1184)
!7446 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_timer", scope: !7437, file: !7426, line: 67, baseType: !2401, size: 320, offset: 1216)
!7447 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_ops", scope: !7437, file: !7426, line: 68, baseType: !7448, size: 64, offset: 1536)
!7448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7449, size: 64)
!7449 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7425)
!7450 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !7437, file: !7426, line: 69, baseType: !606, size: 64, offset: 1600)
!7451 = !DIDerivedType(tag: DW_TAG_member, name: "saved_syn", scope: !7437, file: !7426, line: 70, baseType: !7452, size: 64, offset: 1664)
!7452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7453, size: 64)
!7453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "saved_syn", file: !7426, line: 44, size: 96, elements: !7454)
!7454 = !{!7455, !7456, !7457, !7458}
!7455 = !DIDerivedType(tag: DW_TAG_member, name: "mac_hdrlen", scope: !7453, file: !7426, line: 45, baseType: !862, size: 32)
!7456 = !DIDerivedType(tag: DW_TAG_member, name: "network_hdrlen", scope: !7453, file: !7426, line: 46, baseType: !862, size: 32, offset: 32)
!7457 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_hdrlen", scope: !7453, file: !7426, line: 47, baseType: !862, size: 32, offset: 64)
!7458 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7453, file: !7426, line: 48, baseType: !3053, offset: 96)
!7459 = !DIDerivedType(tag: DW_TAG_member, name: "secid", scope: !7437, file: !7426, line: 71, baseType: !862, size: 32, offset: 1728)
!7460 = !DIDerivedType(tag: DW_TAG_member, name: "peer_secid", scope: !7437, file: !7426, line: 72, baseType: !862, size: 32, offset: 1760)
!7461 = !DIDerivedType(tag: DW_TAG_member, name: "send_ack", scope: !7425, file: !7426, line: 34, baseType: !7462, size: 64, offset: 256)
!7462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7463, size: 64)
!7463 = !DISubroutineType(types: !7464)
!7464 = !{null, !7396, !576, !7436}
!7465 = !DIDerivedType(tag: DW_TAG_member, name: "send_reset", scope: !7425, file: !7426, line: 36, baseType: !7466, size: 64, offset: 320)
!7466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7467, size: 64)
!7467 = !DISubroutineType(types: !7468)
!7468 = !{null, !7396, !576}
!7469 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !7425, file: !7426, line: 38, baseType: !7470, size: 64, offset: 384)
!7470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7471, size: 64)
!7471 = !DISubroutineType(types: !7472)
!7472 = !{null, !7436}
!7473 = !DIDerivedType(tag: DW_TAG_member, name: "syn_ack_timeout", scope: !7425, file: !7426, line: 39, baseType: !7474, size: 64, offset: 448)
!7474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7475, size: 64)
!7475 = !DISubroutineType(types: !7476)
!7476 = !{null, !7477}
!7477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7478, size: 64)
!7478 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7437)
!7479 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_prot", scope: !663, file: !608, line: 1218, baseType: !7480, size: 64, offset: 2624)
!7480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7481, size: 64)
!7481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timewait_sock_ops", file: !7482, line: 14, size: 320, elements: !7483)
!7482 = !DIFile(filename: "./include/net/timewait_sock.h", directory: "/home/lizy2001/genbc/linux")
!7483 = !{!7484, !7485, !7486, !7487, !7491}
!7484 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_slab", scope: !7481, file: !7482, line: 15, baseType: !2432, size: 64)
!7485 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_slab_name", scope: !7481, file: !7482, line: 16, baseType: !733, size: 64, offset: 64)
!7486 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_obj_size", scope: !7481, file: !7482, line: 17, baseType: !14, size: 32, offset: 128)
!7487 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_unique", scope: !7481, file: !7482, line: 18, baseType: !7488, size: 64, offset: 192)
!7488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7489, size: 64)
!7489 = !DISubroutineType(types: !7490)
!7490 = !{!7, !606, !606, !726}
!7491 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_destructor", scope: !7481, file: !7482, line: 20, baseType: !707, size: 64, offset: 256)
!7492 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !663, file: !608, line: 1225, baseType: !7493, size: 64, offset: 2688)
!7493 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !663, file: !608, line: 1220, size: 64, elements: !7494)
!7494 = !{!7495, !7496, !7511, !7514}
!7495 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !7493, file: !608, line: 1221, baseType: !2585, size: 64)
!7496 = !DIDerivedType(tag: DW_TAG_member, name: "udp_table", scope: !7493, file: !608, line: 1222, baseType: !7497, size: 64)
!7497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7498, size: 64)
!7498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_table", file: !7499, line: 72, size: 192, elements: !7500)
!7499 = !DIFile(filename: "./include/net/udp.h", directory: "/home/lizy2001/genbc/linux")
!7500 = !{!7501, !7508, !7509, !7510}
!7501 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !7498, file: !7499, line: 73, baseType: !7502, size: 64)
!7502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7503, size: 64)
!7503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_hslot", file: !7499, line: 58, size: 128, align: 128, elements: !7504)
!7504 = !{!7505, !7506, !7507}
!7505 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7503, file: !7499, line: 59, baseType: !1012, size: 64)
!7506 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7503, file: !7499, line: 60, baseType: !7, size: 32, offset: 64)
!7507 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7503, file: !7499, line: 61, baseType: !884, offset: 96)
!7508 = !DIDerivedType(tag: DW_TAG_member, name: "hash2", scope: !7498, file: !7499, line: 74, baseType: !7502, size: 64, offset: 64)
!7509 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !7498, file: !7499, line: 75, baseType: !14, size: 32, offset: 128)
!7510 = !DIDerivedType(tag: DW_TAG_member, name: "log", scope: !7498, file: !7499, line: 76, baseType: !14, size: 32, offset: 160)
!7511 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hash", scope: !7493, file: !608, line: 1223, baseType: !7512, size: 64)
!7512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7513, size: 64)
!7513 = !DICompositeType(tag: DW_TAG_structure_type, name: "raw_hashinfo", file: !608, line: 1108, flags: DIFlagFwdDecl)
!7514 = !DIDerivedType(tag: DW_TAG_member, name: "smc_hash", scope: !7493, file: !608, line: 1224, baseType: !7515, size: 64)
!7515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7516, size: 64)
!7516 = !DICompositeType(tag: DW_TAG_structure_type, name: "smc_hashinfo", file: !608, line: 1109, flags: DIFlagFwdDecl)
!7517 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !663, file: !608, line: 1227, baseType: !1007, size: 64, offset: 2752)
!7518 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !663, file: !608, line: 1229, baseType: !4356, size: 256, offset: 2816)
!7519 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !663, file: !608, line: 1231, baseType: !445, size: 128, offset: 3072)
!7520 = !DIDerivedType(tag: DW_TAG_member, name: "diag_destroy", scope: !663, file: !608, line: 1235, baseType: !688, size: 64, offset: 3200)
!7521 = !DIDerivedType(tag: DW_TAG_member, name: "skc_net", scope: !611, file: !608, line: 198, baseType: !3045, size: 64, offset: 384)
!7522 = !DIDerivedType(tag: DW_TAG_member, name: "skc_v6_daddr", scope: !611, file: !608, line: 201, baseType: !2384, size: 128, offset: 448)
!7523 = !DIDerivedType(tag: DW_TAG_member, name: "skc_v6_rcv_saddr", scope: !611, file: !608, line: 202, baseType: !2384, size: 128, offset: 576)
!7524 = !DIDerivedType(tag: DW_TAG_member, name: "skc_cookie", scope: !611, file: !608, line: 205, baseType: !534, size: 64, offset: 704)
!7525 = !DIDerivedType(tag: DW_TAG_member, scope: !611, file: !608, line: 212, baseType: !7526, size: 64, offset: 768)
!7526 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !611, file: !608, line: 212, size: 64, elements: !7527)
!7527 = !{!7528, !7529, !7530}
!7528 = !DIDerivedType(tag: DW_TAG_member, name: "skc_flags", scope: !7526, file: !608, line: 213, baseType: !473, size: 64)
!7529 = !DIDerivedType(tag: DW_TAG_member, name: "skc_listener", scope: !7526, file: !608, line: 214, baseType: !606, size: 64)
!7530 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_dr", scope: !7526, file: !608, line: 215, baseType: !7531, size: 64)
!7531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 64)
!7532 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dontcopy_begin", scope: !611, file: !608, line: 222, baseType: !7533, offset: 832)
!7533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !2076)
!7534 = !DIDerivedType(tag: DW_TAG_member, scope: !611, file: !608, line: 224, baseType: !7535, size: 128, offset: 832)
!7535 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !611, file: !608, line: 224, size: 128, elements: !7536)
!7536 = !{!7537, !7538}
!7537 = !DIDerivedType(tag: DW_TAG_member, name: "skc_node", scope: !7535, file: !608, line: 225, baseType: !437, size: 128)
!7538 = !DIDerivedType(tag: DW_TAG_member, name: "skc_nulls_node", scope: !7535, file: !608, line: 226, baseType: !7539, size: 128)
!7539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_nulls_node", file: !7540, line: 25, size: 128, elements: !7541)
!7540 = !DIFile(filename: "./include/linux/list_nulls.h", directory: "/home/lizy2001/genbc/linux")
!7541 = !{!7542, !7544}
!7542 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7539, file: !7540, line: 26, baseType: !7543, size: 64)
!7543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7539, size: 64)
!7544 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !7539, file: !7540, line: 26, baseType: !7545, size: 64, offset: 64)
!7545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7543, size: 64)
!7546 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tx_queue_mapping", scope: !611, file: !608, line: 228, baseType: !633, size: 16, offset: 960)
!7547 = !DIDerivedType(tag: DW_TAG_member, scope: !611, file: !608, line: 232, baseType: !7548, size: 32, offset: 992)
!7548 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !611, file: !608, line: 232, size: 32, elements: !7549)
!7549 = !{!7550, !7551, !7552}
!7550 = !DIDerivedType(tag: DW_TAG_member, name: "skc_incoming_cpu", scope: !7548, file: !608, line: 233, baseType: !7, size: 32)
!7551 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rcv_wnd", scope: !7548, file: !608, line: 234, baseType: !862, size: 32)
!7552 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_rcv_nxt", scope: !7548, file: !608, line: 235, baseType: !862, size: 32)
!7553 = !DIDerivedType(tag: DW_TAG_member, name: "skc_refcnt", scope: !611, file: !608, line: 238, baseType: !1426, size: 32, offset: 1024)
!7554 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dontcopy_end", scope: !611, file: !608, line: 240, baseType: !7533, offset: 1056)
!7555 = !DIDerivedType(tag: DW_TAG_member, scope: !611, file: !608, line: 241, baseType: !7556, size: 32, offset: 1056)
!7556 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !611, file: !608, line: 241, size: 32, elements: !7557)
!7557 = !{!7558, !7559, !7560}
!7558 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rxhash", scope: !7556, file: !608, line: 242, baseType: !862, size: 32)
!7559 = !DIDerivedType(tag: DW_TAG_member, name: "skc_window_clamp", scope: !7556, file: !608, line: 243, baseType: !862, size: 32)
!7560 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_snd_nxt", scope: !7556, file: !608, line: 244, baseType: !862, size: 32)
!7561 = !DIDerivedType(tag: DW_TAG_member, name: "sk_lock", scope: !607, file: !608, line: 387, baseType: !7562, size: 192, offset: 1088)
!7562 = !DIDerivedType(tag: DW_TAG_typedef, name: "socket_lock_t", file: !608, line: 108, baseType: !7563)
!7563 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !608, line: 95, size: 192, elements: !7564)
!7564 = !{!7565, !7566, !7567}
!7565 = !DIDerivedType(tag: DW_TAG_member, name: "slock", scope: !7563, file: !608, line: 96, baseType: !884)
!7566 = !DIDerivedType(tag: DW_TAG_member, name: "owned", scope: !7563, file: !608, line: 97, baseType: !7, size: 32)
!7567 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !7563, file: !608, line: 98, baseType: !1255, size: 128, offset: 64)
!7568 = !DIDerivedType(tag: DW_TAG_member, name: "sk_drops", scope: !607, file: !608, line: 388, baseType: !544, size: 32, offset: 1280)
!7569 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvlowat", scope: !607, file: !608, line: 389, baseType: !7, size: 32, offset: 1312)
!7570 = !DIDerivedType(tag: DW_TAG_member, name: "sk_error_queue", scope: !607, file: !608, line: 390, baseType: !3103, size: 192, offset: 1344)
!7571 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rx_skb_cache", scope: !607, file: !608, line: 391, baseType: !576, size: 64, offset: 1536)
!7572 = !DIDerivedType(tag: DW_TAG_member, name: "sk_receive_queue", scope: !607, file: !608, line: 392, baseType: !3103, size: 192, offset: 1600)
!7573 = !DIDerivedType(tag: DW_TAG_member, name: "sk_backlog", scope: !607, file: !608, line: 406, baseType: !7574, size: 192, offset: 1792)
!7574 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !607, file: !608, line: 401, size: 192, elements: !7575)
!7575 = !{!7576, !7577, !7578, !7579}
!7576 = !DIDerivedType(tag: DW_TAG_member, name: "rmem_alloc", scope: !7574, file: !608, line: 402, baseType: !544, size: 32)
!7577 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7574, file: !608, line: 403, baseType: !7, size: 32, offset: 32)
!7578 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7574, file: !608, line: 404, baseType: !576, size: 64, offset: 64)
!7579 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7574, file: !608, line: 405, baseType: !576, size: 64, offset: 128)
!7580 = !DIDerivedType(tag: DW_TAG_member, name: "sk_forward_alloc", scope: !607, file: !608, line: 409, baseType: !7, size: 32, offset: 1984)
!7581 = !DIDerivedType(tag: DW_TAG_member, name: "sk_ll_usec", scope: !607, file: !608, line: 411, baseType: !14, size: 32, offset: 2016)
!7582 = !DIDerivedType(tag: DW_TAG_member, name: "sk_napi_id", scope: !607, file: !608, line: 413, baseType: !14, size: 32, offset: 2048)
!7583 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvbuf", scope: !607, file: !608, line: 415, baseType: !7, size: 32, offset: 2080)
!7584 = !DIDerivedType(tag: DW_TAG_member, name: "sk_filter", scope: !607, file: !608, line: 417, baseType: !7585, size: 64, offset: 2112)
!7585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7586, size: 64)
!7586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_filter", file: !3506, line: 552, size: 256, elements: !7587)
!7587 = !{!7588, !7589, !7590}
!7588 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !7586, file: !3506, line: 553, baseType: !1426, size: 32)
!7589 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7586, file: !3506, line: 554, baseType: !460, size: 128, align: 64, offset: 64)
!7590 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !7586, file: !3506, line: 555, baseType: !3504, size: 64, offset: 192)
!7591 = !DIDerivedType(tag: DW_TAG_member, scope: !607, file: !608, line: 418, baseType: !7592, size: 64, offset: 2176)
!7592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !607, file: !608, line: 418, size: 64, elements: !7593)
!7593 = !{!7594, !7603}
!7594 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wq", scope: !7592, file: !608, line: 419, baseType: !7595, size: 64)
!7595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7596, size: 64)
!7596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "socket_wq", file: !7597, line: 98, size: 384, elements: !7598)
!7597 = !DIFile(filename: "./include/linux/net.h", directory: "/home/lizy2001/genbc/linux")
!7598 = !{!7599, !7600, !7601, !7602}
!7599 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !7596, file: !7597, line: 100, baseType: !1255, size: 128)
!7600 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_list", scope: !7596, file: !7597, line: 101, baseType: !6094, size: 64, offset: 128)
!7601 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7596, file: !7597, line: 102, baseType: !473, size: 64, offset: 192)
!7602 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7596, file: !7597, line: 103, baseType: !460, size: 128, align: 64, offset: 256)
!7603 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wq_raw", scope: !7592, file: !608, line: 421, baseType: !7595, size: 64)
!7604 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rx_dst", scope: !607, file: !608, line: 427, baseType: !2965, size: 64, offset: 2240)
!7605 = !DIDerivedType(tag: DW_TAG_member, name: "sk_dst_cache", scope: !607, file: !608, line: 428, baseType: !2965, size: 64, offset: 2304)
!7606 = !DIDerivedType(tag: DW_TAG_member, name: "sk_omem_alloc", scope: !607, file: !608, line: 429, baseType: !544, size: 32, offset: 2368)
!7607 = !DIDerivedType(tag: DW_TAG_member, name: "sk_sndbuf", scope: !607, file: !608, line: 430, baseType: !7, size: 32, offset: 2400)
!7608 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wmem_queued", scope: !607, file: !608, line: 433, baseType: !7, size: 32, offset: 2432)
!7609 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wmem_alloc", scope: !607, file: !608, line: 434, baseType: !1426, size: 32, offset: 2464)
!7610 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tsq_flags", scope: !607, file: !608, line: 435, baseType: !473, size: 64, offset: 2496)
!7611 = !DIDerivedType(tag: DW_TAG_member, scope: !607, file: !608, line: 436, baseType: !7612, size: 64, offset: 2560)
!7612 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !607, file: !608, line: 436, size: 64, elements: !7613)
!7613 = !{!7614, !7615}
!7614 = !DIDerivedType(tag: DW_TAG_member, name: "sk_send_head", scope: !7612, file: !608, line: 437, baseType: !576, size: 64)
!7615 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_rtx_queue", scope: !7612, file: !608, line: 438, baseType: !1288, size: 64)
!7616 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tx_skb_cache", scope: !607, file: !608, line: 440, baseType: !576, size: 64, offset: 2624)
!7617 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_queue", scope: !607, file: !608, line: 441, baseType: !3103, size: 192, offset: 2688)
!7618 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peek_off", scope: !607, file: !608, line: 442, baseType: !1645, size: 32, offset: 2880)
!7619 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_pending", scope: !607, file: !608, line: 443, baseType: !7, size: 32, offset: 2912)
!7620 = !DIDerivedType(tag: DW_TAG_member, name: "sk_dst_pending_confirm", scope: !607, file: !608, line: 444, baseType: !624, size: 32, offset: 2944)
!7621 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_status", scope: !607, file: !608, line: 445, baseType: !862, size: 32, offset: 2976)
!7622 = !DIDerivedType(tag: DW_TAG_member, name: "sk_sndtimeo", scope: !607, file: !608, line: 446, baseType: !669, size: 64, offset: 3008)
!7623 = !DIDerivedType(tag: DW_TAG_member, name: "sk_timer", scope: !607, file: !608, line: 447, baseType: !2401, size: 320, offset: 3072)
!7624 = !DIDerivedType(tag: DW_TAG_member, name: "sk_priority", scope: !607, file: !608, line: 448, baseType: !624, size: 32, offset: 3392)
!7625 = !DIDerivedType(tag: DW_TAG_member, name: "sk_mark", scope: !607, file: !608, line: 449, baseType: !624, size: 32, offset: 3424)
!7626 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_rate", scope: !607, file: !608, line: 450, baseType: !473, size: 64, offset: 3456)
!7627 = !DIDerivedType(tag: DW_TAG_member, name: "sk_max_pacing_rate", scope: !607, file: !608, line: 451, baseType: !473, size: 64, offset: 3520)
!7628 = !DIDerivedType(tag: DW_TAG_member, name: "sk_frag", scope: !607, file: !608, line: 452, baseType: !6133, size: 128, offset: 3584)
!7629 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_caps", scope: !607, file: !608, line: 453, baseType: !490, size: 64, offset: 3712)
!7630 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_nocaps", scope: !607, file: !608, line: 454, baseType: !490, size: 64, offset: 3776)
!7631 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_forced_caps", scope: !607, file: !608, line: 455, baseType: !490, size: 64, offset: 3840)
!7632 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_type", scope: !607, file: !608, line: 456, baseType: !7, size: 32, offset: 3904)
!7633 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_max_size", scope: !607, file: !608, line: 457, baseType: !14, size: 32, offset: 3936)
!7634 = !DIDerivedType(tag: DW_TAG_member, name: "sk_allocation", scope: !607, file: !608, line: 458, baseType: !2144, size: 32, offset: 3968)
!7635 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txhash", scope: !607, file: !608, line: 459, baseType: !624, size: 32, offset: 4000)
!7636 = !DIDerivedType(tag: DW_TAG_member, name: "sk_padding", scope: !607, file: !608, line: 465, baseType: !1552, size: 1, offset: 4032, flags: DIFlagBitField, extraData: i64 4032)
!7637 = !DIDerivedType(tag: DW_TAG_member, name: "sk_kern_sock", scope: !607, file: !608, line: 466, baseType: !1552, size: 1, offset: 4033, flags: DIFlagBitField, extraData: i64 4032)
!7638 = !DIDerivedType(tag: DW_TAG_member, name: "sk_no_check_tx", scope: !607, file: !608, line: 467, baseType: !1552, size: 1, offset: 4034, flags: DIFlagBitField, extraData: i64 4032)
!7639 = !DIDerivedType(tag: DW_TAG_member, name: "sk_no_check_rx", scope: !607, file: !608, line: 468, baseType: !1552, size: 1, offset: 4035, flags: DIFlagBitField, extraData: i64 4032)
!7640 = !DIDerivedType(tag: DW_TAG_member, name: "sk_userlocks", scope: !607, file: !608, line: 469, baseType: !1552, size: 4, offset: 4036, flags: DIFlagBitField, extraData: i64 4032)
!7641 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_shift", scope: !607, file: !608, line: 470, baseType: !1552, size: 8, offset: 4040)
!7642 = !DIDerivedType(tag: DW_TAG_member, name: "sk_type", scope: !607, file: !608, line: 471, baseType: !1193, size: 16, offset: 4048)
!7643 = !DIDerivedType(tag: DW_TAG_member, name: "sk_protocol", scope: !607, file: !608, line: 472, baseType: !1193, size: 16, offset: 4064)
!7644 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_max_segs", scope: !607, file: !608, line: 473, baseType: !1193, size: 16, offset: 4080)
!7645 = !DIDerivedType(tag: DW_TAG_member, name: "sk_lingertime", scope: !607, file: !608, line: 474, baseType: !473, size: 64, offset: 4096)
!7646 = !DIDerivedType(tag: DW_TAG_member, name: "sk_prot_creator", scope: !607, file: !608, line: 475, baseType: !662, size: 64, offset: 4160)
!7647 = !DIDerivedType(tag: DW_TAG_member, name: "sk_callback_lock", scope: !607, file: !608, line: 476, baseType: !3113, offset: 4224)
!7648 = !DIDerivedType(tag: DW_TAG_member, name: "sk_err", scope: !607, file: !608, line: 477, baseType: !7, size: 32, offset: 4224)
!7649 = !DIDerivedType(tag: DW_TAG_member, name: "sk_err_soft", scope: !607, file: !608, line: 478, baseType: !7, size: 32, offset: 4256)
!7650 = !DIDerivedType(tag: DW_TAG_member, name: "sk_ack_backlog", scope: !607, file: !608, line: 479, baseType: !862, size: 32, offset: 4288)
!7651 = !DIDerivedType(tag: DW_TAG_member, name: "sk_max_ack_backlog", scope: !607, file: !608, line: 480, baseType: !862, size: 32, offset: 4320)
!7652 = !DIDerivedType(tag: DW_TAG_member, name: "sk_uid", scope: !607, file: !608, line: 481, baseType: !804, size: 32, offset: 4352)
!7653 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peer_pid", scope: !607, file: !608, line: 482, baseType: !1676, size: 64, offset: 4416)
!7654 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peer_cred", scope: !607, file: !608, line: 483, baseType: !1746, size: 64, offset: 4480)
!7655 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvtimeo", scope: !607, file: !608, line: 484, baseType: !669, size: 64, offset: 4544)
!7656 = !DIDerivedType(tag: DW_TAG_member, name: "sk_stamp", scope: !607, file: !608, line: 485, baseType: !1496, size: 64, offset: 4608)
!7657 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tsflags", scope: !607, file: !608, line: 489, baseType: !1193, size: 16, offset: 4672)
!7658 = !DIDerivedType(tag: DW_TAG_member, name: "sk_shutdown", scope: !607, file: !608, line: 490, baseType: !1552, size: 8, offset: 4688)
!7659 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tskey", scope: !607, file: !608, line: 491, baseType: !862, size: 32, offset: 4704)
!7660 = !DIDerivedType(tag: DW_TAG_member, name: "sk_zckey", scope: !607, file: !608, line: 492, baseType: !544, size: 32, offset: 4736)
!7661 = !DIDerivedType(tag: DW_TAG_member, name: "sk_clockid", scope: !607, file: !608, line: 494, baseType: !1552, size: 8, offset: 4768)
!7662 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_deadline_mode", scope: !607, file: !608, line: 495, baseType: !1552, size: 1, offset: 4776, flags: DIFlagBitField, extraData: i64 4776)
!7663 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_report_errors", scope: !607, file: !608, line: 496, baseType: !1552, size: 1, offset: 4777, flags: DIFlagBitField, extraData: i64 4776)
!7664 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_unused", scope: !607, file: !608, line: 497, baseType: !1552, size: 6, offset: 4778, flags: DIFlagBitField, extraData: i64 4776)
!7665 = !DIDerivedType(tag: DW_TAG_member, name: "sk_socket", scope: !607, file: !608, line: 499, baseType: !7666, size: 64, offset: 4800)
!7666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7667, size: 64)
!7667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "socket", file: !7597, line: 116, size: 704, elements: !7668)
!7668 = !{!7669, !7671, !7672, !7673, !7674, !7675, !7778}
!7669 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7667, file: !7597, line: 117, baseType: !7670, size: 32)
!7670 = !DIDerivedType(tag: DW_TAG_typedef, name: "socket_state", file: !280, line: 54, baseType: !279)
!7671 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7667, file: !7597, line: 119, baseType: !1401, size: 16, offset: 32)
!7672 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7667, file: !7597, line: 121, baseType: !473, size: 64, offset: 64)
!7673 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !7667, file: !7597, line: 123, baseType: !1165, size: 64, offset: 128)
!7674 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !7667, file: !7597, line: 124, baseType: !606, size: 64, offset: 192)
!7675 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7667, file: !7597, line: 125, baseType: !7676, size: 64, offset: 256)
!7676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7677, size: 64)
!7677 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7678)
!7678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "proto_ops", file: !7597, line: 139, size: 1728, elements: !7679)
!7679 = !{!7680, !7681, !7682, !7683, !7687, !7691, !7695, !7699, !7703, !7704, !7708, !7712, !7716, !7720, !7721, !7725, !7729, !7733, !7737, !7741, !7745, !7749, !7753, !7754, !7755, !7775, !7776, !7777}
!7680 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !7678, file: !7597, line: 140, baseType: !7, size: 32)
!7681 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7678, file: !7597, line: 141, baseType: !14, size: 32, offset: 32)
!7682 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !7678, file: !7597, line: 142, baseType: !1007, size: 64, offset: 64)
!7683 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !7678, file: !7597, line: 143, baseType: !7684, size: 64, offset: 128)
!7684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7685, size: 64)
!7685 = !DISubroutineType(types: !7686)
!7686 = !{!7, !7666}
!7687 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !7678, file: !7597, line: 144, baseType: !7688, size: 64, offset: 192)
!7688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7689, size: 64)
!7689 = !DISubroutineType(types: !7690)
!7690 = !{!7, !7666, !674, !7}
!7691 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !7678, file: !7597, line: 147, baseType: !7692, size: 64, offset: 256)
!7692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7693, size: 64)
!7693 = !DISubroutineType(types: !7694)
!7694 = !{!7, !7666, !674, !7, !7}
!7695 = !DIDerivedType(tag: DW_TAG_member, name: "socketpair", scope: !7678, file: !7597, line: 150, baseType: !7696, size: 64, offset: 320)
!7696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7697, size: 64)
!7697 = !DISubroutineType(types: !7698)
!7698 = !{!7, !7666, !7666}
!7699 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !7678, file: !7597, line: 152, baseType: !7700, size: 64, offset: 384)
!7700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7701, size: 64)
!7701 = !DISubroutineType(types: !7702)
!7702 = !{!7, !7666, !7666, !7, !696}
!7703 = !DIDerivedType(tag: DW_TAG_member, name: "getname", scope: !7678, file: !7597, line: 154, baseType: !7688, size: 64, offset: 448)
!7704 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !7678, file: !7597, line: 157, baseType: !7705, size: 64, offset: 512)
!7705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7706, size: 64)
!7706 = !DISubroutineType(types: !7707)
!7707 = !{!1244, !1165, !7666, !1245}
!7708 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !7678, file: !7597, line: 159, baseType: !7709, size: 64, offset: 576)
!7709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7710, size: 64)
!7710 = !DISubroutineType(types: !7711)
!7711 = !{!7, !7666, !14, !473}
!7712 = !DIDerivedType(tag: DW_TAG_member, name: "gettstamp", scope: !7678, file: !7597, line: 165, baseType: !7713, size: 64, offset: 640)
!7713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7714, size: 64)
!7714 = !DISubroutineType(types: !7715)
!7715 = !{!7, !7666, !726, !696, !696}
!7716 = !DIDerivedType(tag: DW_TAG_member, name: "listen", scope: !7678, file: !7597, line: 167, baseType: !7717, size: 64, offset: 704)
!7717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7718, size: 64)
!7718 = !DISubroutineType(types: !7719)
!7719 = !{!7, !7666, !7}
!7720 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !7678, file: !7597, line: 168, baseType: !7717, size: 64, offset: 768)
!7721 = !DIDerivedType(tag: DW_TAG_member, name: "setsockopt", scope: !7678, file: !7597, line: 169, baseType: !7722, size: 64, offset: 832)
!7722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7723, size: 64)
!7723 = !DISubroutineType(types: !7724)
!7724 = !{!7, !7666, !7, !7, !718, !14}
!7725 = !DIDerivedType(tag: DW_TAG_member, name: "getsockopt", scope: !7678, file: !7597, line: 172, baseType: !7726, size: 64, offset: 896)
!7726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7727, size: 64)
!7727 = !DISubroutineType(types: !7728)
!7728 = !{!7, !7666, !7, !7, !733, !695}
!7729 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !7678, file: !7597, line: 174, baseType: !7730, size: 64, offset: 960)
!7730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7731, size: 64)
!7731 = !DISubroutineType(types: !7732)
!7732 = !{null, !1097, !7666}
!7733 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg", scope: !7678, file: !7597, line: 175, baseType: !7734, size: 64, offset: 1024)
!7734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7735, size: 64)
!7735 = !DISubroutineType(types: !7736)
!7736 = !{!7, !7666, !739, !750}
!7737 = !DIDerivedType(tag: DW_TAG_member, name: "recvmsg", scope: !7678, file: !7597, line: 185, baseType: !7738, size: 64, offset: 1088)
!7738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7739, size: 64)
!7739 = !DISubroutineType(types: !7740)
!7740 = !{!7, !7666, !739, !750, !7}
!7741 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !7678, file: !7597, line: 187, baseType: !7742, size: 64, offset: 1152)
!7742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7743, size: 64)
!7743 = !DISubroutineType(types: !7744)
!7744 = !{!7, !1165, !7666, !1270}
!7745 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !7678, file: !7597, line: 189, baseType: !7746, size: 64, offset: 1216)
!7746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7747, size: 64)
!7747 = !DISubroutineType(types: !7748)
!7748 = !{!1170, !7666, !780, !7, !750, !7}
!7749 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !7678, file: !7597, line: 191, baseType: !7750, size: 64, offset: 1280)
!7750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7751, size: 64)
!7751 = !DISubroutineType(types: !7752)
!7752 = !{!1170, !7666, !1124, !6075, !750, !14}
!7753 = !DIDerivedType(tag: DW_TAG_member, name: "set_peek_off", scope: !7678, file: !7597, line: 193, baseType: !688, size: 64, offset: 1344)
!7754 = !DIDerivedType(tag: DW_TAG_member, name: "peek_len", scope: !7678, file: !7597, line: 194, baseType: !7684, size: 64, offset: 1408)
!7755 = !DIDerivedType(tag: DW_TAG_member, name: "read_sock", scope: !7678, file: !7597, line: 199, baseType: !7756, size: 64, offset: 1472)
!7756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7757, size: 64)
!7757 = !DISubroutineType(types: !7758)
!7758 = !{!7, !606, !7759, !7771}
!7759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7760, size: 64)
!7760 = !DIDerivedType(tag: DW_TAG_typedef, name: "read_descriptor_t", file: !243, line: 362, baseType: !7761)
!7761 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !243, line: 354, size: 256, elements: !7762)
!7762 = !{!7763, !7764, !7765, !7770}
!7763 = !DIDerivedType(tag: DW_TAG_member, name: "written", scope: !7761, file: !243, line: 355, baseType: !750, size: 64)
!7764 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7761, file: !243, line: 356, baseType: !750, size: 64, offset: 64)
!7765 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !7761, file: !243, line: 360, baseType: !7766, size: 64, offset: 128)
!7766 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7761, file: !243, line: 357, size: 64, elements: !7767)
!7767 = !{!7768, !7769}
!7768 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !7766, file: !243, line: 358, baseType: !733, size: 64)
!7769 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7766, file: !243, line: 359, baseType: !726, size: 64)
!7770 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !7761, file: !243, line: 361, baseType: !7, size: 32, offset: 192)
!7771 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_read_actor_t", file: !7597, line: 136, baseType: !7772)
!7772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7773, size: 64)
!7773 = !DISubroutineType(types: !7774)
!7774 = !{!7, !7759, !576, !14, !750}
!7775 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage_locked", scope: !7678, file: !7597, line: 201, baseType: !7374, size: 64, offset: 1536)
!7776 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg_locked", scope: !7678, file: !7597, line: 203, baseType: !736, size: 64, offset: 1600)
!7777 = !DIDerivedType(tag: DW_TAG_member, name: "set_rcvlowat", scope: !7678, file: !7597, line: 205, baseType: !688, size: 64, offset: 1664)
!7778 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !7667, file: !7597, line: 127, baseType: !7596, size: 384, offset: 320)
!7779 = !DIDerivedType(tag: DW_TAG_member, name: "sk_user_data", scope: !607, file: !608, line: 500, baseType: !726, size: 64, offset: 4864)
!7780 = !DIDerivedType(tag: DW_TAG_member, name: "sk_cgrp_data", scope: !607, file: !608, line: 504, baseType: !7781, offset: 4928)
!7781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_cgroup_data", file: !7782, line: 871, elements: !898)
!7782 = !DIFile(filename: "./include/linux/cgroup-defs.h", directory: "/home/lizy2001/genbc/linux")
!7783 = !DIDerivedType(tag: DW_TAG_member, name: "sk_memcg", scope: !607, file: !608, line: 505, baseType: !6585, size: 64, offset: 4928)
!7784 = !DIDerivedType(tag: DW_TAG_member, name: "sk_state_change", scope: !607, file: !608, line: 506, baseType: !707, size: 64, offset: 4992)
!7785 = !DIDerivedType(tag: DW_TAG_member, name: "sk_data_ready", scope: !607, file: !608, line: 507, baseType: !707, size: 64, offset: 5056)
!7786 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_space", scope: !607, file: !608, line: 508, baseType: !707, size: 64, offset: 5120)
!7787 = !DIDerivedType(tag: DW_TAG_member, name: "sk_error_report", scope: !607, file: !608, line: 509, baseType: !707, size: 64, offset: 5184)
!7788 = !DIDerivedType(tag: DW_TAG_member, name: "sk_backlog_rcv", scope: !607, file: !608, line: 510, baseType: !7380, size: 64, offset: 5248)
!7789 = !DIDerivedType(tag: DW_TAG_member, name: "sk_destruct", scope: !607, file: !608, line: 517, baseType: !707, size: 64, offset: 5312)
!7790 = !DIDerivedType(tag: DW_TAG_member, name: "sk_reuseport_cb", scope: !607, file: !608, line: 518, baseType: !7791, size: 64, offset: 5376)
!7791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7792, size: 64)
!7792 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock_reuseport", file: !3506, line: 38, flags: DIFlagFwdDecl)
!7793 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcu", scope: !607, file: !608, line: 522, baseType: !460, size: 128, align: 64, offset: 5440)
!7794 = !DIDerivedType(tag: DW_TAG_member, name: "ip_defrag_offset", scope: !603, file: !578, line: 735, baseType: !7, size: 32)
!7795 = !DIDerivedType(tag: DW_TAG_member, scope: !577, file: !578, line: 738, baseType: !7796, size: 64, offset: 256)
!7796 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !577, file: !578, line: 738, size: 64, elements: !7797)
!7797 = !{!7798, !7799}
!7798 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !7796, file: !578, line: 739, baseType: !1496, size: 64)
!7799 = !DIDerivedType(tag: DW_TAG_member, name: "skb_mstamp_ns", scope: !7796, file: !578, line: 740, baseType: !492, size: 64)
!7800 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !577, file: !578, line: 748, baseType: !7801, size: 384, align: 64, offset: 320)
!7801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 384, elements: !7802)
!7802 = !{!7803}
!7803 = !DISubrange(count: 48)
!7804 = !DIDerivedType(tag: DW_TAG_member, scope: !577, file: !578, line: 750, baseType: !7805, size: 128, offset: 704)
!7805 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !577, file: !578, line: 750, size: 128, elements: !7806)
!7806 = !{!7807, !7812}
!7807 = !DIDerivedType(tag: DW_TAG_member, scope: !7805, file: !578, line: 751, baseType: !7808, size: 128)
!7808 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7805, file: !578, line: 751, size: 128, elements: !7809)
!7809 = !{!7810, !7811}
!7810 = !DIDerivedType(tag: DW_TAG_member, name: "_skb_refdst", scope: !7808, file: !578, line: 752, baseType: !473, size: 64)
!7811 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !7808, file: !578, line: 753, baseType: !2990, size: 64, offset: 64)
!7812 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_tsorted_anchor", scope: !7805, file: !578, line: 755, baseType: !445, size: 128)
!7813 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !577, file: !578, line: 761, baseType: !14, size: 32, offset: 832)
!7814 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !577, file: !578, line: 762, baseType: !14, size: 32, offset: 864)
!7815 = !DIDerivedType(tag: DW_TAG_member, name: "mac_len", scope: !577, file: !578, line: 763, baseType: !632, size: 16, offset: 896)
!7816 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_len", scope: !577, file: !578, line: 764, baseType: !632, size: 16, offset: 912)
!7817 = !DIDerivedType(tag: DW_TAG_member, name: "queue_mapping", scope: !577, file: !578, line: 769, baseType: !632, size: 16, offset: 928)
!7818 = !DIDerivedType(tag: DW_TAG_member, name: "__cloned_offset", scope: !577, file: !578, line: 780, baseType: !7819, offset: 944)
!7819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1553, elements: !2076)
!7820 = !DIDerivedType(tag: DW_TAG_member, name: "cloned", scope: !577, file: !578, line: 782, baseType: !1553, size: 1, offset: 944, flags: DIFlagBitField, extraData: i64 944)
!7821 = !DIDerivedType(tag: DW_TAG_member, name: "nohdr", scope: !577, file: !578, line: 783, baseType: !1553, size: 1, offset: 945, flags: DIFlagBitField, extraData: i64 944)
!7822 = !DIDerivedType(tag: DW_TAG_member, name: "fclone", scope: !577, file: !578, line: 784, baseType: !1553, size: 2, offset: 946, flags: DIFlagBitField, extraData: i64 944)
!7823 = !DIDerivedType(tag: DW_TAG_member, name: "peeked", scope: !577, file: !578, line: 785, baseType: !1553, size: 1, offset: 948, flags: DIFlagBitField, extraData: i64 944)
!7824 = !DIDerivedType(tag: DW_TAG_member, name: "head_frag", scope: !577, file: !578, line: 786, baseType: !1553, size: 1, offset: 949, flags: DIFlagBitField, extraData: i64 944)
!7825 = !DIDerivedType(tag: DW_TAG_member, name: "pfmemalloc", scope: !577, file: !578, line: 787, baseType: !1553, size: 1, offset: 950, flags: DIFlagBitField, extraData: i64 944)
!7826 = !DIDerivedType(tag: DW_TAG_member, name: "headers_start", scope: !577, file: !578, line: 795, baseType: !7827, offset: 960)
!7827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !624, elements: !2076)
!7828 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_type_offset", scope: !577, file: !578, line: 807, baseType: !7819, offset: 960)
!7829 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_type", scope: !577, file: !578, line: 809, baseType: !1553, size: 3, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!7830 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_df", scope: !577, file: !578, line: 810, baseType: !1553, size: 1, offset: 963, flags: DIFlagBitField, extraData: i64 960)
!7831 = !DIDerivedType(tag: DW_TAG_member, name: "nf_trace", scope: !577, file: !578, line: 811, baseType: !1553, size: 1, offset: 964, flags: DIFlagBitField, extraData: i64 960)
!7832 = !DIDerivedType(tag: DW_TAG_member, name: "ip_summed", scope: !577, file: !578, line: 812, baseType: !1553, size: 2, offset: 965, flags: DIFlagBitField, extraData: i64 960)
!7833 = !DIDerivedType(tag: DW_TAG_member, name: "ooo_okay", scope: !577, file: !578, line: 813, baseType: !1553, size: 1, offset: 967, flags: DIFlagBitField, extraData: i64 960)
!7834 = !DIDerivedType(tag: DW_TAG_member, name: "l4_hash", scope: !577, file: !578, line: 815, baseType: !1553, size: 1, offset: 968, flags: DIFlagBitField, extraData: i64 960)
!7835 = !DIDerivedType(tag: DW_TAG_member, name: "sw_hash", scope: !577, file: !578, line: 816, baseType: !1553, size: 1, offset: 969, flags: DIFlagBitField, extraData: i64 960)
!7836 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked_valid", scope: !577, file: !578, line: 817, baseType: !1553, size: 1, offset: 970, flags: DIFlagBitField, extraData: i64 960)
!7837 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked", scope: !577, file: !578, line: 818, baseType: !1553, size: 1, offset: 971, flags: DIFlagBitField, extraData: i64 960)
!7838 = !DIDerivedType(tag: DW_TAG_member, name: "no_fcs", scope: !577, file: !578, line: 819, baseType: !1553, size: 1, offset: 972, flags: DIFlagBitField, extraData: i64 960)
!7839 = !DIDerivedType(tag: DW_TAG_member, name: "encapsulation", scope: !577, file: !578, line: 821, baseType: !1553, size: 1, offset: 973, flags: DIFlagBitField, extraData: i64 960)
!7840 = !DIDerivedType(tag: DW_TAG_member, name: "encap_hdr_csum", scope: !577, file: !578, line: 822, baseType: !1553, size: 1, offset: 974, flags: DIFlagBitField, extraData: i64 960)
!7841 = !DIDerivedType(tag: DW_TAG_member, name: "csum_valid", scope: !577, file: !578, line: 823, baseType: !1553, size: 1, offset: 975, flags: DIFlagBitField, extraData: i64 960)
!7842 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_vlan_present_offset", scope: !577, file: !578, line: 832, baseType: !7819, offset: 976)
!7843 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_present", scope: !577, file: !578, line: 834, baseType: !1553, size: 1, offset: 976, flags: DIFlagBitField, extraData: i64 976)
!7844 = !DIDerivedType(tag: DW_TAG_member, name: "csum_complete_sw", scope: !577, file: !578, line: 835, baseType: !1553, size: 1, offset: 977, flags: DIFlagBitField, extraData: i64 976)
!7845 = !DIDerivedType(tag: DW_TAG_member, name: "csum_level", scope: !577, file: !578, line: 836, baseType: !1553, size: 2, offset: 978, flags: DIFlagBitField, extraData: i64 976)
!7846 = !DIDerivedType(tag: DW_TAG_member, name: "csum_not_inet", scope: !577, file: !578, line: 837, baseType: !1553, size: 1, offset: 980, flags: DIFlagBitField, extraData: i64 976)
!7847 = !DIDerivedType(tag: DW_TAG_member, name: "dst_pending_confirm", scope: !577, file: !578, line: 838, baseType: !1553, size: 1, offset: 981, flags: DIFlagBitField, extraData: i64 976)
!7848 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_nodetype", scope: !577, file: !578, line: 840, baseType: !1553, size: 2, offset: 982, flags: DIFlagBitField, extraData: i64 976)
!7849 = !DIDerivedType(tag: DW_TAG_member, name: "ipvs_property", scope: !577, file: !578, line: 843, baseType: !1553, size: 1, offset: 984, flags: DIFlagBitField, extraData: i64 976)
!7850 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol_type", scope: !577, file: !578, line: 844, baseType: !1553, size: 1, offset: 985, flags: DIFlagBitField, extraData: i64 976)
!7851 = !DIDerivedType(tag: DW_TAG_member, name: "remcsum_offload", scope: !577, file: !578, line: 845, baseType: !1553, size: 1, offset: 986, flags: DIFlagBitField, extraData: i64 976)
!7852 = !DIDerivedType(tag: DW_TAG_member, name: "offload_fwd_mark", scope: !577, file: !578, line: 847, baseType: !1553, size: 1, offset: 987, flags: DIFlagBitField, extraData: i64 976)
!7853 = !DIDerivedType(tag: DW_TAG_member, name: "offload_l3_fwd_mark", scope: !577, file: !578, line: 848, baseType: !1553, size: 1, offset: 988, flags: DIFlagBitField, extraData: i64 976)
!7854 = !DIDerivedType(tag: DW_TAG_member, scope: !577, file: !578, line: 866, baseType: !7855, size: 32, offset: 992)
!7855 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !577, file: !578, line: 866, size: 32, elements: !7856)
!7856 = !{!7857, !7859}
!7857 = !DIDerivedType(tag: DW_TAG_member, name: "csum", scope: !7855, file: !578, line: 867, baseType: !7858, size: 32)
!7858 = !DIDerivedType(tag: DW_TAG_typedef, name: "__wsum", file: !623, line: 37, baseType: !624)
!7859 = !DIDerivedType(tag: DW_TAG_member, scope: !7855, file: !578, line: 868, baseType: !7860, size: 32)
!7860 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7855, file: !578, line: 868, size: 32, elements: !7861)
!7861 = !{!7862, !7863}
!7862 = !DIDerivedType(tag: DW_TAG_member, name: "csum_start", scope: !7860, file: !578, line: 869, baseType: !632, size: 16)
!7863 = !DIDerivedType(tag: DW_TAG_member, name: "csum_offset", scope: !7860, file: !578, line: 870, baseType: !632, size: 16, offset: 16)
!7864 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !577, file: !578, line: 873, baseType: !624, size: 32, offset: 1024)
!7865 = !DIDerivedType(tag: DW_TAG_member, name: "skb_iif", scope: !577, file: !578, line: 874, baseType: !7, size: 32, offset: 1056)
!7866 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !577, file: !578, line: 875, baseType: !624, size: 32, offset: 1088)
!7867 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !577, file: !578, line: 876, baseType: !645, size: 16, offset: 1120)
!7868 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !577, file: !578, line: 877, baseType: !632, size: 16, offset: 1136)
!7869 = !DIDerivedType(tag: DW_TAG_member, scope: !577, file: !578, line: 879, baseType: !7870, size: 32, offset: 1152)
!7870 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !577, file: !578, line: 879, size: 32, elements: !7871)
!7871 = !{!7872, !7873}
!7872 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !7870, file: !578, line: 880, baseType: !14, size: 32)
!7873 = !DIDerivedType(tag: DW_TAG_member, name: "sender_cpu", scope: !7870, file: !578, line: 881, baseType: !14, size: 32)
!7874 = !DIDerivedType(tag: DW_TAG_member, scope: !577, file: !578, line: 888, baseType: !7875, size: 32, offset: 1184)
!7875 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !577, file: !578, line: 888, size: 32, elements: !7876)
!7876 = !{!7877, !7878}
!7877 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !7875, file: !578, line: 889, baseType: !624, size: 32)
!7878 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tailroom", scope: !7875, file: !578, line: 890, baseType: !624, size: 32)
!7879 = !DIDerivedType(tag: DW_TAG_member, scope: !577, file: !578, line: 893, baseType: !7880, size: 16, offset: 1216)
!7880 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !577, file: !578, line: 893, size: 16, elements: !7881)
!7881 = !{!7882, !7883}
!7882 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol", scope: !7880, file: !578, line: 894, baseType: !645, size: 16)
!7883 = !DIDerivedType(tag: DW_TAG_member, name: "inner_ipproto", scope: !7880, file: !578, line: 895, baseType: !1553, size: 8)
!7884 = !DIDerivedType(tag: DW_TAG_member, name: "inner_transport_header", scope: !577, file: !578, line: 898, baseType: !632, size: 16, offset: 1232)
!7885 = !DIDerivedType(tag: DW_TAG_member, name: "inner_network_header", scope: !577, file: !578, line: 899, baseType: !632, size: 16, offset: 1248)
!7886 = !DIDerivedType(tag: DW_TAG_member, name: "inner_mac_header", scope: !577, file: !578, line: 900, baseType: !632, size: 16, offset: 1264)
!7887 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !577, file: !578, line: 902, baseType: !645, size: 16, offset: 1280)
!7888 = !DIDerivedType(tag: DW_TAG_member, name: "transport_header", scope: !577, file: !578, line: 903, baseType: !632, size: 16, offset: 1296)
!7889 = !DIDerivedType(tag: DW_TAG_member, name: "network_header", scope: !577, file: !578, line: 904, baseType: !632, size: 16, offset: 1312)
!7890 = !DIDerivedType(tag: DW_TAG_member, name: "mac_header", scope: !577, file: !578, line: 905, baseType: !632, size: 16, offset: 1328)
!7891 = !DIDerivedType(tag: DW_TAG_member, name: "headers_end", scope: !577, file: !578, line: 908, baseType: !7827, offset: 1344)
!7892 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !577, file: !578, line: 912, baseType: !7893, size: 32, offset: 1344)
!7893 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_buff_data_t", file: !578, line: 606, baseType: !14)
!7894 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !577, file: !578, line: 913, baseType: !7893, size: 32, offset: 1376)
!7895 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !577, file: !578, line: 914, baseType: !7896, size: 64, offset: 1408)
!7896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 64)
!7897 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !577, file: !578, line: 915, baseType: !7896, size: 64, offset: 1472)
!7898 = !DIDerivedType(tag: DW_TAG_member, name: "truesize", scope: !577, file: !578, line: 916, baseType: !14, size: 32, offset: 1536)
!7899 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !577, file: !578, line: 917, baseType: !1426, size: 32, offset: 1568)
!7900 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_features_check", scope: !559, file: !6, line: 1290, baseType: !7901, size: 64, offset: 320)
!7901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7902, size: 64)
!7902 = !DISubroutineType(types: !7903)
!7903 = !{!490, !576, !451, !490}
!7904 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_select_queue", scope: !559, file: !6, line: 1293, baseType: !7905, size: 64, offset: 384)
!7905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7906, size: 64)
!7906 = !DISubroutineType(types: !7907)
!7907 = !{!1193, !451, !576, !451}
!7908 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_rx_flags", scope: !559, file: !6, line: 1296, baseType: !7909, size: 64, offset: 448)
!7909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7910, size: 64)
!7910 = !DISubroutineType(types: !7911)
!7911 = !{null, !451, !7}
!7912 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_mode", scope: !559, file: !6, line: 1298, baseType: !566, size: 64, offset: 512)
!7913 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_mac_address", scope: !559, file: !6, line: 1299, baseType: !7914, size: 64, offset: 576)
!7914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7915, size: 64)
!7915 = !DISubroutineType(types: !7916)
!7916 = !{!7, !451, !726}
!7917 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_validate_addr", scope: !559, file: !6, line: 1301, baseType: !562, size: 64, offset: 640)
!7918 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_do_ioctl", scope: !559, file: !6, line: 1302, baseType: !7919, size: 64, offset: 704)
!7919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7920, size: 64)
!7920 = !DISubroutineType(types: !7921)
!7921 = !{!7, !451, !7922, !7}
!7922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7923, size: 64)
!7923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifreq", file: !7924, line: 234, size: 320, elements: !7925)
!7924 = !DIFile(filename: "./include/uapi/linux/if.h", directory: "/home/lizy2001/genbc/linux")
!7925 = !{!7926, !7930}
!7926 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifrn", scope: !7923, file: !7924, line: 239, baseType: !7927, size: 128)
!7927 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7923, file: !7924, line: 236, size: 128, elements: !7928)
!7928 = !{!7929}
!7929 = !DIDerivedType(tag: DW_TAG_member, name: "ifrn_name", scope: !7927, file: !7924, line: 238, baseType: !428, size: 128)
!7930 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifru", scope: !7923, file: !7924, line: 255, baseType: !7931, size: 192, offset: 128)
!7931 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7923, file: !7924, line: 241, size: 192, elements: !7932)
!7932 = !{!7933, !7934, !7935, !7936, !7937, !7938, !7939, !7940, !7941, !7950, !7951, !7952, !7953}
!7933 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_addr", scope: !7931, file: !7924, line: 242, baseType: !675, size: 128)
!7934 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_dstaddr", scope: !7931, file: !7924, line: 243, baseType: !675, size: 128)
!7935 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_broadaddr", scope: !7931, file: !7924, line: 244, baseType: !675, size: 128)
!7936 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_netmask", scope: !7931, file: !7924, line: 245, baseType: !675, size: 128)
!7937 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_hwaddr", scope: !7931, file: !7924, line: 246, baseType: !675, size: 128)
!7938 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_flags", scope: !7931, file: !7924, line: 247, baseType: !1401, size: 16)
!7939 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_ivalue", scope: !7931, file: !7924, line: 248, baseType: !7, size: 32)
!7940 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_mtu", scope: !7931, file: !7924, line: 249, baseType: !7, size: 32)
!7941 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_map", scope: !7931, file: !7924, line: 250, baseType: !7942, size: 192)
!7942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmap", file: !7924, line: 196, size: 192, elements: !7943)
!7943 = !{!7944, !7945, !7946, !7947, !7948, !7949}
!7944 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !7942, file: !7924, line: 197, baseType: !473, size: 64)
!7945 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !7942, file: !7924, line: 198, baseType: !473, size: 64, offset: 64)
!7946 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !7942, file: !7924, line: 199, baseType: !633, size: 16, offset: 128)
!7947 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !7942, file: !7924, line: 200, baseType: !650, size: 8, offset: 144)
!7948 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !7942, file: !7924, line: 201, baseType: !650, size: 8, offset: 152)
!7949 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !7942, file: !7924, line: 202, baseType: !650, size: 8, offset: 160)
!7950 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_slave", scope: !7931, file: !7924, line: 251, baseType: !428, size: 128)
!7951 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_newname", scope: !7931, file: !7924, line: 252, baseType: !428, size: 128)
!7952 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_data", scope: !7931, file: !7924, line: 253, baseType: !726, size: 64)
!7953 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_settings", scope: !7931, file: !7924, line: 254, baseType: !7954, size: 128)
!7954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "if_settings", file: !7924, line: 207, size: 128, elements: !7955)
!7955 = !{!7956, !7957, !7958}
!7956 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7954, file: !7924, line: 208, baseType: !14, size: 32)
!7957 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7954, file: !7924, line: 209, baseType: !14, size: 32, offset: 32)
!7958 = !DIDerivedType(tag: DW_TAG_member, name: "ifs_ifsu", scope: !7954, file: !7924, line: 222, baseType: !7959, size: 64, offset: 64)
!7959 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7954, file: !7924, line: 210, size: 64, elements: !7960)
!7960 = !{!7961, !7969, !7976, !7988, !7994, !8001, !8012, !8020}
!7961 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hdlc", scope: !7959, file: !7924, line: 212, baseType: !7962, size: 64)
!7962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7963, size: 64)
!7963 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_hdlc_proto", file: !7964, line: 56, baseType: !7965)
!7964 = !DIFile(filename: "./include/uapi/linux/hdlc/ioctl.h", directory: "/home/lizy2001/genbc/linux")
!7965 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7964, line: 53, size: 32, elements: !7966)
!7966 = !{!7967, !7968}
!7967 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !7965, file: !7964, line: 54, baseType: !633, size: 16)
!7968 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !7965, file: !7964, line: 55, baseType: !633, size: 16, offset: 16)
!7969 = !DIDerivedType(tag: DW_TAG_member, name: "cisco", scope: !7959, file: !7924, line: 213, baseType: !7970, size: 64)
!7970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7971, size: 64)
!7971 = !DIDerivedType(tag: DW_TAG_typedef, name: "cisco_proto", file: !7964, line: 80, baseType: !7972)
!7972 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7964, line: 77, size: 64, elements: !7973)
!7973 = !{!7974, !7975}
!7974 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !7972, file: !7964, line: 78, baseType: !14, size: 32)
!7975 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7972, file: !7964, line: 79, baseType: !14, size: 32, offset: 32)
!7976 = !DIDerivedType(tag: DW_TAG_member, name: "fr", scope: !7959, file: !7924, line: 214, baseType: !7977, size: 64)
!7977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7978, size: 64)
!7978 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto", file: !7964, line: 66, baseType: !7979)
!7979 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7964, line: 58, size: 192, elements: !7980)
!7980 = !{!7981, !7982, !7983, !7984, !7985, !7986, !7987}
!7981 = !DIDerivedType(tag: DW_TAG_member, name: "t391", scope: !7979, file: !7964, line: 59, baseType: !14, size: 32)
!7982 = !DIDerivedType(tag: DW_TAG_member, name: "t392", scope: !7979, file: !7964, line: 60, baseType: !14, size: 32, offset: 32)
!7983 = !DIDerivedType(tag: DW_TAG_member, name: "n391", scope: !7979, file: !7964, line: 61, baseType: !14, size: 32, offset: 64)
!7984 = !DIDerivedType(tag: DW_TAG_member, name: "n392", scope: !7979, file: !7964, line: 62, baseType: !14, size: 32, offset: 96)
!7985 = !DIDerivedType(tag: DW_TAG_member, name: "n393", scope: !7979, file: !7964, line: 63, baseType: !14, size: 32, offset: 128)
!7986 = !DIDerivedType(tag: DW_TAG_member, name: "lmi", scope: !7979, file: !7964, line: 64, baseType: !633, size: 16, offset: 160)
!7987 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !7979, file: !7964, line: 65, baseType: !633, size: 16, offset: 176)
!7988 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc", scope: !7959, file: !7924, line: 215, baseType: !7989, size: 64)
!7989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7990, size: 64)
!7990 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc", file: !7964, line: 70, baseType: !7991)
!7991 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7964, line: 68, size: 32, elements: !7992)
!7992 = !{!7993}
!7993 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !7991, file: !7964, line: 69, baseType: !14, size: 32)
!7994 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc_info", scope: !7959, file: !7924, line: 216, baseType: !7995, size: 64)
!7995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7996, size: 64)
!7996 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc_info", file: !7964, line: 75, baseType: !7997)
!7997 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7964, line: 72, size: 160, elements: !7998)
!7998 = !{!7999, !8000}
!7999 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !7997, file: !7964, line: 73, baseType: !14, size: 32)
!8000 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !7997, file: !7964, line: 74, baseType: !428, size: 128, offset: 32)
!8001 = !DIDerivedType(tag: DW_TAG_member, name: "x25", scope: !7959, file: !7924, line: 217, baseType: !8002, size: 64)
!8002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8003, size: 64)
!8003 = !DIDerivedType(tag: DW_TAG_typedef, name: "x25_hdlc_proto", file: !7964, line: 89, baseType: !8004)
!8004 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7964, line: 82, size: 192, elements: !8005)
!8005 = !{!8006, !8007, !8008, !8009, !8010, !8011}
!8006 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !8004, file: !7964, line: 83, baseType: !633, size: 16)
!8007 = !DIDerivedType(tag: DW_TAG_member, name: "modulo", scope: !8004, file: !7964, line: 84, baseType: !14, size: 32, offset: 32)
!8008 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !8004, file: !7964, line: 85, baseType: !14, size: 32, offset: 64)
!8009 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !8004, file: !7964, line: 86, baseType: !14, size: 32, offset: 96)
!8010 = !DIDerivedType(tag: DW_TAG_member, name: "t2", scope: !8004, file: !7964, line: 87, baseType: !14, size: 32, offset: 128)
!8011 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !8004, file: !7964, line: 88, baseType: !14, size: 32, offset: 160)
!8012 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !7959, file: !7924, line: 220, baseType: !8013, size: 64)
!8013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8014, size: 64)
!8014 = !DIDerivedType(tag: DW_TAG_typedef, name: "sync_serial_settings", file: !7964, line: 44, baseType: !8015)
!8015 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7964, line: 40, size: 96, elements: !8016)
!8016 = !{!8017, !8018, !8019}
!8017 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !8015, file: !7964, line: 41, baseType: !14, size: 32)
!8018 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !8015, file: !7964, line: 42, baseType: !14, size: 32, offset: 32)
!8019 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !8015, file: !7964, line: 43, baseType: !633, size: 16, offset: 64)
!8020 = !DIDerivedType(tag: DW_TAG_member, name: "te1", scope: !7959, file: !7924, line: 221, baseType: !8021, size: 64)
!8021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8022, size: 64)
!8022 = !DIDerivedType(tag: DW_TAG_typedef, name: "te1_settings", file: !7964, line: 51, baseType: !8023)
!8023 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7964, line: 46, size: 128, elements: !8024)
!8024 = !{!8025, !8026, !8027, !8028}
!8025 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !8023, file: !7964, line: 47, baseType: !14, size: 32)
!8026 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !8023, file: !7964, line: 48, baseType: !14, size: 32, offset: 32)
!8027 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !8023, file: !7964, line: 49, baseType: !633, size: 16, offset: 64)
!8028 = !DIDerivedType(tag: DW_TAG_member, name: "slot_map", scope: !8023, file: !7964, line: 50, baseType: !14, size: 32, offset: 96)
!8029 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_config", scope: !559, file: !6, line: 1304, baseType: !8030, size: 64, offset: 768)
!8030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8031, size: 64)
!8031 = !DISubroutineType(types: !8032)
!8032 = !{!7, !451, !8033}
!8033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7942, size: 64)
!8034 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_mtu", scope: !559, file: !6, line: 1306, baseType: !8035, size: 64, offset: 832)
!8035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8036, size: 64)
!8036 = !DISubroutineType(types: !8037)
!8037 = !{!7, !451, !7}
!8038 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_setup", scope: !559, file: !6, line: 1308, baseType: !8039, size: 64, offset: 896)
!8039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8040, size: 64)
!8040 = !DISubroutineType(types: !8041)
!8041 = !{!7, !451, !3150}
!8042 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tx_timeout", scope: !559, file: !6, line: 1310, baseType: !8043, size: 64, offset: 960)
!8043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8044, size: 64)
!8044 = !DISubroutineType(types: !8045)
!8045 = !{null, !451, !14}
!8046 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats64", scope: !559, file: !6, line: 1313, baseType: !8047, size: 64, offset: 1024)
!8047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8048, size: 64)
!8048 = !DISubroutineType(types: !8049)
!8049 = !{null, !451, !8050}
!8050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8051, size: 64)
!8051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_stats64", file: !8052, line: 214, size: 1536, elements: !8053)
!8052 = !DIFile(filename: "./include/uapi/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!8053 = !{!8054, !8055, !8056, !8057, !8058, !8059, !8060, !8061, !8062, !8063, !8064, !8065, !8066, !8067, !8068, !8069, !8070, !8071, !8072, !8073, !8074, !8075, !8076, !8077}
!8054 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !8051, file: !8052, line: 215, baseType: !494, size: 64)
!8055 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !8051, file: !8052, line: 216, baseType: !494, size: 64, offset: 64)
!8056 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !8051, file: !8052, line: 217, baseType: !494, size: 64, offset: 128)
!8057 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !8051, file: !8052, line: 218, baseType: !494, size: 64, offset: 192)
!8058 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !8051, file: !8052, line: 219, baseType: !494, size: 64, offset: 256)
!8059 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !8051, file: !8052, line: 220, baseType: !494, size: 64, offset: 320)
!8060 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !8051, file: !8052, line: 221, baseType: !494, size: 64, offset: 384)
!8061 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !8051, file: !8052, line: 222, baseType: !494, size: 64, offset: 448)
!8062 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !8051, file: !8052, line: 223, baseType: !494, size: 64, offset: 512)
!8063 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !8051, file: !8052, line: 224, baseType: !494, size: 64, offset: 576)
!8064 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !8051, file: !8052, line: 227, baseType: !494, size: 64, offset: 640)
!8065 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !8051, file: !8052, line: 228, baseType: !494, size: 64, offset: 704)
!8066 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !8051, file: !8052, line: 229, baseType: !494, size: 64, offset: 768)
!8067 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !8051, file: !8052, line: 230, baseType: !494, size: 64, offset: 832)
!8068 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !8051, file: !8052, line: 231, baseType: !494, size: 64, offset: 896)
!8069 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !8051, file: !8052, line: 232, baseType: !494, size: 64, offset: 960)
!8070 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !8051, file: !8052, line: 235, baseType: !494, size: 64, offset: 1024)
!8071 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !8051, file: !8052, line: 236, baseType: !494, size: 64, offset: 1088)
!8072 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !8051, file: !8052, line: 237, baseType: !494, size: 64, offset: 1152)
!8073 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !8051, file: !8052, line: 238, baseType: !494, size: 64, offset: 1216)
!8074 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !8051, file: !8052, line: 239, baseType: !494, size: 64, offset: 1280)
!8075 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !8051, file: !8052, line: 242, baseType: !494, size: 64, offset: 1344)
!8076 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !8051, file: !8052, line: 243, baseType: !494, size: 64, offset: 1408)
!8077 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !8051, file: !8052, line: 244, baseType: !494, size: 64, offset: 1472)
!8078 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_has_offload_stats", scope: !559, file: !6, line: 1315, baseType: !8079, size: 64, offset: 1088)
!8079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8080, size: 64)
!8080 = !DISubroutineType(types: !8081)
!8081 = !{!696, !3023, !7}
!8082 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_offload_stats", scope: !559, file: !6, line: 1316, baseType: !8083, size: 64, offset: 1152)
!8083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8084, size: 64)
!8084 = !DISubroutineType(types: !8085)
!8085 = !{!7, !7, !3023, !726}
!8086 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats", scope: !559, file: !6, line: 1319, baseType: !8087, size: 64, offset: 1216)
!8087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8088, size: 64)
!8088 = !DISubroutineType(types: !8089)
!8089 = !{!8090, !451}
!8090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 64)
!8091 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_add_vid", scope: !559, file: !6, line: 1321, baseType: !8092, size: 64, offset: 1280)
!8092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8093, size: 64)
!8093 = !DISubroutineType(types: !8094)
!8094 = !{!7, !451, !645, !1193}
!8095 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_kill_vid", scope: !559, file: !6, line: 1323, baseType: !8092, size: 64, offset: 1344)
!8096 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_mac", scope: !559, file: !6, line: 1331, baseType: !8097, size: 64, offset: 1408)
!8097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8098, size: 64)
!8098 = !DISubroutineType(types: !8099)
!8099 = !{!7, !451, !7, !8100}
!8100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 64)
!8101 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_vlan", scope: !559, file: !6, line: 1333, baseType: !8102, size: 64, offset: 1472)
!8102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8103, size: 64)
!8103 = !DISubroutineType(types: !8104)
!8104 = !{!7, !451, !7, !1193, !1552, !645}
!8105 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rate", scope: !559, file: !6, line: 1336, baseType: !8106, size: 64, offset: 1536)
!8106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8107, size: 64)
!8107 = !DISubroutineType(types: !8108)
!8108 = !{!7, !451, !7, !7, !7}
!8109 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_spoofchk", scope: !559, file: !6, line: 1339, baseType: !8110, size: 64, offset: 1600)
!8110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8111, size: 64)
!8111 = !DISubroutineType(types: !8112)
!8112 = !{!7, !451, !7, !696}
!8113 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_trust", scope: !559, file: !6, line: 1341, baseType: !8110, size: 64, offset: 1664)
!8114 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_config", scope: !559, file: !6, line: 1343, baseType: !8115, size: 64, offset: 1728)
!8115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8116, size: 64)
!8116 = !DISubroutineType(types: !8117)
!8117 = !{!7, !451, !7, !8118}
!8118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8119, size: 64)
!8119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_info", file: !8120, line: 20, size: 576, elements: !8121)
!8120 = !DIFile(filename: "./include/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!8121 = !{!8122, !8123, !8125, !8126, !8127, !8128, !8129, !8130, !8131, !8132, !8133}
!8122 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !8119, file: !8120, line: 21, baseType: !624, size: 32)
!8123 = !DIDerivedType(tag: DW_TAG_member, name: "mac", scope: !8119, file: !8120, line: 22, baseType: !8124, size: 256, offset: 32)
!8124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1553, size: 256, elements: !871)
!8125 = !DIDerivedType(tag: DW_TAG_member, name: "vlan", scope: !8119, file: !8120, line: 23, baseType: !624, size: 32, offset: 288)
!8126 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !8119, file: !8120, line: 24, baseType: !624, size: 32, offset: 320)
!8127 = !DIDerivedType(tag: DW_TAG_member, name: "spoofchk", scope: !8119, file: !8120, line: 25, baseType: !624, size: 32, offset: 352)
!8128 = !DIDerivedType(tag: DW_TAG_member, name: "linkstate", scope: !8119, file: !8120, line: 26, baseType: !624, size: 32, offset: 384)
!8129 = !DIDerivedType(tag: DW_TAG_member, name: "min_tx_rate", scope: !8119, file: !8120, line: 27, baseType: !624, size: 32, offset: 416)
!8130 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx_rate", scope: !8119, file: !8120, line: 28, baseType: !624, size: 32, offset: 448)
!8131 = !DIDerivedType(tag: DW_TAG_member, name: "rss_query_en", scope: !8119, file: !8120, line: 29, baseType: !624, size: 32, offset: 480)
!8132 = !DIDerivedType(tag: DW_TAG_member, name: "trusted", scope: !8119, file: !8120, line: 30, baseType: !624, size: 32, offset: 512)
!8133 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !8119, file: !8120, line: 31, baseType: !645, size: 16, offset: 544)
!8134 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_link_state", scope: !559, file: !6, line: 1346, baseType: !8135, size: 64, offset: 1792)
!8135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8136, size: 64)
!8136 = !DISubroutineType(types: !8137)
!8137 = !{!7, !451, !7, !7}
!8138 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_stats", scope: !559, file: !6, line: 1348, baseType: !8139, size: 64, offset: 1856)
!8139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8140, size: 64)
!8140 = !DISubroutineType(types: !8141)
!8141 = !{!7, !451, !7, !8142}
!8142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8143, size: 64)
!8143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_stats", file: !8120, line: 9, size: 512, elements: !8144)
!8144 = !{!8145, !8146, !8147, !8148, !8149, !8150, !8151, !8152}
!8145 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !8143, file: !8120, line: 10, baseType: !494, size: 64)
!8146 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !8143, file: !8120, line: 11, baseType: !494, size: 64, offset: 64)
!8147 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !8143, file: !8120, line: 12, baseType: !494, size: 64, offset: 128)
!8148 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !8143, file: !8120, line: 13, baseType: !494, size: 64, offset: 192)
!8149 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !8143, file: !8120, line: 14, baseType: !494, size: 64, offset: 256)
!8150 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !8143, file: !8120, line: 15, baseType: !494, size: 64, offset: 320)
!8151 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !8143, file: !8120, line: 16, baseType: !494, size: 64, offset: 384)
!8152 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !8143, file: !8120, line: 17, baseType: !494, size: 64, offset: 448)
!8153 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_port", scope: !559, file: !6, line: 1352, baseType: !8154, size: 64, offset: 1920)
!8154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8155, size: 64)
!8155 = !DISubroutineType(types: !8156)
!8156 = !{!7, !451, !7, !8157}
!8157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8158, size: 64)
!8158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2641, size: 64)
!8159 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_port", scope: !559, file: !6, line: 1355, baseType: !8160, size: 64, offset: 1984)
!8160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8161, size: 64)
!8161 = !DISubroutineType(types: !8162)
!8162 = !{!7, !451, !7, !576}
!8163 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_guid", scope: !559, file: !6, line: 1357, baseType: !8164, size: 64, offset: 2048)
!8164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8165, size: 64)
!8165 = !DISubroutineType(types: !8166)
!8166 = !{!7, !451, !7, !8167, !8167}
!8167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8168, size: 64)
!8168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_guid", file: !8052, line: 956, size: 128, elements: !8169)
!8169 = !{!8170, !8171}
!8170 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !8168, file: !8052, line: 957, baseType: !624, size: 32)
!8171 = !DIDerivedType(tag: DW_TAG_member, name: "guid", scope: !8168, file: !8052, line: 958, baseType: !494, size: 64, offset: 64)
!8172 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_guid", scope: !559, file: !6, line: 1361, baseType: !8173, size: 64, offset: 2112)
!8173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8174, size: 64)
!8174 = !DISubroutineType(types: !8175)
!8175 = !{!7, !451, !7, !492, !7}
!8176 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rss_query_en", scope: !559, file: !6, line: 1364, baseType: !8110, size: 64, offset: 2176)
!8177 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_setup_tc", scope: !559, file: !6, line: 1367, baseType: !8178, size: 64, offset: 2240)
!8178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8179, size: 64)
!8179 = !DISubroutineType(types: !8180)
!8180 = !{!7, !451, !287, !726}
!8181 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_add_slave", scope: !559, file: !6, line: 1400, baseType: !8182, size: 64, offset: 2304)
!8182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8183, size: 64)
!8183 = !DISubroutineType(types: !8184)
!8184 = !{!7, !451, !451, !2633}
!8185 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_del_slave", scope: !559, file: !6, line: 1403, baseType: !8186, size: 64, offset: 2368)
!8186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8187, size: 64)
!8187 = !DISubroutineType(types: !8188)
!8188 = !{!7, !451, !451}
!8189 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_xmit_slave", scope: !559, file: !6, line: 1405, baseType: !8190, size: 64, offset: 2432)
!8190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8191, size: 64)
!8191 = !DISubroutineType(types: !8192)
!8192 = !{!451, !451, !576, !696}
!8193 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fix_features", scope: !559, file: !6, line: 1408, baseType: !8194, size: 64, offset: 2496)
!8194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8195, size: 64)
!8195 = !DISubroutineType(types: !8196)
!8196 = !{!490, !451, !490}
!8197 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_features", scope: !559, file: !6, line: 1410, baseType: !8198, size: 64, offset: 2560)
!8198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8199, size: 64)
!8199 = !DISubroutineType(types: !8200)
!8200 = !{!7, !451, !490}
!8201 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_construct", scope: !559, file: !6, line: 1412, baseType: !8202, size: 64, offset: 2624)
!8202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8203, size: 64)
!8203 = !DISubroutineType(types: !8204)
!8204 = !{!7, !451, !3006}
!8205 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_destroy", scope: !559, file: !6, line: 1414, baseType: !8206, size: 64, offset: 2688)
!8206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8207, size: 64)
!8207 = !DISubroutineType(types: !8208)
!8208 = !{null, !451, !3006}
!8209 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_add", scope: !559, file: !6, line: 1417, baseType: !8210, size: 64, offset: 2752)
!8210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8211, size: 64)
!8211 = !DISubroutineType(types: !8212)
!8212 = !{!7, !8213, !8157, !451, !866, !1193, !1193, !2633}
!8213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8214, size: 64)
!8214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndmsg", file: !8215, line: 8, size: 96, elements: !8216)
!8215 = !DIFile(filename: "./include/uapi/linux/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!8216 = !{!8217, !8218, !8219, !8220, !8221, !8222, !8223}
!8217 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_family", scope: !8214, file: !8215, line: 9, baseType: !1553, size: 8)
!8218 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad1", scope: !8214, file: !8215, line: 10, baseType: !1553, size: 8, offset: 8)
!8219 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad2", scope: !8214, file: !8215, line: 11, baseType: !632, size: 16, offset: 16)
!8220 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_ifindex", scope: !8214, file: !8215, line: 12, baseType: !1645, size: 32, offset: 32)
!8221 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_state", scope: !8214, file: !8215, line: 13, baseType: !632, size: 16, offset: 64)
!8222 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_flags", scope: !8214, file: !8215, line: 14, baseType: !1553, size: 8, offset: 80)
!8223 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_type", scope: !8214, file: !8215, line: 15, baseType: !1553, size: 8, offset: 88)
!8224 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_del", scope: !559, file: !6, line: 1424, baseType: !8225, size: 64, offset: 2816)
!8225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8226, size: 64)
!8226 = !DISubroutineType(types: !8227)
!8227 = !{!7, !8213, !8157, !451, !866, !1193}
!8228 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_dump", scope: !559, file: !6, line: 1429, baseType: !8229, size: 64, offset: 2880)
!8229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8230, size: 64)
!8230 = !DISubroutineType(types: !8231)
!8231 = !{!7, !576, !8232, !451, !451, !695}
!8232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8233, size: 64)
!8233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_callback", file: !2635, line: 203, size: 1024, elements: !8234)
!8234 = !{!8235, !8236, !8246, !8250, !8254, !8255, !8256, !8257, !8258, !8259, !8260, !8261, !8262, !8263}
!8235 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !8233, file: !2635, line: 204, baseType: !576, size: 64)
!8236 = !DIDerivedType(tag: DW_TAG_member, name: "nlh", scope: !8233, file: !2635, line: 205, baseType: !8237, size: 64, offset: 64)
!8237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8238, size: 64)
!8238 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8239)
!8239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlmsghdr", file: !2642, line: 44, size: 128, elements: !8240)
!8240 = !{!8241, !8242, !8243, !8244, !8245}
!8241 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_len", scope: !8239, file: !2642, line: 45, baseType: !624, size: 32)
!8242 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_type", scope: !8239, file: !2642, line: 46, baseType: !632, size: 16, offset: 32)
!8243 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_flags", scope: !8239, file: !2642, line: 47, baseType: !632, size: 16, offset: 48)
!8244 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_seq", scope: !8239, file: !2642, line: 48, baseType: !624, size: 32, offset: 64)
!8245 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_pid", scope: !8239, file: !2642, line: 49, baseType: !624, size: 32, offset: 96)
!8246 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !8233, file: !2635, line: 206, baseType: !8247, size: 64, offset: 128)
!8247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8248, size: 64)
!8248 = !DISubroutineType(types: !8249)
!8249 = !{!7, !576, !8232}
!8250 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !8233, file: !2635, line: 208, baseType: !8251, size: 64, offset: 192)
!8251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8252, size: 64)
!8252 = !DISubroutineType(types: !8253)
!8253 = !{!7, !8232}
!8254 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8233, file: !2635, line: 209, baseType: !726, size: 64, offset: 256)
!8255 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !8233, file: !2635, line: 211, baseType: !1007, size: 64, offset: 320)
!8256 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !8233, file: !2635, line: 212, baseType: !2633, size: 64, offset: 384)
!8257 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !8233, file: !2635, line: 213, baseType: !1193, size: 16, offset: 448)
!8258 = !DIDerivedType(tag: DW_TAG_member, name: "answer_flags", scope: !8233, file: !2635, line: 214, baseType: !1193, size: 16, offset: 464)
!8259 = !DIDerivedType(tag: DW_TAG_member, name: "min_dump_alloc", scope: !8233, file: !2635, line: 215, baseType: !862, size: 32, offset: 480)
!8260 = !DIDerivedType(tag: DW_TAG_member, name: "prev_seq", scope: !8233, file: !2635, line: 216, baseType: !14, size: 32, offset: 512)
!8261 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !8233, file: !2635, line: 216, baseType: !14, size: 32, offset: 544)
!8262 = !DIDerivedType(tag: DW_TAG_member, name: "strict_check", scope: !8233, file: !2635, line: 217, baseType: !696, size: 8, offset: 576)
!8263 = !DIDerivedType(tag: DW_TAG_member, scope: !8233, file: !2635, line: 218, baseType: !8264, size: 384, offset: 640)
!8264 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8233, file: !2635, line: 218, size: 384, elements: !8265)
!8265 = !{!8266, !8268}
!8266 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !8264, file: !2635, line: 219, baseType: !8267, size: 384)
!8267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1552, size: 384, elements: !7802)
!8268 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !8264, file: !2635, line: 224, baseType: !8269, size: 384)
!8269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !669, size: 384, elements: !1825)
!8270 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_get", scope: !559, file: !6, line: 1434, baseType: !8271, size: 64, offset: 2944)
!8271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8272, size: 64)
!8272 = !DISubroutineType(types: !8273)
!8273 = !{!7, !576, !8157, !451, !866, !1193, !862, !862, !2633}
!8274 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_setlink", scope: !559, file: !6, line: 1440, baseType: !8275, size: 64, offset: 3008)
!8275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8276, size: 64)
!8276 = !DISubroutineType(types: !8277)
!8277 = !{!7, !451, !8278, !1193, !2633}
!8278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8239, size: 64)
!8279 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_getlink", scope: !559, file: !6, line: 1444, baseType: !8280, size: 64, offset: 3072)
!8280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8281, size: 64)
!8281 = !DISubroutineType(types: !8282)
!8282 = !{!7, !576, !862, !862, !451, !862, !7}
!8283 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_dellink", scope: !559, file: !6, line: 1449, baseType: !8284, size: 64, offset: 3136)
!8284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8285, size: 64)
!8285 = !DISubroutineType(types: !8286)
!8286 = !{!7, !451, !8278, !1193}
!8287 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_carrier", scope: !559, file: !6, line: 1452, baseType: !8288, size: 64, offset: 3200)
!8288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8289, size: 64)
!8289 = !DISubroutineType(types: !8290)
!8290 = !{!7, !451, !696}
!8291 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_id", scope: !559, file: !6, line: 1454, baseType: !8292, size: 64, offset: 3264)
!8292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8293, size: 64)
!8293 = !DISubroutineType(types: !8294)
!8294 = !{!7, !451, !8295}
!8295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8296, size: 64)
!8296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_phys_item_id", file: !6, line: 820, size: 264, elements: !8297)
!8297 = !{!8298, !8299}
!8298 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8296, file: !6, line: 821, baseType: !870, size: 256)
!8299 = !DIDerivedType(tag: DW_TAG_member, name: "id_len", scope: !8296, file: !6, line: 822, baseType: !650, size: 8, offset: 256)
!8300 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_port_parent_id", scope: !559, file: !6, line: 1456, baseType: !8292, size: 64, offset: 3328)
!8301 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_name", scope: !559, file: !6, line: 1458, baseType: !8302, size: 64, offset: 3392)
!8302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8303, size: 64)
!8303 = !DISubroutineType(types: !8304)
!8304 = !{!7, !451, !733, !750}
!8305 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_add", scope: !559, file: !6, line: 1460, baseType: !8306, size: 64, offset: 3456)
!8306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8307, size: 64)
!8307 = !DISubroutineType(types: !8308)
!8308 = !{null, !451, !8309}
!8309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8310, size: 64)
!8310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_info", file: !8311, line: 114, size: 64, elements: !8312)
!8311 = !DIFile(filename: "./include/net/udp_tunnel.h", directory: "/home/lizy2001/genbc/linux")
!8312 = !{!8313, !8314, !8315, !8316}
!8313 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8310, file: !8311, line: 115, baseType: !633, size: 16)
!8314 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !8310, file: !8311, line: 116, baseType: !679, size: 16, offset: 16)
!8315 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !8310, file: !8311, line: 117, baseType: !645, size: 16, offset: 32)
!8316 = !DIDerivedType(tag: DW_TAG_member, name: "hw_priv", scope: !8310, file: !8311, line: 118, baseType: !1552, size: 8, offset: 48)
!8317 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_del", scope: !559, file: !6, line: 1462, baseType: !8306, size: 64, offset: 3520)
!8318 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_add_station", scope: !559, file: !6, line: 1464, baseType: !8319, size: 64, offset: 3584)
!8319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8320, size: 64)
!8320 = !DISubroutineType(types: !8321)
!8321 = !{!726, !451, !451}
!8322 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_del_station", scope: !559, file: !6, line: 1466, baseType: !8323, size: 64, offset: 3648)
!8323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8324, size: 64)
!8324 = !DISubroutineType(types: !8325)
!8325 = !{null, !451, !726}
!8326 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_tx_maxrate", scope: !559, file: !6, line: 1469, baseType: !8327, size: 64, offset: 3712)
!8327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8328, size: 64)
!8328 = !DISubroutineType(types: !8329)
!8329 = !{!7, !451, !7, !862}
!8330 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_iflink", scope: !559, file: !6, line: 1472, baseType: !8331, size: 64, offset: 3776)
!8331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8332, size: 64)
!8332 = !DISubroutineType(types: !8333)
!8333 = !{!7, !3023}
!8334 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_proto_down", scope: !559, file: !6, line: 1473, baseType: !8288, size: 64, offset: 3840)
!8335 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fill_metadata_dst", scope: !559, file: !6, line: 1475, baseType: !8336, size: 64, offset: 3904)
!8336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8337, size: 64)
!8337 = !DISubroutineType(types: !8338)
!8338 = !{!7, !451, !576}
!8339 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_headroom", scope: !559, file: !6, line: 1477, baseType: !7909, size: 64, offset: 3968)
!8340 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bpf", scope: !559, file: !6, line: 1479, baseType: !8341, size: 64, offset: 4032)
!8341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8342, size: 64)
!8342 = !DISubroutineType(types: !8343)
!8343 = !{!7, !451, !8344}
!8344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8345, size: 64)
!8345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_bpf", file: !6, line: 894, size: 256, elements: !8346)
!8346 = !{!8347, !8348}
!8347 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !8345, file: !6, line: 895, baseType: !307, size: 32)
!8348 = !DIDerivedType(tag: DW_TAG_member, scope: !8345, file: !6, line: 896, baseType: !8349, size: 192, offset: 64)
!8349 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8345, file: !6, line: 896, size: 192, elements: !8350)
!8350 = !{!8351, !8357, !8386}
!8351 = !DIDerivedType(tag: DW_TAG_member, scope: !8349, file: !6, line: 898, baseType: !8352, size: 192)
!8352 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8349, file: !6, line: 898, size: 192, elements: !8353)
!8353 = !{!8354, !8355, !8356}
!8354 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8352, file: !6, line: 899, baseType: !862, size: 32)
!8355 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !8352, file: !6, line: 900, baseType: !3504, size: 64, offset: 64)
!8356 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !8352, file: !6, line: 901, baseType: !2633, size: 64, offset: 128)
!8357 = !DIDerivedType(tag: DW_TAG_member, scope: !8349, file: !6, line: 904, baseType: !8358, size: 64)
!8358 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8349, file: !6, line: 904, size: 64, elements: !8359)
!8359 = !{!8360}
!8360 = !DIDerivedType(tag: DW_TAG_member, name: "offmap", scope: !8358, file: !6, line: 905, baseType: !8361, size: 64)
!8361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8362, size: 64)
!8362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offloaded_map", file: !105, line: 222, size: 2560, elements: !8363)
!8363 = !{!8364, !8365, !8366, !8384, !8385}
!8364 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !8362, file: !105, line: 223, baseType: !3629, size: 2048)
!8365 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !8362, file: !105, line: 224, baseType: !451, size: 64, offset: 2048)
!8366 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ops", scope: !8362, file: !105, line: 225, baseType: !8367, size: 64, offset: 2112)
!8367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8368, size: 64)
!8368 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8369)
!8369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_dev_ops", file: !105, line: 212, size: 256, elements: !8370)
!8370 = !{!8371, !8375, !8376, !8380}
!8371 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !8369, file: !105, line: 213, baseType: !8372, size: 64)
!8372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8373, size: 64)
!8373 = !DISubroutineType(types: !8374)
!8374 = !{!7, !8361, !726, !726}
!8375 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !8369, file: !105, line: 215, baseType: !8372, size: 64, offset: 64)
!8376 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !8369, file: !105, line: 217, baseType: !8377, size: 64, offset: 128)
!8377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8378, size: 64)
!8378 = !DISubroutineType(types: !8379)
!8379 = !{!7, !8361, !726, !726, !492}
!8380 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !8369, file: !105, line: 219, baseType: !8381, size: 64, offset: 192)
!8381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8382, size: 64)
!8382 = !DISubroutineType(types: !8383)
!8383 = !{!7, !8361, !726}
!8384 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !8362, file: !105, line: 226, baseType: !726, size: 64, offset: 2176)
!8385 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !8362, file: !105, line: 227, baseType: !445, size: 128, offset: 2240)
!8386 = !DIDerivedType(tag: DW_TAG_member, name: "xsk", scope: !8349, file: !6, line: 911, baseType: !8387, size: 128)
!8387 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8349, file: !6, line: 908, size: 128, elements: !8388)
!8388 = !{!8389, !8392}
!8389 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !8387, file: !6, line: 909, baseType: !8390, size: 64)
!8390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8391, size: 64)
!8391 = !DICompositeType(tag: DW_TAG_structure_type, name: "xsk_buff_pool", file: !6, line: 909, flags: DIFlagFwdDecl)
!8392 = !DIDerivedType(tag: DW_TAG_member, name: "queue_id", scope: !8387, file: !6, line: 910, baseType: !1193, size: 16, offset: 64)
!8393 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xdp_xmit", scope: !559, file: !6, line: 1481, baseType: !8394, size: 64, offset: 4096)
!8394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8395, size: 64)
!8395 = !DISubroutineType(types: !8396)
!8396 = !{!7, !451, !7, !8397, !862}
!8397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8398, size: 64)
!8398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8399, size: 64)
!8399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_frame", file: !8400, line: 94, size: 256, elements: !8401)
!8400 = !DIFile(filename: "./include/net/xdp.h", directory: "/home/lizy2001/genbc/linux")
!8401 = !{!8402, !8403, !8404, !8405, !8406, !8407, !8412}
!8402 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8399, file: !8400, line: 95, baseType: !726, size: 64)
!8403 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8399, file: !8400, line: 96, baseType: !1193, size: 16, offset: 64)
!8404 = !DIDerivedType(tag: DW_TAG_member, name: "headroom", scope: !8399, file: !8400, line: 97, baseType: !1193, size: 16, offset: 80)
!8405 = !DIDerivedType(tag: DW_TAG_member, name: "metasize", scope: !8399, file: !8400, line: 98, baseType: !862, size: 8, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!8406 = !DIDerivedType(tag: DW_TAG_member, name: "frame_sz", scope: !8399, file: !8400, line: 99, baseType: !862, size: 24, offset: 104, flags: DIFlagBitField, extraData: i64 96)
!8407 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !8399, file: !8400, line: 103, baseType: !8408, size: 64, offset: 128)
!8408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_mem_info", file: !8400, line: 50, size: 64, elements: !8409)
!8409 = !{!8410, !8411}
!8410 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8408, file: !8400, line: 51, baseType: !862, size: 32)
!8411 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8408, file: !8400, line: 52, baseType: !862, size: 32, offset: 32)
!8412 = !DIDerivedType(tag: DW_TAG_member, name: "dev_rx", scope: !8399, file: !8400, line: 104, baseType: !451, size: 64, offset: 192)
!8413 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xsk_wakeup", scope: !559, file: !6, line: 1484, baseType: !8414, size: 64, offset: 4160)
!8414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8415, size: 64)
!8415 = !DISubroutineType(types: !8416)
!8416 = !{!7, !451, !862, !862}
!8417 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_devlink_port", scope: !559, file: !6, line: 1486, baseType: !8418, size: 64, offset: 4224)
!8418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8419, size: 64)
!8419 = !DISubroutineType(types: !8420)
!8420 = !{!8421, !451}
!8421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8422, size: 64)
!8422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port", file: !8423, line: 119, size: 2176, elements: !8424)
!8423 = !DIFile(filename: "./include/net/devlink.h", directory: "/home/lizy2001/genbc/linux")
!8424 = !{!8425, !8426, !8427, !8428, !8675, !8676, !8677, !8678, !8679, !8680, !8681, !8710, !8711, !8712, !8713, !8714}
!8425 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !8422, file: !8423, line: 120, baseType: !445, size: 128)
!8426 = !DIDerivedType(tag: DW_TAG_member, name: "param_list", scope: !8422, file: !8423, line: 121, baseType: !445, size: 128, offset: 128)
!8427 = !DIDerivedType(tag: DW_TAG_member, name: "region_list", scope: !8422, file: !8423, line: 122, baseType: !445, size: 128, offset: 256)
!8428 = !DIDerivedType(tag: DW_TAG_member, name: "devlink", scope: !8422, file: !8423, line: 123, baseType: !8429, size: 64, offset: 384)
!8429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8430, size: 64)
!8430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink", file: !8423, line: 33, size: 2816, elements: !8431)
!8431 = !{!8432, !8433, !8434, !8435, !8436, !8437, !8438, !8439, !8440, !8441, !8463, !8464, !8465, !8466, !8660, !8661, !8667, !8668, !8669, !8670, !8671, !8672, !8673}
!8432 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !8430, file: !8423, line: 34, baseType: !445, size: 128)
!8433 = !DIDerivedType(tag: DW_TAG_member, name: "port_list", scope: !8430, file: !8423, line: 35, baseType: !445, size: 128, offset: 128)
!8434 = !DIDerivedType(tag: DW_TAG_member, name: "sb_list", scope: !8430, file: !8423, line: 36, baseType: !445, size: 128, offset: 256)
!8435 = !DIDerivedType(tag: DW_TAG_member, name: "dpipe_table_list", scope: !8430, file: !8423, line: 37, baseType: !445, size: 128, offset: 384)
!8436 = !DIDerivedType(tag: DW_TAG_member, name: "resource_list", scope: !8430, file: !8423, line: 38, baseType: !445, size: 128, offset: 512)
!8437 = !DIDerivedType(tag: DW_TAG_member, name: "param_list", scope: !8430, file: !8423, line: 39, baseType: !445, size: 128, offset: 640)
!8438 = !DIDerivedType(tag: DW_TAG_member, name: "region_list", scope: !8430, file: !8423, line: 40, baseType: !445, size: 128, offset: 768)
!8439 = !DIDerivedType(tag: DW_TAG_member, name: "reporter_list", scope: !8430, file: !8423, line: 41, baseType: !445, size: 128, offset: 896)
!8440 = !DIDerivedType(tag: DW_TAG_member, name: "reporters_lock", scope: !8430, file: !8423, line: 42, baseType: !1109, size: 192, offset: 1024)
!8441 = !DIDerivedType(tag: DW_TAG_member, name: "dpipe_headers", scope: !8430, file: !8423, line: 43, baseType: !8442, size: 64, offset: 1216)
!8442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8443, size: 64)
!8443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_dpipe_headers", file: !8423, line: 320, size: 128, elements: !8444)
!8444 = !{!8445, !8462}
!8445 = !DIDerivedType(tag: DW_TAG_member, name: "headers", scope: !8443, file: !8423, line: 321, baseType: !8446, size: 64)
!8446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8447, size: 64)
!8447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8448, size: 64)
!8448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_dpipe_header", file: !8423, line: 170, size: 256, elements: !8449)
!8449 = !{!8450, !8451, !8452, !8460, !8461}
!8450 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8448, file: !8423, line: 171, baseType: !453, size: 64)
!8451 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8448, file: !8423, line: 172, baseType: !14, size: 32, offset: 64)
!8452 = !DIDerivedType(tag: DW_TAG_member, name: "fields", scope: !8448, file: !8423, line: 173, baseType: !8453, size: 64, offset: 128)
!8453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8454, size: 64)
!8454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_dpipe_field", file: !8423, line: 154, size: 192, elements: !8455)
!8455 = !{!8456, !8457, !8458, !8459}
!8456 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8454, file: !8423, line: 155, baseType: !453, size: 64)
!8457 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8454, file: !8423, line: 156, baseType: !14, size: 32, offset: 64)
!8458 = !DIDerivedType(tag: DW_TAG_member, name: "bitwidth", scope: !8454, file: !8423, line: 157, baseType: !14, size: 32, offset: 96)
!8459 = !DIDerivedType(tag: DW_TAG_member, name: "mapping_type", scope: !8454, file: !8423, line: 158, baseType: !314, size: 32, offset: 128)
!8460 = !DIDerivedType(tag: DW_TAG_member, name: "fields_count", scope: !8448, file: !8423, line: 174, baseType: !14, size: 32, offset: 192)
!8461 = !DIDerivedType(tag: DW_TAG_member, name: "global", scope: !8448, file: !8423, line: 175, baseType: !696, size: 8, offset: 224)
!8462 = !DIDerivedType(tag: DW_TAG_member, name: "headers_count", scope: !8443, file: !8423, line: 322, baseType: !14, size: 32, offset: 64)
!8463 = !DIDerivedType(tag: DW_TAG_member, name: "trap_list", scope: !8430, file: !8423, line: 44, baseType: !445, size: 128, offset: 1280)
!8464 = !DIDerivedType(tag: DW_TAG_member, name: "trap_group_list", scope: !8430, file: !8423, line: 45, baseType: !445, size: 128, offset: 1408)
!8465 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_list", scope: !8430, file: !8423, line: 46, baseType: !445, size: 128, offset: 1536)
!8466 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !8430, file: !8423, line: 47, baseType: !8467, size: 64, offset: 1664)
!8467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8468, size: 64)
!8468 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8469)
!8469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_ops", file: !8423, line: 1159, size: 2432, elements: !8470)
!8470 = !{!8471, !8472, !8473, !8474, !8478, !8482, !8486, !8490, !8494, !8505, !8509, !8513, !8517, !8522, !8526, !8530, !8531, !8535, !8539, !8543, !8547, !8551, !8555, !8560, !8564, !8570, !8580, !8595, !8599, !8603, !8615, !8630, !8634, !8638, !8642, !8646, !8650, !8654}
!8471 = !DIDerivedType(tag: DW_TAG_member, name: "supported_flash_update_params", scope: !8469, file: !8423, line: 1165, baseType: !862, size: 32)
!8472 = !DIDerivedType(tag: DW_TAG_member, name: "reload_actions", scope: !8469, file: !8423, line: 1166, baseType: !473, size: 64, offset: 64)
!8473 = !DIDerivedType(tag: DW_TAG_member, name: "reload_limits", scope: !8469, file: !8423, line: 1167, baseType: !473, size: 64, offset: 128)
!8474 = !DIDerivedType(tag: DW_TAG_member, name: "reload_down", scope: !8469, file: !8423, line: 1168, baseType: !8475, size: 64, offset: 192)
!8475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8476, size: 64)
!8476 = !DISubroutineType(types: !8477)
!8477 = !{!7, !8429, !696, !319, !326, !2633}
!8478 = !DIDerivedType(tag: DW_TAG_member, name: "reload_up", scope: !8469, file: !8423, line: 1172, baseType: !8479, size: 64, offset: 256)
!8479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8480, size: 64)
!8480 = !DISubroutineType(types: !8481)
!8481 = !{!7, !8429, !319, !326, !1615, !2633}
!8482 = !DIDerivedType(tag: DW_TAG_member, name: "port_type_set", scope: !8469, file: !8423, line: 1175, baseType: !8483, size: 64, offset: 320)
!8483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8484, size: 64)
!8484 = !DISubroutineType(types: !8485)
!8485 = !{!7, !8421, !332}
!8486 = !DIDerivedType(tag: DW_TAG_member, name: "port_split", scope: !8469, file: !8423, line: 1177, baseType: !8487, size: 64, offset: 384)
!8487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8488, size: 64)
!8488 = !DISubroutineType(types: !8489)
!8489 = !{!7, !8429, !14, !14, !2633}
!8490 = !DIDerivedType(tag: DW_TAG_member, name: "port_unsplit", scope: !8469, file: !8423, line: 1179, baseType: !8491, size: 64, offset: 448)
!8491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8492, size: 64)
!8492 = !DISubroutineType(types: !8493)
!8493 = !{!7, !8429, !14, !2633}
!8494 = !DIDerivedType(tag: DW_TAG_member, name: "sb_pool_get", scope: !8469, file: !8423, line: 1181, baseType: !8495, size: 64, offset: 512)
!8495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8496, size: 64)
!8496 = !DISubroutineType(types: !8497)
!8497 = !{!7, !8429, !14, !1193, !8498}
!8498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8499, size: 64)
!8499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_sb_pool_info", file: !8423, line: 140, size: 128, elements: !8500)
!8500 = !{!8501, !8502, !8503, !8504}
!8501 = !DIDerivedType(tag: DW_TAG_member, name: "pool_type", scope: !8499, file: !8423, line: 141, baseType: !338, size: 32)
!8502 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8499, file: !8423, line: 142, baseType: !862, size: 32, offset: 32)
!8503 = !DIDerivedType(tag: DW_TAG_member, name: "threshold_type", scope: !8499, file: !8423, line: 143, baseType: !342, size: 32, offset: 64)
!8504 = !DIDerivedType(tag: DW_TAG_member, name: "cell_size", scope: !8499, file: !8423, line: 144, baseType: !862, size: 32, offset: 96)
!8505 = !DIDerivedType(tag: DW_TAG_member, name: "sb_pool_set", scope: !8469, file: !8423, line: 1184, baseType: !8506, size: 64, offset: 576)
!8506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8507, size: 64)
!8507 = !DISubroutineType(types: !8508)
!8508 = !{!7, !8429, !14, !1193, !862, !342, !2633}
!8509 = !DIDerivedType(tag: DW_TAG_member, name: "sb_port_pool_get", scope: !8469, file: !8423, line: 1188, baseType: !8510, size: 64, offset: 640)
!8510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8511, size: 64)
!8511 = !DISubroutineType(types: !8512)
!8512 = !{!7, !8421, !14, !1193, !1615}
!8513 = !DIDerivedType(tag: DW_TAG_member, name: "sb_port_pool_set", scope: !8469, file: !8423, line: 1191, baseType: !8514, size: 64, offset: 704)
!8514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8515, size: 64)
!8515 = !DISubroutineType(types: !8516)
!8516 = !{!7, !8421, !14, !1193, !862, !2633}
!8517 = !DIDerivedType(tag: DW_TAG_member, name: "sb_tc_pool_bind_get", scope: !8469, file: !8423, line: 1194, baseType: !8518, size: 64, offset: 768)
!8518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8519, size: 64)
!8519 = !DISubroutineType(types: !8520)
!8520 = !{!7, !8421, !14, !1193, !338, !8521, !1615}
!8521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 64)
!8522 = !DIDerivedType(tag: DW_TAG_member, name: "sb_tc_pool_bind_set", scope: !8469, file: !8423, line: 1199, baseType: !8523, size: 64, offset: 832)
!8523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8524, size: 64)
!8524 = !DISubroutineType(types: !8525)
!8525 = !{!7, !8421, !14, !1193, !338, !1193, !862, !2633}
!8526 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_snapshot", scope: !8469, file: !8423, line: 1205, baseType: !8527, size: 64, offset: 896)
!8527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8528, size: 64)
!8528 = !DISubroutineType(types: !8529)
!8529 = !{!7, !8429, !14}
!8530 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_max_clear", scope: !8469, file: !8423, line: 1207, baseType: !8527, size: 64, offset: 960)
!8531 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_port_pool_get", scope: !8469, file: !8423, line: 1209, baseType: !8532, size: 64, offset: 1024)
!8532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8533, size: 64)
!8533 = !DISubroutineType(types: !8534)
!8534 = !{!7, !8421, !14, !1193, !1615, !1615}
!8535 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_tc_port_bind_get", scope: !8469, file: !8423, line: 1212, baseType: !8536, size: 64, offset: 1088)
!8536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8537, size: 64)
!8537 = !DISubroutineType(types: !8538)
!8538 = !{!7, !8421, !14, !1193, !338, !1615, !1615}
!8539 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_mode_get", scope: !8469, file: !8423, line: 1218, baseType: !8540, size: 64, offset: 1152)
!8540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8541, size: 64)
!8541 = !DISubroutineType(types: !8542)
!8542 = !{!7, !8429, !8521}
!8543 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_mode_set", scope: !8469, file: !8423, line: 1219, baseType: !8544, size: 64, offset: 1216)
!8544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8545, size: 64)
!8545 = !DISubroutineType(types: !8546)
!8546 = !{!7, !8429, !1193, !2633}
!8547 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_inline_mode_get", scope: !8469, file: !8423, line: 1221, baseType: !8548, size: 64, offset: 1280)
!8548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8549, size: 64)
!8549 = !DISubroutineType(types: !8550)
!8550 = !{!7, !8429, !8100}
!8551 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_inline_mode_set", scope: !8469, file: !8423, line: 1222, baseType: !8552, size: 64, offset: 1344)
!8552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8553, size: 64)
!8553 = !DISubroutineType(types: !8554)
!8554 = !{!7, !8429, !1552, !2633}
!8555 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_encap_mode_get", scope: !8469, file: !8423, line: 1224, baseType: !8556, size: 64, offset: 1408)
!8556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8557, size: 64)
!8557 = !DISubroutineType(types: !8558)
!8558 = !{!7, !8429, !8559}
!8559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64)
!8560 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_encap_mode_set", scope: !8469, file: !8423, line: 1226, baseType: !8561, size: 64, offset: 1472)
!8561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8562, size: 64)
!8562 = !DISubroutineType(types: !8563)
!8563 = !{!7, !8429, !346, !2633}
!8564 = !DIDerivedType(tag: DW_TAG_member, name: "info_get", scope: !8469, file: !8423, line: 1229, baseType: !8565, size: 64, offset: 1536)
!8565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8566, size: 64)
!8566 = !DISubroutineType(types: !8567)
!8567 = !{!7, !8429, !8568, !2633}
!8568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8569, size: 64)
!8569 = !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_info_req", file: !8423, line: 586, flags: DIFlagFwdDecl)
!8570 = !DIDerivedType(tag: DW_TAG_member, name: "flash_update", scope: !8469, file: !8423, line: 1238, baseType: !8571, size: 64, offset: 1600)
!8571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8572, size: 64)
!8572 = !DISubroutineType(types: !8573)
!8573 = !{!7, !8429, !8574, !2633}
!8574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8575, size: 64)
!8575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_flash_update_params", file: !8423, line: 576, size: 192, elements: !8576)
!8576 = !{!8577, !8578, !8579}
!8577 = !DIDerivedType(tag: DW_TAG_member, name: "file_name", scope: !8575, file: !8423, line: 577, baseType: !453, size: 64)
!8578 = !DIDerivedType(tag: DW_TAG_member, name: "component", scope: !8575, file: !8423, line: 578, baseType: !453, size: 64, offset: 64)
!8579 = !DIDerivedType(tag: DW_TAG_member, name: "overwrite_mask", scope: !8575, file: !8423, line: 579, baseType: !862, size: 32, offset: 128)
!8580 = !DIDerivedType(tag: DW_TAG_member, name: "trap_init", scope: !8469, file: !8423, line: 1249, baseType: !8581, size: 64, offset: 1664)
!8581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8582, size: 64)
!8582 = !DISubroutineType(types: !8583)
!8583 = !{!7, !8429, !8584, !726}
!8584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8585, size: 64)
!8585 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8586)
!8586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_trap", file: !8423, line: 733, size: 256, elements: !8587)
!8587 = !{!8588, !8589, !8590, !8591, !8592, !8593, !8594}
!8588 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8586, file: !8423, line: 734, baseType: !350, size: 32)
!8589 = !DIDerivedType(tag: DW_TAG_member, name: "init_action", scope: !8586, file: !8423, line: 735, baseType: !355, size: 32, offset: 32)
!8590 = !DIDerivedType(tag: DW_TAG_member, name: "generic", scope: !8586, file: !8423, line: 736, baseType: !696, size: 8, offset: 64)
!8591 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8586, file: !8423, line: 737, baseType: !1193, size: 16, offset: 80)
!8592 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8586, file: !8423, line: 738, baseType: !453, size: 64, offset: 128)
!8593 = !DIDerivedType(tag: DW_TAG_member, name: "init_group_id", scope: !8586, file: !8423, line: 739, baseType: !1193, size: 16, offset: 192)
!8594 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_cap", scope: !8586, file: !8423, line: 740, baseType: !862, size: 32, offset: 224)
!8595 = !DIDerivedType(tag: DW_TAG_member, name: "trap_fini", scope: !8469, file: !8423, line: 1257, baseType: !8596, size: 64, offset: 1728)
!8596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8597, size: 64)
!8597 = !DISubroutineType(types: !8598)
!8598 = !{null, !8429, !8584, !726}
!8599 = !DIDerivedType(tag: DW_TAG_member, name: "trap_action_set", scope: !8469, file: !8423, line: 1262, baseType: !8600, size: 64, offset: 1792)
!8600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8601, size: 64)
!8601 = !DISubroutineType(types: !8602)
!8602 = !{!7, !8429, !8584, !355, !2633}
!8603 = !DIDerivedType(tag: DW_TAG_member, name: "trap_group_init", scope: !8469, file: !8423, line: 1272, baseType: !8604, size: 64, offset: 1856)
!8604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8605, size: 64)
!8605 = !DISubroutineType(types: !8606)
!8606 = !{!7, !8429, !8607}
!8607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8608, size: 64)
!8608 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8609)
!8609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_trap_group", file: !8423, line: 710, size: 128, elements: !8610)
!8610 = !{!8611, !8612, !8613, !8614}
!8611 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8609, file: !8423, line: 711, baseType: !453, size: 64)
!8612 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8609, file: !8423, line: 712, baseType: !1193, size: 16, offset: 64)
!8613 = !DIDerivedType(tag: DW_TAG_member, name: "generic", scope: !8609, file: !8423, line: 713, baseType: !696, size: 8, offset: 80)
!8614 = !DIDerivedType(tag: DW_TAG_member, name: "init_policer_id", scope: !8609, file: !8423, line: 714, baseType: !862, size: 32, offset: 96)
!8615 = !DIDerivedType(tag: DW_TAG_member, name: "trap_group_set", scope: !8469, file: !8423, line: 1280, baseType: !8616, size: 64, offset: 1920)
!8616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8617, size: 64)
!8617 = !DISubroutineType(types: !8618)
!8618 = !{!7, !8429, !8607, !8619, !2633}
!8619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8620, size: 64)
!8620 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8621)
!8621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_trap_policer", file: !8423, line: 690, size: 448, elements: !8622)
!8622 = !{!8623, !8624, !8625, !8626, !8627, !8628, !8629}
!8623 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8621, file: !8423, line: 691, baseType: !862, size: 32)
!8624 = !DIDerivedType(tag: DW_TAG_member, name: "init_rate", scope: !8621, file: !8423, line: 692, baseType: !492, size: 64, offset: 64)
!8625 = !DIDerivedType(tag: DW_TAG_member, name: "init_burst", scope: !8621, file: !8423, line: 693, baseType: !492, size: 64, offset: 128)
!8626 = !DIDerivedType(tag: DW_TAG_member, name: "max_rate", scope: !8621, file: !8423, line: 694, baseType: !492, size: 64, offset: 192)
!8627 = !DIDerivedType(tag: DW_TAG_member, name: "min_rate", scope: !8621, file: !8423, line: 695, baseType: !492, size: 64, offset: 256)
!8628 = !DIDerivedType(tag: DW_TAG_member, name: "max_burst", scope: !8621, file: !8423, line: 696, baseType: !492, size: 64, offset: 320)
!8629 = !DIDerivedType(tag: DW_TAG_member, name: "min_burst", scope: !8621, file: !8423, line: 697, baseType: !492, size: 64, offset: 384)
!8630 = !DIDerivedType(tag: DW_TAG_member, name: "trap_group_action_set", scope: !8469, file: !8423, line: 1290, baseType: !8631, size: 64, offset: 1984)
!8631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8632, size: 64)
!8632 = !DISubroutineType(types: !8633)
!8633 = !{!7, !8429, !8607, !355, !2633}
!8634 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_init", scope: !8469, file: !8423, line: 1300, baseType: !8635, size: 64, offset: 2048)
!8635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8636, size: 64)
!8636 = !DISubroutineType(types: !8637)
!8637 = !{!7, !8429, !8619}
!8638 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_fini", scope: !8469, file: !8423, line: 1308, baseType: !8639, size: 64, offset: 2112)
!8639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8640, size: 64)
!8640 = !DISubroutineType(types: !8641)
!8641 = !{null, !8429, !8619}
!8642 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_set", scope: !8469, file: !8423, line: 1313, baseType: !8643, size: 64, offset: 2176)
!8643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8644, size: 64)
!8644 = !DISubroutineType(types: !8645)
!8645 = !{!7, !8429, !8619, !492, !492, !2633}
!8646 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_counter_get", scope: !8469, file: !8423, line: 1323, baseType: !8647, size: 64, offset: 2240)
!8647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8648, size: 64)
!8648 = !DISubroutineType(types: !8649)
!8649 = !{!7, !8429, !8619, !3933}
!8650 = !DIDerivedType(tag: DW_TAG_member, name: "port_function_hw_addr_get", scope: !8469, file: !8423, line: 1335, baseType: !8651, size: 64, offset: 2304)
!8651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8652, size: 64)
!8652 = !DISubroutineType(types: !8653)
!8653 = !{!7, !8429, !8421, !8100, !695, !2633}
!8654 = !DIDerivedType(tag: DW_TAG_member, name: "port_function_hw_addr_set", scope: !8469, file: !8423, line: 1345, baseType: !8655, size: 64, offset: 2368)
!8655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8656, size: 64)
!8656 = !DISubroutineType(types: !8657)
!8657 = !{!7, !8429, !8421, !8658, !7, !2633}
!8658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8659, size: 64)
!8659 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1552)
!8660 = !DIDerivedType(tag: DW_TAG_member, name: "snapshot_ids", scope: !8430, file: !8423, line: 48, baseType: !2139, size: 128, offset: 1728)
!8661 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8430, file: !8423, line: 49, baseType: !8662, size: 384, offset: 1856)
!8662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_dev_stats", file: !8423, line: 26, size: 384, elements: !8663)
!8663 = !{!8664, !8666}
!8664 = !DIDerivedType(tag: DW_TAG_member, name: "reload_stats", scope: !8662, file: !8423, line: 27, baseType: !8665, size: 192)
!8665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !862, size: 192, elements: !1825)
!8666 = !DIDerivedType(tag: DW_TAG_member, name: "remote_reload_stats", scope: !8662, file: !8423, line: 28, baseType: !8665, size: 192, offset: 192)
!8667 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8430, file: !8423, line: 50, baseType: !4760, size: 64, offset: 2240)
!8668 = !DIDerivedType(tag: DW_TAG_member, name: "_net", scope: !8430, file: !8423, line: 51, baseType: !3045, size: 64, offset: 2304)
!8669 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8430, file: !8423, line: 52, baseType: !1109, size: 192, offset: 2368)
!8670 = !DIDerivedType(tag: DW_TAG_member, name: "reload_failed", scope: !8430, file: !8423, line: 55, baseType: !1552, size: 1, offset: 2560, flags: DIFlagBitField, extraData: i64 2560)
!8671 = !DIDerivedType(tag: DW_TAG_member, name: "reload_enabled", scope: !8430, file: !8423, line: 56, baseType: !1552, size: 1, offset: 2561, flags: DIFlagBitField, extraData: i64 2560)
!8672 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !8430, file: !8423, line: 57, baseType: !1552, size: 1, offset: 2562, flags: DIFlagBitField, extraData: i64 2560)
!8673 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !8430, file: !8423, line: 58, baseType: !8674, align: 256, offset: 2816)
!8674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, elements: !2076)
!8675 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !8422, file: !8423, line: 124, baseType: !14, size: 32, offset: 448)
!8676 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !8422, file: !8423, line: 125, baseType: !696, size: 8, offset: 480)
!8677 = !DIDerivedType(tag: DW_TAG_member, name: "type_lock", scope: !8422, file: !8423, line: 126, baseType: !884, offset: 488)
!8678 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8422, file: !8423, line: 129, baseType: !332, size: 32, offset: 512)
!8679 = !DIDerivedType(tag: DW_TAG_member, name: "desired_type", scope: !8422, file: !8423, line: 130, baseType: !332, size: 32, offset: 544)
!8680 = !DIDerivedType(tag: DW_TAG_member, name: "type_dev", scope: !8422, file: !8423, line: 131, baseType: !726, size: 64, offset: 576)
!8681 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !8422, file: !8423, line: 132, baseType: !8682, size: 480, offset: 640)
!8682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port_attrs", file: !8423, line: 106, size: 480, elements: !8683)
!8683 = !{!8684, !8685, !8686, !8687, !8688, !8689}
!8684 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !8682, file: !8423, line: 107, baseType: !1552, size: 1, flags: DIFlagBitField, extraData: i64 0)
!8685 = !DIDerivedType(tag: DW_TAG_member, name: "splittable", scope: !8682, file: !8423, line: 108, baseType: !1552, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!8686 = !DIDerivedType(tag: DW_TAG_member, name: "lanes", scope: !8682, file: !8423, line: 109, baseType: !862, size: 32, offset: 32)
!8687 = !DIDerivedType(tag: DW_TAG_member, name: "flavour", scope: !8682, file: !8423, line: 110, baseType: !360, size: 32, offset: 64)
!8688 = !DIDerivedType(tag: DW_TAG_member, name: "switch_id", scope: !8682, file: !8423, line: 111, baseType: !8296, size: 264, offset: 96)
!8689 = !DIDerivedType(tag: DW_TAG_member, scope: !8682, file: !8423, line: 112, baseType: !8690, size: 96, offset: 384)
!8690 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8682, file: !8423, line: 112, size: 96, elements: !8691)
!8691 = !{!8692, !8697, !8703}
!8692 = !DIDerivedType(tag: DW_TAG_member, name: "phys", scope: !8690, file: !8423, line: 113, baseType: !8693, size: 64)
!8693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port_phys_attrs", file: !8423, line: 61, size: 64, elements: !8694)
!8694 = !{!8695, !8696}
!8695 = !DIDerivedType(tag: DW_TAG_member, name: "port_number", scope: !8693, file: !8423, line: 62, baseType: !862, size: 32)
!8696 = !DIDerivedType(tag: DW_TAG_member, name: "split_subport_number", scope: !8693, file: !8423, line: 66, baseType: !862, size: 32, offset: 32)
!8697 = !DIDerivedType(tag: DW_TAG_member, name: "pci_pf", scope: !8690, file: !8423, line: 114, baseType: !8698, size: 64)
!8698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port_pci_pf_attrs", file: !8423, line: 75, size: 64, elements: !8699)
!8699 = !{!8700, !8701, !8702}
!8700 = !DIDerivedType(tag: DW_TAG_member, name: "controller", scope: !8698, file: !8423, line: 76, baseType: !862, size: 32)
!8701 = !DIDerivedType(tag: DW_TAG_member, name: "pf", scope: !8698, file: !8423, line: 77, baseType: !1193, size: 16, offset: 32)
!8702 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !8698, file: !8423, line: 78, baseType: !1552, size: 1, offset: 48, flags: DIFlagBitField, extraData: i64 48)
!8703 = !DIDerivedType(tag: DW_TAG_member, name: "pci_vf", scope: !8690, file: !8423, line: 115, baseType: !8704, size: 96)
!8704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port_pci_vf_attrs", file: !8423, line: 88, size: 96, elements: !8705)
!8705 = !{!8706, !8707, !8708, !8709}
!8706 = !DIDerivedType(tag: DW_TAG_member, name: "controller", scope: !8704, file: !8423, line: 89, baseType: !862, size: 32)
!8707 = !DIDerivedType(tag: DW_TAG_member, name: "pf", scope: !8704, file: !8423, line: 90, baseType: !1193, size: 16, offset: 32)
!8708 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !8704, file: !8423, line: 91, baseType: !1193, size: 16, offset: 48)
!8709 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !8704, file: !8423, line: 92, baseType: !1552, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!8710 = !DIDerivedType(tag: DW_TAG_member, name: "attrs_set", scope: !8422, file: !8423, line: 133, baseType: !1552, size: 1, offset: 1120, flags: DIFlagBitField, extraData: i64 1120)
!8711 = !DIDerivedType(tag: DW_TAG_member, name: "switch_port", scope: !8422, file: !8423, line: 134, baseType: !1552, size: 1, offset: 1121, flags: DIFlagBitField, extraData: i64 1120)
!8712 = !DIDerivedType(tag: DW_TAG_member, name: "type_warn_dw", scope: !8422, file: !8423, line: 135, baseType: !3093, size: 704, offset: 1152)
!8713 = !DIDerivedType(tag: DW_TAG_member, name: "reporter_list", scope: !8422, file: !8423, line: 136, baseType: !445, size: 128, offset: 1856)
!8714 = !DIDerivedType(tag: DW_TAG_member, name: "reporters_lock", scope: !8422, file: !8423, line: 137, baseType: !1109, size: 192, offset: 1984)
!8715 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tunnel_ctl", scope: !559, file: !6, line: 1487, baseType: !8716, size: 64, offset: 4288)
!8716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8717, size: 64)
!8717 = !DISubroutineType(types: !8718)
!8718 = !{!7, !451, !8719, !7}
!8719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8720, size: 64)
!8720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip_tunnel_parm", file: !8721, line: 48, size: 416, elements: !8722)
!8721 = !DIFile(filename: "./include/uapi/linux/if_tunnel.h", directory: "/home/lizy2001/genbc/linux")
!8722 = !{!8723, !8724, !8725, !8726, !8727, !8728, !8729}
!8723 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8720, file: !8721, line: 49, baseType: !428, size: 128)
!8724 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !8720, file: !8721, line: 50, baseType: !7, size: 32, offset: 128)
!8725 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !8720, file: !8721, line: 51, baseType: !645, size: 16, offset: 160)
!8726 = !DIDerivedType(tag: DW_TAG_member, name: "o_flags", scope: !8720, file: !8721, line: 52, baseType: !645, size: 16, offset: 176)
!8727 = !DIDerivedType(tag: DW_TAG_member, name: "i_key", scope: !8720, file: !8721, line: 53, baseType: !622, size: 32, offset: 192)
!8728 = !DIDerivedType(tag: DW_TAG_member, name: "o_key", scope: !8720, file: !8721, line: 54, baseType: !622, size: 32, offset: 224)
!8729 = !DIDerivedType(tag: DW_TAG_member, name: "iph", scope: !8720, file: !8721, line: 55, baseType: !8730, size: 160, offset: 256)
!8730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iphdr", file: !8731, line: 86, size: 160, elements: !8732)
!8731 = !DIFile(filename: "./include/uapi/linux/ip.h", directory: "/home/lizy2001/genbc/linux")
!8732 = !{!8733, !8734, !8735, !8736, !8737, !8738, !8739, !8740, !8741, !8743, !8744}
!8733 = !DIDerivedType(tag: DW_TAG_member, name: "ihl", scope: !8730, file: !8731, line: 88, baseType: !1553, size: 4, flags: DIFlagBitField, extraData: i64 0)
!8734 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !8730, file: !8731, line: 89, baseType: !1553, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!8735 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8730, file: !8731, line: 96, baseType: !1553, size: 8, offset: 8)
!8736 = !DIDerivedType(tag: DW_TAG_member, name: "tot_len", scope: !8730, file: !8731, line: 97, baseType: !645, size: 16, offset: 16)
!8737 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8730, file: !8731, line: 98, baseType: !645, size: 16, offset: 32)
!8738 = !DIDerivedType(tag: DW_TAG_member, name: "frag_off", scope: !8730, file: !8731, line: 99, baseType: !645, size: 16, offset: 48)
!8739 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !8730, file: !8731, line: 100, baseType: !1553, size: 8, offset: 64)
!8740 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !8730, file: !8731, line: 101, baseType: !1553, size: 8, offset: 72)
!8741 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !8730, file: !8731, line: 102, baseType: !8742, size: 16, offset: 80)
!8742 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sum16", file: !623, line: 36, baseType: !632)
!8743 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !8730, file: !8731, line: 103, baseType: !622, size: 32, offset: 96)
!8744 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !8730, file: !8731, line: 104, baseType: !622, size: 32, offset: 128)
!8745 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_peer_dev", scope: !559, file: !6, line: 1489, baseType: !8746, size: 64, offset: 4352)
!8746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8747, size: 64)
!8747 = !DISubroutineType(types: !8748)
!8748 = !{!451, !451}
!8749 = !DIDerivedType(tag: DW_TAG_member, name: "ethtool_ops", scope: !425, file: !6, line: 1917, baseType: !8750, size: 64, offset: 4032)
!8750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8751, size: 64)
!8751 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8752)
!8752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ops", file: !412, line: 421, size: 3904, elements: !8753)
!8753 = !{!8754, !8755, !8775, !8776, !8787, !8799, !8803, !8807, !8811, !8812, !8813, !8830, !8831, !8843, !8844, !8874, !8875, !8891, !8895, !8904, !8915, !8919, !8932, !8936, !8940, !8950, !8951, !8952, !8953, !8957, !8958, !9060, !9064, !9074, !9078, !9079, !9080, !9084, !9089, !9093, !9097, !9113, !9117, !9129, !9133, !9134, !9149, !9161, !9162, !9178, !9179, !9192, !9196, !9200, !9201, !9239, !9245, !9256, !9257, !9258, !9259}
!8754 = !DIDerivedType(tag: DW_TAG_member, name: "supported_coalesce_params", scope: !8752, file: !412, line: 422, baseType: !862, size: 32)
!8755 = !DIDerivedType(tag: DW_TAG_member, name: "get_drvinfo", scope: !8752, file: !412, line: 423, baseType: !8756, size: 64, offset: 64)
!8756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8757, size: 64)
!8757 = !DISubroutineType(types: !8758)
!8758 = !{null, !451, !8759}
!8759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8760, size: 64)
!8760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_drvinfo", file: !370, line: 177, size: 1568, elements: !8761)
!8761 = !{!8762, !8763, !8764, !8765, !8766, !8767, !8768, !8770, !8771, !8772, !8773, !8774}
!8762 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8760, file: !370, line: 178, baseType: !624, size: 32)
!8763 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !8760, file: !370, line: 179, baseType: !4356, size: 256, offset: 32)
!8764 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !8760, file: !370, line: 180, baseType: !4356, size: 256, offset: 288)
!8765 = !DIDerivedType(tag: DW_TAG_member, name: "fw_version", scope: !8760, file: !370, line: 181, baseType: !4356, size: 256, offset: 544)
!8766 = !DIDerivedType(tag: DW_TAG_member, name: "bus_info", scope: !8760, file: !370, line: 182, baseType: !4356, size: 256, offset: 800)
!8767 = !DIDerivedType(tag: DW_TAG_member, name: "erom_version", scope: !8760, file: !370, line: 183, baseType: !4356, size: 256, offset: 1056)
!8768 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !8760, file: !370, line: 184, baseType: !8769, size: 96, offset: 1312)
!8769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 96, elements: !3174)
!8770 = !DIDerivedType(tag: DW_TAG_member, name: "n_priv_flags", scope: !8760, file: !370, line: 185, baseType: !624, size: 32, offset: 1408)
!8771 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !8760, file: !370, line: 186, baseType: !624, size: 32, offset: 1440)
!8772 = !DIDerivedType(tag: DW_TAG_member, name: "testinfo_len", scope: !8760, file: !370, line: 187, baseType: !624, size: 32, offset: 1472)
!8773 = !DIDerivedType(tag: DW_TAG_member, name: "eedump_len", scope: !8760, file: !370, line: 188, baseType: !624, size: 32, offset: 1504)
!8774 = !DIDerivedType(tag: DW_TAG_member, name: "regdump_len", scope: !8760, file: !370, line: 189, baseType: !624, size: 32, offset: 1536)
!8775 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs_len", scope: !8752, file: !412, line: 424, baseType: !562, size: 64, offset: 128)
!8776 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs", scope: !8752, file: !412, line: 425, baseType: !8777, size: 64, offset: 192)
!8777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8778, size: 64)
!8778 = !DISubroutineType(types: !8779)
!8779 = !{null, !451, !8780, !726}
!8780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8781, size: 64)
!8781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_regs", file: !370, line: 310, size: 96, elements: !8782)
!8782 = !{!8783, !8784, !8785, !8786}
!8783 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8781, file: !370, line: 311, baseType: !624, size: 32)
!8784 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !8781, file: !370, line: 312, baseType: !624, size: 32, offset: 32)
!8785 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8781, file: !370, line: 313, baseType: !624, size: 32, offset: 64)
!8786 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8781, file: !370, line: 314, baseType: !7819, offset: 96)
!8787 = !DIDerivedType(tag: DW_TAG_member, name: "get_wol", scope: !8752, file: !412, line: 426, baseType: !8788, size: 64, offset: 256)
!8788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8789, size: 64)
!8789 = !DISubroutineType(types: !8790)
!8790 = !{null, !451, !8791}
!8791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8792, size: 64)
!8792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_wolinfo", file: !370, line: 203, size: 160, elements: !8793)
!8793 = !{!8794, !8795, !8796, !8797}
!8794 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8792, file: !370, line: 204, baseType: !624, size: 32)
!8795 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !8792, file: !370, line: 205, baseType: !624, size: 32, offset: 32)
!8796 = !DIDerivedType(tag: DW_TAG_member, name: "wolopts", scope: !8792, file: !370, line: 206, baseType: !624, size: 32, offset: 64)
!8797 = !DIDerivedType(tag: DW_TAG_member, name: "sopass", scope: !8792, file: !370, line: 207, baseType: !8798, size: 48, offset: 96)
!8798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1553, size: 48, elements: !1825)
!8799 = !DIDerivedType(tag: DW_TAG_member, name: "set_wol", scope: !8752, file: !412, line: 427, baseType: !8800, size: 64, offset: 320)
!8800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8801, size: 64)
!8801 = !DISubroutineType(types: !8802)
!8802 = !{!7, !451, !8791}
!8803 = !DIDerivedType(tag: DW_TAG_member, name: "get_msglevel", scope: !8752, file: !412, line: 428, baseType: !8804, size: 64, offset: 384)
!8804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8805, size: 64)
!8805 = !DISubroutineType(types: !8806)
!8806 = !{!862, !451}
!8807 = !DIDerivedType(tag: DW_TAG_member, name: "set_msglevel", scope: !8752, file: !412, line: 429, baseType: !8808, size: 64, offset: 448)
!8808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8809, size: 64)
!8809 = !DISubroutineType(types: !8810)
!8810 = !{null, !451, !862}
!8811 = !DIDerivedType(tag: DW_TAG_member, name: "nway_reset", scope: !8752, file: !412, line: 430, baseType: !562, size: 64, offset: 512)
!8812 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !8752, file: !412, line: 431, baseType: !8804, size: 64, offset: 576)
!8813 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ext_state", scope: !8752, file: !412, line: 432, baseType: !8814, size: 64, offset: 640)
!8814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8815, size: 64)
!8815 = !DISubroutineType(types: !8816)
!8816 = !{!7, !451, !8817}
!8817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8818, size: 64)
!8818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ext_state_info", file: !412, line: 93, size: 64, elements: !8819)
!8819 = !{!8820, !8821}
!8820 = !DIDerivedType(tag: DW_TAG_member, name: "link_ext_state", scope: !8818, file: !412, line: 94, baseType: !369, size: 32)
!8821 = !DIDerivedType(tag: DW_TAG_member, scope: !8818, file: !412, line: 95, baseType: !8822, size: 32, offset: 32)
!8822 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8818, file: !412, line: 95, size: 32, elements: !8823)
!8823 = !{!8824, !8825, !8826, !8827, !8828, !8829}
!8824 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !8822, file: !412, line: 96, baseType: !382, size: 32)
!8825 = !DIDerivedType(tag: DW_TAG_member, name: "link_training", scope: !8822, file: !412, line: 97, baseType: !390, size: 32)
!8826 = !DIDerivedType(tag: DW_TAG_member, name: "link_logical_mismatch", scope: !8822, file: !412, line: 98, baseType: !396, size: 32)
!8827 = !DIDerivedType(tag: DW_TAG_member, name: "bad_signal_integrity", scope: !8822, file: !412, line: 99, baseType: !403, size: 32)
!8828 = !DIDerivedType(tag: DW_TAG_member, name: "cable_issue", scope: !8822, file: !412, line: 100, baseType: !407, size: 32)
!8829 = !DIDerivedType(tag: DW_TAG_member, name: "__link_ext_substate", scope: !8822, file: !412, line: 101, baseType: !1552, size: 8)
!8830 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom_len", scope: !8752, file: !412, line: 434, baseType: !562, size: 64, offset: 704)
!8831 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom", scope: !8752, file: !412, line: 435, baseType: !8832, size: 64, offset: 768)
!8832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8833, size: 64)
!8833 = !DISubroutineType(types: !8834)
!8834 = !{!7, !451, !8835, !8100}
!8835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8836, size: 64)
!8836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eeprom", file: !370, line: 335, size: 128, elements: !8837)
!8837 = !{!8838, !8839, !8840, !8841, !8842}
!8838 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8836, file: !370, line: 336, baseType: !624, size: 32)
!8839 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !8836, file: !370, line: 337, baseType: !624, size: 32, offset: 32)
!8840 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !8836, file: !370, line: 338, baseType: !624, size: 32, offset: 64)
!8841 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8836, file: !370, line: 339, baseType: !624, size: 32, offset: 96)
!8842 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8836, file: !370, line: 340, baseType: !7819, offset: 128)
!8843 = !DIDerivedType(tag: DW_TAG_member, name: "set_eeprom", scope: !8752, file: !412, line: 437, baseType: !8832, size: 64, offset: 832)
!8844 = !DIDerivedType(tag: DW_TAG_member, name: "get_coalesce", scope: !8752, file: !412, line: 439, baseType: !8845, size: 64, offset: 896)
!8845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8846, size: 64)
!8846 = !DISubroutineType(types: !8847)
!8847 = !{!7, !451, !8848}
!8848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8849, size: 64)
!8849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_coalesce", file: !370, line: 462, size: 736, elements: !8850)
!8850 = !{!8851, !8852, !8853, !8854, !8855, !8856, !8857, !8858, !8859, !8860, !8861, !8862, !8863, !8864, !8865, !8866, !8867, !8868, !8869, !8870, !8871, !8872, !8873}
!8851 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8849, file: !370, line: 463, baseType: !624, size: 32)
!8852 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs", scope: !8849, file: !370, line: 464, baseType: !624, size: 32, offset: 32)
!8853 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames", scope: !8849, file: !370, line: 465, baseType: !624, size: 32, offset: 64)
!8854 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_irq", scope: !8849, file: !370, line: 466, baseType: !624, size: 32, offset: 96)
!8855 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_irq", scope: !8849, file: !370, line: 467, baseType: !624, size: 32, offset: 128)
!8856 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs", scope: !8849, file: !370, line: 468, baseType: !624, size: 32, offset: 160)
!8857 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames", scope: !8849, file: !370, line: 469, baseType: !624, size: 32, offset: 192)
!8858 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_irq", scope: !8849, file: !370, line: 470, baseType: !624, size: 32, offset: 224)
!8859 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_irq", scope: !8849, file: !370, line: 471, baseType: !624, size: 32, offset: 256)
!8860 = !DIDerivedType(tag: DW_TAG_member, name: "stats_block_coalesce_usecs", scope: !8849, file: !370, line: 472, baseType: !624, size: 32, offset: 288)
!8861 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_rx_coalesce", scope: !8849, file: !370, line: 473, baseType: !624, size: 32, offset: 320)
!8862 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_tx_coalesce", scope: !8849, file: !370, line: 474, baseType: !624, size: 32, offset: 352)
!8863 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_low", scope: !8849, file: !370, line: 475, baseType: !624, size: 32, offset: 384)
!8864 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_low", scope: !8849, file: !370, line: 476, baseType: !624, size: 32, offset: 416)
!8865 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_low", scope: !8849, file: !370, line: 477, baseType: !624, size: 32, offset: 448)
!8866 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_low", scope: !8849, file: !370, line: 478, baseType: !624, size: 32, offset: 480)
!8867 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_low", scope: !8849, file: !370, line: 479, baseType: !624, size: 32, offset: 512)
!8868 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_high", scope: !8849, file: !370, line: 480, baseType: !624, size: 32, offset: 544)
!8869 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_high", scope: !8849, file: !370, line: 481, baseType: !624, size: 32, offset: 576)
!8870 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_high", scope: !8849, file: !370, line: 482, baseType: !624, size: 32, offset: 608)
!8871 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_high", scope: !8849, file: !370, line: 483, baseType: !624, size: 32, offset: 640)
!8872 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_high", scope: !8849, file: !370, line: 484, baseType: !624, size: 32, offset: 672)
!8873 = !DIDerivedType(tag: DW_TAG_member, name: "rate_sample_interval", scope: !8849, file: !370, line: 485, baseType: !624, size: 32, offset: 704)
!8874 = !DIDerivedType(tag: DW_TAG_member, name: "set_coalesce", scope: !8752, file: !412, line: 440, baseType: !8845, size: 64, offset: 960)
!8875 = !DIDerivedType(tag: DW_TAG_member, name: "get_ringparam", scope: !8752, file: !412, line: 441, baseType: !8876, size: 64, offset: 1024)
!8876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8877, size: 64)
!8877 = !DISubroutineType(types: !8878)
!8878 = !{null, !451, !8879}
!8879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8880, size: 64)
!8880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ringparam", file: !370, line: 513, size: 288, elements: !8881)
!8881 = !{!8882, !8883, !8884, !8885, !8886, !8887, !8888, !8889, !8890}
!8882 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8880, file: !370, line: 514, baseType: !624, size: 32)
!8883 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_pending", scope: !8880, file: !370, line: 515, baseType: !624, size: 32, offset: 32)
!8884 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_max_pending", scope: !8880, file: !370, line: 516, baseType: !624, size: 32, offset: 64)
!8885 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_max_pending", scope: !8880, file: !370, line: 517, baseType: !624, size: 32, offset: 96)
!8886 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_pending", scope: !8880, file: !370, line: 518, baseType: !624, size: 32, offset: 128)
!8887 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pending", scope: !8880, file: !370, line: 519, baseType: !624, size: 32, offset: 160)
!8888 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_pending", scope: !8880, file: !370, line: 520, baseType: !624, size: 32, offset: 192)
!8889 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_pending", scope: !8880, file: !370, line: 521, baseType: !624, size: 32, offset: 224)
!8890 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pending", scope: !8880, file: !370, line: 522, baseType: !624, size: 32, offset: 256)
!8891 = !DIDerivedType(tag: DW_TAG_member, name: "set_ringparam", scope: !8752, file: !412, line: 443, baseType: !8892, size: 64, offset: 1088)
!8892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8893, size: 64)
!8893 = !DISubroutineType(types: !8894)
!8894 = !{!7, !451, !8879}
!8895 = !DIDerivedType(tag: DW_TAG_member, name: "get_pause_stats", scope: !8752, file: !412, line: 445, baseType: !8896, size: 64, offset: 1152)
!8896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8897, size: 64)
!8897 = !DISubroutineType(types: !8898)
!8898 = !{null, !451, !8899}
!8899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8900, size: 64)
!8900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pause_stats", file: !412, line: 260, size: 128, elements: !8901)
!8901 = !{!8902, !8903}
!8902 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause_frames", scope: !8900, file: !412, line: 261, baseType: !492, size: 64)
!8903 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause_frames", scope: !8900, file: !412, line: 262, baseType: !492, size: 64, offset: 64)
!8904 = !DIDerivedType(tag: DW_TAG_member, name: "get_pauseparam", scope: !8752, file: !412, line: 447, baseType: !8905, size: 64, offset: 1216)
!8905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8906, size: 64)
!8906 = !DISubroutineType(types: !8907)
!8907 = !{null, !451, !8908}
!8908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8909, size: 64)
!8909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pauseparam", file: !370, line: 575, size: 128, elements: !8910)
!8910 = !{!8911, !8912, !8913, !8914}
!8911 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8909, file: !370, line: 576, baseType: !624, size: 32)
!8912 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !8909, file: !370, line: 577, baseType: !624, size: 32, offset: 32)
!8913 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause", scope: !8909, file: !370, line: 578, baseType: !624, size: 32, offset: 64)
!8914 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause", scope: !8909, file: !370, line: 579, baseType: !624, size: 32, offset: 96)
!8915 = !DIDerivedType(tag: DW_TAG_member, name: "set_pauseparam", scope: !8752, file: !412, line: 449, baseType: !8916, size: 64, offset: 1280)
!8916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8917, size: 64)
!8917 = !DISubroutineType(types: !8918)
!8918 = !{!7, !451, !8908}
!8919 = !DIDerivedType(tag: DW_TAG_member, name: "self_test", scope: !8752, file: !412, line: 451, baseType: !8920, size: 64, offset: 1344)
!8920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8921, size: 64)
!8921 = !DISubroutineType(types: !8922)
!8922 = !{null, !451, !8923, !3933}
!8923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8924, size: 64)
!8924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_test", file: !370, line: 770, size: 128, elements: !8925)
!8925 = !{!8926, !8927, !8928, !8929, !8930}
!8926 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8924, file: !370, line: 771, baseType: !624, size: 32)
!8927 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8924, file: !370, line: 772, baseType: !624, size: 32, offset: 32)
!8928 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8924, file: !370, line: 773, baseType: !624, size: 32, offset: 64)
!8929 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8924, file: !370, line: 774, baseType: !624, size: 32, offset: 96)
!8930 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8924, file: !370, line: 775, baseType: !8931, offset: 128)
!8931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !494, elements: !2076)
!8932 = !DIDerivedType(tag: DW_TAG_member, name: "get_strings", scope: !8752, file: !412, line: 452, baseType: !8933, size: 64, offset: 1408)
!8933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8934, size: 64)
!8934 = !DISubroutineType(types: !8935)
!8935 = !{null, !451, !862, !8100}
!8936 = !DIDerivedType(tag: DW_TAG_member, name: "set_phys_id", scope: !8752, file: !412, line: 453, baseType: !8937, size: 64, offset: 1472)
!8937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8938, size: 64)
!8938 = !DISubroutineType(types: !8939)
!8939 = !{!7, !451, !411}
!8940 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_stats", scope: !8752, file: !412, line: 454, baseType: !8941, size: 64, offset: 1536)
!8941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8942, size: 64)
!8942 = !DISubroutineType(types: !8943)
!8943 = !{null, !451, !8944, !3933}
!8944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8945, size: 64)
!8945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_stats", file: !370, line: 789, size: 64, elements: !8946)
!8946 = !{!8947, !8948, !8949}
!8947 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8945, file: !370, line: 790, baseType: !624, size: 32)
!8948 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !8945, file: !370, line: 791, baseType: !624, size: 32, offset: 32)
!8949 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8945, file: !370, line: 792, baseType: !8931, offset: 64)
!8950 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !8752, file: !412, line: 456, baseType: !562, size: 64, offset: 1600)
!8951 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !8752, file: !412, line: 457, baseType: !566, size: 64, offset: 1664)
!8952 = !DIDerivedType(tag: DW_TAG_member, name: "get_priv_flags", scope: !8752, file: !412, line: 458, baseType: !8804, size: 64, offset: 1728)
!8953 = !DIDerivedType(tag: DW_TAG_member, name: "set_priv_flags", scope: !8752, file: !412, line: 459, baseType: !8954, size: 64, offset: 1792)
!8954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8955, size: 64)
!8955 = !DISubroutineType(types: !8956)
!8956 = !{!7, !451, !862}
!8957 = !DIDerivedType(tag: DW_TAG_member, name: "get_sset_count", scope: !8752, file: !412, line: 460, baseType: !8035, size: 64, offset: 1856)
!8958 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxnfc", scope: !8752, file: !412, line: 461, baseType: !8959, size: 64, offset: 1920)
!8959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8960, size: 64)
!8960 = !DISubroutineType(types: !8961)
!8961 = !{!7, !451, !8962, !1615}
!8962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8963, size: 64)
!8963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rxnfc", file: !370, line: 1088, size: 1536, elements: !8964)
!8964 = !{!8965, !8966, !8967, !8968, !9054, !9059}
!8965 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8963, file: !370, line: 1089, baseType: !624, size: 32)
!8966 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !8963, file: !370, line: 1090, baseType: !624, size: 32, offset: 32)
!8967 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8963, file: !370, line: 1091, baseType: !494, size: 64, offset: 64)
!8968 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !8963, file: !370, line: 1092, baseType: !8969, size: 1344, offset: 128)
!8969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rx_flow_spec", file: !370, line: 992, size: 1344, elements: !8970)
!8970 = !{!8971, !8972, !9040, !9050, !9051, !9052, !9053}
!8971 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !8969, file: !370, line: 993, baseType: !624, size: 32)
!8972 = !DIDerivedType(tag: DW_TAG_member, name: "h_u", scope: !8969, file: !370, line: 994, baseType: !8973, size: 416, offset: 32)
!8973 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ethtool_flow_union", file: !370, line: 939, size: 416, elements: !8974)
!8974 = !{!8975, !8983, !8984, !8985, !8992, !8993, !9002, !9010, !9011, !9012, !9019, !9020, !9028, !9036}
!8975 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip4_spec", scope: !8973, file: !370, line: 940, baseType: !8976, size: 128)
!8976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip4_spec", file: !370, line: 845, size: 128, elements: !8977)
!8977 = !{!8978, !8979, !8980, !8981, !8982}
!8978 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !8976, file: !370, line: 846, baseType: !622, size: 32)
!8979 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !8976, file: !370, line: 847, baseType: !622, size: 32, offset: 32)
!8980 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !8976, file: !370, line: 848, baseType: !645, size: 16, offset: 64)
!8981 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !8976, file: !370, line: 849, baseType: !645, size: 16, offset: 80)
!8982 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8976, file: !370, line: 850, baseType: !1553, size: 8, offset: 96)
!8983 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip4_spec", scope: !8973, file: !370, line: 941, baseType: !8976, size: 128)
!8984 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip4_spec", scope: !8973, file: !370, line: 942, baseType: !8976, size: 128)
!8985 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip4_spec", scope: !8973, file: !370, line: 943, baseType: !8986, size: 128)
!8986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip4_spec", file: !370, line: 862, size: 128, elements: !8987)
!8987 = !{!8988, !8989, !8990, !8991}
!8988 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !8986, file: !370, line: 863, baseType: !622, size: 32)
!8989 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !8986, file: !370, line: 864, baseType: !622, size: 32, offset: 32)
!8990 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !8986, file: !370, line: 865, baseType: !622, size: 32, offset: 64)
!8991 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8986, file: !370, line: 866, baseType: !1553, size: 8, offset: 96)
!8992 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip4_spec", scope: !8973, file: !370, line: 944, baseType: !8986, size: 128)
!8993 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip4_spec", scope: !8973, file: !370, line: 945, baseType: !8994, size: 128)
!8994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip4_spec", file: !370, line: 880, size: 128, elements: !8995)
!8995 = !{!8996, !8997, !8998, !8999, !9000, !9001}
!8996 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !8994, file: !370, line: 881, baseType: !622, size: 32)
!8997 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !8994, file: !370, line: 882, baseType: !622, size: 32, offset: 32)
!8998 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !8994, file: !370, line: 883, baseType: !622, size: 32, offset: 64)
!8999 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8994, file: !370, line: 884, baseType: !1553, size: 8, offset: 96)
!9000 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ver", scope: !8994, file: !370, line: 885, baseType: !1553, size: 8, offset: 104)
!9001 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !8994, file: !370, line: 886, baseType: !1553, size: 8, offset: 112)
!9002 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip6_spec", scope: !8973, file: !370, line: 946, baseType: !9003, size: 320)
!9003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip6_spec", file: !370, line: 899, size: 320, elements: !9004)
!9004 = !{!9005, !9006, !9007, !9008, !9009}
!9005 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !9003, file: !370, line: 900, baseType: !2395, size: 128)
!9006 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !9003, file: !370, line: 901, baseType: !2395, size: 128, offset: 128)
!9007 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !9003, file: !370, line: 902, baseType: !645, size: 16, offset: 256)
!9008 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !9003, file: !370, line: 903, baseType: !645, size: 16, offset: 272)
!9009 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !9003, file: !370, line: 904, baseType: !1553, size: 8, offset: 288)
!9010 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip6_spec", scope: !8973, file: !370, line: 947, baseType: !9003, size: 320)
!9011 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip6_spec", scope: !8973, file: !370, line: 948, baseType: !9003, size: 320)
!9012 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip6_spec", scope: !8973, file: !370, line: 949, baseType: !9013, size: 320)
!9013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip6_spec", file: !370, line: 916, size: 320, elements: !9014)
!9014 = !{!9015, !9016, !9017, !9018}
!9015 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !9013, file: !370, line: 917, baseType: !2395, size: 128)
!9016 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !9013, file: !370, line: 918, baseType: !2395, size: 128, offset: 128)
!9017 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !9013, file: !370, line: 919, baseType: !622, size: 32, offset: 256)
!9018 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !9013, file: !370, line: 920, baseType: !1553, size: 8, offset: 288)
!9019 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip6_spec", scope: !8973, file: !370, line: 950, baseType: !9013, size: 320)
!9020 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip6_spec", scope: !8973, file: !370, line: 951, baseType: !9021, size: 320)
!9021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip6_spec", file: !370, line: 931, size: 320, elements: !9022)
!9022 = !{!9023, !9024, !9025, !9026, !9027}
!9023 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !9021, file: !370, line: 932, baseType: !2395, size: 128)
!9024 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !9021, file: !370, line: 933, baseType: !2395, size: 128, offset: 128)
!9025 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !9021, file: !370, line: 934, baseType: !622, size: 32, offset: 256)
!9026 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !9021, file: !370, line: 935, baseType: !1553, size: 8, offset: 288)
!9027 = !DIDerivedType(tag: DW_TAG_member, name: "l4_proto", scope: !9021, file: !370, line: 936, baseType: !1553, size: 8, offset: 296)
!9028 = !DIDerivedType(tag: DW_TAG_member, name: "ether_spec", scope: !8973, file: !370, line: 952, baseType: !9029, size: 112)
!9029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethhdr", file: !9030, line: 164, size: 112, elements: !9031)
!9030 = !DIFile(filename: "./include/uapi/linux/if_ether.h", directory: "/home/lizy2001/genbc/linux")
!9031 = !{!9032, !9034, !9035}
!9032 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !9029, file: !9030, line: 165, baseType: !9033, size: 48)
!9033 = !DICompositeType(tag: DW_TAG_array_type, baseType: !650, size: 48, elements: !1825)
!9034 = !DIDerivedType(tag: DW_TAG_member, name: "h_source", scope: !9029, file: !9030, line: 166, baseType: !9033, size: 48, offset: 48)
!9035 = !DIDerivedType(tag: DW_TAG_member, name: "h_proto", scope: !9029, file: !9030, line: 167, baseType: !645, size: 16, offset: 96)
!9036 = !DIDerivedType(tag: DW_TAG_member, name: "hdata", scope: !8973, file: !370, line: 953, baseType: !9037, size: 416)
!9037 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1553, size: 416, elements: !9038)
!9038 = !{!9039}
!9039 = !DISubrange(count: 52)
!9040 = !DIDerivedType(tag: DW_TAG_member, name: "h_ext", scope: !8969, file: !370, line: 995, baseType: !9041, size: 160, offset: 448)
!9041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flow_ext", file: !370, line: 967, size: 160, elements: !9042)
!9042 = !{!9043, !9045, !9046, !9047, !9048}
!9043 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !9041, file: !370, line: 968, baseType: !9044, size: 16)
!9044 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1553, size: 16, elements: !634)
!9045 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !9041, file: !370, line: 969, baseType: !9033, size: 48, offset: 16)
!9046 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_etype", scope: !9041, file: !370, line: 970, baseType: !645, size: 16, offset: 64)
!9047 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !9041, file: !370, line: 971, baseType: !645, size: 16, offset: 80)
!9048 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9041, file: !370, line: 972, baseType: !9049, size: 64, offset: 96)
!9049 = !DICompositeType(tag: DW_TAG_array_type, baseType: !622, size: 64, elements: !634)
!9050 = !DIDerivedType(tag: DW_TAG_member, name: "m_u", scope: !8969, file: !370, line: 996, baseType: !8973, size: 416, offset: 608)
!9051 = !DIDerivedType(tag: DW_TAG_member, name: "m_ext", scope: !8969, file: !370, line: 997, baseType: !9041, size: 160, offset: 1024)
!9052 = !DIDerivedType(tag: DW_TAG_member, name: "ring_cookie", scope: !8969, file: !370, line: 998, baseType: !494, size: 64, offset: 1216)
!9053 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !8969, file: !370, line: 999, baseType: !624, size: 32, offset: 1280)
!9054 = !DIDerivedType(tag: DW_TAG_member, scope: !8963, file: !370, line: 1093, baseType: !9055, size: 32, offset: 1472)
!9055 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8963, file: !370, line: 1093, size: 32, elements: !9056)
!9056 = !{!9057, !9058}
!9057 = !DIDerivedType(tag: DW_TAG_member, name: "rule_cnt", scope: !9055, file: !370, line: 1094, baseType: !624, size: 32)
!9058 = !DIDerivedType(tag: DW_TAG_member, name: "rss_context", scope: !9055, file: !370, line: 1095, baseType: !624, size: 32)
!9059 = !DIDerivedType(tag: DW_TAG_member, name: "rule_locs", scope: !8963, file: !370, line: 1097, baseType: !7827, offset: 1504)
!9060 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxnfc", scope: !8752, file: !412, line: 463, baseType: !9061, size: 64, offset: 1984)
!9061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9062, size: 64)
!9062 = !DISubroutineType(types: !9063)
!9063 = !{!7, !451, !8962}
!9064 = !DIDerivedType(tag: DW_TAG_member, name: "flash_device", scope: !8752, file: !412, line: 464, baseType: !9065, size: 64, offset: 2048)
!9065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9066, size: 64)
!9066 = !DISubroutineType(types: !9067)
!9067 = !{!7, !451, !9068}
!9068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9069, size: 64)
!9069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flash", file: !370, line: 1217, size: 1088, elements: !9070)
!9070 = !{!9071, !9072, !9073}
!9071 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !9069, file: !370, line: 1218, baseType: !624, size: 32)
!9072 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !9069, file: !370, line: 1219, baseType: !624, size: 32, offset: 32)
!9073 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9069, file: !370, line: 1220, baseType: !3585, size: 1024, offset: 64)
!9074 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !8752, file: !412, line: 465, baseType: !9075, size: 64, offset: 2112)
!9075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9076, size: 64)
!9076 = !DISubroutineType(types: !9077)
!9077 = !{!7, !451, !1615}
!9078 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_key_size", scope: !8752, file: !412, line: 466, baseType: !8804, size: 64, offset: 2176)
!9079 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_indir_size", scope: !8752, file: !412, line: 467, baseType: !8804, size: 64, offset: 2240)
!9080 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh", scope: !8752, file: !412, line: 468, baseType: !9081, size: 64, offset: 2304)
!9081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9082, size: 64)
!9082 = !DISubroutineType(types: !9083)
!9083 = !{!7, !451, !1615, !8100, !8100}
!9084 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh", scope: !8752, file: !412, line: 470, baseType: !9085, size: 64, offset: 2368)
!9085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9086, size: 64)
!9086 = !DISubroutineType(types: !9087)
!9087 = !{!7, !451, !9088, !8658, !8659}
!9088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2659, size: 64)
!9089 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_context", scope: !8752, file: !412, line: 472, baseType: !9090, size: 64, offset: 2432)
!9090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9091, size: 64)
!9091 = !DISubroutineType(types: !9092)
!9092 = !{!7, !451, !1615, !8100, !8100, !862}
!9093 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh_context", scope: !8752, file: !412, line: 474, baseType: !9094, size: 64, offset: 2496)
!9094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9095, size: 64)
!9095 = !DISubroutineType(types: !9096)
!9096 = !{!7, !451, !9088, !8658, !8659, !1615, !696}
!9097 = !DIDerivedType(tag: DW_TAG_member, name: "get_channels", scope: !8752, file: !412, line: 477, baseType: !9098, size: 64, offset: 2560)
!9098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9099, size: 64)
!9099 = !DISubroutineType(types: !9100)
!9100 = !{null, !451, !9101}
!9101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9102, size: 64)
!9102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_channels", file: !370, line: 541, size: 288, elements: !9103)
!9103 = !{!9104, !9105, !9106, !9107, !9108, !9109, !9110, !9111, !9112}
!9104 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !9102, file: !370, line: 542, baseType: !624, size: 32)
!9105 = !DIDerivedType(tag: DW_TAG_member, name: "max_rx", scope: !9102, file: !370, line: 543, baseType: !624, size: 32, offset: 32)
!9106 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx", scope: !9102, file: !370, line: 544, baseType: !624, size: 32, offset: 64)
!9107 = !DIDerivedType(tag: DW_TAG_member, name: "max_other", scope: !9102, file: !370, line: 545, baseType: !624, size: 32, offset: 96)
!9108 = !DIDerivedType(tag: DW_TAG_member, name: "max_combined", scope: !9102, file: !370, line: 546, baseType: !624, size: 32, offset: 128)
!9109 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !9102, file: !370, line: 547, baseType: !624, size: 32, offset: 160)
!9110 = !DIDerivedType(tag: DW_TAG_member, name: "tx_count", scope: !9102, file: !370, line: 548, baseType: !624, size: 32, offset: 192)
!9111 = !DIDerivedType(tag: DW_TAG_member, name: "other_count", scope: !9102, file: !370, line: 549, baseType: !624, size: 32, offset: 224)
!9112 = !DIDerivedType(tag: DW_TAG_member, name: "combined_count", scope: !9102, file: !370, line: 550, baseType: !624, size: 32, offset: 256)
!9113 = !DIDerivedType(tag: DW_TAG_member, name: "set_channels", scope: !8752, file: !412, line: 478, baseType: !9114, size: 64, offset: 2624)
!9114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9115, size: 64)
!9115 = !DISubroutineType(types: !9116)
!9116 = !{!7, !451, !9101}
!9117 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_flag", scope: !8752, file: !412, line: 479, baseType: !9118, size: 64, offset: 2688)
!9118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9119, size: 64)
!9119 = !DISubroutineType(types: !9120)
!9120 = !{!7, !451, !9121}
!9121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9122, size: 64)
!9122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_dump", file: !370, line: 1237, size: 128, elements: !9123)
!9123 = !{!9124, !9125, !9126, !9127, !9128}
!9124 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !9122, file: !370, line: 1238, baseType: !624, size: 32)
!9125 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !9122, file: !370, line: 1239, baseType: !624, size: 32, offset: 32)
!9126 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9122, file: !370, line: 1240, baseType: !624, size: 32, offset: 64)
!9127 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !9122, file: !370, line: 1241, baseType: !624, size: 32, offset: 96)
!9128 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9122, file: !370, line: 1242, baseType: !7819, offset: 128)
!9129 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_data", scope: !8752, file: !412, line: 480, baseType: !9130, size: 64, offset: 2752)
!9130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9131, size: 64)
!9131 = !DISubroutineType(types: !9132)
!9132 = !{!7, !451, !9121, !726}
!9133 = !DIDerivedType(tag: DW_TAG_member, name: "set_dump", scope: !8752, file: !412, line: 482, baseType: !9118, size: 64, offset: 2816)
!9134 = !DIDerivedType(tag: DW_TAG_member, name: "get_ts_info", scope: !8752, file: !412, line: 483, baseType: !9135, size: 64, offset: 2880)
!9135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9136, size: 64)
!9136 = !DISubroutineType(types: !9137)
!9137 = !{!7, !451, !9138}
!9138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9139, size: 64)
!9139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ts_info", file: !370, line: 1317, size: 352, elements: !9140)
!9140 = !{!9141, !9142, !9143, !9144, !9145, !9147, !9148}
!9141 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !9139, file: !370, line: 1318, baseType: !624, size: 32)
!9142 = !DIDerivedType(tag: DW_TAG_member, name: "so_timestamping", scope: !9139, file: !370, line: 1319, baseType: !624, size: 32, offset: 32)
!9143 = !DIDerivedType(tag: DW_TAG_member, name: "phc_index", scope: !9139, file: !370, line: 1320, baseType: !1645, size: 32, offset: 64)
!9144 = !DIDerivedType(tag: DW_TAG_member, name: "tx_types", scope: !9139, file: !370, line: 1321, baseType: !624, size: 32, offset: 96)
!9145 = !DIDerivedType(tag: DW_TAG_member, name: "tx_reserved", scope: !9139, file: !370, line: 1322, baseType: !9146, size: 96, offset: 128)
!9146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !624, size: 96, elements: !1022)
!9147 = !DIDerivedType(tag: DW_TAG_member, name: "rx_filters", scope: !9139, file: !370, line: 1323, baseType: !624, size: 32, offset: 224)
!9148 = !DIDerivedType(tag: DW_TAG_member, name: "rx_reserved", scope: !9139, file: !370, line: 1324, baseType: !9146, size: 96, offset: 256)
!9149 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_info", scope: !8752, file: !412, line: 484, baseType: !9150, size: 64, offset: 2944)
!9150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9151, size: 64)
!9151 = !DISubroutineType(types: !9152)
!9152 = !{!7, !451, !9153}
!9153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9154, size: 64)
!9154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_modinfo", file: !370, line: 382, size: 352, elements: !9155)
!9155 = !{!9156, !9157, !9158, !9159}
!9156 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !9154, file: !370, line: 383, baseType: !624, size: 32)
!9157 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9154, file: !370, line: 384, baseType: !624, size: 32, offset: 32)
!9158 = !DIDerivedType(tag: DW_TAG_member, name: "eeprom_len", scope: !9154, file: !370, line: 385, baseType: !624, size: 32, offset: 64)
!9159 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !9154, file: !370, line: 386, baseType: !9160, size: 256, offset: 96)
!9160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !624, size: 256, elements: !1526)
!9161 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_eeprom", scope: !8752, file: !412, line: 486, baseType: !8832, size: 64, offset: 3008)
!9162 = !DIDerivedType(tag: DW_TAG_member, name: "get_eee", scope: !8752, file: !412, line: 488, baseType: !9163, size: 64, offset: 3072)
!9163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9164, size: 64)
!9164 = !DISubroutineType(types: !9165)
!9165 = !{!7, !451, !9166}
!9166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9167, size: 64)
!9167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eee", file: !370, line: 360, size: 320, elements: !9168)
!9168 = !{!9169, !9170, !9171, !9172, !9173, !9174, !9175, !9176, !9177}
!9169 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !9167, file: !370, line: 361, baseType: !624, size: 32)
!9170 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !9167, file: !370, line: 362, baseType: !624, size: 32, offset: 32)
!9171 = !DIDerivedType(tag: DW_TAG_member, name: "advertised", scope: !9167, file: !370, line: 363, baseType: !624, size: 32, offset: 64)
!9172 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertised", scope: !9167, file: !370, line: 364, baseType: !624, size: 32, offset: 96)
!9173 = !DIDerivedType(tag: DW_TAG_member, name: "eee_active", scope: !9167, file: !370, line: 365, baseType: !624, size: 32, offset: 128)
!9174 = !DIDerivedType(tag: DW_TAG_member, name: "eee_enabled", scope: !9167, file: !370, line: 366, baseType: !624, size: 32, offset: 160)
!9175 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_enabled", scope: !9167, file: !370, line: 367, baseType: !624, size: 32, offset: 192)
!9176 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_timer", scope: !9167, file: !370, line: 368, baseType: !624, size: 32, offset: 224)
!9177 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !9167, file: !370, line: 369, baseType: !1767, size: 64, offset: 256)
!9178 = !DIDerivedType(tag: DW_TAG_member, name: "set_eee", scope: !8752, file: !412, line: 489, baseType: !9163, size: 64, offset: 3136)
!9179 = !DIDerivedType(tag: DW_TAG_member, name: "get_tunable", scope: !8752, file: !412, line: 490, baseType: !9180, size: 64, offset: 3200)
!9180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9181, size: 64)
!9181 = !DISubroutineType(types: !9182)
!9182 = !{!7, !451, !9183, !726}
!9183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9184, size: 64)
!9184 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9185)
!9185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tunable", file: !370, line: 244, size: 128, elements: !9186)
!9186 = !{!9187, !9188, !9189, !9190, !9191}
!9187 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !9185, file: !370, line: 245, baseType: !624, size: 32)
!9188 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9185, file: !370, line: 246, baseType: !624, size: 32, offset: 32)
!9189 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !9185, file: !370, line: 247, baseType: !624, size: 32, offset: 64)
!9190 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !9185, file: !370, line: 248, baseType: !624, size: 32, offset: 96)
!9191 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9185, file: !370, line: 249, baseType: !3488, offset: 128)
!9192 = !DIDerivedType(tag: DW_TAG_member, name: "set_tunable", scope: !8752, file: !412, line: 492, baseType: !9193, size: 64, offset: 3264)
!9193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9194, size: 64)
!9194 = !DISubroutineType(types: !9195)
!9195 = !{!7, !451, !9183, !2424}
!9196 = !DIDerivedType(tag: DW_TAG_member, name: "get_per_queue_coalesce", scope: !8752, file: !412, line: 494, baseType: !9197, size: 64, offset: 3328)
!9197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9198, size: 64)
!9198 = !DISubroutineType(types: !9199)
!9199 = !{!7, !451, !862, !8848}
!9200 = !DIDerivedType(tag: DW_TAG_member, name: "set_per_queue_coalesce", scope: !8752, file: !412, line: 496, baseType: !9197, size: 64, offset: 3392)
!9201 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ksettings", scope: !8752, file: !412, line: 498, baseType: !9202, size: 64, offset: 3456)
!9202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9203, size: 64)
!9203 = !DISubroutineType(types: !9204)
!9204 = !{!7, !451, !9205}
!9205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9206, size: 64)
!9206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ksettings", file: !412, line: 124, size: 768, elements: !9207)
!9207 = !{!9208, !9233}
!9208 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9206, file: !412, line: 125, baseType: !9209, size: 384)
!9209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_settings", file: !370, line: 1996, size: 384, elements: !9210)
!9210 = !{!9211, !9212, !9213, !9214, !9215, !9216, !9217, !9218, !9219, !9220, !9223, !9224, !9225, !9226, !9228, !9232}
!9211 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !9209, file: !370, line: 1997, baseType: !624, size: 32)
!9212 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !9209, file: !370, line: 1998, baseType: !624, size: 32, offset: 32)
!9213 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !9209, file: !370, line: 1999, baseType: !1553, size: 8, offset: 64)
!9214 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !9209, file: !370, line: 2000, baseType: !1553, size: 8, offset: 72)
!9215 = !DIDerivedType(tag: DW_TAG_member, name: "phy_address", scope: !9209, file: !370, line: 2001, baseType: !1553, size: 8, offset: 80)
!9216 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !9209, file: !370, line: 2002, baseType: !1553, size: 8, offset: 88)
!9217 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_support", scope: !9209, file: !370, line: 2003, baseType: !1553, size: 8, offset: 96)
!9218 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix", scope: !9209, file: !370, line: 2004, baseType: !1553, size: 8, offset: 104)
!9219 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix_ctrl", scope: !9209, file: !370, line: 2005, baseType: !1553, size: 8, offset: 112)
!9220 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks_nwords", scope: !9209, file: !370, line: 2006, baseType: !9221, size: 8, offset: 120)
!9221 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !495, line: 20, baseType: !9222)
!9222 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!9223 = !DIDerivedType(tag: DW_TAG_member, name: "transceiver", scope: !9209, file: !370, line: 2007, baseType: !1553, size: 8, offset: 128)
!9224 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_cfg", scope: !9209, file: !370, line: 2008, baseType: !1553, size: 8, offset: 136)
!9225 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_state", scope: !9209, file: !370, line: 2009, baseType: !1553, size: 8, offset: 144)
!9226 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !9209, file: !370, line: 2010, baseType: !9227, size: 8, offset: 152)
!9227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1553, size: 8, elements: !1571)
!9228 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !9209, file: !370, line: 2011, baseType: !9229, size: 224, offset: 160)
!9229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !624, size: 224, elements: !9230)
!9230 = !{!9231}
!9231 = !DISubrange(count: 7)
!9232 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks", scope: !9209, file: !370, line: 2012, baseType: !7827, offset: 384)
!9233 = !DIDerivedType(tag: DW_TAG_member, name: "link_modes", scope: !9206, file: !412, line: 130, baseType: !9234, size: 384, offset: 384)
!9234 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9206, file: !412, line: 126, size: 384, elements: !9235)
!9235 = !{!9236, !9237, !9238}
!9236 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !9234, file: !412, line: 127, baseType: !3332, size: 128)
!9237 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !9234, file: !412, line: 128, baseType: !3332, size: 128, offset: 128)
!9238 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertising", scope: !9234, file: !412, line: 129, baseType: !3332, size: 128, offset: 256)
!9239 = !DIDerivedType(tag: DW_TAG_member, name: "set_link_ksettings", scope: !8752, file: !412, line: 500, baseType: !9240, size: 64, offset: 3520)
!9240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9241, size: 64)
!9241 = !DISubroutineType(types: !9242)
!9242 = !{!7, !451, !9243}
!9243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9244, size: 64)
!9244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9206)
!9245 = !DIDerivedType(tag: DW_TAG_member, name: "get_fecparam", scope: !8752, file: !412, line: 502, baseType: !9246, size: 64, offset: 3584)
!9246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9247, size: 64)
!9247 = !DISubroutineType(types: !9248)
!9248 = !{!7, !451, !9249}
!9249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9250, size: 64)
!9250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_fecparam", file: !370, line: 1389, size: 128, elements: !9251)
!9251 = !{!9252, !9253, !9254, !9255}
!9252 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !9250, file: !370, line: 1390, baseType: !624, size: 32)
!9253 = !DIDerivedType(tag: DW_TAG_member, name: "active_fec", scope: !9250, file: !370, line: 1392, baseType: !624, size: 32, offset: 32)
!9254 = !DIDerivedType(tag: DW_TAG_member, name: "fec", scope: !9250, file: !370, line: 1393, baseType: !624, size: 32, offset: 64)
!9255 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !9250, file: !370, line: 1394, baseType: !624, size: 32, offset: 96)
!9256 = !DIDerivedType(tag: DW_TAG_member, name: "set_fecparam", scope: !8752, file: !412, line: 504, baseType: !9246, size: 64, offset: 3648)
!9257 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_phy_stats", scope: !8752, file: !412, line: 506, baseType: !8941, size: 64, offset: 3712)
!9258 = !DIDerivedType(tag: DW_TAG_member, name: "get_phy_tunable", scope: !8752, file: !412, line: 508, baseType: !9180, size: 64, offset: 3776)
!9259 = !DIDerivedType(tag: DW_TAG_member, name: "set_phy_tunable", scope: !8752, file: !412, line: 510, baseType: !9193, size: 64, offset: 3840)
!9260 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_ops", scope: !425, file: !6, line: 1922, baseType: !9261, size: 64, offset: 4096)
!9261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9262, size: 64)
!9262 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9263)
!9263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_ops", file: !9264, line: 202, size: 384, elements: !9265)
!9264 = !DIFile(filename: "./include/net/ndisc.h", directory: "/home/lizy2001/genbc/linux")
!9265 = !{!9266, !9270, !9288, !9294, !9299, !9303}
!9266 = !DIDerivedType(tag: DW_TAG_member, name: "is_useropt", scope: !9263, file: !9264, line: 203, baseType: !9267, size: 64)
!9267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9268, size: 64)
!9268 = !DISubroutineType(types: !9269)
!9269 = !{!7, !1552}
!9270 = !DIDerivedType(tag: DW_TAG_member, name: "parse_options", scope: !9263, file: !9264, line: 204, baseType: !9271, size: 64, offset: 64)
!9271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9272, size: 64)
!9272 = !DISubroutineType(types: !9273)
!9273 = !{!7, !3023, !9274, !9279}
!9274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9275, size: 64)
!9275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nd_opt_hdr", file: !9264, line: 105, size: 16, elements: !9276)
!9276 = !{!9277, !9278}
!9277 = !DIDerivedType(tag: DW_TAG_member, name: "nd_opt_type", scope: !9275, file: !9264, line: 106, baseType: !1553, size: 8)
!9278 = !DIDerivedType(tag: DW_TAG_member, name: "nd_opt_len", scope: !9275, file: !9264, line: 107, baseType: !1553, size: 8, offset: 8)
!9279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9280, size: 64)
!9280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_options", file: !9264, line: 111, size: 1088, elements: !9281)
!9281 = !{!9282, !9286, !9287}
!9282 = !DIDerivedType(tag: DW_TAG_member, name: "nd_opt_array", scope: !9280, file: !9264, line: 112, baseType: !9283, size: 960)
!9283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9274, size: 960, elements: !9284)
!9284 = !{!9285}
!9285 = !DISubrange(count: 15)
!9286 = !DIDerivedType(tag: DW_TAG_member, name: "nd_useropts", scope: !9280, file: !9264, line: 117, baseType: !9274, size: 64, offset: 960)
!9287 = !DIDerivedType(tag: DW_TAG_member, name: "nd_useropts_end", scope: !9280, file: !9264, line: 118, baseType: !9274, size: 64, offset: 1024)
!9288 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !9263, file: !9264, line: 207, baseType: !9289, size: 64, offset: 128)
!9289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9290, size: 64)
!9290 = !DISubroutineType(types: !9291)
!9291 = !{null, !3023, !3006, !862, !1552, !9292}
!9292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9293, size: 64)
!9293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9280)
!9294 = !DIDerivedType(tag: DW_TAG_member, name: "opt_addr_space", scope: !9263, file: !9264, line: 210, baseType: !9295, size: 64, offset: 192)
!9295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9296, size: 64)
!9296 = !DISubroutineType(types: !9297)
!9297 = !{!7, !3023, !1552, !3006, !8100, !9298}
!9298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8100, size: 64)
!9299 = !DIDerivedType(tag: DW_TAG_member, name: "fill_addr_option", scope: !9263, file: !9264, line: 213, baseType: !9300, size: 64, offset: 256)
!9300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9301, size: 64)
!9301 = !DISubroutineType(types: !9302)
!9302 = !{null, !3023, !576, !1552, !8658}
!9303 = !DIDerivedType(tag: DW_TAG_member, name: "prefix_rcv_add_addr", scope: !9263, file: !9264, line: 216, baseType: !9304, size: 64, offset: 320)
!9304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9305, size: 64)
!9305 = !DISubroutineType(types: !9306)
!9306 = !{null, !2116, !451, !9307, !3312, !9322, !7, !862, !696, !696, !624, !862, !696}
!9307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9308, size: 64)
!9308 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9309)
!9309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prefix_info", file: !9310, line: 27, size: 256, elements: !9311)
!9310 = !DIFile(filename: "./include/net/addrconf.h", directory: "/home/lizy2001/genbc/linux")
!9311 = !{!9312, !9313, !9314, !9315, !9316, !9317, !9318, !9319, !9320, !9321}
!9312 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9309, file: !9310, line: 28, baseType: !1553, size: 8)
!9313 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !9309, file: !9310, line: 29, baseType: !1553, size: 8, offset: 8)
!9314 = !DIDerivedType(tag: DW_TAG_member, name: "prefix_len", scope: !9309, file: !9310, line: 30, baseType: !1553, size: 8, offset: 16)
!9315 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !9309, file: !9310, line: 37, baseType: !1553, size: 6, offset: 24, flags: DIFlagBitField, extraData: i64 24)
!9316 = !DIDerivedType(tag: DW_TAG_member, name: "autoconf", scope: !9309, file: !9310, line: 38, baseType: !1553, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 24)
!9317 = !DIDerivedType(tag: DW_TAG_member, name: "onlink", scope: !9309, file: !9310, line: 39, baseType: !1553, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 24)
!9318 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !9309, file: !9310, line: 43, baseType: !622, size: 32, offset: 32)
!9319 = !DIDerivedType(tag: DW_TAG_member, name: "prefered", scope: !9309, file: !9310, line: 44, baseType: !622, size: 32, offset: 64)
!9320 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !9309, file: !9310, line: 45, baseType: !622, size: 32, offset: 96)
!9321 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", scope: !9309, file: !9310, line: 47, baseType: !2384, size: 128, offset: 128)
!9322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2384, size: 64)
!9323 = !DIDerivedType(tag: DW_TAG_member, name: "header_ops", scope: !425, file: !6, line: 1933, baseType: !9324, size: 64, offset: 4160)
!9324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9325, size: 64)
!9325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9326)
!9326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "header_ops", file: !6, line: 270, size: 384, elements: !9327)
!9327 = !{!9328, !9332, !9338, !9343, !9347, !9351}
!9328 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !9326, file: !6, line: 271, baseType: !9329, size: 64)
!9329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9330, size: 64)
!9330 = !DISubroutineType(types: !9331)
!9331 = !{!7, !576, !451, !633, !2424, !2424, !14}
!9332 = !DIDerivedType(tag: DW_TAG_member, name: "parse", scope: !9326, file: !6, line: 274, baseType: !9333, size: 64, offset: 64)
!9333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9334, size: 64)
!9334 = !DISubroutineType(types: !9335)
!9335 = !{!7, !9336, !7896}
!9336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9337, size: 64)
!9337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !577)
!9338 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !9326, file: !6, line: 275, baseType: !9339, size: 64, offset: 128)
!9339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9340, size: 64)
!9340 = !DISubroutineType(types: !9341)
!9341 = !{!7, !3030, !9342, !645}
!9342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3168, size: 64)
!9343 = !DIDerivedType(tag: DW_TAG_member, name: "cache_update", scope: !9326, file: !6, line: 276, baseType: !9344, size: 64, offset: 192)
!9344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9345, size: 64)
!9345 = !DISubroutineType(types: !9346)
!9346 = !{null, !9342, !3023, !866}
!9347 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !9326, file: !6, line: 279, baseType: !9348, size: 64, offset: 256)
!9348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9349, size: 64)
!9349 = !DISubroutineType(types: !9350)
!9350 = !{!696, !453, !14}
!9351 = !DIDerivedType(tag: DW_TAG_member, name: "parse_protocol", scope: !9326, file: !6, line: 280, baseType: !9352, size: 64, offset: 320)
!9352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9353, size: 64)
!9353 = !DISubroutineType(types: !9354)
!9354 = !{!645, !9336}
!9355 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !425, file: !6, line: 1935, baseType: !14, size: 32, offset: 4224)
!9356 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !425, file: !6, line: 1936, baseType: !14, size: 32, offset: 4256)
!9357 = !DIDerivedType(tag: DW_TAG_member, name: "gflags", scope: !425, file: !6, line: 1938, baseType: !633, size: 16, offset: 4288)
!9358 = !DIDerivedType(tag: DW_TAG_member, name: "padded", scope: !425, file: !6, line: 1939, baseType: !633, size: 16, offset: 4304)
!9359 = !DIDerivedType(tag: DW_TAG_member, name: "operstate", scope: !425, file: !6, line: 1941, baseType: !650, size: 8, offset: 4320)
!9360 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode", scope: !425, file: !6, line: 1942, baseType: !650, size: 8, offset: 4328)
!9361 = !DIDerivedType(tag: DW_TAG_member, name: "if_port", scope: !425, file: !6, line: 1944, baseType: !650, size: 8, offset: 4336)
!9362 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !425, file: !6, line: 1945, baseType: !650, size: 8, offset: 4344)
!9363 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !425, file: !6, line: 1952, baseType: !14, size: 32, offset: 4352)
!9364 = !DIDerivedType(tag: DW_TAG_member, name: "min_mtu", scope: !425, file: !6, line: 1953, baseType: !14, size: 32, offset: 4384)
!9365 = !DIDerivedType(tag: DW_TAG_member, name: "max_mtu", scope: !425, file: !6, line: 1954, baseType: !14, size: 32, offset: 4416)
!9366 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !425, file: !6, line: 1955, baseType: !633, size: 16, offset: 4448)
!9367 = !DIDerivedType(tag: DW_TAG_member, name: "hard_header_len", scope: !425, file: !6, line: 1956, baseType: !633, size: 16, offset: 4464)
!9368 = !DIDerivedType(tag: DW_TAG_member, name: "min_header_len", scope: !425, file: !6, line: 1957, baseType: !650, size: 8, offset: 4480)
!9369 = !DIDerivedType(tag: DW_TAG_member, name: "name_assign_type", scope: !425, file: !6, line: 1958, baseType: !650, size: 8, offset: 4488)
!9370 = !DIDerivedType(tag: DW_TAG_member, name: "needed_headroom", scope: !425, file: !6, line: 1960, baseType: !633, size: 16, offset: 4496)
!9371 = !DIDerivedType(tag: DW_TAG_member, name: "needed_tailroom", scope: !425, file: !6, line: 1961, baseType: !633, size: 16, offset: 4512)
!9372 = !DIDerivedType(tag: DW_TAG_member, name: "perm_addr", scope: !425, file: !6, line: 1964, baseType: !870, size: 256, offset: 4528)
!9373 = !DIDerivedType(tag: DW_TAG_member, name: "addr_assign_type", scope: !425, file: !6, line: 1965, baseType: !650, size: 8, offset: 4784)
!9374 = !DIDerivedType(tag: DW_TAG_member, name: "addr_len", scope: !425, file: !6, line: 1966, baseType: !650, size: 8, offset: 4792)
!9375 = !DIDerivedType(tag: DW_TAG_member, name: "upper_level", scope: !425, file: !6, line: 1967, baseType: !650, size: 8, offset: 4800)
!9376 = !DIDerivedType(tag: DW_TAG_member, name: "lower_level", scope: !425, file: !6, line: 1968, baseType: !650, size: 8, offset: 4808)
!9377 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_priv_len", scope: !425, file: !6, line: 1970, baseType: !633, size: 16, offset: 4816)
!9378 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !425, file: !6, line: 1971, baseType: !633, size: 16, offset: 4832)
!9379 = !DIDerivedType(tag: DW_TAG_member, name: "dev_port", scope: !425, file: !6, line: 1972, baseType: !633, size: 16, offset: 4848)
!9380 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list_lock", scope: !425, file: !6, line: 1973, baseType: !884, offset: 4864)
!9381 = !DIDerivedType(tag: DW_TAG_member, name: "uc", scope: !425, file: !6, line: 1975, baseType: !9382, size: 192, offset: 4864)
!9382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr_list", file: !6, line: 224, size: 192, elements: !9383)
!9383 = !{!9384, !9385}
!9384 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9382, file: !6, line: 225, baseType: !445, size: 128)
!9385 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !9382, file: !6, line: 226, baseType: !7, size: 32, offset: 128)
!9386 = !DIDerivedType(tag: DW_TAG_member, name: "mc", scope: !425, file: !6, line: 1976, baseType: !9382, size: 192, offset: 5056)
!9387 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addrs", scope: !425, file: !6, line: 1977, baseType: !9382, size: 192, offset: 5248)
!9388 = !DIDerivedType(tag: DW_TAG_member, name: "queues_kset", scope: !425, file: !6, line: 1980, baseType: !4409, size: 64, offset: 5440)
!9389 = !DIDerivedType(tag: DW_TAG_member, name: "promiscuity", scope: !425, file: !6, line: 1985, baseType: !14, size: 32, offset: 5504)
!9390 = !DIDerivedType(tag: DW_TAG_member, name: "allmulti", scope: !425, file: !6, line: 1986, baseType: !14, size: 32, offset: 5536)
!9391 = !DIDerivedType(tag: DW_TAG_member, name: "uc_promisc", scope: !425, file: !6, line: 1987, baseType: !696, size: 8, offset: 5568)
!9392 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_info", scope: !425, file: !6, line: 1996, baseType: !9393, size: 64, offset: 5632)
!9393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9394, size: 64)
!9394 = !DICompositeType(tag: DW_TAG_structure_type, name: "vlan_info", file: !6, line: 1996, flags: DIFlagFwdDecl)
!9395 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ptr", scope: !425, file: !6, line: 2007, baseType: !9396, size: 64, offset: 5696)
!9396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9397, size: 64)
!9397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_device", file: !2299, line: 25, size: 2816, elements: !9398)
!9398 = !{!9399, !9400, !9401, !9402, !9423, !9426, !9428, !9429, !9430, !9431, !9432, !9433, !9434, !9435, !9436, !9437, !9438, !9439, !9440, !9441, !9442, !9443}
!9399 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9397, file: !2299, line: 26, baseType: !451, size: 64)
!9400 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9397, file: !2299, line: 27, baseType: !1426, size: 32, offset: 64)
!9401 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !9397, file: !2299, line: 28, baseType: !7, size: 32, offset: 96)
!9402 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_list", scope: !9397, file: !2299, line: 29, baseType: !9403, size: 64, offset: 128)
!9403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9404, size: 64)
!9404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_ifaddr", file: !2299, line: 137, size: 960, elements: !9405)
!9405 = !{!9406, !9407, !9408, !9409, !9410, !9411, !9412, !9413, !9414, !9415, !9416, !9417, !9418, !9419, !9420, !9421, !9422}
!9406 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !9404, file: !2299, line: 138, baseType: !437, size: 128)
!9407 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_next", scope: !9404, file: !2299, line: 139, baseType: !9403, size: 64, offset: 128)
!9408 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_dev", scope: !9404, file: !2299, line: 140, baseType: !9396, size: 64, offset: 192)
!9409 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !9404, file: !2299, line: 141, baseType: !460, size: 128, align: 64, offset: 256)
!9410 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_local", scope: !9404, file: !2299, line: 142, baseType: !622, size: 32, offset: 384)
!9411 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_address", scope: !9404, file: !2299, line: 143, baseType: !622, size: 32, offset: 416)
!9412 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_mask", scope: !9404, file: !2299, line: 144, baseType: !622, size: 32, offset: 448)
!9413 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_rt_priority", scope: !9404, file: !2299, line: 145, baseType: !624, size: 32, offset: 480)
!9414 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_broadcast", scope: !9404, file: !2299, line: 146, baseType: !622, size: 32, offset: 512)
!9415 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_scope", scope: !9404, file: !2299, line: 147, baseType: !650, size: 8, offset: 544)
!9416 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_prefixlen", scope: !9404, file: !2299, line: 148, baseType: !650, size: 8, offset: 552)
!9417 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_flags", scope: !9404, file: !2299, line: 149, baseType: !624, size: 32, offset: 576)
!9418 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_label", scope: !9404, file: !2299, line: 150, baseType: !428, size: 128, offset: 608)
!9419 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_valid_lft", scope: !9404, file: !2299, line: 153, baseType: !624, size: 32, offset: 736)
!9420 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_preferred_lft", scope: !9404, file: !2299, line: 154, baseType: !624, size: 32, offset: 768)
!9421 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_cstamp", scope: !9404, file: !2299, line: 155, baseType: !473, size: 64, offset: 832)
!9422 = !DIDerivedType(tag: DW_TAG_member, name: "ifa_tstamp", scope: !9404, file: !2299, line: 156, baseType: !473, size: 64, offset: 896)
!9423 = !DIDerivedType(tag: DW_TAG_member, name: "mc_list", scope: !9397, file: !2299, line: 31, baseType: !9424, size: 64, offset: 192)
!9424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9425, size: 64)
!9425 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_mc_list", file: !2299, line: 31, flags: DIFlagFwdDecl)
!9426 = !DIDerivedType(tag: DW_TAG_member, name: "mc_hash", scope: !9397, file: !2299, line: 32, baseType: !9427, size: 64, offset: 256)
!9427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9424, size: 64)
!9428 = !DIDerivedType(tag: DW_TAG_member, name: "mc_count", scope: !9397, file: !2299, line: 34, baseType: !7, size: 32, offset: 320)
!9429 = !DIDerivedType(tag: DW_TAG_member, name: "mc_tomb_lock", scope: !9397, file: !2299, line: 35, baseType: !884, offset: 352)
!9430 = !DIDerivedType(tag: DW_TAG_member, name: "mc_tomb", scope: !9397, file: !2299, line: 36, baseType: !9424, size: 64, offset: 384)
!9431 = !DIDerivedType(tag: DW_TAG_member, name: "mr_v1_seen", scope: !9397, file: !2299, line: 37, baseType: !473, size: 64, offset: 448)
!9432 = !DIDerivedType(tag: DW_TAG_member, name: "mr_v2_seen", scope: !9397, file: !2299, line: 38, baseType: !473, size: 64, offset: 512)
!9433 = !DIDerivedType(tag: DW_TAG_member, name: "mr_maxdelay", scope: !9397, file: !2299, line: 39, baseType: !473, size: 64, offset: 576)
!9434 = !DIDerivedType(tag: DW_TAG_member, name: "mr_qi", scope: !9397, file: !2299, line: 40, baseType: !473, size: 64, offset: 640)
!9435 = !DIDerivedType(tag: DW_TAG_member, name: "mr_qri", scope: !9397, file: !2299, line: 41, baseType: !473, size: 64, offset: 704)
!9436 = !DIDerivedType(tag: DW_TAG_member, name: "mr_qrv", scope: !9397, file: !2299, line: 42, baseType: !650, size: 8, offset: 768)
!9437 = !DIDerivedType(tag: DW_TAG_member, name: "mr_gq_running", scope: !9397, file: !2299, line: 43, baseType: !650, size: 8, offset: 776)
!9438 = !DIDerivedType(tag: DW_TAG_member, name: "mr_ifc_count", scope: !9397, file: !2299, line: 44, baseType: !650, size: 8, offset: 784)
!9439 = !DIDerivedType(tag: DW_TAG_member, name: "mr_gq_timer", scope: !9397, file: !2299, line: 45, baseType: !2401, size: 320, offset: 832)
!9440 = !DIDerivedType(tag: DW_TAG_member, name: "mr_ifc_timer", scope: !9397, file: !2299, line: 46, baseType: !2401, size: 320, offset: 1152)
!9441 = !DIDerivedType(tag: DW_TAG_member, name: "arp_parms", scope: !9397, file: !2299, line: 48, baseType: !3150, size: 64, offset: 1472)
!9442 = !DIDerivedType(tag: DW_TAG_member, name: "cnf", scope: !9397, file: !2299, line: 49, baseType: !2298, size: 1152, offset: 1536)
!9443 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !9397, file: !2299, line: 50, baseType: !460, size: 128, align: 64, offset: 2688)
!9444 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_ptr", scope: !425, file: !6, line: 2011, baseType: !3312, size: 64, offset: 5760)
!9445 = !DIDerivedType(tag: DW_TAG_member, name: "ieee80211_ptr", scope: !425, file: !6, line: 2015, baseType: !9446, size: 64, offset: 5824)
!9446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9447, size: 64)
!9447 = !DICompositeType(tag: DW_TAG_structure_type, name: "wireless_dev", file: !6, line: 62, flags: DIFlagFwdDecl)
!9448 = !DIDerivedType(tag: DW_TAG_member, name: "ieee802154_ptr", scope: !425, file: !6, line: 2016, baseType: !9449, size: 64, offset: 5888)
!9449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9450, size: 64)
!9450 = !DICompositeType(tag: DW_TAG_structure_type, name: "wpan_dev", file: !6, line: 64, flags: DIFlagFwdDecl)
!9451 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr", scope: !425, file: !6, line: 2025, baseType: !7896, size: 64, offset: 5952)
!9452 = !DIDerivedType(tag: DW_TAG_member, name: "_rx", scope: !425, file: !6, line: 2027, baseType: !9453, size: 64, offset: 6016)
!9453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9454, size: 64)
!9454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_rx_queue", file: !6, line: 736, size: 1536, elements: !9455)
!9455 = !{!9456, !9457, !9458}
!9456 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !9454, file: !6, line: 741, baseType: !4401, size: 512)
!9457 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9454, file: !6, line: 742, baseType: !451, size: 64, offset: 512)
!9458 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_rxq", scope: !9454, file: !6, line: 743, baseType: !9459, size: 512, align: 512, offset: 1024)
!9459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_rxq_info", file: !8400, line: 57, size: 512, align: 512, elements: !9460)
!9460 = !{!9461, !9462, !9463, !9464}
!9461 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9459, file: !8400, line: 58, baseType: !451, size: 64)
!9462 = !DIDerivedType(tag: DW_TAG_member, name: "queue_index", scope: !9459, file: !8400, line: 59, baseType: !862, size: 32, offset: 64)
!9463 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !9459, file: !8400, line: 60, baseType: !862, size: 32, offset: 96)
!9464 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !9459, file: !8400, line: 61, baseType: !8408, size: 64, offset: 128)
!9465 = !DIDerivedType(tag: DW_TAG_member, name: "num_rx_queues", scope: !425, file: !6, line: 2028, baseType: !14, size: 32, offset: 6080)
!9466 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_rx_queues", scope: !425, file: !6, line: 2029, baseType: !14, size: 32, offset: 6112)
!9467 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_prog", scope: !425, file: !6, line: 2031, baseType: !3504, size: 64, offset: 6144)
!9468 = !DIDerivedType(tag: DW_TAG_member, name: "gro_flush_timeout", scope: !425, file: !6, line: 2032, baseType: !473, size: 64, offset: 6208)
!9469 = !DIDerivedType(tag: DW_TAG_member, name: "napi_defer_hard_irqs", scope: !425, file: !6, line: 2033, baseType: !7, size: 32, offset: 6272)
!9470 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler", scope: !425, file: !6, line: 2034, baseType: !9471, size: 64, offset: 6336)
!9471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9472, size: 64)
!9472 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_func_t", file: !6, line: 430, baseType: !9473)
!9473 = !DISubroutineType(types: !9474)
!9474 = !{!9475, !9476}
!9475 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_result_t", file: !6, line: 429, baseType: !418)
!9476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 64)
!9477 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler_data", scope: !425, file: !6, line: 2035, baseType: !726, size: 64, offset: 6400)
!9478 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_queue", scope: !425, file: !6, line: 2040, baseType: !9479, size: 64, offset: 6464)
!9479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9480, size: 64)
!9480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_queue", file: !6, line: 584, size: 1600, elements: !9481)
!9481 = !{!9482, !9483, !9881, !9882, !9883, !9884, !9885, !9886, !9887, !9888, !9889, !9890}
!9482 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9480, file: !6, line: 588, baseType: !451, size: 64)
!9483 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !9480, file: !6, line: 589, baseType: !9484, size: 64, offset: 64)
!9484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9485, size: 64)
!9485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc", file: !9486, line: 57, size: 2048, elements: !9487)
!9486 = !DIFile(filename: "./include/net/sch_generic.h", directory: "/home/lizy2001/genbc/linux")
!9487 = !{!9488, !9492, !9496, !9497, !9498, !9821, !9841, !9842, !9843, !9844, !9845, !9848, !9858, !9859, !9860, !9861, !9862, !9869, !9870, !9871, !9872, !9873, !9874, !9875, !9876, !9877, !9878, !9879}
!9488 = !DIDerivedType(tag: DW_TAG_member, name: "enqueue", scope: !9485, file: !9486, line: 58, baseType: !9489, size: 64)
!9489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9490, size: 64)
!9490 = !DISubroutineType(types: !9491)
!9491 = !{!7, !576, !9484, !9476}
!9492 = !DIDerivedType(tag: DW_TAG_member, name: "dequeue", scope: !9485, file: !9486, line: 61, baseType: !9493, size: 64, offset: 64)
!9493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9494, size: 64)
!9494 = !DISubroutineType(types: !9495)
!9495 = !{!576, !9484}
!9496 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9485, file: !9486, line: 62, baseType: !14, size: 32, offset: 128)
!9497 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !9485, file: !9486, line: 82, baseType: !862, size: 32, offset: 160)
!9498 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !9485, file: !9486, line: 83, baseType: !9499, size: 64, offset: 192)
!9499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9500, size: 64)
!9500 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9501)
!9501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc_ops", file: !9486, line: 238, size: 1344, elements: !9502)
!9502 = !{!9503, !9505, !9781, !9782, !9783, !9784, !9785, !9786, !9787, !9791, !9795, !9796, !9797, !9798, !9802, !9806, !9810, !9814, !9815, !9819, !9820}
!9503 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9501, file: !9486, line: 239, baseType: !9504, size: 64)
!9504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9501, size: 64)
!9505 = !DIDerivedType(tag: DW_TAG_member, name: "cl_ops", scope: !9501, file: !9486, line: 240, baseType: !9506, size: 64, offset: 64)
!9506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9507, size: 64)
!9507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9508)
!9508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc_class_ops", file: !9486, line: 198, size: 896, elements: !9509)
!9509 = !{!9510, !9511, !9526, !9531, !9535, !9539, !9543, !9547, !9551, !9566, !9744, !9748, !9749, !9753}
!9510 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9508, file: !9486, line: 199, baseType: !14, size: 32)
!9511 = !DIDerivedType(tag: DW_TAG_member, name: "select_queue", scope: !9508, file: !9486, line: 201, baseType: !9512, size: 64, offset: 64)
!9512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9513, size: 64)
!9513 = !DISubroutineType(types: !9514)
!9514 = !{!9479, !9484, !9515}
!9515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9516, size: 64)
!9516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcmsg", file: !9517, line: 577, size: 160, elements: !9518)
!9517 = !DIFile(filename: "./include/uapi/linux/rtnetlink.h", directory: "/home/lizy2001/genbc/linux")
!9518 = !{!9519, !9520, !9521, !9522, !9523, !9524, !9525}
!9519 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_family", scope: !9516, file: !9517, line: 578, baseType: !650, size: 8)
!9520 = !DIDerivedType(tag: DW_TAG_member, name: "tcm__pad1", scope: !9516, file: !9517, line: 579, baseType: !650, size: 8, offset: 8)
!9521 = !DIDerivedType(tag: DW_TAG_member, name: "tcm__pad2", scope: !9516, file: !9517, line: 580, baseType: !633, size: 16, offset: 16)
!9522 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_ifindex", scope: !9516, file: !9517, line: 581, baseType: !7, size: 32, offset: 32)
!9523 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_handle", scope: !9516, file: !9517, line: 582, baseType: !624, size: 32, offset: 64)
!9524 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_parent", scope: !9516, file: !9517, line: 583, baseType: !624, size: 32, offset: 96)
!9525 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_info", scope: !9516, file: !9517, line: 588, baseType: !624, size: 32, offset: 128)
!9526 = !DIDerivedType(tag: DW_TAG_member, name: "graft", scope: !9508, file: !9486, line: 202, baseType: !9527, size: 64, offset: 128)
!9527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9528, size: 64)
!9528 = !DISubroutineType(types: !9529)
!9529 = !{!7, !9484, !473, !9484, !9530, !2633}
!9530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9484, size: 64)
!9531 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !9508, file: !9486, line: 205, baseType: !9532, size: 64, offset: 192)
!9532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9533, size: 64)
!9533 = !DISubroutineType(types: !9534)
!9534 = !{!9484, !9484, !473}
!9535 = !DIDerivedType(tag: DW_TAG_member, name: "qlen_notify", scope: !9508, file: !9486, line: 206, baseType: !9536, size: 64, offset: 256)
!9536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9537, size: 64)
!9537 = !DISubroutineType(types: !9538)
!9538 = !{null, !9484, !473}
!9539 = !DIDerivedType(tag: DW_TAG_member, name: "find", scope: !9508, file: !9486, line: 209, baseType: !9540, size: 64, offset: 320)
!9540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9541, size: 64)
!9541 = !DISubroutineType(types: !9542)
!9542 = !{!473, !9484, !862}
!9543 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !9508, file: !9486, line: 210, baseType: !9544, size: 64, offset: 384)
!9544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9545, size: 64)
!9545 = !DISubroutineType(types: !9546)
!9546 = !{!7, !9484, !862, !862, !8157, !2616, !2633}
!9547 = !DIDerivedType(tag: DW_TAG_member, name: "delete", scope: !9508, file: !9486, line: 213, baseType: !9548, size: 64, offset: 448)
!9548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9549, size: 64)
!9549 = !DISubroutineType(types: !9550)
!9550 = !{!7, !9484, !473}
!9551 = !DIDerivedType(tag: DW_TAG_member, name: "walk", scope: !9508, file: !9486, line: 214, baseType: !9552, size: 64, offset: 512)
!9552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9553, size: 64)
!9553 = !DISubroutineType(types: !9554)
!9554 = !{null, !9484, !9555}
!9555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9556, size: 64)
!9556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_walker", file: !9557, line: 15, size: 192, elements: !9558)
!9557 = !DIFile(filename: "./include/net/pkt_sched.h", directory: "/home/lizy2001/genbc/linux")
!9558 = !{!9559, !9560, !9561, !9562}
!9559 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !9556, file: !9557, line: 16, baseType: !7, size: 32)
!9560 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !9556, file: !9557, line: 17, baseType: !7, size: 32, offset: 32)
!9561 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !9556, file: !9557, line: 18, baseType: !7, size: 32, offset: 64)
!9562 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9556, file: !9557, line: 19, baseType: !9563, size: 64, offset: 128)
!9563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9564, size: 64)
!9564 = !DISubroutineType(types: !9565)
!9565 = !{!7, !9484, !473, !9555}
!9566 = !DIDerivedType(tag: DW_TAG_member, name: "tcf_block", scope: !9508, file: !9486, line: 217, baseType: !9567, size: 64, offset: 576)
!9567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9568, size: 64)
!9568 = !DISubroutineType(types: !9569)
!9569 = !{!9570, !9484, !473, !2633}
!9570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9571, size: 64)
!9571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_block", file: !9486, line: 411, size: 9920, elements: !9572)
!9572 = !{!9573, !9574, !9575, !9576, !9577, !9578, !9579, !9580, !9581, !9586, !9587, !9588, !9589, !9590, !9591, !9740, !9741, !9743}
!9573 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9571, file: !9486, line: 415, baseType: !1109, size: 192)
!9574 = !DIDerivedType(tag: DW_TAG_member, name: "chain_list", scope: !9571, file: !9486, line: 416, baseType: !445, size: 128, offset: 192)
!9575 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !9571, file: !9486, line: 417, baseType: !862, size: 32, offset: 320)
!9576 = !DIDerivedType(tag: DW_TAG_member, name: "classid", scope: !9571, file: !9486, line: 418, baseType: !862, size: 32, offset: 352)
!9577 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9571, file: !9486, line: 419, baseType: !1426, size: 32, offset: 384)
!9578 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !9571, file: !9486, line: 420, baseType: !2116, size: 64, offset: 448)
!9579 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !9571, file: !9486, line: 421, baseType: !9484, size: 64, offset: 512)
!9580 = !DIDerivedType(tag: DW_TAG_member, name: "cb_lock", scope: !9571, file: !9486, line: 422, baseType: !1317, size: 256, offset: 576)
!9581 = !DIDerivedType(tag: DW_TAG_member, name: "flow_block", scope: !9571, file: !9486, line: 423, baseType: !9582, size: 128, offset: 832)
!9582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "flow_block", file: !9583, line: 430, size: 128, elements: !9584)
!9583 = !DIFile(filename: "./include/net/flow_offload.h", directory: "/home/lizy2001/genbc/linux")
!9584 = !{!9585}
!9585 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !9582, file: !9583, line: 431, baseType: !445, size: 128)
!9586 = !DIDerivedType(tag: DW_TAG_member, name: "owner_list", scope: !9571, file: !9486, line: 424, baseType: !445, size: 128, offset: 960)
!9587 = !DIDerivedType(tag: DW_TAG_member, name: "keep_dst", scope: !9571, file: !9486, line: 425, baseType: !696, size: 8, offset: 1088)
!9588 = !DIDerivedType(tag: DW_TAG_member, name: "offloadcnt", scope: !9571, file: !9486, line: 426, baseType: !544, size: 32, offset: 1120)
!9589 = !DIDerivedType(tag: DW_TAG_member, name: "nooffloaddevcnt", scope: !9571, file: !9486, line: 427, baseType: !14, size: 32, offset: 1152)
!9590 = !DIDerivedType(tag: DW_TAG_member, name: "lockeddevcnt", scope: !9571, file: !9486, line: 428, baseType: !14, size: 32, offset: 1184)
!9591 = !DIDerivedType(tag: DW_TAG_member, name: "chain0", scope: !9571, file: !9486, line: 432, baseType: !9592, size: 192, offset: 1216)
!9592 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9571, file: !9486, line: 429, size: 192, elements: !9593)
!9593 = !{!9594, !9739}
!9594 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !9592, file: !9486, line: 430, baseType: !9595, size: 64)
!9595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9596, size: 64)
!9596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_chain", file: !9486, line: 395, size: 832, elements: !9597)
!9597 = !{!9598, !9599, !9729, !9730, !9731, !9732, !9733, !9734, !9735, !9736, !9737, !9738}
!9598 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain_lock", scope: !9596, file: !9486, line: 397, baseType: !1109, size: 192)
!9599 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain", scope: !9596, file: !9486, line: 398, baseType: !9600, size: 64, offset: 192)
!9600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9601, size: 64)
!9601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_proto", file: !9486, line: 356, size: 768, elements: !9602)
!9602 = !{!9603, !9604, !9605, !9637, !9638, !9639, !9640, !9723, !9724, !9725, !9726, !9727, !9728}
!9603 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9601, file: !9486, line: 358, baseType: !9600, size: 64)
!9604 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !9601, file: !9486, line: 359, baseType: !726, size: 64, offset: 64)
!9605 = !DIDerivedType(tag: DW_TAG_member, name: "classify", scope: !9601, file: !9486, line: 362, baseType: !9606, size: 64, offset: 128)
!9606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9607, size: 64)
!9607 = !DISubroutineType(types: !9608)
!9608 = !{!7, !576, !9609, !9611}
!9609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9610, size: 64)
!9610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9601)
!9611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9612, size: 64)
!9612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_result", file: !9486, line: 275, size: 128, elements: !9613)
!9613 = !{!9614}
!9614 = !DIDerivedType(tag: DW_TAG_member, scope: !9612, file: !9486, line: 276, baseType: !9615, size: 128)
!9615 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9612, file: !9486, line: 276, size: 128, elements: !9616)
!9616 = !{!9617, !9622, !9623}
!9617 = !DIDerivedType(tag: DW_TAG_member, scope: !9615, file: !9486, line: 277, baseType: !9618, size: 128)
!9618 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9615, file: !9486, line: 277, size: 128, elements: !9619)
!9619 = !{!9620, !9621}
!9620 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !9618, file: !9486, line: 278, baseType: !473, size: 64)
!9621 = !DIDerivedType(tag: DW_TAG_member, name: "classid", scope: !9618, file: !9486, line: 279, baseType: !862, size: 32, offset: 64)
!9622 = !DIDerivedType(tag: DW_TAG_member, name: "goto_tp", scope: !9615, file: !9486, line: 281, baseType: !9609, size: 64)
!9623 = !DIDerivedType(tag: DW_TAG_member, scope: !9615, file: !9486, line: 284, baseType: !9624, size: 128)
!9624 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9615, file: !9486, line: 284, size: 128, elements: !9625)
!9625 = !{!9626, !9627}
!9626 = !DIDerivedType(tag: DW_TAG_member, name: "ingress", scope: !9624, file: !9486, line: 285, baseType: !696, size: 8)
!9627 = !DIDerivedType(tag: DW_TAG_member, name: "qstats", scope: !9624, file: !9486, line: 286, baseType: !9628, size: 64, offset: 64)
!9628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9629, size: 64)
!9629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_queue", file: !9630, line: 59, size: 160, elements: !9631)
!9630 = !DIFile(filename: "./include/uapi/linux/gen_stats.h", directory: "/home/lizy2001/genbc/linux")
!9631 = !{!9632, !9633, !9634, !9635, !9636}
!9632 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !9629, file: !9630, line: 60, baseType: !624, size: 32)
!9633 = !DIDerivedType(tag: DW_TAG_member, name: "backlog", scope: !9629, file: !9630, line: 61, baseType: !624, size: 32, offset: 32)
!9634 = !DIDerivedType(tag: DW_TAG_member, name: "drops", scope: !9629, file: !9630, line: 62, baseType: !624, size: 32, offset: 64)
!9635 = !DIDerivedType(tag: DW_TAG_member, name: "requeues", scope: !9629, file: !9630, line: 63, baseType: !624, size: 32, offset: 96)
!9636 = !DIDerivedType(tag: DW_TAG_member, name: "overlimits", scope: !9629, file: !9630, line: 64, baseType: !624, size: 32, offset: 128)
!9637 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !9601, file: !9486, line: 365, baseType: !645, size: 16, offset: 192)
!9638 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9601, file: !9486, line: 368, baseType: !862, size: 32, offset: 224)
!9639 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9601, file: !9486, line: 369, baseType: !726, size: 64, offset: 256)
!9640 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !9601, file: !9486, line: 370, baseType: !9641, size: 64, offset: 320)
!9641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9642, size: 64)
!9642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9643)
!9643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_proto_ops", file: !9486, line: 293, size: 1536, elements: !9644)
!9644 = !{!9645, !9646, !9647, !9648, !9652, !9656, !9660, !9664, !9668, !9672, !9676, !9693, !9701, !9702, !9703, !9707, !9711, !9712, !9716, !9717, !9721, !9722}
!9645 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9643, file: !9486, line: 294, baseType: !445, size: 128)
!9646 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !9643, file: !9486, line: 295, baseType: !428, size: 128, offset: 128)
!9647 = !DIDerivedType(tag: DW_TAG_member, name: "classify", scope: !9643, file: !9486, line: 297, baseType: !9606, size: 64, offset: 256)
!9648 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !9643, file: !9486, line: 300, baseType: !9649, size: 64, offset: 320)
!9649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9650, size: 64)
!9650 = !DISubroutineType(types: !9651)
!9651 = !{!7, !9600}
!9652 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !9643, file: !9486, line: 301, baseType: !9653, size: 64, offset: 384)
!9653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9654, size: 64)
!9654 = !DISubroutineType(types: !9655)
!9655 = !{null, !9600, !696, !2633}
!9656 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !9643, file: !9486, line: 304, baseType: !9657, size: 64, offset: 448)
!9657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9658, size: 64)
!9658 = !DISubroutineType(types: !9659)
!9659 = !{!726, !9600, !862}
!9660 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !9643, file: !9486, line: 305, baseType: !9661, size: 64, offset: 512)
!9661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9662, size: 64)
!9662 = !DISubroutineType(types: !9663)
!9663 = !{null, !9600, !726}
!9664 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !9643, file: !9486, line: 306, baseType: !9665, size: 64, offset: 576)
!9665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9666, size: 64)
!9666 = !DISubroutineType(types: !9667)
!9667 = !{!7, !2116, !576, !9600, !473, !862, !8157, !4075, !696, !696, !2633}
!9668 = !DIDerivedType(tag: DW_TAG_member, name: "delete", scope: !9643, file: !9486, line: 311, baseType: !9669, size: 64, offset: 640)
!9669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9670, size: 64)
!9670 = !DISubroutineType(types: !9671)
!9671 = !{!7, !9600, !726, !7211, !696, !2633}
!9672 = !DIDerivedType(tag: DW_TAG_member, name: "delete_empty", scope: !9643, file: !9486, line: 314, baseType: !9673, size: 64, offset: 704)
!9673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9674, size: 64)
!9674 = !DISubroutineType(types: !9675)
!9675 = !{!696, !9600}
!9676 = !DIDerivedType(tag: DW_TAG_member, name: "walk", scope: !9643, file: !9486, line: 315, baseType: !9677, size: 64, offset: 768)
!9677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9678, size: 64)
!9678 = !DISubroutineType(types: !9679)
!9679 = !{null, !9600, !9680, !696}
!9680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9681, size: 64)
!9681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_walker", file: !9682, line: 16, size: 256, elements: !9683)
!9682 = !DIFile(filename: "./include/net/pkt_cls.h", directory: "/home/lizy2001/genbc/linux")
!9683 = !{!9684, !9685, !9686, !9687, !9688, !9689}
!9684 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !9681, file: !9682, line: 17, baseType: !7, size: 32)
!9685 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !9681, file: !9682, line: 18, baseType: !7, size: 32, offset: 32)
!9686 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !9681, file: !9682, line: 19, baseType: !7, size: 32, offset: 64)
!9687 = !DIDerivedType(tag: DW_TAG_member, name: "nonempty", scope: !9681, file: !9682, line: 20, baseType: !696, size: 8, offset: 96)
!9688 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !9681, file: !9682, line: 21, baseType: !473, size: 64, offset: 128)
!9689 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9681, file: !9682, line: 22, baseType: !9690, size: 64, offset: 192)
!9690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9691, size: 64)
!9691 = !DISubroutineType(types: !9692)
!9692 = !{!7, !9600, !726, !9680}
!9693 = !DIDerivedType(tag: DW_TAG_member, name: "reoffload", scope: !9643, file: !9486, line: 317, baseType: !9694, size: 64, offset: 832)
!9694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9695, size: 64)
!9695 = !DISubroutineType(types: !9696)
!9696 = !{!7, !9600, !696, !9697, !726, !2633}
!9697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9698, size: 64)
!9698 = !DIDerivedType(tag: DW_TAG_typedef, name: "flow_setup_cb_t", file: !9583, line: 450, baseType: !9699)
!9699 = !DISubroutineType(types: !9700)
!9700 = !{!7, !287, !726, !726}
!9701 = !DIDerivedType(tag: DW_TAG_member, name: "hw_add", scope: !9643, file: !9486, line: 320, baseType: !9661, size: 64, offset: 896)
!9702 = !DIDerivedType(tag: DW_TAG_member, name: "hw_del", scope: !9643, file: !9486, line: 322, baseType: !9661, size: 64, offset: 960)
!9703 = !DIDerivedType(tag: DW_TAG_member, name: "bind_class", scope: !9643, file: !9486, line: 324, baseType: !9704, size: 64, offset: 1024)
!9704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9705, size: 64)
!9705 = !DISubroutineType(types: !9706)
!9706 = !{null, !726, !862, !473, !726, !473}
!9707 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_create", scope: !9643, file: !9486, line: 326, baseType: !9708, size: 64, offset: 1088)
!9708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9709, size: 64)
!9709 = !DISubroutineType(types: !9710)
!9710 = !{!726, !2116, !9595, !8157, !2633}
!9711 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_destroy", scope: !9643, file: !9486, line: 330, baseType: !3885, size: 64, offset: 1152)
!9712 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !9643, file: !9486, line: 333, baseType: !9713, size: 64, offset: 1216)
!9713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9714, size: 64)
!9714 = !DISubroutineType(types: !9715)
!9715 = !{!7, !2116, !9600, !726, !576, !9515, !696}
!9716 = !DIDerivedType(tag: DW_TAG_member, name: "terse_dump", scope: !9643, file: !9486, line: 336, baseType: !9713, size: 64, offset: 1280)
!9717 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_dump", scope: !9643, file: !9486, line: 340, baseType: !9718, size: 64, offset: 1344)
!9718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9719, size: 64)
!9719 = !DISubroutineType(types: !9720)
!9720 = !{!7, !576, !2116, !726}
!9721 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9643, file: !9486, line: 344, baseType: !1007, size: 64, offset: 1408)
!9722 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9643, file: !9486, line: 345, baseType: !7, size: 32, offset: 1472)
!9723 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !9601, file: !9486, line: 371, baseType: !9595, size: 64, offset: 384)
!9724 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9601, file: !9486, line: 375, baseType: !884, offset: 448)
!9725 = !DIDerivedType(tag: DW_TAG_member, name: "deleting", scope: !9601, file: !9486, line: 376, baseType: !696, size: 8, offset: 448)
!9726 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9601, file: !9486, line: 377, baseType: !1426, size: 32, offset: 480)
!9727 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9601, file: !9486, line: 378, baseType: !460, size: 128, align: 64, offset: 512)
!9728 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_ht_node", scope: !9601, file: !9486, line: 379, baseType: !437, size: 128, offset: 640)
!9729 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9596, file: !9486, line: 399, baseType: !445, size: 128, offset: 256)
!9730 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !9596, file: !9486, line: 400, baseType: !9570, size: 64, offset: 384)
!9731 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !9596, file: !9486, line: 401, baseType: !862, size: 32, offset: 448)
!9732 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9596, file: !9486, line: 402, baseType: !14, size: 32, offset: 480)
!9733 = !DIDerivedType(tag: DW_TAG_member, name: "action_refcnt", scope: !9596, file: !9486, line: 403, baseType: !14, size: 32, offset: 512)
!9734 = !DIDerivedType(tag: DW_TAG_member, name: "explicitly_created", scope: !9596, file: !9486, line: 404, baseType: !696, size: 8, offset: 544)
!9735 = !DIDerivedType(tag: DW_TAG_member, name: "flushing", scope: !9596, file: !9486, line: 405, baseType: !696, size: 8, offset: 552)
!9736 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_ops", scope: !9596, file: !9486, line: 406, baseType: !9641, size: 64, offset: 576)
!9737 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_priv", scope: !9596, file: !9486, line: 407, baseType: !726, size: 64, offset: 640)
!9738 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9596, file: !9486, line: 408, baseType: !460, size: 128, align: 64, offset: 704)
!9739 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain_list", scope: !9592, file: !9486, line: 431, baseType: !445, size: 128, offset: 64)
!9740 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9571, file: !9486, line: 433, baseType: !460, size: 128, align: 64, offset: 1408)
!9741 = !DIDerivedType(tag: DW_TAG_member, name: "proto_destroy_ht", scope: !9571, file: !9486, line: 434, baseType: !9742, size: 8192, offset: 1536)
!9742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 8192, elements: !3586)
!9743 = !DIDerivedType(tag: DW_TAG_member, name: "proto_destroy_lock", scope: !9571, file: !9486, line: 435, baseType: !1109, size: 192, offset: 9728)
!9744 = !DIDerivedType(tag: DW_TAG_member, name: "bind_tcf", scope: !9508, file: !9486, line: 220, baseType: !9745, size: 64, offset: 640)
!9745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9746, size: 64)
!9746 = !DISubroutineType(types: !9747)
!9747 = !{!473, !9484, !473, !862}
!9748 = !DIDerivedType(tag: DW_TAG_member, name: "unbind_tcf", scope: !9508, file: !9486, line: 222, baseType: !9536, size: 64, offset: 704)
!9749 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !9508, file: !9486, line: 225, baseType: !9750, size: 64, offset: 768)
!9750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9751, size: 64)
!9751 = !DISubroutineType(types: !9752)
!9752 = !{!7, !9484, !473, !576, !9515}
!9753 = !DIDerivedType(tag: DW_TAG_member, name: "dump_stats", scope: !9508, file: !9486, line: 227, baseType: !9754, size: 64, offset: 832)
!9754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9755, size: 64)
!9755 = !DISubroutineType(types: !9756)
!9756 = !{!7, !9484, !473, !9757}
!9757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9758, size: 64)
!9758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_dump", file: !9759, line: 23, size: 768, elements: !9760)
!9759 = !DIFile(filename: "./include/net/gen_stats.h", directory: "/home/lizy2001/genbc/linux")
!9760 = !{!9761, !9762, !9763, !9764, !9765, !9766, !9767, !9768, !9769}
!9761 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9758, file: !9759, line: 24, baseType: !4685, size: 64)
!9762 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !9758, file: !9759, line: 25, baseType: !576, size: 64, offset: 64)
!9763 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9758, file: !9759, line: 26, baseType: !8158, size: 64, offset: 128)
!9764 = !DIDerivedType(tag: DW_TAG_member, name: "compat_tc_stats", scope: !9758, file: !9759, line: 29, baseType: !7, size: 32, offset: 192)
!9765 = !DIDerivedType(tag: DW_TAG_member, name: "compat_xstats", scope: !9758, file: !9759, line: 30, baseType: !7, size: 32, offset: 224)
!9766 = !DIDerivedType(tag: DW_TAG_member, name: "padattr", scope: !9758, file: !9759, line: 31, baseType: !7, size: 32, offset: 256)
!9767 = !DIDerivedType(tag: DW_TAG_member, name: "xstats", scope: !9758, file: !9759, line: 32, baseType: !726, size: 64, offset: 320)
!9768 = !DIDerivedType(tag: DW_TAG_member, name: "xstats_len", scope: !9758, file: !9759, line: 33, baseType: !7, size: 32, offset: 384)
!9769 = !DIDerivedType(tag: DW_TAG_member, name: "tc_stats", scope: !9758, file: !9759, line: 34, baseType: !9770, size: 320, offset: 448)
!9770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_stats", file: !9771, line: 34, size: 320, elements: !9772)
!9771 = !DIFile(filename: "./include/uapi/linux/pkt_sched.h", directory: "/home/lizy2001/genbc/linux")
!9772 = !{!9773, !9774, !9775, !9776, !9777, !9778, !9779, !9780}
!9773 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !9770, file: !9771, line: 35, baseType: !494, size: 64)
!9774 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !9770, file: !9771, line: 36, baseType: !624, size: 32, offset: 64)
!9775 = !DIDerivedType(tag: DW_TAG_member, name: "drops", scope: !9770, file: !9771, line: 37, baseType: !624, size: 32, offset: 96)
!9776 = !DIDerivedType(tag: DW_TAG_member, name: "overlimits", scope: !9770, file: !9771, line: 38, baseType: !624, size: 32, offset: 128)
!9777 = !DIDerivedType(tag: DW_TAG_member, name: "bps", scope: !9770, file: !9771, line: 40, baseType: !624, size: 32, offset: 160)
!9778 = !DIDerivedType(tag: DW_TAG_member, name: "pps", scope: !9770, file: !9771, line: 41, baseType: !624, size: 32, offset: 192)
!9779 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !9770, file: !9771, line: 42, baseType: !624, size: 32, offset: 224)
!9780 = !DIDerivedType(tag: DW_TAG_member, name: "backlog", scope: !9770, file: !9771, line: 43, baseType: !624, size: 32, offset: 256)
!9781 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9501, file: !9486, line: 241, baseType: !428, size: 128, offset: 128)
!9782 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !9501, file: !9486, line: 242, baseType: !7, size: 32, offset: 256)
!9783 = !DIDerivedType(tag: DW_TAG_member, name: "static_flags", scope: !9501, file: !9486, line: 243, baseType: !14, size: 32, offset: 288)
!9784 = !DIDerivedType(tag: DW_TAG_member, name: "enqueue", scope: !9501, file: !9486, line: 245, baseType: !9489, size: 64, offset: 320)
!9785 = !DIDerivedType(tag: DW_TAG_member, name: "dequeue", scope: !9501, file: !9486, line: 248, baseType: !9493, size: 64, offset: 384)
!9786 = !DIDerivedType(tag: DW_TAG_member, name: "peek", scope: !9501, file: !9486, line: 249, baseType: !9493, size: 64, offset: 448)
!9787 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !9501, file: !9486, line: 251, baseType: !9788, size: 64, offset: 512)
!9788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9789, size: 64)
!9789 = !DISubroutineType(types: !9790)
!9790 = !{!7, !9484, !8158, !2633}
!9791 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !9501, file: !9486, line: 253, baseType: !9792, size: 64, offset: 576)
!9792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9793, size: 64)
!9793 = !DISubroutineType(types: !9794)
!9794 = !{null, !9484}
!9795 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !9501, file: !9486, line: 254, baseType: !9792, size: 64, offset: 640)
!9796 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !9501, file: !9486, line: 255, baseType: !9788, size: 64, offset: 704)
!9797 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !9501, file: !9486, line: 258, baseType: !9792, size: 64, offset: 768)
!9798 = !DIDerivedType(tag: DW_TAG_member, name: "change_tx_queue_len", scope: !9501, file: !9486, line: 259, baseType: !9799, size: 64, offset: 832)
!9799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9800, size: 64)
!9800 = !DISubroutineType(types: !9801)
!9801 = !{!7, !9484, !14}
!9802 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !9501, file: !9486, line: 261, baseType: !9803, size: 64, offset: 896)
!9803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9804, size: 64)
!9804 = !DISubroutineType(types: !9805)
!9805 = !{!7, !9484, !576}
!9806 = !DIDerivedType(tag: DW_TAG_member, name: "dump_stats", scope: !9501, file: !9486, line: 262, baseType: !9807, size: 64, offset: 960)
!9807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9808, size: 64)
!9808 = !DISubroutineType(types: !9809)
!9809 = !{!7, !9484, !9757}
!9810 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_block_set", scope: !9501, file: !9486, line: 264, baseType: !9811, size: 64, offset: 1024)
!9811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9812, size: 64)
!9812 = !DISubroutineType(types: !9813)
!9813 = !{null, !9484, !862}
!9814 = !DIDerivedType(tag: DW_TAG_member, name: "egress_block_set", scope: !9501, file: !9486, line: 266, baseType: !9811, size: 64, offset: 1088)
!9815 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_block_get", scope: !9501, file: !9486, line: 268, baseType: !9816, size: 64, offset: 1152)
!9816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9817, size: 64)
!9817 = !DISubroutineType(types: !9818)
!9818 = !{!862, !9484}
!9819 = !DIDerivedType(tag: DW_TAG_member, name: "egress_block_get", scope: !9501, file: !9486, line: 269, baseType: !9816, size: 64, offset: 1216)
!9820 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9501, file: !9486, line: 271, baseType: !1007, size: 64, offset: 1280)
!9821 = !DIDerivedType(tag: DW_TAG_member, name: "stab", scope: !9485, file: !9486, line: 84, baseType: !9822, size: 64, offset: 256)
!9822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9823, size: 64)
!9823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_size_table", file: !9486, line: 41, size: 512, elements: !9824)
!9824 = !{!9825, !9826, !9827, !9838, !9839}
!9825 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9823, file: !9486, line: 42, baseType: !460, size: 128, align: 64)
!9826 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9823, file: !9486, line: 43, baseType: !445, size: 128, offset: 128)
!9827 = !DIDerivedType(tag: DW_TAG_member, name: "szopts", scope: !9823, file: !9486, line: 44, baseType: !9828, size: 192, offset: 256)
!9828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_sizespec", file: !9771, line: 102, size: 192, elements: !9829)
!9829 = !{!9830, !9831, !9832, !9833, !9834, !9835, !9836, !9837}
!9830 = !DIDerivedType(tag: DW_TAG_member, name: "cell_log", scope: !9828, file: !9771, line: 103, baseType: !650, size: 8)
!9831 = !DIDerivedType(tag: DW_TAG_member, name: "size_log", scope: !9828, file: !9771, line: 104, baseType: !650, size: 8, offset: 8)
!9832 = !DIDerivedType(tag: DW_TAG_member, name: "cell_align", scope: !9828, file: !9771, line: 105, baseType: !1401, size: 16, offset: 16)
!9833 = !DIDerivedType(tag: DW_TAG_member, name: "overhead", scope: !9828, file: !9771, line: 106, baseType: !7, size: 32, offset: 32)
!9834 = !DIDerivedType(tag: DW_TAG_member, name: "linklayer", scope: !9828, file: !9771, line: 107, baseType: !14, size: 32, offset: 64)
!9835 = !DIDerivedType(tag: DW_TAG_member, name: "mpu", scope: !9828, file: !9771, line: 108, baseType: !14, size: 32, offset: 96)
!9836 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !9828, file: !9771, line: 109, baseType: !14, size: 32, offset: 128)
!9837 = !DIDerivedType(tag: DW_TAG_member, name: "tsize", scope: !9828, file: !9771, line: 110, baseType: !14, size: 32, offset: 160)
!9838 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9823, file: !9486, line: 45, baseType: !7, size: 32, offset: 448)
!9839 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9823, file: !9486, line: 46, baseType: !9840, offset: 480)
!9840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1193, elements: !470)
!9841 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !9485, file: !9486, line: 85, baseType: !437, size: 128, offset: 320)
!9842 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !9485, file: !9486, line: 86, baseType: !862, size: 32, offset: 448)
!9843 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !9485, file: !9486, line: 87, baseType: !862, size: 32, offset: 480)
!9844 = !DIDerivedType(tag: DW_TAG_member, name: "dev_queue", scope: !9485, file: !9486, line: 89, baseType: !9479, size: 64, offset: 512)
!9845 = !DIDerivedType(tag: DW_TAG_member, name: "rate_est", scope: !9485, file: !9486, line: 91, baseType: !9846, size: 64, offset: 576)
!9846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9847, size: 64)
!9847 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_rate_estimator", file: !9759, line: 21, flags: DIFlagFwdDecl)
!9848 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bstats", scope: !9485, file: !9486, line: 92, baseType: !9849, size: 64, offset: 640)
!9849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9850, size: 64)
!9850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_basic_cpu", file: !9759, line: 16, size: 128, align: 128, elements: !9851)
!9851 = !{!9852, !9857}
!9852 = !DIDerivedType(tag: DW_TAG_member, name: "bstats", scope: !9850, file: !9759, line: 17, baseType: !9853, size: 128)
!9853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_basic_packed", file: !9759, line: 11, size: 128, elements: !9854)
!9854 = !{!9855, !9856}
!9855 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !9853, file: !9759, line: 12, baseType: !494, size: 64)
!9856 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !9853, file: !9759, line: 13, baseType: !494, size: 64, offset: 64)
!9857 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !9850, file: !9759, line: 18, baseType: !2212, offset: 128)
!9858 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_qstats", scope: !9485, file: !9486, line: 93, baseType: !9628, size: 64, offset: 704)
!9859 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9485, file: !9486, line: 94, baseType: !7, size: 32, offset: 768)
!9860 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9485, file: !9486, line: 95, baseType: !1426, size: 32, offset: 800)
!9861 = !DIDerivedType(tag: DW_TAG_member, name: "gso_skb", scope: !9485, file: !9486, line: 100, baseType: !3103, size: 192, offset: 832)
!9862 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !9485, file: !9486, line: 101, baseType: !9863, size: 192, offset: 1024)
!9863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_skb_head", file: !9486, line: 50, size: 192, elements: !9864)
!9864 = !{!9865, !9866, !9867, !9868}
!9865 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9863, file: !9486, line: 51, baseType: !576, size: 64)
!9866 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9863, file: !9486, line: 52, baseType: !576, size: 64, offset: 64)
!9867 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !9863, file: !9486, line: 53, baseType: !624, size: 32, offset: 128)
!9868 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9863, file: !9486, line: 54, baseType: !884, offset: 160)
!9869 = !DIDerivedType(tag: DW_TAG_member, name: "bstats", scope: !9485, file: !9486, line: 102, baseType: !9853, size: 128, offset: 1216)
!9870 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !9485, file: !9486, line: 103, baseType: !839, size: 32, offset: 1344)
!9871 = !DIDerivedType(tag: DW_TAG_member, name: "qstats", scope: !9485, file: !9486, line: 104, baseType: !9629, size: 160, offset: 1376)
!9872 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9485, file: !9486, line: 105, baseType: !473, size: 64, offset: 1536)
!9873 = !DIDerivedType(tag: DW_TAG_member, name: "next_sched", scope: !9485, file: !9486, line: 106, baseType: !9484, size: 64, offset: 1600)
!9874 = !DIDerivedType(tag: DW_TAG_member, name: "skb_bad_txq", scope: !9485, file: !9486, line: 107, baseType: !3103, size: 192, offset: 1664)
!9875 = !DIDerivedType(tag: DW_TAG_member, name: "busylock", scope: !9485, file: !9486, line: 109, baseType: !884, offset: 1856)
!9876 = !DIDerivedType(tag: DW_TAG_member, name: "seqlock", scope: !9485, file: !9486, line: 110, baseType: !884, offset: 1856)
!9877 = !DIDerivedType(tag: DW_TAG_member, name: "empty", scope: !9485, file: !9486, line: 113, baseType: !696, size: 8, offset: 1856)
!9878 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9485, file: !9486, line: 114, baseType: !460, size: 128, align: 64, offset: 1920)
!9879 = !DIDerivedType(tag: DW_TAG_member, name: "privdata", scope: !9485, file: !9486, line: 117, baseType: !9880, align: 512, offset: 2048)
!9880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !669, elements: !470)
!9881 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_sleeping", scope: !9480, file: !6, line: 590, baseType: !9484, size: 64, offset: 128)
!9882 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !9480, file: !6, line: 592, baseType: !4401, size: 512, offset: 192)
!9883 = !DIDerivedType(tag: DW_TAG_member, name: "tx_maxrate", scope: !9480, file: !6, line: 597, baseType: !473, size: 64, offset: 704)
!9884 = !DIDerivedType(tag: DW_TAG_member, name: "trans_timeout", scope: !9480, file: !6, line: 602, baseType: !473, size: 64, offset: 768)
!9885 = !DIDerivedType(tag: DW_TAG_member, name: "sb_dev", scope: !9480, file: !6, line: 605, baseType: !451, size: 64, offset: 832)
!9886 = !DIDerivedType(tag: DW_TAG_member, name: "_xmit_lock", scope: !9480, file: !6, line: 612, baseType: !884, offset: 896)
!9887 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_lock_owner", scope: !9480, file: !6, line: 613, baseType: !7, size: 32, offset: 896)
!9888 = !DIDerivedType(tag: DW_TAG_member, name: "trans_start", scope: !9480, file: !6, line: 617, baseType: !473, size: 64, offset: 960)
!9889 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9480, file: !6, line: 619, baseType: !473, size: 64, offset: 1024)
!9890 = !DIDerivedType(tag: DW_TAG_member, name: "dql", scope: !9480, file: !6, line: 622, baseType: !9891, size: 512, offset: 1088)
!9891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dql", file: !9892, line: 43, size: 512, elements: !9893)
!9892 = !DIFile(filename: "./include/linux/dynamic_queue_limits.h", directory: "/home/lizy2001/genbc/linux")
!9893 = !{!9894, !9895, !9896, !9897, !9898, !9899, !9900, !9901, !9902, !9903, !9904, !9905, !9906}
!9894 = !DIDerivedType(tag: DW_TAG_member, name: "num_queued", scope: !9891, file: !9892, line: 45, baseType: !14, size: 32)
!9895 = !DIDerivedType(tag: DW_TAG_member, name: "adj_limit", scope: !9891, file: !9892, line: 46, baseType: !14, size: 32, offset: 32)
!9896 = !DIDerivedType(tag: DW_TAG_member, name: "last_obj_cnt", scope: !9891, file: !9892, line: 47, baseType: !14, size: 32, offset: 64)
!9897 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !9891, file: !9892, line: 51, baseType: !14, size: 32, offset: 96)
!9898 = !DIDerivedType(tag: DW_TAG_member, name: "num_completed", scope: !9891, file: !9892, line: 52, baseType: !14, size: 32, offset: 128)
!9899 = !DIDerivedType(tag: DW_TAG_member, name: "prev_ovlimit", scope: !9891, file: !9892, line: 54, baseType: !14, size: 32, offset: 160)
!9900 = !DIDerivedType(tag: DW_TAG_member, name: "prev_num_queued", scope: !9891, file: !9892, line: 55, baseType: !14, size: 32, offset: 192)
!9901 = !DIDerivedType(tag: DW_TAG_member, name: "prev_last_obj_cnt", scope: !9891, file: !9892, line: 56, baseType: !14, size: 32, offset: 224)
!9902 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_slack", scope: !9891, file: !9892, line: 58, baseType: !14, size: 32, offset: 256)
!9903 = !DIDerivedType(tag: DW_TAG_member, name: "slack_start_time", scope: !9891, file: !9892, line: 59, baseType: !473, size: 64, offset: 320)
!9904 = !DIDerivedType(tag: DW_TAG_member, name: "max_limit", scope: !9891, file: !9892, line: 62, baseType: !14, size: 32, offset: 384)
!9905 = !DIDerivedType(tag: DW_TAG_member, name: "min_limit", scope: !9891, file: !9892, line: 63, baseType: !14, size: 32, offset: 416)
!9906 = !DIDerivedType(tag: DW_TAG_member, name: "slack_hold_time", scope: !9891, file: !9892, line: 64, baseType: !14, size: 32, offset: 448)
!9907 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !425, file: !6, line: 2045, baseType: !870, size: 256, offset: 6528)
!9908 = !DIDerivedType(tag: DW_TAG_member, name: "index_hlist", scope: !425, file: !6, line: 2049, baseType: !437, size: 128, offset: 6784)
!9909 = !DIDerivedType(tag: DW_TAG_member, name: "_tx", scope: !425, file: !6, line: 2054, baseType: !9479, size: 64, offset: 6912)
!9910 = !DIDerivedType(tag: DW_TAG_member, name: "num_tx_queues", scope: !425, file: !6, line: 2055, baseType: !14, size: 32, offset: 6976)
!9911 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_tx_queues", scope: !425, file: !6, line: 2056, baseType: !14, size: 32, offset: 7008)
!9912 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !425, file: !6, line: 2057, baseType: !9484, size: 64, offset: 7040)
!9913 = !DIDerivedType(tag: DW_TAG_member, name: "tx_queue_len", scope: !425, file: !6, line: 2058, baseType: !14, size: 32, offset: 7104)
!9914 = !DIDerivedType(tag: DW_TAG_member, name: "tx_global_lock", scope: !425, file: !6, line: 2059, baseType: !884, offset: 7136)
!9915 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_bulkq", scope: !425, file: !6, line: 2061, baseType: !9916, size: 64, offset: 7168)
!9916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9917, size: 64)
!9917 = !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_dev_bulk_queue", file: !6, line: 879, flags: DIFlagFwdDecl)
!9918 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timer", scope: !425, file: !6, line: 2075, baseType: !2401, size: 320, offset: 7232)
!9919 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timeo", scope: !425, file: !6, line: 2076, baseType: !7, size: 32, offset: 7552)
!9920 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down_reason", scope: !425, file: !6, line: 2078, baseType: !862, size: 32, offset: 7584)
!9921 = !DIDerivedType(tag: DW_TAG_member, name: "todo_list", scope: !425, file: !6, line: 2080, baseType: !445, size: 128, offset: 7616)
!9922 = !DIDerivedType(tag: DW_TAG_member, name: "pcpu_refcnt", scope: !425, file: !6, line: 2081, baseType: !695, size: 64, offset: 7744)
!9923 = !DIDerivedType(tag: DW_TAG_member, name: "link_watch_list", scope: !425, file: !6, line: 2083, baseType: !445, size: 128, offset: 7808)
!9924 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !425, file: !6, line: 2091, baseType: !424, size: 8, offset: 7936, flags: DIFlagBitField, extraData: i64 7936)
!9925 = !DIDerivedType(tag: DW_TAG_member, name: "dismantle", scope: !425, file: !6, line: 2093, baseType: !696, size: 8, offset: 7944)
!9926 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_state", scope: !425, file: !6, line: 2098, baseType: !9927, size: 16, offset: 7952, flags: DIFlagBitField, extraData: i64 7952)
!9927 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !425, file: !6, line: 2095, baseType: !14, size: 32, elements: !9928)
!9928 = !{!9929, !9930}
!9929 = !DIEnumerator(name: "RTNL_LINK_INITIALIZED", value: 0, isUnsigned: true)
!9930 = !DIEnumerator(name: "RTNL_LINK_INITIALIZING", value: 1, isUnsigned: true)
!9931 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free_netdev", scope: !425, file: !6, line: 2100, baseType: !696, size: 8, offset: 7968)
!9932 = !DIDerivedType(tag: DW_TAG_member, name: "priv_destructor", scope: !425, file: !6, line: 2101, baseType: !566, size: 64, offset: 8000)
!9933 = !DIDerivedType(tag: DW_TAG_member, name: "nd_net", scope: !425, file: !6, line: 2107, baseType: !3045, size: 64, offset: 8064)
!9934 = !DIDerivedType(tag: DW_TAG_member, scope: !425, file: !6, line: 2110, baseType: !9935, size: 64, offset: 8128)
!9935 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !425, file: !6, line: 2110, size: 64, elements: !9936)
!9936 = !{!9937, !9938, !9959, !9968}
!9937 = !DIDerivedType(tag: DW_TAG_member, name: "ml_priv", scope: !9935, file: !6, line: 2111, baseType: !726, size: 64)
!9938 = !DIDerivedType(tag: DW_TAG_member, name: "lstats", scope: !9935, file: !6, line: 2112, baseType: !9939, size: 64)
!9939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9940, size: 64)
!9940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_lstats", file: !6, line: 2542, size: 128, align: 128, elements: !9941)
!9941 = !{!9942, !9957, !9958}
!9942 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !9940, file: !6, line: 2543, baseType: !9943, size: 64)
!9943 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64_stats_t", file: !2213, line: 79, baseType: !9944)
!9944 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2213, line: 77, size: 64, elements: !9945)
!9945 = !{!9946}
!9946 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !9944, file: !2213, line: 78, baseType: !9947, size: 64)
!9947 = !DIDerivedType(tag: DW_TAG_typedef, name: "local64_t", file: !9948, line: 26, baseType: !9949)
!9948 = !DIFile(filename: "./include/asm-generic/local64.h", directory: "/home/lizy2001/genbc/linux")
!9949 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9948, line: 24, size: 64, elements: !9950)
!9950 = !{!9951}
!9951 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !9949, file: !9948, line: 25, baseType: !9952, size: 64)
!9952 = !DIDerivedType(tag: DW_TAG_typedef, name: "local_t", file: !9953, line: 12, baseType: !9954)
!9953 = !DIFile(filename: "./arch/x86/include/asm/local.h", directory: "/home/lizy2001/genbc/linux")
!9954 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9953, line: 10, size: 64, elements: !9955)
!9955 = !{!9956}
!9956 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !9954, file: !9953, line: 11, baseType: !532, size: 64)
!9957 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !9940, file: !6, line: 2544, baseType: !9943, size: 64, offset: 64)
!9958 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !9940, file: !6, line: 2545, baseType: !2212, offset: 128)
!9959 = !DIDerivedType(tag: DW_TAG_member, name: "tstats", scope: !9935, file: !6, line: 2113, baseType: !9960, size: 64)
!9960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9961, size: 64)
!9961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_sw_netstats", file: !6, line: 2534, size: 256, align: 256, elements: !9962)
!9962 = !{!9963, !9964, !9965, !9966, !9967}
!9963 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !9961, file: !6, line: 2535, baseType: !492, size: 64)
!9964 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !9961, file: !6, line: 2536, baseType: !492, size: 64, offset: 64)
!9965 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !9961, file: !6, line: 2537, baseType: !492, size: 64, offset: 128)
!9966 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !9961, file: !6, line: 2538, baseType: !492, size: 64, offset: 192)
!9967 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !9961, file: !6, line: 2539, baseType: !2212, offset: 256)
!9968 = !DIDerivedType(tag: DW_TAG_member, name: "dstats", scope: !9935, file: !6, line: 2114, baseType: !9969, size: 64)
!9969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9970, size: 64)
!9970 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_dstats", file: !6, line: 2114, flags: DIFlagFwdDecl)
!9971 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !425, file: !6, line: 2124, baseType: !4398, size: 5568, offset: 8192)
!9972 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_groups", scope: !425, file: !6, line: 2125, baseType: !9973, size: 256, offset: 13760)
!9973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4479, size: 256, elements: !1357)
!9974 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_rx_queue_group", scope: !425, file: !6, line: 2126, baseType: !4479, size: 64, offset: 14016)
!9975 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_ops", scope: !425, file: !6, line: 2128, baseType: !9976, size: 64, offset: 14080)
!9976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9977, size: 64)
!9977 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9978)
!9978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_ops", file: !9979, line: 59, size: 1600, elements: !9980)
!9979 = !DIFile(filename: "./include/net/rtnetlink.h", directory: "/home/lizy2001/genbc/linux")
!9980 = !{!9981, !9982, !9983, !9984, !9985, !9986, !9987, !9991, !9995, !9999, !10003, !10007, !10011, !10012, !10013, !10017, !10018, !10019, !10020, !10024, !10028, !10032, !10036, !10040}
!9981 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9978, file: !9979, line: 60, baseType: !445, size: 128)
!9982 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !9978, file: !9979, line: 62, baseType: !453, size: 64, offset: 128)
!9983 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !9978, file: !9979, line: 64, baseType: !750, size: 64, offset: 192)
!9984 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !9978, file: !9979, line: 65, baseType: !566, size: 64, offset: 256)
!9985 = !DIDerivedType(tag: DW_TAG_member, name: "maxtype", scope: !9978, file: !9979, line: 67, baseType: !14, size: 32, offset: 320)
!9986 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !9978, file: !9979, line: 68, baseType: !2647, size: 64, offset: 384)
!9987 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !9978, file: !9979, line: 69, baseType: !9988, size: 64, offset: 448)
!9988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9989, size: 64)
!9989 = !DISubroutineType(types: !9990)
!9990 = !{!7, !8157, !8157, !2633}
!9991 = !DIDerivedType(tag: DW_TAG_member, name: "newlink", scope: !9978, file: !9979, line: 73, baseType: !9992, size: 64, offset: 512)
!9992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9993, size: 64)
!9993 = !DISubroutineType(types: !9994)
!9994 = !{!7, !2116, !451, !8157, !8157, !2633}
!9995 = !DIDerivedType(tag: DW_TAG_member, name: "changelink", scope: !9978, file: !9979, line: 78, baseType: !9996, size: 64, offset: 576)
!9996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9997, size: 64)
!9997 = !DISubroutineType(types: !9998)
!9998 = !{!7, !451, !8157, !8157, !2633}
!9999 = !DIDerivedType(tag: DW_TAG_member, name: "dellink", scope: !9978, file: !9979, line: 82, baseType: !10000, size: 64, offset: 640)
!10000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10001, size: 64)
!10001 = !DISubroutineType(types: !10002)
!10002 = !{null, !451, !448}
!10003 = !DIDerivedType(tag: DW_TAG_member, name: "get_size", scope: !9978, file: !9979, line: 85, baseType: !10004, size: 64, offset: 704)
!10004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10005, size: 64)
!10005 = !DISubroutineType(types: !10006)
!10006 = !{!750, !3023}
!10007 = !DIDerivedType(tag: DW_TAG_member, name: "fill_info", scope: !9978, file: !9979, line: 86, baseType: !10008, size: 64, offset: 768)
!10008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10009, size: 64)
!10009 = !DISubroutineType(types: !10010)
!10010 = !{!7, !576, !3023}
!10011 = !DIDerivedType(tag: DW_TAG_member, name: "get_xstats_size", scope: !9978, file: !9979, line: 89, baseType: !10004, size: 64, offset: 832)
!10012 = !DIDerivedType(tag: DW_TAG_member, name: "fill_xstats", scope: !9978, file: !9979, line: 90, baseType: !10008, size: 64, offset: 896)
!10013 = !DIDerivedType(tag: DW_TAG_member, name: "get_num_tx_queues", scope: !9978, file: !9979, line: 92, baseType: !10014, size: 64, offset: 960)
!10014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10015, size: 64)
!10015 = !DISubroutineType(types: !10016)
!10016 = !{!14}
!10017 = !DIDerivedType(tag: DW_TAG_member, name: "get_num_rx_queues", scope: !9978, file: !9979, line: 93, baseType: !10014, size: 64, offset: 1024)
!10018 = !DIDerivedType(tag: DW_TAG_member, name: "slave_maxtype", scope: !9978, file: !9979, line: 95, baseType: !14, size: 32, offset: 1088)
!10019 = !DIDerivedType(tag: DW_TAG_member, name: "slave_policy", scope: !9978, file: !9979, line: 96, baseType: !2647, size: 64, offset: 1152)
!10020 = !DIDerivedType(tag: DW_TAG_member, name: "slave_changelink", scope: !9978, file: !9979, line: 97, baseType: !10021, size: 64, offset: 1216)
!10021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10022, size: 64)
!10022 = !DISubroutineType(types: !10023)
!10023 = !{!7, !451, !451, !8157, !8157, !2633}
!10024 = !DIDerivedType(tag: DW_TAG_member, name: "get_slave_size", scope: !9978, file: !9979, line: 102, baseType: !10025, size: 64, offset: 1280)
!10025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10026, size: 64)
!10026 = !DISubroutineType(types: !10027)
!10027 = !{!750, !3023, !3023}
!10028 = !DIDerivedType(tag: DW_TAG_member, name: "fill_slave_info", scope: !9978, file: !9979, line: 104, baseType: !10029, size: 64, offset: 1344)
!10029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10030, size: 64)
!10030 = !DISubroutineType(types: !10031)
!10031 = !{!7, !576, !3023, !3023}
!10032 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_net", scope: !9978, file: !9979, line: 107, baseType: !10033, size: 64, offset: 1408)
!10033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10034, size: 64)
!10034 = !DISubroutineType(types: !10035)
!10035 = !{!2116, !3023}
!10036 = !DIDerivedType(tag: DW_TAG_member, name: "get_linkxstats_size", scope: !9978, file: !9979, line: 108, baseType: !10037, size: 64, offset: 1472)
!10037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10038, size: 64)
!10038 = !DISubroutineType(types: !10039)
!10039 = !{!750, !3023, !7}
!10040 = !DIDerivedType(tag: DW_TAG_member, name: "fill_linkxstats", scope: !9978, file: !9979, line: 110, baseType: !10041, size: 64, offset: 1536)
!10041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10042, size: 64)
!10042 = !DISubroutineType(types: !10043)
!10043 = !{!7, !576, !3023, !695, !7}
!10044 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_size", scope: !425, file: !6, line: 2132, baseType: !14, size: 32, offset: 14144)
!10045 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_segs", scope: !425, file: !6, line: 2134, baseType: !1193, size: 16, offset: 14176)
!10046 = !DIDerivedType(tag: DW_TAG_member, name: "num_tc", scope: !425, file: !6, line: 2139, baseType: !1399, size: 16, offset: 14192)
!10047 = !DIDerivedType(tag: DW_TAG_member, name: "tc_to_txq", scope: !425, file: !6, line: 2140, baseType: !10048, size: 512, offset: 14208)
!10048 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10049, size: 512, elements: !430)
!10049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_tc_txq", file: !6, line: 793, size: 32, elements: !10050)
!10050 = !{!10051, !10052}
!10051 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !10049, file: !6, line: 794, baseType: !1193, size: 16)
!10052 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !10049, file: !6, line: 795, baseType: !1193, size: 16, offset: 16)
!10053 = !DIDerivedType(tag: DW_TAG_member, name: "prio_tc_map", scope: !425, file: !6, line: 2141, baseType: !10054, size: 128, offset: 14720)
!10054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1552, size: 128, elements: !430)
!10055 = !DIDerivedType(tag: DW_TAG_member, name: "phydev", scope: !425, file: !6, line: 2149, baseType: !10056, size: 64, offset: 14848)
!10056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10057, size: 64)
!10057 = !DICompositeType(tag: DW_TAG_structure_type, name: "phy_device", file: !412, line: 536, flags: DIFlagFwdDecl)
!10058 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus", scope: !425, file: !6, line: 2150, baseType: !10059, size: 64, offset: 14912)
!10059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10060, size: 64)
!10060 = !DICompositeType(tag: DW_TAG_structure_type, name: "sfp_bus", file: !6, line: 60, flags: DIFlagFwdDecl)
!10061 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_tx_busylock", scope: !425, file: !6, line: 2151, baseType: !10062, size: 64, offset: 14976)
!10062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 64)
!10063 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_running_key", scope: !425, file: !6, line: 2152, baseType: !10062, size: 64, offset: 15040)
!10064 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down", scope: !425, file: !6, line: 2153, baseType: !696, size: 8, offset: 15104)
!10065 = !DIDerivedType(tag: DW_TAG_member, name: "wol_enabled", scope: !425, file: !6, line: 2154, baseType: !14, size: 1, offset: 15112, flags: DIFlagBitField, extraData: i64 15112)
!10066 = !DIDerivedType(tag: DW_TAG_member, name: "net_notifier_list", scope: !425, file: !6, line: 2156, baseType: !445, size: 128, offset: 15168)
!10067 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic_info", scope: !425, file: !6, line: 2162, baseType: !10068, size: 64, offset: 15296)
!10068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10069, size: 64)
!10069 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10070)
!10070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_info", file: !8311, line: 247, size: 576, elements: !10071)
!10071 = !{!10072, !10076, !10077, !10081, !10089, !10090}
!10072 = !DIDerivedType(tag: DW_TAG_member, name: "set_port", scope: !10070, file: !8311, line: 249, baseType: !10073, size: 64)
!10073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10074, size: 64)
!10074 = !DISubroutineType(types: !10075)
!10075 = !{!7, !451, !14, !14, !8309}
!10076 = !DIDerivedType(tag: DW_TAG_member, name: "unset_port", scope: !10070, file: !8311, line: 252, baseType: !10073, size: 64, offset: 64)
!10077 = !DIDerivedType(tag: DW_TAG_member, name: "sync_table", scope: !10070, file: !8311, line: 257, baseType: !10078, size: 64, offset: 128)
!10078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10079, size: 64)
!10079 = !DISubroutineType(types: !10080)
!10080 = !{!7, !451, !14}
!10081 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !10070, file: !8311, line: 259, baseType: !10082, size: 64, offset: 192)
!10082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10083, size: 64)
!10083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_shared", file: !8311, line: 207, size: 192, elements: !10084)
!10084 = !{!10085, !10088}
!10085 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic_info", scope: !10083, file: !8311, line: 208, baseType: !10086, size: 64)
!10086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10087, size: 64)
!10087 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic", file: !6, line: 69, flags: DIFlagFwdDecl)
!10088 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !10083, file: !8311, line: 210, baseType: !445, size: 128, offset: 64)
!10089 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10070, file: !8311, line: 261, baseType: !14, size: 32, offset: 256)
!10090 = !DIDerivedType(tag: DW_TAG_member, name: "tables", scope: !10070, file: !8311, line: 266, baseType: !10091, size: 256, offset: 288)
!10091 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10092, size: 256, elements: !1357)
!10092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_table_info", file: !8311, line: 263, size: 64, elements: !10093)
!10093 = !{!10094, !10095}
!10094 = !DIDerivedType(tag: DW_TAG_member, name: "n_entries", scope: !10092, file: !8311, line: 264, baseType: !14, size: 32)
!10095 = !DIDerivedType(tag: DW_TAG_member, name: "tunnel_types", scope: !10092, file: !8311, line: 265, baseType: !14, size: 32, offset: 32)
!10096 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic", scope: !425, file: !6, line: 2163, baseType: !10086, size: 64, offset: 15360)
!10097 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_state", scope: !425, file: !6, line: 2166, baseType: !10098, size: 384, offset: 15424)
!10098 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10099, size: 384, elements: !1022)
!10099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_entity", file: !6, line: 889, size: 128, elements: !10100)
!10100 = !{!10101, !10102}
!10101 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !10099, file: !6, line: 890, baseType: !3504, size: 64)
!10102 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !10099, file: !6, line: 891, baseType: !10103, size: 64, offset: 64)
!10103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10104, size: 64)
!10104 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_link", file: !6, line: 880, flags: DIFlagFwdDecl)
!10105 = !{!10106, !10107, !10108, !10109, !10110, !10111}
!10106 = !DIEnumerator(name: "NETREG_UNINITIALIZED", value: 0, isUnsigned: true)
!10107 = !DIEnumerator(name: "NETREG_REGISTERED", value: 1, isUnsigned: true)
!10108 = !DIEnumerator(name: "NETREG_UNREGISTERING", value: 2, isUnsigned: true)
!10109 = !DIEnumerator(name: "NETREG_UNREGISTERED", value: 3, isUnsigned: true)
!10110 = !DIEnumerator(name: "NETREG_RELEASED", value: 4, isUnsigned: true)
!10111 = !DIEnumerator(name: "NETREG_DUMMY", value: 5, isUnsigned: true)
!10112 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_qpts_trust_state", file: !10113, line: 3252, baseType: !14, size: 32, elements: !10114)
!10113 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/reg.h", directory: "/home/lizy2001/genbc/linux")
!10114 = !{!10115, !10116}
!10115 = !DIEnumerator(name: "MLXSW_REG_QPTS_TRUST_STATE_PCP", value: 1, isUnsigned: true)
!10116 = !DIEnumerator(name: "MLXSW_REG_QPTS_TRUST_STATE_DSCP", value: 2, isUnsigned: true)
!10117 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_sp_hdroom_mode", file: !10118, line: 452, baseType: !14, size: 32, elements: !10119)
!10118 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/spectrum.h", directory: "/home/lizy2001/genbc/linux")
!10119 = !{!10120, !10121}
!10120 = !DIEnumerator(name: "MLXSW_SP_HDROOM_MODE_DCB", value: 0, isUnsigned: true)
!10121 = !DIEnumerator(name: "MLXSW_SP_HDROOM_MODE_TC", value: 1, isUnsigned: true)
!10122 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_sp_l3proto", file: !10118, line: 616, baseType: !14, size: 32, elements: !10123)
!10123 = !{!10124, !10125}
!10124 = !DIEnumerator(name: "MLXSW_SP_L3_PROTO_IPV4", value: 0, isUnsigned: true)
!10125 = !DIEnumerator(name: "MLXSW_SP_L3_PROTO_IPV6", value: 1, isUnsigned: true)
!10126 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_sp_kvdl_entry_type", file: !10118, line: 675, baseType: !14, size: 32, elements: !10127)
!10127 = !{!10128, !10129, !10130, !10131, !10132}
!10128 = !DIEnumerator(name: "MLXSW_SP_KVDL_ENTRY_TYPE_ADJ", value: 0, isUnsigned: true)
!10129 = !DIEnumerator(name: "MLXSW_SP_KVDL_ENTRY_TYPE_ACTSET", value: 1, isUnsigned: true)
!10130 = !DIEnumerator(name: "MLXSW_SP_KVDL_ENTRY_TYPE_PBS", value: 2, isUnsigned: true)
!10131 = !DIEnumerator(name: "MLXSW_SP_KVDL_ENTRY_TYPE_MCRIGR", value: 3, isUnsigned: true)
!10132 = !DIEnumerator(name: "MLXSW_SP_KVDL_ENTRY_TYPE_TNUMT", value: 4, isUnsigned: true)
!10133 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_afk_element", file: !10134, line: 12, baseType: !14, size: 32, elements: !10135)
!10134 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_keys.h", directory: "/home/lizy2001/genbc/linux")
!10135 = !{!10136, !10137, !10138, !10139, !10140, !10141, !10142, !10143, !10144, !10145, !10146, !10147, !10148, !10149, !10150, !10151, !10152, !10153, !10154, !10155, !10156, !10157, !10158, !10159, !10160, !10161}
!10136 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_SRC_SYS_PORT", value: 0, isUnsigned: true)
!10137 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_DMAC_32_47", value: 1, isUnsigned: true)
!10138 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_DMAC_0_31", value: 2, isUnsigned: true)
!10139 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_SMAC_32_47", value: 3, isUnsigned: true)
!10140 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_SMAC_0_31", value: 4, isUnsigned: true)
!10141 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_ETHERTYPE", value: 5, isUnsigned: true)
!10142 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_IP_PROTO", value: 6, isUnsigned: true)
!10143 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_SRC_IP_96_127", value: 7, isUnsigned: true)
!10144 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_SRC_IP_64_95", value: 8, isUnsigned: true)
!10145 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_SRC_IP_32_63", value: 9, isUnsigned: true)
!10146 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_SRC_IP_0_31", value: 10, isUnsigned: true)
!10147 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_DST_IP_96_127", value: 11, isUnsigned: true)
!10148 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_DST_IP_64_95", value: 12, isUnsigned: true)
!10149 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_DST_IP_32_63", value: 13, isUnsigned: true)
!10150 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_DST_IP_0_31", value: 14, isUnsigned: true)
!10151 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_DST_L4_PORT", value: 15, isUnsigned: true)
!10152 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_SRC_L4_PORT", value: 16, isUnsigned: true)
!10153 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_VID", value: 17, isUnsigned: true)
!10154 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_PCP", value: 18, isUnsigned: true)
!10155 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_TCP_FLAGS", value: 19, isUnsigned: true)
!10156 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_IP_TTL_", value: 20, isUnsigned: true)
!10157 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_IP_ECN", value: 21, isUnsigned: true)
!10158 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_IP_DSCP", value: 22, isUnsigned: true)
!10159 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_VIRT_ROUTER_8_10", value: 23, isUnsigned: true)
!10160 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_VIRT_ROUTER_0_7", value: 24, isUnsigned: true)
!10161 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_MAX", value: 25, isUnsigned: true)
!10162 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_afk_element_type", file: !10134, line: 41, baseType: !14, size: 32, elements: !10163)
!10163 = !{!10164, !10165}
!10164 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_TYPE_U32", value: 0, isUnsigned: true)
!10165 = !DIEnumerator(name: "MLXSW_AFK_ELEMENT_TYPE_BUF", value: 1, isUnsigned: true)
!10166 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_sp_mr_route_prio", file: !10118, line: 1155, baseType: !14, size: 32, elements: !10167)
!10167 = !{!10168, !10169, !10170, !10171}
!10168 = !DIEnumerator(name: "MLXSW_SP_MR_ROUTE_PRIO_SG", value: 0, isUnsigned: true)
!10169 = !DIEnumerator(name: "MLXSW_SP_MR_ROUTE_PRIO_STARG", value: 1, isUnsigned: true)
!10170 = !DIEnumerator(name: "MLXSW_SP_MR_ROUTE_PRIO_CATCHALL", value: 2, isUnsigned: true)
!10171 = !DIEnumerator(name: "__MLXSW_SP_MR_ROUTE_PRIO_MAX", value: 3, isUnsigned: true)
!10172 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_ptar_key_type", file: !10113, line: 2270, baseType: !14, size: 32, elements: !10173)
!10173 = !{!10174, !10175}
!10174 = !DIEnumerator(name: "MLXSW_REG_PTAR_KEY_TYPE_FLEX", value: 80, isUnsigned: true)
!10175 = !DIEnumerator(name: "MLXSW_REG_PTAR_KEY_TYPE_FLEX2", value: 81, isUnsigned: true)
!10176 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_event_trap_id", file: !10177, line: 122, baseType: !14, size: 32, elements: !10178)
!10177 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/trap.h", directory: "/home/lizy2001/genbc/linux")
!10178 = !{!10179, !10180, !10181, !10182, !10183, !10184}
!10179 = !DIEnumerator(name: "MLXSW_TRAP_ID_MFDE", value: 3, isUnsigned: true)
!10180 = !DIEnumerator(name: "MLXSW_TRAP_ID_PUDE", value: 8, isUnsigned: true)
!10181 = !DIEnumerator(name: "MLXSW_TRAP_ID_PMPE", value: 9, isUnsigned: true)
!10182 = !DIEnumerator(name: "MLXSW_TRAP_ID_MTWE", value: 12, isUnsigned: true)
!10183 = !DIEnumerator(name: "MLXSW_TRAP_ID_PTP_ING_FIFO", value: 45, isUnsigned: true)
!10184 = !DIEnumerator(name: "MLXSW_TRAP_ID_PTP_EGR_FIFO", value: 46, isUnsigned: true)
!10185 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_hpkt_action", file: !10113, line: 5850, baseType: !14, size: 32, elements: !10186)
!10186 = !{!10187, !10188, !10189, !10190, !10191, !10192, !10193, !10194}
!10187 = !DIEnumerator(name: "MLXSW_REG_HPKT_ACTION_FORWARD", value: 0, isUnsigned: true)
!10188 = !DIEnumerator(name: "MLXSW_REG_HPKT_ACTION_TRAP_TO_CPU", value: 1, isUnsigned: true)
!10189 = !DIEnumerator(name: "MLXSW_REG_HPKT_ACTION_MIRROR_TO_CPU", value: 2, isUnsigned: true)
!10190 = !DIEnumerator(name: "MLXSW_REG_HPKT_ACTION_DISCARD", value: 3, isUnsigned: true)
!10191 = !DIEnumerator(name: "MLXSW_REG_HPKT_ACTION_SOFT_DISCARD", value: 4, isUnsigned: true)
!10192 = !DIEnumerator(name: "MLXSW_REG_HPKT_ACTION_TRAP_AND_SOFT_DISCARD", value: 5, isUnsigned: true)
!10193 = !DIEnumerator(name: "MLXSW_REG_HPKT_ACTION_TRAP_EXCEPTION_TO_CPU", value: 6, isUnsigned: true)
!10194 = !DIEnumerator(name: "MLXSW_REG_HPKT_ACTION_SET_FW_DEFAULT", value: 15, isUnsigned: true)
!10195 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_mgpc_opcode", file: !10113, line: 9558, baseType: !14, size: 32, elements: !10196)
!10196 = !{!10197, !10198}
!10197 = !DIEnumerator(name: "MLXSW_REG_MGPC_OPCODE_NOP", value: 0, isUnsigned: true)
!10198 = !DIEnumerator(name: "MLXSW_REG_MGPC_OPCODE_CLEAR", value: 8, isUnsigned: true)
!10199 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_flow_counter_set_type", file: !10113, line: 6620, baseType: !14, size: 32, elements: !10200)
!10200 = !{!10201, !10202, !10203}
!10201 = !DIEnumerator(name: "MLXSW_REG_FLOW_COUNTER_SET_TYPE_NO_COUNT", value: 0, isUnsigned: true)
!10202 = !DIEnumerator(name: "MLXSW_REG_FLOW_COUNTER_SET_TYPE_PACKETS_BYTES", value: 3, isUnsigned: true)
!10203 = !DIEnumerator(name: "MLXSW_REG_FLOW_COUNTER_SET_TYPE_PACKETS", value: 5, isUnsigned: true)
!10204 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_sp_counter_sub_pool_id", file: !10205, line: 10, baseType: !14, size: 32, elements: !10206)
!10205 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/spectrum_cnt.h", directory: "/home/lizy2001/genbc/linux")
!10206 = !{!10207, !10208}
!10207 = !DIEnumerator(name: "MLXSW_SP_COUNTER_SUB_POOL_FLOW", value: 0, isUnsigned: true)
!10208 = !DIEnumerator(name: "MLXSW_SP_COUNTER_SUB_POOL_RIF", value: 1, isUnsigned: true)
!10209 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_spms_state", file: !10113, line: 786, baseType: !14, size: 32, elements: !10210)
!10210 = !{!10211, !10212, !10213, !10214}
!10211 = !DIEnumerator(name: "MLXSW_REG_SPMS_STATE_NO_CHANGE", value: 0, isUnsigned: true)
!10212 = !DIEnumerator(name: "MLXSW_REG_SPMS_STATE_DISCARDING", value: 1, isUnsigned: true)
!10213 = !DIEnumerator(name: "MLXSW_REG_SPMS_STATE_LEARNING", value: 2, isUnsigned: true)
!10214 = !DIEnumerator(name: "MLXSW_REG_SPMS_STATE_FORWARDING", value: 3, isUnsigned: true)
!10215 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_port_admin_status", file: !10216, line: 27, baseType: !14, size: 32, elements: !10217)
!10216 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/port.h", directory: "/home/lizy2001/genbc/linux")
!10217 = !{!10218, !10219, !10220, !10221}
!10218 = !DIEnumerator(name: "MLXSW_PORT_ADMIN_STATUS_UP", value: 1, isUnsigned: true)
!10219 = !DIEnumerator(name: "MLXSW_PORT_ADMIN_STATUS_DOWN", value: 2, isUnsigned: true)
!10220 = !DIEnumerator(name: "MLXSW_PORT_ADMIN_STATUS_UP_ONCE", value: 3, isUnsigned: true)
!10221 = !DIEnumerator(name: "MLXSW_PORT_ADMIN_STATUS_DISABLED", value: 4, isUnsigned: true)
!10222 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10223, line: 10, baseType: !14, size: 32, elements: !10224)
!10223 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!10224 = !{!10225, !10226}
!10225 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!10226 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!10227 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_qeec_hr", file: !10113, line: 3505, baseType: !14, size: 32, elements: !10228)
!10228 = !{!10229, !10230, !10231, !10232}
!10229 = !DIEnumerator(name: "MLXSW_REG_QEEC_HR_PORT", value: 0, isUnsigned: true)
!10230 = !DIEnumerator(name: "MLXSW_REG_QEEC_HR_GROUP", value: 1, isUnsigned: true)
!10231 = !DIEnumerator(name: "MLXSW_REG_QEEC_HR_SUBGROUP", value: 2, isUnsigned: true)
!10232 = !DIEnumerator(name: "MLXSW_REG_QEEC_HR_TC", value: 3, isUnsigned: true)
!10233 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !10234, line: 305, baseType: !14, size: 32, elements: !10235)
!10234 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!10235 = !{!10236, !10237, !10238, !10239}
!10236 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!10237 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!10238 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!10239 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!10240 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_ppcnt_grp", file: !10113, line: 4678, baseType: !14, size: 32, elements: !10241)
!10241 = !{!10242, !10243, !10244, !10245, !10246, !10247, !10248, !10249, !10250}
!10242 = !DIEnumerator(name: "MLXSW_REG_PPCNT_IEEE_8023_CNT", value: 0, isUnsigned: true)
!10243 = !DIEnumerator(name: "MLXSW_REG_PPCNT_RFC_2863_CNT", value: 1, isUnsigned: true)
!10244 = !DIEnumerator(name: "MLXSW_REG_PPCNT_RFC_2819_CNT", value: 2, isUnsigned: true)
!10245 = !DIEnumerator(name: "MLXSW_REG_PPCNT_RFC_3635_CNT", value: 3, isUnsigned: true)
!10246 = !DIEnumerator(name: "MLXSW_REG_PPCNT_EXT_CNT", value: 5, isUnsigned: true)
!10247 = !DIEnumerator(name: "MLXSW_REG_PPCNT_DISCARD_CNT", value: 6, isUnsigned: true)
!10248 = !DIEnumerator(name: "MLXSW_REG_PPCNT_PRIO_CNT", value: 16, isUnsigned: true)
!10249 = !DIEnumerator(name: "MLXSW_REG_PPCNT_TC_CNT", value: 17, isUnsigned: true)
!10250 = !DIEnumerator(name: "MLXSW_REG_PPCNT_TC_CONG_TC", value: 19, isUnsigned: true)
!10251 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_queue_state_t", file: !6, line: 558, baseType: !14, size: 32, elements: !10252)
!10252 = !{!10253, !10254, !10255}
!10253 = !DIEnumerator(name: "__QUEUE_STATE_DRV_XOFF", value: 0, isUnsigned: true)
!10254 = !DIEnumerator(name: "__QUEUE_STATE_STACK_XOFF", value: 1, isUnsigned: true)
!10255 = !DIEnumerator(name: "__QUEUE_STATE_FROZEN", value: 2, isUnsigned: true)
!10256 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "skb_free_reason", file: !6, line: 3780, baseType: !14, size: 32, elements: !10257)
!10257 = !{!10258, !10259}
!10258 = !DIEnumerator(name: "SKB_REASON_CONSUMED", value: 0, isUnsigned: true)
!10259 = !DIEnumerator(name: "SKB_REASON_DROPPED", value: 1, isUnsigned: true)
!10260 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10261, line: 11, baseType: !14, size: 32, elements: !10262)
!10261 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/txheader.h", directory: "/home/lizy2001/genbc/linux")
!10262 = !{!10263, !10264}
!10263 = !DIEnumerator(name: "MLXSW_TXHDR_ETH_CTL", value: 0, isUnsigned: true)
!10264 = !DIEnumerator(name: "MLXSW_TXHDR_ETH_DATA", value: 1, isUnsigned: true)
!10265 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10261, line: 44, baseType: !14, size: 32, elements: !10266)
!10266 = !{!10267, !10268}
!10267 = !DIEnumerator(name: "MLXSW_TXHDR_TYPE_DATA", value: 0, isUnsigned: true)
!10268 = !DIEnumerator(name: "MLXSW_TXHDR_TYPE_CONTROL", value: 6, isUnsigned: true)
!10269 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "flow_block_command", file: !9583, line: 417, baseType: !14, size: 32, elements: !10270)
!10270 = !{!10271, !10272}
!10271 = !DIEnumerator(name: "FLOW_BLOCK_BIND", value: 0, isUnsigned: true)
!10272 = !DIEnumerator(name: "FLOW_BLOCK_UNBIND", value: 1, isUnsigned: true)
!10273 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "flow_block_binder_type", file: !9583, line: 422, baseType: !14, size: 32, elements: !10274)
!10274 = !{!10275, !10276, !10277, !10278, !10279}
!10275 = !DIEnumerator(name: "FLOW_BLOCK_BINDER_TYPE_UNSPEC", value: 0, isUnsigned: true)
!10276 = !DIEnumerator(name: "FLOW_BLOCK_BINDER_TYPE_CLSACT_INGRESS", value: 1, isUnsigned: true)
!10277 = !DIEnumerator(name: "FLOW_BLOCK_BINDER_TYPE_CLSACT_EGRESS", value: 2, isUnsigned: true)
!10278 = !DIEnumerator(name: "FLOW_BLOCK_BINDER_TYPE_RED_EARLY_DROP", value: 3, isUnsigned: true)
!10279 = !DIEnumerator(name: "FLOW_BLOCK_BINDER_TYPE_RED_MARK", value: 4, isUnsigned: true)
!10280 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !491, line: 14, baseType: !14, size: 32, elements: !10281)
!10281 = !{!10282, !10283, !10284, !10285, !10286, !10287, !10288, !10289, !10290, !10291, !10292, !10293, !10294, !10295, !10296, !10297, !10298, !10299, !10300, !10301, !10302, !10303, !10304, !10305, !10306, !10307, !10308, !10309, !10310, !10311, !10312, !10313, !10314, !10315, !10316, !10317, !10318, !10319, !10320, !10321, !10322, !10323, !10324, !10325, !10326, !10327, !10328, !10329, !10330, !10331, !10332, !10333, !10334, !10335, !10336, !10337, !10338, !10339, !10340, !10341, !10342, !10343}
!10282 = !DIEnumerator(name: "NETIF_F_SG_BIT", value: 0, isUnsigned: true)
!10283 = !DIEnumerator(name: "NETIF_F_IP_CSUM_BIT", value: 1, isUnsigned: true)
!10284 = !DIEnumerator(name: "__UNUSED_NETIF_F_1", value: 2, isUnsigned: true)
!10285 = !DIEnumerator(name: "NETIF_F_HW_CSUM_BIT", value: 3, isUnsigned: true)
!10286 = !DIEnumerator(name: "NETIF_F_IPV6_CSUM_BIT", value: 4, isUnsigned: true)
!10287 = !DIEnumerator(name: "NETIF_F_HIGHDMA_BIT", value: 5, isUnsigned: true)
!10288 = !DIEnumerator(name: "NETIF_F_FRAGLIST_BIT", value: 6, isUnsigned: true)
!10289 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_TX_BIT", value: 7, isUnsigned: true)
!10290 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_RX_BIT", value: 8, isUnsigned: true)
!10291 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_FILTER_BIT", value: 9, isUnsigned: true)
!10292 = !DIEnumerator(name: "NETIF_F_VLAN_CHALLENGED_BIT", value: 10, isUnsigned: true)
!10293 = !DIEnumerator(name: "NETIF_F_GSO_BIT", value: 11, isUnsigned: true)
!10294 = !DIEnumerator(name: "NETIF_F_LLTX_BIT", value: 12, isUnsigned: true)
!10295 = !DIEnumerator(name: "NETIF_F_NETNS_LOCAL_BIT", value: 13, isUnsigned: true)
!10296 = !DIEnumerator(name: "NETIF_F_GRO_BIT", value: 14, isUnsigned: true)
!10297 = !DIEnumerator(name: "NETIF_F_LRO_BIT", value: 15, isUnsigned: true)
!10298 = !DIEnumerator(name: "NETIF_F_GSO_SHIFT", value: 16, isUnsigned: true)
!10299 = !DIEnumerator(name: "NETIF_F_TSO_BIT", value: 16, isUnsigned: true)
!10300 = !DIEnumerator(name: "NETIF_F_GSO_ROBUST_BIT", value: 17, isUnsigned: true)
!10301 = !DIEnumerator(name: "NETIF_F_TSO_ECN_BIT", value: 18, isUnsigned: true)
!10302 = !DIEnumerator(name: "NETIF_F_TSO_MANGLEID_BIT", value: 19, isUnsigned: true)
!10303 = !DIEnumerator(name: "NETIF_F_TSO6_BIT", value: 20, isUnsigned: true)
!10304 = !DIEnumerator(name: "NETIF_F_FSO_BIT", value: 21, isUnsigned: true)
!10305 = !DIEnumerator(name: "NETIF_F_GSO_GRE_BIT", value: 22, isUnsigned: true)
!10306 = !DIEnumerator(name: "NETIF_F_GSO_GRE_CSUM_BIT", value: 23, isUnsigned: true)
!10307 = !DIEnumerator(name: "NETIF_F_GSO_IPXIP4_BIT", value: 24, isUnsigned: true)
!10308 = !DIEnumerator(name: "NETIF_F_GSO_IPXIP6_BIT", value: 25, isUnsigned: true)
!10309 = !DIEnumerator(name: "NETIF_F_GSO_UDP_TUNNEL_BIT", value: 26, isUnsigned: true)
!10310 = !DIEnumerator(name: "NETIF_F_GSO_UDP_TUNNEL_CSUM_BIT", value: 27, isUnsigned: true)
!10311 = !DIEnumerator(name: "NETIF_F_GSO_PARTIAL_BIT", value: 28, isUnsigned: true)
!10312 = !DIEnumerator(name: "NETIF_F_GSO_TUNNEL_REMCSUM_BIT", value: 29, isUnsigned: true)
!10313 = !DIEnumerator(name: "NETIF_F_GSO_SCTP_BIT", value: 30, isUnsigned: true)
!10314 = !DIEnumerator(name: "NETIF_F_GSO_ESP_BIT", value: 31, isUnsigned: true)
!10315 = !DIEnumerator(name: "NETIF_F_GSO_UDP_BIT", value: 32, isUnsigned: true)
!10316 = !DIEnumerator(name: "NETIF_F_GSO_UDP_L4_BIT", value: 33, isUnsigned: true)
!10317 = !DIEnumerator(name: "NETIF_F_GSO_FRAGLIST_BIT", value: 34, isUnsigned: true)
!10318 = !DIEnumerator(name: "NETIF_F_GSO_LAST", value: 34, isUnsigned: true)
!10319 = !DIEnumerator(name: "NETIF_F_FCOE_CRC_BIT", value: 35, isUnsigned: true)
!10320 = !DIEnumerator(name: "NETIF_F_SCTP_CRC_BIT", value: 36, isUnsigned: true)
!10321 = !DIEnumerator(name: "NETIF_F_FCOE_MTU_BIT", value: 37, isUnsigned: true)
!10322 = !DIEnumerator(name: "NETIF_F_NTUPLE_BIT", value: 38, isUnsigned: true)
!10323 = !DIEnumerator(name: "NETIF_F_RXHASH_BIT", value: 39, isUnsigned: true)
!10324 = !DIEnumerator(name: "NETIF_F_RXCSUM_BIT", value: 40, isUnsigned: true)
!10325 = !DIEnumerator(name: "NETIF_F_NOCACHE_COPY_BIT", value: 41, isUnsigned: true)
!10326 = !DIEnumerator(name: "NETIF_F_LOOPBACK_BIT", value: 42, isUnsigned: true)
!10327 = !DIEnumerator(name: "NETIF_F_RXFCS_BIT", value: 43, isUnsigned: true)
!10328 = !DIEnumerator(name: "NETIF_F_RXALL_BIT", value: 44, isUnsigned: true)
!10329 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_TX_BIT", value: 45, isUnsigned: true)
!10330 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_RX_BIT", value: 46, isUnsigned: true)
!10331 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_FILTER_BIT", value: 47, isUnsigned: true)
!10332 = !DIEnumerator(name: "NETIF_F_HW_L2FW_DOFFLOAD_BIT", value: 48, isUnsigned: true)
!10333 = !DIEnumerator(name: "NETIF_F_HW_TC_BIT", value: 49, isUnsigned: true)
!10334 = !DIEnumerator(name: "NETIF_F_HW_ESP_BIT", value: 50, isUnsigned: true)
!10335 = !DIEnumerator(name: "NETIF_F_HW_ESP_TX_CSUM_BIT", value: 51, isUnsigned: true)
!10336 = !DIEnumerator(name: "NETIF_F_RX_UDP_TUNNEL_PORT_BIT", value: 52, isUnsigned: true)
!10337 = !DIEnumerator(name: "NETIF_F_HW_TLS_TX_BIT", value: 53, isUnsigned: true)
!10338 = !DIEnumerator(name: "NETIF_F_HW_TLS_RX_BIT", value: 54, isUnsigned: true)
!10339 = !DIEnumerator(name: "NETIF_F_GRO_HW_BIT", value: 55, isUnsigned: true)
!10340 = !DIEnumerator(name: "NETIF_F_HW_TLS_RECORD_BIT", value: 56, isUnsigned: true)
!10341 = !DIEnumerator(name: "NETIF_F_GRO_FRAGLIST_BIT", value: 57, isUnsigned: true)
!10342 = !DIEnumerator(name: "NETIF_F_HW_MACSEC_BIT", value: 58, isUnsigned: true)
!10343 = !DIEnumerator(name: "NETDEV_FEATURE_COUNT", value: 59, isUnsigned: true)
!10344 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_state_t", file: !6, line: 288, baseType: !14, size: 32, elements: !10345)
!10345 = !{!10346, !10347, !10348, !10349, !10350, !10351}
!10346 = !DIEnumerator(name: "__LINK_STATE_START", value: 0, isUnsigned: true)
!10347 = !DIEnumerator(name: "__LINK_STATE_PRESENT", value: 1, isUnsigned: true)
!10348 = !DIEnumerator(name: "__LINK_STATE_NOCARRIER", value: 2, isUnsigned: true)
!10349 = !DIEnumerator(name: "__LINK_STATE_LINKWATCH_PENDING", value: 3, isUnsigned: true)
!10350 = !DIEnumerator(name: "__LINK_STATE_DORMANT", value: 4, isUnsigned: true)
!10351 = !DIEnumerator(name: "__LINK_STATE_TESTING", value: 5, isUnsigned: true)
!10352 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10353, line: 17, baseType: !14, size: 32, elements: !10354)
!10353 = !DIFile(filename: "./include/uapi/linux/net_tstamp.h", directory: "/home/lizy2001/genbc/linux")
!10354 = !{!10355, !10356, !10357, !10358, !10359, !10360, !10361, !10362, !10363, !10364, !10365, !10366, !10367, !10368, !10369, !10370, !10371}
!10355 = !DIEnumerator(name: "SOF_TIMESTAMPING_TX_HARDWARE", value: 1, isUnsigned: true)
!10356 = !DIEnumerator(name: "SOF_TIMESTAMPING_TX_SOFTWARE", value: 2, isUnsigned: true)
!10357 = !DIEnumerator(name: "SOF_TIMESTAMPING_RX_HARDWARE", value: 4, isUnsigned: true)
!10358 = !DIEnumerator(name: "SOF_TIMESTAMPING_RX_SOFTWARE", value: 8, isUnsigned: true)
!10359 = !DIEnumerator(name: "SOF_TIMESTAMPING_SOFTWARE", value: 16, isUnsigned: true)
!10360 = !DIEnumerator(name: "SOF_TIMESTAMPING_SYS_HARDWARE", value: 32, isUnsigned: true)
!10361 = !DIEnumerator(name: "SOF_TIMESTAMPING_RAW_HARDWARE", value: 64, isUnsigned: true)
!10362 = !DIEnumerator(name: "SOF_TIMESTAMPING_OPT_ID", value: 128, isUnsigned: true)
!10363 = !DIEnumerator(name: "SOF_TIMESTAMPING_TX_SCHED", value: 256, isUnsigned: true)
!10364 = !DIEnumerator(name: "SOF_TIMESTAMPING_TX_ACK", value: 512, isUnsigned: true)
!10365 = !DIEnumerator(name: "SOF_TIMESTAMPING_OPT_CMSG", value: 1024, isUnsigned: true)
!10366 = !DIEnumerator(name: "SOF_TIMESTAMPING_OPT_TSONLY", value: 2048, isUnsigned: true)
!10367 = !DIEnumerator(name: "SOF_TIMESTAMPING_OPT_STATS", value: 4096, isUnsigned: true)
!10368 = !DIEnumerator(name: "SOF_TIMESTAMPING_OPT_PKTINFO", value: 8192, isUnsigned: true)
!10369 = !DIEnumerator(name: "SOF_TIMESTAMPING_OPT_TX_SWHW", value: 16384, isUnsigned: true)
!10370 = !DIEnumerator(name: "SOF_TIMESTAMPING_LAST", value: 16384, isUnsigned: true)
!10371 = !DIEnumerator(name: "SOF_TIMESTAMPING_MASK", value: 32767, isUnsigned: true)
!10372 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_res_id", file: !10373, line: 10, baseType: !14, size: 32, elements: !10374)
!10373 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/resources.h", directory: "/home/lizy2001/genbc/linux")
!10374 = !{!10375, !10376, !10377, !10378, !10379, !10380, !10381, !10382, !10383, !10384, !10385, !10386, !10387, !10388, !10389, !10390, !10391, !10392, !10393, !10394, !10395, !10396, !10397, !10398, !10399, !10400, !10401, !10402, !10403, !10404, !10405, !10406, !10407, !10408, !10409, !10410, !10411, !10412, !10413, !10414, !10415, !10416, !10417, !10418, !10419, !10420, !10421, !10422, !10423, !10424, !10425}
!10375 = !DIEnumerator(name: "MLXSW_RES_ID_KVD_SIZE", value: 0, isUnsigned: true)
!10376 = !DIEnumerator(name: "MLXSW_RES_ID_KVD_SINGLE_MIN_SIZE", value: 1, isUnsigned: true)
!10377 = !DIEnumerator(name: "MLXSW_RES_ID_KVD_DOUBLE_MIN_SIZE", value: 2, isUnsigned: true)
!10378 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_KVD_LINEAR_RANGE", value: 3, isUnsigned: true)
!10379 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_KVD_ACTION_SETS", value: 4, isUnsigned: true)
!10380 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_TRAP_GROUPS", value: 5, isUnsigned: true)
!10381 = !DIEnumerator(name: "MLXSW_RES_ID_CQE_V0", value: 6, isUnsigned: true)
!10382 = !DIEnumerator(name: "MLXSW_RES_ID_CQE_V1", value: 7, isUnsigned: true)
!10383 = !DIEnumerator(name: "MLXSW_RES_ID_CQE_V2", value: 8, isUnsigned: true)
!10384 = !DIEnumerator(name: "MLXSW_RES_ID_COUNTER_POOL_SIZE", value: 9, isUnsigned: true)
!10385 = !DIEnumerator(name: "MLXSW_RES_ID_COUNTER_BANK_SIZE", value: 10, isUnsigned: true)
!10386 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_SPAN", value: 11, isUnsigned: true)
!10387 = !DIEnumerator(name: "MLXSW_RES_ID_COUNTER_SIZE_PACKETS_BYTES", value: 12, isUnsigned: true)
!10388 = !DIEnumerator(name: "MLXSW_RES_ID_COUNTER_SIZE_ROUTER_BASIC", value: 13, isUnsigned: true)
!10389 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_SYSTEM_PORT", value: 14, isUnsigned: true)
!10390 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_LAG", value: 15, isUnsigned: true)
!10391 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_LAG_MEMBERS", value: 16, isUnsigned: true)
!10392 = !DIEnumerator(name: "MLXSW_RES_ID_LOCAL_PORTS_IN_1X", value: 17, isUnsigned: true)
!10393 = !DIEnumerator(name: "MLXSW_RES_ID_LOCAL_PORTS_IN_2X", value: 18, isUnsigned: true)
!10394 = !DIEnumerator(name: "MLXSW_RES_ID_LOCAL_PORTS_IN_4X", value: 19, isUnsigned: true)
!10395 = !DIEnumerator(name: "MLXSW_RES_ID_GUARANTEED_SHARED_BUFFER", value: 20, isUnsigned: true)
!10396 = !DIEnumerator(name: "MLXSW_RES_ID_CELL_SIZE", value: 21, isUnsigned: true)
!10397 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_HEADROOM_SIZE", value: 22, isUnsigned: true)
!10398 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_TCAM_REGIONS", value: 23, isUnsigned: true)
!10399 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_TCAM_RULES", value: 24, isUnsigned: true)
!10400 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_REGIONS", value: 25, isUnsigned: true)
!10401 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_GROUPS", value: 26, isUnsigned: true)
!10402 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_GROUP_SIZE", value: 27, isUnsigned: true)
!10403 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_FLEX_KEYS", value: 28, isUnsigned: true)
!10404 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_ACTION_PER_RULE", value: 29, isUnsigned: true)
!10405 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_ACTIONS_PER_SET", value: 30, isUnsigned: true)
!10406 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_ERPT_BANKS", value: 31, isUnsigned: true)
!10407 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_ERPT_BANK_SIZE", value: 32, isUnsigned: true)
!10408 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_LARGE_KEY_ID", value: 33, isUnsigned: true)
!10409 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_ERPT_ENTRIES_2KB", value: 34, isUnsigned: true)
!10410 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_ERPT_ENTRIES_4KB", value: 35, isUnsigned: true)
!10411 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_ERPT_ENTRIES_8KB", value: 36, isUnsigned: true)
!10412 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_ERPT_ENTRIES_12KB", value: 37, isUnsigned: true)
!10413 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_BF_LOG", value: 38, isUnsigned: true)
!10414 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_GLOBAL_POLICERS", value: 39, isUnsigned: true)
!10415 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_CPU_POLICERS", value: 40, isUnsigned: true)
!10416 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_VRS", value: 41, isUnsigned: true)
!10417 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_RIFS", value: 42, isUnsigned: true)
!10418 = !DIEnumerator(name: "MLXSW_RES_ID_MC_ERIF_LIST_ENTRIES", value: 43, isUnsigned: true)
!10419 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_LPM_TREES", value: 44, isUnsigned: true)
!10420 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_NVE_MC_ENTRIES_IPV4", value: 45, isUnsigned: true)
!10421 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_NVE_MC_ENTRIES_IPV6", value: 46, isUnsigned: true)
!10422 = !DIEnumerator(name: "MLXSW_RES_ID_KVD_SINGLE_SIZE", value: 47, isUnsigned: true)
!10423 = !DIEnumerator(name: "MLXSW_RES_ID_KVD_DOUBLE_SIZE", value: 48, isUnsigned: true)
!10424 = !DIEnumerator(name: "MLXSW_RES_ID_KVD_LINEAR_SIZE", value: 49, isUnsigned: true)
!10425 = !DIEnumerator(name: "__MLXSW_RES_ID_MAX", value: 50, isUnsigned: true)
!10426 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_qpcr_ir_units", file: !10113, line: 3320, baseType: !14, size: 32, elements: !10427)
!10427 = !{!10428, !10429}
!10428 = !DIEnumerator(name: "MLXSW_REG_QPCR_IR_UNITS_M", value: 0, isUnsigned: true)
!10429 = !DIEnumerator(name: "MLXSW_REG_QPCR_IR_UNITS_K", value: 1, isUnsigned: true)
!10430 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_qpcr_g", file: !10113, line: 3282, baseType: !14, size: 32, elements: !10431)
!10431 = !{!10432, !10433}
!10432 = !DIEnumerator(name: "MLXSW_REG_QPCR_G_GLOBAL", value: 2, isUnsigned: true)
!10433 = !DIEnumerator(name: "MLXSW_REG_QPCR_G_STORM_CONTROL", value: 3, isUnsigned: true)
!10434 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_qpcr_rate_type", file: !10113, line: 3333, baseType: !14, size: 32, elements: !10435)
!10435 = !{!10436, !10437}
!10436 = !DIEnumerator(name: "MLXSW_REG_QPCR_RATE_TYPE_SINGLE", value: 1, isUnsigned: true)
!10437 = !DIEnumerator(name: "MLXSW_REG_QPCR_RATE_TYPE_DOUBLE", value: 2, isUnsigned: true)
!10438 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_qpcr_action", file: !10113, line: 3386, baseType: !14, size: 32, elements: !10439)
!10439 = !{!10440, !10441}
!10440 = !DIEnumerator(name: "MLXSW_REG_QPCR_ACTION_DISCARD", value: 1, isUnsigned: true)
!10441 = !DIEnumerator(name: "MLXSW_REG_QPCR_ACTION_FORWARD", value: 2, isUnsigned: true)
!10442 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_htgt_trap_group", file: !10113, line: 5682, baseType: !14, size: 32, elements: !10443)
!10443 = !{!10444, !10445, !10446, !10447, !10448, !10449, !10450, !10451, !10452, !10453, !10454, !10455, !10456, !10457, !10458, !10459, !10460, !10461, !10462, !10463, !10464, !10465, !10466, !10467, !10468, !10469, !10470, !10471, !10472, !10473, !10474, !10475, !10476, !10477, !10478, !10479}
!10444 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_EMAD", value: 0, isUnsigned: true)
!10445 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_MFDE", value: 1, isUnsigned: true)
!10446 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_MTWE", value: 2, isUnsigned: true)
!10447 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_PMPE", value: 3, isUnsigned: true)
!10448 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_STP", value: 4, isUnsigned: true)
!10449 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_LACP", value: 5, isUnsigned: true)
!10450 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_LLDP", value: 6, isUnsigned: true)
!10451 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_MC_SNOOPING", value: 7, isUnsigned: true)
!10452 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_BGP", value: 8, isUnsigned: true)
!10453 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_OSPF", value: 9, isUnsigned: true)
!10454 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_PIM", value: 10, isUnsigned: true)
!10455 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_MULTICAST", value: 11, isUnsigned: true)
!10456 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_NEIGH_DISCOVERY", value: 12, isUnsigned: true)
!10457 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_ROUTER_EXP", value: 13, isUnsigned: true)
!10458 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_EXTERNAL_ROUTE", value: 14, isUnsigned: true)
!10459 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_IP2ME", value: 15, isUnsigned: true)
!10460 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_DHCP", value: 16, isUnsigned: true)
!10461 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_EVENT", value: 17, isUnsigned: true)
!10462 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_IPV6", value: 18, isUnsigned: true)
!10463 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_LBERROR", value: 19, isUnsigned: true)
!10464 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_PTP0", value: 20, isUnsigned: true)
!10465 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_PTP1", value: 21, isUnsigned: true)
!10466 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_VRRP", value: 22, isUnsigned: true)
!10467 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_PKT_SAMPLE", value: 23, isUnsigned: true)
!10468 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_FLOW_LOGGING", value: 24, isUnsigned: true)
!10469 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_FID_MISS", value: 25, isUnsigned: true)
!10470 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_BFD", value: 26, isUnsigned: true)
!10471 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_DUMMY", value: 27, isUnsigned: true)
!10472 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_L2_DISCARDS", value: 28, isUnsigned: true)
!10473 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_L3_DISCARDS", value: 29, isUnsigned: true)
!10474 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_L3_EXCEPTIONS", value: 30, isUnsigned: true)
!10475 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_TUNNEL_DISCARDS", value: 31, isUnsigned: true)
!10476 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_ACL_DISCARDS", value: 32, isUnsigned: true)
!10477 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_SP_BUFFER_DISCARDS", value: 33, isUnsigned: true)
!10478 = !DIEnumerator(name: "__MLXSW_REG_HTGT_TRAP_GROUP_MAX", value: 34, isUnsigned: true)
!10479 = !DIEnumerator(name: "MLXSW_REG_HTGT_TRAP_GROUP_MAX", value: 33, isUnsigned: true)
!10480 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10113, line: 5730, baseType: !14, size: 32, elements: !10481)
!10481 = !{!10482, !10483}
!10482 = !DIEnumerator(name: "MLXSW_REG_HTGT_POLICER_DISABLE", value: 0, isUnsigned: true)
!10483 = !DIEnumerator(name: "MLXSW_REG_HTGT_POLICER_ENABLE", value: 1, isUnsigned: true)
!10484 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_pude_oper_status", file: !10216, line: 34, baseType: !14, size: 32, elements: !10485)
!10485 = !{!10486, !10487, !10488}
!10486 = !DIEnumerator(name: "MLXSW_PORT_OPER_STATUS_UP", value: 1, isUnsigned: true)
!10487 = !DIEnumerator(name: "MLXSW_PORT_OPER_STATUS_DOWN", value: 2, isUnsigned: true)
!10488 = !DIEnumerator(name: "MLXSW_PORT_OPER_STATUS_FAILURE", value: 4, isUnsigned: true)
!10489 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_slcr_pp", file: !10113, line: 1349, baseType: !14, size: 32, elements: !10490)
!10490 = !{!10491, !10492}
!10491 = !DIEnumerator(name: "MLXSW_REG_SLCR_PP_GLOBAL", value: 0, isUnsigned: true)
!10492 = !DIEnumerator(name: "MLXSW_REG_SLCR_PP_PER_PORT", value: 1, isUnsigned: true)
!10493 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_slcr_type", file: !10113, line: 1372, baseType: !14, size: 32, elements: !10494)
!10494 = !{!10495, !10496, !10497}
!10495 = !DIEnumerator(name: "MLXSW_REG_SLCR_TYPE_CRC", value: 0, isUnsigned: true)
!10496 = !DIEnumerator(name: "MLXSW_REG_SLCR_TYPE_XOR", value: 1, isUnsigned: true)
!10497 = !DIEnumerator(name: "MLXSW_REG_SLCR_TYPE_RANDOM", value: 2, isUnsigned: true)
!10498 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_cmd", file: !6, line: 2622, baseType: !14, size: 32, elements: !10499)
!10499 = !{!10500, !10501, !10502, !10503, !10504, !10505, !10506, !10507, !10508, !10509, !10510, !10511, !10512, !10513, !10514, !10515, !10516, !10517, !10518, !10519, !10520, !10521, !10522, !10523, !10524, !10525, !10526, !10527, !10528, !10529, !10530, !10531, !10532, !10533}
!10500 = !DIEnumerator(name: "NETDEV_UP", value: 1, isUnsigned: true)
!10501 = !DIEnumerator(name: "NETDEV_DOWN", value: 2, isUnsigned: true)
!10502 = !DIEnumerator(name: "NETDEV_REBOOT", value: 3, isUnsigned: true)
!10503 = !DIEnumerator(name: "NETDEV_CHANGE", value: 4, isUnsigned: true)
!10504 = !DIEnumerator(name: "NETDEV_REGISTER", value: 5, isUnsigned: true)
!10505 = !DIEnumerator(name: "NETDEV_UNREGISTER", value: 6, isUnsigned: true)
!10506 = !DIEnumerator(name: "NETDEV_CHANGEMTU", value: 7, isUnsigned: true)
!10507 = !DIEnumerator(name: "NETDEV_CHANGEADDR", value: 8, isUnsigned: true)
!10508 = !DIEnumerator(name: "NETDEV_PRE_CHANGEADDR", value: 9, isUnsigned: true)
!10509 = !DIEnumerator(name: "NETDEV_GOING_DOWN", value: 10, isUnsigned: true)
!10510 = !DIEnumerator(name: "NETDEV_CHANGENAME", value: 11, isUnsigned: true)
!10511 = !DIEnumerator(name: "NETDEV_FEAT_CHANGE", value: 12, isUnsigned: true)
!10512 = !DIEnumerator(name: "NETDEV_BONDING_FAILOVER", value: 13, isUnsigned: true)
!10513 = !DIEnumerator(name: "NETDEV_PRE_UP", value: 14, isUnsigned: true)
!10514 = !DIEnumerator(name: "NETDEV_PRE_TYPE_CHANGE", value: 15, isUnsigned: true)
!10515 = !DIEnumerator(name: "NETDEV_POST_TYPE_CHANGE", value: 16, isUnsigned: true)
!10516 = !DIEnumerator(name: "NETDEV_POST_INIT", value: 17, isUnsigned: true)
!10517 = !DIEnumerator(name: "NETDEV_RELEASE", value: 18, isUnsigned: true)
!10518 = !DIEnumerator(name: "NETDEV_NOTIFY_PEERS", value: 19, isUnsigned: true)
!10519 = !DIEnumerator(name: "NETDEV_JOIN", value: 20, isUnsigned: true)
!10520 = !DIEnumerator(name: "NETDEV_CHANGEUPPER", value: 21, isUnsigned: true)
!10521 = !DIEnumerator(name: "NETDEV_RESEND_IGMP", value: 22, isUnsigned: true)
!10522 = !DIEnumerator(name: "NETDEV_PRECHANGEMTU", value: 23, isUnsigned: true)
!10523 = !DIEnumerator(name: "NETDEV_CHANGEINFODATA", value: 24, isUnsigned: true)
!10524 = !DIEnumerator(name: "NETDEV_BONDING_INFO", value: 25, isUnsigned: true)
!10525 = !DIEnumerator(name: "NETDEV_PRECHANGEUPPER", value: 26, isUnsigned: true)
!10526 = !DIEnumerator(name: "NETDEV_CHANGELOWERSTATE", value: 27, isUnsigned: true)
!10527 = !DIEnumerator(name: "NETDEV_UDP_TUNNEL_PUSH_INFO", value: 28, isUnsigned: true)
!10528 = !DIEnumerator(name: "NETDEV_UDP_TUNNEL_DROP_INFO", value: 29, isUnsigned: true)
!10529 = !DIEnumerator(name: "NETDEV_CHANGE_TX_QUEUE_LEN", value: 30, isUnsigned: true)
!10530 = !DIEnumerator(name: "NETDEV_CVLAN_FILTER_PUSH_INFO", value: 31, isUnsigned: true)
!10531 = !DIEnumerator(name: "NETDEV_CVLAN_FILTER_DROP_INFO", value: 32, isUnsigned: true)
!10532 = !DIEnumerator(name: "NETDEV_SVLAN_FILTER_PUSH_INFO", value: 33, isUnsigned: true)
!10533 = !DIEnumerator(name: "NETDEV_SVLAN_FILTER_DROP_INFO", value: 34, isUnsigned: true)
!10534 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_priv_flags", file: !6, line: 1538, baseType: !14, size: 32, elements: !10535)
!10535 = !{!10536, !10537, !10538, !10539, !10540, !10541, !10542, !10543, !10544, !10545, !10546, !10547, !10548, !10549, !10550, !10551, !10552, !10553, !10554, !10555, !10556, !10557, !10558, !10559, !10560, !10561, !10562, !10563, !10564, !10565, !10566}
!10536 = !DIEnumerator(name: "IFF_802_1Q_VLAN", value: 1, isUnsigned: true)
!10537 = !DIEnumerator(name: "IFF_EBRIDGE", value: 2, isUnsigned: true)
!10538 = !DIEnumerator(name: "IFF_BONDING", value: 4, isUnsigned: true)
!10539 = !DIEnumerator(name: "IFF_ISATAP", value: 8, isUnsigned: true)
!10540 = !DIEnumerator(name: "IFF_WAN_HDLC", value: 16, isUnsigned: true)
!10541 = !DIEnumerator(name: "IFF_XMIT_DST_RELEASE", value: 32, isUnsigned: true)
!10542 = !DIEnumerator(name: "IFF_DONT_BRIDGE", value: 64, isUnsigned: true)
!10543 = !DIEnumerator(name: "IFF_DISABLE_NETPOLL", value: 128, isUnsigned: true)
!10544 = !DIEnumerator(name: "IFF_MACVLAN_PORT", value: 256, isUnsigned: true)
!10545 = !DIEnumerator(name: "IFF_BRIDGE_PORT", value: 512, isUnsigned: true)
!10546 = !DIEnumerator(name: "IFF_OVS_DATAPATH", value: 1024, isUnsigned: true)
!10547 = !DIEnumerator(name: "IFF_TX_SKB_SHARING", value: 2048, isUnsigned: true)
!10548 = !DIEnumerator(name: "IFF_UNICAST_FLT", value: 4096, isUnsigned: true)
!10549 = !DIEnumerator(name: "IFF_TEAM_PORT", value: 8192, isUnsigned: true)
!10550 = !DIEnumerator(name: "IFF_SUPP_NOFCS", value: 16384, isUnsigned: true)
!10551 = !DIEnumerator(name: "IFF_LIVE_ADDR_CHANGE", value: 32768, isUnsigned: true)
!10552 = !DIEnumerator(name: "IFF_MACVLAN", value: 65536, isUnsigned: true)
!10553 = !DIEnumerator(name: "IFF_XMIT_DST_RELEASE_PERM", value: 131072, isUnsigned: true)
!10554 = !DIEnumerator(name: "IFF_L3MDEV_MASTER", value: 262144, isUnsigned: true)
!10555 = !DIEnumerator(name: "IFF_NO_QUEUE", value: 524288, isUnsigned: true)
!10556 = !DIEnumerator(name: "IFF_OPENVSWITCH", value: 1048576, isUnsigned: true)
!10557 = !DIEnumerator(name: "IFF_L3MDEV_SLAVE", value: 2097152, isUnsigned: true)
!10558 = !DIEnumerator(name: "IFF_TEAM", value: 4194304, isUnsigned: true)
!10559 = !DIEnumerator(name: "IFF_RXFH_CONFIGURED", value: 8388608, isUnsigned: true)
!10560 = !DIEnumerator(name: "IFF_PHONY_HEADROOM", value: 16777216, isUnsigned: true)
!10561 = !DIEnumerator(name: "IFF_MACSEC", value: 33554432, isUnsigned: true)
!10562 = !DIEnumerator(name: "IFF_NO_RX_HANDLER", value: 67108864, isUnsigned: true)
!10563 = !DIEnumerator(name: "IFF_FAILOVER", value: 134217728, isUnsigned: true)
!10564 = !DIEnumerator(name: "IFF_FAILOVER_SLAVE", value: 268435456, isUnsigned: true)
!10565 = !DIEnumerator(name: "IFF_L3MDEV_RX_HANDLER", value: 536870912, isUnsigned: true)
!10566 = !DIEnumerator(name: "IFF_LIVE_RENAME_OK", value: 1073741824, isUnsigned: true)
!10567 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_lag_tx_type", file: !6, line: 2587, baseType: !14, size: 32, elements: !10568)
!10568 = !{!10569, !10570, !10571, !10572, !10573, !10574}
!10569 = !DIEnumerator(name: "NETDEV_LAG_TX_TYPE_UNKNOWN", value: 0, isUnsigned: true)
!10570 = !DIEnumerator(name: "NETDEV_LAG_TX_TYPE_RANDOM", value: 1, isUnsigned: true)
!10571 = !DIEnumerator(name: "NETDEV_LAG_TX_TYPE_BROADCAST", value: 2, isUnsigned: true)
!10572 = !DIEnumerator(name: "NETDEV_LAG_TX_TYPE_ROUNDROBIN", value: 3, isUnsigned: true)
!10573 = !DIEnumerator(name: "NETDEV_LAG_TX_TYPE_ACTIVEBACKUP", value: 4, isUnsigned: true)
!10574 = !DIEnumerator(name: "NETDEV_LAG_TX_TYPE_HASH", value: 5, isUnsigned: true)
!10575 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_lag_hash", file: !6, line: 2596, baseType: !14, size: 32, elements: !10576)
!10576 = !{!10577, !10578, !10579, !10580, !10581, !10582, !10583}
!10577 = !DIEnumerator(name: "NETDEV_LAG_HASH_NONE", value: 0, isUnsigned: true)
!10578 = !DIEnumerator(name: "NETDEV_LAG_HASH_L2", value: 1, isUnsigned: true)
!10579 = !DIEnumerator(name: "NETDEV_LAG_HASH_L34", value: 2, isUnsigned: true)
!10580 = !DIEnumerator(name: "NETDEV_LAG_HASH_L23", value: 3, isUnsigned: true)
!10581 = !DIEnumerator(name: "NETDEV_LAG_HASH_E23", value: 4, isUnsigned: true)
!10582 = !DIEnumerator(name: "NETDEV_LAG_HASH_E34", value: 5, isUnsigned: true)
!10583 = !DIEnumerator(name: "NETDEV_LAG_HASH_UNKNOWN", value: 6, isUnsigned: true)
!10584 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "net_device_flags", file: !7924, line: 82, baseType: !14, size: 32, elements: !10585)
!10585 = !{!10586, !10587, !10588, !10589, !10590, !10591, !10592, !10593, !10594, !10595, !10596, !10597, !10598, !10599, !10600, !10601, !10602, !10603, !10604}
!10586 = !DIEnumerator(name: "IFF_UP", value: 1, isUnsigned: true)
!10587 = !DIEnumerator(name: "IFF_BROADCAST", value: 2, isUnsigned: true)
!10588 = !DIEnumerator(name: "IFF_DEBUG", value: 4, isUnsigned: true)
!10589 = !DIEnumerator(name: "IFF_LOOPBACK", value: 8, isUnsigned: true)
!10590 = !DIEnumerator(name: "IFF_POINTOPOINT", value: 16, isUnsigned: true)
!10591 = !DIEnumerator(name: "IFF_NOTRAILERS", value: 32, isUnsigned: true)
!10592 = !DIEnumerator(name: "IFF_RUNNING", value: 64, isUnsigned: true)
!10593 = !DIEnumerator(name: "IFF_NOARP", value: 128, isUnsigned: true)
!10594 = !DIEnumerator(name: "IFF_PROMISC", value: 256, isUnsigned: true)
!10595 = !DIEnumerator(name: "IFF_ALLMULTI", value: 512, isUnsigned: true)
!10596 = !DIEnumerator(name: "IFF_MASTER", value: 1024, isUnsigned: true)
!10597 = !DIEnumerator(name: "IFF_SLAVE", value: 2048, isUnsigned: true)
!10598 = !DIEnumerator(name: "IFF_MULTICAST", value: 4096, isUnsigned: true)
!10599 = !DIEnumerator(name: "IFF_PORTSEL", value: 8192, isUnsigned: true)
!10600 = !DIEnumerator(name: "IFF_AUTOMEDIA", value: 16384, isUnsigned: true)
!10601 = !DIEnumerator(name: "IFF_DYNAMIC", value: 32768, isUnsigned: true)
!10602 = !DIEnumerator(name: "IFF_LOWER_UP", value: 65536, isUnsigned: true)
!10603 = !DIEnumerator(name: "IFF_DORMANT", value: 131072, isUnsigned: true)
!10604 = !DIEnumerator(name: "IFF_ECHO", value: 262144, isUnsigned: true)
!10605 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_sldr_op", file: !10113, line: 1269, baseType: !14, size: 32, elements: !10606)
!10606 = !{!10607, !10608, !10609, !10610}
!10607 = !DIEnumerator(name: "MLXSW_REG_SLDR_OP_LAG_CREATE", value: 0, isUnsigned: true)
!10608 = !DIEnumerator(name: "MLXSW_REG_SLDR_OP_LAG_DESTROY", value: 1, isUnsigned: true)
!10609 = !DIEnumerator(name: "MLXSW_REG_SLDR_OP_LAG_ADD_PORT_LIST", value: 2, isUnsigned: true)
!10610 = !DIEnumerator(name: "MLXSW_REG_SLDR_OP_LAG_REMOVE_PORT_LIST", value: 3, isUnsigned: true)
!10611 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_reg_slcor_col", file: !10113, line: 1469, baseType: !14, size: 32, elements: !10612)
!10612 = !{!10613, !10614, !10615, !10616}
!10613 = !DIEnumerator(name: "MLXSW_REG_SLCOR_COL_LAG_ADD_PORT", value: 0, isUnsigned: true)
!10614 = !DIEnumerator(name: "MLXSW_REG_SLCOR_COL_LAG_COLLECTOR_ENABLED", value: 1, isUnsigned: true)
!10615 = !DIEnumerator(name: "MLXSW_REG_SLCOR_COL_LAG_COLLECTOR_DISABLED", value: 2, isUnsigned: true)
!10616 = !DIEnumerator(name: "MLXSW_REG_SLCOR_COL_LAG_REMOVE_PORT", value: 3, isUnsigned: true)
!10617 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1962, line: 30, baseType: !669, size: 64, elements: !10618)
!10618 = !{!10619, !10620, !10621, !10622, !10623, !10624, !10625, !10626, !10627, !10628, !10629, !10630, !10631, !10632, !10633, !10634, !10635, !10636, !10637, !10638, !10639, !10640, !10641, !10642, !10643, !10644, !10645, !10646, !10647}
!10619 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!10620 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!10621 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!10622 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!10623 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!10624 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!10625 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!10626 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!10627 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!10628 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!10629 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!10630 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!10631 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!10632 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!10633 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!10634 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!10635 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!10636 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!10637 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!10638 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!10639 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!10640 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!10641 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!10642 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!10643 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!10644 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!10645 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!10646 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!10647 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!10648 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_resource_unit", file: !315, line: 574, baseType: !14, size: 32, elements: !10649)
!10649 = !{!10650}
!10650 = !DIEnumerator(name: "DEVLINK_RESOURCE_UNIT_ENTRY", value: 0, isUnsigned: true)
!10651 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_sp_resource_id", file: !10118, line: 53, baseType: !14, size: 32, elements: !10652)
!10652 = !{!10653, !10654, !10655, !10656, !10657, !10658, !10659, !10660, !10661, !10662, !10663, !10664, !10665}
!10653 = !DIEnumerator(name: "MLXSW_SP_RESOURCE_KVD", value: 1, isUnsigned: true)
!10654 = !DIEnumerator(name: "MLXSW_SP_RESOURCE_KVD_LINEAR", value: 2, isUnsigned: true)
!10655 = !DIEnumerator(name: "MLXSW_SP_RESOURCE_KVD_HASH_SINGLE", value: 3, isUnsigned: true)
!10656 = !DIEnumerator(name: "MLXSW_SP_RESOURCE_KVD_HASH_DOUBLE", value: 4, isUnsigned: true)
!10657 = !DIEnumerator(name: "MLXSW_SP_RESOURCE_KVD_LINEAR_SINGLE", value: 5, isUnsigned: true)
!10658 = !DIEnumerator(name: "MLXSW_SP_RESOURCE_KVD_LINEAR_CHUNKS", value: 6, isUnsigned: true)
!10659 = !DIEnumerator(name: "MLXSW_SP_RESOURCE_KVD_LINEAR_LARGE_CHUNKS", value: 7, isUnsigned: true)
!10660 = !DIEnumerator(name: "MLXSW_SP_RESOURCE_SPAN", value: 8, isUnsigned: true)
!10661 = !DIEnumerator(name: "MLXSW_SP_RESOURCE_COUNTERS", value: 9, isUnsigned: true)
!10662 = !DIEnumerator(name: "MLXSW_SP_RESOURCE_COUNTERS_FLOW", value: 10, isUnsigned: true)
!10663 = !DIEnumerator(name: "MLXSW_SP_RESOURCE_COUNTERS_RIF", value: 11, isUnsigned: true)
!10664 = !DIEnumerator(name: "MLXSW_SP_RESOURCE_GLOBAL_POLICERS", value: 12, isUnsigned: true)
!10665 = !DIEnumerator(name: "MLXSW_SP_RESOURCE_SINGLE_RATE_POLICERS", value: 13, isUnsigned: true)
!10666 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_devlink_param_id", file: !10667, line: 497, baseType: !14, size: 32, elements: !10668)
!10667 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/core.h", directory: "/home/lizy2001/genbc/linux")
!10668 = !{!10669, !10670}
!10669 = !DIEnumerator(name: "MLXSW_DEVLINK_PARAM_ID_BASE", value: 10, isUnsigned: true)
!10670 = !DIEnumerator(name: "MLXSW_DEVLINK_PARAM_ID_ACL_REGION_REHASH_INTERVAL", value: 11, isUnsigned: true)
!10671 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_param_type", file: !8423, line: 383, baseType: !14, size: 32, elements: !10672)
!10672 = !{!10673, !10674, !10675, !10676, !10677}
!10673 = !DIEnumerator(name: "DEVLINK_PARAM_TYPE_U8", value: 0, isUnsigned: true)
!10674 = !DIEnumerator(name: "DEVLINK_PARAM_TYPE_U16", value: 1, isUnsigned: true)
!10675 = !DIEnumerator(name: "DEVLINK_PARAM_TYPE_U32", value: 2, isUnsigned: true)
!10676 = !DIEnumerator(name: "DEVLINK_PARAM_TYPE_STRING", value: 3, isUnsigned: true)
!10677 = !DIEnumerator(name: "DEVLINK_PARAM_TYPE_BOOL", value: 4, isUnsigned: true)
!10678 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_param_cmode", file: !315, line: 205, baseType: !14, size: 32, elements: !10679)
!10679 = !{!10680, !10681, !10682, !10683, !10684}
!10680 = !DIEnumerator(name: "DEVLINK_PARAM_CMODE_RUNTIME", value: 0, isUnsigned: true)
!10681 = !DIEnumerator(name: "DEVLINK_PARAM_CMODE_DRIVERINIT", value: 1, isUnsigned: true)
!10682 = !DIEnumerator(name: "DEVLINK_PARAM_CMODE_PERMANENT", value: 2, isUnsigned: true)
!10683 = !DIEnumerator(name: "__DEVLINK_PARAM_CMODE_MAX", value: 3, isUnsigned: true)
!10684 = !DIEnumerator(name: "DEVLINK_PARAM_CMODE_MAX", value: 2, isUnsigned: true)
!10685 = !{!2144, !1193, !10686, !726, !10695, !10712, !10715, !11483, !7, !624, !622, !11484, !494, !11485, !733, !473, !11388, !11486, !11488, !11490, !1615, !11491, !11512, !9088, !11515, !11517, !669, !490, !2616, !695, !750, !862, !11519, !10721, !11525, !8429, !8521, !11537, !492}
!10686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10687, size: 64)
!10687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_port_pcpu_stats", file: !10118, line: 225, size: 320, elements: !10688)
!10688 = !{!10689, !10690, !10691, !10692, !10693, !10694}
!10689 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !10687, file: !10118, line: 226, baseType: !492, size: 64)
!10690 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !10687, file: !10118, line: 227, baseType: !492, size: 64, offset: 64)
!10691 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !10687, file: !10118, line: 228, baseType: !492, size: 64, offset: 128)
!10692 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !10687, file: !10118, line: 229, baseType: !492, size: 64, offset: 192)
!10693 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !10687, file: !10118, line: 230, baseType: !2212, offset: 256)
!10694 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !10687, file: !10118, line: 231, baseType: !862, size: 32, offset: 256)
!10695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10696, size: 64)
!10696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_port_sample", file: !10118, line: 234, size: 192, elements: !10697)
!10697 = !{!10698, !10709, !10710, !10711}
!10698 = !DIDerivedType(tag: DW_TAG_member, name: "psample_group", scope: !10696, file: !10118, line: 235, baseType: !10699, size: 64)
!10699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10700, size: 64)
!10700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "psample_group", file: !10701, line: 8, size: 448, elements: !10702)
!10701 = !DIFile(filename: "./include/net/psample.h", directory: "/home/lizy2001/genbc/linux")
!10702 = !{!10703, !10704, !10705, !10706, !10707, !10708}
!10703 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10700, file: !10701, line: 9, baseType: !445, size: 128)
!10704 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !10700, file: !10701, line: 10, baseType: !2116, size: 64, offset: 128)
!10705 = !DIDerivedType(tag: DW_TAG_member, name: "group_num", scope: !10700, file: !10701, line: 11, baseType: !862, size: 32, offset: 192)
!10706 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !10700, file: !10701, line: 12, baseType: !862, size: 32, offset: 224)
!10707 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !10700, file: !10701, line: 13, baseType: !862, size: 32, offset: 256)
!10708 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !10700, file: !10701, line: 14, baseType: !460, size: 128, align: 64, offset: 320)
!10709 = !DIDerivedType(tag: DW_TAG_member, name: "trunc_size", scope: !10696, file: !10118, line: 236, baseType: !862, size: 32, offset: 64)
!10710 = !DIDerivedType(tag: DW_TAG_member, name: "rate", scope: !10696, file: !10118, line: 237, baseType: !862, size: 32, offset: 96)
!10711 = !DIDerivedType(tag: DW_TAG_member, name: "truncate", scope: !10696, file: !10118, line: 238, baseType: !696, size: 8, offset: 128)
!10712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10713, size: 64)
!10713 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10714)
!10714 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !10695)
!10715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10716, size: 64)
!10716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_port", file: !10118, line: 273, size: 8832, elements: !10717)
!10717 = !{!10718, !10719, !10720, !11322, !11323, !11324, !11325, !11326, !11327, !11333, !11369, !11370, !11385, !11386, !11387, !11401, !11404, !11405, !11427, !11428, !11444, !11445, !11446, !11447, !11482}
!10718 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10716, file: !10118, line: 274, baseType: !451, size: 64)
!10719 = !DIDerivedType(tag: DW_TAG_member, name: "pcpu_stats", scope: !10716, file: !10118, line: 275, baseType: !10686, size: 64, offset: 64)
!10720 = !DIDerivedType(tag: DW_TAG_member, name: "mlxsw_sp", scope: !10716, file: !10118, line: 276, baseType: !10721, size: 64, offset: 128)
!10721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10722, size: 64)
!10722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp", file: !10118, line: 142, size: 2752, elements: !10723)
!10723 = !{!10724, !10726, !10730, !10752, !10753, !10754, !10760, !10768, !10771, !10774, !10838, !10841, !10845, !10848, !10851, !10854, !10857, !10860, !10861, !10864, !10867, !10870, !10873, !10893, !10920, !10970, !11015, !11040, !11075, !11129, !11134, !11135, !11139, !11143, !11188, !11242, !11256, !11260, !11279, !11320, !11321}
!10724 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !10722, file: !10118, line: 143, baseType: !10725, size: 64)
!10725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10715, size: 64)
!10726 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !10722, file: !10118, line: 144, baseType: !10727, size: 64, offset: 64)
!10727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10728, size: 64)
!10728 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_core", file: !10729, line: 26, flags: DIFlagFwdDecl)
!10729 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/cmd.h", directory: "/home/lizy2001/genbc/linux")
!10730 = !DIDerivedType(tag: DW_TAG_member, name: "bus_info", scope: !10722, file: !10118, line: 145, baseType: !10731, size: 64, offset: 128)
!10731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10732, size: 64)
!10732 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10733)
!10733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_bus_info", file: !10667, line: 438, size: 2112, elements: !10734)
!10734 = !{!10735, !10736, !10737, !10738, !10745, !10749, !10750, !10751}
!10735 = !DIDerivedType(tag: DW_TAG_member, name: "device_kind", scope: !10733, file: !10667, line: 439, baseType: !453, size: 64)
!10736 = !DIDerivedType(tag: DW_TAG_member, name: "device_name", scope: !10733, file: !10667, line: 440, baseType: !453, size: 64, offset: 64)
!10737 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10733, file: !10667, line: 441, baseType: !4760, size: 64, offset: 128)
!10738 = !DIDerivedType(tag: DW_TAG_member, name: "fw_rev", scope: !10733, file: !10667, line: 442, baseType: !10739, size: 64, offset: 192)
!10739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_fw_rev", file: !10667, line: 431, size: 64, elements: !10740)
!10740 = !{!10741, !10742, !10743, !10744}
!10741 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !10739, file: !10667, line: 432, baseType: !1193, size: 16)
!10742 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !10739, file: !10667, line: 433, baseType: !1193, size: 16, offset: 16)
!10743 = !DIDerivedType(tag: DW_TAG_member, name: "subminor", scope: !10739, file: !10667, line: 434, baseType: !1193, size: 16, offset: 32)
!10744 = !DIDerivedType(tag: DW_TAG_member, name: "can_reset_minor", scope: !10739, file: !10667, line: 435, baseType: !1193, size: 16, offset: 48)
!10745 = !DIDerivedType(tag: DW_TAG_member, name: "vsd", scope: !10733, file: !10667, line: 443, baseType: !10746, size: 1664, offset: 256)
!10746 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1552, size: 1664, elements: !10747)
!10747 = !{!10748}
!10748 = !DISubrange(count: 208)
!10749 = !DIDerivedType(tag: DW_TAG_member, name: "psid", scope: !10733, file: !10667, line: 444, baseType: !10054, size: 128, offset: 1920)
!10750 = !DIDerivedType(tag: DW_TAG_member, name: "low_frequency", scope: !10733, file: !10667, line: 445, baseType: !1552, size: 1, offset: 2048, flags: DIFlagBitField, extraData: i64 2048)
!10751 = !DIDerivedType(tag: DW_TAG_member, name: "read_frc_capable", scope: !10733, file: !10667, line: 446, baseType: !1552, size: 1, offset: 2049, flags: DIFlagBitField, extraData: i64 2048)
!10752 = !DIDerivedType(tag: DW_TAG_member, name: "base_mac", scope: !10722, file: !10118, line: 146, baseType: !9033, size: 48, offset: 192)
!10753 = !DIDerivedType(tag: DW_TAG_member, name: "mac_mask", scope: !10722, file: !10118, line: 147, baseType: !866, size: 64, offset: 256)
!10754 = !DIDerivedType(tag: DW_TAG_member, name: "lags", scope: !10722, file: !10118, line: 148, baseType: !10755, size: 64, offset: 320)
!10755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10756, size: 64)
!10756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_upper", file: !10118, line: 75, size: 128, elements: !10757)
!10757 = !{!10758, !10759}
!10758 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10756, file: !10118, line: 76, baseType: !451, size: 64)
!10759 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !10756, file: !10118, line: 77, baseType: !14, size: 32, offset: 64)
!10760 = !DIDerivedType(tag: DW_TAG_member, name: "port_mapping", scope: !10722, file: !10118, line: 149, baseType: !10761, size: 64, offset: 384)
!10761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10762, size: 64)
!10762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10763, size: 64)
!10763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_port_mapping", file: !10118, line: 136, size: 24, elements: !10764)
!10764 = !{!10765, !10766, !10767}
!10765 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !10763, file: !10118, line: 137, baseType: !1552, size: 8)
!10766 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !10763, file: !10118, line: 138, baseType: !1552, size: 8, offset: 8)
!10767 = !DIDerivedType(tag: DW_TAG_member, name: "lane", scope: !10763, file: !10118, line: 139, baseType: !1552, size: 8, offset: 16)
!10768 = !DIDerivedType(tag: DW_TAG_member, name: "sb", scope: !10722, file: !10118, line: 150, baseType: !10769, size: 64, offset: 448)
!10769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10770, size: 64)
!10770 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_sb", file: !10118, line: 114, flags: DIFlagFwdDecl)
!10771 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !10722, file: !10118, line: 151, baseType: !10772, size: 64, offset: 512)
!10772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10773, size: 64)
!10773 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_bridge", file: !10118, line: 115, flags: DIFlagFwdDecl)
!10774 = !DIDerivedType(tag: DW_TAG_member, name: "router", scope: !10722, file: !10118, line: 152, baseType: !10775, size: 64, offset: 576)
!10775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10776, size: 64)
!10776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_router", file: !10777, line: 18, size: 6848, elements: !10778)
!10777 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/spectrum_router.h", directory: "/home/lizy2001/genbc/linux")
!10778 = !{!10779, !10780, !10784, !10787, !10788, !10789, !10790, !10791, !10800, !10805, !10806, !10807, !10808, !10809, !10810, !10811, !10812, !10813, !10818, !10823, !10824, !10825, !10837}
!10779 = !DIDerivedType(tag: DW_TAG_member, name: "mlxsw_sp", scope: !10776, file: !10777, line: 19, baseType: !10721, size: 64)
!10780 = !DIDerivedType(tag: DW_TAG_member, name: "rifs", scope: !10776, file: !10777, line: 20, baseType: !10781, size: 64, offset: 64)
!10781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10782, size: 64)
!10782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10783, size: 64)
!10783 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_rif", file: !10118, line: 70, flags: DIFlagFwdDecl)
!10784 = !DIDerivedType(tag: DW_TAG_member, name: "vrs", scope: !10776, file: !10777, line: 21, baseType: !10785, size: 64, offset: 128)
!10785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10786, size: 64)
!10786 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_vr", file: !10777, line: 21, flags: DIFlagFwdDecl)
!10787 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_ht", scope: !10776, file: !10777, line: 22, baseType: !2462, size: 1024, offset: 192)
!10788 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop_group_ht", scope: !10776, file: !10777, line: 23, baseType: !2462, size: 1024, offset: 1216)
!10789 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop_ht", scope: !10776, file: !10777, line: 24, baseType: !2462, size: 1024, offset: 2240)
!10790 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop_list", scope: !10776, file: !10777, line: 25, baseType: !445, size: 128, offset: 3264)
!10791 = !DIDerivedType(tag: DW_TAG_member, name: "lpm", scope: !10776, file: !10777, line: 31, baseType: !10792, size: 256, offset: 3392)
!10792 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10776, file: !10777, line: 26, size: 256, elements: !10793)
!10793 = !{!10794, !10798, !10799}
!10794 = !DIDerivedType(tag: DW_TAG_member, name: "proto_trees", scope: !10792, file: !10777, line: 28, baseType: !10795, size: 128)
!10795 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10796, size: 128, elements: !634)
!10796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10797, size: 64)
!10797 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_lpm_tree", file: !10777, line: 28, flags: DIFlagFwdDecl)
!10798 = !DIDerivedType(tag: DW_TAG_member, name: "trees", scope: !10792, file: !10777, line: 29, baseType: !10796, size: 64, offset: 128)
!10799 = !DIDerivedType(tag: DW_TAG_member, name: "tree_count", scope: !10792, file: !10777, line: 30, baseType: !14, size: 32, offset: 192)
!10800 = !DIDerivedType(tag: DW_TAG_member, name: "neighs_update", scope: !10776, file: !10777, line: 35, baseType: !10801, size: 768, offset: 3648)
!10801 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10776, file: !10777, line: 32, size: 768, elements: !10802)
!10802 = !{!10803, !10804}
!10803 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !10801, file: !10777, line: 33, baseType: !3093, size: 704)
!10804 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !10801, file: !10777, line: 34, baseType: !473, size: 64, offset: 704)
!10805 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop_probe_dw", scope: !10776, file: !10777, line: 36, baseType: !3093, size: 704, offset: 4416)
!10806 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop_neighs_list", scope: !10776, file: !10777, line: 38, baseType: !445, size: 128, offset: 5120)
!10807 = !DIDerivedType(tag: DW_TAG_member, name: "ipip_list", scope: !10776, file: !10777, line: 39, baseType: !445, size: 128, offset: 5248)
!10808 = !DIDerivedType(tag: DW_TAG_member, name: "aborted", scope: !10776, file: !10777, line: 40, baseType: !696, size: 8, offset: 5376)
!10809 = !DIDerivedType(tag: DW_TAG_member, name: "fib_nb", scope: !10776, file: !10777, line: 41, baseType: !2170, size: 192, offset: 5440)
!10810 = !DIDerivedType(tag: DW_TAG_member, name: "netevent_nb", scope: !10776, file: !10777, line: 42, baseType: !2170, size: 192, offset: 5632)
!10811 = !DIDerivedType(tag: DW_TAG_member, name: "inetaddr_nb", scope: !10776, file: !10777, line: 43, baseType: !2170, size: 192, offset: 5824)
!10812 = !DIDerivedType(tag: DW_TAG_member, name: "inet6addr_nb", scope: !10776, file: !10777, line: 44, baseType: !2170, size: 192, offset: 6016)
!10813 = !DIDerivedType(tag: DW_TAG_member, name: "rif_ops_arr", scope: !10776, file: !10777, line: 45, baseType: !10814, size: 64, offset: 6208)
!10814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10815, size: 64)
!10815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10816, size: 64)
!10816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10817)
!10817 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_rif_ops", file: !10118, line: 88, flags: DIFlagFwdDecl)
!10818 = !DIDerivedType(tag: DW_TAG_member, name: "ipip_ops_arr", scope: !10776, file: !10777, line: 46, baseType: !10819, size: 64, offset: 6272)
!10819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10820, size: 64)
!10820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10821, size: 64)
!10821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10822)
!10822 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_ipip_ops", file: !10777, line: 46, flags: DIFlagFwdDecl)
!10823 = !DIDerivedType(tag: DW_TAG_member, name: "adj_discard_index", scope: !10776, file: !10777, line: 47, baseType: !862, size: 32, offset: 6336)
!10824 = !DIDerivedType(tag: DW_TAG_member, name: "adj_discard_index_valid", scope: !10776, file: !10777, line: 48, baseType: !696, size: 8, offset: 6368)
!10825 = !DIDerivedType(tag: DW_TAG_member, name: "nve_decap_config", scope: !10776, file: !10777, line: 49, baseType: !10826, size: 256, offset: 6400)
!10826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_router_nve_decap", file: !10777, line: 10, size: 256, elements: !10827)
!10827 = !{!10828, !10829, !10830, !10831, !10836}
!10828 = !DIDerivedType(tag: DW_TAG_member, name: "ul_tb_id", scope: !10826, file: !10777, line: 11, baseType: !862, size: 32)
!10829 = !DIDerivedType(tag: DW_TAG_member, name: "tunnel_index", scope: !10826, file: !10777, line: 12, baseType: !862, size: 32, offset: 32)
!10830 = !DIDerivedType(tag: DW_TAG_member, name: "ul_proto", scope: !10826, file: !10777, line: 13, baseType: !10122, size: 32, offset: 64)
!10831 = !DIDerivedType(tag: DW_TAG_member, name: "ul_sip", scope: !10826, file: !10777, line: 14, baseType: !10832, size: 128, offset: 96)
!10832 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "mlxsw_sp_l3addr", file: !10118, line: 622, size: 128, elements: !10833)
!10833 = !{!10834, !10835}
!10834 = !DIDerivedType(tag: DW_TAG_member, name: "addr4", scope: !10832, file: !10118, line: 623, baseType: !622, size: 32)
!10835 = !DIDerivedType(tag: DW_TAG_member, name: "addr6", scope: !10832, file: !10118, line: 624, baseType: !2384, size: 128)
!10836 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !10826, file: !10777, line: 15, baseType: !1552, size: 1, offset: 224, flags: DIFlagBitField, extraData: i64 224)
!10837 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10776, file: !10777, line: 50, baseType: !1109, size: 192, offset: 6656)
!10838 = !DIDerivedType(tag: DW_TAG_member, name: "mr", scope: !10722, file: !10118, line: 153, baseType: !10839, size: 64, offset: 640)
!10839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10840, size: 64)
!10840 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_mr", file: !10118, line: 117, flags: DIFlagFwdDecl)
!10841 = !DIDerivedType(tag: DW_TAG_member, name: "afa", scope: !10722, file: !10118, line: 154, baseType: !10842, size: 64, offset: 704)
!10842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10843, size: 64)
!10843 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_afa", file: !10844, line: 11, flags: DIFlagFwdDecl)
!10844 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.h", directory: "/home/lizy2001/genbc/linux")
!10845 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !10722, file: !10118, line: 155, baseType: !10846, size: 64, offset: 768)
!10846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10847, size: 64)
!10847 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_acl", file: !10118, line: 118, flags: DIFlagFwdDecl)
!10848 = !DIDerivedType(tag: DW_TAG_member, name: "fid_core", scope: !10722, file: !10118, line: 156, baseType: !10849, size: 64, offset: 832)
!10849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10850, size: 64)
!10850 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_fid_core", file: !10118, line: 120, flags: DIFlagFwdDecl)
!10851 = !DIDerivedType(tag: DW_TAG_member, name: "policer_core", scope: !10722, file: !10118, line: 157, baseType: !10852, size: 64, offset: 896)
!10852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10853, size: 64)
!10853 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_policer_core", file: !10118, line: 157, flags: DIFlagFwdDecl)
!10854 = !DIDerivedType(tag: DW_TAG_member, name: "kvdl", scope: !10722, file: !10118, line: 158, baseType: !10855, size: 64, offset: 960)
!10855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10856, size: 64)
!10856 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_kvdl", file: !10118, line: 121, flags: DIFlagFwdDecl)
!10857 = !DIDerivedType(tag: DW_TAG_member, name: "nve", scope: !10722, file: !10118, line: 159, baseType: !10858, size: 64, offset: 1024)
!10858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10859, size: 64)
!10859 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_nve", file: !10118, line: 122, flags: DIFlagFwdDecl)
!10860 = !DIDerivedType(tag: DW_TAG_member, name: "netdevice_nb", scope: !10722, file: !10118, line: 160, baseType: !2170, size: 192, offset: 1088)
!10861 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !10722, file: !10118, line: 161, baseType: !10862, size: 64, offset: 1280)
!10862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10863, size: 64)
!10863 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_ptp_clock", file: !10118, line: 161, flags: DIFlagFwdDecl)
!10864 = !DIDerivedType(tag: DW_TAG_member, name: "ptp_state", scope: !10722, file: !10118, line: 162, baseType: !10865, size: 64, offset: 1344)
!10865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10866, size: 64)
!10866 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_ptp_state", file: !10118, line: 131, flags: DIFlagFwdDecl)
!10867 = !DIDerivedType(tag: DW_TAG_member, name: "counter_pool", scope: !10722, file: !10118, line: 163, baseType: !10868, size: 64, offset: 1408)
!10868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10869, size: 64)
!10869 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_counter_pool", file: !10118, line: 119, flags: DIFlagFwdDecl)
!10870 = !DIDerivedType(tag: DW_TAG_member, name: "span", scope: !10722, file: !10118, line: 164, baseType: !10871, size: 64, offset: 1472)
!10871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10872, size: 64)
!10872 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_span", file: !10118, line: 164, flags: DIFlagFwdDecl)
!10873 = !DIDerivedType(tag: DW_TAG_member, name: "trap", scope: !10722, file: !10118, line: 165, baseType: !10874, size: 64, offset: 1536)
!10874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10875, size: 64)
!10875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_trap", file: !10876, line: 10, size: 512, elements: !10877)
!10876 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/spectrum_trap.h", directory: "/home/lizy2001/genbc/linux")
!10877 = !{!10878, !10881, !10882, !10885, !10886, !10889, !10890, !10891, !10892}
!10878 = !DIDerivedType(tag: DW_TAG_member, name: "policer_items_arr", scope: !10875, file: !10876, line: 11, baseType: !10879, size: 64)
!10879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10880, size: 64)
!10880 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_trap_policer_item", file: !10876, line: 11, flags: DIFlagFwdDecl)
!10881 = !DIDerivedType(tag: DW_TAG_member, name: "policers_count", scope: !10875, file: !10876, line: 12, baseType: !750, size: 64, offset: 64)
!10882 = !DIDerivedType(tag: DW_TAG_member, name: "group_items_arr", scope: !10875, file: !10876, line: 14, baseType: !10883, size: 64, offset: 128)
!10883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10884, size: 64)
!10884 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_trap_group_item", file: !10876, line: 14, flags: DIFlagFwdDecl)
!10885 = !DIDerivedType(tag: DW_TAG_member, name: "groups_count", scope: !10875, file: !10876, line: 15, baseType: !750, size: 64, offset: 192)
!10886 = !DIDerivedType(tag: DW_TAG_member, name: "trap_items_arr", scope: !10875, file: !10876, line: 17, baseType: !10887, size: 64, offset: 256)
!10887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10888, size: 64)
!10888 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_trap_item", file: !10876, line: 17, flags: DIFlagFwdDecl)
!10889 = !DIDerivedType(tag: DW_TAG_member, name: "traps_count", scope: !10875, file: !10876, line: 18, baseType: !750, size: 64, offset: 320)
!10890 = !DIDerivedType(tag: DW_TAG_member, name: "thin_policer_hw_id", scope: !10875, file: !10876, line: 20, baseType: !1193, size: 16, offset: 384)
!10891 = !DIDerivedType(tag: DW_TAG_member, name: "max_policers", scope: !10875, file: !10876, line: 22, baseType: !492, size: 64, offset: 448)
!10892 = !DIDerivedType(tag: DW_TAG_member, name: "policers_usage", scope: !10875, file: !10876, line: 23, baseType: !6354, offset: 512)
!10893 = !DIDerivedType(tag: DW_TAG_member, name: "kvdl_ops", scope: !10722, file: !10118, line: 166, baseType: !10894, size: 64, offset: 1600)
!10894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10895, size: 64)
!10895 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10896)
!10896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_kvdl_ops", file: !10118, line: 697, size: 448, elements: !10897)
!10897 = !{!10898, !10899, !10903, !10907, !10911, !10915, !10919}
!10898 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !10896, file: !10118, line: 698, baseType: !750, size: 64)
!10899 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !10896, file: !10118, line: 699, baseType: !10900, size: 64, offset: 64)
!10900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10901, size: 64)
!10901 = !DISubroutineType(types: !10902)
!10902 = !{!7, !10721, !726}
!10903 = !DIDerivedType(tag: DW_TAG_member, name: "fini", scope: !10896, file: !10118, line: 700, baseType: !10904, size: 64, offset: 128)
!10904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10905, size: 64)
!10905 = !DISubroutineType(types: !10906)
!10906 = !{null, !10721, !726}
!10907 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !10896, file: !10118, line: 701, baseType: !10908, size: 64, offset: 192)
!10908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10909, size: 64)
!10909 = !DISubroutineType(types: !10910)
!10910 = !{!7, !10721, !726, !10126, !14, !1615}
!10911 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !10896, file: !10118, line: 704, baseType: !10912, size: 64, offset: 256)
!10912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10913, size: 64)
!10913 = !DISubroutineType(types: !10914)
!10914 = !{null, !10721, !726, !10126, !14, !7}
!10915 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size_query", scope: !10896, file: !10118, line: 707, baseType: !10916, size: 64, offset: 320)
!10916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10917, size: 64)
!10917 = !DISubroutineType(types: !10918)
!10918 = !{!7, !10721, !726, !10126, !14, !6841}
!10919 = !DIDerivedType(tag: DW_TAG_member, name: "resources_register", scope: !10896, file: !10118, line: 711, baseType: !10900, size: 64, offset: 384)
!10920 = !DIDerivedType(tag: DW_TAG_member, name: "afa_ops", scope: !10722, file: !10118, line: 167, baseType: !10921, size: 64, offset: 1664)
!10921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10922, size: 64)
!10922 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10923)
!10923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_afa_ops", file: !10844, line: 14, size: 768, elements: !10924)
!10924 = !{!10925, !10929, !10933, !10937, !10941, !10945, !10949, !10953, !10957, !10961, !10965, !10969}
!10925 = !DIDerivedType(tag: DW_TAG_member, name: "kvdl_set_add", scope: !10923, file: !10844, line: 15, baseType: !10926, size: 64)
!10926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10927, size: 64)
!10927 = !DISubroutineType(types: !10928)
!10928 = !{!7, !726, !1615, !733, !696}
!10929 = !DIDerivedType(tag: DW_TAG_member, name: "kvdl_set_del", scope: !10923, file: !10844, line: 17, baseType: !10930, size: 64, offset: 64)
!10930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10931, size: 64)
!10931 = !DISubroutineType(types: !10932)
!10932 = !{null, !726, !862, !696}
!10933 = !DIDerivedType(tag: DW_TAG_member, name: "kvdl_set_activity_get", scope: !10923, file: !10844, line: 18, baseType: !10934, size: 64, offset: 128)
!10934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10935, size: 64)
!10935 = !DISubroutineType(types: !10936)
!10936 = !{!7, !726, !862, !7211}
!10937 = !DIDerivedType(tag: DW_TAG_member, name: "kvdl_fwd_entry_add", scope: !10923, file: !10844, line: 20, baseType: !10938, size: 64, offset: 192)
!10938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10939, size: 64)
!10939 = !DISubroutineType(types: !10940)
!10940 = !{!7, !726, !1615, !1552}
!10941 = !DIDerivedType(tag: DW_TAG_member, name: "kvdl_fwd_entry_del", scope: !10923, file: !10844, line: 21, baseType: !10942, size: 64, offset: 256)
!10942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10943, size: 64)
!10943 = !DISubroutineType(types: !10944)
!10944 = !{null, !726, !862}
!10945 = !DIDerivedType(tag: DW_TAG_member, name: "counter_index_get", scope: !10923, file: !10844, line: 22, baseType: !10946, size: 64, offset: 320)
!10946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10947, size: 64)
!10947 = !DISubroutineType(types: !10948)
!10948 = !{!7, !726, !6841}
!10949 = !DIDerivedType(tag: DW_TAG_member, name: "counter_index_put", scope: !10923, file: !10844, line: 23, baseType: !10950, size: 64, offset: 384)
!10950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10951, size: 64)
!10951 = !DISubroutineType(types: !10952)
!10952 = !{null, !726, !14}
!10953 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_add", scope: !10923, file: !10844, line: 24, baseType: !10954, size: 64, offset: 448)
!10954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10955, size: 64)
!10955 = !DISubroutineType(types: !10956)
!10956 = !{!7, !726, !1552, !3023, !696, !695}
!10957 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_del", scope: !10923, file: !10844, line: 27, baseType: !10958, size: 64, offset: 512)
!10958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10959, size: 64)
!10959 = !DISubroutineType(types: !10960)
!10960 = !{null, !726, !1552, !7, !696}
!10961 = !DIDerivedType(tag: DW_TAG_member, name: "policer_add", scope: !10923, file: !10844, line: 29, baseType: !10962, size: 64, offset: 576)
!10962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10963, size: 64)
!10963 = !DISubroutineType(types: !10964)
!10964 = !{!7, !726, !492, !862, !8521, !2633}
!10965 = !DIDerivedType(tag: DW_TAG_member, name: "policer_del", scope: !10923, file: !10844, line: 32, baseType: !10966, size: 64, offset: 640)
!10966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10967, size: 64)
!10967 = !DISubroutineType(types: !10968)
!10968 = !{null, !726, !1193}
!10969 = !DIDerivedType(tag: DW_TAG_member, name: "dummy_first_set", scope: !10923, file: !10844, line: 33, baseType: !696, size: 8, offset: 704)
!10970 = !DIDerivedType(tag: DW_TAG_member, name: "afk_ops", scope: !10722, file: !10118, line: 168, baseType: !10971, size: 64, offset: 1728)
!10971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10972, size: 64)
!10972 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10973)
!10973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_afk_ops", file: !10134, line: 174, size: 256, elements: !10974)
!10974 = !{!10975, !11006, !11007, !11011}
!10975 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !10973, file: !10134, line: 175, baseType: !10976, size: 64)
!10976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10977, size: 64)
!10977 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10978)
!10978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_afk_block", file: !10134, line: 114, size: 192, elements: !10979)
!10979 = !{!10980, !10981, !11005}
!10980 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !10978, file: !10134, line: 115, baseType: !1193, size: 16)
!10981 = !DIDerivedType(tag: DW_TAG_member, name: "instances", scope: !10978, file: !10134, line: 116, baseType: !10982, size: 64, offset: 64)
!10982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10983, size: 64)
!10983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_afk_element_inst", file: !10134, line: 74, size: 320, elements: !10984)
!10984 = !{!10985, !10986, !10987, !11003, !11004}
!10985 = !DIDerivedType(tag: DW_TAG_member, name: "element", scope: !10983, file: !10134, line: 75, baseType: !10133, size: 32)
!10986 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10983, file: !10134, line: 76, baseType: !10162, size: 32, offset: 32)
!10987 = !DIDerivedType(tag: DW_TAG_member, name: "item", scope: !10983, file: !10134, line: 77, baseType: !10988, size: 192, offset: 64)
!10988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_item", file: !10989, line: 11, size: 192, elements: !10990)
!10989 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/item.h", directory: "/home/lizy2001/genbc/linux")
!10990 = !{!10991, !10992, !10993, !10994, !10995, !10996, !10997, !11002}
!10991 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !10988, file: !10989, line: 12, baseType: !633, size: 16)
!10992 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !10988, file: !10989, line: 13, baseType: !1401, size: 16, offset: 16)
!10993 = !DIDerivedType(tag: DW_TAG_member, name: "in_step_offset", scope: !10988, file: !10989, line: 14, baseType: !633, size: 16, offset: 32)
!10994 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !10988, file: !10989, line: 15, baseType: !650, size: 8, offset: 48)
!10995 = !DIDerivedType(tag: DW_TAG_member, name: "element_size", scope: !10988, file: !10989, line: 16, baseType: !650, size: 8, offset: 56)
!10996 = !DIDerivedType(tag: DW_TAG_member, name: "no_real_shift", scope: !10988, file: !10989, line: 17, baseType: !696, size: 8, offset: 64)
!10997 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !10988, file: !10989, line: 21, baseType: !10998, size: 16, offset: 80)
!10998 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10988, file: !10989, line: 18, size: 16, elements: !10999)
!10999 = !{!11000, !11001}
!11000 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !10998, file: !10989, line: 19, baseType: !650, size: 8)
!11001 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !10998, file: !10989, line: 20, baseType: !633, size: 16)
!11002 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10988, file: !10989, line: 22, baseType: !453, size: 64, offset: 128)
!11003 = !DIDerivedType(tag: DW_TAG_member, name: "u32_key_diff", scope: !10983, file: !10134, line: 78, baseType: !7, size: 32, offset: 256)
!11004 = !DIDerivedType(tag: DW_TAG_member, name: "avoid_size_check", scope: !10983, file: !10134, line: 81, baseType: !696, size: 8, offset: 288)
!11005 = !DIDerivedType(tag: DW_TAG_member, name: "instances_count", scope: !10978, file: !10134, line: 117, baseType: !14, size: 32, offset: 128)
!11006 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_count", scope: !10973, file: !10134, line: 176, baseType: !14, size: 32, offset: 64)
!11007 = !DIDerivedType(tag: DW_TAG_member, name: "encode_block", scope: !10973, file: !10134, line: 177, baseType: !11008, size: 64, offset: 128)
!11008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11009, size: 64)
!11009 = !DISubroutineType(types: !11010)
!11010 = !{null, !733, !7, !733}
!11011 = !DIDerivedType(tag: DW_TAG_member, name: "clear_block", scope: !10973, file: !10134, line: 178, baseType: !11012, size: 64, offset: 192)
!11012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11013, size: 64)
!11013 = !DISubroutineType(types: !11014)
!11014 = !{null, !733, !7}
!11015 = !DIDerivedType(tag: DW_TAG_member, name: "mr_tcam_ops", scope: !10722, file: !10118, line: 169, baseType: !11016, size: 64, offset: 1792)
!11016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11017, size: 64)
!11017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11018)
!11018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_mr_tcam_ops", file: !10118, line: 1166, size: 448, elements: !11019)
!11019 = !{!11020, !11021, !11022, !11023, !11024, !11032, !11036}
!11020 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !11018, file: !10118, line: 1167, baseType: !750, size: 64)
!11021 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !11018, file: !10118, line: 1168, baseType: !10900, size: 64, offset: 64)
!11022 = !DIDerivedType(tag: DW_TAG_member, name: "fini", scope: !11018, file: !10118, line: 1169, baseType: !3885, size: 64, offset: 128)
!11023 = !DIDerivedType(tag: DW_TAG_member, name: "route_priv_size", scope: !11018, file: !10118, line: 1170, baseType: !750, size: 64, offset: 192)
!11024 = !DIDerivedType(tag: DW_TAG_member, name: "route_create", scope: !11018, file: !10118, line: 1171, baseType: !11025, size: 64, offset: 256)
!11025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11026, size: 64)
!11026 = !DISubroutineType(types: !11027)
!11027 = !{!7, !10721, !726, !726, !11028, !11030, !10166}
!11028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11029, size: 64)
!11029 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_mr_route_key", file: !10118, line: 1164, flags: DIFlagFwdDecl)
!11030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11031, size: 64)
!11031 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_afa_block", file: !10844, line: 12, flags: DIFlagFwdDecl)
!11032 = !DIDerivedType(tag: DW_TAG_member, name: "route_destroy", scope: !11018, file: !10118, line: 1176, baseType: !11033, size: 64, offset: 320)
!11033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11034, size: 64)
!11034 = !DISubroutineType(types: !11035)
!11035 = !{null, !10721, !726, !726, !11028}
!11036 = !DIDerivedType(tag: DW_TAG_member, name: "route_update", scope: !11018, file: !10118, line: 1179, baseType: !11037, size: 64, offset: 384)
!11037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11038, size: 64)
!11038 = !DISubroutineType(types: !11039)
!11039 = !{!7, !10721, !726, !11028, !11030}
!11040 = !DIDerivedType(tag: DW_TAG_member, name: "acl_rulei_ops", scope: !10722, file: !10118, line: 170, baseType: !11041, size: 64, offset: 1856)
!11041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11042, size: 64)
!11042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11043)
!11043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_acl_rulei_ops", file: !10118, line: 960, size: 64, elements: !11044)
!11044 = !{!11045}
!11045 = !DIDerivedType(tag: DW_TAG_member, name: "act_mangle_field", scope: !11043, file: !10118, line: 961, baseType: !11046, size: 64)
!11046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11047, size: 64)
!11047 = !DISubroutineType(types: !11048)
!11048 = !{!7, !10721, !11049, !11073, !862, !2633}
!11049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11050, size: 64)
!11050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_acl_rule_info", file: !10118, line: 734, size: 1344, elements: !11051)
!11051 = !{!11052, !11053, !11065, !11066, !11067, !11068, !11069, !11070, !11071, !11072}
!11052 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !11050, file: !10118, line: 735, baseType: !14, size: 32)
!11053 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !11050, file: !10118, line: 736, baseType: !11054, size: 1088, offset: 64)
!11054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_afk_element_values", file: !10134, line: 200, size: 1088, elements: !11055)
!11055 = !{!11056, !11060}
!11056 = !DIDerivedType(tag: DW_TAG_member, name: "elusage", scope: !11054, file: !10134, line: 201, baseType: !11057, size: 64)
!11057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_afk_element_usage", file: !10134, line: 127, size: 64, elements: !11058)
!11058 = !{!11059}
!11059 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !11057, file: !10134, line: 128, baseType: !1570, size: 64)
!11060 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !11054, file: !10134, line: 205, baseType: !11061, size: 1024, offset: 64)
!11061 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11054, file: !10134, line: 202, size: 1024, elements: !11062)
!11062 = !{!11063, !11064}
!11063 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11061, file: !10134, line: 203, baseType: !5296, size: 512)
!11064 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !11061, file: !10134, line: 204, baseType: !5296, size: 512, offset: 512)
!11065 = !DIDerivedType(tag: DW_TAG_member, name: "act_block", scope: !11050, file: !10118, line: 737, baseType: !11030, size: 64, offset: 1152)
!11066 = !DIDerivedType(tag: DW_TAG_member, name: "action_created", scope: !11050, file: !10118, line: 738, baseType: !1552, size: 1, offset: 1216, flags: DIFlagBitField, extraData: i64 1216)
!11067 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_bind_blocker", scope: !11050, file: !10118, line: 739, baseType: !1552, size: 1, offset: 1217, flags: DIFlagBitField, extraData: i64 1216)
!11068 = !DIDerivedType(tag: DW_TAG_member, name: "egress_bind_blocker", scope: !11050, file: !10118, line: 740, baseType: !1552, size: 1, offset: 1218, flags: DIFlagBitField, extraData: i64 1216)
!11069 = !DIDerivedType(tag: DW_TAG_member, name: "counter_valid", scope: !11050, file: !10118, line: 741, baseType: !1552, size: 1, offset: 1219, flags: DIFlagBitField, extraData: i64 1216)
!11070 = !DIDerivedType(tag: DW_TAG_member, name: "policer_index_valid", scope: !11050, file: !10118, line: 742, baseType: !1552, size: 1, offset: 1220, flags: DIFlagBitField, extraData: i64 1216)
!11071 = !DIDerivedType(tag: DW_TAG_member, name: "counter_index", scope: !11050, file: !10118, line: 743, baseType: !14, size: 32, offset: 1248)
!11072 = !DIDerivedType(tag: DW_TAG_member, name: "policer_index", scope: !11050, file: !10118, line: 744, baseType: !1193, size: 16, offset: 1280)
!11073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11074, size: 64)
!11074 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_acl_mangle_action", file: !10118, line: 958, flags: DIFlagFwdDecl)
!11075 = !DIDerivedType(tag: DW_TAG_member, name: "acl_tcam_ops", scope: !10722, file: !10118, line: 171, baseType: !11076, size: 64, offset: 1920)
!11076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11077, size: 64)
!11077 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11078)
!11078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_acl_tcam_ops", file: !10118, line: 973, size: 1152, elements: !11079)
!11079 = !{!11080, !11081, !11082, !11088, !11089, !11090, !11096, !11097, !11101, !11105, !11106, !11107, !11111, !11112, !11113, !11117, !11121, !11125}
!11080 = !DIDerivedType(tag: DW_TAG_member, name: "key_type", scope: !11078, file: !10118, line: 974, baseType: !10172, size: 32)
!11081 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !11078, file: !10118, line: 975, baseType: !750, size: 64, offset: 64)
!11082 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !11078, file: !10118, line: 976, baseType: !11083, size: 64, offset: 128)
!11083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11084, size: 64)
!11084 = !DISubroutineType(types: !11085)
!11085 = !{!7, !10721, !726, !11086}
!11086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11087, size: 64)
!11087 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_acl_tcam", file: !10118, line: 970, flags: DIFlagFwdDecl)
!11088 = !DIDerivedType(tag: DW_TAG_member, name: "fini", scope: !11078, file: !10118, line: 978, baseType: !10904, size: 64, offset: 192)
!11089 = !DIDerivedType(tag: DW_TAG_member, name: "region_priv_size", scope: !11078, file: !10118, line: 979, baseType: !750, size: 64, offset: 256)
!11090 = !DIDerivedType(tag: DW_TAG_member, name: "region_init", scope: !11078, file: !10118, line: 980, baseType: !11091, size: 64, offset: 320)
!11091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11092, size: 64)
!11092 = !DISubroutineType(types: !11093)
!11093 = !{!7, !10721, !726, !726, !11094, !726}
!11094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11095, size: 64)
!11095 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_acl_tcam_region", file: !10118, line: 971, flags: DIFlagFwdDecl)
!11096 = !DIDerivedType(tag: DW_TAG_member, name: "region_fini", scope: !11078, file: !10118, line: 984, baseType: !10904, size: 64, offset: 384)
!11097 = !DIDerivedType(tag: DW_TAG_member, name: "region_associate", scope: !11078, file: !10118, line: 985, baseType: !11098, size: 64, offset: 448)
!11098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11099, size: 64)
!11099 = !DISubroutineType(types: !11100)
!11100 = !{!7, !10721, !11094}
!11101 = !DIDerivedType(tag: DW_TAG_member, name: "region_rehash_hints_get", scope: !11078, file: !10118, line: 987, baseType: !11102, size: 64, offset: 512)
!11102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11103, size: 64)
!11103 = !DISubroutineType(types: !11104)
!11104 = !{!726, !726}
!11105 = !DIDerivedType(tag: DW_TAG_member, name: "region_rehash_hints_put", scope: !11078, file: !10118, line: 988, baseType: !3885, size: 64, offset: 576)
!11106 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_priv_size", scope: !11078, file: !10118, line: 989, baseType: !750, size: 64, offset: 640)
!11107 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_init", scope: !11078, file: !10118, line: 990, baseType: !11108, size: 64, offset: 704)
!11108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11109, size: 64)
!11109 = !DISubroutineType(types: !11110)
!11110 = !{null, !726, !726, !14}
!11111 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_fini", scope: !11078, file: !10118, line: 992, baseType: !3885, size: 64, offset: 768)
!11112 = !DIDerivedType(tag: DW_TAG_member, name: "entry_priv_size", scope: !11078, file: !10118, line: 993, baseType: !750, size: 64, offset: 832)
!11113 = !DIDerivedType(tag: DW_TAG_member, name: "entry_add", scope: !11078, file: !10118, line: 994, baseType: !11114, size: 64, offset: 896)
!11114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11115, size: 64)
!11115 = !DISubroutineType(types: !11116)
!11116 = !{!7, !10721, !726, !726, !726, !11049}
!11117 = !DIDerivedType(tag: DW_TAG_member, name: "entry_del", scope: !11078, file: !10118, line: 998, baseType: !11118, size: 64, offset: 960)
!11118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11119, size: 64)
!11119 = !DISubroutineType(types: !11120)
!11120 = !{null, !10721, !726, !726, !726}
!11121 = !DIDerivedType(tag: DW_TAG_member, name: "entry_action_replace", scope: !11078, file: !10118, line: 1001, baseType: !11122, size: 64, offset: 1024)
!11122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11123, size: 64)
!11123 = !DISubroutineType(types: !11124)
!11124 = !{!7, !10721, !726, !726, !11049}
!11125 = !DIDerivedType(tag: DW_TAG_member, name: "entry_activity_get", scope: !11078, file: !10118, line: 1004, baseType: !11126, size: 64, offset: 1088)
!11126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11127, size: 64)
!11127 = !DISubroutineType(types: !11128)
!11128 = !{!7, !10721, !726, !726, !7211}
!11129 = !DIDerivedType(tag: DW_TAG_member, name: "nve_ops_arr", scope: !10722, file: !10118, line: 172, baseType: !11130, size: 64, offset: 1984)
!11130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11131, size: 64)
!11131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11132, size: 64)
!11132 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11133)
!11133 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_nve_ops", file: !10118, line: 127, flags: DIFlagFwdDecl)
!11134 = !DIDerivedType(tag: DW_TAG_member, name: "rif_ops_arr", scope: !10722, file: !10118, line: 173, baseType: !10814, size: 64, offset: 2048)
!11135 = !DIDerivedType(tag: DW_TAG_member, name: "sb_vals", scope: !10722, file: !10118, line: 174, baseType: !11136, size: 64, offset: 2112)
!11136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11137, size: 64)
!11137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11138)
!11138 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_sb_vals", file: !10118, line: 129, flags: DIFlagFwdDecl)
!11139 = !DIDerivedType(tag: DW_TAG_member, name: "sb_ops", scope: !10722, file: !10118, line: 175, baseType: !11140, size: 64, offset: 2176)
!11140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11141, size: 64)
!11141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11142)
!11142 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_sb_ops", file: !10118, line: 128, flags: DIFlagFwdDecl)
!11143 = !DIDerivedType(tag: DW_TAG_member, name: "port_type_speed_ops", scope: !10722, file: !10118, line: 176, baseType: !11144, size: 64, offset: 2240)
!11144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11145, size: 64)
!11145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11146)
!11146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_port_type_speed_ops", file: !10118, line: 325, size: 640, elements: !11147)
!11147 = !{!11148, !11152, !11156, !11160, !11164, !11168, !11172, !11176, !11180, !11184}
!11148 = !DIDerivedType(tag: DW_TAG_member, name: "from_ptys_supported_port", scope: !11146, file: !10118, line: 326, baseType: !11149, size: 64)
!11149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11150, size: 64)
!11150 = !DISubroutineType(types: !11151)
!11151 = !{null, !10721, !862, !9205}
!11152 = !DIDerivedType(tag: DW_TAG_member, name: "from_ptys_link", scope: !11146, file: !10118, line: 329, baseType: !11153, size: 64, offset: 64)
!11153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11154, size: 64)
!11154 = !DISubroutineType(types: !11155)
!11155 = !{null, !10721, !862, !1552, !2616}
!11156 = !DIDerivedType(tag: DW_TAG_member, name: "from_ptys_speed", scope: !11146, file: !10118, line: 331, baseType: !11157, size: 64, offset: 128)
!11157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11158, size: 64)
!11158 = !DISubroutineType(types: !11159)
!11159 = !{!862, !10721, !862}
!11160 = !DIDerivedType(tag: DW_TAG_member, name: "from_ptys_speed_duplex", scope: !11146, file: !10118, line: 332, baseType: !11161, size: 64, offset: 192)
!11161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11162, size: 64)
!11162 = !DISubroutineType(types: !11163)
!11163 = !{null, !10721, !696, !862, !9205}
!11164 = !DIDerivedType(tag: DW_TAG_member, name: "ptys_max_speed", scope: !11146, file: !10118, line: 335, baseType: !11165, size: 64, offset: 256)
!11165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11166, size: 64)
!11166 = !DISubroutineType(types: !11167)
!11167 = !{!7, !10715, !1615}
!11168 = !DIDerivedType(tag: DW_TAG_member, name: "to_ptys_advert_link", scope: !11146, file: !10118, line: 336, baseType: !11169, size: 64, offset: 320)
!11169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11170, size: 64)
!11170 = !DISubroutineType(types: !11171)
!11171 = !{!862, !10721, !1552, !9243}
!11172 = !DIDerivedType(tag: DW_TAG_member, name: "to_ptys_speed", scope: !11146, file: !10118, line: 338, baseType: !11173, size: 64, offset: 384)
!11173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11174, size: 64)
!11174 = !DISubroutineType(types: !11175)
!11175 = !{!862, !10721, !1552, !862}
!11176 = !DIDerivedType(tag: DW_TAG_member, name: "reg_ptys_eth_pack", scope: !11146, file: !10118, line: 339, baseType: !11177, size: 64, offset: 448)
!11177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11178, size: 64)
!11178 = !DISubroutineType(types: !11179)
!11179 = !{null, !10721, !733, !1552, !862, !696}
!11180 = !DIDerivedType(tag: DW_TAG_member, name: "reg_ptys_eth_unpack", scope: !11146, file: !10118, line: 341, baseType: !11181, size: 64, offset: 512)
!11181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11182, size: 64)
!11182 = !DISubroutineType(types: !11183)
!11183 = !{null, !10721, !733, !1615, !1615, !1615}
!11184 = !DIDerivedType(tag: DW_TAG_member, name: "ptys_proto_cap_masked_get", scope: !11146, file: !10118, line: 345, baseType: !11185, size: 64, offset: 576)
!11185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11186, size: 64)
!11186 = !DISubroutineType(types: !11187)
!11187 = !{!862, !862}
!11188 = !DIDerivedType(tag: DW_TAG_member, name: "ptp_ops", scope: !10722, file: !10118, line: 177, baseType: !11189, size: 64, offset: 2304)
!11189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11190, size: 64)
!11190 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11191)
!11191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_ptp_ops", file: !10118, line: 186, size: 832, elements: !11192)
!11192 = !{!11193, !11197, !11201, !11205, !11209, !11213, !11214, !11224, !11225, !11226, !11230, !11234, !11238}
!11193 = !DIDerivedType(tag: DW_TAG_member, name: "clock_init", scope: !11191, file: !10118, line: 188, baseType: !11194, size: 64)
!11194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11195, size: 64)
!11195 = !DISubroutineType(types: !11196)
!11196 = !{!10862, !10721, !4760}
!11197 = !DIDerivedType(tag: DW_TAG_member, name: "clock_fini", scope: !11191, file: !10118, line: 189, baseType: !11198, size: 64, offset: 64)
!11198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11199, size: 64)
!11199 = !DISubroutineType(types: !11200)
!11200 = !{null, !10862}
!11201 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !11191, file: !10118, line: 191, baseType: !11202, size: 64, offset: 128)
!11202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11203, size: 64)
!11203 = !DISubroutineType(types: !11204)
!11204 = !{!10865, !10721}
!11205 = !DIDerivedType(tag: DW_TAG_member, name: "fini", scope: !11191, file: !10118, line: 192, baseType: !11206, size: 64, offset: 192)
!11206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11207, size: 64)
!11207 = !DISubroutineType(types: !11208)
!11208 = !{null, !10865}
!11209 = !DIDerivedType(tag: DW_TAG_member, name: "receive", scope: !11191, file: !10118, line: 197, baseType: !11210, size: 64, offset: 256)
!11210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11211, size: 64)
!11211 = !DISubroutineType(types: !11212)
!11212 = !{null, !10721, !576, !1552}
!11213 = !DIDerivedType(tag: DW_TAG_member, name: "transmitted", scope: !11191, file: !10118, line: 203, baseType: !11210, size: 64, offset: 320)
!11214 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamp_get", scope: !11191, file: !10118, line: 206, baseType: !11215, size: 64, offset: 384)
!11215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11216, size: 64)
!11216 = !DISubroutineType(types: !11217)
!11217 = !{!7, !10715, !11218}
!11218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11219, size: 64)
!11219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hwtstamp_config", file: !10353, line: 62, size: 96, elements: !11220)
!11220 = !{!11221, !11222, !11223}
!11221 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !11219, file: !10353, line: 63, baseType: !7, size: 32)
!11222 = !DIDerivedType(tag: DW_TAG_member, name: "tx_type", scope: !11219, file: !10353, line: 64, baseType: !7, size: 32, offset: 32)
!11223 = !DIDerivedType(tag: DW_TAG_member, name: "rx_filter", scope: !11219, file: !10353, line: 65, baseType: !7, size: 32, offset: 64)
!11224 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamp_set", scope: !11191, file: !10118, line: 208, baseType: !11215, size: 64, offset: 448)
!11225 = !DIDerivedType(tag: DW_TAG_member, name: "shaper_work", scope: !11191, file: !10118, line: 210, baseType: !1968, size: 64, offset: 512)
!11226 = !DIDerivedType(tag: DW_TAG_member, name: "get_ts_info", scope: !11191, file: !10118, line: 211, baseType: !11227, size: 64, offset: 576)
!11227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11228, size: 64)
!11228 = !DISubroutineType(types: !11229)
!11229 = !{!7, !10721, !9138}
!11230 = !DIDerivedType(tag: DW_TAG_member, name: "get_stats_count", scope: !11191, file: !10118, line: 213, baseType: !11231, size: 64, offset: 640)
!11231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11232, size: 64)
!11232 = !DISubroutineType(types: !11233)
!11233 = !{!7}
!11234 = !DIDerivedType(tag: DW_TAG_member, name: "get_stats_strings", scope: !11191, file: !10118, line: 214, baseType: !11235, size: 64, offset: 704)
!11235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11236, size: 64)
!11236 = !DISubroutineType(types: !11237)
!11237 = !{null, !9298}
!11238 = !DIDerivedType(tag: DW_TAG_member, name: "get_stats", scope: !11191, file: !10118, line: 215, baseType: !11239, size: 64, offset: 768)
!11239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11240, size: 64)
!11240 = !DISubroutineType(types: !11241)
!11241 = !{null, !10715, !3933, !7}
!11242 = !DIDerivedType(tag: DW_TAG_member, name: "span_ops", scope: !10722, file: !10118, line: 178, baseType: !11243, size: 64, offset: 2368)
!11243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11244, size: 64)
!11244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11245)
!11245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_span_ops", file: !11246, line: 48, size: 128, elements: !11247)
!11246 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/spectrum_span.h", directory: "/home/lizy2001/genbc/linux")
!11247 = !{!11248, !11252}
!11248 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !11245, file: !11246, line: 49, baseType: !11249, size: 64)
!11249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11250, size: 64)
!11250 = !DISubroutineType(types: !11251)
!11251 = !{!7, !10721}
!11252 = !DIDerivedType(tag: DW_TAG_member, name: "policer_id_base_set", scope: !11245, file: !11246, line: 50, baseType: !11253, size: 64, offset: 64)
!11253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11254, size: 64)
!11254 = !DISubroutineType(types: !11255)
!11255 = !{!7, !10721, !1193}
!11256 = !DIDerivedType(tag: DW_TAG_member, name: "policer_core_ops", scope: !10722, file: !10118, line: 179, baseType: !11257, size: 64, offset: 2432)
!11257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11258, size: 64)
!11258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11259)
!11259 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_policer_core_ops", file: !10118, line: 179, flags: DIFlagFwdDecl)
!11260 = !DIDerivedType(tag: DW_TAG_member, name: "trap_ops", scope: !10722, file: !10118, line: 180, baseType: !11261, size: 64, offset: 2496)
!11261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11262, size: 64)
!11262 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11263)
!11263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_trap_ops", file: !10876, line: 26, size: 128, elements: !11264)
!11264 = !{!11265, !11272}
!11265 = !DIDerivedType(tag: DW_TAG_member, name: "groups_init", scope: !11263, file: !10876, line: 27, baseType: !11266, size: 64)
!11266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11267, size: 64)
!11267 = !DISubroutineType(types: !11268)
!11268 = !{!7, !10721, !11269, !2007}
!11269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11270, size: 64)
!11270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11271, size: 64)
!11271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10884)
!11272 = !DIDerivedType(tag: DW_TAG_member, name: "traps_init", scope: !11263, file: !10876, line: 30, baseType: !11273, size: 64, offset: 64)
!11273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11274, size: 64)
!11274 = !DISubroutineType(types: !11275)
!11275 = !{!7, !10721, !11276, !2007}
!11276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11277, size: 64)
!11277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11278, size: 64)
!11278 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10888)
!11279 = !DIDerivedType(tag: DW_TAG_member, name: "listeners", scope: !10722, file: !10118, line: 181, baseType: !11280, size: 64, offset: 2560)
!11280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11281, size: 64)
!11281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11282)
!11282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_listener", file: !10667, line: 76, size: 320, elements: !11283)
!11283 = !{!11284, !11285, !11313, !11314, !11315, !11316, !11317, !11318, !11319}
!11284 = !DIDerivedType(tag: DW_TAG_member, name: "trap_id", scope: !11282, file: !10667, line: 77, baseType: !1193, size: 16)
!11285 = !DIDerivedType(tag: DW_TAG_member, scope: !11282, file: !10667, line: 78, baseType: !11286, size: 128, offset: 64)
!11286 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11282, file: !10667, line: 78, size: 128, elements: !11287)
!11287 = !{!11288, !11298}
!11288 = !DIDerivedType(tag: DW_TAG_member, name: "rx_listener", scope: !11286, file: !10667, line: 79, baseType: !11289, size: 128)
!11289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_rx_listener", file: !10667, line: 63, size: 128, elements: !11290)
!11290 = !{!11291, !11295, !11296, !11297}
!11291 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !11289, file: !10667, line: 64, baseType: !11292, size: 64)
!11292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11293, size: 64)
!11293 = !DISubroutineType(types: !11294)
!11294 = !{null, !576, !1552, !726}
!11295 = !DIDerivedType(tag: DW_TAG_member, name: "local_port", scope: !11289, file: !10667, line: 65, baseType: !1552, size: 8, offset: 64)
!11296 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_reason", scope: !11289, file: !10667, line: 66, baseType: !1552, size: 8, offset: 72)
!11297 = !DIDerivedType(tag: DW_TAG_member, name: "trap_id", scope: !11289, file: !10667, line: 67, baseType: !1193, size: 16, offset: 80)
!11298 = !DIDerivedType(tag: DW_TAG_member, name: "event_listener", scope: !11286, file: !10667, line: 80, baseType: !11299, size: 128)
!11299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_event_listener", file: !10667, line: 70, size: 128, elements: !11300)
!11300 = !{!11301, !11312}
!11301 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !11299, file: !10667, line: 71, baseType: !11302, size: 64)
!11302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11303, size: 64)
!11303 = !DISubroutineType(types: !11304)
!11304 = !{null, !11305, !733, !726}
!11305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11306, size: 64)
!11306 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11307)
!11307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_reg_info", file: !10113, line: 15, size: 128, elements: !11308)
!11308 = !{!11309, !11310, !11311}
!11309 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11307, file: !10113, line: 16, baseType: !1193, size: 16)
!11310 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !11307, file: !10113, line: 17, baseType: !1193, size: 16, offset: 16)
!11311 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11307, file: !10113, line: 18, baseType: !453, size: 64, offset: 64)
!11312 = !DIDerivedType(tag: DW_TAG_member, name: "trap_id", scope: !11299, file: !10667, line: 73, baseType: !10176, size: 32, offset: 64)
!11313 = !DIDerivedType(tag: DW_TAG_member, name: "en_action", scope: !11282, file: !10667, line: 82, baseType: !10185, size: 32, offset: 192)
!11314 = !DIDerivedType(tag: DW_TAG_member, name: "dis_action", scope: !11282, file: !10667, line: 83, baseType: !10185, size: 32, offset: 224)
!11315 = !DIDerivedType(tag: DW_TAG_member, name: "en_trap_group", scope: !11282, file: !10667, line: 84, baseType: !1552, size: 8, offset: 256)
!11316 = !DIDerivedType(tag: DW_TAG_member, name: "dis_trap_group", scope: !11282, file: !10667, line: 85, baseType: !1552, size: 8, offset: 264)
!11317 = !DIDerivedType(tag: DW_TAG_member, name: "is_ctrl", scope: !11282, file: !10667, line: 86, baseType: !1552, size: 1, offset: 272, flags: DIFlagBitField, extraData: i64 272)
!11318 = !DIDerivedType(tag: DW_TAG_member, name: "is_event", scope: !11282, file: !10667, line: 87, baseType: !1552, size: 1, offset: 273, flags: DIFlagBitField, extraData: i64 272)
!11319 = !DIDerivedType(tag: DW_TAG_member, name: "enabled_on_register", scope: !11282, file: !10667, line: 88, baseType: !1552, size: 1, offset: 274, flags: DIFlagBitField, extraData: i64 272)
!11320 = !DIDerivedType(tag: DW_TAG_member, name: "listeners_count", scope: !10722, file: !10118, line: 182, baseType: !750, size: 64, offset: 2624)
!11321 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_shaper_bs", scope: !10722, file: !10118, line: 183, baseType: !862, size: 32, offset: 2688)
!11322 = !DIDerivedType(tag: DW_TAG_member, name: "local_port", scope: !10716, file: !10118, line: 277, baseType: !1552, size: 8, offset: 192)
!11323 = !DIDerivedType(tag: DW_TAG_member, name: "lagged", scope: !10716, file: !10118, line: 278, baseType: !1552, size: 1, offset: 200, flags: DIFlagBitField, extraData: i64 200)
!11324 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !10716, file: !10118, line: 279, baseType: !1552, size: 1, offset: 201, flags: DIFlagBitField, extraData: i64 200)
!11325 = !DIDerivedType(tag: DW_TAG_member, name: "pvid", scope: !10716, file: !10118, line: 280, baseType: !1193, size: 16, offset: 208)
!11326 = !DIDerivedType(tag: DW_TAG_member, name: "lag_id", scope: !10716, file: !10118, line: 281, baseType: !1193, size: 16, offset: 224)
!11327 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !10716, file: !10118, line: 286, baseType: !11328, size: 8, offset: 240)
!11328 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10716, file: !10118, line: 282, size: 8, elements: !11329)
!11329 = !{!11330, !11331, !11332}
!11330 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause", scope: !11328, file: !10118, line: 283, baseType: !1552, size: 1, flags: DIFlagBitField, extraData: i64 0)
!11331 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause", scope: !11328, file: !10118, line: 284, baseType: !1552, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!11332 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !11328, file: !10118, line: 285, baseType: !1552, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!11333 = !DIDerivedType(tag: DW_TAG_member, name: "dcb", scope: !10716, file: !10118, line: 292, baseType: !11334, size: 256, offset: 256)
!11334 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10716, file: !10118, line: 287, size: 256, elements: !11335)
!11335 = !{!11336, !11352, !11358, !11368}
!11336 = !DIDerivedType(tag: DW_TAG_member, name: "ets", scope: !11334, file: !10118, line: 288, baseType: !11337, size: 64)
!11337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11338, size: 64)
!11338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ieee_ets", file: !11339, line: 58, size: 472, elements: !11340)
!11339 = !DIFile(filename: "./include/uapi/linux/dcbnl.h", directory: "/home/lizy2001/genbc/linux")
!11340 = !{!11341, !11342, !11343, !11344, !11346, !11347, !11348, !11349, !11350, !11351}
!11341 = !DIDerivedType(tag: DW_TAG_member, name: "willing", scope: !11338, file: !11339, line: 59, baseType: !1553, size: 8)
!11342 = !DIDerivedType(tag: DW_TAG_member, name: "ets_cap", scope: !11338, file: !11339, line: 60, baseType: !1553, size: 8, offset: 8)
!11343 = !DIDerivedType(tag: DW_TAG_member, name: "cbs", scope: !11338, file: !11339, line: 61, baseType: !1553, size: 8, offset: 16)
!11344 = !DIDerivedType(tag: DW_TAG_member, name: "tc_tx_bw", scope: !11338, file: !11339, line: 62, baseType: !11345, size: 64, offset: 24)
!11345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1553, size: 64, elements: !1526)
!11346 = !DIDerivedType(tag: DW_TAG_member, name: "tc_rx_bw", scope: !11338, file: !11339, line: 63, baseType: !11345, size: 64, offset: 88)
!11347 = !DIDerivedType(tag: DW_TAG_member, name: "tc_tsa", scope: !11338, file: !11339, line: 64, baseType: !11345, size: 64, offset: 152)
!11348 = !DIDerivedType(tag: DW_TAG_member, name: "prio_tc", scope: !11338, file: !11339, line: 65, baseType: !11345, size: 64, offset: 216)
!11349 = !DIDerivedType(tag: DW_TAG_member, name: "tc_reco_bw", scope: !11338, file: !11339, line: 66, baseType: !11345, size: 64, offset: 280)
!11350 = !DIDerivedType(tag: DW_TAG_member, name: "tc_reco_tsa", scope: !11338, file: !11339, line: 67, baseType: !11345, size: 64, offset: 344)
!11351 = !DIDerivedType(tag: DW_TAG_member, name: "reco_prio_tc", scope: !11338, file: !11339, line: 68, baseType: !11345, size: 64, offset: 408)
!11352 = !DIDerivedType(tag: DW_TAG_member, name: "maxrate", scope: !11334, file: !10118, line: 289, baseType: !11353, size: 64, offset: 64)
!11353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11354, size: 64)
!11354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ieee_maxrate", file: !11339, line: 78, size: 512, elements: !11355)
!11355 = !{!11356}
!11356 = !DIDerivedType(tag: DW_TAG_member, name: "tc_maxrate", scope: !11354, file: !11339, line: 79, baseType: !11357, size: 512)
!11357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !494, size: 512, elements: !1526)
!11358 = !DIDerivedType(tag: DW_TAG_member, name: "pfc", scope: !11334, file: !10118, line: 290, baseType: !11359, size: 64, offset: 128)
!11359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11360, size: 64)
!11360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ieee_pfc", file: !11339, line: 157, size: 1088, elements: !11361)
!11361 = !{!11362, !11363, !11364, !11365, !11366, !11367}
!11362 = !DIDerivedType(tag: DW_TAG_member, name: "pfc_cap", scope: !11360, file: !11339, line: 158, baseType: !1553, size: 8)
!11363 = !DIDerivedType(tag: DW_TAG_member, name: "pfc_en", scope: !11360, file: !11339, line: 159, baseType: !1553, size: 8, offset: 8)
!11364 = !DIDerivedType(tag: DW_TAG_member, name: "mbc", scope: !11360, file: !11339, line: 160, baseType: !1553, size: 8, offset: 16)
!11365 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !11360, file: !11339, line: 161, baseType: !632, size: 16, offset: 32)
!11366 = !DIDerivedType(tag: DW_TAG_member, name: "requests", scope: !11360, file: !11339, line: 162, baseType: !11357, size: 512, offset: 64)
!11367 = !DIDerivedType(tag: DW_TAG_member, name: "indications", scope: !11360, file: !11339, line: 163, baseType: !11357, size: 512, offset: 576)
!11368 = !DIDerivedType(tag: DW_TAG_member, name: "trust_state", scope: !11334, file: !10118, line: 291, baseType: !10112, size: 32, offset: 192)
!11369 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !10716, file: !10118, line: 293, baseType: !10763, size: 24, offset: 512)
!11370 = !DIDerivedType(tag: DW_TAG_member, name: "periodic_hw_stats", scope: !10716, file: !10118, line: 303, baseType: !11371, size: 6400, offset: 576)
!11371 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10716, file: !10118, line: 298, size: 6400, elements: !11372)
!11372 = !{!11373, !11374, !11384}
!11373 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !11371, file: !10118, line: 300, baseType: !8051, size: 1536)
!11374 = !DIDerivedType(tag: DW_TAG_member, name: "xstats", scope: !11371, file: !10118, line: 301, baseType: !11375, size: 4160, offset: 1536)
!11375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_port_xstats", file: !10118, line: 254, size: 4160, elements: !11376)
!11376 = !{!11377, !11378, !11380, !11381, !11382, !11383}
!11377 = !DIDerivedType(tag: DW_TAG_member, name: "ecn", scope: !11375, file: !10118, line: 255, baseType: !492, size: 64)
!11378 = !DIDerivedType(tag: DW_TAG_member, name: "wred_drop", scope: !11375, file: !10118, line: 256, baseType: !11379, size: 1024, offset: 64)
!11379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !492, size: 1024, elements: !430)
!11380 = !DIDerivedType(tag: DW_TAG_member, name: "tail_drop", scope: !11375, file: !10118, line: 257, baseType: !11379, size: 1024, offset: 1088)
!11381 = !DIDerivedType(tag: DW_TAG_member, name: "backlog", scope: !11375, file: !10118, line: 258, baseType: !11379, size: 1024, offset: 2112)
!11382 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !11375, file: !10118, line: 259, baseType: !5122, size: 512, offset: 3136)
!11383 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !11375, file: !10118, line: 260, baseType: !5122, size: 512, offset: 3648)
!11384 = !DIDerivedType(tag: DW_TAG_member, name: "update_dw", scope: !11371, file: !10118, line: 302, baseType: !3093, size: 704, offset: 5696)
!11385 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !10716, file: !10118, line: 304, baseType: !10695, size: 64, offset: 6976)
!11386 = !DIDerivedType(tag: DW_TAG_member, name: "vlans_list", scope: !10716, file: !10118, line: 305, baseType: !445, size: 128, offset: 7040)
!11387 = !DIDerivedType(tag: DW_TAG_member, name: "default_vlan", scope: !10716, file: !10118, line: 306, baseType: !11388, size: 64, offset: 7168)
!11388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11389, size: 64)
!11389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_port_vlan", file: !10118, line: 244, size: 512, elements: !11390)
!11390 = !{!11391, !11392, !11393, !11396, !11397, !11400}
!11391 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !11389, file: !10118, line: 245, baseType: !445, size: 128)
!11392 = !DIDerivedType(tag: DW_TAG_member, name: "mlxsw_sp_port", scope: !11389, file: !10118, line: 246, baseType: !10715, size: 64, offset: 128)
!11393 = !DIDerivedType(tag: DW_TAG_member, name: "fid", scope: !11389, file: !10118, line: 247, baseType: !11394, size: 64, offset: 192)
!11394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11395, size: 64)
!11395 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_fid", file: !10118, line: 242, flags: DIFlagFwdDecl)
!11396 = !DIDerivedType(tag: DW_TAG_member, name: "vid", scope: !11389, file: !10118, line: 248, baseType: !1193, size: 16, offset: 256)
!11397 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_port", scope: !11389, file: !10118, line: 249, baseType: !11398, size: 64, offset: 320)
!11398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11399, size: 64)
!11399 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_bridge_port", file: !10118, line: 241, flags: DIFlagFwdDecl)
!11400 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_vlan_node", scope: !11389, file: !10118, line: 250, baseType: !445, size: 128, offset: 384)
!11401 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !10716, file: !10118, line: 307, baseType: !11402, size: 64, offset: 7232)
!11402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11403, size: 64)
!11403 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_qdisc_state", file: !10118, line: 134, flags: DIFlagFwdDecl)
!11404 = !DIDerivedType(tag: DW_TAG_member, name: "acl_rule_count", scope: !10716, file: !10118, line: 308, baseType: !14, size: 32, offset: 7296)
!11405 = !DIDerivedType(tag: DW_TAG_member, name: "ing_flow_block", scope: !10716, file: !10118, line: 309, baseType: !11406, size: 64, offset: 7360)
!11406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11407, size: 64)
!11407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_flow_block", file: !10118, line: 748, size: 704, elements: !11408)
!11408 = !{!11409, !11410, !11416, !11419, !11420, !11421, !11422, !11423, !11424, !11425, !11426}
!11409 = !DIDerivedType(tag: DW_TAG_member, name: "binding_list", scope: !11407, file: !10118, line: 749, baseType: !445, size: 128)
!11410 = !DIDerivedType(tag: DW_TAG_member, name: "mall", scope: !11407, file: !10118, line: 754, baseType: !11411, size: 192, offset: 128)
!11411 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11407, file: !10118, line: 750, size: 192, elements: !11412)
!11412 = !{!11413, !11414, !11415}
!11413 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !11411, file: !10118, line: 751, baseType: !445, size: 128)
!11414 = !DIDerivedType(tag: DW_TAG_member, name: "min_prio", scope: !11411, file: !10118, line: 752, baseType: !14, size: 32, offset: 128)
!11415 = !DIDerivedType(tag: DW_TAG_member, name: "max_prio", scope: !11411, file: !10118, line: 753, baseType: !14, size: 32, offset: 160)
!11416 = !DIDerivedType(tag: DW_TAG_member, name: "ruleset_zero", scope: !11407, file: !10118, line: 755, baseType: !11417, size: 64, offset: 320)
!11417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11418, size: 64)
!11418 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_acl_ruleset", file: !10118, line: 755, flags: DIFlagFwdDecl)
!11419 = !DIDerivedType(tag: DW_TAG_member, name: "mlxsw_sp", scope: !11407, file: !10118, line: 756, baseType: !10721, size: 64, offset: 384)
!11420 = !DIDerivedType(tag: DW_TAG_member, name: "rule_count", scope: !11407, file: !10118, line: 757, baseType: !14, size: 32, offset: 448)
!11421 = !DIDerivedType(tag: DW_TAG_member, name: "disable_count", scope: !11407, file: !10118, line: 758, baseType: !14, size: 32, offset: 480)
!11422 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_blocker_rule_count", scope: !11407, file: !10118, line: 759, baseType: !14, size: 32, offset: 512)
!11423 = !DIDerivedType(tag: DW_TAG_member, name: "egress_blocker_rule_count", scope: !11407, file: !10118, line: 760, baseType: !14, size: 32, offset: 544)
!11424 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_binding_count", scope: !11407, file: !10118, line: 761, baseType: !14, size: 32, offset: 576)
!11425 = !DIDerivedType(tag: DW_TAG_member, name: "egress_binding_count", scope: !11407, file: !10118, line: 762, baseType: !14, size: 32, offset: 608)
!11426 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !11407, file: !10118, line: 763, baseType: !2116, size: 64, offset: 640)
!11427 = !DIDerivedType(tag: DW_TAG_member, name: "eg_flow_block", scope: !10716, file: !10118, line: 310, baseType: !11406, size: 64, offset: 7424)
!11428 = !DIDerivedType(tag: DW_TAG_member, name: "ptp", scope: !10716, file: !10118, line: 317, baseType: !11429, size: 1088, offset: 7488)
!11429 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10716, file: !10118, line: 311, size: 1088, elements: !11430)
!11430 = !{!11431, !11432, !11433, !11434, !11435}
!11431 = !DIDerivedType(tag: DW_TAG_member, name: "shaper_dw", scope: !11429, file: !10118, line: 312, baseType: !3093, size: 704)
!11432 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamp_config", scope: !11429, file: !10118, line: 313, baseType: !11219, size: 96, offset: 704)
!11433 = !DIDerivedType(tag: DW_TAG_member, name: "ing_types", scope: !11429, file: !10118, line: 314, baseType: !1193, size: 16, offset: 800)
!11434 = !DIDerivedType(tag: DW_TAG_member, name: "egr_types", scope: !11429, file: !10118, line: 315, baseType: !1193, size: 16, offset: 816)
!11435 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !11429, file: !10118, line: 316, baseType: !11436, size: 256, offset: 832)
!11436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_ptp_port_stats", file: !10118, line: 268, size: 256, elements: !11437)
!11437 = !{!11438, !11443}
!11438 = !DIDerivedType(tag: DW_TAG_member, name: "rx_gcd", scope: !11436, file: !10118, line: 269, baseType: !11439, size: 128)
!11439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_ptp_port_dir_stats", file: !10118, line: 263, size: 128, elements: !11440)
!11440 = !{!11441, !11442}
!11441 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !11439, file: !10118, line: 264, baseType: !492, size: 64)
!11442 = !DIDerivedType(tag: DW_TAG_member, name: "timestamps", scope: !11439, file: !10118, line: 265, baseType: !492, size: 64, offset: 64)
!11443 = !DIDerivedType(tag: DW_TAG_member, name: "tx_gcd", scope: !11436, file: !10118, line: 270, baseType: !11439, size: 128, offset: 128)
!11444 = !DIDerivedType(tag: DW_TAG_member, name: "split_base_local_port", scope: !10716, file: !10118, line: 318, baseType: !1552, size: 8, offset: 8576)
!11445 = !DIDerivedType(tag: DW_TAG_member, name: "max_mtu", scope: !10716, file: !10118, line: 319, baseType: !7, size: 32, offset: 8608)
!11446 = !DIDerivedType(tag: DW_TAG_member, name: "max_speed", scope: !10716, file: !10118, line: 320, baseType: !862, size: 32, offset: 8640)
!11447 = !DIDerivedType(tag: DW_TAG_member, name: "hdroom", scope: !10716, file: !10118, line: 321, baseType: !11448, size: 64, offset: 8704)
!11448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11449, size: 64)
!11449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_hdroom", file: !10118, line: 459, size: 1728, elements: !11450)
!11450 = !{!11451, !11452, !11463, !11474, !11480, !11481}
!11451 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !11449, file: !10118, line: 460, baseType: !10117, size: 32)
!11452 = !DIDerivedType(tag: DW_TAG_member, name: "prios", scope: !11449, file: !10118, line: 464, baseType: !11453, size: 256, offset: 32)
!11453 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11449, file: !10118, line: 462, size: 256, elements: !11454)
!11454 = !{!11455}
!11455 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !11453, file: !10118, line: 463, baseType: !11456, size: 256)
!11456 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11457, size: 256, elements: !1526)
!11457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_hdroom_prio", file: !10118, line: 432, size: 32, elements: !11458)
!11458 = !{!11459, !11460, !11461, !11462}
!11459 = !DIDerivedType(tag: DW_TAG_member, name: "buf_idx", scope: !11457, file: !10118, line: 436, baseType: !1552, size: 8)
!11460 = !DIDerivedType(tag: DW_TAG_member, name: "ets_buf_idx", scope: !11457, file: !10118, line: 438, baseType: !1552, size: 8, offset: 8)
!11461 = !DIDerivedType(tag: DW_TAG_member, name: "set_buf_idx", scope: !11457, file: !10118, line: 440, baseType: !1552, size: 8, offset: 16)
!11462 = !DIDerivedType(tag: DW_TAG_member, name: "lossy", scope: !11457, file: !10118, line: 441, baseType: !696, size: 8, offset: 24)
!11463 = !DIDerivedType(tag: DW_TAG_member, name: "bufs", scope: !11449, file: !10118, line: 467, baseType: !11464, size: 1280, offset: 288)
!11464 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11449, file: !10118, line: 465, size: 1280, elements: !11465)
!11465 = !{!11466}
!11466 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !11464, file: !10118, line: 466, baseType: !11467, size: 1280)
!11467 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11468, size: 1280, elements: !2064)
!11468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_hdroom_buf", file: !10118, line: 444, size: 128, elements: !11469)
!11469 = !{!11470, !11471, !11472, !11473}
!11470 = !DIDerivedType(tag: DW_TAG_member, name: "thres_cells", scope: !11468, file: !10118, line: 445, baseType: !862, size: 32)
!11471 = !DIDerivedType(tag: DW_TAG_member, name: "size_cells", scope: !11468, file: !10118, line: 446, baseType: !862, size: 32, offset: 32)
!11472 = !DIDerivedType(tag: DW_TAG_member, name: "set_size_cells", scope: !11468, file: !10118, line: 448, baseType: !862, size: 32, offset: 64)
!11473 = !DIDerivedType(tag: DW_TAG_member, name: "lossy", scope: !11468, file: !10118, line: 449, baseType: !696, size: 8, offset: 96)
!11474 = !DIDerivedType(tag: DW_TAG_member, name: "int_buf", scope: !11449, file: !10118, line: 478, baseType: !11475, size: 96, offset: 1568)
!11475 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11449, file: !10118, line: 468, size: 96, elements: !11476)
!11476 = !{!11477, !11478, !11479}
!11477 = !DIDerivedType(tag: DW_TAG_member, name: "size_cells", scope: !11475, file: !10118, line: 472, baseType: !862, size: 32)
!11478 = !DIDerivedType(tag: DW_TAG_member, name: "reserve_cells", scope: !11475, file: !10118, line: 476, baseType: !862, size: 32, offset: 32)
!11479 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !11475, file: !10118, line: 477, baseType: !696, size: 8, offset: 64)
!11480 = !DIDerivedType(tag: DW_TAG_member, name: "delay_bytes", scope: !11449, file: !10118, line: 479, baseType: !7, size: 32, offset: 1664)
!11481 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !11449, file: !10118, line: 480, baseType: !7, size: 32, offset: 1696)
!11482 = !DIDerivedType(tag: DW_TAG_member, name: "module_overheat_initial_val", scope: !10716, file: !10118, line: 322, baseType: !492, size: 64, offset: 8768)
!11483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 64)
!11484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11485, size: 64)
!11485 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be64", file: !623, line: 34, baseType: !494)
!11486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11487, size: 64)
!11487 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !448)
!11488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11489, size: 64)
!11489 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !429)
!11490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 64)
!11491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11492, size: 64)
!11492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "skb_shared_info", file: !578, line: 512, size: 2560, elements: !11493)
!11493 = !{!11494, !11495, !11496, !11497, !11498, !11499, !11500, !11501, !11505, !11506, !11507, !11508, !11509}
!11494 = !DIDerivedType(tag: DW_TAG_member, name: "__unused", scope: !11492, file: !578, line: 513, baseType: !1553, size: 8)
!11495 = !DIDerivedType(tag: DW_TAG_member, name: "meta_len", scope: !11492, file: !578, line: 514, baseType: !1553, size: 8, offset: 8)
!11496 = !DIDerivedType(tag: DW_TAG_member, name: "nr_frags", scope: !11492, file: !578, line: 515, baseType: !1553, size: 8, offset: 16)
!11497 = !DIDerivedType(tag: DW_TAG_member, name: "tx_flags", scope: !11492, file: !578, line: 516, baseType: !1553, size: 8, offset: 24)
!11498 = !DIDerivedType(tag: DW_TAG_member, name: "gso_size", scope: !11492, file: !578, line: 517, baseType: !633, size: 16, offset: 32)
!11499 = !DIDerivedType(tag: DW_TAG_member, name: "gso_segs", scope: !11492, file: !578, line: 519, baseType: !633, size: 16, offset: 48)
!11500 = !DIDerivedType(tag: DW_TAG_member, name: "frag_list", scope: !11492, file: !578, line: 520, baseType: !576, size: 64, offset: 64)
!11501 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamps", scope: !11492, file: !578, line: 521, baseType: !11502, size: 64, offset: 128)
!11502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "skb_shared_hwtstamps", file: !578, line: 418, size: 64, elements: !11503)
!11503 = !{!11504}
!11504 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamp", scope: !11502, file: !578, line: 419, baseType: !1496, size: 64)
!11505 = !DIDerivedType(tag: DW_TAG_member, name: "gso_type", scope: !11492, file: !578, line: 522, baseType: !14, size: 32, offset: 192)
!11506 = !DIDerivedType(tag: DW_TAG_member, name: "tskey", scope: !11492, file: !578, line: 523, baseType: !862, size: 32, offset: 224)
!11507 = !DIDerivedType(tag: DW_TAG_member, name: "dataref", scope: !11492, file: !578, line: 528, baseType: !544, size: 32, offset: 256)
!11508 = !DIDerivedType(tag: DW_TAG_member, name: "destructor_arg", scope: !11492, file: !578, line: 532, baseType: !726, size: 64, offset: 320)
!11509 = !DIDerivedType(tag: DW_TAG_member, name: "frags", scope: !11492, file: !578, line: 535, baseType: !11510, size: 2176, offset: 384)
!11510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11511, size: 2176, elements: !2849)
!11511 = !DIDerivedType(tag: DW_TAG_typedef, name: "skb_frag_t", file: !578, line: 321, baseType: !776)
!11512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11513, size: 64)
!11513 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11514)
!11514 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!11515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11516, size: 64)
!11516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1193)
!11517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11518, size: 64)
!11518 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1567)
!11519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11520, size: 64)
!11520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11521)
!11521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__una_u32", file: !11522, line: 7, size: 32, elements: !11523)
!11522 = !DIFile(filename: "./include/linux/unaligned/packed_struct.h", directory: "/home/lizy2001/genbc/linux")
!11523 = !{!11524}
!11524 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !11521, file: !11522, line: 7, baseType: !862, size: 32)
!11525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11526, size: 64)
!11526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_notifier_changeupper_info", file: !6, line: 2692, size: 320, elements: !11527)
!11527 = !{!11528, !11533, !11534, !11535, !11536}
!11528 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !11526, file: !6, line: 2693, baseType: !11529, size: 128)
!11529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_notifier_info", file: !6, line: 2675, size: 128, elements: !11530)
!11530 = !{!11531, !11532}
!11531 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !11529, file: !6, line: 2676, baseType: !451, size: 64)
!11532 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !11529, file: !6, line: 2677, baseType: !2633, size: 64, offset: 64)
!11533 = !DIDerivedType(tag: DW_TAG_member, name: "upper_dev", scope: !11526, file: !6, line: 2694, baseType: !451, size: 64, offset: 128)
!11534 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !11526, file: !6, line: 2695, baseType: !696, size: 8, offset: 192)
!11535 = !DIDerivedType(tag: DW_TAG_member, name: "linking", scope: !11526, file: !6, line: 2696, baseType: !696, size: 8, offset: 200)
!11536 = !DIDerivedType(tag: DW_TAG_member, name: "upper_info", scope: !11526, file: !6, line: 2697, baseType: !726, size: 64, offset: 256)
!11537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11538, size: 64)
!11538 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11487)
!11539 = !{!11540, !11543, !11546, !11548, !11553, !11558, !11563, !11568, !11571, !11576, !11581, !11583, !11585, !11587, !0, !11589, !11591, !11593, !11595, !11597, !11599, !11601, !11603, !11605, !11607, !11609, !11611, !11613, !11615, !11617, !11619, !11621, !11623, !11625, !11627, !11629, !11631, !11633, !11635, !11637, !11639, !11641, !11643, !11645, !11647, !11649, !11651, !11653, !11655, !11657, !11659, !11661, !11663, !11665, !11667, !11669, !11671, !11673, !11675, !11677, !11679, !11681, !11683, !11685, !11687, !11689, !11691, !11693, !11695, !11697, !11699, !11701, !11703, !11705, !11707, !11709, !11711, !11713, !11715, !11717, !11719, !11721, !11723, !11725, !11727, !11729, !11731, !11733, !11735, !11737, !11739, !11741, !11743, !11745, !11747, !12019, !12022, !12025, !12027, !12029, !12031, !12033, !12036, !12038, !12220, !12222, !12225, !12227, !12229, !12231, !12233, !12235, !12237, !12239, !12241, !12243, !12245, !12247, !12249, !12251, !12253, !12255, !12257, !12259, !12261, !12263, !12265, !12267, !12269, !12272, !12274, !12276, !12278, !12280, !12282, !12284, !12286, !12294, !12299, !12304, !12312, !12317, !12322, !12327, !12332, !12337, !12342, !12355, !12357, !12359, !12361, !12363, !12365, !12367, !12369, !12371, !12373, !12375, !12377, !12382, !12384, !12386, !12389, !12391, !12396, !12398, !12401, !12403, !12405, !12407, !12409, !12411, !12413, !12415, !12417, !12419, !12421, !12423, !12425, !12427, !12429, !12431, !12433, !12435, !12437, !12439, !12441, !12443, !12445, !12447, !12449, !12451, !12453, !12455, !12457, !12459, !12461, !12463, !12465, !12467, !12469, !12471, !12473, !12475, !12481, !12483, !12486, !12489, !12492, !12495, !12500, !12502, !12504, !12536, !12538, !12540, !12542, !12544, !12546, !12548, !12550, !12553, !12555, !12557, !12559, !12561, !12563, !12565, !12567, !12569, !12571}
!11540 = !DIGlobalVariableExpression(var: !11541, expr: !DIExpression())
!11541 = distinct !DIGlobalVariable(name: "_rs", scope: !11542, file: !3, line: 2122, type: !1902, isLocal: true, isDefinition: true)
!11542 = distinct !DISubprogram(name: "mlxsw_sp_rx_listener_no_mark_func", scope: !3, file: !3, line: 2114, type: !11293, scopeLine: 2116, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!11543 = !DIGlobalVariableExpression(var: !11544, expr: !DIExpression())
!11544 = distinct !DIGlobalVariable(name: "_rs", scope: !11545, file: !3, line: 2168, type: !1902, isLocal: true, isDefinition: true)
!11545 = distinct !DISubprogram(name: "mlxsw_sp_sample_receive", scope: !3, file: !3, line: 2160, type: !11211, scopeLine: 2162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!11546 = !DIGlobalVariableExpression(var: !11547, expr: !DIExpression())
!11547 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_mlxsw_sp_module_init668", scope: !2, file: !3, line: 4438, type: !726, isLocal: true, isDefinition: true)
!11548 = !DIGlobalVariableExpression(var: !11549, expr: !DIExpression())
!11549 = distinct !DIGlobalVariable(name: "__exitcall_mlxsw_sp_module_exit", scope: !2, file: !3, line: 4439, type: !11550, isLocal: true, isDefinition: true)
!11550 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !11551, line: 117, baseType: !11552)
!11551 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!11552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4299, size: 64)
!11553 = !DIGlobalVariableExpression(var: !11554, expr: !DIExpression())
!11554 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file669", scope: !2, file: !3, line: 4441, type: !11555, isLocal: true, isDefinition: true, align: 8)
!11555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 568, elements: !11556)
!11556 = !{!11557}
!11557 = !DISubrange(count: 71)
!11558 = !DIGlobalVariableExpression(var: !11559, expr: !DIExpression())
!11559 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license670", scope: !2, file: !3, line: 4441, type: !11560, isLocal: true, isDefinition: true, align: 8)
!11560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 288, elements: !11561)
!11561 = !{!11562}
!11562 = !DISubrange(count: 36)
!11563 = !DIGlobalVariableExpression(var: !11564, expr: !DIExpression())
!11564 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author671", scope: !2, file: !3, line: 4442, type: !11565, isLocal: true, isDefinition: true, align: 8)
!11565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 424, elements: !11566)
!11566 = !{!11567}
!11567 = !DISubrange(count: 53)
!11568 = !DIGlobalVariableExpression(var: !11569, expr: !DIExpression())
!11569 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description672", scope: !2, file: !3, line: 4443, type: !11570, isLocal: true, isDefinition: true, align: 8)
!11570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 416, elements: !9038)
!11571 = !DIGlobalVariableExpression(var: !11572, expr: !DIExpression())
!11572 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware673", scope: !2, file: !3, line: 4447, type: !11573, isLocal: true, isDefinition: true, align: 8)
!11573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 528, elements: !11574)
!11574 = !{!11575}
!11575 = !DISubrange(count: 66)
!11576 = !DIGlobalVariableExpression(var: !11577, expr: !DIExpression())
!11577 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware674", scope: !2, file: !3, line: 4448, type: !11578, isLocal: true, isDefinition: true, align: 8)
!11578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 536, elements: !11579)
!11579 = !{!11580}
!11580 = !DISubrange(count: 67)
!11581 = !DIGlobalVariableExpression(var: !11582, expr: !DIExpression())
!11582 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware675", scope: !2, file: !3, line: 4449, type: !11578, isLocal: true, isDefinition: true, align: 8)
!11583 = !DIGlobalVariableExpression(var: !11584, expr: !DIExpression())
!11584 = distinct !DIGlobalVariable(name: "mlxsw_reg_mgpc_counter_index_item", scope: !2, file: !10113, line: 9556, type: !10988, isLocal: true, isDefinition: true)
!11585 = !DIGlobalVariableExpression(var: !11586, expr: !DIExpression())
!11586 = distinct !DIGlobalVariable(name: "mlxsw_reg_mgpc_counter_set_type_item", scope: !2, file: !10113, line: 9550, type: !10988, isLocal: true, isDefinition: true)
!11587 = !DIGlobalVariableExpression(var: !11588, expr: !DIExpression())
!11588 = distinct !DIGlobalVariable(name: "mlxsw_reg_mgpc_opcode_item", scope: !2, file: !10113, line: 9569, type: !10988, isLocal: true, isDefinition: true)
!11589 = !DIGlobalVariableExpression(var: !11590, expr: !DIExpression())
!11590 = distinct !DIGlobalVariable(name: "mlxsw_reg_mgpc_packet_counter_item", scope: !2, file: !10113, line: 9581, type: !10988, isLocal: true, isDefinition: true)
!11591 = !DIGlobalVariableExpression(var: !11592, expr: !DIExpression())
!11592 = distinct !DIGlobalVariable(name: "mlxsw_reg_mgpc_byte_counter_item", scope: !2, file: !10113, line: 9575, type: !10988, isLocal: true, isDefinition: true)
!11593 = !DIGlobalVariableExpression(var: !11594, expr: !DIExpression())
!11594 = distinct !DIGlobalVariable(name: "mlxsw_reg_spms_local_port_item", scope: !2, file: !10113, line: 784, type: !10988, isLocal: true, isDefinition: true)
!11595 = !DIGlobalVariableExpression(var: !11596, expr: !DIExpression())
!11596 = distinct !DIGlobalVariable(name: "mlxsw_reg_spms_state_item", scope: !2, file: !10113, line: 801, type: !10988, isLocal: true, isDefinition: true)
!11597 = !DIGlobalVariableExpression(var: !11598, expr: !DIExpression())
!11598 = distinct !DIGlobalVariable(name: "mlxsw_reg_spms", scope: !2, file: !10113, line: 778, type: !11306, isLocal: true, isDefinition: true)
!11599 = !DIGlobalVariableExpression(var: !11600, expr: !DIExpression())
!11600 = distinct !DIGlobalVariable(name: "mlxsw_reg_paos_swid_item", scope: !2, file: !10113, line: 4441, type: !10988, isLocal: true, isDefinition: true)
!11601 = !DIGlobalVariableExpression(var: !11602, expr: !DIExpression())
!11602 = distinct !DIGlobalVariable(name: "mlxsw_reg_paos_local_port_item", scope: !2, file: !10113, line: 4447, type: !10988, isLocal: true, isDefinition: true)
!11603 = !DIGlobalVariableExpression(var: !11604, expr: !DIExpression())
!11604 = distinct !DIGlobalVariable(name: "mlxsw_reg_paos_admin_status_item", scope: !2, file: !10113, line: 4458, type: !10988, isLocal: true, isDefinition: true)
!11605 = !DIGlobalVariableExpression(var: !11606, expr: !DIExpression())
!11606 = distinct !DIGlobalVariable(name: "mlxsw_reg_paos_oper_status_item", scope: !2, file: !10113, line: 4468, type: !10988, isLocal: true, isDefinition: true)
!11607 = !DIGlobalVariableExpression(var: !11608, expr: !DIExpression())
!11608 = distinct !DIGlobalVariable(name: "mlxsw_reg_paos_ase_item", scope: !2, file: !10113, line: 4474, type: !10988, isLocal: true, isDefinition: true)
!11609 = !DIGlobalVariableExpression(var: !11610, expr: !DIExpression())
!11610 = distinct !DIGlobalVariable(name: "mlxsw_reg_paos_ee_item", scope: !2, file: !10113, line: 4481, type: !10988, isLocal: true, isDefinition: true)
!11611 = !DIGlobalVariableExpression(var: !11612, expr: !DIExpression())
!11612 = distinct !DIGlobalVariable(name: "mlxsw_reg_paos_e_item", scope: !2, file: !10113, line: 4490, type: !10988, isLocal: true, isDefinition: true)
!11613 = !DIGlobalVariableExpression(var: !11614, expr: !DIExpression())
!11614 = distinct !DIGlobalVariable(name: "mlxsw_reg_paos", scope: !2, file: !10113, line: 4432, type: !11306, isLocal: true, isDefinition: true)
!11615 = !DIGlobalVariableExpression(var: !11616, expr: !DIExpression())
!11616 = distinct !DIGlobalVariable(name: "mlxsw_reg_svpe_local_port_item", scope: !2, file: !10113, line: 1698, type: !10988, isLocal: true, isDefinition: true)
!11617 = !DIGlobalVariableExpression(var: !11618, expr: !DIExpression())
!11618 = distinct !DIGlobalVariable(name: "mlxsw_reg_svpe_vp_en_item", scope: !2, file: !10113, line: 1706, type: !10988, isLocal: true, isDefinition: true)
!11619 = !DIGlobalVariableExpression(var: !11620, expr: !DIExpression())
!11620 = distinct !DIGlobalVariable(name: "mlxsw_reg_svpe", scope: !2, file: !10113, line: 1690, type: !11306, isLocal: true, isDefinition: true)
!11621 = !DIGlobalVariableExpression(var: !11622, expr: !DIExpression())
!11622 = distinct !DIGlobalVariable(name: "mlxsw_reg_spvmlr_local_port_item", scope: !2, file: !10113, line: 1818, type: !10988, isLocal: true, isDefinition: true)
!11623 = !DIGlobalVariableExpression(var: !11624, expr: !DIExpression())
!11624 = distinct !DIGlobalVariable(name: "mlxsw_reg_spvmlr_num_rec_item", scope: !2, file: !10113, line: 1824, type: !10988, isLocal: true, isDefinition: true)
!11625 = !DIGlobalVariableExpression(var: !11626, expr: !DIExpression())
!11626 = distinct !DIGlobalVariable(name: "mlxsw_reg_spvmlr_rec_learn_enable_item", scope: !2, file: !10113, line: 1831, type: !10988, isLocal: true, isDefinition: true)
!11627 = !DIGlobalVariableExpression(var: !11628, expr: !DIExpression())
!11628 = distinct !DIGlobalVariable(name: "mlxsw_reg_spvmlr_rec_vid_item", scope: !2, file: !10113, line: 1838, type: !10988, isLocal: true, isDefinition: true)
!11629 = !DIGlobalVariableExpression(var: !11630, expr: !DIExpression())
!11630 = distinct !DIGlobalVariable(name: "mlxsw_reg_spvmlr", scope: !2, file: !10113, line: 1810, type: !11306, isLocal: true, isDefinition: true)
!11631 = !DIGlobalVariableExpression(var: !11632, expr: !DIExpression())
!11632 = distinct !DIGlobalVariable(name: "mlxsw_reg_spaft_local_port_item", scope: !2, file: !10113, line: 967, type: !10988, isLocal: true, isDefinition: true)
!11633 = !DIGlobalVariableExpression(var: !11634, expr: !DIExpression())
!11634 = distinct !DIGlobalVariable(name: "mlxsw_reg_spaft_allow_untagged_item", scope: !2, file: !10113, line: 980, type: !10988, isLocal: true, isDefinition: true)
!11635 = !DIGlobalVariableExpression(var: !11636, expr: !DIExpression())
!11636 = distinct !DIGlobalVariable(name: "mlxsw_reg_spaft_allow_prio_tagged_item", scope: !2, file: !10113, line: 986, type: !10988, isLocal: true, isDefinition: true)
!11637 = !DIGlobalVariableExpression(var: !11638, expr: !DIExpression())
!11638 = distinct !DIGlobalVariable(name: "mlxsw_reg_spaft_allow_tagged_item", scope: !2, file: !10113, line: 992, type: !10988, isLocal: true, isDefinition: true)
!11639 = !DIGlobalVariableExpression(var: !11640, expr: !DIExpression())
!11640 = distinct !DIGlobalVariable(name: "mlxsw_reg_spaft", scope: !2, file: !10113, line: 959, type: !11306, isLocal: true, isDefinition: true)
!11641 = !DIGlobalVariableExpression(var: !11642, expr: !DIExpression())
!11642 = distinct !DIGlobalVariable(name: "mlxsw_reg_spvid_local_port_item", scope: !2, file: !10113, line: 828, type: !10988, isLocal: true, isDefinition: true)
!11643 = !DIGlobalVariableExpression(var: !11644, expr: !DIExpression())
!11644 = distinct !DIGlobalVariable(name: "mlxsw_reg_spvid_pvid_item", scope: !2, file: !10113, line: 841, type: !10988, isLocal: true, isDefinition: true)
!11645 = !DIGlobalVariableExpression(var: !11646, expr: !DIExpression())
!11646 = distinct !DIGlobalVariable(name: "mlxsw_reg_spvid", scope: !2, file: !10113, line: 822, type: !11306, isLocal: true, isDefinition: true)
!11647 = !DIGlobalVariableExpression(var: !11648, expr: !DIExpression())
!11648 = distinct !DIGlobalVariable(name: "mlxsw_reg_ppcnt_swid_item", scope: !2, file: !10113, line: 4660, type: !10988, isLocal: true, isDefinition: true)
!11649 = !DIGlobalVariableExpression(var: !11650, expr: !DIExpression())
!11650 = distinct !DIGlobalVariable(name: "mlxsw_reg_ppcnt_local_port_item", scope: !2, file: !10113, line: 4668, type: !10988, isLocal: true, isDefinition: true)
!11651 = !DIGlobalVariableExpression(var: !11652, expr: !DIExpression())
!11652 = distinct !DIGlobalVariable(name: "mlxsw_reg_ppcnt_pnat_item", scope: !2, file: !10113, line: 4676, type: !10988, isLocal: true, isDefinition: true)
!11653 = !DIGlobalVariableExpression(var: !11654, expr: !DIExpression())
!11654 = distinct !DIGlobalVariable(name: "mlxsw_reg_ppcnt_grp_item", scope: !2, file: !10113, line: 4707, type: !10988, isLocal: true, isDefinition: true)
!11655 = !DIGlobalVariableExpression(var: !11656, expr: !DIExpression())
!11656 = distinct !DIGlobalVariable(name: "mlxsw_reg_ppcnt_clr_item", scope: !2, file: !10113, line: 4715, type: !10988, isLocal: true, isDefinition: true)
!11657 = !DIGlobalVariableExpression(var: !11658, expr: !DIExpression())
!11658 = distinct !DIGlobalVariable(name: "mlxsw_reg_ppcnt_prio_tc_item", scope: !2, file: !10113, line: 4725, type: !10988, isLocal: true, isDefinition: true)
!11659 = !DIGlobalVariableExpression(var: !11660, expr: !DIExpression())
!11660 = distinct !DIGlobalVariable(name: "mlxsw_reg_ppcnt", scope: !2, file: !10113, line: 4649, type: !11306, isLocal: true, isDefinition: true)
!11661 = !DIGlobalVariableExpression(var: !11662, expr: !DIExpression())
!11662 = distinct !DIGlobalVariable(name: "mlxsw_reg_spvm_local_port_item", scope: !2, file: !10113, line: 884, type: !10988, isLocal: true, isDefinition: true)
!11663 = !DIGlobalVariableExpression(var: !11664, expr: !DIExpression())
!11664 = distinct !DIGlobalVariable(name: "mlxsw_reg_spvm_num_rec_item", scope: !2, file: !10113, line: 897, type: !10988, isLocal: true, isDefinition: true)
!11665 = !DIGlobalVariableExpression(var: !11666, expr: !DIExpression())
!11666 = distinct !DIGlobalVariable(name: "mlxsw_reg_spvm_rec_i_item", scope: !2, file: !10113, line: 903, type: !10988, isLocal: true, isDefinition: true)
!11667 = !DIGlobalVariableExpression(var: !11668, expr: !DIExpression())
!11668 = distinct !DIGlobalVariable(name: "mlxsw_reg_spvm_rec_e_item", scope: !2, file: !10113, line: 911, type: !10988, isLocal: true, isDefinition: true)
!11669 = !DIGlobalVariableExpression(var: !11670, expr: !DIExpression())
!11670 = distinct !DIGlobalVariable(name: "mlxsw_reg_spvm_rec_u_item", scope: !2, file: !10113, line: 920, type: !10988, isLocal: true, isDefinition: true)
!11671 = !DIGlobalVariableExpression(var: !11672, expr: !DIExpression())
!11672 = distinct !DIGlobalVariable(name: "mlxsw_reg_spvm_rec_vid_item", scope: !2, file: !10113, line: 928, type: !10988, isLocal: true, isDefinition: true)
!11673 = !DIGlobalVariableExpression(var: !11674, expr: !DIExpression())
!11674 = distinct !DIGlobalVariable(name: "mlxsw_reg_spvm", scope: !2, file: !10113, line: 863, type: !11306, isLocal: true, isDefinition: true)
!11675 = !DIGlobalVariableExpression(var: !11676, expr: !DIExpression())
!11676 = distinct !DIGlobalVariable(name: "mlxsw_reg_ptys", scope: !2, file: !10113, line: 4135, type: !11306, isLocal: true, isDefinition: true)
!11677 = !DIGlobalVariableExpression(var: !11678, expr: !DIExpression())
!11678 = distinct !DIGlobalVariable(name: "mlxsw_reg_qeec_local_port_item", scope: !2, file: !10113, line: 3503, type: !10988, isLocal: true, isDefinition: true)
!11679 = !DIGlobalVariableExpression(var: !11680, expr: !DIExpression())
!11680 = distinct !DIGlobalVariable(name: "mlxsw_reg_qeec_element_hierarchy_item", scope: !2, file: !10113, line: 3519, type: !10988, isLocal: true, isDefinition: true)
!11681 = !DIGlobalVariableExpression(var: !11682, expr: !DIExpression())
!11682 = distinct !DIGlobalVariable(name: "mlxsw_reg_qeec_element_index_item", scope: !2, file: !10113, line: 3525, type: !10988, isLocal: true, isDefinition: true)
!11683 = !DIGlobalVariableExpression(var: !11684, expr: !DIExpression())
!11684 = distinct !DIGlobalVariable(name: "mlxsw_reg_qeec_next_element_index_item", scope: !2, file: !10113, line: 3533, type: !10988, isLocal: true, isDefinition: true)
!11685 = !DIGlobalVariableExpression(var: !11686, expr: !DIExpression())
!11686 = distinct !DIGlobalVariable(name: "mlxsw_reg_qeec_de_item", scope: !2, file: !10113, line: 3610, type: !10988, isLocal: true, isDefinition: true)
!11687 = !DIGlobalVariableExpression(var: !11688, expr: !DIExpression())
!11688 = distinct !DIGlobalVariable(name: "mlxsw_reg_qeec_dwrr_item", scope: !2, file: !10113, line: 3619, type: !10988, isLocal: true, isDefinition: true)
!11689 = !DIGlobalVariableExpression(var: !11690, expr: !DIExpression())
!11690 = distinct !DIGlobalVariable(name: "mlxsw_reg_qeec_dwrr_weight_item", scope: !2, file: !10113, line: 3629, type: !10988, isLocal: true, isDefinition: true)
!11691 = !DIGlobalVariableExpression(var: !11692, expr: !DIExpression())
!11692 = distinct !DIGlobalVariable(name: "mlxsw_reg_qeec", scope: !2, file: !10113, line: 3495, type: !11306, isLocal: true, isDefinition: true)
!11693 = !DIGlobalVariableExpression(var: !11694, expr: !DIExpression())
!11694 = distinct !DIGlobalVariable(name: "mlxsw_reg_qeec_mase_item", scope: !2, file: !10113, line: 3590, type: !10988, isLocal: true, isDefinition: true)
!11695 = !DIGlobalVariableExpression(var: !11696, expr: !DIExpression())
!11696 = distinct !DIGlobalVariable(name: "mlxsw_reg_qeec_max_shaper_rate_item", scope: !2, file: !10113, line: 3601, type: !10988, isLocal: true, isDefinition: true)
!11697 = !DIGlobalVariableExpression(var: !11698, expr: !DIExpression())
!11698 = distinct !DIGlobalVariable(name: "mlxsw_reg_qeec_max_shaper_bs_item", scope: !2, file: !10113, line: 3639, type: !10988, isLocal: true, isDefinition: true)
!11699 = !DIGlobalVariableExpression(var: !11700, expr: !DIExpression())
!11700 = distinct !DIGlobalVariable(name: "mlxsw_reg_qtct_local_port_item", scope: !2, file: !10113, line: 3454, type: !10988, isLocal: true, isDefinition: true)
!11701 = !DIGlobalVariableExpression(var: !11702, expr: !DIExpression())
!11702 = distinct !DIGlobalVariable(name: "mlxsw_reg_qtct_switch_prio_item", scope: !2, file: !10113, line: 3467, type: !10988, isLocal: true, isDefinition: true)
!11703 = !DIGlobalVariableExpression(var: !11704, expr: !DIExpression())
!11704 = distinct !DIGlobalVariable(name: "mlxsw_reg_qtct_tclass_item", scope: !2, file: !10113, line: 3477, type: !10988, isLocal: true, isDefinition: true)
!11705 = !DIGlobalVariableExpression(var: !11706, expr: !DIExpression())
!11706 = distinct !DIGlobalVariable(name: "mlxsw_reg_qtct", scope: !2, file: !10113, line: 3446, type: !11306, isLocal: true, isDefinition: true)
!11707 = !DIGlobalVariableExpression(var: !11708, expr: !DIExpression())
!11708 = distinct !DIGlobalVariable(name: "mlxsw_sp_port_netdev_ops", scope: !2, file: !3, line: 1152, type: !558, isLocal: true, isDefinition: true)
!11709 = !DIGlobalVariableExpression(var: !11710, expr: !DIExpression())
!11710 = distinct !DIGlobalVariable(name: "mlxsw_tx_hdr_version_item", scope: !2, file: !3, line: 108, type: !10988, isLocal: true, isDefinition: true)
!11711 = !DIGlobalVariableExpression(var: !11712, expr: !DIExpression())
!11712 = distinct !DIGlobalVariable(name: "mlxsw_tx_hdr_ctl_item", scope: !2, file: !3, line: 115, type: !10988, isLocal: true, isDefinition: true)
!11713 = !DIGlobalVariableExpression(var: !11714, expr: !DIExpression())
!11714 = distinct !DIGlobalVariable(name: "mlxsw_tx_hdr_proto_item", scope: !2, file: !3, line: 120, type: !10988, isLocal: true, isDefinition: true)
!11715 = !DIGlobalVariableExpression(var: !11716, expr: !DIExpression())
!11716 = distinct !DIGlobalVariable(name: "mlxsw_tx_hdr_swid_item", scope: !2, file: !3, line: 136, type: !10988, isLocal: true, isDefinition: true)
!11717 = !DIGlobalVariableExpression(var: !11718, expr: !DIExpression())
!11718 = distinct !DIGlobalVariable(name: "mlxsw_tx_hdr_control_tclass_item", scope: !2, file: !3, line: 142, type: !10988, isLocal: true, isDefinition: true)
!11719 = !DIGlobalVariableExpression(var: !11720, expr: !DIExpression())
!11720 = distinct !DIGlobalVariable(name: "mlxsw_tx_hdr_port_mid_item", scope: !2, file: !3, line: 157, type: !10988, isLocal: true, isDefinition: true)
!11721 = !DIGlobalVariableExpression(var: !11722, expr: !DIExpression())
!11722 = distinct !DIGlobalVariable(name: "mlxsw_tx_hdr_type_item", scope: !2, file: !3, line: 170, type: !10988, isLocal: true, isDefinition: true)
!11723 = !DIGlobalVariableExpression(var: !11724, expr: !DIExpression())
!11724 = distinct !DIGlobalVariable(name: "mlxsw_reg_ppad_single_base_mac_item", scope: !2, file: !10113, line: 4402, type: !10988, isLocal: true, isDefinition: true)
!11725 = !DIGlobalVariableExpression(var: !11726, expr: !DIExpression())
!11726 = distinct !DIGlobalVariable(name: "mlxsw_reg_ppad_local_port_item", scope: !2, file: !10113, line: 4408, type: !10988, isLocal: true, isDefinition: true)
!11727 = !DIGlobalVariableExpression(var: !11728, expr: !DIExpression())
!11728 = distinct !DIGlobalVariable(name: "mlxsw_reg_ppad_mac_item", scope: !2, file: !10113, line: 4415, type: !10988, isLocal: true, isDefinition: true)
!11729 = !DIGlobalVariableExpression(var: !11730, expr: !DIExpression())
!11730 = distinct !DIGlobalVariable(name: "mlxsw_reg_ppad", scope: !2, file: !10113, line: 4394, type: !11306, isLocal: true, isDefinition: true)
!11731 = !DIGlobalVariableExpression(var: !11732, expr: !DIExpression())
!11732 = distinct !DIGlobalVariable(name: "mlxsw_reg_pmtu_local_port_item", scope: !2, file: !10113, line: 4087, type: !10988, isLocal: true, isDefinition: true)
!11733 = !DIGlobalVariableExpression(var: !11734, expr: !DIExpression())
!11734 = distinct !DIGlobalVariable(name: "mlxsw_reg_pmtu_max_mtu_item", scope: !2, file: !10113, line: 4096, type: !10988, isLocal: true, isDefinition: true)
!11735 = !DIGlobalVariableExpression(var: !11736, expr: !DIExpression())
!11736 = distinct !DIGlobalVariable(name: "mlxsw_reg_pmtu_admin_mtu_item", scope: !2, file: !10113, line: 4104, type: !10988, isLocal: true, isDefinition: true)
!11737 = !DIGlobalVariableExpression(var: !11738, expr: !DIExpression())
!11738 = distinct !DIGlobalVariable(name: "mlxsw_reg_pmtu_oper_mtu_item", scope: !2, file: !10113, line: 4113, type: !10988, isLocal: true, isDefinition: true)
!11739 = !DIGlobalVariableExpression(var: !11740, expr: !DIExpression())
!11740 = distinct !DIGlobalVariable(name: "mlxsw_reg_pmtu", scope: !2, file: !10113, line: 4081, type: !11306, isLocal: true, isDefinition: true)
!11741 = !DIGlobalVariableExpression(var: !11742, expr: !DIExpression())
!11742 = distinct !DIGlobalVariable(name: "mlxsw_reg_pplr_local_port_item", scope: !2, file: !10113, line: 5479, type: !10988, isLocal: true, isDefinition: true)
!11743 = !DIGlobalVariableExpression(var: !11744, expr: !DIExpression())
!11744 = distinct !DIGlobalVariable(name: "mlxsw_reg_pplr_lb_en_item", scope: !2, file: !10113, line: 5490, type: !10988, isLocal: true, isDefinition: true)
!11745 = !DIGlobalVariableExpression(var: !11746, expr: !DIExpression())
!11746 = distinct !DIGlobalVariable(name: "mlxsw_reg_pplr", scope: !2, file: !10113, line: 5473, type: !11306, isLocal: true, isDefinition: true)
!11747 = !DIGlobalVariableExpression(var: !11748, expr: !DIExpression())
!11748 = distinct !DIGlobalVariable(name: "mlxsw_sp3_pci_driver", scope: !2, file: !3, line: 4372, type: !11749, isLocal: true, isDefinition: true)
!11749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !11750, line: 858, size: 2048, elements: !11751)
!11750 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!11751 = !{!11752, !11753, !11754, !11766, !11977, !11981, !11985, !11989, !11990, !11994, !12012, !12013, !12014}
!11752 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !11749, file: !11750, line: 859, baseType: !445, size: 128)
!11753 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11749, file: !11750, line: 860, baseType: !453, size: 64, offset: 128)
!11754 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !11749, file: !11750, line: 861, baseType: !11755, size: 64, offset: 192)
!11755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11756, size: 64)
!11756 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11757)
!11757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !4844, line: 38, size: 256, elements: !11758)
!11758 = !{!11759, !11760, !11761, !11762, !11763, !11764, !11765}
!11759 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !11757, file: !4844, line: 39, baseType: !624, size: 32)
!11760 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !11757, file: !4844, line: 39, baseType: !624, size: 32, offset: 32)
!11761 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !11757, file: !4844, line: 40, baseType: !624, size: 32, offset: 64)
!11762 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !11757, file: !4844, line: 40, baseType: !624, size: 32, offset: 96)
!11763 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !11757, file: !4844, line: 41, baseType: !624, size: 32, offset: 128)
!11764 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !11757, file: !4844, line: 41, baseType: !624, size: 32, offset: 160)
!11765 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !11757, file: !4844, line: 42, baseType: !4858, size: 64, offset: 192)
!11766 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !11749, file: !11750, line: 862, baseType: !11767, size: 64, offset: 256)
!11767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11768, size: 64)
!11768 = !DISubroutineType(types: !11769)
!11769 = !{!7, !11770, !11755}
!11770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11771, size: 64)
!11771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !11750, line: 309, size: 19264, elements: !11772)
!11772 = !{!11773, !11774, !11843, !11844, !11845, !11846, !11857, !11858, !11859, !11860, !11861, !11862, !11863, !11864, !11865, !11866, !11867, !11868, !11869, !11870, !11871, !11872, !11873, !11875, !11876, !11877, !11879, !11880, !11881, !11882, !11883, !11884, !11885, !11886, !11887, !11888, !11889, !11890, !11891, !11892, !11893, !11894, !11895, !11896, !11897, !11898, !11901, !11902, !11903, !11904, !11906, !11907, !11908, !11909, !11911, !11912, !11913, !11914, !11915, !11916, !11917, !11918, !11919, !11920, !11921, !11922, !11923, !11924, !11925, !11926, !11927, !11928, !11929, !11930, !11931, !11932, !11933, !11934, !11935, !11936, !11937, !11938, !11939, !11940, !11941, !11942, !11943, !11944, !11945, !11946, !11947, !11948, !11950, !11951, !11953, !11954, !11955, !11956, !11958, !11959, !11960, !11963, !11970, !11971, !11972, !11973, !11974, !11975, !11976}
!11773 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !11771, file: !11750, line: 310, baseType: !445, size: 128)
!11774 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !11771, file: !11750, line: 311, baseType: !11775, size: 64, offset: 128)
!11775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11776, size: 64)
!11776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !11750, line: 605, size: 8064, elements: !11777)
!11777 = !{!11778, !11779, !11780, !11781, !11782, !11783, !11784, !11799, !11800, !11801, !11825, !11828, !11829, !11830, !11831, !11832, !11833, !11834, !11835, !11836, !11838, !11839, !11840, !11841, !11842}
!11778 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !11776, file: !11750, line: 606, baseType: !445, size: 128)
!11779 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !11776, file: !11750, line: 607, baseType: !11775, size: 64, offset: 128)
!11780 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !11776, file: !11750, line: 608, baseType: !445, size: 128, offset: 192)
!11781 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !11776, file: !11750, line: 609, baseType: !445, size: 128, offset: 320)
!11782 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !11776, file: !11750, line: 610, baseType: !11770, size: 64, offset: 448)
!11783 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !11776, file: !11750, line: 611, baseType: !445, size: 128, offset: 512)
!11784 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !11776, file: !11750, line: 613, baseType: !11785, size: 256, offset: 640)
!11785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11786, size: 256, elements: !1357)
!11786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11787, size: 64)
!11787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !11788, line: 20, size: 512, elements: !11789)
!11788 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!11789 = !{!11790, !11792, !11793, !11794, !11795, !11796, !11797, !11798}
!11790 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !11787, file: !11788, line: 21, baseType: !11791, size: 64)
!11791 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !438, line: 158, baseType: !6158)
!11792 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !11787, file: !11788, line: 22, baseType: !11791, size: 64, offset: 64)
!11793 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11787, file: !11788, line: 23, baseType: !453, size: 64, offset: 128)
!11794 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !11787, file: !11788, line: 24, baseType: !473, size: 64, offset: 192)
!11795 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !11787, file: !11788, line: 25, baseType: !473, size: 64, offset: 256)
!11796 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !11787, file: !11788, line: 26, baseType: !11786, size: 64, offset: 320)
!11797 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !11787, file: !11788, line: 26, baseType: !11786, size: 64, offset: 384)
!11798 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !11787, file: !11788, line: 26, baseType: !11786, size: 64, offset: 448)
!11799 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !11776, file: !11750, line: 614, baseType: !445, size: 128, offset: 896)
!11800 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !11776, file: !11750, line: 615, baseType: !11787, size: 512, offset: 1024)
!11801 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !11776, file: !11750, line: 617, baseType: !11802, size: 64, offset: 1536)
!11802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11803, size: 64)
!11803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !11750, line: 731, size: 320, elements: !11804)
!11804 = !{!11805, !11809, !11813, !11817, !11821}
!11805 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !11803, file: !11750, line: 732, baseType: !11806, size: 64)
!11806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11807, size: 64)
!11807 = !DISubroutineType(types: !11808)
!11808 = !{!7, !11775}
!11809 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !11803, file: !11750, line: 733, baseType: !11810, size: 64, offset: 64)
!11810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11811, size: 64)
!11811 = !DISubroutineType(types: !11812)
!11812 = !{null, !11775}
!11813 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !11803, file: !11750, line: 734, baseType: !11814, size: 64, offset: 128)
!11814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11815, size: 64)
!11815 = !DISubroutineType(types: !11816)
!11816 = !{!726, !11775, !14, !7}
!11817 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !11803, file: !11750, line: 735, baseType: !11818, size: 64, offset: 192)
!11818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11819, size: 64)
!11819 = !DISubroutineType(types: !11820)
!11820 = !{!7, !11775, !14, !7, !7, !1615}
!11821 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !11803, file: !11750, line: 736, baseType: !11822, size: 64, offset: 256)
!11822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11823, size: 64)
!11823 = !DISubroutineType(types: !11824)
!11824 = !{!7, !11775, !14, !7, !7, !862}
!11825 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !11776, file: !11750, line: 618, baseType: !11826, size: 64, offset: 1600)
!11826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11827, size: 64)
!11827 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !11750, line: 537, flags: DIFlagFwdDecl)
!11828 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !11776, file: !11750, line: 619, baseType: !726, size: 64, offset: 1664)
!11829 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !11776, file: !11750, line: 620, baseType: !2151, size: 64, offset: 1728)
!11830 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !11776, file: !11750, line: 622, baseType: !650, size: 8, offset: 1792)
!11831 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !11776, file: !11750, line: 623, baseType: !650, size: 8, offset: 1800)
!11832 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !11776, file: !11750, line: 624, baseType: !650, size: 8, offset: 1808)
!11833 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !11776, file: !11750, line: 625, baseType: !650, size: 8, offset: 1816)
!11834 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11776, file: !11750, line: 630, baseType: !7801, size: 384, offset: 1824)
!11835 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !11776, file: !11750, line: 632, baseType: !633, size: 16, offset: 2208)
!11836 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !11776, file: !11750, line: 633, baseType: !11837, size: 16, offset: 2224)
!11837 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !11750, line: 237, baseType: !633)
!11838 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !11776, file: !11750, line: 634, baseType: !4760, size: 64, offset: 2240)
!11839 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !11776, file: !11750, line: 635, baseType: !4398, size: 5568, offset: 2304)
!11840 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !11776, file: !11750, line: 636, baseType: !4492, size: 64, offset: 7872)
!11841 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !11776, file: !11750, line: 637, baseType: !4492, size: 64, offset: 7936)
!11842 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !11776, file: !11750, line: 638, baseType: !14, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!11843 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !11771, file: !11750, line: 312, baseType: !11775, size: 64, offset: 192)
!11844 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !11771, file: !11750, line: 314, baseType: !726, size: 64, offset: 256)
!11845 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !11771, file: !11750, line: 315, baseType: !2151, size: 64, offset: 320)
!11846 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !11771, file: !11750, line: 316, baseType: !11847, size: 64, offset: 384)
!11847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11848, size: 64)
!11848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !11750, line: 69, size: 832, elements: !11849)
!11849 = !{!11850, !11851, !11852, !11855, !11856}
!11850 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !11848, file: !11750, line: 70, baseType: !11775, size: 64)
!11851 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !11848, file: !11750, line: 71, baseType: !445, size: 128, offset: 64)
!11852 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !11848, file: !11750, line: 72, baseType: !11853, size: 64, offset: 192)
!11853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11854, size: 64)
!11854 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !11750, line: 72, flags: DIFlagFwdDecl)
!11855 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !11848, file: !11750, line: 73, baseType: !650, size: 8, offset: 256)
!11856 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !11848, file: !11750, line: 74, baseType: !4401, size: 512, offset: 320)
!11857 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !11771, file: !11750, line: 318, baseType: !14, size: 32, offset: 448)
!11858 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !11771, file: !11750, line: 319, baseType: !633, size: 16, offset: 480)
!11859 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !11771, file: !11750, line: 320, baseType: !633, size: 16, offset: 496)
!11860 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !11771, file: !11750, line: 321, baseType: !633, size: 16, offset: 512)
!11861 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !11771, file: !11750, line: 322, baseType: !633, size: 16, offset: 528)
!11862 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !11771, file: !11750, line: 323, baseType: !14, size: 32, offset: 544)
!11863 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !11771, file: !11750, line: 324, baseType: !1552, size: 8, offset: 576)
!11864 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !11771, file: !11750, line: 325, baseType: !1552, size: 8, offset: 584)
!11865 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !11771, file: !11750, line: 330, baseType: !1552, size: 8, offset: 592)
!11866 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !11771, file: !11750, line: 331, baseType: !1552, size: 8, offset: 600)
!11867 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !11771, file: !11750, line: 332, baseType: !1552, size: 8, offset: 608)
!11868 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !11771, file: !11750, line: 333, baseType: !1552, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!11869 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !11771, file: !11750, line: 334, baseType: !1552, size: 8, offset: 624)
!11870 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !11771, file: !11750, line: 335, baseType: !1552, size: 8, offset: 632)
!11871 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !11771, file: !11750, line: 336, baseType: !1193, size: 16, offset: 640)
!11872 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !11771, file: !11750, line: 337, baseType: !2616, size: 64, offset: 704)
!11873 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !11771, file: !11750, line: 339, baseType: !11874, size: 64, offset: 768)
!11874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11749, size: 64)
!11875 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !11771, file: !11750, line: 340, baseType: !492, size: 64, offset: 832)
!11876 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !11771, file: !11750, line: 346, baseType: !5039, size: 128, offset: 896)
!11877 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !11771, file: !11750, line: 348, baseType: !11878, size: 32, offset: 1024)
!11878 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !11750, line: 155, baseType: !7)
!11879 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !11771, file: !11750, line: 351, baseType: !14, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!11880 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !11771, file: !11750, line: 352, baseType: !1552, size: 8, offset: 1064)
!11881 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !11771, file: !11750, line: 353, baseType: !14, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!11882 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !11771, file: !11750, line: 355, baseType: !14, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!11883 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !11771, file: !11750, line: 356, baseType: !14, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!11884 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !11771, file: !11750, line: 357, baseType: !14, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!11885 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !11771, file: !11750, line: 358, baseType: !14, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!11886 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !11771, file: !11750, line: 359, baseType: !14, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!11887 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !11771, file: !11750, line: 360, baseType: !14, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!11888 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !11771, file: !11750, line: 361, baseType: !14, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!11889 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !11771, file: !11750, line: 362, baseType: !14, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!11890 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !11771, file: !11750, line: 364, baseType: !14, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!11891 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !11771, file: !11750, line: 365, baseType: !14, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!11892 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !11771, file: !11750, line: 369, baseType: !14, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!11893 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !11771, file: !11750, line: 370, baseType: !14, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!11894 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !11771, file: !11750, line: 371, baseType: !14, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!11895 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !11771, file: !11750, line: 374, baseType: !14, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!11896 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !11771, file: !11750, line: 376, baseType: !14, size: 32, offset: 1120)
!11897 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !11771, file: !11750, line: 377, baseType: !14, size: 32, offset: 1152)
!11898 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !11771, file: !11750, line: 380, baseType: !11899, size: 64, offset: 1216)
!11899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11900, size: 64)
!11900 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !11750, line: 303, flags: DIFlagFwdDecl)
!11901 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !11771, file: !11750, line: 381, baseType: !14, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!11902 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !11771, file: !11750, line: 383, baseType: !7, size: 32, offset: 1312)
!11903 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !11771, file: !11750, line: 385, baseType: !14, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!11904 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !11771, file: !11750, line: 387, baseType: !11905, size: 32, offset: 1376)
!11905 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !11750, line: 180, baseType: !14)
!11906 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !11771, file: !11750, line: 388, baseType: !4398, size: 5568, offset: 1408)
!11907 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !11771, file: !11750, line: 390, baseType: !7, size: 32, offset: 6976)
!11908 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !11771, file: !11750, line: 396, baseType: !14, size: 32, offset: 7008)
!11909 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !11771, file: !11750, line: 397, baseType: !11910, size: 8704, offset: 7040)
!11910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11787, size: 8704, elements: !2849)
!11911 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !11771, file: !11750, line: 399, baseType: !696, size: 8, offset: 15744)
!11912 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !11771, file: !11750, line: 401, baseType: !14, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!11913 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !11771, file: !11750, line: 402, baseType: !14, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!11914 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !11771, file: !11750, line: 403, baseType: !14, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!11915 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !11771, file: !11750, line: 404, baseType: !14, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!11916 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !11771, file: !11750, line: 405, baseType: !14, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!11917 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !11771, file: !11750, line: 407, baseType: !14, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!11918 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !11771, file: !11750, line: 408, baseType: !14, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!11919 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !11771, file: !11750, line: 409, baseType: !14, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!11920 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !11771, file: !11750, line: 410, baseType: !14, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!11921 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !11771, file: !11750, line: 411, baseType: !14, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!11922 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !11771, file: !11750, line: 412, baseType: !14, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!11923 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !11771, file: !11750, line: 413, baseType: !14, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!11924 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !11771, file: !11750, line: 414, baseType: !14, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!11925 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !11771, file: !11750, line: 415, baseType: !14, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!11926 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !11771, file: !11750, line: 416, baseType: !14, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!11927 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !11771, file: !11750, line: 417, baseType: !14, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!11928 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !11771, file: !11750, line: 418, baseType: !14, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!11929 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !11771, file: !11750, line: 419, baseType: !14, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!11930 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !11771, file: !11750, line: 420, baseType: !14, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!11931 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !11771, file: !11750, line: 421, baseType: !14, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!11932 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !11771, file: !11750, line: 422, baseType: !14, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!11933 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !11771, file: !11750, line: 423, baseType: !14, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!11934 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !11771, file: !11750, line: 424, baseType: !14, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!11935 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !11771, file: !11750, line: 425, baseType: !14, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!11936 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !11771, file: !11750, line: 426, baseType: !14, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!11937 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !11771, file: !11750, line: 427, baseType: !14, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!11938 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !11771, file: !11750, line: 435, baseType: !14, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!11939 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !11771, file: !11750, line: 441, baseType: !14, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!11940 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !11771, file: !11750, line: 442, baseType: !14, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!11941 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !11771, file: !11750, line: 443, baseType: !14, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!11942 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !11771, file: !11750, line: 444, baseType: !14, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!11943 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !11771, file: !11750, line: 445, baseType: !14, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!11944 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !11771, file: !11750, line: 446, baseType: !14, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!11945 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !11771, file: !11750, line: 447, baseType: !14, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!11946 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !11771, file: !11750, line: 448, baseType: !14, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!11947 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !11771, file: !11750, line: 449, baseType: !14, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!11948 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !11771, file: !11750, line: 450, baseType: !11949, size: 16, offset: 15792)
!11949 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !11750, line: 206, baseType: !633)
!11950 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !11771, file: !11750, line: 451, baseType: !544, size: 32, offset: 15808)
!11951 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !11771, file: !11750, line: 453, baseType: !11952, size: 512, offset: 15840)
!11952 = !DICompositeType(tag: DW_TAG_array_type, baseType: !862, size: 512, elements: !430)
!11953 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !11771, file: !11750, line: 454, baseType: !1012, size: 64, offset: 16384)
!11954 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !11771, file: !11750, line: 455, baseType: !4492, size: 64, offset: 16448)
!11955 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !11771, file: !11750, line: 456, baseType: !7, size: 32, offset: 16512)
!11956 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !11771, file: !11750, line: 457, baseType: !11957, size: 1088, offset: 16576)
!11957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4492, size: 1088, elements: !2849)
!11958 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !11771, file: !11750, line: 458, baseType: !11957, size: 1088, offset: 17664)
!11959 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !11771, file: !11750, line: 469, baseType: !4478, size: 64, offset: 18752)
!11960 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !11771, file: !11750, line: 471, baseType: !11961, size: 64, offset: 18816)
!11961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11962, size: 64)
!11962 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !11750, line: 304, flags: DIFlagFwdDecl)
!11963 = !DIDerivedType(tag: DW_TAG_member, scope: !11771, file: !11750, line: 478, baseType: !11964, size: 64, offset: 18880)
!11964 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11771, file: !11750, line: 478, size: 64, elements: !11965)
!11965 = !{!11966, !11969}
!11966 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !11964, file: !11750, line: 479, baseType: !11967, size: 64)
!11967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11968, size: 64)
!11968 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !11750, line: 305, flags: DIFlagFwdDecl)
!11969 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !11964, file: !11750, line: 480, baseType: !11770, size: 64)
!11970 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !11771, file: !11750, line: 482, baseType: !1193, size: 16, offset: 18944)
!11971 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !11771, file: !11750, line: 483, baseType: !1552, size: 8, offset: 18960)
!11972 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !11771, file: !11750, line: 497, baseType: !1193, size: 16, offset: 18976)
!11973 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !11771, file: !11750, line: 498, baseType: !6158, size: 64, offset: 19008)
!11974 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !11771, file: !11750, line: 499, baseType: !750, size: 64, offset: 19072)
!11975 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !11771, file: !11750, line: 500, baseType: !733, size: 64, offset: 19136)
!11976 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !11771, file: !11750, line: 502, baseType: !473, size: 64, offset: 19200)
!11977 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !11749, file: !11750, line: 863, baseType: !11978, size: 64, offset: 320)
!11978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11979, size: 64)
!11979 = !DISubroutineType(types: !11980)
!11980 = !{null, !11770}
!11981 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !11749, file: !11750, line: 864, baseType: !11982, size: 64, offset: 384)
!11982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11983, size: 64)
!11983 = !DISubroutineType(types: !11984)
!11984 = !{!7, !11770, !4869}
!11985 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !11749, file: !11750, line: 865, baseType: !11986, size: 64, offset: 448)
!11986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11987, size: 64)
!11987 = !DISubroutineType(types: !11988)
!11988 = !{!7, !11770}
!11989 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !11749, file: !11750, line: 866, baseType: !11978, size: 64, offset: 512)
!11990 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !11749, file: !11750, line: 867, baseType: !11991, size: 64, offset: 576)
!11991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11992, size: 64)
!11992 = !DISubroutineType(types: !11993)
!11993 = !{!7, !11770, !7}
!11994 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !11749, file: !11750, line: 868, baseType: !11995, size: 64, offset: 640)
!11995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11996, size: 64)
!11996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11997)
!11997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !11750, line: 795, size: 384, elements: !11998)
!11998 = !{!11999, !12004, !12008, !12009, !12010, !12011}
!11999 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !11997, file: !11750, line: 797, baseType: !12000, size: 64)
!12000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12001, size: 64)
!12001 = !DISubroutineType(types: !12002)
!12002 = !{!12003, !11770, !11905}
!12003 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !11750, line: 772, baseType: !14)
!12004 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !11997, file: !11750, line: 801, baseType: !12005, size: 64, offset: 64)
!12005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12006, size: 64)
!12006 = !DISubroutineType(types: !12007)
!12007 = !{!12003, !11770}
!12008 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !11997, file: !11750, line: 804, baseType: !12005, size: 64, offset: 128)
!12009 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !11997, file: !11750, line: 807, baseType: !11978, size: 64, offset: 192)
!12010 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !11997, file: !11750, line: 808, baseType: !11978, size: 64, offset: 256)
!12011 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !11997, file: !11750, line: 811, baseType: !11978, size: 64, offset: 320)
!12012 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !11749, file: !11750, line: 869, baseType: !4478, size: 64, offset: 704)
!12013 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !11749, file: !11750, line: 870, baseType: !4832, size: 1152, offset: 768)
!12014 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !11749, file: !11750, line: 871, baseType: !12015, size: 128, offset: 1920)
!12015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !11750, line: 759, size: 128, elements: !12016)
!12016 = !{!12017, !12018}
!12017 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12015, file: !11750, line: 760, baseType: !884)
!12018 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !12015, file: !11750, line: 761, baseType: !445, size: 128)
!12019 = !DIGlobalVariableExpression(var: !12020, expr: !DIExpression())
!12020 = distinct !DIGlobalVariable(name: "mlxsw_sp3_driver_name", scope: !2, file: !3, line: 95, type: !12021, isLocal: true, isDefinition: true)
!12021 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 128, elements: !430)
!12022 = !DIGlobalVariableExpression(var: !12023, expr: !DIExpression())
!12023 = distinct !DIGlobalVariable(name: "mlxsw_sp3_pci_id_table", scope: !2, file: !3, line: 4367, type: !12024, isLocal: true, isDefinition: true)
!12024 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11756, size: 512, elements: !634)
!12025 = !DIGlobalVariableExpression(var: !12026, expr: !DIExpression())
!12026 = distinct !DIGlobalVariable(name: "mlxsw_sp2_pci_driver", scope: !2, file: !3, line: 4362, type: !11749, isLocal: true, isDefinition: true)
!12027 = !DIGlobalVariableExpression(var: !12028, expr: !DIExpression())
!12028 = distinct !DIGlobalVariable(name: "mlxsw_sp2_driver_name", scope: !2, file: !3, line: 94, type: !12021, isLocal: true, isDefinition: true)
!12029 = !DIGlobalVariableExpression(var: !12030, expr: !DIExpression())
!12030 = distinct !DIGlobalVariable(name: "mlxsw_sp2_pci_id_table", scope: !2, file: !3, line: 4357, type: !12024, isLocal: true, isDefinition: true)
!12031 = !DIGlobalVariableExpression(var: !12032, expr: !DIExpression())
!12032 = distinct !DIGlobalVariable(name: "mlxsw_sp1_pci_driver", scope: !2, file: !3, line: 4352, type: !11749, isLocal: true, isDefinition: true)
!12033 = !DIGlobalVariableExpression(var: !12034, expr: !DIExpression())
!12034 = distinct !DIGlobalVariable(name: "mlxsw_sp1_driver_name", scope: !2, file: !3, line: 93, type: !12035, isLocal: true, isDefinition: true)
!12035 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 120, elements: !9284)
!12036 = !DIGlobalVariableExpression(var: !12037, expr: !DIExpression())
!12037 = distinct !DIGlobalVariable(name: "mlxsw_sp1_pci_id_table", scope: !2, file: !3, line: 4347, type: !12024, isLocal: true, isDefinition: true)
!12038 = !DIGlobalVariableExpression(var: !12039, expr: !DIExpression())
!12039 = distinct !DIGlobalVariable(name: "mlxsw_sp3_driver", scope: !2, file: !3, line: 3290, type: !12040, isLocal: true, isDefinition: true)
!12040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_driver", file: !10667, line: 283, size: 2560, elements: !12041)
!12041 = !{!12042, !12043, !12044, !12045, !12048, !12049, !12053, !12057, !12061, !12065, !12069, !12073, !12077, !12081, !12087, !12091, !12095, !12099, !12103, !12104, !12108, !12112, !12116, !12120, !12124, !12128, !12132, !12136, !12140, !12144, !12148, !12158, !12159, !12209, !12210, !12211, !12215, !12216, !12217, !12218, !12219}
!12042 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !12040, file: !10667, line: 284, baseType: !445, size: 128)
!12043 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !12040, file: !10667, line: 285, baseType: !453, size: 64, offset: 128)
!12044 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !12040, file: !10667, line: 286, baseType: !750, size: 64, offset: 192)
!12045 = !DIDerivedType(tag: DW_TAG_member, name: "fw_req_rev", scope: !12040, file: !10667, line: 287, baseType: !12046, size: 64, offset: 256)
!12046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12047, size: 64)
!12047 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10739)
!12048 = !DIDerivedType(tag: DW_TAG_member, name: "fw_filename", scope: !12040, file: !10667, line: 288, baseType: !453, size: 64, offset: 320)
!12049 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !12040, file: !10667, line: 289, baseType: !12050, size: 64, offset: 384)
!12050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12051, size: 64)
!12051 = !DISubroutineType(types: !12052)
!12052 = !{!7, !10727, !10731, !2633}
!12053 = !DIDerivedType(tag: DW_TAG_member, name: "fini", scope: !12040, file: !10667, line: 292, baseType: !12054, size: 64, offset: 448)
!12054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12055, size: 64)
!12055 = !DISubroutineType(types: !12056)
!12056 = !{null, !10727}
!12057 = !DIDerivedType(tag: DW_TAG_member, name: "basic_trap_groups_set", scope: !12040, file: !10667, line: 293, baseType: !12058, size: 64, offset: 512)
!12058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12059, size: 64)
!12059 = !DISubroutineType(types: !12060)
!12060 = !{!7, !10727}
!12061 = !DIDerivedType(tag: DW_TAG_member, name: "port_type_set", scope: !12040, file: !10667, line: 294, baseType: !12062, size: 64, offset: 576)
!12062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12063, size: 64)
!12063 = !DISubroutineType(types: !12064)
!12064 = !{!7, !10727, !1552, !332}
!12065 = !DIDerivedType(tag: DW_TAG_member, name: "port_split", scope: !12040, file: !10667, line: 296, baseType: !12066, size: 64, offset: 640)
!12066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12067, size: 64)
!12067 = !DISubroutineType(types: !12068)
!12068 = !{!7, !10727, !1552, !14, !2633}
!12069 = !DIDerivedType(tag: DW_TAG_member, name: "port_unsplit", scope: !12040, file: !10667, line: 298, baseType: !12070, size: 64, offset: 704)
!12070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12071, size: 64)
!12071 = !DISubroutineType(types: !12072)
!12072 = !{!7, !10727, !1552, !2633}
!12073 = !DIDerivedType(tag: DW_TAG_member, name: "sb_pool_get", scope: !12040, file: !10667, line: 300, baseType: !12074, size: 64, offset: 768)
!12074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12075, size: 64)
!12075 = !DISubroutineType(types: !12076)
!12076 = !{!7, !10727, !14, !1193, !8498}
!12077 = !DIDerivedType(tag: DW_TAG_member, name: "sb_pool_set", scope: !12040, file: !10667, line: 303, baseType: !12078, size: 64, offset: 832)
!12078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12079, size: 64)
!12079 = !DISubroutineType(types: !12080)
!12080 = !{!7, !10727, !14, !1193, !862, !342, !2633}
!12081 = !DIDerivedType(tag: DW_TAG_member, name: "sb_port_pool_get", scope: !12040, file: !10667, line: 307, baseType: !12082, size: 64, offset: 896)
!12082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12083, size: 64)
!12083 = !DISubroutineType(types: !12084)
!12084 = !{!7, !12085, !14, !1193, !1615}
!12085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12086, size: 64)
!12086 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_core_port", file: !10667, line: 23, flags: DIFlagFwdDecl)
!12087 = !DIDerivedType(tag: DW_TAG_member, name: "sb_port_pool_set", scope: !12040, file: !10667, line: 310, baseType: !12088, size: 64, offset: 960)
!12088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12089, size: 64)
!12089 = !DISubroutineType(types: !12090)
!12090 = !{!7, !12085, !14, !1193, !862, !2633}
!12091 = !DIDerivedType(tag: DW_TAG_member, name: "sb_tc_pool_bind_get", scope: !12040, file: !10667, line: 313, baseType: !12092, size: 64, offset: 1024)
!12092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12093, size: 64)
!12093 = !DISubroutineType(types: !12094)
!12094 = !{!7, !12085, !14, !1193, !338, !8521, !1615}
!12095 = !DIDerivedType(tag: DW_TAG_member, name: "sb_tc_pool_bind_set", scope: !12040, file: !10667, line: 317, baseType: !12096, size: 64, offset: 1088)
!12096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12097, size: 64)
!12097 = !DISubroutineType(types: !12098)
!12098 = !{!7, !12085, !14, !1193, !338, !1193, !862, !2633}
!12099 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_snapshot", scope: !12040, file: !10667, line: 322, baseType: !12100, size: 64, offset: 1152)
!12100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12101, size: 64)
!12101 = !DISubroutineType(types: !12102)
!12102 = !{!7, !10727, !14}
!12103 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_max_clear", scope: !12040, file: !10667, line: 324, baseType: !12100, size: 64, offset: 1216)
!12104 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_port_pool_get", scope: !12040, file: !10667, line: 326, baseType: !12105, size: 64, offset: 1280)
!12105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12106, size: 64)
!12106 = !DISubroutineType(types: !12107)
!12107 = !{!7, !12085, !14, !1193, !1615, !1615}
!12108 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_tc_port_bind_get", scope: !12040, file: !10667, line: 329, baseType: !12109, size: 64, offset: 1344)
!12109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12110, size: 64)
!12110 = !DISubroutineType(types: !12111)
!12111 = !{!7, !12085, !14, !1193, !338, !1615, !1615}
!12112 = !DIDerivedType(tag: DW_TAG_member, name: "trap_init", scope: !12040, file: !10667, line: 333, baseType: !12113, size: 64, offset: 1408)
!12113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12114, size: 64)
!12114 = !DISubroutineType(types: !12115)
!12115 = !{!7, !10727, !8584, !726}
!12116 = !DIDerivedType(tag: DW_TAG_member, name: "trap_fini", scope: !12040, file: !10667, line: 335, baseType: !12117, size: 64, offset: 1472)
!12117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12118, size: 64)
!12118 = !DISubroutineType(types: !12119)
!12119 = !{null, !10727, !8584, !726}
!12120 = !DIDerivedType(tag: DW_TAG_member, name: "trap_action_set", scope: !12040, file: !10667, line: 337, baseType: !12121, size: 64, offset: 1536)
!12121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12122, size: 64)
!12122 = !DISubroutineType(types: !12123)
!12123 = !{!7, !10727, !8584, !355, !2633}
!12124 = !DIDerivedType(tag: DW_TAG_member, name: "trap_group_init", scope: !12040, file: !10667, line: 341, baseType: !12125, size: 64, offset: 1600)
!12125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12126, size: 64)
!12126 = !DISubroutineType(types: !12127)
!12127 = !{!7, !10727, !8607}
!12128 = !DIDerivedType(tag: DW_TAG_member, name: "trap_group_set", scope: !12040, file: !10667, line: 343, baseType: !12129, size: 64, offset: 1664)
!12129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12130, size: 64)
!12130 = !DISubroutineType(types: !12131)
!12131 = !{!7, !10727, !8607, !8619, !2633}
!12132 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_init", scope: !12040, file: !10667, line: 347, baseType: !12133, size: 64, offset: 1728)
!12133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12134, size: 64)
!12134 = !DISubroutineType(types: !12135)
!12135 = !{!7, !10727, !8619}
!12136 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_fini", scope: !12040, file: !10667, line: 349, baseType: !12137, size: 64, offset: 1792)
!12137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12138, size: 64)
!12138 = !DISubroutineType(types: !12139)
!12139 = !{null, !10727, !8619}
!12140 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_set", scope: !12040, file: !10667, line: 351, baseType: !12141, size: 64, offset: 1856)
!12141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12142, size: 64)
!12142 = !DISubroutineType(types: !12143)
!12143 = !{!7, !10727, !8619, !492, !492, !2633}
!12144 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_counter_get", scope: !12040, file: !10667, line: 355, baseType: !12145, size: 64, offset: 1920)
!12145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12146, size: 64)
!12146 = !DISubroutineType(types: !12147)
!12147 = !{!7, !10727, !8619, !3933}
!12148 = !DIDerivedType(tag: DW_TAG_member, name: "txhdr_construct", scope: !12040, file: !10667, line: 358, baseType: !12149, size: 64, offset: 1984)
!12149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12150, size: 64)
!12150 = !DISubroutineType(types: !12151)
!12151 = !{null, !576, !12152}
!12152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12153, size: 64)
!12153 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12154)
!12154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_tx_info", file: !10667, line: 51, size: 16, elements: !12155)
!12155 = !{!12156, !12157}
!12156 = !DIDerivedType(tag: DW_TAG_member, name: "local_port", scope: !12154, file: !10667, line: 52, baseType: !1552, size: 8)
!12157 = !DIDerivedType(tag: DW_TAG_member, name: "is_emad", scope: !12154, file: !10667, line: 53, baseType: !696, size: 8, offset: 8)
!12158 = !DIDerivedType(tag: DW_TAG_member, name: "resources_register", scope: !12040, file: !10667, line: 360, baseType: !12058, size: 64, offset: 2048)
!12159 = !DIDerivedType(tag: DW_TAG_member, name: "kvd_sizes_get", scope: !12040, file: !10667, line: 361, baseType: !12160, size: 64, offset: 2112)
!12160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12161, size: 64)
!12161 = !DISubroutineType(types: !12162)
!12162 = !{!7, !10727, !12163, !3933, !3933, !3933}
!12163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12164, size: 64)
!12164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12165)
!12165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_config_profile", file: !10667, line: 245, size: 544, elements: !12166)
!12166 = !{!12167, !12168, !12169, !12170, !12171, !12172, !12173, !12174, !12175, !12176, !12177, !12178, !12179, !12180, !12181, !12182, !12183, !12184, !12185, !12186, !12187, !12188, !12189, !12190, !12191, !12192, !12193, !12194, !12195, !12196, !12197, !12198, !12199, !12200, !12201}
!12167 = !DIDerivedType(tag: DW_TAG_member, name: "used_max_vepa_channels", scope: !12165, file: !10667, line: 246, baseType: !1193, size: 1, flags: DIFlagBitField, extraData: i64 0)
!12168 = !DIDerivedType(tag: DW_TAG_member, name: "used_max_mid", scope: !12165, file: !10667, line: 247, baseType: !1193, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!12169 = !DIDerivedType(tag: DW_TAG_member, name: "used_max_pgt", scope: !12165, file: !10667, line: 248, baseType: !1193, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!12170 = !DIDerivedType(tag: DW_TAG_member, name: "used_max_system_port", scope: !12165, file: !10667, line: 249, baseType: !1193, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!12171 = !DIDerivedType(tag: DW_TAG_member, name: "used_max_vlan_groups", scope: !12165, file: !10667, line: 250, baseType: !1193, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!12172 = !DIDerivedType(tag: DW_TAG_member, name: "used_max_regions", scope: !12165, file: !10667, line: 251, baseType: !1193, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!12173 = !DIDerivedType(tag: DW_TAG_member, name: "used_flood_tables", scope: !12165, file: !10667, line: 252, baseType: !1193, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!12174 = !DIDerivedType(tag: DW_TAG_member, name: "used_flood_mode", scope: !12165, file: !10667, line: 253, baseType: !1193, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!12175 = !DIDerivedType(tag: DW_TAG_member, name: "used_max_ib_mc", scope: !12165, file: !10667, line: 254, baseType: !1193, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!12176 = !DIDerivedType(tag: DW_TAG_member, name: "used_max_pkey", scope: !12165, file: !10667, line: 255, baseType: !1193, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!12177 = !DIDerivedType(tag: DW_TAG_member, name: "used_ar_sec", scope: !12165, file: !10667, line: 256, baseType: !1193, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!12178 = !DIDerivedType(tag: DW_TAG_member, name: "used_adaptive_routing_group_cap", scope: !12165, file: !10667, line: 257, baseType: !1193, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!12179 = !DIDerivedType(tag: DW_TAG_member, name: "used_kvd_sizes", scope: !12165, file: !10667, line: 258, baseType: !1193, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!12180 = !DIDerivedType(tag: DW_TAG_member, name: "max_vepa_channels", scope: !12165, file: !10667, line: 259, baseType: !1552, size: 8, offset: 16)
!12181 = !DIDerivedType(tag: DW_TAG_member, name: "max_mid", scope: !12165, file: !10667, line: 260, baseType: !1193, size: 16, offset: 32)
!12182 = !DIDerivedType(tag: DW_TAG_member, name: "max_pgt", scope: !12165, file: !10667, line: 261, baseType: !1193, size: 16, offset: 48)
!12183 = !DIDerivedType(tag: DW_TAG_member, name: "max_system_port", scope: !12165, file: !10667, line: 262, baseType: !1193, size: 16, offset: 64)
!12184 = !DIDerivedType(tag: DW_TAG_member, name: "max_vlan_groups", scope: !12165, file: !10667, line: 263, baseType: !1193, size: 16, offset: 80)
!12185 = !DIDerivedType(tag: DW_TAG_member, name: "max_regions", scope: !12165, file: !10667, line: 264, baseType: !1193, size: 16, offset: 96)
!12186 = !DIDerivedType(tag: DW_TAG_member, name: "max_flood_tables", scope: !12165, file: !10667, line: 265, baseType: !1552, size: 8, offset: 112)
!12187 = !DIDerivedType(tag: DW_TAG_member, name: "max_vid_flood_tables", scope: !12165, file: !10667, line: 266, baseType: !1552, size: 8, offset: 120)
!12188 = !DIDerivedType(tag: DW_TAG_member, name: "flood_mode", scope: !12165, file: !10667, line: 267, baseType: !1552, size: 8, offset: 128)
!12189 = !DIDerivedType(tag: DW_TAG_member, name: "max_fid_offset_flood_tables", scope: !12165, file: !10667, line: 268, baseType: !1552, size: 8, offset: 136)
!12190 = !DIDerivedType(tag: DW_TAG_member, name: "fid_offset_flood_table_size", scope: !12165, file: !10667, line: 269, baseType: !1193, size: 16, offset: 144)
!12191 = !DIDerivedType(tag: DW_TAG_member, name: "max_fid_flood_tables", scope: !12165, file: !10667, line: 270, baseType: !1552, size: 8, offset: 160)
!12192 = !DIDerivedType(tag: DW_TAG_member, name: "fid_flood_table_size", scope: !12165, file: !10667, line: 271, baseType: !1193, size: 16, offset: 176)
!12193 = !DIDerivedType(tag: DW_TAG_member, name: "max_ib_mc", scope: !12165, file: !10667, line: 272, baseType: !1193, size: 16, offset: 192)
!12194 = !DIDerivedType(tag: DW_TAG_member, name: "max_pkey", scope: !12165, file: !10667, line: 273, baseType: !1193, size: 16, offset: 208)
!12195 = !DIDerivedType(tag: DW_TAG_member, name: "ar_sec", scope: !12165, file: !10667, line: 274, baseType: !1552, size: 8, offset: 224)
!12196 = !DIDerivedType(tag: DW_TAG_member, name: "adaptive_routing_group_cap", scope: !12165, file: !10667, line: 275, baseType: !1193, size: 16, offset: 240)
!12197 = !DIDerivedType(tag: DW_TAG_member, name: "arn", scope: !12165, file: !10667, line: 276, baseType: !1552, size: 8, offset: 256)
!12198 = !DIDerivedType(tag: DW_TAG_member, name: "kvd_linear_size", scope: !12165, file: !10667, line: 277, baseType: !862, size: 32, offset: 288)
!12199 = !DIDerivedType(tag: DW_TAG_member, name: "kvd_hash_single_parts", scope: !12165, file: !10667, line: 278, baseType: !1552, size: 8, offset: 320)
!12200 = !DIDerivedType(tag: DW_TAG_member, name: "kvd_hash_double_parts", scope: !12165, file: !10667, line: 279, baseType: !1552, size: 8, offset: 328)
!12201 = !DIDerivedType(tag: DW_TAG_member, name: "swid_config", scope: !12165, file: !10667, line: 280, baseType: !12202, size: 192, offset: 336)
!12202 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12203, size: 192, elements: !1526)
!12203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_swid_config", file: !10667, line: 238, size: 24, elements: !12204)
!12204 = !{!12205, !12206, !12207, !12208}
!12205 = !DIDerivedType(tag: DW_TAG_member, name: "used_type", scope: !12203, file: !10667, line: 239, baseType: !1552, size: 1, flags: DIFlagBitField, extraData: i64 0)
!12206 = !DIDerivedType(tag: DW_TAG_member, name: "used_properties", scope: !12203, file: !10667, line: 240, baseType: !1552, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!12207 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !12203, file: !10667, line: 241, baseType: !1552, size: 8, offset: 8)
!12208 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !12203, file: !10667, line: 242, baseType: !1552, size: 8, offset: 16)
!12209 = !DIDerivedType(tag: DW_TAG_member, name: "params_register", scope: !12040, file: !10667, line: 365, baseType: !12058, size: 64, offset: 2176)
!12210 = !DIDerivedType(tag: DW_TAG_member, name: "params_unregister", scope: !12040, file: !10667, line: 366, baseType: !12054, size: 64, offset: 2240)
!12211 = !DIDerivedType(tag: DW_TAG_member, name: "ptp_transmitted", scope: !12040, file: !10667, line: 371, baseType: !12212, size: 64, offset: 2304)
!12212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12213, size: 64)
!12213 = !DISubroutineType(types: !12214)
!12214 = !{null, !10727, !576, !1552}
!12215 = !DIDerivedType(tag: DW_TAG_member, name: "txhdr_len", scope: !12040, file: !10667, line: 374, baseType: !1552, size: 8, offset: 2368)
!12216 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !12040, file: !10667, line: 375, baseType: !12163, size: 64, offset: 2432)
!12217 = !DIDerivedType(tag: DW_TAG_member, name: "res_query_enabled", scope: !12040, file: !10667, line: 376, baseType: !696, size: 8, offset: 2496)
!12218 = !DIDerivedType(tag: DW_TAG_member, name: "fw_fatal_enabled", scope: !12040, file: !10667, line: 377, baseType: !696, size: 8, offset: 2504)
!12219 = !DIDerivedType(tag: DW_TAG_member, name: "temp_warn_enabled", scope: !12040, file: !10667, line: 378, baseType: !696, size: 8, offset: 2512)
!12220 = !DIGlobalVariableExpression(var: !12221, expr: !DIExpression())
!12221 = distinct !DIGlobalVariable(name: "mlxsw_sp3_fw_rev", scope: !2, file: !3, line: 82, type: !12047, isLocal: true, isDefinition: true)
!12222 = !DIGlobalVariableExpression(var: !12223, expr: !DIExpression())
!12223 = distinct !DIGlobalVariable(name: "mlxsw_sp2_mac_mask", scope: !2, file: !3, line: 100, type: !12224, isLocal: true, isDefinition: true)
!12224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !867, size: 48, elements: !1825)
!12225 = !DIGlobalVariableExpression(var: !12226, expr: !DIExpression())
!12226 = distinct !DIGlobalVariable(name: "mlxsw_sp2_ptp_ops", scope: !2, file: !3, line: 2508, type: !11190, isLocal: true, isDefinition: true)
!12227 = !DIGlobalVariableExpression(var: !12228, expr: !DIExpression())
!12228 = distinct !DIGlobalVariable(name: "mlxsw_reg_spad", scope: !2, file: !10113, line: 62, type: !11306, isLocal: true, isDefinition: true)
!12229 = !DIGlobalVariableExpression(var: !12230, expr: !DIExpression())
!12230 = distinct !DIGlobalVariable(name: "mlxsw_reg_spad_base_mac_item", scope: !2, file: !10113, line: 70, type: !10988, isLocal: true, isDefinition: true)
!12231 = !DIGlobalVariableExpression(var: !12232, expr: !DIExpression())
!12232 = distinct !DIGlobalVariable(name: "mlxsw_reg_qpcr_pid_item", scope: !2, file: !10113, line: 3297, type: !10988, isLocal: true, isDefinition: true)
!12233 = !DIGlobalVariableExpression(var: !12234, expr: !DIExpression())
!12234 = distinct !DIGlobalVariable(name: "mlxsw_reg_qpcr_g_item", scope: !2, file: !10113, line: 3291, type: !10988, isLocal: true, isDefinition: true)
!12235 = !DIGlobalVariableExpression(var: !12236, expr: !DIExpression())
!12236 = distinct !DIGlobalVariable(name: "mlxsw_reg_qpcr_rate_type_item", scope: !2, file: !10113, line: 3344, type: !10988, isLocal: true, isDefinition: true)
!12237 = !DIGlobalVariableExpression(var: !12238, expr: !DIExpression())
!12238 = distinct !DIGlobalVariable(name: "mlxsw_reg_qpcr_violate_action_item", scope: !2, file: !10113, line: 3400, type: !10988, isLocal: true, isDefinition: true)
!12239 = !DIGlobalVariableExpression(var: !12240, expr: !DIExpression())
!12240 = distinct !DIGlobalVariable(name: "mlxsw_reg_qpcr_cir_item", scope: !2, file: !10113, line: 3366, type: !10988, isLocal: true, isDefinition: true)
!12241 = !DIGlobalVariableExpression(var: !12242, expr: !DIExpression())
!12242 = distinct !DIGlobalVariable(name: "mlxsw_reg_qpcr_ir_units_item", scope: !2, file: !10113, line: 3331, type: !10988, isLocal: true, isDefinition: true)
!12243 = !DIGlobalVariableExpression(var: !12244, expr: !DIExpression())
!12244 = distinct !DIGlobalVariable(name: "mlxsw_reg_qpcr_bytes_item", scope: !2, file: !10113, line: 3318, type: !10988, isLocal: true, isDefinition: true)
!12245 = !DIGlobalVariableExpression(var: !12246, expr: !DIExpression())
!12246 = distinct !DIGlobalVariable(name: "mlxsw_reg_qpcr_cbs_item", scope: !2, file: !10113, line: 3357, type: !10988, isLocal: true, isDefinition: true)
!12247 = !DIGlobalVariableExpression(var: !12248, expr: !DIExpression())
!12248 = distinct !DIGlobalVariable(name: "mlxsw_reg_qpcr", scope: !2, file: !10113, line: 3280, type: !11306, isLocal: true, isDefinition: true)
!12249 = !DIGlobalVariableExpression(var: !12250, expr: !DIExpression())
!12250 = distinct !DIGlobalVariable(name: "mlxsw_reg_htgt_pide_item", scope: !2, file: !10113, line: 5739, type: !10988, isLocal: true, isDefinition: true)
!12251 = !DIGlobalVariableExpression(var: !12252, expr: !DIExpression())
!12252 = distinct !DIGlobalVariable(name: "mlxsw_reg_htgt_pid_item", scope: !2, file: !10113, line: 5747, type: !10988, isLocal: true, isDefinition: true)
!12253 = !DIGlobalVariableExpression(var: !12254, expr: !DIExpression())
!12254 = distinct !DIGlobalVariable(name: "mlxsw_reg_htgt_type_item", scope: !2, file: !10113, line: 5680, type: !10988, isLocal: true, isDefinition: true)
!12255 = !DIGlobalVariableExpression(var: !12256, expr: !DIExpression())
!12256 = distinct !DIGlobalVariable(name: "mlxsw_reg_htgt_trap_group_item", scope: !2, file: !10113, line: 5728, type: !10988, isLocal: true, isDefinition: true)
!12257 = !DIGlobalVariableExpression(var: !12258, expr: !DIExpression())
!12258 = distinct !DIGlobalVariable(name: "mlxsw_reg_htgt_mirror_action_item", scope: !2, file: !10113, line: 5760, type: !10988, isLocal: true, isDefinition: true)
!12259 = !DIGlobalVariableExpression(var: !12260, expr: !DIExpression())
!12260 = distinct !DIGlobalVariable(name: "mlxsw_reg_htgt_mirroring_agent_item", scope: !2, file: !10113, line: 5766, type: !10988, isLocal: true, isDefinition: true)
!12261 = !DIGlobalVariableExpression(var: !12262, expr: !DIExpression())
!12262 = distinct !DIGlobalVariable(name: "mlxsw_reg_htgt_priority_item", scope: !2, file: !10113, line: 5781, type: !10988, isLocal: true, isDefinition: true)
!12263 = !DIGlobalVariableExpression(var: !12264, expr: !DIExpression())
!12264 = distinct !DIGlobalVariable(name: "mlxsw_reg_htgt_local_path_cpu_tclass_item", scope: !2, file: !10113, line: 5789, type: !10988, isLocal: true, isDefinition: true)
!12265 = !DIGlobalVariableExpression(var: !12266, expr: !DIExpression())
!12266 = distinct !DIGlobalVariable(name: "mlxsw_reg_htgt_local_path_rdq_item", scope: !2, file: !10113, line: 5801, type: !10988, isLocal: true, isDefinition: true)
!12267 = !DIGlobalVariableExpression(var: !12268, expr: !DIExpression())
!12268 = distinct !DIGlobalVariable(name: "mlxsw_reg_htgt", scope: !2, file: !10113, line: 5666, type: !11306, isLocal: true, isDefinition: true)
!12269 = !DIGlobalVariableExpression(var: !12270, expr: !DIExpression())
!12270 = distinct !DIGlobalVariable(name: "mlxsw_sp_listener", scope: !2, file: !3, line: 2201, type: !12271, isLocal: true, isDefinition: true)
!12271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11281, size: 3840, elements: !3174)
!12272 = !DIGlobalVariableExpression(var: !12273, expr: !DIExpression())
!12273 = distinct !DIGlobalVariable(name: "mlxsw_reg_pude_local_port_item", scope: !2, file: !10113, line: 11277, type: !10988, isLocal: true, isDefinition: true)
!12274 = !DIGlobalVariableExpression(var: !12275, expr: !DIExpression())
!12275 = distinct !DIGlobalVariable(name: "mlxsw_reg_pude_oper_status_item", scope: !2, file: !10113, line: 11298, type: !10988, isLocal: true, isDefinition: true)
!12276 = !DIGlobalVariableExpression(var: !12277, expr: !DIExpression())
!12277 = distinct !DIGlobalVariable(name: "mlxsw_reg_slcr_pp_item", scope: !2, file: !10113, line: 1361, type: !10988, isLocal: true, isDefinition: true)
!12278 = !DIGlobalVariableExpression(var: !12279, expr: !DIExpression())
!12279 = distinct !DIGlobalVariable(name: "mlxsw_reg_slcr_type_item", scope: !2, file: !10113, line: 1382, type: !10988, isLocal: true, isDefinition: true)
!12280 = !DIGlobalVariableExpression(var: !12281, expr: !DIExpression())
!12281 = distinct !DIGlobalVariable(name: "mlxsw_reg_slcr_lag_hash_item", scope: !2, file: !10113, line: 1442, type: !10988, isLocal: true, isDefinition: true)
!12282 = !DIGlobalVariableExpression(var: !12283, expr: !DIExpression())
!12283 = distinct !DIGlobalVariable(name: "mlxsw_reg_slcr_seed_item", scope: !2, file: !10113, line: 1448, type: !10988, isLocal: true, isDefinition: true)
!12284 = !DIGlobalVariableExpression(var: !12285, expr: !DIExpression())
!12285 = distinct !DIGlobalVariable(name: "mlxsw_reg_slcr", scope: !2, file: !10113, line: 1347, type: !11306, isLocal: true, isDefinition: true)
!12286 = !DIGlobalVariableExpression(var: !12287, expr: !DIExpression())
!12287 = distinct !DIGlobalVariable(name: "__msg", scope: !12288, file: !3, line: 3814, type: !12291, isLocal: true, isDefinition: true)
!12288 = distinct !DISubprogram(name: "mlxsw_sp_bridge_vxlan_is_valid", scope: !3, file: !3, line: 3810, type: !12289, scopeLine: 3812, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12289 = !DISubroutineType(types: !12290)
!12290 = !{!696, !451, !2633}
!12291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 616, elements: !12292)
!12292 = !{!12293}
!12293 = !DISubrange(count: 77)
!12294 = !DIGlobalVariableExpression(var: !12295, expr: !DIExpression())
!12295 = distinct !DIGlobalVariable(name: "__msg", scope: !12288, file: !3, line: 3820, type: !12296, isLocal: true, isDefinition: true)
!12296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 656, elements: !12297)
!12297 = !{!12298}
!12298 = !DISubrange(count: 82)
!12299 = !DIGlobalVariableExpression(var: !12300, expr: !DIExpression())
!12300 = distinct !DIGlobalVariable(name: "__msg", scope: !12288, file: !3, line: 3826, type: !12301, isLocal: true, isDefinition: true)
!12301 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 744, elements: !12302)
!12302 = !{!12303}
!12303 = !DISubrange(count: 93)
!12304 = !DIGlobalVariableExpression(var: !12305, expr: !DIExpression())
!12305 = distinct !DIGlobalVariable(name: "__msg", scope: !12306, file: !3, line: 3857, type: !12309, isLocal: true, isDefinition: true)
!12306 = distinct !DISubprogram(name: "mlxsw_sp_netdevice_port_upper_event", scope: !3, file: !3, line: 3833, type: !12307, scopeLine: 3836, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12307 = !DISubroutineType(types: !12308)
!12308 = !{!7, !451, !451, !473, !726}
!12309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 336, elements: !12310)
!12310 = !{!12311}
!12311 = !DISubrange(count: 42)
!12312 = !DIGlobalVariableExpression(var: !12313, expr: !DIExpression())
!12313 = distinct !DIGlobalVariable(name: "__msg", scope: !12306, file: !3, line: 3871, type: !12314, isLocal: true, isDefinition: true)
!12314 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 760, elements: !12315)
!12315 = !{!12316}
!12316 = !DISubrange(count: 95)
!12317 = !DIGlobalVariableExpression(var: !12318, expr: !DIExpression())
!12318 = distinct !DIGlobalVariable(name: "__msg", scope: !12306, file: !3, line: 3879, type: !12319, isLocal: true, isDefinition: true)
!12319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 584, elements: !12320)
!12320 = !{!12321}
!12321 = !DISubrange(count: 73)
!12322 = !DIGlobalVariableExpression(var: !12323, expr: !DIExpression())
!12323 = distinct !DIGlobalVariable(name: "__msg", scope: !12306, file: !3, line: 3884, type: !12324, isLocal: true, isDefinition: true)
!12324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 392, elements: !12325)
!12325 = !{!12326}
!12326 = !DISubrange(count: 49)
!12327 = !DIGlobalVariableExpression(var: !12328, expr: !DIExpression())
!12328 = distinct !DIGlobalVariable(name: "__msg", scope: !12306, file: !3, line: 3889, type: !12329, isLocal: true, isDefinition: true)
!12329 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 560, elements: !12330)
!12330 = !{!12331}
!12331 = !DISubrange(count: 70)
!12332 = !DIGlobalVariableExpression(var: !12333, expr: !DIExpression())
!12333 = distinct !DIGlobalVariable(name: "__msg", scope: !12306, file: !3, line: 3893, type: !12334, isLocal: true, isDefinition: true)
!12334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 592, elements: !12335)
!12335 = !{!12336}
!12336 = !DISubrange(count: 74)
!12337 = !DIGlobalVariableExpression(var: !12338, expr: !DIExpression())
!12338 = distinct !DIGlobalVariable(name: "__msg", scope: !12306, file: !3, line: 3897, type: !12339, isLocal: true, isDefinition: true)
!12339 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 400, elements: !12340)
!12340 = !{!12341}
!12341 = !DISubrange(count: 50)
!12342 = !DIGlobalVariableExpression(var: !12343, expr: !DIExpression())
!12343 = distinct !DIGlobalVariable(name: "__msg", scope: !12344, file: !3, line: 3518, type: !12352, isLocal: true, isDefinition: true)
!12344 = distinct !DISubprogram(name: "mlxsw_sp_master_lag_check", scope: !3, file: !3, line: 3510, type: !12345, scopeLine: 3514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12345 = !DISubroutineType(types: !12346)
!12346 = !{!696, !10721, !451, !12347, !2633}
!12347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12348, size: 64)
!12348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_lag_upper_info", file: !6, line: 2606, size: 64, elements: !12349)
!12349 = !{!12350, !12351}
!12350 = !DIDerivedType(tag: DW_TAG_member, name: "tx_type", scope: !12348, file: !6, line: 2607, baseType: !10567, size: 32)
!12351 = !DIDerivedType(tag: DW_TAG_member, name: "hash_type", scope: !12348, file: !6, line: 2608, baseType: !10575, size: 32, offset: 32)
!12352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 456, elements: !12353)
!12353 = !{!12354}
!12354 = !DISubrange(count: 57)
!12355 = !DIGlobalVariableExpression(var: !12356, expr: !DIExpression())
!12356 = distinct !DIGlobalVariable(name: "__msg", scope: !12344, file: !3, line: 3522, type: !11565, isLocal: true, isDefinition: true)
!12357 = !DIGlobalVariableExpression(var: !12358, expr: !DIExpression())
!12358 = distinct !DIGlobalVariable(name: "mlxsw_reg_sldr_op_item", scope: !2, file: !10113, line: 1283, type: !10988, isLocal: true, isDefinition: true)
!12359 = !DIGlobalVariableExpression(var: !12360, expr: !DIExpression())
!12360 = distinct !DIGlobalVariable(name: "mlxsw_reg_sldr_lag_id_item", scope: !2, file: !10113, line: 1289, type: !10988, isLocal: true, isDefinition: true)
!12361 = !DIGlobalVariableExpression(var: !12362, expr: !DIExpression())
!12362 = distinct !DIGlobalVariable(name: "mlxsw_reg_sldr", scope: !2, file: !10113, line: 1267, type: !11306, isLocal: true, isDefinition: true)
!12363 = !DIGlobalVariableExpression(var: !12364, expr: !DIExpression())
!12364 = distinct !DIGlobalVariable(name: "mlxsw_reg_slcor_col_item", scope: !2, file: !10113, line: 1481, type: !10988, isLocal: true, isDefinition: true)
!12365 = !DIGlobalVariableExpression(var: !12366, expr: !DIExpression())
!12366 = distinct !DIGlobalVariable(name: "mlxsw_reg_slcor_local_port_item", scope: !2, file: !10113, line: 1488, type: !10988, isLocal: true, isDefinition: true)
!12367 = !DIGlobalVariableExpression(var: !12368, expr: !DIExpression())
!12368 = distinct !DIGlobalVariable(name: "mlxsw_reg_slcor_lag_id_item", scope: !2, file: !10113, line: 1494, type: !10988, isLocal: true, isDefinition: true)
!12369 = !DIGlobalVariableExpression(var: !12370, expr: !DIExpression())
!12370 = distinct !DIGlobalVariable(name: "mlxsw_reg_slcor_port_index_item", scope: !2, file: !10113, line: 1501, type: !10988, isLocal: true, isDefinition: true)
!12371 = !DIGlobalVariableExpression(var: !12372, expr: !DIExpression())
!12372 = distinct !DIGlobalVariable(name: "mlxsw_reg_slcor", scope: !2, file: !10113, line: 1467, type: !11306, isLocal: true, isDefinition: true)
!12373 = !DIGlobalVariableExpression(var: !12374, expr: !DIExpression())
!12374 = distinct !DIGlobalVariable(name: "mlxsw_reg_sldr_num_ports_item", scope: !2, file: !10113, line: 1311, type: !10988, isLocal: true, isDefinition: true)
!12375 = !DIGlobalVariableExpression(var: !12376, expr: !DIExpression())
!12376 = distinct !DIGlobalVariable(name: "mlxsw_reg_sldr_system_port_item", scope: !2, file: !10113, line: 1317, type: !10988, isLocal: true, isDefinition: true)
!12377 = !DIGlobalVariableExpression(var: !12378, expr: !DIExpression())
!12378 = distinct !DIGlobalVariable(name: "__msg", scope: !12379, file: !3, line: 4026, type: !12309, isLocal: true, isDefinition: true)
!12379 = distinct !DISubprogram(name: "mlxsw_sp_netdevice_port_vlan_event", scope: !3, file: !3, line: 4007, type: !12380, scopeLine: 4011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12380 = !DISubroutineType(types: !12381)
!12381 = !{!7, !451, !451, !473, !726, !1193}
!12382 = !DIGlobalVariableExpression(var: !12383, expr: !DIExpression())
!12383 = distinct !DIGlobalVariable(name: "__msg", scope: !12379, file: !3, line: 4040, type: !12314, isLocal: true, isDefinition: true)
!12384 = !DIGlobalVariableExpression(var: !12385, expr: !DIExpression())
!12385 = distinct !DIGlobalVariable(name: "__msg", scope: !12379, file: !3, line: 4045, type: !12329, isLocal: true, isDefinition: true)
!12386 = !DIGlobalVariableExpression(var: !12387, expr: !DIExpression())
!12387 = distinct !DIGlobalVariable(name: "__msg", scope: !12388, file: !3, line: 4115, type: !12309, isLocal: true, isDefinition: true)
!12388 = distinct !DISubprogram(name: "mlxsw_sp_netdevice_bridge_vlan_event", scope: !3, file: !3, line: 4096, type: !12380, scopeLine: 4100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12389 = !DIGlobalVariableExpression(var: !12390, expr: !DIExpression())
!12390 = distinct !DIGlobalVariable(name: "__msg", scope: !12388, file: !3, line: 4122, type: !12329, isLocal: true, isDefinition: true)
!12391 = !DIGlobalVariableExpression(var: !12392, expr: !DIExpression())
!12392 = distinct !DIGlobalVariable(name: "__msg", scope: !12393, file: !3, line: 4175, type: !12309, isLocal: true, isDefinition: true)
!12393 = distinct !DISubprogram(name: "mlxsw_sp_netdevice_bridge_event", scope: !3, file: !3, line: 4158, type: !12394, scopeLine: 4160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12394 = !DISubroutineType(types: !12395)
!12395 = !{!7, !451, !473, !726}
!12396 = !DIGlobalVariableExpression(var: !12397, expr: !DIExpression())
!12397 = distinct !DIGlobalVariable(name: "__msg", scope: !12393, file: !3, line: 4182, type: !12329, isLocal: true, isDefinition: true)
!12398 = !DIGlobalVariableExpression(var: !12399, expr: !DIExpression())
!12399 = distinct !DIGlobalVariable(name: "__msg", scope: !12400, file: !3, line: 4213, type: !12309, isLocal: true, isDefinition: true)
!12400 = distinct !DISubprogram(name: "mlxsw_sp_netdevice_macvlan_event", scope: !3, file: !3, line: 4200, type: !12394, scopeLine: 4202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12401 = !DIGlobalVariableExpression(var: !12402, expr: !DIExpression())
!12402 = distinct !DIGlobalVariable(name: "mlxsw_reg_pmlp_local_port_item", scope: !2, file: !10113, line: 4037, type: !10988, isLocal: true, isDefinition: true)
!12403 = !DIGlobalVariableExpression(var: !12404, expr: !DIExpression())
!12404 = distinct !DIGlobalVariable(name: "mlxsw_reg_pmlp", scope: !2, file: !10113, line: 4024, type: !11306, isLocal: true, isDefinition: true)
!12405 = !DIGlobalVariableExpression(var: !12406, expr: !DIExpression())
!12406 = distinct !DIGlobalVariable(name: "mlxsw_reg_pmlp_module_item", scope: !2, file: !10113, line: 4053, type: !10988, isLocal: true, isDefinition: true)
!12407 = !DIGlobalVariableExpression(var: !12408, expr: !DIExpression())
!12408 = distinct !DIGlobalVariable(name: "mlxsw_reg_pmlp_width_item", scope: !2, file: !10113, line: 4047, type: !10988, isLocal: true, isDefinition: true)
!12409 = !DIGlobalVariableExpression(var: !12410, expr: !DIExpression())
!12410 = distinct !DIGlobalVariable(name: "mlxsw_reg_pmlp_rxtx_item", scope: !2, file: !10113, line: 4031, type: !10988, isLocal: true, isDefinition: true)
!12411 = !DIGlobalVariableExpression(var: !12412, expr: !DIExpression())
!12412 = distinct !DIGlobalVariable(name: "mlxsw_reg_pmlp_tx_lane_item", scope: !2, file: !10113, line: 4059, type: !10988, isLocal: true, isDefinition: true)
!12413 = !DIGlobalVariableExpression(var: !12414, expr: !DIExpression())
!12414 = distinct !DIGlobalVariable(name: "mlxsw_reg_pmlp_rx_lane_item", scope: !2, file: !10113, line: 4066, type: !10988, isLocal: true, isDefinition: true)
!12415 = !DIGlobalVariableExpression(var: !12416, expr: !DIExpression())
!12416 = distinct !DIGlobalVariable(name: "mlxsw_reg_ppcnt_a_frames_transmitted_ok_item", scope: !2, file: !10113, line: 4732, type: !10988, isLocal: true, isDefinition: true)
!12417 = !DIGlobalVariableExpression(var: !12418, expr: !DIExpression())
!12418 = distinct !DIGlobalVariable(name: "mlxsw_reg_ppcnt_a_frames_received_ok_item", scope: !2, file: !10113, line: 4738, type: !10988, isLocal: true, isDefinition: true)
!12419 = !DIGlobalVariableExpression(var: !12420, expr: !DIExpression())
!12420 = distinct !DIGlobalVariable(name: "mlxsw_reg_ppcnt_a_octets_transmitted_ok_item", scope: !2, file: !10113, line: 4756, type: !10988, isLocal: true, isDefinition: true)
!12421 = !DIGlobalVariableExpression(var: !12422, expr: !DIExpression())
!12422 = distinct !DIGlobalVariable(name: "mlxsw_reg_ppcnt_a_octets_received_ok_item", scope: !2, file: !10113, line: 4762, type: !10988, isLocal: true, isDefinition: true)
!12423 = !DIGlobalVariableExpression(var: !12424, expr: !DIExpression())
!12424 = distinct !DIGlobalVariable(name: "mlxsw_reg_ppcnt_a_multicast_frames_received_ok_item", scope: !2, file: !10113, line: 4780, type: !10988, isLocal: true, isDefinition: true)
!12425 = !DIGlobalVariableExpression(var: !12426, expr: !DIExpression())
!12426 = distinct !DIGlobalVariable(name: "mlxsw_reg_ppcnt_a_frame_check_sequence_errors_item", scope: !2, file: !10113, line: 4744, type: !10988, isLocal: true, isDefinition: true)
!12427 = !DIGlobalVariableExpression(var: !12428, expr: !DIExpression())
!12428 = distinct !DIGlobalVariable(name: "mlxsw_reg_ppcnt_a_alignment_errors_item", scope: !2, file: !10113, line: 4750, type: !10988, isLocal: true, isDefinition: true)
!12429 = !DIGlobalVariableExpression(var: !12430, expr: !DIExpression())
!12430 = distinct !DIGlobalVariable(name: "mlxsw_reg_ppcnt_a_in_range_length_errors_item", scope: !2, file: !10113, line: 4792, type: !10988, isLocal: true, isDefinition: true)
!12431 = !DIGlobalVariableExpression(var: !12432, expr: !DIExpression())
!12432 = distinct !DIGlobalVariable(name: "mlxsw_reg_ppcnt_a_out_of_range_length_field_item", scope: !2, file: !10113, line: 4798, type: !10988, isLocal: true, isDefinition: true)
!12433 = !DIGlobalVariableExpression(var: !12434, expr: !DIExpression())
!12434 = distinct !DIGlobalVariable(name: "mlxsw_reg_ppcnt_a_frame_too_long_errors_item", scope: !2, file: !10113, line: 4804, type: !10988, isLocal: true, isDefinition: true)
!12435 = !DIGlobalVariableExpression(var: !12436, expr: !DIExpression())
!12436 = distinct !DIGlobalVariable(name: "mlxsw_reg_ppcnt_ecn_marked_item", scope: !2, file: !10113, line: 4974, type: !10988, isLocal: true, isDefinition: true)
!12437 = !DIGlobalVariableExpression(var: !12438, expr: !DIExpression())
!12438 = distinct !DIGlobalVariable(name: "mlxsw_reg_ppcnt_wred_discard_item", scope: !2, file: !10113, line: 5131, type: !10988, isLocal: true, isDefinition: true)
!12439 = !DIGlobalVariableExpression(var: !12440, expr: !DIExpression())
!12440 = distinct !DIGlobalVariable(name: "mlxsw_reg_ppcnt_tc_transmit_queue_item", scope: !2, file: !10113, line: 5115, type: !10988, isLocal: true, isDefinition: true)
!12441 = !DIGlobalVariableExpression(var: !12442, expr: !DIExpression())
!12442 = distinct !DIGlobalVariable(name: "mlxsw_reg_ppcnt_tc_no_buffer_discard_uc_item", scope: !2, file: !10113, line: 5123, type: !10988, isLocal: true, isDefinition: true)
!12443 = !DIGlobalVariableExpression(var: !12444, expr: !DIExpression())
!12444 = distinct !DIGlobalVariable(name: "mlxsw_reg_ppcnt_tx_frames_item", scope: !2, file: !10113, line: 5074, type: !10988, isLocal: true, isDefinition: true)
!12445 = !DIGlobalVariableExpression(var: !12446, expr: !DIExpression())
!12446 = distinct !DIGlobalVariable(name: "mlxsw_reg_ppcnt_tx_octets_item", scope: !2, file: !10113, line: 5068, type: !10988, isLocal: true, isDefinition: true)
!12447 = !DIGlobalVariableExpression(var: !12448, expr: !DIExpression())
!12448 = distinct !DIGlobalVariable(name: "mlxsw_reg_pspa_swid_item", scope: !2, file: !10113, line: 5385, type: !10988, isLocal: true, isDefinition: true)
!12449 = !DIGlobalVariableExpression(var: !12450, expr: !DIExpression())
!12450 = distinct !DIGlobalVariable(name: "mlxsw_reg_pspa_local_port_item", scope: !2, file: !10113, line: 5391, type: !10988, isLocal: true, isDefinition: true)
!12451 = !DIGlobalVariableExpression(var: !12452, expr: !DIExpression())
!12452 = distinct !DIGlobalVariable(name: "mlxsw_reg_pspa_sub_port_item", scope: !2, file: !10113, line: 5398, type: !10988, isLocal: true, isDefinition: true)
!12453 = !DIGlobalVariableExpression(var: !12454, expr: !DIExpression())
!12454 = distinct !DIGlobalVariable(name: "mlxsw_reg_pspa", scope: !2, file: !10113, line: 5379, type: !11306, isLocal: true, isDefinition: true)
!12455 = !DIGlobalVariableExpression(var: !12456, expr: !DIExpression())
!12456 = distinct !DIGlobalVariable(name: "mlxsw_reg_sspr_m_item", scope: !2, file: !10113, line: 137, type: !10988, isLocal: true, isDefinition: true)
!12457 = !DIGlobalVariableExpression(var: !12458, expr: !DIExpression())
!12458 = distinct !DIGlobalVariable(name: "mlxsw_reg_sspr_local_port_item", scope: !2, file: !10113, line: 144, type: !10988, isLocal: true, isDefinition: true)
!12459 = !DIGlobalVariableExpression(var: !12460, expr: !DIExpression())
!12460 = distinct !DIGlobalVariable(name: "mlxsw_reg_sspr_sub_port_item", scope: !2, file: !10113, line: 152, type: !10988, isLocal: true, isDefinition: true)
!12461 = !DIGlobalVariableExpression(var: !12462, expr: !DIExpression())
!12462 = distinct !DIGlobalVariable(name: "mlxsw_reg_sspr_system_port_item", scope: !2, file: !10113, line: 162, type: !10988, isLocal: true, isDefinition: true)
!12463 = !DIGlobalVariableExpression(var: !12464, expr: !DIExpression())
!12464 = distinct !DIGlobalVariable(name: "mlxsw_reg_sspr", scope: !2, file: !10113, line: 125, type: !11306, isLocal: true, isDefinition: true)
!12465 = !DIGlobalVariableExpression(var: !12466, expr: !DIExpression())
!12466 = distinct !DIGlobalVariable(name: "mlxsw_reg_qeec_mise_item", scope: !2, file: !10113, line: 3542, type: !10988, isLocal: true, isDefinition: true)
!12467 = !DIGlobalVariableExpression(var: !12468, expr: !DIExpression())
!12468 = distinct !DIGlobalVariable(name: "mlxsw_reg_qeec_min_shaper_rate_item", scope: !2, file: !10113, line: 3581, type: !10988, isLocal: true, isDefinition: true)
!12469 = !DIGlobalVariableExpression(var: !12470, expr: !DIExpression())
!12470 = distinct !DIGlobalVariable(name: "mlxsw_reg_qtctm_local_port_item", scope: !2, file: !10113, line: 3894, type: !10988, isLocal: true, isDefinition: true)
!12471 = !DIGlobalVariableExpression(var: !12472, expr: !DIExpression())
!12472 = distinct !DIGlobalVariable(name: "mlxsw_reg_qtctm_mc_item", scope: !2, file: !10113, line: 3901, type: !10988, isLocal: true, isDefinition: true)
!12473 = !DIGlobalVariableExpression(var: !12474, expr: !DIExpression())
!12474 = distinct !DIGlobalVariable(name: "mlxsw_reg_qtctm", scope: !2, file: !10113, line: 3887, type: !11306, isLocal: true, isDefinition: true)
!12475 = !DIGlobalVariableExpression(var: !12476, expr: !DIExpression())
!12476 = distinct !DIGlobalVariable(name: "__msg", scope: !12477, file: !3, line: 1920, type: !12478, isLocal: true, isDefinition: true)
!12477 = distinct !DISubprogram(name: "mlxsw_sp_port_split", scope: !3, file: !3, line: 1903, type: !12067, scopeLine: 1906, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 344, elements: !12479)
!12479 = !{!12480}
!12480 = !DISubrange(count: 43)
!12481 = !DIGlobalVariableExpression(var: !12482, expr: !DIExpression())
!12482 = distinct !DIGlobalVariable(name: "__msg", scope: !12477, file: !3, line: 1928, type: !11570, isLocal: true, isDefinition: true)
!12483 = !DIGlobalVariableExpression(var: !12484, expr: !DIExpression())
!12484 = distinct !DIGlobalVariable(name: "__msg", scope: !12477, file: !3, line: 1935, type: !12485, isLocal: true, isDefinition: true)
!12485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 296, elements: !2209)
!12486 = !DIGlobalVariableExpression(var: !12487, expr: !DIExpression())
!12487 = distinct !DIGlobalVariable(name: "__msg", scope: !12477, file: !3, line: 1942, type: !12488, isLocal: true, isDefinition: true)
!12488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 384, elements: !7802)
!12489 = !DIGlobalVariableExpression(var: !12490, expr: !DIExpression())
!12490 = distinct !DIGlobalVariable(name: "__msg", scope: !12477, file: !3, line: 1962, type: !12491, isLocal: true, isDefinition: true)
!12491 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 352, elements: !1349)
!12492 = !DIGlobalVariableExpression(var: !12493, expr: !DIExpression())
!12493 = distinct !DIGlobalVariable(name: "__msg", scope: !12494, file: !3, line: 2002, type: !12478, isLocal: true, isDefinition: true)
!12494 = distinct !DISubprogram(name: "mlxsw_sp_port_unsplit", scope: !3, file: !3, line: 1987, type: !12071, scopeLine: 1989, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12495 = !DIGlobalVariableExpression(var: !12496, expr: !DIExpression())
!12496 = distinct !DIGlobalVariable(name: "__msg", scope: !12494, file: !3, line: 2008, type: !12497, isLocal: true, isDefinition: true)
!12497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 280, elements: !12498)
!12498 = !{!12499}
!12499 = !DISubrange(count: 35)
!12500 = !DIGlobalVariableExpression(var: !12501, expr: !DIExpression())
!12501 = distinct !DIGlobalVariable(name: "__msg", scope: !12494, file: !3, line: 2016, type: !11570, isLocal: true, isDefinition: true)
!12502 = !DIGlobalVariableExpression(var: !12503, expr: !DIExpression())
!12503 = distinct !DIGlobalVariable(name: "__msg", scope: !12494, file: !3, line: 2025, type: !12488, isLocal: true, isDefinition: true)
!12504 = !DIGlobalVariableExpression(var: !12505, expr: !DIExpression())
!12505 = distinct !DIGlobalVariable(name: "mlxsw_sp2_devlink_params", scope: !2, file: !3, line: 3165, type: !12506, isLocal: true, isDefinition: true)
!12506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12507, size: 448, elements: !1571)
!12507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12508)
!12508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_param", file: !8423, line: 438, size: 448, elements: !12509)
!12509 = !{!12510, !12511, !12512, !12513, !12514, !12515, !12531, !12532}
!12510 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12508, file: !8423, line: 439, baseType: !862, size: 32)
!12511 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12508, file: !8423, line: 440, baseType: !453, size: 64, offset: 64)
!12512 = !DIDerivedType(tag: DW_TAG_member, name: "generic", scope: !12508, file: !8423, line: 441, baseType: !696, size: 8, offset: 128)
!12513 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !12508, file: !8423, line: 442, baseType: !10671, size: 32, offset: 160)
!12514 = !DIDerivedType(tag: DW_TAG_member, name: "supported_cmodes", scope: !12508, file: !8423, line: 443, baseType: !473, size: 64, offset: 192)
!12515 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !12508, file: !8423, line: 444, baseType: !12516, size: 64, offset: 256)
!12516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12517, size: 64)
!12517 = !DISubroutineType(types: !12518)
!12518 = !{!7, !8429, !862, !12519}
!12519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12520, size: 64)
!12520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_param_gset_ctx", file: !8423, line: 399, size: 288, elements: !12521)
!12521 = !{!12522, !12530}
!12522 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !12520, file: !8423, line: 400, baseType: !12523, size: 256)
!12523 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "devlink_param_value", file: !8423, line: 391, size: 256, elements: !12524)
!12524 = !{!12525, !12526, !12527, !12528, !12529}
!12525 = !DIDerivedType(tag: DW_TAG_member, name: "vu8", scope: !12523, file: !8423, line: 392, baseType: !1552, size: 8)
!12526 = !DIDerivedType(tag: DW_TAG_member, name: "vu16", scope: !12523, file: !8423, line: 393, baseType: !1193, size: 16)
!12527 = !DIDerivedType(tag: DW_TAG_member, name: "vu32", scope: !12523, file: !8423, line: 394, baseType: !862, size: 32)
!12528 = !DIDerivedType(tag: DW_TAG_member, name: "vstr", scope: !12523, file: !8423, line: 395, baseType: !4356, size: 256)
!12529 = !DIDerivedType(tag: DW_TAG_member, name: "vbool", scope: !12523, file: !8423, line: 396, baseType: !696, size: 8)
!12530 = !DIDerivedType(tag: DW_TAG_member, name: "cmode", scope: !12520, file: !8423, line: 401, baseType: !10678, size: 32, offset: 256)
!12531 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !12508, file: !8423, line: 446, baseType: !12516, size: 64, offset: 320)
!12532 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !12508, file: !8423, line: 448, baseType: !12533, size: 64, offset: 384)
!12533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12534, size: 64)
!12534 = !DISubroutineType(types: !12535)
!12535 = !{!7, !8429, !862, !12523, !2633}
!12536 = !DIGlobalVariableExpression(var: !12537, expr: !DIExpression())
!12537 = distinct !DIGlobalVariable(name: "mlxsw_sp2_config_profile", scope: !2, file: !3, line: 2872, type: !12164, isLocal: true, isDefinition: true)
!12538 = !DIGlobalVariableExpression(var: !12539, expr: !DIExpression())
!12539 = distinct !DIGlobalVariable(name: "mlxsw_sp2_driver", scope: !2, file: !3, line: 3249, type: !12040, isLocal: true, isDefinition: true)
!12540 = !DIGlobalVariableExpression(var: !12541, expr: !DIExpression())
!12541 = distinct !DIGlobalVariable(name: "mlxsw_sp2_fw_rev", scope: !2, file: !3, line: 67, type: !12047, isLocal: true, isDefinition: true)
!12542 = !DIGlobalVariableExpression(var: !12543, expr: !DIExpression())
!12543 = distinct !DIGlobalVariable(name: "mlxsw_sp1_driver", scope: !2, file: !3, line: 3209, type: !12040, isLocal: true, isDefinition: true)
!12544 = !DIGlobalVariableExpression(var: !12545, expr: !DIExpression())
!12545 = distinct !DIGlobalVariable(name: "mlxsw_sp1_fw_rev", scope: !2, file: !3, line: 51, type: !12047, isLocal: true, isDefinition: true)
!12546 = !DIGlobalVariableExpression(var: !12547, expr: !DIExpression())
!12547 = distinct !DIGlobalVariable(name: "mlxsw_sp1_mac_mask", scope: !2, file: !3, line: 97, type: !12224, isLocal: true, isDefinition: true)
!12548 = !DIGlobalVariableExpression(var: !12549, expr: !DIExpression())
!12549 = distinct !DIGlobalVariable(name: "mlxsw_sp1_ptp_ops", scope: !2, file: !3, line: 2492, type: !11190, isLocal: true, isDefinition: true)
!12550 = !DIGlobalVariableExpression(var: !12551, expr: !DIExpression())
!12551 = distinct !DIGlobalVariable(name: "mlxsw_sp1_listener", scope: !2, file: !3, line: 2227, type: !12552, isLocal: true, isDefinition: true)
!12552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11281, size: 640, elements: !634)
!12553 = !DIGlobalVariableExpression(var: !12554, expr: !DIExpression())
!12554 = distinct !DIGlobalVariable(name: "mlxsw_reg_mtpptr_local_port_item", scope: !2, file: !10113, line: 9830, type: !10988, isLocal: true, isDefinition: true)
!12555 = !DIGlobalVariableExpression(var: !12556, expr: !DIExpression())
!12556 = distinct !DIGlobalVariable(name: "mlxsw_reg_mtpptr_num_rec_item", scope: !2, file: !10113, line: 9854, type: !10988, isLocal: true, isDefinition: true)
!12557 = !DIGlobalVariableExpression(var: !12558, expr: !DIExpression())
!12558 = distinct !DIGlobalVariable(name: "mlxsw_reg_mtpptr_rec_message_type_item", scope: !2, file: !10113, line: 9861, type: !10988, isLocal: true, isDefinition: true)
!12559 = !DIGlobalVariableExpression(var: !12560, expr: !DIExpression())
!12560 = distinct !DIGlobalVariable(name: "mlxsw_reg_mtpptr_rec_domain_number_item", scope: !2, file: !10113, line: 9869, type: !10988, isLocal: true, isDefinition: true)
!12561 = !DIGlobalVariableExpression(var: !12562, expr: !DIExpression())
!12562 = distinct !DIGlobalVariable(name: "mlxsw_reg_mtpptr_rec_sequence_id_item", scope: !2, file: !10113, line: 9877, type: !10988, isLocal: true, isDefinition: true)
!12563 = !DIGlobalVariableExpression(var: !12564, expr: !DIExpression())
!12564 = distinct !DIGlobalVariable(name: "mlxsw_reg_mtpptr_rec_timestamp_high_item", scope: !2, file: !10113, line: 9887, type: !10988, isLocal: true, isDefinition: true)
!12565 = !DIGlobalVariableExpression(var: !12566, expr: !DIExpression())
!12566 = distinct !DIGlobalVariable(name: "mlxsw_reg_mtpptr_rec_timestamp_low_item", scope: !2, file: !10113, line: 9895, type: !10988, isLocal: true, isDefinition: true)
!12567 = !DIGlobalVariableExpression(var: !12568, expr: !DIExpression())
!12568 = distinct !DIGlobalVariable(name: "mlxsw_sp1_config_profile", scope: !2, file: !3, line: 2848, type: !12164, isLocal: true, isDefinition: true)
!12569 = !DIGlobalVariableExpression(var: !12570, expr: !DIExpression())
!12570 = distinct !DIGlobalVariable(name: "mlxsw_sp_inet6addr_valid_nb", scope: !2, file: !3, line: 4343, type: !2170, isLocal: true, isDefinition: true)
!12571 = !DIGlobalVariableExpression(var: !12572, expr: !DIExpression())
!12572 = distinct !DIGlobalVariable(name: "mlxsw_sp_inetaddr_valid_nb", scope: !2, file: !3, line: 4339, type: !2170, isLocal: true, isDefinition: true)
!12573 = !{i32 7, !"Dwarf Version", i32 4}
!12574 = !{i32 2, !"Debug Info Version", i32 3}
!12575 = !{i32 1, !"wchar_size", i32 2}
!12576 = !{i32 1, !"Code Model", i32 2}
!12577 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!12578 = distinct !DISubprogram(name: "mlxsw_sp_flow_counter_get", scope: !3, file: !3, line: 172, type: !12579, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12579 = !DISubroutineType(types: !12580)
!12580 = !{!7, !10721, !14, !3933, !3933}
!12581 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !12578, file: !3, line: 172, type: !10721)
!12582 = !DILocation(line: 172, column: 48, scope: !12578)
!12583 = !DILocalVariable(name: "counter_index", arg: 2, scope: !12578, file: !3, line: 173, type: !14)
!12584 = !DILocation(line: 173, column: 23, scope: !12578)
!12585 = !DILocalVariable(name: "packets", arg: 3, scope: !12578, file: !3, line: 173, type: !3933)
!12586 = !DILocation(line: 173, column: 43, scope: !12578)
!12587 = !DILocalVariable(name: "bytes", arg: 4, scope: !12578, file: !3, line: 174, type: !3933)
!12588 = !DILocation(line: 174, column: 15, scope: !12578)
!12589 = !DILocalVariable(name: "mgpc_pl", scope: !12578, file: !3, line: 176, type: !12590)
!12590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 192, elements: !5361)
!12591 = !DILocation(line: 176, column: 7, scope: !12578)
!12592 = !DILocalVariable(name: "err", scope: !12578, file: !3, line: 177, type: !7)
!12593 = !DILocation(line: 177, column: 6, scope: !12578)
!12594 = !DILocation(line: 179, column: 22, scope: !12578)
!12595 = !DILocation(line: 179, column: 31, scope: !12578)
!12596 = !DILocation(line: 179, column: 2, scope: !12578)
!12597 = !DILocation(line: 181, column: 24, scope: !12578)
!12598 = !DILocation(line: 181, column: 34, scope: !12578)
!12599 = !DILocation(line: 181, column: 57, scope: !12578)
!12600 = !DILocation(line: 181, column: 8, scope: !12578)
!12601 = !DILocation(line: 181, column: 6, scope: !12578)
!12602 = !DILocation(line: 182, column: 6, scope: !12603)
!12603 = distinct !DILexicalBlock(scope: !12578, file: !3, line: 182, column: 6)
!12604 = !DILocation(line: 182, column: 6, scope: !12578)
!12605 = !DILocation(line: 183, column: 10, scope: !12603)
!12606 = !DILocation(line: 183, column: 3, scope: !12603)
!12607 = !DILocation(line: 184, column: 6, scope: !12608)
!12608 = distinct !DILexicalBlock(scope: !12578, file: !3, line: 184, column: 6)
!12609 = !DILocation(line: 184, column: 6, scope: !12578)
!12610 = !DILocation(line: 185, column: 48, scope: !12608)
!12611 = !DILocation(line: 185, column: 14, scope: !12608)
!12612 = !DILocation(line: 185, column: 4, scope: !12608)
!12613 = !DILocation(line: 185, column: 12, scope: !12608)
!12614 = !DILocation(line: 185, column: 3, scope: !12608)
!12615 = !DILocation(line: 186, column: 6, scope: !12616)
!12616 = distinct !DILexicalBlock(scope: !12578, file: !3, line: 186, column: 6)
!12617 = !DILocation(line: 186, column: 6, scope: !12578)
!12618 = !DILocation(line: 187, column: 44, scope: !12616)
!12619 = !DILocation(line: 187, column: 12, scope: !12616)
!12620 = !DILocation(line: 187, column: 4, scope: !12616)
!12621 = !DILocation(line: 187, column: 10, scope: !12616)
!12622 = !DILocation(line: 187, column: 3, scope: !12616)
!12623 = !DILocation(line: 188, column: 2, scope: !12578)
!12624 = !DILocation(line: 189, column: 1, scope: !12578)
!12625 = distinct !DISubprogram(name: "mlxsw_reg_mgpc_pack", scope: !10113, file: !10113, line: 9583, type: !12626, scopeLine: 9586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12626 = !DISubroutineType(types: !12627)
!12627 = !{null, !733, !862, !10195, !10199}
!12628 = !DILocalVariable(name: "payload", arg: 1, scope: !12625, file: !10113, line: 9583, type: !733)
!12629 = !DILocation(line: 9583, column: 46, scope: !12625)
!12630 = !DILocalVariable(name: "counter_index", arg: 2, scope: !12625, file: !10113, line: 9583, type: !862)
!12631 = !DILocation(line: 9583, column: 59, scope: !12625)
!12632 = !DILocalVariable(name: "opcode", arg: 3, scope: !12625, file: !10113, line: 9584, type: !10195)
!12633 = !DILocation(line: 9584, column: 39, scope: !12625)
!12634 = !DILocalVariable(name: "set_type", arg: 4, scope: !12625, file: !10113, line: 9585, type: !10199)
!12635 = !DILocation(line: 9585, column: 49, scope: !12625)
!12636 = !DILocation(line: 9587, column: 2, scope: !12625)
!12637 = !DILocation(line: 9588, column: 35, scope: !12625)
!12638 = !DILocation(line: 9588, column: 44, scope: !12625)
!12639 = !DILocation(line: 9588, column: 2, scope: !12625)
!12640 = !DILocation(line: 9589, column: 38, scope: !12625)
!12641 = !DILocation(line: 9589, column: 47, scope: !12625)
!12642 = !DILocation(line: 9589, column: 2, scope: !12625)
!12643 = !DILocation(line: 9590, column: 28, scope: !12625)
!12644 = !DILocation(line: 9590, column: 37, scope: !12625)
!12645 = !DILocation(line: 9590, column: 2, scope: !12625)
!12646 = !DILocation(line: 9591, column: 1, scope: !12625)
!12647 = distinct !DISubprogram(name: "mlxsw_reg_mgpc_packet_counter_get", scope: !10113, file: !10113, line: 9581, type: !12648, scopeLine: 9581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12648 = !DISubroutineType(types: !12649)
!12649 = !{!492, !453}
!12650 = !DILocalVariable(name: "buf", arg: 1, scope: !12647, file: !10113, line: 9581, type: !453)
!12651 = !DILocation(line: 9581, column: 1, scope: !12647)
!12652 = distinct !DISubprogram(name: "mlxsw_reg_mgpc_byte_counter_get", scope: !10113, file: !10113, line: 9575, type: !12648, scopeLine: 9575, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12653 = !DILocalVariable(name: "buf", arg: 1, scope: !12652, file: !10113, line: 9575, type: !453)
!12654 = !DILocation(line: 9575, column: 1, scope: !12652)
!12655 = distinct !DISubprogram(name: "mlxsw_sp_flow_counter_alloc", scope: !3, file: !3, line: 201, type: !12656, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12656 = !DISubroutineType(types: !12657)
!12657 = !{!7, !10721, !6841}
!12658 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !12655, file: !3, line: 201, type: !10721)
!12659 = !DILocation(line: 201, column: 50, scope: !12655)
!12660 = !DILocalVariable(name: "p_counter_index", arg: 2, scope: !12655, file: !3, line: 202, type: !6841)
!12661 = !DILocation(line: 202, column: 19, scope: !12655)
!12662 = !DILocalVariable(name: "err", scope: !12655, file: !3, line: 204, type: !7)
!12663 = !DILocation(line: 204, column: 6, scope: !12655)
!12664 = !DILocation(line: 206, column: 31, scope: !12655)
!12665 = !DILocation(line: 207, column: 10, scope: !12655)
!12666 = !DILocation(line: 206, column: 8, scope: !12655)
!12667 = !DILocation(line: 206, column: 6, scope: !12655)
!12668 = !DILocation(line: 208, column: 6, scope: !12669)
!12669 = distinct !DILexicalBlock(scope: !12655, file: !3, line: 208, column: 6)
!12670 = !DILocation(line: 208, column: 6, scope: !12655)
!12671 = !DILocation(line: 209, column: 10, scope: !12669)
!12672 = !DILocation(line: 209, column: 3, scope: !12669)
!12673 = !DILocation(line: 210, column: 36, scope: !12655)
!12674 = !DILocation(line: 210, column: 47, scope: !12655)
!12675 = !DILocation(line: 210, column: 46, scope: !12655)
!12676 = !DILocation(line: 210, column: 8, scope: !12655)
!12677 = !DILocation(line: 210, column: 6, scope: !12655)
!12678 = !DILocation(line: 211, column: 6, scope: !12679)
!12679 = distinct !DILexicalBlock(scope: !12655, file: !3, line: 211, column: 6)
!12680 = !DILocation(line: 211, column: 6, scope: !12655)
!12681 = !DILocation(line: 212, column: 3, scope: !12679)
!12682 = !DILocation(line: 213, column: 2, scope: !12655)
!12683 = !DILabel(scope: !12655, name: "err_counter_clear", file: !3, line: 215)
!12684 = !DILocation(line: 215, column: 1, scope: !12655)
!12685 = !DILocation(line: 216, column: 24, scope: !12655)
!12686 = !DILocation(line: 217, column: 11, scope: !12655)
!12687 = !DILocation(line: 217, column: 10, scope: !12655)
!12688 = !DILocation(line: 216, column: 2, scope: !12655)
!12689 = !DILocation(line: 218, column: 9, scope: !12655)
!12690 = !DILocation(line: 218, column: 2, scope: !12655)
!12691 = !DILocation(line: 219, column: 1, scope: !12655)
!12692 = distinct !DISubprogram(name: "mlxsw_sp_flow_counter_clear", scope: !3, file: !3, line: 191, type: !12693, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12693 = !DISubroutineType(types: !12694)
!12694 = !{!7, !10721, !14}
!12695 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !12692, file: !3, line: 191, type: !10721)
!12696 = !DILocation(line: 191, column: 57, scope: !12692)
!12697 = !DILocalVariable(name: "counter_index", arg: 2, scope: !12692, file: !3, line: 192, type: !14)
!12698 = !DILocation(line: 192, column: 25, scope: !12692)
!12699 = !DILocalVariable(name: "mgpc_pl", scope: !12692, file: !3, line: 194, type: !12590)
!12700 = !DILocation(line: 194, column: 7, scope: !12692)
!12701 = !DILocation(line: 196, column: 22, scope: !12692)
!12702 = !DILocation(line: 196, column: 31, scope: !12692)
!12703 = !DILocation(line: 196, column: 2, scope: !12692)
!12704 = !DILocation(line: 198, column: 25, scope: !12692)
!12705 = !DILocation(line: 198, column: 35, scope: !12692)
!12706 = !DILocation(line: 198, column: 58, scope: !12692)
!12707 = !DILocation(line: 198, column: 9, scope: !12692)
!12708 = !DILocation(line: 198, column: 2, scope: !12692)
!12709 = distinct !DISubprogram(name: "mlxsw_sp_flow_counter_free", scope: !3, file: !3, line: 221, type: !12710, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12710 = !DISubroutineType(types: !12711)
!12711 = !{null, !10721, !14}
!12712 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !12709, file: !3, line: 221, type: !10721)
!12713 = !DILocation(line: 221, column: 50, scope: !12709)
!12714 = !DILocalVariable(name: "counter_index", arg: 2, scope: !12709, file: !3, line: 222, type: !14)
!12715 = !DILocation(line: 222, column: 18, scope: !12709)
!12716 = !DILocation(line: 224, column: 25, scope: !12709)
!12717 = !DILocation(line: 225, column: 11, scope: !12709)
!12718 = !DILocation(line: 224, column: 3, scope: !12709)
!12719 = !DILocation(line: 226, column: 1, scope: !12709)
!12720 = distinct !DISubprogram(name: "mlxsw_sp_stp_spms_state", scope: !3, file: !3, line: 244, type: !12721, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12721 = !DISubroutineType(types: !12722)
!12722 = !{!10209, !1552}
!12723 = !DILocalVariable(name: "state", arg: 1, scope: !12720, file: !3, line: 244, type: !1552)
!12724 = !DILocation(line: 244, column: 54, scope: !12720)
!12725 = !DILocation(line: 246, column: 10, scope: !12720)
!12726 = !DILocation(line: 246, column: 2, scope: !12720)
!12727 = !DILocation(line: 248, column: 3, scope: !12728)
!12728 = distinct !DILexicalBlock(scope: !12720, file: !3, line: 246, column: 17)
!12729 = !DILocation(line: 250, column: 3, scope: !12728)
!12730 = !DILocation(line: 254, column: 3, scope: !12728)
!12731 = !DILocation(line: 256, column: 3, scope: !12728)
!12732 = !DILocation(line: 256, column: 3, scope: !12733)
!12733 = distinct !DILexicalBlock(scope: !12728, file: !3, line: 256, column: 3)
!12734 = !DILocation(line: 256, column: 3, scope: !12735)
!12735 = distinct !DILexicalBlock(scope: !12733, file: !3, line: 256, column: 3)
!12736 = !DILocation(line: 256, column: 3, scope: !12737)
!12737 = distinct !DILexicalBlock(scope: !12733, file: !3, line: 256, column: 3)
!12738 = !{i32 -2134418469, i32 -2134418440, i32 -2134418394, i32 -2134418336, i32 -2134418282, i32 -2134418228, i32 -2134418173, i32 -2134418142}
!12739 = !DILocation(line: 256, column: 3, scope: !12740)
!12740 = distinct !DILexicalBlock(scope: !12741, file: !3, line: 256, column: 3)
!12741 = distinct !DILexicalBlock(scope: !12733, file: !3, line: 256, column: 3)
!12742 = !{i32 -2134417673, i32 -2134417666, i32 -2134417612, i32 -2134417581, i32 -2134417551}
!12743 = !DILocation(line: 256, column: 3, scope: !12741)
!12744 = !DILocation(line: 257, column: 2, scope: !12728)
!12745 = !DILocation(line: 258, column: 1, scope: !12720)
!12746 = distinct !DISubprogram(name: "mlxsw_sp_port_vid_stp_set", scope: !3, file: !3, line: 260, type: !12747, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12747 = !DISubroutineType(types: !12748)
!12748 = !{!7, !10715, !1193, !1552}
!12749 = !DILocalVariable(name: "s", arg: 1, scope: !12750, file: !10234, line: 445, type: !2432)
!12750 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !10234, file: !10234, line: 445, type: !12751, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12751 = !DISubroutineType(types: !12752)
!12752 = !{!726, !2432, !2144, !750}
!12753 = !DILocation(line: 445, column: 72, scope: !12750, inlinedAt: !12754)
!12754 = distinct !DILocation(line: 552, column: 10, scope: !12755, inlinedAt: !12760)
!12755 = distinct !DILexicalBlock(scope: !12756, file: !10234, line: 540, column: 34)
!12756 = distinct !DILexicalBlock(scope: !12757, file: !10234, line: 540, column: 6)
!12757 = distinct !DISubprogram(name: "kmalloc", scope: !10234, file: !10234, line: 538, type: !12758, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12758 = !DISubroutineType(types: !12759)
!12759 = !{!726, !750, !2144}
!12760 = distinct !DILocation(line: 268, column: 12, scope: !12746)
!12761 = !DILocalVariable(name: "flags", arg: 2, scope: !12750, file: !10234, line: 446, type: !2144)
!12762 = !DILocation(line: 446, column: 9, scope: !12750, inlinedAt: !12754)
!12763 = !DILocalVariable(name: "size", arg: 3, scope: !12750, file: !10234, line: 446, type: !750)
!12764 = !DILocation(line: 446, column: 23, scope: !12750, inlinedAt: !12754)
!12765 = !DILocalVariable(name: "ret", scope: !12750, file: !10234, line: 448, type: !726)
!12766 = !DILocation(line: 448, column: 8, scope: !12750, inlinedAt: !12754)
!12767 = !DILocalVariable(name: "flags", arg: 1, scope: !12768, file: !10234, line: 318, type: !2144)
!12768 = distinct !DISubprogram(name: "kmalloc_type", scope: !10234, file: !10234, line: 318, type: !12769, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12769 = !DISubroutineType(types: !12770)
!12770 = !{!10233, !2144}
!12771 = !DILocation(line: 318, column: 67, scope: !12768, inlinedAt: !12772)
!12772 = distinct !DILocation(line: 553, column: 20, scope: !12755, inlinedAt: !12760)
!12773 = !DILocalVariable(name: "size", arg: 1, scope: !12774, file: !10234, line: 346, type: !750)
!12774 = distinct !DISubprogram(name: "kmalloc_index", scope: !10234, file: !10234, line: 346, type: !12775, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12775 = !DISubroutineType(types: !12776)
!12776 = !{!14, !750}
!12777 = !DILocation(line: 346, column: 58, scope: !12774, inlinedAt: !12778)
!12778 = distinct !DILocation(line: 547, column: 11, scope: !12755, inlinedAt: !12760)
!12779 = !DILocalVariable(name: "size", arg: 1, scope: !12780, file: !10234, line: 472, type: !750)
!12780 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !10234, file: !10234, line: 472, type: !12781, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12781 = !DISubroutineType(types: !12782)
!12782 = !{!726, !750, !2144, !14}
!12783 = !DILocation(line: 472, column: 28, scope: !12780, inlinedAt: !12784)
!12784 = distinct !DILocation(line: 481, column: 9, scope: !12785, inlinedAt: !12786)
!12785 = distinct !DISubprogram(name: "kmalloc_large", scope: !10234, file: !10234, line: 478, type: !12758, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!12786 = distinct !DILocation(line: 545, column: 11, scope: !12787, inlinedAt: !12760)
!12787 = distinct !DILexicalBlock(scope: !12755, file: !10234, line: 544, column: 7)
!12788 = !DILocalVariable(name: "flags", arg: 2, scope: !12780, file: !10234, line: 472, type: !2144)
!12789 = !DILocation(line: 472, column: 40, scope: !12780, inlinedAt: !12784)
!12790 = !DILocalVariable(name: "order", arg: 3, scope: !12780, file: !10234, line: 472, type: !14)
!12791 = !DILocation(line: 472, column: 60, scope: !12780, inlinedAt: !12784)
!12792 = !DILocalVariable(name: "size", arg: 1, scope: !12785, file: !10234, line: 478, type: !750)
!12793 = !DILocation(line: 478, column: 51, scope: !12785, inlinedAt: !12786)
!12794 = !DILocalVariable(name: "flags", arg: 2, scope: !12785, file: !10234, line: 478, type: !2144)
!12795 = !DILocation(line: 478, column: 63, scope: !12785, inlinedAt: !12786)
!12796 = !DILocalVariable(name: "order", scope: !12785, file: !10234, line: 480, type: !14)
!12797 = !DILocation(line: 480, column: 15, scope: !12785, inlinedAt: !12786)
!12798 = !DILocalVariable(name: "size", arg: 1, scope: !12757, file: !10234, line: 538, type: !750)
!12799 = !DILocation(line: 538, column: 45, scope: !12757, inlinedAt: !12760)
!12800 = !DILocalVariable(name: "flags", arg: 2, scope: !12757, file: !10234, line: 538, type: !2144)
!12801 = !DILocation(line: 538, column: 57, scope: !12757, inlinedAt: !12760)
!12802 = !DILocalVariable(name: "index", scope: !12755, file: !10234, line: 542, type: !14)
!12803 = !DILocation(line: 542, column: 16, scope: !12755, inlinedAt: !12760)
!12804 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !12746, file: !3, line: 260, type: !10715)
!12805 = !DILocation(line: 260, column: 53, scope: !12746)
!12806 = !DILocalVariable(name: "vid", arg: 2, scope: !12746, file: !3, line: 260, type: !1193)
!12807 = !DILocation(line: 260, column: 72, scope: !12746)
!12808 = !DILocalVariable(name: "state", arg: 3, scope: !12746, file: !3, line: 261, type: !1552)
!12809 = !DILocation(line: 261, column: 13, scope: !12746)
!12810 = !DILocalVariable(name: "spms_state", scope: !12746, file: !3, line: 263, type: !10209)
!12811 = !DILocation(line: 263, column: 28, scope: !12746)
!12812 = !DILocation(line: 263, column: 65, scope: !12746)
!12813 = !DILocation(line: 263, column: 41, scope: !12746)
!12814 = !DILocalVariable(name: "mlxsw_sp", scope: !12746, file: !3, line: 264, type: !10721)
!12815 = !DILocation(line: 264, column: 19, scope: !12746)
!12816 = !DILocation(line: 264, column: 30, scope: !12746)
!12817 = !DILocation(line: 264, column: 45, scope: !12746)
!12818 = !DILocalVariable(name: "spms_pl", scope: !12746, file: !3, line: 265, type: !733)
!12819 = !DILocation(line: 265, column: 8, scope: !12746)
!12820 = !DILocalVariable(name: "err", scope: !12746, file: !3, line: 266, type: !7)
!12821 = !DILocation(line: 266, column: 6, scope: !12746)
!12822 = !DILocation(line: 540, column: 27, scope: !12756, inlinedAt: !12760)
!12823 = !DILocation(line: 540, column: 6, scope: !12756, inlinedAt: !12760)
!12824 = !DILocation(line: 540, column: 6, scope: !12757, inlinedAt: !12760)
!12825 = !DILocation(line: 544, column: 7, scope: !12787, inlinedAt: !12760)
!12826 = !DILocation(line: 544, column: 12, scope: !12787, inlinedAt: !12760)
!12827 = !DILocation(line: 544, column: 7, scope: !12755, inlinedAt: !12760)
!12828 = !DILocation(line: 545, column: 25, scope: !12787, inlinedAt: !12760)
!12829 = !DILocation(line: 545, column: 31, scope: !12787, inlinedAt: !12760)
!12830 = !DILocation(line: 480, column: 33, scope: !12785, inlinedAt: !12786)
!12831 = !DILocation(line: 480, column: 23, scope: !12785, inlinedAt: !12786)
!12832 = !DILocation(line: 481, column: 29, scope: !12785, inlinedAt: !12786)
!12833 = !DILocation(line: 481, column: 35, scope: !12785, inlinedAt: !12786)
!12834 = !DILocation(line: 481, column: 42, scope: !12785, inlinedAt: !12786)
!12835 = !DILocation(line: 474, column: 23, scope: !12780, inlinedAt: !12784)
!12836 = !DILocation(line: 474, column: 29, scope: !12780, inlinedAt: !12784)
!12837 = !DILocation(line: 474, column: 36, scope: !12780, inlinedAt: !12784)
!12838 = !DILocation(line: 474, column: 9, scope: !12780, inlinedAt: !12784)
!12839 = !DILocation(line: 545, column: 4, scope: !12787, inlinedAt: !12760)
!12840 = !DILocation(line: 547, column: 25, scope: !12755, inlinedAt: !12760)
!12841 = !DILocation(line: 348, column: 7, scope: !12842, inlinedAt: !12778)
!12842 = distinct !DILexicalBlock(scope: !12774, file: !10234, line: 348, column: 6)
!12843 = !DILocation(line: 348, column: 6, scope: !12774, inlinedAt: !12778)
!12844 = !DILocation(line: 349, column: 3, scope: !12842, inlinedAt: !12778)
!12845 = !DILocation(line: 351, column: 6, scope: !12846, inlinedAt: !12778)
!12846 = distinct !DILexicalBlock(scope: !12774, file: !10234, line: 351, column: 6)
!12847 = !DILocation(line: 351, column: 11, scope: !12846, inlinedAt: !12778)
!12848 = !DILocation(line: 351, column: 6, scope: !12774, inlinedAt: !12778)
!12849 = !DILocation(line: 352, column: 3, scope: !12846, inlinedAt: !12778)
!12850 = !DILocation(line: 354, column: 32, scope: !12851, inlinedAt: !12778)
!12851 = distinct !DILexicalBlock(scope: !12774, file: !10234, line: 354, column: 6)
!12852 = !DILocation(line: 354, column: 37, scope: !12851, inlinedAt: !12778)
!12853 = !DILocation(line: 354, column: 42, scope: !12851, inlinedAt: !12778)
!12854 = !DILocation(line: 354, column: 45, scope: !12851, inlinedAt: !12778)
!12855 = !DILocation(line: 354, column: 50, scope: !12851, inlinedAt: !12778)
!12856 = !DILocation(line: 354, column: 6, scope: !12774, inlinedAt: !12778)
!12857 = !DILocation(line: 355, column: 3, scope: !12851, inlinedAt: !12778)
!12858 = !DILocation(line: 356, column: 32, scope: !12859, inlinedAt: !12778)
!12859 = distinct !DILexicalBlock(scope: !12774, file: !10234, line: 356, column: 6)
!12860 = !DILocation(line: 356, column: 37, scope: !12859, inlinedAt: !12778)
!12861 = !DILocation(line: 356, column: 43, scope: !12859, inlinedAt: !12778)
!12862 = !DILocation(line: 356, column: 46, scope: !12859, inlinedAt: !12778)
!12863 = !DILocation(line: 356, column: 51, scope: !12859, inlinedAt: !12778)
!12864 = !DILocation(line: 356, column: 6, scope: !12774, inlinedAt: !12778)
!12865 = !DILocation(line: 357, column: 3, scope: !12859, inlinedAt: !12778)
!12866 = !DILocation(line: 358, column: 6, scope: !12867, inlinedAt: !12778)
!12867 = distinct !DILexicalBlock(scope: !12774, file: !10234, line: 358, column: 6)
!12868 = !DILocation(line: 358, column: 11, scope: !12867, inlinedAt: !12778)
!12869 = !DILocation(line: 358, column: 6, scope: !12774, inlinedAt: !12778)
!12870 = !DILocation(line: 358, column: 26, scope: !12867, inlinedAt: !12778)
!12871 = !DILocation(line: 359, column: 6, scope: !12872, inlinedAt: !12778)
!12872 = distinct !DILexicalBlock(scope: !12774, file: !10234, line: 359, column: 6)
!12873 = !DILocation(line: 359, column: 11, scope: !12872, inlinedAt: !12778)
!12874 = !DILocation(line: 359, column: 6, scope: !12774, inlinedAt: !12778)
!12875 = !DILocation(line: 359, column: 26, scope: !12872, inlinedAt: !12778)
!12876 = !DILocation(line: 360, column: 6, scope: !12877, inlinedAt: !12778)
!12877 = distinct !DILexicalBlock(scope: !12774, file: !10234, line: 360, column: 6)
!12878 = !DILocation(line: 360, column: 11, scope: !12877, inlinedAt: !12778)
!12879 = !DILocation(line: 360, column: 6, scope: !12774, inlinedAt: !12778)
!12880 = !DILocation(line: 360, column: 26, scope: !12877, inlinedAt: !12778)
!12881 = !DILocation(line: 361, column: 6, scope: !12882, inlinedAt: !12778)
!12882 = distinct !DILexicalBlock(scope: !12774, file: !10234, line: 361, column: 6)
!12883 = !DILocation(line: 361, column: 11, scope: !12882, inlinedAt: !12778)
!12884 = !DILocation(line: 361, column: 6, scope: !12774, inlinedAt: !12778)
!12885 = !DILocation(line: 361, column: 26, scope: !12882, inlinedAt: !12778)
!12886 = !DILocation(line: 362, column: 6, scope: !12887, inlinedAt: !12778)
!12887 = distinct !DILexicalBlock(scope: !12774, file: !10234, line: 362, column: 6)
!12888 = !DILocation(line: 362, column: 11, scope: !12887, inlinedAt: !12778)
!12889 = !DILocation(line: 362, column: 6, scope: !12774, inlinedAt: !12778)
!12890 = !DILocation(line: 362, column: 26, scope: !12887, inlinedAt: !12778)
!12891 = !DILocation(line: 363, column: 6, scope: !12892, inlinedAt: !12778)
!12892 = distinct !DILexicalBlock(scope: !12774, file: !10234, line: 363, column: 6)
!12893 = !DILocation(line: 363, column: 11, scope: !12892, inlinedAt: !12778)
!12894 = !DILocation(line: 363, column: 6, scope: !12774, inlinedAt: !12778)
!12895 = !DILocation(line: 363, column: 26, scope: !12892, inlinedAt: !12778)
!12896 = !DILocation(line: 364, column: 6, scope: !12897, inlinedAt: !12778)
!12897 = distinct !DILexicalBlock(scope: !12774, file: !10234, line: 364, column: 6)
!12898 = !DILocation(line: 364, column: 11, scope: !12897, inlinedAt: !12778)
!12899 = !DILocation(line: 364, column: 6, scope: !12774, inlinedAt: !12778)
!12900 = !DILocation(line: 364, column: 26, scope: !12897, inlinedAt: !12778)
!12901 = !DILocation(line: 365, column: 6, scope: !12902, inlinedAt: !12778)
!12902 = distinct !DILexicalBlock(scope: !12774, file: !10234, line: 365, column: 6)
!12903 = !DILocation(line: 365, column: 11, scope: !12902, inlinedAt: !12778)
!12904 = !DILocation(line: 365, column: 6, scope: !12774, inlinedAt: !12778)
!12905 = !DILocation(line: 365, column: 26, scope: !12902, inlinedAt: !12778)
!12906 = !DILocation(line: 366, column: 6, scope: !12907, inlinedAt: !12778)
!12907 = distinct !DILexicalBlock(scope: !12774, file: !10234, line: 366, column: 6)
!12908 = !DILocation(line: 366, column: 11, scope: !12907, inlinedAt: !12778)
!12909 = !DILocation(line: 366, column: 6, scope: !12774, inlinedAt: !12778)
!12910 = !DILocation(line: 366, column: 26, scope: !12907, inlinedAt: !12778)
!12911 = !DILocation(line: 367, column: 6, scope: !12912, inlinedAt: !12778)
!12912 = distinct !DILexicalBlock(scope: !12774, file: !10234, line: 367, column: 6)
!12913 = !DILocation(line: 367, column: 11, scope: !12912, inlinedAt: !12778)
!12914 = !DILocation(line: 367, column: 6, scope: !12774, inlinedAt: !12778)
!12915 = !DILocation(line: 367, column: 26, scope: !12912, inlinedAt: !12778)
!12916 = !DILocation(line: 368, column: 6, scope: !12917, inlinedAt: !12778)
!12917 = distinct !DILexicalBlock(scope: !12774, file: !10234, line: 368, column: 6)
!12918 = !DILocation(line: 368, column: 11, scope: !12917, inlinedAt: !12778)
!12919 = !DILocation(line: 368, column: 6, scope: !12774, inlinedAt: !12778)
!12920 = !DILocation(line: 368, column: 26, scope: !12917, inlinedAt: !12778)
!12921 = !DILocation(line: 369, column: 6, scope: !12922, inlinedAt: !12778)
!12922 = distinct !DILexicalBlock(scope: !12774, file: !10234, line: 369, column: 6)
!12923 = !DILocation(line: 369, column: 11, scope: !12922, inlinedAt: !12778)
!12924 = !DILocation(line: 369, column: 6, scope: !12774, inlinedAt: !12778)
!12925 = !DILocation(line: 369, column: 26, scope: !12922, inlinedAt: !12778)
!12926 = !DILocation(line: 370, column: 6, scope: !12927, inlinedAt: !12778)
!12927 = distinct !DILexicalBlock(scope: !12774, file: !10234, line: 370, column: 6)
!12928 = !DILocation(line: 370, column: 11, scope: !12927, inlinedAt: !12778)
!12929 = !DILocation(line: 370, column: 6, scope: !12774, inlinedAt: !12778)
!12930 = !DILocation(line: 370, column: 26, scope: !12927, inlinedAt: !12778)
!12931 = !DILocation(line: 371, column: 6, scope: !12932, inlinedAt: !12778)
!12932 = distinct !DILexicalBlock(scope: !12774, file: !10234, line: 371, column: 6)
!12933 = !DILocation(line: 371, column: 11, scope: !12932, inlinedAt: !12778)
!12934 = !DILocation(line: 371, column: 6, scope: !12774, inlinedAt: !12778)
!12935 = !DILocation(line: 371, column: 26, scope: !12932, inlinedAt: !12778)
!12936 = !DILocation(line: 372, column: 6, scope: !12937, inlinedAt: !12778)
!12937 = distinct !DILexicalBlock(scope: !12774, file: !10234, line: 372, column: 6)
!12938 = !DILocation(line: 372, column: 11, scope: !12937, inlinedAt: !12778)
!12939 = !DILocation(line: 372, column: 6, scope: !12774, inlinedAt: !12778)
!12940 = !DILocation(line: 372, column: 26, scope: !12937, inlinedAt: !12778)
!12941 = !DILocation(line: 373, column: 6, scope: !12942, inlinedAt: !12778)
!12942 = distinct !DILexicalBlock(scope: !12774, file: !10234, line: 373, column: 6)
!12943 = !DILocation(line: 373, column: 11, scope: !12942, inlinedAt: !12778)
!12944 = !DILocation(line: 373, column: 6, scope: !12774, inlinedAt: !12778)
!12945 = !DILocation(line: 373, column: 26, scope: !12942, inlinedAt: !12778)
!12946 = !DILocation(line: 374, column: 6, scope: !12947, inlinedAt: !12778)
!12947 = distinct !DILexicalBlock(scope: !12774, file: !10234, line: 374, column: 6)
!12948 = !DILocation(line: 374, column: 11, scope: !12947, inlinedAt: !12778)
!12949 = !DILocation(line: 374, column: 6, scope: !12774, inlinedAt: !12778)
!12950 = !DILocation(line: 374, column: 26, scope: !12947, inlinedAt: !12778)
!12951 = !DILocation(line: 375, column: 6, scope: !12952, inlinedAt: !12778)
!12952 = distinct !DILexicalBlock(scope: !12774, file: !10234, line: 375, column: 6)
!12953 = !DILocation(line: 375, column: 11, scope: !12952, inlinedAt: !12778)
!12954 = !DILocation(line: 375, column: 6, scope: !12774, inlinedAt: !12778)
!12955 = !DILocation(line: 375, column: 27, scope: !12952, inlinedAt: !12778)
!12956 = !DILocation(line: 376, column: 6, scope: !12957, inlinedAt: !12778)
!12957 = distinct !DILexicalBlock(scope: !12774, file: !10234, line: 376, column: 6)
!12958 = !DILocation(line: 376, column: 11, scope: !12957, inlinedAt: !12778)
!12959 = !DILocation(line: 376, column: 6, scope: !12774, inlinedAt: !12778)
!12960 = !DILocation(line: 376, column: 32, scope: !12957, inlinedAt: !12778)
!12961 = !DILocation(line: 377, column: 6, scope: !12962, inlinedAt: !12778)
!12962 = distinct !DILexicalBlock(scope: !12774, file: !10234, line: 377, column: 6)
!12963 = !DILocation(line: 377, column: 11, scope: !12962, inlinedAt: !12778)
!12964 = !DILocation(line: 377, column: 6, scope: !12774, inlinedAt: !12778)
!12965 = !DILocation(line: 377, column: 32, scope: !12962, inlinedAt: !12778)
!12966 = !DILocation(line: 378, column: 6, scope: !12967, inlinedAt: !12778)
!12967 = distinct !DILexicalBlock(scope: !12774, file: !10234, line: 378, column: 6)
!12968 = !DILocation(line: 378, column: 11, scope: !12967, inlinedAt: !12778)
!12969 = !DILocation(line: 378, column: 6, scope: !12774, inlinedAt: !12778)
!12970 = !DILocation(line: 378, column: 32, scope: !12967, inlinedAt: !12778)
!12971 = !DILocation(line: 379, column: 6, scope: !12972, inlinedAt: !12778)
!12972 = distinct !DILexicalBlock(scope: !12774, file: !10234, line: 379, column: 6)
!12973 = !DILocation(line: 379, column: 11, scope: !12972, inlinedAt: !12778)
!12974 = !DILocation(line: 379, column: 6, scope: !12774, inlinedAt: !12778)
!12975 = !DILocation(line: 379, column: 33, scope: !12972, inlinedAt: !12778)
!12976 = !DILocation(line: 380, column: 6, scope: !12977, inlinedAt: !12778)
!12977 = distinct !DILexicalBlock(scope: !12774, file: !10234, line: 380, column: 6)
!12978 = !DILocation(line: 380, column: 11, scope: !12977, inlinedAt: !12778)
!12979 = !DILocation(line: 380, column: 6, scope: !12774, inlinedAt: !12778)
!12980 = !DILocation(line: 380, column: 33, scope: !12977, inlinedAt: !12778)
!12981 = !DILocation(line: 381, column: 6, scope: !12982, inlinedAt: !12778)
!12982 = distinct !DILexicalBlock(scope: !12774, file: !10234, line: 381, column: 6)
!12983 = !DILocation(line: 381, column: 11, scope: !12982, inlinedAt: !12778)
!12984 = !DILocation(line: 381, column: 6, scope: !12774, inlinedAt: !12778)
!12985 = !DILocation(line: 381, column: 33, scope: !12982, inlinedAt: !12778)
!12986 = !DILocation(line: 382, column: 2, scope: !12987, inlinedAt: !12778)
!12987 = distinct !DILexicalBlock(scope: !12988, file: !10234, line: 382, column: 2)
!12988 = distinct !DILexicalBlock(scope: !12774, file: !10234, line: 382, column: 2)
!12989 = !{i32 -2143151365, i32 -2143151336, i32 -2143151290, i32 -2143151232, i32 -2143151178, i32 -2143151124, i32 -2143151069, i32 -2143151038}
!12990 = !DILocation(line: 382, column: 2, scope: !12991, inlinedAt: !12778)
!12991 = distinct !DILexicalBlock(scope: !12992, file: !10234, line: 382, column: 2)
!12992 = distinct !DILexicalBlock(scope: !12988, file: !10234, line: 382, column: 2)
!12993 = !{i32 -2143150595, i32 -2143150588, i32 -2143150534, i32 -2143150503, i32 -2143150473}
!12994 = !DILocation(line: 382, column: 2, scope: !12992, inlinedAt: !12778)
!12995 = !DILocation(line: 386, column: 1, scope: !12774, inlinedAt: !12778)
!12996 = !DILocation(line: 547, column: 9, scope: !12755, inlinedAt: !12760)
!12997 = !DILocation(line: 549, column: 8, scope: !12998, inlinedAt: !12760)
!12998 = distinct !DILexicalBlock(scope: !12755, file: !10234, line: 549, column: 7)
!12999 = !DILocation(line: 549, column: 7, scope: !12755, inlinedAt: !12760)
!13000 = !DILocation(line: 550, column: 4, scope: !12998, inlinedAt: !12760)
!13001 = !DILocation(line: 553, column: 33, scope: !12755, inlinedAt: !12760)
!13002 = !DILocation(line: 325, column: 6, scope: !13003, inlinedAt: !12772)
!13003 = distinct !DILexicalBlock(scope: !12768, file: !10234, line: 325, column: 6)
!13004 = !DILocation(line: 325, column: 6, scope: !12768, inlinedAt: !12772)
!13005 = !DILocation(line: 326, column: 3, scope: !13003, inlinedAt: !12772)
!13006 = !DILocation(line: 332, column: 9, scope: !12768, inlinedAt: !12772)
!13007 = !DILocation(line: 332, column: 15, scope: !12768, inlinedAt: !12772)
!13008 = !DILocation(line: 332, column: 2, scope: !12768, inlinedAt: !12772)
!13009 = !DILocation(line: 336, column: 1, scope: !12768, inlinedAt: !12772)
!13010 = !DILocation(line: 553, column: 5, scope: !12755, inlinedAt: !12760)
!13011 = !DILocation(line: 553, column: 41, scope: !12755, inlinedAt: !12760)
!13012 = !DILocation(line: 554, column: 5, scope: !12755, inlinedAt: !12760)
!13013 = !DILocation(line: 554, column: 12, scope: !12755, inlinedAt: !12760)
!13014 = !DILocation(line: 448, column: 31, scope: !12750, inlinedAt: !12754)
!13015 = !DILocation(line: 448, column: 34, scope: !12750, inlinedAt: !12754)
!13016 = !DILocation(line: 448, column: 14, scope: !12750, inlinedAt: !12754)
!13017 = !DILocation(line: 450, column: 22, scope: !12750, inlinedAt: !12754)
!13018 = !DILocation(line: 450, column: 25, scope: !12750, inlinedAt: !12754)
!13019 = !DILocation(line: 450, column: 30, scope: !12750, inlinedAt: !12754)
!13020 = !DILocation(line: 450, column: 36, scope: !12750, inlinedAt: !12754)
!13021 = !DILocation(line: 450, column: 8, scope: !12750, inlinedAt: !12754)
!13022 = !DILocation(line: 450, column: 6, scope: !12750, inlinedAt: !12754)
!13023 = !DILocation(line: 451, column: 9, scope: !12750, inlinedAt: !12754)
!13024 = !DILocation(line: 552, column: 3, scope: !12755, inlinedAt: !12760)
!13025 = !DILocation(line: 557, column: 19, scope: !12757, inlinedAt: !12760)
!13026 = !DILocation(line: 557, column: 25, scope: !12757, inlinedAt: !12760)
!13027 = !DILocation(line: 557, column: 9, scope: !12757, inlinedAt: !12760)
!13028 = !DILocation(line: 557, column: 2, scope: !12757, inlinedAt: !12760)
!13029 = !DILocation(line: 558, column: 1, scope: !12757, inlinedAt: !12760)
!13030 = !DILocation(line: 268, column: 10, scope: !12746)
!13031 = !DILocation(line: 269, column: 7, scope: !13032)
!13032 = distinct !DILexicalBlock(scope: !12746, file: !3, line: 269, column: 6)
!13033 = !DILocation(line: 269, column: 6, scope: !12746)
!13034 = !DILocation(line: 270, column: 3, scope: !13032)
!13035 = !DILocation(line: 271, column: 22, scope: !12746)
!13036 = !DILocation(line: 271, column: 31, scope: !12746)
!13037 = !DILocation(line: 271, column: 46, scope: !12746)
!13038 = !DILocation(line: 271, column: 2, scope: !12746)
!13039 = !DILocation(line: 272, column: 26, scope: !12746)
!13040 = !DILocation(line: 272, column: 35, scope: !12746)
!13041 = !DILocation(line: 272, column: 40, scope: !12746)
!13042 = !DILocation(line: 272, column: 2, scope: !12746)
!13043 = !DILocation(line: 274, column: 24, scope: !12746)
!13044 = !DILocation(line: 274, column: 34, scope: !12746)
!13045 = !DILocation(line: 274, column: 57, scope: !12746)
!13046 = !DILocation(line: 274, column: 8, scope: !12746)
!13047 = !DILocation(line: 274, column: 6, scope: !12746)
!13048 = !DILocation(line: 275, column: 8, scope: !12746)
!13049 = !DILocation(line: 275, column: 2, scope: !12746)
!13050 = !DILocation(line: 276, column: 9, scope: !12746)
!13051 = !DILocation(line: 276, column: 2, scope: !12746)
!13052 = !DILocation(line: 277, column: 1, scope: !12746)
!13053 = distinct !DISubprogram(name: "mlxsw_reg_spms_pack", scope: !10113, file: !10113, line: 803, type: !13054, scopeLine: 804, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13054 = !DISubroutineType(types: !13055)
!13055 = !{null, !733, !1552}
!13056 = !DILocalVariable(name: "payload", arg: 1, scope: !13053, file: !10113, line: 803, type: !733)
!13057 = !DILocation(line: 803, column: 46, scope: !13053)
!13058 = !DILocalVariable(name: "local_port", arg: 2, scope: !13053, file: !10113, line: 803, type: !1552)
!13059 = !DILocation(line: 803, column: 58, scope: !13053)
!13060 = !DILocation(line: 805, column: 2, scope: !13053)
!13061 = !DILocation(line: 806, column: 32, scope: !13053)
!13062 = !DILocation(line: 806, column: 41, scope: !13053)
!13063 = !DILocation(line: 806, column: 2, scope: !13053)
!13064 = !DILocation(line: 807, column: 1, scope: !13053)
!13065 = distinct !DISubprogram(name: "mlxsw_reg_spms_vid_pack", scope: !10113, file: !10113, line: 809, type: !13066, scopeLine: 811, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13066 = !DISubroutineType(types: !13067)
!13067 = !{null, !733, !1193, !10209}
!13068 = !DILocalVariable(name: "payload", arg: 1, scope: !13065, file: !10113, line: 809, type: !733)
!13069 = !DILocation(line: 809, column: 50, scope: !13065)
!13070 = !DILocalVariable(name: "vid", arg: 2, scope: !13065, file: !10113, line: 809, type: !1193)
!13071 = !DILocation(line: 809, column: 63, scope: !13065)
!13072 = !DILocalVariable(name: "state", arg: 3, scope: !13065, file: !10113, line: 810, type: !10209)
!13073 = !DILocation(line: 810, column: 35, scope: !13065)
!13074 = !DILocation(line: 812, column: 27, scope: !13065)
!13075 = !DILocation(line: 812, column: 36, scope: !13065)
!13076 = !DILocation(line: 812, column: 41, scope: !13065)
!13077 = !DILocation(line: 812, column: 2, scope: !13065)
!13078 = !DILocation(line: 813, column: 1, scope: !13065)
!13079 = distinct !DISubprogram(name: "mlxsw_sp_port_admin_status_set", scope: !3, file: !3, line: 291, type: !13080, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13080 = !DISubroutineType(types: !13081)
!13081 = !{!7, !10715, !696}
!13082 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !13079, file: !3, line: 291, type: !10715)
!13083 = !DILocation(line: 291, column: 58, scope: !13079)
!13084 = !DILocalVariable(name: "is_up", arg: 2, scope: !13079, file: !3, line: 292, type: !696)
!13085 = !DILocation(line: 292, column: 13, scope: !13079)
!13086 = !DILocalVariable(name: "mlxsw_sp", scope: !13079, file: !3, line: 294, type: !10721)
!13087 = !DILocation(line: 294, column: 19, scope: !13079)
!13088 = !DILocation(line: 294, column: 30, scope: !13079)
!13089 = !DILocation(line: 294, column: 45, scope: !13079)
!13090 = !DILocalVariable(name: "paos_pl", scope: !13079, file: !3, line: 295, type: !428)
!13091 = !DILocation(line: 295, column: 7, scope: !13079)
!13092 = !DILocation(line: 297, column: 22, scope: !13079)
!13093 = !DILocation(line: 297, column: 31, scope: !13079)
!13094 = !DILocation(line: 297, column: 46, scope: !13079)
!13095 = !DILocation(line: 298, column: 8, scope: !13079)
!13096 = !DILocation(line: 297, column: 2, scope: !13079)
!13097 = !DILocation(line: 300, column: 25, scope: !13079)
!13098 = !DILocation(line: 300, column: 35, scope: !13079)
!13099 = !DILocation(line: 300, column: 58, scope: !13079)
!13100 = !DILocation(line: 300, column: 9, scope: !13079)
!13101 = !DILocation(line: 300, column: 2, scope: !13079)
!13102 = distinct !DISubprogram(name: "mlxsw_reg_paos_pack", scope: !10113, file: !10113, line: 4492, type: !13103, scopeLine: 4494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13103 = !DISubroutineType(types: !13104)
!13104 = !{null, !733, !1552, !10215}
!13105 = !DILocalVariable(name: "payload", arg: 1, scope: !13102, file: !10113, line: 4492, type: !733)
!13106 = !DILocation(line: 4492, column: 46, scope: !13102)
!13107 = !DILocalVariable(name: "local_port", arg: 2, scope: !13102, file: !10113, line: 4492, type: !1552)
!13108 = !DILocation(line: 4492, column: 58, scope: !13102)
!13109 = !DILocalVariable(name: "status", arg: 3, scope: !13102, file: !10113, line: 4493, type: !10215)
!13110 = !DILocation(line: 4493, column: 41, scope: !13102)
!13111 = !DILocation(line: 4495, column: 2, scope: !13102)
!13112 = !DILocation(line: 4496, column: 26, scope: !13102)
!13113 = !DILocation(line: 4496, column: 2, scope: !13102)
!13114 = !DILocation(line: 4497, column: 32, scope: !13102)
!13115 = !DILocation(line: 4497, column: 41, scope: !13102)
!13116 = !DILocation(line: 4497, column: 2, scope: !13102)
!13117 = !DILocation(line: 4498, column: 34, scope: !13102)
!13118 = !DILocation(line: 4498, column: 43, scope: !13102)
!13119 = !DILocation(line: 4498, column: 2, scope: !13102)
!13120 = !DILocation(line: 4499, column: 33, scope: !13102)
!13121 = !DILocation(line: 4499, column: 2, scope: !13102)
!13122 = !DILocation(line: 4500, column: 25, scope: !13102)
!13123 = !DILocation(line: 4500, column: 2, scope: !13102)
!13124 = !DILocation(line: 4501, column: 24, scope: !13102)
!13125 = !DILocation(line: 4501, column: 2, scope: !13102)
!13126 = !DILocation(line: 4502, column: 23, scope: !13102)
!13127 = !DILocation(line: 4502, column: 2, scope: !13102)
!13128 = !DILocation(line: 4503, column: 1, scope: !13102)
!13129 = distinct !DISubprogram(name: "mlxsw_sp_port_vp_mode_set", scope: !3, file: !3, line: 361, type: !13080, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13130 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !13129, file: !3, line: 361, type: !10715)
!13131 = !DILocation(line: 361, column: 53, scope: !13129)
!13132 = !DILocalVariable(name: "enable", arg: 2, scope: !13129, file: !3, line: 361, type: !696)
!13133 = !DILocation(line: 361, column: 73, scope: !13129)
!13134 = !DILocalVariable(name: "mlxsw_sp", scope: !13129, file: !3, line: 363, type: !10721)
!13135 = !DILocation(line: 363, column: 19, scope: !13129)
!13136 = !DILocation(line: 363, column: 30, scope: !13129)
!13137 = !DILocation(line: 363, column: 45, scope: !13129)
!13138 = !DILocalVariable(name: "svpe_pl", scope: !13129, file: !3, line: 364, type: !13139)
!13139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 32, elements: !1357)
!13140 = !DILocation(line: 364, column: 7, scope: !13129)
!13141 = !DILocation(line: 366, column: 22, scope: !13129)
!13142 = !DILocation(line: 366, column: 31, scope: !13129)
!13143 = !DILocation(line: 366, column: 46, scope: !13129)
!13144 = !DILocation(line: 366, column: 58, scope: !13129)
!13145 = !DILocation(line: 366, column: 2, scope: !13129)
!13146 = !DILocation(line: 367, column: 25, scope: !13129)
!13147 = !DILocation(line: 367, column: 35, scope: !13129)
!13148 = !DILocation(line: 367, column: 58, scope: !13129)
!13149 = !DILocation(line: 367, column: 9, scope: !13129)
!13150 = !DILocation(line: 367, column: 2, scope: !13129)
!13151 = distinct !DISubprogram(name: "mlxsw_reg_svpe_pack", scope: !10113, file: !10113, line: 1708, type: !13152, scopeLine: 1710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13152 = !DISubroutineType(types: !13153)
!13153 = !{null, !733, !1552, !696}
!13154 = !DILocalVariable(name: "payload", arg: 1, scope: !13151, file: !10113, line: 1708, type: !733)
!13155 = !DILocation(line: 1708, column: 46, scope: !13151)
!13156 = !DILocalVariable(name: "local_port", arg: 2, scope: !13151, file: !10113, line: 1708, type: !1552)
!13157 = !DILocation(line: 1708, column: 58, scope: !13151)
!13158 = !DILocalVariable(name: "enable", arg: 3, scope: !13151, file: !10113, line: 1709, type: !696)
!13159 = !DILocation(line: 1709, column: 17, scope: !13151)
!13160 = !DILocation(line: 1711, column: 2, scope: !13151)
!13161 = !DILocation(line: 1712, column: 32, scope: !13151)
!13162 = !DILocation(line: 1712, column: 41, scope: !13151)
!13163 = !DILocation(line: 1712, column: 2, scope: !13151)
!13164 = !DILocation(line: 1713, column: 27, scope: !13151)
!13165 = !DILocation(line: 1713, column: 36, scope: !13151)
!13166 = !DILocation(line: 1713, column: 2, scope: !13151)
!13167 = !DILocation(line: 1714, column: 1, scope: !13151)
!13168 = distinct !DISubprogram(name: "mlxsw_sp_port_vid_learning_set", scope: !3, file: !3, line: 370, type: !13169, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13169 = !DISubroutineType(types: !13170)
!13170 = !{!7, !10715, !1193, !696}
!13171 = !DILocation(line: 445, column: 72, scope: !12750, inlinedAt: !13172)
!13172 = distinct !DILocation(line: 552, column: 10, scope: !12755, inlinedAt: !13173)
!13173 = distinct !DILocation(line: 377, column: 14, scope: !13168)
!13174 = !DILocation(line: 446, column: 9, scope: !12750, inlinedAt: !13172)
!13175 = !DILocation(line: 446, column: 23, scope: !12750, inlinedAt: !13172)
!13176 = !DILocation(line: 448, column: 8, scope: !12750, inlinedAt: !13172)
!13177 = !DILocation(line: 318, column: 67, scope: !12768, inlinedAt: !13178)
!13178 = distinct !DILocation(line: 553, column: 20, scope: !12755, inlinedAt: !13173)
!13179 = !DILocation(line: 346, column: 58, scope: !12774, inlinedAt: !13180)
!13180 = distinct !DILocation(line: 547, column: 11, scope: !12755, inlinedAt: !13173)
!13181 = !DILocation(line: 472, column: 28, scope: !12780, inlinedAt: !13182)
!13182 = distinct !DILocation(line: 481, column: 9, scope: !12785, inlinedAt: !13183)
!13183 = distinct !DILocation(line: 545, column: 11, scope: !12787, inlinedAt: !13173)
!13184 = !DILocation(line: 472, column: 40, scope: !12780, inlinedAt: !13182)
!13185 = !DILocation(line: 472, column: 60, scope: !12780, inlinedAt: !13182)
!13186 = !DILocation(line: 478, column: 51, scope: !12785, inlinedAt: !13183)
!13187 = !DILocation(line: 478, column: 63, scope: !12785, inlinedAt: !13183)
!13188 = !DILocation(line: 480, column: 15, scope: !12785, inlinedAt: !13183)
!13189 = !DILocation(line: 538, column: 45, scope: !12757, inlinedAt: !13173)
!13190 = !DILocation(line: 538, column: 57, scope: !12757, inlinedAt: !13173)
!13191 = !DILocation(line: 542, column: 16, scope: !12755, inlinedAt: !13173)
!13192 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !13168, file: !3, line: 370, type: !10715)
!13193 = !DILocation(line: 370, column: 58, scope: !13168)
!13194 = !DILocalVariable(name: "vid", arg: 2, scope: !13168, file: !3, line: 370, type: !1193)
!13195 = !DILocation(line: 370, column: 77, scope: !13168)
!13196 = !DILocalVariable(name: "learn_enable", arg: 3, scope: !13168, file: !3, line: 371, type: !696)
!13197 = !DILocation(line: 371, column: 13, scope: !13168)
!13198 = !DILocalVariable(name: "mlxsw_sp", scope: !13168, file: !3, line: 373, type: !10721)
!13199 = !DILocation(line: 373, column: 19, scope: !13168)
!13200 = !DILocation(line: 373, column: 30, scope: !13168)
!13201 = !DILocation(line: 373, column: 45, scope: !13168)
!13202 = !DILocalVariable(name: "spvmlr_pl", scope: !13168, file: !3, line: 374, type: !733)
!13203 = !DILocation(line: 374, column: 8, scope: !13168)
!13204 = !DILocalVariable(name: "err", scope: !13168, file: !3, line: 375, type: !7)
!13205 = !DILocation(line: 375, column: 6, scope: !13168)
!13206 = !DILocation(line: 540, column: 27, scope: !12756, inlinedAt: !13173)
!13207 = !DILocation(line: 540, column: 6, scope: !12756, inlinedAt: !13173)
!13208 = !DILocation(line: 540, column: 6, scope: !12757, inlinedAt: !13173)
!13209 = !DILocation(line: 544, column: 7, scope: !12787, inlinedAt: !13173)
!13210 = !DILocation(line: 544, column: 12, scope: !12787, inlinedAt: !13173)
!13211 = !DILocation(line: 544, column: 7, scope: !12755, inlinedAt: !13173)
!13212 = !DILocation(line: 545, column: 25, scope: !12787, inlinedAt: !13173)
!13213 = !DILocation(line: 545, column: 31, scope: !12787, inlinedAt: !13173)
!13214 = !DILocation(line: 480, column: 33, scope: !12785, inlinedAt: !13183)
!13215 = !DILocation(line: 480, column: 23, scope: !12785, inlinedAt: !13183)
!13216 = !DILocation(line: 481, column: 29, scope: !12785, inlinedAt: !13183)
!13217 = !DILocation(line: 481, column: 35, scope: !12785, inlinedAt: !13183)
!13218 = !DILocation(line: 481, column: 42, scope: !12785, inlinedAt: !13183)
!13219 = !DILocation(line: 474, column: 23, scope: !12780, inlinedAt: !13182)
!13220 = !DILocation(line: 474, column: 29, scope: !12780, inlinedAt: !13182)
!13221 = !DILocation(line: 474, column: 36, scope: !12780, inlinedAt: !13182)
!13222 = !DILocation(line: 474, column: 9, scope: !12780, inlinedAt: !13182)
!13223 = !DILocation(line: 545, column: 4, scope: !12787, inlinedAt: !13173)
!13224 = !DILocation(line: 547, column: 25, scope: !12755, inlinedAt: !13173)
!13225 = !DILocation(line: 348, column: 7, scope: !12842, inlinedAt: !13180)
!13226 = !DILocation(line: 348, column: 6, scope: !12774, inlinedAt: !13180)
!13227 = !DILocation(line: 349, column: 3, scope: !12842, inlinedAt: !13180)
!13228 = !DILocation(line: 351, column: 6, scope: !12846, inlinedAt: !13180)
!13229 = !DILocation(line: 351, column: 11, scope: !12846, inlinedAt: !13180)
!13230 = !DILocation(line: 351, column: 6, scope: !12774, inlinedAt: !13180)
!13231 = !DILocation(line: 352, column: 3, scope: !12846, inlinedAt: !13180)
!13232 = !DILocation(line: 354, column: 32, scope: !12851, inlinedAt: !13180)
!13233 = !DILocation(line: 354, column: 37, scope: !12851, inlinedAt: !13180)
!13234 = !DILocation(line: 354, column: 42, scope: !12851, inlinedAt: !13180)
!13235 = !DILocation(line: 354, column: 45, scope: !12851, inlinedAt: !13180)
!13236 = !DILocation(line: 354, column: 50, scope: !12851, inlinedAt: !13180)
!13237 = !DILocation(line: 354, column: 6, scope: !12774, inlinedAt: !13180)
!13238 = !DILocation(line: 355, column: 3, scope: !12851, inlinedAt: !13180)
!13239 = !DILocation(line: 356, column: 32, scope: !12859, inlinedAt: !13180)
!13240 = !DILocation(line: 356, column: 37, scope: !12859, inlinedAt: !13180)
!13241 = !DILocation(line: 356, column: 43, scope: !12859, inlinedAt: !13180)
!13242 = !DILocation(line: 356, column: 46, scope: !12859, inlinedAt: !13180)
!13243 = !DILocation(line: 356, column: 51, scope: !12859, inlinedAt: !13180)
!13244 = !DILocation(line: 356, column: 6, scope: !12774, inlinedAt: !13180)
!13245 = !DILocation(line: 357, column: 3, scope: !12859, inlinedAt: !13180)
!13246 = !DILocation(line: 358, column: 6, scope: !12867, inlinedAt: !13180)
!13247 = !DILocation(line: 358, column: 11, scope: !12867, inlinedAt: !13180)
!13248 = !DILocation(line: 358, column: 6, scope: !12774, inlinedAt: !13180)
!13249 = !DILocation(line: 358, column: 26, scope: !12867, inlinedAt: !13180)
!13250 = !DILocation(line: 359, column: 6, scope: !12872, inlinedAt: !13180)
!13251 = !DILocation(line: 359, column: 11, scope: !12872, inlinedAt: !13180)
!13252 = !DILocation(line: 359, column: 6, scope: !12774, inlinedAt: !13180)
!13253 = !DILocation(line: 359, column: 26, scope: !12872, inlinedAt: !13180)
!13254 = !DILocation(line: 360, column: 6, scope: !12877, inlinedAt: !13180)
!13255 = !DILocation(line: 360, column: 11, scope: !12877, inlinedAt: !13180)
!13256 = !DILocation(line: 360, column: 6, scope: !12774, inlinedAt: !13180)
!13257 = !DILocation(line: 360, column: 26, scope: !12877, inlinedAt: !13180)
!13258 = !DILocation(line: 361, column: 6, scope: !12882, inlinedAt: !13180)
!13259 = !DILocation(line: 361, column: 11, scope: !12882, inlinedAt: !13180)
!13260 = !DILocation(line: 361, column: 6, scope: !12774, inlinedAt: !13180)
!13261 = !DILocation(line: 361, column: 26, scope: !12882, inlinedAt: !13180)
!13262 = !DILocation(line: 362, column: 6, scope: !12887, inlinedAt: !13180)
!13263 = !DILocation(line: 362, column: 11, scope: !12887, inlinedAt: !13180)
!13264 = !DILocation(line: 362, column: 6, scope: !12774, inlinedAt: !13180)
!13265 = !DILocation(line: 362, column: 26, scope: !12887, inlinedAt: !13180)
!13266 = !DILocation(line: 363, column: 6, scope: !12892, inlinedAt: !13180)
!13267 = !DILocation(line: 363, column: 11, scope: !12892, inlinedAt: !13180)
!13268 = !DILocation(line: 363, column: 6, scope: !12774, inlinedAt: !13180)
!13269 = !DILocation(line: 363, column: 26, scope: !12892, inlinedAt: !13180)
!13270 = !DILocation(line: 364, column: 6, scope: !12897, inlinedAt: !13180)
!13271 = !DILocation(line: 364, column: 11, scope: !12897, inlinedAt: !13180)
!13272 = !DILocation(line: 364, column: 6, scope: !12774, inlinedAt: !13180)
!13273 = !DILocation(line: 364, column: 26, scope: !12897, inlinedAt: !13180)
!13274 = !DILocation(line: 365, column: 6, scope: !12902, inlinedAt: !13180)
!13275 = !DILocation(line: 365, column: 11, scope: !12902, inlinedAt: !13180)
!13276 = !DILocation(line: 365, column: 6, scope: !12774, inlinedAt: !13180)
!13277 = !DILocation(line: 365, column: 26, scope: !12902, inlinedAt: !13180)
!13278 = !DILocation(line: 366, column: 6, scope: !12907, inlinedAt: !13180)
!13279 = !DILocation(line: 366, column: 11, scope: !12907, inlinedAt: !13180)
!13280 = !DILocation(line: 366, column: 6, scope: !12774, inlinedAt: !13180)
!13281 = !DILocation(line: 366, column: 26, scope: !12907, inlinedAt: !13180)
!13282 = !DILocation(line: 367, column: 6, scope: !12912, inlinedAt: !13180)
!13283 = !DILocation(line: 367, column: 11, scope: !12912, inlinedAt: !13180)
!13284 = !DILocation(line: 367, column: 6, scope: !12774, inlinedAt: !13180)
!13285 = !DILocation(line: 367, column: 26, scope: !12912, inlinedAt: !13180)
!13286 = !DILocation(line: 368, column: 6, scope: !12917, inlinedAt: !13180)
!13287 = !DILocation(line: 368, column: 11, scope: !12917, inlinedAt: !13180)
!13288 = !DILocation(line: 368, column: 6, scope: !12774, inlinedAt: !13180)
!13289 = !DILocation(line: 368, column: 26, scope: !12917, inlinedAt: !13180)
!13290 = !DILocation(line: 369, column: 6, scope: !12922, inlinedAt: !13180)
!13291 = !DILocation(line: 369, column: 11, scope: !12922, inlinedAt: !13180)
!13292 = !DILocation(line: 369, column: 6, scope: !12774, inlinedAt: !13180)
!13293 = !DILocation(line: 369, column: 26, scope: !12922, inlinedAt: !13180)
!13294 = !DILocation(line: 370, column: 6, scope: !12927, inlinedAt: !13180)
!13295 = !DILocation(line: 370, column: 11, scope: !12927, inlinedAt: !13180)
!13296 = !DILocation(line: 370, column: 6, scope: !12774, inlinedAt: !13180)
!13297 = !DILocation(line: 370, column: 26, scope: !12927, inlinedAt: !13180)
!13298 = !DILocation(line: 371, column: 6, scope: !12932, inlinedAt: !13180)
!13299 = !DILocation(line: 371, column: 11, scope: !12932, inlinedAt: !13180)
!13300 = !DILocation(line: 371, column: 6, scope: !12774, inlinedAt: !13180)
!13301 = !DILocation(line: 371, column: 26, scope: !12932, inlinedAt: !13180)
!13302 = !DILocation(line: 372, column: 6, scope: !12937, inlinedAt: !13180)
!13303 = !DILocation(line: 372, column: 11, scope: !12937, inlinedAt: !13180)
!13304 = !DILocation(line: 372, column: 6, scope: !12774, inlinedAt: !13180)
!13305 = !DILocation(line: 372, column: 26, scope: !12937, inlinedAt: !13180)
!13306 = !DILocation(line: 373, column: 6, scope: !12942, inlinedAt: !13180)
!13307 = !DILocation(line: 373, column: 11, scope: !12942, inlinedAt: !13180)
!13308 = !DILocation(line: 373, column: 6, scope: !12774, inlinedAt: !13180)
!13309 = !DILocation(line: 373, column: 26, scope: !12942, inlinedAt: !13180)
!13310 = !DILocation(line: 374, column: 6, scope: !12947, inlinedAt: !13180)
!13311 = !DILocation(line: 374, column: 11, scope: !12947, inlinedAt: !13180)
!13312 = !DILocation(line: 374, column: 6, scope: !12774, inlinedAt: !13180)
!13313 = !DILocation(line: 374, column: 26, scope: !12947, inlinedAt: !13180)
!13314 = !DILocation(line: 375, column: 6, scope: !12952, inlinedAt: !13180)
!13315 = !DILocation(line: 375, column: 11, scope: !12952, inlinedAt: !13180)
!13316 = !DILocation(line: 375, column: 6, scope: !12774, inlinedAt: !13180)
!13317 = !DILocation(line: 375, column: 27, scope: !12952, inlinedAt: !13180)
!13318 = !DILocation(line: 376, column: 6, scope: !12957, inlinedAt: !13180)
!13319 = !DILocation(line: 376, column: 11, scope: !12957, inlinedAt: !13180)
!13320 = !DILocation(line: 376, column: 6, scope: !12774, inlinedAt: !13180)
!13321 = !DILocation(line: 376, column: 32, scope: !12957, inlinedAt: !13180)
!13322 = !DILocation(line: 377, column: 6, scope: !12962, inlinedAt: !13180)
!13323 = !DILocation(line: 377, column: 11, scope: !12962, inlinedAt: !13180)
!13324 = !DILocation(line: 377, column: 6, scope: !12774, inlinedAt: !13180)
!13325 = !DILocation(line: 377, column: 32, scope: !12962, inlinedAt: !13180)
!13326 = !DILocation(line: 378, column: 6, scope: !12967, inlinedAt: !13180)
!13327 = !DILocation(line: 378, column: 11, scope: !12967, inlinedAt: !13180)
!13328 = !DILocation(line: 378, column: 6, scope: !12774, inlinedAt: !13180)
!13329 = !DILocation(line: 378, column: 32, scope: !12967, inlinedAt: !13180)
!13330 = !DILocation(line: 379, column: 6, scope: !12972, inlinedAt: !13180)
!13331 = !DILocation(line: 379, column: 11, scope: !12972, inlinedAt: !13180)
!13332 = !DILocation(line: 379, column: 6, scope: !12774, inlinedAt: !13180)
!13333 = !DILocation(line: 379, column: 33, scope: !12972, inlinedAt: !13180)
!13334 = !DILocation(line: 380, column: 6, scope: !12977, inlinedAt: !13180)
!13335 = !DILocation(line: 380, column: 11, scope: !12977, inlinedAt: !13180)
!13336 = !DILocation(line: 380, column: 6, scope: !12774, inlinedAt: !13180)
!13337 = !DILocation(line: 380, column: 33, scope: !12977, inlinedAt: !13180)
!13338 = !DILocation(line: 381, column: 6, scope: !12982, inlinedAt: !13180)
!13339 = !DILocation(line: 381, column: 11, scope: !12982, inlinedAt: !13180)
!13340 = !DILocation(line: 381, column: 6, scope: !12774, inlinedAt: !13180)
!13341 = !DILocation(line: 381, column: 33, scope: !12982, inlinedAt: !13180)
!13342 = !DILocation(line: 382, column: 2, scope: !12987, inlinedAt: !13180)
!13343 = !DILocation(line: 382, column: 2, scope: !12991, inlinedAt: !13180)
!13344 = !DILocation(line: 382, column: 2, scope: !12992, inlinedAt: !13180)
!13345 = !DILocation(line: 386, column: 1, scope: !12774, inlinedAt: !13180)
!13346 = !DILocation(line: 547, column: 9, scope: !12755, inlinedAt: !13173)
!13347 = !DILocation(line: 549, column: 8, scope: !12998, inlinedAt: !13173)
!13348 = !DILocation(line: 549, column: 7, scope: !12755, inlinedAt: !13173)
!13349 = !DILocation(line: 550, column: 4, scope: !12998, inlinedAt: !13173)
!13350 = !DILocation(line: 553, column: 33, scope: !12755, inlinedAt: !13173)
!13351 = !DILocation(line: 325, column: 6, scope: !13003, inlinedAt: !13178)
!13352 = !DILocation(line: 325, column: 6, scope: !12768, inlinedAt: !13178)
!13353 = !DILocation(line: 326, column: 3, scope: !13003, inlinedAt: !13178)
!13354 = !DILocation(line: 332, column: 9, scope: !12768, inlinedAt: !13178)
!13355 = !DILocation(line: 332, column: 15, scope: !12768, inlinedAt: !13178)
!13356 = !DILocation(line: 332, column: 2, scope: !12768, inlinedAt: !13178)
!13357 = !DILocation(line: 336, column: 1, scope: !12768, inlinedAt: !13178)
!13358 = !DILocation(line: 553, column: 5, scope: !12755, inlinedAt: !13173)
!13359 = !DILocation(line: 553, column: 41, scope: !12755, inlinedAt: !13173)
!13360 = !DILocation(line: 554, column: 5, scope: !12755, inlinedAt: !13173)
!13361 = !DILocation(line: 554, column: 12, scope: !12755, inlinedAt: !13173)
!13362 = !DILocation(line: 448, column: 31, scope: !12750, inlinedAt: !13172)
!13363 = !DILocation(line: 448, column: 34, scope: !12750, inlinedAt: !13172)
!13364 = !DILocation(line: 448, column: 14, scope: !12750, inlinedAt: !13172)
!13365 = !DILocation(line: 450, column: 22, scope: !12750, inlinedAt: !13172)
!13366 = !DILocation(line: 450, column: 25, scope: !12750, inlinedAt: !13172)
!13367 = !DILocation(line: 450, column: 30, scope: !12750, inlinedAt: !13172)
!13368 = !DILocation(line: 450, column: 36, scope: !12750, inlinedAt: !13172)
!13369 = !DILocation(line: 450, column: 8, scope: !12750, inlinedAt: !13172)
!13370 = !DILocation(line: 450, column: 6, scope: !12750, inlinedAt: !13172)
!13371 = !DILocation(line: 451, column: 9, scope: !12750, inlinedAt: !13172)
!13372 = !DILocation(line: 552, column: 3, scope: !12755, inlinedAt: !13173)
!13373 = !DILocation(line: 557, column: 19, scope: !12757, inlinedAt: !13173)
!13374 = !DILocation(line: 557, column: 25, scope: !12757, inlinedAt: !13173)
!13375 = !DILocation(line: 557, column: 9, scope: !12757, inlinedAt: !13173)
!13376 = !DILocation(line: 557, column: 2, scope: !12757, inlinedAt: !13173)
!13377 = !DILocation(line: 558, column: 1, scope: !12757, inlinedAt: !13173)
!13378 = !DILocation(line: 377, column: 12, scope: !13168)
!13379 = !DILocation(line: 378, column: 7, scope: !13380)
!13380 = distinct !DILexicalBlock(scope: !13168, file: !3, line: 378, column: 6)
!13381 = !DILocation(line: 378, column: 6, scope: !13168)
!13382 = !DILocation(line: 379, column: 3, scope: !13380)
!13383 = !DILocation(line: 380, column: 24, scope: !13168)
!13384 = !DILocation(line: 380, column: 35, scope: !13168)
!13385 = !DILocation(line: 380, column: 50, scope: !13168)
!13386 = !DILocation(line: 380, column: 62, scope: !13168)
!13387 = !DILocation(line: 380, column: 67, scope: !13168)
!13388 = !DILocation(line: 381, column: 10, scope: !13168)
!13389 = !DILocation(line: 380, column: 2, scope: !13168)
!13390 = !DILocation(line: 382, column: 24, scope: !13168)
!13391 = !DILocation(line: 382, column: 34, scope: !13168)
!13392 = !DILocation(line: 382, column: 59, scope: !13168)
!13393 = !DILocation(line: 382, column: 8, scope: !13168)
!13394 = !DILocation(line: 382, column: 6, scope: !13168)
!13395 = !DILocation(line: 383, column: 8, scope: !13168)
!13396 = !DILocation(line: 383, column: 2, scope: !13168)
!13397 = !DILocation(line: 384, column: 9, scope: !13168)
!13398 = !DILocation(line: 384, column: 2, scope: !13168)
!13399 = !DILocation(line: 385, column: 1, scope: !13168)
!13400 = distinct !DISubprogram(name: "mlxsw_reg_spvmlr_pack", scope: !10113, file: !10113, line: 1841, type: !13401, scopeLine: 1844, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13401 = !DISubroutineType(types: !13402)
!13402 = !{null, !733, !1552, !1193, !1193, !696}
!13403 = !DILocalVariable(name: "payload", arg: 1, scope: !13400, file: !10113, line: 1841, type: !733)
!13404 = !DILocation(line: 1841, column: 48, scope: !13400)
!13405 = !DILocalVariable(name: "local_port", arg: 2, scope: !13400, file: !10113, line: 1841, type: !1552)
!13406 = !DILocation(line: 1841, column: 60, scope: !13400)
!13407 = !DILocalVariable(name: "vid_begin", arg: 3, scope: !13400, file: !10113, line: 1842, type: !1193)
!13408 = !DILocation(line: 1842, column: 11, scope: !13400)
!13409 = !DILocalVariable(name: "vid_end", arg: 4, scope: !13400, file: !10113, line: 1842, type: !1193)
!13410 = !DILocation(line: 1842, column: 26, scope: !13400)
!13411 = !DILocalVariable(name: "learn_enable", arg: 5, scope: !13400, file: !10113, line: 1843, type: !696)
!13412 = !DILocation(line: 1843, column: 12, scope: !13400)
!13413 = !DILocalVariable(name: "num_rec", scope: !13400, file: !10113, line: 1845, type: !7)
!13414 = !DILocation(line: 1845, column: 6, scope: !13400)
!13415 = !DILocation(line: 1845, column: 16, scope: !13400)
!13416 = !DILocation(line: 1845, column: 26, scope: !13400)
!13417 = !DILocation(line: 1845, column: 24, scope: !13400)
!13418 = !DILocation(line: 1845, column: 36, scope: !13400)
!13419 = !DILocalVariable(name: "i", scope: !13400, file: !10113, line: 1846, type: !7)
!13420 = !DILocation(line: 1846, column: 6, scope: !13400)
!13421 = !DILocalVariable(name: "__ret_warn_on", scope: !13422, file: !10113, line: 1848, type: !7)
!13422 = distinct !DILexicalBlock(scope: !13400, file: !10113, line: 1848, column: 2)
!13423 = !DILocation(line: 1848, column: 2, scope: !13422)
!13424 = !DILocation(line: 1848, column: 2, scope: !13425)
!13425 = distinct !DILexicalBlock(scope: !13422, file: !10113, line: 1848, column: 2)
!13426 = !DILocation(line: 1848, column: 2, scope: !13427)
!13427 = distinct !DILexicalBlock(scope: !13425, file: !10113, line: 1848, column: 2)
!13428 = !DILocation(line: 1848, column: 2, scope: !13429)
!13429 = distinct !DILexicalBlock(scope: !13427, file: !10113, line: 1848, column: 2)
!13430 = !DILocation(line: 1848, column: 2, scope: !13431)
!13431 = distinct !DILexicalBlock(scope: !13427, file: !10113, line: 1848, column: 2)
!13432 = !{i32 -2136418491, i32 -2136418462, i32 -2136418416, i32 -2136418358, i32 -2136418304, i32 -2136418250, i32 -2136418195, i32 -2136418164}
!13433 = !DILocation(line: 1848, column: 2, scope: !13434)
!13434 = distinct !DILexicalBlock(scope: !13427, file: !10113, line: 1848, column: 2)
!13435 = !{i32 -2136417740, i32 -2136417733, i32 -2136417681, i32 -2136417650, i32 -2136417620}
!13436 = !DILocation(line: 1848, column: 2, scope: !13437)
!13437 = distinct !DILexicalBlock(scope: !13427, file: !10113, line: 1848, column: 2)
!13438 = !DILocation(line: 1850, column: 2, scope: !13400)
!13439 = !DILocation(line: 1851, column: 34, scope: !13400)
!13440 = !DILocation(line: 1851, column: 43, scope: !13400)
!13441 = !DILocation(line: 1851, column: 2, scope: !13400)
!13442 = !DILocation(line: 1852, column: 31, scope: !13400)
!13443 = !DILocation(line: 1852, column: 40, scope: !13400)
!13444 = !DILocation(line: 1852, column: 2, scope: !13400)
!13445 = !DILocation(line: 1854, column: 9, scope: !13446)
!13446 = distinct !DILexicalBlock(scope: !13400, file: !10113, line: 1854, column: 2)
!13447 = !DILocation(line: 1854, column: 7, scope: !13446)
!13448 = !DILocation(line: 1854, column: 14, scope: !13449)
!13449 = distinct !DILexicalBlock(scope: !13446, file: !10113, line: 1854, column: 2)
!13450 = !DILocation(line: 1854, column: 18, scope: !13449)
!13451 = !DILocation(line: 1854, column: 16, scope: !13449)
!13452 = !DILocation(line: 1854, column: 2, scope: !13446)
!13453 = !DILocation(line: 1855, column: 41, scope: !13454)
!13454 = distinct !DILexicalBlock(scope: !13449, file: !10113, line: 1854, column: 32)
!13455 = !DILocation(line: 1855, column: 50, scope: !13454)
!13456 = !DILocation(line: 1855, column: 53, scope: !13454)
!13457 = !DILocation(line: 1855, column: 3, scope: !13454)
!13458 = !DILocation(line: 1856, column: 32, scope: !13454)
!13459 = !DILocation(line: 1856, column: 41, scope: !13454)
!13460 = !DILocation(line: 1856, column: 44, scope: !13454)
!13461 = !DILocation(line: 1856, column: 56, scope: !13454)
!13462 = !DILocation(line: 1856, column: 54, scope: !13454)
!13463 = !DILocation(line: 1856, column: 3, scope: !13454)
!13464 = !DILocation(line: 1857, column: 2, scope: !13454)
!13465 = !DILocation(line: 1854, column: 28, scope: !13449)
!13466 = !DILocation(line: 1854, column: 2, scope: !13449)
!13467 = distinct !{!13467, !13452, !13468}
!13468 = !DILocation(line: 1857, column: 2, scope: !13446)
!13469 = !DILocation(line: 1858, column: 1, scope: !13400)
!13470 = distinct !DISubprogram(name: "mlxsw_sp_port_pvid_set", scope: !3, file: !3, line: 407, type: !13471, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13471 = !DISubroutineType(types: !13472)
!13472 = !{!7, !10715, !1193}
!13473 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !13470, file: !3, line: 407, type: !10715)
!13474 = !DILocation(line: 407, column: 50, scope: !13470)
!13475 = !DILocalVariable(name: "vid", arg: 2, scope: !13470, file: !3, line: 407, type: !1193)
!13476 = !DILocation(line: 407, column: 69, scope: !13470)
!13477 = !DILocalVariable(name: "err", scope: !13470, file: !3, line: 409, type: !7)
!13478 = !DILocation(line: 409, column: 6, scope: !13470)
!13479 = !DILocation(line: 411, column: 7, scope: !13480)
!13480 = distinct !DILexicalBlock(scope: !13470, file: !3, line: 411, column: 6)
!13481 = !DILocation(line: 411, column: 6, scope: !13470)
!13482 = !DILocation(line: 412, column: 42, scope: !13483)
!13483 = distinct !DILexicalBlock(scope: !13480, file: !3, line: 411, column: 12)
!13484 = !DILocation(line: 412, column: 9, scope: !13483)
!13485 = !DILocation(line: 412, column: 7, scope: !13483)
!13486 = !DILocation(line: 413, column: 7, scope: !13487)
!13487 = distinct !DILexicalBlock(scope: !13483, file: !3, line: 413, column: 7)
!13488 = !DILocation(line: 413, column: 7, scope: !13483)
!13489 = !DILocation(line: 414, column: 11, scope: !13487)
!13490 = !DILocation(line: 414, column: 4, scope: !13487)
!13491 = !DILocation(line: 415, column: 2, scope: !13483)
!13492 = !DILocation(line: 416, column: 34, scope: !13493)
!13493 = distinct !DILexicalBlock(scope: !13480, file: !3, line: 415, column: 9)
!13494 = !DILocation(line: 416, column: 49, scope: !13493)
!13495 = !DILocation(line: 416, column: 9, scope: !13493)
!13496 = !DILocation(line: 416, column: 7, scope: !13493)
!13497 = !DILocation(line: 417, column: 7, scope: !13498)
!13498 = distinct !DILexicalBlock(scope: !13493, file: !3, line: 417, column: 7)
!13499 = !DILocation(line: 417, column: 7, scope: !13493)
!13500 = !DILocation(line: 418, column: 11, scope: !13498)
!13501 = !DILocation(line: 418, column: 4, scope: !13498)
!13502 = !DILocation(line: 419, column: 42, scope: !13493)
!13503 = !DILocation(line: 419, column: 9, scope: !13493)
!13504 = !DILocation(line: 419, column: 7, scope: !13493)
!13505 = !DILocation(line: 420, column: 7, scope: !13506)
!13506 = distinct !DILexicalBlock(scope: !13493, file: !3, line: 420, column: 7)
!13507 = !DILocation(line: 420, column: 7, scope: !13493)
!13508 = !DILocation(line: 421, column: 4, scope: !13506)
!13509 = !DILocation(line: 424, column: 24, scope: !13470)
!13510 = !DILocation(line: 424, column: 2, scope: !13470)
!13511 = !DILocation(line: 424, column: 17, scope: !13470)
!13512 = !DILocation(line: 424, column: 22, scope: !13470)
!13513 = !DILocation(line: 425, column: 2, scope: !13470)
!13514 = !DILabel(scope: !13470, name: "err_port_allow_untagged_set", file: !3, line: 427)
!13515 = !DILocation(line: 427, column: 1, scope: !13470)
!13516 = !DILocation(line: 428, column: 27, scope: !13470)
!13517 = !DILocation(line: 428, column: 42, scope: !13470)
!13518 = !DILocation(line: 428, column: 57, scope: !13470)
!13519 = !DILocation(line: 428, column: 2, scope: !13470)
!13520 = !DILocation(line: 429, column: 9, scope: !13470)
!13521 = !DILocation(line: 429, column: 2, scope: !13470)
!13522 = !DILocation(line: 430, column: 1, scope: !13470)
!13523 = distinct !DISubprogram(name: "mlxsw_sp_port_allow_untagged_set", scope: !3, file: !3, line: 397, type: !13080, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13524 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !13523, file: !3, line: 397, type: !10715)
!13525 = !DILocation(line: 397, column: 67, scope: !13523)
!13526 = !DILocalVariable(name: "allow", arg: 2, scope: !13523, file: !3, line: 398, type: !696)
!13527 = !DILocation(line: 398, column: 15, scope: !13523)
!13528 = !DILocalVariable(name: "mlxsw_sp", scope: !13523, file: !3, line: 400, type: !10721)
!13529 = !DILocation(line: 400, column: 19, scope: !13523)
!13530 = !DILocation(line: 400, column: 30, scope: !13523)
!13531 = !DILocation(line: 400, column: 45, scope: !13523)
!13532 = !DILocalVariable(name: "spaft_pl", scope: !13523, file: !3, line: 401, type: !6009)
!13533 = !DILocation(line: 401, column: 7, scope: !13523)
!13534 = !DILocation(line: 403, column: 23, scope: !13523)
!13535 = !DILocation(line: 403, column: 33, scope: !13523)
!13536 = !DILocation(line: 403, column: 48, scope: !13523)
!13537 = !DILocation(line: 403, column: 60, scope: !13523)
!13538 = !DILocation(line: 403, column: 2, scope: !13523)
!13539 = !DILocation(line: 404, column: 25, scope: !13523)
!13540 = !DILocation(line: 404, column: 35, scope: !13523)
!13541 = !DILocation(line: 404, column: 59, scope: !13523)
!13542 = !DILocation(line: 404, column: 9, scope: !13523)
!13543 = !DILocation(line: 404, column: 2, scope: !13523)
!13544 = distinct !DISubprogram(name: "__mlxsw_sp_port_pvid_set", scope: !3, file: !3, line: 387, type: !13471, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13545 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !13544, file: !3, line: 387, type: !10715)
!13546 = !DILocation(line: 387, column: 59, scope: !13544)
!13547 = !DILocalVariable(name: "vid", arg: 2, scope: !13544, file: !3, line: 388, type: !1193)
!13548 = !DILocation(line: 388, column: 13, scope: !13544)
!13549 = !DILocalVariable(name: "mlxsw_sp", scope: !13544, file: !3, line: 390, type: !10721)
!13550 = !DILocation(line: 390, column: 19, scope: !13544)
!13551 = !DILocation(line: 390, column: 30, scope: !13544)
!13552 = !DILocation(line: 390, column: 45, scope: !13544)
!13553 = !DILocalVariable(name: "spvid_pl", scope: !13544, file: !3, line: 391, type: !6009)
!13554 = !DILocation(line: 391, column: 7, scope: !13544)
!13555 = !DILocation(line: 393, column: 23, scope: !13544)
!13556 = !DILocation(line: 393, column: 33, scope: !13544)
!13557 = !DILocation(line: 393, column: 48, scope: !13544)
!13558 = !DILocation(line: 393, column: 60, scope: !13544)
!13559 = !DILocation(line: 393, column: 2, scope: !13544)
!13560 = !DILocation(line: 394, column: 25, scope: !13544)
!13561 = !DILocation(line: 394, column: 35, scope: !13544)
!13562 = !DILocation(line: 394, column: 59, scope: !13544)
!13563 = !DILocation(line: 394, column: 9, scope: !13544)
!13564 = !DILocation(line: 394, column: 2, scope: !13544)
!13565 = distinct !DISubprogram(name: "mlxsw_sp_port_get_stats_raw", scope: !3, file: !3, line: 696, type: !13566, scopeLine: 698, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13566 = !DISubroutineType(types: !13567)
!13567 = !{!7, !451, !7, !7, !733}
!13568 = !DILocalVariable(name: "dev", arg: 1, scope: !13565, file: !3, line: 696, type: !451)
!13569 = !DILocation(line: 696, column: 52, scope: !13565)
!13570 = !DILocalVariable(name: "grp", arg: 2, scope: !13565, file: !3, line: 696, type: !7)
!13571 = !DILocation(line: 696, column: 61, scope: !13565)
!13572 = !DILocalVariable(name: "prio", arg: 3, scope: !13565, file: !3, line: 697, type: !7)
!13573 = !DILocation(line: 697, column: 9, scope: !13565)
!13574 = !DILocalVariable(name: "ppcnt_pl", arg: 4, scope: !13565, file: !3, line: 697, type: !733)
!13575 = !DILocation(line: 697, column: 21, scope: !13565)
!13576 = !DILocalVariable(name: "mlxsw_sp_port", scope: !13565, file: !3, line: 699, type: !10715)
!13577 = !DILocation(line: 699, column: 24, scope: !13565)
!13578 = !DILocation(line: 699, column: 52, scope: !13565)
!13579 = !DILocation(line: 699, column: 40, scope: !13565)
!13580 = !DILocalVariable(name: "mlxsw_sp", scope: !13565, file: !3, line: 700, type: !10721)
!13581 = !DILocation(line: 700, column: 19, scope: !13565)
!13582 = !DILocation(line: 700, column: 30, scope: !13565)
!13583 = !DILocation(line: 700, column: 45, scope: !13565)
!13584 = !DILocation(line: 702, column: 23, scope: !13565)
!13585 = !DILocation(line: 702, column: 33, scope: !13565)
!13586 = !DILocation(line: 702, column: 48, scope: !13565)
!13587 = !DILocation(line: 702, column: 60, scope: !13565)
!13588 = !DILocation(line: 702, column: 65, scope: !13565)
!13589 = !DILocation(line: 702, column: 2, scope: !13565)
!13590 = !DILocation(line: 703, column: 25, scope: !13565)
!13591 = !DILocation(line: 703, column: 35, scope: !13565)
!13592 = !DILocation(line: 703, column: 59, scope: !13565)
!13593 = !DILocation(line: 703, column: 9, scope: !13565)
!13594 = !DILocation(line: 703, column: 2, scope: !13565)
!13595 = distinct !DISubprogram(name: "netdev_priv", scope: !6, file: !6, line: 2322, type: !13596, scopeLine: 2323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13596 = !DISubroutineType(types: !13597)
!13597 = !{!726, !3023}
!13598 = !DILocalVariable(name: "dev", arg: 1, scope: !13595, file: !6, line: 2322, type: !3023)
!13599 = !DILocation(line: 2322, column: 58, scope: !13595)
!13600 = !DILocation(line: 2324, column: 17, scope: !13595)
!13601 = !DILocation(line: 2324, column: 9, scope: !13595)
!13602 = !DILocation(line: 2324, column: 21, scope: !13595)
!13603 = !DILocation(line: 2324, column: 2, scope: !13595)
!13604 = distinct !DISubprogram(name: "mlxsw_reg_ppcnt_pack", scope: !10113, file: !10113, line: 5134, type: !13605, scopeLine: 5137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13605 = !DISubroutineType(types: !13606)
!13606 = !{null, !733, !1552, !10240, !1552}
!13607 = !DILocalVariable(name: "payload", arg: 1, scope: !13604, file: !10113, line: 5134, type: !733)
!13608 = !DILocation(line: 5134, column: 47, scope: !13604)
!13609 = !DILocalVariable(name: "local_port", arg: 2, scope: !13604, file: !10113, line: 5134, type: !1552)
!13610 = !DILocation(line: 5134, column: 59, scope: !13604)
!13611 = !DILocalVariable(name: "grp", arg: 3, scope: !13604, file: !10113, line: 5135, type: !10240)
!13612 = !DILocation(line: 5135, column: 31, scope: !13604)
!13613 = !DILocalVariable(name: "prio_tc", arg: 4, scope: !13604, file: !10113, line: 5136, type: !1552)
!13614 = !DILocation(line: 5136, column: 9, scope: !13604)
!13615 = !DILocation(line: 5138, column: 2, scope: !13604)
!13616 = !DILocation(line: 5139, column: 27, scope: !13604)
!13617 = !DILocation(line: 5139, column: 2, scope: !13604)
!13618 = !DILocation(line: 5140, column: 33, scope: !13604)
!13619 = !DILocation(line: 5140, column: 42, scope: !13604)
!13620 = !DILocation(line: 5140, column: 2, scope: !13604)
!13621 = !DILocation(line: 5141, column: 27, scope: !13604)
!13622 = !DILocation(line: 5141, column: 2, scope: !13604)
!13623 = !DILocation(line: 5142, column: 26, scope: !13604)
!13624 = !DILocation(line: 5142, column: 35, scope: !13604)
!13625 = !DILocation(line: 5142, column: 2, scope: !13604)
!13626 = !DILocation(line: 5143, column: 26, scope: !13604)
!13627 = !DILocation(line: 5143, column: 2, scope: !13604)
!13628 = !DILocation(line: 5144, column: 30, scope: !13604)
!13629 = !DILocation(line: 5144, column: 39, scope: !13604)
!13630 = !DILocation(line: 5144, column: 2, scope: !13604)
!13631 = !DILocation(line: 5145, column: 1, scope: !13604)
!13632 = distinct !DISubprogram(name: "mlxsw_sp_port_vlan_set", scope: !3, file: !3, line: 840, type: !13633, scopeLine: 842, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13633 = !DISubroutineType(types: !13634)
!13634 = !{!7, !10715, !1193, !1193, !696, !696}
!13635 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !13632, file: !3, line: 840, type: !10715)
!13636 = !DILocation(line: 840, column: 50, scope: !13632)
!13637 = !DILocalVariable(name: "vid_begin", arg: 2, scope: !13632, file: !3, line: 840, type: !1193)
!13638 = !DILocation(line: 840, column: 69, scope: !13632)
!13639 = !DILocalVariable(name: "vid_end", arg: 3, scope: !13632, file: !3, line: 841, type: !1193)
!13640 = !DILocation(line: 841, column: 11, scope: !13632)
!13641 = !DILocalVariable(name: "is_member", arg: 4, scope: !13632, file: !3, line: 841, type: !696)
!13642 = !DILocation(line: 841, column: 25, scope: !13632)
!13643 = !DILocalVariable(name: "untagged", arg: 5, scope: !13632, file: !3, line: 841, type: !696)
!13644 = !DILocation(line: 841, column: 41, scope: !13632)
!13645 = !DILocalVariable(name: "vid", scope: !13632, file: !3, line: 843, type: !1193)
!13646 = !DILocation(line: 843, column: 6, scope: !13632)
!13647 = !DILocalVariable(name: "vid_e", scope: !13632, file: !3, line: 843, type: !1193)
!13648 = !DILocation(line: 843, column: 11, scope: !13632)
!13649 = !DILocalVariable(name: "err", scope: !13632, file: !3, line: 844, type: !7)
!13650 = !DILocation(line: 844, column: 6, scope: !13632)
!13651 = !DILocation(line: 846, column: 13, scope: !13652)
!13652 = distinct !DILexicalBlock(scope: !13632, file: !3, line: 846, column: 2)
!13653 = !DILocation(line: 846, column: 11, scope: !13652)
!13654 = !DILocation(line: 846, column: 7, scope: !13652)
!13655 = !DILocation(line: 846, column: 24, scope: !13656)
!13656 = distinct !DILexicalBlock(scope: !13652, file: !3, line: 846, column: 2)
!13657 = !DILocation(line: 846, column: 31, scope: !13656)
!13658 = !DILocation(line: 846, column: 28, scope: !13656)
!13659 = !DILocation(line: 846, column: 2, scope: !13652)
!13660 = !DILocalVariable(name: "__UNIQUE_ID___x656", scope: !13661, file: !3, line: 848, type: !1193)
!13661 = distinct !DILexicalBlock(scope: !13662, file: !3, line: 848, column: 11)
!13662 = distinct !DILexicalBlock(scope: !13656, file: !3, line: 847, column: 44)
!13663 = !DILocation(line: 848, column: 11, scope: !13661)
!13664 = !DILocalVariable(name: "__UNIQUE_ID___y657", scope: !13661, file: !3, line: 848, type: !1193)
!13665 = !DILocation(line: 848, column: 11, scope: !13662)
!13666 = !DILocation(line: 848, column: 9, scope: !13662)
!13667 = !DILocation(line: 851, column: 34, scope: !13662)
!13668 = !DILocation(line: 851, column: 49, scope: !13662)
!13669 = !DILocation(line: 851, column: 54, scope: !13662)
!13670 = !DILocation(line: 852, column: 13, scope: !13662)
!13671 = !DILocation(line: 852, column: 24, scope: !13662)
!13672 = !DILocation(line: 851, column: 9, scope: !13662)
!13673 = !DILocation(line: 851, column: 7, scope: !13662)
!13674 = !DILocation(line: 853, column: 7, scope: !13675)
!13675 = distinct !DILexicalBlock(scope: !13662, file: !3, line: 853, column: 7)
!13676 = !DILocation(line: 853, column: 7, scope: !13662)
!13677 = !DILocation(line: 854, column: 11, scope: !13675)
!13678 = !DILocation(line: 854, column: 4, scope: !13675)
!13679 = !DILocation(line: 855, column: 2, scope: !13662)
!13680 = !DILocation(line: 847, column: 11, scope: !13656)
!13681 = !DILocation(line: 846, column: 2, scope: !13656)
!13682 = distinct !{!13682, !13659, !13683}
!13683 = !DILocation(line: 855, column: 2, scope: !13652)
!13684 = !DILocation(line: 857, column: 2, scope: !13632)
!13685 = !DILocation(line: 858, column: 1, scope: !13632)
!13686 = distinct !DISubprogram(name: "__mlxsw_sp_port_vlan_set", scope: !3, file: !3, line: 821, type: !13633, scopeLine: 824, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13687 = !DILocation(line: 445, column: 72, scope: !12750, inlinedAt: !13688)
!13688 = distinct !DILocation(line: 552, column: 10, scope: !12755, inlinedAt: !13689)
!13689 = distinct !DILocation(line: 829, column: 12, scope: !13686)
!13690 = !DILocation(line: 446, column: 9, scope: !12750, inlinedAt: !13688)
!13691 = !DILocation(line: 446, column: 23, scope: !12750, inlinedAt: !13688)
!13692 = !DILocation(line: 448, column: 8, scope: !12750, inlinedAt: !13688)
!13693 = !DILocation(line: 318, column: 67, scope: !12768, inlinedAt: !13694)
!13694 = distinct !DILocation(line: 553, column: 20, scope: !12755, inlinedAt: !13689)
!13695 = !DILocation(line: 346, column: 58, scope: !12774, inlinedAt: !13696)
!13696 = distinct !DILocation(line: 547, column: 11, scope: !12755, inlinedAt: !13689)
!13697 = !DILocation(line: 472, column: 28, scope: !12780, inlinedAt: !13698)
!13698 = distinct !DILocation(line: 481, column: 9, scope: !12785, inlinedAt: !13699)
!13699 = distinct !DILocation(line: 545, column: 11, scope: !12787, inlinedAt: !13689)
!13700 = !DILocation(line: 472, column: 40, scope: !12780, inlinedAt: !13698)
!13701 = !DILocation(line: 472, column: 60, scope: !12780, inlinedAt: !13698)
!13702 = !DILocation(line: 478, column: 51, scope: !12785, inlinedAt: !13699)
!13703 = !DILocation(line: 478, column: 63, scope: !12785, inlinedAt: !13699)
!13704 = !DILocation(line: 480, column: 15, scope: !12785, inlinedAt: !13699)
!13705 = !DILocation(line: 538, column: 45, scope: !12757, inlinedAt: !13689)
!13706 = !DILocation(line: 538, column: 57, scope: !12757, inlinedAt: !13689)
!13707 = !DILocation(line: 542, column: 16, scope: !12755, inlinedAt: !13689)
!13708 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !13686, file: !3, line: 821, type: !10715)
!13709 = !DILocation(line: 821, column: 59, scope: !13686)
!13710 = !DILocalVariable(name: "vid_begin", arg: 2, scope: !13686, file: !3, line: 822, type: !1193)
!13711 = !DILocation(line: 822, column: 13, scope: !13686)
!13712 = !DILocalVariable(name: "vid_end", arg: 3, scope: !13686, file: !3, line: 822, type: !1193)
!13713 = !DILocation(line: 822, column: 28, scope: !13686)
!13714 = !DILocalVariable(name: "is_member", arg: 4, scope: !13686, file: !3, line: 823, type: !696)
!13715 = !DILocation(line: 823, column: 14, scope: !13686)
!13716 = !DILocalVariable(name: "untagged", arg: 5, scope: !13686, file: !3, line: 823, type: !696)
!13717 = !DILocation(line: 823, column: 30, scope: !13686)
!13718 = !DILocalVariable(name: "mlxsw_sp", scope: !13686, file: !3, line: 825, type: !10721)
!13719 = !DILocation(line: 825, column: 19, scope: !13686)
!13720 = !DILocation(line: 825, column: 30, scope: !13686)
!13721 = !DILocation(line: 825, column: 45, scope: !13686)
!13722 = !DILocalVariable(name: "spvm_pl", scope: !13686, file: !3, line: 826, type: !733)
!13723 = !DILocation(line: 826, column: 8, scope: !13686)
!13724 = !DILocalVariable(name: "err", scope: !13686, file: !3, line: 827, type: !7)
!13725 = !DILocation(line: 827, column: 6, scope: !13686)
!13726 = !DILocation(line: 540, column: 27, scope: !12756, inlinedAt: !13689)
!13727 = !DILocation(line: 540, column: 6, scope: !12756, inlinedAt: !13689)
!13728 = !DILocation(line: 540, column: 6, scope: !12757, inlinedAt: !13689)
!13729 = !DILocation(line: 544, column: 7, scope: !12787, inlinedAt: !13689)
!13730 = !DILocation(line: 544, column: 12, scope: !12787, inlinedAt: !13689)
!13731 = !DILocation(line: 544, column: 7, scope: !12755, inlinedAt: !13689)
!13732 = !DILocation(line: 545, column: 25, scope: !12787, inlinedAt: !13689)
!13733 = !DILocation(line: 545, column: 31, scope: !12787, inlinedAt: !13689)
!13734 = !DILocation(line: 480, column: 33, scope: !12785, inlinedAt: !13699)
!13735 = !DILocation(line: 480, column: 23, scope: !12785, inlinedAt: !13699)
!13736 = !DILocation(line: 481, column: 29, scope: !12785, inlinedAt: !13699)
!13737 = !DILocation(line: 481, column: 35, scope: !12785, inlinedAt: !13699)
!13738 = !DILocation(line: 481, column: 42, scope: !12785, inlinedAt: !13699)
!13739 = !DILocation(line: 474, column: 23, scope: !12780, inlinedAt: !13698)
!13740 = !DILocation(line: 474, column: 29, scope: !12780, inlinedAt: !13698)
!13741 = !DILocation(line: 474, column: 36, scope: !12780, inlinedAt: !13698)
!13742 = !DILocation(line: 474, column: 9, scope: !12780, inlinedAt: !13698)
!13743 = !DILocation(line: 545, column: 4, scope: !12787, inlinedAt: !13689)
!13744 = !DILocation(line: 547, column: 25, scope: !12755, inlinedAt: !13689)
!13745 = !DILocation(line: 348, column: 7, scope: !12842, inlinedAt: !13696)
!13746 = !DILocation(line: 348, column: 6, scope: !12774, inlinedAt: !13696)
!13747 = !DILocation(line: 349, column: 3, scope: !12842, inlinedAt: !13696)
!13748 = !DILocation(line: 351, column: 6, scope: !12846, inlinedAt: !13696)
!13749 = !DILocation(line: 351, column: 11, scope: !12846, inlinedAt: !13696)
!13750 = !DILocation(line: 351, column: 6, scope: !12774, inlinedAt: !13696)
!13751 = !DILocation(line: 352, column: 3, scope: !12846, inlinedAt: !13696)
!13752 = !DILocation(line: 354, column: 32, scope: !12851, inlinedAt: !13696)
!13753 = !DILocation(line: 354, column: 37, scope: !12851, inlinedAt: !13696)
!13754 = !DILocation(line: 354, column: 42, scope: !12851, inlinedAt: !13696)
!13755 = !DILocation(line: 354, column: 45, scope: !12851, inlinedAt: !13696)
!13756 = !DILocation(line: 354, column: 50, scope: !12851, inlinedAt: !13696)
!13757 = !DILocation(line: 354, column: 6, scope: !12774, inlinedAt: !13696)
!13758 = !DILocation(line: 355, column: 3, scope: !12851, inlinedAt: !13696)
!13759 = !DILocation(line: 356, column: 32, scope: !12859, inlinedAt: !13696)
!13760 = !DILocation(line: 356, column: 37, scope: !12859, inlinedAt: !13696)
!13761 = !DILocation(line: 356, column: 43, scope: !12859, inlinedAt: !13696)
!13762 = !DILocation(line: 356, column: 46, scope: !12859, inlinedAt: !13696)
!13763 = !DILocation(line: 356, column: 51, scope: !12859, inlinedAt: !13696)
!13764 = !DILocation(line: 356, column: 6, scope: !12774, inlinedAt: !13696)
!13765 = !DILocation(line: 357, column: 3, scope: !12859, inlinedAt: !13696)
!13766 = !DILocation(line: 358, column: 6, scope: !12867, inlinedAt: !13696)
!13767 = !DILocation(line: 358, column: 11, scope: !12867, inlinedAt: !13696)
!13768 = !DILocation(line: 358, column: 6, scope: !12774, inlinedAt: !13696)
!13769 = !DILocation(line: 358, column: 26, scope: !12867, inlinedAt: !13696)
!13770 = !DILocation(line: 359, column: 6, scope: !12872, inlinedAt: !13696)
!13771 = !DILocation(line: 359, column: 11, scope: !12872, inlinedAt: !13696)
!13772 = !DILocation(line: 359, column: 6, scope: !12774, inlinedAt: !13696)
!13773 = !DILocation(line: 359, column: 26, scope: !12872, inlinedAt: !13696)
!13774 = !DILocation(line: 360, column: 6, scope: !12877, inlinedAt: !13696)
!13775 = !DILocation(line: 360, column: 11, scope: !12877, inlinedAt: !13696)
!13776 = !DILocation(line: 360, column: 6, scope: !12774, inlinedAt: !13696)
!13777 = !DILocation(line: 360, column: 26, scope: !12877, inlinedAt: !13696)
!13778 = !DILocation(line: 361, column: 6, scope: !12882, inlinedAt: !13696)
!13779 = !DILocation(line: 361, column: 11, scope: !12882, inlinedAt: !13696)
!13780 = !DILocation(line: 361, column: 6, scope: !12774, inlinedAt: !13696)
!13781 = !DILocation(line: 361, column: 26, scope: !12882, inlinedAt: !13696)
!13782 = !DILocation(line: 362, column: 6, scope: !12887, inlinedAt: !13696)
!13783 = !DILocation(line: 362, column: 11, scope: !12887, inlinedAt: !13696)
!13784 = !DILocation(line: 362, column: 6, scope: !12774, inlinedAt: !13696)
!13785 = !DILocation(line: 362, column: 26, scope: !12887, inlinedAt: !13696)
!13786 = !DILocation(line: 363, column: 6, scope: !12892, inlinedAt: !13696)
!13787 = !DILocation(line: 363, column: 11, scope: !12892, inlinedAt: !13696)
!13788 = !DILocation(line: 363, column: 6, scope: !12774, inlinedAt: !13696)
!13789 = !DILocation(line: 363, column: 26, scope: !12892, inlinedAt: !13696)
!13790 = !DILocation(line: 364, column: 6, scope: !12897, inlinedAt: !13696)
!13791 = !DILocation(line: 364, column: 11, scope: !12897, inlinedAt: !13696)
!13792 = !DILocation(line: 364, column: 6, scope: !12774, inlinedAt: !13696)
!13793 = !DILocation(line: 364, column: 26, scope: !12897, inlinedAt: !13696)
!13794 = !DILocation(line: 365, column: 6, scope: !12902, inlinedAt: !13696)
!13795 = !DILocation(line: 365, column: 11, scope: !12902, inlinedAt: !13696)
!13796 = !DILocation(line: 365, column: 6, scope: !12774, inlinedAt: !13696)
!13797 = !DILocation(line: 365, column: 26, scope: !12902, inlinedAt: !13696)
!13798 = !DILocation(line: 366, column: 6, scope: !12907, inlinedAt: !13696)
!13799 = !DILocation(line: 366, column: 11, scope: !12907, inlinedAt: !13696)
!13800 = !DILocation(line: 366, column: 6, scope: !12774, inlinedAt: !13696)
!13801 = !DILocation(line: 366, column: 26, scope: !12907, inlinedAt: !13696)
!13802 = !DILocation(line: 367, column: 6, scope: !12912, inlinedAt: !13696)
!13803 = !DILocation(line: 367, column: 11, scope: !12912, inlinedAt: !13696)
!13804 = !DILocation(line: 367, column: 6, scope: !12774, inlinedAt: !13696)
!13805 = !DILocation(line: 367, column: 26, scope: !12912, inlinedAt: !13696)
!13806 = !DILocation(line: 368, column: 6, scope: !12917, inlinedAt: !13696)
!13807 = !DILocation(line: 368, column: 11, scope: !12917, inlinedAt: !13696)
!13808 = !DILocation(line: 368, column: 6, scope: !12774, inlinedAt: !13696)
!13809 = !DILocation(line: 368, column: 26, scope: !12917, inlinedAt: !13696)
!13810 = !DILocation(line: 369, column: 6, scope: !12922, inlinedAt: !13696)
!13811 = !DILocation(line: 369, column: 11, scope: !12922, inlinedAt: !13696)
!13812 = !DILocation(line: 369, column: 6, scope: !12774, inlinedAt: !13696)
!13813 = !DILocation(line: 369, column: 26, scope: !12922, inlinedAt: !13696)
!13814 = !DILocation(line: 370, column: 6, scope: !12927, inlinedAt: !13696)
!13815 = !DILocation(line: 370, column: 11, scope: !12927, inlinedAt: !13696)
!13816 = !DILocation(line: 370, column: 6, scope: !12774, inlinedAt: !13696)
!13817 = !DILocation(line: 370, column: 26, scope: !12927, inlinedAt: !13696)
!13818 = !DILocation(line: 371, column: 6, scope: !12932, inlinedAt: !13696)
!13819 = !DILocation(line: 371, column: 11, scope: !12932, inlinedAt: !13696)
!13820 = !DILocation(line: 371, column: 6, scope: !12774, inlinedAt: !13696)
!13821 = !DILocation(line: 371, column: 26, scope: !12932, inlinedAt: !13696)
!13822 = !DILocation(line: 372, column: 6, scope: !12937, inlinedAt: !13696)
!13823 = !DILocation(line: 372, column: 11, scope: !12937, inlinedAt: !13696)
!13824 = !DILocation(line: 372, column: 6, scope: !12774, inlinedAt: !13696)
!13825 = !DILocation(line: 372, column: 26, scope: !12937, inlinedAt: !13696)
!13826 = !DILocation(line: 373, column: 6, scope: !12942, inlinedAt: !13696)
!13827 = !DILocation(line: 373, column: 11, scope: !12942, inlinedAt: !13696)
!13828 = !DILocation(line: 373, column: 6, scope: !12774, inlinedAt: !13696)
!13829 = !DILocation(line: 373, column: 26, scope: !12942, inlinedAt: !13696)
!13830 = !DILocation(line: 374, column: 6, scope: !12947, inlinedAt: !13696)
!13831 = !DILocation(line: 374, column: 11, scope: !12947, inlinedAt: !13696)
!13832 = !DILocation(line: 374, column: 6, scope: !12774, inlinedAt: !13696)
!13833 = !DILocation(line: 374, column: 26, scope: !12947, inlinedAt: !13696)
!13834 = !DILocation(line: 375, column: 6, scope: !12952, inlinedAt: !13696)
!13835 = !DILocation(line: 375, column: 11, scope: !12952, inlinedAt: !13696)
!13836 = !DILocation(line: 375, column: 6, scope: !12774, inlinedAt: !13696)
!13837 = !DILocation(line: 375, column: 27, scope: !12952, inlinedAt: !13696)
!13838 = !DILocation(line: 376, column: 6, scope: !12957, inlinedAt: !13696)
!13839 = !DILocation(line: 376, column: 11, scope: !12957, inlinedAt: !13696)
!13840 = !DILocation(line: 376, column: 6, scope: !12774, inlinedAt: !13696)
!13841 = !DILocation(line: 376, column: 32, scope: !12957, inlinedAt: !13696)
!13842 = !DILocation(line: 377, column: 6, scope: !12962, inlinedAt: !13696)
!13843 = !DILocation(line: 377, column: 11, scope: !12962, inlinedAt: !13696)
!13844 = !DILocation(line: 377, column: 6, scope: !12774, inlinedAt: !13696)
!13845 = !DILocation(line: 377, column: 32, scope: !12962, inlinedAt: !13696)
!13846 = !DILocation(line: 378, column: 6, scope: !12967, inlinedAt: !13696)
!13847 = !DILocation(line: 378, column: 11, scope: !12967, inlinedAt: !13696)
!13848 = !DILocation(line: 378, column: 6, scope: !12774, inlinedAt: !13696)
!13849 = !DILocation(line: 378, column: 32, scope: !12967, inlinedAt: !13696)
!13850 = !DILocation(line: 379, column: 6, scope: !12972, inlinedAt: !13696)
!13851 = !DILocation(line: 379, column: 11, scope: !12972, inlinedAt: !13696)
!13852 = !DILocation(line: 379, column: 6, scope: !12774, inlinedAt: !13696)
!13853 = !DILocation(line: 379, column: 33, scope: !12972, inlinedAt: !13696)
!13854 = !DILocation(line: 380, column: 6, scope: !12977, inlinedAt: !13696)
!13855 = !DILocation(line: 380, column: 11, scope: !12977, inlinedAt: !13696)
!13856 = !DILocation(line: 380, column: 6, scope: !12774, inlinedAt: !13696)
!13857 = !DILocation(line: 380, column: 33, scope: !12977, inlinedAt: !13696)
!13858 = !DILocation(line: 381, column: 6, scope: !12982, inlinedAt: !13696)
!13859 = !DILocation(line: 381, column: 11, scope: !12982, inlinedAt: !13696)
!13860 = !DILocation(line: 381, column: 6, scope: !12774, inlinedAt: !13696)
!13861 = !DILocation(line: 381, column: 33, scope: !12982, inlinedAt: !13696)
!13862 = !DILocation(line: 382, column: 2, scope: !12987, inlinedAt: !13696)
!13863 = !DILocation(line: 382, column: 2, scope: !12991, inlinedAt: !13696)
!13864 = !DILocation(line: 382, column: 2, scope: !12992, inlinedAt: !13696)
!13865 = !DILocation(line: 386, column: 1, scope: !12774, inlinedAt: !13696)
!13866 = !DILocation(line: 547, column: 9, scope: !12755, inlinedAt: !13689)
!13867 = !DILocation(line: 549, column: 8, scope: !12998, inlinedAt: !13689)
!13868 = !DILocation(line: 549, column: 7, scope: !12755, inlinedAt: !13689)
!13869 = !DILocation(line: 550, column: 4, scope: !12998, inlinedAt: !13689)
!13870 = !DILocation(line: 553, column: 33, scope: !12755, inlinedAt: !13689)
!13871 = !DILocation(line: 325, column: 6, scope: !13003, inlinedAt: !13694)
!13872 = !DILocation(line: 325, column: 6, scope: !12768, inlinedAt: !13694)
!13873 = !DILocation(line: 326, column: 3, scope: !13003, inlinedAt: !13694)
!13874 = !DILocation(line: 332, column: 9, scope: !12768, inlinedAt: !13694)
!13875 = !DILocation(line: 332, column: 15, scope: !12768, inlinedAt: !13694)
!13876 = !DILocation(line: 332, column: 2, scope: !12768, inlinedAt: !13694)
!13877 = !DILocation(line: 336, column: 1, scope: !12768, inlinedAt: !13694)
!13878 = !DILocation(line: 553, column: 5, scope: !12755, inlinedAt: !13689)
!13879 = !DILocation(line: 553, column: 41, scope: !12755, inlinedAt: !13689)
!13880 = !DILocation(line: 554, column: 5, scope: !12755, inlinedAt: !13689)
!13881 = !DILocation(line: 554, column: 12, scope: !12755, inlinedAt: !13689)
!13882 = !DILocation(line: 448, column: 31, scope: !12750, inlinedAt: !13688)
!13883 = !DILocation(line: 448, column: 34, scope: !12750, inlinedAt: !13688)
!13884 = !DILocation(line: 448, column: 14, scope: !12750, inlinedAt: !13688)
!13885 = !DILocation(line: 450, column: 22, scope: !12750, inlinedAt: !13688)
!13886 = !DILocation(line: 450, column: 25, scope: !12750, inlinedAt: !13688)
!13887 = !DILocation(line: 450, column: 30, scope: !12750, inlinedAt: !13688)
!13888 = !DILocation(line: 450, column: 36, scope: !12750, inlinedAt: !13688)
!13889 = !DILocation(line: 450, column: 8, scope: !12750, inlinedAt: !13688)
!13890 = !DILocation(line: 450, column: 6, scope: !12750, inlinedAt: !13688)
!13891 = !DILocation(line: 451, column: 9, scope: !12750, inlinedAt: !13688)
!13892 = !DILocation(line: 552, column: 3, scope: !12755, inlinedAt: !13689)
!13893 = !DILocation(line: 557, column: 19, scope: !12757, inlinedAt: !13689)
!13894 = !DILocation(line: 557, column: 25, scope: !12757, inlinedAt: !13689)
!13895 = !DILocation(line: 557, column: 9, scope: !12757, inlinedAt: !13689)
!13896 = !DILocation(line: 557, column: 2, scope: !12757, inlinedAt: !13689)
!13897 = !DILocation(line: 558, column: 1, scope: !12757, inlinedAt: !13689)
!13898 = !DILocation(line: 829, column: 10, scope: !13686)
!13899 = !DILocation(line: 830, column: 7, scope: !13900)
!13900 = distinct !DILexicalBlock(scope: !13686, file: !3, line: 830, column: 6)
!13901 = !DILocation(line: 830, column: 6, scope: !13686)
!13902 = !DILocation(line: 831, column: 3, scope: !13900)
!13903 = !DILocation(line: 833, column: 22, scope: !13686)
!13904 = !DILocation(line: 833, column: 31, scope: !13686)
!13905 = !DILocation(line: 833, column: 46, scope: !13686)
!13906 = !DILocation(line: 833, column: 58, scope: !13686)
!13907 = !DILocation(line: 834, column: 8, scope: !13686)
!13908 = !DILocation(line: 834, column: 17, scope: !13686)
!13909 = !DILocation(line: 834, column: 28, scope: !13686)
!13910 = !DILocation(line: 833, column: 2, scope: !13686)
!13911 = !DILocation(line: 835, column: 24, scope: !13686)
!13912 = !DILocation(line: 835, column: 34, scope: !13686)
!13913 = !DILocation(line: 835, column: 57, scope: !13686)
!13914 = !DILocation(line: 835, column: 8, scope: !13686)
!13915 = !DILocation(line: 835, column: 6, scope: !13686)
!13916 = !DILocation(line: 836, column: 8, scope: !13686)
!13917 = !DILocation(line: 836, column: 2, scope: !13686)
!13918 = !DILocation(line: 837, column: 9, scope: !13686)
!13919 = !DILocation(line: 837, column: 2, scope: !13686)
!13920 = !DILocation(line: 838, column: 1, scope: !13686)
!13921 = distinct !DISubprogram(name: "mlxsw_sp_port_vlan_create", scope: !3, file: !3, line: 884, type: !13922, scopeLine: 885, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13922 = !DISubroutineType(types: !13923)
!13923 = !{!11388, !10715, !1193}
!13924 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !13921, file: !3, line: 884, type: !10715)
!13925 = !DILocation(line: 884, column: 49, scope: !13921)
!13926 = !DILocalVariable(name: "vid", arg: 2, scope: !13921, file: !3, line: 884, type: !1193)
!13927 = !DILocation(line: 884, column: 68, scope: !13921)
!13928 = !DILocalVariable(name: "mlxsw_sp_port_vlan", scope: !13921, file: !3, line: 886, type: !11388)
!13929 = !DILocation(line: 886, column: 29, scope: !13921)
!13930 = !DILocalVariable(name: "untagged", scope: !13921, file: !3, line: 887, type: !696)
!13931 = !DILocation(line: 887, column: 7, scope: !13921)
!13932 = !DILocation(line: 887, column: 18, scope: !13921)
!13933 = !DILocation(line: 887, column: 22, scope: !13921)
!13934 = !DILocalVariable(name: "err", scope: !13921, file: !3, line: 888, type: !7)
!13935 = !DILocation(line: 888, column: 6, scope: !13921)
!13936 = !DILocation(line: 890, column: 54, scope: !13921)
!13937 = !DILocation(line: 890, column: 69, scope: !13921)
!13938 = !DILocation(line: 890, column: 23, scope: !13921)
!13939 = !DILocation(line: 890, column: 21, scope: !13921)
!13940 = !DILocation(line: 891, column: 6, scope: !13941)
!13941 = distinct !DILexicalBlock(scope: !13921, file: !3, line: 891, column: 6)
!13942 = !DILocation(line: 891, column: 6, scope: !13921)
!13943 = !DILocation(line: 892, column: 10, scope: !13941)
!13944 = !DILocation(line: 892, column: 3, scope: !13941)
!13945 = !DILocation(line: 894, column: 31, scope: !13921)
!13946 = !DILocation(line: 894, column: 46, scope: !13921)
!13947 = !DILocation(line: 894, column: 51, scope: !13921)
!13948 = !DILocation(line: 894, column: 62, scope: !13921)
!13949 = !DILocation(line: 894, column: 8, scope: !13921)
!13950 = !DILocation(line: 894, column: 6, scope: !13921)
!13951 = !DILocation(line: 895, column: 6, scope: !13952)
!13952 = distinct !DILexicalBlock(scope: !13921, file: !3, line: 895, column: 6)
!13953 = !DILocation(line: 895, column: 6, scope: !13921)
!13954 = !DILocation(line: 896, column: 18, scope: !13952)
!13955 = !DILocation(line: 896, column: 10, scope: !13952)
!13956 = !DILocation(line: 896, column: 3, scope: !13952)
!13957 = !DILocation(line: 898, column: 23, scope: !13921)
!13958 = !DILocation(line: 898, column: 21, scope: !13921)
!13959 = !DILocation(line: 899, column: 7, scope: !13960)
!13960 = distinct !DILexicalBlock(scope: !13921, file: !3, line: 899, column: 6)
!13961 = !DILocation(line: 899, column: 6, scope: !13921)
!13962 = !DILocation(line: 900, column: 7, scope: !13963)
!13963 = distinct !DILexicalBlock(scope: !13960, file: !3, line: 899, column: 27)
!13964 = !DILocation(line: 901, column: 3, scope: !13963)
!13965 = !DILocation(line: 904, column: 38, scope: !13921)
!13966 = !DILocation(line: 904, column: 2, scope: !13921)
!13967 = !DILocation(line: 904, column: 22, scope: !13921)
!13968 = !DILocation(line: 904, column: 36, scope: !13921)
!13969 = !DILocation(line: 905, column: 28, scope: !13921)
!13970 = !DILocation(line: 905, column: 2, scope: !13921)
!13971 = !DILocation(line: 905, column: 22, scope: !13921)
!13972 = !DILocation(line: 905, column: 26, scope: !13921)
!13973 = !DILocation(line: 906, column: 12, scope: !13921)
!13974 = !DILocation(line: 906, column: 32, scope: !13921)
!13975 = !DILocation(line: 906, column: 39, scope: !13921)
!13976 = !DILocation(line: 906, column: 54, scope: !13921)
!13977 = !DILocation(line: 906, column: 2, scope: !13921)
!13978 = !DILocation(line: 908, column: 9, scope: !13921)
!13979 = !DILocation(line: 908, column: 2, scope: !13921)
!13980 = !DILabel(scope: !13921, name: "err_port_vlan_alloc", file: !3, line: 910)
!13981 = !DILocation(line: 910, column: 1, scope: !13921)
!13982 = !DILocation(line: 911, column: 25, scope: !13921)
!13983 = !DILocation(line: 911, column: 40, scope: !13921)
!13984 = !DILocation(line: 911, column: 45, scope: !13921)
!13985 = !DILocation(line: 911, column: 2, scope: !13921)
!13986 = !DILocation(line: 912, column: 17, scope: !13921)
!13987 = !DILocation(line: 912, column: 9, scope: !13921)
!13988 = !DILocation(line: 912, column: 2, scope: !13921)
!13989 = !DILocation(line: 913, column: 1, scope: !13921)
!13990 = distinct !DISubprogram(name: "mlxsw_sp_port_vlan_find_by_vid", scope: !10118, file: !10118, line: 406, type: !13991, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!13991 = !DISubroutineType(types: !13992)
!13992 = !{!11388, !13993, !1193}
!13993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13994, size: 64)
!13994 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10716)
!13995 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !13990, file: !10118, line: 406, type: !13993)
!13996 = !DILocation(line: 406, column: 60, scope: !13990)
!13997 = !DILocalVariable(name: "vid", arg: 2, scope: !13990, file: !10118, line: 407, type: !1193)
!13998 = !DILocation(line: 407, column: 15, scope: !13990)
!13999 = !DILocalVariable(name: "mlxsw_sp_port_vlan", scope: !13990, file: !10118, line: 409, type: !11388)
!14000 = !DILocation(line: 409, column: 29, scope: !13990)
!14001 = !DILocalVariable(name: "__mptr", scope: !14002, file: !10118, line: 411, type: !726)
!14002 = distinct !DILexicalBlock(scope: !14003, file: !10118, line: 411, column: 2)
!14003 = distinct !DILexicalBlock(scope: !13990, file: !10118, line: 411, column: 2)
!14004 = !DILocation(line: 411, column: 2, scope: !14002)
!14005 = !DILocation(line: 411, column: 2, scope: !14006)
!14006 = distinct !DILexicalBlock(scope: !14002, file: !10118, line: 411, column: 2)
!14007 = !DILocation(line: 411, column: 2, scope: !14003)
!14008 = !DILocation(line: 411, column: 2, scope: !14009)
!14009 = distinct !DILexicalBlock(scope: !14003, file: !10118, line: 411, column: 2)
!14010 = !DILocation(line: 413, column: 7, scope: !14011)
!14011 = distinct !DILexicalBlock(scope: !14012, file: !10118, line: 413, column: 7)
!14012 = distinct !DILexicalBlock(scope: !14009, file: !10118, line: 412, column: 14)
!14013 = !DILocation(line: 413, column: 27, scope: !14011)
!14014 = !DILocation(line: 413, column: 34, scope: !14011)
!14015 = !DILocation(line: 413, column: 31, scope: !14011)
!14016 = !DILocation(line: 413, column: 7, scope: !14012)
!14017 = !DILocation(line: 414, column: 11, scope: !14011)
!14018 = !DILocation(line: 414, column: 4, scope: !14011)
!14019 = !DILocation(line: 415, column: 2, scope: !14012)
!14020 = !DILocalVariable(name: "__mptr", scope: !14021, file: !10118, line: 411, type: !726)
!14021 = distinct !DILexicalBlock(scope: !14009, file: !10118, line: 411, column: 2)
!14022 = !DILocation(line: 411, column: 2, scope: !14021)
!14023 = !DILocation(line: 411, column: 2, scope: !14024)
!14024 = distinct !DILexicalBlock(scope: !14021, file: !10118, line: 411, column: 2)
!14025 = distinct !{!14025, !14007, !14026}
!14026 = !DILocation(line: 415, column: 2, scope: !14003)
!14027 = !DILocation(line: 417, column: 2, scope: !13990)
!14028 = !DILocation(line: 418, column: 1, scope: !13990)
!14029 = distinct !DISubprogram(name: "ERR_PTR", scope: !14030, file: !14030, line: 24, type: !14031, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14030 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!14031 = !DISubroutineType(types: !14032)
!14032 = !{!726, !669}
!14033 = !DILocalVariable(name: "error", arg: 1, scope: !14029, file: !14030, line: 24, type: !669)
!14034 = !DILocation(line: 24, column: 48, scope: !14029)
!14035 = !DILocation(line: 26, column: 18, scope: !14029)
!14036 = !DILocation(line: 26, column: 9, scope: !14029)
!14037 = !DILocation(line: 26, column: 2, scope: !14029)
!14038 = distinct !DISubprogram(name: "kzalloc", scope: !10234, file: !10234, line: 662, type: !12758, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14039 = !DILocation(line: 445, column: 72, scope: !12750, inlinedAt: !14040)
!14040 = distinct !DILocation(line: 552, column: 10, scope: !12755, inlinedAt: !14041)
!14041 = distinct !DILocation(line: 664, column: 9, scope: !14038)
!14042 = !DILocation(line: 446, column: 9, scope: !12750, inlinedAt: !14040)
!14043 = !DILocation(line: 446, column: 23, scope: !12750, inlinedAt: !14040)
!14044 = !DILocation(line: 448, column: 8, scope: !12750, inlinedAt: !14040)
!14045 = !DILocation(line: 318, column: 67, scope: !12768, inlinedAt: !14046)
!14046 = distinct !DILocation(line: 553, column: 20, scope: !12755, inlinedAt: !14041)
!14047 = !DILocation(line: 346, column: 58, scope: !12774, inlinedAt: !14048)
!14048 = distinct !DILocation(line: 547, column: 11, scope: !12755, inlinedAt: !14041)
!14049 = !DILocation(line: 472, column: 28, scope: !12780, inlinedAt: !14050)
!14050 = distinct !DILocation(line: 481, column: 9, scope: !12785, inlinedAt: !14051)
!14051 = distinct !DILocation(line: 545, column: 11, scope: !12787, inlinedAt: !14041)
!14052 = !DILocation(line: 472, column: 40, scope: !12780, inlinedAt: !14050)
!14053 = !DILocation(line: 472, column: 60, scope: !12780, inlinedAt: !14050)
!14054 = !DILocation(line: 478, column: 51, scope: !12785, inlinedAt: !14051)
!14055 = !DILocation(line: 478, column: 63, scope: !12785, inlinedAt: !14051)
!14056 = !DILocation(line: 480, column: 15, scope: !12785, inlinedAt: !14051)
!14057 = !DILocation(line: 538, column: 45, scope: !12757, inlinedAt: !14041)
!14058 = !DILocation(line: 538, column: 57, scope: !12757, inlinedAt: !14041)
!14059 = !DILocation(line: 542, column: 16, scope: !12755, inlinedAt: !14041)
!14060 = !DILocalVariable(name: "size", arg: 1, scope: !14038, file: !10234, line: 662, type: !750)
!14061 = !DILocation(line: 662, column: 36, scope: !14038)
!14062 = !DILocalVariable(name: "flags", arg: 2, scope: !14038, file: !10234, line: 662, type: !2144)
!14063 = !DILocation(line: 662, column: 48, scope: !14038)
!14064 = !DILocation(line: 664, column: 17, scope: !14038)
!14065 = !DILocation(line: 664, column: 23, scope: !14038)
!14066 = !DILocation(line: 664, column: 29, scope: !14038)
!14067 = !DILocation(line: 540, column: 27, scope: !12756, inlinedAt: !14041)
!14068 = !DILocation(line: 540, column: 6, scope: !12756, inlinedAt: !14041)
!14069 = !DILocation(line: 540, column: 6, scope: !12757, inlinedAt: !14041)
!14070 = !DILocation(line: 544, column: 7, scope: !12787, inlinedAt: !14041)
!14071 = !DILocation(line: 544, column: 12, scope: !12787, inlinedAt: !14041)
!14072 = !DILocation(line: 544, column: 7, scope: !12755, inlinedAt: !14041)
!14073 = !DILocation(line: 545, column: 25, scope: !12787, inlinedAt: !14041)
!14074 = !DILocation(line: 545, column: 31, scope: !12787, inlinedAt: !14041)
!14075 = !DILocation(line: 480, column: 33, scope: !12785, inlinedAt: !14051)
!14076 = !DILocation(line: 480, column: 23, scope: !12785, inlinedAt: !14051)
!14077 = !DILocation(line: 481, column: 29, scope: !12785, inlinedAt: !14051)
!14078 = !DILocation(line: 481, column: 35, scope: !12785, inlinedAt: !14051)
!14079 = !DILocation(line: 481, column: 42, scope: !12785, inlinedAt: !14051)
!14080 = !DILocation(line: 474, column: 23, scope: !12780, inlinedAt: !14050)
!14081 = !DILocation(line: 474, column: 29, scope: !12780, inlinedAt: !14050)
!14082 = !DILocation(line: 474, column: 36, scope: !12780, inlinedAt: !14050)
!14083 = !DILocation(line: 474, column: 9, scope: !12780, inlinedAt: !14050)
!14084 = !DILocation(line: 545, column: 4, scope: !12787, inlinedAt: !14041)
!14085 = !DILocation(line: 547, column: 25, scope: !12755, inlinedAt: !14041)
!14086 = !DILocation(line: 348, column: 7, scope: !12842, inlinedAt: !14048)
!14087 = !DILocation(line: 348, column: 6, scope: !12774, inlinedAt: !14048)
!14088 = !DILocation(line: 349, column: 3, scope: !12842, inlinedAt: !14048)
!14089 = !DILocation(line: 351, column: 6, scope: !12846, inlinedAt: !14048)
!14090 = !DILocation(line: 351, column: 11, scope: !12846, inlinedAt: !14048)
!14091 = !DILocation(line: 351, column: 6, scope: !12774, inlinedAt: !14048)
!14092 = !DILocation(line: 352, column: 3, scope: !12846, inlinedAt: !14048)
!14093 = !DILocation(line: 354, column: 32, scope: !12851, inlinedAt: !14048)
!14094 = !DILocation(line: 354, column: 37, scope: !12851, inlinedAt: !14048)
!14095 = !DILocation(line: 354, column: 42, scope: !12851, inlinedAt: !14048)
!14096 = !DILocation(line: 354, column: 45, scope: !12851, inlinedAt: !14048)
!14097 = !DILocation(line: 354, column: 50, scope: !12851, inlinedAt: !14048)
!14098 = !DILocation(line: 354, column: 6, scope: !12774, inlinedAt: !14048)
!14099 = !DILocation(line: 355, column: 3, scope: !12851, inlinedAt: !14048)
!14100 = !DILocation(line: 356, column: 32, scope: !12859, inlinedAt: !14048)
!14101 = !DILocation(line: 356, column: 37, scope: !12859, inlinedAt: !14048)
!14102 = !DILocation(line: 356, column: 43, scope: !12859, inlinedAt: !14048)
!14103 = !DILocation(line: 356, column: 46, scope: !12859, inlinedAt: !14048)
!14104 = !DILocation(line: 356, column: 51, scope: !12859, inlinedAt: !14048)
!14105 = !DILocation(line: 356, column: 6, scope: !12774, inlinedAt: !14048)
!14106 = !DILocation(line: 357, column: 3, scope: !12859, inlinedAt: !14048)
!14107 = !DILocation(line: 358, column: 6, scope: !12867, inlinedAt: !14048)
!14108 = !DILocation(line: 358, column: 11, scope: !12867, inlinedAt: !14048)
!14109 = !DILocation(line: 358, column: 6, scope: !12774, inlinedAt: !14048)
!14110 = !DILocation(line: 358, column: 26, scope: !12867, inlinedAt: !14048)
!14111 = !DILocation(line: 359, column: 6, scope: !12872, inlinedAt: !14048)
!14112 = !DILocation(line: 359, column: 11, scope: !12872, inlinedAt: !14048)
!14113 = !DILocation(line: 359, column: 6, scope: !12774, inlinedAt: !14048)
!14114 = !DILocation(line: 359, column: 26, scope: !12872, inlinedAt: !14048)
!14115 = !DILocation(line: 360, column: 6, scope: !12877, inlinedAt: !14048)
!14116 = !DILocation(line: 360, column: 11, scope: !12877, inlinedAt: !14048)
!14117 = !DILocation(line: 360, column: 6, scope: !12774, inlinedAt: !14048)
!14118 = !DILocation(line: 360, column: 26, scope: !12877, inlinedAt: !14048)
!14119 = !DILocation(line: 361, column: 6, scope: !12882, inlinedAt: !14048)
!14120 = !DILocation(line: 361, column: 11, scope: !12882, inlinedAt: !14048)
!14121 = !DILocation(line: 361, column: 6, scope: !12774, inlinedAt: !14048)
!14122 = !DILocation(line: 361, column: 26, scope: !12882, inlinedAt: !14048)
!14123 = !DILocation(line: 362, column: 6, scope: !12887, inlinedAt: !14048)
!14124 = !DILocation(line: 362, column: 11, scope: !12887, inlinedAt: !14048)
!14125 = !DILocation(line: 362, column: 6, scope: !12774, inlinedAt: !14048)
!14126 = !DILocation(line: 362, column: 26, scope: !12887, inlinedAt: !14048)
!14127 = !DILocation(line: 363, column: 6, scope: !12892, inlinedAt: !14048)
!14128 = !DILocation(line: 363, column: 11, scope: !12892, inlinedAt: !14048)
!14129 = !DILocation(line: 363, column: 6, scope: !12774, inlinedAt: !14048)
!14130 = !DILocation(line: 363, column: 26, scope: !12892, inlinedAt: !14048)
!14131 = !DILocation(line: 364, column: 6, scope: !12897, inlinedAt: !14048)
!14132 = !DILocation(line: 364, column: 11, scope: !12897, inlinedAt: !14048)
!14133 = !DILocation(line: 364, column: 6, scope: !12774, inlinedAt: !14048)
!14134 = !DILocation(line: 364, column: 26, scope: !12897, inlinedAt: !14048)
!14135 = !DILocation(line: 365, column: 6, scope: !12902, inlinedAt: !14048)
!14136 = !DILocation(line: 365, column: 11, scope: !12902, inlinedAt: !14048)
!14137 = !DILocation(line: 365, column: 6, scope: !12774, inlinedAt: !14048)
!14138 = !DILocation(line: 365, column: 26, scope: !12902, inlinedAt: !14048)
!14139 = !DILocation(line: 366, column: 6, scope: !12907, inlinedAt: !14048)
!14140 = !DILocation(line: 366, column: 11, scope: !12907, inlinedAt: !14048)
!14141 = !DILocation(line: 366, column: 6, scope: !12774, inlinedAt: !14048)
!14142 = !DILocation(line: 366, column: 26, scope: !12907, inlinedAt: !14048)
!14143 = !DILocation(line: 367, column: 6, scope: !12912, inlinedAt: !14048)
!14144 = !DILocation(line: 367, column: 11, scope: !12912, inlinedAt: !14048)
!14145 = !DILocation(line: 367, column: 6, scope: !12774, inlinedAt: !14048)
!14146 = !DILocation(line: 367, column: 26, scope: !12912, inlinedAt: !14048)
!14147 = !DILocation(line: 368, column: 6, scope: !12917, inlinedAt: !14048)
!14148 = !DILocation(line: 368, column: 11, scope: !12917, inlinedAt: !14048)
!14149 = !DILocation(line: 368, column: 6, scope: !12774, inlinedAt: !14048)
!14150 = !DILocation(line: 368, column: 26, scope: !12917, inlinedAt: !14048)
!14151 = !DILocation(line: 369, column: 6, scope: !12922, inlinedAt: !14048)
!14152 = !DILocation(line: 369, column: 11, scope: !12922, inlinedAt: !14048)
!14153 = !DILocation(line: 369, column: 6, scope: !12774, inlinedAt: !14048)
!14154 = !DILocation(line: 369, column: 26, scope: !12922, inlinedAt: !14048)
!14155 = !DILocation(line: 370, column: 6, scope: !12927, inlinedAt: !14048)
!14156 = !DILocation(line: 370, column: 11, scope: !12927, inlinedAt: !14048)
!14157 = !DILocation(line: 370, column: 6, scope: !12774, inlinedAt: !14048)
!14158 = !DILocation(line: 370, column: 26, scope: !12927, inlinedAt: !14048)
!14159 = !DILocation(line: 371, column: 6, scope: !12932, inlinedAt: !14048)
!14160 = !DILocation(line: 371, column: 11, scope: !12932, inlinedAt: !14048)
!14161 = !DILocation(line: 371, column: 6, scope: !12774, inlinedAt: !14048)
!14162 = !DILocation(line: 371, column: 26, scope: !12932, inlinedAt: !14048)
!14163 = !DILocation(line: 372, column: 6, scope: !12937, inlinedAt: !14048)
!14164 = !DILocation(line: 372, column: 11, scope: !12937, inlinedAt: !14048)
!14165 = !DILocation(line: 372, column: 6, scope: !12774, inlinedAt: !14048)
!14166 = !DILocation(line: 372, column: 26, scope: !12937, inlinedAt: !14048)
!14167 = !DILocation(line: 373, column: 6, scope: !12942, inlinedAt: !14048)
!14168 = !DILocation(line: 373, column: 11, scope: !12942, inlinedAt: !14048)
!14169 = !DILocation(line: 373, column: 6, scope: !12774, inlinedAt: !14048)
!14170 = !DILocation(line: 373, column: 26, scope: !12942, inlinedAt: !14048)
!14171 = !DILocation(line: 374, column: 6, scope: !12947, inlinedAt: !14048)
!14172 = !DILocation(line: 374, column: 11, scope: !12947, inlinedAt: !14048)
!14173 = !DILocation(line: 374, column: 6, scope: !12774, inlinedAt: !14048)
!14174 = !DILocation(line: 374, column: 26, scope: !12947, inlinedAt: !14048)
!14175 = !DILocation(line: 375, column: 6, scope: !12952, inlinedAt: !14048)
!14176 = !DILocation(line: 375, column: 11, scope: !12952, inlinedAt: !14048)
!14177 = !DILocation(line: 375, column: 6, scope: !12774, inlinedAt: !14048)
!14178 = !DILocation(line: 375, column: 27, scope: !12952, inlinedAt: !14048)
!14179 = !DILocation(line: 376, column: 6, scope: !12957, inlinedAt: !14048)
!14180 = !DILocation(line: 376, column: 11, scope: !12957, inlinedAt: !14048)
!14181 = !DILocation(line: 376, column: 6, scope: !12774, inlinedAt: !14048)
!14182 = !DILocation(line: 376, column: 32, scope: !12957, inlinedAt: !14048)
!14183 = !DILocation(line: 377, column: 6, scope: !12962, inlinedAt: !14048)
!14184 = !DILocation(line: 377, column: 11, scope: !12962, inlinedAt: !14048)
!14185 = !DILocation(line: 377, column: 6, scope: !12774, inlinedAt: !14048)
!14186 = !DILocation(line: 377, column: 32, scope: !12962, inlinedAt: !14048)
!14187 = !DILocation(line: 378, column: 6, scope: !12967, inlinedAt: !14048)
!14188 = !DILocation(line: 378, column: 11, scope: !12967, inlinedAt: !14048)
!14189 = !DILocation(line: 378, column: 6, scope: !12774, inlinedAt: !14048)
!14190 = !DILocation(line: 378, column: 32, scope: !12967, inlinedAt: !14048)
!14191 = !DILocation(line: 379, column: 6, scope: !12972, inlinedAt: !14048)
!14192 = !DILocation(line: 379, column: 11, scope: !12972, inlinedAt: !14048)
!14193 = !DILocation(line: 379, column: 6, scope: !12774, inlinedAt: !14048)
!14194 = !DILocation(line: 379, column: 33, scope: !12972, inlinedAt: !14048)
!14195 = !DILocation(line: 380, column: 6, scope: !12977, inlinedAt: !14048)
!14196 = !DILocation(line: 380, column: 11, scope: !12977, inlinedAt: !14048)
!14197 = !DILocation(line: 380, column: 6, scope: !12774, inlinedAt: !14048)
!14198 = !DILocation(line: 380, column: 33, scope: !12977, inlinedAt: !14048)
!14199 = !DILocation(line: 381, column: 6, scope: !12982, inlinedAt: !14048)
!14200 = !DILocation(line: 381, column: 11, scope: !12982, inlinedAt: !14048)
!14201 = !DILocation(line: 381, column: 6, scope: !12774, inlinedAt: !14048)
!14202 = !DILocation(line: 381, column: 33, scope: !12982, inlinedAt: !14048)
!14203 = !DILocation(line: 382, column: 2, scope: !12987, inlinedAt: !14048)
!14204 = !DILocation(line: 382, column: 2, scope: !12991, inlinedAt: !14048)
!14205 = !DILocation(line: 382, column: 2, scope: !12992, inlinedAt: !14048)
!14206 = !DILocation(line: 386, column: 1, scope: !12774, inlinedAt: !14048)
!14207 = !DILocation(line: 547, column: 9, scope: !12755, inlinedAt: !14041)
!14208 = !DILocation(line: 549, column: 8, scope: !12998, inlinedAt: !14041)
!14209 = !DILocation(line: 549, column: 7, scope: !12755, inlinedAt: !14041)
!14210 = !DILocation(line: 550, column: 4, scope: !12998, inlinedAt: !14041)
!14211 = !DILocation(line: 553, column: 33, scope: !12755, inlinedAt: !14041)
!14212 = !DILocation(line: 325, column: 6, scope: !13003, inlinedAt: !14046)
!14213 = !DILocation(line: 325, column: 6, scope: !12768, inlinedAt: !14046)
!14214 = !DILocation(line: 326, column: 3, scope: !13003, inlinedAt: !14046)
!14215 = !DILocation(line: 332, column: 9, scope: !12768, inlinedAt: !14046)
!14216 = !DILocation(line: 332, column: 15, scope: !12768, inlinedAt: !14046)
!14217 = !DILocation(line: 332, column: 2, scope: !12768, inlinedAt: !14046)
!14218 = !DILocation(line: 336, column: 1, scope: !12768, inlinedAt: !14046)
!14219 = !DILocation(line: 553, column: 5, scope: !12755, inlinedAt: !14041)
!14220 = !DILocation(line: 553, column: 41, scope: !12755, inlinedAt: !14041)
!14221 = !DILocation(line: 554, column: 5, scope: !12755, inlinedAt: !14041)
!14222 = !DILocation(line: 554, column: 12, scope: !12755, inlinedAt: !14041)
!14223 = !DILocation(line: 448, column: 31, scope: !12750, inlinedAt: !14040)
!14224 = !DILocation(line: 448, column: 34, scope: !12750, inlinedAt: !14040)
!14225 = !DILocation(line: 448, column: 14, scope: !12750, inlinedAt: !14040)
!14226 = !DILocation(line: 450, column: 22, scope: !12750, inlinedAt: !14040)
!14227 = !DILocation(line: 450, column: 25, scope: !12750, inlinedAt: !14040)
!14228 = !DILocation(line: 450, column: 30, scope: !12750, inlinedAt: !14040)
!14229 = !DILocation(line: 450, column: 36, scope: !12750, inlinedAt: !14040)
!14230 = !DILocation(line: 450, column: 8, scope: !12750, inlinedAt: !14040)
!14231 = !DILocation(line: 450, column: 6, scope: !12750, inlinedAt: !14040)
!14232 = !DILocation(line: 451, column: 9, scope: !12750, inlinedAt: !14040)
!14233 = !DILocation(line: 552, column: 3, scope: !12755, inlinedAt: !14041)
!14234 = !DILocation(line: 557, column: 19, scope: !12757, inlinedAt: !14041)
!14235 = !DILocation(line: 557, column: 25, scope: !12757, inlinedAt: !14041)
!14236 = !DILocation(line: 557, column: 9, scope: !12757, inlinedAt: !14041)
!14237 = !DILocation(line: 557, column: 2, scope: !12757, inlinedAt: !14041)
!14238 = !DILocation(line: 558, column: 1, scope: !12757, inlinedAt: !14041)
!14239 = !DILocation(line: 664, column: 2, scope: !14038)
!14240 = distinct !DISubprogram(name: "list_add", scope: !14241, file: !14241, line: 84, type: !14242, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14241 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!14242 = !DISubroutineType(types: !14243)
!14243 = !{null, !448, !448}
!14244 = !DILocalVariable(name: "new", arg: 1, scope: !14240, file: !14241, line: 84, type: !448)
!14245 = !DILocation(line: 84, column: 47, scope: !14240)
!14246 = !DILocalVariable(name: "head", arg: 2, scope: !14240, file: !14241, line: 84, type: !448)
!14247 = !DILocation(line: 84, column: 70, scope: !14240)
!14248 = !DILocation(line: 86, column: 13, scope: !14240)
!14249 = !DILocation(line: 86, column: 18, scope: !14240)
!14250 = !DILocation(line: 86, column: 24, scope: !14240)
!14251 = !DILocation(line: 86, column: 30, scope: !14240)
!14252 = !DILocation(line: 86, column: 2, scope: !14240)
!14253 = !DILocation(line: 87, column: 1, scope: !14240)
!14254 = distinct !DISubprogram(name: "mlxsw_sp_port_vlan_destroy", scope: !3, file: !3, line: 915, type: !14255, scopeLine: 916, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14255 = !DISubroutineType(types: !14256)
!14256 = !{null, !11388}
!14257 = !DILocalVariable(name: "mlxsw_sp_port_vlan", arg: 1, scope: !14254, file: !3, line: 915, type: !11388)
!14258 = !DILocation(line: 915, column: 60, scope: !14254)
!14259 = !DILocalVariable(name: "mlxsw_sp_port", scope: !14254, file: !3, line: 917, type: !10715)
!14260 = !DILocation(line: 917, column: 24, scope: !14254)
!14261 = !DILocation(line: 917, column: 40, scope: !14254)
!14262 = !DILocation(line: 917, column: 60, scope: !14254)
!14263 = !DILocalVariable(name: "vid", scope: !14254, file: !3, line: 918, type: !1193)
!14264 = !DILocation(line: 918, column: 6, scope: !14254)
!14265 = !DILocation(line: 918, column: 12, scope: !14254)
!14266 = !DILocation(line: 918, column: 32, scope: !14254)
!14267 = !DILocation(line: 920, column: 29, scope: !14254)
!14268 = !DILocation(line: 920, column: 2, scope: !14254)
!14269 = !DILocation(line: 921, column: 12, scope: !14254)
!14270 = !DILocation(line: 921, column: 32, scope: !14254)
!14271 = !DILocation(line: 921, column: 2, scope: !14254)
!14272 = !DILocation(line: 922, column: 8, scope: !14254)
!14273 = !DILocation(line: 922, column: 2, scope: !14254)
!14274 = !DILocation(line: 923, column: 25, scope: !14254)
!14275 = !DILocation(line: 923, column: 40, scope: !14254)
!14276 = !DILocation(line: 923, column: 45, scope: !14254)
!14277 = !DILocation(line: 923, column: 2, scope: !14254)
!14278 = !DILocation(line: 924, column: 1, scope: !14254)
!14279 = distinct !DISubprogram(name: "mlxsw_sp_port_vlan_cleanup", scope: !3, file: !3, line: 875, type: !14255, scopeLine: 876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14280 = !DILocalVariable(name: "mlxsw_sp_port_vlan", arg: 1, scope: !14279, file: !3, line: 875, type: !11388)
!14281 = !DILocation(line: 875, column: 55, scope: !14279)
!14282 = !DILocation(line: 877, column: 6, scope: !14283)
!14283 = distinct !DILexicalBlock(scope: !14279, file: !3, line: 877, column: 6)
!14284 = !DILocation(line: 877, column: 26, scope: !14283)
!14285 = !DILocation(line: 877, column: 6, scope: !14279)
!14286 = !DILocation(line: 878, column: 35, scope: !14283)
!14287 = !DILocation(line: 878, column: 3, scope: !14283)
!14288 = !DILocation(line: 879, column: 11, scope: !14289)
!14289 = distinct !DILexicalBlock(scope: !14283, file: !3, line: 879, column: 11)
!14290 = !DILocation(line: 879, column: 31, scope: !14289)
!14291 = !DILocation(line: 879, column: 11, scope: !14283)
!14292 = !DILocation(line: 880, column: 35, scope: !14289)
!14293 = !DILocation(line: 880, column: 3, scope: !14289)
!14294 = !DILocation(line: 881, column: 1, scope: !14279)
!14295 = distinct !DISubprogram(name: "list_del", scope: !14241, file: !14241, line: 144, type: !14296, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14296 = !DISubroutineType(types: !14297)
!14297 = !{null, !448}
!14298 = !DILocalVariable(name: "entry", arg: 1, scope: !14295, file: !14241, line: 144, type: !448)
!14299 = !DILocation(line: 144, column: 47, scope: !14295)
!14300 = !DILocation(line: 146, column: 19, scope: !14295)
!14301 = !DILocation(line: 146, column: 2, scope: !14295)
!14302 = !DILocation(line: 147, column: 2, scope: !14295)
!14303 = !DILocation(line: 147, column: 9, scope: !14295)
!14304 = !DILocation(line: 147, column: 14, scope: !14295)
!14305 = !DILocation(line: 148, column: 2, scope: !14295)
!14306 = !DILocation(line: 148, column: 9, scope: !14295)
!14307 = !DILocation(line: 148, column: 14, scope: !14295)
!14308 = !DILocation(line: 149, column: 1, scope: !14295)
!14309 = distinct !DISubprogram(name: "mlxsw_sp_port_speed_get", scope: !3, file: !3, line: 1200, type: !11166, scopeLine: 1201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14310 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !14309, file: !3, line: 1200, type: !10715)
!14311 = !DILocation(line: 1200, column: 51, scope: !14309)
!14312 = !DILocalVariable(name: "speed", arg: 2, scope: !14309, file: !3, line: 1200, type: !1615)
!14313 = !DILocation(line: 1200, column: 71, scope: !14309)
!14314 = !DILocalVariable(name: "port_type_speed_ops", scope: !14309, file: !3, line: 1202, type: !11144)
!14315 = !DILocation(line: 1202, column: 45, scope: !14309)
!14316 = !DILocalVariable(name: "mlxsw_sp", scope: !14309, file: !3, line: 1203, type: !10721)
!14317 = !DILocation(line: 1203, column: 19, scope: !14309)
!14318 = !DILocation(line: 1203, column: 30, scope: !14309)
!14319 = !DILocation(line: 1203, column: 45, scope: !14309)
!14320 = !DILocalVariable(name: "ptys_pl", scope: !14309, file: !3, line: 1204, type: !5296)
!14321 = !DILocation(line: 1204, column: 7, scope: !14309)
!14322 = !DILocalVariable(name: "eth_proto_oper", scope: !14309, file: !3, line: 1205, type: !862)
!14323 = !DILocation(line: 1205, column: 6, scope: !14309)
!14324 = !DILocalVariable(name: "err", scope: !14309, file: !3, line: 1206, type: !7)
!14325 = !DILocation(line: 1206, column: 6, scope: !14309)
!14326 = !DILocation(line: 1208, column: 24, scope: !14309)
!14327 = !DILocation(line: 1208, column: 34, scope: !14309)
!14328 = !DILocation(line: 1208, column: 22, scope: !14309)
!14329 = !DILocation(line: 1209, column: 2, scope: !14309)
!14330 = !DILocation(line: 1209, column: 23, scope: !14309)
!14331 = !DILocation(line: 1209, column: 41, scope: !14309)
!14332 = !DILocation(line: 1209, column: 51, scope: !14309)
!14333 = !DILocation(line: 1210, column: 13, scope: !14309)
!14334 = !DILocation(line: 1210, column: 28, scope: !14309)
!14335 = !DILocation(line: 1212, column: 24, scope: !14309)
!14336 = !DILocation(line: 1212, column: 34, scope: !14309)
!14337 = !DILocation(line: 1212, column: 57, scope: !14309)
!14338 = !DILocation(line: 1212, column: 8, scope: !14309)
!14339 = !DILocation(line: 1212, column: 6, scope: !14309)
!14340 = !DILocation(line: 1213, column: 6, scope: !14341)
!14341 = distinct !DILexicalBlock(scope: !14309, file: !3, line: 1213, column: 6)
!14342 = !DILocation(line: 1213, column: 6, scope: !14309)
!14343 = !DILocation(line: 1214, column: 10, scope: !14341)
!14344 = !DILocation(line: 1214, column: 3, scope: !14341)
!14345 = !DILocation(line: 1215, column: 2, scope: !14309)
!14346 = !DILocation(line: 1215, column: 23, scope: !14309)
!14347 = !DILocation(line: 1215, column: 43, scope: !14309)
!14348 = !DILocation(line: 1215, column: 53, scope: !14309)
!14349 = !DILocation(line: 1217, column: 11, scope: !14309)
!14350 = !DILocation(line: 1217, column: 32, scope: !14309)
!14351 = !DILocation(line: 1217, column: 48, scope: !14309)
!14352 = !DILocation(line: 1217, column: 58, scope: !14309)
!14353 = !DILocation(line: 1217, column: 3, scope: !14309)
!14354 = !DILocation(line: 1217, column: 9, scope: !14309)
!14355 = !DILocation(line: 1218, column: 2, scope: !14309)
!14356 = !DILocation(line: 1219, column: 1, scope: !14309)
!14357 = distinct !DISubprogram(name: "mlxsw_sp_port_ets_set", scope: !3, file: !3, line: 1221, type: !14358, scopeLine: 1224, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14358 = !DISubroutineType(types: !14359)
!14359 = !{!7, !10715, !10227, !1552, !1552, !696, !1552}
!14360 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !14357, file: !3, line: 1221, type: !10715)
!14361 = !DILocation(line: 1221, column: 49, scope: !14357)
!14362 = !DILocalVariable(name: "hr", arg: 2, scope: !14357, file: !3, line: 1222, type: !10227)
!14363 = !DILocation(line: 1222, column: 29, scope: !14357)
!14364 = !DILocalVariable(name: "index", arg: 3, scope: !14357, file: !3, line: 1222, type: !1552)
!14365 = !DILocation(line: 1222, column: 36, scope: !14357)
!14366 = !DILocalVariable(name: "next_index", arg: 4, scope: !14357, file: !3, line: 1222, type: !1552)
!14367 = !DILocation(line: 1222, column: 46, scope: !14357)
!14368 = !DILocalVariable(name: "dwrr", arg: 5, scope: !14357, file: !3, line: 1223, type: !696)
!14369 = !DILocation(line: 1223, column: 11, scope: !14357)
!14370 = !DILocalVariable(name: "dwrr_weight", arg: 6, scope: !14357, file: !3, line: 1223, type: !1552)
!14371 = !DILocation(line: 1223, column: 20, scope: !14357)
!14372 = !DILocalVariable(name: "mlxsw_sp", scope: !14357, file: !3, line: 1225, type: !10721)
!14373 = !DILocation(line: 1225, column: 19, scope: !14357)
!14374 = !DILocation(line: 1225, column: 30, scope: !14357)
!14375 = !DILocation(line: 1225, column: 45, scope: !14357)
!14376 = !DILocalVariable(name: "qeec_pl", scope: !14357, file: !3, line: 1226, type: !4356)
!14377 = !DILocation(line: 1226, column: 7, scope: !14357)
!14378 = !DILocation(line: 1228, column: 22, scope: !14357)
!14379 = !DILocation(line: 1228, column: 31, scope: !14357)
!14380 = !DILocation(line: 1228, column: 46, scope: !14357)
!14381 = !DILocation(line: 1228, column: 58, scope: !14357)
!14382 = !DILocation(line: 1228, column: 62, scope: !14357)
!14383 = !DILocation(line: 1229, column: 8, scope: !14357)
!14384 = !DILocation(line: 1228, column: 2, scope: !14357)
!14385 = !DILocation(line: 1230, column: 24, scope: !14357)
!14386 = !DILocation(line: 1230, column: 2, scope: !14357)
!14387 = !DILocation(line: 1231, column: 26, scope: !14357)
!14388 = !DILocation(line: 1231, column: 35, scope: !14357)
!14389 = !DILocation(line: 1231, column: 2, scope: !14357)
!14390 = !DILocation(line: 1232, column: 33, scope: !14357)
!14391 = !DILocation(line: 1232, column: 42, scope: !14357)
!14392 = !DILocation(line: 1232, column: 2, scope: !14357)
!14393 = !DILocation(line: 1233, column: 25, scope: !14357)
!14394 = !DILocation(line: 1233, column: 35, scope: !14357)
!14395 = !DILocation(line: 1233, column: 58, scope: !14357)
!14396 = !DILocation(line: 1233, column: 9, scope: !14357)
!14397 = !DILocation(line: 1233, column: 2, scope: !14357)
!14398 = distinct !DISubprogram(name: "mlxsw_reg_qeec_pack", scope: !10113, file: !10113, line: 3646, type: !14399, scopeLine: 3649, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14399 = !DISubroutineType(types: !14400)
!14400 = !{null, !733, !1552, !10227, !1552, !1552}
!14401 = !DILocalVariable(name: "payload", arg: 1, scope: !14398, file: !10113, line: 3646, type: !733)
!14402 = !DILocation(line: 3646, column: 46, scope: !14398)
!14403 = !DILocalVariable(name: "local_port", arg: 2, scope: !14398, file: !10113, line: 3646, type: !1552)
!14404 = !DILocation(line: 3646, column: 58, scope: !14398)
!14405 = !DILocalVariable(name: "hr", arg: 3, scope: !14398, file: !10113, line: 3647, type: !10227)
!14406 = !DILocation(line: 3647, column: 35, scope: !14398)
!14407 = !DILocalVariable(name: "index", arg: 4, scope: !14398, file: !10113, line: 3647, type: !1552)
!14408 = !DILocation(line: 3647, column: 42, scope: !14398)
!14409 = !DILocalVariable(name: "next_index", arg: 5, scope: !14398, file: !10113, line: 3648, type: !1552)
!14410 = !DILocation(line: 3648, column: 15, scope: !14398)
!14411 = !DILocation(line: 3650, column: 2, scope: !14398)
!14412 = !DILocation(line: 3651, column: 32, scope: !14398)
!14413 = !DILocation(line: 3651, column: 41, scope: !14398)
!14414 = !DILocation(line: 3651, column: 2, scope: !14398)
!14415 = !DILocation(line: 3652, column: 39, scope: !14398)
!14416 = !DILocation(line: 3652, column: 48, scope: !14398)
!14417 = !DILocation(line: 3652, column: 2, scope: !14398)
!14418 = !DILocation(line: 3653, column: 35, scope: !14398)
!14419 = !DILocation(line: 3653, column: 44, scope: !14398)
!14420 = !DILocation(line: 3653, column: 2, scope: !14398)
!14421 = !DILocation(line: 3654, column: 40, scope: !14398)
!14422 = !DILocation(line: 3654, column: 49, scope: !14398)
!14423 = !DILocation(line: 3654, column: 2, scope: !14398)
!14424 = !DILocation(line: 3655, column: 1, scope: !14398)
!14425 = distinct !DISubprogram(name: "mlxsw_reg_qeec_de_set", scope: !10113, file: !10113, line: 3610, type: !14426, scopeLine: 3610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14426 = !DISubroutineType(types: !14427)
!14427 = !{null, !733, !862}
!14428 = !DILocalVariable(name: "buf", arg: 1, scope: !14425, file: !10113, line: 3610, type: !733)
!14429 = !DILocation(line: 3610, column: 1, scope: !14425)
!14430 = !DILocalVariable(name: "val", arg: 2, scope: !14425, file: !10113, line: 3610, type: !862)
!14431 = distinct !DISubprogram(name: "mlxsw_reg_qeec_dwrr_set", scope: !10113, file: !10113, line: 3619, type: !14426, scopeLine: 3619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14432 = !DILocalVariable(name: "buf", arg: 1, scope: !14431, file: !10113, line: 3619, type: !733)
!14433 = !DILocation(line: 3619, column: 1, scope: !14431)
!14434 = !DILocalVariable(name: "val", arg: 2, scope: !14431, file: !10113, line: 3619, type: !862)
!14435 = distinct !DISubprogram(name: "mlxsw_reg_qeec_dwrr_weight_set", scope: !10113, file: !10113, line: 3629, type: !14426, scopeLine: 3629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14436 = !DILocalVariable(name: "buf", arg: 1, scope: !14435, file: !10113, line: 3629, type: !733)
!14437 = !DILocation(line: 3629, column: 1, scope: !14435)
!14438 = !DILocalVariable(name: "val", arg: 2, scope: !14435, file: !10113, line: 3629, type: !862)
!14439 = distinct !DISubprogram(name: "mlxsw_sp_port_ets_maxrate_set", scope: !3, file: !3, line: 1236, type: !14440, scopeLine: 1239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14440 = !DISubroutineType(types: !14441)
!14441 = !{!7, !10715, !10227, !1552, !1552, !862, !1552}
!14442 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !14439, file: !3, line: 1236, type: !10715)
!14443 = !DILocation(line: 1236, column: 57, scope: !14439)
!14444 = !DILocalVariable(name: "hr", arg: 2, scope: !14439, file: !3, line: 1237, type: !10227)
!14445 = !DILocation(line: 1237, column: 30, scope: !14439)
!14446 = !DILocalVariable(name: "index", arg: 3, scope: !14439, file: !3, line: 1237, type: !1552)
!14447 = !DILocation(line: 1237, column: 37, scope: !14439)
!14448 = !DILocalVariable(name: "next_index", arg: 4, scope: !14439, file: !3, line: 1238, type: !1552)
!14449 = !DILocation(line: 1238, column: 10, scope: !14439)
!14450 = !DILocalVariable(name: "maxrate", arg: 5, scope: !14439, file: !3, line: 1238, type: !862)
!14451 = !DILocation(line: 1238, column: 26, scope: !14439)
!14452 = !DILocalVariable(name: "burst_size", arg: 6, scope: !14439, file: !3, line: 1238, type: !1552)
!14453 = !DILocation(line: 1238, column: 38, scope: !14439)
!14454 = !DILocalVariable(name: "mlxsw_sp", scope: !14439, file: !3, line: 1240, type: !10721)
!14455 = !DILocation(line: 1240, column: 19, scope: !14439)
!14456 = !DILocation(line: 1240, column: 30, scope: !14439)
!14457 = !DILocation(line: 1240, column: 45, scope: !14439)
!14458 = !DILocalVariable(name: "qeec_pl", scope: !14439, file: !3, line: 1241, type: !4356)
!14459 = !DILocation(line: 1241, column: 7, scope: !14439)
!14460 = !DILocation(line: 1243, column: 22, scope: !14439)
!14461 = !DILocation(line: 1243, column: 31, scope: !14439)
!14462 = !DILocation(line: 1243, column: 46, scope: !14439)
!14463 = !DILocation(line: 1243, column: 58, scope: !14439)
!14464 = !DILocation(line: 1243, column: 62, scope: !14439)
!14465 = !DILocation(line: 1244, column: 8, scope: !14439)
!14466 = !DILocation(line: 1243, column: 2, scope: !14439)
!14467 = !DILocation(line: 1245, column: 26, scope: !14439)
!14468 = !DILocation(line: 1245, column: 2, scope: !14439)
!14469 = !DILocation(line: 1246, column: 37, scope: !14439)
!14470 = !DILocation(line: 1246, column: 46, scope: !14439)
!14471 = !DILocation(line: 1246, column: 2, scope: !14439)
!14472 = !DILocation(line: 1247, column: 35, scope: !14439)
!14473 = !DILocation(line: 1247, column: 44, scope: !14439)
!14474 = !DILocation(line: 1247, column: 2, scope: !14439)
!14475 = !DILocation(line: 1248, column: 25, scope: !14439)
!14476 = !DILocation(line: 1248, column: 35, scope: !14439)
!14477 = !DILocation(line: 1248, column: 58, scope: !14439)
!14478 = !DILocation(line: 1248, column: 9, scope: !14439)
!14479 = !DILocation(line: 1248, column: 2, scope: !14439)
!14480 = distinct !DISubprogram(name: "mlxsw_reg_qeec_mase_set", scope: !10113, file: !10113, line: 3590, type: !14426, scopeLine: 3590, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14481 = !DILocalVariable(name: "buf", arg: 1, scope: !14480, file: !10113, line: 3590, type: !733)
!14482 = !DILocation(line: 3590, column: 1, scope: !14480)
!14483 = !DILocalVariable(name: "val", arg: 2, scope: !14480, file: !10113, line: 3590, type: !862)
!14484 = distinct !DISubprogram(name: "mlxsw_reg_qeec_max_shaper_rate_set", scope: !10113, file: !10113, line: 3601, type: !14426, scopeLine: 3601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14485 = !DILocalVariable(name: "buf", arg: 1, scope: !14484, file: !10113, line: 3601, type: !733)
!14486 = !DILocation(line: 3601, column: 1, scope: !14484)
!14487 = !DILocalVariable(name: "val", arg: 2, scope: !14484, file: !10113, line: 3601, type: !862)
!14488 = distinct !DISubprogram(name: "mlxsw_reg_qeec_max_shaper_bs_set", scope: !10113, file: !10113, line: 3639, type: !14426, scopeLine: 3639, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14489 = !DILocalVariable(name: "buf", arg: 1, scope: !14488, file: !10113, line: 3639, type: !733)
!14490 = !DILocation(line: 3639, column: 1, scope: !14488)
!14491 = !DILocalVariable(name: "val", arg: 2, scope: !14488, file: !10113, line: 3639, type: !862)
!14492 = distinct !DISubprogram(name: "mlxsw_sp_port_prio_tc_set", scope: !3, file: !3, line: 1266, type: !14493, scopeLine: 1268, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14493 = !DISubroutineType(types: !14494)
!14494 = !{!7, !10715, !1552, !1552}
!14495 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !14492, file: !3, line: 1266, type: !10715)
!14496 = !DILocation(line: 1266, column: 53, scope: !14492)
!14497 = !DILocalVariable(name: "switch_prio", arg: 2, scope: !14492, file: !3, line: 1267, type: !1552)
!14498 = !DILocation(line: 1267, column: 13, scope: !14492)
!14499 = !DILocalVariable(name: "tclass", arg: 3, scope: !14492, file: !3, line: 1267, type: !1552)
!14500 = !DILocation(line: 1267, column: 29, scope: !14492)
!14501 = !DILocalVariable(name: "mlxsw_sp", scope: !14492, file: !3, line: 1269, type: !10721)
!14502 = !DILocation(line: 1269, column: 19, scope: !14492)
!14503 = !DILocation(line: 1269, column: 30, scope: !14492)
!14504 = !DILocation(line: 1269, column: 45, scope: !14492)
!14505 = !DILocalVariable(name: "qtct_pl", scope: !14492, file: !3, line: 1270, type: !6009)
!14506 = !DILocation(line: 1270, column: 7, scope: !14492)
!14507 = !DILocation(line: 1272, column: 22, scope: !14492)
!14508 = !DILocation(line: 1272, column: 31, scope: !14492)
!14509 = !DILocation(line: 1272, column: 46, scope: !14492)
!14510 = !DILocation(line: 1272, column: 58, scope: !14492)
!14511 = !DILocation(line: 1273, column: 8, scope: !14492)
!14512 = !DILocation(line: 1272, column: 2, scope: !14492)
!14513 = !DILocation(line: 1274, column: 25, scope: !14492)
!14514 = !DILocation(line: 1274, column: 35, scope: !14492)
!14515 = !DILocation(line: 1274, column: 58, scope: !14492)
!14516 = !DILocation(line: 1274, column: 9, scope: !14492)
!14517 = !DILocation(line: 1274, column: 2, scope: !14492)
!14518 = distinct !DISubprogram(name: "mlxsw_reg_qtct_pack", scope: !10113, file: !10113, line: 3479, type: !14519, scopeLine: 3481, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14519 = !DISubroutineType(types: !14520)
!14520 = !{null, !733, !1552, !1552, !1552}
!14521 = !DILocalVariable(name: "payload", arg: 1, scope: !14518, file: !10113, line: 3479, type: !733)
!14522 = !DILocation(line: 3479, column: 46, scope: !14518)
!14523 = !DILocalVariable(name: "local_port", arg: 2, scope: !14518, file: !10113, line: 3479, type: !1552)
!14524 = !DILocation(line: 3479, column: 58, scope: !14518)
!14525 = !DILocalVariable(name: "switch_prio", arg: 3, scope: !14518, file: !10113, line: 3480, type: !1552)
!14526 = !DILocation(line: 3480, column: 15, scope: !14518)
!14527 = !DILocalVariable(name: "tclass", arg: 4, scope: !14518, file: !10113, line: 3480, type: !1552)
!14528 = !DILocation(line: 3480, column: 31, scope: !14518)
!14529 = !DILocation(line: 3482, column: 2, scope: !14518)
!14530 = !DILocation(line: 3483, column: 32, scope: !14518)
!14531 = !DILocation(line: 3483, column: 41, scope: !14518)
!14532 = !DILocation(line: 3483, column: 2, scope: !14518)
!14533 = !DILocation(line: 3484, column: 33, scope: !14518)
!14534 = !DILocation(line: 3484, column: 42, scope: !14518)
!14535 = !DILocation(line: 3484, column: 2, scope: !14518)
!14536 = !DILocation(line: 3485, column: 28, scope: !14518)
!14537 = !DILocation(line: 3485, column: 37, scope: !14518)
!14538 = !DILocation(line: 3485, column: 2, scope: !14518)
!14539 = !DILocation(line: 3486, column: 1, scope: !14518)
!14540 = !DILocalVariable(name: "skb", arg: 1, scope: !11542, file: !3, line: 2114, type: !576)
!14541 = !DILocation(line: 2114, column: 56, scope: !11542)
!14542 = !DILocalVariable(name: "local_port", arg: 2, scope: !11542, file: !3, line: 2115, type: !1552)
!14543 = !DILocation(line: 2115, column: 15, scope: !11542)
!14544 = !DILocalVariable(name: "priv", arg: 3, scope: !11542, file: !3, line: 2115, type: !726)
!14545 = !DILocation(line: 2115, column: 33, scope: !11542)
!14546 = !DILocalVariable(name: "mlxsw_sp", scope: !11542, file: !3, line: 2117, type: !10721)
!14547 = !DILocation(line: 2117, column: 19, scope: !11542)
!14548 = !DILocation(line: 2117, column: 30, scope: !11542)
!14549 = !DILocalVariable(name: "mlxsw_sp_port", scope: !11542, file: !3, line: 2118, type: !10715)
!14550 = !DILocation(line: 2118, column: 24, scope: !11542)
!14551 = !DILocation(line: 2118, column: 40, scope: !11542)
!14552 = !DILocation(line: 2118, column: 50, scope: !11542)
!14553 = !DILocation(line: 2118, column: 56, scope: !11542)
!14554 = !DILocalVariable(name: "pcpu_stats", scope: !11542, file: !3, line: 2119, type: !10686)
!14555 = !DILocation(line: 2119, column: 35, scope: !11542)
!14556 = !DILocation(line: 2121, column: 6, scope: !14557)
!14557 = distinct !DILexicalBlock(scope: !11542, file: !3, line: 2121, column: 6)
!14558 = !DILocation(line: 2121, column: 6, scope: !11542)
!14559 = !DILocation(line: 2122, column: 3, scope: !14560)
!14560 = distinct !DILexicalBlock(scope: !14557, file: !3, line: 2121, column: 32)
!14561 = !DILocation(line: 2122, column: 3, scope: !14562)
!14562 = distinct !DILexicalBlock(scope: !14563, file: !3, line: 2122, column: 3)
!14563 = distinct !DILexicalBlock(scope: !14560, file: !3, line: 2122, column: 3)
!14564 = !DILocation(line: 2122, column: 3, scope: !14563)
!14565 = !DILocation(line: 2124, column: 3, scope: !14560)
!14566 = !DILocation(line: 2127, column: 13, scope: !11542)
!14567 = !DILocation(line: 2127, column: 28, scope: !11542)
!14568 = !DILocation(line: 2127, column: 2, scope: !11542)
!14569 = !DILocation(line: 2127, column: 7, scope: !11542)
!14570 = !DILocation(line: 2127, column: 11, scope: !11542)
!14571 = !DILocation(line: 2129, column: 15, scope: !14572)
!14572 = distinct !DILexicalBlock(scope: !14573, file: !3, line: 2129, column: 15)
!14573 = distinct !DILexicalBlock(scope: !11542, file: !3, line: 2129, column: 15)
!14574 = !DILocalVariable(name: "__vpp_verify", scope: !14575, file: !3, line: 2129, type: !2424)
!14575 = distinct !DILexicalBlock(scope: !14572, file: !3, line: 2129, column: 15)
!14576 = !DILocation(line: 2129, column: 15, scope: !14575)
!14577 = !DILocation(line: 2129, column: 15, scope: !14573)
!14578 = !DILocation(line: 2129, column: 13, scope: !11542)
!14579 = !DILocation(line: 2130, column: 26, scope: !11542)
!14580 = !DILocation(line: 2130, column: 38, scope: !11542)
!14581 = !DILocation(line: 2130, column: 2, scope: !11542)
!14582 = !DILocation(line: 2131, column: 2, scope: !11542)
!14583 = !DILocation(line: 2131, column: 14, scope: !11542)
!14584 = !DILocation(line: 2131, column: 24, scope: !11542)
!14585 = !DILocation(line: 2132, column: 26, scope: !11542)
!14586 = !DILocation(line: 2132, column: 31, scope: !11542)
!14587 = !DILocation(line: 2132, column: 2, scope: !11542)
!14588 = !DILocation(line: 2132, column: 14, scope: !11542)
!14589 = !DILocation(line: 2132, column: 23, scope: !11542)
!14590 = !DILocation(line: 2133, column: 24, scope: !11542)
!14591 = !DILocation(line: 2133, column: 36, scope: !11542)
!14592 = !DILocation(line: 2133, column: 2, scope: !11542)
!14593 = !DILocation(line: 2135, column: 33, scope: !11542)
!14594 = !DILocation(line: 2135, column: 38, scope: !11542)
!14595 = !DILocation(line: 2135, column: 43, scope: !11542)
!14596 = !DILocation(line: 2135, column: 18, scope: !11542)
!14597 = !DILocation(line: 2135, column: 2, scope: !11542)
!14598 = !DILocation(line: 2135, column: 7, scope: !11542)
!14599 = !DILocation(line: 2135, column: 16, scope: !11542)
!14600 = !DILocation(line: 2136, column: 20, scope: !11542)
!14601 = !DILocation(line: 2136, column: 2, scope: !11542)
!14602 = !DILocation(line: 2137, column: 1, scope: !11542)
!14603 = distinct !DISubprogram(name: "u64_stats_update_begin", scope: !2213, file: !2213, line: 125, type: !14604, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14604 = !DISubroutineType(types: !14605)
!14605 = !{null, !14606}
!14606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 64)
!14607 = !DILocalVariable(name: "syncp", arg: 1, scope: !14603, file: !2213, line: 125, type: !14606)
!14608 = !DILocation(line: 125, column: 66, scope: !14603)
!14609 = !DILocation(line: 130, column: 1, scope: !14603)
!14610 = distinct !DISubprogram(name: "u64_stats_update_end", scope: !2213, file: !2213, line: 132, type: !14604, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14611 = !DILocalVariable(name: "syncp", arg: 1, scope: !14610, file: !2213, line: 132, type: !14606)
!14612 = !DILocation(line: 132, column: 64, scope: !14610)
!14613 = !DILocation(line: 137, column: 1, scope: !14610)
!14614 = distinct !DISubprogram(name: "mlxsw_sp_ptp_receive", scope: !3, file: !3, line: 2154, type: !11211, scopeLine: 2156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14615 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !14614, file: !3, line: 2154, type: !10721)
!14616 = !DILocation(line: 2154, column: 44, scope: !14614)
!14617 = !DILocalVariable(name: "skb", arg: 2, scope: !14614, file: !3, line: 2154, type: !576)
!14618 = !DILocation(line: 2154, column: 70, scope: !14614)
!14619 = !DILocalVariable(name: "local_port", arg: 3, scope: !14614, file: !3, line: 2155, type: !1552)
!14620 = !DILocation(line: 2155, column: 9, scope: !14614)
!14621 = !DILocation(line: 2157, column: 2, scope: !14614)
!14622 = !DILocation(line: 2157, column: 12, scope: !14614)
!14623 = !DILocation(line: 2157, column: 21, scope: !14614)
!14624 = !DILocation(line: 2157, column: 29, scope: !14614)
!14625 = !DILocation(line: 2157, column: 39, scope: !14614)
!14626 = !DILocation(line: 2157, column: 44, scope: !14614)
!14627 = !DILocation(line: 2158, column: 1, scope: !14614)
!14628 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !11545, file: !3, line: 2160, type: !10721)
!14629 = !DILocation(line: 2160, column: 47, scope: !11545)
!14630 = !DILocalVariable(name: "skb", arg: 2, scope: !11545, file: !3, line: 2160, type: !576)
!14631 = !DILocation(line: 2160, column: 73, scope: !11545)
!14632 = !DILocalVariable(name: "local_port", arg: 3, scope: !11545, file: !3, line: 2161, type: !1552)
!14633 = !DILocation(line: 2161, column: 12, scope: !11545)
!14634 = !DILocalVariable(name: "mlxsw_sp_port", scope: !11545, file: !3, line: 2163, type: !10715)
!14635 = !DILocation(line: 2163, column: 24, scope: !11545)
!14636 = !DILocation(line: 2163, column: 40, scope: !11545)
!14637 = !DILocation(line: 2163, column: 50, scope: !11545)
!14638 = !DILocation(line: 2163, column: 56, scope: !11545)
!14639 = !DILocalVariable(name: "sample", scope: !11545, file: !3, line: 2164, type: !10695)
!14640 = !DILocation(line: 2164, column: 31, scope: !11545)
!14641 = !DILocalVariable(name: "size", scope: !11545, file: !3, line: 2165, type: !862)
!14642 = !DILocation(line: 2165, column: 6, scope: !11545)
!14643 = !DILocation(line: 2167, column: 6, scope: !14644)
!14644 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 2167, column: 6)
!14645 = !DILocation(line: 2167, column: 6, scope: !11545)
!14646 = !DILocation(line: 2168, column: 3, scope: !14647)
!14647 = distinct !DILexicalBlock(scope: !14644, file: !3, line: 2167, column: 32)
!14648 = !DILocation(line: 2168, column: 3, scope: !14649)
!14649 = distinct !DILexicalBlock(scope: !14650, file: !3, line: 2168, column: 3)
!14650 = distinct !DILexicalBlock(scope: !14647, file: !3, line: 2168, column: 3)
!14651 = !DILocation(line: 2168, column: 3, scope: !14650)
!14652 = !DILocation(line: 2170, column: 3, scope: !14647)
!14653 = !DILocation(line: 639, column: 2, scope: !14654, inlinedAt: !14656)
!14654 = distinct !DISubprogram(name: "rcu_read_lock", scope: !14655, file: !14655, line: 637, type: !4299, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14655 = !DIFile(filename: "./include/linux/rcupdate.h", directory: "/home/lizy2001/genbc/linux")
!14656 = distinct !DILocation(line: 2173, column: 2, scope: !11545)
!14657 = !DILocalVariable(name: "________p1", scope: !14658, file: !3, line: 2174, type: !10695)
!14658 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 2174, column: 11)
!14659 = !DILocation(line: 2174, column: 11, scope: !14658)
!14660 = !DILocation(line: 2174, column: 11, scope: !14661)
!14661 = distinct !DILexicalBlock(scope: !14658, file: !3, line: 2174, column: 11)
!14662 = !DILocation(line: 2174, column: 11, scope: !14663)
!14663 = distinct !DILexicalBlock(scope: !14661, file: !3, line: 2174, column: 11)
!14664 = !DILocation(line: 2174, column: 11, scope: !14665)
!14665 = distinct !DILexicalBlock(scope: !14658, file: !3, line: 2174, column: 11)
!14666 = !DILocation(line: 2174, column: 9, scope: !11545)
!14667 = !DILocation(line: 2175, column: 7, scope: !14668)
!14668 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 2175, column: 6)
!14669 = !DILocation(line: 2175, column: 6, scope: !11545)
!14670 = !DILocation(line: 2176, column: 3, scope: !14668)
!14671 = !DILocation(line: 2177, column: 9, scope: !11545)
!14672 = !DILocation(line: 2177, column: 17, scope: !11545)
!14673 = !DILocation(line: 2177, column: 28, scope: !11545)
!14674 = !DILocation(line: 2177, column: 36, scope: !11545)
!14675 = !DILocation(line: 2177, column: 49, scope: !11545)
!14676 = !DILocation(line: 2177, column: 54, scope: !11545)
!14677 = !DILocation(line: 2177, column: 7, scope: !11545)
!14678 = !DILocation(line: 2178, column: 24, scope: !11545)
!14679 = !DILocation(line: 2178, column: 32, scope: !11545)
!14680 = !DILocation(line: 2178, column: 47, scope: !11545)
!14681 = !DILocation(line: 2178, column: 52, scope: !11545)
!14682 = !DILocation(line: 2179, column: 10, scope: !11545)
!14683 = !DILocation(line: 2179, column: 25, scope: !11545)
!14684 = !DILocation(line: 2179, column: 30, scope: !11545)
!14685 = !DILocation(line: 2179, column: 42, scope: !11545)
!14686 = !DILocation(line: 2179, column: 50, scope: !11545)
!14687 = !DILocation(line: 2178, column: 2, scope: !11545)
!14688 = !DILabel(scope: !11545, name: "out_unlock", file: !3, line: 2180)
!14689 = !DILocation(line: 2180, column: 1, scope: !11545)
!14690 = !DILocation(line: 2181, column: 2, scope: !11545)
!14691 = !DILabel(scope: !11545, name: "out", file: !3, line: 2182)
!14692 = !DILocation(line: 2182, column: 1, scope: !11545)
!14693 = !DILocation(line: 2183, column: 14, scope: !11545)
!14694 = !DILocation(line: 2183, column: 2, scope: !11545)
!14695 = !DILocation(line: 2184, column: 1, scope: !11545)
!14696 = distinct !DISubprogram(name: "psample_sample_packet", scope: !10701, file: !10701, line: 29, type: !14697, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14697 = !DISubroutineType(types: !14698)
!14698 = !{null, !10699, !576, !862, !7, !7, !862}
!14699 = !DILocalVariable(name: "group", arg: 1, scope: !14696, file: !10701, line: 29, type: !10699)
!14700 = !DILocation(line: 29, column: 64, scope: !14696)
!14701 = !DILocalVariable(name: "skb", arg: 2, scope: !14696, file: !10701, line: 30, type: !576)
!14702 = !DILocation(line: 30, column: 23, scope: !14696)
!14703 = !DILocalVariable(name: "trunc_size", arg: 3, scope: !14696, file: !10701, line: 30, type: !862)
!14704 = !DILocation(line: 30, column: 32, scope: !14696)
!14705 = !DILocalVariable(name: "in_ifindex", arg: 4, scope: !14696, file: !10701, line: 31, type: !7)
!14706 = !DILocation(line: 31, column: 11, scope: !14696)
!14707 = !DILocalVariable(name: "out_ifindex", arg: 5, scope: !14696, file: !10701, line: 31, type: !7)
!14708 = !DILocation(line: 31, column: 27, scope: !14696)
!14709 = !DILocalVariable(name: "sample_rate", arg: 6, scope: !14696, file: !10701, line: 32, type: !862)
!14710 = !DILocation(line: 32, column: 11, scope: !14696)
!14711 = !DILocation(line: 34, column: 1, scope: !14696)
!14712 = distinct !DISubprogram(name: "rcu_read_unlock", scope: !14655, file: !14655, line: 689, type: !4299, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14713 = !DILocation(line: 691, column: 2, scope: !14712)
!14714 = !DILocation(line: 691, column: 2, scope: !14715)
!14715 = distinct !DILexicalBlock(scope: !14712, file: !14655, line: 691, column: 2)
!14716 = !DILocation(line: 694, column: 2, scope: !14712)
!14717 = !DILocation(line: 695, column: 2, scope: !14712)
!14718 = !DILocation(line: 695, column: 2, scope: !14719)
!14719 = distinct !DILexicalBlock(scope: !14712, file: !14655, line: 695, column: 2)
!14720 = !DILocation(line: 696, column: 1, scope: !14712)
!14721 = distinct !DISubprogram(name: "consume_skb", scope: !578, file: !578, line: 1063, type: !2991, scopeLine: 1064, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14722 = !DILocalVariable(name: "skb", arg: 1, scope: !14721, file: !578, line: 1063, type: !576)
!14723 = !DILocation(line: 1063, column: 48, scope: !14721)
!14724 = !DILocation(line: 1065, column: 19, scope: !14721)
!14725 = !DILocation(line: 1065, column: 9, scope: !14721)
!14726 = !DILocation(line: 1065, column: 2, scope: !14721)
!14727 = distinct !DISubprogram(name: "mlxsw_sp_port_dev_check", scope: !3, file: !3, line: 3331, type: !14728, scopeLine: 3332, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14728 = !DISubroutineType(types: !14729)
!14729 = !{!696, !3023}
!14730 = !DILocalVariable(name: "dev", arg: 1, scope: !14727, file: !3, line: 3331, type: !3023)
!14731 = !DILocation(line: 3331, column: 55, scope: !14727)
!14732 = !DILocation(line: 3333, column: 9, scope: !14727)
!14733 = !DILocation(line: 3333, column: 14, scope: !14727)
!14734 = !DILocation(line: 3333, column: 25, scope: !14727)
!14735 = !DILocation(line: 3333, column: 2, scope: !14727)
!14736 = distinct !DISubprogram(name: "mlxsw_sp_port_dev_lower_find", scope: !3, file: !3, line: 3349, type: !14737, scopeLine: 3350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14737 = !DISubroutineType(types: !14738)
!14738 = !{!10715, !451}
!14739 = !DILocalVariable(name: "dev", arg: 1, scope: !14736, file: !3, line: 3349, type: !451)
!14740 = !DILocation(line: 3349, column: 71, scope: !14736)
!14741 = !DILocalVariable(name: "priv", scope: !14736, file: !3, line: 3351, type: !14742)
!14742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_nested_priv", file: !6, line: 4542, size: 128, elements: !14743)
!14743 = !{!14744, !14745}
!14744 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !14742, file: !6, line: 4543, baseType: !650, size: 8)
!14745 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14742, file: !6, line: 4544, baseType: !726, size: 64, offset: 64)
!14746 = !DILocation(line: 3351, column: 28, scope: !14736)
!14747 = !DILocation(line: 3355, column: 30, scope: !14748)
!14748 = distinct !DILexicalBlock(scope: !14736, file: !3, line: 3355, column: 6)
!14749 = !DILocation(line: 3355, column: 6, scope: !14748)
!14750 = !DILocation(line: 3355, column: 6, scope: !14736)
!14751 = !DILocation(line: 3356, column: 22, scope: !14748)
!14752 = !DILocation(line: 3356, column: 10, scope: !14748)
!14753 = !DILocation(line: 3356, column: 3, scope: !14748)
!14754 = !DILocation(line: 3358, column: 28, scope: !14736)
!14755 = !DILocation(line: 3358, column: 2, scope: !14736)
!14756 = !DILocation(line: 3360, column: 38, scope: !14736)
!14757 = !DILocation(line: 3360, column: 9, scope: !14736)
!14758 = !DILocation(line: 3360, column: 2, scope: !14736)
!14759 = !DILocation(line: 3361, column: 1, scope: !14736)
!14760 = distinct !DISubprogram(name: "mlxsw_sp_lower_dev_walk", scope: !3, file: !3, line: 3336, type: !14761, scopeLine: 3338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14761 = !DISubroutineType(types: !14762)
!14762 = !{!7, !451, !14763}
!14763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14742, size: 64)
!14764 = !DILocalVariable(name: "lower_dev", arg: 1, scope: !14760, file: !3, line: 3336, type: !451)
!14765 = !DILocation(line: 3336, column: 55, scope: !14760)
!14766 = !DILocalVariable(name: "priv", arg: 2, scope: !14760, file: !3, line: 3337, type: !14763)
!14767 = !DILocation(line: 3337, column: 35, scope: !14760)
!14768 = !DILocalVariable(name: "ret", scope: !14760, file: !3, line: 3339, type: !7)
!14769 = !DILocation(line: 3339, column: 6, scope: !14760)
!14770 = !DILocation(line: 3341, column: 30, scope: !14771)
!14771 = distinct !DILexicalBlock(scope: !14760, file: !3, line: 3341, column: 6)
!14772 = !DILocation(line: 3341, column: 6, scope: !14771)
!14773 = !DILocation(line: 3341, column: 6, scope: !14760)
!14774 = !DILocation(line: 3342, column: 36, scope: !14775)
!14775 = distinct !DILexicalBlock(scope: !14771, file: !3, line: 3341, column: 42)
!14776 = !DILocation(line: 3342, column: 24, scope: !14775)
!14777 = !DILocation(line: 3342, column: 3, scope: !14775)
!14778 = !DILocation(line: 3342, column: 9, scope: !14775)
!14779 = !DILocation(line: 3342, column: 14, scope: !14775)
!14780 = !DILocation(line: 3343, column: 7, scope: !14775)
!14781 = !DILocation(line: 3344, column: 2, scope: !14775)
!14782 = !DILocation(line: 3346, column: 9, scope: !14760)
!14783 = !DILocation(line: 3346, column: 2, scope: !14760)
!14784 = distinct !DISubprogram(name: "mlxsw_sp_lower_get", scope: !3, file: !3, line: 3363, type: !14785, scopeLine: 3364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14785 = !DISubroutineType(types: !14786)
!14786 = !{!10721, !451}
!14787 = !DILocalVariable(name: "dev", arg: 1, scope: !14784, file: !3, line: 3363, type: !451)
!14788 = !DILocation(line: 3363, column: 56, scope: !14784)
!14789 = !DILocalVariable(name: "mlxsw_sp_port", scope: !14784, file: !3, line: 3365, type: !10715)
!14790 = !DILocation(line: 3365, column: 24, scope: !14784)
!14791 = !DILocation(line: 3367, column: 47, scope: !14784)
!14792 = !DILocation(line: 3367, column: 18, scope: !14784)
!14793 = !DILocation(line: 3367, column: 16, scope: !14784)
!14794 = !DILocation(line: 3368, column: 9, scope: !14784)
!14795 = !DILocation(line: 3368, column: 25, scope: !14784)
!14796 = !DILocation(line: 3368, column: 40, scope: !14784)
!14797 = !DILocation(line: 3368, column: 2, scope: !14784)
!14798 = distinct !DISubprogram(name: "mlxsw_sp_port_dev_lower_find_rcu", scope: !3, file: !3, line: 3371, type: !14737, scopeLine: 3372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14799 = !DILocalVariable(name: "dev", arg: 1, scope: !14798, file: !3, line: 3371, type: !451)
!14800 = !DILocation(line: 3371, column: 75, scope: !14798)
!14801 = !DILocalVariable(name: "priv", scope: !14798, file: !3, line: 3373, type: !14742)
!14802 = !DILocation(line: 3373, column: 28, scope: !14798)
!14803 = !DILocation(line: 3377, column: 30, scope: !14804)
!14804 = distinct !DILexicalBlock(scope: !14798, file: !3, line: 3377, column: 6)
!14805 = !DILocation(line: 3377, column: 6, scope: !14804)
!14806 = !DILocation(line: 3377, column: 6, scope: !14798)
!14807 = !DILocation(line: 3378, column: 22, scope: !14804)
!14808 = !DILocation(line: 3378, column: 10, scope: !14804)
!14809 = !DILocation(line: 3378, column: 3, scope: !14804)
!14810 = !DILocation(line: 3380, column: 32, scope: !14798)
!14811 = !DILocation(line: 3380, column: 2, scope: !14798)
!14812 = !DILocation(line: 3383, column: 38, scope: !14798)
!14813 = !DILocation(line: 3383, column: 9, scope: !14798)
!14814 = !DILocation(line: 3383, column: 2, scope: !14798)
!14815 = !DILocation(line: 3384, column: 1, scope: !14798)
!14816 = distinct !DISubprogram(name: "mlxsw_sp_port_lower_dev_hold", scope: !3, file: !3, line: 3386, type: !14737, scopeLine: 3387, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14817 = !DILocalVariable(name: "dev", arg: 1, scope: !14816, file: !3, line: 3386, type: !451)
!14818 = !DILocation(line: 3386, column: 71, scope: !14816)
!14819 = !DILocalVariable(name: "mlxsw_sp_port", scope: !14816, file: !3, line: 3388, type: !10715)
!14820 = !DILocation(line: 3388, column: 24, scope: !14816)
!14821 = !DILocation(line: 639, column: 2, scope: !14654, inlinedAt: !14822)
!14822 = distinct !DILocation(line: 3390, column: 2, scope: !14816)
!14823 = !DILocation(line: 3391, column: 51, scope: !14816)
!14824 = !DILocation(line: 3391, column: 18, scope: !14816)
!14825 = !DILocation(line: 3391, column: 16, scope: !14816)
!14826 = !DILocation(line: 3392, column: 6, scope: !14827)
!14827 = distinct !DILexicalBlock(scope: !14816, file: !3, line: 3392, column: 6)
!14828 = !DILocation(line: 3392, column: 6, scope: !14816)
!14829 = !DILocation(line: 3393, column: 12, scope: !14827)
!14830 = !DILocation(line: 3393, column: 27, scope: !14827)
!14831 = !DILocation(line: 3393, column: 3, scope: !14827)
!14832 = !DILocation(line: 3394, column: 2, scope: !14816)
!14833 = !DILocation(line: 3395, column: 9, scope: !14816)
!14834 = !DILocation(line: 3395, column: 2, scope: !14816)
!14835 = distinct !DISubprogram(name: "dev_hold", scope: !6, file: !6, line: 3952, type: !567, scopeLine: 3953, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14836 = !DILocalVariable(name: "dev", arg: 1, scope: !14835, file: !6, line: 3952, type: !451)
!14837 = !DILocation(line: 3952, column: 48, scope: !14835)
!14838 = !DILocation(line: 3954, column: 2, scope: !14835)
!14839 = !DILocation(line: 3954, column: 2, scope: !14840)
!14840 = distinct !DILexicalBlock(scope: !14835, file: !6, line: 3954, column: 2)
!14841 = !DILocalVariable(name: "__vpp_verify", scope: !14842, file: !6, line: 3954, type: !2424)
!14842 = distinct !DILexicalBlock(scope: !14840, file: !6, line: 3954, column: 2)
!14843 = !DILocation(line: 3954, column: 2, scope: !14842)
!14844 = !DILocalVariable(name: "pao_ID__", scope: !14845, file: !6, line: 3954, type: !14846)
!14845 = distinct !DILexicalBlock(scope: !14840, file: !6, line: 3954, column: 2)
!14846 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!14847 = !DILocation(line: 3954, column: 2, scope: !14845)
!14848 = !DILocation(line: 3954, column: 2, scope: !14849)
!14849 = distinct !DILexicalBlock(scope: !14850, file: !6, line: 3954, column: 2)
!14850 = distinct !DILexicalBlock(scope: !14845, file: !6, line: 3954, column: 2)
!14851 = !{i32 -2139823838}
!14852 = !DILocation(line: 3955, column: 1, scope: !14835)
!14853 = distinct !DISubprogram(name: "mlxsw_sp_port_dev_put", scope: !3, file: !3, line: 3398, type: !14854, scopeLine: 3399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14854 = !DISubroutineType(types: !14855)
!14855 = !{null, !10715}
!14856 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !14853, file: !3, line: 3398, type: !10715)
!14857 = !DILocation(line: 3398, column: 50, scope: !14853)
!14858 = !DILocation(line: 3400, column: 10, scope: !14853)
!14859 = !DILocation(line: 3400, column: 25, scope: !14853)
!14860 = !DILocation(line: 3400, column: 2, scope: !14853)
!14861 = !DILocation(line: 3401, column: 1, scope: !14853)
!14862 = distinct !DISubprogram(name: "dev_put", scope: !6, file: !6, line: 3941, type: !567, scopeLine: 3942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14863 = !DILocalVariable(name: "dev", arg: 1, scope: !14862, file: !6, line: 3941, type: !451)
!14864 = !DILocation(line: 3941, column: 47, scope: !14862)
!14865 = !DILocation(line: 3943, column: 2, scope: !14862)
!14866 = !DILocation(line: 3943, column: 2, scope: !14867)
!14867 = distinct !DILexicalBlock(scope: !14862, file: !6, line: 3943, column: 2)
!14868 = !DILocalVariable(name: "__vpp_verify", scope: !14869, file: !6, line: 3943, type: !2424)
!14869 = distinct !DILexicalBlock(scope: !14867, file: !6, line: 3943, column: 2)
!14870 = !DILocation(line: 3943, column: 2, scope: !14869)
!14871 = !DILocalVariable(name: "pao_ID__", scope: !14872, file: !6, line: 3943, type: !14846)
!14872 = distinct !DILexicalBlock(scope: !14867, file: !6, line: 3943, column: 2)
!14873 = !DILocation(line: 3943, column: 2, scope: !14872)
!14874 = !DILocation(line: 3943, column: 2, scope: !14875)
!14875 = distinct !DILexicalBlock(scope: !14876, file: !6, line: 3943, column: 2)
!14876 = distinct !DILexicalBlock(scope: !14877, file: !6, line: 3943, column: 2)
!14877 = distinct !DILexicalBlock(scope: !14872, file: !6, line: 3943, column: 2)
!14878 = !{i32 -2139832226}
!14879 = !DILocation(line: 3944, column: 1, scope: !14862)
!14880 = distinct !DISubprogram(name: "mlxsw_sp_module_exit", scope: !3, file: !3, line: 4426, type: !4299, scopeLine: 4427, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14881 = !DILocation(line: 4428, column: 2, scope: !14880)
!14882 = !DILocation(line: 4429, column: 2, scope: !14880)
!14883 = !DILocation(line: 4430, column: 2, scope: !14880)
!14884 = !DILocation(line: 4431, column: 2, scope: !14880)
!14885 = !DILocation(line: 4432, column: 2, scope: !14880)
!14886 = !DILocation(line: 4433, column: 2, scope: !14880)
!14887 = !DILocation(line: 4434, column: 2, scope: !14880)
!14888 = !DILocation(line: 4435, column: 2, scope: !14880)
!14889 = !DILocation(line: 4436, column: 1, scope: !14880)
!14890 = distinct !DISubprogram(name: "mlxsw_sp_module_init", scope: !3, file: !3, line: 4377, type: !11232, scopeLine: 4378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14891 = !DILocalVariable(name: "err", scope: !14890, file: !3, line: 4379, type: !7)
!14892 = !DILocation(line: 4379, column: 6, scope: !14890)
!14893 = !DILocation(line: 4381, column: 2, scope: !14890)
!14894 = !DILocation(line: 4382, column: 2, scope: !14890)
!14895 = !DILocation(line: 4384, column: 8, scope: !14890)
!14896 = !DILocation(line: 4384, column: 6, scope: !14890)
!14897 = !DILocation(line: 4385, column: 6, scope: !14898)
!14898 = distinct !DILexicalBlock(scope: !14890, file: !3, line: 4385, column: 6)
!14899 = !DILocation(line: 4385, column: 6, scope: !14890)
!14900 = !DILocation(line: 4386, column: 3, scope: !14898)
!14901 = !DILocation(line: 4388, column: 8, scope: !14890)
!14902 = !DILocation(line: 4388, column: 6, scope: !14890)
!14903 = !DILocation(line: 4389, column: 6, scope: !14904)
!14904 = distinct !DILexicalBlock(scope: !14890, file: !3, line: 4389, column: 6)
!14905 = !DILocation(line: 4389, column: 6, scope: !14890)
!14906 = !DILocation(line: 4390, column: 3, scope: !14904)
!14907 = !DILocation(line: 4392, column: 8, scope: !14890)
!14908 = !DILocation(line: 4392, column: 6, scope: !14890)
!14909 = !DILocation(line: 4393, column: 6, scope: !14910)
!14910 = distinct !DILexicalBlock(scope: !14890, file: !3, line: 4393, column: 6)
!14911 = !DILocation(line: 4393, column: 6, scope: !14890)
!14912 = !DILocation(line: 4394, column: 3, scope: !14910)
!14913 = !DILocation(line: 4396, column: 8, scope: !14890)
!14914 = !DILocation(line: 4396, column: 6, scope: !14890)
!14915 = !DILocation(line: 4397, column: 6, scope: !14916)
!14916 = distinct !DILexicalBlock(scope: !14890, file: !3, line: 4397, column: 6)
!14917 = !DILocation(line: 4397, column: 6, scope: !14890)
!14918 = !DILocation(line: 4398, column: 3, scope: !14916)
!14919 = !DILocation(line: 4400, column: 8, scope: !14890)
!14920 = !DILocation(line: 4400, column: 6, scope: !14890)
!14921 = !DILocation(line: 4401, column: 6, scope: !14922)
!14922 = distinct !DILexicalBlock(scope: !14890, file: !3, line: 4401, column: 6)
!14923 = !DILocation(line: 4401, column: 6, scope: !14890)
!14924 = !DILocation(line: 4402, column: 3, scope: !14922)
!14925 = !DILocation(line: 4404, column: 8, scope: !14890)
!14926 = !DILocation(line: 4404, column: 6, scope: !14890)
!14927 = !DILocation(line: 4405, column: 6, scope: !14928)
!14928 = distinct !DILexicalBlock(scope: !14890, file: !3, line: 4405, column: 6)
!14929 = !DILocation(line: 4405, column: 6, scope: !14890)
!14930 = !DILocation(line: 4406, column: 3, scope: !14928)
!14931 = !DILocation(line: 4408, column: 2, scope: !14890)
!14932 = !DILabel(scope: !14890, name: "err_sp3_pci_driver_register", file: !3, line: 4410)
!14933 = !DILocation(line: 4410, column: 1, scope: !14890)
!14934 = !DILocation(line: 4411, column: 2, scope: !14890)
!14935 = !DILabel(scope: !14890, name: "err_sp2_pci_driver_register", file: !3, line: 4412)
!14936 = !DILocation(line: 4412, column: 1, scope: !14890)
!14937 = !DILocation(line: 4413, column: 2, scope: !14890)
!14938 = !DILabel(scope: !14890, name: "err_sp1_pci_driver_register", file: !3, line: 4414)
!14939 = !DILocation(line: 4414, column: 1, scope: !14890)
!14940 = !DILocation(line: 4415, column: 2, scope: !14890)
!14941 = !DILabel(scope: !14890, name: "err_sp3_core_driver_register", file: !3, line: 4416)
!14942 = !DILocation(line: 4416, column: 1, scope: !14890)
!14943 = !DILocation(line: 4417, column: 2, scope: !14890)
!14944 = !DILabel(scope: !14890, name: "err_sp2_core_driver_register", file: !3, line: 4418)
!14945 = !DILocation(line: 4418, column: 1, scope: !14890)
!14946 = !DILocation(line: 4419, column: 2, scope: !14890)
!14947 = !DILabel(scope: !14890, name: "err_sp1_core_driver_register", file: !3, line: 4420)
!14948 = !DILocation(line: 4420, column: 1, scope: !14890)
!14949 = !DILocation(line: 4421, column: 2, scope: !14890)
!14950 = !DILocation(line: 4422, column: 2, scope: !14890)
!14951 = !DILocation(line: 4423, column: 9, scope: !14890)
!14952 = !DILocation(line: 4423, column: 2, scope: !14890)
!14953 = !DILocation(line: 4424, column: 1, scope: !14890)
!14954 = distinct !DISubprogram(name: "mlxsw_reg_mgpc_counter_index_set", scope: !10113, file: !10113, line: 9556, type: !14426, scopeLine: 9556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14955 = !DILocalVariable(name: "buf", arg: 1, scope: !14954, file: !10113, line: 9556, type: !733)
!14956 = !DILocation(line: 9556, column: 1, scope: !14954)
!14957 = !DILocalVariable(name: "val", arg: 2, scope: !14954, file: !10113, line: 9556, type: !862)
!14958 = distinct !DISubprogram(name: "mlxsw_reg_mgpc_counter_set_type_set", scope: !10113, file: !10113, line: 9550, type: !14426, scopeLine: 9550, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14959 = !DILocalVariable(name: "buf", arg: 1, scope: !14958, file: !10113, line: 9550, type: !733)
!14960 = !DILocation(line: 9550, column: 1, scope: !14958)
!14961 = !DILocalVariable(name: "val", arg: 2, scope: !14958, file: !10113, line: 9550, type: !862)
!14962 = distinct !DISubprogram(name: "mlxsw_reg_mgpc_opcode_set", scope: !10113, file: !10113, line: 9569, type: !14426, scopeLine: 9569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14963 = !DILocalVariable(name: "buf", arg: 1, scope: !14962, file: !10113, line: 9569, type: !733)
!14964 = !DILocation(line: 9569, column: 1, scope: !14962)
!14965 = !DILocalVariable(name: "val", arg: 2, scope: !14962, file: !10113, line: 9569, type: !862)
!14966 = distinct !DISubprogram(name: "__mlxsw_item_set32", scope: !10989, file: !10989, line: 127, type: !14967, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!14967 = !DISubroutineType(types: !14968)
!14968 = !{null, !733, !14969, !633, !862}
!14969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14970, size: 64)
!14970 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10988)
!14971 = !DILocalVariable(name: "buf", arg: 1, scope: !14966, file: !10989, line: 127, type: !733)
!14972 = !DILocation(line: 127, column: 45, scope: !14966)
!14973 = !DILocalVariable(name: "item", arg: 2, scope: !14966, file: !10989, line: 127, type: !14969)
!14974 = !DILocation(line: 127, column: 75, scope: !14966)
!14975 = !DILocalVariable(name: "index", arg: 3, scope: !14966, file: !10989, line: 128, type: !633)
!14976 = !DILocation(line: 128, column: 26, scope: !14966)
!14977 = !DILocalVariable(name: "val", arg: 4, scope: !14966, file: !10989, line: 128, type: !862)
!14978 = !DILocation(line: 128, column: 37, scope: !14966)
!14979 = !DILocalVariable(name: "offset", scope: !14966, file: !10989, line: 130, type: !14)
!14980 = !DILocation(line: 130, column: 15, scope: !14966)
!14981 = !DILocation(line: 130, column: 44, scope: !14966)
!14982 = !DILocation(line: 130, column: 50, scope: !14966)
!14983 = !DILocation(line: 130, column: 24, scope: !14966)
!14984 = !DILocalVariable(name: "b", scope: !14966, file: !10989, line: 132, type: !11483)
!14985 = !DILocation(line: 132, column: 10, scope: !14966)
!14986 = !DILocation(line: 132, column: 25, scope: !14966)
!14987 = !DILocation(line: 132, column: 14, scope: !14966)
!14988 = !DILocalVariable(name: "mask", scope: !14966, file: !10989, line: 133, type: !862)
!14989 = !DILocation(line: 133, column: 6, scope: !14966)
!14990 = !DILocation(line: 133, column: 13, scope: !14966)
!14991 = !DILocation(line: 133, column: 48, scope: !14966)
!14992 = !DILocation(line: 133, column: 54, scope: !14966)
!14993 = !DILocation(line: 133, column: 45, scope: !14966)
!14994 = !DILocalVariable(name: "tmp", scope: !14966, file: !10989, line: 134, type: !862)
!14995 = !DILocation(line: 134, column: 6, scope: !14966)
!14996 = !DILocation(line: 136, column: 7, scope: !14997)
!14997 = distinct !DILexicalBlock(scope: !14966, file: !10989, line: 136, column: 6)
!14998 = !DILocation(line: 136, column: 13, scope: !14997)
!14999 = !DILocation(line: 136, column: 6, scope: !14966)
!15000 = !DILocation(line: 137, column: 11, scope: !14997)
!15001 = !DILocation(line: 137, column: 17, scope: !14997)
!15002 = !DILocation(line: 137, column: 7, scope: !14997)
!15003 = !DILocation(line: 137, column: 3, scope: !14997)
!15004 = !DILocation(line: 138, column: 9, scope: !14966)
!15005 = !DILocation(line: 138, column: 6, scope: !14966)
!15006 = !DILocation(line: 139, column: 8, scope: !14966)
!15007 = !DILocation(line: 139, column: 6, scope: !14966)
!15008 = !DILocation(line: 140, column: 10, scope: !14966)
!15009 = !DILocation(line: 140, column: 9, scope: !14966)
!15010 = !DILocation(line: 140, column: 6, scope: !14966)
!15011 = !DILocation(line: 141, column: 9, scope: !14966)
!15012 = !DILocation(line: 141, column: 6, scope: !14966)
!15013 = !DILocation(line: 142, column: 14, scope: !14966)
!15014 = !DILocation(line: 142, column: 2, scope: !14966)
!15015 = !DILocation(line: 142, column: 4, scope: !14966)
!15016 = !DILocation(line: 142, column: 12, scope: !14966)
!15017 = !DILocation(line: 143, column: 1, scope: !14966)
!15018 = distinct !DISubprogram(name: "__mlxsw_item_offset", scope: !10989, file: !10989, line: 26, type: !15019, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15019 = !DISubroutineType(types: !15020)
!15020 = !{!14, !14969, !633, !750}
!15021 = !DILocalVariable(name: "item", arg: 1, scope: !15018, file: !10989, line: 26, type: !14969)
!15022 = !DILocation(line: 26, column: 46, scope: !15018)
!15023 = !DILocalVariable(name: "index", arg: 2, scope: !15018, file: !10989, line: 26, type: !633)
!15024 = !DILocation(line: 26, column: 67, scope: !15018)
!15025 = !DILocalVariable(name: "typesize", arg: 3, scope: !15018, file: !10989, line: 27, type: !750)
!15026 = !DILocation(line: 27, column: 14, scope: !15018)
!15027 = !DILocation(line: 29, column: 2, scope: !15018)
!15028 = !DILocation(line: 29, column: 2, scope: !15029)
!15029 = distinct !DILexicalBlock(scope: !15030, file: !10989, line: 29, column: 2)
!15030 = distinct !DILexicalBlock(scope: !15018, file: !10989, line: 29, column: 2)
!15031 = !DILocation(line: 0, scope: !15029)
!15032 = !DILocation(line: 29, column: 2, scope: !15030)
!15033 = !DILocation(line: 29, column: 2, scope: !15034)
!15034 = distinct !DILexicalBlock(scope: !15029, file: !10989, line: 29, column: 2)
!15035 = !DILocation(line: 29, column: 2, scope: !15036)
!15036 = distinct !DILexicalBlock(scope: !15034, file: !10989, line: 29, column: 2)
!15037 = !DILocation(line: 29, column: 2, scope: !15038)
!15038 = distinct !DILexicalBlock(scope: !15034, file: !10989, line: 29, column: 2)
!15039 = !{i32 -2136714129, i32 -2136714100, i32 -2136714054, i32 -2136713996, i32 -2136713942, i32 -2136713888, i32 -2136713833, i32 -2136713802}
!15040 = !DILocation(line: 29, column: 2, scope: !15041)
!15041 = distinct !DILexicalBlock(scope: !15042, file: !10989, line: 29, column: 2)
!15042 = distinct !DILexicalBlock(scope: !15034, file: !10989, line: 29, column: 2)
!15043 = !{i32 -2136713338, i32 -2136713331, i32 -2136713277, i32 -2136713246, i32 -2136713216}
!15044 = !DILocation(line: 29, column: 2, scope: !15042)
!15045 = !DILocation(line: 30, column: 6, scope: !15046)
!15046 = distinct !DILexicalBlock(scope: !15018, file: !10989, line: 30, column: 6)
!15047 = !DILocation(line: 30, column: 12, scope: !15046)
!15048 = !DILocation(line: 30, column: 21, scope: !15046)
!15049 = !DILocation(line: 30, column: 19, scope: !15046)
!15050 = !DILocation(line: 30, column: 30, scope: !15046)
!15051 = !DILocation(line: 30, column: 35, scope: !15046)
!15052 = !DILocation(line: 31, column: 6, scope: !15046)
!15053 = !DILocation(line: 31, column: 12, scope: !15046)
!15054 = !DILocation(line: 31, column: 19, scope: !15046)
!15055 = !DILocation(line: 31, column: 17, scope: !15046)
!15056 = !DILocation(line: 31, column: 28, scope: !15046)
!15057 = !DILocation(line: 31, column: 33, scope: !15046)
!15058 = !DILocation(line: 32, column: 6, scope: !15046)
!15059 = !DILocation(line: 32, column: 12, scope: !15046)
!15060 = !DILocation(line: 32, column: 29, scope: !15046)
!15061 = !DILocation(line: 32, column: 27, scope: !15046)
!15062 = !DILocation(line: 32, column: 38, scope: !15046)
!15063 = !DILocation(line: 30, column: 6, scope: !15018)
!15064 = !DILocation(line: 33, column: 3, scope: !15065)
!15065 = distinct !DILexicalBlock(scope: !15046, file: !10989, line: 32, column: 44)
!15066 = !DILocation(line: 36, column: 3, scope: !15065)
!15067 = !DILocation(line: 36, column: 3, scope: !15068)
!15068 = distinct !DILexicalBlock(scope: !15065, file: !10989, line: 36, column: 3)
!15069 = !DILocation(line: 36, column: 3, scope: !15070)
!15070 = distinct !DILexicalBlock(scope: !15068, file: !10989, line: 36, column: 3)
!15071 = !DILocation(line: 36, column: 3, scope: !15072)
!15072 = distinct !DILexicalBlock(scope: !15068, file: !10989, line: 36, column: 3)
!15073 = !{i32 -2136712707, i32 -2136712678, i32 -2136712632, i32 -2136712574, i32 -2136712520, i32 -2136712466, i32 -2136712411, i32 -2136712380}
!15074 = !DILocation(line: 36, column: 3, scope: !15075)
!15075 = distinct !DILexicalBlock(scope: !15076, file: !10989, line: 36, column: 3)
!15076 = distinct !DILexicalBlock(scope: !15068, file: !10989, line: 36, column: 3)
!15077 = !{i32 -2136711916, i32 -2136711909, i32 -2136711855, i32 -2136711824, i32 -2136711794}
!15078 = !DILocation(line: 36, column: 3, scope: !15076)
!15079 = !DILocation(line: 37, column: 2, scope: !15065)
!15080 = !DILocation(line: 39, column: 11, scope: !15018)
!15081 = !DILocation(line: 39, column: 17, scope: !15018)
!15082 = !DILocation(line: 39, column: 26, scope: !15018)
!15083 = !DILocation(line: 39, column: 32, scope: !15018)
!15084 = !DILocation(line: 39, column: 39, scope: !15018)
!15085 = !DILocation(line: 39, column: 37, scope: !15018)
!15086 = !DILocation(line: 39, column: 24, scope: !15018)
!15087 = !DILocation(line: 39, column: 47, scope: !15018)
!15088 = !DILocation(line: 39, column: 53, scope: !15018)
!15089 = !DILocation(line: 39, column: 45, scope: !15018)
!15090 = !DILocation(line: 39, column: 10, scope: !15018)
!15091 = !DILocation(line: 40, column: 3, scope: !15018)
!15092 = !DILocation(line: 39, column: 69, scope: !15018)
!15093 = !DILocation(line: 39, column: 9, scope: !15018)
!15094 = !DILocation(line: 39, column: 2, scope: !15018)
!15095 = distinct !DISubprogram(name: "__fswab32", scope: !15096, file: !15096, line: 57, type: !15097, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15096 = !DIFile(filename: "./include/uapi/linux/swab.h", directory: "/home/lizy2001/genbc/linux")
!15097 = !DISubroutineType(types: !15098)
!15098 = !{!624, !624}
!15099 = !DILocalVariable(name: "val", arg: 1, scope: !15095, file: !15096, line: 57, type: !624)
!15100 = !DILocation(line: 57, column: 57, scope: !15095)
!15101 = !DILocation(line: 60, column: 23, scope: !15095)
!15102 = !DILocation(line: 60, column: 9, scope: !15095)
!15103 = !DILocation(line: 60, column: 2, scope: !15095)
!15104 = distinct !DISubprogram(name: "__arch_swab32", scope: !15105, file: !15105, line: 8, type: !15097, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15105 = !DIFile(filename: "./arch/x86/include/uapi/asm/swab.h", directory: "/home/lizy2001/genbc/linux")
!15106 = !DILocalVariable(name: "val", arg: 1, scope: !15104, file: !15105, line: 8, type: !624)
!15107 = !DILocation(line: 8, column: 61, scope: !15104)
!15108 = !DILocation(line: 10, column: 38, scope: !15104)
!15109 = !DILocation(line: 10, column: 2, scope: !15104)
!15110 = !{i32 488516}
!15111 = !DILocation(line: 11, column: 9, scope: !15104)
!15112 = !DILocation(line: 11, column: 2, scope: !15104)
!15113 = distinct !DISubprogram(name: "__mlxsw_item_get64", scope: !10989, file: !10989, line: 145, type: !15114, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15114 = !DISubroutineType(types: !15115)
!15115 = !{!492, !453, !14969, !633}
!15116 = !DILocalVariable(name: "buf", arg: 1, scope: !15113, file: !10989, line: 145, type: !453)
!15117 = !DILocation(line: 145, column: 50, scope: !15113)
!15118 = !DILocalVariable(name: "item", arg: 2, scope: !15113, file: !10989, line: 146, type: !14969)
!15119 = !DILocation(line: 146, column: 35, scope: !15113)
!15120 = !DILocalVariable(name: "index", arg: 3, scope: !15113, file: !10989, line: 147, type: !633)
!15121 = !DILocation(line: 147, column: 25, scope: !15113)
!15122 = !DILocalVariable(name: "offset", scope: !15113, file: !10989, line: 149, type: !14)
!15123 = !DILocation(line: 149, column: 15, scope: !15113)
!15124 = !DILocation(line: 149, column: 44, scope: !15113)
!15125 = !DILocation(line: 149, column: 50, scope: !15113)
!15126 = !DILocation(line: 149, column: 24, scope: !15113)
!15127 = !DILocalVariable(name: "b", scope: !15113, file: !10989, line: 150, type: !11484)
!15128 = !DILocation(line: 150, column: 10, scope: !15113)
!15129 = !DILocation(line: 150, column: 25, scope: !15113)
!15130 = !DILocation(line: 150, column: 14, scope: !15113)
!15131 = !DILocalVariable(name: "tmp", scope: !15113, file: !10989, line: 151, type: !492)
!15132 = !DILocation(line: 151, column: 6, scope: !15113)
!15133 = !DILocation(line: 153, column: 8, scope: !15113)
!15134 = !DILocation(line: 153, column: 6, scope: !15113)
!15135 = !DILocation(line: 154, column: 10, scope: !15113)
!15136 = !DILocation(line: 154, column: 16, scope: !15113)
!15137 = !DILocation(line: 154, column: 6, scope: !15113)
!15138 = !DILocation(line: 155, column: 9, scope: !15113)
!15139 = !DILocation(line: 155, column: 6, scope: !15113)
!15140 = !DILocation(line: 156, column: 6, scope: !15141)
!15141 = distinct !DILexicalBlock(scope: !15113, file: !10989, line: 156, column: 6)
!15142 = !DILocation(line: 156, column: 12, scope: !15141)
!15143 = !DILocation(line: 156, column: 6, scope: !15113)
!15144 = !DILocation(line: 157, column: 11, scope: !15141)
!15145 = !DILocation(line: 157, column: 17, scope: !15141)
!15146 = !DILocation(line: 157, column: 7, scope: !15141)
!15147 = !DILocation(line: 157, column: 3, scope: !15141)
!15148 = !DILocation(line: 158, column: 9, scope: !15113)
!15149 = !DILocation(line: 158, column: 2, scope: !15113)
!15150 = distinct !DISubprogram(name: "__fswab64", scope: !15096, file: !15096, line: 66, type: !15151, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15151 = !DISubroutineType(types: !15152)
!15152 = !{!494, !494}
!15153 = !DILocalVariable(name: "val", arg: 1, scope: !15150, file: !15096, line: 66, type: !494)
!15154 = !DILocation(line: 66, column: 57, scope: !15150)
!15155 = !DILocation(line: 69, column: 23, scope: !15150)
!15156 = !DILocation(line: 69, column: 9, scope: !15150)
!15157 = !DILocation(line: 69, column: 2, scope: !15150)
!15158 = distinct !DISubprogram(name: "__arch_swab64", scope: !15105, file: !15105, line: 15, type: !15151, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15159 = !DILocalVariable(name: "val", arg: 1, scope: !15158, file: !15105, line: 15, type: !494)
!15160 = !DILocation(line: 15, column: 61, scope: !15158)
!15161 = !DILocation(line: 31, column: 38, scope: !15158)
!15162 = !DILocation(line: 31, column: 2, scope: !15158)
!15163 = !{i32 488920}
!15164 = !DILocation(line: 32, column: 9, scope: !15158)
!15165 = !DILocation(line: 32, column: 2, scope: !15158)
!15166 = distinct !DISubprogram(name: "get_order", scope: !15167, file: !15167, line: 29, type: !15168, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15167 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!15168 = !DISubroutineType(types: !15169)
!15169 = !{!7, !473}
!15170 = !DILocalVariable(name: "x", arg: 1, scope: !15171, file: !15172, line: 366, type: !494)
!15171 = distinct !DISubprogram(name: "fls64", scope: !15172, file: !15172, line: 366, type: !15173, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15172 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!15173 = !DISubroutineType(types: !15174)
!15174 = !{!7, !494}
!15175 = !DILocation(line: 366, column: 40, scope: !15171, inlinedAt: !15176)
!15176 = distinct !DILocation(line: 46, column: 9, scope: !15166)
!15177 = !DILocalVariable(name: "bitpos", scope: !15171, file: !15172, line: 368, type: !7)
!15178 = !DILocation(line: 368, column: 6, scope: !15171, inlinedAt: !15176)
!15179 = !DILocalVariable(name: "size", arg: 1, scope: !15166, file: !15167, line: 29, type: !473)
!15180 = !DILocation(line: 29, column: 63, scope: !15166)
!15181 = !DILocation(line: 31, column: 27, scope: !15182)
!15182 = distinct !DILexicalBlock(scope: !15166, file: !15167, line: 31, column: 6)
!15183 = !DILocation(line: 31, column: 6, scope: !15182)
!15184 = !DILocation(line: 31, column: 6, scope: !15166)
!15185 = !DILocation(line: 32, column: 8, scope: !15186)
!15186 = distinct !DILexicalBlock(scope: !15187, file: !15167, line: 32, column: 7)
!15187 = distinct !DILexicalBlock(scope: !15182, file: !15167, line: 31, column: 34)
!15188 = !DILocation(line: 32, column: 7, scope: !15187)
!15189 = !DILocation(line: 33, column: 4, scope: !15186)
!15190 = !DILocation(line: 35, column: 7, scope: !15191)
!15191 = distinct !DILexicalBlock(scope: !15187, file: !15167, line: 35, column: 7)
!15192 = !DILocation(line: 35, column: 12, scope: !15191)
!15193 = !DILocation(line: 35, column: 7, scope: !15187)
!15194 = !DILocation(line: 36, column: 4, scope: !15191)
!15195 = !DILocation(line: 38, column: 10, scope: !15187)
!15196 = !DILocation(line: 38, column: 28, scope: !15187)
!15197 = !DILocation(line: 38, column: 41, scope: !15187)
!15198 = !DILocation(line: 38, column: 3, scope: !15187)
!15199 = !DILocation(line: 41, column: 6, scope: !15166)
!15200 = !DILocation(line: 42, column: 7, scope: !15166)
!15201 = !DILocation(line: 46, column: 15, scope: !15166)
!15202 = !DILocation(line: 374, column: 2, scope: !15171, inlinedAt: !15176)
!15203 = !DILocation(line: 376, column: 14, scope: !15171, inlinedAt: !15176)
!15204 = !{i32 368292}
!15205 = !DILocation(line: 377, column: 9, scope: !15171, inlinedAt: !15176)
!15206 = !DILocation(line: 377, column: 16, scope: !15171, inlinedAt: !15176)
!15207 = !DILocation(line: 46, column: 2, scope: !15166)
!15208 = !DILocation(line: 48, column: 1, scope: !15166)
!15209 = distinct !DISubprogram(name: "__ilog2_u64", scope: !15210, file: !15210, line: 30, type: !15211, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15210 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!15211 = !DISubroutineType(types: !15212)
!15212 = !{!7, !492}
!15213 = !DILocation(line: 366, column: 40, scope: !15171, inlinedAt: !15214)
!15214 = distinct !DILocation(line: 32, column: 9, scope: !15209)
!15215 = !DILocation(line: 368, column: 6, scope: !15171, inlinedAt: !15214)
!15216 = !DILocalVariable(name: "n", arg: 1, scope: !15209, file: !15210, line: 30, type: !492)
!15217 = !DILocation(line: 30, column: 21, scope: !15209)
!15218 = !DILocation(line: 32, column: 15, scope: !15209)
!15219 = !DILocation(line: 374, column: 2, scope: !15171, inlinedAt: !15214)
!15220 = !DILocation(line: 376, column: 14, scope: !15171, inlinedAt: !15214)
!15221 = !DILocation(line: 377, column: 9, scope: !15171, inlinedAt: !15214)
!15222 = !DILocation(line: 377, column: 16, scope: !15171, inlinedAt: !15214)
!15223 = !DILocation(line: 32, column: 18, scope: !15209)
!15224 = !DILocation(line: 32, column: 2, scope: !15209)
!15225 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !15226, file: !15226, line: 137, type: !15227, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15226 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!15227 = !DISubroutineType(types: !15228)
!15228 = !{!726, !2432, !2424, !750, !2144}
!15229 = !DILocalVariable(name: "s", arg: 1, scope: !15225, file: !15226, line: 137, type: !2432)
!15230 = !DILocation(line: 137, column: 54, scope: !15225)
!15231 = !DILocalVariable(name: "object", arg: 2, scope: !15225, file: !15226, line: 137, type: !2424)
!15232 = !DILocation(line: 137, column: 69, scope: !15225)
!15233 = !DILocalVariable(name: "size", arg: 3, scope: !15225, file: !15226, line: 138, type: !750)
!15234 = !DILocation(line: 138, column: 12, scope: !15225)
!15235 = !DILocalVariable(name: "flags", arg: 4, scope: !15225, file: !15226, line: 138, type: !2144)
!15236 = !DILocation(line: 138, column: 24, scope: !15225)
!15237 = !DILocation(line: 140, column: 17, scope: !15225)
!15238 = !DILocation(line: 140, column: 2, scope: !15225)
!15239 = distinct !DISubprogram(name: "mlxsw_reg_spms_local_port_set", scope: !10113, file: !10113, line: 784, type: !14426, scopeLine: 784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15240 = !DILocalVariable(name: "buf", arg: 1, scope: !15239, file: !10113, line: 784, type: !733)
!15241 = !DILocation(line: 784, column: 1, scope: !15239)
!15242 = !DILocalVariable(name: "val", arg: 2, scope: !15239, file: !10113, line: 784, type: !862)
!15243 = distinct !DISubprogram(name: "mlxsw_reg_spms_state_set", scope: !10113, file: !10113, line: 801, type: !15244, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15244 = !DISubroutineType(types: !15245)
!15245 = !{null, !733, !1193, !1552}
!15246 = !DILocalVariable(name: "buf", arg: 1, scope: !15243, file: !10113, line: 801, type: !733)
!15247 = !DILocation(line: 801, column: 1, scope: !15243)
!15248 = !DILocalVariable(name: "index", arg: 2, scope: !15243, file: !10113, line: 801, type: !1193)
!15249 = !DILocalVariable(name: "val", arg: 3, scope: !15243, file: !10113, line: 801, type: !1552)
!15250 = distinct !DISubprogram(name: "__mlxsw_item_bit_array_set", scope: !10989, file: !10989, line: 242, type: !15251, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15251 = !DISubroutineType(types: !15252)
!15252 = !{null, !733, !14969, !1193, !1552}
!15253 = !DILocalVariable(name: "buf", arg: 1, scope: !15250, file: !10989, line: 242, type: !733)
!15254 = !DILocation(line: 242, column: 53, scope: !15250)
!15255 = !DILocalVariable(name: "item", arg: 2, scope: !15250, file: !10989, line: 243, type: !14969)
!15256 = !DILocation(line: 243, column: 37, scope: !15250)
!15257 = !DILocalVariable(name: "index", arg: 3, scope: !15250, file: !10989, line: 244, type: !1193)
!15258 = !DILocation(line: 244, column: 16, scope: !15250)
!15259 = !DILocalVariable(name: "val", arg: 4, scope: !15250, file: !10989, line: 244, type: !1552)
!15260 = !DILocation(line: 244, column: 26, scope: !15250)
!15261 = !DILocalVariable(name: "shift", scope: !15250, file: !10989, line: 246, type: !1552)
!15262 = !DILocation(line: 246, column: 5, scope: !15250)
!15263 = !DILocalVariable(name: "tmp", scope: !15250, file: !10989, line: 246, type: !1552)
!15264 = !DILocation(line: 246, column: 12, scope: !15250)
!15265 = !DILocalVariable(name: "offset", scope: !15250, file: !10989, line: 247, type: !1193)
!15266 = !DILocation(line: 247, column: 6, scope: !15250)
!15267 = !DILocation(line: 247, column: 45, scope: !15250)
!15268 = !DILocation(line: 247, column: 51, scope: !15250)
!15269 = !DILocation(line: 247, column: 15, scope: !15250)
!15270 = !DILocalVariable(name: "mask", scope: !15250, file: !10989, line: 248, type: !1552)
!15271 = !DILocation(line: 248, column: 5, scope: !15250)
!15272 = !DILocation(line: 248, column: 12, scope: !15250)
!15273 = !DILocation(line: 248, column: 50, scope: !15250)
!15274 = !DILocation(line: 248, column: 47, scope: !15250)
!15275 = !DILocation(line: 250, column: 10, scope: !15250)
!15276 = !DILocation(line: 250, column: 6, scope: !15250)
!15277 = !DILocation(line: 251, column: 9, scope: !15250)
!15278 = !DILocation(line: 251, column: 6, scope: !15250)
!15279 = !DILocation(line: 252, column: 8, scope: !15250)
!15280 = !DILocation(line: 252, column: 12, scope: !15250)
!15281 = !DILocation(line: 252, column: 6, scope: !15250)
!15282 = !DILocation(line: 253, column: 10, scope: !15250)
!15283 = !DILocation(line: 253, column: 9, scope: !15250)
!15284 = !DILocation(line: 253, column: 6, scope: !15250)
!15285 = !DILocation(line: 254, column: 9, scope: !15250)
!15286 = !DILocation(line: 254, column: 6, scope: !15250)
!15287 = !DILocation(line: 255, column: 16, scope: !15250)
!15288 = !DILocation(line: 255, column: 2, scope: !15250)
!15289 = !DILocation(line: 255, column: 6, scope: !15250)
!15290 = !DILocation(line: 255, column: 14, scope: !15250)
!15291 = !DILocation(line: 256, column: 1, scope: !15250)
!15292 = distinct !DISubprogram(name: "__mlxsw_item_bit_array_offset", scope: !10989, file: !10989, line: 205, type: !15293, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15293 = !DISubroutineType(types: !15294)
!15294 = !{!1193, !14969, !1193, !8100}
!15295 = !DILocalVariable(name: "item", arg: 1, scope: !15292, file: !10989, line: 205, type: !14969)
!15296 = !DILocation(line: 205, column: 56, scope: !15292)
!15297 = !DILocalVariable(name: "index", arg: 2, scope: !15292, file: !10989, line: 206, type: !1193)
!15298 = !DILocation(line: 206, column: 14, scope: !15292)
!15299 = !DILocalVariable(name: "shift", arg: 3, scope: !15292, file: !10989, line: 206, type: !8100)
!15300 = !DILocation(line: 206, column: 25, scope: !15292)
!15301 = !DILocalVariable(name: "max_index", scope: !15292, file: !10989, line: 208, type: !1193)
!15302 = !DILocation(line: 208, column: 6, scope: !15292)
!15303 = !DILocalVariable(name: "be_index", scope: !15292, file: !10989, line: 208, type: !1193)
!15304 = !DILocation(line: 208, column: 17, scope: !15292)
!15305 = !DILocalVariable(name: "offset", scope: !15292, file: !10989, line: 209, type: !1193)
!15306 = !DILocation(line: 209, column: 6, scope: !15292)
!15307 = !DILocalVariable(name: "in_byte_index", scope: !15292, file: !10989, line: 210, type: !1552)
!15308 = !DILocation(line: 210, column: 5, scope: !15292)
!15309 = !DILocation(line: 212, column: 2, scope: !15292)
!15310 = !DILocation(line: 212, column: 2, scope: !15311)
!15311 = distinct !DILexicalBlock(scope: !15312, file: !10989, line: 212, column: 2)
!15312 = distinct !DILexicalBlock(scope: !15292, file: !10989, line: 212, column: 2)
!15313 = !DILocation(line: 0, scope: !15311)
!15314 = !DILocation(line: 212, column: 2, scope: !15312)
!15315 = !DILocation(line: 212, column: 2, scope: !15316)
!15316 = distinct !DILexicalBlock(scope: !15311, file: !10989, line: 212, column: 2)
!15317 = !DILocation(line: 212, column: 2, scope: !15318)
!15318 = distinct !DILexicalBlock(scope: !15316, file: !10989, line: 212, column: 2)
!15319 = !DILocation(line: 212, column: 2, scope: !15320)
!15320 = distinct !DILexicalBlock(scope: !15316, file: !10989, line: 212, column: 2)
!15321 = !{i32 -2136698649, i32 -2136698620, i32 -2136698574, i32 -2136698516, i32 -2136698462, i32 -2136698408, i32 -2136698353, i32 -2136698322}
!15322 = !DILocation(line: 212, column: 2, scope: !15323)
!15323 = distinct !DILexicalBlock(scope: !15324, file: !10989, line: 212, column: 2)
!15324 = distinct !DILexicalBlock(scope: !15316, file: !10989, line: 212, column: 2)
!15325 = !{i32 -2136697857, i32 -2136697850, i32 -2136697796, i32 -2136697765, i32 -2136697735}
!15326 = !DILocation(line: 212, column: 2, scope: !15324)
!15327 = !DILocation(line: 213, column: 6, scope: !15328)
!15328 = distinct !DILexicalBlock(scope: !15292, file: !10989, line: 213, column: 6)
!15329 = !DILocation(line: 213, column: 12, scope: !15328)
!15330 = !DILocation(line: 213, column: 19, scope: !15328)
!15331 = !DILocation(line: 213, column: 33, scope: !15328)
!15332 = !DILocation(line: 213, column: 38, scope: !15328)
!15333 = !DILocation(line: 214, column: 22, scope: !15328)
!15334 = !DILocation(line: 214, column: 28, scope: !15328)
!15335 = !DILocation(line: 214, column: 20, scope: !15328)
!15336 = !DILocation(line: 214, column: 41, scope: !15328)
!15337 = !DILocation(line: 213, column: 6, scope: !15292)
!15338 = !DILocation(line: 215, column: 3, scope: !15339)
!15339 = distinct !DILexicalBlock(scope: !15328, file: !10989, line: 214, column: 47)
!15340 = !DILocation(line: 217, column: 3, scope: !15339)
!15341 = !DILocation(line: 217, column: 3, scope: !15342)
!15342 = distinct !DILexicalBlock(scope: !15339, file: !10989, line: 217, column: 3)
!15343 = !DILocation(line: 217, column: 3, scope: !15344)
!15344 = distinct !DILexicalBlock(scope: !15342, file: !10989, line: 217, column: 3)
!15345 = !DILocation(line: 217, column: 3, scope: !15346)
!15346 = distinct !DILexicalBlock(scope: !15342, file: !10989, line: 217, column: 3)
!15347 = !{i32 -2136697303, i32 -2136697274, i32 -2136697228, i32 -2136697170, i32 -2136697116, i32 -2136697062, i32 -2136697007, i32 -2136696976}
!15348 = !DILocation(line: 217, column: 3, scope: !15349)
!15349 = distinct !DILexicalBlock(scope: !15350, file: !10989, line: 217, column: 3)
!15350 = distinct !DILexicalBlock(scope: !15342, file: !10989, line: 217, column: 3)
!15351 = !{i32 -2136696511, i32 -2136696504, i32 -2136696450, i32 -2136696419, i32 -2136696389}
!15352 = !DILocation(line: 217, column: 3, scope: !15350)
!15353 = !DILocation(line: 218, column: 2, scope: !15339)
!15354 = !DILocation(line: 220, column: 15, scope: !15292)
!15355 = !DILocation(line: 220, column: 21, scope: !15292)
!15356 = !DILocation(line: 220, column: 26, scope: !15292)
!15357 = !DILocation(line: 220, column: 32, scope: !15292)
!15358 = !DILocation(line: 220, column: 40, scope: !15292)
!15359 = !DILocation(line: 220, column: 46, scope: !15292)
!15360 = !DILocation(line: 220, column: 38, scope: !15292)
!15361 = !DILocation(line: 220, column: 59, scope: !15292)
!15362 = !DILocation(line: 220, column: 14, scope: !15292)
!15363 = !DILocation(line: 220, column: 12, scope: !15292)
!15364 = !DILocation(line: 221, column: 13, scope: !15292)
!15365 = !DILocation(line: 221, column: 25, scope: !15292)
!15366 = !DILocation(line: 221, column: 23, scope: !15292)
!15367 = !DILocation(line: 221, column: 11, scope: !15292)
!15368 = !DILocation(line: 222, column: 11, scope: !15292)
!15369 = !DILocation(line: 222, column: 22, scope: !15292)
!15370 = !DILocation(line: 222, column: 28, scope: !15292)
!15371 = !DILocation(line: 222, column: 20, scope: !15292)
!15372 = !DILocation(line: 222, column: 41, scope: !15292)
!15373 = !DILocation(line: 222, column: 9, scope: !15292)
!15374 = !DILocation(line: 223, column: 19, scope: !15292)
!15375 = !DILocation(line: 223, column: 44, scope: !15292)
!15376 = !DILocation(line: 223, column: 50, scope: !15292)
!15377 = !DILocation(line: 223, column: 42, scope: !15292)
!15378 = !DILocation(line: 223, column: 25, scope: !15292)
!15379 = !DILocation(line: 223, column: 17, scope: !15292)
!15380 = !DILocation(line: 224, column: 11, scope: !15292)
!15381 = !DILocation(line: 224, column: 27, scope: !15292)
!15382 = !DILocation(line: 224, column: 33, scope: !15292)
!15383 = !DILocation(line: 224, column: 25, scope: !15292)
!15384 = !DILocation(line: 224, column: 3, scope: !15292)
!15385 = !DILocation(line: 224, column: 9, scope: !15292)
!15386 = !DILocation(line: 226, column: 9, scope: !15292)
!15387 = !DILocation(line: 226, column: 15, scope: !15292)
!15388 = !DILocation(line: 226, column: 24, scope: !15292)
!15389 = !DILocation(line: 226, column: 22, scope: !15292)
!15390 = !DILocation(line: 226, column: 2, scope: !15292)
!15391 = distinct !DISubprogram(name: "mlxsw_reg_paos_swid_set", scope: !10113, file: !10113, line: 4441, type: !14426, scopeLine: 4441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15392 = !DILocalVariable(name: "buf", arg: 1, scope: !15391, file: !10113, line: 4441, type: !733)
!15393 = !DILocation(line: 4441, column: 1, scope: !15391)
!15394 = !DILocalVariable(name: "val", arg: 2, scope: !15391, file: !10113, line: 4441, type: !862)
!15395 = distinct !DISubprogram(name: "mlxsw_reg_paos_local_port_set", scope: !10113, file: !10113, line: 4447, type: !14426, scopeLine: 4447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15396 = !DILocalVariable(name: "buf", arg: 1, scope: !15395, file: !10113, line: 4447, type: !733)
!15397 = !DILocation(line: 4447, column: 1, scope: !15395)
!15398 = !DILocalVariable(name: "val", arg: 2, scope: !15395, file: !10113, line: 4447, type: !862)
!15399 = distinct !DISubprogram(name: "mlxsw_reg_paos_admin_status_set", scope: !10113, file: !10113, line: 4458, type: !14426, scopeLine: 4458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15400 = !DILocalVariable(name: "buf", arg: 1, scope: !15399, file: !10113, line: 4458, type: !733)
!15401 = !DILocation(line: 4458, column: 1, scope: !15399)
!15402 = !DILocalVariable(name: "val", arg: 2, scope: !15399, file: !10113, line: 4458, type: !862)
!15403 = distinct !DISubprogram(name: "mlxsw_reg_paos_oper_status_set", scope: !10113, file: !10113, line: 4468, type: !14426, scopeLine: 4468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15404 = !DILocalVariable(name: "buf", arg: 1, scope: !15403, file: !10113, line: 4468, type: !733)
!15405 = !DILocation(line: 4468, column: 1, scope: !15403)
!15406 = !DILocalVariable(name: "val", arg: 2, scope: !15403, file: !10113, line: 4468, type: !862)
!15407 = distinct !DISubprogram(name: "mlxsw_reg_paos_ase_set", scope: !10113, file: !10113, line: 4474, type: !14426, scopeLine: 4474, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15408 = !DILocalVariable(name: "buf", arg: 1, scope: !15407, file: !10113, line: 4474, type: !733)
!15409 = !DILocation(line: 4474, column: 1, scope: !15407)
!15410 = !DILocalVariable(name: "val", arg: 2, scope: !15407, file: !10113, line: 4474, type: !862)
!15411 = distinct !DISubprogram(name: "mlxsw_reg_paos_ee_set", scope: !10113, file: !10113, line: 4481, type: !14426, scopeLine: 4481, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15412 = !DILocalVariable(name: "buf", arg: 1, scope: !15411, file: !10113, line: 4481, type: !733)
!15413 = !DILocation(line: 4481, column: 1, scope: !15411)
!15414 = !DILocalVariable(name: "val", arg: 2, scope: !15411, file: !10113, line: 4481, type: !862)
!15415 = distinct !DISubprogram(name: "mlxsw_reg_paos_e_set", scope: !10113, file: !10113, line: 4490, type: !14426, scopeLine: 4490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15416 = !DILocalVariable(name: "buf", arg: 1, scope: !15415, file: !10113, line: 4490, type: !733)
!15417 = !DILocation(line: 4490, column: 1, scope: !15415)
!15418 = !DILocalVariable(name: "val", arg: 2, scope: !15415, file: !10113, line: 4490, type: !862)
!15419 = distinct !DISubprogram(name: "mlxsw_reg_svpe_local_port_set", scope: !10113, file: !10113, line: 1698, type: !14426, scopeLine: 1698, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15420 = !DILocalVariable(name: "buf", arg: 1, scope: !15419, file: !10113, line: 1698, type: !733)
!15421 = !DILocation(line: 1698, column: 1, scope: !15419)
!15422 = !DILocalVariable(name: "val", arg: 2, scope: !15419, file: !10113, line: 1698, type: !862)
!15423 = distinct !DISubprogram(name: "mlxsw_reg_svpe_vp_en_set", scope: !10113, file: !10113, line: 1706, type: !14426, scopeLine: 1706, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15424 = !DILocalVariable(name: "buf", arg: 1, scope: !15423, file: !10113, line: 1706, type: !733)
!15425 = !DILocation(line: 1706, column: 1, scope: !15423)
!15426 = !DILocalVariable(name: "val", arg: 2, scope: !15423, file: !10113, line: 1706, type: !862)
!15427 = distinct !DISubprogram(name: "mlxsw_reg_spvmlr_local_port_set", scope: !10113, file: !10113, line: 1818, type: !14426, scopeLine: 1818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15428 = !DILocalVariable(name: "buf", arg: 1, scope: !15427, file: !10113, line: 1818, type: !733)
!15429 = !DILocation(line: 1818, column: 1, scope: !15427)
!15430 = !DILocalVariable(name: "val", arg: 2, scope: !15427, file: !10113, line: 1818, type: !862)
!15431 = distinct !DISubprogram(name: "mlxsw_reg_spvmlr_num_rec_set", scope: !10113, file: !10113, line: 1824, type: !14426, scopeLine: 1824, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15432 = !DILocalVariable(name: "buf", arg: 1, scope: !15431, file: !10113, line: 1824, type: !733)
!15433 = !DILocation(line: 1824, column: 1, scope: !15431)
!15434 = !DILocalVariable(name: "val", arg: 2, scope: !15431, file: !10113, line: 1824, type: !862)
!15435 = distinct !DISubprogram(name: "mlxsw_reg_spvmlr_rec_learn_enable_set", scope: !10113, file: !10113, line: 1831, type: !15436, scopeLine: 1831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15436 = !DISubroutineType(types: !15437)
!15437 = !{null, !733, !633, !862}
!15438 = !DILocalVariable(name: "buf", arg: 1, scope: !15435, file: !10113, line: 1831, type: !733)
!15439 = !DILocation(line: 1831, column: 1, scope: !15435)
!15440 = !DILocalVariable(name: "index", arg: 2, scope: !15435, file: !10113, line: 1831, type: !633)
!15441 = !DILocalVariable(name: "val", arg: 3, scope: !15435, file: !10113, line: 1831, type: !862)
!15442 = distinct !DISubprogram(name: "mlxsw_reg_spvmlr_rec_vid_set", scope: !10113, file: !10113, line: 1838, type: !15436, scopeLine: 1838, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15443 = !DILocalVariable(name: "buf", arg: 1, scope: !15442, file: !10113, line: 1838, type: !733)
!15444 = !DILocation(line: 1838, column: 1, scope: !15442)
!15445 = !DILocalVariable(name: "index", arg: 2, scope: !15442, file: !10113, line: 1838, type: !633)
!15446 = !DILocalVariable(name: "val", arg: 3, scope: !15442, file: !10113, line: 1838, type: !862)
!15447 = distinct !DISubprogram(name: "mlxsw_reg_spaft_pack", scope: !10113, file: !10113, line: 994, type: !13152, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15448 = !DILocalVariable(name: "payload", arg: 1, scope: !15447, file: !10113, line: 994, type: !733)
!15449 = !DILocation(line: 994, column: 47, scope: !15447)
!15450 = !DILocalVariable(name: "local_port", arg: 2, scope: !15447, file: !10113, line: 994, type: !1552)
!15451 = !DILocation(line: 994, column: 59, scope: !15447)
!15452 = !DILocalVariable(name: "allow_untagged", arg: 3, scope: !15447, file: !10113, line: 995, type: !696)
!15453 = !DILocation(line: 995, column: 11, scope: !15447)
!15454 = !DILocation(line: 997, column: 2, scope: !15447)
!15455 = !DILocation(line: 998, column: 33, scope: !15447)
!15456 = !DILocation(line: 998, column: 42, scope: !15447)
!15457 = !DILocation(line: 998, column: 2, scope: !15447)
!15458 = !DILocation(line: 999, column: 37, scope: !15447)
!15459 = !DILocation(line: 999, column: 46, scope: !15447)
!15460 = !DILocation(line: 999, column: 2, scope: !15447)
!15461 = !DILocation(line: 1000, column: 40, scope: !15447)
!15462 = !DILocation(line: 1000, column: 49, scope: !15447)
!15463 = !DILocation(line: 1000, column: 2, scope: !15447)
!15464 = !DILocation(line: 1001, column: 35, scope: !15447)
!15465 = !DILocation(line: 1001, column: 2, scope: !15447)
!15466 = !DILocation(line: 1002, column: 1, scope: !15447)
!15467 = distinct !DISubprogram(name: "mlxsw_reg_spaft_local_port_set", scope: !10113, file: !10113, line: 967, type: !14426, scopeLine: 967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15468 = !DILocalVariable(name: "buf", arg: 1, scope: !15467, file: !10113, line: 967, type: !733)
!15469 = !DILocation(line: 967, column: 1, scope: !15467)
!15470 = !DILocalVariable(name: "val", arg: 2, scope: !15467, file: !10113, line: 967, type: !862)
!15471 = distinct !DISubprogram(name: "mlxsw_reg_spaft_allow_untagged_set", scope: !10113, file: !10113, line: 980, type: !14426, scopeLine: 980, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15472 = !DILocalVariable(name: "buf", arg: 1, scope: !15471, file: !10113, line: 980, type: !733)
!15473 = !DILocation(line: 980, column: 1, scope: !15471)
!15474 = !DILocalVariable(name: "val", arg: 2, scope: !15471, file: !10113, line: 980, type: !862)
!15475 = distinct !DISubprogram(name: "mlxsw_reg_spaft_allow_prio_tagged_set", scope: !10113, file: !10113, line: 986, type: !14426, scopeLine: 986, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15476 = !DILocalVariable(name: "buf", arg: 1, scope: !15475, file: !10113, line: 986, type: !733)
!15477 = !DILocation(line: 986, column: 1, scope: !15475)
!15478 = !DILocalVariable(name: "val", arg: 2, scope: !15475, file: !10113, line: 986, type: !862)
!15479 = distinct !DISubprogram(name: "mlxsw_reg_spaft_allow_tagged_set", scope: !10113, file: !10113, line: 992, type: !14426, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15480 = !DILocalVariable(name: "buf", arg: 1, scope: !15479, file: !10113, line: 992, type: !733)
!15481 = !DILocation(line: 992, column: 1, scope: !15479)
!15482 = !DILocalVariable(name: "val", arg: 2, scope: !15479, file: !10113, line: 992, type: !862)
!15483 = distinct !DISubprogram(name: "mlxsw_reg_spvid_pack", scope: !10113, file: !10113, line: 843, type: !15484, scopeLine: 844, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15484 = !DISubroutineType(types: !15485)
!15485 = !{null, !733, !1552, !1193}
!15486 = !DILocalVariable(name: "payload", arg: 1, scope: !15483, file: !10113, line: 843, type: !733)
!15487 = !DILocation(line: 843, column: 47, scope: !15483)
!15488 = !DILocalVariable(name: "local_port", arg: 2, scope: !15483, file: !10113, line: 843, type: !1552)
!15489 = !DILocation(line: 843, column: 59, scope: !15483)
!15490 = !DILocalVariable(name: "pvid", arg: 3, scope: !15483, file: !10113, line: 843, type: !1193)
!15491 = !DILocation(line: 843, column: 75, scope: !15483)
!15492 = !DILocation(line: 845, column: 2, scope: !15483)
!15493 = !DILocation(line: 846, column: 33, scope: !15483)
!15494 = !DILocation(line: 846, column: 42, scope: !15483)
!15495 = !DILocation(line: 846, column: 2, scope: !15483)
!15496 = !DILocation(line: 847, column: 27, scope: !15483)
!15497 = !DILocation(line: 847, column: 36, scope: !15483)
!15498 = !DILocation(line: 847, column: 2, scope: !15483)
!15499 = !DILocation(line: 848, column: 1, scope: !15483)
!15500 = distinct !DISubprogram(name: "mlxsw_reg_spvid_local_port_set", scope: !10113, file: !10113, line: 828, type: !14426, scopeLine: 828, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15501 = !DILocalVariable(name: "buf", arg: 1, scope: !15500, file: !10113, line: 828, type: !733)
!15502 = !DILocation(line: 828, column: 1, scope: !15500)
!15503 = !DILocalVariable(name: "val", arg: 2, scope: !15500, file: !10113, line: 828, type: !862)
!15504 = distinct !DISubprogram(name: "mlxsw_reg_spvid_pvid_set", scope: !10113, file: !10113, line: 841, type: !14426, scopeLine: 841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15505 = !DILocalVariable(name: "buf", arg: 1, scope: !15504, file: !10113, line: 841, type: !733)
!15506 = !DILocation(line: 841, column: 1, scope: !15504)
!15507 = !DILocalVariable(name: "val", arg: 2, scope: !15504, file: !10113, line: 841, type: !862)
!15508 = distinct !DISubprogram(name: "mlxsw_reg_ppcnt_swid_set", scope: !10113, file: !10113, line: 4660, type: !14426, scopeLine: 4660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15509 = !DILocalVariable(name: "buf", arg: 1, scope: !15508, file: !10113, line: 4660, type: !733)
!15510 = !DILocation(line: 4660, column: 1, scope: !15508)
!15511 = !DILocalVariable(name: "val", arg: 2, scope: !15508, file: !10113, line: 4660, type: !862)
!15512 = distinct !DISubprogram(name: "mlxsw_reg_ppcnt_local_port_set", scope: !10113, file: !10113, line: 4668, type: !14426, scopeLine: 4668, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15513 = !DILocalVariable(name: "buf", arg: 1, scope: !15512, file: !10113, line: 4668, type: !733)
!15514 = !DILocation(line: 4668, column: 1, scope: !15512)
!15515 = !DILocalVariable(name: "val", arg: 2, scope: !15512, file: !10113, line: 4668, type: !862)
!15516 = distinct !DISubprogram(name: "mlxsw_reg_ppcnt_pnat_set", scope: !10113, file: !10113, line: 4676, type: !14426, scopeLine: 4676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15517 = !DILocalVariable(name: "buf", arg: 1, scope: !15516, file: !10113, line: 4676, type: !733)
!15518 = !DILocation(line: 4676, column: 1, scope: !15516)
!15519 = !DILocalVariable(name: "val", arg: 2, scope: !15516, file: !10113, line: 4676, type: !862)
!15520 = distinct !DISubprogram(name: "mlxsw_reg_ppcnt_grp_set", scope: !10113, file: !10113, line: 4707, type: !14426, scopeLine: 4707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15521 = !DILocalVariable(name: "buf", arg: 1, scope: !15520, file: !10113, line: 4707, type: !733)
!15522 = !DILocation(line: 4707, column: 1, scope: !15520)
!15523 = !DILocalVariable(name: "val", arg: 2, scope: !15520, file: !10113, line: 4707, type: !862)
!15524 = distinct !DISubprogram(name: "mlxsw_reg_ppcnt_clr_set", scope: !10113, file: !10113, line: 4715, type: !14426, scopeLine: 4715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15525 = !DILocalVariable(name: "buf", arg: 1, scope: !15524, file: !10113, line: 4715, type: !733)
!15526 = !DILocation(line: 4715, column: 1, scope: !15524)
!15527 = !DILocalVariable(name: "val", arg: 2, scope: !15524, file: !10113, line: 4715, type: !862)
!15528 = distinct !DISubprogram(name: "mlxsw_reg_ppcnt_prio_tc_set", scope: !10113, file: !10113, line: 4725, type: !14426, scopeLine: 4725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15529 = !DILocalVariable(name: "buf", arg: 1, scope: !15528, file: !10113, line: 4725, type: !733)
!15530 = !DILocation(line: 4725, column: 1, scope: !15528)
!15531 = !DILocalVariable(name: "val", arg: 2, scope: !15528, file: !10113, line: 4725, type: !862)
!15532 = distinct !DISubprogram(name: "mlxsw_reg_spvm_pack", scope: !10113, file: !10113, line: 932, type: !15533, scopeLine: 935, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15533 = !DISubroutineType(types: !15534)
!15534 = !{null, !733, !1552, !1193, !1193, !696, !696}
!15535 = !DILocalVariable(name: "payload", arg: 1, scope: !15532, file: !10113, line: 932, type: !733)
!15536 = !DILocation(line: 932, column: 46, scope: !15532)
!15537 = !DILocalVariable(name: "local_port", arg: 2, scope: !15532, file: !10113, line: 932, type: !1552)
!15538 = !DILocation(line: 932, column: 58, scope: !15532)
!15539 = !DILocalVariable(name: "vid_begin", arg: 3, scope: !15532, file: !10113, line: 933, type: !1193)
!15540 = !DILocation(line: 933, column: 16, scope: !15532)
!15541 = !DILocalVariable(name: "vid_end", arg: 4, scope: !15532, file: !10113, line: 933, type: !1193)
!15542 = !DILocation(line: 933, column: 31, scope: !15532)
!15543 = !DILocalVariable(name: "is_member", arg: 5, scope: !15532, file: !10113, line: 934, type: !696)
!15544 = !DILocation(line: 934, column: 17, scope: !15532)
!15545 = !DILocalVariable(name: "untagged", arg: 6, scope: !15532, file: !10113, line: 934, type: !696)
!15546 = !DILocation(line: 934, column: 33, scope: !15532)
!15547 = !DILocalVariable(name: "size", scope: !15532, file: !10113, line: 936, type: !7)
!15548 = !DILocation(line: 936, column: 6, scope: !15532)
!15549 = !DILocation(line: 936, column: 13, scope: !15532)
!15550 = !DILocation(line: 936, column: 23, scope: !15532)
!15551 = !DILocation(line: 936, column: 21, scope: !15532)
!15552 = !DILocation(line: 936, column: 33, scope: !15532)
!15553 = !DILocalVariable(name: "i", scope: !15532, file: !10113, line: 937, type: !7)
!15554 = !DILocation(line: 937, column: 6, scope: !15532)
!15555 = !DILocation(line: 939, column: 2, scope: !15532)
!15556 = !DILocation(line: 940, column: 32, scope: !15532)
!15557 = !DILocation(line: 940, column: 41, scope: !15532)
!15558 = !DILocation(line: 940, column: 2, scope: !15532)
!15559 = !DILocation(line: 941, column: 29, scope: !15532)
!15560 = !DILocation(line: 941, column: 38, scope: !15532)
!15561 = !DILocation(line: 941, column: 2, scope: !15532)
!15562 = !DILocation(line: 943, column: 9, scope: !15563)
!15563 = distinct !DILexicalBlock(scope: !15532, file: !10113, line: 943, column: 2)
!15564 = !DILocation(line: 943, column: 7, scope: !15563)
!15565 = !DILocation(line: 943, column: 14, scope: !15566)
!15566 = distinct !DILexicalBlock(scope: !15563, file: !10113, line: 943, column: 2)
!15567 = !DILocation(line: 943, column: 18, scope: !15566)
!15568 = !DILocation(line: 943, column: 16, scope: !15566)
!15569 = !DILocation(line: 943, column: 2, scope: !15563)
!15570 = !DILocation(line: 944, column: 28, scope: !15571)
!15571 = distinct !DILexicalBlock(scope: !15566, file: !10113, line: 943, column: 29)
!15572 = !DILocation(line: 944, column: 37, scope: !15571)
!15573 = !DILocation(line: 944, column: 40, scope: !15571)
!15574 = !DILocation(line: 944, column: 3, scope: !15571)
!15575 = !DILocation(line: 945, column: 28, scope: !15571)
!15576 = !DILocation(line: 945, column: 37, scope: !15571)
!15577 = !DILocation(line: 945, column: 40, scope: !15571)
!15578 = !DILocation(line: 945, column: 3, scope: !15571)
!15579 = !DILocation(line: 946, column: 28, scope: !15571)
!15580 = !DILocation(line: 946, column: 37, scope: !15571)
!15581 = !DILocation(line: 946, column: 40, scope: !15571)
!15582 = !DILocation(line: 946, column: 3, scope: !15571)
!15583 = !DILocation(line: 947, column: 30, scope: !15571)
!15584 = !DILocation(line: 947, column: 39, scope: !15571)
!15585 = !DILocation(line: 947, column: 42, scope: !15571)
!15586 = !DILocation(line: 947, column: 54, scope: !15571)
!15587 = !DILocation(line: 947, column: 52, scope: !15571)
!15588 = !DILocation(line: 947, column: 3, scope: !15571)
!15589 = !DILocation(line: 948, column: 2, scope: !15571)
!15590 = !DILocation(line: 943, column: 25, scope: !15566)
!15591 = !DILocation(line: 943, column: 2, scope: !15566)
!15592 = distinct !{!15592, !15569, !15593}
!15593 = !DILocation(line: 948, column: 2, scope: !15563)
!15594 = !DILocation(line: 949, column: 1, scope: !15532)
!15595 = distinct !DISubprogram(name: "mlxsw_reg_spvm_local_port_set", scope: !10113, file: !10113, line: 884, type: !14426, scopeLine: 884, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15596 = !DILocalVariable(name: "buf", arg: 1, scope: !15595, file: !10113, line: 884, type: !733)
!15597 = !DILocation(line: 884, column: 1, scope: !15595)
!15598 = !DILocalVariable(name: "val", arg: 2, scope: !15595, file: !10113, line: 884, type: !862)
!15599 = distinct !DISubprogram(name: "mlxsw_reg_spvm_num_rec_set", scope: !10113, file: !10113, line: 897, type: !14426, scopeLine: 897, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15600 = !DILocalVariable(name: "buf", arg: 1, scope: !15599, file: !10113, line: 897, type: !733)
!15601 = !DILocation(line: 897, column: 1, scope: !15599)
!15602 = !DILocalVariable(name: "val", arg: 2, scope: !15599, file: !10113, line: 897, type: !862)
!15603 = distinct !DISubprogram(name: "mlxsw_reg_spvm_rec_i_set", scope: !10113, file: !10113, line: 903, type: !15436, scopeLine: 903, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15604 = !DILocalVariable(name: "buf", arg: 1, scope: !15603, file: !10113, line: 903, type: !733)
!15605 = !DILocation(line: 903, column: 1, scope: !15603)
!15606 = !DILocalVariable(name: "index", arg: 2, scope: !15603, file: !10113, line: 903, type: !633)
!15607 = !DILocalVariable(name: "val", arg: 3, scope: !15603, file: !10113, line: 903, type: !862)
!15608 = distinct !DISubprogram(name: "mlxsw_reg_spvm_rec_e_set", scope: !10113, file: !10113, line: 911, type: !15436, scopeLine: 911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15609 = !DILocalVariable(name: "buf", arg: 1, scope: !15608, file: !10113, line: 911, type: !733)
!15610 = !DILocation(line: 911, column: 1, scope: !15608)
!15611 = !DILocalVariable(name: "index", arg: 2, scope: !15608, file: !10113, line: 911, type: !633)
!15612 = !DILocalVariable(name: "val", arg: 3, scope: !15608, file: !10113, line: 911, type: !862)
!15613 = distinct !DISubprogram(name: "mlxsw_reg_spvm_rec_u_set", scope: !10113, file: !10113, line: 920, type: !15436, scopeLine: 920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15614 = !DILocalVariable(name: "buf", arg: 1, scope: !15613, file: !10113, line: 920, type: !733)
!15615 = !DILocation(line: 920, column: 1, scope: !15613)
!15616 = !DILocalVariable(name: "index", arg: 2, scope: !15613, file: !10113, line: 920, type: !633)
!15617 = !DILocalVariable(name: "val", arg: 3, scope: !15613, file: !10113, line: 920, type: !862)
!15618 = distinct !DISubprogram(name: "mlxsw_reg_spvm_rec_vid_set", scope: !10113, file: !10113, line: 928, type: !15436, scopeLine: 928, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15619 = !DILocalVariable(name: "buf", arg: 1, scope: !15618, file: !10113, line: 928, type: !733)
!15620 = !DILocation(line: 928, column: 1, scope: !15618)
!15621 = !DILocalVariable(name: "index", arg: 2, scope: !15618, file: !10113, line: 928, type: !633)
!15622 = !DILocalVariable(name: "val", arg: 3, scope: !15618, file: !10113, line: 928, type: !862)
!15623 = distinct !DISubprogram(name: "__list_add", scope: !14241, file: !14241, line: 63, type: !15624, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15624 = !DISubroutineType(types: !15625)
!15625 = !{null, !448, !448, !448}
!15626 = !DILocalVariable(name: "new", arg: 1, scope: !15623, file: !14241, line: 63, type: !448)
!15627 = !DILocation(line: 63, column: 49, scope: !15623)
!15628 = !DILocalVariable(name: "prev", arg: 2, scope: !15623, file: !14241, line: 64, type: !448)
!15629 = !DILocation(line: 64, column: 28, scope: !15623)
!15630 = !DILocalVariable(name: "next", arg: 3, scope: !15623, file: !14241, line: 65, type: !448)
!15631 = !DILocation(line: 65, column: 28, scope: !15623)
!15632 = !DILocation(line: 67, column: 24, scope: !15633)
!15633 = distinct !DILexicalBlock(scope: !15623, file: !14241, line: 67, column: 6)
!15634 = !DILocation(line: 67, column: 29, scope: !15633)
!15635 = !DILocation(line: 67, column: 35, scope: !15633)
!15636 = !DILocation(line: 67, column: 7, scope: !15633)
!15637 = !DILocation(line: 67, column: 6, scope: !15623)
!15638 = !DILocation(line: 68, column: 3, scope: !15633)
!15639 = !DILocation(line: 70, column: 15, scope: !15623)
!15640 = !DILocation(line: 70, column: 2, scope: !15623)
!15641 = !DILocation(line: 70, column: 8, scope: !15623)
!15642 = !DILocation(line: 70, column: 13, scope: !15623)
!15643 = !DILocation(line: 71, column: 14, scope: !15623)
!15644 = !DILocation(line: 71, column: 2, scope: !15623)
!15645 = !DILocation(line: 71, column: 7, scope: !15623)
!15646 = !DILocation(line: 71, column: 12, scope: !15623)
!15647 = !DILocation(line: 72, column: 14, scope: !15623)
!15648 = !DILocation(line: 72, column: 2, scope: !15623)
!15649 = !DILocation(line: 72, column: 7, scope: !15623)
!15650 = !DILocation(line: 72, column: 12, scope: !15623)
!15651 = !DILocation(line: 73, column: 2, scope: !15623)
!15652 = !DILocation(line: 73, column: 2, scope: !15653)
!15653 = distinct !DILexicalBlock(scope: !15623, file: !14241, line: 73, column: 2)
!15654 = !DILocation(line: 73, column: 2, scope: !15655)
!15655 = distinct !DILexicalBlock(scope: !15653, file: !14241, line: 73, column: 2)
!15656 = !DILocation(line: 73, column: 2, scope: !15657)
!15657 = distinct !DILexicalBlock(scope: !15653, file: !14241, line: 73, column: 2)
!15658 = !DILocation(line: 74, column: 1, scope: !15623)
!15659 = distinct !DISubprogram(name: "__list_add_valid", scope: !14241, file: !14241, line: 45, type: !15660, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15660 = !DISubroutineType(types: !15661)
!15661 = !{!696, !448, !448, !448}
!15662 = !DILocalVariable(name: "new", arg: 1, scope: !15659, file: !14241, line: 45, type: !448)
!15663 = !DILocation(line: 45, column: 55, scope: !15659)
!15664 = !DILocalVariable(name: "prev", arg: 2, scope: !15659, file: !14241, line: 46, type: !448)
!15665 = !DILocation(line: 46, column: 23, scope: !15659)
!15666 = !DILocalVariable(name: "next", arg: 3, scope: !15659, file: !14241, line: 47, type: !448)
!15667 = !DILocation(line: 47, column: 23, scope: !15659)
!15668 = !DILocation(line: 49, column: 2, scope: !15659)
!15669 = distinct !DISubprogram(name: "__list_del_entry", scope: !14241, file: !14241, line: 130, type: !14296, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15670 = !DILocalVariable(name: "entry", arg: 1, scope: !15669, file: !14241, line: 130, type: !448)
!15671 = !DILocation(line: 130, column: 55, scope: !15669)
!15672 = !DILocation(line: 132, column: 30, scope: !15673)
!15673 = distinct !DILexicalBlock(scope: !15669, file: !14241, line: 132, column: 6)
!15674 = !DILocation(line: 132, column: 7, scope: !15673)
!15675 = !DILocation(line: 132, column: 6, scope: !15669)
!15676 = !DILocation(line: 133, column: 3, scope: !15673)
!15677 = !DILocation(line: 135, column: 13, scope: !15669)
!15678 = !DILocation(line: 135, column: 20, scope: !15669)
!15679 = !DILocation(line: 135, column: 26, scope: !15669)
!15680 = !DILocation(line: 135, column: 33, scope: !15669)
!15681 = !DILocation(line: 135, column: 2, scope: !15669)
!15682 = !DILocation(line: 136, column: 1, scope: !15669)
!15683 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !14241, file: !14241, line: 51, type: !15684, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15684 = !DISubroutineType(types: !15685)
!15685 = !{!696, !448}
!15686 = !DILocalVariable(name: "entry", arg: 1, scope: !15683, file: !14241, line: 51, type: !448)
!15687 = !DILocation(line: 51, column: 61, scope: !15683)
!15688 = !DILocation(line: 53, column: 2, scope: !15683)
!15689 = distinct !DISubprogram(name: "__list_del", scope: !14241, file: !14241, line: 110, type: !14242, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15690 = !DILocalVariable(name: "prev", arg: 1, scope: !15689, file: !14241, line: 110, type: !448)
!15691 = !DILocation(line: 110, column: 50, scope: !15689)
!15692 = !DILocalVariable(name: "next", arg: 2, scope: !15689, file: !14241, line: 110, type: !448)
!15693 = !DILocation(line: 110, column: 75, scope: !15689)
!15694 = !DILocation(line: 112, column: 15, scope: !15689)
!15695 = !DILocation(line: 112, column: 2, scope: !15689)
!15696 = !DILocation(line: 112, column: 8, scope: !15689)
!15697 = !DILocation(line: 112, column: 13, scope: !15689)
!15698 = !DILocation(line: 113, column: 2, scope: !15689)
!15699 = !DILocation(line: 113, column: 2, scope: !15700)
!15700 = distinct !DILexicalBlock(scope: !15689, file: !14241, line: 113, column: 2)
!15701 = !DILocation(line: 113, column: 2, scope: !15702)
!15702 = distinct !DILexicalBlock(scope: !15700, file: !14241, line: 113, column: 2)
!15703 = !DILocation(line: 113, column: 2, scope: !15704)
!15704 = distinct !DILexicalBlock(scope: !15700, file: !14241, line: 113, column: 2)
!15705 = !DILocation(line: 114, column: 1, scope: !15689)
!15706 = distinct !DISubprogram(name: "mlxsw_reg_qeec_local_port_set", scope: !10113, file: !10113, line: 3503, type: !14426, scopeLine: 3503, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15707 = !DILocalVariable(name: "buf", arg: 1, scope: !15706, file: !10113, line: 3503, type: !733)
!15708 = !DILocation(line: 3503, column: 1, scope: !15706)
!15709 = !DILocalVariable(name: "val", arg: 2, scope: !15706, file: !10113, line: 3503, type: !862)
!15710 = distinct !DISubprogram(name: "mlxsw_reg_qeec_element_hierarchy_set", scope: !10113, file: !10113, line: 3519, type: !14426, scopeLine: 3519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15711 = !DILocalVariable(name: "buf", arg: 1, scope: !15710, file: !10113, line: 3519, type: !733)
!15712 = !DILocation(line: 3519, column: 1, scope: !15710)
!15713 = !DILocalVariable(name: "val", arg: 2, scope: !15710, file: !10113, line: 3519, type: !862)
!15714 = distinct !DISubprogram(name: "mlxsw_reg_qeec_element_index_set", scope: !10113, file: !10113, line: 3525, type: !14426, scopeLine: 3525, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15715 = !DILocalVariable(name: "buf", arg: 1, scope: !15714, file: !10113, line: 3525, type: !733)
!15716 = !DILocation(line: 3525, column: 1, scope: !15714)
!15717 = !DILocalVariable(name: "val", arg: 2, scope: !15714, file: !10113, line: 3525, type: !862)
!15718 = distinct !DISubprogram(name: "mlxsw_reg_qeec_next_element_index_set", scope: !10113, file: !10113, line: 3533, type: !14426, scopeLine: 3533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15719 = !DILocalVariable(name: "buf", arg: 1, scope: !15718, file: !10113, line: 3533, type: !733)
!15720 = !DILocation(line: 3533, column: 1, scope: !15718)
!15721 = !DILocalVariable(name: "val", arg: 2, scope: !15718, file: !10113, line: 3533, type: !862)
!15722 = distinct !DISubprogram(name: "mlxsw_reg_qtct_local_port_set", scope: !10113, file: !10113, line: 3454, type: !14426, scopeLine: 3454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15723 = !DILocalVariable(name: "buf", arg: 1, scope: !15722, file: !10113, line: 3454, type: !733)
!15724 = !DILocation(line: 3454, column: 1, scope: !15722)
!15725 = !DILocalVariable(name: "val", arg: 2, scope: !15722, file: !10113, line: 3454, type: !862)
!15726 = distinct !DISubprogram(name: "mlxsw_reg_qtct_switch_prio_set", scope: !10113, file: !10113, line: 3467, type: !14426, scopeLine: 3467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15727 = !DILocalVariable(name: "buf", arg: 1, scope: !15726, file: !10113, line: 3467, type: !733)
!15728 = !DILocation(line: 3467, column: 1, scope: !15726)
!15729 = !DILocalVariable(name: "val", arg: 2, scope: !15726, file: !10113, line: 3467, type: !862)
!15730 = distinct !DISubprogram(name: "mlxsw_reg_qtct_tclass_set", scope: !10113, file: !10113, line: 3477, type: !14426, scopeLine: 3477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15731 = !DILocalVariable(name: "buf", arg: 1, scope: !15730, file: !10113, line: 3477, type: !733)
!15732 = !DILocation(line: 3477, column: 1, scope: !15730)
!15733 = !DILocalVariable(name: "val", arg: 2, scope: !15730, file: !10113, line: 3477, type: !862)
!15734 = distinct !DISubprogram(name: "__rcu_read_lock", scope: !14655, file: !14655, line: 64, type: !4299, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15735 = !DILocation(line: 66, column: 2, scope: !15734)
!15736 = !{i32 -2145056534}
!15737 = !DILocation(line: 67, column: 1, scope: !15734)
!15738 = distinct !DISubprogram(name: "__rcu_read_unlock", scope: !14655, file: !14655, line: 69, type: !4299, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15739 = !DILocation(line: 71, column: 2, scope: !15738)
!15740 = !{i32 -2145056321}
!15741 = !DILocation(line: 72, column: 2, scope: !15738)
!15742 = !DILocation(line: 72, column: 2, scope: !15743)
!15743 = distinct !DILexicalBlock(scope: !15738, file: !14655, line: 72, column: 2)
!15744 = !DILocation(line: 73, column: 1, scope: !15738)
!15745 = distinct !DISubprogram(name: "mlxsw_sp_port_open", scope: !3, file: !3, line: 520, type: !563, scopeLine: 521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15746 = !DILocalVariable(name: "dev", arg: 1, scope: !15745, file: !3, line: 520, type: !451)
!15747 = !DILocation(line: 520, column: 50, scope: !15745)
!15748 = !DILocalVariable(name: "mlxsw_sp_port", scope: !15745, file: !3, line: 522, type: !10715)
!15749 = !DILocation(line: 522, column: 24, scope: !15745)
!15750 = !DILocation(line: 522, column: 52, scope: !15745)
!15751 = !DILocation(line: 522, column: 40, scope: !15745)
!15752 = !DILocalVariable(name: "err", scope: !15745, file: !3, line: 523, type: !7)
!15753 = !DILocation(line: 523, column: 6, scope: !15745)
!15754 = !DILocation(line: 525, column: 39, scope: !15745)
!15755 = !DILocation(line: 525, column: 8, scope: !15745)
!15756 = !DILocation(line: 525, column: 6, scope: !15745)
!15757 = !DILocation(line: 526, column: 6, scope: !15758)
!15758 = distinct !DILexicalBlock(scope: !15745, file: !3, line: 526, column: 6)
!15759 = !DILocation(line: 526, column: 6, scope: !15745)
!15760 = !DILocation(line: 527, column: 10, scope: !15758)
!15761 = !DILocation(line: 527, column: 3, scope: !15758)
!15762 = !DILocation(line: 528, column: 20, scope: !15745)
!15763 = !DILocation(line: 528, column: 2, scope: !15745)
!15764 = !DILocation(line: 529, column: 2, scope: !15745)
!15765 = !DILocation(line: 530, column: 1, scope: !15745)
!15766 = distinct !DISubprogram(name: "mlxsw_sp_port_stop", scope: !3, file: !3, line: 532, type: !563, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15767 = !DILocalVariable(name: "dev", arg: 1, scope: !15766, file: !3, line: 532, type: !451)
!15768 = !DILocation(line: 532, column: 50, scope: !15766)
!15769 = !DILocalVariable(name: "mlxsw_sp_port", scope: !15766, file: !3, line: 534, type: !10715)
!15770 = !DILocation(line: 534, column: 24, scope: !15766)
!15771 = !DILocation(line: 534, column: 52, scope: !15766)
!15772 = !DILocation(line: 534, column: 40, scope: !15766)
!15773 = !DILocation(line: 536, column: 19, scope: !15766)
!15774 = !DILocation(line: 536, column: 2, scope: !15766)
!15775 = !DILocation(line: 537, column: 40, scope: !15766)
!15776 = !DILocation(line: 537, column: 9, scope: !15766)
!15777 = !DILocation(line: 537, column: 2, scope: !15766)
!15778 = distinct !DISubprogram(name: "mlxsw_sp_port_xmit", scope: !3, file: !3, line: 540, type: !573, scopeLine: 542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15779 = !DILocalVariable(name: "skb", arg: 1, scope: !15778, file: !3, line: 540, type: !576)
!15780 = !DILocation(line: 540, column: 55, scope: !15778)
!15781 = !DILocalVariable(name: "dev", arg: 2, scope: !15778, file: !3, line: 541, type: !451)
!15782 = !DILocation(line: 541, column: 30, scope: !15778)
!15783 = !DILocalVariable(name: "mlxsw_sp_port", scope: !15778, file: !3, line: 543, type: !10715)
!15784 = !DILocation(line: 543, column: 24, scope: !15778)
!15785 = !DILocation(line: 543, column: 52, scope: !15778)
!15786 = !DILocation(line: 543, column: 40, scope: !15778)
!15787 = !DILocalVariable(name: "mlxsw_sp", scope: !15778, file: !3, line: 544, type: !10721)
!15788 = !DILocation(line: 544, column: 19, scope: !15778)
!15789 = !DILocation(line: 544, column: 30, scope: !15778)
!15790 = !DILocation(line: 544, column: 45, scope: !15778)
!15791 = !DILocalVariable(name: "pcpu_stats", scope: !15778, file: !3, line: 545, type: !10686)
!15792 = !DILocation(line: 545, column: 35, scope: !15778)
!15793 = !DILocalVariable(name: "tx_info", scope: !15778, file: !3, line: 546, type: !12153)
!15794 = !DILocation(line: 546, column: 29, scope: !15778)
!15795 = !DILocation(line: 546, column: 39, scope: !15778)
!15796 = !DILocation(line: 547, column: 17, scope: !15778)
!15797 = !DILocation(line: 547, column: 32, scope: !15778)
!15798 = !DILocalVariable(name: "len", scope: !15778, file: !3, line: 550, type: !492)
!15799 = !DILocation(line: 550, column: 6, scope: !15778)
!15800 = !DILocalVariable(name: "err", scope: !15778, file: !3, line: 551, type: !7)
!15801 = !DILocation(line: 551, column: 6, scope: !15778)
!15802 = !DILocation(line: 553, column: 19, scope: !15803)
!15803 = distinct !DILexicalBlock(scope: !15778, file: !3, line: 553, column: 6)
!15804 = !DILocation(line: 553, column: 6, scope: !15803)
!15805 = !DILocation(line: 553, column: 6, scope: !15778)
!15806 = !DILocation(line: 554, column: 3, scope: !15807)
!15807 = distinct !DILexicalBlock(scope: !15803, file: !3, line: 553, column: 42)
!15808 = !DILocation(line: 554, column: 3, scope: !15809)
!15809 = distinct !DILexicalBlock(scope: !15807, file: !3, line: 554, column: 3)
!15810 = !DILocalVariable(name: "__vpp_verify", scope: !15811, file: !3, line: 554, type: !2424)
!15811 = distinct !DILexicalBlock(scope: !15809, file: !3, line: 554, column: 3)
!15812 = !DILocation(line: 554, column: 3, scope: !15811)
!15813 = !DILocalVariable(name: "pao_ID__", scope: !15814, file: !3, line: 554, type: !14846)
!15814 = distinct !DILexicalBlock(scope: !15809, file: !3, line: 554, column: 3)
!15815 = !DILocation(line: 554, column: 3, scope: !15814)
!15816 = !DILocation(line: 554, column: 3, scope: !15817)
!15817 = distinct !DILexicalBlock(scope: !15818, file: !3, line: 554, column: 3)
!15818 = distinct !DILexicalBlock(scope: !15814, file: !3, line: 554, column: 3)
!15819 = !{i32 -2134409462}
!15820 = !DILocation(line: 555, column: 21, scope: !15807)
!15821 = !DILocation(line: 555, column: 3, scope: !15807)
!15822 = !DILocation(line: 556, column: 3, scope: !15807)
!15823 = !DILocation(line: 559, column: 9, scope: !15778)
!15824 = !DILocation(line: 559, column: 14, scope: !15778)
!15825 = !DILocation(line: 559, column: 2, scope: !15778)
!15826 = !DILocation(line: 561, column: 35, scope: !15827)
!15827 = distinct !DILexicalBlock(scope: !15778, file: !3, line: 561, column: 6)
!15828 = !DILocation(line: 561, column: 45, scope: !15827)
!15829 = !DILocation(line: 561, column: 6, scope: !15827)
!15830 = !DILocation(line: 561, column: 6, scope: !15778)
!15831 = !DILocation(line: 562, column: 3, scope: !15827)
!15832 = !DILocation(line: 564, column: 18, scope: !15833)
!15833 = distinct !DILexicalBlock(scope: !15778, file: !3, line: 564, column: 6)
!15834 = !DILocation(line: 564, column: 6, scope: !15833)
!15835 = !DILocation(line: 564, column: 6, scope: !15778)
!15836 = !DILocation(line: 565, column: 3, scope: !15837)
!15837 = distinct !DILexicalBlock(scope: !15833, file: !3, line: 564, column: 24)
!15838 = !DILocation(line: 565, column: 3, scope: !15839)
!15839 = distinct !DILexicalBlock(scope: !15837, file: !3, line: 565, column: 3)
!15840 = !DILocalVariable(name: "__vpp_verify", scope: !15841, file: !3, line: 565, type: !2424)
!15841 = distinct !DILexicalBlock(scope: !15839, file: !3, line: 565, column: 3)
!15842 = !DILocation(line: 565, column: 3, scope: !15841)
!15843 = !DILocalVariable(name: "pao_ID__", scope: !15844, file: !3, line: 565, type: !14846)
!15844 = distinct !DILexicalBlock(scope: !15839, file: !3, line: 565, column: 3)
!15845 = !DILocation(line: 565, column: 3, scope: !15844)
!15846 = !DILocation(line: 565, column: 3, scope: !15847)
!15847 = distinct !DILexicalBlock(scope: !15848, file: !3, line: 565, column: 3)
!15848 = distinct !DILexicalBlock(scope: !15844, file: !3, line: 565, column: 3)
!15849 = !{i32 -2134400554}
!15850 = !DILocation(line: 566, column: 3, scope: !15837)
!15851 = !DILocation(line: 569, column: 27, scope: !15778)
!15852 = !DILocation(line: 569, column: 2, scope: !15778)
!15853 = !DILocation(line: 573, column: 8, scope: !15778)
!15854 = !DILocation(line: 573, column: 13, scope: !15778)
!15855 = !DILocation(line: 573, column: 17, scope: !15778)
!15856 = !DILocation(line: 573, column: 6, scope: !15778)
!15857 = !DILocation(line: 578, column: 32, scope: !15778)
!15858 = !DILocation(line: 578, column: 42, scope: !15778)
!15859 = !DILocation(line: 578, column: 48, scope: !15778)
!15860 = !DILocation(line: 578, column: 8, scope: !15778)
!15861 = !DILocation(line: 578, column: 6, scope: !15778)
!15862 = !DILocation(line: 580, column: 7, scope: !15863)
!15863 = distinct !DILexicalBlock(scope: !15778, file: !3, line: 580, column: 6)
!15864 = !DILocation(line: 580, column: 6, scope: !15778)
!15865 = !DILocation(line: 581, column: 16, scope: !15866)
!15866 = distinct !DILexicalBlock(scope: !15867, file: !3, line: 581, column: 16)
!15867 = distinct !DILexicalBlock(scope: !15868, file: !3, line: 581, column: 16)
!15868 = distinct !DILexicalBlock(scope: !15863, file: !3, line: 580, column: 12)
!15869 = !DILocalVariable(name: "__vpp_verify", scope: !15870, file: !3, line: 581, type: !2424)
!15870 = distinct !DILexicalBlock(scope: !15866, file: !3, line: 581, column: 16)
!15871 = !DILocation(line: 581, column: 16, scope: !15870)
!15872 = !DILocation(line: 581, column: 16, scope: !15867)
!15873 = !DILocation(line: 581, column: 14, scope: !15868)
!15874 = !DILocation(line: 582, column: 27, scope: !15868)
!15875 = !DILocation(line: 582, column: 39, scope: !15868)
!15876 = !DILocation(line: 582, column: 3, scope: !15868)
!15877 = !DILocation(line: 583, column: 3, scope: !15868)
!15878 = !DILocation(line: 583, column: 15, scope: !15868)
!15879 = !DILocation(line: 583, column: 25, scope: !15868)
!15880 = !DILocation(line: 584, column: 27, scope: !15868)
!15881 = !DILocation(line: 584, column: 3, scope: !15868)
!15882 = !DILocation(line: 584, column: 15, scope: !15868)
!15883 = !DILocation(line: 584, column: 24, scope: !15868)
!15884 = !DILocation(line: 585, column: 25, scope: !15868)
!15885 = !DILocation(line: 585, column: 37, scope: !15868)
!15886 = !DILocation(line: 585, column: 3, scope: !15868)
!15887 = !DILocation(line: 586, column: 2, scope: !15868)
!15888 = !DILocation(line: 587, column: 3, scope: !15889)
!15889 = distinct !DILexicalBlock(scope: !15863, file: !3, line: 586, column: 9)
!15890 = !DILocation(line: 587, column: 3, scope: !15891)
!15891 = distinct !DILexicalBlock(scope: !15889, file: !3, line: 587, column: 3)
!15892 = !DILocalVariable(name: "__vpp_verify", scope: !15893, file: !3, line: 587, type: !2424)
!15893 = distinct !DILexicalBlock(scope: !15891, file: !3, line: 587, column: 3)
!15894 = !DILocation(line: 587, column: 3, scope: !15893)
!15895 = !DILocalVariable(name: "pao_ID__", scope: !15896, file: !3, line: 587, type: !14846)
!15896 = distinct !DILexicalBlock(scope: !15891, file: !3, line: 587, column: 3)
!15897 = !DILocation(line: 587, column: 3, scope: !15896)
!15898 = !DILocation(line: 587, column: 3, scope: !15899)
!15899 = distinct !DILexicalBlock(scope: !15900, file: !3, line: 587, column: 3)
!15900 = distinct !DILexicalBlock(scope: !15896, file: !3, line: 587, column: 3)
!15901 = !{i32 -2134391147}
!15902 = !DILocation(line: 588, column: 21, scope: !15889)
!15903 = !DILocation(line: 588, column: 3, scope: !15889)
!15904 = !DILocation(line: 590, column: 2, scope: !15778)
!15905 = !DILocation(line: 591, column: 1, scope: !15778)
!15906 = distinct !DISubprogram(name: "mlxsw_sp_set_rx_mode", scope: !3, file: !3, line: 593, type: !567, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15907 = !DILocalVariable(name: "dev", arg: 1, scope: !15906, file: !3, line: 593, type: !451)
!15908 = !DILocation(line: 593, column: 53, scope: !15906)
!15909 = !DILocation(line: 595, column: 1, scope: !15906)
!15910 = distinct !DISubprogram(name: "mlxsw_sp_port_set_mac_address", scope: !3, file: !3, line: 597, type: !7915, scopeLine: 598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15911 = !DILocalVariable(name: "dev", arg: 1, scope: !15910, file: !3, line: 597, type: !451)
!15912 = !DILocation(line: 597, column: 61, scope: !15910)
!15913 = !DILocalVariable(name: "p", arg: 2, scope: !15910, file: !3, line: 597, type: !726)
!15914 = !DILocation(line: 597, column: 72, scope: !15910)
!15915 = !DILocalVariable(name: "mlxsw_sp_port", scope: !15910, file: !3, line: 599, type: !10715)
!15916 = !DILocation(line: 599, column: 24, scope: !15910)
!15917 = !DILocation(line: 599, column: 52, scope: !15910)
!15918 = !DILocation(line: 599, column: 40, scope: !15910)
!15919 = !DILocalVariable(name: "addr", scope: !15910, file: !3, line: 600, type: !674)
!15920 = !DILocation(line: 600, column: 19, scope: !15910)
!15921 = !DILocation(line: 600, column: 26, scope: !15910)
!15922 = !DILocalVariable(name: "err", scope: !15910, file: !3, line: 601, type: !7)
!15923 = !DILocation(line: 601, column: 6, scope: !15910)
!15924 = !DILocation(line: 603, column: 27, scope: !15925)
!15925 = distinct !DILexicalBlock(scope: !15910, file: !3, line: 603, column: 6)
!15926 = !DILocation(line: 603, column: 33, scope: !15925)
!15927 = !DILocation(line: 603, column: 7, scope: !15925)
!15928 = !DILocation(line: 603, column: 6, scope: !15910)
!15929 = !DILocation(line: 604, column: 3, scope: !15925)
!15930 = !DILocation(line: 606, column: 35, scope: !15910)
!15931 = !DILocation(line: 606, column: 50, scope: !15910)
!15932 = !DILocation(line: 606, column: 56, scope: !15910)
!15933 = !DILocation(line: 606, column: 8, scope: !15910)
!15934 = !DILocation(line: 606, column: 6, scope: !15910)
!15935 = !DILocation(line: 607, column: 6, scope: !15936)
!15936 = distinct !DILexicalBlock(scope: !15910, file: !3, line: 607, column: 6)
!15937 = !DILocation(line: 607, column: 6, scope: !15910)
!15938 = !DILocation(line: 608, column: 10, scope: !15936)
!15939 = !DILocation(line: 608, column: 3, scope: !15936)
!15940 = !DILocation(line: 609, column: 9, scope: !15910)
!15941 = !DILocation(line: 609, column: 14, scope: !15910)
!15942 = !DILocation(line: 609, column: 24, scope: !15910)
!15943 = !DILocation(line: 609, column: 30, scope: !15910)
!15944 = !DILocation(line: 609, column: 2, scope: !15910)
!15945 = !DILocation(line: 609, column: 39, scope: !15910)
!15946 = !DILocation(line: 609, column: 44, scope: !15910)
!15947 = !DILocation(line: 610, column: 2, scope: !15910)
!15948 = !DILocation(line: 611, column: 1, scope: !15910)
!15949 = distinct !DISubprogram(name: "mlxsw_sp_port_ioctl", scope: !3, file: !3, line: 1138, type: !7920, scopeLine: 1139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15950 = !DILocalVariable(name: "dev", arg: 1, scope: !15949, file: !3, line: 1138, type: !451)
!15951 = !DILocation(line: 1138, column: 40, scope: !15949)
!15952 = !DILocalVariable(name: "ifr", arg: 2, scope: !15949, file: !3, line: 1138, type: !7922)
!15953 = !DILocation(line: 1138, column: 59, scope: !15949)
!15954 = !DILocalVariable(name: "cmd", arg: 3, scope: !15949, file: !3, line: 1138, type: !7)
!15955 = !DILocation(line: 1138, column: 68, scope: !15949)
!15956 = !DILocalVariable(name: "mlxsw_sp_port", scope: !15949, file: !3, line: 1140, type: !10715)
!15957 = !DILocation(line: 1140, column: 24, scope: !15949)
!15958 = !DILocation(line: 1140, column: 52, scope: !15949)
!15959 = !DILocation(line: 1140, column: 40, scope: !15949)
!15960 = !DILocation(line: 1142, column: 10, scope: !15949)
!15961 = !DILocation(line: 1142, column: 2, scope: !15949)
!15962 = !DILocation(line: 1144, column: 37, scope: !15963)
!15963 = distinct !DILexicalBlock(scope: !15949, file: !3, line: 1142, column: 15)
!15964 = !DILocation(line: 1144, column: 52, scope: !15963)
!15965 = !DILocation(line: 1144, column: 10, scope: !15963)
!15966 = !DILocation(line: 1144, column: 3, scope: !15963)
!15967 = !DILocation(line: 1146, column: 37, scope: !15963)
!15968 = !DILocation(line: 1146, column: 52, scope: !15963)
!15969 = !DILocation(line: 1146, column: 10, scope: !15963)
!15970 = !DILocation(line: 1146, column: 3, scope: !15963)
!15971 = !DILocation(line: 1148, column: 3, scope: !15963)
!15972 = !DILocation(line: 1150, column: 1, scope: !15949)
!15973 = distinct !DISubprogram(name: "mlxsw_sp_port_change_mtu", scope: !3, file: !3, line: 613, type: !8036, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!15974 = !DILocalVariable(name: "dev", arg: 1, scope: !15973, file: !3, line: 613, type: !451)
!15975 = !DILocation(line: 613, column: 56, scope: !15973)
!15976 = !DILocalVariable(name: "mtu", arg: 2, scope: !15973, file: !3, line: 613, type: !7)
!15977 = !DILocation(line: 613, column: 65, scope: !15973)
!15978 = !DILocalVariable(name: "mlxsw_sp_port", scope: !15973, file: !3, line: 615, type: !10715)
!15979 = !DILocation(line: 615, column: 24, scope: !15973)
!15980 = !DILocation(line: 615, column: 52, scope: !15973)
!15981 = !DILocation(line: 615, column: 40, scope: !15973)
!15982 = !DILocalVariable(name: "orig_hdroom", scope: !15973, file: !3, line: 616, type: !11449)
!15983 = !DILocation(line: 616, column: 25, scope: !15973)
!15984 = !DILocalVariable(name: "hdroom", scope: !15973, file: !3, line: 617, type: !11449)
!15985 = !DILocation(line: 617, column: 25, scope: !15973)
!15986 = !DILocalVariable(name: "err", scope: !15973, file: !3, line: 618, type: !7)
!15987 = !DILocation(line: 618, column: 6, scope: !15973)
!15988 = !DILocation(line: 620, column: 17, scope: !15973)
!15989 = !DILocation(line: 620, column: 32, scope: !15973)
!15990 = !DILocation(line: 620, column: 16, scope: !15973)
!15991 = !DILocation(line: 622, column: 11, scope: !15973)
!15992 = !DILocation(line: 623, column: 15, scope: !15973)
!15993 = !DILocation(line: 623, column: 9, scope: !15973)
!15994 = !DILocation(line: 623, column: 13, scope: !15973)
!15995 = !DILocation(line: 624, column: 35, scope: !15973)
!15996 = !DILocation(line: 624, column: 2, scope: !15973)
!15997 = !DILocation(line: 626, column: 34, scope: !15973)
!15998 = !DILocation(line: 626, column: 8, scope: !15973)
!15999 = !DILocation(line: 626, column: 6, scope: !15973)
!16000 = !DILocation(line: 627, column: 6, scope: !16001)
!16001 = distinct !DILexicalBlock(scope: !15973, file: !3, line: 627, column: 6)
!16002 = !DILocation(line: 627, column: 6, scope: !15973)
!16003 = !DILocation(line: 628, column: 14, scope: !16004)
!16004 = distinct !DILexicalBlock(scope: !16001, file: !3, line: 627, column: 11)
!16005 = !DILocation(line: 628, column: 3, scope: !16004)
!16006 = !DILocation(line: 629, column: 10, scope: !16004)
!16007 = !DILocation(line: 629, column: 3, scope: !16004)
!16008 = !DILocation(line: 632, column: 30, scope: !15973)
!16009 = !DILocation(line: 632, column: 45, scope: !15973)
!16010 = !DILocation(line: 632, column: 8, scope: !15973)
!16011 = !DILocation(line: 632, column: 6, scope: !15973)
!16012 = !DILocation(line: 633, column: 6, scope: !16013)
!16013 = distinct !DILexicalBlock(scope: !15973, file: !3, line: 633, column: 6)
!16014 = !DILocation(line: 633, column: 6, scope: !15973)
!16015 = !DILocation(line: 634, column: 3, scope: !16013)
!16016 = !DILocation(line: 635, column: 13, scope: !15973)
!16017 = !DILocation(line: 635, column: 2, scope: !15973)
!16018 = !DILocation(line: 635, column: 7, scope: !15973)
!16019 = !DILocation(line: 635, column: 11, scope: !15973)
!16020 = !DILocation(line: 636, column: 2, scope: !15973)
!16021 = !DILabel(scope: !15973, name: "err_port_mtu_set", file: !3, line: 638)
!16022 = !DILocation(line: 638, column: 1, scope: !15973)
!16023 = !DILocation(line: 639, column: 28, scope: !15973)
!16024 = !DILocation(line: 639, column: 2, scope: !15973)
!16025 = !DILocation(line: 640, column: 9, scope: !15973)
!16026 = !DILocation(line: 640, column: 2, scope: !15973)
!16027 = !DILocation(line: 641, column: 1, scope: !15973)
!16028 = distinct !DISubprogram(name: "mlxsw_sp_port_get_stats64", scope: !3, file: !3, line: 813, type: !8048, scopeLine: 815, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16029 = !DILocalVariable(name: "dev", arg: 1, scope: !16028, file: !3, line: 813, type: !451)
!16030 = !DILocation(line: 813, column: 46, scope: !16028)
!16031 = !DILocalVariable(name: "stats", arg: 2, scope: !16028, file: !3, line: 814, type: !8050)
!16032 = !DILocation(line: 814, column: 32, scope: !16028)
!16033 = !DILocalVariable(name: "mlxsw_sp_port", scope: !16028, file: !3, line: 816, type: !10715)
!16034 = !DILocation(line: 816, column: 24, scope: !16028)
!16035 = !DILocation(line: 816, column: 52, scope: !16028)
!16036 = !DILocation(line: 816, column: 40, scope: !16028)
!16037 = !DILocation(line: 818, column: 9, scope: !16028)
!16038 = !DILocation(line: 818, column: 2, scope: !16028)
!16039 = !DILocation(line: 818, column: 17, scope: !16028)
!16040 = !DILocation(line: 818, column: 32, scope: !16028)
!16041 = !DILocation(line: 818, column: 50, scope: !16028)
!16042 = !DILocation(line: 819, column: 1, scope: !16028)
!16043 = distinct !DISubprogram(name: "mlxsw_sp_port_has_offload_stats", scope: !3, file: !3, line: 675, type: !8080, scopeLine: 676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16044 = !DILocalVariable(name: "dev", arg: 1, scope: !16043, file: !3, line: 675, type: !3023)
!16045 = !DILocation(line: 675, column: 70, scope: !16043)
!16046 = !DILocalVariable(name: "attr_id", arg: 2, scope: !16043, file: !3, line: 675, type: !7)
!16047 = !DILocation(line: 675, column: 79, scope: !16043)
!16048 = !DILocation(line: 677, column: 10, scope: !16043)
!16049 = !DILocation(line: 677, column: 2, scope: !16043)
!16050 = !DILocation(line: 679, column: 3, scope: !16051)
!16051 = distinct !DILexicalBlock(scope: !16043, file: !3, line: 677, column: 19)
!16052 = !DILocation(line: 682, column: 2, scope: !16043)
!16053 = !DILocation(line: 683, column: 1, scope: !16043)
!16054 = distinct !DISubprogram(name: "mlxsw_sp_port_get_offload_stats", scope: !3, file: !3, line: 685, type: !8084, scopeLine: 687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16055 = !DILocalVariable(name: "attr_id", arg: 1, scope: !16054, file: !3, line: 685, type: !7)
!16056 = !DILocation(line: 685, column: 48, scope: !16054)
!16057 = !DILocalVariable(name: "dev", arg: 2, scope: !16054, file: !3, line: 685, type: !3023)
!16058 = !DILocation(line: 685, column: 82, scope: !16054)
!16059 = !DILocalVariable(name: "sp", arg: 3, scope: !16054, file: !3, line: 686, type: !726)
!16060 = !DILocation(line: 686, column: 15, scope: !16054)
!16061 = !DILocation(line: 688, column: 10, scope: !16054)
!16062 = !DILocation(line: 688, column: 2, scope: !16054)
!16063 = !DILocation(line: 690, column: 39, scope: !16064)
!16064 = distinct !DILexicalBlock(scope: !16054, file: !3, line: 688, column: 19)
!16065 = !DILocation(line: 690, column: 44, scope: !16064)
!16066 = !DILocation(line: 690, column: 10, scope: !16064)
!16067 = !DILocation(line: 690, column: 3, scope: !16064)
!16068 = !DILocation(line: 693, column: 2, scope: !16054)
!16069 = !DILocation(line: 694, column: 1, scope: !16054)
!16070 = distinct !DISubprogram(name: "mlxsw_sp_port_add_vid", scope: !3, file: !3, line: 926, type: !8093, scopeLine: 928, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16071 = !DILocalVariable(name: "dev", arg: 1, scope: !16070, file: !3, line: 926, type: !451)
!16072 = !DILocation(line: 926, column: 53, scope: !16070)
!16073 = !DILocalVariable(name: "proto", arg: 2, scope: !16070, file: !3, line: 927, type: !645)
!16074 = !DILocation(line: 927, column: 29, scope: !16070)
!16075 = !DILocalVariable(name: "vid", arg: 3, scope: !16070, file: !3, line: 927, type: !1193)
!16076 = !DILocation(line: 927, column: 40, scope: !16070)
!16077 = !DILocalVariable(name: "mlxsw_sp_port", scope: !16070, file: !3, line: 929, type: !10715)
!16078 = !DILocation(line: 929, column: 24, scope: !16070)
!16079 = !DILocation(line: 929, column: 52, scope: !16070)
!16080 = !DILocation(line: 929, column: 40, scope: !16070)
!16081 = !DILocation(line: 934, column: 7, scope: !16082)
!16082 = distinct !DILexicalBlock(scope: !16070, file: !3, line: 934, column: 6)
!16083 = !DILocation(line: 934, column: 6, scope: !16070)
!16084 = !DILocation(line: 935, column: 3, scope: !16082)
!16085 = !DILocation(line: 937, column: 51, scope: !16070)
!16086 = !DILocation(line: 937, column: 66, scope: !16070)
!16087 = !DILocation(line: 937, column: 25, scope: !16070)
!16088 = !DILocation(line: 937, column: 9, scope: !16070)
!16089 = !DILocation(line: 937, column: 2, scope: !16070)
!16090 = !DILocation(line: 938, column: 1, scope: !16070)
!16091 = distinct !DISubprogram(name: "mlxsw_sp_port_kill_vid", scope: !3, file: !3, line: 940, type: !8093, scopeLine: 942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16092 = !DILocalVariable(name: "dev", arg: 1, scope: !16091, file: !3, line: 940, type: !451)
!16093 = !DILocation(line: 940, column: 54, scope: !16091)
!16094 = !DILocalVariable(name: "proto", arg: 2, scope: !16091, file: !3, line: 941, type: !645)
!16095 = !DILocation(line: 941, column: 30, scope: !16091)
!16096 = !DILocalVariable(name: "vid", arg: 3, scope: !16091, file: !3, line: 941, type: !1193)
!16097 = !DILocation(line: 941, column: 41, scope: !16091)
!16098 = !DILocalVariable(name: "mlxsw_sp_port", scope: !16091, file: !3, line: 943, type: !10715)
!16099 = !DILocation(line: 943, column: 24, scope: !16091)
!16100 = !DILocation(line: 943, column: 52, scope: !16091)
!16101 = !DILocation(line: 943, column: 40, scope: !16091)
!16102 = !DILocalVariable(name: "mlxsw_sp_port_vlan", scope: !16091, file: !3, line: 944, type: !11388)
!16103 = !DILocation(line: 944, column: 29, scope: !16091)
!16104 = !DILocation(line: 949, column: 7, scope: !16105)
!16105 = distinct !DILexicalBlock(scope: !16091, file: !3, line: 949, column: 6)
!16106 = !DILocation(line: 949, column: 6, scope: !16091)
!16107 = !DILocation(line: 950, column: 3, scope: !16105)
!16108 = !DILocation(line: 952, column: 54, scope: !16091)
!16109 = !DILocation(line: 952, column: 69, scope: !16091)
!16110 = !DILocation(line: 952, column: 23, scope: !16091)
!16111 = !DILocation(line: 952, column: 21, scope: !16091)
!16112 = !DILocation(line: 953, column: 7, scope: !16113)
!16113 = distinct !DILexicalBlock(scope: !16091, file: !3, line: 953, column: 6)
!16114 = !DILocation(line: 953, column: 6, scope: !16091)
!16115 = !DILocation(line: 954, column: 3, scope: !16113)
!16116 = !DILocation(line: 955, column: 29, scope: !16091)
!16117 = !DILocation(line: 955, column: 2, scope: !16091)
!16118 = !DILocation(line: 957, column: 2, scope: !16091)
!16119 = !DILocation(line: 958, column: 1, scope: !16091)
!16120 = distinct !DISubprogram(name: "mlxsw_sp_setup_tc", scope: !3, file: !3, line: 975, type: !8179, scopeLine: 977, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16121 = !DILocalVariable(name: "dev", arg: 1, scope: !16120, file: !3, line: 975, type: !451)
!16122 = !DILocation(line: 975, column: 49, scope: !16120)
!16123 = !DILocalVariable(name: "type", arg: 2, scope: !16120, file: !3, line: 975, type: !287)
!16124 = !DILocation(line: 975, column: 73, scope: !16120)
!16125 = !DILocalVariable(name: "type_data", arg: 3, scope: !16120, file: !3, line: 976, type: !726)
!16126 = !DILocation(line: 976, column: 15, scope: !16120)
!16127 = !DILocalVariable(name: "mlxsw_sp_port", scope: !16120, file: !3, line: 978, type: !10715)
!16128 = !DILocation(line: 978, column: 24, scope: !16120)
!16129 = !DILocation(line: 978, column: 52, scope: !16120)
!16130 = !DILocation(line: 978, column: 40, scope: !16120)
!16131 = !DILocation(line: 980, column: 10, scope: !16120)
!16132 = !DILocation(line: 980, column: 2, scope: !16120)
!16133 = !DILocation(line: 982, column: 34, scope: !16134)
!16134 = distinct !DILexicalBlock(scope: !16120, file: !3, line: 980, column: 16)
!16135 = !DILocation(line: 982, column: 49, scope: !16134)
!16136 = !DILocation(line: 982, column: 10, scope: !16134)
!16137 = !DILocation(line: 982, column: 3, scope: !16134)
!16138 = !DILocation(line: 984, column: 32, scope: !16134)
!16139 = !DILocation(line: 984, column: 47, scope: !16134)
!16140 = !DILocation(line: 984, column: 10, scope: !16134)
!16141 = !DILocation(line: 984, column: 3, scope: !16134)
!16142 = !DILocation(line: 986, column: 33, scope: !16134)
!16143 = !DILocation(line: 986, column: 48, scope: !16134)
!16144 = !DILocation(line: 986, column: 10, scope: !16134)
!16145 = !DILocation(line: 986, column: 3, scope: !16134)
!16146 = !DILocation(line: 988, column: 32, scope: !16134)
!16147 = !DILocation(line: 988, column: 47, scope: !16134)
!16148 = !DILocation(line: 988, column: 10, scope: !16134)
!16149 = !DILocation(line: 988, column: 3, scope: !16134)
!16150 = !DILocation(line: 990, column: 32, scope: !16134)
!16151 = !DILocation(line: 990, column: 47, scope: !16134)
!16152 = !DILocation(line: 990, column: 10, scope: !16134)
!16153 = !DILocation(line: 990, column: 3, scope: !16134)
!16154 = !DILocation(line: 992, column: 33, scope: !16134)
!16155 = !DILocation(line: 992, column: 48, scope: !16134)
!16156 = !DILocation(line: 992, column: 10, scope: !16134)
!16157 = !DILocation(line: 992, column: 3, scope: !16134)
!16158 = !DILocation(line: 994, column: 3, scope: !16134)
!16159 = !DILocation(line: 996, column: 1, scope: !16120)
!16160 = distinct !DISubprogram(name: "mlxsw_sp_set_features", scope: !3, file: !3, line: 1064, type: !8199, scopeLine: 1066, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16161 = !DILocalVariable(name: "dev", arg: 1, scope: !16160, file: !3, line: 1064, type: !451)
!16162 = !DILocation(line: 1064, column: 53, scope: !16160)
!16163 = !DILocalVariable(name: "features", arg: 2, scope: !16160, file: !3, line: 1065, type: !490)
!16164 = !DILocation(line: 1065, column: 24, scope: !16160)
!16165 = !DILocalVariable(name: "oper_features", scope: !16160, file: !3, line: 1067, type: !490)
!16166 = !DILocation(line: 1067, column: 20, scope: !16160)
!16167 = !DILocation(line: 1067, column: 36, scope: !16160)
!16168 = !DILocation(line: 1067, column: 41, scope: !16160)
!16169 = !DILocalVariable(name: "err", scope: !16160, file: !3, line: 1068, type: !7)
!16170 = !DILocation(line: 1068, column: 6, scope: !16160)
!16171 = !DILocation(line: 1070, column: 33, scope: !16160)
!16172 = !DILocation(line: 1070, column: 38, scope: !16160)
!16173 = !DILocation(line: 1070, column: 9, scope: !16160)
!16174 = !DILocation(line: 1070, column: 6, scope: !16160)
!16175 = !DILocation(line: 1072, column: 33, scope: !16160)
!16176 = !DILocation(line: 1072, column: 38, scope: !16160)
!16177 = !DILocation(line: 1072, column: 9, scope: !16160)
!16178 = !DILocation(line: 1072, column: 6, scope: !16160)
!16179 = !DILocation(line: 1075, column: 6, scope: !16180)
!16180 = distinct !DILexicalBlock(scope: !16160, file: !3, line: 1075, column: 6)
!16181 = !DILocation(line: 1075, column: 6, scope: !16160)
!16182 = !DILocation(line: 1076, column: 19, scope: !16183)
!16183 = distinct !DILexicalBlock(scope: !16180, file: !3, line: 1075, column: 11)
!16184 = !DILocation(line: 1076, column: 3, scope: !16183)
!16185 = !DILocation(line: 1076, column: 8, scope: !16183)
!16186 = !DILocation(line: 1076, column: 17, scope: !16183)
!16187 = !DILocation(line: 1077, column: 3, scope: !16183)
!16188 = !DILocation(line: 1080, column: 2, scope: !16160)
!16189 = !DILocation(line: 1081, column: 1, scope: !16160)
!16190 = distinct !DISubprogram(name: "mlxsw_sp_port_get_devlink_port", scope: !3, file: !3, line: 1084, type: !8419, scopeLine: 1085, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16191 = !DILocalVariable(name: "dev", arg: 1, scope: !16190, file: !3, line: 1084, type: !451)
!16192 = !DILocation(line: 1084, column: 51, scope: !16190)
!16193 = !DILocalVariable(name: "mlxsw_sp_port", scope: !16190, file: !3, line: 1086, type: !10715)
!16194 = !DILocation(line: 1086, column: 24, scope: !16190)
!16195 = !DILocation(line: 1086, column: 52, scope: !16190)
!16196 = !DILocation(line: 1086, column: 40, scope: !16190)
!16197 = !DILocalVariable(name: "mlxsw_sp", scope: !16190, file: !3, line: 1087, type: !10721)
!16198 = !DILocation(line: 1087, column: 19, scope: !16190)
!16199 = !DILocation(line: 1087, column: 30, scope: !16190)
!16200 = !DILocation(line: 1087, column: 45, scope: !16190)
!16201 = !DILocation(line: 1089, column: 42, scope: !16190)
!16202 = !DILocation(line: 1089, column: 52, scope: !16190)
!16203 = !DILocation(line: 1090, column: 7, scope: !16190)
!16204 = !DILocation(line: 1090, column: 22, scope: !16190)
!16205 = !DILocation(line: 1089, column: 9, scope: !16190)
!16206 = !DILocation(line: 1089, column: 2, scope: !16190)
!16207 = distinct !DISubprogram(name: "netif_start_queue", scope: !6, file: !6, line: 3285, type: !567, scopeLine: 3286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16208 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !16209, file: !6, line: 3274, type: !9479)
!16209 = distinct !DISubprogram(name: "netif_tx_start_queue", scope: !6, file: !6, line: 3274, type: !16210, scopeLine: 3275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16210 = !DISubroutineType(types: !16211)
!16211 = !{null, !9479}
!16212 = !DILocation(line: 3274, column: 71, scope: !16209, inlinedAt: !16213)
!16213 = distinct !DILocation(line: 3287, column: 2, scope: !16207)
!16214 = !DILocalVariable(name: "dev", arg: 1, scope: !16207, file: !6, line: 3285, type: !451)
!16215 = !DILocation(line: 3285, column: 57, scope: !16207)
!16216 = !DILocation(line: 3287, column: 43, scope: !16207)
!16217 = !DILocation(line: 3287, column: 23, scope: !16207)
!16218 = !DILocation(line: 3276, column: 37, scope: !16209, inlinedAt: !16213)
!16219 = !DILocation(line: 3276, column: 48, scope: !16209, inlinedAt: !16213)
!16220 = !DILocation(line: 3276, column: 2, scope: !16209, inlinedAt: !16213)
!16221 = !DILocation(line: 3288, column: 1, scope: !16207)
!16222 = distinct !DISubprogram(name: "netdev_get_tx_queue", scope: !6, file: !6, line: 2234, type: !16223, scopeLine: 2236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16223 = !DISubroutineType(types: !16224)
!16224 = !{!9479, !3023, !14}
!16225 = !DILocalVariable(name: "dev", arg: 1, scope: !16222, file: !6, line: 2234, type: !3023)
!16226 = !DILocation(line: 2234, column: 67, scope: !16222)
!16227 = !DILocalVariable(name: "index", arg: 2, scope: !16222, file: !6, line: 2235, type: !14)
!16228 = !DILocation(line: 2235, column: 20, scope: !16222)
!16229 = !DILocation(line: 2237, column: 10, scope: !16222)
!16230 = !DILocation(line: 2237, column: 15, scope: !16222)
!16231 = !DILocation(line: 2237, column: 19, scope: !16222)
!16232 = !DILocation(line: 2237, column: 2, scope: !16222)
!16233 = distinct !DISubprogram(name: "clear_bit", scope: !16234, file: !16234, line: 39, type: !16235, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16234 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!16235 = !DISubroutineType(types: !16236)
!16236 = !{null, !669, !16237}
!16237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16238, size: 64)
!16238 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !473)
!16239 = !DILocalVariable(name: "nr", arg: 1, scope: !16240, file: !15172, line: 72, type: !669)
!16240 = distinct !DISubprogram(name: "arch_clear_bit", scope: !15172, file: !15172, line: 72, type: !16235, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16241 = !DILocation(line: 72, column: 21, scope: !16240, inlinedAt: !16242)
!16242 = distinct !DILocation(line: 42, column: 2, scope: !16233)
!16243 = !DILocalVariable(name: "addr", arg: 2, scope: !16240, file: !15172, line: 72, type: !16237)
!16244 = !DILocation(line: 72, column: 49, scope: !16240, inlinedAt: !16242)
!16245 = !DILocalVariable(name: "v", arg: 1, scope: !16246, file: !16247, line: 84, type: !16250)
!16246 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !16247, file: !16247, line: 84, type: !16248, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16247 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!16248 = !DISubroutineType(types: !16249)
!16249 = !{null, !16250, !750}
!16250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16251, size: 64)
!16251 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16252)
!16252 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!16253 = !DILocation(line: 84, column: 74, scope: !16246, inlinedAt: !16254)
!16254 = distinct !DILocation(line: 41, column: 2, scope: !16233)
!16255 = !DILocalVariable(name: "size", arg: 2, scope: !16246, file: !16247, line: 84, type: !750)
!16256 = !DILocation(line: 84, column: 84, scope: !16246, inlinedAt: !16254)
!16257 = !DILocalVariable(name: "nr", arg: 1, scope: !16233, file: !16234, line: 39, type: !669)
!16258 = !DILocation(line: 39, column: 35, scope: !16233)
!16259 = !DILocalVariable(name: "addr", arg: 2, scope: !16233, file: !16234, line: 39, type: !16237)
!16260 = !DILocation(line: 39, column: 63, scope: !16233)
!16261 = !DILocation(line: 41, column: 26, scope: !16233)
!16262 = !DILocation(line: 41, column: 33, scope: !16233)
!16263 = !DILocation(line: 41, column: 31, scope: !16233)
!16264 = !DILocation(line: 86, column: 20, scope: !16246, inlinedAt: !16254)
!16265 = !DILocation(line: 86, column: 23, scope: !16246, inlinedAt: !16254)
!16266 = !DILocation(line: 86, column: 2, scope: !16246, inlinedAt: !16254)
!16267 = !DILocation(line: 87, column: 2, scope: !16246, inlinedAt: !16254)
!16268 = !DILocation(line: 42, column: 17, scope: !16233)
!16269 = !DILocation(line: 42, column: 21, scope: !16233)
!16270 = !DILocation(line: 74, column: 27, scope: !16271, inlinedAt: !16242)
!16271 = distinct !DILexicalBlock(scope: !16240, file: !15172, line: 74, column: 6)
!16272 = !DILocation(line: 74, column: 6, scope: !16271, inlinedAt: !16242)
!16273 = !DILocation(line: 74, column: 6, scope: !16240, inlinedAt: !16242)
!16274 = !DILocation(line: 76, column: 6, scope: !16275, inlinedAt: !16242)
!16275 = distinct !DILexicalBlock(scope: !16271, file: !15172, line: 74, column: 32)
!16276 = !DILocation(line: 77, column: 13, scope: !16275, inlinedAt: !16242)
!16277 = !DILocation(line: 77, column: 12, scope: !16275, inlinedAt: !16242)
!16278 = !DILocation(line: 75, column: 3, scope: !16275, inlinedAt: !16242)
!16279 = !{i32 -2147082975}
!16280 = !DILocation(line: 78, column: 2, scope: !16275, inlinedAt: !16242)
!16281 = !DILocation(line: 80, column: 8, scope: !16282, inlinedAt: !16242)
!16282 = distinct !DILexicalBlock(scope: !16271, file: !15172, line: 78, column: 9)
!16283 = !DILocation(line: 80, column: 32, scope: !16282, inlinedAt: !16242)
!16284 = !DILocation(line: 79, column: 3, scope: !16282, inlinedAt: !16242)
!16285 = !{i32 -2147082843}
!16286 = !DILocation(line: 43, column: 1, scope: !16233)
!16287 = distinct !DISubprogram(name: "kasan_check_write", scope: !16288, file: !16288, line: 38, type: !16289, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16288 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!16289 = !DISubroutineType(types: !16290)
!16290 = !{!696, !16250, !14}
!16291 = !DILocalVariable(name: "p", arg: 1, scope: !16287, file: !16288, line: 38, type: !16250)
!16292 = !DILocation(line: 38, column: 59, scope: !16287)
!16293 = !DILocalVariable(name: "size", arg: 2, scope: !16287, file: !16288, line: 38, type: !14)
!16294 = !DILocation(line: 38, column: 75, scope: !16287)
!16295 = !DILocation(line: 40, column: 2, scope: !16287)
!16296 = distinct !DISubprogram(name: "kcsan_check_access", scope: !16297, file: !16297, line: 178, type: !16298, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16297 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!16298 = !DISubroutineType(types: !16299)
!16299 = !{null, !16250, !750, !7}
!16300 = !DILocalVariable(name: "ptr", arg: 1, scope: !16296, file: !16297, line: 178, type: !16250)
!16301 = !DILocation(line: 178, column: 60, scope: !16296)
!16302 = !DILocalVariable(name: "size", arg: 2, scope: !16296, file: !16297, line: 178, type: !750)
!16303 = !DILocation(line: 178, column: 72, scope: !16296)
!16304 = !DILocalVariable(name: "type", arg: 3, scope: !16296, file: !16297, line: 179, type: !7)
!16305 = !DILocation(line: 179, column: 15, scope: !16296)
!16306 = !DILocation(line: 179, column: 23, scope: !16296)
!16307 = distinct !DISubprogram(name: "netif_stop_queue", scope: !6, file: !6, line: 3336, type: !567, scopeLine: 3337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16308 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !16309, file: !6, line: 3324, type: !9479)
!16309 = distinct !DISubprogram(name: "netif_tx_stop_queue", scope: !6, file: !6, line: 3324, type: !16210, scopeLine: 3325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16310 = !DILocation(line: 3324, column: 70, scope: !16309, inlinedAt: !16311)
!16311 = distinct !DILocation(line: 3338, column: 2, scope: !16307)
!16312 = !DILocalVariable(name: "dev", arg: 1, scope: !16307, file: !6, line: 3336, type: !451)
!16313 = !DILocation(line: 3336, column: 56, scope: !16307)
!16314 = !DILocation(line: 3338, column: 42, scope: !16307)
!16315 = !DILocation(line: 3338, column: 22, scope: !16307)
!16316 = !DILocation(line: 3326, column: 35, scope: !16309, inlinedAt: !16311)
!16317 = !DILocation(line: 3326, column: 46, scope: !16309, inlinedAt: !16311)
!16318 = !DILocation(line: 3326, column: 2, scope: !16309, inlinedAt: !16311)
!16319 = !DILocation(line: 3339, column: 1, scope: !16307)
!16320 = distinct !DISubprogram(name: "set_bit", scope: !16234, file: !16234, line: 26, type: !16235, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16321 = !DILocalVariable(name: "nr", arg: 1, scope: !16322, file: !15172, line: 52, type: !669)
!16322 = distinct !DISubprogram(name: "arch_set_bit", scope: !15172, file: !15172, line: 52, type: !16235, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16323 = !DILocation(line: 52, column: 19, scope: !16322, inlinedAt: !16324)
!16324 = distinct !DILocation(line: 29, column: 2, scope: !16320)
!16325 = !DILocalVariable(name: "addr", arg: 2, scope: !16322, file: !15172, line: 52, type: !16237)
!16326 = !DILocation(line: 52, column: 47, scope: !16322, inlinedAt: !16324)
!16327 = !DILocation(line: 84, column: 74, scope: !16246, inlinedAt: !16328)
!16328 = distinct !DILocation(line: 28, column: 2, scope: !16320)
!16329 = !DILocation(line: 84, column: 84, scope: !16246, inlinedAt: !16328)
!16330 = !DILocalVariable(name: "nr", arg: 1, scope: !16320, file: !16234, line: 26, type: !669)
!16331 = !DILocation(line: 26, column: 33, scope: !16320)
!16332 = !DILocalVariable(name: "addr", arg: 2, scope: !16320, file: !16234, line: 26, type: !16237)
!16333 = !DILocation(line: 26, column: 61, scope: !16320)
!16334 = !DILocation(line: 28, column: 26, scope: !16320)
!16335 = !DILocation(line: 28, column: 33, scope: !16320)
!16336 = !DILocation(line: 28, column: 31, scope: !16320)
!16337 = !DILocation(line: 86, column: 20, scope: !16246, inlinedAt: !16328)
!16338 = !DILocation(line: 86, column: 23, scope: !16246, inlinedAt: !16328)
!16339 = !DILocation(line: 86, column: 2, scope: !16246, inlinedAt: !16328)
!16340 = !DILocation(line: 87, column: 2, scope: !16246, inlinedAt: !16328)
!16341 = !DILocation(line: 29, column: 15, scope: !16320)
!16342 = !DILocation(line: 29, column: 19, scope: !16320)
!16343 = !DILocation(line: 54, column: 27, scope: !16344, inlinedAt: !16324)
!16344 = distinct !DILexicalBlock(scope: !16322, file: !15172, line: 54, column: 6)
!16345 = !DILocation(line: 54, column: 6, scope: !16344, inlinedAt: !16324)
!16346 = !DILocation(line: 54, column: 6, scope: !16322, inlinedAt: !16324)
!16347 = !DILocation(line: 56, column: 6, scope: !16348, inlinedAt: !16324)
!16348 = distinct !DILexicalBlock(scope: !16344, file: !15172, line: 54, column: 32)
!16349 = !DILocation(line: 57, column: 12, scope: !16348, inlinedAt: !16324)
!16350 = !DILocation(line: 55, column: 3, scope: !16348, inlinedAt: !16324)
!16351 = !{i32 -2147083929}
!16352 = !DILocation(line: 59, column: 2, scope: !16348, inlinedAt: !16324)
!16353 = !DILocation(line: 61, column: 8, scope: !16354, inlinedAt: !16324)
!16354 = distinct !DILexicalBlock(scope: !16344, file: !15172, line: 59, column: 9)
!16355 = !DILocation(line: 61, column: 32, scope: !16354, inlinedAt: !16324)
!16356 = !DILocation(line: 60, column: 3, scope: !16354, inlinedAt: !16324)
!16357 = !{i32 -2147083797}
!16358 = !DILocation(line: 30, column: 1, scope: !16320)
!16359 = distinct !DISubprogram(name: "skb_cow_head", scope: !578, file: !578, line: 3197, type: !16360, scopeLine: 3198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16360 = !DISubroutineType(types: !16361)
!16361 = !{!7, !576, !14}
!16362 = !DILocalVariable(name: "skb", arg: 1, scope: !16359, file: !578, line: 3197, type: !576)
!16363 = !DILocation(line: 3197, column: 48, scope: !16359)
!16364 = !DILocalVariable(name: "headroom", arg: 2, scope: !16359, file: !578, line: 3197, type: !14)
!16365 = !DILocation(line: 3197, column: 66, scope: !16359)
!16366 = !DILocation(line: 3199, column: 19, scope: !16359)
!16367 = !DILocation(line: 3199, column: 24, scope: !16359)
!16368 = !DILocation(line: 3199, column: 52, scope: !16359)
!16369 = !DILocation(line: 3199, column: 34, scope: !16359)
!16370 = !DILocation(line: 3199, column: 9, scope: !16359)
!16371 = !DILocation(line: 3199, column: 2, scope: !16359)
!16372 = distinct !DISubprogram(name: "dev_kfree_skb_any", scope: !6, file: !6, line: 3817, type: !2991, scopeLine: 3818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16373 = !DILocalVariable(name: "skb", arg: 1, scope: !16372, file: !6, line: 3817, type: !576)
!16374 = !DILocation(line: 3817, column: 54, scope: !16372)
!16375 = !DILocation(line: 3819, column: 22, scope: !16372)
!16376 = !DILocation(line: 3819, column: 2, scope: !16372)
!16377 = !DILocation(line: 3820, column: 1, scope: !16372)
!16378 = distinct !DISubprogram(name: "eth_skb_pad", scope: !16379, file: !16379, line: 541, type: !2928, scopeLine: 542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16379 = !DIFile(filename: "./include/linux/etherdevice.h", directory: "/home/lizy2001/genbc/linux")
!16380 = !DILocalVariable(name: "skb", arg: 1, scope: !16378, file: !16379, line: 541, type: !576)
!16381 = !DILocation(line: 541, column: 47, scope: !16378)
!16382 = !DILocation(line: 543, column: 23, scope: !16378)
!16383 = !DILocation(line: 543, column: 9, scope: !16378)
!16384 = !DILocation(line: 543, column: 2, scope: !16378)
!16385 = distinct !DISubprogram(name: "mlxsw_sp_txhdr_construct", scope: !3, file: !3, line: 228, type: !12150, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16386 = !DILocalVariable(name: "skb", arg: 1, scope: !16385, file: !3, line: 228, type: !576)
!16387 = !DILocation(line: 228, column: 54, scope: !16385)
!16388 = !DILocalVariable(name: "tx_info", arg: 2, scope: !16385, file: !3, line: 229, type: !12152)
!16389 = !DILocation(line: 229, column: 38, scope: !16385)
!16390 = !DILocalVariable(name: "txhdr", scope: !16385, file: !3, line: 231, type: !733)
!16391 = !DILocation(line: 231, column: 8, scope: !16385)
!16392 = !DILocation(line: 231, column: 25, scope: !16385)
!16393 = !DILocation(line: 231, column: 16, scope: !16385)
!16394 = !DILocation(line: 233, column: 9, scope: !16385)
!16395 = !DILocation(line: 233, column: 2, scope: !16385)
!16396 = !DILocation(line: 235, column: 27, scope: !16385)
!16397 = !DILocation(line: 235, column: 2, scope: !16385)
!16398 = !DILocation(line: 236, column: 23, scope: !16385)
!16399 = !DILocation(line: 236, column: 2, scope: !16385)
!16400 = !DILocation(line: 237, column: 25, scope: !16385)
!16401 = !DILocation(line: 237, column: 2, scope: !16385)
!16402 = !DILocation(line: 238, column: 24, scope: !16385)
!16403 = !DILocation(line: 238, column: 2, scope: !16385)
!16404 = !DILocation(line: 239, column: 34, scope: !16385)
!16405 = !DILocation(line: 239, column: 2, scope: !16385)
!16406 = !DILocation(line: 240, column: 28, scope: !16385)
!16407 = !DILocation(line: 240, column: 35, scope: !16385)
!16408 = !DILocation(line: 240, column: 44, scope: !16385)
!16409 = !DILocation(line: 240, column: 2, scope: !16385)
!16410 = !DILocation(line: 241, column: 24, scope: !16385)
!16411 = !DILocation(line: 241, column: 2, scope: !16385)
!16412 = !DILocation(line: 242, column: 1, scope: !16385)
!16413 = distinct !DISubprogram(name: "__skb_cow", scope: !578, file: !578, line: 3156, type: !16414, scopeLine: 3158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16414 = !DISubroutineType(types: !16415)
!16415 = !{!7, !576, !14, !7}
!16416 = !DILocalVariable(name: "skb", arg: 1, scope: !16413, file: !578, line: 3156, type: !576)
!16417 = !DILocation(line: 3156, column: 45, scope: !16413)
!16418 = !DILocalVariable(name: "headroom", arg: 2, scope: !16413, file: !578, line: 3156, type: !14)
!16419 = !DILocation(line: 3156, column: 63, scope: !16413)
!16420 = !DILocalVariable(name: "cloned", arg: 3, scope: !16413, file: !578, line: 3157, type: !7)
!16421 = !DILocation(line: 3157, column: 12, scope: !16413)
!16422 = !DILocalVariable(name: "delta", scope: !16413, file: !578, line: 3159, type: !7)
!16423 = !DILocation(line: 3159, column: 6, scope: !16413)
!16424 = !DILocation(line: 3161, column: 6, scope: !16425)
!16425 = distinct !DILexicalBlock(scope: !16413, file: !578, line: 3161, column: 6)
!16426 = !DILocation(line: 3161, column: 30, scope: !16425)
!16427 = !DILocation(line: 3161, column: 17, scope: !16425)
!16428 = !DILocation(line: 3161, column: 15, scope: !16425)
!16429 = !DILocation(line: 3161, column: 6, scope: !16413)
!16430 = !DILocation(line: 3162, column: 11, scope: !16425)
!16431 = !DILocation(line: 3162, column: 35, scope: !16425)
!16432 = !DILocation(line: 3162, column: 22, scope: !16425)
!16433 = !DILocation(line: 3162, column: 20, scope: !16425)
!16434 = !DILocation(line: 3162, column: 9, scope: !16425)
!16435 = !DILocation(line: 3162, column: 3, scope: !16425)
!16436 = !DILocation(line: 3164, column: 6, scope: !16437)
!16437 = distinct !DILexicalBlock(scope: !16413, file: !578, line: 3164, column: 6)
!16438 = !DILocation(line: 3164, column: 12, scope: !16437)
!16439 = !DILocation(line: 3164, column: 15, scope: !16437)
!16440 = !DILocation(line: 3164, column: 6, scope: !16413)
!16441 = !DILocation(line: 3165, column: 27, scope: !16437)
!16442 = !DILocation(line: 3165, column: 32, scope: !16437)
!16443 = !DILocation(line: 3165, column: 10, scope: !16437)
!16444 = !DILocation(line: 3165, column: 3, scope: !16437)
!16445 = !DILocation(line: 3167, column: 2, scope: !16413)
!16446 = !DILocation(line: 3168, column: 1, scope: !16413)
!16447 = distinct !DISubprogram(name: "skb_header_cloned", scope: !578, file: !578, line: 1649, type: !16448, scopeLine: 1650, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16448 = !DISubroutineType(types: !16449)
!16449 = !{!7, !9336}
!16450 = !DILocalVariable(name: "v", arg: 1, scope: !16451, file: !16452, line: 23, type: !16455)
!16451 = distinct !DISubprogram(name: "arch_atomic_read", scope: !16452, file: !16452, line: 23, type: !16453, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16452 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!16453 = !DISubroutineType(types: !16454)
!16454 = !{!7, !16455}
!16455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16456, size: 64)
!16456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !544)
!16457 = !DILocation(line: 23, column: 61, scope: !16451, inlinedAt: !16458)
!16458 = distinct !DILocation(line: 28, column: 9, scope: !16459, inlinedAt: !16461)
!16459 = distinct !DISubprogram(name: "atomic_read", scope: !16460, file: !16460, line: 25, type: !16453, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16460 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!16461 = distinct !DILocation(line: 1656, column: 12, scope: !16447)
!16462 = !DILocalVariable(name: "v", arg: 1, scope: !16463, file: !16247, line: 69, type: !16250)
!16463 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !16247, file: !16247, line: 69, type: !16248, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16464 = !DILocation(line: 69, column: 73, scope: !16463, inlinedAt: !16465)
!16465 = distinct !DILocation(line: 27, column: 2, scope: !16459, inlinedAt: !16461)
!16466 = !DILocalVariable(name: "size", arg: 2, scope: !16463, file: !16247, line: 69, type: !750)
!16467 = !DILocation(line: 69, column: 83, scope: !16463, inlinedAt: !16465)
!16468 = !DILocalVariable(name: "v", arg: 1, scope: !16459, file: !16460, line: 25, type: !16455)
!16469 = !DILocation(line: 25, column: 29, scope: !16459, inlinedAt: !16461)
!16470 = !DILocalVariable(name: "skb", arg: 1, scope: !16447, file: !578, line: 1649, type: !9336)
!16471 = !DILocation(line: 1649, column: 59, scope: !16447)
!16472 = !DILocalVariable(name: "dataref", scope: !16447, file: !578, line: 1651, type: !7)
!16473 = !DILocation(line: 1651, column: 6, scope: !16447)
!16474 = !DILocation(line: 1653, column: 7, scope: !16475)
!16475 = distinct !DILexicalBlock(scope: !16447, file: !578, line: 1653, column: 6)
!16476 = !DILocation(line: 1653, column: 12, scope: !16475)
!16477 = !DILocation(line: 1653, column: 6, scope: !16447)
!16478 = !DILocation(line: 1654, column: 3, scope: !16475)
!16479 = !DILocation(line: 1656, column: 25, scope: !16447)
!16480 = !DILocation(line: 1656, column: 42, scope: !16447)
!16481 = !DILocation(line: 27, column: 25, scope: !16459, inlinedAt: !16461)
!16482 = !DILocation(line: 71, column: 19, scope: !16463, inlinedAt: !16465)
!16483 = !DILocation(line: 71, column: 22, scope: !16463, inlinedAt: !16465)
!16484 = !DILocation(line: 71, column: 2, scope: !16463, inlinedAt: !16465)
!16485 = !DILocation(line: 72, column: 2, scope: !16463, inlinedAt: !16465)
!16486 = !DILocation(line: 28, column: 26, scope: !16459, inlinedAt: !16461)
!16487 = !DILocation(line: 29, column: 9, scope: !16451, inlinedAt: !16458)
!16488 = !DILocation(line: 1656, column: 10, scope: !16447)
!16489 = !DILocation(line: 1657, column: 13, scope: !16447)
!16490 = !DILocation(line: 1657, column: 21, scope: !16447)
!16491 = !DILocation(line: 1657, column: 44, scope: !16447)
!16492 = !DILocation(line: 1657, column: 52, scope: !16447)
!16493 = !DILocation(line: 1657, column: 41, scope: !16447)
!16494 = !DILocation(line: 1657, column: 10, scope: !16447)
!16495 = !DILocation(line: 1658, column: 9, scope: !16447)
!16496 = !DILocation(line: 1658, column: 17, scope: !16447)
!16497 = !DILocation(line: 1658, column: 2, scope: !16447)
!16498 = !DILocation(line: 1659, column: 1, scope: !16447)
!16499 = distinct !DISubprogram(name: "skb_headroom", scope: !578, file: !578, line: 2339, type: !16500, scopeLine: 2340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16500 = !DISubroutineType(types: !16501)
!16501 = !{!14, !9336}
!16502 = !DILocalVariable(name: "skb", arg: 1, scope: !16499, file: !578, line: 2339, type: !9336)
!16503 = !DILocation(line: 2339, column: 63, scope: !16499)
!16504 = !DILocation(line: 2341, column: 9, scope: !16499)
!16505 = !DILocation(line: 2341, column: 14, scope: !16499)
!16506 = !DILocation(line: 2341, column: 21, scope: !16499)
!16507 = !DILocation(line: 2341, column: 26, scope: !16499)
!16508 = !DILocation(line: 2341, column: 19, scope: !16499)
!16509 = !DILocation(line: 2341, column: 2, scope: !16499)
!16510 = distinct !DISubprogram(name: "skb_end_pointer", scope: !578, file: !578, line: 1404, type: !16511, scopeLine: 1405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16511 = !DISubroutineType(types: !16512)
!16512 = !{!7896, !9336}
!16513 = !DILocalVariable(name: "skb", arg: 1, scope: !16510, file: !578, line: 1404, type: !9336)
!16514 = !DILocation(line: 1404, column: 68, scope: !16510)
!16515 = !DILocation(line: 1406, column: 9, scope: !16510)
!16516 = !DILocation(line: 1406, column: 14, scope: !16510)
!16517 = !DILocation(line: 1406, column: 21, scope: !16510)
!16518 = !DILocation(line: 1406, column: 26, scope: !16510)
!16519 = !DILocation(line: 1406, column: 19, scope: !16510)
!16520 = !DILocation(line: 1406, column: 2, scope: !16510)
!16521 = distinct !DISubprogram(name: "kasan_check_read", scope: !16288, file: !16288, line: 34, type: !16289, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16522 = !DILocalVariable(name: "p", arg: 1, scope: !16521, file: !16288, line: 34, type: !16250)
!16523 = !DILocation(line: 34, column: 58, scope: !16521)
!16524 = !DILocalVariable(name: "size", arg: 2, scope: !16521, file: !16288, line: 34, type: !14)
!16525 = !DILocation(line: 34, column: 74, scope: !16521)
!16526 = !DILocation(line: 36, column: 2, scope: !16521)
!16527 = distinct !DISubprogram(name: "skb_put_padto", scope: !578, file: !578, line: 3256, type: !16360, scopeLine: 3257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16528 = !DILocalVariable(name: "skb", arg: 1, scope: !16527, file: !578, line: 3256, type: !576)
!16529 = !DILocation(line: 3256, column: 62, scope: !16527)
!16530 = !DILocalVariable(name: "len", arg: 2, scope: !16527, file: !578, line: 3256, type: !14)
!16531 = !DILocation(line: 3256, column: 80, scope: !16527)
!16532 = !DILocation(line: 3258, column: 25, scope: !16527)
!16533 = !DILocation(line: 3258, column: 30, scope: !16527)
!16534 = !DILocation(line: 3258, column: 9, scope: !16527)
!16535 = !DILocation(line: 3258, column: 2, scope: !16527)
!16536 = distinct !DISubprogram(name: "__skb_put_padto", scope: !578, file: !578, line: 3231, type: !16537, scopeLine: 3234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16537 = !DISubroutineType(types: !16538)
!16538 = !{!7, !576, !14, !696}
!16539 = !DILocalVariable(name: "skb", arg: 1, scope: !16536, file: !578, line: 3231, type: !576)
!16540 = !DILocation(line: 3231, column: 64, scope: !16536)
!16541 = !DILocalVariable(name: "len", arg: 2, scope: !16536, file: !578, line: 3232, type: !14)
!16542 = !DILocation(line: 3232, column: 26, scope: !16536)
!16543 = !DILocalVariable(name: "free_on_error", arg: 3, scope: !16536, file: !578, line: 3233, type: !696)
!16544 = !DILocation(line: 3233, column: 18, scope: !16536)
!16545 = !DILocalVariable(name: "size", scope: !16536, file: !578, line: 3235, type: !14)
!16546 = !DILocation(line: 3235, column: 15, scope: !16536)
!16547 = !DILocation(line: 3235, column: 22, scope: !16536)
!16548 = !DILocation(line: 3235, column: 27, scope: !16536)
!16549 = !DILocation(line: 3237, column: 6, scope: !16550)
!16550 = distinct !DILexicalBlock(scope: !16536, file: !578, line: 3237, column: 6)
!16551 = !DILocation(line: 3237, column: 6, scope: !16536)
!16552 = !DILocation(line: 3238, column: 10, scope: !16553)
!16553 = distinct !DILexicalBlock(scope: !16550, file: !578, line: 3237, column: 28)
!16554 = !DILocation(line: 3238, column: 7, scope: !16553)
!16555 = !DILocation(line: 3239, column: 17, scope: !16556)
!16556 = distinct !DILexicalBlock(scope: !16553, file: !578, line: 3239, column: 7)
!16557 = !DILocation(line: 3239, column: 22, scope: !16556)
!16558 = !DILocation(line: 3239, column: 27, scope: !16556)
!16559 = !DILocation(line: 3239, column: 7, scope: !16556)
!16560 = !DILocation(line: 3239, column: 7, scope: !16553)
!16561 = !DILocation(line: 3240, column: 4, scope: !16556)
!16562 = !DILocation(line: 3241, column: 13, scope: !16553)
!16563 = !DILocation(line: 3241, column: 18, scope: !16553)
!16564 = !DILocation(line: 3241, column: 3, scope: !16553)
!16565 = !DILocation(line: 3242, column: 2, scope: !16553)
!16566 = !DILocation(line: 3243, column: 2, scope: !16536)
!16567 = !DILocation(line: 3244, column: 1, scope: !16536)
!16568 = distinct !DISubprogram(name: "__skb_put", scope: !578, file: !578, line: 2230, type: !16569, scopeLine: 2231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16569 = !DISubroutineType(types: !16570)
!16570 = !{!726, !576, !14}
!16571 = !DILocalVariable(name: "skb", arg: 1, scope: !16568, file: !578, line: 2230, type: !576)
!16572 = !DILocation(line: 2230, column: 47, scope: !16568)
!16573 = !DILocalVariable(name: "len", arg: 2, scope: !16568, file: !578, line: 2230, type: !14)
!16574 = !DILocation(line: 2230, column: 65, scope: !16568)
!16575 = !DILocalVariable(name: "tmp", scope: !16568, file: !578, line: 2232, type: !726)
!16576 = !DILocation(line: 2232, column: 8, scope: !16568)
!16577 = !DILocation(line: 2232, column: 31, scope: !16568)
!16578 = !DILocation(line: 2232, column: 14, scope: !16568)
!16579 = !DILocation(line: 2233, column: 2, scope: !16568)
!16580 = !DILocation(line: 2233, column: 2, scope: !16581)
!16581 = distinct !DILexicalBlock(scope: !16582, file: !578, line: 2233, column: 2)
!16582 = distinct !DILexicalBlock(scope: !16568, file: !578, line: 2233, column: 2)
!16583 = !DILocation(line: 2233, column: 2, scope: !16582)
!16584 = !DILocation(line: 2233, column: 2, scope: !16585)
!16585 = distinct !DILexicalBlock(scope: !16581, file: !578, line: 2233, column: 2)
!16586 = !DILocation(line: 2233, column: 2, scope: !16587)
!16587 = distinct !DILexicalBlock(scope: !16585, file: !578, line: 2233, column: 2)
!16588 = !DILocation(line: 2233, column: 2, scope: !16589)
!16589 = distinct !DILexicalBlock(scope: !16585, file: !578, line: 2233, column: 2)
!16590 = !{i32 -2140832059, i32 -2140832030, i32 -2140831984, i32 -2140831926, i32 -2140831872, i32 -2140831818, i32 -2140831763, i32 -2140831732}
!16591 = !DILocation(line: 2233, column: 2, scope: !16592)
!16592 = distinct !DILexicalBlock(scope: !16593, file: !578, line: 2233, column: 2)
!16593 = distinct !DILexicalBlock(scope: !16585, file: !578, line: 2233, column: 2)
!16594 = !{i32 -2140831286, i32 -2140831279, i32 -2140831225, i32 -2140831194, i32 -2140831164}
!16595 = !DILocation(line: 2233, column: 2, scope: !16593)
!16596 = !DILocation(line: 2234, column: 15, scope: !16568)
!16597 = !DILocation(line: 2234, column: 2, scope: !16568)
!16598 = !DILocation(line: 2234, column: 7, scope: !16568)
!16599 = !DILocation(line: 2234, column: 12, scope: !16568)
!16600 = !DILocation(line: 2235, column: 15, scope: !16568)
!16601 = !DILocation(line: 2235, column: 2, scope: !16568)
!16602 = !DILocation(line: 2235, column: 7, scope: !16568)
!16603 = !DILocation(line: 2235, column: 12, scope: !16568)
!16604 = !DILocation(line: 2236, column: 9, scope: !16568)
!16605 = !DILocation(line: 2236, column: 2, scope: !16568)
!16606 = distinct !DISubprogram(name: "skb_tail_pointer", scope: !578, file: !578, line: 2191, type: !16511, scopeLine: 2192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16607 = !DILocalVariable(name: "skb", arg: 1, scope: !16606, file: !578, line: 2191, type: !9336)
!16608 = !DILocation(line: 2191, column: 69, scope: !16606)
!16609 = !DILocation(line: 2193, column: 9, scope: !16606)
!16610 = !DILocation(line: 2193, column: 14, scope: !16606)
!16611 = !DILocation(line: 2193, column: 21, scope: !16606)
!16612 = !DILocation(line: 2193, column: 26, scope: !16606)
!16613 = !DILocation(line: 2193, column: 19, scope: !16606)
!16614 = !DILocation(line: 2193, column: 2, scope: !16606)
!16615 = distinct !DISubprogram(name: "skb_is_nonlinear", scope: !578, file: !578, line: 2105, type: !16616, scopeLine: 2106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16616 = !DISubroutineType(types: !16617)
!16617 = !{!696, !9336}
!16618 = !DILocalVariable(name: "skb", arg: 1, scope: !16615, file: !578, line: 2105, type: !9336)
!16619 = !DILocation(line: 2105, column: 59, scope: !16615)
!16620 = !DILocation(line: 2107, column: 9, scope: !16615)
!16621 = !DILocation(line: 2107, column: 14, scope: !16615)
!16622 = !DILocation(line: 2107, column: 2, scope: !16615)
!16623 = distinct !DISubprogram(name: "mlxsw_tx_hdr_version_set", scope: !3, file: !3, line: 108, type: !14426, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16624 = !DILocalVariable(name: "buf", arg: 1, scope: !16623, file: !3, line: 108, type: !733)
!16625 = !DILocation(line: 108, column: 1, scope: !16623)
!16626 = !DILocalVariable(name: "val", arg: 2, scope: !16623, file: !3, line: 108, type: !862)
!16627 = distinct !DISubprogram(name: "mlxsw_tx_hdr_ctl_set", scope: !3, file: !3, line: 115, type: !14426, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16628 = !DILocalVariable(name: "buf", arg: 1, scope: !16627, file: !3, line: 115, type: !733)
!16629 = !DILocation(line: 115, column: 1, scope: !16627)
!16630 = !DILocalVariable(name: "val", arg: 2, scope: !16627, file: !3, line: 115, type: !862)
!16631 = distinct !DISubprogram(name: "mlxsw_tx_hdr_proto_set", scope: !3, file: !3, line: 120, type: !14426, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16632 = !DILocalVariable(name: "buf", arg: 1, scope: !16631, file: !3, line: 120, type: !733)
!16633 = !DILocation(line: 120, column: 1, scope: !16631)
!16634 = !DILocalVariable(name: "val", arg: 2, scope: !16631, file: !3, line: 120, type: !862)
!16635 = distinct !DISubprogram(name: "mlxsw_tx_hdr_swid_set", scope: !3, file: !3, line: 136, type: !14426, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16636 = !DILocalVariable(name: "buf", arg: 1, scope: !16635, file: !3, line: 136, type: !733)
!16637 = !DILocation(line: 136, column: 1, scope: !16635)
!16638 = !DILocalVariable(name: "val", arg: 2, scope: !16635, file: !3, line: 136, type: !862)
!16639 = distinct !DISubprogram(name: "mlxsw_tx_hdr_control_tclass_set", scope: !3, file: !3, line: 142, type: !14426, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16640 = !DILocalVariable(name: "buf", arg: 1, scope: !16639, file: !3, line: 142, type: !733)
!16641 = !DILocation(line: 142, column: 1, scope: !16639)
!16642 = !DILocalVariable(name: "val", arg: 2, scope: !16639, file: !3, line: 142, type: !862)
!16643 = distinct !DISubprogram(name: "mlxsw_tx_hdr_port_mid_set", scope: !3, file: !3, line: 157, type: !14426, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16644 = !DILocalVariable(name: "buf", arg: 1, scope: !16643, file: !3, line: 157, type: !733)
!16645 = !DILocation(line: 157, column: 1, scope: !16643)
!16646 = !DILocalVariable(name: "val", arg: 2, scope: !16643, file: !3, line: 157, type: !862)
!16647 = distinct !DISubprogram(name: "mlxsw_tx_hdr_type_set", scope: !3, file: !3, line: 170, type: !14426, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16648 = !DILocalVariable(name: "buf", arg: 1, scope: !16647, file: !3, line: 170, type: !733)
!16649 = !DILocation(line: 170, column: 1, scope: !16647)
!16650 = !DILocalVariable(name: "val", arg: 2, scope: !16647, file: !3, line: 170, type: !862)
!16651 = distinct !DISubprogram(name: "is_valid_ether_addr", scope: !16379, file: !16379, line: 191, type: !16652, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16652 = !DISubroutineType(types: !16653)
!16653 = !{!696, !8658}
!16654 = !DILocalVariable(name: "addr", arg: 1, scope: !16651, file: !16379, line: 191, type: !8658)
!16655 = !DILocation(line: 191, column: 50, scope: !16651)
!16656 = !DILocation(line: 195, column: 34, scope: !16651)
!16657 = !DILocation(line: 195, column: 10, scope: !16651)
!16658 = !DILocation(line: 195, column: 40, scope: !16651)
!16659 = !DILocation(line: 195, column: 63, scope: !16651)
!16660 = !DILocation(line: 195, column: 44, scope: !16651)
!16661 = !DILocation(line: 195, column: 43, scope: !16651)
!16662 = !DILocation(line: 0, scope: !16651)
!16663 = !DILocation(line: 195, column: 2, scope: !16651)
!16664 = distinct !DISubprogram(name: "mlxsw_sp_port_dev_addr_set", scope: !3, file: !3, line: 303, type: !16665, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16665 = !DISubroutineType(types: !16666)
!16666 = !{!7, !10715, !7896}
!16667 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !16664, file: !3, line: 303, type: !10715)
!16668 = !DILocation(line: 303, column: 61, scope: !16664)
!16669 = !DILocalVariable(name: "addr", arg: 2, scope: !16664, file: !3, line: 304, type: !7896)
!16670 = !DILocation(line: 304, column: 26, scope: !16664)
!16671 = !DILocalVariable(name: "mlxsw_sp", scope: !16664, file: !3, line: 306, type: !10721)
!16672 = !DILocation(line: 306, column: 19, scope: !16664)
!16673 = !DILocation(line: 306, column: 30, scope: !16664)
!16674 = !DILocation(line: 306, column: 45, scope: !16664)
!16675 = !DILocalVariable(name: "ppad_pl", scope: !16664, file: !3, line: 307, type: !428)
!16676 = !DILocation(line: 307, column: 7, scope: !16664)
!16677 = !DILocation(line: 309, column: 22, scope: !16664)
!16678 = !DILocation(line: 309, column: 37, scope: !16664)
!16679 = !DILocation(line: 309, column: 52, scope: !16664)
!16680 = !DILocation(line: 309, column: 2, scope: !16664)
!16681 = !DILocation(line: 310, column: 31, scope: !16664)
!16682 = !DILocation(line: 310, column: 40, scope: !16664)
!16683 = !DILocation(line: 310, column: 2, scope: !16664)
!16684 = !DILocation(line: 311, column: 25, scope: !16664)
!16685 = !DILocation(line: 311, column: 35, scope: !16664)
!16686 = !DILocation(line: 311, column: 58, scope: !16664)
!16687 = !DILocation(line: 311, column: 9, scope: !16664)
!16688 = !DILocation(line: 311, column: 2, scope: !16664)
!16689 = distinct !DISubprogram(name: "is_multicast_ether_addr", scope: !16379, file: !16379, line: 116, type: !16652, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16690 = !DILocalVariable(name: "addr", arg: 1, scope: !16689, file: !16379, line: 116, type: !8658)
!16691 = !DILocation(line: 116, column: 54, scope: !16689)
!16692 = !DILocalVariable(name: "a", scope: !16689, file: !16379, line: 119, type: !862)
!16693 = !DILocation(line: 119, column: 6, scope: !16689)
!16694 = !DILocation(line: 119, column: 24, scope: !16689)
!16695 = !DILocation(line: 119, column: 10, scope: !16689)
!16696 = !DILocation(line: 126, column: 16, scope: !16689)
!16697 = !DILocation(line: 126, column: 14, scope: !16689)
!16698 = !DILocation(line: 126, column: 9, scope: !16689)
!16699 = !DILocation(line: 126, column: 2, scope: !16689)
!16700 = distinct !DISubprogram(name: "is_zero_ether_addr", scope: !16379, file: !16379, line: 98, type: !16652, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16701 = !DILocalVariable(name: "addr", arg: 1, scope: !16700, file: !16379, line: 98, type: !8658)
!16702 = !DILocation(line: 98, column: 49, scope: !16700)
!16703 = !DILocation(line: 101, column: 25, scope: !16700)
!16704 = !DILocation(line: 101, column: 11, scope: !16700)
!16705 = !DILocation(line: 101, column: 49, scope: !16700)
!16706 = !DILocation(line: 101, column: 54, scope: !16700)
!16707 = !DILocation(line: 101, column: 34, scope: !16700)
!16708 = !DILocation(line: 101, column: 33, scope: !16700)
!16709 = !DILocation(line: 101, column: 31, scope: !16700)
!16710 = !DILocation(line: 101, column: 61, scope: !16700)
!16711 = !DILocation(line: 101, column: 2, scope: !16700)
!16712 = distinct !DISubprogram(name: "mlxsw_reg_ppad_pack", scope: !10113, file: !10113, line: 4417, type: !16713, scopeLine: 4419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16713 = !DISubroutineType(types: !16714)
!16714 = !{null, !733, !696, !1552}
!16715 = !DILocalVariable(name: "payload", arg: 1, scope: !16712, file: !10113, line: 4417, type: !733)
!16716 = !DILocation(line: 4417, column: 46, scope: !16712)
!16717 = !DILocalVariable(name: "single_base_mac", arg: 2, scope: !16712, file: !10113, line: 4417, type: !696)
!16718 = !DILocation(line: 4417, column: 60, scope: !16712)
!16719 = !DILocalVariable(name: "local_port", arg: 3, scope: !16712, file: !10113, line: 4418, type: !1552)
!16720 = !DILocation(line: 4418, column: 15, scope: !16712)
!16721 = !DILocation(line: 4420, column: 2, scope: !16712)
!16722 = !DILocation(line: 4421, column: 37, scope: !16712)
!16723 = !DILocation(line: 4421, column: 48, scope: !16712)
!16724 = !DILocation(line: 4421, column: 47, scope: !16712)
!16725 = !DILocation(line: 4421, column: 46, scope: !16712)
!16726 = !DILocation(line: 4421, column: 2, scope: !16712)
!16727 = !DILocation(line: 4422, column: 32, scope: !16712)
!16728 = !DILocation(line: 4422, column: 41, scope: !16712)
!16729 = !DILocation(line: 4422, column: 2, scope: !16712)
!16730 = !DILocation(line: 4423, column: 1, scope: !16712)
!16731 = distinct !DISubprogram(name: "mlxsw_reg_ppad_mac_memcpy_to", scope: !10113, file: !10113, line: 4415, type: !16732, scopeLine: 4415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16732 = !DISubroutineType(types: !16733)
!16733 = !{null, !733, !453}
!16734 = !DILocalVariable(name: "buf", arg: 1, scope: !16731, file: !10113, line: 4415, type: !733)
!16735 = !DILocation(line: 4415, column: 1, scope: !16731)
!16736 = !DILocalVariable(name: "src", arg: 2, scope: !16731, file: !10113, line: 4415, type: !453)
!16737 = distinct !DISubprogram(name: "mlxsw_reg_ppad_single_base_mac_set", scope: !10113, file: !10113, line: 4402, type: !14426, scopeLine: 4402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16738 = !DILocalVariable(name: "buf", arg: 1, scope: !16737, file: !10113, line: 4402, type: !733)
!16739 = !DILocation(line: 4402, column: 1, scope: !16737)
!16740 = !DILocalVariable(name: "val", arg: 2, scope: !16737, file: !10113, line: 4402, type: !862)
!16741 = distinct !DISubprogram(name: "mlxsw_reg_ppad_local_port_set", scope: !10113, file: !10113, line: 4408, type: !14426, scopeLine: 4408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16742 = !DILocalVariable(name: "buf", arg: 1, scope: !16741, file: !10113, line: 4408, type: !733)
!16743 = !DILocation(line: 4408, column: 1, scope: !16741)
!16744 = !DILocalVariable(name: "val", arg: 2, scope: !16741, file: !10113, line: 4408, type: !862)
!16745 = distinct !DISubprogram(name: "__mlxsw_item_memcpy_to", scope: !10989, file: !10989, line: 187, type: !16746, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16746 = !DISubroutineType(types: !16747)
!16747 = !{null, !733, !453, !14969, !633}
!16748 = !DILocalVariable(name: "buf", arg: 1, scope: !16745, file: !10989, line: 187, type: !733)
!16749 = !DILocation(line: 187, column: 49, scope: !16745)
!16750 = !DILocalVariable(name: "src", arg: 2, scope: !16745, file: !10989, line: 187, type: !453)
!16751 = !DILocation(line: 187, column: 66, scope: !16745)
!16752 = !DILocalVariable(name: "item", arg: 3, scope: !16745, file: !10989, line: 188, type: !14969)
!16753 = !DILocation(line: 188, column: 33, scope: !16745)
!16754 = !DILocalVariable(name: "index", arg: 4, scope: !16745, file: !10989, line: 189, type: !633)
!16755 = !DILocation(line: 189, column: 23, scope: !16745)
!16756 = !DILocalVariable(name: "offset", scope: !16745, file: !10989, line: 191, type: !14)
!16757 = !DILocation(line: 191, column: 15, scope: !16745)
!16758 = !DILocation(line: 191, column: 44, scope: !16745)
!16759 = !DILocation(line: 191, column: 50, scope: !16745)
!16760 = !DILocation(line: 191, column: 24, scope: !16745)
!16761 = !DILocation(line: 193, column: 10, scope: !16745)
!16762 = !DILocation(line: 193, column: 14, scope: !16745)
!16763 = !DILocation(line: 193, column: 23, scope: !16745)
!16764 = !DILocation(line: 193, column: 28, scope: !16745)
!16765 = !DILocation(line: 193, column: 34, scope: !16745)
!16766 = !DILocation(line: 193, column: 39, scope: !16745)
!16767 = !DILocation(line: 193, column: 2, scope: !16745)
!16768 = !DILocation(line: 194, column: 1, scope: !16745)
!16769 = distinct !DISubprogram(name: "mlxsw_sp_port_hwtstamp_set", scope: !3, file: !3, line: 1093, type: !16770, scopeLine: 1095, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16770 = !DISubroutineType(types: !16771)
!16771 = !{!7, !10715, !7922}
!16772 = !DILocalVariable(name: "addr", arg: 1, scope: !16773, file: !16774, line: 138, type: !2424)
!16773 = distinct !DISubprogram(name: "check_copy_size", scope: !16774, file: !16774, line: 138, type: !16775, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16774 = !DIFile(filename: "./include/linux/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!16775 = !DISubroutineType(types: !16776)
!16776 = !{!696, !2424, !750, !696}
!16777 = !DILocation(line: 138, column: 29, scope: !16773, inlinedAt: !16778)
!16778 = distinct !DILocation(line: 199, column: 6, scope: !16779, inlinedAt: !16784)
!16779 = distinct !DILexicalBlock(scope: !16781, file: !16780, line: 199, column: 6)
!16780 = !DIFile(filename: "./include/linux/uaccess.h", directory: "/home/lizy2001/genbc/linux")
!16781 = distinct !DISubprogram(name: "copy_to_user", scope: !16780, file: !16780, line: 197, type: !16782, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16782 = !DISubroutineType(types: !16783)
!16783 = !{!473, !726, !2424, !473}
!16784 = distinct !DILocation(line: 1107, column: 6, scope: !16785)
!16785 = distinct !DILexicalBlock(scope: !16769, file: !3, line: 1107, column: 6)
!16786 = !DILocalVariable(name: "bytes", arg: 2, scope: !16773, file: !16774, line: 138, type: !750)
!16787 = !DILocation(line: 138, column: 42, scope: !16773, inlinedAt: !16778)
!16788 = !DILocalVariable(name: "is_source", arg: 3, scope: !16773, file: !16774, line: 138, type: !696)
!16789 = !DILocation(line: 138, column: 54, scope: !16773, inlinedAt: !16778)
!16790 = !DILocalVariable(name: "sz", scope: !16773, file: !16774, line: 140, type: !7)
!16791 = !DILocation(line: 140, column: 6, scope: !16773, inlinedAt: !16778)
!16792 = !DILocalVariable(name: "__ret_warn_on", scope: !16793, file: !16774, line: 150, type: !7)
!16793 = distinct !DILexicalBlock(scope: !16794, file: !16774, line: 150, column: 6)
!16794 = distinct !DILexicalBlock(scope: !16773, file: !16774, line: 150, column: 6)
!16795 = !DILocation(line: 150, column: 6, scope: !16793, inlinedAt: !16778)
!16796 = !DILocalVariable(name: "to", arg: 1, scope: !16781, file: !16780, line: 197, type: !726)
!16797 = !DILocation(line: 197, column: 27, scope: !16781, inlinedAt: !16784)
!16798 = !DILocalVariable(name: "from", arg: 2, scope: !16781, file: !16780, line: 197, type: !2424)
!16799 = !DILocation(line: 197, column: 43, scope: !16781, inlinedAt: !16784)
!16800 = !DILocalVariable(name: "n", arg: 3, scope: !16781, file: !16780, line: 197, type: !473)
!16801 = !DILocation(line: 197, column: 63, scope: !16781, inlinedAt: !16784)
!16802 = !DILocation(line: 138, column: 29, scope: !16773, inlinedAt: !16803)
!16803 = distinct !DILocation(line: 191, column: 6, scope: !16804, inlinedAt: !16806)
!16804 = distinct !DILexicalBlock(scope: !16805, file: !16780, line: 191, column: 6)
!16805 = distinct !DISubprogram(name: "copy_from_user", scope: !16780, file: !16780, line: 189, type: !16782, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16806 = distinct !DILocation(line: 1099, column: 6, scope: !16807)
!16807 = distinct !DILexicalBlock(scope: !16769, file: !3, line: 1099, column: 6)
!16808 = !DILocation(line: 138, column: 42, scope: !16773, inlinedAt: !16803)
!16809 = !DILocation(line: 138, column: 54, scope: !16773, inlinedAt: !16803)
!16810 = !DILocation(line: 140, column: 6, scope: !16773, inlinedAt: !16803)
!16811 = !DILocation(line: 150, column: 6, scope: !16793, inlinedAt: !16803)
!16812 = !DILocalVariable(name: "to", arg: 1, scope: !16805, file: !16780, line: 189, type: !726)
!16813 = !DILocation(line: 189, column: 22, scope: !16805, inlinedAt: !16806)
!16814 = !DILocalVariable(name: "from", arg: 2, scope: !16805, file: !16780, line: 189, type: !2424)
!16815 = !DILocation(line: 189, column: 45, scope: !16805, inlinedAt: !16806)
!16816 = !DILocalVariable(name: "n", arg: 3, scope: !16805, file: !16780, line: 189, type: !473)
!16817 = !DILocation(line: 189, column: 65, scope: !16805, inlinedAt: !16806)
!16818 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !16769, file: !3, line: 1093, type: !10715)
!16819 = !DILocation(line: 1093, column: 61, scope: !16769)
!16820 = !DILocalVariable(name: "ifr", arg: 2, scope: !16769, file: !3, line: 1094, type: !7922)
!16821 = !DILocation(line: 1094, column: 25, scope: !16769)
!16822 = !DILocalVariable(name: "config", scope: !16769, file: !3, line: 1096, type: !11219)
!16823 = !DILocation(line: 1096, column: 25, scope: !16769)
!16824 = !DILocalVariable(name: "err", scope: !16769, file: !3, line: 1097, type: !7)
!16825 = !DILocation(line: 1097, column: 6, scope: !16769)
!16826 = !DILocation(line: 1099, column: 21, scope: !16807)
!16827 = !DILocation(line: 1099, column: 30, scope: !16807)
!16828 = !DILocation(line: 1099, column: 35, scope: !16807)
!16829 = !DILocation(line: 191, column: 6, scope: !16804, inlinedAt: !16806)
!16830 = !DILocation(line: 141, column: 6, scope: !16831, inlinedAt: !16803)
!16831 = distinct !DILexicalBlock(scope: !16773, file: !16774, line: 141, column: 6)
!16832 = !DILocation(line: 0, scope: !16831, inlinedAt: !16803)
!16833 = !DILocation(line: 141, column: 6, scope: !16773, inlinedAt: !16803)
!16834 = !DILocation(line: 142, column: 29, scope: !16835, inlinedAt: !16803)
!16835 = distinct !DILexicalBlock(scope: !16836, file: !16774, line: 142, column: 7)
!16836 = distinct !DILexicalBlock(scope: !16831, file: !16774, line: 141, column: 39)
!16837 = !DILocation(line: 142, column: 8, scope: !16835, inlinedAt: !16803)
!16838 = !DILocation(line: 142, column: 7, scope: !16836, inlinedAt: !16803)
!16839 = !DILocation(line: 143, column: 18, scope: !16835, inlinedAt: !16803)
!16840 = !DILocation(line: 143, column: 22, scope: !16835, inlinedAt: !16803)
!16841 = !DILocation(line: 143, column: 4, scope: !16835, inlinedAt: !16803)
!16842 = !DILocation(line: 144, column: 12, scope: !16843, inlinedAt: !16803)
!16843 = distinct !DILexicalBlock(scope: !16835, file: !16774, line: 144, column: 12)
!16844 = !DILocation(line: 144, column: 12, scope: !16835, inlinedAt: !16803)
!16845 = !DILocation(line: 145, column: 4, scope: !16843, inlinedAt: !16803)
!16846 = !DILocation(line: 147, column: 4, scope: !16843, inlinedAt: !16803)
!16847 = !DILocation(line: 148, column: 3, scope: !16836, inlinedAt: !16803)
!16848 = !DILocation(line: 150, column: 6, scope: !16849, inlinedAt: !16803)
!16849 = distinct !DILexicalBlock(scope: !16793, file: !16774, line: 150, column: 6)
!16850 = !DILocation(line: 150, column: 6, scope: !16851, inlinedAt: !16803)
!16851 = distinct !DILexicalBlock(scope: !16852, file: !16774, line: 150, column: 6)
!16852 = distinct !DILexicalBlock(scope: !16849, file: !16774, line: 150, column: 6)
!16853 = !{i32 -2145430971, i32 -2145430942, i32 -2145430896, i32 -2145430838, i32 -2145430784, i32 -2145430730, i32 -2145430675, i32 -2145430644}
!16854 = !DILocation(line: 150, column: 6, scope: !16855, inlinedAt: !16803)
!16855 = distinct !DILexicalBlock(scope: !16852, file: !16774, line: 150, column: 6)
!16856 = !{i32 -2145430224, i32 -2145430217, i32 -2145430165, i32 -2145430134, i32 -2145430104}
!16857 = !DILocation(line: 150, column: 6, scope: !16852, inlinedAt: !16803)
!16858 = !DILocation(line: 150, column: 6, scope: !16794, inlinedAt: !16803)
!16859 = !DILocation(line: 150, column: 6, scope: !16773, inlinedAt: !16803)
!16860 = !DILocation(line: 151, column: 3, scope: !16794, inlinedAt: !16803)
!16861 = !DILocation(line: 152, column: 20, scope: !16773, inlinedAt: !16803)
!16862 = !DILocation(line: 152, column: 26, scope: !16773, inlinedAt: !16803)
!16863 = !DILocation(line: 152, column: 33, scope: !16773, inlinedAt: !16803)
!16864 = !DILocation(line: 152, column: 2, scope: !16773, inlinedAt: !16803)
!16865 = !DILocation(line: 153, column: 2, scope: !16773, inlinedAt: !16803)
!16866 = !DILocation(line: 154, column: 1, scope: !16773, inlinedAt: !16803)
!16867 = !DILocation(line: 191, column: 6, scope: !16805, inlinedAt: !16806)
!16868 = !DILocation(line: 192, column: 23, scope: !16804, inlinedAt: !16806)
!16869 = !DILocation(line: 192, column: 27, scope: !16804, inlinedAt: !16806)
!16870 = !DILocation(line: 192, column: 33, scope: !16804, inlinedAt: !16806)
!16871 = !DILocation(line: 192, column: 7, scope: !16804, inlinedAt: !16806)
!16872 = !DILocation(line: 192, column: 5, scope: !16804, inlinedAt: !16806)
!16873 = !DILocation(line: 192, column: 3, scope: !16804, inlinedAt: !16806)
!16874 = !DILocation(line: 193, column: 9, scope: !16805, inlinedAt: !16806)
!16875 = !DILocation(line: 1099, column: 6, scope: !16807)
!16876 = !DILocation(line: 1099, column: 6, scope: !16769)
!16877 = !DILocation(line: 1100, column: 3, scope: !16807)
!16878 = !DILocation(line: 1102, column: 8, scope: !16769)
!16879 = !DILocation(line: 1102, column: 23, scope: !16769)
!16880 = !DILocation(line: 1102, column: 33, scope: !16769)
!16881 = !DILocation(line: 1102, column: 42, scope: !16769)
!16882 = !DILocation(line: 1102, column: 55, scope: !16769)
!16883 = !DILocation(line: 1102, column: 6, scope: !16769)
!16884 = !DILocation(line: 1104, column: 6, scope: !16885)
!16885 = distinct !DILexicalBlock(scope: !16769, file: !3, line: 1104, column: 6)
!16886 = !DILocation(line: 1104, column: 6, scope: !16769)
!16887 = !DILocation(line: 1105, column: 10, scope: !16885)
!16888 = !DILocation(line: 1105, column: 3, scope: !16885)
!16889 = !DILocation(line: 1107, column: 19, scope: !16785)
!16890 = !DILocation(line: 1107, column: 24, scope: !16785)
!16891 = !DILocation(line: 1107, column: 34, scope: !16785)
!16892 = !DILocation(line: 199, column: 6, scope: !16779, inlinedAt: !16784)
!16893 = !DILocation(line: 141, column: 6, scope: !16831, inlinedAt: !16778)
!16894 = !DILocation(line: 0, scope: !16831, inlinedAt: !16778)
!16895 = !DILocation(line: 141, column: 6, scope: !16773, inlinedAt: !16778)
!16896 = !DILocation(line: 142, column: 29, scope: !16835, inlinedAt: !16778)
!16897 = !DILocation(line: 142, column: 8, scope: !16835, inlinedAt: !16778)
!16898 = !DILocation(line: 142, column: 7, scope: !16836, inlinedAt: !16778)
!16899 = !DILocation(line: 143, column: 18, scope: !16835, inlinedAt: !16778)
!16900 = !DILocation(line: 143, column: 22, scope: !16835, inlinedAt: !16778)
!16901 = !DILocation(line: 143, column: 4, scope: !16835, inlinedAt: !16778)
!16902 = !DILocation(line: 144, column: 12, scope: !16843, inlinedAt: !16778)
!16903 = !DILocation(line: 144, column: 12, scope: !16835, inlinedAt: !16778)
!16904 = !DILocation(line: 145, column: 4, scope: !16843, inlinedAt: !16778)
!16905 = !DILocation(line: 147, column: 4, scope: !16843, inlinedAt: !16778)
!16906 = !DILocation(line: 148, column: 3, scope: !16836, inlinedAt: !16778)
!16907 = !DILocation(line: 150, column: 6, scope: !16849, inlinedAt: !16778)
!16908 = !DILocation(line: 150, column: 6, scope: !16851, inlinedAt: !16778)
!16909 = !DILocation(line: 150, column: 6, scope: !16855, inlinedAt: !16778)
!16910 = !DILocation(line: 150, column: 6, scope: !16852, inlinedAt: !16778)
!16911 = !DILocation(line: 150, column: 6, scope: !16794, inlinedAt: !16778)
!16912 = !DILocation(line: 150, column: 6, scope: !16773, inlinedAt: !16778)
!16913 = !DILocation(line: 151, column: 3, scope: !16794, inlinedAt: !16778)
!16914 = !DILocation(line: 152, column: 20, scope: !16773, inlinedAt: !16778)
!16915 = !DILocation(line: 152, column: 26, scope: !16773, inlinedAt: !16778)
!16916 = !DILocation(line: 152, column: 33, scope: !16773, inlinedAt: !16778)
!16917 = !DILocation(line: 152, column: 2, scope: !16773, inlinedAt: !16778)
!16918 = !DILocation(line: 153, column: 2, scope: !16773, inlinedAt: !16778)
!16919 = !DILocation(line: 154, column: 1, scope: !16773, inlinedAt: !16778)
!16920 = !DILocation(line: 199, column: 6, scope: !16781, inlinedAt: !16784)
!16921 = !DILocation(line: 200, column: 21, scope: !16779, inlinedAt: !16784)
!16922 = !DILocation(line: 200, column: 25, scope: !16779, inlinedAt: !16784)
!16923 = !DILocation(line: 200, column: 31, scope: !16779, inlinedAt: !16784)
!16924 = !DILocation(line: 200, column: 7, scope: !16779, inlinedAt: !16784)
!16925 = !DILocation(line: 200, column: 5, scope: !16779, inlinedAt: !16784)
!16926 = !DILocation(line: 200, column: 3, scope: !16779, inlinedAt: !16784)
!16927 = !DILocation(line: 201, column: 9, scope: !16781, inlinedAt: !16784)
!16928 = !DILocation(line: 1107, column: 6, scope: !16785)
!16929 = !DILocation(line: 1107, column: 6, scope: !16769)
!16930 = !DILocation(line: 1108, column: 3, scope: !16785)
!16931 = !DILocation(line: 1110, column: 2, scope: !16769)
!16932 = !DILocation(line: 1111, column: 1, scope: !16769)
!16933 = distinct !DISubprogram(name: "mlxsw_sp_port_hwtstamp_get", scope: !3, file: !3, line: 1113, type: !16770, scopeLine: 1115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!16934 = !DILocation(line: 138, column: 29, scope: !16773, inlinedAt: !16935)
!16935 = distinct !DILocation(line: 199, column: 6, scope: !16779, inlinedAt: !16936)
!16936 = distinct !DILocation(line: 1124, column: 6, scope: !16937)
!16937 = distinct !DILexicalBlock(scope: !16933, file: !3, line: 1124, column: 6)
!16938 = !DILocation(line: 138, column: 42, scope: !16773, inlinedAt: !16935)
!16939 = !DILocation(line: 138, column: 54, scope: !16773, inlinedAt: !16935)
!16940 = !DILocation(line: 140, column: 6, scope: !16773, inlinedAt: !16935)
!16941 = !DILocation(line: 150, column: 6, scope: !16793, inlinedAt: !16935)
!16942 = !DILocation(line: 197, column: 27, scope: !16781, inlinedAt: !16936)
!16943 = !DILocation(line: 197, column: 43, scope: !16781, inlinedAt: !16936)
!16944 = !DILocation(line: 197, column: 63, scope: !16781, inlinedAt: !16936)
!16945 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !16933, file: !3, line: 1113, type: !10715)
!16946 = !DILocation(line: 1113, column: 61, scope: !16933)
!16947 = !DILocalVariable(name: "ifr", arg: 2, scope: !16933, file: !3, line: 1114, type: !7922)
!16948 = !DILocation(line: 1114, column: 25, scope: !16933)
!16949 = !DILocalVariable(name: "config", scope: !16933, file: !3, line: 1116, type: !11219)
!16950 = !DILocation(line: 1116, column: 25, scope: !16933)
!16951 = !DILocalVariable(name: "err", scope: !16933, file: !3, line: 1117, type: !7)
!16952 = !DILocation(line: 1117, column: 6, scope: !16933)
!16953 = !DILocation(line: 1119, column: 8, scope: !16933)
!16954 = !DILocation(line: 1119, column: 23, scope: !16933)
!16955 = !DILocation(line: 1119, column: 33, scope: !16933)
!16956 = !DILocation(line: 1119, column: 42, scope: !16933)
!16957 = !DILocation(line: 1119, column: 55, scope: !16933)
!16958 = !DILocation(line: 1119, column: 6, scope: !16933)
!16959 = !DILocation(line: 1121, column: 6, scope: !16960)
!16960 = distinct !DILexicalBlock(scope: !16933, file: !3, line: 1121, column: 6)
!16961 = !DILocation(line: 1121, column: 6, scope: !16933)
!16962 = !DILocation(line: 1122, column: 10, scope: !16960)
!16963 = !DILocation(line: 1122, column: 3, scope: !16960)
!16964 = !DILocation(line: 1124, column: 19, scope: !16937)
!16965 = !DILocation(line: 1124, column: 24, scope: !16937)
!16966 = !DILocation(line: 1124, column: 34, scope: !16937)
!16967 = !DILocation(line: 199, column: 6, scope: !16779, inlinedAt: !16936)
!16968 = !DILocation(line: 141, column: 6, scope: !16831, inlinedAt: !16935)
!16969 = !DILocation(line: 0, scope: !16831, inlinedAt: !16935)
!16970 = !DILocation(line: 141, column: 6, scope: !16773, inlinedAt: !16935)
!16971 = !DILocation(line: 142, column: 29, scope: !16835, inlinedAt: !16935)
!16972 = !DILocation(line: 142, column: 8, scope: !16835, inlinedAt: !16935)
!16973 = !DILocation(line: 142, column: 7, scope: !16836, inlinedAt: !16935)
!16974 = !DILocation(line: 143, column: 18, scope: !16835, inlinedAt: !16935)
!16975 = !DILocation(line: 143, column: 22, scope: !16835, inlinedAt: !16935)
!16976 = !DILocation(line: 143, column: 4, scope: !16835, inlinedAt: !16935)
!16977 = !DILocation(line: 144, column: 12, scope: !16843, inlinedAt: !16935)
!16978 = !DILocation(line: 144, column: 12, scope: !16835, inlinedAt: !16935)
!16979 = !DILocation(line: 145, column: 4, scope: !16843, inlinedAt: !16935)
!16980 = !DILocation(line: 147, column: 4, scope: !16843, inlinedAt: !16935)
!16981 = !DILocation(line: 148, column: 3, scope: !16836, inlinedAt: !16935)
!16982 = !DILocation(line: 150, column: 6, scope: !16849, inlinedAt: !16935)
!16983 = !DILocation(line: 150, column: 6, scope: !16851, inlinedAt: !16935)
!16984 = !DILocation(line: 150, column: 6, scope: !16855, inlinedAt: !16935)
!16985 = !DILocation(line: 150, column: 6, scope: !16852, inlinedAt: !16935)
!16986 = !DILocation(line: 150, column: 6, scope: !16794, inlinedAt: !16935)
!16987 = !DILocation(line: 150, column: 6, scope: !16773, inlinedAt: !16935)
!16988 = !DILocation(line: 151, column: 3, scope: !16794, inlinedAt: !16935)
!16989 = !DILocation(line: 152, column: 20, scope: !16773, inlinedAt: !16935)
!16990 = !DILocation(line: 152, column: 26, scope: !16773, inlinedAt: !16935)
!16991 = !DILocation(line: 152, column: 33, scope: !16773, inlinedAt: !16935)
!16992 = !DILocation(line: 152, column: 2, scope: !16773, inlinedAt: !16935)
!16993 = !DILocation(line: 153, column: 2, scope: !16773, inlinedAt: !16935)
!16994 = !DILocation(line: 154, column: 1, scope: !16773, inlinedAt: !16935)
!16995 = !DILocation(line: 199, column: 6, scope: !16781, inlinedAt: !16936)
!16996 = !DILocation(line: 200, column: 21, scope: !16779, inlinedAt: !16936)
!16997 = !DILocation(line: 200, column: 25, scope: !16779, inlinedAt: !16936)
!16998 = !DILocation(line: 200, column: 31, scope: !16779, inlinedAt: !16936)
!16999 = !DILocation(line: 200, column: 7, scope: !16779, inlinedAt: !16936)
!17000 = !DILocation(line: 200, column: 5, scope: !16779, inlinedAt: !16936)
!17001 = !DILocation(line: 200, column: 3, scope: !16779, inlinedAt: !16936)
!17002 = !DILocation(line: 201, column: 9, scope: !16781, inlinedAt: !16936)
!17003 = !DILocation(line: 1124, column: 6, scope: !16937)
!17004 = !DILocation(line: 1124, column: 6, scope: !16933)
!17005 = !DILocation(line: 1125, column: 3, scope: !16937)
!17006 = !DILocation(line: 1127, column: 2, scope: !16933)
!17007 = !DILocation(line: 1128, column: 1, scope: !16933)
!17008 = distinct !DISubprogram(name: "copy_overflow", scope: !16774, file: !16774, line: 132, type: !17009, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17009 = !DISubroutineType(types: !17010)
!17010 = !{null, !7, !473}
!17011 = !DILocalVariable(name: "size", arg: 1, scope: !17008, file: !16774, line: 132, type: !7)
!17012 = !DILocation(line: 132, column: 38, scope: !17008)
!17013 = !DILocalVariable(name: "count", arg: 2, scope: !17008, file: !16774, line: 132, type: !473)
!17014 = !DILocation(line: 132, column: 58, scope: !17008)
!17015 = !DILocalVariable(name: "__ret_warn_on", scope: !17016, file: !16774, line: 134, type: !7)
!17016 = distinct !DILexicalBlock(scope: !17008, file: !16774, line: 134, column: 2)
!17017 = !DILocation(line: 134, column: 2, scope: !17016)
!17018 = !DILocation(line: 134, column: 2, scope: !17019)
!17019 = distinct !DILexicalBlock(scope: !17016, file: !16774, line: 134, column: 2)
!17020 = !DILocation(line: 134, column: 2, scope: !17021)
!17021 = distinct !DILexicalBlock(scope: !17019, file: !16774, line: 134, column: 2)
!17022 = !DILocation(line: 134, column: 2, scope: !17023)
!17023 = distinct !DILexicalBlock(scope: !17021, file: !16774, line: 134, column: 2)
!17024 = !DILocation(line: 134, column: 2, scope: !17025)
!17025 = distinct !DILexicalBlock(scope: !17021, file: !16774, line: 134, column: 2)
!17026 = !DILocation(line: 134, column: 2, scope: !17027)
!17027 = distinct !DILexicalBlock(scope: !17025, file: !16774, line: 134, column: 2)
!17028 = !DILocation(line: 134, column: 2, scope: !17029)
!17029 = distinct !DILexicalBlock(scope: !17025, file: !16774, line: 134, column: 2)
!17030 = !{i32 -2145432795, i32 -2145432766, i32 -2145432720, i32 -2145432662, i32 -2145432608, i32 -2145432554, i32 -2145432499, i32 -2145432468}
!17031 = !DILocation(line: 134, column: 2, scope: !17032)
!17032 = distinct !DILexicalBlock(scope: !17025, file: !16774, line: 134, column: 2)
!17033 = !{i32 -2145432048, i32 -2145432041, i32 -2145431989, i32 -2145431958, i32 -2145431928}
!17034 = !DILocation(line: 134, column: 2, scope: !17035)
!17035 = distinct !DILexicalBlock(scope: !17025, file: !16774, line: 134, column: 2)
!17036 = !DILocation(line: 134, column: 2, scope: !17037)
!17037 = distinct !DILexicalBlock(scope: !17021, file: !16774, line: 134, column: 2)
!17038 = !DILocation(line: 135, column: 1, scope: !17008)
!17039 = distinct !DISubprogram(name: "check_object_size", scope: !16774, file: !16774, line: 122, type: !17040, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17040 = !DISubroutineType(types: !17041)
!17041 = !{null, !2424, !473, !696}
!17042 = !DILocalVariable(name: "ptr", arg: 1, scope: !17039, file: !16774, line: 122, type: !2424)
!17043 = !DILocation(line: 122, column: 50, scope: !17039)
!17044 = !DILocalVariable(name: "n", arg: 2, scope: !17039, file: !16774, line: 122, type: !473)
!17045 = !DILocation(line: 122, column: 69, scope: !17039)
!17046 = !DILocalVariable(name: "to_user", arg: 3, scope: !17039, file: !16774, line: 123, type: !696)
!17047 = !DILocation(line: 123, column: 15, scope: !17039)
!17048 = !DILocation(line: 124, column: 3, scope: !17039)
!17049 = distinct !DISubprogram(name: "mlxsw_sp_port_mtu_set", scope: !3, file: !3, line: 339, type: !13471, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17050 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !17049, file: !3, line: 339, type: !10715)
!17051 = !DILocation(line: 339, column: 56, scope: !17049)
!17052 = !DILocalVariable(name: "mtu", arg: 2, scope: !17049, file: !3, line: 339, type: !1193)
!17053 = !DILocation(line: 339, column: 75, scope: !17049)
!17054 = !DILocalVariable(name: "mlxsw_sp", scope: !17049, file: !3, line: 341, type: !10721)
!17055 = !DILocation(line: 341, column: 19, scope: !17049)
!17056 = !DILocation(line: 341, column: 30, scope: !17049)
!17057 = !DILocation(line: 341, column: 45, scope: !17049)
!17058 = !DILocalVariable(name: "pmtu_pl", scope: !17049, file: !3, line: 342, type: !428)
!17059 = !DILocation(line: 342, column: 7, scope: !17049)
!17060 = !DILocation(line: 344, column: 6, scope: !17049)
!17061 = !DILocation(line: 345, column: 6, scope: !17062)
!17062 = distinct !DILexicalBlock(scope: !17049, file: !3, line: 345, column: 6)
!17063 = !DILocation(line: 345, column: 12, scope: !17062)
!17064 = !DILocation(line: 345, column: 27, scope: !17062)
!17065 = !DILocation(line: 345, column: 10, scope: !17062)
!17066 = !DILocation(line: 345, column: 6, scope: !17049)
!17067 = !DILocation(line: 346, column: 3, scope: !17062)
!17068 = !DILocation(line: 348, column: 22, scope: !17049)
!17069 = !DILocation(line: 348, column: 31, scope: !17049)
!17070 = !DILocation(line: 348, column: 46, scope: !17049)
!17071 = !DILocation(line: 348, column: 58, scope: !17049)
!17072 = !DILocation(line: 348, column: 2, scope: !17049)
!17073 = !DILocation(line: 349, column: 25, scope: !17049)
!17074 = !DILocation(line: 349, column: 35, scope: !17049)
!17075 = !DILocation(line: 349, column: 58, scope: !17049)
!17076 = !DILocation(line: 349, column: 9, scope: !17049)
!17077 = !DILocation(line: 349, column: 2, scope: !17049)
!17078 = !DILocation(line: 350, column: 1, scope: !17049)
!17079 = distinct !DISubprogram(name: "mlxsw_reg_pmtu_pack", scope: !10113, file: !10113, line: 4115, type: !15484, scopeLine: 4117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17080 = !DILocalVariable(name: "payload", arg: 1, scope: !17079, file: !10113, line: 4115, type: !733)
!17081 = !DILocation(line: 4115, column: 46, scope: !17079)
!17082 = !DILocalVariable(name: "local_port", arg: 2, scope: !17079, file: !10113, line: 4115, type: !1552)
!17083 = !DILocation(line: 4115, column: 58, scope: !17079)
!17084 = !DILocalVariable(name: "new_mtu", arg: 3, scope: !17079, file: !10113, line: 4116, type: !1193)
!17085 = !DILocation(line: 4116, column: 16, scope: !17079)
!17086 = !DILocation(line: 4118, column: 2, scope: !17079)
!17087 = !DILocation(line: 4119, column: 32, scope: !17079)
!17088 = !DILocation(line: 4119, column: 41, scope: !17079)
!17089 = !DILocation(line: 4119, column: 2, scope: !17079)
!17090 = !DILocation(line: 4120, column: 29, scope: !17079)
!17091 = !DILocation(line: 4120, column: 2, scope: !17079)
!17092 = !DILocation(line: 4121, column: 31, scope: !17079)
!17093 = !DILocation(line: 4121, column: 40, scope: !17079)
!17094 = !DILocation(line: 4121, column: 2, scope: !17079)
!17095 = !DILocation(line: 4122, column: 30, scope: !17079)
!17096 = !DILocation(line: 4122, column: 2, scope: !17079)
!17097 = !DILocation(line: 4123, column: 1, scope: !17079)
!17098 = distinct !DISubprogram(name: "mlxsw_reg_pmtu_local_port_set", scope: !10113, file: !10113, line: 4087, type: !14426, scopeLine: 4087, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17099 = !DILocalVariable(name: "buf", arg: 1, scope: !17098, file: !10113, line: 4087, type: !733)
!17100 = !DILocation(line: 4087, column: 1, scope: !17098)
!17101 = !DILocalVariable(name: "val", arg: 2, scope: !17098, file: !10113, line: 4087, type: !862)
!17102 = distinct !DISubprogram(name: "mlxsw_reg_pmtu_max_mtu_set", scope: !10113, file: !10113, line: 4096, type: !14426, scopeLine: 4096, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17103 = !DILocalVariable(name: "buf", arg: 1, scope: !17102, file: !10113, line: 4096, type: !733)
!17104 = !DILocation(line: 4096, column: 1, scope: !17102)
!17105 = !DILocalVariable(name: "val", arg: 2, scope: !17102, file: !10113, line: 4096, type: !862)
!17106 = distinct !DISubprogram(name: "mlxsw_reg_pmtu_admin_mtu_set", scope: !10113, file: !10113, line: 4104, type: !14426, scopeLine: 4104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17107 = !DILocalVariable(name: "buf", arg: 1, scope: !17106, file: !10113, line: 4104, type: !733)
!17108 = !DILocation(line: 4104, column: 1, scope: !17106)
!17109 = !DILocalVariable(name: "val", arg: 2, scope: !17106, file: !10113, line: 4104, type: !862)
!17110 = distinct !DISubprogram(name: "mlxsw_reg_pmtu_oper_mtu_set", scope: !10113, file: !10113, line: 4113, type: !14426, scopeLine: 4113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17111 = !DILocalVariable(name: "buf", arg: 1, scope: !17110, file: !10113, line: 4113, type: !733)
!17112 = !DILocation(line: 4113, column: 1, scope: !17110)
!17113 = !DILocalVariable(name: "val", arg: 2, scope: !17110, file: !10113, line: 4113, type: !862)
!17114 = distinct !DISubprogram(name: "mlxsw_sp_port_get_sw_stats64", scope: !3, file: !3, line: 644, type: !17115, scopeLine: 646, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17115 = !DISubroutineType(types: !17116)
!17116 = !{!7, !3023, !8050}
!17117 = !DILocalVariable(name: "dev", arg: 1, scope: !17114, file: !3, line: 644, type: !3023)
!17118 = !DILocation(line: 644, column: 55, scope: !17114)
!17119 = !DILocalVariable(name: "stats", arg: 2, scope: !17114, file: !3, line: 645, type: !8050)
!17120 = !DILocation(line: 645, column: 35, scope: !17114)
!17121 = !DILocalVariable(name: "mlxsw_sp_port", scope: !17114, file: !3, line: 647, type: !10715)
!17122 = !DILocation(line: 647, column: 24, scope: !17114)
!17123 = !DILocation(line: 647, column: 52, scope: !17114)
!17124 = !DILocation(line: 647, column: 40, scope: !17114)
!17125 = !DILocalVariable(name: "p", scope: !17114, file: !3, line: 648, type: !10686)
!17126 = !DILocation(line: 648, column: 35, scope: !17114)
!17127 = !DILocalVariable(name: "rx_packets", scope: !17114, file: !3, line: 649, type: !492)
!17128 = !DILocation(line: 649, column: 6, scope: !17114)
!17129 = !DILocalVariable(name: "rx_bytes", scope: !17114, file: !3, line: 649, type: !492)
!17130 = !DILocation(line: 649, column: 18, scope: !17114)
!17131 = !DILocalVariable(name: "tx_packets", scope: !17114, file: !3, line: 649, type: !492)
!17132 = !DILocation(line: 649, column: 28, scope: !17114)
!17133 = !DILocalVariable(name: "tx_bytes", scope: !17114, file: !3, line: 649, type: !492)
!17134 = !DILocation(line: 649, column: 40, scope: !17114)
!17135 = !DILocalVariable(name: "tx_dropped", scope: !17114, file: !3, line: 650, type: !862)
!17136 = !DILocation(line: 650, column: 6, scope: !17114)
!17137 = !DILocalVariable(name: "start", scope: !17114, file: !3, line: 651, type: !14)
!17138 = !DILocation(line: 651, column: 15, scope: !17114)
!17139 = !DILocalVariable(name: "i", scope: !17114, file: !3, line: 652, type: !7)
!17140 = !DILocation(line: 652, column: 6, scope: !17114)
!17141 = !DILocation(line: 654, column: 2, scope: !17142)
!17142 = distinct !DILexicalBlock(scope: !17114, file: !3, line: 654, column: 2)
!17143 = !DILocation(line: 654, column: 2, scope: !17144)
!17144 = distinct !DILexicalBlock(scope: !17142, file: !3, line: 654, column: 2)
!17145 = !DILocation(line: 655, column: 7, scope: !17146)
!17146 = distinct !DILexicalBlock(scope: !17147, file: !3, line: 655, column: 7)
!17147 = distinct !DILexicalBlock(scope: !17144, file: !3, line: 654, column: 27)
!17148 = !DILocation(line: 655, column: 7, scope: !17149)
!17149 = distinct !DILexicalBlock(scope: !17146, file: !3, line: 655, column: 7)
!17150 = !DILocalVariable(name: "__vpp_verify", scope: !17151, file: !3, line: 655, type: !2424)
!17151 = distinct !DILexicalBlock(scope: !17149, file: !3, line: 655, column: 7)
!17152 = !DILocation(line: 655, column: 7, scope: !17151)
!17153 = !DILocation(line: 655, column: 5, scope: !17147)
!17154 = !DILocation(line: 656, column: 3, scope: !17147)
!17155 = !DILocation(line: 657, column: 39, scope: !17156)
!17156 = distinct !DILexicalBlock(scope: !17147, file: !3, line: 656, column: 6)
!17157 = !DILocation(line: 657, column: 42, scope: !17156)
!17158 = !DILocation(line: 657, column: 12, scope: !17156)
!17159 = !DILocation(line: 657, column: 10, scope: !17156)
!17160 = !DILocation(line: 658, column: 17, scope: !17156)
!17161 = !DILocation(line: 658, column: 20, scope: !17156)
!17162 = !DILocation(line: 658, column: 15, scope: !17156)
!17163 = !DILocation(line: 659, column: 15, scope: !17156)
!17164 = !DILocation(line: 659, column: 18, scope: !17156)
!17165 = !DILocation(line: 659, column: 13, scope: !17156)
!17166 = !DILocation(line: 660, column: 17, scope: !17156)
!17167 = !DILocation(line: 660, column: 20, scope: !17156)
!17168 = !DILocation(line: 660, column: 15, scope: !17156)
!17169 = !DILocation(line: 661, column: 15, scope: !17156)
!17170 = !DILocation(line: 661, column: 18, scope: !17156)
!17171 = !DILocation(line: 661, column: 13, scope: !17156)
!17172 = !DILocation(line: 662, column: 3, scope: !17156)
!17173 = !DILocation(line: 662, column: 39, scope: !17147)
!17174 = !DILocation(line: 662, column: 42, scope: !17147)
!17175 = !DILocation(line: 662, column: 49, scope: !17147)
!17176 = !DILocation(line: 662, column: 12, scope: !17147)
!17177 = distinct !{!17177, !17154, !17178}
!17178 = !DILocation(line: 662, column: 55, scope: !17147)
!17179 = !DILocation(line: 664, column: 24, scope: !17147)
!17180 = !DILocation(line: 664, column: 3, scope: !17147)
!17181 = !DILocation(line: 664, column: 10, scope: !17147)
!17182 = !DILocation(line: 664, column: 21, scope: !17147)
!17183 = !DILocation(line: 665, column: 23, scope: !17147)
!17184 = !DILocation(line: 665, column: 3, scope: !17147)
!17185 = !DILocation(line: 665, column: 10, scope: !17147)
!17186 = !DILocation(line: 665, column: 20, scope: !17147)
!17187 = !DILocation(line: 666, column: 24, scope: !17147)
!17188 = !DILocation(line: 666, column: 3, scope: !17147)
!17189 = !DILocation(line: 666, column: 10, scope: !17147)
!17190 = !DILocation(line: 666, column: 21, scope: !17147)
!17191 = !DILocation(line: 667, column: 23, scope: !17147)
!17192 = !DILocation(line: 667, column: 3, scope: !17147)
!17193 = !DILocation(line: 667, column: 10, scope: !17147)
!17194 = !DILocation(line: 667, column: 20, scope: !17147)
!17195 = !DILocation(line: 669, column: 17, scope: !17147)
!17196 = !DILocation(line: 669, column: 20, scope: !17147)
!17197 = !DILocation(line: 669, column: 14, scope: !17147)
!17198 = !DILocation(line: 670, column: 2, scope: !17147)
!17199 = distinct !{!17199, !17141, !17200}
!17200 = !DILocation(line: 670, column: 2, scope: !17142)
!17201 = !DILocation(line: 671, column: 22, scope: !17114)
!17202 = !DILocation(line: 671, column: 2, scope: !17114)
!17203 = !DILocation(line: 671, column: 9, scope: !17114)
!17204 = !DILocation(line: 671, column: 20, scope: !17114)
!17205 = !DILocation(line: 672, column: 2, scope: !17114)
!17206 = distinct !DISubprogram(name: "u64_stats_fetch_begin_irq", scope: !2213, file: !2213, line: 203, type: !17207, scopeLine: 204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17207 = !DISubroutineType(types: !17208)
!17208 = !{!14, !17209}
!17209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17210, size: 64)
!17210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2212)
!17211 = !DILocalVariable(name: "syncp", arg: 1, scope: !17206, file: !2213, line: 203, type: !17209)
!17212 = !DILocation(line: 203, column: 83, scope: !17206)
!17213 = !DILocation(line: 208, column: 33, scope: !17206)
!17214 = !DILocation(line: 208, column: 9, scope: !17206)
!17215 = !DILocation(line: 208, column: 2, scope: !17206)
!17216 = distinct !DISubprogram(name: "u64_stats_fetch_retry_irq", scope: !2213, file: !2213, line: 211, type: !17217, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17217 = !DISubroutineType(types: !17218)
!17218 = !{!696, !17209, !14}
!17219 = !DILocalVariable(name: "syncp", arg: 1, scope: !17216, file: !2213, line: 211, type: !17209)
!17220 = !DILocation(line: 211, column: 75, scope: !17216)
!17221 = !DILocalVariable(name: "start", arg: 2, scope: !17216, file: !2213, line: 212, type: !14)
!17222 = !DILocation(line: 212, column: 24, scope: !17216)
!17223 = !DILocation(line: 217, column: 33, scope: !17216)
!17224 = !DILocation(line: 217, column: 40, scope: !17216)
!17225 = !DILocation(line: 217, column: 9, scope: !17216)
!17226 = !DILocation(line: 217, column: 2, scope: !17216)
!17227 = distinct !DISubprogram(name: "__u64_stats_fetch_begin", scope: !2213, file: !2213, line: 161, type: !17207, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17228 = !DILocalVariable(name: "syncp", arg: 1, scope: !17227, file: !2213, line: 161, type: !17209)
!17229 = !DILocation(line: 161, column: 81, scope: !17227)
!17230 = !DILocation(line: 166, column: 2, scope: !17227)
!17231 = distinct !DISubprogram(name: "__u64_stats_fetch_retry", scope: !2213, file: !2213, line: 178, type: !17217, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17232 = !DILocalVariable(name: "syncp", arg: 1, scope: !17231, file: !2213, line: 178, type: !17209)
!17233 = !DILocation(line: 178, column: 73, scope: !17231)
!17234 = !DILocalVariable(name: "start", arg: 2, scope: !17231, file: !2213, line: 179, type: !14)
!17235 = !DILocation(line: 179, column: 20, scope: !17231)
!17236 = !DILocation(line: 184, column: 2, scope: !17231)
!17237 = distinct !DISubprogram(name: "PTR_ERR_OR_ZERO", scope: !14030, file: !14030, line: 57, type: !3061, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17238 = !DILocalVariable(name: "ptr", arg: 1, scope: !17237, file: !14030, line: 57, type: !2424)
!17239 = !DILocation(line: 57, column: 68, scope: !17237)
!17240 = !DILocation(line: 59, column: 13, scope: !17241)
!17241 = distinct !DILexicalBlock(scope: !17237, file: !14030, line: 59, column: 6)
!17242 = !DILocation(line: 59, column: 6, scope: !17241)
!17243 = !DILocation(line: 59, column: 6, scope: !17237)
!17244 = !DILocation(line: 60, column: 18, scope: !17241)
!17245 = !DILocation(line: 60, column: 10, scope: !17241)
!17246 = !DILocation(line: 60, column: 3, scope: !17241)
!17247 = !DILocation(line: 62, column: 3, scope: !17241)
!17248 = !DILocation(line: 63, column: 1, scope: !17237)
!17249 = distinct !DISubprogram(name: "IS_ERR", scope: !14030, file: !14030, line: 34, type: !17250, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17250 = !DISubroutineType(types: !17251)
!17251 = !{!696, !2424}
!17252 = !DILocalVariable(name: "ptr", arg: 1, scope: !17249, file: !14030, line: 34, type: !2424)
!17253 = !DILocation(line: 34, column: 60, scope: !17249)
!17254 = !DILocation(line: 36, column: 9, scope: !17249)
!17255 = !DILocation(line: 36, column: 2, scope: !17249)
!17256 = distinct !DISubprogram(name: "PTR_ERR", scope: !14030, file: !14030, line: 29, type: !17257, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17257 = !DISubroutineType(types: !17258)
!17258 = !{!669, !2424}
!17259 = !DILocalVariable(name: "ptr", arg: 1, scope: !17256, file: !14030, line: 29, type: !2424)
!17260 = !DILocation(line: 29, column: 61, scope: !17256)
!17261 = !DILocation(line: 31, column: 16, scope: !17256)
!17262 = !DILocation(line: 31, column: 9, scope: !17256)
!17263 = !DILocation(line: 31, column: 2, scope: !17256)
!17264 = distinct !DISubprogram(name: "mlxsw_sp_setup_tc_block", scope: !3, file: !3, line: 960, type: !17265, scopeLine: 962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17265 = !DISubroutineType(types: !17266)
!17266 = !{!7, !10715, !17267}
!17267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17268, size: 64)
!17268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "flow_block_offload", file: !9583, line: 436, size: 576, elements: !17269)
!17269 = !{!17270, !17271, !17272, !17273, !17274, !17275, !17277, !17278, !17279, !17280}
!17270 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !17268, file: !9583, line: 437, baseType: !10269, size: 32)
!17271 = !DIDerivedType(tag: DW_TAG_member, name: "binder_type", scope: !17268, file: !9583, line: 438, baseType: !10273, size: 32, offset: 32)
!17272 = !DIDerivedType(tag: DW_TAG_member, name: "block_shared", scope: !17268, file: !9583, line: 439, baseType: !696, size: 8, offset: 64)
!17273 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_driver_cb", scope: !17268, file: !9583, line: 440, baseType: !696, size: 8, offset: 72)
!17274 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !17268, file: !9583, line: 441, baseType: !2116, size: 64, offset: 128)
!17275 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !17268, file: !9583, line: 442, baseType: !17276, size: 64, offset: 192)
!17276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9582, size: 64)
!17277 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !17268, file: !9583, line: 443, baseType: !445, size: 128, offset: 256)
!17278 = !DIDerivedType(tag: DW_TAG_member, name: "driver_block_list", scope: !17268, file: !9583, line: 444, baseType: !448, size: 64, offset: 384)
!17279 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !17268, file: !9583, line: 445, baseType: !2633, size: 64, offset: 448)
!17280 = !DIDerivedType(tag: DW_TAG_member, name: "sch", scope: !17268, file: !9583, line: 446, baseType: !9484, size: 64, offset: 512)
!17281 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !17264, file: !3, line: 960, type: !10715)
!17282 = !DILocation(line: 960, column: 58, scope: !17264)
!17283 = !DILocalVariable(name: "f", arg: 2, scope: !17264, file: !3, line: 961, type: !17267)
!17284 = !DILocation(line: 961, column: 35, scope: !17264)
!17285 = !DILocation(line: 963, column: 10, scope: !17264)
!17286 = !DILocation(line: 963, column: 13, scope: !17264)
!17287 = !DILocation(line: 963, column: 2, scope: !17264)
!17288 = !DILocation(line: 965, column: 41, scope: !17289)
!17289 = distinct !DILexicalBlock(scope: !17264, file: !3, line: 963, column: 26)
!17290 = !DILocation(line: 965, column: 56, scope: !17289)
!17291 = !DILocation(line: 965, column: 10, scope: !17289)
!17292 = !DILocation(line: 965, column: 3, scope: !17289)
!17293 = !DILocation(line: 967, column: 41, scope: !17289)
!17294 = !DILocation(line: 967, column: 56, scope: !17289)
!17295 = !DILocation(line: 967, column: 10, scope: !17289)
!17296 = !DILocation(line: 967, column: 3, scope: !17289)
!17297 = !DILocation(line: 969, column: 52, scope: !17289)
!17298 = !DILocation(line: 969, column: 67, scope: !17289)
!17299 = !DILocation(line: 969, column: 10, scope: !17289)
!17300 = !DILocation(line: 969, column: 3, scope: !17289)
!17301 = !DILocation(line: 971, column: 3, scope: !17289)
!17302 = !DILocation(line: 973, column: 1, scope: !17264)
!17303 = distinct !DISubprogram(name: "mlxsw_sp_handle_feature", scope: !3, file: !3, line: 1038, type: !17304, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17304 = !DISubroutineType(types: !17305)
!17305 = !{!7, !451, !490, !490, !17306}
!17306 = !DIDerivedType(tag: DW_TAG_typedef, name: "mlxsw_sp_feature_handler", file: !3, line: 1036, baseType: !8288)
!17307 = !DILocalVariable(name: "dev", arg: 1, scope: !17303, file: !3, line: 1038, type: !451)
!17308 = !DILocation(line: 1038, column: 55, scope: !17303)
!17309 = !DILocalVariable(name: "wanted_features", arg: 2, scope: !17303, file: !3, line: 1039, type: !490)
!17310 = !DILocation(line: 1039, column: 26, scope: !17303)
!17311 = !DILocalVariable(name: "feature", arg: 3, scope: !17303, file: !3, line: 1040, type: !490)
!17312 = !DILocation(line: 1040, column: 26, scope: !17303)
!17313 = !DILocalVariable(name: "feature_handler", arg: 4, scope: !17303, file: !3, line: 1041, type: !17306)
!17314 = !DILocation(line: 1041, column: 33, scope: !17303)
!17315 = !DILocalVariable(name: "changes", scope: !17303, file: !3, line: 1043, type: !490)
!17316 = !DILocation(line: 1043, column: 20, scope: !17303)
!17317 = !DILocation(line: 1043, column: 30, scope: !17303)
!17318 = !DILocation(line: 1043, column: 48, scope: !17303)
!17319 = !DILocation(line: 1043, column: 53, scope: !17303)
!17320 = !DILocation(line: 1043, column: 46, scope: !17303)
!17321 = !DILocalVariable(name: "enable", scope: !17303, file: !3, line: 1044, type: !696)
!17322 = !DILocation(line: 1044, column: 7, scope: !17303)
!17323 = !DILocation(line: 1044, column: 19, scope: !17303)
!17324 = !DILocation(line: 1044, column: 37, scope: !17303)
!17325 = !DILocation(line: 1044, column: 35, scope: !17303)
!17326 = !DILocation(line: 1044, column: 17, scope: !17303)
!17327 = !DILocation(line: 1044, column: 16, scope: !17303)
!17328 = !DILocalVariable(name: "err", scope: !17303, file: !3, line: 1045, type: !7)
!17329 = !DILocation(line: 1045, column: 6, scope: !17303)
!17330 = !DILocation(line: 1047, column: 8, scope: !17331)
!17331 = distinct !DILexicalBlock(scope: !17303, file: !3, line: 1047, column: 6)
!17332 = !DILocation(line: 1047, column: 18, scope: !17331)
!17333 = !DILocation(line: 1047, column: 16, scope: !17331)
!17334 = !DILocation(line: 1047, column: 6, scope: !17303)
!17335 = !DILocation(line: 1048, column: 3, scope: !17331)
!17336 = !DILocation(line: 1050, column: 8, scope: !17303)
!17337 = !DILocation(line: 1050, column: 24, scope: !17303)
!17338 = !DILocation(line: 1050, column: 29, scope: !17303)
!17339 = !DILocation(line: 1050, column: 6, scope: !17303)
!17340 = !DILocation(line: 1051, column: 6, scope: !17341)
!17341 = distinct !DILexicalBlock(scope: !17303, file: !3, line: 1051, column: 6)
!17342 = !DILocation(line: 1051, column: 6, scope: !17303)
!17343 = !DILocation(line: 1052, column: 14, scope: !17344)
!17344 = distinct !DILexicalBlock(scope: !17341, file: !3, line: 1051, column: 11)
!17345 = !DILocation(line: 1053, column: 7, scope: !17344)
!17346 = !DILocation(line: 1053, column: 48, scope: !17344)
!17347 = !DILocation(line: 1052, column: 3, scope: !17344)
!17348 = !DILocation(line: 1054, column: 10, scope: !17344)
!17349 = !DILocation(line: 1054, column: 3, scope: !17344)
!17350 = !DILocation(line: 1057, column: 6, scope: !17351)
!17351 = distinct !DILexicalBlock(scope: !17303, file: !3, line: 1057, column: 6)
!17352 = !DILocation(line: 1057, column: 6, scope: !17303)
!17353 = !DILocation(line: 1058, column: 20, scope: !17351)
!17354 = !DILocation(line: 1058, column: 3, scope: !17351)
!17355 = !DILocation(line: 1058, column: 8, scope: !17351)
!17356 = !DILocation(line: 1058, column: 17, scope: !17351)
!17357 = !DILocation(line: 1060, column: 21, scope: !17351)
!17358 = !DILocation(line: 1060, column: 20, scope: !17351)
!17359 = !DILocation(line: 1060, column: 3, scope: !17351)
!17360 = !DILocation(line: 1060, column: 8, scope: !17351)
!17361 = !DILocation(line: 1060, column: 17, scope: !17351)
!17362 = !DILocation(line: 1062, column: 2, scope: !17303)
!17363 = !DILocation(line: 1063, column: 1, scope: !17303)
!17364 = distinct !DISubprogram(name: "mlxsw_sp_feature_hw_tc", scope: !3, file: !3, line: 998, type: !8289, scopeLine: 999, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17365 = !DILocalVariable(name: "dev", arg: 1, scope: !17364, file: !3, line: 998, type: !451)
!17366 = !DILocation(line: 998, column: 54, scope: !17364)
!17367 = !DILocalVariable(name: "enable", arg: 2, scope: !17364, file: !3, line: 998, type: !696)
!17368 = !DILocation(line: 998, column: 64, scope: !17364)
!17369 = !DILocalVariable(name: "mlxsw_sp_port", scope: !17364, file: !3, line: 1000, type: !10715)
!17370 = !DILocation(line: 1000, column: 24, scope: !17364)
!17371 = !DILocation(line: 1000, column: 52, scope: !17364)
!17372 = !DILocation(line: 1000, column: 40, scope: !17364)
!17373 = !DILocation(line: 1002, column: 7, scope: !17374)
!17374 = distinct !DILexicalBlock(scope: !17364, file: !3, line: 1002, column: 6)
!17375 = !DILocation(line: 1002, column: 6, scope: !17364)
!17376 = !DILocation(line: 1003, column: 38, scope: !17377)
!17377 = distinct !DILexicalBlock(scope: !17378, file: !3, line: 1003, column: 7)
!17378 = distinct !DILexicalBlock(scope: !17374, file: !3, line: 1002, column: 15)
!17379 = !DILocation(line: 1003, column: 53, scope: !17377)
!17380 = !DILocation(line: 1003, column: 7, scope: !17377)
!17381 = !DILocation(line: 1003, column: 69, scope: !17377)
!17382 = !DILocation(line: 1004, column: 38, scope: !17377)
!17383 = !DILocation(line: 1004, column: 53, scope: !17377)
!17384 = !DILocation(line: 1004, column: 7, scope: !17377)
!17385 = !DILocation(line: 1003, column: 7, scope: !17378)
!17386 = !DILocation(line: 1005, column: 15, scope: !17387)
!17387 = distinct !DILexicalBlock(scope: !17377, file: !3, line: 1004, column: 69)
!17388 = !DILocation(line: 1005, column: 4, scope: !17387)
!17389 = !DILocation(line: 1006, column: 4, scope: !17387)
!17390 = !DILocation(line: 1008, column: 35, scope: !17378)
!17391 = !DILocation(line: 1008, column: 50, scope: !17378)
!17392 = !DILocation(line: 1008, column: 3, scope: !17378)
!17393 = !DILocation(line: 1009, column: 35, scope: !17378)
!17394 = !DILocation(line: 1009, column: 50, scope: !17378)
!17395 = !DILocation(line: 1009, column: 3, scope: !17378)
!17396 = !DILocation(line: 1010, column: 2, scope: !17378)
!17397 = !DILocation(line: 1011, column: 35, scope: !17398)
!17398 = distinct !DILexicalBlock(scope: !17374, file: !3, line: 1010, column: 9)
!17399 = !DILocation(line: 1011, column: 50, scope: !17398)
!17400 = !DILocation(line: 1011, column: 3, scope: !17398)
!17401 = !DILocation(line: 1012, column: 35, scope: !17398)
!17402 = !DILocation(line: 1012, column: 50, scope: !17398)
!17403 = !DILocation(line: 1012, column: 3, scope: !17398)
!17404 = !DILocation(line: 1014, column: 2, scope: !17364)
!17405 = !DILocation(line: 1015, column: 1, scope: !17364)
!17406 = distinct !DISubprogram(name: "mlxsw_sp_feature_loopback", scope: !3, file: !3, line: 1017, type: !8289, scopeLine: 1018, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17407 = !DILocalVariable(name: "dev", arg: 1, scope: !17406, file: !3, line: 1017, type: !451)
!17408 = !DILocation(line: 1017, column: 57, scope: !17406)
!17409 = !DILocalVariable(name: "enable", arg: 2, scope: !17406, file: !3, line: 1017, type: !696)
!17410 = !DILocation(line: 1017, column: 67, scope: !17406)
!17411 = !DILocalVariable(name: "mlxsw_sp_port", scope: !17406, file: !3, line: 1019, type: !10715)
!17412 = !DILocation(line: 1019, column: 24, scope: !17406)
!17413 = !DILocation(line: 1019, column: 52, scope: !17406)
!17414 = !DILocation(line: 1019, column: 40, scope: !17406)
!17415 = !DILocalVariable(name: "pplr_pl", scope: !17406, file: !3, line: 1020, type: !6009)
!17416 = !DILocation(line: 1020, column: 7, scope: !17406)
!17417 = !DILocalVariable(name: "err", scope: !17406, file: !3, line: 1021, type: !7)
!17418 = !DILocation(line: 1021, column: 6, scope: !17406)
!17419 = !DILocation(line: 1023, column: 20, scope: !17420)
!17420 = distinct !DILexicalBlock(scope: !17406, file: !3, line: 1023, column: 6)
!17421 = !DILocation(line: 1023, column: 6, scope: !17420)
!17422 = !DILocation(line: 1023, column: 6, scope: !17406)
!17423 = !DILocation(line: 1024, column: 34, scope: !17420)
!17424 = !DILocation(line: 1024, column: 3, scope: !17420)
!17425 = !DILocation(line: 1026, column: 22, scope: !17406)
!17426 = !DILocation(line: 1026, column: 31, scope: !17406)
!17427 = !DILocation(line: 1026, column: 46, scope: !17406)
!17428 = !DILocation(line: 1026, column: 58, scope: !17406)
!17429 = !DILocation(line: 1026, column: 2, scope: !17406)
!17430 = !DILocation(line: 1027, column: 24, scope: !17406)
!17431 = !DILocation(line: 1027, column: 39, scope: !17406)
!17432 = !DILocation(line: 1027, column: 49, scope: !17406)
!17433 = !DILocation(line: 1028, column: 10, scope: !17406)
!17434 = !DILocation(line: 1027, column: 8, scope: !17406)
!17435 = !DILocation(line: 1027, column: 6, scope: !17406)
!17436 = !DILocation(line: 1030, column: 20, scope: !17437)
!17437 = distinct !DILexicalBlock(scope: !17406, file: !3, line: 1030, column: 6)
!17438 = !DILocation(line: 1030, column: 6, scope: !17437)
!17439 = !DILocation(line: 1030, column: 6, scope: !17406)
!17440 = !DILocation(line: 1031, column: 34, scope: !17437)
!17441 = !DILocation(line: 1031, column: 3, scope: !17437)
!17442 = !DILocation(line: 1033, column: 9, scope: !17406)
!17443 = !DILocation(line: 1033, column: 2, scope: !17406)
!17444 = distinct !DISubprogram(name: "mlxsw_sp_flow_block_rule_count", scope: !10118, file: !10118, line: 779, type: !17445, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17445 = !DISubroutineType(types: !17446)
!17446 = !{!14, !17447}
!17447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17448, size: 64)
!17448 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11407)
!17449 = !DILocalVariable(name: "block", arg: 1, scope: !17444, file: !10118, line: 779, type: !17447)
!17450 = !DILocation(line: 779, column: 66, scope: !17444)
!17451 = !DILocation(line: 781, column: 9, scope: !17444)
!17452 = !DILocation(line: 781, column: 17, scope: !17444)
!17453 = !DILocation(line: 781, column: 24, scope: !17444)
!17454 = !DILocation(line: 781, column: 2, scope: !17444)
!17455 = distinct !DISubprogram(name: "mlxsw_sp_flow_block_disable_inc", scope: !10118, file: !10118, line: 785, type: !17456, scopeLine: 786, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17456 = !DISubroutineType(types: !17457)
!17457 = !{null, !11406}
!17458 = !DILocalVariable(name: "block", arg: 1, scope: !17455, file: !10118, line: 785, type: !11406)
!17459 = !DILocation(line: 785, column: 61, scope: !17455)
!17460 = !DILocation(line: 787, column: 6, scope: !17461)
!17461 = distinct !DILexicalBlock(scope: !17455, file: !10118, line: 787, column: 6)
!17462 = !DILocation(line: 787, column: 6, scope: !17455)
!17463 = !DILocation(line: 788, column: 3, scope: !17461)
!17464 = !DILocation(line: 788, column: 10, scope: !17461)
!17465 = !DILocation(line: 788, column: 23, scope: !17461)
!17466 = !DILocation(line: 789, column: 1, scope: !17455)
!17467 = distinct !DISubprogram(name: "mlxsw_sp_flow_block_disable_dec", scope: !10118, file: !10118, line: 792, type: !17456, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17468 = !DILocalVariable(name: "block", arg: 1, scope: !17467, file: !10118, line: 792, type: !11406)
!17469 = !DILocation(line: 792, column: 61, scope: !17467)
!17470 = !DILocation(line: 794, column: 6, scope: !17471)
!17471 = distinct !DILexicalBlock(scope: !17467, file: !10118, line: 794, column: 6)
!17472 = !DILocation(line: 794, column: 6, scope: !17467)
!17473 = !DILocation(line: 795, column: 3, scope: !17471)
!17474 = !DILocation(line: 795, column: 10, scope: !17471)
!17475 = !DILocation(line: 795, column: 23, scope: !17471)
!17476 = !DILocation(line: 796, column: 1, scope: !17467)
!17477 = distinct !DISubprogram(name: "netif_running", scope: !6, file: !6, line: 3556, type: !14728, scopeLine: 3557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17478 = !DILocalVariable(name: "dev", arg: 1, scope: !17477, file: !6, line: 3556, type: !3023)
!17479 = !DILocation(line: 3556, column: 59, scope: !17477)
!17480 = !DILocation(line: 3558, column: 39, scope: !17477)
!17481 = !DILocation(line: 3558, column: 44, scope: !17477)
!17482 = !DILocation(line: 3558, column: 9, scope: !17477)
!17483 = !DILocation(line: 3558, column: 2, scope: !17477)
!17484 = distinct !DISubprogram(name: "mlxsw_reg_pplr_pack", scope: !10113, file: !10113, line: 5492, type: !13152, scopeLine: 5494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17485 = !DILocalVariable(name: "payload", arg: 1, scope: !17484, file: !10113, line: 5492, type: !733)
!17486 = !DILocation(line: 5492, column: 46, scope: !17484)
!17487 = !DILocalVariable(name: "local_port", arg: 2, scope: !17484, file: !10113, line: 5492, type: !1552)
!17488 = !DILocation(line: 5492, column: 58, scope: !17484)
!17489 = !DILocalVariable(name: "phy_local", arg: 3, scope: !17484, file: !10113, line: 5493, type: !696)
!17490 = !DILocation(line: 5493, column: 17, scope: !17484)
!17491 = !DILocation(line: 5495, column: 2, scope: !17484)
!17492 = !DILocation(line: 5496, column: 32, scope: !17484)
!17493 = !DILocation(line: 5496, column: 41, scope: !17484)
!17494 = !DILocation(line: 5496, column: 2, scope: !17484)
!17495 = !DILocation(line: 5497, column: 27, scope: !17484)
!17496 = !DILocation(line: 5498, column: 6, scope: !17484)
!17497 = !DILocation(line: 5497, column: 2, scope: !17484)
!17498 = !DILocation(line: 5500, column: 1, scope: !17484)
!17499 = distinct !DISubprogram(name: "test_bit", scope: !17500, file: !17500, line: 132, type: !17501, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17500 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!17501 = !DISubroutineType(types: !17502)
!17502 = !{!696, !669, !17503}
!17503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17504, size: 64)
!17504 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16238)
!17505 = !DILocalVariable(name: "nr", arg: 1, scope: !17506, file: !15172, line: 210, type: !669)
!17506 = distinct !DISubprogram(name: "variable_test_bit", scope: !15172, file: !15172, line: 210, type: !17501, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17507 = !DILocation(line: 210, column: 52, scope: !17506, inlinedAt: !17508)
!17508 = distinct !DILocation(line: 135, column: 9, scope: !17499)
!17509 = !DILocalVariable(name: "addr", arg: 2, scope: !17506, file: !15172, line: 210, type: !17503)
!17510 = !DILocation(line: 210, column: 86, scope: !17506, inlinedAt: !17508)
!17511 = !DILocalVariable(name: "oldbit", scope: !17506, file: !15172, line: 212, type: !696)
!17512 = !DILocation(line: 212, column: 7, scope: !17506, inlinedAt: !17508)
!17513 = !DILocalVariable(name: "nr", arg: 1, scope: !17514, file: !15172, line: 204, type: !669)
!17514 = distinct !DISubprogram(name: "constant_test_bit", scope: !15172, file: !15172, line: 204, type: !17501, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17515 = !DILocation(line: 204, column: 52, scope: !17514, inlinedAt: !17516)
!17516 = distinct !DILocation(line: 135, column: 9, scope: !17499)
!17517 = !DILocalVariable(name: "addr", arg: 2, scope: !17514, file: !15172, line: 204, type: !17503)
!17518 = !DILocation(line: 204, column: 86, scope: !17514, inlinedAt: !17516)
!17519 = !DILocation(line: 69, column: 73, scope: !16463, inlinedAt: !17520)
!17520 = distinct !DILocation(line: 134, column: 2, scope: !17499)
!17521 = !DILocation(line: 69, column: 83, scope: !16463, inlinedAt: !17520)
!17522 = !DILocalVariable(name: "nr", arg: 1, scope: !17499, file: !17500, line: 132, type: !669)
!17523 = !DILocation(line: 132, column: 34, scope: !17499)
!17524 = !DILocalVariable(name: "addr", arg: 2, scope: !17499, file: !17500, line: 132, type: !17503)
!17525 = !DILocation(line: 132, column: 68, scope: !17499)
!17526 = !DILocation(line: 134, column: 25, scope: !17499)
!17527 = !DILocation(line: 134, column: 32, scope: !17499)
!17528 = !DILocation(line: 134, column: 30, scope: !17499)
!17529 = !DILocation(line: 71, column: 19, scope: !16463, inlinedAt: !17520)
!17530 = !DILocation(line: 71, column: 22, scope: !16463, inlinedAt: !17520)
!17531 = !DILocation(line: 71, column: 2, scope: !16463, inlinedAt: !17520)
!17532 = !DILocation(line: 72, column: 2, scope: !16463, inlinedAt: !17520)
!17533 = !DILocation(line: 135, column: 9, scope: !17499)
!17534 = !DILocation(line: 206, column: 19, scope: !17514, inlinedAt: !17516)
!17535 = !DILocation(line: 206, column: 22, scope: !17514, inlinedAt: !17516)
!17536 = !DILocation(line: 206, column: 15, scope: !17514, inlinedAt: !17516)
!17537 = !DILocation(line: 207, column: 4, scope: !17514, inlinedAt: !17516)
!17538 = !DILocation(line: 207, column: 9, scope: !17514, inlinedAt: !17516)
!17539 = !DILocation(line: 207, column: 12, scope: !17514, inlinedAt: !17516)
!17540 = !DILocation(line: 206, column: 44, scope: !17514, inlinedAt: !17516)
!17541 = !DILocation(line: 207, column: 37, scope: !17514, inlinedAt: !17516)
!17542 = !DILocation(line: 217, column: 33, scope: !17506, inlinedAt: !17508)
!17543 = !DILocation(line: 217, column: 46, scope: !17506, inlinedAt: !17508)
!17544 = !DILocation(line: 214, column: 2, scope: !17506, inlinedAt: !17508)
!17545 = !{i32 -2147074681, i32 -2147074621}
!17546 = !DILocation(line: 219, column: 9, scope: !17506, inlinedAt: !17508)
!17547 = !DILocation(line: 135, column: 2, scope: !17499)
!17548 = distinct !DISubprogram(name: "mlxsw_reg_pplr_local_port_set", scope: !10113, file: !10113, line: 5479, type: !14426, scopeLine: 5479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17549 = !DILocalVariable(name: "buf", arg: 1, scope: !17548, file: !10113, line: 5479, type: !733)
!17550 = !DILocation(line: 5479, column: 1, scope: !17548)
!17551 = !DILocalVariable(name: "val", arg: 2, scope: !17548, file: !10113, line: 5479, type: !862)
!17552 = distinct !DISubprogram(name: "mlxsw_reg_pplr_lb_en_set", scope: !10113, file: !10113, line: 5490, type: !14426, scopeLine: 5490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17553 = !DILocalVariable(name: "buf", arg: 1, scope: !17552, file: !10113, line: 5490, type: !733)
!17554 = !DILocation(line: 5490, column: 1, scope: !17552)
!17555 = !DILocalVariable(name: "val", arg: 2, scope: !17552, file: !10113, line: 5490, type: !862)
!17556 = distinct !DISubprogram(name: "mlxsw_sp3_init", scope: !3, file: !3, line: 2786, type: !12051, scopeLine: 2789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17557 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !17556, file: !3, line: 2786, type: !10727)
!17558 = !DILocation(line: 2786, column: 46, scope: !17556)
!17559 = !DILocalVariable(name: "mlxsw_bus_info", arg: 2, scope: !17556, file: !3, line: 2787, type: !10731)
!17560 = !DILocation(line: 2787, column: 35, scope: !17556)
!17561 = !DILocalVariable(name: "extack", arg: 3, scope: !17556, file: !3, line: 2788, type: !2633)
!17562 = !DILocation(line: 2788, column: 30, scope: !17556)
!17563 = !DILocalVariable(name: "mlxsw_sp", scope: !17556, file: !3, line: 2790, type: !10721)
!17564 = !DILocation(line: 2790, column: 19, scope: !17556)
!17565 = !DILocation(line: 2790, column: 53, scope: !17556)
!17566 = !DILocation(line: 2790, column: 30, scope: !17556)
!17567 = !DILocation(line: 2792, column: 2, scope: !17556)
!17568 = !DILocation(line: 2792, column: 12, scope: !17556)
!17569 = !DILocation(line: 2792, column: 21, scope: !17556)
!17570 = !DILocation(line: 2793, column: 2, scope: !17556)
!17571 = !DILocation(line: 2793, column: 12, scope: !17556)
!17572 = !DILocation(line: 2793, column: 20, scope: !17556)
!17573 = !DILocation(line: 2794, column: 2, scope: !17556)
!17574 = !DILocation(line: 2794, column: 12, scope: !17556)
!17575 = !DILocation(line: 2794, column: 20, scope: !17556)
!17576 = !DILocation(line: 2795, column: 2, scope: !17556)
!17577 = !DILocation(line: 2795, column: 12, scope: !17556)
!17578 = !DILocation(line: 2795, column: 24, scope: !17556)
!17579 = !DILocation(line: 2796, column: 2, scope: !17556)
!17580 = !DILocation(line: 2796, column: 12, scope: !17556)
!17581 = !DILocation(line: 2796, column: 26, scope: !17556)
!17582 = !DILocation(line: 2797, column: 2, scope: !17556)
!17583 = !DILocation(line: 2797, column: 12, scope: !17556)
!17584 = !DILocation(line: 2797, column: 25, scope: !17556)
!17585 = !DILocation(line: 2798, column: 2, scope: !17556)
!17586 = !DILocation(line: 2798, column: 12, scope: !17556)
!17587 = !DILocation(line: 2798, column: 24, scope: !17556)
!17588 = !DILocation(line: 2799, column: 2, scope: !17556)
!17589 = !DILocation(line: 2799, column: 12, scope: !17556)
!17590 = !DILocation(line: 2799, column: 21, scope: !17556)
!17591 = !DILocation(line: 2800, column: 2, scope: !17556)
!17592 = !DILocation(line: 2800, column: 12, scope: !17556)
!17593 = !DILocation(line: 2800, column: 24, scope: !17556)
!17594 = !DILocation(line: 2801, column: 2, scope: !17556)
!17595 = !DILocation(line: 2801, column: 12, scope: !17556)
!17596 = !DILocation(line: 2801, column: 20, scope: !17556)
!17597 = !DILocation(line: 2802, column: 2, scope: !17556)
!17598 = !DILocation(line: 2802, column: 12, scope: !17556)
!17599 = !DILocation(line: 2802, column: 19, scope: !17556)
!17600 = !DILocation(line: 2803, column: 2, scope: !17556)
!17601 = !DILocation(line: 2803, column: 12, scope: !17556)
!17602 = !DILocation(line: 2803, column: 32, scope: !17556)
!17603 = !DILocation(line: 2804, column: 2, scope: !17556)
!17604 = !DILocation(line: 2804, column: 12, scope: !17556)
!17605 = !DILocation(line: 2804, column: 20, scope: !17556)
!17606 = !DILocation(line: 2805, column: 2, scope: !17556)
!17607 = !DILocation(line: 2805, column: 12, scope: !17556)
!17608 = !DILocation(line: 2805, column: 21, scope: !17556)
!17609 = !DILocation(line: 2806, column: 2, scope: !17556)
!17610 = !DILocation(line: 2806, column: 12, scope: !17556)
!17611 = !DILocation(line: 2806, column: 29, scope: !17556)
!17612 = !DILocation(line: 2807, column: 2, scope: !17556)
!17613 = !DILocation(line: 2807, column: 12, scope: !17556)
!17614 = !DILocation(line: 2807, column: 21, scope: !17556)
!17615 = !DILocation(line: 2808, column: 2, scope: !17556)
!17616 = !DILocation(line: 2808, column: 12, scope: !17556)
!17617 = !DILocation(line: 2808, column: 29, scope: !17556)
!17618 = !DILocation(line: 2810, column: 23, scope: !17556)
!17619 = !DILocation(line: 2810, column: 35, scope: !17556)
!17620 = !DILocation(line: 2810, column: 51, scope: !17556)
!17621 = !DILocation(line: 2810, column: 9, scope: !17556)
!17622 = !DILocation(line: 2810, column: 2, scope: !17556)
!17623 = distinct !DISubprogram(name: "mlxsw_sp_fini", scope: !3, file: !3, line: 2813, type: !12055, scopeLine: 2814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17624 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !17623, file: !3, line: 2813, type: !10727)
!17625 = !DILocation(line: 2813, column: 46, scope: !17623)
!17626 = !DILocalVariable(name: "mlxsw_sp", scope: !17623, file: !3, line: 2815, type: !10721)
!17627 = !DILocation(line: 2815, column: 19, scope: !17623)
!17628 = !DILocation(line: 2815, column: 53, scope: !17623)
!17629 = !DILocation(line: 2815, column: 30, scope: !17623)
!17630 = !DILocation(line: 2817, column: 24, scope: !17623)
!17631 = !DILocation(line: 2817, column: 2, scope: !17623)
!17632 = !DILocation(line: 2818, column: 33, scope: !17623)
!17633 = !DILocation(line: 2818, column: 2, scope: !17623)
!17634 = !DILocation(line: 2819, column: 22, scope: !17623)
!17635 = !DILocation(line: 2819, column: 2, scope: !17623)
!17636 = !DILocation(line: 2820, column: 49, scope: !17623)
!17637 = !DILocation(line: 2820, column: 36, scope: !17623)
!17638 = !DILocation(line: 2821, column: 9, scope: !17623)
!17639 = !DILocation(line: 2821, column: 19, scope: !17623)
!17640 = !DILocation(line: 2820, column: 2, scope: !17623)
!17641 = !DILocation(line: 2822, column: 6, scope: !17642)
!17642 = distinct !DILexicalBlock(scope: !17623, file: !3, line: 2822, column: 6)
!17643 = !DILocation(line: 2822, column: 16, scope: !17642)
!17644 = !DILocation(line: 2822, column: 6, scope: !17623)
!17645 = !DILocation(line: 2823, column: 3, scope: !17646)
!17646 = distinct !DILexicalBlock(scope: !17642, file: !3, line: 2822, column: 23)
!17647 = !DILocation(line: 2823, column: 13, scope: !17646)
!17648 = !DILocation(line: 2823, column: 22, scope: !17646)
!17649 = !DILocation(line: 2823, column: 27, scope: !17646)
!17650 = !DILocation(line: 2823, column: 37, scope: !17646)
!17651 = !DILocation(line: 2824, column: 3, scope: !17646)
!17652 = !DILocation(line: 2824, column: 13, scope: !17646)
!17653 = !DILocation(line: 2824, column: 22, scope: !17646)
!17654 = !DILocation(line: 2824, column: 33, scope: !17646)
!17655 = !DILocation(line: 2824, column: 43, scope: !17646)
!17656 = !DILocation(line: 2825, column: 2, scope: !17646)
!17657 = !DILocation(line: 2826, column: 23, scope: !17623)
!17658 = !DILocation(line: 2826, column: 2, scope: !17623)
!17659 = !DILocation(line: 2827, column: 20, scope: !17623)
!17660 = !DILocation(line: 2827, column: 2, scope: !17623)
!17661 = !DILocation(line: 2828, column: 20, scope: !17623)
!17662 = !DILocation(line: 2828, column: 2, scope: !17623)
!17663 = !DILocation(line: 2829, column: 20, scope: !17623)
!17664 = !DILocation(line: 2829, column: 2, scope: !17623)
!17665 = !DILocation(line: 2830, column: 29, scope: !17623)
!17666 = !DILocation(line: 2830, column: 2, scope: !17623)
!17667 = !DILocation(line: 2831, column: 26, scope: !17623)
!17668 = !DILocation(line: 2831, column: 2, scope: !17623)
!17669 = !DILocation(line: 2832, column: 21, scope: !17623)
!17670 = !DILocation(line: 2832, column: 2, scope: !17623)
!17671 = !DILocation(line: 2833, column: 20, scope: !17623)
!17672 = !DILocation(line: 2833, column: 2, scope: !17623)
!17673 = !DILocation(line: 2834, column: 24, scope: !17623)
!17674 = !DILocation(line: 2834, column: 2, scope: !17623)
!17675 = !DILocation(line: 2835, column: 30, scope: !17623)
!17676 = !DILocation(line: 2835, column: 2, scope: !17623)
!17677 = !DILocation(line: 2836, column: 22, scope: !17623)
!17678 = !DILocation(line: 2836, column: 2, scope: !17623)
!17679 = !DILocation(line: 2837, column: 25, scope: !17623)
!17680 = !DILocation(line: 2837, column: 2, scope: !17623)
!17681 = !DILocation(line: 2838, column: 21, scope: !17623)
!17682 = !DILocation(line: 2838, column: 2, scope: !17623)
!17683 = !DILocation(line: 2839, column: 21, scope: !17623)
!17684 = !DILocation(line: 2839, column: 2, scope: !17623)
!17685 = !DILocation(line: 2840, column: 1, scope: !17623)
!17686 = distinct !DISubprogram(name: "mlxsw_sp_basic_trap_groups_set", scope: !3, file: !3, line: 2456, type: !12059, scopeLine: 2457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!17687 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !17686, file: !3, line: 2456, type: !10727)
!17688 = !DILocation(line: 2456, column: 62, scope: !17686)
!17689 = !DILocalVariable(name: "htgt_pl", scope: !17686, file: !3, line: 2458, type: !4356)
!17690 = !DILocation(line: 2458, column: 7, scope: !17686)
!17691 = !DILocalVariable(name: "err", scope: !17686, file: !3, line: 2459, type: !7)
!17692 = !DILocation(line: 2459, column: 6, scope: !17686)
!17693 = !DILocation(line: 2461, column: 22, scope: !17686)
!17694 = !DILocation(line: 2461, column: 2, scope: !17686)
!17695 = !DILocation(line: 2465, column: 25, scope: !17686)
!17696 = !DILocation(line: 2465, column: 54, scope: !17686)
!17697 = !DILocation(line: 2465, column: 9, scope: !17686)
!17698 = !DILocation(line: 2465, column: 6, scope: !17686)
!17699 = !DILocation(line: 2466, column: 6, scope: !17700)
!17700 = distinct !DILexicalBlock(scope: !17686, file: !3, line: 2466, column: 6)
!17701 = !DILocation(line: 2466, column: 6, scope: !17686)
!17702 = !DILocation(line: 2467, column: 10, scope: !17700)
!17703 = !DILocation(line: 2467, column: 3, scope: !17700)
!17704 = !DILocation(line: 2469, column: 22, scope: !17686)
!17705 = !DILocation(line: 2469, column: 2, scope: !17686)
!17706 = !DILocation(line: 2473, column: 24, scope: !17686)
!17707 = !DILocation(line: 2473, column: 53, scope: !17686)
!17708 = !DILocation(line: 2473, column: 8, scope: !17686)
!17709 = !DILocation(line: 2473, column: 6, scope: !17686)
!17710 = !DILocation(line: 2474, column: 6, scope: !17711)
!17711 = distinct !DILexicalBlock(scope: !17686, file: !3, line: 2474, column: 6)
!17712 = !DILocation(line: 2474, column: 6, scope: !17686)
!17713 = !DILocation(line: 2475, column: 10, scope: !17711)
!17714 = !DILocation(line: 2475, column: 3, scope: !17711)
!17715 = !DILocation(line: 2477, column: 22, scope: !17686)
!17716 = !DILocation(line: 2477, column: 2, scope: !17686)
!17717 = !DILocation(line: 2481, column: 24, scope: !17686)
!17718 = !DILocation(line: 2481, column: 53, scope: !17686)
!17719 = !DILocation(line: 2481, column: 8, scope: !17686)
!17720 = !DILocation(line: 2481, column: 6, scope: !17686)
!17721 = !DILocation(line: 2482, column: 6, scope: !17722)
!17722 = distinct !DILexicalBlock(scope: !17686, file: !3, line: 2482, column: 6)
!17723 = !DILocation(line: 2482, column: 6, scope: !17686)
!17724 = !DILocation(line: 2483, column: 10, scope: !17722)
!17725 = !DILocation(line: 2483, column: 3, scope: !17722)
!17726 = !DILocation(line: 2485, column: 22, scope: !17686)
!17727 = !DILocation(line: 2485, column: 2, scope: !17686)
!17728 = !DILocation(line: 2489, column: 25, scope: !17686)
!17729 = !DILocation(line: 2489, column: 54, scope: !17686)
!17730 = !DILocation(line: 2489, column: 9, scope: !17686)
!17731 = !DILocation(line: 2489, column: 2, scope: !17686)
!17732 = !DILocation(line: 2490, column: 1, scope: !17686)
!17733 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !12477, file: !3, line: 1903, type: !10727)
!17734 = !DILocation(line: 1903, column: 51, scope: !12477)
!17735 = !DILocalVariable(name: "local_port", arg: 2, scope: !12477, file: !3, line: 1903, type: !1552)
!17736 = !DILocation(line: 1903, column: 66, scope: !12477)
!17737 = !DILocalVariable(name: "count", arg: 3, scope: !12477, file: !3, line: 1904, type: !14)
!17738 = !DILocation(line: 1904, column: 24, scope: !12477)
!17739 = !DILocalVariable(name: "extack", arg: 4, scope: !12477, file: !3, line: 1905, type: !2633)
!17740 = !DILocation(line: 1905, column: 35, scope: !12477)
!17741 = !DILocalVariable(name: "mlxsw_sp", scope: !12477, file: !3, line: 1907, type: !10721)
!17742 = !DILocation(line: 1907, column: 19, scope: !12477)
!17743 = !DILocation(line: 1907, column: 53, scope: !12477)
!17744 = !DILocation(line: 1907, column: 30, scope: !12477)
!17745 = !DILocalVariable(name: "port_mapping", scope: !12477, file: !3, line: 1908, type: !10763)
!17746 = !DILocation(line: 1908, column: 31, scope: !12477)
!17747 = !DILocalVariable(name: "mlxsw_sp_port", scope: !12477, file: !3, line: 1909, type: !10715)
!17748 = !DILocation(line: 1909, column: 24, scope: !12477)
!17749 = !DILocalVariable(name: "max_width", scope: !12477, file: !3, line: 1910, type: !7)
!17750 = !DILocation(line: 1910, column: 6, scope: !12477)
!17751 = !DILocalVariable(name: "base_port", scope: !12477, file: !3, line: 1911, type: !1552)
!17752 = !DILocation(line: 1911, column: 5, scope: !12477)
!17753 = !DILocalVariable(name: "offset", scope: !12477, file: !3, line: 1912, type: !7)
!17754 = !DILocation(line: 1912, column: 6, scope: !12477)
!17755 = !DILocalVariable(name: "i", scope: !12477, file: !3, line: 1913, type: !7)
!17756 = !DILocation(line: 1913, column: 6, scope: !12477)
!17757 = !DILocalVariable(name: "err", scope: !12477, file: !3, line: 1914, type: !7)
!17758 = !DILocation(line: 1914, column: 6, scope: !12477)
!17759 = !DILocation(line: 1916, column: 50, scope: !12477)
!17760 = !DILocation(line: 1916, column: 60, scope: !12477)
!17761 = !DILocation(line: 1916, column: 18, scope: !12477)
!17762 = !DILocation(line: 1916, column: 16, scope: !12477)
!17763 = !DILocation(line: 1917, column: 7, scope: !17764)
!17764 = distinct !DILexicalBlock(scope: !12477, file: !3, line: 1917, column: 6)
!17765 = !DILocation(line: 1917, column: 6, scope: !12477)
!17766 = !DILocation(line: 1918, column: 3, scope: !17767)
!17767 = distinct !DILexicalBlock(scope: !17764, file: !3, line: 1917, column: 22)
!17768 = !DILocation(line: 1920, column: 3, scope: !17767)
!17769 = !DILocalVariable(name: "__extack", scope: !17770, file: !3, line: 1920, type: !2633)
!17770 = distinct !DILexicalBlock(scope: !17767, file: !3, line: 1920, column: 3)
!17771 = !DILocation(line: 1920, column: 3, scope: !17770)
!17772 = !DILocation(line: 1920, column: 3, scope: !17773)
!17773 = distinct !DILexicalBlock(scope: !17770, file: !3, line: 1920, column: 3)
!17774 = !DILocation(line: 1921, column: 3, scope: !17767)
!17775 = !DILocation(line: 1924, column: 42, scope: !12477)
!17776 = !DILocation(line: 1925, column: 7, scope: !12477)
!17777 = !DILocation(line: 1925, column: 22, scope: !12477)
!17778 = !DILocation(line: 1925, column: 30, scope: !12477)
!17779 = !DILocation(line: 1924, column: 14, scope: !12477)
!17780 = !DILocation(line: 1924, column: 12, scope: !12477)
!17781 = !DILocation(line: 1926, column: 6, scope: !17782)
!17782 = distinct !DILexicalBlock(scope: !12477, file: !3, line: 1926, column: 6)
!17783 = !DILocation(line: 1926, column: 16, scope: !17782)
!17784 = !DILocation(line: 1926, column: 6, scope: !12477)
!17785 = !DILocation(line: 1927, column: 14, scope: !17786)
!17786 = distinct !DILexicalBlock(scope: !17782, file: !3, line: 1926, column: 21)
!17787 = !DILocation(line: 1927, column: 29, scope: !17786)
!17788 = !DILocation(line: 1927, column: 3, scope: !17786)
!17789 = !DILocation(line: 1928, column: 3, scope: !17786)
!17790 = !DILocalVariable(name: "__extack", scope: !17791, file: !3, line: 1928, type: !2633)
!17791 = distinct !DILexicalBlock(scope: !17786, file: !3, line: 1928, column: 3)
!17792 = !DILocation(line: 1928, column: 3, scope: !17791)
!17793 = !DILocation(line: 1928, column: 3, scope: !17794)
!17794 = distinct !DILexicalBlock(scope: !17791, file: !3, line: 1928, column: 3)
!17795 = !DILocation(line: 1929, column: 10, scope: !17786)
!17796 = !DILocation(line: 1929, column: 3, scope: !17786)
!17797 = !DILocation(line: 1933, column: 6, scope: !17798)
!17798 = distinct !DILexicalBlock(scope: !12477, file: !3, line: 1933, column: 6)
!17799 = !DILocation(line: 1933, column: 21, scope: !17798)
!17800 = !DILocation(line: 1933, column: 29, scope: !17798)
!17801 = !DILocation(line: 1933, column: 38, scope: !17798)
!17802 = !DILocation(line: 1933, column: 35, scope: !17798)
!17803 = !DILocation(line: 1933, column: 6, scope: !12477)
!17804 = !DILocation(line: 1934, column: 14, scope: !17805)
!17805 = distinct !DILexicalBlock(scope: !17798, file: !3, line: 1933, column: 49)
!17806 = !DILocation(line: 1934, column: 29, scope: !17805)
!17807 = !DILocation(line: 1934, column: 3, scope: !17805)
!17808 = !DILocation(line: 1935, column: 3, scope: !17805)
!17809 = !DILocalVariable(name: "__extack", scope: !17810, file: !3, line: 1935, type: !2633)
!17810 = distinct !DILexicalBlock(scope: !17805, file: !3, line: 1935, column: 3)
!17811 = !DILocation(line: 1935, column: 3, scope: !17810)
!17812 = !DILocation(line: 1935, column: 3, scope: !17813)
!17813 = distinct !DILexicalBlock(scope: !17810, file: !3, line: 1935, column: 3)
!17814 = !DILocation(line: 1936, column: 3, scope: !17805)
!17815 = !DILocation(line: 1939, column: 39, scope: !12477)
!17816 = !DILocation(line: 1939, column: 51, scope: !12477)
!17817 = !DILocation(line: 1939, column: 58, scope: !12477)
!17818 = !DILocation(line: 1939, column: 11, scope: !12477)
!17819 = !DILocation(line: 1939, column: 9, scope: !12477)
!17820 = !DILocation(line: 1940, column: 6, scope: !17821)
!17821 = distinct !DILexicalBlock(scope: !12477, file: !3, line: 1940, column: 6)
!17822 = !DILocation(line: 1940, column: 13, scope: !17821)
!17823 = !DILocation(line: 1940, column: 6, scope: !12477)
!17824 = !DILocation(line: 1941, column: 14, scope: !17825)
!17825 = distinct !DILexicalBlock(scope: !17821, file: !3, line: 1940, column: 18)
!17826 = !DILocation(line: 1941, column: 29, scope: !17825)
!17827 = !DILocation(line: 1941, column: 3, scope: !17825)
!17828 = !DILocation(line: 1942, column: 3, scope: !17825)
!17829 = !DILocalVariable(name: "__extack", scope: !17830, file: !3, line: 1942, type: !2633)
!17830 = distinct !DILexicalBlock(scope: !17825, file: !3, line: 1942, column: 3)
!17831 = !DILocation(line: 1942, column: 3, scope: !17830)
!17832 = !DILocation(line: 1942, column: 3, scope: !17833)
!17833 = distinct !DILexicalBlock(scope: !17830, file: !3, line: 1942, column: 3)
!17834 = !DILocation(line: 1943, column: 3, scope: !17825)
!17835 = !DILocation(line: 1949, column: 14, scope: !12477)
!17836 = !DILocation(line: 1949, column: 23, scope: !12477)
!17837 = !DILocation(line: 1949, column: 20, scope: !12477)
!17838 = !DILocation(line: 1950, column: 38, scope: !12477)
!17839 = !DILocation(line: 1950, column: 50, scope: !12477)
!17840 = !DILocation(line: 1950, column: 7, scope: !12477)
!17841 = !DILocation(line: 1951, column: 7, scope: !12477)
!17842 = !DILocation(line: 1949, column: 12, scope: !12477)
!17843 = !DILocation(line: 1953, column: 9, scope: !17844)
!17844 = distinct !DILexicalBlock(scope: !12477, file: !3, line: 1953, column: 2)
!17845 = !DILocation(line: 1953, column: 7, scope: !17844)
!17846 = !DILocation(line: 1953, column: 14, scope: !17847)
!17847 = distinct !DILexicalBlock(scope: !17844, file: !3, line: 1953, column: 2)
!17848 = !DILocation(line: 1953, column: 18, scope: !17847)
!17849 = !DILocation(line: 1953, column: 26, scope: !17847)
!17850 = !DILocation(line: 1953, column: 24, scope: !17847)
!17851 = !DILocation(line: 1953, column: 16, scope: !17847)
!17852 = !DILocation(line: 1953, column: 2, scope: !17844)
!17853 = !DILocation(line: 1957, column: 7, scope: !17854)
!17854 = distinct !DILexicalBlock(scope: !17855, file: !3, line: 1957, column: 7)
!17855 = distinct !DILexicalBlock(scope: !17847, file: !3, line: 1953, column: 39)
!17856 = !DILocation(line: 1957, column: 9, scope: !17854)
!17857 = !DILocation(line: 1957, column: 14, scope: !17854)
!17858 = !DILocation(line: 1957, column: 18, scope: !17854)
!17859 = !DILocation(line: 1957, column: 27, scope: !17854)
!17860 = !DILocation(line: 1957, column: 24, scope: !17854)
!17861 = !DILocation(line: 1957, column: 37, scope: !17854)
!17862 = !DILocation(line: 1957, column: 40, scope: !17854)
!17863 = !DILocation(line: 1957, column: 45, scope: !17854)
!17864 = !DILocation(line: 1957, column: 51, scope: !17854)
!17865 = !DILocation(line: 1957, column: 42, scope: !17854)
!17866 = !DILocation(line: 1957, column: 7, scope: !17855)
!17867 = !DILocation(line: 1958, column: 4, scope: !17854)
!17868 = !DILocation(line: 1960, column: 29, scope: !17869)
!17869 = distinct !DILexicalBlock(scope: !17855, file: !3, line: 1960, column: 7)
!17870 = !DILocation(line: 1960, column: 39, scope: !17869)
!17871 = !DILocation(line: 1960, column: 51, scope: !17869)
!17872 = !DILocation(line: 1960, column: 49, scope: !17869)
!17873 = !DILocation(line: 1960, column: 7, scope: !17869)
!17874 = !DILocation(line: 1960, column: 7, scope: !17855)
!17875 = !DILocation(line: 1961, column: 15, scope: !17876)
!17876 = distinct !DILexicalBlock(scope: !17869, file: !3, line: 1960, column: 55)
!17877 = !DILocation(line: 1961, column: 30, scope: !17876)
!17878 = !DILocation(line: 1961, column: 4, scope: !17876)
!17879 = !DILocation(line: 1962, column: 4, scope: !17876)
!17880 = !DILocalVariable(name: "__extack", scope: !17881, file: !3, line: 1962, type: !2633)
!17881 = distinct !DILexicalBlock(scope: !17876, file: !3, line: 1962, column: 4)
!17882 = !DILocation(line: 1962, column: 4, scope: !17881)
!17883 = !DILocation(line: 1962, column: 4, scope: !17884)
!17884 = distinct !DILexicalBlock(scope: !17881, file: !3, line: 1962, column: 4)
!17885 = !DILocation(line: 1963, column: 4, scope: !17876)
!17886 = !DILocation(line: 1965, column: 2, scope: !17855)
!17887 = !DILocation(line: 1953, column: 35, scope: !17847)
!17888 = !DILocation(line: 1953, column: 2, scope: !17847)
!17889 = distinct !{!17889, !17852, !17890}
!17890 = !DILocation(line: 1965, column: 2, scope: !17844)
!17891 = !DILocation(line: 1967, column: 17, scope: !12477)
!17892 = !DILocation(line: 1967, column: 32, scope: !12477)
!17893 = !DILocation(line: 1969, column: 9, scope: !17894)
!17894 = distinct !DILexicalBlock(scope: !12477, file: !3, line: 1969, column: 2)
!17895 = !DILocation(line: 1969, column: 7, scope: !17894)
!17896 = !DILocation(line: 1969, column: 14, scope: !17897)
!17897 = distinct !DILexicalBlock(scope: !17894, file: !3, line: 1969, column: 2)
!17898 = !DILocation(line: 1969, column: 18, scope: !17897)
!17899 = !DILocation(line: 1969, column: 16, scope: !17897)
!17900 = !DILocation(line: 1969, column: 2, scope: !17894)
!17901 = !DILocation(line: 1970, column: 29, scope: !17902)
!17902 = distinct !DILexicalBlock(scope: !17897, file: !3, line: 1970, column: 7)
!17903 = !DILocation(line: 1970, column: 39, scope: !17902)
!17904 = !DILocation(line: 1970, column: 51, scope: !17902)
!17905 = !DILocation(line: 1970, column: 55, scope: !17902)
!17906 = !DILocation(line: 1970, column: 53, scope: !17902)
!17907 = !DILocation(line: 1970, column: 49, scope: !17902)
!17908 = !DILocation(line: 1970, column: 7, scope: !17902)
!17909 = !DILocation(line: 1970, column: 7, scope: !17897)
!17910 = !DILocation(line: 1971, column: 25, scope: !17902)
!17911 = !DILocation(line: 1971, column: 35, scope: !17902)
!17912 = !DILocation(line: 1971, column: 47, scope: !17902)
!17913 = !DILocation(line: 1971, column: 51, scope: !17902)
!17914 = !DILocation(line: 1971, column: 49, scope: !17902)
!17915 = !DILocation(line: 1971, column: 45, scope: !17902)
!17916 = !DILocation(line: 1971, column: 4, scope: !17902)
!17917 = !DILocation(line: 1970, column: 61, scope: !17902)
!17918 = !DILocation(line: 1969, column: 26, scope: !17897)
!17919 = !DILocation(line: 1969, column: 2, scope: !17897)
!17920 = distinct !{!17920, !17900, !17921}
!17921 = !DILocation(line: 1971, column: 57, scope: !17894)
!17922 = !DILocation(line: 1973, column: 35, scope: !12477)
!17923 = !DILocation(line: 1973, column: 45, scope: !12477)
!17924 = !DILocation(line: 1974, column: 7, scope: !12477)
!17925 = !DILocation(line: 1974, column: 14, scope: !12477)
!17926 = !DILocation(line: 1973, column: 8, scope: !12477)
!17927 = !DILocation(line: 1973, column: 6, scope: !12477)
!17928 = !DILocation(line: 1975, column: 6, scope: !17929)
!17929 = distinct !DILexicalBlock(scope: !12477, file: !3, line: 1975, column: 6)
!17930 = !DILocation(line: 1975, column: 6, scope: !12477)
!17931 = !DILocation(line: 1976, column: 3, scope: !17932)
!17932 = distinct !DILexicalBlock(scope: !17929, file: !3, line: 1975, column: 11)
!17933 = !DILocation(line: 1977, column: 3, scope: !17932)
!17934 = !DILocation(line: 1980, column: 2, scope: !12477)
!17935 = !DILabel(scope: !12477, name: "err_port_split_create", file: !3, line: 1982)
!17936 = !DILocation(line: 1982, column: 1, scope: !12477)
!17937 = !DILocation(line: 1983, column: 31, scope: !12477)
!17938 = !DILocation(line: 1983, column: 41, scope: !12477)
!17939 = !DILocation(line: 1983, column: 52, scope: !12477)
!17940 = !DILocation(line: 1983, column: 59, scope: !12477)
!17941 = !DILocation(line: 1983, column: 2, scope: !12477)
!17942 = !DILocation(line: 1984, column: 9, scope: !12477)
!17943 = !DILocation(line: 1984, column: 2, scope: !12477)
!17944 = !DILocation(line: 1985, column: 1, scope: !12477)
!17945 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !12494, file: !3, line: 1987, type: !10727)
!17946 = !DILocation(line: 1987, column: 53, scope: !12494)
!17947 = !DILocalVariable(name: "local_port", arg: 2, scope: !12494, file: !3, line: 1987, type: !1552)
!17948 = !DILocation(line: 1987, column: 68, scope: !12494)
!17949 = !DILocalVariable(name: "extack", arg: 3, scope: !12494, file: !3, line: 1988, type: !2633)
!17950 = !DILocation(line: 1988, column: 30, scope: !12494)
!17951 = !DILocalVariable(name: "mlxsw_sp", scope: !12494, file: !3, line: 1990, type: !10721)
!17952 = !DILocation(line: 1990, column: 19, scope: !12494)
!17953 = !DILocation(line: 1990, column: 53, scope: !12494)
!17954 = !DILocation(line: 1990, column: 30, scope: !12494)
!17955 = !DILocalVariable(name: "mlxsw_sp_port", scope: !12494, file: !3, line: 1991, type: !10715)
!17956 = !DILocation(line: 1991, column: 24, scope: !12494)
!17957 = !DILocalVariable(name: "count", scope: !12494, file: !3, line: 1992, type: !14)
!17958 = !DILocation(line: 1992, column: 15, scope: !12494)
!17959 = !DILocalVariable(name: "max_width", scope: !12494, file: !3, line: 1993, type: !7)
!17960 = !DILocation(line: 1993, column: 6, scope: !12494)
!17961 = !DILocalVariable(name: "base_port", scope: !12494, file: !3, line: 1994, type: !1552)
!17962 = !DILocation(line: 1994, column: 5, scope: !12494)
!17963 = !DILocalVariable(name: "offset", scope: !12494, file: !3, line: 1995, type: !7)
!17964 = !DILocation(line: 1995, column: 6, scope: !12494)
!17965 = !DILocalVariable(name: "i", scope: !12494, file: !3, line: 1996, type: !7)
!17966 = !DILocation(line: 1996, column: 6, scope: !12494)
!17967 = !DILocation(line: 1998, column: 50, scope: !12494)
!17968 = !DILocation(line: 1998, column: 60, scope: !12494)
!17969 = !DILocation(line: 1998, column: 18, scope: !12494)
!17970 = !DILocation(line: 1998, column: 16, scope: !12494)
!17971 = !DILocation(line: 1999, column: 7, scope: !17972)
!17972 = distinct !DILexicalBlock(scope: !12494, file: !3, line: 1999, column: 6)
!17973 = !DILocation(line: 1999, column: 6, scope: !12494)
!17974 = !DILocation(line: 2000, column: 3, scope: !17975)
!17975 = distinct !DILexicalBlock(scope: !17972, file: !3, line: 1999, column: 22)
!17976 = !DILocation(line: 2002, column: 3, scope: !17975)
!17977 = !DILocalVariable(name: "__extack", scope: !17978, file: !3, line: 2002, type: !2633)
!17978 = distinct !DILexicalBlock(scope: !17975, file: !3, line: 2002, column: 3)
!17979 = !DILocation(line: 2002, column: 3, scope: !17978)
!17980 = !DILocation(line: 2002, column: 3, scope: !17981)
!17981 = distinct !DILexicalBlock(scope: !17978, file: !3, line: 2002, column: 3)
!17982 = !DILocation(line: 2003, column: 3, scope: !17975)
!17983 = !DILocation(line: 2006, column: 7, scope: !17984)
!17984 = distinct !DILexicalBlock(scope: !12494, file: !3, line: 2006, column: 6)
!17985 = !DILocation(line: 2006, column: 22, scope: !17984)
!17986 = !DILocation(line: 2006, column: 6, scope: !12494)
!17987 = !DILocation(line: 2007, column: 14, scope: !17988)
!17988 = distinct !DILexicalBlock(scope: !17984, file: !3, line: 2006, column: 29)
!17989 = !DILocation(line: 2007, column: 29, scope: !17988)
!17990 = !DILocation(line: 2007, column: 3, scope: !17988)
!17991 = !DILocation(line: 2008, column: 3, scope: !17988)
!17992 = !DILocalVariable(name: "__extack", scope: !17993, file: !3, line: 2008, type: !2633)
!17993 = distinct !DILexicalBlock(scope: !17988, file: !3, line: 2008, column: 3)
!17994 = !DILocation(line: 2008, column: 3, scope: !17993)
!17995 = !DILocation(line: 2008, column: 3, scope: !17996)
!17996 = distinct !DILexicalBlock(scope: !17993, file: !3, line: 2008, column: 3)
!17997 = !DILocation(line: 2009, column: 3, scope: !17988)
!17998 = !DILocation(line: 2012, column: 42, scope: !12494)
!17999 = !DILocation(line: 2013, column: 7, scope: !12494)
!18000 = !DILocation(line: 2013, column: 22, scope: !12494)
!18001 = !DILocation(line: 2013, column: 30, scope: !12494)
!18002 = !DILocation(line: 2012, column: 14, scope: !12494)
!18003 = !DILocation(line: 2012, column: 12, scope: !12494)
!18004 = !DILocation(line: 2014, column: 6, scope: !18005)
!18005 = distinct !DILexicalBlock(scope: !12494, file: !3, line: 2014, column: 6)
!18006 = !DILocation(line: 2014, column: 16, scope: !18005)
!18007 = !DILocation(line: 2014, column: 6, scope: !12494)
!18008 = !DILocation(line: 2015, column: 14, scope: !18009)
!18009 = distinct !DILexicalBlock(scope: !18005, file: !3, line: 2014, column: 21)
!18010 = !DILocation(line: 2015, column: 29, scope: !18009)
!18011 = !DILocation(line: 2015, column: 3, scope: !18009)
!18012 = !DILocation(line: 2016, column: 3, scope: !18009)
!18013 = !DILocalVariable(name: "__extack", scope: !18014, file: !3, line: 2016, type: !2633)
!18014 = distinct !DILexicalBlock(scope: !18009, file: !3, line: 2016, column: 3)
!18015 = !DILocation(line: 2016, column: 3, scope: !18014)
!18016 = !DILocation(line: 2016, column: 3, scope: !18017)
!18017 = distinct !DILexicalBlock(scope: !18014, file: !3, line: 2016, column: 3)
!18018 = !DILocation(line: 2017, column: 10, scope: !18009)
!18019 = !DILocation(line: 2017, column: 3, scope: !18009)
!18020 = !DILocation(line: 2020, column: 10, scope: !12494)
!18021 = !DILocation(line: 2020, column: 22, scope: !12494)
!18022 = !DILocation(line: 2020, column: 37, scope: !12494)
!18023 = !DILocation(line: 2020, column: 45, scope: !12494)
!18024 = !DILocation(line: 2020, column: 20, scope: !12494)
!18025 = !DILocation(line: 2020, column: 8, scope: !12494)
!18026 = !DILocation(line: 2022, column: 39, scope: !12494)
!18027 = !DILocation(line: 2022, column: 51, scope: !12494)
!18028 = !DILocation(line: 2022, column: 58, scope: !12494)
!18029 = !DILocation(line: 2022, column: 11, scope: !12494)
!18030 = !DILocation(line: 2022, column: 9, scope: !12494)
!18031 = !DILocalVariable(name: "__ret_warn_on", scope: !18032, file: !3, line: 2023, type: !7)
!18032 = distinct !DILexicalBlock(scope: !18033, file: !3, line: 2023, column: 6)
!18033 = distinct !DILexicalBlock(scope: !12494, file: !3, line: 2023, column: 6)
!18034 = !DILocation(line: 2023, column: 6, scope: !18032)
!18035 = !DILocation(line: 2023, column: 6, scope: !18036)
!18036 = distinct !DILexicalBlock(scope: !18032, file: !3, line: 2023, column: 6)
!18037 = !DILocation(line: 2023, column: 6, scope: !18038)
!18038 = distinct !DILexicalBlock(scope: !18036, file: !3, line: 2023, column: 6)
!18039 = !DILocation(line: 2023, column: 6, scope: !18040)
!18040 = distinct !DILexicalBlock(scope: !18038, file: !3, line: 2023, column: 6)
!18041 = !DILocation(line: 2023, column: 6, scope: !18042)
!18042 = distinct !DILexicalBlock(scope: !18038, file: !3, line: 2023, column: 6)
!18043 = !{i32 -2134356879, i32 -2134356850, i32 -2134356804, i32 -2134356746, i32 -2134356692, i32 -2134356638, i32 -2134356583, i32 -2134356552}
!18044 = !DILocation(line: 2023, column: 6, scope: !18045)
!18045 = distinct !DILexicalBlock(scope: !18038, file: !3, line: 2023, column: 6)
!18046 = !{i32 -2134356123, i32 -2134356116, i32 -2134356064, i32 -2134356033, i32 -2134356003}
!18047 = !DILocation(line: 2023, column: 6, scope: !18048)
!18048 = distinct !DILexicalBlock(scope: !18038, file: !3, line: 2023, column: 6)
!18049 = !DILocation(line: 2023, column: 6, scope: !18033)
!18050 = !DILocation(line: 2023, column: 6, scope: !12494)
!18051 = !DILocation(line: 2024, column: 14, scope: !18052)
!18052 = distinct !DILexicalBlock(scope: !18033, file: !3, line: 2023, column: 27)
!18053 = !DILocation(line: 2024, column: 29, scope: !18052)
!18054 = !DILocation(line: 2024, column: 3, scope: !18052)
!18055 = !DILocation(line: 2025, column: 3, scope: !18052)
!18056 = !DILocalVariable(name: "__extack", scope: !18057, file: !3, line: 2025, type: !2633)
!18057 = distinct !DILexicalBlock(scope: !18052, file: !3, line: 2025, column: 3)
!18058 = !DILocation(line: 2025, column: 3, scope: !18057)
!18059 = !DILocation(line: 2025, column: 3, scope: !18060)
!18060 = distinct !DILexicalBlock(scope: !18057, file: !3, line: 2025, column: 3)
!18061 = !DILocation(line: 2026, column: 3, scope: !18052)
!18062 = !DILocation(line: 2029, column: 14, scope: !12494)
!18063 = !DILocation(line: 2029, column: 29, scope: !12494)
!18064 = !DILocation(line: 2029, column: 12, scope: !12494)
!18065 = !DILocation(line: 2031, column: 9, scope: !18066)
!18066 = distinct !DILexicalBlock(scope: !12494, file: !3, line: 2031, column: 2)
!18067 = !DILocation(line: 2031, column: 7, scope: !18066)
!18068 = !DILocation(line: 2031, column: 14, scope: !18069)
!18069 = distinct !DILexicalBlock(scope: !18066, file: !3, line: 2031, column: 2)
!18070 = !DILocation(line: 2031, column: 18, scope: !18069)
!18071 = !DILocation(line: 2031, column: 16, scope: !18069)
!18072 = !DILocation(line: 2031, column: 2, scope: !18066)
!18073 = !DILocation(line: 2032, column: 29, scope: !18074)
!18074 = distinct !DILexicalBlock(scope: !18069, file: !3, line: 2032, column: 7)
!18075 = !DILocation(line: 2032, column: 39, scope: !18074)
!18076 = !DILocation(line: 2032, column: 51, scope: !18074)
!18077 = !DILocation(line: 2032, column: 55, scope: !18074)
!18078 = !DILocation(line: 2032, column: 53, scope: !18074)
!18079 = !DILocation(line: 2032, column: 49, scope: !18074)
!18080 = !DILocation(line: 2032, column: 7, scope: !18074)
!18081 = !DILocation(line: 2032, column: 7, scope: !18069)
!18082 = !DILocation(line: 2033, column: 25, scope: !18074)
!18083 = !DILocation(line: 2033, column: 35, scope: !18074)
!18084 = !DILocation(line: 2033, column: 47, scope: !18074)
!18085 = !DILocation(line: 2033, column: 51, scope: !18074)
!18086 = !DILocation(line: 2033, column: 49, scope: !18074)
!18087 = !DILocation(line: 2033, column: 45, scope: !18074)
!18088 = !DILocation(line: 2033, column: 4, scope: !18074)
!18089 = !DILocation(line: 2032, column: 61, scope: !18074)
!18090 = !DILocation(line: 2031, column: 26, scope: !18069)
!18091 = !DILocation(line: 2031, column: 2, scope: !18069)
!18092 = distinct !{!18092, !18072, !18093}
!18093 = !DILocation(line: 2033, column: 57, scope: !18066)
!18094 = !DILocation(line: 2035, column: 31, scope: !12494)
!18095 = !DILocation(line: 2035, column: 41, scope: !12494)
!18096 = !DILocation(line: 2035, column: 52, scope: !12494)
!18097 = !DILocation(line: 2035, column: 59, scope: !12494)
!18098 = !DILocation(line: 2035, column: 2, scope: !12494)
!18099 = !DILocation(line: 2037, column: 2, scope: !12494)
!18100 = !DILocation(line: 2038, column: 1, scope: !12494)
!18101 = distinct !DISubprogram(name: "mlxsw_sp2_resources_register", scope: !3, file: !3, line: 3061, type: !12059, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18102 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !18101, file: !3, line: 3061, type: !10727)
!18103 = !DILocation(line: 3061, column: 60, scope: !18101)
!18104 = !DILocalVariable(name: "err", scope: !18101, file: !3, line: 3063, type: !7)
!18105 = !DILocation(line: 3063, column: 6, scope: !18101)
!18106 = !DILocation(line: 3065, column: 41, scope: !18101)
!18107 = !DILocation(line: 3065, column: 8, scope: !18101)
!18108 = !DILocation(line: 3065, column: 6, scope: !18101)
!18109 = !DILocation(line: 3066, column: 6, scope: !18110)
!18110 = distinct !DILexicalBlock(scope: !18101, file: !3, line: 3066, column: 6)
!18111 = !DILocation(line: 3066, column: 6, scope: !18101)
!18112 = !DILocation(line: 3067, column: 10, scope: !18110)
!18113 = !DILocation(line: 3067, column: 3, scope: !18110)
!18114 = !DILocation(line: 3069, column: 41, scope: !18101)
!18115 = !DILocation(line: 3069, column: 8, scope: !18101)
!18116 = !DILocation(line: 3069, column: 6, scope: !18101)
!18117 = !DILocation(line: 3070, column: 6, scope: !18118)
!18118 = distinct !DILexicalBlock(scope: !18101, file: !3, line: 3070, column: 6)
!18119 = !DILocation(line: 3070, column: 6, scope: !18101)
!18120 = !DILocation(line: 3071, column: 3, scope: !18118)
!18121 = !DILocation(line: 3073, column: 44, scope: !18101)
!18122 = !DILocation(line: 3073, column: 8, scope: !18101)
!18123 = !DILocation(line: 3073, column: 6, scope: !18101)
!18124 = !DILocation(line: 3074, column: 6, scope: !18125)
!18125 = distinct !DILexicalBlock(scope: !18101, file: !3, line: 3074, column: 6)
!18126 = !DILocation(line: 3074, column: 6, scope: !18101)
!18127 = !DILocation(line: 3075, column: 3, scope: !18125)
!18128 = !DILocation(line: 3077, column: 44, scope: !18101)
!18129 = !DILocation(line: 3077, column: 8, scope: !18101)
!18130 = !DILocation(line: 3077, column: 6, scope: !18101)
!18131 = !DILocation(line: 3078, column: 6, scope: !18132)
!18132 = distinct !DILexicalBlock(scope: !18101, file: !3, line: 3078, column: 6)
!18133 = !DILocation(line: 3078, column: 6, scope: !18101)
!18134 = !DILocation(line: 3079, column: 3, scope: !18132)
!18135 = !DILocation(line: 3081, column: 2, scope: !18101)
!18136 = !DILabel(scope: !18101, name: "err_resources_counter_register", file: !3, line: 3083)
!18137 = !DILocation(line: 3083, column: 1, scope: !18101)
!18138 = !DILabel(scope: !18101, name: "err_resources_span_register", file: !3, line: 3084)
!18139 = !DILocation(line: 3084, column: 1, scope: !18101)
!18140 = !DILocation(line: 3085, column: 47, scope: !18101)
!18141 = !DILocation(line: 3085, column: 31, scope: !18101)
!18142 = !DILocation(line: 3085, column: 2, scope: !18101)
!18143 = !DILocation(line: 3086, column: 9, scope: !18101)
!18144 = !DILocation(line: 3086, column: 2, scope: !18101)
!18145 = !DILocation(line: 3087, column: 1, scope: !18101)
!18146 = distinct !DISubprogram(name: "mlxsw_sp2_params_register", scope: !3, file: !3, line: 3175, type: !12059, scopeLine: 3176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18147 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !18146, file: !3, line: 3175, type: !10727)
!18148 = !DILocation(line: 3175, column: 57, scope: !18146)
!18149 = !DILocalVariable(name: "devlink", scope: !18146, file: !3, line: 3177, type: !8429)
!18150 = !DILocation(line: 3177, column: 18, scope: !18146)
!18151 = !DILocation(line: 3177, column: 44, scope: !18146)
!18152 = !DILocation(line: 3177, column: 28, scope: !18146)
!18153 = !DILocalVariable(name: "value", scope: !18146, file: !3, line: 3178, type: !12523)
!18154 = !DILocation(line: 3178, column: 28, scope: !18146)
!18155 = !DILocalVariable(name: "err", scope: !18146, file: !3, line: 3179, type: !7)
!18156 = !DILocation(line: 3179, column: 6, scope: !18146)
!18157 = !DILocation(line: 3181, column: 32, scope: !18146)
!18158 = !DILocation(line: 3181, column: 8, scope: !18146)
!18159 = !DILocation(line: 3181, column: 6, scope: !18146)
!18160 = !DILocation(line: 3183, column: 6, scope: !18161)
!18161 = distinct !DILexicalBlock(scope: !18146, file: !3, line: 3183, column: 6)
!18162 = !DILocation(line: 3183, column: 6, scope: !18146)
!18163 = !DILocation(line: 3184, column: 10, scope: !18161)
!18164 = !DILocation(line: 3184, column: 3, scope: !18161)
!18165 = !DILocation(line: 3186, column: 8, scope: !18146)
!18166 = !DILocation(line: 3186, column: 13, scope: !18146)
!18167 = !DILocation(line: 3187, column: 37, scope: !18146)
!18168 = !DILocation(line: 3187, column: 2, scope: !18146)
!18169 = !DILocation(line: 3190, column: 2, scope: !18146)
!18170 = !DILocation(line: 3191, column: 1, scope: !18146)
!18171 = distinct !DISubprogram(name: "mlxsw_sp2_params_unregister", scope: !3, file: !3, line: 3193, type: !12055, scopeLine: 3194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18172 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !18171, file: !3, line: 3193, type: !10727)
!18173 = !DILocation(line: 3193, column: 60, scope: !18171)
!18174 = !DILocation(line: 3195, column: 44, scope: !18171)
!18175 = !DILocation(line: 3195, column: 28, scope: !18171)
!18176 = !DILocation(line: 3195, column: 2, scope: !18171)
!18177 = !DILocation(line: 3198, column: 1, scope: !18171)
!18178 = distinct !DISubprogram(name: "mlxsw_sp_ptp_transmitted", scope: !3, file: !3, line: 3200, type: !12213, scopeLine: 3202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18179 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !18178, file: !3, line: 3200, type: !10727)
!18180 = !DILocation(line: 3200, column: 57, scope: !18178)
!18181 = !DILocalVariable(name: "skb", arg: 2, scope: !18178, file: !3, line: 3201, type: !576)
!18182 = !DILocation(line: 3201, column: 26, scope: !18178)
!18183 = !DILocalVariable(name: "local_port", arg: 3, scope: !18178, file: !3, line: 3201, type: !1552)
!18184 = !DILocation(line: 3201, column: 34, scope: !18178)
!18185 = !DILocalVariable(name: "mlxsw_sp", scope: !18178, file: !3, line: 3203, type: !10721)
!18186 = !DILocation(line: 3203, column: 19, scope: !18178)
!18187 = !DILocation(line: 3203, column: 53, scope: !18178)
!18188 = !DILocation(line: 3203, column: 30, scope: !18178)
!18189 = !DILocation(line: 3205, column: 11, scope: !18178)
!18190 = !DILocation(line: 3205, column: 2, scope: !18178)
!18191 = !DILocation(line: 3206, column: 2, scope: !18178)
!18192 = !DILocation(line: 3206, column: 12, scope: !18178)
!18193 = !DILocation(line: 3206, column: 21, scope: !18178)
!18194 = !DILocation(line: 3206, column: 33, scope: !18178)
!18195 = !DILocation(line: 3206, column: 43, scope: !18178)
!18196 = !DILocation(line: 3206, column: 48, scope: !18178)
!18197 = !DILocation(line: 3207, column: 1, scope: !18178)
!18198 = distinct !DISubprogram(name: "mlxsw_sp_init", scope: !3, file: !3, line: 2527, type: !12051, scopeLine: 2530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18199 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !18198, file: !3, line: 2527, type: !10727)
!18200 = !DILocation(line: 2527, column: 45, scope: !18198)
!18201 = !DILocalVariable(name: "mlxsw_bus_info", arg: 2, scope: !18198, file: !3, line: 2528, type: !10731)
!18202 = !DILocation(line: 2528, column: 34, scope: !18198)
!18203 = !DILocalVariable(name: "extack", arg: 3, scope: !18198, file: !3, line: 2529, type: !2633)
!18204 = !DILocation(line: 2529, column: 29, scope: !18198)
!18205 = !DILocalVariable(name: "mlxsw_sp", scope: !18198, file: !3, line: 2531, type: !10721)
!18206 = !DILocation(line: 2531, column: 19, scope: !18198)
!18207 = !DILocation(line: 2531, column: 53, scope: !18198)
!18208 = !DILocation(line: 2531, column: 30, scope: !18198)
!18209 = !DILocalVariable(name: "err", scope: !18198, file: !3, line: 2532, type: !7)
!18210 = !DILocation(line: 2532, column: 6, scope: !18198)
!18211 = !DILocation(line: 2534, column: 19, scope: !18198)
!18212 = !DILocation(line: 2534, column: 2, scope: !18198)
!18213 = !DILocation(line: 2534, column: 12, scope: !18198)
!18214 = !DILocation(line: 2534, column: 17, scope: !18198)
!18215 = !DILocation(line: 2535, column: 23, scope: !18198)
!18216 = !DILocation(line: 2535, column: 2, scope: !18198)
!18217 = !DILocation(line: 2535, column: 12, scope: !18198)
!18218 = !DILocation(line: 2535, column: 21, scope: !18198)
!18219 = !DILocation(line: 2537, column: 36, scope: !18198)
!18220 = !DILocation(line: 2537, column: 2, scope: !18198)
!18221 = !DILocation(line: 2539, column: 30, scope: !18198)
!18222 = !DILocation(line: 2539, column: 8, scope: !18198)
!18223 = !DILocation(line: 2539, column: 6, scope: !18198)
!18224 = !DILocation(line: 2540, column: 6, scope: !18225)
!18225 = distinct !DILexicalBlock(scope: !18198, file: !3, line: 2540, column: 6)
!18226 = !DILocation(line: 2540, column: 6, scope: !18198)
!18227 = !DILocation(line: 2541, column: 3, scope: !18228)
!18228 = distinct !DILexicalBlock(scope: !18225, file: !3, line: 2540, column: 11)
!18229 = !DILocation(line: 2542, column: 10, scope: !18228)
!18230 = !DILocation(line: 2542, column: 3, scope: !18228)
!18231 = !DILocation(line: 2545, column: 27, scope: !18198)
!18232 = !DILocation(line: 2545, column: 8, scope: !18198)
!18233 = !DILocation(line: 2545, column: 6, scope: !18198)
!18234 = !DILocation(line: 2546, column: 6, scope: !18235)
!18235 = distinct !DILexicalBlock(scope: !18198, file: !3, line: 2546, column: 6)
!18236 = !DILocation(line: 2546, column: 6, scope: !18198)
!18237 = !DILocation(line: 2547, column: 3, scope: !18238)
!18238 = distinct !DILexicalBlock(scope: !18235, file: !3, line: 2546, column: 11)
!18239 = !DILocation(line: 2548, column: 10, scope: !18238)
!18240 = !DILocation(line: 2548, column: 3, scope: !18238)
!18241 = !DILocation(line: 2551, column: 27, scope: !18198)
!18242 = !DILocation(line: 2551, column: 8, scope: !18198)
!18243 = !DILocation(line: 2551, column: 6, scope: !18198)
!18244 = !DILocation(line: 2552, column: 6, scope: !18245)
!18245 = distinct !DILexicalBlock(scope: !18198, file: !3, line: 2552, column: 6)
!18246 = !DILocation(line: 2552, column: 6, scope: !18198)
!18247 = !DILocation(line: 2553, column: 3, scope: !18248)
!18248 = distinct !DILexicalBlock(scope: !18245, file: !3, line: 2552, column: 11)
!18249 = !DILocation(line: 2554, column: 3, scope: !18248)
!18250 = !DILocation(line: 2557, column: 31, scope: !18198)
!18251 = !DILocation(line: 2557, column: 8, scope: !18198)
!18252 = !DILocation(line: 2557, column: 6, scope: !18198)
!18253 = !DILocation(line: 2558, column: 6, scope: !18254)
!18254 = distinct !DILexicalBlock(scope: !18198, file: !3, line: 2558, column: 6)
!18255 = !DILocation(line: 2558, column: 6, scope: !18198)
!18256 = !DILocation(line: 2559, column: 3, scope: !18257)
!18257 = distinct !DILexicalBlock(scope: !18254, file: !3, line: 2558, column: 11)
!18258 = !DILocation(line: 2560, column: 3, scope: !18257)
!18259 = !DILocation(line: 2563, column: 28, scope: !18198)
!18260 = !DILocation(line: 2563, column: 8, scope: !18198)
!18261 = !DILocation(line: 2563, column: 6, scope: !18198)
!18262 = !DILocation(line: 2564, column: 6, scope: !18263)
!18263 = distinct !DILexicalBlock(scope: !18198, file: !3, line: 2564, column: 6)
!18264 = !DILocation(line: 2564, column: 6, scope: !18198)
!18265 = !DILocation(line: 2565, column: 3, scope: !18266)
!18266 = distinct !DILexicalBlock(scope: !18263, file: !3, line: 2564, column: 11)
!18267 = !DILocation(line: 2566, column: 3, scope: !18266)
!18268 = !DILocation(line: 2569, column: 36, scope: !18198)
!18269 = !DILocation(line: 2569, column: 8, scope: !18198)
!18270 = !DILocation(line: 2569, column: 6, scope: !18198)
!18271 = !DILocation(line: 2570, column: 6, scope: !18272)
!18272 = distinct !DILexicalBlock(scope: !18198, file: !3, line: 2570, column: 6)
!18273 = !DILocation(line: 2570, column: 6, scope: !18198)
!18274 = !DILocation(line: 2571, column: 3, scope: !18275)
!18275 = distinct !DILexicalBlock(scope: !18272, file: !3, line: 2570, column: 11)
!18276 = !DILocation(line: 2572, column: 3, scope: !18275)
!18277 = !DILocation(line: 2575, column: 30, scope: !18198)
!18278 = !DILocation(line: 2575, column: 8, scope: !18198)
!18279 = !DILocation(line: 2575, column: 6, scope: !18198)
!18280 = !DILocation(line: 2576, column: 6, scope: !18281)
!18281 = distinct !DILexicalBlock(scope: !18198, file: !3, line: 2576, column: 6)
!18282 = !DILocation(line: 2576, column: 6, scope: !18198)
!18283 = !DILocation(line: 2577, column: 3, scope: !18284)
!18284 = distinct !DILexicalBlock(scope: !18281, file: !3, line: 2576, column: 11)
!18285 = !DILocation(line: 2578, column: 3, scope: !18284)
!18286 = !DILocation(line: 2581, column: 26, scope: !18198)
!18287 = !DILocation(line: 2581, column: 8, scope: !18198)
!18288 = !DILocation(line: 2581, column: 6, scope: !18198)
!18289 = !DILocation(line: 2582, column: 6, scope: !18290)
!18290 = distinct !DILexicalBlock(scope: !18198, file: !3, line: 2582, column: 6)
!18291 = !DILocation(line: 2582, column: 6, scope: !18198)
!18292 = !DILocation(line: 2583, column: 3, scope: !18293)
!18293 = distinct !DILexicalBlock(scope: !18290, file: !3, line: 2582, column: 11)
!18294 = !DILocation(line: 2584, column: 3, scope: !18293)
!18295 = !DILocation(line: 2590, column: 27, scope: !18198)
!18296 = !DILocation(line: 2590, column: 8, scope: !18198)
!18297 = !DILocation(line: 2590, column: 6, scope: !18198)
!18298 = !DILocation(line: 2591, column: 6, scope: !18299)
!18299 = distinct !DILexicalBlock(scope: !18198, file: !3, line: 2591, column: 6)
!18300 = !DILocation(line: 2591, column: 6, scope: !18198)
!18301 = !DILocation(line: 2592, column: 3, scope: !18302)
!18302 = distinct !DILexicalBlock(scope: !18299, file: !3, line: 2591, column: 11)
!18303 = !DILocation(line: 2593, column: 3, scope: !18302)
!18304 = !DILocation(line: 2596, column: 32, scope: !18198)
!18305 = !DILocation(line: 2596, column: 8, scope: !18198)
!18306 = !DILocation(line: 2596, column: 6, scope: !18198)
!18307 = !DILocation(line: 2597, column: 6, scope: !18308)
!18308 = distinct !DILexicalBlock(scope: !18198, file: !3, line: 2597, column: 6)
!18309 = !DILocation(line: 2597, column: 6, scope: !18198)
!18310 = !DILocation(line: 2598, column: 3, scope: !18311)
!18311 = distinct !DILexicalBlock(scope: !18308, file: !3, line: 2597, column: 11)
!18312 = !DILocation(line: 2599, column: 3, scope: !18311)
!18313 = !DILocation(line: 2602, column: 35, scope: !18198)
!18314 = !DILocation(line: 2602, column: 8, scope: !18198)
!18315 = !DILocation(line: 2602, column: 6, scope: !18198)
!18316 = !DILocation(line: 2603, column: 6, scope: !18317)
!18317 = distinct !DILexicalBlock(scope: !18198, file: !3, line: 2603, column: 6)
!18318 = !DILocation(line: 2603, column: 6, scope: !18198)
!18319 = !DILocation(line: 2604, column: 3, scope: !18320)
!18320 = distinct !DILexicalBlock(scope: !18317, file: !3, line: 2603, column: 11)
!18321 = !DILocation(line: 2605, column: 3, scope: !18320)
!18322 = !DILocation(line: 2608, column: 26, scope: !18198)
!18323 = !DILocation(line: 2608, column: 8, scope: !18198)
!18324 = !DILocation(line: 2608, column: 6, scope: !18198)
!18325 = !DILocation(line: 2609, column: 6, scope: !18326)
!18326 = distinct !DILexicalBlock(scope: !18198, file: !3, line: 2609, column: 6)
!18327 = !DILocation(line: 2609, column: 6, scope: !18198)
!18328 = !DILocation(line: 2610, column: 3, scope: !18329)
!18329 = distinct !DILexicalBlock(scope: !18326, file: !3, line: 2609, column: 11)
!18330 = !DILocation(line: 2611, column: 3, scope: !18329)
!18331 = !DILocation(line: 2614, column: 26, scope: !18198)
!18332 = !DILocation(line: 2614, column: 8, scope: !18198)
!18333 = !DILocation(line: 2614, column: 6, scope: !18198)
!18334 = !DILocation(line: 2615, column: 6, scope: !18335)
!18335 = distinct !DILexicalBlock(scope: !18198, file: !3, line: 2615, column: 6)
!18336 = !DILocation(line: 2615, column: 6, scope: !18198)
!18337 = !DILocation(line: 2616, column: 3, scope: !18338)
!18338 = distinct !DILexicalBlock(scope: !18335, file: !3, line: 2615, column: 11)
!18339 = !DILocation(line: 2617, column: 3, scope: !18338)
!18340 = !DILocation(line: 2620, column: 26, scope: !18198)
!18341 = !DILocation(line: 2620, column: 8, scope: !18198)
!18342 = !DILocation(line: 2620, column: 6, scope: !18198)
!18343 = !DILocation(line: 2621, column: 6, scope: !18344)
!18344 = distinct !DILexicalBlock(scope: !18198, file: !3, line: 2621, column: 6)
!18345 = !DILocation(line: 2621, column: 6, scope: !18198)
!18346 = !DILocation(line: 2622, column: 3, scope: !18347)
!18347 = distinct !DILexicalBlock(scope: !18344, file: !3, line: 2621, column: 11)
!18348 = !DILocation(line: 2623, column: 3, scope: !18347)
!18349 = !DILocation(line: 2626, column: 29, scope: !18198)
!18350 = !DILocation(line: 2626, column: 39, scope: !18198)
!18351 = !DILocation(line: 2626, column: 8, scope: !18198)
!18352 = !DILocation(line: 2626, column: 6, scope: !18198)
!18353 = !DILocation(line: 2627, column: 6, scope: !18354)
!18354 = distinct !DILexicalBlock(scope: !18198, file: !3, line: 2627, column: 6)
!18355 = !DILocation(line: 2627, column: 6, scope: !18198)
!18356 = !DILocation(line: 2628, column: 3, scope: !18357)
!18357 = distinct !DILexicalBlock(scope: !18354, file: !3, line: 2627, column: 11)
!18358 = !DILocation(line: 2629, column: 3, scope: !18357)
!18359 = !DILocation(line: 2632, column: 6, scope: !18360)
!18360 = distinct !DILexicalBlock(scope: !18198, file: !3, line: 2632, column: 6)
!18361 = !DILocation(line: 2632, column: 16, scope: !18360)
!18362 = !DILocation(line: 2632, column: 26, scope: !18360)
!18363 = !DILocation(line: 2632, column: 6, scope: !18198)
!18364 = !DILocation(line: 2635, column: 4, scope: !18365)
!18365 = distinct !DILexicalBlock(scope: !18360, file: !3, line: 2632, column: 44)
!18366 = !DILocation(line: 2635, column: 14, scope: !18365)
!18367 = !DILocation(line: 2635, column: 23, scope: !18365)
!18368 = !DILocation(line: 2635, column: 34, scope: !18365)
!18369 = !DILocation(line: 2636, column: 13, scope: !18365)
!18370 = !DILocation(line: 2636, column: 23, scope: !18365)
!18371 = !DILocation(line: 2636, column: 33, scope: !18365)
!18372 = !DILocation(line: 2634, column: 3, scope: !18365)
!18373 = !DILocation(line: 2634, column: 13, scope: !18365)
!18374 = !DILocation(line: 2634, column: 19, scope: !18365)
!18375 = !DILocation(line: 2637, column: 14, scope: !18376)
!18376 = distinct !DILexicalBlock(scope: !18365, file: !3, line: 2637, column: 7)
!18377 = !DILocation(line: 2637, column: 24, scope: !18376)
!18378 = !DILocation(line: 2637, column: 7, scope: !18376)
!18379 = !DILocation(line: 2637, column: 7, scope: !18365)
!18380 = !DILocation(line: 2638, column: 18, scope: !18381)
!18381 = distinct !DILexicalBlock(scope: !18376, file: !3, line: 2637, column: 32)
!18382 = !DILocation(line: 2638, column: 28, scope: !18381)
!18383 = !DILocation(line: 2638, column: 10, scope: !18381)
!18384 = !DILocation(line: 2638, column: 8, scope: !18381)
!18385 = !DILocation(line: 2639, column: 4, scope: !18381)
!18386 = !DILocation(line: 2640, column: 4, scope: !18381)
!18387 = !DILocation(line: 2642, column: 2, scope: !18365)
!18388 = !DILocation(line: 2644, column: 6, scope: !18389)
!18389 = distinct !DILexicalBlock(scope: !18198, file: !3, line: 2644, column: 6)
!18390 = !DILocation(line: 2644, column: 16, scope: !18389)
!18391 = !DILocation(line: 2644, column: 6, scope: !18198)
!18392 = !DILocation(line: 2646, column: 25, scope: !18393)
!18393 = distinct !DILexicalBlock(scope: !18389, file: !3, line: 2644, column: 23)
!18394 = !DILocation(line: 2646, column: 35, scope: !18393)
!18395 = !DILocation(line: 2646, column: 44, scope: !18393)
!18396 = !DILocation(line: 2646, column: 49, scope: !18393)
!18397 = !DILocation(line: 2646, column: 3, scope: !18393)
!18398 = !DILocation(line: 2646, column: 13, scope: !18393)
!18399 = !DILocation(line: 2646, column: 23, scope: !18393)
!18400 = !DILocation(line: 2647, column: 14, scope: !18401)
!18401 = distinct !DILexicalBlock(scope: !18393, file: !3, line: 2647, column: 7)
!18402 = !DILocation(line: 2647, column: 24, scope: !18401)
!18403 = !DILocation(line: 2647, column: 7, scope: !18401)
!18404 = !DILocation(line: 2647, column: 7, scope: !18393)
!18405 = !DILocation(line: 2648, column: 18, scope: !18406)
!18406 = distinct !DILexicalBlock(scope: !18401, file: !3, line: 2647, column: 36)
!18407 = !DILocation(line: 2648, column: 28, scope: !18406)
!18408 = !DILocation(line: 2648, column: 10, scope: !18406)
!18409 = !DILocation(line: 2648, column: 8, scope: !18406)
!18410 = !DILocation(line: 2649, column: 4, scope: !18406)
!18411 = !DILocation(line: 2650, column: 4, scope: !18406)
!18412 = !DILocation(line: 2652, column: 2, scope: !18393)
!18413 = !DILocation(line: 2658, column: 2, scope: !18198)
!18414 = !DILocation(line: 2658, column: 12, scope: !18198)
!18415 = !DILocation(line: 2658, column: 25, scope: !18198)
!18416 = !DILocation(line: 2658, column: 39, scope: !18198)
!18417 = !DILocation(line: 2659, column: 53, scope: !18198)
!18418 = !DILocation(line: 2659, column: 40, scope: !18198)
!18419 = !DILocation(line: 2660, column: 13, scope: !18198)
!18420 = !DILocation(line: 2660, column: 23, scope: !18198)
!18421 = !DILocation(line: 2659, column: 8, scope: !18198)
!18422 = !DILocation(line: 2659, column: 6, scope: !18198)
!18423 = !DILocation(line: 2661, column: 6, scope: !18424)
!18424 = distinct !DILexicalBlock(scope: !18198, file: !3, line: 2661, column: 6)
!18425 = !DILocation(line: 2661, column: 6, scope: !18198)
!18426 = !DILocation(line: 2662, column: 3, scope: !18427)
!18427 = distinct !DILexicalBlock(scope: !18424, file: !3, line: 2661, column: 11)
!18428 = !DILocation(line: 2663, column: 3, scope: !18427)
!18429 = !DILocation(line: 2666, column: 28, scope: !18198)
!18430 = !DILocation(line: 2666, column: 8, scope: !18198)
!18431 = !DILocation(line: 2666, column: 6, scope: !18198)
!18432 = !DILocation(line: 2667, column: 6, scope: !18433)
!18433 = distinct !DILexicalBlock(scope: !18198, file: !3, line: 2667, column: 6)
!18434 = !DILocation(line: 2667, column: 6, scope: !18198)
!18435 = !DILocation(line: 2668, column: 3, scope: !18436)
!18436 = distinct !DILexicalBlock(scope: !18433, file: !3, line: 2667, column: 11)
!18437 = !DILocation(line: 2669, column: 3, scope: !18436)
!18438 = !DILocation(line: 2672, column: 39, scope: !18198)
!18439 = !DILocation(line: 2672, column: 8, scope: !18198)
!18440 = !DILocation(line: 2672, column: 6, scope: !18198)
!18441 = !DILocation(line: 2673, column: 6, scope: !18442)
!18442 = distinct !DILexicalBlock(scope: !18198, file: !3, line: 2673, column: 6)
!18443 = !DILocation(line: 2673, column: 6, scope: !18198)
!18444 = !DILocation(line: 2674, column: 3, scope: !18445)
!18445 = distinct !DILexicalBlock(scope: !18442, file: !3, line: 2673, column: 11)
!18446 = !DILocation(line: 2675, column: 3, scope: !18445)
!18447 = !DILocation(line: 2678, column: 30, scope: !18198)
!18448 = !DILocation(line: 2678, column: 8, scope: !18198)
!18449 = !DILocation(line: 2678, column: 6, scope: !18198)
!18450 = !DILocation(line: 2679, column: 6, scope: !18451)
!18451 = distinct !DILexicalBlock(scope: !18198, file: !3, line: 2679, column: 6)
!18452 = !DILocation(line: 2679, column: 6, scope: !18198)
!18453 = !DILocation(line: 2680, column: 3, scope: !18454)
!18454 = distinct !DILexicalBlock(scope: !18451, file: !3, line: 2679, column: 11)
!18455 = !DILocation(line: 2681, column: 3, scope: !18454)
!18456 = !DILocation(line: 2684, column: 2, scope: !18198)
!18457 = !DILabel(scope: !18198, name: "err_ports_create", file: !3, line: 2686)
!18458 = !DILocation(line: 2686, column: 1, scope: !18198)
!18459 = !DILocation(line: 2687, column: 33, scope: !18198)
!18460 = !DILocation(line: 2687, column: 2, scope: !18198)
!18461 = !DILabel(scope: !18198, name: "err_port_module_info_init", file: !3, line: 2688)
!18462 = !DILocation(line: 2688, column: 1, scope: !18198)
!18463 = !DILocation(line: 2689, column: 22, scope: !18198)
!18464 = !DILocation(line: 2689, column: 2, scope: !18198)
!18465 = !DILabel(scope: !18198, name: "err_dpipe_init", file: !3, line: 2690)
!18466 = !DILocation(line: 2690, column: 1, scope: !18198)
!18467 = !DILocation(line: 2691, column: 49, scope: !18198)
!18468 = !DILocation(line: 2691, column: 36, scope: !18198)
!18469 = !DILocation(line: 2692, column: 9, scope: !18198)
!18470 = !DILocation(line: 2692, column: 19, scope: !18198)
!18471 = !DILocation(line: 2691, column: 2, scope: !18198)
!18472 = !DILabel(scope: !18198, name: "err_netdev_notifier", file: !3, line: 2693)
!18473 = !DILocation(line: 2693, column: 1, scope: !18198)
!18474 = !DILocation(line: 2694, column: 6, scope: !18475)
!18475 = distinct !DILexicalBlock(scope: !18198, file: !3, line: 2694, column: 6)
!18476 = !DILocation(line: 2694, column: 16, scope: !18475)
!18477 = !DILocation(line: 2694, column: 6, scope: !18198)
!18478 = !DILocation(line: 2695, column: 3, scope: !18475)
!18479 = !DILocation(line: 2695, column: 13, scope: !18475)
!18480 = !DILocation(line: 2695, column: 22, scope: !18475)
!18481 = !DILocation(line: 2695, column: 27, scope: !18475)
!18482 = !DILocation(line: 2695, column: 37, scope: !18475)
!18483 = !DILabel(scope: !18198, name: "err_ptp_init", file: !3, line: 2696)
!18484 = !DILocation(line: 2696, column: 1, scope: !18198)
!18485 = !DILocation(line: 2697, column: 6, scope: !18486)
!18486 = distinct !DILexicalBlock(scope: !18198, file: !3, line: 2697, column: 6)
!18487 = !DILocation(line: 2697, column: 16, scope: !18486)
!18488 = !DILocation(line: 2697, column: 6, scope: !18198)
!18489 = !DILocation(line: 2698, column: 3, scope: !18486)
!18490 = !DILocation(line: 2698, column: 13, scope: !18486)
!18491 = !DILocation(line: 2698, column: 22, scope: !18486)
!18492 = !DILocation(line: 2698, column: 33, scope: !18486)
!18493 = !DILocation(line: 2698, column: 43, scope: !18486)
!18494 = !DILabel(scope: !18198, name: "err_ptp_clock_init", file: !3, line: 2699)
!18495 = !DILocation(line: 2699, column: 1, scope: !18198)
!18496 = !DILocation(line: 2700, column: 23, scope: !18198)
!18497 = !DILocation(line: 2700, column: 2, scope: !18198)
!18498 = !DILabel(scope: !18198, name: "err_router_init", file: !3, line: 2701)
!18499 = !DILocation(line: 2701, column: 1, scope: !18198)
!18500 = !DILocation(line: 2702, column: 20, scope: !18198)
!18501 = !DILocation(line: 2702, column: 2, scope: !18198)
!18502 = !DILabel(scope: !18198, name: "err_acl_init", file: !3, line: 2703)
!18503 = !DILocation(line: 2703, column: 1, scope: !18198)
!18504 = !DILocation(line: 2704, column: 20, scope: !18198)
!18505 = !DILocation(line: 2704, column: 2, scope: !18198)
!18506 = !DILabel(scope: !18198, name: "err_nve_init", file: !3, line: 2705)
!18507 = !DILocation(line: 2705, column: 1, scope: !18198)
!18508 = !DILocation(line: 2706, column: 20, scope: !18198)
!18509 = !DILocation(line: 2706, column: 2, scope: !18198)
!18510 = !DILabel(scope: !18198, name: "err_afa_init", file: !3, line: 2707)
!18511 = !DILocation(line: 2707, column: 1, scope: !18198)
!18512 = !DILocation(line: 2708, column: 29, scope: !18198)
!18513 = !DILocation(line: 2708, column: 2, scope: !18198)
!18514 = !DILabel(scope: !18198, name: "err_counter_pool_init", file: !3, line: 2709)
!18515 = !DILocation(line: 2709, column: 1, scope: !18198)
!18516 = !DILocation(line: 2710, column: 26, scope: !18198)
!18517 = !DILocation(line: 2710, column: 2, scope: !18198)
!18518 = !DILabel(scope: !18198, name: "err_switchdev_init", file: !3, line: 2711)
!18519 = !DILocation(line: 2711, column: 1, scope: !18198)
!18520 = !DILocation(line: 2712, column: 21, scope: !18198)
!18521 = !DILocation(line: 2712, column: 2, scope: !18198)
!18522 = !DILabel(scope: !18198, name: "err_span_init", file: !3, line: 2713)
!18523 = !DILocation(line: 2713, column: 1, scope: !18198)
!18524 = !DILocation(line: 2714, column: 20, scope: !18198)
!18525 = !DILocation(line: 2714, column: 2, scope: !18198)
!18526 = !DILabel(scope: !18198, name: "err_lag_init", file: !3, line: 2715)
!18527 = !DILocation(line: 2715, column: 1, scope: !18198)
!18528 = !DILocation(line: 2716, column: 24, scope: !18198)
!18529 = !DILocation(line: 2716, column: 2, scope: !18198)
!18530 = !DILabel(scope: !18198, name: "err_buffers_init", file: !3, line: 2717)
!18531 = !DILocation(line: 2717, column: 1, scope: !18198)
!18532 = !DILocation(line: 2718, column: 30, scope: !18198)
!18533 = !DILocation(line: 2718, column: 2, scope: !18198)
!18534 = !DILabel(scope: !18198, name: "err_devlink_traps_init", file: !3, line: 2719)
!18535 = !DILocation(line: 2719, column: 1, scope: !18198)
!18536 = !DILocation(line: 2720, column: 22, scope: !18198)
!18537 = !DILocation(line: 2720, column: 2, scope: !18198)
!18538 = !DILabel(scope: !18198, name: "err_traps_init", file: !3, line: 2721)
!18539 = !DILocation(line: 2721, column: 1, scope: !18198)
!18540 = !DILocation(line: 2722, column: 25, scope: !18198)
!18541 = !DILocation(line: 2722, column: 2, scope: !18198)
!18542 = !DILabel(scope: !18198, name: "err_policers_init", file: !3, line: 2723)
!18543 = !DILocation(line: 2723, column: 1, scope: !18198)
!18544 = !DILocation(line: 2724, column: 21, scope: !18198)
!18545 = !DILocation(line: 2724, column: 2, scope: !18198)
!18546 = !DILabel(scope: !18198, name: "err_fids_init", file: !3, line: 2725)
!18547 = !DILocation(line: 2725, column: 1, scope: !18198)
!18548 = !DILocation(line: 2726, column: 21, scope: !18198)
!18549 = !DILocation(line: 2726, column: 2, scope: !18198)
!18550 = !DILocation(line: 2727, column: 9, scope: !18198)
!18551 = !DILocation(line: 2727, column: 2, scope: !18198)
!18552 = !DILocation(line: 2728, column: 1, scope: !18198)
!18553 = distinct !DISubprogram(name: "mlxsw_sp2_ptp_clock_init", scope: !18554, file: !18554, line: 149, type: !11195, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18554 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/spectrum_ptp.h", directory: "/home/lizy2001/genbc/linux")
!18555 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !18553, file: !18554, line: 149, type: !10721)
!18556 = !DILocation(line: 149, column: 43, scope: !18553)
!18557 = !DILocalVariable(name: "dev", arg: 2, scope: !18553, file: !18554, line: 149, type: !4760)
!18558 = !DILocation(line: 149, column: 68, scope: !18553)
!18559 = !DILocation(line: 151, column: 2, scope: !18553)
!18560 = distinct !DISubprogram(name: "mlxsw_sp2_ptp_clock_fini", scope: !18554, file: !18554, line: 154, type: !11199, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18561 = !DILocalVariable(name: "clock", arg: 1, scope: !18560, file: !18554, line: 154, type: !10862)
!18562 = !DILocation(line: 154, column: 72, scope: !18560)
!18563 = !DILocation(line: 156, column: 1, scope: !18560)
!18564 = distinct !DISubprogram(name: "mlxsw_sp2_ptp_init", scope: !18554, file: !18554, line: 159, type: !11203, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18565 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !18564, file: !18554, line: 159, type: !10721)
!18566 = !DILocation(line: 159, column: 37, scope: !18564)
!18567 = !DILocation(line: 161, column: 2, scope: !18564)
!18568 = distinct !DISubprogram(name: "mlxsw_sp2_ptp_fini", scope: !18554, file: !18554, line: 164, type: !11207, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18569 = !DILocalVariable(name: "ptp_state", arg: 1, scope: !18568, file: !18554, line: 164, type: !10865)
!18570 = !DILocation(line: 164, column: 66, scope: !18568)
!18571 = !DILocation(line: 166, column: 1, scope: !18568)
!18572 = distinct !DISubprogram(name: "mlxsw_sp2_ptp_receive", scope: !18554, file: !18554, line: 168, type: !11211, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18573 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !18572, file: !18554, line: 168, type: !10721)
!18574 = !DILocation(line: 168, column: 59, scope: !18572)
!18575 = !DILocalVariable(name: "skb", arg: 2, scope: !18572, file: !18554, line: 169, type: !576)
!18576 = !DILocation(line: 169, column: 23, scope: !18572)
!18577 = !DILocalVariable(name: "local_port", arg: 3, scope: !18572, file: !18554, line: 169, type: !1552)
!18578 = !DILocation(line: 169, column: 31, scope: !18572)
!18579 = !DILocation(line: 171, column: 36, scope: !18572)
!18580 = !DILocation(line: 171, column: 41, scope: !18572)
!18581 = !DILocation(line: 171, column: 53, scope: !18572)
!18582 = !DILocation(line: 171, column: 2, scope: !18572)
!18583 = !DILocation(line: 172, column: 1, scope: !18572)
!18584 = distinct !DISubprogram(name: "mlxsw_sp2_ptp_transmitted", scope: !18554, file: !18554, line: 174, type: !11211, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18585 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !18584, file: !18554, line: 174, type: !10721)
!18586 = !DILocation(line: 174, column: 63, scope: !18584)
!18587 = !DILocalVariable(name: "skb", arg: 2, scope: !18584, file: !18554, line: 175, type: !576)
!18588 = !DILocation(line: 175, column: 27, scope: !18584)
!18589 = !DILocalVariable(name: "local_port", arg: 3, scope: !18584, file: !18554, line: 175, type: !1552)
!18590 = !DILocation(line: 175, column: 35, scope: !18584)
!18591 = !DILocation(line: 177, column: 20, scope: !18584)
!18592 = !DILocation(line: 177, column: 2, scope: !18584)
!18593 = !DILocation(line: 178, column: 1, scope: !18584)
!18594 = distinct !DISubprogram(name: "mlxsw_sp2_ptp_hwtstamp_get", scope: !18554, file: !18554, line: 181, type: !11216, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18595 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !18594, file: !18554, line: 181, type: !10715)
!18596 = !DILocation(line: 181, column: 50, scope: !18594)
!18597 = !DILocalVariable(name: "config", arg: 2, scope: !18594, file: !18554, line: 182, type: !11218)
!18598 = !DILocation(line: 182, column: 31, scope: !18594)
!18599 = !DILocation(line: 184, column: 2, scope: !18594)
!18600 = distinct !DISubprogram(name: "mlxsw_sp2_ptp_hwtstamp_set", scope: !18554, file: !18554, line: 188, type: !11216, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18601 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !18600, file: !18554, line: 188, type: !10715)
!18602 = !DILocation(line: 188, column: 50, scope: !18600)
!18603 = !DILocalVariable(name: "config", arg: 2, scope: !18600, file: !18554, line: 189, type: !11218)
!18604 = !DILocation(line: 189, column: 31, scope: !18600)
!18605 = !DILocation(line: 191, column: 2, scope: !18600)
!18606 = distinct !DISubprogram(name: "mlxsw_sp2_ptp_shaper_work", scope: !18554, file: !18554, line: 194, type: !1969, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18607 = !DILocalVariable(name: "work", arg: 1, scope: !18606, file: !18554, line: 194, type: !1971)
!18608 = !DILocation(line: 194, column: 66, scope: !18606)
!18609 = !DILocation(line: 196, column: 1, scope: !18606)
!18610 = distinct !DISubprogram(name: "mlxsw_sp2_ptp_get_ts_info", scope: !18554, file: !18554, line: 198, type: !11228, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18611 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !18610, file: !18554, line: 198, type: !10721)
!18612 = !DILocation(line: 198, column: 62, scope: !18610)
!18613 = !DILocalVariable(name: "info", arg: 2, scope: !18610, file: !18554, line: 199, type: !9138)
!18614 = !DILocation(line: 199, column: 34, scope: !18610)
!18615 = !DILocation(line: 201, column: 40, scope: !18610)
!18616 = !DILocation(line: 201, column: 9, scope: !18610)
!18617 = !DILocation(line: 201, column: 2, scope: !18610)
!18618 = distinct !DISubprogram(name: "mlxsw_sp2_get_stats_count", scope: !18554, file: !18554, line: 204, type: !11232, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18619 = !DILocation(line: 206, column: 2, scope: !18618)
!18620 = distinct !DISubprogram(name: "mlxsw_sp2_get_stats_strings", scope: !18554, file: !18554, line: 209, type: !11236, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18621 = !DILocalVariable(name: "p", arg: 1, scope: !18620, file: !18554, line: 209, type: !9298)
!18622 = !DILocation(line: 209, column: 53, scope: !18620)
!18623 = !DILocation(line: 211, column: 1, scope: !18620)
!18624 = distinct !DISubprogram(name: "mlxsw_sp2_get_stats", scope: !18554, file: !18554, line: 213, type: !11240, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18625 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !18624, file: !18554, line: 213, type: !10715)
!18626 = !DILocation(line: 213, column: 62, scope: !18624)
!18627 = !DILocalVariable(name: "data", arg: 2, scope: !18624, file: !18554, line: 214, type: !3933)
!18628 = !DILocation(line: 214, column: 17, scope: !18624)
!18629 = !DILocalVariable(name: "data_index", arg: 3, scope: !18624, file: !18554, line: 214, type: !7)
!18630 = !DILocation(line: 214, column: 27, scope: !18624)
!18631 = !DILocation(line: 216, column: 1, scope: !18624)
!18632 = distinct !DISubprogram(name: "mlxsw_sp_ptp_get_ts_info_noptp", scope: !18554, file: !18554, line: 21, type: !18633, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18633 = !DISubroutineType(types: !18634)
!18634 = !{!7, !9138}
!18635 = !DILocalVariable(name: "info", arg: 1, scope: !18632, file: !18554, line: 21, type: !9138)
!18636 = !DILocation(line: 21, column: 74, scope: !18632)
!18637 = !DILocation(line: 23, column: 2, scope: !18632)
!18638 = !DILocation(line: 23, column: 8, scope: !18632)
!18639 = !DILocation(line: 23, column: 24, scope: !18632)
!18640 = !DILocation(line: 25, column: 2, scope: !18632)
!18641 = !DILocation(line: 25, column: 8, scope: !18632)
!18642 = !DILocation(line: 25, column: 18, scope: !18632)
!18643 = !DILocation(line: 26, column: 2, scope: !18632)
!18644 = distinct !DISubprogram(name: "mlxsw_sp_base_mac_get", scope: !3, file: !3, line: 279, type: !11250, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18645 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !18644, file: !3, line: 279, type: !10721)
!18646 = !DILocation(line: 279, column: 51, scope: !18644)
!18647 = !DILocalVariable(name: "spad_pl", scope: !18644, file: !3, line: 281, type: !428)
!18648 = !DILocation(line: 281, column: 7, scope: !18644)
!18649 = !DILocalVariable(name: "err", scope: !18644, file: !3, line: 282, type: !7)
!18650 = !DILocation(line: 282, column: 6, scope: !18644)
!18651 = !DILocation(line: 284, column: 24, scope: !18644)
!18652 = !DILocation(line: 284, column: 34, scope: !18644)
!18653 = !DILocation(line: 284, column: 57, scope: !18644)
!18654 = !DILocation(line: 284, column: 8, scope: !18644)
!18655 = !DILocation(line: 284, column: 6, scope: !18644)
!18656 = !DILocation(line: 285, column: 6, scope: !18657)
!18657 = distinct !DILexicalBlock(scope: !18644, file: !3, line: 285, column: 6)
!18658 = !DILocation(line: 285, column: 6, scope: !18644)
!18659 = !DILocation(line: 286, column: 10, scope: !18657)
!18660 = !DILocation(line: 286, column: 3, scope: !18657)
!18661 = !DILocation(line: 287, column: 38, scope: !18644)
!18662 = !DILocation(line: 287, column: 47, scope: !18644)
!18663 = !DILocation(line: 287, column: 57, scope: !18644)
!18664 = !DILocation(line: 287, column: 2, scope: !18644)
!18665 = !DILocation(line: 288, column: 2, scope: !18644)
!18666 = !DILocation(line: 289, column: 1, scope: !18644)
!18667 = distinct !DISubprogram(name: "mlxsw_sp_traps_init", scope: !3, file: !3, line: 2360, type: !11250, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18668 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !18667, file: !3, line: 2360, type: !10721)
!18669 = !DILocation(line: 2360, column: 49, scope: !18667)
!18670 = !DILocalVariable(name: "trap", scope: !18667, file: !3, line: 2362, type: !10874)
!18671 = !DILocation(line: 2362, column: 24, scope: !18667)
!18672 = !DILocalVariable(name: "max_policers", scope: !18667, file: !3, line: 2363, type: !492)
!18673 = !DILocation(line: 2363, column: 6, scope: !18667)
!18674 = !DILocalVariable(name: "err", scope: !18667, file: !3, line: 2364, type: !7)
!18675 = !DILocation(line: 2364, column: 6, scope: !18667)
!18676 = !DILocation(line: 2366, column: 7, scope: !18677)
!18677 = distinct !DILexicalBlock(scope: !18667, file: !3, line: 2366, column: 6)
!18678 = !DILocation(line: 2366, column: 6, scope: !18667)
!18679 = !DILocation(line: 2367, column: 3, scope: !18677)
!18680 = !DILocation(line: 2368, column: 17, scope: !18667)
!18681 = !DILocation(line: 2368, column: 15, scope: !18667)
!18682 = !DILocation(line: 2369, column: 17, scope: !18667)
!18683 = !DILocation(line: 2369, column: 9, scope: !18667)
!18684 = !DILocation(line: 2369, column: 7, scope: !18667)
!18685 = !DILocation(line: 2371, column: 7, scope: !18686)
!18686 = distinct !DILexicalBlock(scope: !18667, file: !3, line: 2371, column: 6)
!18687 = !DILocation(line: 2371, column: 6, scope: !18667)
!18688 = !DILocation(line: 2372, column: 3, scope: !18686)
!18689 = !DILocation(line: 2373, column: 23, scope: !18667)
!18690 = !DILocation(line: 2373, column: 2, scope: !18667)
!18691 = !DILocation(line: 2373, column: 8, scope: !18667)
!18692 = !DILocation(line: 2373, column: 21, scope: !18667)
!18693 = !DILocation(line: 2374, column: 19, scope: !18667)
!18694 = !DILocation(line: 2374, column: 2, scope: !18667)
!18695 = !DILocation(line: 2374, column: 12, scope: !18667)
!18696 = !DILocation(line: 2374, column: 17, scope: !18667)
!18697 = !DILocation(line: 2376, column: 34, scope: !18667)
!18698 = !DILocation(line: 2376, column: 44, scope: !18667)
!18699 = !DILocation(line: 2376, column: 8, scope: !18667)
!18700 = !DILocation(line: 2376, column: 6, scope: !18667)
!18701 = !DILocation(line: 2377, column: 6, scope: !18702)
!18702 = distinct !DILexicalBlock(scope: !18667, file: !3, line: 2377, column: 6)
!18703 = !DILocation(line: 2377, column: 6, scope: !18667)
!18704 = !DILocation(line: 2378, column: 3, scope: !18702)
!18705 = !DILocation(line: 2380, column: 33, scope: !18667)
!18706 = !DILocation(line: 2380, column: 43, scope: !18667)
!18707 = !DILocation(line: 2380, column: 8, scope: !18667)
!18708 = !DILocation(line: 2380, column: 6, scope: !18667)
!18709 = !DILocation(line: 2381, column: 6, scope: !18710)
!18710 = distinct !DILexicalBlock(scope: !18667, file: !3, line: 2381, column: 6)
!18711 = !DILocation(line: 2381, column: 6, scope: !18667)
!18712 = !DILocation(line: 2382, column: 3, scope: !18710)
!18713 = !DILocation(line: 2384, column: 32, scope: !18667)
!18714 = !DILocation(line: 2384, column: 8, scope: !18667)
!18715 = !DILocation(line: 2384, column: 6, scope: !18667)
!18716 = !DILocation(line: 2386, column: 6, scope: !18717)
!18717 = distinct !DILexicalBlock(scope: !18667, file: !3, line: 2386, column: 6)
!18718 = !DILocation(line: 2386, column: 6, scope: !18667)
!18719 = !DILocation(line: 2387, column: 3, scope: !18717)
!18720 = !DILocation(line: 2389, column: 32, scope: !18667)
!18721 = !DILocation(line: 2389, column: 42, scope: !18667)
!18722 = !DILocation(line: 2389, column: 52, scope: !18667)
!18723 = !DILocation(line: 2390, column: 11, scope: !18667)
!18724 = !DILocation(line: 2390, column: 21, scope: !18667)
!18725 = !DILocation(line: 2389, column: 8, scope: !18667)
!18726 = !DILocation(line: 2389, column: 6, scope: !18667)
!18727 = !DILocation(line: 2391, column: 6, scope: !18728)
!18728 = distinct !DILexicalBlock(scope: !18667, file: !3, line: 2391, column: 6)
!18729 = !DILocation(line: 2391, column: 6, scope: !18667)
!18730 = !DILocation(line: 2392, column: 3, scope: !18728)
!18731 = !DILocation(line: 2394, column: 2, scope: !18667)
!18732 = !DILabel(scope: !18667, name: "err_extra_traps_init", file: !3, line: 2396)
!18733 = !DILocation(line: 2396, column: 1, scope: !18667)
!18734 = !DILocation(line: 2397, column: 28, scope: !18667)
!18735 = !DILocation(line: 2397, column: 2, scope: !18667)
!18736 = !DILabel(scope: !18667, name: "err_traps_register", file: !3, line: 2399)
!18737 = !DILocation(line: 2399, column: 1, scope: !18667)
!18738 = !DILabel(scope: !18667, name: "err_trap_groups_set", file: !3, line: 2400)
!18739 = !DILocation(line: 2400, column: 1, scope: !18667)
!18740 = !DILabel(scope: !18667, name: "err_cpu_policers_set", file: !3, line: 2401)
!18741 = !DILocation(line: 2401, column: 1, scope: !18667)
!18742 = !DILocation(line: 2402, column: 8, scope: !18667)
!18743 = !DILocation(line: 2402, column: 2, scope: !18667)
!18744 = !DILocation(line: 2403, column: 9, scope: !18667)
!18745 = !DILocation(line: 2403, column: 2, scope: !18667)
!18746 = !DILocation(line: 2404, column: 1, scope: !18667)
!18747 = distinct !DISubprogram(name: "mlxsw_sp_lag_init", scope: !3, file: !3, line: 2417, type: !11250, scopeLine: 2418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18748 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !18747, file: !3, line: 2417, type: !10721)
!18749 = !DILocation(line: 2417, column: 47, scope: !18747)
!18750 = !DILocalVariable(name: "slcr_pl", scope: !18747, file: !3, line: 2419, type: !428)
!18751 = !DILocation(line: 2419, column: 7, scope: !18747)
!18752 = !DILocalVariable(name: "seed", scope: !18747, file: !3, line: 2420, type: !862)
!18753 = !DILocation(line: 2420, column: 6, scope: !18747)
!18754 = !DILocalVariable(name: "err", scope: !18747, file: !3, line: 2421, type: !7)
!18755 = !DILocation(line: 2421, column: 6, scope: !18747)
!18756 = !DILocation(line: 2423, column: 15, scope: !18747)
!18757 = !DILocation(line: 2423, column: 25, scope: !18747)
!18758 = !DILocation(line: 2423, column: 9, scope: !18747)
!18759 = !DILocation(line: 2423, column: 7, scope: !18747)
!18760 = !DILocation(line: 2425, column: 22, scope: !18747)
!18761 = !DILocation(line: 2433, column: 43, scope: !18747)
!18762 = !DILocation(line: 2425, column: 2, scope: !18747)
!18763 = !DILocation(line: 2434, column: 24, scope: !18747)
!18764 = !DILocation(line: 2434, column: 34, scope: !18747)
!18765 = !DILocation(line: 2434, column: 57, scope: !18747)
!18766 = !DILocation(line: 2434, column: 8, scope: !18747)
!18767 = !DILocation(line: 2434, column: 6, scope: !18747)
!18768 = !DILocation(line: 2435, column: 6, scope: !18769)
!18769 = distinct !DILexicalBlock(scope: !18747, file: !3, line: 2435, column: 6)
!18770 = !DILocation(line: 2435, column: 6, scope: !18747)
!18771 = !DILocation(line: 2436, column: 10, scope: !18769)
!18772 = !DILocation(line: 2436, column: 3, scope: !18769)
!18773 = !DILocation(line: 2438, column: 7, scope: !18774)
!18774 = distinct !DILexicalBlock(scope: !18747, file: !3, line: 2438, column: 6)
!18775 = !DILocation(line: 2438, column: 53, scope: !18774)
!18776 = !DILocation(line: 2439, column: 7, scope: !18774)
!18777 = !DILocation(line: 2438, column: 6, scope: !18747)
!18778 = !DILocation(line: 2440, column: 3, scope: !18774)
!18779 = !DILocation(line: 2442, column: 27, scope: !18747)
!18780 = !DILocation(line: 2442, column: 19, scope: !18747)
!18781 = !DILocation(line: 2442, column: 2, scope: !18747)
!18782 = !DILocation(line: 2442, column: 12, scope: !18747)
!18783 = !DILocation(line: 2442, column: 17, scope: !18747)
!18784 = !DILocation(line: 2445, column: 7, scope: !18785)
!18785 = distinct !DILexicalBlock(scope: !18747, file: !3, line: 2445, column: 6)
!18786 = !DILocation(line: 2445, column: 17, scope: !18785)
!18787 = !DILocation(line: 2445, column: 6, scope: !18747)
!18788 = !DILocation(line: 2446, column: 3, scope: !18785)
!18789 = !DILocation(line: 2448, column: 2, scope: !18747)
!18790 = !DILocation(line: 2449, column: 1, scope: !18747)
!18791 = distinct !DISubprogram(name: "mlxsw_sp_netdevice_event", scope: !3, file: !3, line: 4295, type: !2175, scopeLine: 4297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18792 = !DILocalVariable(name: "nb", arg: 1, scope: !18791, file: !3, line: 4295, type: !2169)
!18793 = !DILocation(line: 4295, column: 60, scope: !18791)
!18794 = !DILocalVariable(name: "event", arg: 2, scope: !18791, file: !3, line: 4296, type: !473)
!18795 = !DILocation(line: 4296, column: 23, scope: !18791)
!18796 = !DILocalVariable(name: "ptr", arg: 3, scope: !18791, file: !3, line: 4296, type: !726)
!18797 = !DILocation(line: 4296, column: 36, scope: !18791)
!18798 = !DILocalVariable(name: "dev", scope: !18791, file: !3, line: 4298, type: !451)
!18799 = !DILocation(line: 4298, column: 21, scope: !18791)
!18800 = !DILocation(line: 4298, column: 55, scope: !18791)
!18801 = !DILocation(line: 4298, column: 27, scope: !18791)
!18802 = !DILocalVariable(name: "span_entry", scope: !18791, file: !3, line: 4299, type: !18803)
!18803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18804, size: 64)
!18804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_span_entry", file: !11246, line: 54, size: 704, elements: !18805)
!18805 = !{!18806, !18807, !18838, !18839, !18840}
!18806 = !DIDerivedType(tag: DW_TAG_member, name: "to_dev", scope: !18804, file: !11246, line: 55, baseType: !3023, size: 64)
!18807 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !18804, file: !11246, line: 56, baseType: !18808, size: 64, offset: 64)
!18808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18809, size: 64)
!18809 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !18810)
!18810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_span_entry_ops", file: !11246, line: 62, size: 256, elements: !18811)
!18811 = !{!18812, !18814, !18830, !18834}
!18812 = !DIDerivedType(tag: DW_TAG_member, name: "can_handle", scope: !18810, file: !11246, line: 63, baseType: !18813, size: 64)
!18813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14728, size: 64)
!18814 = !DIDerivedType(tag: DW_TAG_member, name: "parms_set", scope: !18810, file: !11246, line: 64, baseType: !18815, size: 64, offset: 64)
!18815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18816, size: 64)
!18816 = !DISubroutineType(types: !18817)
!18817 = !{!7, !10721, !3023, !18818}
!18818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18819, size: 64)
!18819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_sp_span_parms", file: !11246, line: 16, size: 512, elements: !18820)
!18820 = !{!18821, !18822, !18823, !18824, !18825, !18826, !18827, !18828, !18829}
!18821 = !DIDerivedType(tag: DW_TAG_member, name: "dest_port", scope: !18819, file: !11246, line: 17, baseType: !10715, size: 64)
!18822 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !18819, file: !11246, line: 18, baseType: !14, size: 32, offset: 64)
!18823 = !DIDerivedType(tag: DW_TAG_member, name: "dmac", scope: !18819, file: !11246, line: 19, baseType: !9033, size: 48, offset: 96)
!18824 = !DIDerivedType(tag: DW_TAG_member, name: "smac", scope: !18819, file: !11246, line: 20, baseType: !9033, size: 48, offset: 144)
!18825 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !18819, file: !11246, line: 21, baseType: !10832, size: 128, offset: 192)
!18826 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !18819, file: !11246, line: 22, baseType: !10832, size: 128, offset: 320)
!18827 = !DIDerivedType(tag: DW_TAG_member, name: "vid", scope: !18819, file: !11246, line: 23, baseType: !1193, size: 16, offset: 448)
!18828 = !DIDerivedType(tag: DW_TAG_member, name: "policer_id", scope: !18819, file: !11246, line: 24, baseType: !1193, size: 16, offset: 464)
!18829 = !DIDerivedType(tag: DW_TAG_member, name: "policer_enable", scope: !18819, file: !11246, line: 25, baseType: !696, size: 8, offset: 480)
!18830 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !18810, file: !11246, line: 67, baseType: !18831, size: 64, offset: 128)
!18831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18832, size: 64)
!18832 = !DISubroutineType(types: !18833)
!18833 = !{!7, !18803, !18819}
!18834 = !DIDerivedType(tag: DW_TAG_member, name: "deconfigure", scope: !18810, file: !11246, line: 69, baseType: !18835, size: 64, offset: 192)
!18835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18836, size: 64)
!18836 = !DISubroutineType(types: !18837)
!18837 = !{null, !18803}
!18838 = !DIDerivedType(tag: DW_TAG_member, name: "parms", scope: !18804, file: !11246, line: 57, baseType: !18819, size: 512, offset: 128)
!18839 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !18804, file: !11246, line: 58, baseType: !1426, size: 32, offset: 640)
!18840 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !18804, file: !11246, line: 59, baseType: !7, size: 32, offset: 672)
!18841 = !DILocation(line: 4299, column: 30, scope: !18791)
!18842 = !DILocalVariable(name: "mlxsw_sp", scope: !18791, file: !3, line: 4300, type: !10721)
!18843 = !DILocation(line: 4300, column: 19, scope: !18791)
!18844 = !DILocalVariable(name: "err", scope: !18791, file: !3, line: 4301, type: !7)
!18845 = !DILocation(line: 4301, column: 6, scope: !18791)
!18846 = !DILocalVariable(name: "__mptr", scope: !18847, file: !3, line: 4303, type: !726)
!18847 = distinct !DILexicalBlock(scope: !18791, file: !3, line: 4303, column: 13)
!18848 = !DILocation(line: 4303, column: 13, scope: !18847)
!18849 = !DILocation(line: 4303, column: 13, scope: !18850)
!18850 = distinct !DILexicalBlock(scope: !18847, file: !3, line: 4303, column: 13)
!18851 = !DILocation(line: 4303, column: 11, scope: !18791)
!18852 = !DILocation(line: 4304, column: 6, scope: !18853)
!18853 = distinct !DILexicalBlock(scope: !18791, file: !3, line: 4304, column: 6)
!18854 = !DILocation(line: 4304, column: 12, scope: !18853)
!18855 = !DILocation(line: 4304, column: 6, scope: !18791)
!18856 = !DILocation(line: 4305, column: 49, scope: !18857)
!18857 = distinct !DILexicalBlock(scope: !18853, file: !3, line: 4304, column: 34)
!18858 = !DILocation(line: 4305, column: 59, scope: !18857)
!18859 = !DILocation(line: 4305, column: 16, scope: !18857)
!18860 = !DILocation(line: 4305, column: 14, scope: !18857)
!18861 = !DILocation(line: 4306, column: 7, scope: !18862)
!18862 = distinct !DILexicalBlock(scope: !18857, file: !3, line: 4306, column: 7)
!18863 = !DILocation(line: 4306, column: 7, scope: !18857)
!18864 = !DILocation(line: 4307, column: 35, scope: !18862)
!18865 = !DILocation(line: 4307, column: 45, scope: !18862)
!18866 = !DILocation(line: 4307, column: 4, scope: !18862)
!18867 = !DILocation(line: 4308, column: 2, scope: !18857)
!18868 = !DILocation(line: 4309, column: 23, scope: !18791)
!18869 = !DILocation(line: 4309, column: 2, scope: !18791)
!18870 = !DILocation(line: 4311, column: 21, scope: !18871)
!18871 = distinct !DILexicalBlock(scope: !18791, file: !3, line: 4311, column: 6)
!18872 = !DILocation(line: 4311, column: 6, scope: !18871)
!18873 = !DILocation(line: 4311, column: 6, scope: !18791)
!18874 = !DILocation(line: 4312, column: 40, scope: !18871)
!18875 = !DILocation(line: 4312, column: 50, scope: !18871)
!18876 = !DILocation(line: 4312, column: 55, scope: !18871)
!18877 = !DILocation(line: 4312, column: 62, scope: !18871)
!18878 = !DILocation(line: 4312, column: 9, scope: !18871)
!18879 = !DILocation(line: 4312, column: 7, scope: !18871)
!18880 = !DILocation(line: 4312, column: 3, scope: !18871)
!18881 = !DILocation(line: 4313, column: 33, scope: !18882)
!18882 = distinct !DILexicalBlock(scope: !18791, file: !3, line: 4313, column: 6)
!18883 = !DILocation(line: 4313, column: 43, scope: !18882)
!18884 = !DILocation(line: 4313, column: 6, scope: !18882)
!18885 = !DILocation(line: 4313, column: 6, scope: !18791)
!18886 = !DILocation(line: 4314, column: 42, scope: !18882)
!18887 = !DILocation(line: 4314, column: 52, scope: !18882)
!18888 = !DILocation(line: 4315, column: 14, scope: !18882)
!18889 = !DILocation(line: 4315, column: 21, scope: !18882)
!18890 = !DILocation(line: 4314, column: 9, scope: !18882)
!18891 = !DILocation(line: 4314, column: 7, scope: !18882)
!18892 = !DILocation(line: 4314, column: 3, scope: !18882)
!18893 = !DILocation(line: 4316, column: 38, scope: !18894)
!18894 = distinct !DILexicalBlock(scope: !18882, file: !3, line: 4316, column: 11)
!18895 = !DILocation(line: 4316, column: 48, scope: !18894)
!18896 = !DILocation(line: 4316, column: 11, scope: !18894)
!18897 = !DILocation(line: 4316, column: 11, scope: !18882)
!18898 = !DILocation(line: 4317, column: 42, scope: !18894)
!18899 = !DILocation(line: 4317, column: 52, scope: !18894)
!18900 = !DILocation(line: 4318, column: 14, scope: !18894)
!18901 = !DILocation(line: 4318, column: 21, scope: !18894)
!18902 = !DILocation(line: 4317, column: 9, scope: !18894)
!18903 = !DILocation(line: 4317, column: 7, scope: !18894)
!18904 = !DILocation(line: 4317, column: 3, scope: !18894)
!18905 = !DILocation(line: 4319, column: 11, scope: !18906)
!18906 = distinct !DILexicalBlock(scope: !18894, file: !3, line: 4319, column: 11)
!18907 = !DILocation(line: 4319, column: 17, scope: !18906)
!18908 = !DILocation(line: 4319, column: 42, scope: !18906)
!18909 = !DILocation(line: 4320, column: 4, scope: !18906)
!18910 = !DILocation(line: 4320, column: 10, scope: !18906)
!18911 = !DILocation(line: 4320, column: 31, scope: !18906)
!18912 = !DILocation(line: 4321, column: 4, scope: !18906)
!18913 = !DILocation(line: 4321, column: 10, scope: !18906)
!18914 = !DILocation(line: 4319, column: 11, scope: !18894)
!18915 = !DILocation(line: 4322, column: 46, scope: !18906)
!18916 = !DILocation(line: 4322, column: 51, scope: !18906)
!18917 = !DILocation(line: 4322, column: 58, scope: !18906)
!18918 = !DILocation(line: 4322, column: 9, scope: !18906)
!18919 = !DILocation(line: 4322, column: 7, scope: !18906)
!18920 = !DILocation(line: 4322, column: 3, scope: !18906)
!18921 = !DILocation(line: 4323, column: 33, scope: !18922)
!18922 = distinct !DILexicalBlock(scope: !18906, file: !3, line: 4323, column: 11)
!18923 = !DILocation(line: 4323, column: 40, scope: !18922)
!18924 = !DILocation(line: 4323, column: 11, scope: !18922)
!18925 = !DILocation(line: 4323, column: 11, scope: !18906)
!18926 = !DILocation(line: 4324, column: 38, scope: !18922)
!18927 = !DILocation(line: 4324, column: 43, scope: !18922)
!18928 = !DILocation(line: 4324, column: 50, scope: !18922)
!18929 = !DILocation(line: 4324, column: 9, scope: !18922)
!18930 = !DILocation(line: 4324, column: 7, scope: !18922)
!18931 = !DILocation(line: 4324, column: 3, scope: !18922)
!18932 = !DILocation(line: 4325, column: 35, scope: !18933)
!18933 = distinct !DILexicalBlock(scope: !18922, file: !3, line: 4325, column: 11)
!18934 = !DILocation(line: 4325, column: 11, scope: !18933)
!18935 = !DILocation(line: 4325, column: 11, scope: !18922)
!18936 = !DILocation(line: 4326, column: 39, scope: !18933)
!18937 = !DILocation(line: 4326, column: 44, scope: !18933)
!18938 = !DILocation(line: 4326, column: 49, scope: !18933)
!18939 = !DILocation(line: 4326, column: 56, scope: !18933)
!18940 = !DILocation(line: 4326, column: 9, scope: !18933)
!18941 = !DILocation(line: 4326, column: 7, scope: !18933)
!18942 = !DILocation(line: 4326, column: 3, scope: !18933)
!18943 = !DILocation(line: 4327, column: 31, scope: !18944)
!18944 = distinct !DILexicalBlock(scope: !18933, file: !3, line: 4327, column: 11)
!18945 = !DILocation(line: 4327, column: 11, scope: !18944)
!18946 = !DILocation(line: 4327, column: 11, scope: !18933)
!18947 = !DILocation(line: 4328, column: 38, scope: !18944)
!18948 = !DILocation(line: 4328, column: 43, scope: !18944)
!18949 = !DILocation(line: 4328, column: 50, scope: !18944)
!18950 = !DILocation(line: 4328, column: 9, scope: !18944)
!18951 = !DILocation(line: 4328, column: 7, scope: !18944)
!18952 = !DILocation(line: 4328, column: 3, scope: !18944)
!18953 = !DILocation(line: 4329, column: 23, scope: !18954)
!18954 = distinct !DILexicalBlock(scope: !18944, file: !3, line: 4329, column: 11)
!18955 = !DILocation(line: 4329, column: 11, scope: !18954)
!18956 = !DILocation(line: 4329, column: 11, scope: !18944)
!18957 = !DILocation(line: 4330, column: 39, scope: !18954)
!18958 = !DILocation(line: 4330, column: 44, scope: !18954)
!18959 = !DILocation(line: 4330, column: 51, scope: !18954)
!18960 = !DILocation(line: 4330, column: 9, scope: !18954)
!18961 = !DILocation(line: 4330, column: 7, scope: !18954)
!18962 = !DILocation(line: 4330, column: 3, scope: !18954)
!18963 = !DILocation(line: 4331, column: 34, scope: !18964)
!18964 = distinct !DILexicalBlock(scope: !18954, file: !3, line: 4331, column: 11)
!18965 = !DILocation(line: 4331, column: 11, scope: !18964)
!18966 = !DILocation(line: 4331, column: 11, scope: !18954)
!18967 = !DILocation(line: 4332, column: 41, scope: !18964)
!18968 = !DILocation(line: 4332, column: 46, scope: !18964)
!18969 = !DILocation(line: 4332, column: 53, scope: !18964)
!18970 = !DILocation(line: 4332, column: 9, scope: !18964)
!18971 = !DILocation(line: 4332, column: 7, scope: !18964)
!18972 = !DILocation(line: 4332, column: 3, scope: !18964)
!18973 = !DILocation(line: 4333, column: 28, scope: !18974)
!18974 = distinct !DILexicalBlock(scope: !18964, file: !3, line: 4333, column: 11)
!18975 = !DILocation(line: 4333, column: 11, scope: !18974)
!18976 = !DILocation(line: 4333, column: 11, scope: !18964)
!18977 = !DILocation(line: 4334, column: 42, scope: !18974)
!18978 = !DILocation(line: 4334, column: 47, scope: !18974)
!18979 = !DILocation(line: 4334, column: 54, scope: !18974)
!18980 = !DILocation(line: 4334, column: 9, scope: !18974)
!18981 = !DILocation(line: 4334, column: 7, scope: !18974)
!18982 = !DILocation(line: 4334, column: 3, scope: !18974)
!18983 = !DILocation(line: 4336, column: 29, scope: !18791)
!18984 = !DILocation(line: 4336, column: 9, scope: !18791)
!18985 = !DILocation(line: 4336, column: 2, scope: !18791)
!18986 = distinct !DISubprogram(name: "mlxsw_sp_net", scope: !10118, file: !10118, line: 1258, type: !18987, scopeLine: 1259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18987 = !DISubroutineType(types: !18988)
!18988 = !{!2116, !10721}
!18989 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !18986, file: !10118, line: 1258, type: !10721)
!18990 = !DILocation(line: 1258, column: 57, scope: !18986)
!18991 = !DILocation(line: 1260, column: 24, scope: !18986)
!18992 = !DILocation(line: 1260, column: 34, scope: !18986)
!18993 = !DILocation(line: 1260, column: 9, scope: !18986)
!18994 = !DILocation(line: 1260, column: 2, scope: !18986)
!18995 = distinct !DISubprogram(name: "mlxsw_sp_port_module_info_init", scope: !3, file: !3, line: 1777, type: !11250, scopeLine: 1778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!18996 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !18995, file: !3, line: 1777, type: !10721)
!18997 = !DILocation(line: 1777, column: 60, scope: !18995)
!18998 = !DILocalVariable(name: "max_ports", scope: !18995, file: !3, line: 1779, type: !14)
!18999 = !DILocation(line: 1779, column: 15, scope: !18995)
!19000 = !DILocation(line: 1779, column: 48, scope: !18995)
!19001 = !DILocation(line: 1779, column: 58, scope: !18995)
!19002 = !DILocation(line: 1779, column: 27, scope: !18995)
!19003 = !DILocalVariable(name: "port_mapping", scope: !18995, file: !3, line: 1780, type: !10763)
!19004 = !DILocation(line: 1780, column: 31, scope: !18995)
!19005 = !DILocalVariable(name: "i", scope: !18995, file: !3, line: 1781, type: !7)
!19006 = !DILocation(line: 1781, column: 6, scope: !18995)
!19007 = !DILocalVariable(name: "err", scope: !18995, file: !3, line: 1782, type: !7)
!19008 = !DILocation(line: 1782, column: 6, scope: !18995)
!19009 = !DILocation(line: 1784, column: 35, scope: !18995)
!19010 = !DILocation(line: 1784, column: 27, scope: !18995)
!19011 = !DILocation(line: 1784, column: 2, scope: !18995)
!19012 = !DILocation(line: 1784, column: 12, scope: !18995)
!19013 = !DILocation(line: 1784, column: 25, scope: !18995)
!19014 = !DILocation(line: 1787, column: 7, scope: !19015)
!19015 = distinct !DILexicalBlock(scope: !18995, file: !3, line: 1787, column: 6)
!19016 = !DILocation(line: 1787, column: 17, scope: !19015)
!19017 = !DILocation(line: 1787, column: 6, scope: !18995)
!19018 = !DILocation(line: 1788, column: 3, scope: !19015)
!19019 = !DILocation(line: 1790, column: 9, scope: !19020)
!19020 = distinct !DILexicalBlock(scope: !18995, file: !3, line: 1790, column: 2)
!19021 = !DILocation(line: 1790, column: 7, scope: !19020)
!19022 = !DILocation(line: 1790, column: 14, scope: !19023)
!19023 = distinct !DILexicalBlock(scope: !19020, file: !3, line: 1790, column: 2)
!19024 = !DILocation(line: 1790, column: 18, scope: !19023)
!19025 = !DILocation(line: 1790, column: 16, scope: !19023)
!19026 = !DILocation(line: 1790, column: 2, scope: !19020)
!19027 = !DILocation(line: 1791, column: 39, scope: !19028)
!19028 = distinct !DILexicalBlock(scope: !19023, file: !3, line: 1790, column: 34)
!19029 = !DILocation(line: 1791, column: 49, scope: !19028)
!19030 = !DILocation(line: 1791, column: 9, scope: !19028)
!19031 = !DILocation(line: 1791, column: 7, scope: !19028)
!19032 = !DILocation(line: 1792, column: 7, scope: !19033)
!19033 = distinct !DILexicalBlock(scope: !19028, file: !3, line: 1792, column: 7)
!19034 = !DILocation(line: 1792, column: 7, scope: !19028)
!19035 = !DILocation(line: 1793, column: 4, scope: !19033)
!19036 = !DILocation(line: 1794, column: 21, scope: !19037)
!19037 = distinct !DILexicalBlock(scope: !19028, file: !3, line: 1794, column: 7)
!19038 = !DILocation(line: 1794, column: 8, scope: !19037)
!19039 = !DILocation(line: 1794, column: 7, scope: !19028)
!19040 = !DILocation(line: 1795, column: 4, scope: !19037)
!19041 = !DILocation(line: 1797, column: 39, scope: !19028)
!19042 = !DILocation(line: 1797, column: 31, scope: !19028)
!19043 = !DILocation(line: 1797, column: 3, scope: !19028)
!19044 = !DILocation(line: 1797, column: 13, scope: !19028)
!19045 = !DILocation(line: 1797, column: 26, scope: !19028)
!19046 = !DILocation(line: 1797, column: 29, scope: !19028)
!19047 = !DILocation(line: 1800, column: 8, scope: !19048)
!19048 = distinct !DILexicalBlock(scope: !19028, file: !3, line: 1800, column: 7)
!19049 = !DILocation(line: 1800, column: 18, scope: !19048)
!19050 = !DILocation(line: 1800, column: 31, scope: !19048)
!19051 = !DILocation(line: 1800, column: 7, scope: !19028)
!19052 = !DILocation(line: 1801, column: 8, scope: !19053)
!19053 = distinct !DILexicalBlock(scope: !19048, file: !3, line: 1800, column: 35)
!19054 = !DILocation(line: 1802, column: 4, scope: !19053)
!19055 = !DILocation(line: 1804, column: 2, scope: !19028)
!19056 = !DILocation(line: 1790, column: 30, scope: !19023)
!19057 = !DILocation(line: 1790, column: 2, scope: !19023)
!19058 = distinct !{!19058, !19026, !19059}
!19059 = !DILocation(line: 1804, column: 2, scope: !19020)
!19060 = !DILocation(line: 1805, column: 2, scope: !18995)
!19061 = !DILabel(scope: !18995, name: "err_port_module_info_get", file: !3, line: 1807)
!19062 = !DILocation(line: 1807, column: 1, scope: !18995)
!19063 = !DILabel(scope: !18995, name: "err_port_module_info_dup", file: !3, line: 1808)
!19064 = !DILocation(line: 1808, column: 1, scope: !18995)
!19065 = !DILocation(line: 1809, column: 8, scope: !19066)
!19066 = distinct !DILexicalBlock(scope: !18995, file: !3, line: 1809, column: 2)
!19067 = !DILocation(line: 1809, column: 7, scope: !19066)
!19068 = !DILocation(line: 1809, column: 12, scope: !19069)
!19069 = distinct !DILexicalBlock(scope: !19066, file: !3, line: 1809, column: 2)
!19070 = !DILocation(line: 1809, column: 14, scope: !19069)
!19071 = !DILocation(line: 1809, column: 2, scope: !19066)
!19072 = !DILocation(line: 1810, column: 9, scope: !19069)
!19073 = !DILocation(line: 1810, column: 19, scope: !19069)
!19074 = !DILocation(line: 1810, column: 32, scope: !19069)
!19075 = !DILocation(line: 1810, column: 3, scope: !19069)
!19076 = !DILocation(line: 1809, column: 21, scope: !19069)
!19077 = !DILocation(line: 1809, column: 2, scope: !19069)
!19078 = distinct !{!19078, !19071, !19079}
!19079 = !DILocation(line: 1810, column: 34, scope: !19066)
!19080 = !DILocation(line: 1811, column: 8, scope: !18995)
!19081 = !DILocation(line: 1811, column: 18, scope: !18995)
!19082 = !DILocation(line: 1811, column: 2, scope: !18995)
!19083 = !DILocation(line: 1812, column: 9, scope: !18995)
!19084 = !DILocation(line: 1812, column: 2, scope: !18995)
!19085 = !DILocation(line: 1813, column: 1, scope: !18995)
!19086 = distinct !DISubprogram(name: "mlxsw_sp_ports_create", scope: !3, file: !3, line: 1739, type: !11250, scopeLine: 1740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19087 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !19086, file: !3, line: 1739, type: !10721)
!19088 = !DILocation(line: 1739, column: 51, scope: !19086)
!19089 = !DILocalVariable(name: "max_ports", scope: !19086, file: !3, line: 1741, type: !14)
!19090 = !DILocation(line: 1741, column: 15, scope: !19086)
!19091 = !DILocation(line: 1741, column: 48, scope: !19086)
!19092 = !DILocation(line: 1741, column: 58, scope: !19086)
!19093 = !DILocation(line: 1741, column: 27, scope: !19086)
!19094 = !DILocalVariable(name: "port_mapping", scope: !19086, file: !3, line: 1742, type: !10762)
!19095 = !DILocation(line: 1742, column: 32, scope: !19086)
!19096 = !DILocalVariable(name: "alloc_size", scope: !19086, file: !3, line: 1743, type: !750)
!19097 = !DILocation(line: 1743, column: 9, scope: !19086)
!19098 = !DILocalVariable(name: "i", scope: !19086, file: !3, line: 1744, type: !7)
!19099 = !DILocation(line: 1744, column: 6, scope: !19086)
!19100 = !DILocalVariable(name: "err", scope: !19086, file: !3, line: 1745, type: !7)
!19101 = !DILocation(line: 1745, column: 6, scope: !19086)
!19102 = !DILocation(line: 1747, column: 48, scope: !19086)
!19103 = !DILocation(line: 1747, column: 46, scope: !19086)
!19104 = !DILocation(line: 1747, column: 13, scope: !19086)
!19105 = !DILocation(line: 1748, column: 28, scope: !19086)
!19106 = !DILocation(line: 1748, column: 20, scope: !19086)
!19107 = !DILocation(line: 1748, column: 2, scope: !19086)
!19108 = !DILocation(line: 1748, column: 12, scope: !19086)
!19109 = !DILocation(line: 1748, column: 18, scope: !19086)
!19110 = !DILocation(line: 1749, column: 7, scope: !19111)
!19111 = distinct !DILexicalBlock(scope: !19086, file: !3, line: 1749, column: 6)
!19112 = !DILocation(line: 1749, column: 17, scope: !19111)
!19113 = !DILocation(line: 1749, column: 6, scope: !19086)
!19114 = !DILocation(line: 1750, column: 3, scope: !19111)
!19115 = !DILocation(line: 1752, column: 33, scope: !19086)
!19116 = !DILocation(line: 1752, column: 8, scope: !19086)
!19117 = !DILocation(line: 1752, column: 6, scope: !19086)
!19118 = !DILocation(line: 1753, column: 6, scope: !19119)
!19119 = distinct !DILexicalBlock(scope: !19086, file: !3, line: 1753, column: 6)
!19120 = !DILocation(line: 1753, column: 6, scope: !19086)
!19121 = !DILocation(line: 1754, column: 3, scope: !19119)
!19122 = !DILocation(line: 1756, column: 9, scope: !19123)
!19123 = distinct !DILexicalBlock(scope: !19086, file: !3, line: 1756, column: 2)
!19124 = !DILocation(line: 1756, column: 7, scope: !19123)
!19125 = !DILocation(line: 1756, column: 14, scope: !19126)
!19126 = distinct !DILexicalBlock(scope: !19123, file: !3, line: 1756, column: 2)
!19127 = !DILocation(line: 1756, column: 18, scope: !19126)
!19128 = !DILocation(line: 1756, column: 16, scope: !19126)
!19129 = !DILocation(line: 1756, column: 2, scope: !19123)
!19130 = !DILocation(line: 1757, column: 18, scope: !19131)
!19131 = distinct !DILexicalBlock(scope: !19126, file: !3, line: 1756, column: 34)
!19132 = !DILocation(line: 1757, column: 28, scope: !19131)
!19133 = !DILocation(line: 1757, column: 41, scope: !19131)
!19134 = !DILocation(line: 1757, column: 16, scope: !19131)
!19135 = !DILocation(line: 1758, column: 8, scope: !19136)
!19136 = distinct !DILexicalBlock(scope: !19131, file: !3, line: 1758, column: 7)
!19137 = !DILocation(line: 1758, column: 7, scope: !19131)
!19138 = !DILocation(line: 1759, column: 4, scope: !19136)
!19139 = !DILocation(line: 1760, column: 30, scope: !19131)
!19140 = !DILocation(line: 1760, column: 40, scope: !19131)
!19141 = !DILocation(line: 1760, column: 46, scope: !19131)
!19142 = !DILocation(line: 1760, column: 9, scope: !19131)
!19143 = !DILocation(line: 1760, column: 7, scope: !19131)
!19144 = !DILocation(line: 1761, column: 7, scope: !19145)
!19145 = distinct !DILexicalBlock(scope: !19131, file: !3, line: 1761, column: 7)
!19146 = !DILocation(line: 1761, column: 7, scope: !19131)
!19147 = !DILocation(line: 1762, column: 4, scope: !19145)
!19148 = !DILocation(line: 1763, column: 2, scope: !19131)
!19149 = !DILocation(line: 1756, column: 30, scope: !19126)
!19150 = !DILocation(line: 1756, column: 2, scope: !19126)
!19151 = distinct !{!19151, !19129, !19152}
!19152 = !DILocation(line: 1763, column: 2, scope: !19123)
!19153 = !DILocation(line: 1764, column: 2, scope: !19086)
!19154 = !DILabel(scope: !19086, name: "err_port_create", file: !3, line: 1766)
!19155 = !DILocation(line: 1766, column: 1, scope: !19086)
!19156 = !DILocation(line: 1767, column: 8, scope: !19157)
!19157 = distinct !DILexicalBlock(scope: !19086, file: !3, line: 1767, column: 2)
!19158 = !DILocation(line: 1767, column: 7, scope: !19157)
!19159 = !DILocation(line: 1767, column: 12, scope: !19160)
!19160 = distinct !DILexicalBlock(scope: !19157, file: !3, line: 1767, column: 2)
!19161 = !DILocation(line: 1767, column: 14, scope: !19160)
!19162 = !DILocation(line: 1767, column: 2, scope: !19157)
!19163 = !DILocation(line: 1768, column: 29, scope: !19164)
!19164 = distinct !DILexicalBlock(scope: !19160, file: !3, line: 1768, column: 7)
!19165 = !DILocation(line: 1768, column: 39, scope: !19164)
!19166 = !DILocation(line: 1768, column: 7, scope: !19164)
!19167 = !DILocation(line: 1768, column: 7, scope: !19160)
!19168 = !DILocation(line: 1769, column: 25, scope: !19164)
!19169 = !DILocation(line: 1769, column: 35, scope: !19164)
!19170 = !DILocation(line: 1769, column: 4, scope: !19164)
!19171 = !DILocation(line: 1768, column: 40, scope: !19164)
!19172 = !DILocation(line: 1767, column: 21, scope: !19160)
!19173 = !DILocation(line: 1767, column: 2, scope: !19160)
!19174 = distinct !{!19174, !19162, !19175}
!19175 = !DILocation(line: 1769, column: 36, scope: !19157)
!19176 = !DILocation(line: 1770, column: 27, scope: !19086)
!19177 = !DILocation(line: 1770, column: 2, scope: !19086)
!19178 = !DILabel(scope: !19086, name: "err_cpu_port_create", file: !3, line: 1771)
!19179 = !DILocation(line: 1771, column: 1, scope: !19086)
!19180 = !DILocation(line: 1772, column: 8, scope: !19086)
!19181 = !DILocation(line: 1772, column: 18, scope: !19086)
!19182 = !DILocation(line: 1772, column: 2, scope: !19086)
!19183 = !DILocation(line: 1773, column: 2, scope: !19086)
!19184 = !DILocation(line: 1773, column: 12, scope: !19086)
!19185 = !DILocation(line: 1773, column: 18, scope: !19086)
!19186 = !DILocation(line: 1774, column: 9, scope: !19086)
!19187 = !DILocation(line: 1774, column: 2, scope: !19086)
!19188 = !DILocation(line: 1775, column: 1, scope: !19086)
!19189 = distinct !DISubprogram(name: "mlxsw_sp_port_module_info_fini", scope: !3, file: !3, line: 1815, type: !19190, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19190 = !DISubroutineType(types: !19191)
!19191 = !{null, !10721}
!19192 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !19189, file: !3, line: 1815, type: !10721)
!19193 = !DILocation(line: 1815, column: 61, scope: !19189)
!19194 = !DILocalVariable(name: "i", scope: !19189, file: !3, line: 1817, type: !7)
!19195 = !DILocation(line: 1817, column: 6, scope: !19189)
!19196 = !DILocation(line: 1819, column: 9, scope: !19197)
!19197 = distinct !DILexicalBlock(scope: !19189, file: !3, line: 1819, column: 2)
!19198 = !DILocation(line: 1819, column: 7, scope: !19197)
!19199 = !DILocation(line: 1819, column: 14, scope: !19200)
!19200 = distinct !DILexicalBlock(scope: !19197, file: !3, line: 1819, column: 2)
!19201 = !DILocation(line: 1819, column: 39, scope: !19200)
!19202 = !DILocation(line: 1819, column: 49, scope: !19200)
!19203 = !DILocation(line: 1819, column: 18, scope: !19200)
!19204 = !DILocation(line: 1819, column: 16, scope: !19200)
!19205 = !DILocation(line: 1819, column: 2, scope: !19197)
!19206 = !DILocation(line: 1820, column: 9, scope: !19200)
!19207 = !DILocation(line: 1820, column: 19, scope: !19200)
!19208 = !DILocation(line: 1820, column: 32, scope: !19200)
!19209 = !DILocation(line: 1820, column: 3, scope: !19200)
!19210 = !DILocation(line: 1819, column: 57, scope: !19200)
!19211 = !DILocation(line: 1819, column: 2, scope: !19200)
!19212 = distinct !{!19212, !19205, !19213}
!19213 = !DILocation(line: 1820, column: 34, scope: !19197)
!19214 = !DILocation(line: 1821, column: 8, scope: !19189)
!19215 = !DILocation(line: 1821, column: 18, scope: !19189)
!19216 = !DILocation(line: 1821, column: 2, scope: !19189)
!19217 = !DILocation(line: 1822, column: 1, scope: !19189)
!19218 = distinct !DISubprogram(name: "mlxsw_sp_lag_fini", scope: !3, file: !3, line: 2451, type: !19190, scopeLine: 2452, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19219 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !19218, file: !3, line: 2451, type: !10721)
!19220 = !DILocation(line: 2451, column: 48, scope: !19218)
!19221 = !DILocation(line: 2453, column: 8, scope: !19218)
!19222 = !DILocation(line: 2453, column: 18, scope: !19218)
!19223 = !DILocation(line: 2453, column: 2, scope: !19218)
!19224 = !DILocation(line: 2454, column: 1, scope: !19218)
!19225 = distinct !DISubprogram(name: "mlxsw_sp_traps_fini", scope: !3, file: !3, line: 2406, type: !19190, scopeLine: 2407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19226 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !19225, file: !3, line: 2406, type: !10721)
!19227 = !DILocation(line: 2406, column: 50, scope: !19225)
!19228 = !DILocation(line: 2408, column: 28, scope: !19225)
!19229 = !DILocation(line: 2408, column: 38, scope: !19225)
!19230 = !DILocation(line: 2408, column: 48, scope: !19225)
!19231 = !DILocation(line: 2409, column: 7, scope: !19225)
!19232 = !DILocation(line: 2409, column: 17, scope: !19225)
!19233 = !DILocation(line: 2408, column: 2, scope: !19225)
!19234 = !DILocation(line: 2410, column: 28, scope: !19225)
!19235 = !DILocation(line: 2410, column: 2, scope: !19225)
!19236 = !DILocation(line: 2412, column: 8, scope: !19225)
!19237 = !DILocation(line: 2412, column: 18, scope: !19225)
!19238 = !DILocation(line: 2412, column: 2, scope: !19225)
!19239 = !DILocation(line: 2413, column: 1, scope: !19225)
!19240 = distinct !DISubprogram(name: "mlxsw_reg_spad_base_mac_memcpy_from", scope: !10113, file: !10113, line: 70, type: !19241, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19241 = !DISubroutineType(types: !19242)
!19242 = !{null, !453, !733}
!19243 = !DILocalVariable(name: "buf", arg: 1, scope: !19240, file: !10113, line: 70, type: !453)
!19244 = !DILocation(line: 70, column: 1, scope: !19240)
!19245 = !DILocalVariable(name: "dst", arg: 2, scope: !19240, file: !10113, line: 70, type: !733)
!19246 = distinct !DISubprogram(name: "__mlxsw_item_memcpy_from", scope: !10989, file: !10989, line: 178, type: !19247, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19247 = !DISubroutineType(types: !19248)
!19248 = !{null, !453, !733, !14969, !633}
!19249 = !DILocalVariable(name: "buf", arg: 1, scope: !19246, file: !10989, line: 178, type: !453)
!19250 = !DILocation(line: 178, column: 57, scope: !19246)
!19251 = !DILocalVariable(name: "dst", arg: 2, scope: !19246, file: !10989, line: 178, type: !733)
!19252 = !DILocation(line: 178, column: 68, scope: !19246)
!19253 = !DILocalVariable(name: "item", arg: 3, scope: !19246, file: !10989, line: 179, type: !14969)
!19254 = !DILocation(line: 179, column: 35, scope: !19246)
!19255 = !DILocalVariable(name: "index", arg: 4, scope: !19246, file: !10989, line: 180, type: !633)
!19256 = !DILocation(line: 180, column: 25, scope: !19246)
!19257 = !DILocalVariable(name: "offset", scope: !19246, file: !10989, line: 182, type: !14)
!19258 = !DILocation(line: 182, column: 15, scope: !19246)
!19259 = !DILocation(line: 182, column: 44, scope: !19246)
!19260 = !DILocation(line: 182, column: 50, scope: !19246)
!19261 = !DILocation(line: 182, column: 24, scope: !19246)
!19262 = !DILocation(line: 184, column: 9, scope: !19246)
!19263 = !DILocation(line: 184, column: 15, scope: !19246)
!19264 = !DILocation(line: 184, column: 19, scope: !19246)
!19265 = !DILocation(line: 184, column: 28, scope: !19246)
!19266 = !DILocation(line: 184, column: 34, scope: !19246)
!19267 = !DILocation(line: 184, column: 39, scope: !19246)
!19268 = !DILocation(line: 184, column: 2, scope: !19246)
!19269 = !DILocation(line: 185, column: 1, scope: !19246)
!19270 = distinct !DISubprogram(name: "__ab_c_size", scope: !19271, file: !19271, line: 301, type: !19272, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19271 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!19272 = !DISubroutineType(types: !19273)
!19273 = !{!750, !750, !750, !750}
!19274 = !DILocalVariable(name: "a", arg: 1, scope: !19270, file: !19271, line: 301, type: !750)
!19275 = !DILocation(line: 301, column: 54, scope: !19270)
!19276 = !DILocalVariable(name: "b", arg: 2, scope: !19270, file: !19271, line: 301, type: !750)
!19277 = !DILocation(line: 301, column: 64, scope: !19270)
!19278 = !DILocalVariable(name: "c", arg: 3, scope: !19270, file: !19271, line: 301, type: !750)
!19279 = !DILocation(line: 301, column: 74, scope: !19270)
!19280 = !DILocalVariable(name: "bytes", scope: !19270, file: !19271, line: 303, type: !750)
!19281 = !DILocation(line: 303, column: 9, scope: !19270)
!19282 = !DILocalVariable(name: "__a", scope: !19283, file: !19271, line: 305, type: !750)
!19283 = distinct !DILexicalBlock(scope: !19284, file: !19271, line: 305, column: 6)
!19284 = distinct !DILexicalBlock(scope: !19270, file: !19271, line: 305, column: 6)
!19285 = !DILocation(line: 305, column: 6, scope: !19283)
!19286 = !DILocalVariable(name: "__b", scope: !19283, file: !19271, line: 305, type: !750)
!19287 = !DILocalVariable(name: "__d", scope: !19283, file: !19271, line: 305, type: !2007)
!19288 = !DILocation(line: 305, column: 6, scope: !19284)
!19289 = !DILocation(line: 305, column: 6, scope: !19270)
!19290 = !DILocation(line: 306, column: 3, scope: !19284)
!19291 = !DILocalVariable(name: "__a", scope: !19292, file: !19271, line: 307, type: !750)
!19292 = distinct !DILexicalBlock(scope: !19293, file: !19271, line: 307, column: 6)
!19293 = distinct !DILexicalBlock(scope: !19270, file: !19271, line: 307, column: 6)
!19294 = !DILocation(line: 307, column: 6, scope: !19292)
!19295 = !DILocalVariable(name: "__b", scope: !19292, file: !19271, line: 307, type: !750)
!19296 = !DILocalVariable(name: "__d", scope: !19292, file: !19271, line: 307, type: !2007)
!19297 = !DILocation(line: 307, column: 6, scope: !19293)
!19298 = !DILocation(line: 307, column: 6, scope: !19270)
!19299 = !DILocation(line: 308, column: 3, scope: !19293)
!19300 = !DILocation(line: 310, column: 9, scope: !19270)
!19301 = !DILocation(line: 310, column: 2, scope: !19270)
!19302 = !DILocation(line: 311, column: 1, scope: !19270)
!19303 = distinct !DISubprogram(name: "mlxsw_sp_cpu_policers_set", scope: !3, file: !3, line: 2233, type: !12059, scopeLine: 2234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19304 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !19303, file: !3, line: 2233, type: !10727)
!19305 = !DILocation(line: 2233, column: 57, scope: !19303)
!19306 = !DILocalVariable(name: "mlxsw_sp", scope: !19303, file: !3, line: 2235, type: !10721)
!19307 = !DILocation(line: 2235, column: 19, scope: !19303)
!19308 = !DILocation(line: 2235, column: 53, scope: !19303)
!19309 = !DILocation(line: 2235, column: 30, scope: !19303)
!19310 = !DILocalVariable(name: "qpcr_pl", scope: !19303, file: !3, line: 2236, type: !19311)
!19311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 320, elements: !19312)
!19312 = !{!19313}
!19313 = !DISubrange(count: 40)
!19314 = !DILocation(line: 2236, column: 7, scope: !19303)
!19315 = !DILocalVariable(name: "ir_units", scope: !19303, file: !3, line: 2237, type: !10426)
!19316 = !DILocation(line: 2237, column: 31, scope: !19303)
!19317 = !DILocalVariable(name: "max_cpu_policers", scope: !19303, file: !3, line: 2238, type: !7)
!19318 = !DILocation(line: 2238, column: 6, scope: !19303)
!19319 = !DILocalVariable(name: "is_bytes", scope: !19303, file: !3, line: 2239, type: !696)
!19320 = !DILocation(line: 2239, column: 7, scope: !19303)
!19321 = !DILocalVariable(name: "burst_size", scope: !19303, file: !3, line: 2240, type: !1552)
!19322 = !DILocation(line: 2240, column: 5, scope: !19303)
!19323 = !DILocalVariable(name: "rate", scope: !19303, file: !3, line: 2241, type: !862)
!19324 = !DILocation(line: 2241, column: 6, scope: !19303)
!19325 = !DILocalVariable(name: "i", scope: !19303, file: !3, line: 2242, type: !7)
!19326 = !DILocation(line: 2242, column: 6, scope: !19303)
!19327 = !DILocalVariable(name: "err", scope: !19303, file: !3, line: 2242, type: !7)
!19328 = !DILocation(line: 2242, column: 9, scope: !19303)
!19329 = !DILocation(line: 2244, column: 7, scope: !19330)
!19330 = distinct !DILexicalBlock(scope: !19303, file: !3, line: 2244, column: 6)
!19331 = !DILocation(line: 2244, column: 6, scope: !19303)
!19332 = !DILocation(line: 2245, column: 3, scope: !19330)
!19333 = !DILocation(line: 2247, column: 21, scope: !19303)
!19334 = !DILocation(line: 2247, column: 19, scope: !19303)
!19335 = !DILocation(line: 2249, column: 11, scope: !19303)
!19336 = !DILocation(line: 2250, column: 9, scope: !19337)
!19337 = distinct !DILexicalBlock(scope: !19303, file: !3, line: 2250, column: 2)
!19338 = !DILocation(line: 2250, column: 7, scope: !19337)
!19339 = !DILocation(line: 2250, column: 14, scope: !19340)
!19340 = distinct !DILexicalBlock(scope: !19337, file: !3, line: 2250, column: 2)
!19341 = !DILocation(line: 2250, column: 18, scope: !19340)
!19342 = !DILocation(line: 2250, column: 16, scope: !19340)
!19343 = !DILocation(line: 2250, column: 2, scope: !19337)
!19344 = !DILocation(line: 2251, column: 12, scope: !19345)
!19345 = distinct !DILexicalBlock(scope: !19340, file: !3, line: 2250, column: 41)
!19346 = !DILocation(line: 2252, column: 11, scope: !19345)
!19347 = !DILocation(line: 2252, column: 3, scope: !19345)
!19348 = !DILocation(line: 2256, column: 9, scope: !19349)
!19349 = distinct !DILexicalBlock(scope: !19345, file: !3, line: 2252, column: 14)
!19350 = !DILocation(line: 2257, column: 15, scope: !19349)
!19351 = !DILocation(line: 2258, column: 4, scope: !19349)
!19352 = !DILocation(line: 2260, column: 4, scope: !19349)
!19353 = !DILocation(line: 2263, column: 13, scope: !19345)
!19354 = !DILocation(line: 2263, column: 16, scope: !19345)
!19355 = !DILocation(line: 2263, column: 26, scope: !19345)
!19356 = !DILocation(line: 2263, column: 32, scope: !19345)
!19357 = !DILocation(line: 2263, column: 3, scope: !19345)
!19358 = !DILocation(line: 2264, column: 23, scope: !19345)
!19359 = !DILocation(line: 2264, column: 32, scope: !19345)
!19360 = !DILocation(line: 2264, column: 35, scope: !19345)
!19361 = !DILocation(line: 2264, column: 45, scope: !19345)
!19362 = !DILocation(line: 2264, column: 55, scope: !19345)
!19363 = !DILocation(line: 2265, column: 9, scope: !19345)
!19364 = !DILocation(line: 2264, column: 3, scope: !19345)
!19365 = !DILocation(line: 2266, column: 25, scope: !19345)
!19366 = !DILocation(line: 2266, column: 54, scope: !19345)
!19367 = !DILocation(line: 2266, column: 9, scope: !19345)
!19368 = !DILocation(line: 2266, column: 7, scope: !19345)
!19369 = !DILocation(line: 2267, column: 7, scope: !19370)
!19370 = distinct !DILexicalBlock(scope: !19345, file: !3, line: 2267, column: 7)
!19371 = !DILocation(line: 2267, column: 7, scope: !19345)
!19372 = !DILocation(line: 2268, column: 11, scope: !19370)
!19373 = !DILocation(line: 2268, column: 4, scope: !19370)
!19374 = !DILocation(line: 2269, column: 2, scope: !19345)
!19375 = !DILocation(line: 2250, column: 37, scope: !19340)
!19376 = !DILocation(line: 2250, column: 2, scope: !19340)
!19377 = distinct !{!19377, !19343, !19378}
!19378 = !DILocation(line: 2269, column: 2, scope: !19337)
!19379 = !DILocation(line: 2271, column: 2, scope: !19303)
!19380 = !DILocation(line: 2272, column: 1, scope: !19303)
!19381 = distinct !DISubprogram(name: "mlxsw_sp_trap_groups_set", scope: !3, file: !3, line: 2274, type: !12059, scopeLine: 2275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19382 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !19381, file: !3, line: 2274, type: !10727)
!19383 = !DILocation(line: 2274, column: 56, scope: !19381)
!19384 = !DILocalVariable(name: "htgt_pl", scope: !19381, file: !3, line: 2276, type: !4356)
!19385 = !DILocation(line: 2276, column: 7, scope: !19381)
!19386 = !DILocalVariable(name: "i", scope: !19381, file: !3, line: 2277, type: !10442)
!19387 = !DILocation(line: 2277, column: 33, scope: !19381)
!19388 = !DILocalVariable(name: "max_cpu_policers", scope: !19381, file: !3, line: 2278, type: !7)
!19389 = !DILocation(line: 2278, column: 6, scope: !19381)
!19390 = !DILocalVariable(name: "max_trap_groups", scope: !19381, file: !3, line: 2279, type: !7)
!19391 = !DILocation(line: 2279, column: 6, scope: !19381)
!19392 = !DILocalVariable(name: "priority", scope: !19381, file: !3, line: 2280, type: !1552)
!19393 = !DILocation(line: 2280, column: 5, scope: !19381)
!19394 = !DILocalVariable(name: "tc", scope: !19381, file: !3, line: 2280, type: !1552)
!19395 = !DILocation(line: 2280, column: 15, scope: !19381)
!19396 = !DILocalVariable(name: "policer_id", scope: !19381, file: !3, line: 2281, type: !1193)
!19397 = !DILocation(line: 2281, column: 6, scope: !19381)
!19398 = !DILocalVariable(name: "err", scope: !19381, file: !3, line: 2282, type: !7)
!19399 = !DILocation(line: 2282, column: 6, scope: !19381)
!19400 = !DILocation(line: 2284, column: 7, scope: !19401)
!19401 = distinct !DILexicalBlock(scope: !19381, file: !3, line: 2284, column: 6)
!19402 = !DILocation(line: 2284, column: 6, scope: !19381)
!19403 = !DILocation(line: 2285, column: 3, scope: !19401)
!19404 = !DILocation(line: 2287, column: 20, scope: !19381)
!19405 = !DILocation(line: 2287, column: 18, scope: !19381)
!19406 = !DILocation(line: 2288, column: 21, scope: !19381)
!19407 = !DILocation(line: 2288, column: 19, scope: !19381)
!19408 = !DILocation(line: 2290, column: 9, scope: !19409)
!19409 = distinct !DILexicalBlock(scope: !19381, file: !3, line: 2290, column: 2)
!19410 = !DILocation(line: 2290, column: 7, scope: !19409)
!19411 = !DILocation(line: 2290, column: 14, scope: !19412)
!19412 = distinct !DILexicalBlock(scope: !19409, file: !3, line: 2290, column: 2)
!19413 = !DILocation(line: 2290, column: 18, scope: !19412)
!19414 = !DILocation(line: 2290, column: 16, scope: !19412)
!19415 = !DILocation(line: 2290, column: 2, scope: !19409)
!19416 = !DILocation(line: 2291, column: 16, scope: !19417)
!19417 = distinct !DILexicalBlock(scope: !19412, file: !3, line: 2290, column: 40)
!19418 = !DILocation(line: 2291, column: 14, scope: !19417)
!19419 = !DILocation(line: 2292, column: 11, scope: !19417)
!19420 = !DILocation(line: 2292, column: 3, scope: !19417)
!19421 = !DILocation(line: 2296, column: 13, scope: !19422)
!19422 = distinct !DILexicalBlock(scope: !19417, file: !3, line: 2292, column: 14)
!19423 = !DILocation(line: 2297, column: 7, scope: !19422)
!19424 = !DILocation(line: 2298, column: 4, scope: !19422)
!19425 = !DILocation(line: 2300, column: 13, scope: !19422)
!19426 = !DILocation(line: 2301, column: 7, scope: !19422)
!19427 = !DILocation(line: 2302, column: 15, scope: !19422)
!19428 = !DILocation(line: 2303, column: 4, scope: !19422)
!19429 = !DILocation(line: 2305, column: 4, scope: !19422)
!19430 = !DILocation(line: 2308, column: 7, scope: !19431)
!19431 = distinct !DILexicalBlock(scope: !19417, file: !3, line: 2308, column: 7)
!19432 = !DILocation(line: 2308, column: 27, scope: !19431)
!19433 = !DILocation(line: 2308, column: 24, scope: !19431)
!19434 = !DILocation(line: 2308, column: 38, scope: !19431)
!19435 = !DILocation(line: 2309, column: 7, scope: !19431)
!19436 = !DILocation(line: 2309, column: 18, scope: !19431)
!19437 = !DILocation(line: 2308, column: 7, scope: !19417)
!19438 = !DILocation(line: 2310, column: 4, scope: !19431)
!19439 = !DILocation(line: 2312, column: 23, scope: !19417)
!19440 = !DILocation(line: 2312, column: 32, scope: !19417)
!19441 = !DILocation(line: 2312, column: 35, scope: !19417)
!19442 = !DILocation(line: 2312, column: 47, scope: !19417)
!19443 = !DILocation(line: 2312, column: 57, scope: !19417)
!19444 = !DILocation(line: 2312, column: 3, scope: !19417)
!19445 = !DILocation(line: 2313, column: 25, scope: !19417)
!19446 = !DILocation(line: 2313, column: 54, scope: !19417)
!19447 = !DILocation(line: 2313, column: 9, scope: !19417)
!19448 = !DILocation(line: 2313, column: 7, scope: !19417)
!19449 = !DILocation(line: 2314, column: 7, scope: !19450)
!19450 = distinct !DILexicalBlock(scope: !19417, file: !3, line: 2314, column: 7)
!19451 = !DILocation(line: 2314, column: 7, scope: !19417)
!19452 = !DILocation(line: 2315, column: 11, scope: !19450)
!19453 = !DILocation(line: 2315, column: 4, scope: !19450)
!19454 = !DILocation(line: 2316, column: 2, scope: !19417)
!19455 = !DILocation(line: 2290, column: 36, scope: !19412)
!19456 = !DILocation(line: 2290, column: 2, scope: !19412)
!19457 = distinct !{!19457, !19415, !19458}
!19458 = !DILocation(line: 2316, column: 2, scope: !19409)
!19459 = !DILocation(line: 2318, column: 2, scope: !19381)
!19460 = !DILocation(line: 2319, column: 1, scope: !19381)
!19461 = distinct !DISubprogram(name: "mlxsw_sp_traps_register", scope: !3, file: !3, line: 2321, type: !19462, scopeLine: 2324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19462 = !DISubroutineType(types: !19463)
!19463 = !{!7, !10721, !11280, !750}
!19464 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !19461, file: !3, line: 2321, type: !10721)
!19465 = !DILocation(line: 2321, column: 53, scope: !19461)
!19466 = !DILocalVariable(name: "listeners", arg: 2, scope: !19461, file: !3, line: 2322, type: !11280)
!19467 = !DILocation(line: 2322, column: 36, scope: !19461)
!19468 = !DILocalVariable(name: "listeners_count", arg: 3, scope: !19461, file: !3, line: 2323, type: !750)
!19469 = !DILocation(line: 2323, column: 15, scope: !19461)
!19470 = !DILocalVariable(name: "i", scope: !19461, file: !3, line: 2325, type: !7)
!19471 = !DILocation(line: 2325, column: 6, scope: !19461)
!19472 = !DILocalVariable(name: "err", scope: !19461, file: !3, line: 2326, type: !7)
!19473 = !DILocation(line: 2326, column: 6, scope: !19461)
!19474 = !DILocation(line: 2328, column: 9, scope: !19475)
!19475 = distinct !DILexicalBlock(scope: !19461, file: !3, line: 2328, column: 2)
!19476 = !DILocation(line: 2328, column: 7, scope: !19475)
!19477 = !DILocation(line: 2328, column: 14, scope: !19478)
!19478 = distinct !DILexicalBlock(scope: !19475, file: !3, line: 2328, column: 2)
!19479 = !DILocation(line: 2328, column: 18, scope: !19478)
!19480 = !DILocation(line: 2328, column: 16, scope: !19478)
!19481 = !DILocation(line: 2328, column: 2, scope: !19475)
!19482 = !DILocation(line: 2329, column: 34, scope: !19483)
!19483 = distinct !DILexicalBlock(scope: !19478, file: !3, line: 2328, column: 40)
!19484 = !DILocation(line: 2329, column: 44, scope: !19483)
!19485 = !DILocation(line: 2330, column: 14, scope: !19483)
!19486 = !DILocation(line: 2330, column: 24, scope: !19483)
!19487 = !DILocation(line: 2331, column: 13, scope: !19483)
!19488 = !DILocation(line: 2329, column: 9, scope: !19483)
!19489 = !DILocation(line: 2329, column: 7, scope: !19483)
!19490 = !DILocation(line: 2332, column: 7, scope: !19491)
!19491 = distinct !DILexicalBlock(scope: !19483, file: !3, line: 2332, column: 7)
!19492 = !DILocation(line: 2332, column: 7, scope: !19483)
!19493 = !DILocation(line: 2333, column: 4, scope: !19491)
!19494 = !DILocation(line: 2335, column: 2, scope: !19483)
!19495 = !DILocation(line: 2328, column: 36, scope: !19478)
!19496 = !DILocation(line: 2328, column: 2, scope: !19478)
!19497 = distinct !{!19497, !19481, !19498}
!19498 = !DILocation(line: 2335, column: 2, scope: !19475)
!19499 = !DILocation(line: 2336, column: 2, scope: !19461)
!19500 = !DILabel(scope: !19461, name: "err_listener_register", file: !3, line: 2338)
!19501 = !DILocation(line: 2338, column: 1, scope: !19461)
!19502 = !DILocation(line: 2339, column: 8, scope: !19503)
!19503 = distinct !DILexicalBlock(scope: !19461, file: !3, line: 2339, column: 2)
!19504 = !DILocation(line: 2339, column: 7, scope: !19503)
!19505 = !DILocation(line: 2339, column: 12, scope: !19506)
!19506 = distinct !DILexicalBlock(scope: !19503, file: !3, line: 2339, column: 2)
!19507 = !DILocation(line: 2339, column: 14, scope: !19506)
!19508 = !DILocation(line: 2339, column: 2, scope: !19503)
!19509 = !DILocation(line: 2340, column: 30, scope: !19510)
!19510 = distinct !DILexicalBlock(scope: !19506, file: !3, line: 2339, column: 25)
!19511 = !DILocation(line: 2340, column: 40, scope: !19510)
!19512 = !DILocation(line: 2341, column: 10, scope: !19510)
!19513 = !DILocation(line: 2341, column: 20, scope: !19510)
!19514 = !DILocation(line: 2342, column: 9, scope: !19510)
!19515 = !DILocation(line: 2340, column: 3, scope: !19510)
!19516 = !DILocation(line: 2343, column: 2, scope: !19510)
!19517 = !DILocation(line: 2339, column: 21, scope: !19506)
!19518 = !DILocation(line: 2339, column: 2, scope: !19506)
!19519 = distinct !{!19519, !19508, !19520}
!19520 = !DILocation(line: 2343, column: 2, scope: !19503)
!19521 = !DILocation(line: 2344, column: 9, scope: !19461)
!19522 = !DILocation(line: 2344, column: 2, scope: !19461)
!19523 = !DILocation(line: 2345, column: 1, scope: !19461)
!19524 = distinct !DISubprogram(name: "mlxsw_sp_traps_unregister", scope: !3, file: !3, line: 2347, type: !19525, scopeLine: 2350, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19525 = !DISubroutineType(types: !19526)
!19526 = !{null, !10721, !11280, !750}
!19527 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !19524, file: !3, line: 2347, type: !10721)
!19528 = !DILocation(line: 2347, column: 56, scope: !19524)
!19529 = !DILocalVariable(name: "listeners", arg: 2, scope: !19524, file: !3, line: 2348, type: !11280)
!19530 = !DILocation(line: 2348, column: 39, scope: !19524)
!19531 = !DILocalVariable(name: "listeners_count", arg: 3, scope: !19524, file: !3, line: 2349, type: !750)
!19532 = !DILocation(line: 2349, column: 18, scope: !19524)
!19533 = !DILocalVariable(name: "i", scope: !19524, file: !3, line: 2351, type: !7)
!19534 = !DILocation(line: 2351, column: 6, scope: !19524)
!19535 = !DILocation(line: 2353, column: 9, scope: !19536)
!19536 = distinct !DILexicalBlock(scope: !19524, file: !3, line: 2353, column: 2)
!19537 = !DILocation(line: 2353, column: 7, scope: !19536)
!19538 = !DILocation(line: 2353, column: 14, scope: !19539)
!19539 = distinct !DILexicalBlock(scope: !19536, file: !3, line: 2353, column: 2)
!19540 = !DILocation(line: 2353, column: 18, scope: !19539)
!19541 = !DILocation(line: 2353, column: 16, scope: !19539)
!19542 = !DILocation(line: 2353, column: 2, scope: !19536)
!19543 = !DILocation(line: 2354, column: 30, scope: !19544)
!19544 = distinct !DILexicalBlock(scope: !19539, file: !3, line: 2353, column: 40)
!19545 = !DILocation(line: 2354, column: 40, scope: !19544)
!19546 = !DILocation(line: 2355, column: 10, scope: !19544)
!19547 = !DILocation(line: 2355, column: 20, scope: !19544)
!19548 = !DILocation(line: 2356, column: 9, scope: !19544)
!19549 = !DILocation(line: 2354, column: 3, scope: !19544)
!19550 = !DILocation(line: 2357, column: 2, scope: !19544)
!19551 = !DILocation(line: 2353, column: 36, scope: !19539)
!19552 = !DILocation(line: 2353, column: 2, scope: !19539)
!19553 = distinct !{!19553, !19542, !19554}
!19554 = !DILocation(line: 2357, column: 2, scope: !19536)
!19555 = !DILocation(line: 2358, column: 1, scope: !19524)
!19556 = distinct !DISubprogram(name: "__must_check_overflow", scope: !19271, file: !19271, line: 52, type: !19557, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19557 = !DISubroutineType(types: !19558)
!19558 = !{!696, !696}
!19559 = !DILocalVariable(name: "overflow", arg: 1, scope: !19556, file: !19271, line: 52, type: !696)
!19560 = !DILocation(line: 52, column: 60, scope: !19556)
!19561 = !DILocation(line: 54, column: 9, scope: !19556)
!19562 = !DILocation(line: 54, column: 2, scope: !19556)
!19563 = distinct !DISubprogram(name: "__set_bit", scope: !17500, file: !17500, line: 25, type: !16235, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19564 = !DILocalVariable(name: "nr", arg: 1, scope: !19565, file: !15172, line: 66, type: !669)
!19565 = distinct !DISubprogram(name: "arch___set_bit", scope: !15172, file: !15172, line: 66, type: !16235, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19566 = !DILocation(line: 66, column: 21, scope: !19565, inlinedAt: !19567)
!19567 = distinct !DILocation(line: 28, column: 2, scope: !19563)
!19568 = !DILocalVariable(name: "addr", arg: 2, scope: !19565, file: !15172, line: 66, type: !16237)
!19569 = !DILocation(line: 66, column: 49, scope: !19565, inlinedAt: !19567)
!19570 = !DILocalVariable(name: "v", arg: 1, scope: !19571, file: !16247, line: 39, type: !16250)
!19571 = distinct !DISubprogram(name: "instrument_write", scope: !16247, file: !16247, line: 39, type: !16248, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19572 = !DILocation(line: 39, column: 67, scope: !19571, inlinedAt: !19573)
!19573 = distinct !DILocation(line: 27, column: 2, scope: !19563)
!19574 = !DILocalVariable(name: "size", arg: 2, scope: !19571, file: !16247, line: 39, type: !750)
!19575 = !DILocation(line: 39, column: 77, scope: !19571, inlinedAt: !19573)
!19576 = !DILocalVariable(name: "nr", arg: 1, scope: !19563, file: !17500, line: 25, type: !669)
!19577 = !DILocation(line: 25, column: 35, scope: !19563)
!19578 = !DILocalVariable(name: "addr", arg: 2, scope: !19563, file: !17500, line: 25, type: !16237)
!19579 = !DILocation(line: 25, column: 63, scope: !19563)
!19580 = !DILocation(line: 27, column: 19, scope: !19563)
!19581 = !DILocation(line: 27, column: 26, scope: !19563)
!19582 = !DILocation(line: 27, column: 24, scope: !19563)
!19583 = !DILocation(line: 41, column: 20, scope: !19571, inlinedAt: !19573)
!19584 = !DILocation(line: 41, column: 23, scope: !19571, inlinedAt: !19573)
!19585 = !DILocation(line: 41, column: 2, scope: !19571, inlinedAt: !19573)
!19586 = !DILocation(line: 42, column: 2, scope: !19571, inlinedAt: !19573)
!19587 = !DILocation(line: 28, column: 17, scope: !19563)
!19588 = !DILocation(line: 28, column: 21, scope: !19563)
!19589 = !DILocation(line: 68, column: 44, scope: !19565, inlinedAt: !19567)
!19590 = !DILocation(line: 68, column: 56, scope: !19565, inlinedAt: !19567)
!19591 = !DILocation(line: 68, column: 2, scope: !19565, inlinedAt: !19567)
!19592 = !{i32 -2147083293}
!19593 = !DILocation(line: 29, column: 1, scope: !19563)
!19594 = distinct !DISubprogram(name: "mlxsw_reg_qpcr_pack", scope: !10113, file: !10113, line: 3422, type: !19595, scopeLine: 3425, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19595 = !DISubroutineType(types: !19596)
!19596 = !{null, !733, !1193, !10426, !696, !862, !1193}
!19597 = !DILocalVariable(name: "payload", arg: 1, scope: !19594, file: !10113, line: 3422, type: !733)
!19598 = !DILocation(line: 3422, column: 46, scope: !19594)
!19599 = !DILocalVariable(name: "pid", arg: 2, scope: !19594, file: !10113, line: 3422, type: !1193)
!19600 = !DILocation(line: 3422, column: 59, scope: !19594)
!19601 = !DILocalVariable(name: "ir_units", arg: 3, scope: !19594, file: !10113, line: 3423, type: !10426)
!19602 = !DILocation(line: 3423, column: 41, scope: !19594)
!19603 = !DILocalVariable(name: "bytes", arg: 4, scope: !19594, file: !10113, line: 3424, type: !696)
!19604 = !DILocation(line: 3424, column: 17, scope: !19594)
!19605 = !DILocalVariable(name: "cir", arg: 5, scope: !19594, file: !10113, line: 3424, type: !862)
!19606 = !DILocation(line: 3424, column: 28, scope: !19594)
!19607 = !DILocalVariable(name: "cbs", arg: 6, scope: !19594, file: !10113, line: 3424, type: !1193)
!19608 = !DILocation(line: 3424, column: 37, scope: !19594)
!19609 = !DILocation(line: 3426, column: 2, scope: !19594)
!19610 = !DILocation(line: 3427, column: 25, scope: !19594)
!19611 = !DILocation(line: 3427, column: 34, scope: !19594)
!19612 = !DILocation(line: 3427, column: 2, scope: !19594)
!19613 = !DILocation(line: 3428, column: 23, scope: !19594)
!19614 = !DILocation(line: 3428, column: 2, scope: !19594)
!19615 = !DILocation(line: 3429, column: 31, scope: !19594)
!19616 = !DILocation(line: 3429, column: 2, scope: !19594)
!19617 = !DILocation(line: 3430, column: 36, scope: !19594)
!19618 = !DILocation(line: 3430, column: 2, scope: !19594)
!19619 = !DILocation(line: 3432, column: 25, scope: !19594)
!19620 = !DILocation(line: 3432, column: 34, scope: !19594)
!19621 = !DILocation(line: 3432, column: 2, scope: !19594)
!19622 = !DILocation(line: 3433, column: 30, scope: !19594)
!19623 = !DILocation(line: 3433, column: 39, scope: !19594)
!19624 = !DILocation(line: 3433, column: 2, scope: !19594)
!19625 = !DILocation(line: 3434, column: 27, scope: !19594)
!19626 = !DILocation(line: 3434, column: 36, scope: !19594)
!19627 = !DILocation(line: 3434, column: 2, scope: !19594)
!19628 = !DILocation(line: 3435, column: 25, scope: !19594)
!19629 = !DILocation(line: 3435, column: 34, scope: !19594)
!19630 = !DILocation(line: 3435, column: 2, scope: !19594)
!19631 = !DILocation(line: 3436, column: 1, scope: !19594)
!19632 = distinct !DISubprogram(name: "mlxsw_reg_qpcr_pid_set", scope: !10113, file: !10113, line: 3297, type: !14426, scopeLine: 3297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19633 = !DILocalVariable(name: "buf", arg: 1, scope: !19632, file: !10113, line: 3297, type: !733)
!19634 = !DILocation(line: 3297, column: 1, scope: !19632)
!19635 = !DILocalVariable(name: "val", arg: 2, scope: !19632, file: !10113, line: 3297, type: !862)
!19636 = distinct !DISubprogram(name: "mlxsw_reg_qpcr_g_set", scope: !10113, file: !10113, line: 3291, type: !14426, scopeLine: 3291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19637 = !DILocalVariable(name: "buf", arg: 1, scope: !19636, file: !10113, line: 3291, type: !733)
!19638 = !DILocation(line: 3291, column: 1, scope: !19636)
!19639 = !DILocalVariable(name: "val", arg: 2, scope: !19636, file: !10113, line: 3291, type: !862)
!19640 = distinct !DISubprogram(name: "mlxsw_reg_qpcr_rate_type_set", scope: !10113, file: !10113, line: 3344, type: !14426, scopeLine: 3344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19641 = !DILocalVariable(name: "buf", arg: 1, scope: !19640, file: !10113, line: 3344, type: !733)
!19642 = !DILocation(line: 3344, column: 1, scope: !19640)
!19643 = !DILocalVariable(name: "val", arg: 2, scope: !19640, file: !10113, line: 3344, type: !862)
!19644 = distinct !DISubprogram(name: "mlxsw_reg_qpcr_violate_action_set", scope: !10113, file: !10113, line: 3400, type: !14426, scopeLine: 3400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19645 = !DILocalVariable(name: "buf", arg: 1, scope: !19644, file: !10113, line: 3400, type: !733)
!19646 = !DILocation(line: 3400, column: 1, scope: !19644)
!19647 = !DILocalVariable(name: "val", arg: 2, scope: !19644, file: !10113, line: 3400, type: !862)
!19648 = distinct !DISubprogram(name: "mlxsw_reg_qpcr_cir_set", scope: !10113, file: !10113, line: 3366, type: !14426, scopeLine: 3366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19649 = !DILocalVariable(name: "buf", arg: 1, scope: !19648, file: !10113, line: 3366, type: !733)
!19650 = !DILocation(line: 3366, column: 1, scope: !19648)
!19651 = !DILocalVariable(name: "val", arg: 2, scope: !19648, file: !10113, line: 3366, type: !862)
!19652 = distinct !DISubprogram(name: "mlxsw_reg_qpcr_ir_units_set", scope: !10113, file: !10113, line: 3331, type: !14426, scopeLine: 3331, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19653 = !DILocalVariable(name: "buf", arg: 1, scope: !19652, file: !10113, line: 3331, type: !733)
!19654 = !DILocation(line: 3331, column: 1, scope: !19652)
!19655 = !DILocalVariable(name: "val", arg: 2, scope: !19652, file: !10113, line: 3331, type: !862)
!19656 = distinct !DISubprogram(name: "mlxsw_reg_qpcr_bytes_set", scope: !10113, file: !10113, line: 3318, type: !14426, scopeLine: 3318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19657 = !DILocalVariable(name: "buf", arg: 1, scope: !19656, file: !10113, line: 3318, type: !733)
!19658 = !DILocation(line: 3318, column: 1, scope: !19656)
!19659 = !DILocalVariable(name: "val", arg: 2, scope: !19656, file: !10113, line: 3318, type: !862)
!19660 = distinct !DISubprogram(name: "mlxsw_reg_qpcr_cbs_set", scope: !10113, file: !10113, line: 3357, type: !14426, scopeLine: 3357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19661 = !DILocalVariable(name: "buf", arg: 1, scope: !19660, file: !10113, line: 3357, type: !733)
!19662 = !DILocation(line: 3357, column: 1, scope: !19660)
!19663 = !DILocalVariable(name: "val", arg: 2, scope: !19660, file: !10113, line: 3357, type: !862)
!19664 = distinct !DISubprogram(name: "mlxsw_reg_htgt_pack", scope: !10113, file: !10113, line: 5803, type: !19665, scopeLine: 5805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19665 = !DISubroutineType(types: !19666)
!19666 = !{null, !733, !1552, !1552, !1552, !1552}
!19667 = !DILocalVariable(name: "payload", arg: 1, scope: !19664, file: !10113, line: 5803, type: !733)
!19668 = !DILocation(line: 5803, column: 46, scope: !19664)
!19669 = !DILocalVariable(name: "group", arg: 2, scope: !19664, file: !10113, line: 5803, type: !1552)
!19670 = !DILocation(line: 5803, column: 58, scope: !19664)
!19671 = !DILocalVariable(name: "policer_id", arg: 3, scope: !19664, file: !10113, line: 5803, type: !1552)
!19672 = !DILocation(line: 5803, column: 68, scope: !19664)
!19673 = !DILocalVariable(name: "priority", arg: 4, scope: !19664, file: !10113, line: 5804, type: !1552)
!19674 = !DILocation(line: 5804, column: 15, scope: !19664)
!19675 = !DILocalVariable(name: "tc", arg: 5, scope: !19664, file: !10113, line: 5804, type: !1552)
!19676 = !DILocation(line: 5804, column: 28, scope: !19664)
!19677 = !DILocation(line: 5806, column: 2, scope: !19664)
!19678 = !DILocation(line: 5808, column: 6, scope: !19679)
!19679 = distinct !DILexicalBlock(scope: !19664, file: !10113, line: 5808, column: 6)
!19680 = !DILocation(line: 5808, column: 17, scope: !19679)
!19681 = !DILocation(line: 5808, column: 6, scope: !19664)
!19682 = !DILocation(line: 5809, column: 27, scope: !19683)
!19683 = distinct !DILexicalBlock(scope: !19679, file: !10113, line: 5808, column: 52)
!19684 = !DILocation(line: 5809, column: 3, scope: !19683)
!19685 = !DILocation(line: 5811, column: 2, scope: !19683)
!19686 = !DILocation(line: 5812, column: 27, scope: !19687)
!19687 = distinct !DILexicalBlock(scope: !19679, file: !10113, line: 5811, column: 9)
!19688 = !DILocation(line: 5812, column: 3, scope: !19687)
!19689 = !DILocation(line: 5814, column: 26, scope: !19687)
!19690 = !DILocation(line: 5814, column: 35, scope: !19687)
!19691 = !DILocation(line: 5814, column: 3, scope: !19687)
!19692 = !DILocation(line: 5817, column: 26, scope: !19664)
!19693 = !DILocation(line: 5817, column: 2, scope: !19664)
!19694 = !DILocation(line: 5818, column: 32, scope: !19664)
!19695 = !DILocation(line: 5818, column: 41, scope: !19664)
!19696 = !DILocation(line: 5818, column: 2, scope: !19664)
!19697 = !DILocation(line: 5819, column: 35, scope: !19664)
!19698 = !DILocation(line: 5819, column: 2, scope: !19664)
!19699 = !DILocation(line: 5820, column: 37, scope: !19664)
!19700 = !DILocation(line: 5820, column: 2, scope: !19664)
!19701 = !DILocation(line: 5821, column: 30, scope: !19664)
!19702 = !DILocation(line: 5821, column: 39, scope: !19664)
!19703 = !DILocation(line: 5821, column: 2, scope: !19664)
!19704 = !DILocation(line: 5822, column: 43, scope: !19664)
!19705 = !DILocation(line: 5822, column: 52, scope: !19664)
!19706 = !DILocation(line: 5822, column: 2, scope: !19664)
!19707 = !DILocation(line: 5823, column: 36, scope: !19664)
!19708 = !DILocation(line: 5823, column: 45, scope: !19664)
!19709 = !DILocation(line: 5823, column: 2, scope: !19664)
!19710 = !DILocation(line: 5824, column: 1, scope: !19664)
!19711 = distinct !DISubprogram(name: "mlxsw_reg_htgt_pide_set", scope: !10113, file: !10113, line: 5739, type: !14426, scopeLine: 5739, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19712 = !DILocalVariable(name: "buf", arg: 1, scope: !19711, file: !10113, line: 5739, type: !733)
!19713 = !DILocation(line: 5739, column: 1, scope: !19711)
!19714 = !DILocalVariable(name: "val", arg: 2, scope: !19711, file: !10113, line: 5739, type: !862)
!19715 = distinct !DISubprogram(name: "mlxsw_reg_htgt_pid_set", scope: !10113, file: !10113, line: 5747, type: !14426, scopeLine: 5747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19716 = !DILocalVariable(name: "buf", arg: 1, scope: !19715, file: !10113, line: 5747, type: !733)
!19717 = !DILocation(line: 5747, column: 1, scope: !19715)
!19718 = !DILocalVariable(name: "val", arg: 2, scope: !19715, file: !10113, line: 5747, type: !862)
!19719 = distinct !DISubprogram(name: "mlxsw_reg_htgt_type_set", scope: !10113, file: !10113, line: 5680, type: !14426, scopeLine: 5680, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19720 = !DILocalVariable(name: "buf", arg: 1, scope: !19719, file: !10113, line: 5680, type: !733)
!19721 = !DILocation(line: 5680, column: 1, scope: !19719)
!19722 = !DILocalVariable(name: "val", arg: 2, scope: !19719, file: !10113, line: 5680, type: !862)
!19723 = distinct !DISubprogram(name: "mlxsw_reg_htgt_trap_group_set", scope: !10113, file: !10113, line: 5728, type: !14426, scopeLine: 5728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19724 = !DILocalVariable(name: "buf", arg: 1, scope: !19723, file: !10113, line: 5728, type: !733)
!19725 = !DILocation(line: 5728, column: 1, scope: !19723)
!19726 = !DILocalVariable(name: "val", arg: 2, scope: !19723, file: !10113, line: 5728, type: !862)
!19727 = distinct !DISubprogram(name: "mlxsw_reg_htgt_mirror_action_set", scope: !10113, file: !10113, line: 5760, type: !14426, scopeLine: 5760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19728 = !DILocalVariable(name: "buf", arg: 1, scope: !19727, file: !10113, line: 5760, type: !733)
!19729 = !DILocation(line: 5760, column: 1, scope: !19727)
!19730 = !DILocalVariable(name: "val", arg: 2, scope: !19727, file: !10113, line: 5760, type: !862)
!19731 = distinct !DISubprogram(name: "mlxsw_reg_htgt_mirroring_agent_set", scope: !10113, file: !10113, line: 5766, type: !14426, scopeLine: 5766, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19732 = !DILocalVariable(name: "buf", arg: 1, scope: !19731, file: !10113, line: 5766, type: !733)
!19733 = !DILocation(line: 5766, column: 1, scope: !19731)
!19734 = !DILocalVariable(name: "val", arg: 2, scope: !19731, file: !10113, line: 5766, type: !862)
!19735 = distinct !DISubprogram(name: "mlxsw_reg_htgt_priority_set", scope: !10113, file: !10113, line: 5781, type: !14426, scopeLine: 5781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19736 = !DILocalVariable(name: "buf", arg: 1, scope: !19735, file: !10113, line: 5781, type: !733)
!19737 = !DILocation(line: 5781, column: 1, scope: !19735)
!19738 = !DILocalVariable(name: "val", arg: 2, scope: !19735, file: !10113, line: 5781, type: !862)
!19739 = distinct !DISubprogram(name: "mlxsw_reg_htgt_local_path_cpu_tclass_set", scope: !10113, file: !10113, line: 5789, type: !14426, scopeLine: 5789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19740 = !DILocalVariable(name: "buf", arg: 1, scope: !19739, file: !10113, line: 5789, type: !733)
!19741 = !DILocation(line: 5789, column: 1, scope: !19739)
!19742 = !DILocalVariable(name: "val", arg: 2, scope: !19739, file: !10113, line: 5789, type: !862)
!19743 = distinct !DISubprogram(name: "mlxsw_reg_htgt_local_path_rdq_set", scope: !10113, file: !10113, line: 5801, type: !14426, scopeLine: 5801, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19744 = !DILocalVariable(name: "buf", arg: 1, scope: !19743, file: !10113, line: 5801, type: !733)
!19745 = !DILocation(line: 5801, column: 1, scope: !19743)
!19746 = !DILocalVariable(name: "val", arg: 2, scope: !19743, file: !10113, line: 5801, type: !862)
!19747 = distinct !DISubprogram(name: "mlxsw_sp_pude_event_func", scope: !3, file: !3, line: 2049, type: !11303, scopeLine: 2051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19748 = !DILocalVariable(name: "reg", arg: 1, scope: !19747, file: !3, line: 2049, type: !11305)
!19749 = !DILocation(line: 2049, column: 67, scope: !19747)
!19750 = !DILocalVariable(name: "pude_pl", arg: 2, scope: !19747, file: !3, line: 2050, type: !733)
!19751 = !DILocation(line: 2050, column: 16, scope: !19747)
!19752 = !DILocalVariable(name: "priv", arg: 3, scope: !19747, file: !3, line: 2050, type: !726)
!19753 = !DILocation(line: 2050, column: 31, scope: !19747)
!19754 = !DILocalVariable(name: "mlxsw_sp", scope: !19747, file: !3, line: 2052, type: !10721)
!19755 = !DILocation(line: 2052, column: 19, scope: !19747)
!19756 = !DILocation(line: 2052, column: 30, scope: !19747)
!19757 = !DILocalVariable(name: "mlxsw_sp_port", scope: !19747, file: !3, line: 2053, type: !10715)
!19758 = !DILocation(line: 2053, column: 24, scope: !19747)
!19759 = !DILocalVariable(name: "status", scope: !19747, file: !3, line: 2054, type: !10484)
!19760 = !DILocation(line: 2054, column: 34, scope: !19747)
!19761 = !DILocalVariable(name: "local_port", scope: !19747, file: !3, line: 2055, type: !1552)
!19762 = !DILocation(line: 2055, column: 5, scope: !19747)
!19763 = !DILocation(line: 2057, column: 45, scope: !19747)
!19764 = !DILocation(line: 2057, column: 15, scope: !19747)
!19765 = !DILocation(line: 2057, column: 13, scope: !19747)
!19766 = !DILocation(line: 2058, column: 18, scope: !19747)
!19767 = !DILocation(line: 2058, column: 28, scope: !19747)
!19768 = !DILocation(line: 2058, column: 34, scope: !19747)
!19769 = !DILocation(line: 2058, column: 16, scope: !19747)
!19770 = !DILocation(line: 2059, column: 7, scope: !19771)
!19771 = distinct !DILexicalBlock(scope: !19747, file: !3, line: 2059, column: 6)
!19772 = !DILocation(line: 2059, column: 6, scope: !19747)
!19773 = !DILocation(line: 2060, column: 3, scope: !19771)
!19774 = !DILocation(line: 2062, column: 42, scope: !19747)
!19775 = !DILocation(line: 2062, column: 11, scope: !19747)
!19776 = !DILocation(line: 2062, column: 9, scope: !19747)
!19777 = !DILocation(line: 2063, column: 6, scope: !19778)
!19778 = distinct !DILexicalBlock(scope: !19747, file: !3, line: 2063, column: 6)
!19779 = !DILocation(line: 2063, column: 13, scope: !19778)
!19780 = !DILocation(line: 2063, column: 6, scope: !19747)
!19781 = !DILocation(line: 2064, column: 15, scope: !19782)
!19782 = distinct !DILexicalBlock(scope: !19778, file: !3, line: 2063, column: 43)
!19783 = !DILocation(line: 2064, column: 30, scope: !19782)
!19784 = !DILocation(line: 2064, column: 3, scope: !19782)
!19785 = !DILocation(line: 2065, column: 20, scope: !19782)
!19786 = !DILocation(line: 2065, column: 35, scope: !19782)
!19787 = !DILocation(line: 2065, column: 3, scope: !19782)
!19788 = !DILocation(line: 2066, column: 27, scope: !19782)
!19789 = !DILocation(line: 2066, column: 42, scope: !19782)
!19790 = !DILocation(line: 2066, column: 46, scope: !19782)
!19791 = !DILocation(line: 2066, column: 3, scope: !19782)
!19792 = !DILocation(line: 2067, column: 2, scope: !19782)
!19793 = !DILocation(line: 2068, column: 15, scope: !19794)
!19794 = distinct !DILexicalBlock(scope: !19778, file: !3, line: 2067, column: 9)
!19795 = !DILocation(line: 2068, column: 30, scope: !19794)
!19796 = !DILocation(line: 2068, column: 3, scope: !19794)
!19797 = !DILocation(line: 2069, column: 21, scope: !19794)
!19798 = !DILocation(line: 2069, column: 36, scope: !19794)
!19799 = !DILocation(line: 2069, column: 3, scope: !19794)
!19800 = !DILocation(line: 2070, column: 36, scope: !19794)
!19801 = !DILocation(line: 2070, column: 3, scope: !19794)
!19802 = !DILocation(line: 2072, column: 1, scope: !19747)
!19803 = distinct !DISubprogram(name: "mlxsw_sp_rx_listener_mark_func", scope: !3, file: !3, line: 2139, type: !11293, scopeLine: 2141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19804 = !DILocalVariable(name: "skb", arg: 1, scope: !19803, file: !3, line: 2139, type: !576)
!19805 = !DILocation(line: 2139, column: 60, scope: !19803)
!19806 = !DILocalVariable(name: "local_port", arg: 2, scope: !19803, file: !3, line: 2139, type: !1552)
!19807 = !DILocation(line: 2139, column: 68, scope: !19803)
!19808 = !DILocalVariable(name: "priv", arg: 3, scope: !19803, file: !3, line: 2140, type: !726)
!19809 = !DILocation(line: 2140, column: 15, scope: !19803)
!19810 = !DILocation(line: 2142, column: 2, scope: !19803)
!19811 = !DILocation(line: 2142, column: 7, scope: !19803)
!19812 = !DILocation(line: 2142, column: 24, scope: !19803)
!19813 = !DILocation(line: 2143, column: 43, scope: !19803)
!19814 = !DILocation(line: 2143, column: 48, scope: !19803)
!19815 = !DILocation(line: 2143, column: 60, scope: !19803)
!19816 = !DILocation(line: 2143, column: 9, scope: !19803)
!19817 = !DILocation(line: 2143, column: 2, scope: !19803)
!19818 = distinct !DISubprogram(name: "mlxsw_sp_rx_listener_l3_mark_func", scope: !3, file: !3, line: 2146, type: !11293, scopeLine: 2148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19819 = !DILocalVariable(name: "skb", arg: 1, scope: !19818, file: !3, line: 2146, type: !576)
!19820 = !DILocation(line: 2146, column: 63, scope: !19818)
!19821 = !DILocalVariable(name: "local_port", arg: 2, scope: !19818, file: !3, line: 2147, type: !1552)
!19822 = !DILocation(line: 2147, column: 15, scope: !19818)
!19823 = !DILocalVariable(name: "priv", arg: 3, scope: !19818, file: !3, line: 2147, type: !726)
!19824 = !DILocation(line: 2147, column: 33, scope: !19818)
!19825 = !DILocation(line: 2149, column: 2, scope: !19818)
!19826 = !DILocation(line: 2149, column: 7, scope: !19818)
!19827 = !DILocation(line: 2149, column: 27, scope: !19818)
!19828 = !DILocation(line: 2150, column: 2, scope: !19818)
!19829 = !DILocation(line: 2150, column: 7, scope: !19818)
!19830 = !DILocation(line: 2150, column: 24, scope: !19818)
!19831 = !DILocation(line: 2151, column: 43, scope: !19818)
!19832 = !DILocation(line: 2151, column: 48, scope: !19818)
!19833 = !DILocation(line: 2151, column: 60, scope: !19818)
!19834 = !DILocation(line: 2151, column: 9, scope: !19818)
!19835 = !DILocation(line: 2151, column: 2, scope: !19818)
!19836 = distinct !DISubprogram(name: "mlxsw_reg_pude_local_port_get", scope: !10113, file: !10113, line: 11277, type: !19837, scopeLine: 11277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19837 = !DISubroutineType(types: !19838)
!19838 = !{!862, !453}
!19839 = !DILocalVariable(name: "buf", arg: 1, scope: !19836, file: !10113, line: 11277, type: !453)
!19840 = !DILocation(line: 11277, column: 1, scope: !19836)
!19841 = distinct !DISubprogram(name: "mlxsw_reg_pude_oper_status_get", scope: !10113, file: !10113, line: 11298, type: !19837, scopeLine: 11298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19842 = !DILocalVariable(name: "buf", arg: 1, scope: !19841, file: !10113, line: 11298, type: !453)
!19843 = !DILocation(line: 11298, column: 1, scope: !19841)
!19844 = distinct !DISubprogram(name: "mlxsw_sp_port_down_wipe_counters", scope: !3, file: !3, line: 2041, type: !14854, scopeLine: 2042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19845 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !19844, file: !3, line: 2041, type: !10715)
!19846 = !DILocation(line: 2041, column: 56, scope: !19844)
!19847 = !DILocalVariable(name: "i", scope: !19844, file: !3, line: 2043, type: !7)
!19848 = !DILocation(line: 2043, column: 6, scope: !19844)
!19849 = !DILocation(line: 2045, column: 9, scope: !19850)
!19850 = distinct !DILexicalBlock(scope: !19844, file: !3, line: 2045, column: 2)
!19851 = !DILocation(line: 2045, column: 7, scope: !19850)
!19852 = !DILocation(line: 2045, column: 14, scope: !19853)
!19853 = distinct !DILexicalBlock(scope: !19850, file: !3, line: 2045, column: 2)
!19854 = !DILocation(line: 2045, column: 16, scope: !19853)
!19855 = !DILocation(line: 2045, column: 2, scope: !19850)
!19856 = !DILocation(line: 2046, column: 3, scope: !19853)
!19857 = !DILocation(line: 2046, column: 18, scope: !19853)
!19858 = !DILocation(line: 2046, column: 36, scope: !19853)
!19859 = !DILocation(line: 2046, column: 43, scope: !19853)
!19860 = !DILocation(line: 2046, column: 51, scope: !19853)
!19861 = !DILocation(line: 2046, column: 54, scope: !19853)
!19862 = !DILocation(line: 2045, column: 33, scope: !19853)
!19863 = !DILocation(line: 2045, column: 2, scope: !19853)
!19864 = distinct !{!19864, !19855, !19865}
!19865 = !DILocation(line: 2046, column: 56, scope: !19850)
!19866 = !DILocation(line: 2047, column: 1, scope: !19844)
!19867 = distinct !DISubprogram(name: "__mlxsw_item_get32", scope: !10989, file: !10989, line: 111, type: !19868, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19868 = !DISubroutineType(types: !19869)
!19869 = !{!862, !453, !14969, !633}
!19870 = !DILocalVariable(name: "buf", arg: 1, scope: !19867, file: !10989, line: 111, type: !453)
!19871 = !DILocation(line: 111, column: 50, scope: !19867)
!19872 = !DILocalVariable(name: "item", arg: 2, scope: !19867, file: !10989, line: 112, type: !14969)
!19873 = !DILocation(line: 112, column: 35, scope: !19867)
!19874 = !DILocalVariable(name: "index", arg: 3, scope: !19867, file: !10989, line: 113, type: !633)
!19875 = !DILocation(line: 113, column: 25, scope: !19867)
!19876 = !DILocalVariable(name: "offset", scope: !19867, file: !10989, line: 115, type: !14)
!19877 = !DILocation(line: 115, column: 15, scope: !19867)
!19878 = !DILocation(line: 115, column: 44, scope: !19867)
!19879 = !DILocation(line: 115, column: 50, scope: !19867)
!19880 = !DILocation(line: 115, column: 24, scope: !19867)
!19881 = !DILocalVariable(name: "b", scope: !19867, file: !10989, line: 116, type: !11483)
!19882 = !DILocation(line: 116, column: 10, scope: !19867)
!19883 = !DILocation(line: 116, column: 25, scope: !19867)
!19884 = !DILocation(line: 116, column: 14, scope: !19867)
!19885 = !DILocalVariable(name: "tmp", scope: !19867, file: !10989, line: 117, type: !862)
!19886 = !DILocation(line: 117, column: 6, scope: !19867)
!19887 = !DILocation(line: 119, column: 8, scope: !19867)
!19888 = !DILocation(line: 119, column: 6, scope: !19867)
!19889 = !DILocation(line: 120, column: 10, scope: !19867)
!19890 = !DILocation(line: 120, column: 16, scope: !19867)
!19891 = !DILocation(line: 120, column: 6, scope: !19867)
!19892 = !DILocation(line: 121, column: 9, scope: !19867)
!19893 = !DILocation(line: 121, column: 6, scope: !19867)
!19894 = !DILocation(line: 122, column: 6, scope: !19895)
!19895 = distinct !DILexicalBlock(scope: !19867, file: !10989, line: 122, column: 6)
!19896 = !DILocation(line: 122, column: 12, scope: !19895)
!19897 = !DILocation(line: 122, column: 6, scope: !19867)
!19898 = !DILocation(line: 123, column: 11, scope: !19895)
!19899 = !DILocation(line: 123, column: 17, scope: !19895)
!19900 = !DILocation(line: 123, column: 7, scope: !19895)
!19901 = !DILocation(line: 123, column: 3, scope: !19895)
!19902 = !DILocation(line: 124, column: 9, scope: !19867)
!19903 = !DILocation(line: 124, column: 2, scope: !19867)
!19904 = distinct !DISubprogram(name: "jhash", scope: !19905, file: !19905, line: 70, type: !2448, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!19905 = !DIFile(filename: "./include/linux/jhash.h", directory: "/home/lizy2001/genbc/linux")
!19906 = !DILocalVariable(name: "key", arg: 1, scope: !19904, file: !19905, line: 70, type: !2424)
!19907 = !DILocation(line: 70, column: 37, scope: !19904)
!19908 = !DILocalVariable(name: "length", arg: 2, scope: !19904, file: !19905, line: 70, type: !862)
!19909 = !DILocation(line: 70, column: 46, scope: !19904)
!19910 = !DILocalVariable(name: "initval", arg: 3, scope: !19904, file: !19905, line: 70, type: !862)
!19911 = !DILocation(line: 70, column: 58, scope: !19904)
!19912 = !DILocalVariable(name: "a", scope: !19904, file: !19905, line: 72, type: !862)
!19913 = !DILocation(line: 72, column: 6, scope: !19904)
!19914 = !DILocalVariable(name: "b", scope: !19904, file: !19905, line: 72, type: !862)
!19915 = !DILocation(line: 72, column: 9, scope: !19904)
!19916 = !DILocalVariable(name: "c", scope: !19904, file: !19905, line: 72, type: !862)
!19917 = !DILocation(line: 72, column: 12, scope: !19904)
!19918 = !DILocalVariable(name: "k", scope: !19904, file: !19905, line: 73, type: !8658)
!19919 = !DILocation(line: 73, column: 12, scope: !19904)
!19920 = !DILocation(line: 73, column: 16, scope: !19904)
!19921 = !DILocation(line: 76, column: 30, scope: !19904)
!19922 = !DILocation(line: 76, column: 28, scope: !19904)
!19923 = !DILocation(line: 76, column: 39, scope: !19904)
!19924 = !DILocation(line: 76, column: 37, scope: !19904)
!19925 = !DILocation(line: 76, column: 12, scope: !19904)
!19926 = !DILocation(line: 76, column: 8, scope: !19904)
!19927 = !DILocation(line: 76, column: 4, scope: !19904)
!19928 = !DILocation(line: 79, column: 2, scope: !19904)
!19929 = !DILocation(line: 79, column: 9, scope: !19904)
!19930 = !DILocation(line: 79, column: 16, scope: !19904)
!19931 = !DILocation(line: 80, column: 30, scope: !19932)
!19932 = distinct !DILexicalBlock(scope: !19904, file: !19905, line: 79, column: 22)
!19933 = !DILocation(line: 80, column: 8, scope: !19932)
!19934 = !DILocation(line: 80, column: 5, scope: !19932)
!19935 = !DILocation(line: 81, column: 30, scope: !19932)
!19936 = !DILocation(line: 81, column: 32, scope: !19932)
!19937 = !DILocation(line: 81, column: 8, scope: !19932)
!19938 = !DILocation(line: 81, column: 5, scope: !19932)
!19939 = !DILocation(line: 82, column: 30, scope: !19932)
!19940 = !DILocation(line: 82, column: 32, scope: !19932)
!19941 = !DILocation(line: 82, column: 8, scope: !19932)
!19942 = !DILocation(line: 82, column: 5, scope: !19932)
!19943 = !DILocation(line: 83, column: 3, scope: !19944)
!19944 = distinct !DILexicalBlock(scope: !19932, file: !19905, line: 83, column: 3)
!19945 = !DILocation(line: 84, column: 10, scope: !19932)
!19946 = !DILocation(line: 85, column: 5, scope: !19932)
!19947 = distinct !{!19947, !19928, !19948}
!19948 = !DILocation(line: 86, column: 2, scope: !19904)
!19949 = !DILocation(line: 88, column: 10, scope: !19904)
!19950 = !DILocation(line: 88, column: 2, scope: !19904)
!19951 = !DILocation(line: 89, column: 21, scope: !19952)
!19952 = distinct !DILexicalBlock(scope: !19904, file: !19905, line: 88, column: 18)
!19953 = !DILocation(line: 89, column: 16, scope: !19952)
!19954 = !DILocation(line: 89, column: 26, scope: !19952)
!19955 = !DILocation(line: 89, column: 13, scope: !19952)
!19956 = !DILocation(line: 89, column: 11, scope: !19952)
!19957 = !DILocation(line: 90, column: 21, scope: !19952)
!19958 = !DILocation(line: 90, column: 16, scope: !19952)
!19959 = !DILocation(line: 90, column: 26, scope: !19952)
!19960 = !DILocation(line: 90, column: 13, scope: !19952)
!19961 = !DILocation(line: 90, column: 11, scope: !19952)
!19962 = !DILocation(line: 91, column: 21, scope: !19952)
!19963 = !DILocation(line: 91, column: 16, scope: !19952)
!19964 = !DILocation(line: 91, column: 25, scope: !19952)
!19965 = !DILocation(line: 91, column: 13, scope: !19952)
!19966 = !DILocation(line: 91, column: 11, scope: !19952)
!19967 = !DILocation(line: 92, column: 16, scope: !19952)
!19968 = !DILocation(line: 92, column: 13, scope: !19952)
!19969 = !DILocation(line: 92, column: 11, scope: !19952)
!19970 = !DILocation(line: 93, column: 21, scope: !19952)
!19971 = !DILocation(line: 93, column: 16, scope: !19952)
!19972 = !DILocation(line: 93, column: 25, scope: !19952)
!19973 = !DILocation(line: 93, column: 13, scope: !19952)
!19974 = !DILocation(line: 93, column: 11, scope: !19952)
!19975 = !DILocation(line: 94, column: 21, scope: !19952)
!19976 = !DILocation(line: 94, column: 16, scope: !19952)
!19977 = !DILocation(line: 94, column: 25, scope: !19952)
!19978 = !DILocation(line: 94, column: 13, scope: !19952)
!19979 = !DILocation(line: 94, column: 11, scope: !19952)
!19980 = !DILocation(line: 95, column: 21, scope: !19952)
!19981 = !DILocation(line: 95, column: 16, scope: !19952)
!19982 = !DILocation(line: 95, column: 25, scope: !19952)
!19983 = !DILocation(line: 95, column: 13, scope: !19952)
!19984 = !DILocation(line: 95, column: 11, scope: !19952)
!19985 = !DILocation(line: 96, column: 16, scope: !19952)
!19986 = !DILocation(line: 96, column: 13, scope: !19952)
!19987 = !DILocation(line: 96, column: 11, scope: !19952)
!19988 = !DILocation(line: 97, column: 21, scope: !19952)
!19989 = !DILocation(line: 97, column: 16, scope: !19952)
!19990 = !DILocation(line: 97, column: 25, scope: !19952)
!19991 = !DILocation(line: 97, column: 13, scope: !19952)
!19992 = !DILocation(line: 97, column: 11, scope: !19952)
!19993 = !DILocation(line: 98, column: 21, scope: !19952)
!19994 = !DILocation(line: 98, column: 16, scope: !19952)
!19995 = !DILocation(line: 98, column: 25, scope: !19952)
!19996 = !DILocation(line: 98, column: 13, scope: !19952)
!19997 = !DILocation(line: 98, column: 11, scope: !19952)
!19998 = !DILocation(line: 99, column: 21, scope: !19952)
!19999 = !DILocation(line: 99, column: 16, scope: !19952)
!20000 = !DILocation(line: 99, column: 25, scope: !19952)
!20001 = !DILocation(line: 99, column: 13, scope: !19952)
!20002 = !DILocation(line: 99, column: 11, scope: !19952)
!20003 = !DILocation(line: 100, column: 16, scope: !19952)
!20004 = !DILocation(line: 100, column: 13, scope: !19952)
!20005 = !DILocation(line: 101, column: 4, scope: !20006)
!20006 = distinct !DILexicalBlock(scope: !19952, file: !19905, line: 101, column: 4)
!20007 = !DILocation(line: 102, column: 4, scope: !19952)
!20008 = !DILocation(line: 104, column: 3, scope: !19952)
!20009 = !DILocation(line: 107, column: 9, scope: !19904)
!20010 = !DILocation(line: 107, column: 2, scope: !19904)
!20011 = distinct !DISubprogram(name: "mlxsw_reg_slcr_pack", scope: !10113, file: !10113, line: 1450, type: !20012, scopeLine: 1451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20012 = !DISubroutineType(types: !20013)
!20013 = !{null, !733, !1193, !862}
!20014 = !DILocalVariable(name: "payload", arg: 1, scope: !20011, file: !10113, line: 1450, type: !733)
!20015 = !DILocation(line: 1450, column: 46, scope: !20011)
!20016 = !DILocalVariable(name: "lag_hash", arg: 2, scope: !20011, file: !10113, line: 1450, type: !1193)
!20017 = !DILocation(line: 1450, column: 59, scope: !20011)
!20018 = !DILocalVariable(name: "seed", arg: 3, scope: !20011, file: !10113, line: 1450, type: !862)
!20019 = !DILocation(line: 1450, column: 73, scope: !20011)
!20020 = !DILocation(line: 1452, column: 2, scope: !20011)
!20021 = !DILocation(line: 1453, column: 24, scope: !20011)
!20022 = !DILocation(line: 1453, column: 2, scope: !20011)
!20023 = !DILocation(line: 1454, column: 26, scope: !20011)
!20024 = !DILocation(line: 1454, column: 2, scope: !20011)
!20025 = !DILocation(line: 1455, column: 30, scope: !20011)
!20026 = !DILocation(line: 1455, column: 39, scope: !20011)
!20027 = !DILocation(line: 1455, column: 2, scope: !20011)
!20028 = !DILocation(line: 1456, column: 26, scope: !20011)
!20029 = !DILocation(line: 1456, column: 35, scope: !20011)
!20030 = !DILocation(line: 1456, column: 2, scope: !20011)
!20031 = !DILocation(line: 1457, column: 1, scope: !20011)
!20032 = distinct !DISubprogram(name: "kcalloc", scope: !10234, file: !10234, line: 601, type: !20033, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20033 = !DISubroutineType(types: !20034)
!20034 = !{!726, !750, !750, !2144}
!20035 = !DILocalVariable(name: "n", arg: 1, scope: !20032, file: !10234, line: 601, type: !750)
!20036 = !DILocation(line: 601, column: 36, scope: !20032)
!20037 = !DILocalVariable(name: "size", arg: 2, scope: !20032, file: !10234, line: 601, type: !750)
!20038 = !DILocation(line: 601, column: 46, scope: !20032)
!20039 = !DILocalVariable(name: "flags", arg: 3, scope: !20032, file: !10234, line: 601, type: !2144)
!20040 = !DILocation(line: 601, column: 58, scope: !20032)
!20041 = !DILocation(line: 603, column: 23, scope: !20032)
!20042 = !DILocation(line: 603, column: 26, scope: !20032)
!20043 = !DILocation(line: 603, column: 32, scope: !20032)
!20044 = !DILocation(line: 603, column: 38, scope: !20032)
!20045 = !DILocation(line: 603, column: 9, scope: !20032)
!20046 = !DILocation(line: 603, column: 2, scope: !20032)
!20047 = distinct !DISubprogram(name: "__get_unaligned_cpu32", scope: !11522, file: !11522, line: 16, type: !20048, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20048 = !DISubroutineType(types: !20049)
!20049 = !{!862, !2424}
!20050 = !DILocalVariable(name: "p", arg: 1, scope: !20047, file: !11522, line: 16, type: !2424)
!20051 = !DILocation(line: 16, column: 53, scope: !20047)
!20052 = !DILocalVariable(name: "ptr", scope: !20047, file: !11522, line: 18, type: !11519)
!20053 = !DILocation(line: 18, column: 26, scope: !20047)
!20054 = !DILocation(line: 18, column: 58, scope: !20047)
!20055 = !DILocation(line: 18, column: 32, scope: !20047)
!20056 = !DILocation(line: 19, column: 9, scope: !20047)
!20057 = !DILocation(line: 19, column: 14, scope: !20047)
!20058 = !DILocation(line: 19, column: 2, scope: !20047)
!20059 = distinct !DISubprogram(name: "rol32", scope: !20060, file: !20060, line: 103, type: !20061, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20060 = !DIFile(filename: "./include/linux/bitops.h", directory: "/home/lizy2001/genbc/linux")
!20061 = !DISubroutineType(types: !20062)
!20062 = !{!624, !624, !14}
!20063 = !DILocalVariable(name: "word", arg: 1, scope: !20059, file: !20060, line: 103, type: !624)
!20064 = !DILocation(line: 103, column: 33, scope: !20059)
!20065 = !DILocalVariable(name: "shift", arg: 2, scope: !20059, file: !20060, line: 103, type: !14)
!20066 = !DILocation(line: 103, column: 52, scope: !20059)
!20067 = !DILocation(line: 105, column: 10, scope: !20059)
!20068 = !DILocation(line: 105, column: 19, scope: !20059)
!20069 = !DILocation(line: 105, column: 25, scope: !20059)
!20070 = !DILocation(line: 105, column: 15, scope: !20059)
!20071 = !DILocation(line: 105, column: 35, scope: !20059)
!20072 = !DILocation(line: 105, column: 46, scope: !20059)
!20073 = !DILocation(line: 105, column: 45, scope: !20059)
!20074 = !DILocation(line: 105, column: 53, scope: !20059)
!20075 = !DILocation(line: 105, column: 40, scope: !20059)
!20076 = !DILocation(line: 105, column: 32, scope: !20059)
!20077 = !DILocation(line: 105, column: 2, scope: !20059)
!20078 = distinct !DISubprogram(name: "mlxsw_reg_slcr_pp_set", scope: !10113, file: !10113, line: 1361, type: !14426, scopeLine: 1361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20079 = !DILocalVariable(name: "buf", arg: 1, scope: !20078, file: !10113, line: 1361, type: !733)
!20080 = !DILocation(line: 1361, column: 1, scope: !20078)
!20081 = !DILocalVariable(name: "val", arg: 2, scope: !20078, file: !10113, line: 1361, type: !862)
!20082 = distinct !DISubprogram(name: "mlxsw_reg_slcr_type_set", scope: !10113, file: !10113, line: 1382, type: !14426, scopeLine: 1382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20083 = !DILocalVariable(name: "buf", arg: 1, scope: !20082, file: !10113, line: 1382, type: !733)
!20084 = !DILocation(line: 1382, column: 1, scope: !20082)
!20085 = !DILocalVariable(name: "val", arg: 2, scope: !20082, file: !10113, line: 1382, type: !862)
!20086 = distinct !DISubprogram(name: "mlxsw_reg_slcr_lag_hash_set", scope: !10113, file: !10113, line: 1442, type: !14426, scopeLine: 1442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20087 = !DILocalVariable(name: "buf", arg: 1, scope: !20086, file: !10113, line: 1442, type: !733)
!20088 = !DILocation(line: 1442, column: 1, scope: !20086)
!20089 = !DILocalVariable(name: "val", arg: 2, scope: !20086, file: !10113, line: 1442, type: !862)
!20090 = distinct !DISubprogram(name: "mlxsw_reg_slcr_seed_set", scope: !10113, file: !10113, line: 1448, type: !14426, scopeLine: 1448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20091 = !DILocalVariable(name: "buf", arg: 1, scope: !20090, file: !10113, line: 1448, type: !733)
!20092 = !DILocation(line: 1448, column: 1, scope: !20090)
!20093 = !DILocalVariable(name: "val", arg: 2, scope: !20090, file: !10113, line: 1448, type: !862)
!20094 = distinct !DISubprogram(name: "kmalloc_array", scope: !10234, file: !10234, line: 584, type: !20033, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20095 = !DILocation(line: 445, column: 72, scope: !12750, inlinedAt: !20096)
!20096 = distinct !DILocation(line: 552, column: 10, scope: !12755, inlinedAt: !20097)
!20097 = distinct !DILocation(line: 591, column: 10, scope: !20098)
!20098 = distinct !DILexicalBlock(scope: !20094, file: !10234, line: 590, column: 6)
!20099 = !DILocation(line: 446, column: 9, scope: !12750, inlinedAt: !20096)
!20100 = !DILocation(line: 446, column: 23, scope: !12750, inlinedAt: !20096)
!20101 = !DILocation(line: 448, column: 8, scope: !12750, inlinedAt: !20096)
!20102 = !DILocation(line: 318, column: 67, scope: !12768, inlinedAt: !20103)
!20103 = distinct !DILocation(line: 553, column: 20, scope: !12755, inlinedAt: !20097)
!20104 = !DILocation(line: 346, column: 58, scope: !12774, inlinedAt: !20105)
!20105 = distinct !DILocation(line: 547, column: 11, scope: !12755, inlinedAt: !20097)
!20106 = !DILocation(line: 472, column: 28, scope: !12780, inlinedAt: !20107)
!20107 = distinct !DILocation(line: 481, column: 9, scope: !12785, inlinedAt: !20108)
!20108 = distinct !DILocation(line: 545, column: 11, scope: !12787, inlinedAt: !20097)
!20109 = !DILocation(line: 472, column: 40, scope: !12780, inlinedAt: !20107)
!20110 = !DILocation(line: 472, column: 60, scope: !12780, inlinedAt: !20107)
!20111 = !DILocation(line: 478, column: 51, scope: !12785, inlinedAt: !20108)
!20112 = !DILocation(line: 478, column: 63, scope: !12785, inlinedAt: !20108)
!20113 = !DILocation(line: 480, column: 15, scope: !12785, inlinedAt: !20108)
!20114 = !DILocation(line: 538, column: 45, scope: !12757, inlinedAt: !20097)
!20115 = !DILocation(line: 538, column: 57, scope: !12757, inlinedAt: !20097)
!20116 = !DILocation(line: 542, column: 16, scope: !12755, inlinedAt: !20097)
!20117 = !DILocalVariable(name: "n", arg: 1, scope: !20094, file: !10234, line: 584, type: !750)
!20118 = !DILocation(line: 584, column: 42, scope: !20094)
!20119 = !DILocalVariable(name: "size", arg: 2, scope: !20094, file: !10234, line: 584, type: !750)
!20120 = !DILocation(line: 584, column: 52, scope: !20094)
!20121 = !DILocalVariable(name: "flags", arg: 3, scope: !20094, file: !10234, line: 584, type: !2144)
!20122 = !DILocation(line: 584, column: 64, scope: !20094)
!20123 = !DILocalVariable(name: "bytes", scope: !20094, file: !10234, line: 586, type: !750)
!20124 = !DILocation(line: 586, column: 9, scope: !20094)
!20125 = !DILocalVariable(name: "__a", scope: !20126, file: !10234, line: 588, type: !750)
!20126 = distinct !DILexicalBlock(scope: !20127, file: !10234, line: 588, column: 6)
!20127 = distinct !DILexicalBlock(scope: !20094, file: !10234, line: 588, column: 6)
!20128 = !DILocation(line: 588, column: 6, scope: !20126)
!20129 = !DILocalVariable(name: "__b", scope: !20126, file: !10234, line: 588, type: !750)
!20130 = !DILocalVariable(name: "__d", scope: !20126, file: !10234, line: 588, type: !2007)
!20131 = !DILocation(line: 588, column: 6, scope: !20127)
!20132 = !DILocation(line: 588, column: 6, scope: !20094)
!20133 = !DILocation(line: 589, column: 3, scope: !20127)
!20134 = !DILocation(line: 590, column: 27, scope: !20098)
!20135 = !DILocation(line: 590, column: 6, scope: !20098)
!20136 = !DILocation(line: 590, column: 30, scope: !20098)
!20137 = !DILocation(line: 590, column: 54, scope: !20098)
!20138 = !DILocation(line: 590, column: 33, scope: !20098)
!20139 = !DILocation(line: 590, column: 6, scope: !20094)
!20140 = !DILocation(line: 591, column: 18, scope: !20098)
!20141 = !DILocation(line: 591, column: 25, scope: !20098)
!20142 = !DILocation(line: 540, column: 27, scope: !12756, inlinedAt: !20097)
!20143 = !DILocation(line: 540, column: 6, scope: !12756, inlinedAt: !20097)
!20144 = !DILocation(line: 540, column: 6, scope: !12757, inlinedAt: !20097)
!20145 = !DILocation(line: 544, column: 7, scope: !12787, inlinedAt: !20097)
!20146 = !DILocation(line: 544, column: 12, scope: !12787, inlinedAt: !20097)
!20147 = !DILocation(line: 544, column: 7, scope: !12755, inlinedAt: !20097)
!20148 = !DILocation(line: 545, column: 25, scope: !12787, inlinedAt: !20097)
!20149 = !DILocation(line: 545, column: 31, scope: !12787, inlinedAt: !20097)
!20150 = !DILocation(line: 480, column: 33, scope: !12785, inlinedAt: !20108)
!20151 = !DILocation(line: 480, column: 23, scope: !12785, inlinedAt: !20108)
!20152 = !DILocation(line: 481, column: 29, scope: !12785, inlinedAt: !20108)
!20153 = !DILocation(line: 481, column: 35, scope: !12785, inlinedAt: !20108)
!20154 = !DILocation(line: 481, column: 42, scope: !12785, inlinedAt: !20108)
!20155 = !DILocation(line: 474, column: 23, scope: !12780, inlinedAt: !20107)
!20156 = !DILocation(line: 474, column: 29, scope: !12780, inlinedAt: !20107)
!20157 = !DILocation(line: 474, column: 36, scope: !12780, inlinedAt: !20107)
!20158 = !DILocation(line: 474, column: 9, scope: !12780, inlinedAt: !20107)
!20159 = !DILocation(line: 545, column: 4, scope: !12787, inlinedAt: !20097)
!20160 = !DILocation(line: 547, column: 25, scope: !12755, inlinedAt: !20097)
!20161 = !DILocation(line: 348, column: 7, scope: !12842, inlinedAt: !20105)
!20162 = !DILocation(line: 348, column: 6, scope: !12774, inlinedAt: !20105)
!20163 = !DILocation(line: 349, column: 3, scope: !12842, inlinedAt: !20105)
!20164 = !DILocation(line: 351, column: 6, scope: !12846, inlinedAt: !20105)
!20165 = !DILocation(line: 351, column: 11, scope: !12846, inlinedAt: !20105)
!20166 = !DILocation(line: 351, column: 6, scope: !12774, inlinedAt: !20105)
!20167 = !DILocation(line: 352, column: 3, scope: !12846, inlinedAt: !20105)
!20168 = !DILocation(line: 354, column: 32, scope: !12851, inlinedAt: !20105)
!20169 = !DILocation(line: 354, column: 37, scope: !12851, inlinedAt: !20105)
!20170 = !DILocation(line: 354, column: 42, scope: !12851, inlinedAt: !20105)
!20171 = !DILocation(line: 354, column: 45, scope: !12851, inlinedAt: !20105)
!20172 = !DILocation(line: 354, column: 50, scope: !12851, inlinedAt: !20105)
!20173 = !DILocation(line: 354, column: 6, scope: !12774, inlinedAt: !20105)
!20174 = !DILocation(line: 355, column: 3, scope: !12851, inlinedAt: !20105)
!20175 = !DILocation(line: 356, column: 32, scope: !12859, inlinedAt: !20105)
!20176 = !DILocation(line: 356, column: 37, scope: !12859, inlinedAt: !20105)
!20177 = !DILocation(line: 356, column: 43, scope: !12859, inlinedAt: !20105)
!20178 = !DILocation(line: 356, column: 46, scope: !12859, inlinedAt: !20105)
!20179 = !DILocation(line: 356, column: 51, scope: !12859, inlinedAt: !20105)
!20180 = !DILocation(line: 356, column: 6, scope: !12774, inlinedAt: !20105)
!20181 = !DILocation(line: 357, column: 3, scope: !12859, inlinedAt: !20105)
!20182 = !DILocation(line: 358, column: 6, scope: !12867, inlinedAt: !20105)
!20183 = !DILocation(line: 358, column: 11, scope: !12867, inlinedAt: !20105)
!20184 = !DILocation(line: 358, column: 6, scope: !12774, inlinedAt: !20105)
!20185 = !DILocation(line: 358, column: 26, scope: !12867, inlinedAt: !20105)
!20186 = !DILocation(line: 359, column: 6, scope: !12872, inlinedAt: !20105)
!20187 = !DILocation(line: 359, column: 11, scope: !12872, inlinedAt: !20105)
!20188 = !DILocation(line: 359, column: 6, scope: !12774, inlinedAt: !20105)
!20189 = !DILocation(line: 359, column: 26, scope: !12872, inlinedAt: !20105)
!20190 = !DILocation(line: 360, column: 6, scope: !12877, inlinedAt: !20105)
!20191 = !DILocation(line: 360, column: 11, scope: !12877, inlinedAt: !20105)
!20192 = !DILocation(line: 360, column: 6, scope: !12774, inlinedAt: !20105)
!20193 = !DILocation(line: 360, column: 26, scope: !12877, inlinedAt: !20105)
!20194 = !DILocation(line: 361, column: 6, scope: !12882, inlinedAt: !20105)
!20195 = !DILocation(line: 361, column: 11, scope: !12882, inlinedAt: !20105)
!20196 = !DILocation(line: 361, column: 6, scope: !12774, inlinedAt: !20105)
!20197 = !DILocation(line: 361, column: 26, scope: !12882, inlinedAt: !20105)
!20198 = !DILocation(line: 362, column: 6, scope: !12887, inlinedAt: !20105)
!20199 = !DILocation(line: 362, column: 11, scope: !12887, inlinedAt: !20105)
!20200 = !DILocation(line: 362, column: 6, scope: !12774, inlinedAt: !20105)
!20201 = !DILocation(line: 362, column: 26, scope: !12887, inlinedAt: !20105)
!20202 = !DILocation(line: 363, column: 6, scope: !12892, inlinedAt: !20105)
!20203 = !DILocation(line: 363, column: 11, scope: !12892, inlinedAt: !20105)
!20204 = !DILocation(line: 363, column: 6, scope: !12774, inlinedAt: !20105)
!20205 = !DILocation(line: 363, column: 26, scope: !12892, inlinedAt: !20105)
!20206 = !DILocation(line: 364, column: 6, scope: !12897, inlinedAt: !20105)
!20207 = !DILocation(line: 364, column: 11, scope: !12897, inlinedAt: !20105)
!20208 = !DILocation(line: 364, column: 6, scope: !12774, inlinedAt: !20105)
!20209 = !DILocation(line: 364, column: 26, scope: !12897, inlinedAt: !20105)
!20210 = !DILocation(line: 365, column: 6, scope: !12902, inlinedAt: !20105)
!20211 = !DILocation(line: 365, column: 11, scope: !12902, inlinedAt: !20105)
!20212 = !DILocation(line: 365, column: 6, scope: !12774, inlinedAt: !20105)
!20213 = !DILocation(line: 365, column: 26, scope: !12902, inlinedAt: !20105)
!20214 = !DILocation(line: 366, column: 6, scope: !12907, inlinedAt: !20105)
!20215 = !DILocation(line: 366, column: 11, scope: !12907, inlinedAt: !20105)
!20216 = !DILocation(line: 366, column: 6, scope: !12774, inlinedAt: !20105)
!20217 = !DILocation(line: 366, column: 26, scope: !12907, inlinedAt: !20105)
!20218 = !DILocation(line: 367, column: 6, scope: !12912, inlinedAt: !20105)
!20219 = !DILocation(line: 367, column: 11, scope: !12912, inlinedAt: !20105)
!20220 = !DILocation(line: 367, column: 6, scope: !12774, inlinedAt: !20105)
!20221 = !DILocation(line: 367, column: 26, scope: !12912, inlinedAt: !20105)
!20222 = !DILocation(line: 368, column: 6, scope: !12917, inlinedAt: !20105)
!20223 = !DILocation(line: 368, column: 11, scope: !12917, inlinedAt: !20105)
!20224 = !DILocation(line: 368, column: 6, scope: !12774, inlinedAt: !20105)
!20225 = !DILocation(line: 368, column: 26, scope: !12917, inlinedAt: !20105)
!20226 = !DILocation(line: 369, column: 6, scope: !12922, inlinedAt: !20105)
!20227 = !DILocation(line: 369, column: 11, scope: !12922, inlinedAt: !20105)
!20228 = !DILocation(line: 369, column: 6, scope: !12774, inlinedAt: !20105)
!20229 = !DILocation(line: 369, column: 26, scope: !12922, inlinedAt: !20105)
!20230 = !DILocation(line: 370, column: 6, scope: !12927, inlinedAt: !20105)
!20231 = !DILocation(line: 370, column: 11, scope: !12927, inlinedAt: !20105)
!20232 = !DILocation(line: 370, column: 6, scope: !12774, inlinedAt: !20105)
!20233 = !DILocation(line: 370, column: 26, scope: !12927, inlinedAt: !20105)
!20234 = !DILocation(line: 371, column: 6, scope: !12932, inlinedAt: !20105)
!20235 = !DILocation(line: 371, column: 11, scope: !12932, inlinedAt: !20105)
!20236 = !DILocation(line: 371, column: 6, scope: !12774, inlinedAt: !20105)
!20237 = !DILocation(line: 371, column: 26, scope: !12932, inlinedAt: !20105)
!20238 = !DILocation(line: 372, column: 6, scope: !12937, inlinedAt: !20105)
!20239 = !DILocation(line: 372, column: 11, scope: !12937, inlinedAt: !20105)
!20240 = !DILocation(line: 372, column: 6, scope: !12774, inlinedAt: !20105)
!20241 = !DILocation(line: 372, column: 26, scope: !12937, inlinedAt: !20105)
!20242 = !DILocation(line: 373, column: 6, scope: !12942, inlinedAt: !20105)
!20243 = !DILocation(line: 373, column: 11, scope: !12942, inlinedAt: !20105)
!20244 = !DILocation(line: 373, column: 6, scope: !12774, inlinedAt: !20105)
!20245 = !DILocation(line: 373, column: 26, scope: !12942, inlinedAt: !20105)
!20246 = !DILocation(line: 374, column: 6, scope: !12947, inlinedAt: !20105)
!20247 = !DILocation(line: 374, column: 11, scope: !12947, inlinedAt: !20105)
!20248 = !DILocation(line: 374, column: 6, scope: !12774, inlinedAt: !20105)
!20249 = !DILocation(line: 374, column: 26, scope: !12947, inlinedAt: !20105)
!20250 = !DILocation(line: 375, column: 6, scope: !12952, inlinedAt: !20105)
!20251 = !DILocation(line: 375, column: 11, scope: !12952, inlinedAt: !20105)
!20252 = !DILocation(line: 375, column: 6, scope: !12774, inlinedAt: !20105)
!20253 = !DILocation(line: 375, column: 27, scope: !12952, inlinedAt: !20105)
!20254 = !DILocation(line: 376, column: 6, scope: !12957, inlinedAt: !20105)
!20255 = !DILocation(line: 376, column: 11, scope: !12957, inlinedAt: !20105)
!20256 = !DILocation(line: 376, column: 6, scope: !12774, inlinedAt: !20105)
!20257 = !DILocation(line: 376, column: 32, scope: !12957, inlinedAt: !20105)
!20258 = !DILocation(line: 377, column: 6, scope: !12962, inlinedAt: !20105)
!20259 = !DILocation(line: 377, column: 11, scope: !12962, inlinedAt: !20105)
!20260 = !DILocation(line: 377, column: 6, scope: !12774, inlinedAt: !20105)
!20261 = !DILocation(line: 377, column: 32, scope: !12962, inlinedAt: !20105)
!20262 = !DILocation(line: 378, column: 6, scope: !12967, inlinedAt: !20105)
!20263 = !DILocation(line: 378, column: 11, scope: !12967, inlinedAt: !20105)
!20264 = !DILocation(line: 378, column: 6, scope: !12774, inlinedAt: !20105)
!20265 = !DILocation(line: 378, column: 32, scope: !12967, inlinedAt: !20105)
!20266 = !DILocation(line: 379, column: 6, scope: !12972, inlinedAt: !20105)
!20267 = !DILocation(line: 379, column: 11, scope: !12972, inlinedAt: !20105)
!20268 = !DILocation(line: 379, column: 6, scope: !12774, inlinedAt: !20105)
!20269 = !DILocation(line: 379, column: 33, scope: !12972, inlinedAt: !20105)
!20270 = !DILocation(line: 380, column: 6, scope: !12977, inlinedAt: !20105)
!20271 = !DILocation(line: 380, column: 11, scope: !12977, inlinedAt: !20105)
!20272 = !DILocation(line: 380, column: 6, scope: !12774, inlinedAt: !20105)
!20273 = !DILocation(line: 380, column: 33, scope: !12977, inlinedAt: !20105)
!20274 = !DILocation(line: 381, column: 6, scope: !12982, inlinedAt: !20105)
!20275 = !DILocation(line: 381, column: 11, scope: !12982, inlinedAt: !20105)
!20276 = !DILocation(line: 381, column: 6, scope: !12774, inlinedAt: !20105)
!20277 = !DILocation(line: 381, column: 33, scope: !12982, inlinedAt: !20105)
!20278 = !DILocation(line: 382, column: 2, scope: !12987, inlinedAt: !20105)
!20279 = !DILocation(line: 382, column: 2, scope: !12991, inlinedAt: !20105)
!20280 = !DILocation(line: 382, column: 2, scope: !12992, inlinedAt: !20105)
!20281 = !DILocation(line: 386, column: 1, scope: !12774, inlinedAt: !20105)
!20282 = !DILocation(line: 547, column: 9, scope: !12755, inlinedAt: !20097)
!20283 = !DILocation(line: 549, column: 8, scope: !12998, inlinedAt: !20097)
!20284 = !DILocation(line: 549, column: 7, scope: !12755, inlinedAt: !20097)
!20285 = !DILocation(line: 550, column: 4, scope: !12998, inlinedAt: !20097)
!20286 = !DILocation(line: 553, column: 33, scope: !12755, inlinedAt: !20097)
!20287 = !DILocation(line: 325, column: 6, scope: !13003, inlinedAt: !20103)
!20288 = !DILocation(line: 325, column: 6, scope: !12768, inlinedAt: !20103)
!20289 = !DILocation(line: 326, column: 3, scope: !13003, inlinedAt: !20103)
!20290 = !DILocation(line: 332, column: 9, scope: !12768, inlinedAt: !20103)
!20291 = !DILocation(line: 332, column: 15, scope: !12768, inlinedAt: !20103)
!20292 = !DILocation(line: 332, column: 2, scope: !12768, inlinedAt: !20103)
!20293 = !DILocation(line: 336, column: 1, scope: !12768, inlinedAt: !20103)
!20294 = !DILocation(line: 553, column: 5, scope: !12755, inlinedAt: !20097)
!20295 = !DILocation(line: 553, column: 41, scope: !12755, inlinedAt: !20097)
!20296 = !DILocation(line: 554, column: 5, scope: !12755, inlinedAt: !20097)
!20297 = !DILocation(line: 554, column: 12, scope: !12755, inlinedAt: !20097)
!20298 = !DILocation(line: 448, column: 31, scope: !12750, inlinedAt: !20096)
!20299 = !DILocation(line: 448, column: 34, scope: !12750, inlinedAt: !20096)
!20300 = !DILocation(line: 448, column: 14, scope: !12750, inlinedAt: !20096)
!20301 = !DILocation(line: 450, column: 22, scope: !12750, inlinedAt: !20096)
!20302 = !DILocation(line: 450, column: 25, scope: !12750, inlinedAt: !20096)
!20303 = !DILocation(line: 450, column: 30, scope: !12750, inlinedAt: !20096)
!20304 = !DILocation(line: 450, column: 36, scope: !12750, inlinedAt: !20096)
!20305 = !DILocation(line: 450, column: 8, scope: !12750, inlinedAt: !20096)
!20306 = !DILocation(line: 450, column: 6, scope: !12750, inlinedAt: !20096)
!20307 = !DILocation(line: 451, column: 9, scope: !12750, inlinedAt: !20096)
!20308 = !DILocation(line: 552, column: 3, scope: !12755, inlinedAt: !20097)
!20309 = !DILocation(line: 557, column: 19, scope: !12757, inlinedAt: !20097)
!20310 = !DILocation(line: 557, column: 25, scope: !12757, inlinedAt: !20097)
!20311 = !DILocation(line: 557, column: 9, scope: !12757, inlinedAt: !20097)
!20312 = !DILocation(line: 557, column: 2, scope: !12757, inlinedAt: !20097)
!20313 = !DILocation(line: 558, column: 1, scope: !12757, inlinedAt: !20097)
!20314 = !DILocation(line: 591, column: 3, scope: !20098)
!20315 = !DILocation(line: 592, column: 19, scope: !20094)
!20316 = !DILocation(line: 592, column: 26, scope: !20094)
!20317 = !DILocation(line: 592, column: 9, scope: !20094)
!20318 = !DILocation(line: 592, column: 2, scope: !20094)
!20319 = !DILocation(line: 593, column: 1, scope: !20094)
!20320 = distinct !DISubprogram(name: "netdev_notifier_info_to_dev", scope: !6, file: !6, line: 2718, type: !20321, scopeLine: 2719, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20321 = !DISubroutineType(types: !20322)
!20322 = !{!451, !20323}
!20323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20324, size: 64)
!20324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11529)
!20325 = !DILocalVariable(name: "info", arg: 1, scope: !20320, file: !6, line: 2718, type: !20323)
!20326 = !DILocation(line: 2718, column: 64, scope: !20320)
!20327 = !DILocation(line: 2720, column: 9, scope: !20320)
!20328 = !DILocation(line: 2720, column: 15, scope: !20320)
!20329 = !DILocation(line: 2720, column: 2, scope: !20320)
!20330 = distinct !DISubprogram(name: "netif_is_vxlan", scope: !20331, file: !20331, line: 416, type: !14728, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20331 = !DIFile(filename: "./include/net/vxlan.h", directory: "/home/lizy2001/genbc/linux")
!20332 = !DILocalVariable(name: "dev", arg: 1, scope: !20330, file: !20331, line: 416, type: !3023)
!20333 = !DILocation(line: 416, column: 60, scope: !20330)
!20334 = !DILocation(line: 418, column: 9, scope: !20330)
!20335 = !DILocation(line: 418, column: 14, scope: !20330)
!20336 = !DILocation(line: 418, column: 28, scope: !20330)
!20337 = !DILocation(line: 419, column: 17, scope: !20330)
!20338 = !DILocation(line: 419, column: 22, scope: !20330)
!20339 = !DILocation(line: 419, column: 37, scope: !20330)
!20340 = !DILocation(line: 419, column: 10, scope: !20330)
!20341 = !DILocation(line: 419, column: 9, scope: !20330)
!20342 = !DILocation(line: 0, scope: !20330)
!20343 = !DILocation(line: 418, column: 2, scope: !20330)
!20344 = distinct !DISubprogram(name: "mlxsw_sp_netdevice_vxlan_event", scope: !3, file: !3, line: 4227, type: !20345, scopeLine: 4230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20345 = !DISubroutineType(types: !20346)
!20346 = !{!7, !10721, !451, !473, !726}
!20347 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !20344, file: !3, line: 4227, type: !10721)
!20348 = !DILocation(line: 4227, column: 60, scope: !20344)
!20349 = !DILocalVariable(name: "dev", arg: 2, scope: !20344, file: !3, line: 4228, type: !451)
!20350 = !DILocation(line: 4228, column: 27, scope: !20344)
!20351 = !DILocalVariable(name: "event", arg: 3, scope: !20344, file: !3, line: 4229, type: !473)
!20352 = !DILocation(line: 4229, column: 22, scope: !20344)
!20353 = !DILocalVariable(name: "ptr", arg: 4, scope: !20344, file: !3, line: 4229, type: !726)
!20354 = !DILocation(line: 4229, column: 35, scope: !20344)
!20355 = !DILocalVariable(name: "cu_info", scope: !20344, file: !3, line: 4231, type: !11525)
!20356 = !DILocation(line: 4231, column: 43, scope: !20344)
!20357 = !DILocalVariable(name: "info", scope: !20344, file: !3, line: 4232, type: !20358)
!20358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11529, size: 64)
!20359 = !DILocation(line: 4232, column: 31, scope: !20344)
!20360 = !DILocation(line: 4232, column: 38, scope: !20344)
!20361 = !DILocalVariable(name: "extack", scope: !20344, file: !3, line: 4233, type: !2633)
!20362 = !DILocation(line: 4233, column: 26, scope: !20344)
!20363 = !DILocalVariable(name: "upper_dev", scope: !20344, file: !3, line: 4234, type: !451)
!20364 = !DILocation(line: 4234, column: 21, scope: !20344)
!20365 = !DILocation(line: 4236, column: 42, scope: !20344)
!20366 = !DILocation(line: 4236, column: 11, scope: !20344)
!20367 = !DILocation(line: 4236, column: 9, scope: !20344)
!20368 = !DILocation(line: 4238, column: 10, scope: !20344)
!20369 = !DILocation(line: 4238, column: 2, scope: !20344)
!20370 = !DILocalVariable(name: "__mptr", scope: !20371, file: !3, line: 4240, type: !726)
!20371 = distinct !DILexicalBlock(scope: !20372, file: !3, line: 4240, column: 13)
!20372 = distinct !DILexicalBlock(scope: !20344, file: !3, line: 4238, column: 17)
!20373 = !DILocation(line: 4240, column: 13, scope: !20371)
!20374 = !DILocation(line: 4240, column: 13, scope: !20375)
!20375 = distinct !DILexicalBlock(scope: !20371, file: !3, line: 4240, column: 13)
!20376 = !DILocation(line: 4240, column: 11, scope: !20372)
!20377 = !DILocation(line: 4243, column: 15, scope: !20372)
!20378 = !DILocation(line: 4243, column: 24, scope: !20372)
!20379 = !DILocation(line: 4243, column: 13, scope: !20372)
!20380 = !DILocation(line: 4244, column: 31, scope: !20381)
!20381 = distinct !DILexicalBlock(scope: !20372, file: !3, line: 4244, column: 7)
!20382 = !DILocation(line: 4244, column: 8, scope: !20381)
!20383 = !DILocation(line: 4244, column: 7, scope: !20372)
!20384 = !DILocation(line: 4245, column: 4, scope: !20381)
!20385 = !DILocation(line: 4246, column: 27, scope: !20386)
!20386 = distinct !DILexicalBlock(scope: !20372, file: !3, line: 4246, column: 7)
!20387 = !DILocation(line: 4246, column: 8, scope: !20386)
!20388 = !DILocation(line: 4246, column: 7, scope: !20372)
!20389 = !DILocation(line: 4247, column: 4, scope: !20386)
!20390 = !DILocation(line: 4248, column: 39, scope: !20391)
!20391 = distinct !DILexicalBlock(scope: !20372, file: !3, line: 4248, column: 7)
!20392 = !DILocation(line: 4248, column: 50, scope: !20391)
!20393 = !DILocation(line: 4248, column: 8, scope: !20391)
!20394 = !DILocation(line: 4248, column: 7, scope: !20372)
!20395 = !DILocation(line: 4249, column: 4, scope: !20391)
!20396 = !DILocation(line: 4250, column: 7, scope: !20397)
!20397 = distinct !DILexicalBlock(scope: !20372, file: !3, line: 4250, column: 7)
!20398 = !DILocation(line: 4250, column: 16, scope: !20397)
!20399 = !DILocation(line: 4250, column: 7, scope: !20372)
!20400 = !DILocation(line: 4251, column: 23, scope: !20401)
!20401 = distinct !DILexicalBlock(scope: !20402, file: !3, line: 4251, column: 8)
!20402 = distinct !DILexicalBlock(scope: !20397, file: !3, line: 4250, column: 25)
!20403 = !DILocation(line: 4251, column: 9, scope: !20401)
!20404 = !DILocation(line: 4251, column: 8, scope: !20402)
!20405 = !DILocation(line: 4252, column: 5, scope: !20401)
!20406 = !DILocation(line: 4257, column: 24, scope: !20407)
!20407 = distinct !DILexicalBlock(scope: !20402, file: !3, line: 4257, column: 8)
!20408 = !DILocation(line: 4257, column: 8, scope: !20407)
!20409 = !DILocation(line: 4257, column: 8, scope: !20402)
!20410 = !DILocation(line: 4258, column: 5, scope: !20407)
!20411 = !DILocation(line: 4259, column: 38, scope: !20402)
!20412 = !DILocation(line: 4259, column: 48, scope: !20402)
!20413 = !DILocation(line: 4260, column: 10, scope: !20402)
!20414 = !DILocation(line: 4260, column: 18, scope: !20402)
!20415 = !DILocation(line: 4259, column: 11, scope: !20402)
!20416 = !DILocation(line: 4259, column: 4, scope: !20402)
!20417 = !DILocation(line: 4265, column: 24, scope: !20418)
!20418 = distinct !DILexicalBlock(scope: !20419, file: !3, line: 4265, column: 8)
!20419 = distinct !DILexicalBlock(scope: !20397, file: !3, line: 4261, column: 10)
!20420 = !DILocation(line: 4265, column: 8, scope: !20418)
!20421 = !DILocation(line: 4265, column: 8, scope: !20419)
!20422 = !DILocation(line: 4266, column: 5, scope: !20418)
!20423 = !DILocation(line: 4267, column: 32, scope: !20419)
!20424 = !DILocation(line: 4267, column: 42, scope: !20419)
!20425 = !DILocation(line: 4267, column: 4, scope: !20419)
!20426 = !DILocation(line: 4269, column: 3, scope: !20372)
!20427 = !DILocation(line: 4271, column: 43, scope: !20372)
!20428 = !DILocation(line: 4271, column: 15, scope: !20372)
!20429 = !DILocation(line: 4271, column: 13, scope: !20372)
!20430 = !DILocation(line: 4272, column: 8, scope: !20431)
!20431 = distinct !DILexicalBlock(scope: !20372, file: !3, line: 4272, column: 7)
!20432 = !DILocation(line: 4272, column: 7, scope: !20372)
!20433 = !DILocation(line: 4273, column: 4, scope: !20431)
!20434 = !DILocation(line: 4274, column: 31, scope: !20435)
!20435 = distinct !DILexicalBlock(scope: !20372, file: !3, line: 4274, column: 7)
!20436 = !DILocation(line: 4274, column: 8, scope: !20435)
!20437 = !DILocation(line: 4274, column: 7, scope: !20372)
!20438 = !DILocation(line: 4275, column: 4, scope: !20435)
!20439 = !DILocation(line: 4276, column: 27, scope: !20440)
!20440 = distinct !DILexicalBlock(scope: !20372, file: !3, line: 4276, column: 7)
!20441 = !DILocation(line: 4276, column: 8, scope: !20440)
!20442 = !DILocation(line: 4276, column: 7, scope: !20372)
!20443 = !DILocation(line: 4277, column: 4, scope: !20440)
!20444 = !DILocation(line: 4278, column: 37, scope: !20372)
!20445 = !DILocation(line: 4278, column: 47, scope: !20372)
!20446 = !DILocation(line: 4278, column: 58, scope: !20372)
!20447 = !DILocation(line: 4279, column: 9, scope: !20372)
!20448 = !DILocation(line: 4278, column: 10, scope: !20372)
!20449 = !DILocation(line: 4278, column: 3, scope: !20372)
!20450 = !DILocation(line: 4281, column: 43, scope: !20372)
!20451 = !DILocation(line: 4281, column: 15, scope: !20372)
!20452 = !DILocation(line: 4281, column: 13, scope: !20372)
!20453 = !DILocation(line: 4282, column: 8, scope: !20454)
!20454 = distinct !DILexicalBlock(scope: !20372, file: !3, line: 4282, column: 7)
!20455 = !DILocation(line: 4282, column: 7, scope: !20372)
!20456 = !DILocation(line: 4283, column: 4, scope: !20454)
!20457 = !DILocation(line: 4284, column: 31, scope: !20458)
!20458 = distinct !DILexicalBlock(scope: !20372, file: !3, line: 4284, column: 7)
!20459 = !DILocation(line: 4284, column: 8, scope: !20458)
!20460 = !DILocation(line: 4284, column: 7, scope: !20372)
!20461 = !DILocation(line: 4285, column: 4, scope: !20458)
!20462 = !DILocation(line: 4286, column: 27, scope: !20463)
!20463 = distinct !DILexicalBlock(scope: !20372, file: !3, line: 4286, column: 7)
!20464 = !DILocation(line: 4286, column: 8, scope: !20463)
!20465 = !DILocation(line: 4286, column: 7, scope: !20372)
!20466 = !DILocation(line: 4287, column: 4, scope: !20463)
!20467 = !DILocation(line: 4288, column: 31, scope: !20372)
!20468 = !DILocation(line: 4288, column: 41, scope: !20372)
!20469 = !DILocation(line: 4288, column: 3, scope: !20372)
!20470 = !DILocation(line: 4289, column: 3, scope: !20372)
!20471 = !DILocation(line: 4292, column: 2, scope: !20344)
!20472 = !DILocation(line: 4293, column: 1, scope: !20344)
!20473 = distinct !DISubprogram(name: "mlxsw_sp_is_vrf_event", scope: !3, file: !3, line: 4218, type: !20474, scopeLine: 4219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20474 = !DISubroutineType(types: !20475)
!20475 = !{!696, !473, !726}
!20476 = !DILocalVariable(name: "event", arg: 1, scope: !20473, file: !3, line: 4218, type: !473)
!20477 = !DILocation(line: 4218, column: 49, scope: !20473)
!20478 = !DILocalVariable(name: "ptr", arg: 2, scope: !20473, file: !3, line: 4218, type: !726)
!20479 = !DILocation(line: 4218, column: 62, scope: !20473)
!20480 = !DILocalVariable(name: "info", scope: !20473, file: !3, line: 4220, type: !11525)
!20481 = !DILocation(line: 4220, column: 43, scope: !20473)
!20482 = !DILocation(line: 4220, column: 50, scope: !20473)
!20483 = !DILocation(line: 4222, column: 6, scope: !20484)
!20484 = distinct !DILexicalBlock(scope: !20473, file: !3, line: 4222, column: 6)
!20485 = !DILocation(line: 4222, column: 12, scope: !20484)
!20486 = !DILocation(line: 4222, column: 37, scope: !20484)
!20487 = !DILocation(line: 4222, column: 40, scope: !20484)
!20488 = !DILocation(line: 4222, column: 46, scope: !20484)
!20489 = !DILocation(line: 4222, column: 6, scope: !20473)
!20490 = !DILocation(line: 4223, column: 3, scope: !20484)
!20491 = !DILocation(line: 4224, column: 28, scope: !20473)
!20492 = !DILocation(line: 4224, column: 34, scope: !20473)
!20493 = !DILocation(line: 4224, column: 9, scope: !20473)
!20494 = !DILocation(line: 4224, column: 2, scope: !20473)
!20495 = !DILocation(line: 4225, column: 1, scope: !20473)
!20496 = distinct !DISubprogram(name: "mlxsw_sp_netdevice_port_event", scope: !3, file: !3, line: 3971, type: !12307, scopeLine: 3974, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20497 = !DILocalVariable(name: "lower_dev", arg: 1, scope: !20496, file: !3, line: 3971, type: !451)
!20498 = !DILocation(line: 3971, column: 61, scope: !20496)
!20499 = !DILocalVariable(name: "port_dev", arg: 2, scope: !20496, file: !3, line: 3972, type: !451)
!20500 = !DILocation(line: 3972, column: 26, scope: !20496)
!20501 = !DILocalVariable(name: "event", arg: 3, scope: !20496, file: !3, line: 3973, type: !473)
!20502 = !DILocation(line: 3973, column: 21, scope: !20496)
!20503 = !DILocalVariable(name: "ptr", arg: 4, scope: !20496, file: !3, line: 3973, type: !726)
!20504 = !DILocation(line: 3973, column: 34, scope: !20496)
!20505 = !DILocation(line: 3975, column: 10, scope: !20496)
!20506 = !DILocation(line: 3975, column: 2, scope: !20496)
!20507 = !DILocation(line: 3978, column: 46, scope: !20508)
!20508 = distinct !DILexicalBlock(scope: !20496, file: !3, line: 3975, column: 17)
!20509 = !DILocation(line: 3978, column: 57, scope: !20508)
!20510 = !DILocation(line: 3979, column: 11, scope: !20508)
!20511 = !DILocation(line: 3979, column: 18, scope: !20508)
!20512 = !DILocation(line: 3978, column: 10, scope: !20508)
!20513 = !DILocation(line: 3978, column: 3, scope: !20508)
!20514 = !DILocation(line: 3981, column: 46, scope: !20508)
!20515 = !DILocation(line: 3981, column: 56, scope: !20508)
!20516 = !DILocation(line: 3982, column: 11, scope: !20508)
!20517 = !DILocation(line: 3981, column: 10, scope: !20508)
!20518 = !DILocation(line: 3981, column: 3, scope: !20508)
!20519 = !DILocation(line: 3985, column: 2, scope: !20496)
!20520 = !DILocation(line: 3986, column: 1, scope: !20496)
!20521 = distinct !DISubprogram(name: "netif_is_lag_master", scope: !6, file: !6, line: 4951, type: !14728, scopeLine: 4952, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20522 = !DILocalVariable(name: "dev", arg: 1, scope: !20521, file: !6, line: 4951, type: !3023)
!20523 = !DILocation(line: 4951, column: 65, scope: !20521)
!20524 = !DILocation(line: 4953, column: 30, scope: !20521)
!20525 = !DILocation(line: 4953, column: 9, scope: !20521)
!20526 = !DILocation(line: 4953, column: 35, scope: !20521)
!20527 = !DILocation(line: 4953, column: 59, scope: !20521)
!20528 = !DILocation(line: 4953, column: 38, scope: !20521)
!20529 = !DILocation(line: 4953, column: 2, scope: !20521)
!20530 = distinct !DISubprogram(name: "mlxsw_sp_netdevice_lag_event", scope: !3, file: !3, line: 3988, type: !12394, scopeLine: 3990, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20531 = !DILocalVariable(name: "lag_dev", arg: 1, scope: !20530, file: !3, line: 3988, type: !451)
!20532 = !DILocation(line: 3988, column: 60, scope: !20530)
!20533 = !DILocalVariable(name: "event", arg: 2, scope: !20530, file: !3, line: 3989, type: !473)
!20534 = !DILocation(line: 3989, column: 20, scope: !20530)
!20535 = !DILocalVariable(name: "ptr", arg: 3, scope: !20530, file: !3, line: 3989, type: !726)
!20536 = !DILocation(line: 3989, column: 33, scope: !20530)
!20537 = !DILocalVariable(name: "dev", scope: !20530, file: !3, line: 3991, type: !451)
!20538 = !DILocation(line: 3991, column: 21, scope: !20530)
!20539 = !DILocalVariable(name: "iter", scope: !20530, file: !3, line: 3992, type: !448)
!20540 = !DILocation(line: 3992, column: 20, scope: !20530)
!20541 = !DILocalVariable(name: "ret", scope: !20530, file: !3, line: 3993, type: !7)
!20542 = !DILocation(line: 3993, column: 6, scope: !20530)
!20543 = !DILocation(line: 3995, column: 2, scope: !20544)
!20544 = distinct !DILexicalBlock(scope: !20530, file: !3, line: 3995, column: 2)
!20545 = !DILocation(line: 3995, column: 2, scope: !20546)
!20546 = distinct !DILexicalBlock(scope: !20544, file: !3, line: 3995, column: 2)
!20547 = !DILocation(line: 3996, column: 31, scope: !20548)
!20548 = distinct !DILexicalBlock(scope: !20549, file: !3, line: 3996, column: 7)
!20549 = distinct !DILexicalBlock(scope: !20546, file: !3, line: 3995, column: 48)
!20550 = !DILocation(line: 3996, column: 7, scope: !20548)
!20551 = !DILocation(line: 3996, column: 7, scope: !20549)
!20552 = !DILocation(line: 3997, column: 40, scope: !20553)
!20553 = distinct !DILexicalBlock(scope: !20548, file: !3, line: 3996, column: 37)
!20554 = !DILocation(line: 3997, column: 49, scope: !20553)
!20555 = !DILocation(line: 3997, column: 54, scope: !20553)
!20556 = !DILocation(line: 3998, column: 12, scope: !20553)
!20557 = !DILocation(line: 3997, column: 10, scope: !20553)
!20558 = !DILocation(line: 3997, column: 8, scope: !20553)
!20559 = !DILocation(line: 3999, column: 8, scope: !20560)
!20560 = distinct !DILexicalBlock(scope: !20553, file: !3, line: 3999, column: 8)
!20561 = !DILocation(line: 3999, column: 8, scope: !20553)
!20562 = !DILocation(line: 4000, column: 12, scope: !20560)
!20563 = !DILocation(line: 4000, column: 5, scope: !20560)
!20564 = !DILocation(line: 4001, column: 3, scope: !20553)
!20565 = !DILocation(line: 4002, column: 2, scope: !20549)
!20566 = distinct !{!20566, !20543, !20567}
!20567 = !DILocation(line: 4002, column: 2, scope: !20544)
!20568 = !DILocation(line: 4004, column: 2, scope: !20530)
!20569 = !DILocation(line: 4005, column: 1, scope: !20530)
!20570 = distinct !DISubprogram(name: "is_vlan_dev", scope: !20571, file: !20571, line: 72, type: !14728, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20571 = !DIFile(filename: "./include/linux/if_vlan.h", directory: "/home/lizy2001/genbc/linux")
!20572 = !DILocalVariable(name: "dev", arg: 1, scope: !20570, file: !20571, line: 72, type: !3023)
!20573 = !DILocation(line: 72, column: 57, scope: !20570)
!20574 = !DILocation(line: 74, column: 16, scope: !20570)
!20575 = !DILocation(line: 74, column: 21, scope: !20570)
!20576 = !DILocation(line: 74, column: 32, scope: !20570)
!20577 = !DILocation(line: 74, column: 9, scope: !20570)
!20578 = distinct !DISubprogram(name: "mlxsw_sp_netdevice_vlan_event", scope: !3, file: !3, line: 4138, type: !12394, scopeLine: 4140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20579 = !DILocalVariable(name: "vlan_dev", arg: 1, scope: !20578, file: !3, line: 4138, type: !451)
!20580 = !DILocation(line: 4138, column: 61, scope: !20578)
!20581 = !DILocalVariable(name: "event", arg: 2, scope: !20578, file: !3, line: 4139, type: !473)
!20582 = !DILocation(line: 4139, column: 21, scope: !20578)
!20583 = !DILocalVariable(name: "ptr", arg: 3, scope: !20578, file: !3, line: 4139, type: !726)
!20584 = !DILocation(line: 4139, column: 34, scope: !20578)
!20585 = !DILocalVariable(name: "real_dev", scope: !20578, file: !3, line: 4141, type: !451)
!20586 = !DILocation(line: 4141, column: 21, scope: !20578)
!20587 = !DILocation(line: 4141, column: 50, scope: !20578)
!20588 = !DILocation(line: 4141, column: 32, scope: !20578)
!20589 = !DILocalVariable(name: "vid", scope: !20578, file: !3, line: 4142, type: !1193)
!20590 = !DILocation(line: 4142, column: 6, scope: !20578)
!20591 = !DILocation(line: 4142, column: 29, scope: !20578)
!20592 = !DILocation(line: 4142, column: 12, scope: !20578)
!20593 = !DILocation(line: 4144, column: 30, scope: !20594)
!20594 = distinct !DILexicalBlock(scope: !20578, file: !3, line: 4144, column: 6)
!20595 = !DILocation(line: 4144, column: 6, scope: !20594)
!20596 = !DILocation(line: 4144, column: 6, scope: !20578)
!20597 = !DILocation(line: 4145, column: 45, scope: !20594)
!20598 = !DILocation(line: 4145, column: 55, scope: !20594)
!20599 = !DILocation(line: 4146, column: 10, scope: !20594)
!20600 = !DILocation(line: 4146, column: 17, scope: !20594)
!20601 = !DILocation(line: 4146, column: 22, scope: !20594)
!20602 = !DILocation(line: 4145, column: 10, scope: !20594)
!20603 = !DILocation(line: 4145, column: 3, scope: !20594)
!20604 = !DILocation(line: 4147, column: 31, scope: !20605)
!20605 = distinct !DILexicalBlock(scope: !20594, file: !3, line: 4147, column: 11)
!20606 = !DILocation(line: 4147, column: 11, scope: !20605)
!20607 = !DILocation(line: 4147, column: 11, scope: !20594)
!20608 = !DILocation(line: 4148, column: 49, scope: !20605)
!20609 = !DILocation(line: 4149, column: 14, scope: !20605)
!20610 = !DILocation(line: 4149, column: 24, scope: !20605)
!20611 = !DILocation(line: 4150, column: 14, scope: !20605)
!20612 = !DILocation(line: 4150, column: 19, scope: !20605)
!20613 = !DILocation(line: 4148, column: 10, scope: !20605)
!20614 = !DILocation(line: 4148, column: 3, scope: !20605)
!20615 = !DILocation(line: 4151, column: 34, scope: !20616)
!20616 = distinct !DILexicalBlock(scope: !20605, file: !3, line: 4151, column: 11)
!20617 = !DILocation(line: 4151, column: 11, scope: !20616)
!20618 = !DILocation(line: 4151, column: 11, scope: !20605)
!20619 = !DILocation(line: 4152, column: 47, scope: !20616)
!20620 = !DILocation(line: 4152, column: 57, scope: !20616)
!20621 = !DILocation(line: 4153, column: 12, scope: !20616)
!20622 = !DILocation(line: 4153, column: 19, scope: !20616)
!20623 = !DILocation(line: 4153, column: 24, scope: !20616)
!20624 = !DILocation(line: 4152, column: 10, scope: !20616)
!20625 = !DILocation(line: 4152, column: 3, scope: !20616)
!20626 = !DILocation(line: 4155, column: 2, scope: !20578)
!20627 = !DILocation(line: 4156, column: 1, scope: !20578)
!20628 = distinct !DISubprogram(name: "netif_is_bridge_master", scope: !6, file: !6, line: 4916, type: !14728, scopeLine: 4917, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20629 = !DILocalVariable(name: "dev", arg: 1, scope: !20628, file: !6, line: 4916, type: !3023)
!20630 = !DILocation(line: 4916, column: 68, scope: !20628)
!20631 = !DILocation(line: 4918, column: 9, scope: !20628)
!20632 = !DILocation(line: 4918, column: 14, scope: !20628)
!20633 = !DILocation(line: 4918, column: 25, scope: !20628)
!20634 = !DILocation(line: 4918, column: 2, scope: !20628)
!20635 = !DILocalVariable(name: "br_dev", arg: 1, scope: !12393, file: !3, line: 4158, type: !451)
!20636 = !DILocation(line: 4158, column: 63, scope: !12393)
!20637 = !DILocalVariable(name: "event", arg: 2, scope: !12393, file: !3, line: 4159, type: !473)
!20638 = !DILocation(line: 4159, column: 23, scope: !12393)
!20639 = !DILocalVariable(name: "ptr", arg: 3, scope: !12393, file: !3, line: 4159, type: !726)
!20640 = !DILocation(line: 4159, column: 36, scope: !12393)
!20641 = !DILocalVariable(name: "mlxsw_sp", scope: !12393, file: !3, line: 4161, type: !10721)
!20642 = !DILocation(line: 4161, column: 19, scope: !12393)
!20643 = !DILocation(line: 4161, column: 49, scope: !12393)
!20644 = !DILocation(line: 4161, column: 30, scope: !12393)
!20645 = !DILocalVariable(name: "info", scope: !12393, file: !3, line: 4162, type: !11525)
!20646 = !DILocation(line: 4162, column: 43, scope: !12393)
!20647 = !DILocation(line: 4162, column: 50, scope: !12393)
!20648 = !DILocalVariable(name: "extack", scope: !12393, file: !3, line: 4163, type: !2633)
!20649 = !DILocation(line: 4163, column: 26, scope: !12393)
!20650 = !DILocalVariable(name: "upper_dev", scope: !12393, file: !3, line: 4164, type: !451)
!20651 = !DILocation(line: 4164, column: 21, scope: !12393)
!20652 = !DILocation(line: 4166, column: 7, scope: !20653)
!20653 = distinct !DILexicalBlock(scope: !12393, file: !3, line: 4166, column: 6)
!20654 = !DILocation(line: 4166, column: 6, scope: !12393)
!20655 = !DILocation(line: 4167, column: 3, scope: !20653)
!20656 = !DILocation(line: 4169, column: 43, scope: !12393)
!20657 = !DILocation(line: 4169, column: 49, scope: !12393)
!20658 = !DILocation(line: 4169, column: 11, scope: !12393)
!20659 = !DILocation(line: 4169, column: 9, scope: !12393)
!20660 = !DILocation(line: 4171, column: 10, scope: !12393)
!20661 = !DILocation(line: 4171, column: 2, scope: !12393)
!20662 = !DILocation(line: 4173, column: 15, scope: !20663)
!20663 = distinct !DILexicalBlock(scope: !12393, file: !3, line: 4171, column: 17)
!20664 = !DILocation(line: 4173, column: 21, scope: !20663)
!20665 = !DILocation(line: 4173, column: 13, scope: !20663)
!20666 = !DILocation(line: 4174, column: 20, scope: !20667)
!20667 = distinct !DILexicalBlock(scope: !20663, file: !3, line: 4174, column: 7)
!20668 = !DILocation(line: 4174, column: 8, scope: !20667)
!20669 = !DILocation(line: 4174, column: 31, scope: !20667)
!20670 = !DILocation(line: 4174, column: 52, scope: !20667)
!20671 = !DILocation(line: 4174, column: 35, scope: !20667)
!20672 = !DILocation(line: 4174, column: 7, scope: !20663)
!20673 = !DILocation(line: 4175, column: 4, scope: !20674)
!20674 = distinct !DILexicalBlock(scope: !20667, file: !3, line: 4174, column: 64)
!20675 = !DILocalVariable(name: "__extack", scope: !20676, file: !3, line: 4175, type: !2633)
!20676 = distinct !DILexicalBlock(scope: !20674, file: !3, line: 4175, column: 4)
!20677 = !DILocation(line: 4175, column: 4, scope: !20676)
!20678 = !DILocation(line: 4175, column: 4, scope: !20679)
!20679 = distinct !DILexicalBlock(scope: !20676, file: !3, line: 4175, column: 4)
!20680 = !DILocation(line: 4176, column: 4, scope: !20674)
!20681 = !DILocation(line: 4178, column: 8, scope: !20682)
!20682 = distinct !DILexicalBlock(scope: !20663, file: !3, line: 4178, column: 7)
!20683 = !DILocation(line: 4178, column: 14, scope: !20682)
!20684 = !DILocation(line: 4178, column: 7, scope: !20663)
!20685 = !DILocation(line: 4179, column: 4, scope: !20682)
!20686 = !DILocation(line: 4180, column: 24, scope: !20687)
!20687 = distinct !DILexicalBlock(scope: !20663, file: !3, line: 4180, column: 7)
!20688 = !DILocation(line: 4180, column: 7, scope: !20687)
!20689 = !DILocation(line: 4180, column: 35, scope: !20687)
!20690 = !DILocation(line: 4181, column: 28, scope: !20687)
!20691 = !DILocation(line: 4181, column: 38, scope: !20687)
!20692 = !DILocation(line: 4181, column: 8, scope: !20687)
!20693 = !DILocation(line: 4180, column: 7, scope: !20663)
!20694 = !DILocation(line: 4182, column: 4, scope: !20695)
!20695 = distinct !DILexicalBlock(scope: !20687, file: !3, line: 4181, column: 47)
!20696 = !DILocalVariable(name: "__extack", scope: !20697, file: !3, line: 4182, type: !2633)
!20697 = distinct !DILexicalBlock(scope: !20695, file: !3, line: 4182, column: 4)
!20698 = !DILocation(line: 4182, column: 4, scope: !20697)
!20699 = !DILocation(line: 4182, column: 4, scope: !20700)
!20700 = distinct !DILexicalBlock(scope: !20697, file: !3, line: 4182, column: 4)
!20701 = !DILocation(line: 4183, column: 4, scope: !20695)
!20702 = !DILocation(line: 4185, column: 3, scope: !20663)
!20703 = !DILocation(line: 4187, column: 15, scope: !20663)
!20704 = !DILocation(line: 4187, column: 21, scope: !20663)
!20705 = !DILocation(line: 4187, column: 13, scope: !20663)
!20706 = !DILocation(line: 4188, column: 7, scope: !20707)
!20707 = distinct !DILexicalBlock(scope: !20663, file: !3, line: 4188, column: 7)
!20708 = !DILocation(line: 4188, column: 13, scope: !20707)
!20709 = !DILocation(line: 4188, column: 7, scope: !20663)
!20710 = !DILocation(line: 4189, column: 4, scope: !20707)
!20711 = !DILocation(line: 4190, column: 19, scope: !20712)
!20712 = distinct !DILexicalBlock(scope: !20663, file: !3, line: 4190, column: 7)
!20713 = !DILocation(line: 4190, column: 7, scope: !20712)
!20714 = !DILocation(line: 4190, column: 7, scope: !20663)
!20715 = !DILocation(line: 4191, column: 32, scope: !20712)
!20716 = !DILocation(line: 4191, column: 42, scope: !20712)
!20717 = !DILocation(line: 4191, column: 4, scope: !20712)
!20718 = !DILocation(line: 4192, column: 24, scope: !20719)
!20719 = distinct !DILexicalBlock(scope: !20663, file: !3, line: 4192, column: 7)
!20720 = !DILocation(line: 4192, column: 7, scope: !20719)
!20721 = !DILocation(line: 4192, column: 7, scope: !20663)
!20722 = !DILocation(line: 4193, column: 29, scope: !20719)
!20723 = !DILocation(line: 4193, column: 39, scope: !20719)
!20724 = !DILocation(line: 4193, column: 4, scope: !20719)
!20725 = !DILocation(line: 4194, column: 3, scope: !20663)
!20726 = !DILocation(line: 4197, column: 2, scope: !12393)
!20727 = !DILocation(line: 4198, column: 1, scope: !12393)
!20728 = distinct !DISubprogram(name: "netif_is_macvlan", scope: !6, file: !6, line: 4876, type: !14728, scopeLine: 4877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20729 = !DILocalVariable(name: "dev", arg: 1, scope: !20728, file: !6, line: 4876, type: !3023)
!20730 = !DILocation(line: 4876, column: 62, scope: !20728)
!20731 = !DILocation(line: 4878, column: 9, scope: !20728)
!20732 = !DILocation(line: 4878, column: 14, scope: !20728)
!20733 = !DILocation(line: 4878, column: 25, scope: !20728)
!20734 = !DILocation(line: 4878, column: 2, scope: !20728)
!20735 = !DILocalVariable(name: "macvlan_dev", arg: 1, scope: !12400, file: !3, line: 4200, type: !451)
!20736 = !DILocation(line: 4200, column: 64, scope: !12400)
!20737 = !DILocalVariable(name: "event", arg: 2, scope: !12400, file: !3, line: 4201, type: !473)
!20738 = !DILocation(line: 4201, column: 24, scope: !12400)
!20739 = !DILocalVariable(name: "ptr", arg: 3, scope: !12400, file: !3, line: 4201, type: !726)
!20740 = !DILocation(line: 4201, column: 37, scope: !12400)
!20741 = !DILocalVariable(name: "mlxsw_sp", scope: !12400, file: !3, line: 4203, type: !10721)
!20742 = !DILocation(line: 4203, column: 19, scope: !12400)
!20743 = !DILocation(line: 4203, column: 49, scope: !12400)
!20744 = !DILocation(line: 4203, column: 30, scope: !12400)
!20745 = !DILocalVariable(name: "info", scope: !12400, file: !3, line: 4204, type: !11525)
!20746 = !DILocation(line: 4204, column: 43, scope: !12400)
!20747 = !DILocation(line: 4204, column: 50, scope: !12400)
!20748 = !DILocalVariable(name: "extack", scope: !12400, file: !3, line: 4205, type: !2633)
!20749 = !DILocation(line: 4205, column: 26, scope: !12400)
!20750 = !DILocation(line: 4207, column: 7, scope: !20751)
!20751 = distinct !DILexicalBlock(scope: !12400, file: !3, line: 4207, column: 6)
!20752 = !DILocation(line: 4207, column: 16, scope: !20751)
!20753 = !DILocation(line: 4207, column: 19, scope: !20751)
!20754 = !DILocation(line: 4207, column: 25, scope: !20751)
!20755 = !DILocation(line: 4207, column: 6, scope: !12400)
!20756 = !DILocation(line: 4208, column: 3, scope: !20751)
!20757 = !DILocation(line: 4210, column: 43, scope: !12400)
!20758 = !DILocation(line: 4210, column: 49, scope: !12400)
!20759 = !DILocation(line: 4210, column: 11, scope: !12400)
!20760 = !DILocation(line: 4210, column: 9, scope: !12400)
!20761 = !DILocation(line: 4213, column: 2, scope: !12400)
!20762 = !DILocalVariable(name: "__extack", scope: !20763, file: !3, line: 4213, type: !2633)
!20763 = distinct !DILexicalBlock(scope: !12400, file: !3, line: 4213, column: 2)
!20764 = !DILocation(line: 4213, column: 2, scope: !20763)
!20765 = !DILocation(line: 4213, column: 2, scope: !20766)
!20766 = distinct !DILexicalBlock(scope: !20763, file: !3, line: 4213, column: 2)
!20767 = !DILocation(line: 4215, column: 2, scope: !12400)
!20768 = !DILocation(line: 4216, column: 1, scope: !12400)
!20769 = distinct !DISubprogram(name: "notifier_from_errno", scope: !2166, file: !2166, line: 189, type: !6496, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20770 = !DILocalVariable(name: "err", arg: 1, scope: !20769, file: !2166, line: 189, type: !7)
!20771 = !DILocation(line: 189, column: 43, scope: !20769)
!20772 = !DILocation(line: 191, column: 6, scope: !20773)
!20773 = distinct !DILexicalBlock(scope: !20769, file: !2166, line: 191, column: 6)
!20774 = !DILocation(line: 191, column: 6, scope: !20769)
!20775 = !DILocation(line: 192, column: 42, scope: !20773)
!20776 = !DILocation(line: 192, column: 40, scope: !20773)
!20777 = !DILocation(line: 192, column: 27, scope: !20773)
!20778 = !DILocation(line: 192, column: 3, scope: !20773)
!20779 = !DILocation(line: 194, column: 2, scope: !20769)
!20780 = !DILocation(line: 195, column: 1, scope: !20769)
!20781 = distinct !DISubprogram(name: "netdev_notifier_info_to_extack", scope: !6, file: !6, line: 2724, type: !20782, scopeLine: 2725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20782 = !DISubroutineType(types: !20783)
!20783 = !{!2633, !20323}
!20784 = !DILocalVariable(name: "info", arg: 1, scope: !20781, file: !6, line: 2724, type: !20323)
!20785 = !DILocation(line: 2724, column: 67, scope: !20781)
!20786 = !DILocation(line: 2726, column: 9, scope: !20781)
!20787 = !DILocation(line: 2726, column: 15, scope: !20781)
!20788 = !DILocation(line: 2726, column: 2, scope: !20781)
!20789 = !DILocalVariable(name: "br_dev", arg: 1, scope: !12288, file: !3, line: 3810, type: !451)
!20790 = !DILocation(line: 3810, column: 63, scope: !12288)
!20791 = !DILocalVariable(name: "extack", arg: 2, scope: !12288, file: !3, line: 3811, type: !2633)
!20792 = !DILocation(line: 3811, column: 33, scope: !12288)
!20793 = !DILocation(line: 3813, column: 27, scope: !20794)
!20794 = distinct !DILexicalBlock(scope: !12288, file: !3, line: 3813, column: 6)
!20795 = !DILocation(line: 3813, column: 6, scope: !20794)
!20796 = !DILocation(line: 3813, column: 6, scope: !12288)
!20797 = !DILocation(line: 3814, column: 3, scope: !20798)
!20798 = distinct !DILexicalBlock(scope: !20794, file: !3, line: 3813, column: 36)
!20799 = !DILocalVariable(name: "__extack", scope: !20800, file: !3, line: 3814, type: !2633)
!20800 = distinct !DILexicalBlock(scope: !20798, file: !3, line: 3814, column: 3)
!20801 = !DILocation(line: 3814, column: 3, scope: !20800)
!20802 = !DILocation(line: 3814, column: 3, scope: !20803)
!20803 = distinct !DILexicalBlock(scope: !20800, file: !3, line: 3814, column: 3)
!20804 = !DILocation(line: 3815, column: 3, scope: !20798)
!20805 = !DILocation(line: 3818, column: 23, scope: !20806)
!20806 = distinct !DILexicalBlock(scope: !12288, file: !3, line: 3818, column: 6)
!20807 = !DILocation(line: 3818, column: 7, scope: !20806)
!20808 = !DILocation(line: 3818, column: 31, scope: !20806)
!20809 = !DILocation(line: 3819, column: 42, scope: !20806)
!20810 = !DILocation(line: 3819, column: 6, scope: !20806)
!20811 = !DILocation(line: 3818, column: 6, scope: !12288)
!20812 = !DILocation(line: 3820, column: 3, scope: !20813)
!20813 = distinct !DILexicalBlock(scope: !20806, file: !3, line: 3819, column: 51)
!20814 = !DILocalVariable(name: "__extack", scope: !20815, file: !3, line: 3820, type: !2633)
!20815 = distinct !DILexicalBlock(scope: !20813, file: !3, line: 3820, column: 3)
!20816 = !DILocation(line: 3820, column: 3, scope: !20815)
!20817 = !DILocation(line: 3820, column: 3, scope: !20818)
!20818 = distinct !DILexicalBlock(scope: !20815, file: !3, line: 3820, column: 3)
!20819 = !DILocation(line: 3821, column: 3, scope: !20813)
!20820 = !DILocation(line: 3824, column: 22, scope: !20821)
!20821 = distinct !DILexicalBlock(scope: !12288, file: !3, line: 3824, column: 6)
!20822 = !DILocation(line: 3824, column: 6, scope: !20821)
!20823 = !DILocation(line: 3824, column: 30, scope: !20821)
!20824 = !DILocation(line: 3825, column: 43, scope: !20821)
!20825 = !DILocation(line: 3825, column: 7, scope: !20821)
!20826 = !DILocation(line: 3824, column: 6, scope: !12288)
!20827 = !DILocation(line: 3826, column: 3, scope: !20828)
!20828 = distinct !DILexicalBlock(scope: !20821, file: !3, line: 3825, column: 52)
!20829 = !DILocalVariable(name: "__extack", scope: !20830, file: !3, line: 3826, type: !2633)
!20830 = distinct !DILexicalBlock(scope: !20828, file: !3, line: 3826, column: 3)
!20831 = !DILocation(line: 3826, column: 3, scope: !20830)
!20832 = !DILocation(line: 3826, column: 3, scope: !20833)
!20833 = distinct !DILexicalBlock(scope: !20830, file: !3, line: 3826, column: 3)
!20834 = !DILocation(line: 3827, column: 3, scope: !20828)
!20835 = !DILocation(line: 3830, column: 2, scope: !12288)
!20836 = !DILocation(line: 3831, column: 1, scope: !12288)
!20837 = distinct !DISubprogram(name: "br_vlan_enabled", scope: !20838, file: !20838, line: 105, type: !14728, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20838 = !DIFile(filename: "./include/linux/if_bridge.h", directory: "/home/lizy2001/genbc/linux")
!20839 = !DILocalVariable(name: "dev", arg: 1, scope: !20837, file: !20838, line: 105, type: !3023)
!20840 = !DILocation(line: 105, column: 61, scope: !20837)
!20841 = !DILocation(line: 107, column: 2, scope: !20837)
!20842 = distinct !DISubprogram(name: "mlxsw_sp_bridge_has_multiple_vxlans", scope: !3, file: !3, line: 3772, type: !20843, scopeLine: 3773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20843 = !DISubroutineType(types: !20844)
!20844 = !{!696, !451}
!20845 = !DILocalVariable(name: "br_dev", arg: 1, scope: !20842, file: !3, line: 3772, type: !451)
!20846 = !DILocation(line: 3772, column: 68, scope: !20842)
!20847 = !DILocalVariable(name: "num_vxlans", scope: !20842, file: !3, line: 3774, type: !14)
!20848 = !DILocation(line: 3774, column: 15, scope: !20842)
!20849 = !DILocalVariable(name: "dev", scope: !20842, file: !3, line: 3775, type: !451)
!20850 = !DILocation(line: 3775, column: 21, scope: !20842)
!20851 = !DILocalVariable(name: "iter", scope: !20842, file: !3, line: 3776, type: !448)
!20852 = !DILocation(line: 3776, column: 20, scope: !20842)
!20853 = !DILocation(line: 3778, column: 2, scope: !20854)
!20854 = distinct !DILexicalBlock(scope: !20842, file: !3, line: 3778, column: 2)
!20855 = !DILocation(line: 3778, column: 2, scope: !20856)
!20856 = distinct !DILexicalBlock(scope: !20854, file: !3, line: 3778, column: 2)
!20857 = !DILocation(line: 3779, column: 22, scope: !20858)
!20858 = distinct !DILexicalBlock(scope: !20859, file: !3, line: 3779, column: 7)
!20859 = distinct !DILexicalBlock(scope: !20856, file: !3, line: 3778, column: 47)
!20860 = !DILocation(line: 3779, column: 7, scope: !20858)
!20861 = !DILocation(line: 3779, column: 7, scope: !20859)
!20862 = !DILocation(line: 3780, column: 14, scope: !20858)
!20863 = !DILocation(line: 3780, column: 4, scope: !20858)
!20864 = !DILocation(line: 3781, column: 2, scope: !20859)
!20865 = distinct !{!20865, !20853, !20866}
!20866 = !DILocation(line: 3781, column: 2, scope: !20854)
!20867 = !DILocation(line: 3783, column: 9, scope: !20842)
!20868 = !DILocation(line: 3783, column: 20, scope: !20842)
!20869 = !DILocation(line: 3783, column: 2, scope: !20842)
!20870 = distinct !DISubprogram(name: "mlxsw_sp_bridge_vxlan_vlan_is_valid", scope: !3, file: !3, line: 3786, type: !20843, scopeLine: 3787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20871 = !DILocalVariable(name: "br_dev", arg: 1, scope: !20870, file: !3, line: 3786, type: !451)
!20872 = !DILocation(line: 3786, column: 68, scope: !20870)
!20873 = !DILocalVariable(name: "vlans", scope: !20870, file: !3, line: 3788, type: !20874)
!20874 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 4096, elements: !4302)
!20875 = !DILocation(line: 3788, column: 2, scope: !20870)
!20876 = !DILocalVariable(name: "dev", scope: !20870, file: !3, line: 3789, type: !451)
!20877 = !DILocation(line: 3789, column: 21, scope: !20870)
!20878 = !DILocalVariable(name: "iter", scope: !20870, file: !3, line: 3790, type: !448)
!20879 = !DILocation(line: 3790, column: 20, scope: !20870)
!20880 = !DILocation(line: 3792, column: 2, scope: !20881)
!20881 = distinct !DILexicalBlock(scope: !20870, file: !3, line: 3792, column: 2)
!20882 = !DILocation(line: 3792, column: 2, scope: !20883)
!20883 = distinct !DILexicalBlock(scope: !20881, file: !3, line: 3792, column: 2)
!20884 = !DILocalVariable(name: "pvid", scope: !20885, file: !3, line: 3793, type: !1193)
!20885 = distinct !DILexicalBlock(scope: !20883, file: !3, line: 3792, column: 47)
!20886 = !DILocation(line: 3793, column: 7, scope: !20885)
!20887 = !DILocalVariable(name: "err", scope: !20885, file: !3, line: 3794, type: !7)
!20888 = !DILocation(line: 3794, column: 7, scope: !20885)
!20889 = !DILocation(line: 3796, column: 23, scope: !20890)
!20890 = distinct !DILexicalBlock(scope: !20885, file: !3, line: 3796, column: 7)
!20891 = !DILocation(line: 3796, column: 8, scope: !20890)
!20892 = !DILocation(line: 3796, column: 7, scope: !20885)
!20893 = !DILocation(line: 3797, column: 4, scope: !20890)
!20894 = !DILocation(line: 3799, column: 35, scope: !20885)
!20895 = !DILocation(line: 3799, column: 9, scope: !20885)
!20896 = !DILocation(line: 3799, column: 7, scope: !20885)
!20897 = !DILocation(line: 3800, column: 7, scope: !20898)
!20898 = distinct !DILexicalBlock(scope: !20885, file: !3, line: 3800, column: 7)
!20899 = !DILocation(line: 3800, column: 11, scope: !20898)
!20900 = !DILocation(line: 3800, column: 15, scope: !20898)
!20901 = !DILocation(line: 3800, column: 7, scope: !20885)
!20902 = !DILocation(line: 3801, column: 4, scope: !20898)
!20903 = !DILocation(line: 3803, column: 24, scope: !20904)
!20904 = distinct !DILexicalBlock(scope: !20885, file: !3, line: 3803, column: 7)
!20905 = !DILocation(line: 3803, column: 30, scope: !20904)
!20906 = !DILocation(line: 3803, column: 7, scope: !20904)
!20907 = !DILocation(line: 3803, column: 7, scope: !20885)
!20908 = !DILocation(line: 3804, column: 4, scope: !20904)
!20909 = !DILocation(line: 3805, column: 2, scope: !20885)
!20910 = distinct !{!20910, !20880, !20911}
!20911 = !DILocation(line: 3805, column: 2, scope: !20881)
!20912 = !DILocation(line: 3807, column: 2, scope: !20870)
!20913 = !DILocation(line: 3808, column: 1, scope: !20870)
!20914 = distinct !DISubprogram(name: "mlxsw_sp_vxlan_mapped_vid", scope: !10118, file: !10118, line: 368, type: !20915, scopeLine: 369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20915 = !DISubroutineType(types: !20916)
!20916 = !{!7, !3023, !8521}
!20917 = !DILocalVariable(name: "vxlan_dev", arg: 1, scope: !20914, file: !10118, line: 368, type: !3023)
!20918 = !DILocation(line: 368, column: 52, scope: !20914)
!20919 = !DILocalVariable(name: "p_vid", arg: 2, scope: !20914, file: !10118, line: 368, type: !8521)
!20920 = !DILocation(line: 368, column: 68, scope: !20914)
!20921 = !DILocalVariable(name: "vinfo", scope: !20914, file: !10118, line: 370, type: !20922)
!20922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bridge_vlan_info", file: !20923, line: 136, size: 32, elements: !20924)
!20923 = !DIFile(filename: "./include/uapi/linux/if_bridge.h", directory: "/home/lizy2001/genbc/linux")
!20924 = !{!20925, !20926}
!20925 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !20922, file: !20923, line: 137, baseType: !632, size: 16)
!20926 = !DIDerivedType(tag: DW_TAG_member, name: "vid", scope: !20922, file: !20923, line: 138, baseType: !632, size: 16, offset: 16)
!20927 = !DILocation(line: 370, column: 26, scope: !20914)
!20928 = !DILocalVariable(name: "vid", scope: !20914, file: !10118, line: 371, type: !1193)
!20929 = !DILocation(line: 371, column: 6, scope: !20914)
!20930 = !DILocalVariable(name: "err", scope: !20914, file: !10118, line: 372, type: !7)
!20931 = !DILocation(line: 372, column: 6, scope: !20914)
!20932 = !DILocation(line: 374, column: 25, scope: !20914)
!20933 = !DILocation(line: 374, column: 8, scope: !20914)
!20934 = !DILocation(line: 374, column: 6, scope: !20914)
!20935 = !DILocation(line: 375, column: 6, scope: !20936)
!20936 = distinct !DILexicalBlock(scope: !20914, file: !10118, line: 375, column: 6)
!20937 = !DILocation(line: 375, column: 10, scope: !20936)
!20938 = !DILocation(line: 375, column: 14, scope: !20936)
!20939 = !DILocation(line: 375, column: 6, scope: !20914)
!20940 = !DILocation(line: 376, column: 3, scope: !20936)
!20941 = !DILocation(line: 378, column: 25, scope: !20914)
!20942 = !DILocation(line: 378, column: 36, scope: !20914)
!20943 = !DILocation(line: 378, column: 8, scope: !20914)
!20944 = !DILocation(line: 378, column: 6, scope: !20914)
!20945 = !DILocation(line: 379, column: 6, scope: !20946)
!20946 = distinct !DILexicalBlock(scope: !20914, file: !10118, line: 379, column: 6)
!20947 = !DILocation(line: 379, column: 10, scope: !20946)
!20948 = !DILocation(line: 379, column: 21, scope: !20946)
!20949 = !DILocation(line: 379, column: 15, scope: !20946)
!20950 = !DILocation(line: 379, column: 27, scope: !20946)
!20951 = !DILocation(line: 379, column: 6, scope: !20914)
!20952 = !DILocation(line: 380, column: 7, scope: !20946)
!20953 = !DILocation(line: 380, column: 3, scope: !20946)
!20954 = !DILocation(line: 379, column: 54, scope: !20946)
!20955 = !DILabel(scope: !20914, name: "out", file: !10118, line: 382)
!20956 = !DILocation(line: 382, column: 1, scope: !20914)
!20957 = !DILocation(line: 383, column: 11, scope: !20914)
!20958 = !DILocation(line: 383, column: 3, scope: !20914)
!20959 = !DILocation(line: 383, column: 9, scope: !20914)
!20960 = !DILocation(line: 384, column: 9, scope: !20914)
!20961 = !DILocation(line: 384, column: 2, scope: !20914)
!20962 = distinct !DISubprogram(name: "test_and_set_bit", scope: !16234, file: !16234, line: 68, type: !20963, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20963 = !DISubroutineType(types: !20964)
!20964 = !{!696, !669, !16237}
!20965 = !DILocalVariable(name: "nr", arg: 1, scope: !20966, file: !15172, line: 136, type: !669)
!20966 = distinct !DISubprogram(name: "arch_test_and_set_bit", scope: !15172, file: !15172, line: 136, type: !20963, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20967 = !DILocation(line: 136, column: 28, scope: !20966, inlinedAt: !20968)
!20968 = distinct !DILocation(line: 71, column: 9, scope: !20962)
!20969 = !DILocalVariable(name: "addr", arg: 2, scope: !20966, file: !15172, line: 136, type: !16237)
!20970 = !DILocation(line: 136, column: 56, scope: !20966, inlinedAt: !20968)
!20971 = !DILocalVariable(name: "c", scope: !20972, file: !15172, line: 138, type: !696)
!20972 = distinct !DILexicalBlock(scope: !20966, file: !15172, line: 138, column: 9)
!20973 = !DILocation(line: 138, column: 9, scope: !20972, inlinedAt: !20968)
!20974 = !DILocalVariable(name: "v", arg: 1, scope: !20975, file: !16247, line: 99, type: !16250)
!20975 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !16247, file: !16247, line: 99, type: !16248, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20976 = !DILocation(line: 99, column: 79, scope: !20975, inlinedAt: !20977)
!20977 = distinct !DILocation(line: 70, column: 2, scope: !20962)
!20978 = !DILocalVariable(name: "size", arg: 2, scope: !20975, file: !16247, line: 99, type: !750)
!20979 = !DILocation(line: 99, column: 89, scope: !20975, inlinedAt: !20977)
!20980 = !DILocalVariable(name: "nr", arg: 1, scope: !20962, file: !16234, line: 68, type: !669)
!20981 = !DILocation(line: 68, column: 42, scope: !20962)
!20982 = !DILocalVariable(name: "addr", arg: 2, scope: !20962, file: !16234, line: 68, type: !16237)
!20983 = !DILocation(line: 68, column: 70, scope: !20962)
!20984 = !DILocation(line: 70, column: 31, scope: !20962)
!20985 = !DILocation(line: 70, column: 38, scope: !20962)
!20986 = !DILocation(line: 70, column: 36, scope: !20962)
!20987 = !DILocation(line: 101, column: 20, scope: !20975, inlinedAt: !20977)
!20988 = !DILocation(line: 101, column: 23, scope: !20975, inlinedAt: !20977)
!20989 = !DILocation(line: 101, column: 2, scope: !20975, inlinedAt: !20977)
!20990 = !DILocation(line: 102, column: 2, scope: !20975, inlinedAt: !20977)
!20991 = !DILocation(line: 71, column: 31, scope: !20962)
!20992 = !DILocation(line: 71, column: 35, scope: !20962)
!20993 = !{i32 -2147079443, i32 -2147079347}
!20994 = !DILocation(line: 71, column: 2, scope: !20962)
!20995 = distinct !DISubprogram(name: "br_vlan_get_pvid", scope: !20838, file: !20838, line: 110, type: !20915, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!20996 = !DILocalVariable(name: "dev", arg: 1, scope: !20995, file: !20838, line: 110, type: !3023)
!20997 = !DILocation(line: 110, column: 61, scope: !20995)
!20998 = !DILocalVariable(name: "p_pvid", arg: 2, scope: !20995, file: !20838, line: 110, type: !8521)
!20999 = !DILocation(line: 110, column: 71, scope: !20995)
!21000 = !DILocation(line: 112, column: 2, scope: !20995)
!21001 = distinct !DISubprogram(name: "br_vlan_get_info", scope: !20838, file: !20838, line: 125, type: !21002, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21002 = !DISubroutineType(types: !21003)
!21003 = !{!7, !3023, !1193, !21004}
!21004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20922, size: 64)
!21005 = !DILocalVariable(name: "dev", arg: 1, scope: !21001, file: !20838, line: 125, type: !3023)
!21006 = !DILocation(line: 125, column: 61, scope: !21001)
!21007 = !DILocalVariable(name: "vid", arg: 2, scope: !21001, file: !20838, line: 125, type: !1193)
!21008 = !DILocation(line: 125, column: 70, scope: !21001)
!21009 = !DILocalVariable(name: "p_vinfo", arg: 3, scope: !21001, file: !20838, line: 126, type: !21004)
!21010 = !DILocation(line: 126, column: 33, scope: !21001)
!21011 = !DILocation(line: 128, column: 2, scope: !21001)
!21012 = distinct !DISubprogram(name: "netif_is_l3_master", scope: !6, file: !6, line: 4906, type: !14728, scopeLine: 4907, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21013 = !DILocalVariable(name: "dev", arg: 1, scope: !21012, file: !6, line: 4906, type: !3023)
!21014 = !DILocation(line: 4906, column: 64, scope: !21012)
!21015 = !DILocation(line: 4908, column: 9, scope: !21012)
!21016 = !DILocation(line: 4908, column: 14, scope: !21012)
!21017 = !DILocation(line: 4908, column: 25, scope: !21012)
!21018 = !DILocation(line: 4908, column: 2, scope: !21012)
!21019 = !DILocalVariable(name: "lower_dev", arg: 1, scope: !12306, file: !3, line: 3833, type: !451)
!21020 = !DILocation(line: 3833, column: 67, scope: !12306)
!21021 = !DILocalVariable(name: "dev", arg: 2, scope: !12306, file: !3, line: 3834, type: !451)
!21022 = !DILocation(line: 3834, column: 32, scope: !12306)
!21023 = !DILocalVariable(name: "event", arg: 3, scope: !12306, file: !3, line: 3835, type: !473)
!21024 = !DILocation(line: 3835, column: 27, scope: !12306)
!21025 = !DILocalVariable(name: "ptr", arg: 4, scope: !12306, file: !3, line: 3835, type: !726)
!21026 = !DILocation(line: 3835, column: 40, scope: !12306)
!21027 = !DILocalVariable(name: "info", scope: !12306, file: !3, line: 3837, type: !11525)
!21028 = !DILocation(line: 3837, column: 43, scope: !12306)
!21029 = !DILocalVariable(name: "mlxsw_sp_port", scope: !12306, file: !3, line: 3838, type: !10715)
!21030 = !DILocation(line: 3838, column: 24, scope: !12306)
!21031 = !DILocalVariable(name: "extack", scope: !12306, file: !3, line: 3839, type: !2633)
!21032 = !DILocation(line: 3839, column: 26, scope: !12306)
!21033 = !DILocalVariable(name: "upper_dev", scope: !12306, file: !3, line: 3840, type: !451)
!21034 = !DILocation(line: 3840, column: 21, scope: !12306)
!21035 = !DILocalVariable(name: "mlxsw_sp", scope: !12306, file: !3, line: 3841, type: !10721)
!21036 = !DILocation(line: 3841, column: 19, scope: !12306)
!21037 = !DILocalVariable(name: "err", scope: !12306, file: !3, line: 3842, type: !7)
!21038 = !DILocation(line: 3842, column: 6, scope: !12306)
!21039 = !DILocation(line: 3844, column: 30, scope: !12306)
!21040 = !DILocation(line: 3844, column: 18, scope: !12306)
!21041 = !DILocation(line: 3844, column: 16, scope: !12306)
!21042 = !DILocation(line: 3845, column: 13, scope: !12306)
!21043 = !DILocation(line: 3845, column: 28, scope: !12306)
!21044 = !DILocation(line: 3845, column: 11, scope: !12306)
!21045 = !DILocation(line: 3846, column: 9, scope: !12306)
!21046 = !DILocation(line: 3846, column: 7, scope: !12306)
!21047 = !DILocation(line: 3847, column: 43, scope: !12306)
!21048 = !DILocation(line: 3847, column: 49, scope: !12306)
!21049 = !DILocation(line: 3847, column: 11, scope: !12306)
!21050 = !DILocation(line: 3847, column: 9, scope: !12306)
!21051 = !DILocation(line: 3849, column: 10, scope: !12306)
!21052 = !DILocation(line: 3849, column: 2, scope: !12306)
!21053 = !DILocation(line: 3851, column: 15, scope: !21054)
!21054 = distinct !DILexicalBlock(scope: !12306, file: !3, line: 3849, column: 17)
!21055 = !DILocation(line: 3851, column: 21, scope: !21054)
!21056 = !DILocation(line: 3851, column: 13, scope: !21054)
!21057 = !DILocation(line: 3852, column: 20, scope: !21058)
!21058 = distinct !DILexicalBlock(scope: !21054, file: !3, line: 3852, column: 7)
!21059 = !DILocation(line: 3852, column: 8, scope: !21058)
!21060 = !DILocation(line: 3852, column: 31, scope: !21058)
!21061 = !DILocation(line: 3853, column: 28, scope: !21058)
!21062 = !DILocation(line: 3853, column: 8, scope: !21058)
!21063 = !DILocation(line: 3853, column: 39, scope: !21058)
!21064 = !DILocation(line: 3854, column: 31, scope: !21058)
!21065 = !DILocation(line: 3854, column: 8, scope: !21058)
!21066 = !DILocation(line: 3854, column: 42, scope: !21058)
!21067 = !DILocation(line: 3855, column: 28, scope: !21058)
!21068 = !DILocation(line: 3855, column: 8, scope: !21058)
!21069 = !DILocation(line: 3855, column: 39, scope: !21058)
!21070 = !DILocation(line: 3856, column: 25, scope: !21058)
!21071 = !DILocation(line: 3856, column: 8, scope: !21058)
!21072 = !DILocation(line: 3852, column: 7, scope: !21054)
!21073 = !DILocation(line: 3857, column: 4, scope: !21074)
!21074 = distinct !DILexicalBlock(scope: !21058, file: !3, line: 3856, column: 37)
!21075 = !DILocalVariable(name: "__extack", scope: !21076, file: !3, line: 3857, type: !2633)
!21076 = distinct !DILexicalBlock(scope: !21074, file: !3, line: 3857, column: 4)
!21077 = !DILocation(line: 3857, column: 4, scope: !21076)
!21078 = !DILocation(line: 3857, column: 4, scope: !21079)
!21079 = distinct !DILexicalBlock(scope: !21076, file: !3, line: 3857, column: 4)
!21080 = !DILocation(line: 3858, column: 4, scope: !21074)
!21081 = !DILocation(line: 3860, column: 8, scope: !21082)
!21082 = distinct !DILexicalBlock(scope: !21054, file: !3, line: 3860, column: 7)
!21083 = !DILocation(line: 3860, column: 14, scope: !21082)
!21084 = !DILocation(line: 3860, column: 7, scope: !21054)
!21085 = !DILocation(line: 3861, column: 4, scope: !21082)
!21086 = !DILocation(line: 3862, column: 30, scope: !21087)
!21087 = distinct !DILexicalBlock(scope: !21054, file: !3, line: 3862, column: 7)
!21088 = !DILocation(line: 3862, column: 7, scope: !21087)
!21089 = !DILocation(line: 3862, column: 41, scope: !21087)
!21090 = !DILocation(line: 3863, column: 44, scope: !21087)
!21091 = !DILocation(line: 3863, column: 54, scope: !21087)
!21092 = !DILocation(line: 3863, column: 8, scope: !21087)
!21093 = !DILocation(line: 3863, column: 65, scope: !21087)
!21094 = !DILocation(line: 3864, column: 33, scope: !21087)
!21095 = !DILocation(line: 3864, column: 7, scope: !21087)
!21096 = !DILocation(line: 3864, column: 44, scope: !21087)
!21097 = !DILocation(line: 3865, column: 39, scope: !21087)
!21098 = !DILocation(line: 3865, column: 50, scope: !21087)
!21099 = !DILocation(line: 3865, column: 8, scope: !21087)
!21100 = !DILocation(line: 3862, column: 7, scope: !21054)
!21101 = !DILocation(line: 3866, column: 4, scope: !21087)
!21102 = !DILocation(line: 3867, column: 32, scope: !21103)
!21103 = distinct !DILexicalBlock(scope: !21054, file: !3, line: 3867, column: 7)
!21104 = !DILocation(line: 3867, column: 7, scope: !21103)
!21105 = !DILocation(line: 3867, column: 43, scope: !21103)
!21106 = !DILocation(line: 3868, column: 32, scope: !21103)
!21107 = !DILocation(line: 3868, column: 9, scope: !21103)
!21108 = !DILocation(line: 3868, column: 43, scope: !21103)
!21109 = !DILocation(line: 3869, column: 45, scope: !21103)
!21110 = !DILocation(line: 3870, column: 10, scope: !21103)
!21111 = !DILocation(line: 3869, column: 9, scope: !21103)
!21112 = !DILocation(line: 3867, column: 7, scope: !21054)
!21113 = !DILocation(line: 3871, column: 4, scope: !21114)
!21114 = distinct !DILexicalBlock(scope: !21103, file: !3, line: 3870, column: 23)
!21115 = !DILocalVariable(name: "__extack", scope: !21116, file: !3, line: 3871, type: !2633)
!21116 = distinct !DILexicalBlock(scope: !21114, file: !3, line: 3871, column: 4)
!21117 = !DILocation(line: 3871, column: 4, scope: !21116)
!21118 = !DILocation(line: 3871, column: 4, scope: !21119)
!21119 = distinct !DILexicalBlock(scope: !21116, file: !3, line: 3871, column: 4)
!21120 = !DILocation(line: 3872, column: 4, scope: !21114)
!21121 = !DILocation(line: 3874, column: 27, scope: !21122)
!21122 = distinct !DILexicalBlock(scope: !21054, file: !3, line: 3874, column: 7)
!21123 = !DILocation(line: 3874, column: 7, scope: !21122)
!21124 = !DILocation(line: 3874, column: 38, scope: !21122)
!21125 = !DILocation(line: 3875, column: 34, scope: !21122)
!21126 = !DILocation(line: 3875, column: 44, scope: !21122)
!21127 = !DILocation(line: 3876, column: 13, scope: !21122)
!21128 = !DILocation(line: 3876, column: 19, scope: !21122)
!21129 = !DILocation(line: 3876, column: 31, scope: !21122)
!21130 = !DILocation(line: 3875, column: 8, scope: !21122)
!21131 = !DILocation(line: 3874, column: 7, scope: !21054)
!21132 = !DILocation(line: 3877, column: 4, scope: !21122)
!21133 = !DILocation(line: 3878, column: 27, scope: !21134)
!21134 = distinct !DILexicalBlock(scope: !21054, file: !3, line: 3878, column: 7)
!21135 = !DILocation(line: 3878, column: 7, scope: !21134)
!21136 = !DILocation(line: 3878, column: 38, scope: !21134)
!21137 = !DILocation(line: 3878, column: 55, scope: !21134)
!21138 = !DILocation(line: 3878, column: 41, scope: !21134)
!21139 = !DILocation(line: 3878, column: 7, scope: !21054)
!21140 = !DILocation(line: 3879, column: 4, scope: !21141)
!21141 = distinct !DILexicalBlock(scope: !21134, file: !3, line: 3878, column: 61)
!21142 = !DILocalVariable(name: "__extack", scope: !21143, file: !3, line: 3879, type: !2633)
!21143 = distinct !DILexicalBlock(scope: !21141, file: !3, line: 3879, column: 4)
!21144 = !DILocation(line: 3879, column: 4, scope: !21143)
!21145 = !DILocation(line: 3879, column: 4, scope: !21146)
!21146 = distinct !DILexicalBlock(scope: !21143, file: !3, line: 3879, column: 4)
!21147 = !DILocation(line: 3880, column: 4, scope: !21141)
!21148 = !DILocation(line: 3882, column: 25, scope: !21149)
!21149 = distinct !DILexicalBlock(scope: !21054, file: !3, line: 3882, column: 7)
!21150 = !DILocation(line: 3882, column: 7, scope: !21149)
!21151 = !DILocation(line: 3882, column: 30, scope: !21149)
!21152 = !DILocation(line: 3882, column: 45, scope: !21149)
!21153 = !DILocation(line: 3882, column: 33, scope: !21149)
!21154 = !DILocation(line: 3882, column: 56, scope: !21149)
!21155 = !DILocation(line: 3883, column: 46, scope: !21149)
!21156 = !DILocation(line: 3883, column: 28, scope: !21149)
!21157 = !DILocation(line: 3883, column: 8, scope: !21149)
!21158 = !DILocation(line: 3882, column: 7, scope: !21054)
!21159 = !DILocation(line: 3884, column: 4, scope: !21160)
!21160 = distinct !DILexicalBlock(scope: !21149, file: !3, line: 3883, column: 59)
!21161 = !DILocalVariable(name: "__extack", scope: !21162, file: !3, line: 3884, type: !2633)
!21162 = distinct !DILexicalBlock(scope: !21160, file: !3, line: 3884, column: 4)
!21163 = !DILocation(line: 3884, column: 4, scope: !21162)
!21164 = !DILocation(line: 3884, column: 4, scope: !21165)
!21165 = distinct !DILexicalBlock(scope: !21162, file: !3, line: 3884, column: 4)
!21166 = !DILocation(line: 3885, column: 4, scope: !21160)
!21167 = !DILocation(line: 3887, column: 24, scope: !21168)
!21168 = distinct !DILexicalBlock(scope: !21054, file: !3, line: 3887, column: 7)
!21169 = !DILocation(line: 3887, column: 7, scope: !21168)
!21170 = !DILocation(line: 3887, column: 35, scope: !21168)
!21171 = !DILocation(line: 3888, column: 28, scope: !21168)
!21172 = !DILocation(line: 3888, column: 38, scope: !21168)
!21173 = !DILocation(line: 3888, column: 8, scope: !21168)
!21174 = !DILocation(line: 3887, column: 7, scope: !21054)
!21175 = !DILocation(line: 3889, column: 4, scope: !21176)
!21176 = distinct !DILexicalBlock(scope: !21168, file: !3, line: 3888, column: 50)
!21177 = !DILocalVariable(name: "__extack", scope: !21178, file: !3, line: 3889, type: !2633)
!21178 = distinct !DILexicalBlock(scope: !21176, file: !3, line: 3889, column: 4)
!21179 = !DILocation(line: 3889, column: 4, scope: !21178)
!21180 = !DILocation(line: 3889, column: 4, scope: !21181)
!21181 = distinct !DILexicalBlock(scope: !21178, file: !3, line: 3889, column: 4)
!21182 = !DILocation(line: 3890, column: 4, scope: !21176)
!21183 = !DILocation(line: 3892, column: 27, scope: !21184)
!21184 = distinct !DILexicalBlock(scope: !21054, file: !3, line: 3892, column: 7)
!21185 = !DILocation(line: 3892, column: 7, scope: !21184)
!21186 = !DILocation(line: 3892, column: 38, scope: !21184)
!21187 = !DILocation(line: 3892, column: 55, scope: !21184)
!21188 = !DILocation(line: 3892, column: 41, scope: !21184)
!21189 = !DILocation(line: 3892, column: 7, scope: !21054)
!21190 = !DILocation(line: 3893, column: 4, scope: !21191)
!21191 = distinct !DILexicalBlock(scope: !21184, file: !3, line: 3892, column: 61)
!21192 = !DILocalVariable(name: "__extack", scope: !21193, file: !3, line: 3893, type: !2633)
!21193 = distinct !DILexicalBlock(scope: !21191, file: !3, line: 3893, column: 4)
!21194 = !DILocation(line: 3893, column: 4, scope: !21193)
!21195 = !DILocation(line: 3893, column: 4, scope: !21196)
!21196 = distinct !DILexicalBlock(scope: !21193, file: !3, line: 3893, column: 4)
!21197 = !DILocation(line: 3894, column: 4, scope: !21191)
!21198 = !DILocation(line: 3896, column: 25, scope: !21199)
!21199 = distinct !DILexicalBlock(scope: !21054, file: !3, line: 3896, column: 7)
!21200 = !DILocation(line: 3896, column: 7, scope: !21199)
!21201 = !DILocation(line: 3896, column: 30, scope: !21199)
!21202 = !DILocation(line: 3896, column: 45, scope: !21199)
!21203 = !DILocation(line: 3896, column: 33, scope: !21199)
!21204 = !DILocation(line: 3896, column: 7, scope: !21054)
!21205 = !DILocation(line: 3897, column: 4, scope: !21206)
!21206 = distinct !DILexicalBlock(scope: !21199, file: !3, line: 3896, column: 57)
!21207 = !DILocalVariable(name: "__extack", scope: !21208, file: !3, line: 3897, type: !2633)
!21208 = distinct !DILexicalBlock(scope: !21206, file: !3, line: 3897, column: 4)
!21209 = !DILocation(line: 3897, column: 4, scope: !21208)
!21210 = !DILocation(line: 3897, column: 4, scope: !21211)
!21211 = distinct !DILexicalBlock(scope: !21208, file: !3, line: 3897, column: 4)
!21212 = !DILocation(line: 3898, column: 4, scope: !21206)
!21213 = !DILocation(line: 3900, column: 3, scope: !21054)
!21214 = !DILocation(line: 3902, column: 15, scope: !21054)
!21215 = !DILocation(line: 3902, column: 21, scope: !21054)
!21216 = !DILocation(line: 3902, column: 13, scope: !21054)
!21217 = !DILocation(line: 3903, column: 30, scope: !21218)
!21218 = distinct !DILexicalBlock(scope: !21054, file: !3, line: 3903, column: 7)
!21219 = !DILocation(line: 3903, column: 7, scope: !21218)
!21220 = !DILocation(line: 3903, column: 7, scope: !21054)
!21221 = !DILocation(line: 3904, column: 8, scope: !21222)
!21222 = distinct !DILexicalBlock(scope: !21223, file: !3, line: 3904, column: 8)
!21223 = distinct !DILexicalBlock(scope: !21218, file: !3, line: 3903, column: 42)
!21224 = !DILocation(line: 3904, column: 14, scope: !21222)
!21225 = !DILocation(line: 3904, column: 8, scope: !21223)
!21226 = !DILocation(line: 3905, column: 37, scope: !21222)
!21227 = !DILocation(line: 3906, column: 9, scope: !21222)
!21228 = !DILocation(line: 3907, column: 9, scope: !21222)
!21229 = !DILocation(line: 3908, column: 9, scope: !21222)
!21230 = !DILocation(line: 3905, column: 11, scope: !21222)
!21231 = !DILocation(line: 3905, column: 9, scope: !21222)
!21232 = !DILocation(line: 3905, column: 5, scope: !21222)
!21233 = !DILocation(line: 3910, column: 32, scope: !21222)
!21234 = !DILocation(line: 3911, column: 11, scope: !21222)
!21235 = !DILocation(line: 3912, column: 11, scope: !21222)
!21236 = !DILocation(line: 3910, column: 5, scope: !21222)
!21237 = !DILocation(line: 3913, column: 3, scope: !21223)
!21238 = !DILocation(line: 3913, column: 34, scope: !21239)
!21239 = distinct !DILexicalBlock(scope: !21218, file: !3, line: 3913, column: 14)
!21240 = !DILocation(line: 3913, column: 14, scope: !21239)
!21241 = !DILocation(line: 3913, column: 14, scope: !21218)
!21242 = !DILocation(line: 3914, column: 8, scope: !21243)
!21243 = distinct !DILexicalBlock(scope: !21244, file: !3, line: 3914, column: 8)
!21244 = distinct !DILexicalBlock(scope: !21239, file: !3, line: 3913, column: 46)
!21245 = !DILocation(line: 3914, column: 14, scope: !21243)
!21246 = !DILocation(line: 3914, column: 8, scope: !21244)
!21247 = !DILocation(line: 3915, column: 34, scope: !21248)
!21248 = distinct !DILexicalBlock(scope: !21243, file: !3, line: 3914, column: 23)
!21249 = !DILocation(line: 3916, column: 13, scope: !21248)
!21250 = !DILocation(line: 3915, column: 11, scope: !21248)
!21251 = !DILocation(line: 3915, column: 9, scope: !21248)
!21252 = !DILocation(line: 3917, column: 4, scope: !21248)
!21253 = !DILocation(line: 3918, column: 40, scope: !21254)
!21254 = distinct !DILexicalBlock(scope: !21243, file: !3, line: 3917, column: 11)
!21255 = !DILocation(line: 3918, column: 5, scope: !21254)
!21256 = !DILocation(line: 3919, column: 29, scope: !21254)
!21257 = !DILocation(line: 3920, column: 8, scope: !21254)
!21258 = !DILocation(line: 3919, column: 5, scope: !21254)
!21259 = !DILocation(line: 3922, column: 3, scope: !21244)
!21260 = !DILocation(line: 3922, column: 34, scope: !21261)
!21261 = distinct !DILexicalBlock(scope: !21239, file: !3, line: 3922, column: 14)
!21262 = !DILocation(line: 3922, column: 14, scope: !21261)
!21263 = !DILocation(line: 3922, column: 14, scope: !21239)
!21264 = !DILocation(line: 3923, column: 8, scope: !21265)
!21265 = distinct !DILexicalBlock(scope: !21266, file: !3, line: 3923, column: 8)
!21266 = distinct !DILexicalBlock(scope: !21261, file: !3, line: 3922, column: 46)
!21267 = !DILocation(line: 3923, column: 14, scope: !21265)
!21268 = !DILocation(line: 3923, column: 8, scope: !21266)
!21269 = !DILocation(line: 3924, column: 34, scope: !21265)
!21270 = !DILocation(line: 3924, column: 11, scope: !21265)
!21271 = !DILocation(line: 3924, column: 9, scope: !21265)
!21272 = !DILocation(line: 3924, column: 5, scope: !21265)
!21273 = !DILocation(line: 3926, column: 29, scope: !21265)
!21274 = !DILocation(line: 3926, column: 5, scope: !21265)
!21275 = !DILocation(line: 3927, column: 3, scope: !21266)
!21276 = !DILocation(line: 3927, column: 31, scope: !21277)
!21277 = distinct !DILexicalBlock(scope: !21261, file: !3, line: 3927, column: 14)
!21278 = !DILocation(line: 3927, column: 14, scope: !21277)
!21279 = !DILocation(line: 3927, column: 14, scope: !21261)
!21280 = !DILocation(line: 3928, column: 9, scope: !21281)
!21281 = distinct !DILexicalBlock(scope: !21282, file: !3, line: 3928, column: 8)
!21282 = distinct !DILexicalBlock(scope: !21277, file: !3, line: 3927, column: 43)
!21283 = !DILocation(line: 3928, column: 15, scope: !21281)
!21284 = !DILocation(line: 3928, column: 8, scope: !21282)
!21285 = !DILocation(line: 3929, column: 30, scope: !21281)
!21286 = !DILocation(line: 3929, column: 40, scope: !21281)
!21287 = !DILocation(line: 3929, column: 5, scope: !21281)
!21288 = !DILocation(line: 3930, column: 3, scope: !21282)
!21289 = !DILocation(line: 3930, column: 26, scope: !21290)
!21290 = distinct !DILexicalBlock(scope: !21277, file: !3, line: 3930, column: 14)
!21291 = !DILocation(line: 3930, column: 14, scope: !21290)
!21292 = !DILocation(line: 3930, column: 14, scope: !21277)
!21293 = !DILocalVariable(name: "br_dev", scope: !21294, file: !3, line: 3931, type: !451)
!21294 = distinct !DILexicalBlock(scope: !21290, file: !3, line: 3930, column: 38)
!21295 = !DILocation(line: 3931, column: 23, scope: !21294)
!21296 = !DILocation(line: 3933, column: 30, scope: !21297)
!21297 = distinct !DILexicalBlock(scope: !21294, file: !3, line: 3933, column: 8)
!21298 = !DILocation(line: 3933, column: 9, scope: !21297)
!21299 = !DILocation(line: 3933, column: 8, scope: !21294)
!21300 = !DILocation(line: 3934, column: 5, scope: !21297)
!21301 = !DILocation(line: 3935, column: 8, scope: !21302)
!21302 = distinct !DILexicalBlock(scope: !21294, file: !3, line: 3935, column: 8)
!21303 = !DILocation(line: 3935, column: 14, scope: !21302)
!21304 = !DILocation(line: 3935, column: 8, scope: !21294)
!21305 = !DILocation(line: 3936, column: 5, scope: !21302)
!21306 = !DILocation(line: 3937, column: 41, scope: !21294)
!21307 = !DILocation(line: 3937, column: 13, scope: !21294)
!21308 = !DILocation(line: 3937, column: 11, scope: !21294)
!21309 = !DILocation(line: 3938, column: 31, scope: !21294)
!21310 = !DILocation(line: 3938, column: 46, scope: !21294)
!21311 = !DILocation(line: 3939, column: 10, scope: !21294)
!21312 = !DILocation(line: 3938, column: 4, scope: !21294)
!21313 = !DILocation(line: 3940, column: 3, scope: !21294)
!21314 = !DILocation(line: 3941, column: 3, scope: !21054)
!21315 = !DILocation(line: 3944, column: 9, scope: !12306)
!21316 = !DILocation(line: 3944, column: 2, scope: !12306)
!21317 = !DILocation(line: 3945, column: 1, scope: !12306)
!21318 = distinct !DISubprogram(name: "mlxsw_sp_netdevice_port_lower_event", scope: !3, file: !3, line: 3947, type: !12394, scopeLine: 3949, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21319 = !DILocalVariable(name: "dev", arg: 1, scope: !21318, file: !3, line: 3947, type: !451)
!21320 = !DILocation(line: 3947, column: 67, scope: !21318)
!21321 = !DILocalVariable(name: "event", arg: 2, scope: !21318, file: !3, line: 3948, type: !473)
!21322 = !DILocation(line: 3948, column: 27, scope: !21318)
!21323 = !DILocalVariable(name: "ptr", arg: 3, scope: !21318, file: !3, line: 3948, type: !726)
!21324 = !DILocation(line: 3948, column: 40, scope: !21318)
!21325 = !DILocalVariable(name: "info", scope: !21318, file: !3, line: 3950, type: !21326)
!21326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21327, size: 64)
!21327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_notifier_changelowerstate_info", file: !6, line: 2700, size: 192, elements: !21328)
!21328 = !{!21329, !21330}
!21329 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !21327, file: !6, line: 2701, baseType: !11529, size: 128)
!21330 = !DIDerivedType(tag: DW_TAG_member, name: "lower_state_info", scope: !21327, file: !6, line: 2702, baseType: !726, size: 64, offset: 128)
!21331 = !DILocation(line: 3950, column: 48, scope: !21318)
!21332 = !DILocalVariable(name: "mlxsw_sp_port", scope: !21318, file: !3, line: 3951, type: !10715)
!21333 = !DILocation(line: 3951, column: 24, scope: !21318)
!21334 = !DILocalVariable(name: "err", scope: !21318, file: !3, line: 3952, type: !7)
!21335 = !DILocation(line: 3952, column: 6, scope: !21318)
!21336 = !DILocation(line: 3954, column: 30, scope: !21318)
!21337 = !DILocation(line: 3954, column: 18, scope: !21318)
!21338 = !DILocation(line: 3954, column: 16, scope: !21318)
!21339 = !DILocation(line: 3955, column: 9, scope: !21318)
!21340 = !DILocation(line: 3955, column: 7, scope: !21318)
!21341 = !DILocation(line: 3957, column: 10, scope: !21318)
!21342 = !DILocation(line: 3957, column: 2, scope: !21318)
!21343 = !DILocation(line: 3959, column: 25, scope: !21344)
!21344 = distinct !DILexicalBlock(scope: !21345, file: !3, line: 3959, column: 7)
!21345 = distinct !DILexicalBlock(scope: !21318, file: !3, line: 3957, column: 17)
!21346 = !DILocation(line: 3959, column: 7, scope: !21344)
!21347 = !DILocation(line: 3959, column: 30, scope: !21344)
!21348 = !DILocation(line: 3959, column: 33, scope: !21344)
!21349 = !DILocation(line: 3959, column: 48, scope: !21344)
!21350 = !DILocation(line: 3959, column: 7, scope: !21345)
!21351 = !DILocation(line: 3960, column: 36, scope: !21352)
!21352 = distinct !DILexicalBlock(scope: !21344, file: !3, line: 3959, column: 56)
!21353 = !DILocation(line: 3961, column: 8, scope: !21352)
!21354 = !DILocation(line: 3961, column: 14, scope: !21352)
!21355 = !DILocation(line: 3960, column: 10, scope: !21352)
!21356 = !DILocation(line: 3960, column: 8, scope: !21352)
!21357 = !DILocation(line: 3962, column: 8, scope: !21358)
!21358 = distinct !DILexicalBlock(scope: !21352, file: !3, line: 3962, column: 8)
!21359 = !DILocation(line: 3962, column: 8, scope: !21352)
!21360 = !DILocation(line: 3963, column: 16, scope: !21358)
!21361 = !DILocation(line: 3963, column: 5, scope: !21358)
!21362 = !DILocation(line: 3964, column: 3, scope: !21352)
!21363 = !DILocation(line: 3965, column: 3, scope: !21345)
!21364 = !DILocation(line: 3968, column: 2, scope: !21318)
!21365 = distinct !DISubprogram(name: "netif_is_ovs_master", scope: !6, file: !6, line: 4926, type: !14728, scopeLine: 4927, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21366 = !DILocalVariable(name: "dev", arg: 1, scope: !21365, file: !6, line: 4926, type: !3023)
!21367 = !DILocation(line: 4926, column: 65, scope: !21365)
!21368 = !DILocation(line: 4928, column: 9, scope: !21365)
!21369 = !DILocation(line: 4928, column: 14, scope: !21365)
!21370 = !DILocation(line: 4928, column: 25, scope: !21365)
!21371 = !DILocation(line: 4928, column: 2, scope: !21365)
!21372 = distinct !DISubprogram(name: "mlxsw_sp_bridge_has_vxlan", scope: !10118, file: !10118, line: 362, type: !20843, scopeLine: 363, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21373 = !DILocalVariable(name: "br_dev", arg: 1, scope: !21372, file: !10118, line: 362, type: !451)
!21374 = !DILocation(line: 362, column: 65, scope: !21372)
!21375 = !DILocation(line: 364, column: 42, scope: !21372)
!21376 = !DILocation(line: 364, column: 11, scope: !21372)
!21377 = !DILocation(line: 364, column: 10, scope: !21372)
!21378 = !DILocation(line: 364, column: 9, scope: !21372)
!21379 = !DILocation(line: 364, column: 2, scope: !21372)
!21380 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !12344, file: !3, line: 3510, type: !10721)
!21381 = !DILocation(line: 3510, column: 44, scope: !12344)
!21382 = !DILocalVariable(name: "lag_dev", arg: 2, scope: !12344, file: !3, line: 3511, type: !451)
!21383 = !DILocation(line: 3511, column: 25, scope: !12344)
!21384 = !DILocalVariable(name: "lag_upper_info", arg: 3, scope: !12344, file: !3, line: 3512, type: !12347)
!21385 = !DILocation(line: 3512, column: 36, scope: !12344)
!21386 = !DILocalVariable(name: "extack", arg: 4, scope: !12344, file: !3, line: 3513, type: !2633)
!21387 = !DILocation(line: 3513, column: 30, scope: !12344)
!21388 = !DILocalVariable(name: "lag_id", scope: !12344, file: !3, line: 3515, type: !1193)
!21389 = !DILocation(line: 3515, column: 6, scope: !12344)
!21390 = !DILocation(line: 3517, column: 29, scope: !21391)
!21391 = distinct !DILexicalBlock(scope: !12344, file: !3, line: 3517, column: 6)
!21392 = !DILocation(line: 3517, column: 39, scope: !21391)
!21393 = !DILocation(line: 3517, column: 6, scope: !21391)
!21394 = !DILocation(line: 3517, column: 57, scope: !21391)
!21395 = !DILocation(line: 3517, column: 6, scope: !12344)
!21396 = !DILocation(line: 3518, column: 3, scope: !21397)
!21397 = distinct !DILexicalBlock(scope: !21391, file: !3, line: 3517, column: 63)
!21398 = !DILocalVariable(name: "__extack", scope: !21399, file: !3, line: 3518, type: !2633)
!21399 = distinct !DILexicalBlock(scope: !21397, file: !3, line: 3518, column: 3)
!21400 = !DILocation(line: 3518, column: 3, scope: !21399)
!21401 = !DILocation(line: 3518, column: 3, scope: !21402)
!21402 = distinct !DILexicalBlock(scope: !21399, file: !3, line: 3518, column: 3)
!21403 = !DILocation(line: 3519, column: 3, scope: !21397)
!21404 = !DILocation(line: 3521, column: 6, scope: !21405)
!21405 = distinct !DILexicalBlock(scope: !12344, file: !3, line: 3521, column: 6)
!21406 = !DILocation(line: 3521, column: 22, scope: !21405)
!21407 = !DILocation(line: 3521, column: 30, scope: !21405)
!21408 = !DILocation(line: 3521, column: 6, scope: !12344)
!21409 = !DILocation(line: 3522, column: 3, scope: !21410)
!21410 = distinct !DILexicalBlock(scope: !21405, file: !3, line: 3521, column: 58)
!21411 = !DILocalVariable(name: "__extack", scope: !21412, file: !3, line: 3522, type: !2633)
!21412 = distinct !DILexicalBlock(scope: !21410, file: !3, line: 3522, column: 3)
!21413 = !DILocation(line: 3522, column: 3, scope: !21412)
!21414 = !DILocation(line: 3522, column: 3, scope: !21415)
!21415 = distinct !DILexicalBlock(scope: !21412, file: !3, line: 3522, column: 3)
!21416 = !DILocation(line: 3523, column: 3, scope: !21410)
!21417 = !DILocation(line: 3525, column: 2, scope: !12344)
!21418 = !DILocation(line: 3526, column: 1, scope: !12344)
!21419 = distinct !DISubprogram(name: "netif_is_lag_port", scope: !6, file: !6, line: 4956, type: !14728, scopeLine: 4957, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21420 = !DILocalVariable(name: "dev", arg: 1, scope: !21419, file: !6, line: 4956, type: !3023)
!21421 = !DILocation(line: 4956, column: 63, scope: !21419)
!21422 = !DILocation(line: 4958, column: 29, scope: !21419)
!21423 = !DILocation(line: 4958, column: 9, scope: !21419)
!21424 = !DILocation(line: 4958, column: 34, scope: !21419)
!21425 = !DILocation(line: 4958, column: 56, scope: !21419)
!21426 = !DILocation(line: 4958, column: 37, scope: !21419)
!21427 = !DILocation(line: 4958, column: 2, scope: !21419)
!21428 = distinct !DISubprogram(name: "netif_is_ovs_port", scope: !6, file: !6, line: 4931, type: !14728, scopeLine: 4932, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21429 = !DILocalVariable(name: "dev", arg: 1, scope: !21428, file: !6, line: 4931, type: !3023)
!21430 = !DILocation(line: 4931, column: 63, scope: !21428)
!21431 = !DILocation(line: 4933, column: 9, scope: !21428)
!21432 = !DILocation(line: 4933, column: 14, scope: !21428)
!21433 = !DILocation(line: 4933, column: 25, scope: !21428)
!21434 = !DILocation(line: 4933, column: 2, scope: !21428)
!21435 = distinct !DISubprogram(name: "mlxsw_sp_port_lag_join", scope: !3, file: !3, line: 3545, type: !21436, scopeLine: 3547, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21436 = !DISubroutineType(types: !21437)
!21437 = !{!7, !10715, !451}
!21438 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !21435, file: !3, line: 3545, type: !10715)
!21439 = !DILocation(line: 3545, column: 57, scope: !21435)
!21440 = !DILocalVariable(name: "lag_dev", arg: 2, scope: !21435, file: !3, line: 3546, type: !451)
!21441 = !DILocation(line: 3546, column: 26, scope: !21435)
!21442 = !DILocalVariable(name: "mlxsw_sp", scope: !21435, file: !3, line: 3548, type: !10721)
!21443 = !DILocation(line: 3548, column: 19, scope: !21435)
!21444 = !DILocation(line: 3548, column: 30, scope: !21435)
!21445 = !DILocation(line: 3548, column: 45, scope: !21435)
!21446 = !DILocalVariable(name: "lag", scope: !21435, file: !3, line: 3549, type: !10755)
!21447 = !DILocation(line: 3549, column: 25, scope: !21435)
!21448 = !DILocalVariable(name: "lag_id", scope: !21435, file: !3, line: 3550, type: !1193)
!21449 = !DILocation(line: 3550, column: 6, scope: !21435)
!21450 = !DILocalVariable(name: "port_index", scope: !21435, file: !3, line: 3551, type: !1552)
!21451 = !DILocation(line: 3551, column: 5, scope: !21435)
!21452 = !DILocalVariable(name: "err", scope: !21435, file: !3, line: 3552, type: !7)
!21453 = !DILocation(line: 3552, column: 6, scope: !21435)
!21454 = !DILocation(line: 3554, column: 31, scope: !21435)
!21455 = !DILocation(line: 3554, column: 41, scope: !21435)
!21456 = !DILocation(line: 3554, column: 8, scope: !21435)
!21457 = !DILocation(line: 3554, column: 6, scope: !21435)
!21458 = !DILocation(line: 3555, column: 6, scope: !21459)
!21459 = distinct !DILexicalBlock(scope: !21435, file: !3, line: 3555, column: 6)
!21460 = !DILocation(line: 3555, column: 6, scope: !21435)
!21461 = !DILocation(line: 3556, column: 10, scope: !21459)
!21462 = !DILocation(line: 3556, column: 3, scope: !21459)
!21463 = !DILocation(line: 3557, column: 25, scope: !21435)
!21464 = !DILocation(line: 3557, column: 35, scope: !21435)
!21465 = !DILocation(line: 3557, column: 8, scope: !21435)
!21466 = !DILocation(line: 3557, column: 6, scope: !21435)
!21467 = !DILocation(line: 3558, column: 7, scope: !21468)
!21468 = distinct !DILexicalBlock(scope: !21435, file: !3, line: 3558, column: 6)
!21469 = !DILocation(line: 3558, column: 12, scope: !21468)
!21470 = !DILocation(line: 3558, column: 6, scope: !21435)
!21471 = !DILocation(line: 3559, column: 29, scope: !21472)
!21472 = distinct !DILexicalBlock(scope: !21468, file: !3, line: 3558, column: 23)
!21473 = !DILocation(line: 3559, column: 39, scope: !21472)
!21474 = !DILocation(line: 3559, column: 9, scope: !21472)
!21475 = !DILocation(line: 3559, column: 7, scope: !21472)
!21476 = !DILocation(line: 3560, column: 7, scope: !21477)
!21477 = distinct !DILexicalBlock(scope: !21472, file: !3, line: 3560, column: 7)
!21478 = !DILocation(line: 3560, column: 7, scope: !21472)
!21479 = !DILocation(line: 3561, column: 11, scope: !21477)
!21480 = !DILocation(line: 3561, column: 4, scope: !21477)
!21481 = !DILocation(line: 3562, column: 14, scope: !21472)
!21482 = !DILocation(line: 3562, column: 3, scope: !21472)
!21483 = !DILocation(line: 3562, column: 8, scope: !21472)
!21484 = !DILocation(line: 3562, column: 12, scope: !21472)
!21485 = !DILocation(line: 3563, column: 2, scope: !21472)
!21486 = !DILocation(line: 3565, column: 36, scope: !21435)
!21487 = !DILocation(line: 3565, column: 46, scope: !21435)
!21488 = !DILocation(line: 3565, column: 8, scope: !21435)
!21489 = !DILocation(line: 3565, column: 6, scope: !21435)
!21490 = !DILocation(line: 3566, column: 6, scope: !21491)
!21491 = distinct !DILexicalBlock(scope: !21435, file: !3, line: 3566, column: 6)
!21492 = !DILocation(line: 3566, column: 6, scope: !21435)
!21493 = !DILocation(line: 3567, column: 10, scope: !21491)
!21494 = !DILocation(line: 3567, column: 3, scope: !21491)
!21495 = !DILocation(line: 3568, column: 34, scope: !21435)
!21496 = !DILocation(line: 3568, column: 49, scope: !21435)
!21497 = !DILocation(line: 3568, column: 57, scope: !21435)
!21498 = !DILocation(line: 3568, column: 8, scope: !21435)
!21499 = !DILocation(line: 3568, column: 6, scope: !21435)
!21500 = !DILocation(line: 3569, column: 6, scope: !21501)
!21501 = distinct !DILexicalBlock(scope: !21435, file: !3, line: 3569, column: 6)
!21502 = !DILocation(line: 3569, column: 6, scope: !21435)
!21503 = !DILocation(line: 3570, column: 3, scope: !21501)
!21504 = !DILocation(line: 3572, column: 29, scope: !21435)
!21505 = !DILocation(line: 3572, column: 39, scope: !21435)
!21506 = !DILocation(line: 3572, column: 45, scope: !21435)
!21507 = !DILocation(line: 3572, column: 53, scope: !21435)
!21508 = !DILocation(line: 3573, column: 8, scope: !21435)
!21509 = !DILocation(line: 3573, column: 23, scope: !21435)
!21510 = !DILocation(line: 3572, column: 2, scope: !21435)
!21511 = !DILocation(line: 3574, column: 26, scope: !21435)
!21512 = !DILocation(line: 3574, column: 2, scope: !21435)
!21513 = !DILocation(line: 3574, column: 17, scope: !21435)
!21514 = !DILocation(line: 3574, column: 24, scope: !21435)
!21515 = !DILocation(line: 3575, column: 2, scope: !21435)
!21516 = !DILocation(line: 3575, column: 17, scope: !21435)
!21517 = !DILocation(line: 3575, column: 24, scope: !21435)
!21518 = !DILocation(line: 3576, column: 2, scope: !21435)
!21519 = !DILocation(line: 3576, column: 7, scope: !21435)
!21520 = !DILocation(line: 3576, column: 16, scope: !21435)
!21521 = !DILocation(line: 3579, column: 6, scope: !21522)
!21522 = distinct !DILexicalBlock(scope: !21435, file: !3, line: 3579, column: 6)
!21523 = !DILocation(line: 3579, column: 21, scope: !21522)
!21524 = !DILocation(line: 3579, column: 35, scope: !21522)
!21525 = !DILocation(line: 3579, column: 6, scope: !21435)
!21526 = !DILocation(line: 3580, column: 35, scope: !21522)
!21527 = !DILocation(line: 3580, column: 50, scope: !21522)
!21528 = !DILocation(line: 3580, column: 3, scope: !21522)
!21529 = !DILocation(line: 3582, column: 2, scope: !21435)
!21530 = !DILabel(scope: !21435, name: "err_col_port_add", file: !3, line: 3584)
!21531 = !DILocation(line: 3584, column: 1, scope: !21435)
!21532 = !DILocation(line: 3585, column: 7, scope: !21533)
!21533 = distinct !DILexicalBlock(scope: !21435, file: !3, line: 3585, column: 6)
!21534 = !DILocation(line: 3585, column: 12, scope: !21533)
!21535 = !DILocation(line: 3585, column: 6, scope: !21435)
!21536 = !DILocation(line: 3586, column: 24, scope: !21533)
!21537 = !DILocation(line: 3586, column: 34, scope: !21533)
!21538 = !DILocation(line: 3586, column: 3, scope: !21533)
!21539 = !DILocation(line: 3587, column: 9, scope: !21435)
!21540 = !DILocation(line: 3587, column: 2, scope: !21435)
!21541 = !DILocation(line: 3588, column: 1, scope: !21435)
!21542 = distinct !DISubprogram(name: "mlxsw_sp_port_lag_col_dist_disable", scope: !3, file: !3, line: 3668, type: !21543, scopeLine: 3669, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21543 = !DISubroutineType(types: !21544)
!21544 = !{!7, !10715}
!21545 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !21542, file: !3, line: 3668, type: !10715)
!21546 = !DILocation(line: 3668, column: 58, scope: !21542)
!21547 = !DILocalVariable(name: "err", scope: !21542, file: !3, line: 3670, type: !7)
!21548 = !DILocation(line: 3670, column: 6, scope: !21542)
!21549 = !DILocation(line: 3672, column: 38, scope: !21542)
!21550 = !DILocation(line: 3673, column: 10, scope: !21542)
!21551 = !DILocation(line: 3673, column: 25, scope: !21542)
!21552 = !DILocation(line: 3672, column: 8, scope: !21542)
!21553 = !DILocation(line: 3672, column: 6, scope: !21542)
!21554 = !DILocation(line: 3674, column: 6, scope: !21555)
!21555 = distinct !DILexicalBlock(scope: !21542, file: !3, line: 3674, column: 6)
!21556 = !DILocation(line: 3674, column: 6, scope: !21542)
!21557 = !DILocation(line: 3675, column: 10, scope: !21555)
!21558 = !DILocation(line: 3675, column: 3, scope: !21555)
!21559 = !DILocation(line: 3677, column: 38, scope: !21542)
!21560 = !DILocation(line: 3678, column: 10, scope: !21542)
!21561 = !DILocation(line: 3678, column: 25, scope: !21542)
!21562 = !DILocation(line: 3677, column: 8, scope: !21542)
!21563 = !DILocation(line: 3677, column: 6, scope: !21542)
!21564 = !DILocation(line: 3679, column: 6, scope: !21565)
!21565 = distinct !DILexicalBlock(scope: !21542, file: !3, line: 3679, column: 6)
!21566 = !DILocation(line: 3679, column: 6, scope: !21542)
!21567 = !DILocation(line: 3680, column: 3, scope: !21565)
!21568 = !DILocation(line: 3682, column: 2, scope: !21542)
!21569 = !DILabel(scope: !21542, name: "err_col_port_disable", file: !3, line: 3684)
!21570 = !DILocation(line: 3684, column: 1, scope: !21542)
!21571 = !DILocation(line: 3685, column: 29, scope: !21542)
!21572 = !DILocation(line: 3685, column: 44, scope: !21542)
!21573 = !DILocation(line: 3685, column: 59, scope: !21542)
!21574 = !DILocation(line: 3685, column: 2, scope: !21542)
!21575 = !DILocation(line: 3686, column: 9, scope: !21542)
!21576 = !DILocation(line: 3686, column: 2, scope: !21542)
!21577 = !DILocation(line: 3687, column: 1, scope: !21542)
!21578 = distinct !DISubprogram(name: "mlxsw_sp_port_lag_leave", scope: !3, file: !3, line: 3590, type: !21579, scopeLine: 3592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21579 = !DISubroutineType(types: !21580)
!21580 = !{null, !10715, !451}
!21581 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !21578, file: !3, line: 3590, type: !10715)
!21582 = !DILocation(line: 3590, column: 59, scope: !21578)
!21583 = !DILocalVariable(name: "lag_dev", arg: 2, scope: !21578, file: !3, line: 3591, type: !451)
!21584 = !DILocation(line: 3591, column: 28, scope: !21578)
!21585 = !DILocalVariable(name: "mlxsw_sp", scope: !21578, file: !3, line: 3593, type: !10721)
!21586 = !DILocation(line: 3593, column: 19, scope: !21578)
!21587 = !DILocation(line: 3593, column: 30, scope: !21578)
!21588 = !DILocation(line: 3593, column: 45, scope: !21578)
!21589 = !DILocalVariable(name: "lag_id", scope: !21578, file: !3, line: 3594, type: !1193)
!21590 = !DILocation(line: 3594, column: 6, scope: !21578)
!21591 = !DILocation(line: 3594, column: 15, scope: !21578)
!21592 = !DILocation(line: 3594, column: 30, scope: !21578)
!21593 = !DILocalVariable(name: "lag", scope: !21578, file: !3, line: 3595, type: !10755)
!21594 = !DILocation(line: 3595, column: 25, scope: !21578)
!21595 = !DILocation(line: 3597, column: 7, scope: !21596)
!21596 = distinct !DILexicalBlock(scope: !21578, file: !3, line: 3597, column: 6)
!21597 = !DILocation(line: 3597, column: 22, scope: !21596)
!21598 = !DILocation(line: 3597, column: 6, scope: !21578)
!21599 = !DILocation(line: 3598, column: 3, scope: !21596)
!21600 = !DILocation(line: 3599, column: 25, scope: !21578)
!21601 = !DILocation(line: 3599, column: 35, scope: !21578)
!21602 = !DILocation(line: 3599, column: 8, scope: !21578)
!21603 = !DILocation(line: 3599, column: 6, scope: !21578)
!21604 = !DILocalVariable(name: "__ret_warn_on", scope: !21605, file: !3, line: 3600, type: !7)
!21605 = distinct !DILexicalBlock(scope: !21578, file: !3, line: 3600, column: 2)
!21606 = !DILocation(line: 3600, column: 2, scope: !21605)
!21607 = !DILocation(line: 3600, column: 2, scope: !21608)
!21608 = distinct !DILexicalBlock(scope: !21605, file: !3, line: 3600, column: 2)
!21609 = !DILocation(line: 3600, column: 2, scope: !21610)
!21610 = distinct !DILexicalBlock(scope: !21608, file: !3, line: 3600, column: 2)
!21611 = !DILocation(line: 3600, column: 2, scope: !21612)
!21612 = distinct !DILexicalBlock(scope: !21610, file: !3, line: 3600, column: 2)
!21613 = !DILocation(line: 3600, column: 2, scope: !21614)
!21614 = distinct !DILexicalBlock(scope: !21610, file: !3, line: 3600, column: 2)
!21615 = !{i32 -2134314417, i32 -2134314388, i32 -2134314342, i32 -2134314284, i32 -2134314230, i32 -2134314176, i32 -2134314121, i32 -2134314090}
!21616 = !DILocation(line: 3600, column: 2, scope: !21617)
!21617 = distinct !DILexicalBlock(scope: !21610, file: !3, line: 3600, column: 2)
!21618 = !{i32 -2134313661, i32 -2134313654, i32 -2134313602, i32 -2134313571, i32 -2134313541}
!21619 = !DILocation(line: 3600, column: 2, scope: !21620)
!21620 = distinct !DILexicalBlock(scope: !21610, file: !3, line: 3600, column: 2)
!21621 = !DILocation(line: 3602, column: 31, scope: !21578)
!21622 = !DILocation(line: 3602, column: 46, scope: !21578)
!21623 = !DILocation(line: 3602, column: 2, scope: !21578)
!21624 = !DILocation(line: 3605, column: 27, scope: !21578)
!21625 = !DILocation(line: 3605, column: 2, scope: !21578)
!21626 = !DILocation(line: 3606, column: 29, scope: !21578)
!21627 = !DILocation(line: 3606, column: 44, scope: !21578)
!21628 = !DILocation(line: 3606, column: 2, scope: !21578)
!21629 = !DILocation(line: 3610, column: 35, scope: !21578)
!21630 = !DILocation(line: 3610, column: 50, scope: !21578)
!21631 = !DILocation(line: 3610, column: 2, scope: !21578)
!21632 = !DILocation(line: 3612, column: 6, scope: !21633)
!21633 = distinct !DILexicalBlock(scope: !21578, file: !3, line: 3612, column: 6)
!21634 = !DILocation(line: 3612, column: 11, scope: !21633)
!21635 = !DILocation(line: 3612, column: 21, scope: !21633)
!21636 = !DILocation(line: 3612, column: 6, scope: !21578)
!21637 = !DILocation(line: 3613, column: 24, scope: !21633)
!21638 = !DILocation(line: 3613, column: 34, scope: !21633)
!21639 = !DILocation(line: 3613, column: 3, scope: !21633)
!21640 = !DILocation(line: 3615, column: 31, scope: !21578)
!21641 = !DILocation(line: 3615, column: 41, scope: !21578)
!21642 = !DILocation(line: 3615, column: 47, scope: !21578)
!21643 = !DILocation(line: 3616, column: 10, scope: !21578)
!21644 = !DILocation(line: 3616, column: 25, scope: !21578)
!21645 = !DILocation(line: 3615, column: 2, scope: !21578)
!21646 = !DILocation(line: 3617, column: 2, scope: !21578)
!21647 = !DILocation(line: 3617, column: 17, scope: !21578)
!21648 = !DILocation(line: 3617, column: 24, scope: !21578)
!21649 = !DILocation(line: 3618, column: 2, scope: !21578)
!21650 = !DILocation(line: 3618, column: 7, scope: !21578)
!21651 = !DILocation(line: 3618, column: 16, scope: !21578)
!21652 = !DILocation(line: 3621, column: 25, scope: !21578)
!21653 = !DILocation(line: 3621, column: 2, scope: !21578)
!21654 = !DILocation(line: 3622, column: 1, scope: !21578)
!21655 = distinct !DISubprogram(name: "mlxsw_sp_port_ovs_join", scope: !3, file: !3, line: 3723, type: !21543, scopeLine: 3724, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21656 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !21655, file: !3, line: 3723, type: !10715)
!21657 = !DILocation(line: 3723, column: 57, scope: !21655)
!21658 = !DILocalVariable(name: "vid", scope: !21655, file: !3, line: 3725, type: !1193)
!21659 = !DILocation(line: 3725, column: 6, scope: !21655)
!21660 = !DILocalVariable(name: "err", scope: !21655, file: !3, line: 3726, type: !7)
!21661 = !DILocation(line: 3726, column: 6, scope: !21655)
!21662 = !DILocation(line: 3728, column: 34, scope: !21655)
!21663 = !DILocation(line: 3728, column: 8, scope: !21655)
!21664 = !DILocation(line: 3728, column: 6, scope: !21655)
!21665 = !DILocation(line: 3729, column: 6, scope: !21666)
!21666 = distinct !DILexicalBlock(scope: !21655, file: !3, line: 3729, column: 6)
!21667 = !DILocation(line: 3729, column: 6, scope: !21655)
!21668 = !DILocation(line: 3730, column: 10, scope: !21666)
!21669 = !DILocation(line: 3730, column: 3, scope: !21666)
!21670 = !DILocation(line: 3731, column: 30, scope: !21655)
!21671 = !DILocation(line: 3731, column: 8, scope: !21655)
!21672 = !DILocation(line: 3731, column: 6, scope: !21655)
!21673 = !DILocation(line: 3732, column: 6, scope: !21674)
!21674 = distinct !DILexicalBlock(scope: !21655, file: !3, line: 3732, column: 6)
!21675 = !DILocation(line: 3732, column: 6, scope: !21655)
!21676 = !DILocation(line: 3733, column: 3, scope: !21674)
!21677 = !DILocation(line: 3734, column: 31, scope: !21655)
!21678 = !DILocation(line: 3734, column: 8, scope: !21655)
!21679 = !DILocation(line: 3734, column: 6, scope: !21655)
!21680 = !DILocation(line: 3736, column: 6, scope: !21681)
!21681 = distinct !DILexicalBlock(scope: !21655, file: !3, line: 3736, column: 6)
!21682 = !DILocation(line: 3736, column: 6, scope: !21655)
!21683 = !DILocation(line: 3737, column: 3, scope: !21681)
!21684 = !DILocation(line: 3739, column: 2, scope: !21655)
!21685 = !DILocation(line: 3739, column: 9, scope: !21686)
!21686 = distinct !DILexicalBlock(scope: !21687, file: !3, line: 3739, column: 2)
!21687 = distinct !DILexicalBlock(scope: !21655, file: !3, line: 3739, column: 2)
!21688 = !DILocation(line: 3739, column: 13, scope: !21686)
!21689 = !DILocation(line: 3739, column: 2, scope: !21687)
!21690 = !DILocation(line: 3740, column: 40, scope: !21691)
!21691 = distinct !DILexicalBlock(scope: !21686, file: !3, line: 3739, column: 39)
!21692 = !DILocation(line: 3741, column: 12, scope: !21691)
!21693 = !DILocation(line: 3740, column: 9, scope: !21691)
!21694 = !DILocation(line: 3740, column: 7, scope: !21691)
!21695 = !DILocation(line: 3742, column: 7, scope: !21696)
!21696 = distinct !DILexicalBlock(scope: !21691, file: !3, line: 3742, column: 7)
!21697 = !DILocation(line: 3742, column: 7, scope: !21691)
!21698 = !DILocation(line: 3743, column: 4, scope: !21696)
!21699 = !DILocation(line: 3744, column: 2, scope: !21691)
!21700 = !DILocation(line: 3739, column: 35, scope: !21686)
!21701 = !DILocation(line: 3739, column: 2, scope: !21686)
!21702 = distinct !{!21702, !21689, !21703}
!21703 = !DILocation(line: 3744, column: 2, scope: !21687)
!21704 = !DILocation(line: 3746, column: 2, scope: !21655)
!21705 = !DILabel(scope: !21655, name: "err_vid_learning_set", file: !3, line: 3748)
!21706 = !DILocation(line: 3748, column: 1, scope: !21655)
!21707 = !DILocation(line: 3749, column: 10, scope: !21708)
!21708 = distinct !DILexicalBlock(scope: !21655, file: !3, line: 3749, column: 2)
!21709 = !DILocation(line: 3749, column: 7, scope: !21708)
!21710 = !DILocation(line: 3749, column: 14, scope: !21711)
!21711 = distinct !DILexicalBlock(scope: !21708, file: !3, line: 3749, column: 2)
!21712 = !DILocation(line: 3749, column: 18, scope: !21711)
!21713 = !DILocation(line: 3749, column: 2, scope: !21708)
!21714 = !DILocation(line: 3750, column: 34, scope: !21711)
!21715 = !DILocation(line: 3750, column: 49, scope: !21711)
!21716 = !DILocation(line: 3750, column: 3, scope: !21711)
!21717 = !DILocation(line: 3749, column: 27, scope: !21711)
!21718 = !DILocation(line: 3749, column: 2, scope: !21711)
!21719 = distinct !{!21719, !21713, !21720}
!21720 = !DILocation(line: 3750, column: 58, scope: !21708)
!21721 = !DILabel(scope: !21655, name: "err_port_vlan_set", file: !3, line: 3751)
!21722 = !DILocation(line: 3751, column: 1, scope: !21655)
!21723 = !DILocation(line: 3752, column: 24, scope: !21655)
!21724 = !DILocation(line: 3752, column: 2, scope: !21655)
!21725 = !DILabel(scope: !21655, name: "err_port_stp_set", file: !3, line: 3753)
!21726 = !DILocation(line: 3753, column: 1, scope: !21655)
!21727 = !DILocation(line: 3754, column: 28, scope: !21655)
!21728 = !DILocation(line: 3754, column: 2, scope: !21655)
!21729 = !DILocation(line: 3755, column: 9, scope: !21655)
!21730 = !DILocation(line: 3755, column: 2, scope: !21655)
!21731 = !DILocation(line: 3756, column: 1, scope: !21655)
!21732 = distinct !DISubprogram(name: "mlxsw_sp_port_ovs_leave", scope: !3, file: !3, line: 3758, type: !14854, scopeLine: 3759, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21733 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !21732, file: !3, line: 3758, type: !10715)
!21734 = !DILocation(line: 3758, column: 59, scope: !21732)
!21735 = !DILocalVariable(name: "vid", scope: !21732, file: !3, line: 3760, type: !1193)
!21736 = !DILocation(line: 3760, column: 6, scope: !21732)
!21737 = !DILocation(line: 3762, column: 11, scope: !21738)
!21738 = distinct !DILexicalBlock(scope: !21732, file: !3, line: 3762, column: 2)
!21739 = !DILocation(line: 3762, column: 7, scope: !21738)
!21740 = !DILocation(line: 3762, column: 29, scope: !21741)
!21741 = distinct !DILexicalBlock(scope: !21738, file: !3, line: 3762, column: 2)
!21742 = !DILocation(line: 3762, column: 33, scope: !21741)
!21743 = !DILocation(line: 3762, column: 2, scope: !21738)
!21744 = !DILocation(line: 3763, column: 34, scope: !21741)
!21745 = !DILocation(line: 3764, column: 13, scope: !21741)
!21746 = !DILocation(line: 3763, column: 3, scope: !21741)
!21747 = !DILocation(line: 3762, column: 42, scope: !21741)
!21748 = !DILocation(line: 3762, column: 2, scope: !21741)
!21749 = distinct !{!21749, !21743, !21750}
!21750 = !DILocation(line: 3764, column: 22, scope: !21738)
!21751 = !DILocation(line: 3766, column: 25, scope: !21732)
!21752 = !DILocation(line: 3766, column: 2, scope: !21732)
!21753 = !DILocation(line: 3768, column: 24, scope: !21732)
!21754 = !DILocation(line: 3768, column: 2, scope: !21732)
!21755 = !DILocation(line: 3769, column: 28, scope: !21732)
!21756 = !DILocation(line: 3769, column: 2, scope: !21732)
!21757 = !DILocation(line: 3770, column: 1, scope: !21732)
!21758 = distinct !DISubprogram(name: "netif_is_bridge_port", scope: !6, file: !6, line: 4921, type: !14728, scopeLine: 4922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21759 = !DILocalVariable(name: "dev", arg: 1, scope: !21758, file: !6, line: 4921, type: !3023)
!21760 = !DILocation(line: 4921, column: 66, scope: !21758)
!21761 = !DILocation(line: 4923, column: 9, scope: !21758)
!21762 = !DILocation(line: 4923, column: 14, scope: !21758)
!21763 = !DILocation(line: 4923, column: 25, scope: !21758)
!21764 = !DILocation(line: 4923, column: 2, scope: !21758)
!21765 = distinct !DISubprogram(name: "mlxsw_sp_bridge_vxlan_dev_find", scope: !10118, file: !10118, line: 349, type: !8747, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21766 = !DILocalVariable(name: "br_dev", arg: 1, scope: !21765, file: !10118, line: 349, type: !451)
!21767 = !DILocation(line: 349, column: 51, scope: !21765)
!21768 = !DILocalVariable(name: "dev", scope: !21765, file: !10118, line: 351, type: !451)
!21769 = !DILocation(line: 351, column: 21, scope: !21765)
!21770 = !DILocalVariable(name: "iter", scope: !21765, file: !10118, line: 352, type: !448)
!21771 = !DILocation(line: 352, column: 20, scope: !21765)
!21772 = !DILocation(line: 354, column: 2, scope: !21773)
!21773 = distinct !DILexicalBlock(scope: !21765, file: !10118, line: 354, column: 2)
!21774 = !DILocation(line: 354, column: 2, scope: !21775)
!21775 = distinct !DILexicalBlock(scope: !21773, file: !10118, line: 354, column: 2)
!21776 = !DILocation(line: 355, column: 22, scope: !21777)
!21777 = distinct !DILexicalBlock(scope: !21778, file: !10118, line: 355, column: 7)
!21778 = distinct !DILexicalBlock(scope: !21775, file: !10118, line: 354, column: 47)
!21779 = !DILocation(line: 355, column: 7, scope: !21777)
!21780 = !DILocation(line: 355, column: 7, scope: !21778)
!21781 = !DILocation(line: 356, column: 11, scope: !21777)
!21782 = !DILocation(line: 356, column: 4, scope: !21777)
!21783 = !DILocation(line: 357, column: 2, scope: !21778)
!21784 = distinct !{!21784, !21772, !21785}
!21785 = !DILocation(line: 357, column: 2, scope: !21773)
!21786 = !DILocation(line: 359, column: 2, scope: !21765)
!21787 = !DILocation(line: 360, column: 1, scope: !21765)
!21788 = distinct !DISubprogram(name: "mlxsw_sp_lag_index_get", scope: !3, file: !3, line: 3482, type: !21789, scopeLine: 3485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21789 = !DISubroutineType(types: !21790)
!21790 = !{!7, !10721, !451, !8521}
!21791 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !21788, file: !3, line: 3482, type: !10721)
!21792 = !DILocation(line: 3482, column: 52, scope: !21788)
!21793 = !DILocalVariable(name: "lag_dev", arg: 2, scope: !21788, file: !3, line: 3483, type: !451)
!21794 = !DILocation(line: 3483, column: 26, scope: !21788)
!21795 = !DILocalVariable(name: "p_lag_id", arg: 3, scope: !21788, file: !3, line: 3484, type: !8521)
!21796 = !DILocation(line: 3484, column: 12, scope: !21788)
!21797 = !DILocalVariable(name: "lag", scope: !21788, file: !3, line: 3486, type: !10755)
!21798 = !DILocation(line: 3486, column: 25, scope: !21788)
!21799 = !DILocalVariable(name: "free_lag_id", scope: !21788, file: !3, line: 3487, type: !7)
!21800 = !DILocation(line: 3487, column: 6, scope: !21788)
!21801 = !DILocalVariable(name: "max_lag", scope: !21788, file: !3, line: 3488, type: !492)
!21802 = !DILocation(line: 3488, column: 6, scope: !21788)
!21803 = !DILocalVariable(name: "i", scope: !21788, file: !3, line: 3489, type: !7)
!21804 = !DILocation(line: 3489, column: 6, scope: !21788)
!21805 = !DILocation(line: 3491, column: 12, scope: !21788)
!21806 = !DILocation(line: 3491, column: 10, scope: !21788)
!21807 = !DILocation(line: 3492, column: 9, scope: !21808)
!21808 = distinct !DILexicalBlock(scope: !21788, file: !3, line: 3492, column: 2)
!21809 = !DILocation(line: 3492, column: 7, scope: !21808)
!21810 = !DILocation(line: 3492, column: 14, scope: !21811)
!21811 = distinct !DILexicalBlock(scope: !21808, file: !3, line: 3492, column: 2)
!21812 = !DILocation(line: 3492, column: 18, scope: !21811)
!21813 = !DILocation(line: 3492, column: 16, scope: !21811)
!21814 = !DILocation(line: 3492, column: 2, scope: !21808)
!21815 = !DILocation(line: 3493, column: 26, scope: !21816)
!21816 = distinct !DILexicalBlock(scope: !21811, file: !3, line: 3492, column: 32)
!21817 = !DILocation(line: 3493, column: 36, scope: !21816)
!21818 = !DILocation(line: 3493, column: 9, scope: !21816)
!21819 = !DILocation(line: 3493, column: 7, scope: !21816)
!21820 = !DILocation(line: 3494, column: 7, scope: !21821)
!21821 = distinct !DILexicalBlock(scope: !21816, file: !3, line: 3494, column: 7)
!21822 = !DILocation(line: 3494, column: 12, scope: !21821)
!21823 = !DILocation(line: 3494, column: 7, scope: !21816)
!21824 = !DILocation(line: 3495, column: 8, scope: !21825)
!21825 = distinct !DILexicalBlock(scope: !21826, file: !3, line: 3495, column: 8)
!21826 = distinct !DILexicalBlock(scope: !21821, file: !3, line: 3494, column: 23)
!21827 = !DILocation(line: 3495, column: 13, scope: !21825)
!21828 = !DILocation(line: 3495, column: 20, scope: !21825)
!21829 = !DILocation(line: 3495, column: 17, scope: !21825)
!21830 = !DILocation(line: 3495, column: 8, scope: !21826)
!21831 = !DILocation(line: 3496, column: 17, scope: !21832)
!21832 = distinct !DILexicalBlock(scope: !21825, file: !3, line: 3495, column: 29)
!21833 = !DILocation(line: 3496, column: 6, scope: !21832)
!21834 = !DILocation(line: 3496, column: 15, scope: !21832)
!21835 = !DILocation(line: 3497, column: 5, scope: !21832)
!21836 = !DILocation(line: 3499, column: 3, scope: !21826)
!21837 = !DILocation(line: 3499, column: 14, scope: !21838)
!21838 = distinct !DILexicalBlock(scope: !21821, file: !3, line: 3499, column: 14)
!21839 = !DILocation(line: 3499, column: 26, scope: !21838)
!21840 = !DILocation(line: 3499, column: 14, scope: !21821)
!21841 = !DILocation(line: 3500, column: 18, scope: !21842)
!21842 = distinct !DILexicalBlock(scope: !21838, file: !3, line: 3499, column: 31)
!21843 = !DILocation(line: 3500, column: 16, scope: !21842)
!21844 = !DILocation(line: 3501, column: 3, scope: !21842)
!21845 = !DILocation(line: 3502, column: 2, scope: !21816)
!21846 = !DILocation(line: 3492, column: 28, scope: !21811)
!21847 = !DILocation(line: 3492, column: 2, scope: !21811)
!21848 = distinct !{!21848, !21814, !21849}
!21849 = !DILocation(line: 3502, column: 2, scope: !21808)
!21850 = !DILocation(line: 3503, column: 6, scope: !21851)
!21851 = distinct !DILexicalBlock(scope: !21788, file: !3, line: 3503, column: 6)
!21852 = !DILocation(line: 3503, column: 18, scope: !21851)
!21853 = !DILocation(line: 3503, column: 6, scope: !21788)
!21854 = !DILocation(line: 3504, column: 3, scope: !21851)
!21855 = !DILocation(line: 3505, column: 14, scope: !21788)
!21856 = !DILocation(line: 3505, column: 3, scope: !21788)
!21857 = !DILocation(line: 3505, column: 12, scope: !21788)
!21858 = !DILocation(line: 3506, column: 2, scope: !21788)
!21859 = !DILocation(line: 3507, column: 1, scope: !21788)
!21860 = distinct !DISubprogram(name: "mlxsw_sp_lag_get", scope: !10118, file: !10118, line: 220, type: !21861, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21861 = !DISubroutineType(types: !21862)
!21862 = !{!10755, !10721, !1193}
!21863 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !21860, file: !10118, line: 220, type: !10721)
!21864 = !DILocation(line: 220, column: 35, scope: !21860)
!21865 = !DILocalVariable(name: "lag_id", arg: 2, scope: !21860, file: !10118, line: 220, type: !1193)
!21866 = !DILocation(line: 220, column: 49, scope: !21860)
!21867 = !DILocation(line: 222, column: 10, scope: !21860)
!21868 = !DILocation(line: 222, column: 20, scope: !21860)
!21869 = !DILocation(line: 222, column: 25, scope: !21860)
!21870 = !DILocation(line: 222, column: 2, scope: !21860)
!21871 = distinct !DISubprogram(name: "netif_is_bond_slave", scope: !6, file: !6, line: 4891, type: !14728, scopeLine: 4892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21872 = !DILocalVariable(name: "dev", arg: 1, scope: !21871, file: !6, line: 4891, type: !3023)
!21873 = !DILocation(line: 4891, column: 65, scope: !21871)
!21874 = !DILocation(line: 4893, column: 9, scope: !21871)
!21875 = !DILocation(line: 4893, column: 14, scope: !21871)
!21876 = !DILocation(line: 4893, column: 20, scope: !21871)
!21877 = !DILocation(line: 4893, column: 32, scope: !21871)
!21878 = !DILocation(line: 4893, column: 35, scope: !21871)
!21879 = !DILocation(line: 4893, column: 40, scope: !21871)
!21880 = !DILocation(line: 4893, column: 51, scope: !21871)
!21881 = !DILocation(line: 0, scope: !21871)
!21882 = !DILocation(line: 4893, column: 2, scope: !21871)
!21883 = distinct !DISubprogram(name: "netif_is_team_port", scope: !6, file: !6, line: 4946, type: !14728, scopeLine: 4947, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21884 = !DILocalVariable(name: "dev", arg: 1, scope: !21883, file: !6, line: 4946, type: !3023)
!21885 = !DILocation(line: 4946, column: 64, scope: !21883)
!21886 = !DILocation(line: 4948, column: 9, scope: !21883)
!21887 = !DILocation(line: 4948, column: 14, scope: !21883)
!21888 = !DILocation(line: 4948, column: 25, scope: !21883)
!21889 = !DILocation(line: 4948, column: 2, scope: !21883)
!21890 = distinct !DISubprogram(name: "mlxsw_sp_lag_create", scope: !3, file: !3, line: 3422, type: !11254, scopeLine: 3423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21891 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !21890, file: !3, line: 3422, type: !10721)
!21892 = !DILocation(line: 3422, column: 49, scope: !21890)
!21893 = !DILocalVariable(name: "lag_id", arg: 2, scope: !21890, file: !3, line: 3422, type: !1193)
!21894 = !DILocation(line: 3422, column: 63, scope: !21890)
!21895 = !DILocalVariable(name: "sldr_pl", scope: !21890, file: !3, line: 3424, type: !8769)
!21896 = !DILocation(line: 3424, column: 7, scope: !21890)
!21897 = !DILocation(line: 3426, column: 33, scope: !21890)
!21898 = !DILocation(line: 3426, column: 42, scope: !21890)
!21899 = !DILocation(line: 3426, column: 2, scope: !21890)
!21900 = !DILocation(line: 3427, column: 25, scope: !21890)
!21901 = !DILocation(line: 3427, column: 35, scope: !21890)
!21902 = !DILocation(line: 3427, column: 58, scope: !21890)
!21903 = !DILocation(line: 3427, column: 9, scope: !21890)
!21904 = !DILocation(line: 3427, column: 2, scope: !21890)
!21905 = distinct !DISubprogram(name: "mlxsw_sp_port_lag_index_get", scope: !3, file: !3, line: 3528, type: !21906, scopeLine: 3530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21906 = !DISubroutineType(types: !21907)
!21907 = !{!7, !10721, !1193, !8100}
!21908 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !21905, file: !3, line: 3528, type: !10721)
!21909 = !DILocation(line: 3528, column: 57, scope: !21905)
!21910 = !DILocalVariable(name: "lag_id", arg: 2, scope: !21905, file: !3, line: 3529, type: !1193)
!21911 = !DILocation(line: 3529, column: 16, scope: !21905)
!21912 = !DILocalVariable(name: "p_port_index", arg: 3, scope: !21905, file: !3, line: 3529, type: !8100)
!21913 = !DILocation(line: 3529, column: 28, scope: !21905)
!21914 = !DILocalVariable(name: "max_lag_members", scope: !21905, file: !3, line: 3531, type: !492)
!21915 = !DILocation(line: 3531, column: 6, scope: !21905)
!21916 = !DILocalVariable(name: "i", scope: !21905, file: !3, line: 3532, type: !7)
!21917 = !DILocation(line: 3532, column: 6, scope: !21905)
!21918 = !DILocation(line: 3534, column: 20, scope: !21905)
!21919 = !DILocation(line: 3534, column: 18, scope: !21905)
!21920 = !DILocation(line: 3536, column: 9, scope: !21921)
!21921 = distinct !DILexicalBlock(scope: !21905, file: !3, line: 3536, column: 2)
!21922 = !DILocation(line: 3536, column: 7, scope: !21921)
!21923 = !DILocation(line: 3536, column: 14, scope: !21924)
!21924 = distinct !DILexicalBlock(scope: !21921, file: !3, line: 3536, column: 2)
!21925 = !DILocation(line: 3536, column: 18, scope: !21924)
!21926 = !DILocation(line: 3536, column: 16, scope: !21924)
!21927 = !DILocation(line: 3536, column: 2, scope: !21921)
!21928 = !DILocation(line: 3537, column: 33, scope: !21929)
!21929 = distinct !DILexicalBlock(scope: !21930, file: !3, line: 3537, column: 7)
!21930 = distinct !DILexicalBlock(scope: !21924, file: !3, line: 3536, column: 40)
!21931 = !DILocation(line: 3537, column: 43, scope: !21929)
!21932 = !DILocation(line: 3537, column: 51, scope: !21929)
!21933 = !DILocation(line: 3537, column: 8, scope: !21929)
!21934 = !DILocation(line: 3537, column: 7, scope: !21930)
!21935 = !DILocation(line: 3538, column: 20, scope: !21936)
!21936 = distinct !DILexicalBlock(scope: !21929, file: !3, line: 3537, column: 55)
!21937 = !DILocation(line: 3538, column: 5, scope: !21936)
!21938 = !DILocation(line: 3538, column: 18, scope: !21936)
!21939 = !DILocation(line: 3539, column: 4, scope: !21936)
!21940 = !DILocation(line: 3541, column: 2, scope: !21930)
!21941 = !DILocation(line: 3536, column: 36, scope: !21924)
!21942 = !DILocation(line: 3536, column: 2, scope: !21924)
!21943 = distinct !{!21943, !21927, !21944}
!21944 = !DILocation(line: 3541, column: 2, scope: !21921)
!21945 = !DILocation(line: 3542, column: 2, scope: !21905)
!21946 = !DILocation(line: 3543, column: 1, scope: !21905)
!21947 = distinct !DISubprogram(name: "mlxsw_sp_lag_col_port_add", scope: !3, file: !3, line: 3438, type: !12747, scopeLine: 3440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21948 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !21947, file: !3, line: 3438, type: !10715)
!21949 = !DILocation(line: 3438, column: 60, scope: !21947)
!21950 = !DILocalVariable(name: "lag_id", arg: 2, scope: !21947, file: !3, line: 3439, type: !1193)
!21951 = !DILocation(line: 3439, column: 14, scope: !21947)
!21952 = !DILocalVariable(name: "port_index", arg: 3, scope: !21947, file: !3, line: 3439, type: !1552)
!21953 = !DILocation(line: 3439, column: 25, scope: !21947)
!21954 = !DILocalVariable(name: "mlxsw_sp", scope: !21947, file: !3, line: 3441, type: !10721)
!21955 = !DILocation(line: 3441, column: 19, scope: !21947)
!21956 = !DILocation(line: 3441, column: 30, scope: !21947)
!21957 = !DILocation(line: 3441, column: 45, scope: !21947)
!21958 = !DILocalVariable(name: "slcor_pl", scope: !21947, file: !3, line: 3442, type: !428)
!21959 = !DILocation(line: 3442, column: 7, scope: !21947)
!21960 = !DILocation(line: 3444, column: 32, scope: !21947)
!21961 = !DILocation(line: 3444, column: 42, scope: !21947)
!21962 = !DILocation(line: 3444, column: 57, scope: !21947)
!21963 = !DILocation(line: 3445, column: 11, scope: !21947)
!21964 = !DILocation(line: 3445, column: 19, scope: !21947)
!21965 = !DILocation(line: 3444, column: 2, scope: !21947)
!21966 = !DILocation(line: 3446, column: 25, scope: !21947)
!21967 = !DILocation(line: 3446, column: 35, scope: !21947)
!21968 = !DILocation(line: 3446, column: 59, scope: !21947)
!21969 = !DILocation(line: 3446, column: 9, scope: !21947)
!21970 = !DILocation(line: 3446, column: 2, scope: !21947)
!21971 = distinct !DISubprogram(name: "mlxsw_sp_lag_destroy", scope: !3, file: !3, line: 3430, type: !11254, scopeLine: 3431, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21972 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !21971, file: !3, line: 3430, type: !10721)
!21973 = !DILocation(line: 3430, column: 50, scope: !21971)
!21974 = !DILocalVariable(name: "lag_id", arg: 2, scope: !21971, file: !3, line: 3430, type: !1193)
!21975 = !DILocation(line: 3430, column: 64, scope: !21971)
!21976 = !DILocalVariable(name: "sldr_pl", scope: !21971, file: !3, line: 3432, type: !8769)
!21977 = !DILocation(line: 3432, column: 7, scope: !21971)
!21978 = !DILocation(line: 3434, column: 34, scope: !21971)
!21979 = !DILocation(line: 3434, column: 43, scope: !21971)
!21980 = !DILocation(line: 3434, column: 2, scope: !21971)
!21981 = !DILocation(line: 3435, column: 25, scope: !21971)
!21982 = !DILocation(line: 3435, column: 35, scope: !21971)
!21983 = !DILocation(line: 3435, column: 58, scope: !21971)
!21984 = !DILocation(line: 3435, column: 9, scope: !21971)
!21985 = !DILocation(line: 3435, column: 2, scope: !21971)
!21986 = distinct !DISubprogram(name: "mlxsw_reg_sldr_lag_create_pack", scope: !10113, file: !10113, line: 1291, type: !13054, scopeLine: 1292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21987 = !DILocalVariable(name: "payload", arg: 1, scope: !21986, file: !10113, line: 1291, type: !733)
!21988 = !DILocation(line: 1291, column: 57, scope: !21986)
!21989 = !DILocalVariable(name: "lag_id", arg: 2, scope: !21986, file: !10113, line: 1291, type: !1552)
!21990 = !DILocation(line: 1291, column: 69, scope: !21986)
!21991 = !DILocation(line: 1293, column: 2, scope: !21986)
!21992 = !DILocation(line: 1294, column: 24, scope: !21986)
!21993 = !DILocation(line: 1294, column: 2, scope: !21986)
!21994 = !DILocation(line: 1295, column: 28, scope: !21986)
!21995 = !DILocation(line: 1295, column: 37, scope: !21986)
!21996 = !DILocation(line: 1295, column: 2, scope: !21986)
!21997 = !DILocation(line: 1296, column: 1, scope: !21986)
!21998 = distinct !DISubprogram(name: "mlxsw_reg_sldr_op_set", scope: !10113, file: !10113, line: 1283, type: !14426, scopeLine: 1283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!21999 = !DILocalVariable(name: "buf", arg: 1, scope: !21998, file: !10113, line: 1283, type: !733)
!22000 = !DILocation(line: 1283, column: 1, scope: !21998)
!22001 = !DILocalVariable(name: "val", arg: 2, scope: !21998, file: !10113, line: 1283, type: !862)
!22002 = distinct !DISubprogram(name: "mlxsw_reg_sldr_lag_id_set", scope: !10113, file: !10113, line: 1289, type: !14426, scopeLine: 1289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22003 = !DILocalVariable(name: "buf", arg: 1, scope: !22002, file: !10113, line: 1289, type: !733)
!22004 = !DILocation(line: 1289, column: 1, scope: !22002)
!22005 = !DILocalVariable(name: "val", arg: 2, scope: !22002, file: !10113, line: 1289, type: !862)
!22006 = distinct !DISubprogram(name: "mlxsw_sp_port_lagged_get", scope: !10118, file: !10118, line: 394, type: !22007, scopeLine: 395, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22007 = !DISubroutineType(types: !22008)
!22008 = !{!10715, !10721, !1193, !1552}
!22009 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !22006, file: !10118, line: 394, type: !10721)
!22010 = !DILocation(line: 394, column: 43, scope: !22006)
!22011 = !DILocalVariable(name: "lag_id", arg: 2, scope: !22006, file: !10118, line: 394, type: !1193)
!22012 = !DILocation(line: 394, column: 57, scope: !22006)
!22013 = !DILocalVariable(name: "port_index", arg: 3, scope: !22006, file: !10118, line: 394, type: !1552)
!22014 = !DILocation(line: 394, column: 68, scope: !22006)
!22015 = !DILocalVariable(name: "mlxsw_sp_port", scope: !22006, file: !10118, line: 396, type: !10715)
!22016 = !DILocation(line: 396, column: 24, scope: !22006)
!22017 = !DILocalVariable(name: "local_port", scope: !22006, file: !10118, line: 397, type: !1552)
!22018 = !DILocation(line: 397, column: 5, scope: !22006)
!22019 = !DILocation(line: 399, column: 42, scope: !22006)
!22020 = !DILocation(line: 399, column: 52, scope: !22006)
!22021 = !DILocation(line: 400, column: 7, scope: !22006)
!22022 = !DILocation(line: 400, column: 15, scope: !22006)
!22023 = !DILocation(line: 399, column: 15, scope: !22006)
!22024 = !DILocation(line: 399, column: 13, scope: !22006)
!22025 = !DILocation(line: 401, column: 18, scope: !22006)
!22026 = !DILocation(line: 401, column: 28, scope: !22006)
!22027 = !DILocation(line: 401, column: 34, scope: !22006)
!22028 = !DILocation(line: 401, column: 16, scope: !22006)
!22029 = !DILocation(line: 402, column: 9, scope: !22006)
!22030 = !DILocation(line: 402, column: 23, scope: !22006)
!22031 = !DILocation(line: 402, column: 26, scope: !22006)
!22032 = !DILocation(line: 402, column: 41, scope: !22006)
!22033 = !DILocation(line: 402, column: 50, scope: !22006)
!22034 = !DILocation(line: 402, column: 2, scope: !22006)
!22035 = distinct !DISubprogram(name: "mlxsw_reg_slcor_port_add_pack", scope: !10113, file: !10113, line: 1513, type: !22036, scopeLine: 1516, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22036 = !DISubroutineType(types: !22037)
!22037 = !{null, !733, !1552, !1193, !1552}
!22038 = !DILocalVariable(name: "payload", arg: 1, scope: !22035, file: !10113, line: 1513, type: !733)
!22039 = !DILocation(line: 1513, column: 56, scope: !22035)
!22040 = !DILocalVariable(name: "local_port", arg: 2, scope: !22035, file: !10113, line: 1514, type: !1552)
!22041 = !DILocation(line: 1514, column: 11, scope: !22035)
!22042 = !DILocalVariable(name: "lag_id", arg: 3, scope: !22035, file: !10113, line: 1514, type: !1193)
!22043 = !DILocation(line: 1514, column: 27, scope: !22035)
!22044 = !DILocalVariable(name: "port_index", arg: 4, scope: !22035, file: !10113, line: 1515, type: !1552)
!22045 = !DILocation(line: 1515, column: 11, scope: !22035)
!22046 = !DILocation(line: 1517, column: 23, scope: !22035)
!22047 = !DILocation(line: 1517, column: 32, scope: !22035)
!22048 = !DILocation(line: 1517, column: 44, scope: !22035)
!22049 = !DILocation(line: 1517, column: 2, scope: !22035)
!22050 = !DILocation(line: 1519, column: 33, scope: !22035)
!22051 = !DILocation(line: 1519, column: 42, scope: !22035)
!22052 = !DILocation(line: 1519, column: 2, scope: !22035)
!22053 = !DILocation(line: 1520, column: 1, scope: !22035)
!22054 = distinct !DISubprogram(name: "mlxsw_reg_slcor_pack", scope: !10113, file: !10113, line: 1503, type: !22055, scopeLine: 1506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22055 = !DISubroutineType(types: !22056)
!22056 = !{null, !733, !1552, !1193, !10611}
!22057 = !DILocalVariable(name: "payload", arg: 1, scope: !22054, file: !10113, line: 1503, type: !733)
!22058 = !DILocation(line: 1503, column: 47, scope: !22054)
!22059 = !DILocalVariable(name: "local_port", arg: 2, scope: !22054, file: !10113, line: 1504, type: !1552)
!22060 = !DILocation(line: 1504, column: 9, scope: !22054)
!22061 = !DILocalVariable(name: "lag_id", arg: 3, scope: !22054, file: !10113, line: 1504, type: !1193)
!22062 = !DILocation(line: 1504, column: 25, scope: !22054)
!22063 = !DILocalVariable(name: "col", arg: 4, scope: !22054, file: !10113, line: 1505, type: !10611)
!22064 = !DILocation(line: 1505, column: 31, scope: !22054)
!22065 = !DILocation(line: 1507, column: 2, scope: !22054)
!22066 = !DILocation(line: 1508, column: 26, scope: !22054)
!22067 = !DILocation(line: 1508, column: 35, scope: !22054)
!22068 = !DILocation(line: 1508, column: 2, scope: !22054)
!22069 = !DILocation(line: 1509, column: 33, scope: !22054)
!22070 = !DILocation(line: 1509, column: 42, scope: !22054)
!22071 = !DILocation(line: 1509, column: 2, scope: !22054)
!22072 = !DILocation(line: 1510, column: 29, scope: !22054)
!22073 = !DILocation(line: 1510, column: 38, scope: !22054)
!22074 = !DILocation(line: 1510, column: 2, scope: !22054)
!22075 = !DILocation(line: 1511, column: 1, scope: !22054)
!22076 = distinct !DISubprogram(name: "mlxsw_reg_slcor_port_index_set", scope: !10113, file: !10113, line: 1501, type: !14426, scopeLine: 1501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22077 = !DILocalVariable(name: "buf", arg: 1, scope: !22076, file: !10113, line: 1501, type: !733)
!22078 = !DILocation(line: 1501, column: 1, scope: !22076)
!22079 = !DILocalVariable(name: "val", arg: 2, scope: !22076, file: !10113, line: 1501, type: !862)
!22080 = distinct !DISubprogram(name: "mlxsw_reg_slcor_col_set", scope: !10113, file: !10113, line: 1481, type: !14426, scopeLine: 1481, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22081 = !DILocalVariable(name: "buf", arg: 1, scope: !22080, file: !10113, line: 1481, type: !733)
!22082 = !DILocation(line: 1481, column: 1, scope: !22080)
!22083 = !DILocalVariable(name: "val", arg: 2, scope: !22080, file: !10113, line: 1481, type: !862)
!22084 = distinct !DISubprogram(name: "mlxsw_reg_slcor_local_port_set", scope: !10113, file: !10113, line: 1488, type: !14426, scopeLine: 1488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22085 = !DILocalVariable(name: "buf", arg: 1, scope: !22084, file: !10113, line: 1488, type: !733)
!22086 = !DILocation(line: 1488, column: 1, scope: !22084)
!22087 = !DILocalVariable(name: "val", arg: 2, scope: !22084, file: !10113, line: 1488, type: !862)
!22088 = distinct !DISubprogram(name: "mlxsw_reg_slcor_lag_id_set", scope: !10113, file: !10113, line: 1494, type: !14426, scopeLine: 1494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22089 = !DILocalVariable(name: "buf", arg: 1, scope: !22088, file: !10113, line: 1494, type: !733)
!22090 = !DILocation(line: 1494, column: 1, scope: !22088)
!22091 = !DILocalVariable(name: "val", arg: 2, scope: !22088, file: !10113, line: 1494, type: !862)
!22092 = distinct !DISubprogram(name: "mlxsw_reg_sldr_lag_destroy_pack", scope: !10113, file: !10113, line: 1298, type: !13054, scopeLine: 1299, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22093 = !DILocalVariable(name: "payload", arg: 1, scope: !22092, file: !10113, line: 1298, type: !733)
!22094 = !DILocation(line: 1298, column: 58, scope: !22092)
!22095 = !DILocalVariable(name: "lag_id", arg: 2, scope: !22092, file: !10113, line: 1298, type: !1552)
!22096 = !DILocation(line: 1298, column: 70, scope: !22092)
!22097 = !DILocation(line: 1300, column: 2, scope: !22092)
!22098 = !DILocation(line: 1301, column: 24, scope: !22092)
!22099 = !DILocation(line: 1301, column: 2, scope: !22092)
!22100 = !DILocation(line: 1302, column: 28, scope: !22092)
!22101 = !DILocation(line: 1302, column: 37, scope: !22092)
!22102 = !DILocation(line: 1302, column: 2, scope: !22092)
!22103 = !DILocation(line: 1303, column: 1, scope: !22092)
!22104 = distinct !DISubprogram(name: "mlxsw_sp_lag_dist_port_remove", scope: !3, file: !3, line: 3635, type: !13471, scopeLine: 3637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22105 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !22104, file: !3, line: 3635, type: !10715)
!22106 = !DILocation(line: 3635, column: 64, scope: !22104)
!22107 = !DILocalVariable(name: "lag_id", arg: 2, scope: !22104, file: !3, line: 3636, type: !1193)
!22108 = !DILocation(line: 3636, column: 11, scope: !22104)
!22109 = !DILocalVariable(name: "mlxsw_sp", scope: !22104, file: !3, line: 3638, type: !10721)
!22110 = !DILocation(line: 3638, column: 19, scope: !22104)
!22111 = !DILocation(line: 3638, column: 30, scope: !22104)
!22112 = !DILocation(line: 3638, column: 45, scope: !22104)
!22113 = !DILocalVariable(name: "sldr_pl", scope: !22104, file: !3, line: 3639, type: !8769)
!22114 = !DILocation(line: 3639, column: 7, scope: !22104)
!22115 = !DILocation(line: 3641, column: 38, scope: !22104)
!22116 = !DILocation(line: 3641, column: 47, scope: !22104)
!22117 = !DILocation(line: 3642, column: 10, scope: !22104)
!22118 = !DILocation(line: 3642, column: 25, scope: !22104)
!22119 = !DILocation(line: 3641, column: 2, scope: !22104)
!22120 = !DILocation(line: 3643, column: 25, scope: !22104)
!22121 = !DILocation(line: 3643, column: 35, scope: !22104)
!22122 = !DILocation(line: 3643, column: 58, scope: !22104)
!22123 = !DILocation(line: 3643, column: 9, scope: !22104)
!22124 = !DILocation(line: 3643, column: 2, scope: !22104)
!22125 = distinct !DISubprogram(name: "mlxsw_sp_lag_col_port_disable", scope: !3, file: !3, line: 3471, type: !13471, scopeLine: 3473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22126 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !22125, file: !3, line: 3471, type: !10715)
!22127 = !DILocation(line: 3471, column: 64, scope: !22125)
!22128 = !DILocalVariable(name: "lag_id", arg: 2, scope: !22125, file: !3, line: 3472, type: !1193)
!22129 = !DILocation(line: 3472, column: 11, scope: !22125)
!22130 = !DILocalVariable(name: "mlxsw_sp", scope: !22125, file: !3, line: 3474, type: !10721)
!22131 = !DILocation(line: 3474, column: 19, scope: !22125)
!22132 = !DILocation(line: 3474, column: 30, scope: !22125)
!22133 = !DILocation(line: 3474, column: 45, scope: !22125)
!22134 = !DILocalVariable(name: "slcor_pl", scope: !22125, file: !3, line: 3475, type: !428)
!22135 = !DILocation(line: 3475, column: 7, scope: !22125)
!22136 = !DILocation(line: 3477, column: 35, scope: !22125)
!22137 = !DILocation(line: 3477, column: 45, scope: !22125)
!22138 = !DILocation(line: 3477, column: 60, scope: !22125)
!22139 = !DILocation(line: 3478, column: 7, scope: !22125)
!22140 = !DILocation(line: 3477, column: 2, scope: !22125)
!22141 = !DILocation(line: 3479, column: 25, scope: !22125)
!22142 = !DILocation(line: 3479, column: 35, scope: !22125)
!22143 = !DILocation(line: 3479, column: 59, scope: !22125)
!22144 = !DILocation(line: 3479, column: 9, scope: !22125)
!22145 = !DILocation(line: 3479, column: 2, scope: !22125)
!22146 = distinct !DISubprogram(name: "mlxsw_sp_lag_dist_port_add", scope: !3, file: !3, line: 3624, type: !13471, scopeLine: 3626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22147 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !22146, file: !3, line: 3624, type: !10715)
!22148 = !DILocation(line: 3624, column: 61, scope: !22146)
!22149 = !DILocalVariable(name: "lag_id", arg: 2, scope: !22146, file: !3, line: 3625, type: !1193)
!22150 = !DILocation(line: 3625, column: 15, scope: !22146)
!22151 = !DILocalVariable(name: "mlxsw_sp", scope: !22146, file: !3, line: 3627, type: !10721)
!22152 = !DILocation(line: 3627, column: 19, scope: !22146)
!22153 = !DILocation(line: 3627, column: 30, scope: !22146)
!22154 = !DILocation(line: 3627, column: 45, scope: !22146)
!22155 = !DILocalVariable(name: "sldr_pl", scope: !22146, file: !3, line: 3628, type: !8769)
!22156 = !DILocation(line: 3628, column: 7, scope: !22146)
!22157 = !DILocation(line: 3630, column: 35, scope: !22146)
!22158 = !DILocation(line: 3630, column: 44, scope: !22146)
!22159 = !DILocation(line: 3631, column: 7, scope: !22146)
!22160 = !DILocation(line: 3631, column: 22, scope: !22146)
!22161 = !DILocation(line: 3630, column: 2, scope: !22146)
!22162 = !DILocation(line: 3632, column: 25, scope: !22146)
!22163 = !DILocation(line: 3632, column: 35, scope: !22146)
!22164 = !DILocation(line: 3632, column: 58, scope: !22146)
!22165 = !DILocation(line: 3632, column: 9, scope: !22146)
!22166 = !DILocation(line: 3632, column: 2, scope: !22146)
!22167 = distinct !DISubprogram(name: "mlxsw_reg_sldr_lag_remove_port_pack", scope: !10113, file: !10113, line: 1329, type: !22168, scopeLine: 1331, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22168 = !DISubroutineType(types: !22169)
!22169 = !{null, !733, !1552, !1552}
!22170 = !DILocalVariable(name: "payload", arg: 1, scope: !22167, file: !10113, line: 1329, type: !733)
!22171 = !DILocation(line: 1329, column: 62, scope: !22167)
!22172 = !DILocalVariable(name: "lag_id", arg: 2, scope: !22167, file: !10113, line: 1329, type: !1552)
!22173 = !DILocation(line: 1329, column: 74, scope: !22167)
!22174 = !DILocalVariable(name: "local_port", arg: 3, scope: !22167, file: !10113, line: 1330, type: !1552)
!22175 = !DILocation(line: 1330, column: 17, scope: !22167)
!22176 = !DILocation(line: 1332, column: 2, scope: !22167)
!22177 = !DILocation(line: 1333, column: 24, scope: !22167)
!22178 = !DILocation(line: 1333, column: 2, scope: !22167)
!22179 = !DILocation(line: 1334, column: 28, scope: !22167)
!22180 = !DILocation(line: 1334, column: 37, scope: !22167)
!22181 = !DILocation(line: 1334, column: 2, scope: !22167)
!22182 = !DILocation(line: 1335, column: 31, scope: !22167)
!22183 = !DILocation(line: 1335, column: 2, scope: !22167)
!22184 = !DILocation(line: 1336, column: 33, scope: !22167)
!22185 = !DILocation(line: 1336, column: 45, scope: !22167)
!22186 = !DILocation(line: 1336, column: 2, scope: !22167)
!22187 = !DILocation(line: 1337, column: 1, scope: !22167)
!22188 = distinct !DISubprogram(name: "mlxsw_reg_sldr_num_ports_set", scope: !10113, file: !10113, line: 1311, type: !14426, scopeLine: 1311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22189 = !DILocalVariable(name: "buf", arg: 1, scope: !22188, file: !10113, line: 1311, type: !733)
!22190 = !DILocation(line: 1311, column: 1, scope: !22188)
!22191 = !DILocalVariable(name: "val", arg: 2, scope: !22188, file: !10113, line: 1311, type: !862)
!22192 = distinct !DISubprogram(name: "mlxsw_reg_sldr_system_port_set", scope: !10113, file: !10113, line: 1317, type: !15436, scopeLine: 1317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22193 = !DILocalVariable(name: "buf", arg: 1, scope: !22192, file: !10113, line: 1317, type: !733)
!22194 = !DILocation(line: 1317, column: 1, scope: !22192)
!22195 = !DILocalVariable(name: "index", arg: 2, scope: !22192, file: !10113, line: 1317, type: !633)
!22196 = !DILocalVariable(name: "val", arg: 3, scope: !22192, file: !10113, line: 1317, type: !862)
!22197 = distinct !DISubprogram(name: "mlxsw_reg_slcor_col_disable_pack", scope: !10113, file: !10113, line: 1536, type: !15484, scopeLine: 1538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22198 = !DILocalVariable(name: "payload", arg: 1, scope: !22197, file: !10113, line: 1536, type: !733)
!22199 = !DILocation(line: 1536, column: 59, scope: !22197)
!22200 = !DILocalVariable(name: "local_port", arg: 2, scope: !22197, file: !10113, line: 1537, type: !1552)
!22201 = !DILocation(line: 1537, column: 14, scope: !22197)
!22202 = !DILocalVariable(name: "lag_id", arg: 3, scope: !22197, file: !10113, line: 1537, type: !1193)
!22203 = !DILocation(line: 1537, column: 30, scope: !22197)
!22204 = !DILocation(line: 1539, column: 23, scope: !22197)
!22205 = !DILocation(line: 1539, column: 32, scope: !22197)
!22206 = !DILocation(line: 1539, column: 44, scope: !22197)
!22207 = !DILocation(line: 1539, column: 2, scope: !22197)
!22208 = !DILocation(line: 1541, column: 1, scope: !22197)
!22209 = distinct !DISubprogram(name: "mlxsw_reg_sldr_lag_add_port_pack", scope: !10113, file: !10113, line: 1319, type: !22168, scopeLine: 1321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22210 = !DILocalVariable(name: "payload", arg: 1, scope: !22209, file: !10113, line: 1319, type: !733)
!22211 = !DILocation(line: 1319, column: 59, scope: !22209)
!22212 = !DILocalVariable(name: "lag_id", arg: 2, scope: !22209, file: !10113, line: 1319, type: !1552)
!22213 = !DILocation(line: 1319, column: 71, scope: !22209)
!22214 = !DILocalVariable(name: "local_port", arg: 3, scope: !22209, file: !10113, line: 1320, type: !1552)
!22215 = !DILocation(line: 1320, column: 14, scope: !22209)
!22216 = !DILocation(line: 1322, column: 2, scope: !22209)
!22217 = !DILocation(line: 1323, column: 24, scope: !22209)
!22218 = !DILocation(line: 1323, column: 2, scope: !22209)
!22219 = !DILocation(line: 1324, column: 28, scope: !22209)
!22220 = !DILocation(line: 1324, column: 37, scope: !22209)
!22221 = !DILocation(line: 1324, column: 2, scope: !22209)
!22222 = !DILocation(line: 1325, column: 31, scope: !22209)
!22223 = !DILocation(line: 1325, column: 2, scope: !22209)
!22224 = !DILocation(line: 1326, column: 33, scope: !22209)
!22225 = !DILocation(line: 1326, column: 45, scope: !22209)
!22226 = !DILocation(line: 1326, column: 2, scope: !22209)
!22227 = !DILocation(line: 1327, column: 1, scope: !22209)
!22228 = distinct !DISubprogram(name: "mlxsw_sp_lag_col_port_remove", scope: !3, file: !3, line: 3449, type: !13471, scopeLine: 3451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22229 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !22228, file: !3, line: 3449, type: !10715)
!22230 = !DILocation(line: 3449, column: 63, scope: !22228)
!22231 = !DILocalVariable(name: "lag_id", arg: 2, scope: !22228, file: !3, line: 3450, type: !1193)
!22232 = !DILocation(line: 3450, column: 10, scope: !22228)
!22233 = !DILocalVariable(name: "mlxsw_sp", scope: !22228, file: !3, line: 3452, type: !10721)
!22234 = !DILocation(line: 3452, column: 19, scope: !22228)
!22235 = !DILocation(line: 3452, column: 30, scope: !22228)
!22236 = !DILocation(line: 3452, column: 45, scope: !22228)
!22237 = !DILocalVariable(name: "slcor_pl", scope: !22228, file: !3, line: 3453, type: !428)
!22238 = !DILocation(line: 3453, column: 7, scope: !22228)
!22239 = !DILocation(line: 3455, column: 35, scope: !22228)
!22240 = !DILocation(line: 3455, column: 45, scope: !22228)
!22241 = !DILocation(line: 3455, column: 60, scope: !22228)
!22242 = !DILocation(line: 3456, column: 7, scope: !22228)
!22243 = !DILocation(line: 3455, column: 2, scope: !22228)
!22244 = !DILocation(line: 3457, column: 25, scope: !22228)
!22245 = !DILocation(line: 3457, column: 35, scope: !22228)
!22246 = !DILocation(line: 3457, column: 59, scope: !22228)
!22247 = !DILocation(line: 3457, column: 9, scope: !22228)
!22248 = !DILocation(line: 3457, column: 2, scope: !22228)
!22249 = distinct !DISubprogram(name: "mlxsw_sp_port_vlan_flush", scope: !3, file: !3, line: 860, type: !22250, scopeLine: 862, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22250 = !DISubroutineType(types: !22251)
!22251 = !{null, !10715, !696}
!22252 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !22249, file: !3, line: 860, type: !10715)
!22253 = !DILocation(line: 860, column: 60, scope: !22249)
!22254 = !DILocalVariable(name: "flush_default", arg: 2, scope: !22249, file: !3, line: 861, type: !696)
!22255 = !DILocation(line: 861, column: 15, scope: !22249)
!22256 = !DILocalVariable(name: "mlxsw_sp_port_vlan", scope: !22249, file: !3, line: 863, type: !11388)
!22257 = !DILocation(line: 863, column: 29, scope: !22249)
!22258 = !DILocalVariable(name: "tmp", scope: !22249, file: !3, line: 863, type: !11388)
!22259 = !DILocation(line: 863, column: 50, scope: !22249)
!22260 = !DILocalVariable(name: "__mptr", scope: !22261, file: !3, line: 865, type: !726)
!22261 = distinct !DILexicalBlock(scope: !22262, file: !3, line: 865, column: 2)
!22262 = distinct !DILexicalBlock(scope: !22249, file: !3, line: 865, column: 2)
!22263 = !DILocation(line: 865, column: 2, scope: !22261)
!22264 = !DILocation(line: 865, column: 2, scope: !22265)
!22265 = distinct !DILexicalBlock(scope: !22261, file: !3, line: 865, column: 2)
!22266 = !DILocation(line: 865, column: 2, scope: !22262)
!22267 = !DILocalVariable(name: "__mptr", scope: !22268, file: !3, line: 865, type: !726)
!22268 = distinct !DILexicalBlock(scope: !22262, file: !3, line: 865, column: 2)
!22269 = !DILocation(line: 865, column: 2, scope: !22268)
!22270 = !DILocation(line: 865, column: 2, scope: !22271)
!22271 = distinct !DILexicalBlock(scope: !22268, file: !3, line: 865, column: 2)
!22272 = !DILocation(line: 865, column: 2, scope: !22273)
!22273 = distinct !DILexicalBlock(scope: !22262, file: !3, line: 865, column: 2)
!22274 = !DILocation(line: 867, column: 8, scope: !22275)
!22275 = distinct !DILexicalBlock(scope: !22276, file: !3, line: 867, column: 7)
!22276 = distinct !DILexicalBlock(scope: !22273, file: !3, line: 866, column: 40)
!22277 = !DILocation(line: 867, column: 22, scope: !22275)
!22278 = !DILocation(line: 868, column: 7, scope: !22275)
!22279 = !DILocation(line: 868, column: 27, scope: !22275)
!22280 = !DILocation(line: 868, column: 31, scope: !22275)
!22281 = !DILocation(line: 867, column: 7, scope: !22276)
!22282 = !DILocation(line: 869, column: 4, scope: !22275)
!22283 = !DILocation(line: 870, column: 30, scope: !22276)
!22284 = !DILocation(line: 870, column: 3, scope: !22276)
!22285 = !DILocation(line: 871, column: 2, scope: !22276)
!22286 = !DILocalVariable(name: "__mptr", scope: !22287, file: !3, line: 865, type: !726)
!22287 = distinct !DILexicalBlock(scope: !22273, file: !3, line: 865, column: 2)
!22288 = !DILocation(line: 865, column: 2, scope: !22287)
!22289 = !DILocation(line: 865, column: 2, scope: !22290)
!22290 = distinct !DILexicalBlock(scope: !22287, file: !3, line: 865, column: 2)
!22291 = distinct !{!22291, !22266, !22292}
!22292 = !DILocation(line: 871, column: 2, scope: !22262)
!22293 = !DILocation(line: 872, column: 1, scope: !22249)
!22294 = distinct !DISubprogram(name: "mlxsw_sp_port_lag_uppers_cleanup", scope: !3, file: !3, line: 3404, type: !21579, scopeLine: 3406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22295 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !22294, file: !3, line: 3404, type: !10715)
!22296 = !DILocation(line: 3404, column: 56, scope: !22294)
!22297 = !DILocalVariable(name: "lag_dev", arg: 2, scope: !22294, file: !3, line: 3405, type: !451)
!22298 = !DILocation(line: 3405, column: 25, scope: !22294)
!22299 = !DILocalVariable(name: "br_dev", scope: !22294, file: !3, line: 3407, type: !451)
!22300 = !DILocation(line: 3407, column: 21, scope: !22294)
!22301 = !DILocation(line: 3407, column: 58, scope: !22294)
!22302 = !DILocation(line: 3407, column: 30, scope: !22294)
!22303 = !DILocalVariable(name: "upper_dev", scope: !22294, file: !3, line: 3408, type: !451)
!22304 = !DILocation(line: 3408, column: 21, scope: !22294)
!22305 = !DILocalVariable(name: "iter", scope: !22294, file: !3, line: 3409, type: !448)
!22306 = !DILocation(line: 3409, column: 20, scope: !22294)
!22307 = !DILocation(line: 3411, column: 27, scope: !22308)
!22308 = distinct !DILexicalBlock(scope: !22294, file: !3, line: 3411, column: 6)
!22309 = !DILocation(line: 3411, column: 6, scope: !22308)
!22310 = !DILocation(line: 3411, column: 6, scope: !22294)
!22311 = !DILocation(line: 3412, column: 30, scope: !22308)
!22312 = !DILocation(line: 3412, column: 45, scope: !22308)
!22313 = !DILocation(line: 3412, column: 54, scope: !22308)
!22314 = !DILocation(line: 3412, column: 3, scope: !22308)
!22315 = !DILocation(line: 3414, column: 2, scope: !22316)
!22316 = distinct !DILexicalBlock(scope: !22294, file: !3, line: 3414, column: 2)
!22317 = !DILocation(line: 3414, column: 2, scope: !22318)
!22318 = distinct !DILexicalBlock(scope: !22316, file: !3, line: 3414, column: 2)
!22319 = !DILocation(line: 3415, column: 29, scope: !22320)
!22320 = distinct !DILexicalBlock(scope: !22321, file: !3, line: 3415, column: 7)
!22321 = distinct !DILexicalBlock(scope: !22318, file: !3, line: 3414, column: 58)
!22322 = !DILocation(line: 3415, column: 8, scope: !22320)
!22323 = !DILocation(line: 3415, column: 7, scope: !22321)
!22324 = !DILocation(line: 3416, column: 4, scope: !22320)
!22325 = !DILocation(line: 3417, column: 40, scope: !22321)
!22326 = !DILocation(line: 3417, column: 12, scope: !22321)
!22327 = !DILocation(line: 3417, column: 10, scope: !22321)
!22328 = !DILocation(line: 3418, column: 30, scope: !22321)
!22329 = !DILocation(line: 3418, column: 45, scope: !22321)
!22330 = !DILocation(line: 3418, column: 56, scope: !22321)
!22331 = !DILocation(line: 3418, column: 3, scope: !22321)
!22332 = !DILocation(line: 3419, column: 2, scope: !22321)
!22333 = distinct !{!22333, !22315, !22334}
!22334 = !DILocation(line: 3419, column: 2, scope: !22316)
!22335 = !DILocation(line: 3420, column: 1, scope: !22294)
!22336 = distinct !DISubprogram(name: "mlxsw_reg_slcor_port_remove_pack", scope: !10113, file: !10113, line: 1522, type: !15484, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22337 = !DILocalVariable(name: "payload", arg: 1, scope: !22336, file: !10113, line: 1522, type: !733)
!22338 = !DILocation(line: 1522, column: 59, scope: !22336)
!22339 = !DILocalVariable(name: "local_port", arg: 2, scope: !22336, file: !10113, line: 1523, type: !1552)
!22340 = !DILocation(line: 1523, column: 14, scope: !22336)
!22341 = !DILocalVariable(name: "lag_id", arg: 3, scope: !22336, file: !10113, line: 1523, type: !1193)
!22342 = !DILocation(line: 1523, column: 30, scope: !22336)
!22343 = !DILocation(line: 1525, column: 23, scope: !22336)
!22344 = !DILocation(line: 1525, column: 32, scope: !22336)
!22345 = !DILocation(line: 1525, column: 44, scope: !22336)
!22346 = !DILocation(line: 1525, column: 2, scope: !22336)
!22347 = !DILocation(line: 1527, column: 1, scope: !22336)
!22348 = distinct !DISubprogram(name: "mlxsw_sp_port_stp_set", scope: !3, file: !3, line: 3698, type: !13080, scopeLine: 3700, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22349 = !DILocation(line: 445, column: 72, scope: !12750, inlinedAt: !22350)
!22350 = distinct !DILocation(line: 552, column: 10, scope: !12755, inlinedAt: !22351)
!22351 = distinct !DILocation(line: 3710, column: 12, scope: !22348)
!22352 = !DILocation(line: 446, column: 9, scope: !12750, inlinedAt: !22350)
!22353 = !DILocation(line: 446, column: 23, scope: !12750, inlinedAt: !22350)
!22354 = !DILocation(line: 448, column: 8, scope: !12750, inlinedAt: !22350)
!22355 = !DILocation(line: 318, column: 67, scope: !12768, inlinedAt: !22356)
!22356 = distinct !DILocation(line: 553, column: 20, scope: !12755, inlinedAt: !22351)
!22357 = !DILocation(line: 346, column: 58, scope: !12774, inlinedAt: !22358)
!22358 = distinct !DILocation(line: 547, column: 11, scope: !12755, inlinedAt: !22351)
!22359 = !DILocation(line: 472, column: 28, scope: !12780, inlinedAt: !22360)
!22360 = distinct !DILocation(line: 481, column: 9, scope: !12785, inlinedAt: !22361)
!22361 = distinct !DILocation(line: 545, column: 11, scope: !12787, inlinedAt: !22351)
!22362 = !DILocation(line: 472, column: 40, scope: !12780, inlinedAt: !22360)
!22363 = !DILocation(line: 472, column: 60, scope: !12780, inlinedAt: !22360)
!22364 = !DILocation(line: 478, column: 51, scope: !12785, inlinedAt: !22361)
!22365 = !DILocation(line: 478, column: 63, scope: !12785, inlinedAt: !22361)
!22366 = !DILocation(line: 480, column: 15, scope: !12785, inlinedAt: !22361)
!22367 = !DILocation(line: 538, column: 45, scope: !12757, inlinedAt: !22351)
!22368 = !DILocation(line: 538, column: 57, scope: !12757, inlinedAt: !22351)
!22369 = !DILocation(line: 542, column: 16, scope: !12755, inlinedAt: !22351)
!22370 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !22348, file: !3, line: 3698, type: !10715)
!22371 = !DILocation(line: 3698, column: 56, scope: !22348)
!22372 = !DILocalVariable(name: "enable", arg: 2, scope: !22348, file: !3, line: 3699, type: !696)
!22373 = !DILocation(line: 3699, column: 11, scope: !22348)
!22374 = !DILocalVariable(name: "mlxsw_sp", scope: !22348, file: !3, line: 3701, type: !10721)
!22375 = !DILocation(line: 3701, column: 19, scope: !22348)
!22376 = !DILocation(line: 3701, column: 30, scope: !22348)
!22377 = !DILocation(line: 3701, column: 45, scope: !22348)
!22378 = !DILocalVariable(name: "spms_state", scope: !22348, file: !3, line: 3702, type: !10209)
!22379 = !DILocation(line: 3702, column: 28, scope: !22348)
!22380 = !DILocalVariable(name: "spms_pl", scope: !22348, file: !3, line: 3703, type: !733)
!22381 = !DILocation(line: 3703, column: 8, scope: !22348)
!22382 = !DILocalVariable(name: "vid", scope: !22348, file: !3, line: 3704, type: !1193)
!22383 = !DILocation(line: 3704, column: 6, scope: !22348)
!22384 = !DILocalVariable(name: "err", scope: !22348, file: !3, line: 3705, type: !7)
!22385 = !DILocation(line: 3705, column: 6, scope: !22348)
!22386 = !DILocation(line: 3707, column: 15, scope: !22348)
!22387 = !DILocation(line: 3707, column: 13, scope: !22348)
!22388 = !DILocation(line: 540, column: 27, scope: !12756, inlinedAt: !22351)
!22389 = !DILocation(line: 540, column: 6, scope: !12756, inlinedAt: !22351)
!22390 = !DILocation(line: 540, column: 6, scope: !12757, inlinedAt: !22351)
!22391 = !DILocation(line: 544, column: 7, scope: !12787, inlinedAt: !22351)
!22392 = !DILocation(line: 544, column: 12, scope: !12787, inlinedAt: !22351)
!22393 = !DILocation(line: 544, column: 7, scope: !12755, inlinedAt: !22351)
!22394 = !DILocation(line: 545, column: 25, scope: !12787, inlinedAt: !22351)
!22395 = !DILocation(line: 545, column: 31, scope: !12787, inlinedAt: !22351)
!22396 = !DILocation(line: 480, column: 33, scope: !12785, inlinedAt: !22361)
!22397 = !DILocation(line: 480, column: 23, scope: !12785, inlinedAt: !22361)
!22398 = !DILocation(line: 481, column: 29, scope: !12785, inlinedAt: !22361)
!22399 = !DILocation(line: 481, column: 35, scope: !12785, inlinedAt: !22361)
!22400 = !DILocation(line: 481, column: 42, scope: !12785, inlinedAt: !22361)
!22401 = !DILocation(line: 474, column: 23, scope: !12780, inlinedAt: !22360)
!22402 = !DILocation(line: 474, column: 29, scope: !12780, inlinedAt: !22360)
!22403 = !DILocation(line: 474, column: 36, scope: !12780, inlinedAt: !22360)
!22404 = !DILocation(line: 474, column: 9, scope: !12780, inlinedAt: !22360)
!22405 = !DILocation(line: 545, column: 4, scope: !12787, inlinedAt: !22351)
!22406 = !DILocation(line: 547, column: 25, scope: !12755, inlinedAt: !22351)
!22407 = !DILocation(line: 348, column: 7, scope: !12842, inlinedAt: !22358)
!22408 = !DILocation(line: 348, column: 6, scope: !12774, inlinedAt: !22358)
!22409 = !DILocation(line: 349, column: 3, scope: !12842, inlinedAt: !22358)
!22410 = !DILocation(line: 351, column: 6, scope: !12846, inlinedAt: !22358)
!22411 = !DILocation(line: 351, column: 11, scope: !12846, inlinedAt: !22358)
!22412 = !DILocation(line: 351, column: 6, scope: !12774, inlinedAt: !22358)
!22413 = !DILocation(line: 352, column: 3, scope: !12846, inlinedAt: !22358)
!22414 = !DILocation(line: 354, column: 32, scope: !12851, inlinedAt: !22358)
!22415 = !DILocation(line: 354, column: 37, scope: !12851, inlinedAt: !22358)
!22416 = !DILocation(line: 354, column: 42, scope: !12851, inlinedAt: !22358)
!22417 = !DILocation(line: 354, column: 45, scope: !12851, inlinedAt: !22358)
!22418 = !DILocation(line: 354, column: 50, scope: !12851, inlinedAt: !22358)
!22419 = !DILocation(line: 354, column: 6, scope: !12774, inlinedAt: !22358)
!22420 = !DILocation(line: 355, column: 3, scope: !12851, inlinedAt: !22358)
!22421 = !DILocation(line: 356, column: 32, scope: !12859, inlinedAt: !22358)
!22422 = !DILocation(line: 356, column: 37, scope: !12859, inlinedAt: !22358)
!22423 = !DILocation(line: 356, column: 43, scope: !12859, inlinedAt: !22358)
!22424 = !DILocation(line: 356, column: 46, scope: !12859, inlinedAt: !22358)
!22425 = !DILocation(line: 356, column: 51, scope: !12859, inlinedAt: !22358)
!22426 = !DILocation(line: 356, column: 6, scope: !12774, inlinedAt: !22358)
!22427 = !DILocation(line: 357, column: 3, scope: !12859, inlinedAt: !22358)
!22428 = !DILocation(line: 358, column: 6, scope: !12867, inlinedAt: !22358)
!22429 = !DILocation(line: 358, column: 11, scope: !12867, inlinedAt: !22358)
!22430 = !DILocation(line: 358, column: 6, scope: !12774, inlinedAt: !22358)
!22431 = !DILocation(line: 358, column: 26, scope: !12867, inlinedAt: !22358)
!22432 = !DILocation(line: 359, column: 6, scope: !12872, inlinedAt: !22358)
!22433 = !DILocation(line: 359, column: 11, scope: !12872, inlinedAt: !22358)
!22434 = !DILocation(line: 359, column: 6, scope: !12774, inlinedAt: !22358)
!22435 = !DILocation(line: 359, column: 26, scope: !12872, inlinedAt: !22358)
!22436 = !DILocation(line: 360, column: 6, scope: !12877, inlinedAt: !22358)
!22437 = !DILocation(line: 360, column: 11, scope: !12877, inlinedAt: !22358)
!22438 = !DILocation(line: 360, column: 6, scope: !12774, inlinedAt: !22358)
!22439 = !DILocation(line: 360, column: 26, scope: !12877, inlinedAt: !22358)
!22440 = !DILocation(line: 361, column: 6, scope: !12882, inlinedAt: !22358)
!22441 = !DILocation(line: 361, column: 11, scope: !12882, inlinedAt: !22358)
!22442 = !DILocation(line: 361, column: 6, scope: !12774, inlinedAt: !22358)
!22443 = !DILocation(line: 361, column: 26, scope: !12882, inlinedAt: !22358)
!22444 = !DILocation(line: 362, column: 6, scope: !12887, inlinedAt: !22358)
!22445 = !DILocation(line: 362, column: 11, scope: !12887, inlinedAt: !22358)
!22446 = !DILocation(line: 362, column: 6, scope: !12774, inlinedAt: !22358)
!22447 = !DILocation(line: 362, column: 26, scope: !12887, inlinedAt: !22358)
!22448 = !DILocation(line: 363, column: 6, scope: !12892, inlinedAt: !22358)
!22449 = !DILocation(line: 363, column: 11, scope: !12892, inlinedAt: !22358)
!22450 = !DILocation(line: 363, column: 6, scope: !12774, inlinedAt: !22358)
!22451 = !DILocation(line: 363, column: 26, scope: !12892, inlinedAt: !22358)
!22452 = !DILocation(line: 364, column: 6, scope: !12897, inlinedAt: !22358)
!22453 = !DILocation(line: 364, column: 11, scope: !12897, inlinedAt: !22358)
!22454 = !DILocation(line: 364, column: 6, scope: !12774, inlinedAt: !22358)
!22455 = !DILocation(line: 364, column: 26, scope: !12897, inlinedAt: !22358)
!22456 = !DILocation(line: 365, column: 6, scope: !12902, inlinedAt: !22358)
!22457 = !DILocation(line: 365, column: 11, scope: !12902, inlinedAt: !22358)
!22458 = !DILocation(line: 365, column: 6, scope: !12774, inlinedAt: !22358)
!22459 = !DILocation(line: 365, column: 26, scope: !12902, inlinedAt: !22358)
!22460 = !DILocation(line: 366, column: 6, scope: !12907, inlinedAt: !22358)
!22461 = !DILocation(line: 366, column: 11, scope: !12907, inlinedAt: !22358)
!22462 = !DILocation(line: 366, column: 6, scope: !12774, inlinedAt: !22358)
!22463 = !DILocation(line: 366, column: 26, scope: !12907, inlinedAt: !22358)
!22464 = !DILocation(line: 367, column: 6, scope: !12912, inlinedAt: !22358)
!22465 = !DILocation(line: 367, column: 11, scope: !12912, inlinedAt: !22358)
!22466 = !DILocation(line: 367, column: 6, scope: !12774, inlinedAt: !22358)
!22467 = !DILocation(line: 367, column: 26, scope: !12912, inlinedAt: !22358)
!22468 = !DILocation(line: 368, column: 6, scope: !12917, inlinedAt: !22358)
!22469 = !DILocation(line: 368, column: 11, scope: !12917, inlinedAt: !22358)
!22470 = !DILocation(line: 368, column: 6, scope: !12774, inlinedAt: !22358)
!22471 = !DILocation(line: 368, column: 26, scope: !12917, inlinedAt: !22358)
!22472 = !DILocation(line: 369, column: 6, scope: !12922, inlinedAt: !22358)
!22473 = !DILocation(line: 369, column: 11, scope: !12922, inlinedAt: !22358)
!22474 = !DILocation(line: 369, column: 6, scope: !12774, inlinedAt: !22358)
!22475 = !DILocation(line: 369, column: 26, scope: !12922, inlinedAt: !22358)
!22476 = !DILocation(line: 370, column: 6, scope: !12927, inlinedAt: !22358)
!22477 = !DILocation(line: 370, column: 11, scope: !12927, inlinedAt: !22358)
!22478 = !DILocation(line: 370, column: 6, scope: !12774, inlinedAt: !22358)
!22479 = !DILocation(line: 370, column: 26, scope: !12927, inlinedAt: !22358)
!22480 = !DILocation(line: 371, column: 6, scope: !12932, inlinedAt: !22358)
!22481 = !DILocation(line: 371, column: 11, scope: !12932, inlinedAt: !22358)
!22482 = !DILocation(line: 371, column: 6, scope: !12774, inlinedAt: !22358)
!22483 = !DILocation(line: 371, column: 26, scope: !12932, inlinedAt: !22358)
!22484 = !DILocation(line: 372, column: 6, scope: !12937, inlinedAt: !22358)
!22485 = !DILocation(line: 372, column: 11, scope: !12937, inlinedAt: !22358)
!22486 = !DILocation(line: 372, column: 6, scope: !12774, inlinedAt: !22358)
!22487 = !DILocation(line: 372, column: 26, scope: !12937, inlinedAt: !22358)
!22488 = !DILocation(line: 373, column: 6, scope: !12942, inlinedAt: !22358)
!22489 = !DILocation(line: 373, column: 11, scope: !12942, inlinedAt: !22358)
!22490 = !DILocation(line: 373, column: 6, scope: !12774, inlinedAt: !22358)
!22491 = !DILocation(line: 373, column: 26, scope: !12942, inlinedAt: !22358)
!22492 = !DILocation(line: 374, column: 6, scope: !12947, inlinedAt: !22358)
!22493 = !DILocation(line: 374, column: 11, scope: !12947, inlinedAt: !22358)
!22494 = !DILocation(line: 374, column: 6, scope: !12774, inlinedAt: !22358)
!22495 = !DILocation(line: 374, column: 26, scope: !12947, inlinedAt: !22358)
!22496 = !DILocation(line: 375, column: 6, scope: !12952, inlinedAt: !22358)
!22497 = !DILocation(line: 375, column: 11, scope: !12952, inlinedAt: !22358)
!22498 = !DILocation(line: 375, column: 6, scope: !12774, inlinedAt: !22358)
!22499 = !DILocation(line: 375, column: 27, scope: !12952, inlinedAt: !22358)
!22500 = !DILocation(line: 376, column: 6, scope: !12957, inlinedAt: !22358)
!22501 = !DILocation(line: 376, column: 11, scope: !12957, inlinedAt: !22358)
!22502 = !DILocation(line: 376, column: 6, scope: !12774, inlinedAt: !22358)
!22503 = !DILocation(line: 376, column: 32, scope: !12957, inlinedAt: !22358)
!22504 = !DILocation(line: 377, column: 6, scope: !12962, inlinedAt: !22358)
!22505 = !DILocation(line: 377, column: 11, scope: !12962, inlinedAt: !22358)
!22506 = !DILocation(line: 377, column: 6, scope: !12774, inlinedAt: !22358)
!22507 = !DILocation(line: 377, column: 32, scope: !12962, inlinedAt: !22358)
!22508 = !DILocation(line: 378, column: 6, scope: !12967, inlinedAt: !22358)
!22509 = !DILocation(line: 378, column: 11, scope: !12967, inlinedAt: !22358)
!22510 = !DILocation(line: 378, column: 6, scope: !12774, inlinedAt: !22358)
!22511 = !DILocation(line: 378, column: 32, scope: !12967, inlinedAt: !22358)
!22512 = !DILocation(line: 379, column: 6, scope: !12972, inlinedAt: !22358)
!22513 = !DILocation(line: 379, column: 11, scope: !12972, inlinedAt: !22358)
!22514 = !DILocation(line: 379, column: 6, scope: !12774, inlinedAt: !22358)
!22515 = !DILocation(line: 379, column: 33, scope: !12972, inlinedAt: !22358)
!22516 = !DILocation(line: 380, column: 6, scope: !12977, inlinedAt: !22358)
!22517 = !DILocation(line: 380, column: 11, scope: !12977, inlinedAt: !22358)
!22518 = !DILocation(line: 380, column: 6, scope: !12774, inlinedAt: !22358)
!22519 = !DILocation(line: 380, column: 33, scope: !12977, inlinedAt: !22358)
!22520 = !DILocation(line: 381, column: 6, scope: !12982, inlinedAt: !22358)
!22521 = !DILocation(line: 381, column: 11, scope: !12982, inlinedAt: !22358)
!22522 = !DILocation(line: 381, column: 6, scope: !12774, inlinedAt: !22358)
!22523 = !DILocation(line: 381, column: 33, scope: !12982, inlinedAt: !22358)
!22524 = !DILocation(line: 382, column: 2, scope: !12987, inlinedAt: !22358)
!22525 = !DILocation(line: 382, column: 2, scope: !12991, inlinedAt: !22358)
!22526 = !DILocation(line: 382, column: 2, scope: !12992, inlinedAt: !22358)
!22527 = !DILocation(line: 386, column: 1, scope: !12774, inlinedAt: !22358)
!22528 = !DILocation(line: 547, column: 9, scope: !12755, inlinedAt: !22351)
!22529 = !DILocation(line: 549, column: 8, scope: !12998, inlinedAt: !22351)
!22530 = !DILocation(line: 549, column: 7, scope: !12755, inlinedAt: !22351)
!22531 = !DILocation(line: 550, column: 4, scope: !12998, inlinedAt: !22351)
!22532 = !DILocation(line: 553, column: 33, scope: !12755, inlinedAt: !22351)
!22533 = !DILocation(line: 325, column: 6, scope: !13003, inlinedAt: !22356)
!22534 = !DILocation(line: 325, column: 6, scope: !12768, inlinedAt: !22356)
!22535 = !DILocation(line: 326, column: 3, scope: !13003, inlinedAt: !22356)
!22536 = !DILocation(line: 332, column: 9, scope: !12768, inlinedAt: !22356)
!22537 = !DILocation(line: 332, column: 15, scope: !12768, inlinedAt: !22356)
!22538 = !DILocation(line: 332, column: 2, scope: !12768, inlinedAt: !22356)
!22539 = !DILocation(line: 336, column: 1, scope: !12768, inlinedAt: !22356)
!22540 = !DILocation(line: 553, column: 5, scope: !12755, inlinedAt: !22351)
!22541 = !DILocation(line: 553, column: 41, scope: !12755, inlinedAt: !22351)
!22542 = !DILocation(line: 554, column: 5, scope: !12755, inlinedAt: !22351)
!22543 = !DILocation(line: 554, column: 12, scope: !12755, inlinedAt: !22351)
!22544 = !DILocation(line: 448, column: 31, scope: !12750, inlinedAt: !22350)
!22545 = !DILocation(line: 448, column: 34, scope: !12750, inlinedAt: !22350)
!22546 = !DILocation(line: 448, column: 14, scope: !12750, inlinedAt: !22350)
!22547 = !DILocation(line: 450, column: 22, scope: !12750, inlinedAt: !22350)
!22548 = !DILocation(line: 450, column: 25, scope: !12750, inlinedAt: !22350)
!22549 = !DILocation(line: 450, column: 30, scope: !12750, inlinedAt: !22350)
!22550 = !DILocation(line: 450, column: 36, scope: !12750, inlinedAt: !22350)
!22551 = !DILocation(line: 450, column: 8, scope: !12750, inlinedAt: !22350)
!22552 = !DILocation(line: 450, column: 6, scope: !12750, inlinedAt: !22350)
!22553 = !DILocation(line: 451, column: 9, scope: !12750, inlinedAt: !22350)
!22554 = !DILocation(line: 552, column: 3, scope: !12755, inlinedAt: !22351)
!22555 = !DILocation(line: 557, column: 19, scope: !12757, inlinedAt: !22351)
!22556 = !DILocation(line: 557, column: 25, scope: !12757, inlinedAt: !22351)
!22557 = !DILocation(line: 557, column: 9, scope: !12757, inlinedAt: !22351)
!22558 = !DILocation(line: 557, column: 2, scope: !12757, inlinedAt: !22351)
!22559 = !DILocation(line: 558, column: 1, scope: !12757, inlinedAt: !22351)
!22560 = !DILocation(line: 3710, column: 10, scope: !22348)
!22561 = !DILocation(line: 3711, column: 7, scope: !22562)
!22562 = distinct !DILexicalBlock(scope: !22348, file: !3, line: 3711, column: 6)
!22563 = !DILocation(line: 3711, column: 6, scope: !22348)
!22564 = !DILocation(line: 3712, column: 3, scope: !22562)
!22565 = !DILocation(line: 3713, column: 22, scope: !22348)
!22566 = !DILocation(line: 3713, column: 31, scope: !22348)
!22567 = !DILocation(line: 3713, column: 46, scope: !22348)
!22568 = !DILocation(line: 3713, column: 2, scope: !22348)
!22569 = !DILocation(line: 3715, column: 11, scope: !22570)
!22570 = distinct !DILexicalBlock(scope: !22348, file: !3, line: 3715, column: 2)
!22571 = !DILocation(line: 3715, column: 7, scope: !22570)
!22572 = !DILocation(line: 3715, column: 16, scope: !22573)
!22573 = distinct !DILexicalBlock(scope: !22570, file: !3, line: 3715, column: 2)
!22574 = !DILocation(line: 3715, column: 20, scope: !22573)
!22575 = !DILocation(line: 3715, column: 2, scope: !22570)
!22576 = !DILocation(line: 3716, column: 27, scope: !22573)
!22577 = !DILocation(line: 3716, column: 36, scope: !22573)
!22578 = !DILocation(line: 3716, column: 41, scope: !22573)
!22579 = !DILocation(line: 3716, column: 3, scope: !22573)
!22580 = !DILocation(line: 3715, column: 37, scope: !22573)
!22581 = !DILocation(line: 3715, column: 2, scope: !22573)
!22582 = distinct !{!22582, !22575, !22583}
!22583 = !DILocation(line: 3716, column: 51, scope: !22570)
!22584 = !DILocation(line: 3718, column: 24, scope: !22348)
!22585 = !DILocation(line: 3718, column: 34, scope: !22348)
!22586 = !DILocation(line: 3718, column: 57, scope: !22348)
!22587 = !DILocation(line: 3718, column: 8, scope: !22348)
!22588 = !DILocation(line: 3718, column: 6, scope: !22348)
!22589 = !DILocation(line: 3719, column: 8, scope: !22348)
!22590 = !DILocation(line: 3719, column: 2, scope: !22348)
!22591 = !DILocation(line: 3720, column: 9, scope: !22348)
!22592 = !DILocation(line: 3720, column: 2, scope: !22348)
!22593 = !DILocation(line: 3721, column: 1, scope: !22348)
!22594 = distinct !DISubprogram(name: "mlxsw_sp_port_lag_changed", scope: !3, file: !3, line: 3689, type: !22595, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22595 = !DISubroutineType(types: !22596)
!22596 = !{!7, !10715, !22597}
!22597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22598, size: 64)
!22598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_lag_lower_state_info", file: !6, line: 2611, size: 8, elements: !22599)
!22599 = !{!22600, !22601}
!22600 = !DIDerivedType(tag: DW_TAG_member, name: "link_up", scope: !22598, file: !6, line: 2612, baseType: !1552, size: 1, flags: DIFlagBitField, extraData: i64 0)
!22601 = !DIDerivedType(tag: DW_TAG_member, name: "tx_enabled", scope: !22598, file: !6, line: 2613, baseType: !1552, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!22602 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !22594, file: !3, line: 3689, type: !10715)
!22603 = !DILocation(line: 3689, column: 60, scope: !22594)
!22604 = !DILocalVariable(name: "info", arg: 2, scope: !22594, file: !3, line: 3690, type: !22597)
!22605 = !DILocation(line: 3690, column: 46, scope: !22594)
!22606 = !DILocation(line: 3692, column: 6, scope: !22607)
!22607 = distinct !DILexicalBlock(scope: !22594, file: !3, line: 3692, column: 6)
!22608 = !DILocation(line: 3692, column: 12, scope: !22607)
!22609 = !DILocation(line: 3692, column: 6, scope: !22594)
!22610 = !DILocation(line: 3693, column: 44, scope: !22607)
!22611 = !DILocation(line: 3693, column: 10, scope: !22607)
!22612 = !DILocation(line: 3693, column: 3, scope: !22607)
!22613 = !DILocation(line: 3695, column: 45, scope: !22607)
!22614 = !DILocation(line: 3695, column: 10, scope: !22607)
!22615 = !DILocation(line: 3695, column: 3, scope: !22607)
!22616 = !DILocation(line: 3696, column: 1, scope: !22594)
!22617 = distinct !DISubprogram(name: "mlxsw_sp_port_lag_col_dist_enable", scope: !3, file: !3, line: 3647, type: !21543, scopeLine: 3648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22618 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !22617, file: !3, line: 3647, type: !10715)
!22619 = !DILocation(line: 3647, column: 57, scope: !22617)
!22620 = !DILocalVariable(name: "err", scope: !22617, file: !3, line: 3649, type: !7)
!22621 = !DILocation(line: 3649, column: 6, scope: !22617)
!22622 = !DILocation(line: 3651, column: 37, scope: !22617)
!22623 = !DILocation(line: 3652, column: 9, scope: !22617)
!22624 = !DILocation(line: 3652, column: 24, scope: !22617)
!22625 = !DILocation(line: 3651, column: 8, scope: !22617)
!22626 = !DILocation(line: 3651, column: 6, scope: !22617)
!22627 = !DILocation(line: 3653, column: 6, scope: !22628)
!22628 = distinct !DILexicalBlock(scope: !22617, file: !3, line: 3653, column: 6)
!22629 = !DILocation(line: 3653, column: 6, scope: !22617)
!22630 = !DILocation(line: 3654, column: 10, scope: !22628)
!22631 = !DILocation(line: 3654, column: 3, scope: !22628)
!22632 = !DILocation(line: 3656, column: 35, scope: !22617)
!22633 = !DILocation(line: 3656, column: 50, scope: !22617)
!22634 = !DILocation(line: 3656, column: 65, scope: !22617)
!22635 = !DILocation(line: 3656, column: 8, scope: !22617)
!22636 = !DILocation(line: 3656, column: 6, scope: !22617)
!22637 = !DILocation(line: 3657, column: 6, scope: !22638)
!22638 = distinct !DILexicalBlock(scope: !22617, file: !3, line: 3657, column: 6)
!22639 = !DILocation(line: 3657, column: 6, scope: !22617)
!22640 = !DILocation(line: 3658, column: 3, scope: !22638)
!22641 = !DILocation(line: 3660, column: 2, scope: !22617)
!22642 = !DILabel(scope: !22617, name: "err_dist_port_add", file: !3, line: 3662)
!22643 = !DILocation(line: 3662, column: 1, scope: !22617)
!22644 = !DILocation(line: 3663, column: 32, scope: !22617)
!22645 = !DILocation(line: 3663, column: 47, scope: !22617)
!22646 = !DILocation(line: 3663, column: 62, scope: !22617)
!22647 = !DILocation(line: 3663, column: 2, scope: !22617)
!22648 = !DILocation(line: 3664, column: 9, scope: !22617)
!22649 = !DILocation(line: 3664, column: 2, scope: !22617)
!22650 = !DILocation(line: 3665, column: 1, scope: !22617)
!22651 = distinct !DISubprogram(name: "mlxsw_sp_lag_col_port_enable", scope: !3, file: !3, line: 3460, type: !13471, scopeLine: 3462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22652 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !22651, file: !3, line: 3460, type: !10715)
!22653 = !DILocation(line: 3460, column: 63, scope: !22651)
!22654 = !DILocalVariable(name: "lag_id", arg: 2, scope: !22651, file: !3, line: 3461, type: !1193)
!22655 = !DILocation(line: 3461, column: 10, scope: !22651)
!22656 = !DILocalVariable(name: "mlxsw_sp", scope: !22651, file: !3, line: 3463, type: !10721)
!22657 = !DILocation(line: 3463, column: 19, scope: !22651)
!22658 = !DILocation(line: 3463, column: 30, scope: !22651)
!22659 = !DILocation(line: 3463, column: 45, scope: !22651)
!22660 = !DILocalVariable(name: "slcor_pl", scope: !22651, file: !3, line: 3464, type: !428)
!22661 = !DILocation(line: 3464, column: 7, scope: !22651)
!22662 = !DILocation(line: 3466, column: 34, scope: !22651)
!22663 = !DILocation(line: 3466, column: 44, scope: !22651)
!22664 = !DILocation(line: 3466, column: 59, scope: !22651)
!22665 = !DILocation(line: 3467, column: 6, scope: !22651)
!22666 = !DILocation(line: 3466, column: 2, scope: !22651)
!22667 = !DILocation(line: 3468, column: 25, scope: !22651)
!22668 = !DILocation(line: 3468, column: 35, scope: !22651)
!22669 = !DILocation(line: 3468, column: 59, scope: !22651)
!22670 = !DILocation(line: 3468, column: 9, scope: !22651)
!22671 = !DILocation(line: 3468, column: 2, scope: !22651)
!22672 = distinct !DISubprogram(name: "mlxsw_reg_slcor_col_enable_pack", scope: !10113, file: !10113, line: 1529, type: !15484, scopeLine: 1531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22673 = !DILocalVariable(name: "payload", arg: 1, scope: !22672, file: !10113, line: 1529, type: !733)
!22674 = !DILocation(line: 1529, column: 58, scope: !22672)
!22675 = !DILocalVariable(name: "local_port", arg: 2, scope: !22672, file: !10113, line: 1530, type: !1552)
!22676 = !DILocation(line: 1530, column: 13, scope: !22672)
!22677 = !DILocalVariable(name: "lag_id", arg: 3, scope: !22672, file: !10113, line: 1530, type: !1193)
!22678 = !DILocation(line: 1530, column: 29, scope: !22672)
!22679 = !DILocation(line: 1532, column: 23, scope: !22672)
!22680 = !DILocation(line: 1532, column: 32, scope: !22672)
!22681 = !DILocation(line: 1532, column: 44, scope: !22672)
!22682 = !DILocation(line: 1532, column: 2, scope: !22672)
!22683 = !DILocation(line: 1534, column: 1, scope: !22672)
!22684 = distinct !DISubprogram(name: "netif_is_bond_master", scope: !6, file: !6, line: 4886, type: !14728, scopeLine: 4887, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22685 = !DILocalVariable(name: "dev", arg: 1, scope: !22684, file: !6, line: 4886, type: !3023)
!22686 = !DILocation(line: 4886, column: 66, scope: !22684)
!22687 = !DILocation(line: 4888, column: 9, scope: !22684)
!22688 = !DILocation(line: 4888, column: 14, scope: !22684)
!22689 = !DILocation(line: 4888, column: 20, scope: !22684)
!22690 = !DILocation(line: 4888, column: 33, scope: !22684)
!22691 = !DILocation(line: 4888, column: 36, scope: !22684)
!22692 = !DILocation(line: 4888, column: 41, scope: !22684)
!22693 = !DILocation(line: 4888, column: 52, scope: !22684)
!22694 = !DILocation(line: 0, scope: !22684)
!22695 = !DILocation(line: 4888, column: 2, scope: !22684)
!22696 = distinct !DISubprogram(name: "netif_is_team_master", scope: !6, file: !6, line: 4941, type: !14728, scopeLine: 4942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22697 = !DILocalVariable(name: "dev", arg: 1, scope: !22696, file: !6, line: 4941, type: !3023)
!22698 = !DILocation(line: 4941, column: 66, scope: !22696)
!22699 = !DILocation(line: 4943, column: 9, scope: !22696)
!22700 = !DILocation(line: 4943, column: 14, scope: !22696)
!22701 = !DILocation(line: 4943, column: 25, scope: !22696)
!22702 = !DILocation(line: 4943, column: 2, scope: !22696)
!22703 = !DILocalVariable(name: "vlan_dev", arg: 1, scope: !12379, file: !3, line: 4007, type: !451)
!22704 = !DILocation(line: 4007, column: 66, scope: !12379)
!22705 = !DILocalVariable(name: "dev", arg: 2, scope: !12379, file: !3, line: 4008, type: !451)
!22706 = !DILocation(line: 4008, column: 31, scope: !12379)
!22707 = !DILocalVariable(name: "event", arg: 3, scope: !12379, file: !3, line: 4009, type: !473)
!22708 = !DILocation(line: 4009, column: 26, scope: !12379)
!22709 = !DILocalVariable(name: "ptr", arg: 4, scope: !12379, file: !3, line: 4009, type: !726)
!22710 = !DILocation(line: 4009, column: 39, scope: !12379)
!22711 = !DILocalVariable(name: "vid", arg: 5, scope: !12379, file: !3, line: 4010, type: !1193)
!22712 = !DILocation(line: 4010, column: 16, scope: !12379)
!22713 = !DILocalVariable(name: "mlxsw_sp_port", scope: !12379, file: !3, line: 4012, type: !10715)
!22714 = !DILocation(line: 4012, column: 24, scope: !12379)
!22715 = !DILocation(line: 4012, column: 52, scope: !12379)
!22716 = !DILocation(line: 4012, column: 40, scope: !12379)
!22717 = !DILocalVariable(name: "mlxsw_sp", scope: !12379, file: !3, line: 4013, type: !10721)
!22718 = !DILocation(line: 4013, column: 19, scope: !12379)
!22719 = !DILocation(line: 4013, column: 30, scope: !12379)
!22720 = !DILocation(line: 4013, column: 45, scope: !12379)
!22721 = !DILocalVariable(name: "info", scope: !12379, file: !3, line: 4014, type: !11525)
!22722 = !DILocation(line: 4014, column: 43, scope: !12379)
!22723 = !DILocation(line: 4014, column: 50, scope: !12379)
!22724 = !DILocalVariable(name: "extack", scope: !12379, file: !3, line: 4015, type: !2633)
!22725 = !DILocation(line: 4015, column: 26, scope: !12379)
!22726 = !DILocalVariable(name: "upper_dev", scope: !12379, file: !3, line: 4016, type: !451)
!22727 = !DILocation(line: 4016, column: 21, scope: !12379)
!22728 = !DILocalVariable(name: "err", scope: !12379, file: !3, line: 4017, type: !7)
!22729 = !DILocation(line: 4017, column: 6, scope: !12379)
!22730 = !DILocation(line: 4019, column: 43, scope: !12379)
!22731 = !DILocation(line: 4019, column: 49, scope: !12379)
!22732 = !DILocation(line: 4019, column: 11, scope: !12379)
!22733 = !DILocation(line: 4019, column: 9, scope: !12379)
!22734 = !DILocation(line: 4021, column: 10, scope: !12379)
!22735 = !DILocation(line: 4021, column: 2, scope: !12379)
!22736 = !DILocation(line: 4023, column: 15, scope: !22737)
!22737 = distinct !DILexicalBlock(scope: !12379, file: !3, line: 4021, column: 17)
!22738 = !DILocation(line: 4023, column: 21, scope: !22737)
!22739 = !DILocation(line: 4023, column: 13, scope: !22737)
!22740 = !DILocation(line: 4024, column: 31, scope: !22741)
!22741 = distinct !DILexicalBlock(scope: !22737, file: !3, line: 4024, column: 7)
!22742 = !DILocation(line: 4024, column: 8, scope: !22741)
!22743 = !DILocation(line: 4024, column: 42, scope: !22741)
!22744 = !DILocation(line: 4025, column: 25, scope: !22741)
!22745 = !DILocation(line: 4025, column: 8, scope: !22741)
!22746 = !DILocation(line: 4024, column: 7, scope: !22737)
!22747 = !DILocation(line: 4026, column: 4, scope: !22748)
!22748 = distinct !DILexicalBlock(scope: !22741, file: !3, line: 4025, column: 37)
!22749 = !DILocalVariable(name: "__extack", scope: !22750, file: !3, line: 4026, type: !2633)
!22750 = distinct !DILexicalBlock(scope: !22748, file: !3, line: 4026, column: 4)
!22751 = !DILocation(line: 4026, column: 4, scope: !22750)
!22752 = !DILocation(line: 4026, column: 4, scope: !22753)
!22753 = distinct !DILexicalBlock(scope: !22750, file: !3, line: 4026, column: 4)
!22754 = !DILocation(line: 4027, column: 4, scope: !22748)
!22755 = !DILocation(line: 4029, column: 8, scope: !22756)
!22756 = distinct !DILexicalBlock(scope: !22737, file: !3, line: 4029, column: 7)
!22757 = !DILocation(line: 4029, column: 14, scope: !22756)
!22758 = !DILocation(line: 4029, column: 7, scope: !22737)
!22759 = !DILocation(line: 4030, column: 4, scope: !22756)
!22760 = !DILocation(line: 4031, column: 30, scope: !22761)
!22761 = distinct !DILexicalBlock(scope: !22737, file: !3, line: 4031, column: 7)
!22762 = !DILocation(line: 4031, column: 7, scope: !22761)
!22763 = !DILocation(line: 4031, column: 41, scope: !22761)
!22764 = !DILocation(line: 4032, column: 44, scope: !22761)
!22765 = !DILocation(line: 4032, column: 54, scope: !22761)
!22766 = !DILocation(line: 4032, column: 8, scope: !22761)
!22767 = !DILocation(line: 4032, column: 65, scope: !22761)
!22768 = !DILocation(line: 4033, column: 33, scope: !22761)
!22769 = !DILocation(line: 4033, column: 7, scope: !22761)
!22770 = !DILocation(line: 4033, column: 44, scope: !22761)
!22771 = !DILocation(line: 4034, column: 39, scope: !22761)
!22772 = !DILocation(line: 4034, column: 50, scope: !22761)
!22773 = !DILocation(line: 4034, column: 8, scope: !22761)
!22774 = !DILocation(line: 4031, column: 7, scope: !22737)
!22775 = !DILocation(line: 4035, column: 4, scope: !22761)
!22776 = !DILocation(line: 4036, column: 32, scope: !22777)
!22777 = distinct !DILexicalBlock(scope: !22737, file: !3, line: 4036, column: 7)
!22778 = !DILocation(line: 4036, column: 7, scope: !22777)
!22779 = !DILocation(line: 4036, column: 43, scope: !22777)
!22780 = !DILocation(line: 4037, column: 32, scope: !22777)
!22781 = !DILocation(line: 4037, column: 9, scope: !22777)
!22782 = !DILocation(line: 4037, column: 43, scope: !22777)
!22783 = !DILocation(line: 4038, column: 45, scope: !22777)
!22784 = !DILocation(line: 4039, column: 10, scope: !22777)
!22785 = !DILocation(line: 4038, column: 9, scope: !22777)
!22786 = !DILocation(line: 4036, column: 7, scope: !22737)
!22787 = !DILocation(line: 4040, column: 4, scope: !22788)
!22788 = distinct !DILexicalBlock(scope: !22777, file: !3, line: 4039, column: 23)
!22789 = !DILocalVariable(name: "__extack", scope: !22790, file: !3, line: 4040, type: !2633)
!22790 = distinct !DILexicalBlock(scope: !22788, file: !3, line: 4040, column: 4)
!22791 = !DILocation(line: 4040, column: 4, scope: !22790)
!22792 = !DILocation(line: 4040, column: 4, scope: !22793)
!22793 = distinct !DILexicalBlock(scope: !22790, file: !3, line: 4040, column: 4)
!22794 = !DILocation(line: 4041, column: 4, scope: !22788)
!22795 = !DILocation(line: 4043, column: 24, scope: !22796)
!22796 = distinct !DILexicalBlock(scope: !22737, file: !3, line: 4043, column: 7)
!22797 = !DILocation(line: 4043, column: 7, scope: !22796)
!22798 = !DILocation(line: 4043, column: 35, scope: !22796)
!22799 = !DILocation(line: 4044, column: 28, scope: !22796)
!22800 = !DILocation(line: 4044, column: 38, scope: !22796)
!22801 = !DILocation(line: 4044, column: 8, scope: !22796)
!22802 = !DILocation(line: 4043, column: 7, scope: !22737)
!22803 = !DILocation(line: 4045, column: 4, scope: !22804)
!22804 = distinct !DILexicalBlock(scope: !22796, file: !3, line: 4044, column: 49)
!22805 = !DILocalVariable(name: "__extack", scope: !22806, file: !3, line: 4045, type: !2633)
!22806 = distinct !DILexicalBlock(scope: !22804, file: !3, line: 4045, column: 4)
!22807 = !DILocation(line: 4045, column: 4, scope: !22806)
!22808 = !DILocation(line: 4045, column: 4, scope: !22809)
!22809 = distinct !DILexicalBlock(scope: !22806, file: !3, line: 4045, column: 4)
!22810 = !DILocation(line: 4046, column: 4, scope: !22804)
!22811 = !DILocation(line: 4048, column: 3, scope: !22737)
!22812 = !DILocation(line: 4050, column: 15, scope: !22737)
!22813 = !DILocation(line: 4050, column: 21, scope: !22737)
!22814 = !DILocation(line: 4050, column: 13, scope: !22737)
!22815 = !DILocation(line: 4051, column: 30, scope: !22816)
!22816 = distinct !DILexicalBlock(scope: !22737, file: !3, line: 4051, column: 7)
!22817 = !DILocation(line: 4051, column: 7, scope: !22816)
!22818 = !DILocation(line: 4051, column: 7, scope: !22737)
!22819 = !DILocation(line: 4052, column: 8, scope: !22820)
!22820 = distinct !DILexicalBlock(scope: !22821, file: !3, line: 4052, column: 8)
!22821 = distinct !DILexicalBlock(scope: !22816, file: !3, line: 4051, column: 42)
!22822 = !DILocation(line: 4052, column: 14, scope: !22820)
!22823 = !DILocation(line: 4052, column: 8, scope: !22821)
!22824 = !DILocation(line: 4053, column: 37, scope: !22820)
!22825 = !DILocation(line: 4054, column: 9, scope: !22820)
!22826 = !DILocation(line: 4055, column: 9, scope: !22820)
!22827 = !DILocation(line: 4056, column: 9, scope: !22820)
!22828 = !DILocation(line: 4053, column: 11, scope: !22820)
!22829 = !DILocation(line: 4053, column: 9, scope: !22820)
!22830 = !DILocation(line: 4053, column: 5, scope: !22820)
!22831 = !DILocation(line: 4058, column: 32, scope: !22820)
!22832 = !DILocation(line: 4059, column: 11, scope: !22820)
!22833 = !DILocation(line: 4060, column: 11, scope: !22820)
!22834 = !DILocation(line: 4058, column: 5, scope: !22820)
!22835 = !DILocation(line: 4061, column: 3, scope: !22821)
!22836 = !DILocation(line: 4061, column: 31, scope: !22837)
!22837 = distinct !DILexicalBlock(scope: !22816, file: !3, line: 4061, column: 14)
!22838 = !DILocation(line: 4061, column: 14, scope: !22837)
!22839 = !DILocation(line: 4061, column: 14, scope: !22816)
!22840 = !DILocation(line: 4062, column: 9, scope: !22841)
!22841 = distinct !DILexicalBlock(scope: !22842, file: !3, line: 4062, column: 8)
!22842 = distinct !DILexicalBlock(scope: !22837, file: !3, line: 4061, column: 43)
!22843 = !DILocation(line: 4062, column: 15, scope: !22841)
!22844 = !DILocation(line: 4062, column: 8, scope: !22842)
!22845 = !DILocation(line: 4063, column: 30, scope: !22841)
!22846 = !DILocation(line: 4063, column: 40, scope: !22841)
!22847 = !DILocation(line: 4063, column: 5, scope: !22841)
!22848 = !DILocation(line: 4064, column: 3, scope: !22842)
!22849 = !DILocation(line: 4065, column: 8, scope: !22850)
!22850 = distinct !DILexicalBlock(scope: !22837, file: !3, line: 4064, column: 10)
!22851 = !DILocalVariable(name: "__ret_warn_on", scope: !22852, file: !3, line: 4066, type: !7)
!22852 = distinct !DILexicalBlock(scope: !22850, file: !3, line: 4066, column: 4)
!22853 = !DILocation(line: 4066, column: 4, scope: !22852)
!22854 = !DILocation(line: 4066, column: 4, scope: !22855)
!22855 = distinct !DILexicalBlock(scope: !22852, file: !3, line: 4066, column: 4)
!22856 = !DILocation(line: 4066, column: 4, scope: !22857)
!22857 = distinct !DILexicalBlock(scope: !22855, file: !3, line: 4066, column: 4)
!22858 = !DILocation(line: 4066, column: 4, scope: !22859)
!22859 = distinct !DILexicalBlock(scope: !22857, file: !3, line: 4066, column: 4)
!22860 = !DILocation(line: 4066, column: 4, scope: !22861)
!22861 = distinct !DILexicalBlock(scope: !22857, file: !3, line: 4066, column: 4)
!22862 = !{i32 -2134306710, i32 -2134306681, i32 -2134306635, i32 -2134306577, i32 -2134306523, i32 -2134306469, i32 -2134306414, i32 -2134306383}
!22863 = !DILocation(line: 4066, column: 4, scope: !22864)
!22864 = distinct !DILexicalBlock(scope: !22857, file: !3, line: 4066, column: 4)
!22865 = !{i32 -2134305954, i32 -2134305947, i32 -2134305895, i32 -2134305864, i32 -2134305834}
!22866 = !DILocation(line: 4066, column: 4, scope: !22867)
!22867 = distinct !DILexicalBlock(scope: !22857, file: !3, line: 4066, column: 4)
!22868 = !DILocation(line: 4068, column: 3, scope: !22737)
!22869 = !DILocation(line: 4071, column: 9, scope: !12379)
!22870 = !DILocation(line: 4071, column: 2, scope: !12379)
!22871 = !DILocation(line: 4072, column: 1, scope: !12379)
!22872 = distinct !DISubprogram(name: "mlxsw_sp_netdevice_lag_port_vlan_event", scope: !3, file: !3, line: 4074, type: !12380, scopeLine: 4078, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!22873 = !DILocalVariable(name: "vlan_dev", arg: 1, scope: !22872, file: !3, line: 4074, type: !451)
!22874 = !DILocation(line: 4074, column: 70, scope: !22872)
!22875 = !DILocalVariable(name: "lag_dev", arg: 2, scope: !22872, file: !3, line: 4075, type: !451)
!22876 = !DILocation(line: 4075, column: 28, scope: !22872)
!22877 = !DILocalVariable(name: "event", arg: 3, scope: !22872, file: !3, line: 4076, type: !473)
!22878 = !DILocation(line: 4076, column: 23, scope: !22872)
!22879 = !DILocalVariable(name: "ptr", arg: 4, scope: !22872, file: !3, line: 4077, type: !726)
!22880 = !DILocation(line: 4077, column: 15, scope: !22872)
!22881 = !DILocalVariable(name: "vid", arg: 5, scope: !22872, file: !3, line: 4077, type: !1193)
!22882 = !DILocation(line: 4077, column: 24, scope: !22872)
!22883 = !DILocalVariable(name: "dev", scope: !22872, file: !3, line: 4079, type: !451)
!22884 = !DILocation(line: 4079, column: 21, scope: !22872)
!22885 = !DILocalVariable(name: "iter", scope: !22872, file: !3, line: 4080, type: !448)
!22886 = !DILocation(line: 4080, column: 20, scope: !22872)
!22887 = !DILocalVariable(name: "ret", scope: !22872, file: !3, line: 4081, type: !7)
!22888 = !DILocation(line: 4081, column: 6, scope: !22872)
!22889 = !DILocation(line: 4083, column: 2, scope: !22890)
!22890 = distinct !DILexicalBlock(scope: !22872, file: !3, line: 4083, column: 2)
!22891 = !DILocation(line: 4083, column: 2, scope: !22892)
!22892 = distinct !DILexicalBlock(scope: !22890, file: !3, line: 4083, column: 2)
!22893 = !DILocation(line: 4084, column: 31, scope: !22894)
!22894 = distinct !DILexicalBlock(scope: !22895, file: !3, line: 4084, column: 7)
!22895 = distinct !DILexicalBlock(scope: !22892, file: !3, line: 4083, column: 48)
!22896 = !DILocation(line: 4084, column: 7, scope: !22894)
!22897 = !DILocation(line: 4084, column: 7, scope: !22895)
!22898 = !DILocation(line: 4085, column: 45, scope: !22899)
!22899 = distinct !DILexicalBlock(scope: !22894, file: !3, line: 4084, column: 37)
!22900 = !DILocation(line: 4085, column: 55, scope: !22899)
!22901 = !DILocation(line: 4086, column: 10, scope: !22899)
!22902 = !DILocation(line: 4086, column: 17, scope: !22899)
!22903 = !DILocation(line: 4087, column: 10, scope: !22899)
!22904 = !DILocation(line: 4085, column: 10, scope: !22899)
!22905 = !DILocation(line: 4085, column: 8, scope: !22899)
!22906 = !DILocation(line: 4088, column: 8, scope: !22907)
!22907 = distinct !DILexicalBlock(scope: !22899, file: !3, line: 4088, column: 8)
!22908 = !DILocation(line: 4088, column: 8, scope: !22899)
!22909 = !DILocation(line: 4089, column: 12, scope: !22907)
!22910 = !DILocation(line: 4089, column: 5, scope: !22907)
!22911 = !DILocation(line: 4090, column: 3, scope: !22899)
!22912 = !DILocation(line: 4091, column: 2, scope: !22895)
!22913 = distinct !{!22913, !22889, !22914}
!22914 = !DILocation(line: 4091, column: 2, scope: !22890)
!22915 = !DILocation(line: 4093, column: 2, scope: !22872)
!22916 = !DILocation(line: 4094, column: 1, scope: !22872)
!22917 = !DILocalVariable(name: "vlan_dev", arg: 1, scope: !12388, file: !3, line: 4096, type: !451)
!22918 = !DILocation(line: 4096, column: 68, scope: !12388)
!22919 = !DILocalVariable(name: "br_dev", arg: 2, scope: !12388, file: !3, line: 4097, type: !451)
!22920 = !DILocation(line: 4097, column: 26, scope: !12388)
!22921 = !DILocalVariable(name: "event", arg: 3, scope: !12388, file: !3, line: 4098, type: !473)
!22922 = !DILocation(line: 4098, column: 21, scope: !12388)
!22923 = !DILocalVariable(name: "ptr", arg: 4, scope: !12388, file: !3, line: 4098, type: !726)
!22924 = !DILocation(line: 4098, column: 34, scope: !12388)
!22925 = !DILocalVariable(name: "vid", arg: 5, scope: !12388, file: !3, line: 4099, type: !1193)
!22926 = !DILocation(line: 4099, column: 11, scope: !12388)
!22927 = !DILocalVariable(name: "mlxsw_sp", scope: !12388, file: !3, line: 4101, type: !10721)
!22928 = !DILocation(line: 4101, column: 19, scope: !12388)
!22929 = !DILocation(line: 4101, column: 49, scope: !12388)
!22930 = !DILocation(line: 4101, column: 30, scope: !12388)
!22931 = !DILocalVariable(name: "info", scope: !12388, file: !3, line: 4102, type: !11525)
!22932 = !DILocation(line: 4102, column: 43, scope: !12388)
!22933 = !DILocation(line: 4102, column: 50, scope: !12388)
!22934 = !DILocalVariable(name: "extack", scope: !12388, file: !3, line: 4103, type: !2633)
!22935 = !DILocation(line: 4103, column: 26, scope: !12388)
!22936 = !DILocalVariable(name: "upper_dev", scope: !12388, file: !3, line: 4104, type: !451)
!22937 = !DILocation(line: 4104, column: 21, scope: !12388)
!22938 = !DILocation(line: 4106, column: 7, scope: !22939)
!22939 = distinct !DILexicalBlock(scope: !12388, file: !3, line: 4106, column: 6)
!22940 = !DILocation(line: 4106, column: 6, scope: !12388)
!22941 = !DILocation(line: 4107, column: 3, scope: !22939)
!22942 = !DILocation(line: 4109, column: 43, scope: !12388)
!22943 = !DILocation(line: 4109, column: 49, scope: !12388)
!22944 = !DILocation(line: 4109, column: 11, scope: !12388)
!22945 = !DILocation(line: 4109, column: 9, scope: !12388)
!22946 = !DILocation(line: 4111, column: 10, scope: !12388)
!22947 = !DILocation(line: 4111, column: 2, scope: !12388)
!22948 = !DILocation(line: 4113, column: 15, scope: !22949)
!22949 = distinct !DILexicalBlock(scope: !12388, file: !3, line: 4111, column: 17)
!22950 = !DILocation(line: 4113, column: 21, scope: !22949)
!22951 = !DILocation(line: 4113, column: 13, scope: !22949)
!22952 = !DILocation(line: 4114, column: 25, scope: !22953)
!22953 = distinct !DILexicalBlock(scope: !22949, file: !3, line: 4114, column: 7)
!22954 = !DILocation(line: 4114, column: 8, scope: !22953)
!22955 = !DILocation(line: 4114, column: 7, scope: !22949)
!22956 = !DILocation(line: 4115, column: 4, scope: !22957)
!22957 = distinct !DILexicalBlock(scope: !22953, file: !3, line: 4114, column: 37)
!22958 = !DILocalVariable(name: "__extack", scope: !22959, file: !3, line: 4115, type: !2633)
!22959 = distinct !DILexicalBlock(scope: !22957, file: !3, line: 4115, column: 4)
!22960 = !DILocation(line: 4115, column: 4, scope: !22959)
!22961 = !DILocation(line: 4115, column: 4, scope: !22962)
!22962 = distinct !DILexicalBlock(scope: !22959, file: !3, line: 4115, column: 4)
!22963 = !DILocation(line: 4116, column: 4, scope: !22957)
!22964 = !DILocation(line: 4118, column: 8, scope: !22965)
!22965 = distinct !DILexicalBlock(scope: !22949, file: !3, line: 4118, column: 7)
!22966 = !DILocation(line: 4118, column: 14, scope: !22965)
!22967 = !DILocation(line: 4118, column: 7, scope: !22949)
!22968 = !DILocation(line: 4119, column: 4, scope: !22965)
!22969 = !DILocation(line: 4120, column: 24, scope: !22970)
!22970 = distinct !DILexicalBlock(scope: !22949, file: !3, line: 4120, column: 7)
!22971 = !DILocation(line: 4120, column: 7, scope: !22970)
!22972 = !DILocation(line: 4120, column: 35, scope: !22970)
!22973 = !DILocation(line: 4121, column: 28, scope: !22970)
!22974 = !DILocation(line: 4121, column: 38, scope: !22970)
!22975 = !DILocation(line: 4121, column: 8, scope: !22970)
!22976 = !DILocation(line: 4120, column: 7, scope: !22949)
!22977 = !DILocation(line: 4122, column: 4, scope: !22978)
!22978 = distinct !DILexicalBlock(scope: !22970, file: !3, line: 4121, column: 49)
!22979 = !DILocalVariable(name: "__extack", scope: !22980, file: !3, line: 4122, type: !2633)
!22980 = distinct !DILexicalBlock(scope: !22978, file: !3, line: 4122, column: 4)
!22981 = !DILocation(line: 4122, column: 4, scope: !22980)
!22982 = !DILocation(line: 4122, column: 4, scope: !22983)
!22983 = distinct !DILexicalBlock(scope: !22980, file: !3, line: 4122, column: 4)
!22984 = !DILocation(line: 4123, column: 4, scope: !22978)
!22985 = !DILocation(line: 4125, column: 3, scope: !22949)
!22986 = !DILocation(line: 4127, column: 15, scope: !22949)
!22987 = !DILocation(line: 4127, column: 21, scope: !22949)
!22988 = !DILocation(line: 4127, column: 13, scope: !22949)
!22989 = !DILocation(line: 4128, column: 7, scope: !22990)
!22990 = distinct !DILexicalBlock(scope: !22949, file: !3, line: 4128, column: 7)
!22991 = !DILocation(line: 4128, column: 13, scope: !22990)
!22992 = !DILocation(line: 4128, column: 7, scope: !22949)
!22993 = !DILocation(line: 4129, column: 4, scope: !22990)
!22994 = !DILocation(line: 4130, column: 24, scope: !22995)
!22995 = distinct !DILexicalBlock(scope: !22949, file: !3, line: 4130, column: 7)
!22996 = !DILocation(line: 4130, column: 7, scope: !22995)
!22997 = !DILocation(line: 4130, column: 7, scope: !22949)
!22998 = !DILocation(line: 4131, column: 29, scope: !22995)
!22999 = !DILocation(line: 4131, column: 39, scope: !22995)
!23000 = !DILocation(line: 4131, column: 4, scope: !22995)
!23001 = !DILocation(line: 4132, column: 3, scope: !22949)
!23002 = !DILocation(line: 4135, column: 2, scope: !12388)
!23003 = !DILocation(line: 4136, column: 1, scope: !12388)
!23004 = distinct !DISubprogram(name: "mlxsw_core_net", scope: !10667, file: !10667, line: 403, type: !23005, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!23005 = !DISubroutineType(types: !23006)
!23006 = !{!2116, !10727}
!23007 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !23004, file: !10667, line: 403, type: !10727)
!23008 = !DILocation(line: 403, column: 61, scope: !23004)
!23009 = !DILocation(line: 405, column: 37, scope: !23004)
!23010 = !DILocation(line: 405, column: 21, scope: !23004)
!23011 = !DILocation(line: 405, column: 9, scope: !23004)
!23012 = !DILocation(line: 405, column: 2, scope: !23004)
!23013 = distinct !DISubprogram(name: "priv_to_devlink", scope: !8423, file: !8423, line: 1356, type: !23014, scopeLine: 1357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!23014 = !DISubroutineType(types: !23015)
!23015 = !{!8429, !726}
!23016 = !DILocalVariable(name: "priv", arg: 1, scope: !23013, file: !8423, line: 1356, type: !726)
!23017 = !DILocation(line: 1356, column: 53, scope: !23013)
!23018 = !DILocation(line: 1358, column: 2, scope: !23013)
!23019 = !DILocation(line: 1358, column: 2, scope: !23020)
!23020 = distinct !DILexicalBlock(scope: !23021, file: !8423, line: 1358, column: 2)
!23021 = distinct !DILexicalBlock(scope: !23013, file: !8423, line: 1358, column: 2)
!23022 = !DILocation(line: 1358, column: 2, scope: !23021)
!23023 = !DILocation(line: 1358, column: 2, scope: !23024)
!23024 = distinct !DILexicalBlock(scope: !23020, file: !8423, line: 1358, column: 2)
!23025 = !DILocation(line: 1358, column: 2, scope: !23026)
!23026 = distinct !DILexicalBlock(scope: !23024, file: !8423, line: 1358, column: 2)
!23027 = !DILocation(line: 1358, column: 2, scope: !23028)
!23028 = distinct !DILexicalBlock(scope: !23024, file: !8423, line: 1358, column: 2)
!23029 = !{i32 -2137070875, i32 -2137070846, i32 -2137070800, i32 -2137070742, i32 -2137070688, i32 -2137070634, i32 -2137070579, i32 -2137070548}
!23030 = !DILocation(line: 1358, column: 2, scope: !23031)
!23031 = distinct !DILexicalBlock(scope: !23032, file: !8423, line: 1358, column: 2)
!23032 = distinct !DILexicalBlock(scope: !23024, file: !8423, line: 1358, column: 2)
!23033 = !{i32 -2137070103, i32 -2137070096, i32 -2137070042, i32 -2137070011, i32 -2137069981}
!23034 = !DILocation(line: 1358, column: 2, scope: !23032)
!23035 = !DILocalVariable(name: "__mptr", scope: !23036, file: !8423, line: 1359, type: !726)
!23036 = distinct !DILexicalBlock(scope: !23013, file: !8423, line: 1359, column: 9)
!23037 = !DILocation(line: 1359, column: 9, scope: !23036)
!23038 = !DILocation(line: 1359, column: 9, scope: !23039)
!23039 = distinct !DILexicalBlock(scope: !23036, file: !8423, line: 1359, column: 9)
!23040 = !DILocation(line: 1359, column: 2, scope: !23013)
!23041 = distinct !DISubprogram(name: "mlxsw_sp_port_module_info_get", scope: !3, file: !3, line: 443, type: !23042, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!23042 = !DISubroutineType(types: !23043)
!23043 = !{!7, !10721, !1552, !10762}
!23044 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !23041, file: !3, line: 443, type: !10721)
!23045 = !DILocation(line: 443, column: 48, scope: !23041)
!23046 = !DILocalVariable(name: "local_port", arg: 2, scope: !23041, file: !3, line: 443, type: !1552)
!23047 = !DILocation(line: 443, column: 61, scope: !23041)
!23048 = !DILocalVariable(name: "port_mapping", arg: 3, scope: !23041, file: !3, line: 444, type: !10762)
!23049 = !DILocation(line: 444, column: 40, scope: !23041)
!23050 = !DILocalVariable(name: "pmlp_pl", scope: !23041, file: !3, line: 446, type: !5296)
!23051 = !DILocation(line: 446, column: 7, scope: !23041)
!23052 = !DILocalVariable(name: "separate_rxtx", scope: !23041, file: !3, line: 447, type: !696)
!23053 = !DILocation(line: 447, column: 7, scope: !23041)
!23054 = !DILocalVariable(name: "module", scope: !23041, file: !3, line: 448, type: !1552)
!23055 = !DILocation(line: 448, column: 5, scope: !23041)
!23056 = !DILocalVariable(name: "width", scope: !23041, file: !3, line: 449, type: !1552)
!23057 = !DILocation(line: 449, column: 5, scope: !23041)
!23058 = !DILocalVariable(name: "err", scope: !23041, file: !3, line: 450, type: !7)
!23059 = !DILocation(line: 450, column: 6, scope: !23041)
!23060 = !DILocalVariable(name: "i", scope: !23041, file: !3, line: 451, type: !7)
!23061 = !DILocation(line: 451, column: 6, scope: !23041)
!23062 = !DILocation(line: 453, column: 22, scope: !23041)
!23063 = !DILocation(line: 453, column: 31, scope: !23041)
!23064 = !DILocation(line: 453, column: 2, scope: !23041)
!23065 = !DILocation(line: 454, column: 24, scope: !23041)
!23066 = !DILocation(line: 454, column: 34, scope: !23041)
!23067 = !DILocation(line: 454, column: 57, scope: !23041)
!23068 = !DILocation(line: 454, column: 8, scope: !23041)
!23069 = !DILocation(line: 454, column: 6, scope: !23041)
!23070 = !DILocation(line: 455, column: 6, scope: !23071)
!23071 = distinct !DILexicalBlock(scope: !23041, file: !3, line: 455, column: 6)
!23072 = !DILocation(line: 455, column: 6, scope: !23041)
!23073 = !DILocation(line: 456, column: 10, scope: !23071)
!23074 = !DILocation(line: 456, column: 3, scope: !23071)
!23075 = !DILocation(line: 457, column: 37, scope: !23041)
!23076 = !DILocation(line: 457, column: 11, scope: !23041)
!23077 = !DILocation(line: 457, column: 9, scope: !23041)
!23078 = !DILocation(line: 458, column: 35, scope: !23041)
!23079 = !DILocation(line: 458, column: 10, scope: !23041)
!23080 = !DILocation(line: 458, column: 8, scope: !23041)
!23081 = !DILocation(line: 459, column: 42, scope: !23041)
!23082 = !DILocation(line: 459, column: 18, scope: !23041)
!23083 = !DILocation(line: 459, column: 16, scope: !23041)
!23084 = !DILocation(line: 461, column: 6, scope: !23085)
!23085 = distinct !DILexicalBlock(scope: !23041, file: !3, line: 461, column: 6)
!23086 = !DILocation(line: 461, column: 12, scope: !23085)
!23087 = !DILocation(line: 461, column: 30, scope: !23085)
!23088 = !DILocation(line: 461, column: 16, scope: !23085)
!23089 = !DILocation(line: 461, column: 6, scope: !23041)
!23090 = !DILocation(line: 462, column: 3, scope: !23091)
!23091 = distinct !DILexicalBlock(scope: !23085, file: !3, line: 461, column: 38)
!23092 = !DILocation(line: 464, column: 3, scope: !23091)
!23093 = !DILocation(line: 467, column: 9, scope: !23094)
!23094 = distinct !DILexicalBlock(scope: !23041, file: !3, line: 467, column: 2)
!23095 = !DILocation(line: 467, column: 7, scope: !23094)
!23096 = !DILocation(line: 467, column: 14, scope: !23097)
!23097 = distinct !DILexicalBlock(scope: !23094, file: !3, line: 467, column: 2)
!23098 = !DILocation(line: 467, column: 18, scope: !23097)
!23099 = !DILocation(line: 467, column: 16, scope: !23097)
!23100 = !DILocation(line: 467, column: 2, scope: !23094)
!23101 = !DILocation(line: 468, column: 33, scope: !23102)
!23102 = distinct !DILexicalBlock(scope: !23103, file: !3, line: 468, column: 7)
!23103 = distinct !DILexicalBlock(scope: !23097, file: !3, line: 467, column: 30)
!23104 = !DILocation(line: 468, column: 42, scope: !23102)
!23105 = !DILocation(line: 468, column: 7, scope: !23102)
!23106 = !DILocation(line: 468, column: 48, scope: !23102)
!23107 = !DILocation(line: 468, column: 45, scope: !23102)
!23108 = !DILocation(line: 468, column: 7, scope: !23103)
!23109 = !DILocation(line: 469, column: 4, scope: !23110)
!23110 = distinct !DILexicalBlock(scope: !23102, file: !3, line: 468, column: 56)
!23111 = !DILocation(line: 471, column: 4, scope: !23110)
!23112 = !DILocation(line: 473, column: 7, scope: !23113)
!23113 = distinct !DILexicalBlock(scope: !23103, file: !3, line: 473, column: 7)
!23114 = !DILocation(line: 473, column: 21, scope: !23113)
!23115 = !DILocation(line: 474, column: 34, scope: !23113)
!23116 = !DILocation(line: 474, column: 43, scope: !23113)
!23117 = !DILocation(line: 474, column: 7, scope: !23113)
!23118 = !DILocation(line: 475, column: 34, scope: !23113)
!23119 = !DILocation(line: 475, column: 43, scope: !23113)
!23120 = !DILocation(line: 475, column: 7, scope: !23113)
!23121 = !DILocation(line: 474, column: 46, scope: !23113)
!23122 = !DILocation(line: 473, column: 7, scope: !23103)
!23123 = !DILocation(line: 476, column: 4, scope: !23124)
!23124 = distinct !DILexicalBlock(scope: !23113, file: !3, line: 475, column: 47)
!23125 = !DILocation(line: 478, column: 4, scope: !23124)
!23126 = !DILocation(line: 480, column: 34, scope: !23127)
!23127 = distinct !DILexicalBlock(scope: !23103, file: !3, line: 480, column: 7)
!23128 = !DILocation(line: 480, column: 43, scope: !23127)
!23129 = !DILocation(line: 480, column: 7, scope: !23127)
!23130 = !DILocation(line: 480, column: 49, scope: !23127)
!23131 = !DILocation(line: 480, column: 46, scope: !23127)
!23132 = !DILocation(line: 480, column: 7, scope: !23103)
!23133 = !DILocation(line: 481, column: 4, scope: !23134)
!23134 = distinct !DILexicalBlock(scope: !23127, file: !3, line: 480, column: 52)
!23135 = !DILocation(line: 483, column: 4, scope: !23134)
!23136 = !DILocation(line: 485, column: 2, scope: !23103)
!23137 = !DILocation(line: 467, column: 26, scope: !23097)
!23138 = !DILocation(line: 467, column: 2, scope: !23097)
!23139 = distinct !{!23139, !23100, !23140}
!23140 = !DILocation(line: 485, column: 2, scope: !23094)
!23141 = !DILocation(line: 487, column: 25, scope: !23041)
!23142 = !DILocation(line: 487, column: 2, scope: !23041)
!23143 = !DILocation(line: 487, column: 16, scope: !23041)
!23144 = !DILocation(line: 487, column: 23, scope: !23041)
!23145 = !DILocation(line: 488, column: 24, scope: !23041)
!23146 = !DILocation(line: 488, column: 2, scope: !23041)
!23147 = !DILocation(line: 488, column: 16, scope: !23041)
!23148 = !DILocation(line: 488, column: 22, scope: !23041)
!23149 = !DILocation(line: 489, column: 50, scope: !23041)
!23150 = !DILocation(line: 489, column: 23, scope: !23041)
!23151 = !DILocation(line: 489, column: 2, scope: !23041)
!23152 = !DILocation(line: 489, column: 16, scope: !23041)
!23153 = !DILocation(line: 489, column: 21, scope: !23041)
!23154 = !DILocation(line: 490, column: 2, scope: !23041)
!23155 = !DILocation(line: 491, column: 1, scope: !23041)
!23156 = distinct !DISubprogram(name: "mlxsw_reg_pmlp_pack", scope: !10113, file: !10113, line: 4068, type: !13054, scopeLine: 4069, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!23157 = !DILocalVariable(name: "payload", arg: 1, scope: !23156, file: !10113, line: 4068, type: !733)
!23158 = !DILocation(line: 4068, column: 46, scope: !23156)
!23159 = !DILocalVariable(name: "local_port", arg: 2, scope: !23156, file: !10113, line: 4068, type: !1552)
!23160 = !DILocation(line: 4068, column: 58, scope: !23156)
!23161 = !DILocation(line: 4070, column: 2, scope: !23156)
!23162 = !DILocation(line: 4071, column: 32, scope: !23156)
!23163 = !DILocation(line: 4071, column: 41, scope: !23156)
!23164 = !DILocation(line: 4071, column: 2, scope: !23156)
!23165 = !DILocation(line: 4072, column: 1, scope: !23156)
!23166 = distinct !DISubprogram(name: "mlxsw_reg_pmlp_module_get", scope: !10113, file: !10113, line: 4053, type: !23167, scopeLine: 4053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!23167 = !DISubroutineType(types: !23168)
!23168 = !{!862, !453, !633}
!23169 = !DILocalVariable(name: "buf", arg: 1, scope: !23166, file: !10113, line: 4053, type: !453)
!23170 = !DILocation(line: 4053, column: 1, scope: !23166)
!23171 = !DILocalVariable(name: "index", arg: 2, scope: !23166, file: !10113, line: 4053, type: !633)
!23172 = distinct !DISubprogram(name: "mlxsw_reg_pmlp_width_get", scope: !10113, file: !10113, line: 4047, type: !19837, scopeLine: 4047, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!23173 = !DILocalVariable(name: "buf", arg: 1, scope: !23172, file: !10113, line: 4047, type: !453)
!23174 = !DILocation(line: 4047, column: 1, scope: !23172)
!23175 = distinct !DISubprogram(name: "mlxsw_reg_pmlp_rxtx_get", scope: !10113, file: !10113, line: 4031, type: !19837, scopeLine: 4031, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!23176 = !DILocalVariable(name: "buf", arg: 1, scope: !23175, file: !10113, line: 4031, type: !453)
!23177 = !DILocation(line: 4031, column: 1, scope: !23175)
!23178 = distinct !DISubprogram(name: "is_power_of_2", scope: !15210, file: !15210, line: 45, type: !23179, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!23179 = !DISubroutineType(types: !23180)
!23180 = !{!696, !473}
!23181 = !DILocalVariable(name: "n", arg: 1, scope: !23178, file: !15210, line: 45, type: !473)
!23182 = !DILocation(line: 45, column: 34, scope: !23178)
!23183 = !DILocation(line: 47, column: 10, scope: !23178)
!23184 = !DILocation(line: 47, column: 12, scope: !23178)
!23185 = !DILocation(line: 47, column: 17, scope: !23178)
!23186 = !DILocation(line: 47, column: 22, scope: !23178)
!23187 = !DILocation(line: 47, column: 27, scope: !23178)
!23188 = !DILocation(line: 47, column: 29, scope: !23178)
!23189 = !DILocation(line: 47, column: 24, scope: !23178)
!23190 = !DILocation(line: 47, column: 35, scope: !23178)
!23191 = !DILocation(line: 0, scope: !23178)
!23192 = !DILocation(line: 47, column: 2, scope: !23178)
!23193 = distinct !DISubprogram(name: "mlxsw_reg_pmlp_tx_lane_get", scope: !10113, file: !10113, line: 4059, type: !23167, scopeLine: 4059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!23194 = !DILocalVariable(name: "buf", arg: 1, scope: !23193, file: !10113, line: 4059, type: !453)
!23195 = !DILocation(line: 4059, column: 1, scope: !23193)
!23196 = !DILocalVariable(name: "index", arg: 2, scope: !23193, file: !10113, line: 4059, type: !633)
!23197 = distinct !DISubprogram(name: "mlxsw_reg_pmlp_rx_lane_get", scope: !10113, file: !10113, line: 4066, type: !23167, scopeLine: 4066, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!23198 = !DILocalVariable(name: "buf", arg: 1, scope: !23197, file: !10113, line: 4066, type: !453)
!23199 = !DILocation(line: 4066, column: 1, scope: !23197)
!23200 = !DILocalVariable(name: "index", arg: 2, scope: !23197, file: !10113, line: 4066, type: !633)
!23201 = distinct !DISubprogram(name: "mlxsw_reg_pmlp_local_port_set", scope: !10113, file: !10113, line: 4037, type: !14426, scopeLine: 4037, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!23202 = !DILocalVariable(name: "buf", arg: 1, scope: !23201, file: !10113, line: 4037, type: !733)
!23203 = !DILocation(line: 4037, column: 1, scope: !23201)
!23204 = !DILocalVariable(name: "val", arg: 2, scope: !23201, file: !10113, line: 4037, type: !862)
!23205 = distinct !DISubprogram(name: "mlxsw_sp_cpu_port_create", scope: !3, file: !3, line: 1683, type: !11250, scopeLine: 1684, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!23206 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !23205, file: !3, line: 1683, type: !10721)
!23207 = !DILocation(line: 1683, column: 54, scope: !23205)
!23208 = !DILocalVariable(name: "mlxsw_sp_port", scope: !23205, file: !3, line: 1685, type: !10715)
!23209 = !DILocation(line: 1685, column: 24, scope: !23205)
!23210 = !DILocalVariable(name: "err", scope: !23205, file: !3, line: 1686, type: !7)
!23211 = !DILocation(line: 1686, column: 6, scope: !23205)
!23212 = !DILocation(line: 1688, column: 18, scope: !23205)
!23213 = !DILocation(line: 1688, column: 16, scope: !23205)
!23214 = !DILocation(line: 1689, column: 7, scope: !23215)
!23215 = distinct !DILexicalBlock(scope: !23205, file: !3, line: 1689, column: 6)
!23216 = !DILocation(line: 1689, column: 6, scope: !23205)
!23217 = !DILocation(line: 1690, column: 3, scope: !23215)
!23218 = !DILocation(line: 1692, column: 28, scope: !23205)
!23219 = !DILocation(line: 1692, column: 2, scope: !23205)
!23220 = !DILocation(line: 1692, column: 17, scope: !23205)
!23221 = !DILocation(line: 1692, column: 26, scope: !23205)
!23222 = !DILocation(line: 1693, column: 2, scope: !23205)
!23223 = !DILocation(line: 1693, column: 17, scope: !23205)
!23224 = !DILocation(line: 1693, column: 28, scope: !23205)
!23225 = !DILocation(line: 1695, column: 33, scope: !23205)
!23226 = !DILocation(line: 1695, column: 43, scope: !23205)
!23227 = !DILocation(line: 1696, column: 12, scope: !23205)
!23228 = !DILocation(line: 1697, column: 12, scope: !23205)
!23229 = !DILocation(line: 1697, column: 22, scope: !23205)
!23230 = !DILocation(line: 1695, column: 8, scope: !23205)
!23231 = !DILocation(line: 1695, column: 6, scope: !23205)
!23232 = !DILocation(line: 1699, column: 6, scope: !23233)
!23233 = distinct !DILexicalBlock(scope: !23205, file: !3, line: 1699, column: 6)
!23234 = !DILocation(line: 1699, column: 6, scope: !23205)
!23235 = !DILocation(line: 1700, column: 3, scope: !23236)
!23236 = distinct !DILexicalBlock(scope: !23233, file: !3, line: 1699, column: 11)
!23237 = !DILocation(line: 1701, column: 3, scope: !23236)
!23238 = !DILocation(line: 1704, column: 41, scope: !23205)
!23239 = !DILocation(line: 1704, column: 2, scope: !23205)
!23240 = !DILocation(line: 1704, column: 12, scope: !23205)
!23241 = !DILocation(line: 1704, column: 39, scope: !23205)
!23242 = !DILocation(line: 1705, column: 2, scope: !23205)
!23243 = !DILabel(scope: !23205, name: "err_core_cpu_port_init", file: !3, line: 1707)
!23244 = !DILocation(line: 1707, column: 1, scope: !23205)
!23245 = !DILocation(line: 1708, column: 8, scope: !23205)
!23246 = !DILocation(line: 1708, column: 2, scope: !23205)
!23247 = !DILocation(line: 1709, column: 9, scope: !23205)
!23248 = !DILocation(line: 1709, column: 2, scope: !23205)
!23249 = !DILocation(line: 1710, column: 1, scope: !23205)
!23250 = distinct !DISubprogram(name: "mlxsw_sp_port_create", scope: !3, file: !3, line: 1389, type: !23251, scopeLine: 1392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!23251 = !DISubroutineType(types: !23252)
!23252 = !{!7, !10721, !1552, !1552, !10762}
!23253 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !23250, file: !3, line: 1389, type: !10721)
!23254 = !DILocation(line: 1389, column: 50, scope: !23250)
!23255 = !DILocalVariable(name: "local_port", arg: 2, scope: !23250, file: !3, line: 1389, type: !1552)
!23256 = !DILocation(line: 1389, column: 63, scope: !23250)
!23257 = !DILocalVariable(name: "split_base_local_port", arg: 3, scope: !23250, file: !3, line: 1390, type: !1552)
!23258 = !DILocation(line: 1390, column: 8, scope: !23250)
!23259 = !DILocalVariable(name: "port_mapping", arg: 4, scope: !23250, file: !3, line: 1391, type: !10762)
!23260 = !DILocation(line: 1391, column: 35, scope: !23250)
!23261 = !DILocalVariable(name: "mlxsw_sp_port_vlan", scope: !23250, file: !3, line: 1393, type: !11388)
!23262 = !DILocation(line: 1393, column: 29, scope: !23250)
!23263 = !DILocalVariable(name: "split", scope: !23250, file: !3, line: 1394, type: !696)
!23264 = !DILocation(line: 1394, column: 7, scope: !23250)
!23265 = !DILocation(line: 1394, column: 17, scope: !23250)
!23266 = !DILocation(line: 1394, column: 16, scope: !23250)
!23267 = !DILocation(line: 1394, column: 15, scope: !23250)
!23268 = !DILocalVariable(name: "mlxsw_sp_port", scope: !23250, file: !3, line: 1395, type: !10715)
!23269 = !DILocation(line: 1395, column: 24, scope: !23250)
!23270 = !DILocalVariable(name: "lanes", scope: !23250, file: !3, line: 1396, type: !862)
!23271 = !DILocation(line: 1396, column: 6, scope: !23250)
!23272 = !DILocation(line: 1396, column: 14, scope: !23250)
!23273 = !DILocation(line: 1396, column: 28, scope: !23250)
!23274 = !DILocalVariable(name: "dev", scope: !23250, file: !3, line: 1397, type: !451)
!23275 = !DILocation(line: 1397, column: 21, scope: !23250)
!23276 = !DILocalVariable(name: "splittable", scope: !23250, file: !3, line: 1398, type: !696)
!23277 = !DILocation(line: 1398, column: 7, scope: !23250)
!23278 = !DILocalVariable(name: "err", scope: !23250, file: !3, line: 1399, type: !7)
!23279 = !DILocation(line: 1399, column: 6, scope: !23250)
!23280 = !DILocation(line: 1401, column: 15, scope: !23250)
!23281 = !DILocation(line: 1401, column: 21, scope: !23250)
!23282 = !DILocation(line: 1401, column: 25, scope: !23250)
!23283 = !DILocation(line: 1401, column: 29, scope: !23250)
!23284 = !DILocation(line: 1401, column: 28, scope: !23250)
!23285 = !DILocation(line: 0, scope: !23250)
!23286 = !DILocation(line: 1401, column: 13, scope: !23250)
!23287 = !DILocation(line: 1402, column: 29, scope: !23250)
!23288 = !DILocation(line: 1402, column: 39, scope: !23250)
!23289 = !DILocation(line: 1402, column: 45, scope: !23250)
!23290 = !DILocation(line: 1403, column: 8, scope: !23250)
!23291 = !DILocation(line: 1403, column: 22, scope: !23250)
!23292 = !DILocation(line: 1403, column: 29, scope: !23250)
!23293 = !DILocation(line: 1403, column: 34, scope: !23250)
!23294 = !DILocation(line: 1404, column: 8, scope: !23250)
!23295 = !DILocation(line: 1404, column: 22, scope: !23250)
!23296 = !DILocation(line: 1404, column: 29, scope: !23250)
!23297 = !DILocation(line: 1404, column: 27, scope: !23250)
!23298 = !DILocation(line: 1405, column: 8, scope: !23250)
!23299 = !DILocation(line: 1405, column: 20, scope: !23250)
!23300 = !DILocation(line: 1406, column: 8, scope: !23250)
!23301 = !DILocation(line: 1406, column: 18, scope: !23250)
!23302 = !DILocation(line: 1402, column: 8, scope: !23250)
!23303 = !DILocation(line: 1402, column: 6, scope: !23250)
!23304 = !DILocation(line: 1408, column: 6, scope: !23305)
!23305 = distinct !DILexicalBlock(scope: !23250, file: !3, line: 1408, column: 6)
!23306 = !DILocation(line: 1408, column: 6, scope: !23250)
!23307 = !DILocation(line: 1409, column: 3, scope: !23308)
!23308 = distinct !DILexicalBlock(scope: !23305, file: !3, line: 1408, column: 11)
!23309 = !DILocation(line: 1411, column: 10, scope: !23308)
!23310 = !DILocation(line: 1411, column: 3, scope: !23308)
!23311 = !DILocation(line: 1414, column: 8, scope: !23250)
!23312 = !DILocation(line: 1414, column: 6, scope: !23250)
!23313 = !DILocation(line: 1415, column: 7, scope: !23314)
!23314 = distinct !DILexicalBlock(scope: !23250, file: !3, line: 1415, column: 6)
!23315 = !DILocation(line: 1415, column: 6, scope: !23250)
!23316 = !DILocation(line: 1416, column: 7, scope: !23317)
!23317 = distinct !DILexicalBlock(scope: !23314, file: !3, line: 1415, column: 12)
!23318 = !DILocation(line: 1417, column: 3, scope: !23317)
!23319 = !DILocation(line: 1419, column: 2, scope: !23250)
!23320 = !DILocation(line: 1420, column: 14, scope: !23250)
!23321 = !DILocation(line: 1420, column: 32, scope: !23250)
!23322 = !DILocation(line: 1420, column: 19, scope: !23250)
!23323 = !DILocation(line: 1420, column: 2, scope: !23250)
!23324 = !DILocation(line: 1421, column: 30, scope: !23250)
!23325 = !DILocation(line: 1421, column: 18, scope: !23250)
!23326 = !DILocation(line: 1421, column: 16, scope: !23250)
!23327 = !DILocation(line: 1422, column: 23, scope: !23250)
!23328 = !DILocation(line: 1422, column: 2, scope: !23250)
!23329 = !DILocation(line: 1422, column: 17, scope: !23250)
!23330 = !DILocation(line: 1422, column: 21, scope: !23250)
!23331 = !DILocation(line: 1423, column: 28, scope: !23250)
!23332 = !DILocation(line: 1423, column: 2, scope: !23250)
!23333 = !DILocation(line: 1423, column: 17, scope: !23250)
!23334 = !DILocation(line: 1423, column: 26, scope: !23250)
!23335 = !DILocation(line: 1424, column: 30, scope: !23250)
!23336 = !DILocation(line: 1424, column: 2, scope: !23250)
!23337 = !DILocation(line: 1424, column: 17, scope: !23250)
!23338 = !DILocation(line: 1424, column: 28, scope: !23250)
!23339 = !DILocation(line: 1425, column: 2, scope: !23250)
!23340 = !DILocation(line: 1425, column: 17, scope: !23250)
!23341 = !DILocation(line: 1425, column: 22, scope: !23250)
!23342 = !DILocation(line: 1426, column: 25, scope: !23250)
!23343 = !DILocation(line: 1426, column: 2, scope: !23250)
!23344 = !DILocation(line: 1426, column: 17, scope: !23250)
!23345 = !DILocation(line: 1426, column: 23, scope: !23250)
!23346 = !DILocation(line: 1427, column: 41, scope: !23250)
!23347 = !DILocation(line: 1427, column: 2, scope: !23250)
!23348 = !DILocation(line: 1427, column: 17, scope: !23250)
!23349 = !DILocation(line: 1427, column: 39, scope: !23250)
!23350 = !DILocation(line: 1428, column: 2, scope: !23250)
!23351 = !DILocation(line: 1428, column: 17, scope: !23250)
!23352 = !DILocation(line: 1428, column: 28, scope: !23250)
!23353 = !DILocation(line: 1428, column: 27, scope: !23250)
!23354 = !DILocation(line: 1429, column: 2, scope: !23250)
!23355 = !DILocation(line: 1429, column: 17, scope: !23250)
!23356 = !DILocation(line: 1429, column: 22, scope: !23250)
!23357 = !DILocation(line: 1429, column: 30, scope: !23250)
!23358 = !DILocation(line: 1430, column: 18, scope: !23250)
!23359 = !DILocation(line: 1430, column: 33, scope: !23250)
!23360 = !DILocation(line: 1430, column: 2, scope: !23250)
!23361 = !DILocalVariable(name: "pcpu_stats", scope: !23362, file: !3, line: 1433, type: !10686)
!23362 = distinct !DILexicalBlock(scope: !23250, file: !3, line: 1433, column: 3)
!23363 = !DILocation(line: 1433, column: 3, scope: !23362)
!23364 = !DILocation(line: 1433, column: 3, scope: !23365)
!23365 = distinct !DILexicalBlock(scope: !23362, file: !3, line: 1433, column: 3)
!23366 = !DILocalVariable(name: "__cpu", scope: !23367, file: !3, line: 1433, type: !7)
!23367 = distinct !DILexicalBlock(scope: !23365, file: !3, line: 1433, column: 3)
!23368 = !DILocation(line: 1433, column: 3, scope: !23367)
!23369 = !DILocation(line: 1433, column: 3, scope: !23370)
!23370 = distinct !DILexicalBlock(scope: !23367, file: !3, line: 1433, column: 3)
!23371 = !DILocation(line: 1433, column: 3, scope: !23372)
!23372 = distinct !DILexicalBlock(scope: !23370, file: !3, line: 1433, column: 3)
!23373 = !DILocalVariable(name: "stat", scope: !23374, file: !3, line: 1433, type: !10686)
!23374 = distinct !DILexicalBlock(scope: !23372, file: !3, line: 1433, column: 3)
!23375 = !DILocation(line: 1433, column: 3, scope: !23374)
!23376 = !DILocation(line: 1433, column: 3, scope: !23377)
!23377 = distinct !DILexicalBlock(scope: !23374, file: !3, line: 1433, column: 3)
!23378 = !DILocation(line: 1433, column: 3, scope: !23379)
!23379 = distinct !DILexicalBlock(scope: !23377, file: !3, line: 1433, column: 3)
!23380 = !DILocalVariable(name: "__vpp_verify", scope: !23381, file: !3, line: 1433, type: !2424)
!23381 = distinct !DILexicalBlock(scope: !23379, file: !3, line: 1433, column: 3)
!23382 = !DILocation(line: 1433, column: 3, scope: !23381)
!23383 = distinct !{!23383, !23369, !23369}
!23384 = !DILocation(line: 1432, column: 2, scope: !23250)
!23385 = !DILocation(line: 1432, column: 17, scope: !23250)
!23386 = !DILocation(line: 1432, column: 28, scope: !23250)
!23387 = !DILocation(line: 1434, column: 7, scope: !23388)
!23388 = distinct !DILexicalBlock(scope: !23250, file: !3, line: 1434, column: 6)
!23389 = !DILocation(line: 1434, column: 22, scope: !23388)
!23390 = !DILocation(line: 1434, column: 6, scope: !23250)
!23391 = !DILocation(line: 1435, column: 7, scope: !23392)
!23392 = distinct !DILexicalBlock(scope: !23388, file: !3, line: 1434, column: 34)
!23393 = !DILocation(line: 1436, column: 3, scope: !23392)
!23394 = !DILocation(line: 1439, column: 2, scope: !23250)
!23395 = !DILocation(line: 1439, column: 2, scope: !23396)
!23396 = distinct !DILexicalBlock(scope: !23250, file: !3, line: 1439, column: 2)
!23397 = !DILocation(line: 1439, column: 2, scope: !23398)
!23398 = distinct !DILexicalBlock(scope: !23396, file: !3, line: 1439, column: 2)
!23399 = !DILocation(line: 1442, column: 2, scope: !23250)
!23400 = !DILocation(line: 1442, column: 7, scope: !23250)
!23401 = !DILocation(line: 1442, column: 18, scope: !23250)
!23402 = !DILocation(line: 1443, column: 2, scope: !23250)
!23403 = !DILocation(line: 1443, column: 7, scope: !23250)
!23404 = !DILocation(line: 1443, column: 19, scope: !23250)
!23405 = !DILocation(line: 1445, column: 33, scope: !23250)
!23406 = !DILocation(line: 1445, column: 8, scope: !23250)
!23407 = !DILocation(line: 1445, column: 6, scope: !23250)
!23408 = !DILocation(line: 1446, column: 6, scope: !23409)
!23409 = distinct !DILexicalBlock(scope: !23250, file: !3, line: 1446, column: 6)
!23410 = !DILocation(line: 1446, column: 6, scope: !23250)
!23411 = !DILocation(line: 1447, column: 3, scope: !23412)
!23412 = distinct !DILexicalBlock(scope: !23409, file: !3, line: 1446, column: 11)
!23413 = !DILocation(line: 1449, column: 3, scope: !23412)
!23414 = !DILocation(line: 1452, column: 31, scope: !23250)
!23415 = !DILocation(line: 1452, column: 8, scope: !23250)
!23416 = !DILocation(line: 1452, column: 6, scope: !23250)
!23417 = !DILocation(line: 1453, column: 6, scope: !23418)
!23418 = distinct !DILexicalBlock(scope: !23250, file: !3, line: 1453, column: 6)
!23419 = !DILocation(line: 1453, column: 6, scope: !23250)
!23420 = !DILocation(line: 1454, column: 3, scope: !23421)
!23421 = distinct !DILexicalBlock(scope: !23418, file: !3, line: 1453, column: 11)
!23422 = !DILocation(line: 1456, column: 3, scope: !23421)
!23423 = !DILocation(line: 1459, column: 36, scope: !23250)
!23424 = !DILocation(line: 1459, column: 8, scope: !23250)
!23425 = !DILocation(line: 1459, column: 6, scope: !23250)
!23426 = !DILocation(line: 1460, column: 6, scope: !23427)
!23427 = distinct !DILexicalBlock(scope: !23250, file: !3, line: 1460, column: 6)
!23428 = !DILocation(line: 1460, column: 6, scope: !23250)
!23429 = !DILocation(line: 1461, column: 3, scope: !23430)
!23430 = distinct !DILexicalBlock(scope: !23427, file: !3, line: 1460, column: 11)
!23431 = !DILocation(line: 1463, column: 3, scope: !23430)
!23432 = !DILocation(line: 1466, column: 20, scope: !23250)
!23433 = !DILocation(line: 1466, column: 2, scope: !23250)
!23434 = !DILocation(line: 1468, column: 2, scope: !23250)
!23435 = !DILocation(line: 1468, column: 7, scope: !23250)
!23436 = !DILocation(line: 1468, column: 16, scope: !23250)
!23437 = !DILocation(line: 1470, column: 2, scope: !23250)
!23438 = !DILocation(line: 1470, column: 7, scope: !23250)
!23439 = !DILocation(line: 1470, column: 19, scope: !23250)
!23440 = !DILocation(line: 1472, column: 2, scope: !23250)
!23441 = !DILocation(line: 1472, column: 7, scope: !23250)
!23442 = !DILocation(line: 1472, column: 15, scope: !23250)
!23443 = !DILocation(line: 1473, column: 2, scope: !23250)
!23444 = !DILocation(line: 1473, column: 7, scope: !23250)
!23445 = !DILocation(line: 1473, column: 15, scope: !23250)
!23446 = !DILocation(line: 1478, column: 2, scope: !23250)
!23447 = !DILocation(line: 1478, column: 7, scope: !23250)
!23448 = !DILocation(line: 1478, column: 23, scope: !23250)
!23449 = !DILocation(line: 1480, column: 46, scope: !23250)
!23450 = !DILocation(line: 1480, column: 8, scope: !23250)
!23451 = !DILocation(line: 1480, column: 6, scope: !23250)
!23452 = !DILocation(line: 1481, column: 6, scope: !23453)
!23453 = distinct !DILexicalBlock(scope: !23250, file: !3, line: 1481, column: 6)
!23454 = !DILocation(line: 1481, column: 6, scope: !23250)
!23455 = !DILocation(line: 1482, column: 3, scope: !23456)
!23456 = distinct !DILexicalBlock(scope: !23453, file: !3, line: 1481, column: 11)
!23457 = !DILocation(line: 1484, column: 3, scope: !23456)
!23458 = !DILocation(line: 1487, column: 41, scope: !23250)
!23459 = !DILocation(line: 1487, column: 8, scope: !23250)
!23460 = !DILocation(line: 1487, column: 6, scope: !23250)
!23461 = !DILocation(line: 1488, column: 6, scope: !23462)
!23462 = distinct !DILexicalBlock(scope: !23250, file: !3, line: 1488, column: 6)
!23463 = !DILocation(line: 1488, column: 6, scope: !23250)
!23464 = !DILocation(line: 1489, column: 3, scope: !23465)
!23465 = distinct !DILexicalBlock(scope: !23462, file: !3, line: 1488, column: 11)
!23466 = !DILocation(line: 1491, column: 3, scope: !23465)
!23467 = !DILocation(line: 1494, column: 8, scope: !23250)
!23468 = !DILocation(line: 1494, column: 18, scope: !23250)
!23469 = !DILocation(line: 1494, column: 39, scope: !23250)
!23470 = !DILocation(line: 1494, column: 54, scope: !23250)
!23471 = !DILocation(line: 1495, column: 13, scope: !23250)
!23472 = !DILocation(line: 1495, column: 28, scope: !23250)
!23473 = !DILocation(line: 1494, column: 6, scope: !23250)
!23474 = !DILocation(line: 1496, column: 6, scope: !23475)
!23475 = distinct !DILexicalBlock(scope: !23250, file: !3, line: 1496, column: 6)
!23476 = !DILocation(line: 1496, column: 6, scope: !23250)
!23477 = !DILocation(line: 1497, column: 3, scope: !23478)
!23478 = distinct !DILexicalBlock(scope: !23475, file: !3, line: 1496, column: 11)
!23479 = !DILocation(line: 1499, column: 3, scope: !23478)
!23480 = !DILocation(line: 1502, column: 34, scope: !23250)
!23481 = !DILocation(line: 1502, column: 50, scope: !23250)
!23482 = !DILocation(line: 1502, column: 65, scope: !23250)
!23483 = !DILocation(line: 1502, column: 8, scope: !23250)
!23484 = !DILocation(line: 1502, column: 6, scope: !23250)
!23485 = !DILocation(line: 1503, column: 6, scope: !23486)
!23486 = distinct !DILexicalBlock(scope: !23250, file: !3, line: 1503, column: 6)
!23487 = !DILocation(line: 1503, column: 6, scope: !23250)
!23488 = !DILocation(line: 1504, column: 3, scope: !23489)
!23489 = distinct !DILexicalBlock(scope: !23486, file: !3, line: 1503, column: 11)
!23490 = !DILocation(line: 1506, column: 3, scope: !23489)
!23491 = !DILocation(line: 1509, column: 30, scope: !23250)
!23492 = !DILocation(line: 1509, column: 8, scope: !23250)
!23493 = !DILocation(line: 1509, column: 6, scope: !23250)
!23494 = !DILocation(line: 1510, column: 6, scope: !23495)
!23495 = distinct !DILexicalBlock(scope: !23250, file: !3, line: 1510, column: 6)
!23496 = !DILocation(line: 1510, column: 6, scope: !23250)
!23497 = !DILocation(line: 1511, column: 3, scope: !23498)
!23498 = distinct !DILexicalBlock(scope: !23495, file: !3, line: 1510, column: 11)
!23499 = !DILocation(line: 1513, column: 3, scope: !23498)
!23500 = !DILocation(line: 1516, column: 39, scope: !23250)
!23501 = !DILocation(line: 1516, column: 8, scope: !23250)
!23502 = !DILocation(line: 1516, column: 6, scope: !23250)
!23503 = !DILocation(line: 1517, column: 6, scope: !23504)
!23504 = distinct !DILexicalBlock(scope: !23250, file: !3, line: 1517, column: 6)
!23505 = !DILocation(line: 1517, column: 6, scope: !23250)
!23506 = !DILocation(line: 1518, column: 3, scope: !23504)
!23507 = !DILocation(line: 1520, column: 35, scope: !23250)
!23508 = !DILocation(line: 1520, column: 8, scope: !23250)
!23509 = !DILocation(line: 1520, column: 6, scope: !23250)
!23510 = !DILocation(line: 1521, column: 6, scope: !23511)
!23511 = distinct !DILexicalBlock(scope: !23250, file: !3, line: 1521, column: 6)
!23512 = !DILocation(line: 1521, column: 6, scope: !23250)
!23513 = !DILocation(line: 1522, column: 3, scope: !23514)
!23514 = distinct !DILexicalBlock(scope: !23511, file: !3, line: 1521, column: 11)
!23515 = !DILocation(line: 1524, column: 3, scope: !23514)
!23516 = !DILocation(line: 1527, column: 31, scope: !23250)
!23517 = !DILocation(line: 1527, column: 8, scope: !23250)
!23518 = !DILocation(line: 1527, column: 6, scope: !23250)
!23519 = !DILocation(line: 1528, column: 6, scope: !23520)
!23520 = distinct !DILexicalBlock(scope: !23250, file: !3, line: 1528, column: 6)
!23521 = !DILocation(line: 1528, column: 6, scope: !23250)
!23522 = !DILocation(line: 1529, column: 3, scope: !23523)
!23523 = distinct !DILexicalBlock(scope: !23520, file: !3, line: 1528, column: 11)
!23524 = !DILocation(line: 1531, column: 3, scope: !23523)
!23525 = !DILocation(line: 1534, column: 37, scope: !23250)
!23526 = !DILocation(line: 1534, column: 8, scope: !23250)
!23527 = !DILocation(line: 1534, column: 6, scope: !23250)
!23528 = !DILocation(line: 1535, column: 6, scope: !23529)
!23529 = distinct !DILexicalBlock(scope: !23250, file: !3, line: 1535, column: 6)
!23530 = !DILocation(line: 1535, column: 6, scope: !23250)
!23531 = !DILocation(line: 1536, column: 3, scope: !23532)
!23532 = distinct !DILexicalBlock(scope: !23529, file: !3, line: 1535, column: 11)
!23533 = !DILocation(line: 1538, column: 3, scope: !23532)
!23534 = !DILocation(line: 1542, column: 31, scope: !23250)
!23535 = !DILocation(line: 1542, column: 8, scope: !23250)
!23536 = !DILocation(line: 1542, column: 6, scope: !23250)
!23537 = !DILocation(line: 1543, column: 6, scope: !23538)
!23538 = distinct !DILexicalBlock(scope: !23250, file: !3, line: 1543, column: 6)
!23539 = !DILocation(line: 1543, column: 6, scope: !23250)
!23540 = !DILocation(line: 1544, column: 3, scope: !23541)
!23541 = distinct !DILexicalBlock(scope: !23538, file: !3, line: 1543, column: 11)
!23542 = !DILocation(line: 1546, column: 3, scope: !23541)
!23543 = !DILocation(line: 1549, column: 32, scope: !23250)
!23544 = !DILocation(line: 1549, column: 8, scope: !23250)
!23545 = !DILocation(line: 1549, column: 6, scope: !23250)
!23546 = !DILocation(line: 1550, column: 6, scope: !23547)
!23547 = distinct !DILexicalBlock(scope: !23250, file: !3, line: 1550, column: 6)
!23548 = !DILocation(line: 1550, column: 6, scope: !23250)
!23549 = !DILocation(line: 1551, column: 3, scope: !23550)
!23550 = distinct !DILexicalBlock(scope: !23547, file: !3, line: 1550, column: 11)
!23551 = !DILocation(line: 1553, column: 3, scope: !23550)
!23552 = !DILocation(line: 1556, column: 31, scope: !23250)
!23553 = !DILocation(line: 1556, column: 8, scope: !23250)
!23554 = !DILocation(line: 1556, column: 6, scope: !23250)
!23555 = !DILocation(line: 1557, column: 6, scope: !23556)
!23556 = distinct !DILexicalBlock(scope: !23250, file: !3, line: 1557, column: 6)
!23557 = !DILocation(line: 1557, column: 6, scope: !23250)
!23558 = !DILocation(line: 1558, column: 3, scope: !23559)
!23559 = distinct !DILexicalBlock(scope: !23556, file: !3, line: 1557, column: 11)
!23560 = !DILocation(line: 1560, column: 3, scope: !23559)
!23561 = !DILocation(line: 1563, column: 31, scope: !23250)
!23562 = !DILocation(line: 1563, column: 8, scope: !23250)
!23563 = !DILocation(line: 1563, column: 6, scope: !23250)
!23564 = !DILocation(line: 1565, column: 6, scope: !23565)
!23565 = distinct !DILexicalBlock(scope: !23250, file: !3, line: 1565, column: 6)
!23566 = !DILocation(line: 1565, column: 6, scope: !23250)
!23567 = !DILocation(line: 1566, column: 3, scope: !23568)
!23568 = distinct !DILexicalBlock(scope: !23565, file: !3, line: 1565, column: 11)
!23569 = !DILocation(line: 1568, column: 3, scope: !23568)
!23570 = !DILocation(line: 1571, column: 31, scope: !23250)
!23571 = !DILocation(line: 1571, column: 8, scope: !23250)
!23572 = !DILocation(line: 1571, column: 6, scope: !23250)
!23573 = !DILocation(line: 1572, column: 6, scope: !23574)
!23574 = distinct !DILexicalBlock(scope: !23250, file: !3, line: 1572, column: 6)
!23575 = !DILocation(line: 1572, column: 6, scope: !23250)
!23576 = !DILocation(line: 1573, column: 3, scope: !23577)
!23577 = distinct !DILexicalBlock(scope: !23574, file: !3, line: 1572, column: 11)
!23578 = !DILocation(line: 1575, column: 3, scope: !23577)
!23579 = !DILocation(line: 1578, column: 31, scope: !23250)
!23580 = !DILocation(line: 1578, column: 8, scope: !23250)
!23581 = !DILocation(line: 1578, column: 6, scope: !23250)
!23582 = !DILocation(line: 1579, column: 6, scope: !23583)
!23583 = distinct !DILexicalBlock(scope: !23250, file: !3, line: 1579, column: 6)
!23584 = !DILocation(line: 1579, column: 6, scope: !23250)
!23585 = !DILocation(line: 1580, column: 3, scope: !23586)
!23586 = distinct !DILexicalBlock(scope: !23583, file: !3, line: 1579, column: 11)
!23587 = !DILocation(line: 1582, column: 3, scope: !23586)
!23588 = !DILocation(line: 1585, column: 49, scope: !23250)
!23589 = !DILocation(line: 1585, column: 23, scope: !23250)
!23590 = !DILocation(line: 1585, column: 21, scope: !23250)
!23591 = !DILocation(line: 1587, column: 13, scope: !23592)
!23592 = distinct !DILexicalBlock(scope: !23250, file: !3, line: 1587, column: 6)
!23593 = !DILocation(line: 1587, column: 6, scope: !23592)
!23594 = !DILocation(line: 1587, column: 6, scope: !23250)
!23595 = !DILocation(line: 1588, column: 3, scope: !23596)
!23596 = distinct !DILexicalBlock(scope: !23592, file: !3, line: 1587, column: 34)
!23597 = !DILocation(line: 1590, column: 17, scope: !23596)
!23598 = !DILocation(line: 1590, column: 9, scope: !23596)
!23599 = !DILocation(line: 1590, column: 7, scope: !23596)
!23600 = !DILocation(line: 1591, column: 3, scope: !23596)
!23601 = !DILocation(line: 1593, column: 32, scope: !23250)
!23602 = !DILocation(line: 1593, column: 2, scope: !23250)
!23603 = !DILocation(line: 1593, column: 17, scope: !23250)
!23604 = !DILocation(line: 1593, column: 30, scope: !23250)
!23605 = !DILocation(line: 1595, column: 2, scope: !23250)
!23606 = !DILocation(line: 1595, column: 2, scope: !23607)
!23607 = distinct !DILexicalBlock(scope: !23250, file: !3, line: 1595, column: 2)
!23608 = !DILocation(line: 1595, column: 2, scope: !23609)
!23609 = distinct !DILexicalBlock(scope: !23607, file: !3, line: 1595, column: 2)
!23610 = !DILocation(line: 1598, column: 32, scope: !23250)
!23611 = !DILocation(line: 1598, column: 2, scope: !23250)
!23612 = !DILocation(line: 1598, column: 12, scope: !23250)
!23613 = !DILocation(line: 1598, column: 18, scope: !23250)
!23614 = !DILocation(line: 1598, column: 30, scope: !23250)
!23615 = !DILocation(line: 1600, column: 44, scope: !23250)
!23616 = !DILocation(line: 1600, column: 8, scope: !23250)
!23617 = !DILocation(line: 1600, column: 6, scope: !23250)
!23618 = !DILocation(line: 1601, column: 6, scope: !23619)
!23619 = distinct !DILexicalBlock(scope: !23250, file: !3, line: 1601, column: 6)
!23620 = !DILocation(line: 1601, column: 6, scope: !23250)
!23621 = !DILocation(line: 1602, column: 3, scope: !23622)
!23622 = distinct !DILexicalBlock(scope: !23619, file: !3, line: 1601, column: 11)
!23623 = !DILocation(line: 1604, column: 3, scope: !23622)
!23624 = !DILocation(line: 1607, column: 24, scope: !23250)
!23625 = !DILocation(line: 1607, column: 8, scope: !23250)
!23626 = !DILocation(line: 1607, column: 6, scope: !23250)
!23627 = !DILocation(line: 1608, column: 6, scope: !23628)
!23628 = distinct !DILexicalBlock(scope: !23250, file: !3, line: 1608, column: 6)
!23629 = !DILocation(line: 1608, column: 6, scope: !23250)
!23630 = !DILocation(line: 1609, column: 3, scope: !23631)
!23631 = distinct !DILexicalBlock(scope: !23628, file: !3, line: 1608, column: 11)
!23632 = !DILocation(line: 1611, column: 3, scope: !23631)
!23633 = !DILocation(line: 1614, column: 26, scope: !23250)
!23634 = !DILocation(line: 1614, column: 36, scope: !23250)
!23635 = !DILocation(line: 1614, column: 42, scope: !23250)
!23636 = !DILocation(line: 1614, column: 57, scope: !23250)
!23637 = !DILocation(line: 1615, column: 5, scope: !23250)
!23638 = !DILocation(line: 1615, column: 20, scope: !23250)
!23639 = !DILocation(line: 1614, column: 2, scope: !23250)
!23640 = !DILocation(line: 1616, column: 26, scope: !23250)
!23641 = !DILocation(line: 1616, column: 41, scope: !23250)
!23642 = !DILocation(line: 1616, column: 59, scope: !23250)
!23643 = !DILocation(line: 1616, column: 2, scope: !23250)
!23644 = !DILocation(line: 1617, column: 2, scope: !23250)
!23645 = !DILabel(scope: !23250, name: "err_register_netdev", file: !3, line: 1619)
!23646 = !DILocation(line: 1619, column: 1, scope: !23250)
!23647 = !DILabel(scope: !23250, name: "err_port_overheat_init_val_set", file: !3, line: 1620)
!23648 = !DILocation(line: 1620, column: 1, scope: !23250)
!23649 = !DILocation(line: 1621, column: 2, scope: !23250)
!23650 = !DILocation(line: 1621, column: 12, scope: !23250)
!23651 = !DILocation(line: 1621, column: 18, scope: !23250)
!23652 = !DILocation(line: 1621, column: 30, scope: !23250)
!23653 = !DILocation(line: 1622, column: 29, scope: !23250)
!23654 = !DILocation(line: 1622, column: 2, scope: !23250)
!23655 = !DILabel(scope: !23250, name: "err_port_vlan_create", file: !3, line: 1623)
!23656 = !DILocation(line: 1623, column: 1, scope: !23250)
!23657 = !DILabel(scope: !23250, name: "err_port_pvid_set", file: !3, line: 1624)
!23658 = !DILocation(line: 1624, column: 1, scope: !23250)
!23659 = !DILocation(line: 1625, column: 25, scope: !23250)
!23660 = !DILocation(line: 1625, column: 2, scope: !23250)
!23661 = !DILabel(scope: !23250, name: "err_port_nve_init", file: !3, line: 1626)
!23662 = !DILocation(line: 1626, column: 1, scope: !23250)
!23663 = !DILabel(scope: !23250, name: "err_port_vlan_clear", file: !3, line: 1627)
!23664 = !DILocation(line: 1627, column: 1, scope: !23250)
!23665 = !DILocation(line: 1628, column: 25, scope: !23250)
!23666 = !DILocation(line: 1628, column: 2, scope: !23250)
!23667 = !DILabel(scope: !23250, name: "err_port_qdiscs_init", file: !3, line: 1629)
!23668 = !DILocation(line: 1629, column: 1, scope: !23250)
!23669 = !DILocation(line: 1630, column: 26, scope: !23250)
!23670 = !DILocation(line: 1630, column: 2, scope: !23250)
!23671 = !DILabel(scope: !23250, name: "err_port_fids_init", file: !3, line: 1631)
!23672 = !DILocation(line: 1631, column: 1, scope: !23250)
!23673 = !DILocation(line: 1632, column: 25, scope: !23250)
!23674 = !DILocation(line: 1632, column: 2, scope: !23250)
!23675 = !DILabel(scope: !23250, name: "err_port_dcb_init", file: !3, line: 1633)
!23676 = !DILocation(line: 1633, column: 1, scope: !23250)
!23677 = !DILocation(line: 1634, column: 31, scope: !23250)
!23678 = !DILocation(line: 1634, column: 2, scope: !23250)
!23679 = !DILabel(scope: !23250, name: "err_port_tc_mc_mode", file: !3, line: 1635)
!23680 = !DILocation(line: 1635, column: 1, scope: !23250)
!23681 = !DILabel(scope: !23250, name: "err_port_ets_init", file: !3, line: 1636)
!23682 = !DILocation(line: 1636, column: 1, scope: !23250)
!23683 = !DILocation(line: 1637, column: 29, scope: !23250)
!23684 = !DILocation(line: 1637, column: 2, scope: !23250)
!23685 = !DILabel(scope: !23250, name: "err_port_buffers_init", file: !3, line: 1638)
!23686 = !DILocation(line: 1638, column: 1, scope: !23250)
!23687 = !DILabel(scope: !23250, name: "err_port_admin_status_set", file: !3, line: 1639)
!23688 = !DILocation(line: 1639, column: 1, scope: !23250)
!23689 = !DILabel(scope: !23250, name: "err_port_mtu_set", file: !3, line: 1640)
!23690 = !DILocation(line: 1640, column: 1, scope: !23250)
!23691 = !DILabel(scope: !23250, name: "err_port_max_mtu_get", file: !3, line: 1641)
!23692 = !DILocation(line: 1641, column: 1, scope: !23250)
!23693 = !DILabel(scope: !23250, name: "err_max_speed_get", file: !3, line: 1642)
!23694 = !DILocation(line: 1642, column: 1, scope: !23250)
!23695 = !DILabel(scope: !23250, name: "err_port_speed_by_width_set", file: !3, line: 1643)
!23696 = !DILocation(line: 1643, column: 1, scope: !23250)
!23697 = !DILabel(scope: !23250, name: "err_port_system_port_mapping_set", file: !3, line: 1644)
!23698 = !DILocation(line: 1644, column: 1, scope: !23250)
!23699 = !DILabel(scope: !23250, name: "err_dev_addr_init", file: !3, line: 1645)
!23700 = !DILocation(line: 1645, column: 1, scope: !23250)
!23701 = !DILocation(line: 1646, column: 25, scope: !23250)
!23702 = !DILocation(line: 1646, column: 2, scope: !23250)
!23703 = !DILabel(scope: !23250, name: "err_port_swid_set", file: !3, line: 1647)
!23704 = !DILocation(line: 1647, column: 1, scope: !23250)
!23705 = !DILocation(line: 1648, column: 29, scope: !23250)
!23706 = !DILocation(line: 1648, column: 2, scope: !23250)
!23707 = !DILabel(scope: !23250, name: "err_port_module_map", file: !3, line: 1649)
!23708 = !DILocation(line: 1649, column: 1, scope: !23250)
!23709 = !DILocation(line: 1650, column: 14, scope: !23250)
!23710 = !DILocation(line: 1650, column: 29, scope: !23250)
!23711 = !DILocation(line: 1650, column: 2, scope: !23250)
!23712 = !DILabel(scope: !23250, name: "err_alloc_stats", file: !3, line: 1651)
!23713 = !DILocation(line: 1651, column: 1, scope: !23250)
!23714 = !DILocation(line: 1652, column: 14, scope: !23250)
!23715 = !DILocation(line: 1652, column: 2, scope: !23250)
!23716 = !DILabel(scope: !23250, name: "err_alloc_etherdev", file: !3, line: 1653)
!23717 = !DILocation(line: 1653, column: 1, scope: !23250)
!23718 = !DILocation(line: 1654, column: 23, scope: !23250)
!23719 = !DILocation(line: 1654, column: 33, scope: !23250)
!23720 = !DILocation(line: 1654, column: 39, scope: !23250)
!23721 = !DILocation(line: 1654, column: 2, scope: !23250)
!23722 = !DILocation(line: 1655, column: 9, scope: !23250)
!23723 = !DILocation(line: 1655, column: 2, scope: !23250)
!23724 = !DILocation(line: 1656, column: 1, scope: !23250)
!23725 = distinct !DISubprogram(name: "mlxsw_sp_port_created", scope: !3, file: !3, line: 1722, type: !23726, scopeLine: 1723, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!23726 = !DISubroutineType(types: !23727)
!23727 = !{!696, !10721, !1552}
!23728 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !23725, file: !3, line: 1722, type: !10721)
!23729 = !DILocation(line: 1722, column: 52, scope: !23725)
!23730 = !DILocalVariable(name: "local_port", arg: 2, scope: !23725, file: !3, line: 1722, type: !1552)
!23731 = !DILocation(line: 1722, column: 65, scope: !23725)
!23732 = !DILocation(line: 1724, column: 9, scope: !23725)
!23733 = !DILocation(line: 1724, column: 19, scope: !23725)
!23734 = !DILocation(line: 1724, column: 25, scope: !23725)
!23735 = !DILocation(line: 1724, column: 37, scope: !23725)
!23736 = !DILocation(line: 1724, column: 2, scope: !23725)
!23737 = distinct !DISubprogram(name: "mlxsw_sp_port_remove", scope: !3, file: !3, line: 1658, type: !23738, scopeLine: 1659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!23738 = !DISubroutineType(types: !23739)
!23739 = !{null, !10721, !1552}
!23740 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !23737, file: !3, line: 1658, type: !10721)
!23741 = !DILocation(line: 1658, column: 51, scope: !23737)
!23742 = !DILocalVariable(name: "local_port", arg: 2, scope: !23737, file: !3, line: 1658, type: !1552)
!23743 = !DILocation(line: 1658, column: 64, scope: !23737)
!23744 = !DILocalVariable(name: "mlxsw_sp_port", scope: !23737, file: !3, line: 1660, type: !10715)
!23745 = !DILocation(line: 1660, column: 24, scope: !23737)
!23746 = !DILocation(line: 1660, column: 40, scope: !23737)
!23747 = !DILocation(line: 1660, column: 50, scope: !23737)
!23748 = !DILocation(line: 1660, column: 56, scope: !23737)
!23749 = !DILocation(line: 1662, column: 28, scope: !23737)
!23750 = !DILocation(line: 1662, column: 43, scope: !23737)
!23751 = !DILocation(line: 1662, column: 61, scope: !23737)
!23752 = !DILocation(line: 1662, column: 2, scope: !23737)
!23753 = !DILocation(line: 1663, column: 28, scope: !23737)
!23754 = !DILocation(line: 1663, column: 43, scope: !23737)
!23755 = !DILocation(line: 1663, column: 47, scope: !23737)
!23756 = !DILocation(line: 1663, column: 2, scope: !23737)
!23757 = !DILocation(line: 1664, column: 26, scope: !23737)
!23758 = !DILocation(line: 1664, column: 2, scope: !23737)
!23759 = !DILocation(line: 1665, column: 24, scope: !23737)
!23760 = !DILocation(line: 1665, column: 34, scope: !23737)
!23761 = !DILocation(line: 1665, column: 40, scope: !23737)
!23762 = !DILocation(line: 1665, column: 52, scope: !23737)
!23763 = !DILocation(line: 1665, column: 2, scope: !23737)
!23764 = !DILocation(line: 1666, column: 20, scope: !23737)
!23765 = !DILocation(line: 1666, column: 35, scope: !23737)
!23766 = !DILocation(line: 1666, column: 2, scope: !23737)
!23767 = !DILocation(line: 1667, column: 2, scope: !23737)
!23768 = !DILocation(line: 1667, column: 12, scope: !23737)
!23769 = !DILocation(line: 1667, column: 18, scope: !23737)
!23770 = !DILocation(line: 1667, column: 30, scope: !23737)
!23771 = !DILocation(line: 1668, column: 27, scope: !23737)
!23772 = !DILocation(line: 1668, column: 2, scope: !23737)
!23773 = !DILocation(line: 1669, column: 25, scope: !23737)
!23774 = !DILocation(line: 1669, column: 2, scope: !23737)
!23775 = !DILocation(line: 1670, column: 25, scope: !23737)
!23776 = !DILocation(line: 1670, column: 2, scope: !23737)
!23777 = !DILocation(line: 1671, column: 26, scope: !23737)
!23778 = !DILocation(line: 1671, column: 2, scope: !23737)
!23779 = !DILocation(line: 1672, column: 25, scope: !23737)
!23780 = !DILocation(line: 1672, column: 2, scope: !23737)
!23781 = !DILocation(line: 1673, column: 31, scope: !23737)
!23782 = !DILocation(line: 1673, column: 2, scope: !23737)
!23783 = !DILocation(line: 1674, column: 29, scope: !23737)
!23784 = !DILocation(line: 1674, column: 2, scope: !23737)
!23785 = !DILocation(line: 1675, column: 25, scope: !23737)
!23786 = !DILocation(line: 1675, column: 2, scope: !23737)
!23787 = !DILocation(line: 1676, column: 29, scope: !23737)
!23788 = !DILocation(line: 1676, column: 2, scope: !23737)
!23789 = !DILocation(line: 1677, column: 14, scope: !23737)
!23790 = !DILocation(line: 1677, column: 29, scope: !23737)
!23791 = !DILocation(line: 1677, column: 2, scope: !23737)
!23792 = !DILocalVariable(name: "__ret_warn_on", scope: !23793, file: !3, line: 1678, type: !7)
!23793 = distinct !DILexicalBlock(scope: !23737, file: !3, line: 1678, column: 2)
!23794 = !DILocation(line: 1678, column: 2, scope: !23793)
!23795 = !DILocation(line: 1678, column: 2, scope: !23796)
!23796 = distinct !DILexicalBlock(scope: !23793, file: !3, line: 1678, column: 2)
!23797 = !DILocation(line: 1678, column: 2, scope: !23798)
!23798 = distinct !DILexicalBlock(scope: !23796, file: !3, line: 1678, column: 2)
!23799 = !DILocation(line: 1678, column: 2, scope: !23800)
!23800 = distinct !DILexicalBlock(scope: !23798, file: !3, line: 1678, column: 2)
!23801 = !DILocation(line: 1678, column: 2, scope: !23802)
!23802 = distinct !DILexicalBlock(scope: !23798, file: !3, line: 1678, column: 2)
!23803 = !{i32 -2134362446, i32 -2134362417, i32 -2134362371, i32 -2134362313, i32 -2134362259, i32 -2134362205, i32 -2134362150, i32 -2134362119}
!23804 = !DILocation(line: 1678, column: 2, scope: !23805)
!23805 = distinct !DILexicalBlock(scope: !23798, file: !3, line: 1678, column: 2)
!23806 = !{i32 -2134361679, i32 -2134361672, i32 -2134361620, i32 -2134361589, i32 -2134361559}
!23807 = !DILocation(line: 1678, column: 2, scope: !23808)
!23808 = distinct !DILexicalBlock(scope: !23798, file: !3, line: 1678, column: 2)
!23809 = !DILocation(line: 1679, column: 14, scope: !23737)
!23810 = !DILocation(line: 1679, column: 29, scope: !23737)
!23811 = !DILocation(line: 1679, column: 2, scope: !23737)
!23812 = !DILocation(line: 1680, column: 23, scope: !23737)
!23813 = !DILocation(line: 1680, column: 33, scope: !23737)
!23814 = !DILocation(line: 1680, column: 39, scope: !23737)
!23815 = !DILocation(line: 1680, column: 2, scope: !23737)
!23816 = !DILocation(line: 1681, column: 1, scope: !23737)
!23817 = distinct !DISubprogram(name: "mlxsw_sp_cpu_port_remove", scope: !3, file: !3, line: 1712, type: !19190, scopeLine: 1713, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!23818 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !23817, file: !3, line: 1712, type: !10721)
!23819 = !DILocation(line: 1712, column: 55, scope: !23817)
!23820 = !DILocalVariable(name: "mlxsw_sp_port", scope: !23817, file: !3, line: 1714, type: !10715)
!23821 = !DILocation(line: 1714, column: 24, scope: !23817)
!23822 = !DILocation(line: 1715, column: 5, scope: !23817)
!23823 = !DILocation(line: 1715, column: 15, scope: !23817)
!23824 = !DILocation(line: 1717, column: 27, scope: !23817)
!23825 = !DILocation(line: 1717, column: 37, scope: !23817)
!23826 = !DILocation(line: 1717, column: 2, scope: !23817)
!23827 = !DILocation(line: 1718, column: 2, scope: !23817)
!23828 = !DILocation(line: 1718, column: 12, scope: !23817)
!23829 = !DILocation(line: 1718, column: 39, scope: !23817)
!23830 = !DILocation(line: 1719, column: 8, scope: !23817)
!23831 = !DILocation(line: 1719, column: 2, scope: !23817)
!23832 = !DILocation(line: 1720, column: 1, scope: !23817)
!23833 = distinct !DISubprogram(name: "dev_net_set", scope: !6, file: !6, line: 2311, type: !23834, scopeLine: 2312, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!23834 = !DISubroutineType(types: !23835)
!23835 = !{null, !451, !2116}
!23836 = !DILocalVariable(name: "dev", arg: 1, scope: !23833, file: !6, line: 2311, type: !451)
!23837 = !DILocation(line: 2311, column: 37, scope: !23833)
!23838 = !DILocalVariable(name: "net", arg: 2, scope: !23833, file: !6, line: 2311, type: !2116)
!23839 = !DILocation(line: 2311, column: 54, scope: !23833)
!23840 = !DILocation(line: 2313, column: 14, scope: !23833)
!23841 = !DILocation(line: 2313, column: 19, scope: !23833)
!23842 = !DILocation(line: 2313, column: 27, scope: !23833)
!23843 = !DILocation(line: 2313, column: 2, scope: !23833)
!23844 = !DILocation(line: 2314, column: 1, scope: !23833)
!23845 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !14241, file: !14241, line: 33, type: !14296, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!23846 = !DILocalVariable(name: "list", arg: 1, scope: !23845, file: !14241, line: 33, type: !448)
!23847 = !DILocation(line: 33, column: 53, scope: !23845)
!23848 = !DILocation(line: 35, column: 2, scope: !23845)
!23849 = !DILocation(line: 35, column: 2, scope: !23850)
!23850 = distinct !DILexicalBlock(scope: !23845, file: !14241, line: 35, column: 2)
!23851 = !DILocation(line: 35, column: 2, scope: !23852)
!23852 = distinct !DILexicalBlock(scope: !23850, file: !14241, line: 35, column: 2)
!23853 = !DILocation(line: 35, column: 2, scope: !23854)
!23854 = distinct !DILexicalBlock(scope: !23850, file: !14241, line: 35, column: 2)
!23855 = !DILocation(line: 36, column: 15, scope: !23845)
!23856 = !DILocation(line: 36, column: 2, scope: !23845)
!23857 = !DILocation(line: 36, column: 8, scope: !23845)
!23858 = !DILocation(line: 36, column: 13, scope: !23845)
!23859 = !DILocation(line: 37, column: 1, scope: !23845)
!23860 = distinct !DISubprogram(name: "u64_stats_init", scope: !2213, file: !2213, line: 118, type: !14604, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!23861 = !DILocalVariable(name: "syncp", arg: 1, scope: !23860, file: !2213, line: 118, type: !14606)
!23862 = !DILocation(line: 118, column: 58, scope: !23860)
!23863 = !DILocation(line: 123, column: 1, scope: !23860)
!23864 = distinct !DISubprogram(name: "__init_work", scope: !1962, file: !1962, line: 215, type: !23865, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!23865 = !DISubroutineType(types: !23866)
!23866 = !{null, !1971, !7}
!23867 = !DILocalVariable(name: "work", arg: 1, scope: !23864, file: !1962, line: 215, type: !1971)
!23868 = !DILocation(line: 215, column: 52, scope: !23864)
!23869 = !DILocalVariable(name: "onstack", arg: 2, scope: !23864, file: !1962, line: 215, type: !7)
!23870 = !DILocation(line: 215, column: 62, scope: !23864)
!23871 = !DILocation(line: 215, column: 73, scope: !23864)
!23872 = distinct !DISubprogram(name: "update_stats_cache", scope: !3, file: !3, line: 787, type: !1969, scopeLine: 788, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!23873 = !DILocalVariable(name: "work", arg: 1, scope: !23872, file: !3, line: 787, type: !1971)
!23874 = !DILocation(line: 787, column: 52, scope: !23872)
!23875 = !DILocalVariable(name: "mlxsw_sp_port", scope: !23872, file: !3, line: 789, type: !10715)
!23876 = !DILocation(line: 789, column: 24, scope: !23872)
!23877 = !DILocalVariable(name: "__mptr", scope: !23878, file: !3, line: 790, type: !726)
!23878 = distinct !DILexicalBlock(scope: !23872, file: !3, line: 790, column: 3)
!23879 = !DILocation(line: 790, column: 3, scope: !23878)
!23880 = !DILocation(line: 790, column: 3, scope: !23881)
!23881 = distinct !DILexicalBlock(scope: !23878, file: !3, line: 790, column: 3)
!23882 = !DILocation(line: 793, column: 24, scope: !23883)
!23883 = distinct !DILexicalBlock(scope: !23872, file: !3, line: 793, column: 6)
!23884 = !DILocation(line: 793, column: 39, scope: !23883)
!23885 = !DILocation(line: 793, column: 7, scope: !23883)
!23886 = !DILocation(line: 793, column: 6, scope: !23872)
!23887 = !DILocation(line: 797, column: 3, scope: !23883)
!23888 = !DILocation(line: 799, column: 29, scope: !23872)
!23889 = !DILocation(line: 799, column: 44, scope: !23872)
!23890 = !DILocation(line: 800, column: 9, scope: !23872)
!23891 = !DILocation(line: 800, column: 24, scope: !23872)
!23892 = !DILocation(line: 800, column: 42, scope: !23872)
!23893 = !DILocation(line: 799, column: 2, scope: !23872)
!23894 = !DILocation(line: 801, column: 30, scope: !23872)
!23895 = !DILocation(line: 801, column: 45, scope: !23872)
!23896 = !DILocation(line: 802, column: 10, scope: !23872)
!23897 = !DILocation(line: 802, column: 25, scope: !23872)
!23898 = !DILocation(line: 802, column: 43, scope: !23872)
!23899 = !DILocation(line: 801, column: 2, scope: !23872)
!23900 = !DILabel(scope: !23872, name: "out", file: !3, line: 804)
!23901 = !DILocation(line: 804, column: 1, scope: !23872)
!23902 = !DILocation(line: 805, column: 26, scope: !23872)
!23903 = !DILocation(line: 805, column: 41, scope: !23872)
!23904 = !DILocation(line: 805, column: 59, scope: !23872)
!23905 = !DILocation(line: 805, column: 2, scope: !23872)
!23906 = !DILocation(line: 807, column: 1, scope: !23872)
!23907 = distinct !DISubprogram(name: "mlxsw_sp_port_module_map", scope: !3, file: !3, line: 493, type: !21543, scopeLine: 494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!23908 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !23907, file: !3, line: 493, type: !10715)
!23909 = !DILocation(line: 493, column: 59, scope: !23907)
!23910 = !DILocalVariable(name: "port_mapping", scope: !23907, file: !3, line: 495, type: !10762)
!23911 = !DILocation(line: 495, column: 32, scope: !23907)
!23912 = !DILocation(line: 495, column: 48, scope: !23907)
!23913 = !DILocation(line: 495, column: 63, scope: !23907)
!23914 = !DILocalVariable(name: "mlxsw_sp", scope: !23907, file: !3, line: 496, type: !10721)
!23915 = !DILocation(line: 496, column: 19, scope: !23907)
!23916 = !DILocation(line: 496, column: 30, scope: !23907)
!23917 = !DILocation(line: 496, column: 45, scope: !23907)
!23918 = !DILocalVariable(name: "pmlp_pl", scope: !23907, file: !3, line: 497, type: !5296)
!23919 = !DILocation(line: 497, column: 7, scope: !23907)
!23920 = !DILocalVariable(name: "i", scope: !23907, file: !3, line: 498, type: !7)
!23921 = !DILocation(line: 498, column: 6, scope: !23907)
!23922 = !DILocation(line: 500, column: 22, scope: !23907)
!23923 = !DILocation(line: 500, column: 31, scope: !23907)
!23924 = !DILocation(line: 500, column: 46, scope: !23907)
!23925 = !DILocation(line: 500, column: 2, scope: !23907)
!23926 = !DILocation(line: 501, column: 27, scope: !23907)
!23927 = !DILocation(line: 501, column: 36, scope: !23907)
!23928 = !DILocation(line: 501, column: 50, scope: !23907)
!23929 = !DILocation(line: 501, column: 2, scope: !23907)
!23930 = !DILocation(line: 502, column: 9, scope: !23931)
!23931 = distinct !DILexicalBlock(scope: !23907, file: !3, line: 502, column: 2)
!23932 = !DILocation(line: 502, column: 7, scope: !23931)
!23933 = !DILocation(line: 502, column: 14, scope: !23934)
!23934 = distinct !DILexicalBlock(scope: !23931, file: !3, line: 502, column: 2)
!23935 = !DILocation(line: 502, column: 18, scope: !23934)
!23936 = !DILocation(line: 502, column: 32, scope: !23934)
!23937 = !DILocation(line: 502, column: 16, scope: !23934)
!23938 = !DILocation(line: 502, column: 2, scope: !23931)
!23939 = !DILocation(line: 503, column: 29, scope: !23940)
!23940 = distinct !DILexicalBlock(scope: !23934, file: !3, line: 502, column: 44)
!23941 = !DILocation(line: 503, column: 38, scope: !23940)
!23942 = !DILocation(line: 503, column: 41, scope: !23940)
!23943 = !DILocation(line: 503, column: 55, scope: !23940)
!23944 = !DILocation(line: 503, column: 3, scope: !23940)
!23945 = !DILocation(line: 504, column: 30, scope: !23940)
!23946 = !DILocation(line: 504, column: 39, scope: !23940)
!23947 = !DILocation(line: 504, column: 42, scope: !23940)
!23948 = !DILocation(line: 504, column: 56, scope: !23940)
!23949 = !DILocation(line: 504, column: 63, scope: !23940)
!23950 = !DILocation(line: 504, column: 61, scope: !23940)
!23951 = !DILocation(line: 504, column: 3, scope: !23940)
!23952 = !DILocation(line: 505, column: 2, scope: !23940)
!23953 = !DILocation(line: 502, column: 40, scope: !23934)
!23954 = !DILocation(line: 502, column: 2, scope: !23934)
!23955 = distinct !{!23955, !23938, !23956}
!23956 = !DILocation(line: 505, column: 2, scope: !23931)
!23957 = !DILocation(line: 507, column: 25, scope: !23907)
!23958 = !DILocation(line: 507, column: 35, scope: !23907)
!23959 = !DILocation(line: 507, column: 58, scope: !23907)
!23960 = !DILocation(line: 507, column: 9, scope: !23907)
!23961 = !DILocation(line: 507, column: 2, scope: !23907)
!23962 = distinct !DISubprogram(name: "mlxsw_sp_port_swid_set", scope: !3, file: !3, line: 352, type: !23963, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!23963 = !DISubroutineType(types: !23964)
!23964 = !{!7, !10715, !1552}
!23965 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !23962, file: !3, line: 352, type: !10715)
!23966 = !DILocation(line: 352, column: 57, scope: !23962)
!23967 = !DILocalVariable(name: "swid", arg: 2, scope: !23962, file: !3, line: 352, type: !1552)
!23968 = !DILocation(line: 352, column: 75, scope: !23962)
!23969 = !DILocalVariable(name: "mlxsw_sp", scope: !23962, file: !3, line: 354, type: !10721)
!23970 = !DILocation(line: 354, column: 19, scope: !23962)
!23971 = !DILocation(line: 354, column: 30, scope: !23962)
!23972 = !DILocation(line: 354, column: 45, scope: !23962)
!23973 = !DILocalVariable(name: "pspa_pl", scope: !23962, file: !3, line: 355, type: !6009)
!23974 = !DILocation(line: 355, column: 7, scope: !23962)
!23975 = !DILocation(line: 357, column: 22, scope: !23962)
!23976 = !DILocation(line: 357, column: 31, scope: !23962)
!23977 = !DILocation(line: 357, column: 37, scope: !23962)
!23978 = !DILocation(line: 357, column: 52, scope: !23962)
!23979 = !DILocation(line: 357, column: 2, scope: !23962)
!23980 = !DILocation(line: 358, column: 25, scope: !23962)
!23981 = !DILocation(line: 358, column: 35, scope: !23962)
!23982 = !DILocation(line: 358, column: 58, scope: !23962)
!23983 = !DILocation(line: 358, column: 9, scope: !23962)
!23984 = !DILocation(line: 358, column: 2, scope: !23962)
!23985 = distinct !DISubprogram(name: "mlxsw_sp_port_dev_addr_init", scope: !3, file: !3, line: 314, type: !21543, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!23986 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !23985, file: !3, line: 314, type: !10715)
!23987 = !DILocation(line: 314, column: 62, scope: !23985)
!23988 = !DILocalVariable(name: "mlxsw_sp", scope: !23985, file: !3, line: 316, type: !10721)
!23989 = !DILocation(line: 316, column: 19, scope: !23985)
!23990 = !DILocation(line: 316, column: 30, scope: !23985)
!23991 = !DILocation(line: 316, column: 45, scope: !23985)
!23992 = !DILocalVariable(name: "addr", scope: !23985, file: !3, line: 317, type: !7896)
!23993 = !DILocation(line: 317, column: 17, scope: !23985)
!23994 = !DILocation(line: 317, column: 24, scope: !23985)
!23995 = !DILocation(line: 317, column: 39, scope: !23985)
!23996 = !DILocation(line: 317, column: 44, scope: !23985)
!23997 = !DILocation(line: 319, column: 18, scope: !23985)
!23998 = !DILocation(line: 319, column: 24, scope: !23985)
!23999 = !DILocation(line: 319, column: 34, scope: !23985)
!24000 = !DILocation(line: 319, column: 2, scope: !23985)
!24001 = !DILocation(line: 320, column: 24, scope: !23985)
!24002 = !DILocation(line: 320, column: 39, scope: !23985)
!24003 = !DILocation(line: 320, column: 2, scope: !23985)
!24004 = !DILocation(line: 320, column: 21, scope: !23985)
!24005 = !DILocation(line: 321, column: 36, scope: !23985)
!24006 = !DILocation(line: 321, column: 51, scope: !23985)
!24007 = !DILocation(line: 321, column: 9, scope: !23985)
!24008 = !DILocation(line: 321, column: 2, scope: !23985)
!24009 = distinct !DISubprogram(name: "mlxsw_sp_port_system_port_mapping_set", scope: !3, file: !3, line: 433, type: !21543, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24010 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !24009, file: !3, line: 433, type: !10715)
!24011 = !DILocation(line: 433, column: 61, scope: !24009)
!24012 = !DILocalVariable(name: "mlxsw_sp", scope: !24009, file: !3, line: 435, type: !10721)
!24013 = !DILocation(line: 435, column: 19, scope: !24009)
!24014 = !DILocation(line: 435, column: 30, scope: !24009)
!24015 = !DILocation(line: 435, column: 45, scope: !24009)
!24016 = !DILocalVariable(name: "sspr_pl", scope: !24009, file: !3, line: 436, type: !6009)
!24017 = !DILocation(line: 436, column: 7, scope: !24009)
!24018 = !DILocation(line: 438, column: 22, scope: !24009)
!24019 = !DILocation(line: 438, column: 31, scope: !24009)
!24020 = !DILocation(line: 438, column: 46, scope: !24009)
!24021 = !DILocation(line: 438, column: 2, scope: !24009)
!24022 = !DILocation(line: 439, column: 25, scope: !24009)
!24023 = !DILocation(line: 439, column: 35, scope: !24009)
!24024 = !DILocation(line: 439, column: 58, scope: !24009)
!24025 = !DILocation(line: 439, column: 9, scope: !24009)
!24026 = !DILocation(line: 439, column: 2, scope: !24009)
!24027 = distinct !DISubprogram(name: "mlxsw_sp_port_speed_by_width_set", scope: !3, file: !3, line: 1171, type: !21543, scopeLine: 1172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24028 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !24027, file: !3, line: 1171, type: !10715)
!24029 = !DILocation(line: 1171, column: 56, scope: !24027)
!24030 = !DILocalVariable(name: "mlxsw_sp", scope: !24027, file: !3, line: 1173, type: !10721)
!24031 = !DILocation(line: 1173, column: 19, scope: !24027)
!24032 = !DILocation(line: 1173, column: 30, scope: !24027)
!24033 = !DILocation(line: 1173, column: 45, scope: !24027)
!24034 = !DILocalVariable(name: "eth_proto_cap", scope: !24027, file: !3, line: 1174, type: !862)
!24035 = !DILocation(line: 1174, column: 6, scope: !24027)
!24036 = !DILocalVariable(name: "eth_proto_admin", scope: !24027, file: !3, line: 1174, type: !862)
!24037 = !DILocation(line: 1174, column: 21, scope: !24027)
!24038 = !DILocalVariable(name: "eth_proto_oper", scope: !24027, file: !3, line: 1174, type: !862)
!24039 = !DILocation(line: 1174, column: 38, scope: !24027)
!24040 = !DILocalVariable(name: "ops", scope: !24027, file: !3, line: 1175, type: !11144)
!24041 = !DILocation(line: 1175, column: 45, scope: !24027)
!24042 = !DILocalVariable(name: "ptys_pl", scope: !24027, file: !3, line: 1176, type: !5296)
!24043 = !DILocation(line: 1176, column: 7, scope: !24027)
!24044 = !DILocalVariable(name: "eth_proto_cap_masked", scope: !24027, file: !3, line: 1177, type: !862)
!24045 = !DILocation(line: 1177, column: 6, scope: !24027)
!24046 = !DILocalVariable(name: "err", scope: !24027, file: !3, line: 1178, type: !7)
!24047 = !DILocation(line: 1178, column: 6, scope: !24027)
!24048 = !DILocation(line: 1180, column: 8, scope: !24027)
!24049 = !DILocation(line: 1180, column: 18, scope: !24027)
!24050 = !DILocation(line: 1180, column: 6, scope: !24027)
!24051 = !DILocation(line: 1185, column: 2, scope: !24027)
!24052 = !DILocation(line: 1185, column: 7, scope: !24027)
!24053 = !DILocation(line: 1185, column: 25, scope: !24027)
!24054 = !DILocation(line: 1185, column: 35, scope: !24027)
!24055 = !DILocation(line: 1185, column: 44, scope: !24027)
!24056 = !DILocation(line: 1185, column: 59, scope: !24027)
!24057 = !DILocation(line: 1187, column: 24, scope: !24027)
!24058 = !DILocation(line: 1187, column: 34, scope: !24027)
!24059 = !DILocation(line: 1187, column: 57, scope: !24027)
!24060 = !DILocation(line: 1187, column: 8, scope: !24027)
!24061 = !DILocation(line: 1187, column: 6, scope: !24027)
!24062 = !DILocation(line: 1188, column: 6, scope: !24063)
!24063 = distinct !DILexicalBlock(scope: !24027, file: !3, line: 1188, column: 6)
!24064 = !DILocation(line: 1188, column: 6, scope: !24027)
!24065 = !DILocation(line: 1189, column: 10, scope: !24063)
!24066 = !DILocation(line: 1189, column: 3, scope: !24063)
!24067 = !DILocation(line: 1191, column: 2, scope: !24027)
!24068 = !DILocation(line: 1191, column: 7, scope: !24027)
!24069 = !DILocation(line: 1191, column: 27, scope: !24027)
!24070 = !DILocation(line: 1191, column: 37, scope: !24027)
!24071 = !DILocation(line: 1193, column: 25, scope: !24027)
!24072 = !DILocation(line: 1193, column: 30, scope: !24027)
!24073 = !DILocation(line: 1193, column: 56, scope: !24027)
!24074 = !DILocation(line: 1193, column: 23, scope: !24027)
!24075 = !DILocation(line: 1194, column: 2, scope: !24027)
!24076 = !DILocation(line: 1194, column: 7, scope: !24027)
!24077 = !DILocation(line: 1194, column: 25, scope: !24027)
!24078 = !DILocation(line: 1194, column: 35, scope: !24027)
!24079 = !DILocation(line: 1194, column: 44, scope: !24027)
!24080 = !DILocation(line: 1194, column: 59, scope: !24027)
!24081 = !DILocation(line: 1195, column: 11, scope: !24027)
!24082 = !DILocation(line: 1196, column: 11, scope: !24027)
!24083 = !DILocation(line: 1196, column: 26, scope: !24027)
!24084 = !DILocation(line: 1196, column: 31, scope: !24027)
!24085 = !DILocation(line: 1197, column: 25, scope: !24027)
!24086 = !DILocation(line: 1197, column: 35, scope: !24027)
!24087 = !DILocation(line: 1197, column: 58, scope: !24027)
!24088 = !DILocation(line: 1197, column: 9, scope: !24027)
!24089 = !DILocation(line: 1197, column: 2, scope: !24027)
!24090 = !DILocation(line: 1198, column: 1, scope: !24027)
!24091 = distinct !DISubprogram(name: "mlxsw_sp_port_max_mtu_get", scope: !3, file: !3, line: 324, type: !24092, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24092 = !DISubroutineType(types: !24093)
!24093 = !{!7, !10715, !695}
!24094 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !24091, file: !3, line: 324, type: !10715)
!24095 = !DILocation(line: 324, column: 60, scope: !24091)
!24096 = !DILocalVariable(name: "p_max_mtu", arg: 2, scope: !24091, file: !3, line: 324, type: !695)
!24097 = !DILocation(line: 324, column: 80, scope: !24091)
!24098 = !DILocalVariable(name: "mlxsw_sp", scope: !24091, file: !3, line: 326, type: !10721)
!24099 = !DILocation(line: 326, column: 19, scope: !24091)
!24100 = !DILocation(line: 326, column: 30, scope: !24091)
!24101 = !DILocation(line: 326, column: 45, scope: !24091)
!24102 = !DILocalVariable(name: "pmtu_pl", scope: !24091, file: !3, line: 327, type: !428)
!24103 = !DILocation(line: 327, column: 7, scope: !24091)
!24104 = !DILocalVariable(name: "err", scope: !24091, file: !3, line: 328, type: !7)
!24105 = !DILocation(line: 328, column: 6, scope: !24091)
!24106 = !DILocation(line: 330, column: 22, scope: !24091)
!24107 = !DILocation(line: 330, column: 31, scope: !24091)
!24108 = !DILocation(line: 330, column: 46, scope: !24091)
!24109 = !DILocation(line: 330, column: 2, scope: !24091)
!24110 = !DILocation(line: 331, column: 24, scope: !24091)
!24111 = !DILocation(line: 331, column: 34, scope: !24091)
!24112 = !DILocation(line: 331, column: 57, scope: !24091)
!24113 = !DILocation(line: 331, column: 8, scope: !24091)
!24114 = !DILocation(line: 331, column: 6, scope: !24091)
!24115 = !DILocation(line: 332, column: 6, scope: !24116)
!24116 = distinct !DILexicalBlock(scope: !24091, file: !3, line: 332, column: 6)
!24117 = !DILocation(line: 332, column: 6, scope: !24091)
!24118 = !DILocation(line: 333, column: 10, scope: !24116)
!24119 = !DILocation(line: 333, column: 3, scope: !24116)
!24120 = !DILocation(line: 335, column: 42, scope: !24091)
!24121 = !DILocation(line: 335, column: 15, scope: !24091)
!24122 = !DILocation(line: 335, column: 3, scope: !24091)
!24123 = !DILocation(line: 335, column: 13, scope: !24091)
!24124 = !DILocation(line: 336, column: 2, scope: !24091)
!24125 = !DILocation(line: 337, column: 1, scope: !24091)
!24126 = distinct !DISubprogram(name: "mlxsw_sp_port_ets_init", scope: !3, file: !3, line: 1277, type: !21543, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24127 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !24126, file: !3, line: 1277, type: !10715)
!24128 = !DILocation(line: 1277, column: 57, scope: !24126)
!24129 = !DILocalVariable(name: "err", scope: !24126, file: !3, line: 1279, type: !7)
!24130 = !DILocation(line: 1279, column: 6, scope: !24126)
!24131 = !DILocalVariable(name: "i", scope: !24126, file: !3, line: 1279, type: !7)
!24132 = !DILocation(line: 1279, column: 11, scope: !24126)
!24133 = !DILocation(line: 1284, column: 30, scope: !24126)
!24134 = !DILocation(line: 1284, column: 8, scope: !24126)
!24135 = !DILocation(line: 1284, column: 6, scope: !24126)
!24136 = !DILocation(line: 1286, column: 6, scope: !24137)
!24137 = distinct !DILexicalBlock(scope: !24126, file: !3, line: 1286, column: 6)
!24138 = !DILocation(line: 1286, column: 6, scope: !24126)
!24139 = !DILocation(line: 1287, column: 10, scope: !24137)
!24140 = !DILocation(line: 1287, column: 3, scope: !24137)
!24141 = !DILocation(line: 1288, column: 9, scope: !24142)
!24142 = distinct !DILexicalBlock(scope: !24126, file: !3, line: 1288, column: 2)
!24143 = !DILocation(line: 1288, column: 7, scope: !24142)
!24144 = !DILocation(line: 1288, column: 14, scope: !24145)
!24145 = distinct !DILexicalBlock(scope: !24142, file: !3, line: 1288, column: 2)
!24146 = !DILocation(line: 1288, column: 16, scope: !24145)
!24147 = !DILocation(line: 1288, column: 2, scope: !24142)
!24148 = !DILocation(line: 1289, column: 31, scope: !24149)
!24149 = distinct !DILexicalBlock(scope: !24145, file: !3, line: 1288, column: 45)
!24150 = !DILocation(line: 1290, column: 38, scope: !24149)
!24151 = !DILocation(line: 1289, column: 9, scope: !24149)
!24152 = !DILocation(line: 1289, column: 7, scope: !24149)
!24153 = !DILocation(line: 1292, column: 7, scope: !24154)
!24154 = distinct !DILexicalBlock(scope: !24149, file: !3, line: 1292, column: 7)
!24155 = !DILocation(line: 1292, column: 7, scope: !24149)
!24156 = !DILocation(line: 1293, column: 11, scope: !24154)
!24157 = !DILocation(line: 1293, column: 4, scope: !24154)
!24158 = !DILocation(line: 1294, column: 2, scope: !24149)
!24159 = !DILocation(line: 1288, column: 41, scope: !24145)
!24160 = !DILocation(line: 1288, column: 2, scope: !24145)
!24161 = distinct !{!24161, !24147, !24162}
!24162 = !DILocation(line: 1294, column: 2, scope: !24142)
!24163 = !DILocation(line: 1295, column: 9, scope: !24164)
!24164 = distinct !DILexicalBlock(scope: !24126, file: !3, line: 1295, column: 2)
!24165 = !DILocation(line: 1295, column: 7, scope: !24164)
!24166 = !DILocation(line: 1295, column: 14, scope: !24167)
!24167 = distinct !DILexicalBlock(scope: !24164, file: !3, line: 1295, column: 2)
!24168 = !DILocation(line: 1295, column: 16, scope: !24167)
!24169 = !DILocation(line: 1295, column: 2, scope: !24164)
!24170 = !DILocation(line: 1296, column: 31, scope: !24171)
!24171 = distinct !DILexicalBlock(scope: !24167, file: !3, line: 1295, column: 45)
!24172 = !DILocation(line: 1297, column: 32, scope: !24171)
!24173 = !DILocation(line: 1297, column: 35, scope: !24171)
!24174 = !DILocation(line: 1296, column: 9, scope: !24171)
!24175 = !DILocation(line: 1296, column: 7, scope: !24171)
!24176 = !DILocation(line: 1299, column: 7, scope: !24177)
!24177 = distinct !DILexicalBlock(scope: !24171, file: !3, line: 1299, column: 7)
!24178 = !DILocation(line: 1299, column: 7, scope: !24171)
!24179 = !DILocation(line: 1300, column: 11, scope: !24177)
!24180 = !DILocation(line: 1300, column: 4, scope: !24177)
!24181 = !DILocation(line: 1302, column: 31, scope: !24171)
!24182 = !DILocation(line: 1304, column: 10, scope: !24171)
!24183 = !DILocation(line: 1304, column: 12, scope: !24171)
!24184 = !DILocation(line: 1304, column: 17, scope: !24171)
!24185 = !DILocation(line: 1302, column: 9, scope: !24171)
!24186 = !DILocation(line: 1302, column: 7, scope: !24171)
!24187 = !DILocation(line: 1306, column: 7, scope: !24188)
!24188 = distinct !DILexicalBlock(scope: !24171, file: !3, line: 1306, column: 7)
!24189 = !DILocation(line: 1306, column: 7, scope: !24171)
!24190 = !DILocation(line: 1307, column: 11, scope: !24188)
!24191 = !DILocation(line: 1307, column: 4, scope: !24188)
!24192 = !DILocation(line: 1308, column: 2, scope: !24171)
!24193 = !DILocation(line: 1295, column: 41, scope: !24167)
!24194 = !DILocation(line: 1295, column: 2, scope: !24167)
!24195 = distinct !{!24195, !24169, !24196}
!24196 = !DILocation(line: 1308, column: 2, scope: !24164)
!24197 = !DILocation(line: 1314, column: 38, scope: !24126)
!24198 = !DILocation(line: 1314, column: 8, scope: !24126)
!24199 = !DILocation(line: 1314, column: 6, scope: !24126)
!24200 = !DILocation(line: 1317, column: 6, scope: !24201)
!24201 = distinct !DILexicalBlock(scope: !24126, file: !3, line: 1317, column: 6)
!24202 = !DILocation(line: 1317, column: 6, scope: !24126)
!24203 = !DILocation(line: 1318, column: 10, scope: !24201)
!24204 = !DILocation(line: 1318, column: 3, scope: !24201)
!24205 = !DILocation(line: 1319, column: 9, scope: !24206)
!24206 = distinct !DILexicalBlock(scope: !24126, file: !3, line: 1319, column: 2)
!24207 = !DILocation(line: 1319, column: 7, scope: !24206)
!24208 = !DILocation(line: 1319, column: 14, scope: !24209)
!24209 = distinct !DILexicalBlock(scope: !24206, file: !3, line: 1319, column: 2)
!24210 = !DILocation(line: 1319, column: 16, scope: !24209)
!24211 = !DILocation(line: 1319, column: 2, scope: !24206)
!24212 = !DILocation(line: 1320, column: 39, scope: !24213)
!24213 = distinct !DILexicalBlock(scope: !24209, file: !3, line: 1319, column: 45)
!24214 = !DILocation(line: 1322, column: 11, scope: !24213)
!24215 = !DILocation(line: 1320, column: 9, scope: !24213)
!24216 = !DILocation(line: 1320, column: 7, scope: !24213)
!24217 = !DILocation(line: 1324, column: 7, scope: !24218)
!24218 = distinct !DILexicalBlock(scope: !24213, file: !3, line: 1324, column: 7)
!24219 = !DILocation(line: 1324, column: 7, scope: !24213)
!24220 = !DILocation(line: 1325, column: 11, scope: !24218)
!24221 = !DILocation(line: 1325, column: 4, scope: !24218)
!24222 = !DILocation(line: 1326, column: 2, scope: !24213)
!24223 = !DILocation(line: 1319, column: 41, scope: !24209)
!24224 = !DILocation(line: 1319, column: 2, scope: !24209)
!24225 = distinct !{!24225, !24211, !24226}
!24226 = !DILocation(line: 1326, column: 2, scope: !24206)
!24227 = !DILocation(line: 1327, column: 9, scope: !24228)
!24228 = distinct !DILexicalBlock(scope: !24126, file: !3, line: 1327, column: 2)
!24229 = !DILocation(line: 1327, column: 7, scope: !24228)
!24230 = !DILocation(line: 1327, column: 14, scope: !24231)
!24231 = distinct !DILexicalBlock(scope: !24228, file: !3, line: 1327, column: 2)
!24232 = !DILocation(line: 1327, column: 16, scope: !24231)
!24233 = !DILocation(line: 1327, column: 2, scope: !24228)
!24234 = !DILocation(line: 1328, column: 39, scope: !24235)
!24235 = distinct !DILexicalBlock(scope: !24231, file: !3, line: 1327, column: 45)
!24236 = !DILocation(line: 1330, column: 11, scope: !24235)
!24237 = !DILocation(line: 1330, column: 14, scope: !24235)
!24238 = !DILocation(line: 1328, column: 9, scope: !24235)
!24239 = !DILocation(line: 1328, column: 7, scope: !24235)
!24240 = !DILocation(line: 1332, column: 7, scope: !24241)
!24241 = distinct !DILexicalBlock(scope: !24235, file: !3, line: 1332, column: 7)
!24242 = !DILocation(line: 1332, column: 7, scope: !24235)
!24243 = !DILocation(line: 1333, column: 11, scope: !24241)
!24244 = !DILocation(line: 1333, column: 4, scope: !24241)
!24245 = !DILocation(line: 1335, column: 39, scope: !24235)
!24246 = !DILocation(line: 1337, column: 11, scope: !24235)
!24247 = !DILocation(line: 1337, column: 13, scope: !24235)
!24248 = !DILocation(line: 1337, column: 18, scope: !24235)
!24249 = !DILocation(line: 1335, column: 9, scope: !24235)
!24250 = !DILocation(line: 1335, column: 7, scope: !24235)
!24251 = !DILocation(line: 1339, column: 7, scope: !24252)
!24252 = distinct !DILexicalBlock(scope: !24235, file: !3, line: 1339, column: 7)
!24253 = !DILocation(line: 1339, column: 7, scope: !24235)
!24254 = !DILocation(line: 1340, column: 11, scope: !24252)
!24255 = !DILocation(line: 1340, column: 4, scope: !24252)
!24256 = !DILocation(line: 1341, column: 2, scope: !24235)
!24257 = !DILocation(line: 1327, column: 41, scope: !24231)
!24258 = !DILocation(line: 1327, column: 2, scope: !24231)
!24259 = distinct !{!24259, !24233, !24260}
!24260 = !DILocation(line: 1341, column: 2, scope: !24228)
!24261 = !DILocation(line: 1344, column: 9, scope: !24262)
!24262 = distinct !DILexicalBlock(scope: !24126, file: !3, line: 1344, column: 2)
!24263 = !DILocation(line: 1344, column: 7, scope: !24262)
!24264 = !DILocation(line: 1344, column: 14, scope: !24265)
!24265 = distinct !DILexicalBlock(scope: !24262, file: !3, line: 1344, column: 2)
!24266 = !DILocation(line: 1344, column: 16, scope: !24265)
!24267 = !DILocation(line: 1344, column: 2, scope: !24262)
!24268 = !DILocation(line: 1345, column: 34, scope: !24269)
!24269 = distinct !DILexicalBlock(scope: !24265, file: !3, line: 1344, column: 45)
!24270 = !DILocation(line: 1347, column: 13, scope: !24269)
!24271 = !DILocation(line: 1347, column: 15, scope: !24269)
!24272 = !DILocation(line: 1347, column: 20, scope: !24269)
!24273 = !DILocation(line: 1345, column: 9, scope: !24269)
!24274 = !DILocation(line: 1345, column: 7, scope: !24269)
!24275 = !DILocation(line: 1349, column: 7, scope: !24276)
!24276 = distinct !DILexicalBlock(scope: !24269, file: !3, line: 1349, column: 7)
!24277 = !DILocation(line: 1349, column: 7, scope: !24269)
!24278 = !DILocation(line: 1350, column: 11, scope: !24276)
!24279 = !DILocation(line: 1350, column: 4, scope: !24276)
!24280 = !DILocation(line: 1351, column: 2, scope: !24269)
!24281 = !DILocation(line: 1344, column: 41, scope: !24265)
!24282 = !DILocation(line: 1344, column: 2, scope: !24265)
!24283 = distinct !{!24283, !24267, !24284}
!24284 = !DILocation(line: 1351, column: 2, scope: !24262)
!24285 = !DILocation(line: 1354, column: 9, scope: !24286)
!24286 = distinct !DILexicalBlock(scope: !24126, file: !3, line: 1354, column: 2)
!24287 = !DILocation(line: 1354, column: 7, scope: !24286)
!24288 = !DILocation(line: 1354, column: 14, scope: !24289)
!24289 = distinct !DILexicalBlock(scope: !24286, file: !3, line: 1354, column: 2)
!24290 = !DILocation(line: 1354, column: 16, scope: !24289)
!24291 = !DILocation(line: 1354, column: 2, scope: !24286)
!24292 = !DILocation(line: 1355, column: 35, scope: !24293)
!24293 = distinct !DILexicalBlock(scope: !24289, file: !3, line: 1354, column: 45)
!24294 = !DILocation(line: 1355, column: 50, scope: !24293)
!24295 = !DILocation(line: 1355, column: 9, scope: !24293)
!24296 = !DILocation(line: 1355, column: 7, scope: !24293)
!24297 = !DILocation(line: 1356, column: 7, scope: !24298)
!24298 = distinct !DILexicalBlock(scope: !24293, file: !3, line: 1356, column: 7)
!24299 = !DILocation(line: 1356, column: 7, scope: !24293)
!24300 = !DILocation(line: 1357, column: 11, scope: !24298)
!24301 = !DILocation(line: 1357, column: 4, scope: !24298)
!24302 = !DILocation(line: 1358, column: 2, scope: !24293)
!24303 = !DILocation(line: 1354, column: 41, scope: !24289)
!24304 = !DILocation(line: 1354, column: 2, scope: !24289)
!24305 = distinct !{!24305, !24291, !24306}
!24306 = !DILocation(line: 1358, column: 2, scope: !24286)
!24307 = !DILocation(line: 1360, column: 2, scope: !24126)
!24308 = !DILocation(line: 1361, column: 1, scope: !24126)
!24309 = distinct !DISubprogram(name: "mlxsw_sp_port_tc_mc_mode_set", scope: !3, file: !3, line: 1363, type: !13080, scopeLine: 1365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24310 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !24309, file: !3, line: 1363, type: !10715)
!24311 = !DILocation(line: 1363, column: 63, scope: !24309)
!24312 = !DILocalVariable(name: "enable", arg: 2, scope: !24309, file: !3, line: 1364, type: !696)
!24313 = !DILocation(line: 1364, column: 11, scope: !24309)
!24314 = !DILocalVariable(name: "mlxsw_sp", scope: !24309, file: !3, line: 1366, type: !10721)
!24315 = !DILocation(line: 1366, column: 19, scope: !24309)
!24316 = !DILocation(line: 1366, column: 30, scope: !24309)
!24317 = !DILocation(line: 1366, column: 45, scope: !24309)
!24318 = !DILocalVariable(name: "qtctm_pl", scope: !24309, file: !3, line: 1367, type: !6009)
!24319 = !DILocation(line: 1367, column: 7, scope: !24309)
!24320 = !DILocation(line: 1369, column: 23, scope: !24309)
!24321 = !DILocation(line: 1369, column: 33, scope: !24309)
!24322 = !DILocation(line: 1369, column: 48, scope: !24309)
!24323 = !DILocation(line: 1369, column: 60, scope: !24309)
!24324 = !DILocation(line: 1369, column: 2, scope: !24309)
!24325 = !DILocation(line: 1370, column: 25, scope: !24309)
!24326 = !DILocation(line: 1370, column: 35, scope: !24309)
!24327 = !DILocation(line: 1370, column: 59, scope: !24309)
!24328 = !DILocation(line: 1370, column: 9, scope: !24309)
!24329 = !DILocation(line: 1370, column: 2, scope: !24309)
!24330 = distinct !DISubprogram(name: "mlxsw_sp_port_dcb_init", scope: !10118, file: !10118, line: 607, type: !21543, scopeLine: 608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24331 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !24330, file: !10118, line: 607, type: !10715)
!24332 = !DILocation(line: 607, column: 64, scope: !24330)
!24333 = !DILocation(line: 609, column: 2, scope: !24330)
!24334 = distinct !DISubprogram(name: "mlxsw_sp_port_overheat_init_val_set", scope: !3, file: !3, line: 1373, type: !21543, scopeLine: 1374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24335 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !24334, file: !3, line: 1373, type: !10715)
!24336 = !DILocation(line: 1373, column: 70, scope: !24334)
!24337 = !DILocalVariable(name: "mlxsw_sp", scope: !24334, file: !3, line: 1375, type: !10721)
!24338 = !DILocation(line: 1375, column: 19, scope: !24334)
!24339 = !DILocation(line: 1375, column: 30, scope: !24334)
!24340 = !DILocation(line: 1375, column: 45, scope: !24334)
!24341 = !DILocalVariable(name: "module", scope: !24334, file: !3, line: 1376, type: !1552)
!24342 = !DILocation(line: 1376, column: 5, scope: !24334)
!24343 = !DILocation(line: 1376, column: 14, scope: !24334)
!24344 = !DILocation(line: 1376, column: 29, scope: !24334)
!24345 = !DILocation(line: 1376, column: 37, scope: !24334)
!24346 = !DILocalVariable(name: "overheat_counter", scope: !24334, file: !3, line: 1377, type: !492)
!24347 = !DILocation(line: 1377, column: 6, scope: !24334)
!24348 = !DILocalVariable(name: "err", scope: !24334, file: !3, line: 1378, type: !7)
!24349 = !DILocation(line: 1378, column: 6, scope: !24334)
!24350 = !DILocation(line: 1380, column: 46, scope: !24334)
!24351 = !DILocation(line: 1380, column: 56, scope: !24334)
!24352 = !DILocation(line: 1380, column: 62, scope: !24334)
!24353 = !DILocation(line: 1380, column: 8, scope: !24334)
!24354 = !DILocation(line: 1380, column: 6, scope: !24334)
!24355 = !DILocation(line: 1382, column: 6, scope: !24356)
!24356 = distinct !DILexicalBlock(scope: !24334, file: !3, line: 1382, column: 6)
!24357 = !DILocation(line: 1382, column: 6, scope: !24334)
!24358 = !DILocation(line: 1383, column: 10, scope: !24356)
!24359 = !DILocation(line: 1383, column: 3, scope: !24356)
!24360 = !DILocation(line: 1385, column: 47, scope: !24334)
!24361 = !DILocation(line: 1385, column: 2, scope: !24334)
!24362 = !DILocation(line: 1385, column: 17, scope: !24334)
!24363 = !DILocation(line: 1385, column: 45, scope: !24334)
!24364 = !DILocation(line: 1386, column: 2, scope: !24334)
!24365 = !DILocation(line: 1387, column: 1, scope: !24334)
!24366 = distinct !DISubprogram(name: "mlxsw_sp_port_dcb_fini", scope: !10118, file: !10118, line: 611, type: !14854, scopeLine: 612, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24367 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !24366, file: !10118, line: 611, type: !10715)
!24368 = !DILocation(line: 611, column: 65, scope: !24366)
!24369 = !DILocation(line: 612, column: 2, scope: !24366)
!24370 = distinct !DISubprogram(name: "mlxsw_sp_port_module_unmap", scope: !3, file: !3, line: 510, type: !21543, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24371 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !24370, file: !3, line: 510, type: !10715)
!24372 = !DILocation(line: 510, column: 61, scope: !24370)
!24373 = !DILocalVariable(name: "mlxsw_sp", scope: !24370, file: !3, line: 512, type: !10721)
!24374 = !DILocation(line: 512, column: 19, scope: !24370)
!24375 = !DILocation(line: 512, column: 30, scope: !24370)
!24376 = !DILocation(line: 512, column: 45, scope: !24370)
!24377 = !DILocalVariable(name: "pmlp_pl", scope: !24370, file: !3, line: 513, type: !5296)
!24378 = !DILocation(line: 513, column: 7, scope: !24370)
!24379 = !DILocation(line: 515, column: 22, scope: !24370)
!24380 = !DILocation(line: 515, column: 31, scope: !24370)
!24381 = !DILocation(line: 515, column: 46, scope: !24370)
!24382 = !DILocation(line: 515, column: 2, scope: !24370)
!24383 = !DILocation(line: 516, column: 27, scope: !24370)
!24384 = !DILocation(line: 516, column: 2, scope: !24370)
!24385 = !DILocation(line: 517, column: 25, scope: !24370)
!24386 = !DILocation(line: 517, column: 35, scope: !24370)
!24387 = !DILocation(line: 517, column: 58, scope: !24370)
!24388 = !DILocation(line: 517, column: 9, scope: !24370)
!24389 = !DILocation(line: 517, column: 2, scope: !24370)
!24390 = distinct !DISubprogram(name: "write_pnet", scope: !2118, file: !2118, line: 320, type: !24391, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24391 = !DISubroutineType(types: !24392)
!24392 = !{null, !24393, !2116}
!24393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3045, size: 64)
!24394 = !DILocalVariable(name: "pnet", arg: 1, scope: !24390, file: !2118, line: 320, type: !24393)
!24395 = !DILocation(line: 320, column: 47, scope: !24390)
!24396 = !DILocalVariable(name: "net", arg: 2, scope: !24390, file: !2118, line: 320, type: !2116)
!24397 = !DILocation(line: 320, column: 65, scope: !24390)
!24398 = !DILocation(line: 323, column: 14, scope: !24390)
!24399 = !DILocation(line: 323, column: 2, scope: !24390)
!24400 = !DILocation(line: 323, column: 8, scope: !24390)
!24401 = !DILocation(line: 323, column: 12, scope: !24390)
!24402 = !DILocation(line: 325, column: 1, scope: !24390)
!24403 = distinct !DISubprogram(name: "netif_carrier_ok", scope: !6, file: !6, line: 3976, type: !14728, scopeLine: 3977, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24404 = !DILocalVariable(name: "dev", arg: 1, scope: !24403, file: !6, line: 3976, type: !3023)
!24405 = !DILocation(line: 3976, column: 62, scope: !24403)
!24406 = !DILocation(line: 3978, column: 44, scope: !24403)
!24407 = !DILocation(line: 3978, column: 49, scope: !24403)
!24408 = !DILocation(line: 3978, column: 10, scope: !24403)
!24409 = !DILocation(line: 3978, column: 9, scope: !24403)
!24410 = !DILocation(line: 3978, column: 2, scope: !24403)
!24411 = distinct !DISubprogram(name: "mlxsw_sp_port_get_hw_stats", scope: !3, file: !3, line: 706, type: !24412, scopeLine: 708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24412 = !DISubroutineType(types: !24413)
!24413 = !{!7, !451, !8050}
!24414 = !DILocalVariable(name: "dev", arg: 1, scope: !24411, file: !3, line: 706, type: !451)
!24415 = !DILocation(line: 706, column: 58, scope: !24411)
!24416 = !DILocalVariable(name: "stats", arg: 2, scope: !24411, file: !3, line: 707, type: !8050)
!24417 = !DILocation(line: 707, column: 37, scope: !24411)
!24418 = !DILocalVariable(name: "ppcnt_pl", scope: !24411, file: !3, line: 709, type: !24419)
!24419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 2048, elements: !24420)
!24420 = !{!24421}
!24421 = !DISubrange(count: 256)
!24422 = !DILocation(line: 709, column: 7, scope: !24411)
!24423 = !DILocalVariable(name: "err", scope: !24411, file: !3, line: 710, type: !7)
!24424 = !DILocation(line: 710, column: 6, scope: !24411)
!24425 = !DILocation(line: 712, column: 36, scope: !24411)
!24426 = !DILocation(line: 713, column: 11, scope: !24411)
!24427 = !DILocation(line: 712, column: 8, scope: !24411)
!24428 = !DILocation(line: 712, column: 6, scope: !24411)
!24429 = !DILocation(line: 714, column: 6, scope: !24430)
!24430 = distinct !DILexicalBlock(scope: !24411, file: !3, line: 714, column: 6)
!24431 = !DILocation(line: 714, column: 6, scope: !24411)
!24432 = !DILocation(line: 715, column: 3, scope: !24430)
!24433 = !DILocation(line: 718, column: 47, scope: !24411)
!24434 = !DILocation(line: 718, column: 3, scope: !24411)
!24435 = !DILocation(line: 717, column: 2, scope: !24411)
!24436 = !DILocation(line: 717, column: 9, scope: !24411)
!24437 = !DILocation(line: 717, column: 20, scope: !24411)
!24438 = !DILocation(line: 720, column: 44, scope: !24411)
!24439 = !DILocation(line: 720, column: 3, scope: !24411)
!24440 = !DILocation(line: 719, column: 2, scope: !24411)
!24441 = !DILocation(line: 719, column: 9, scope: !24411)
!24442 = !DILocation(line: 719, column: 20, scope: !24411)
!24443 = !DILocation(line: 722, column: 47, scope: !24411)
!24444 = !DILocation(line: 722, column: 3, scope: !24411)
!24445 = !DILocation(line: 721, column: 2, scope: !24411)
!24446 = !DILocation(line: 721, column: 9, scope: !24411)
!24447 = !DILocation(line: 721, column: 18, scope: !24411)
!24448 = !DILocation(line: 724, column: 44, scope: !24411)
!24449 = !DILocation(line: 724, column: 3, scope: !24411)
!24450 = !DILocation(line: 723, column: 2, scope: !24411)
!24451 = !DILocation(line: 723, column: 9, scope: !24411)
!24452 = !DILocation(line: 723, column: 18, scope: !24411)
!24453 = !DILocation(line: 726, column: 54, scope: !24411)
!24454 = !DILocation(line: 726, column: 3, scope: !24411)
!24455 = !DILocation(line: 725, column: 2, scope: !24411)
!24456 = !DILocation(line: 725, column: 9, scope: !24411)
!24457 = !DILocation(line: 725, column: 19, scope: !24411)
!24458 = !DILocation(line: 729, column: 53, scope: !24411)
!24459 = !DILocation(line: 729, column: 3, scope: !24411)
!24460 = !DILocation(line: 728, column: 2, scope: !24411)
!24461 = !DILocation(line: 728, column: 9, scope: !24411)
!24462 = !DILocation(line: 728, column: 23, scope: !24411)
!24463 = !DILocation(line: 731, column: 42, scope: !24411)
!24464 = !DILocation(line: 731, column: 3, scope: !24411)
!24465 = !DILocation(line: 730, column: 2, scope: !24411)
!24466 = !DILocation(line: 730, column: 9, scope: !24411)
!24467 = !DILocation(line: 730, column: 25, scope: !24411)
!24468 = !DILocation(line: 734, column: 48, scope: !24411)
!24469 = !DILocation(line: 734, column: 3, scope: !24411)
!24470 = !DILocation(line: 735, column: 51, scope: !24411)
!24471 = !DILocation(line: 735, column: 3, scope: !24411)
!24472 = !DILocation(line: 734, column: 58, scope: !24411)
!24473 = !DILocation(line: 736, column: 47, scope: !24411)
!24474 = !DILocation(line: 736, column: 3, scope: !24411)
!24475 = !DILocation(line: 735, column: 61, scope: !24411)
!24476 = !DILocation(line: 733, column: 2, scope: !24411)
!24477 = !DILocation(line: 733, column: 9, scope: !24411)
!24478 = !DILocation(line: 733, column: 26, scope: !24411)
!24479 = !DILocation(line: 738, column: 22, scope: !24411)
!24480 = !DILocation(line: 738, column: 29, scope: !24411)
!24481 = !DILocation(line: 739, column: 3, scope: !24411)
!24482 = !DILocation(line: 739, column: 10, scope: !24411)
!24483 = !DILocation(line: 738, column: 43, scope: !24411)
!24484 = !DILocation(line: 739, column: 28, scope: !24411)
!24485 = !DILocation(line: 739, column: 35, scope: !24411)
!24486 = !DILocation(line: 739, column: 26, scope: !24411)
!24487 = !DILocation(line: 738, column: 2, scope: !24411)
!24488 = !DILocation(line: 738, column: 9, scope: !24411)
!24489 = !DILocation(line: 738, column: 19, scope: !24411)
!24490 = !DILabel(scope: !24411, name: "out", file: !3, line: 741)
!24491 = !DILocation(line: 741, column: 1, scope: !24411)
!24492 = !DILocation(line: 742, column: 9, scope: !24411)
!24493 = !DILocation(line: 742, column: 2, scope: !24411)
!24494 = distinct !DISubprogram(name: "mlxsw_sp_port_get_hw_xstats", scope: !3, file: !3, line: 746, type: !24495, scopeLine: 748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24495 = !DISubroutineType(types: !24496)
!24496 = !{null, !451, !24497}
!24497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11375, size: 64)
!24498 = !DILocalVariable(name: "dev", arg: 1, scope: !24494, file: !3, line: 746, type: !451)
!24499 = !DILocation(line: 746, column: 48, scope: !24494)
!24500 = !DILocalVariable(name: "xstats", arg: 2, scope: !24494, file: !3, line: 747, type: !24497)
!24501 = !DILocation(line: 747, column: 37, scope: !24494)
!24502 = !DILocalVariable(name: "ppcnt_pl", scope: !24494, file: !3, line: 749, type: !24419)
!24503 = !DILocation(line: 749, column: 7, scope: !24494)
!24504 = !DILocalVariable(name: "err", scope: !24494, file: !3, line: 750, type: !7)
!24505 = !DILocation(line: 750, column: 6, scope: !24494)
!24506 = !DILocalVariable(name: "i", scope: !24494, file: !3, line: 750, type: !7)
!24507 = !DILocation(line: 750, column: 11, scope: !24494)
!24508 = !DILocation(line: 752, column: 36, scope: !24494)
!24509 = !DILocation(line: 753, column: 8, scope: !24494)
!24510 = !DILocation(line: 752, column: 8, scope: !24494)
!24511 = !DILocation(line: 752, column: 6, scope: !24494)
!24512 = !DILocation(line: 754, column: 7, scope: !24513)
!24513 = distinct !DILexicalBlock(scope: !24494, file: !3, line: 754, column: 6)
!24514 = !DILocation(line: 754, column: 6, scope: !24494)
!24515 = !DILocation(line: 755, column: 48, scope: !24513)
!24516 = !DILocation(line: 755, column: 17, scope: !24513)
!24517 = !DILocation(line: 755, column: 3, scope: !24513)
!24518 = !DILocation(line: 755, column: 11, scope: !24513)
!24519 = !DILocation(line: 755, column: 15, scope: !24513)
!24520 = !DILocation(line: 757, column: 9, scope: !24521)
!24521 = distinct !DILexicalBlock(scope: !24494, file: !3, line: 757, column: 2)
!24522 = !DILocation(line: 757, column: 7, scope: !24521)
!24523 = !DILocation(line: 757, column: 14, scope: !24524)
!24524 = distinct !DILexicalBlock(scope: !24521, file: !3, line: 757, column: 2)
!24525 = !DILocation(line: 757, column: 16, scope: !24524)
!24526 = !DILocation(line: 757, column: 2, scope: !24521)
!24527 = !DILocation(line: 758, column: 37, scope: !24528)
!24528 = distinct !DILexicalBlock(scope: !24524, file: !3, line: 757, column: 37)
!24529 = !DILocation(line: 760, column: 9, scope: !24528)
!24530 = !DILocation(line: 760, column: 12, scope: !24528)
!24531 = !DILocation(line: 758, column: 9, scope: !24528)
!24532 = !DILocation(line: 758, column: 7, scope: !24528)
!24533 = !DILocation(line: 761, column: 8, scope: !24534)
!24534 = distinct !DILexicalBlock(scope: !24528, file: !3, line: 761, column: 7)
!24535 = !DILocation(line: 761, column: 7, scope: !24528)
!24536 = !DILocation(line: 763, column: 38, scope: !24534)
!24537 = !DILocation(line: 763, column: 5, scope: !24534)
!24538 = !DILocation(line: 762, column: 4, scope: !24534)
!24539 = !DILocation(line: 762, column: 12, scope: !24534)
!24540 = !DILocation(line: 762, column: 22, scope: !24534)
!24541 = !DILocation(line: 762, column: 25, scope: !24534)
!24542 = !DILocation(line: 765, column: 37, scope: !24528)
!24543 = !DILocation(line: 766, column: 9, scope: !24528)
!24544 = !DILocation(line: 766, column: 12, scope: !24528)
!24545 = !DILocation(line: 765, column: 9, scope: !24528)
!24546 = !DILocation(line: 765, column: 7, scope: !24528)
!24547 = !DILocation(line: 767, column: 7, scope: !24548)
!24548 = distinct !DILexicalBlock(scope: !24528, file: !3, line: 767, column: 7)
!24549 = !DILocation(line: 767, column: 7, scope: !24528)
!24550 = !DILocation(line: 768, column: 4, scope: !24548)
!24551 = !DILocation(line: 771, column: 42, scope: !24528)
!24552 = !DILocation(line: 771, column: 4, scope: !24528)
!24553 = !DILocation(line: 770, column: 3, scope: !24528)
!24554 = !DILocation(line: 770, column: 11, scope: !24528)
!24555 = !DILocation(line: 770, column: 19, scope: !24528)
!24556 = !DILocation(line: 770, column: 22, scope: !24528)
!24557 = !DILocation(line: 773, column: 48, scope: !24528)
!24558 = !DILocation(line: 773, column: 4, scope: !24528)
!24559 = !DILocation(line: 772, column: 3, scope: !24528)
!24560 = !DILocation(line: 772, column: 11, scope: !24528)
!24561 = !DILocation(line: 772, column: 21, scope: !24528)
!24562 = !DILocation(line: 772, column: 24, scope: !24528)
!24563 = !DILocation(line: 774, column: 2, scope: !24528)
!24564 = !DILocation(line: 757, column: 33, scope: !24524)
!24565 = !DILocation(line: 757, column: 2, scope: !24524)
!24566 = distinct !{!24566, !24526, !24567}
!24567 = !DILocation(line: 774, column: 2, scope: !24521)
!24568 = !DILocation(line: 776, column: 9, scope: !24569)
!24569 = distinct !DILexicalBlock(scope: !24494, file: !3, line: 776, column: 2)
!24570 = !DILocation(line: 776, column: 7, scope: !24569)
!24571 = !DILocation(line: 776, column: 14, scope: !24572)
!24572 = distinct !DILexicalBlock(scope: !24569, file: !3, line: 776, column: 2)
!24573 = !DILocation(line: 776, column: 16, scope: !24572)
!24574 = !DILocation(line: 776, column: 2, scope: !24569)
!24575 = !DILocation(line: 777, column: 37, scope: !24576)
!24576 = distinct !DILexicalBlock(scope: !24572, file: !3, line: 776, column: 45)
!24577 = !DILocation(line: 778, column: 9, scope: !24576)
!24578 = !DILocation(line: 778, column: 12, scope: !24576)
!24579 = !DILocation(line: 777, column: 9, scope: !24576)
!24580 = !DILocation(line: 777, column: 7, scope: !24576)
!24581 = !DILocation(line: 779, column: 7, scope: !24582)
!24582 = distinct !DILexicalBlock(scope: !24576, file: !3, line: 779, column: 7)
!24583 = !DILocation(line: 779, column: 7, scope: !24576)
!24584 = !DILocation(line: 780, column: 4, scope: !24582)
!24585 = !DILocation(line: 782, column: 57, scope: !24576)
!24586 = !DILocation(line: 782, column: 27, scope: !24576)
!24587 = !DILocation(line: 782, column: 3, scope: !24576)
!24588 = !DILocation(line: 782, column: 11, scope: !24576)
!24589 = !DILocation(line: 782, column: 22, scope: !24576)
!24590 = !DILocation(line: 782, column: 25, scope: !24576)
!24591 = !DILocation(line: 783, column: 55, scope: !24576)
!24592 = !DILocation(line: 783, column: 25, scope: !24576)
!24593 = !DILocation(line: 783, column: 3, scope: !24576)
!24594 = !DILocation(line: 783, column: 11, scope: !24576)
!24595 = !DILocation(line: 783, column: 20, scope: !24576)
!24596 = !DILocation(line: 783, column: 23, scope: !24576)
!24597 = !DILocation(line: 784, column: 2, scope: !24576)
!24598 = !DILocation(line: 776, column: 41, scope: !24572)
!24599 = !DILocation(line: 776, column: 2, scope: !24572)
!24600 = distinct !{!24600, !24574, !24601}
!24601 = !DILocation(line: 784, column: 2, scope: !24569)
!24602 = !DILocation(line: 785, column: 1, scope: !24494)
!24603 = distinct !DISubprogram(name: "mlxsw_reg_ppcnt_a_frames_transmitted_ok_get", scope: !10113, file: !10113, line: 4732, type: !12648, scopeLine: 4732, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24604 = !DILocalVariable(name: "buf", arg: 1, scope: !24603, file: !10113, line: 4732, type: !453)
!24605 = !DILocation(line: 4732, column: 1, scope: !24603)
!24606 = distinct !DISubprogram(name: "mlxsw_reg_ppcnt_a_frames_received_ok_get", scope: !10113, file: !10113, line: 4738, type: !12648, scopeLine: 4738, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24607 = !DILocalVariable(name: "buf", arg: 1, scope: !24606, file: !10113, line: 4738, type: !453)
!24608 = !DILocation(line: 4738, column: 1, scope: !24606)
!24609 = distinct !DISubprogram(name: "mlxsw_reg_ppcnt_a_octets_transmitted_ok_get", scope: !10113, file: !10113, line: 4756, type: !12648, scopeLine: 4756, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24610 = !DILocalVariable(name: "buf", arg: 1, scope: !24609, file: !10113, line: 4756, type: !453)
!24611 = !DILocation(line: 4756, column: 1, scope: !24609)
!24612 = distinct !DISubprogram(name: "mlxsw_reg_ppcnt_a_octets_received_ok_get", scope: !10113, file: !10113, line: 4762, type: !12648, scopeLine: 4762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24613 = !DILocalVariable(name: "buf", arg: 1, scope: !24612, file: !10113, line: 4762, type: !453)
!24614 = !DILocation(line: 4762, column: 1, scope: !24612)
!24615 = distinct !DISubprogram(name: "mlxsw_reg_ppcnt_a_multicast_frames_received_ok_get", scope: !10113, file: !10113, line: 4780, type: !12648, scopeLine: 4780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24616 = !DILocalVariable(name: "buf", arg: 1, scope: !24615, file: !10113, line: 4780, type: !453)
!24617 = !DILocation(line: 4780, column: 1, scope: !24615)
!24618 = distinct !DISubprogram(name: "mlxsw_reg_ppcnt_a_frame_check_sequence_errors_get", scope: !10113, file: !10113, line: 4744, type: !12648, scopeLine: 4744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24619 = !DILocalVariable(name: "buf", arg: 1, scope: !24618, file: !10113, line: 4744, type: !453)
!24620 = !DILocation(line: 4744, column: 1, scope: !24618)
!24621 = distinct !DISubprogram(name: "mlxsw_reg_ppcnt_a_alignment_errors_get", scope: !10113, file: !10113, line: 4750, type: !12648, scopeLine: 4750, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24622 = !DILocalVariable(name: "buf", arg: 1, scope: !24621, file: !10113, line: 4750, type: !453)
!24623 = !DILocation(line: 4750, column: 1, scope: !24621)
!24624 = distinct !DISubprogram(name: "mlxsw_reg_ppcnt_a_in_range_length_errors_get", scope: !10113, file: !10113, line: 4792, type: !12648, scopeLine: 4792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24625 = !DILocalVariable(name: "buf", arg: 1, scope: !24624, file: !10113, line: 4792, type: !453)
!24626 = !DILocation(line: 4792, column: 1, scope: !24624)
!24627 = distinct !DISubprogram(name: "mlxsw_reg_ppcnt_a_out_of_range_length_field_get", scope: !10113, file: !10113, line: 4798, type: !12648, scopeLine: 4798, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24628 = !DILocalVariable(name: "buf", arg: 1, scope: !24627, file: !10113, line: 4798, type: !453)
!24629 = !DILocation(line: 4798, column: 1, scope: !24627)
!24630 = distinct !DISubprogram(name: "mlxsw_reg_ppcnt_a_frame_too_long_errors_get", scope: !10113, file: !10113, line: 4804, type: !12648, scopeLine: 4804, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24631 = !DILocalVariable(name: "buf", arg: 1, scope: !24630, file: !10113, line: 4804, type: !453)
!24632 = !DILocation(line: 4804, column: 1, scope: !24630)
!24633 = distinct !DISubprogram(name: "mlxsw_reg_ppcnt_ecn_marked_get", scope: !10113, file: !10113, line: 4974, type: !12648, scopeLine: 4974, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24634 = !DILocalVariable(name: "buf", arg: 1, scope: !24633, file: !10113, line: 4974, type: !453)
!24635 = !DILocation(line: 4974, column: 1, scope: !24633)
!24636 = distinct !DISubprogram(name: "mlxsw_reg_ppcnt_wred_discard_get", scope: !10113, file: !10113, line: 5131, type: !12648, scopeLine: 5131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24637 = !DILocalVariable(name: "buf", arg: 1, scope: !24636, file: !10113, line: 5131, type: !453)
!24638 = !DILocation(line: 5131, column: 1, scope: !24636)
!24639 = distinct !DISubprogram(name: "mlxsw_reg_ppcnt_tc_transmit_queue_get", scope: !10113, file: !10113, line: 5115, type: !12648, scopeLine: 5115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24640 = !DILocalVariable(name: "buf", arg: 1, scope: !24639, file: !10113, line: 5115, type: !453)
!24641 = !DILocation(line: 5115, column: 1, scope: !24639)
!24642 = distinct !DISubprogram(name: "mlxsw_reg_ppcnt_tc_no_buffer_discard_uc_get", scope: !10113, file: !10113, line: 5123, type: !12648, scopeLine: 5123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24643 = !DILocalVariable(name: "buf", arg: 1, scope: !24642, file: !10113, line: 5123, type: !453)
!24644 = !DILocation(line: 5123, column: 1, scope: !24642)
!24645 = distinct !DISubprogram(name: "mlxsw_reg_ppcnt_tx_frames_get", scope: !10113, file: !10113, line: 5074, type: !12648, scopeLine: 5074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24646 = !DILocalVariable(name: "buf", arg: 1, scope: !24645, file: !10113, line: 5074, type: !453)
!24647 = !DILocation(line: 5074, column: 1, scope: !24645)
!24648 = distinct !DISubprogram(name: "mlxsw_reg_ppcnt_tx_octets_get", scope: !10113, file: !10113, line: 5068, type: !12648, scopeLine: 5068, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24649 = !DILocalVariable(name: "buf", arg: 1, scope: !24648, file: !10113, line: 5068, type: !453)
!24650 = !DILocation(line: 5068, column: 1, scope: !24648)
!24651 = distinct !DISubprogram(name: "mlxsw_reg_pmlp_width_set", scope: !10113, file: !10113, line: 4047, type: !14426, scopeLine: 4047, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24652 = !DILocalVariable(name: "buf", arg: 1, scope: !24651, file: !10113, line: 4047, type: !733)
!24653 = !DILocation(line: 4047, column: 1, scope: !24651)
!24654 = !DILocalVariable(name: "val", arg: 2, scope: !24651, file: !10113, line: 4047, type: !862)
!24655 = distinct !DISubprogram(name: "mlxsw_reg_pmlp_module_set", scope: !10113, file: !10113, line: 4053, type: !15436, scopeLine: 4053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24656 = !DILocalVariable(name: "buf", arg: 1, scope: !24655, file: !10113, line: 4053, type: !733)
!24657 = !DILocation(line: 4053, column: 1, scope: !24655)
!24658 = !DILocalVariable(name: "index", arg: 2, scope: !24655, file: !10113, line: 4053, type: !633)
!24659 = !DILocalVariable(name: "val", arg: 3, scope: !24655, file: !10113, line: 4053, type: !862)
!24660 = distinct !DISubprogram(name: "mlxsw_reg_pmlp_tx_lane_set", scope: !10113, file: !10113, line: 4059, type: !15436, scopeLine: 4059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24661 = !DILocalVariable(name: "buf", arg: 1, scope: !24660, file: !10113, line: 4059, type: !733)
!24662 = !DILocation(line: 4059, column: 1, scope: !24660)
!24663 = !DILocalVariable(name: "index", arg: 2, scope: !24660, file: !10113, line: 4059, type: !633)
!24664 = !DILocalVariable(name: "val", arg: 3, scope: !24660, file: !10113, line: 4059, type: !862)
!24665 = distinct !DISubprogram(name: "mlxsw_reg_pspa_pack", scope: !10113, file: !10113, line: 5400, type: !22168, scopeLine: 5401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24666 = !DILocalVariable(name: "payload", arg: 1, scope: !24665, file: !10113, line: 5400, type: !733)
!24667 = !DILocation(line: 5400, column: 46, scope: !24665)
!24668 = !DILocalVariable(name: "swid", arg: 2, scope: !24665, file: !10113, line: 5400, type: !1552)
!24669 = !DILocation(line: 5400, column: 58, scope: !24665)
!24670 = !DILocalVariable(name: "local_port", arg: 3, scope: !24665, file: !10113, line: 5400, type: !1552)
!24671 = !DILocation(line: 5400, column: 67, scope: !24665)
!24672 = !DILocation(line: 5402, column: 2, scope: !24665)
!24673 = !DILocation(line: 5403, column: 26, scope: !24665)
!24674 = !DILocation(line: 5403, column: 35, scope: !24665)
!24675 = !DILocation(line: 5403, column: 2, scope: !24665)
!24676 = !DILocation(line: 5404, column: 32, scope: !24665)
!24677 = !DILocation(line: 5404, column: 41, scope: !24665)
!24678 = !DILocation(line: 5404, column: 2, scope: !24665)
!24679 = !DILocation(line: 5405, column: 30, scope: !24665)
!24680 = !DILocation(line: 5405, column: 2, scope: !24665)
!24681 = !DILocation(line: 5406, column: 1, scope: !24665)
!24682 = distinct !DISubprogram(name: "mlxsw_reg_pspa_swid_set", scope: !10113, file: !10113, line: 5385, type: !14426, scopeLine: 5385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24683 = !DILocalVariable(name: "buf", arg: 1, scope: !24682, file: !10113, line: 5385, type: !733)
!24684 = !DILocation(line: 5385, column: 1, scope: !24682)
!24685 = !DILocalVariable(name: "val", arg: 2, scope: !24682, file: !10113, line: 5385, type: !862)
!24686 = distinct !DISubprogram(name: "mlxsw_reg_pspa_local_port_set", scope: !10113, file: !10113, line: 5391, type: !14426, scopeLine: 5391, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24687 = !DILocalVariable(name: "buf", arg: 1, scope: !24686, file: !10113, line: 5391, type: !733)
!24688 = !DILocation(line: 5391, column: 1, scope: !24686)
!24689 = !DILocalVariable(name: "val", arg: 2, scope: !24686, file: !10113, line: 5391, type: !862)
!24690 = distinct !DISubprogram(name: "mlxsw_reg_pspa_sub_port_set", scope: !10113, file: !10113, line: 5398, type: !14426, scopeLine: 5398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24691 = !DILocalVariable(name: "buf", arg: 1, scope: !24690, file: !10113, line: 5398, type: !733)
!24692 = !DILocation(line: 5398, column: 1, scope: !24690)
!24693 = !DILocalVariable(name: "val", arg: 2, scope: !24690, file: !10113, line: 5398, type: !862)
!24694 = distinct !DISubprogram(name: "ether_addr_copy", scope: !16379, file: !16379, line: 287, type: !24695, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24695 = !DISubroutineType(types: !24696)
!24696 = !{null, !8100, !8658}
!24697 = !DILocalVariable(name: "dst", arg: 1, scope: !24694, file: !16379, line: 287, type: !8100)
!24698 = !DILocation(line: 287, column: 40, scope: !24694)
!24699 = !DILocalVariable(name: "src", arg: 2, scope: !24694, file: !16379, line: 287, type: !8658)
!24700 = !DILocation(line: 287, column: 55, scope: !24694)
!24701 = !DILocation(line: 290, column: 30, scope: !24694)
!24702 = !DILocation(line: 290, column: 16, scope: !24694)
!24703 = !DILocation(line: 290, column: 10, scope: !24694)
!24704 = !DILocation(line: 290, column: 2, scope: !24694)
!24705 = !DILocation(line: 290, column: 14, scope: !24694)
!24706 = !DILocation(line: 291, column: 37, scope: !24694)
!24707 = !DILocation(line: 291, column: 41, scope: !24694)
!24708 = !DILocation(line: 291, column: 22, scope: !24694)
!24709 = !DILocation(line: 291, column: 11, scope: !24694)
!24710 = !DILocation(line: 291, column: 15, scope: !24694)
!24711 = !DILocation(line: 291, column: 2, scope: !24694)
!24712 = !DILocation(line: 291, column: 20, scope: !24694)
!24713 = !DILocation(line: 300, column: 1, scope: !24694)
!24714 = distinct !DISubprogram(name: "mlxsw_reg_sspr_pack", scope: !10113, file: !10113, line: 164, type: !13054, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24715 = !DILocalVariable(name: "payload", arg: 1, scope: !24714, file: !10113, line: 164, type: !733)
!24716 = !DILocation(line: 164, column: 46, scope: !24714)
!24717 = !DILocalVariable(name: "local_port", arg: 2, scope: !24714, file: !10113, line: 164, type: !1552)
!24718 = !DILocation(line: 164, column: 58, scope: !24714)
!24719 = !DILocation(line: 166, column: 2, scope: !24714)
!24720 = !DILocation(line: 167, column: 23, scope: !24714)
!24721 = !DILocation(line: 167, column: 2, scope: !24714)
!24722 = !DILocation(line: 168, column: 32, scope: !24714)
!24723 = !DILocation(line: 168, column: 41, scope: !24714)
!24724 = !DILocation(line: 168, column: 2, scope: !24714)
!24725 = !DILocation(line: 169, column: 30, scope: !24714)
!24726 = !DILocation(line: 169, column: 2, scope: !24714)
!24727 = !DILocation(line: 170, column: 33, scope: !24714)
!24728 = !DILocation(line: 170, column: 42, scope: !24714)
!24729 = !DILocation(line: 170, column: 2, scope: !24714)
!24730 = !DILocation(line: 171, column: 1, scope: !24714)
!24731 = distinct !DISubprogram(name: "mlxsw_reg_sspr_m_set", scope: !10113, file: !10113, line: 137, type: !14426, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24732 = !DILocalVariable(name: "buf", arg: 1, scope: !24731, file: !10113, line: 137, type: !733)
!24733 = !DILocation(line: 137, column: 1, scope: !24731)
!24734 = !DILocalVariable(name: "val", arg: 2, scope: !24731, file: !10113, line: 137, type: !862)
!24735 = distinct !DISubprogram(name: "mlxsw_reg_sspr_local_port_set", scope: !10113, file: !10113, line: 144, type: !14426, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24736 = !DILocalVariable(name: "buf", arg: 1, scope: !24735, file: !10113, line: 144, type: !733)
!24737 = !DILocation(line: 144, column: 1, scope: !24735)
!24738 = !DILocalVariable(name: "val", arg: 2, scope: !24735, file: !10113, line: 144, type: !862)
!24739 = distinct !DISubprogram(name: "mlxsw_reg_sspr_sub_port_set", scope: !10113, file: !10113, line: 152, type: !14426, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24740 = !DILocalVariable(name: "buf", arg: 1, scope: !24739, file: !10113, line: 152, type: !733)
!24741 = !DILocation(line: 152, column: 1, scope: !24739)
!24742 = !DILocalVariable(name: "val", arg: 2, scope: !24739, file: !10113, line: 152, type: !862)
!24743 = distinct !DISubprogram(name: "mlxsw_reg_sspr_system_port_set", scope: !10113, file: !10113, line: 162, type: !14426, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24744 = !DILocalVariable(name: "buf", arg: 1, scope: !24743, file: !10113, line: 162, type: !733)
!24745 = !DILocation(line: 162, column: 1, scope: !24743)
!24746 = !DILocalVariable(name: "val", arg: 2, scope: !24743, file: !10113, line: 162, type: !862)
!24747 = distinct !DISubprogram(name: "mlxsw_reg_pmtu_max_mtu_get", scope: !10113, file: !10113, line: 4096, type: !19837, scopeLine: 4096, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24748 = !DILocalVariable(name: "buf", arg: 1, scope: !24747, file: !10113, line: 4096, type: !453)
!24749 = !DILocation(line: 4096, column: 1, scope: !24747)
!24750 = distinct !DISubprogram(name: "mlxsw_sp_port_min_bw_set", scope: !3, file: !3, line: 1251, type: !24751, scopeLine: 1254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24751 = !DISubroutineType(types: !24752)
!24752 = !{!7, !10715, !10227, !1552, !1552, !862}
!24753 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !24750, file: !3, line: 1251, type: !10715)
!24754 = !DILocation(line: 1251, column: 59, scope: !24750)
!24755 = !DILocalVariable(name: "hr", arg: 2, scope: !24750, file: !3, line: 1252, type: !10227)
!24756 = !DILocation(line: 1252, column: 32, scope: !24750)
!24757 = !DILocalVariable(name: "index", arg: 3, scope: !24750, file: !3, line: 1252, type: !1552)
!24758 = !DILocation(line: 1252, column: 39, scope: !24750)
!24759 = !DILocalVariable(name: "next_index", arg: 4, scope: !24750, file: !3, line: 1253, type: !1552)
!24760 = !DILocation(line: 1253, column: 12, scope: !24750)
!24761 = !DILocalVariable(name: "minrate", arg: 5, scope: !24750, file: !3, line: 1253, type: !862)
!24762 = !DILocation(line: 1253, column: 28, scope: !24750)
!24763 = !DILocalVariable(name: "mlxsw_sp", scope: !24750, file: !3, line: 1255, type: !10721)
!24764 = !DILocation(line: 1255, column: 19, scope: !24750)
!24765 = !DILocation(line: 1255, column: 30, scope: !24750)
!24766 = !DILocation(line: 1255, column: 45, scope: !24750)
!24767 = !DILocalVariable(name: "qeec_pl", scope: !24750, file: !3, line: 1256, type: !4356)
!24768 = !DILocation(line: 1256, column: 7, scope: !24750)
!24769 = !DILocation(line: 1258, column: 22, scope: !24750)
!24770 = !DILocation(line: 1258, column: 31, scope: !24750)
!24771 = !DILocation(line: 1258, column: 46, scope: !24750)
!24772 = !DILocation(line: 1258, column: 58, scope: !24750)
!24773 = !DILocation(line: 1258, column: 62, scope: !24750)
!24774 = !DILocation(line: 1259, column: 8, scope: !24750)
!24775 = !DILocation(line: 1258, column: 2, scope: !24750)
!24776 = !DILocation(line: 1260, column: 26, scope: !24750)
!24777 = !DILocation(line: 1260, column: 2, scope: !24750)
!24778 = !DILocation(line: 1261, column: 37, scope: !24750)
!24779 = !DILocation(line: 1261, column: 46, scope: !24750)
!24780 = !DILocation(line: 1261, column: 2, scope: !24750)
!24781 = !DILocation(line: 1263, column: 25, scope: !24750)
!24782 = !DILocation(line: 1263, column: 35, scope: !24750)
!24783 = !DILocation(line: 1263, column: 58, scope: !24750)
!24784 = !DILocation(line: 1263, column: 9, scope: !24750)
!24785 = !DILocation(line: 1263, column: 2, scope: !24750)
!24786 = distinct !DISubprogram(name: "mlxsw_reg_qeec_mise_set", scope: !10113, file: !10113, line: 3542, type: !14426, scopeLine: 3542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24787 = !DILocalVariable(name: "buf", arg: 1, scope: !24786, file: !10113, line: 3542, type: !733)
!24788 = !DILocation(line: 3542, column: 1, scope: !24786)
!24789 = !DILocalVariable(name: "val", arg: 2, scope: !24786, file: !10113, line: 3542, type: !862)
!24790 = distinct !DISubprogram(name: "mlxsw_reg_qeec_min_shaper_rate_set", scope: !10113, file: !10113, line: 3581, type: !14426, scopeLine: 3581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24791 = !DILocalVariable(name: "buf", arg: 1, scope: !24790, file: !10113, line: 3581, type: !733)
!24792 = !DILocation(line: 3581, column: 1, scope: !24790)
!24793 = !DILocalVariable(name: "val", arg: 2, scope: !24790, file: !10113, line: 3581, type: !862)
!24794 = distinct !DISubprogram(name: "mlxsw_reg_qtctm_pack", scope: !10113, file: !10113, line: 3904, type: !13152, scopeLine: 3905, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24795 = !DILocalVariable(name: "payload", arg: 1, scope: !24794, file: !10113, line: 3904, type: !733)
!24796 = !DILocation(line: 3904, column: 28, scope: !24794)
!24797 = !DILocalVariable(name: "local_port", arg: 2, scope: !24794, file: !10113, line: 3904, type: !1552)
!24798 = !DILocation(line: 3904, column: 40, scope: !24794)
!24799 = !DILocalVariable(name: "mc", arg: 3, scope: !24794, file: !10113, line: 3904, type: !696)
!24800 = !DILocation(line: 3904, column: 57, scope: !24794)
!24801 = !DILocation(line: 3906, column: 2, scope: !24794)
!24802 = !DILocation(line: 3907, column: 33, scope: !24794)
!24803 = !DILocation(line: 3907, column: 42, scope: !24794)
!24804 = !DILocation(line: 3907, column: 2, scope: !24794)
!24805 = !DILocation(line: 3908, column: 25, scope: !24794)
!24806 = !DILocation(line: 3908, column: 34, scope: !24794)
!24807 = !DILocation(line: 3908, column: 2, scope: !24794)
!24808 = !DILocation(line: 3909, column: 1, scope: !24794)
!24809 = distinct !DISubprogram(name: "mlxsw_reg_qtctm_local_port_set", scope: !10113, file: !10113, line: 3894, type: !14426, scopeLine: 3894, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24810 = !DILocalVariable(name: "buf", arg: 1, scope: !24809, file: !10113, line: 3894, type: !733)
!24811 = !DILocation(line: 3894, column: 1, scope: !24809)
!24812 = !DILocalVariable(name: "val", arg: 2, scope: !24809, file: !10113, line: 3894, type: !862)
!24813 = distinct !DISubprogram(name: "mlxsw_reg_qtctm_mc_set", scope: !10113, file: !10113, line: 3901, type: !14426, scopeLine: 3901, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24814 = !DILocalVariable(name: "buf", arg: 1, scope: !24813, file: !10113, line: 3901, type: !733)
!24815 = !DILocation(line: 3901, column: 1, scope: !24813)
!24816 = !DILocalVariable(name: "val", arg: 2, scope: !24813, file: !10113, line: 3901, type: !862)
!24817 = distinct !DISubprogram(name: "mlxsw_sp_port_ptp_clear", scope: !3, file: !3, line: 1130, type: !14854, scopeLine: 1131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24818 = !DILocalVariable(name: "mlxsw_sp_port", arg: 1, scope: !24817, file: !3, line: 1130, type: !10715)
!24819 = !DILocation(line: 1130, column: 66, scope: !24817)
!24820 = !DILocalVariable(name: "config", scope: !24817, file: !3, line: 1132, type: !11219)
!24821 = !DILocation(line: 1132, column: 25, scope: !24817)
!24822 = !DILocation(line: 1134, column: 2, scope: !24817)
!24823 = !DILocation(line: 1134, column: 17, scope: !24817)
!24824 = !DILocation(line: 1134, column: 27, scope: !24817)
!24825 = !DILocation(line: 1134, column: 36, scope: !24817)
!24826 = !DILocation(line: 1134, column: 49, scope: !24817)
!24827 = !DILocation(line: 1135, column: 1, scope: !24817)
!24828 = distinct !DISubprogram(name: "list_empty", scope: !14241, file: !14241, line: 280, type: !24829, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24829 = !DISubroutineType(types: !24830)
!24830 = !{!7, !24831}
!24831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24832, size: 64)
!24832 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !445)
!24833 = !DILocalVariable(name: "head", arg: 1, scope: !24828, file: !14241, line: 280, type: !24831)
!24834 = !DILocation(line: 280, column: 54, scope: !24828)
!24835 = !DILocation(line: 282, column: 9, scope: !24836)
!24836 = distinct !DILexicalBlock(scope: !24828, file: !14241, line: 282, column: 9)
!24837 = !DILocation(line: 282, column: 9, scope: !24838)
!24838 = distinct !DILexicalBlock(scope: !24836, file: !14241, line: 282, column: 9)
!24839 = !DILocation(line: 282, column: 34, scope: !24828)
!24840 = !DILocation(line: 282, column: 31, scope: !24828)
!24841 = !DILocation(line: 282, column: 2, scope: !24828)
!24842 = distinct !DISubprogram(name: "mlxsw_sp_ports_remove", scope: !3, file: !3, line: 1727, type: !19190, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24843 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !24842, file: !3, line: 1727, type: !10721)
!24844 = !DILocation(line: 1727, column: 52, scope: !24842)
!24845 = !DILocalVariable(name: "i", scope: !24842, file: !3, line: 1729, type: !7)
!24846 = !DILocation(line: 1729, column: 6, scope: !24842)
!24847 = !DILocation(line: 1731, column: 9, scope: !24848)
!24848 = distinct !DILexicalBlock(scope: !24842, file: !3, line: 1731, column: 2)
!24849 = !DILocation(line: 1731, column: 7, scope: !24848)
!24850 = !DILocation(line: 1731, column: 14, scope: !24851)
!24851 = distinct !DILexicalBlock(scope: !24848, file: !3, line: 1731, column: 2)
!24852 = !DILocation(line: 1731, column: 39, scope: !24851)
!24853 = !DILocation(line: 1731, column: 49, scope: !24851)
!24854 = !DILocation(line: 1731, column: 18, scope: !24851)
!24855 = !DILocation(line: 1731, column: 16, scope: !24851)
!24856 = !DILocation(line: 1731, column: 2, scope: !24848)
!24857 = !DILocation(line: 1732, column: 29, scope: !24858)
!24858 = distinct !DILexicalBlock(scope: !24851, file: !3, line: 1732, column: 7)
!24859 = !DILocation(line: 1732, column: 39, scope: !24858)
!24860 = !DILocation(line: 1732, column: 7, scope: !24858)
!24861 = !DILocation(line: 1732, column: 7, scope: !24851)
!24862 = !DILocation(line: 1733, column: 25, scope: !24858)
!24863 = !DILocation(line: 1733, column: 35, scope: !24858)
!24864 = !DILocation(line: 1733, column: 4, scope: !24858)
!24865 = !DILocation(line: 1732, column: 40, scope: !24858)
!24866 = !DILocation(line: 1731, column: 57, scope: !24851)
!24867 = !DILocation(line: 1731, column: 2, scope: !24851)
!24868 = distinct !{!24868, !24856, !24869}
!24869 = !DILocation(line: 1733, column: 36, scope: !24848)
!24870 = !DILocation(line: 1734, column: 27, scope: !24842)
!24871 = !DILocation(line: 1734, column: 2, scope: !24842)
!24872 = !DILocation(line: 1735, column: 8, scope: !24842)
!24873 = !DILocation(line: 1735, column: 18, scope: !24842)
!24874 = !DILocation(line: 1735, column: 2, scope: !24842)
!24875 = !DILocation(line: 1736, column: 2, scope: !24842)
!24876 = !DILocation(line: 1736, column: 12, scope: !24842)
!24877 = !DILocation(line: 1736, column: 18, scope: !24842)
!24878 = !DILocation(line: 1737, column: 1, scope: !24842)
!24879 = distinct !DISubprogram(name: "mlxsw_sp_port_get_by_local_port", scope: !3, file: !3, line: 1896, type: !24880, scopeLine: 1897, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24880 = !DISubroutineType(types: !24881)
!24881 = !{!10715, !10721, !1552}
!24882 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !24879, file: !3, line: 1896, type: !10721)
!24883 = !DILocation(line: 1896, column: 50, scope: !24879)
!24884 = !DILocalVariable(name: "local_port", arg: 2, scope: !24879, file: !3, line: 1896, type: !1552)
!24885 = !DILocation(line: 1896, column: 63, scope: !24879)
!24886 = !DILocation(line: 1898, column: 6, scope: !24887)
!24887 = distinct !DILexicalBlock(scope: !24879, file: !3, line: 1898, column: 6)
!24888 = !DILocation(line: 1898, column: 16, scope: !24887)
!24889 = !DILocation(line: 1898, column: 22, scope: !24887)
!24890 = !DILocation(line: 1898, column: 25, scope: !24887)
!24891 = !DILocation(line: 1898, column: 35, scope: !24887)
!24892 = !DILocation(line: 1898, column: 41, scope: !24887)
!24893 = !DILocation(line: 1898, column: 6, scope: !24879)
!24894 = !DILocation(line: 1899, column: 10, scope: !24887)
!24895 = !DILocation(line: 1899, column: 20, scope: !24887)
!24896 = !DILocation(line: 1899, column: 26, scope: !24887)
!24897 = !DILocation(line: 1899, column: 3, scope: !24887)
!24898 = !DILocation(line: 1900, column: 2, scope: !24879)
!24899 = !DILocation(line: 1901, column: 1, scope: !24879)
!24900 = distinct !DISubprogram(name: "mlxsw_sp_local_ports_offset", scope: !3, file: !3, line: 1874, type: !24901, scopeLine: 1877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24901 = !DISubroutineType(types: !24902)
!24902 = !{!7, !10727, !14, !14}
!24903 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !24900, file: !3, line: 1874, type: !10727)
!24904 = !DILocation(line: 1874, column: 59, scope: !24900)
!24905 = !DILocalVariable(name: "count", arg: 2, scope: !24900, file: !3, line: 1875, type: !14)
!24906 = !DILocation(line: 1875, column: 25, scope: !24900)
!24907 = !DILocalVariable(name: "max_width", arg: 3, scope: !24900, file: !3, line: 1876, type: !14)
!24908 = !DILocation(line: 1876, column: 25, scope: !24900)
!24909 = !DILocalVariable(name: "local_ports_in_x_res_id", scope: !24900, file: !3, line: 1878, type: !10372)
!24910 = !DILocation(line: 1878, column: 20, scope: !24900)
!24911 = !DILocalVariable(name: "split_width", scope: !24900, file: !3, line: 1879, type: !7)
!24912 = !DILocation(line: 1879, column: 6, scope: !24900)
!24913 = !DILocation(line: 1879, column: 20, scope: !24900)
!24914 = !DILocation(line: 1879, column: 32, scope: !24900)
!24915 = !DILocation(line: 1879, column: 30, scope: !24900)
!24916 = !DILocation(line: 1881, column: 6, scope: !24917)
!24917 = distinct !DILexicalBlock(scope: !24900, file: !3, line: 1881, column: 6)
!24918 = !DILocation(line: 1881, column: 18, scope: !24917)
!24919 = !DILocation(line: 1881, column: 6, scope: !24900)
!24920 = !DILocation(line: 1882, column: 27, scope: !24917)
!24921 = !DILocation(line: 1882, column: 3, scope: !24917)
!24922 = !DILocation(line: 1883, column: 11, scope: !24923)
!24923 = distinct !DILexicalBlock(scope: !24917, file: !3, line: 1883, column: 11)
!24924 = !DILocation(line: 1883, column: 23, scope: !24923)
!24925 = !DILocation(line: 1883, column: 11, scope: !24917)
!24926 = !DILocation(line: 1884, column: 27, scope: !24923)
!24927 = !DILocation(line: 1884, column: 3, scope: !24923)
!24928 = !DILocation(line: 1885, column: 11, scope: !24929)
!24929 = distinct !DILexicalBlock(scope: !24923, file: !3, line: 1885, column: 11)
!24930 = !DILocation(line: 1885, column: 23, scope: !24929)
!24931 = !DILocation(line: 1885, column: 11, scope: !24923)
!24932 = !DILocation(line: 1886, column: 27, scope: !24929)
!24933 = !DILocation(line: 1886, column: 3, scope: !24929)
!24934 = !DILocation(line: 1888, column: 3, scope: !24929)
!24935 = !DILocation(line: 1890, column: 28, scope: !24936)
!24936 = distinct !DILexicalBlock(scope: !24900, file: !3, line: 1890, column: 6)
!24937 = !DILocation(line: 1890, column: 40, scope: !24936)
!24938 = !DILocation(line: 1890, column: 7, scope: !24936)
!24939 = !DILocation(line: 1890, column: 6, scope: !24900)
!24940 = !DILocation(line: 1891, column: 3, scope: !24936)
!24941 = !DILocation(line: 1892, column: 28, scope: !24900)
!24942 = !DILocation(line: 1892, column: 40, scope: !24900)
!24943 = !DILocation(line: 1892, column: 9, scope: !24900)
!24944 = !DILocation(line: 1892, column: 2, scope: !24900)
!24945 = !DILocation(line: 1893, column: 1, scope: !24900)
!24946 = distinct !DISubprogram(name: "mlxsw_sp_cluster_base_port_get", scope: !3, file: !3, line: 1824, type: !24947, scopeLine: 1825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24947 = !DISubroutineType(types: !24948)
!24948 = !{!1552, !1552, !14}
!24949 = !DILocalVariable(name: "local_port", arg: 1, scope: !24946, file: !3, line: 1824, type: !1552)
!24950 = !DILocation(line: 1824, column: 45, scope: !24946)
!24951 = !DILocalVariable(name: "max_width", arg: 2, scope: !24946, file: !3, line: 1824, type: !14)
!24952 = !DILocation(line: 1824, column: 70, scope: !24946)
!24953 = !DILocalVariable(name: "offset", scope: !24946, file: !3, line: 1826, type: !1552)
!24954 = !DILocation(line: 1826, column: 5, scope: !24946)
!24955 = !DILocation(line: 1826, column: 15, scope: !24946)
!24956 = !DILocation(line: 1826, column: 26, scope: !24946)
!24957 = !DILocation(line: 1826, column: 33, scope: !24946)
!24958 = !DILocation(line: 1826, column: 31, scope: !24946)
!24959 = !DILocation(line: 1826, column: 14, scope: !24946)
!24960 = !DILocation(line: 1828, column: 9, scope: !24946)
!24961 = !DILocation(line: 1828, column: 22, scope: !24946)
!24962 = !DILocation(line: 1828, column: 20, scope: !24946)
!24963 = !DILocation(line: 1828, column: 2, scope: !24946)
!24964 = distinct !DISubprogram(name: "mlxsw_sp_port_split_create", scope: !3, file: !3, line: 1832, type: !24965, scopeLine: 1835, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!24965 = !DISubroutineType(types: !24966)
!24966 = !{!7, !10721, !1552, !10762, !14, !1552}
!24967 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !24964, file: !3, line: 1832, type: !10721)
!24968 = !DILocation(line: 1832, column: 45, scope: !24964)
!24969 = !DILocalVariable(name: "base_port", arg: 2, scope: !24964, file: !3, line: 1832, type: !1552)
!24970 = !DILocation(line: 1832, column: 58, scope: !24964)
!24971 = !DILocalVariable(name: "port_mapping", arg: 3, scope: !24964, file: !3, line: 1833, type: !10762)
!24972 = !DILocation(line: 1833, column: 37, scope: !24964)
!24973 = !DILocalVariable(name: "count", arg: 4, scope: !24964, file: !3, line: 1834, type: !14)
!24974 = !DILocation(line: 1834, column: 20, scope: !24964)
!24975 = !DILocalVariable(name: "offset", arg: 5, scope: !24964, file: !3, line: 1834, type: !1552)
!24976 = !DILocation(line: 1834, column: 30, scope: !24964)
!24977 = !DILocalVariable(name: "split_port_mapping", scope: !24964, file: !3, line: 1836, type: !10763)
!24978 = !DILocation(line: 1836, column: 31, scope: !24964)
!24979 = !DILocalVariable(name: "err", scope: !24964, file: !3, line: 1837, type: !7)
!24980 = !DILocation(line: 1837, column: 6, scope: !24964)
!24981 = !DILocalVariable(name: "i", scope: !24964, file: !3, line: 1837, type: !7)
!24982 = !DILocation(line: 1837, column: 11, scope: !24964)
!24983 = !DILocation(line: 1839, column: 24, scope: !24964)
!24984 = !DILocation(line: 1839, column: 23, scope: !24964)
!24985 = !DILocation(line: 1840, column: 30, scope: !24964)
!24986 = !DILocation(line: 1840, column: 21, scope: !24964)
!24987 = !DILocation(line: 1840, column: 27, scope: !24964)
!24988 = !DILocation(line: 1841, column: 9, scope: !24989)
!24989 = distinct !DILexicalBlock(scope: !24964, file: !3, line: 1841, column: 2)
!24990 = !DILocation(line: 1841, column: 7, scope: !24989)
!24991 = !DILocation(line: 1841, column: 14, scope: !24992)
!24992 = distinct !DILexicalBlock(scope: !24989, file: !3, line: 1841, column: 2)
!24993 = !DILocation(line: 1841, column: 18, scope: !24992)
!24994 = !DILocation(line: 1841, column: 16, scope: !24992)
!24995 = !DILocation(line: 1841, column: 2, scope: !24989)
!24996 = !DILocation(line: 1842, column: 30, scope: !24997)
!24997 = distinct !DILexicalBlock(scope: !24992, file: !3, line: 1841, column: 30)
!24998 = !DILocation(line: 1842, column: 40, scope: !24997)
!24999 = !DILocation(line: 1842, column: 52, scope: !24997)
!25000 = !DILocation(line: 1842, column: 56, scope: !24997)
!25001 = !DILocation(line: 1842, column: 54, scope: !24997)
!25002 = !DILocation(line: 1842, column: 50, scope: !24997)
!25003 = !DILocation(line: 1843, column: 9, scope: !24997)
!25004 = !DILocation(line: 1842, column: 9, scope: !24997)
!25005 = !DILocation(line: 1842, column: 7, scope: !24997)
!25006 = !DILocation(line: 1844, column: 7, scope: !25007)
!25007 = distinct !DILexicalBlock(scope: !24997, file: !3, line: 1844, column: 7)
!25008 = !DILocation(line: 1844, column: 7, scope: !24997)
!25009 = !DILocation(line: 1845, column: 4, scope: !25007)
!25010 = !DILocation(line: 1846, column: 49, scope: !24997)
!25011 = !DILocation(line: 1846, column: 30, scope: !24997)
!25012 = !DILocation(line: 1846, column: 22, scope: !24997)
!25013 = !DILocation(line: 1846, column: 27, scope: !24997)
!25014 = !DILocation(line: 1847, column: 2, scope: !24997)
!25015 = !DILocation(line: 1841, column: 26, scope: !24992)
!25016 = !DILocation(line: 1841, column: 2, scope: !24992)
!25017 = distinct !{!25017, !24995, !25018}
!25018 = !DILocation(line: 1847, column: 2, scope: !24989)
!25019 = !DILocation(line: 1849, column: 2, scope: !24964)
!25020 = !DILabel(scope: !24964, name: "err_port_create", file: !3, line: 1851)
!25021 = !DILocation(line: 1851, column: 1, scope: !24964)
!25022 = !DILocation(line: 1852, column: 8, scope: !25023)
!25023 = distinct !DILexicalBlock(scope: !24964, file: !3, line: 1852, column: 2)
!25024 = !DILocation(line: 1852, column: 7, scope: !25023)
!25025 = !DILocation(line: 1852, column: 12, scope: !25026)
!25026 = distinct !DILexicalBlock(scope: !25023, file: !3, line: 1852, column: 2)
!25027 = !DILocation(line: 1852, column: 14, scope: !25026)
!25028 = !DILocation(line: 1852, column: 2, scope: !25023)
!25029 = !DILocation(line: 1853, column: 29, scope: !25030)
!25030 = distinct !DILexicalBlock(scope: !25026, file: !3, line: 1853, column: 7)
!25031 = !DILocation(line: 1853, column: 39, scope: !25030)
!25032 = !DILocation(line: 1853, column: 51, scope: !25030)
!25033 = !DILocation(line: 1853, column: 55, scope: !25030)
!25034 = !DILocation(line: 1853, column: 53, scope: !25030)
!25035 = !DILocation(line: 1853, column: 49, scope: !25030)
!25036 = !DILocation(line: 1853, column: 7, scope: !25030)
!25037 = !DILocation(line: 1853, column: 7, scope: !25026)
!25038 = !DILocation(line: 1854, column: 25, scope: !25030)
!25039 = !DILocation(line: 1854, column: 35, scope: !25030)
!25040 = !DILocation(line: 1854, column: 47, scope: !25030)
!25041 = !DILocation(line: 1854, column: 51, scope: !25030)
!25042 = !DILocation(line: 1854, column: 49, scope: !25030)
!25043 = !DILocation(line: 1854, column: 45, scope: !25030)
!25044 = !DILocation(line: 1854, column: 4, scope: !25030)
!25045 = !DILocation(line: 1853, column: 61, scope: !25030)
!25046 = !DILocation(line: 1852, column: 21, scope: !25026)
!25047 = !DILocation(line: 1852, column: 2, scope: !25026)
!25048 = distinct !{!25048, !25028, !25049}
!25049 = !DILocation(line: 1854, column: 57, scope: !25023)
!25050 = !DILocation(line: 1855, column: 9, scope: !24964)
!25051 = !DILocation(line: 1855, column: 2, scope: !24964)
!25052 = !DILocation(line: 1856, column: 1, scope: !24964)
!25053 = distinct !DISubprogram(name: "mlxsw_sp_port_unsplit_create", scope: !3, file: !3, line: 1858, type: !25054, scopeLine: 1861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!25054 = !DISubroutineType(types: !25055)
!25055 = !{null, !10721, !1552, !14, !1552}
!25056 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !25053, file: !3, line: 1858, type: !10721)
!25057 = !DILocation(line: 1858, column: 59, scope: !25053)
!25058 = !DILocalVariable(name: "base_port", arg: 2, scope: !25053, file: !3, line: 1859, type: !1552)
!25059 = !DILocation(line: 1859, column: 10, scope: !25053)
!25060 = !DILocalVariable(name: "count", arg: 3, scope: !25053, file: !3, line: 1860, type: !14)
!25061 = !DILocation(line: 1860, column: 20, scope: !25053)
!25062 = !DILocalVariable(name: "offset", arg: 4, scope: !25053, file: !3, line: 1860, type: !1552)
!25063 = !DILocation(line: 1860, column: 30, scope: !25053)
!25064 = !DILocalVariable(name: "port_mapping", scope: !25053, file: !3, line: 1862, type: !10762)
!25065 = !DILocation(line: 1862, column: 32, scope: !25053)
!25066 = !DILocalVariable(name: "i", scope: !25053, file: !3, line: 1863, type: !7)
!25067 = !DILocation(line: 1863, column: 6, scope: !25053)
!25068 = !DILocation(line: 1866, column: 9, scope: !25069)
!25069 = distinct !DILexicalBlock(scope: !25053, file: !3, line: 1866, column: 2)
!25070 = !DILocation(line: 1866, column: 7, scope: !25069)
!25071 = !DILocation(line: 1866, column: 14, scope: !25072)
!25072 = distinct !DILexicalBlock(scope: !25069, file: !3, line: 1866, column: 2)
!25073 = !DILocation(line: 1866, column: 18, scope: !25072)
!25074 = !DILocation(line: 1866, column: 26, scope: !25072)
!25075 = !DILocation(line: 1866, column: 24, scope: !25072)
!25076 = !DILocation(line: 1866, column: 16, scope: !25072)
!25077 = !DILocation(line: 1866, column: 2, scope: !25069)
!25078 = !DILocation(line: 1867, column: 18, scope: !25079)
!25079 = distinct !DILexicalBlock(scope: !25072, file: !3, line: 1866, column: 39)
!25080 = !DILocation(line: 1867, column: 28, scope: !25079)
!25081 = !DILocation(line: 1867, column: 41, scope: !25079)
!25082 = !DILocation(line: 1867, column: 53, scope: !25079)
!25083 = !DILocation(line: 1867, column: 51, scope: !25079)
!25084 = !DILocation(line: 1867, column: 16, scope: !25079)
!25085 = !DILocation(line: 1868, column: 8, scope: !25086)
!25086 = distinct !DILexicalBlock(scope: !25079, file: !3, line: 1868, column: 7)
!25087 = !DILocation(line: 1868, column: 7, scope: !25079)
!25088 = !DILocation(line: 1869, column: 4, scope: !25086)
!25089 = !DILocation(line: 1870, column: 24, scope: !25079)
!25090 = !DILocation(line: 1870, column: 34, scope: !25079)
!25091 = !DILocation(line: 1870, column: 46, scope: !25079)
!25092 = !DILocation(line: 1870, column: 44, scope: !25079)
!25093 = !DILocation(line: 1870, column: 52, scope: !25079)
!25094 = !DILocation(line: 1870, column: 3, scope: !25079)
!25095 = !DILocation(line: 1871, column: 2, scope: !25079)
!25096 = !DILocation(line: 1866, column: 35, scope: !25072)
!25097 = !DILocation(line: 1866, column: 2, scope: !25072)
!25098 = distinct !{!25098, !25077, !25099}
!25099 = !DILocation(line: 1871, column: 2, scope: !25069)
!25100 = !DILocation(line: 1872, column: 1, scope: !25053)
!25101 = distinct !DISubprogram(name: "mlxsw_sp2_resources_kvd_register", scope: !3, file: !3, line: 2994, type: !12059, scopeLine: 2995, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!25102 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !25101, file: !3, line: 2994, type: !10727)
!25103 = !DILocation(line: 2994, column: 64, scope: !25101)
!25104 = !DILocalVariable(name: "devlink", scope: !25101, file: !3, line: 2996, type: !8429)
!25105 = !DILocation(line: 2996, column: 18, scope: !25101)
!25106 = !DILocation(line: 2996, column: 44, scope: !25101)
!25107 = !DILocation(line: 2996, column: 28, scope: !25101)
!25108 = !DILocalVariable(name: "kvd_size_params", scope: !25101, file: !3, line: 2997, type: !25109)
!25109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_resource_size_params", file: !8423, line: 332, size: 256, elements: !25110)
!25110 = !{!25111, !25112, !25113, !25114}
!25111 = !DIDerivedType(tag: DW_TAG_member, name: "size_min", scope: !25109, file: !8423, line: 333, baseType: !492, size: 64)
!25112 = !DIDerivedType(tag: DW_TAG_member, name: "size_max", scope: !25109, file: !8423, line: 334, baseType: !492, size: 64, offset: 64)
!25113 = !DIDerivedType(tag: DW_TAG_member, name: "size_granularity", scope: !25109, file: !8423, line: 335, baseType: !492, size: 64, offset: 128)
!25114 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !25109, file: !8423, line: 336, baseType: !10648, size: 32, offset: 192)
!25115 = !DILocation(line: 2997, column: 38, scope: !25101)
!25116 = !DILocalVariable(name: "kvd_size", scope: !25101, file: !3, line: 2998, type: !862)
!25117 = !DILocation(line: 2998, column: 6, scope: !25101)
!25118 = !DILocation(line: 3000, column: 7, scope: !25119)
!25119 = distinct !DILexicalBlock(scope: !25101, file: !3, line: 3000, column: 6)
!25120 = !DILocation(line: 3000, column: 6, scope: !25101)
!25121 = !DILocation(line: 3001, column: 3, scope: !25119)
!25122 = !DILocation(line: 3003, column: 13, scope: !25101)
!25123 = !DILocation(line: 3003, column: 11, scope: !25101)
!25124 = !DILocation(line: 3004, column: 54, scope: !25101)
!25125 = !DILocation(line: 3004, column: 64, scope: !25101)
!25126 = !DILocation(line: 3004, column: 2, scope: !25101)
!25127 = !DILocation(line: 3008, column: 35, scope: !25101)
!25128 = !DILocation(line: 3009, column: 7, scope: !25101)
!25129 = !DILocation(line: 3008, column: 9, scope: !25101)
!25130 = !DILocation(line: 3008, column: 2, scope: !25101)
!25131 = !DILocation(line: 3012, column: 1, scope: !25101)
!25132 = distinct !DISubprogram(name: "mlxsw_sp_resources_span_register", scope: !3, file: !3, line: 3014, type: !12059, scopeLine: 3015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!25133 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !25132, file: !3, line: 3014, type: !10727)
!25134 = !DILocation(line: 3014, column: 64, scope: !25132)
!25135 = !DILocalVariable(name: "devlink", scope: !25132, file: !3, line: 3016, type: !8429)
!25136 = !DILocation(line: 3016, column: 18, scope: !25132)
!25137 = !DILocation(line: 3016, column: 44, scope: !25132)
!25138 = !DILocation(line: 3016, column: 28, scope: !25132)
!25139 = !DILocalVariable(name: "span_size_params", scope: !25132, file: !3, line: 3017, type: !25109)
!25140 = !DILocation(line: 3017, column: 38, scope: !25132)
!25141 = !DILocalVariable(name: "max_span", scope: !25132, file: !3, line: 3018, type: !862)
!25142 = !DILocation(line: 3018, column: 6, scope: !25132)
!25143 = !DILocation(line: 3020, column: 7, scope: !25144)
!25144 = distinct !DILexicalBlock(scope: !25132, file: !3, line: 3020, column: 6)
!25145 = !DILocation(line: 3020, column: 6, scope: !25132)
!25146 = !DILocation(line: 3021, column: 3, scope: !25144)
!25147 = !DILocation(line: 3023, column: 13, scope: !25132)
!25148 = !DILocation(line: 3023, column: 11, scope: !25132)
!25149 = !DILocation(line: 3024, column: 55, scope: !25132)
!25150 = !DILocation(line: 3024, column: 65, scope: !25132)
!25151 = !DILocation(line: 3024, column: 2, scope: !25132)
!25152 = !DILocation(line: 3027, column: 35, scope: !25132)
!25153 = !DILocation(line: 3028, column: 7, scope: !25132)
!25154 = !DILocation(line: 3027, column: 9, scope: !25132)
!25155 = !DILocation(line: 3027, column: 2, scope: !25132)
!25156 = !DILocation(line: 3031, column: 1, scope: !25132)
!25157 = distinct !DISubprogram(name: "devlink_resource_size_params_init", scope: !8423, file: !8423, line: 340, type: !25158, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!25158 = !DISubroutineType(types: !25159)
!25159 = !{null, !25160, !492, !492, !492, !10648}
!25160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !25109, size: 64)
!25161 = !DILocalVariable(name: "size_params", arg: 1, scope: !25157, file: !8423, line: 340, type: !25160)
!25162 = !DILocation(line: 340, column: 72, scope: !25157)
!25163 = !DILocalVariable(name: "size_min", arg: 2, scope: !25157, file: !8423, line: 341, type: !492)
!25164 = !DILocation(line: 341, column: 11, scope: !25157)
!25165 = !DILocalVariable(name: "size_max", arg: 3, scope: !25157, file: !8423, line: 341, type: !492)
!25166 = !DILocation(line: 341, column: 25, scope: !25157)
!25167 = !DILocalVariable(name: "size_granularity", arg: 4, scope: !25157, file: !8423, line: 342, type: !492)
!25168 = !DILocation(line: 342, column: 11, scope: !25157)
!25169 = !DILocalVariable(name: "unit", arg: 5, scope: !25157, file: !8423, line: 343, type: !10648)
!25170 = !DILocation(line: 343, column: 34, scope: !25157)
!25171 = !DILocation(line: 345, column: 26, scope: !25157)
!25172 = !DILocation(line: 345, column: 2, scope: !25157)
!25173 = !DILocation(line: 345, column: 15, scope: !25157)
!25174 = !DILocation(line: 345, column: 24, scope: !25157)
!25175 = !DILocation(line: 346, column: 26, scope: !25157)
!25176 = !DILocation(line: 346, column: 2, scope: !25157)
!25177 = !DILocation(line: 346, column: 15, scope: !25157)
!25178 = !DILocation(line: 346, column: 24, scope: !25157)
!25179 = !DILocation(line: 347, column: 34, scope: !25157)
!25180 = !DILocation(line: 347, column: 2, scope: !25157)
!25181 = !DILocation(line: 347, column: 15, scope: !25157)
!25182 = !DILocation(line: 347, column: 32, scope: !25157)
!25183 = !DILocation(line: 348, column: 22, scope: !25157)
!25184 = !DILocation(line: 348, column: 2, scope: !25157)
!25185 = !DILocation(line: 348, column: 15, scope: !25157)
!25186 = !DILocation(line: 348, column: 20, scope: !25157)
!25187 = !DILocation(line: 349, column: 1, scope: !25157)
!25188 = distinct !DISubprogram(name: "mlxsw_sp_params_acl_region_rehash_intrvl_get", scope: !3, file: !3, line: 3145, type: !12517, scopeLine: 3147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!25189 = !DILocalVariable(name: "devlink", arg: 1, scope: !25188, file: !3, line: 3145, type: !8429)
!25190 = !DILocation(line: 3145, column: 62, scope: !25188)
!25191 = !DILocalVariable(name: "id", arg: 2, scope: !25188, file: !3, line: 3145, type: !862)
!25192 = !DILocation(line: 3145, column: 75, scope: !25188)
!25193 = !DILocalVariable(name: "ctx", arg: 3, scope: !25188, file: !3, line: 3146, type: !12519)
!25194 = !DILocation(line: 3146, column: 42, scope: !25188)
!25195 = !DILocalVariable(name: "mlxsw_core", scope: !25188, file: !3, line: 3148, type: !10727)
!25196 = !DILocation(line: 3148, column: 21, scope: !25188)
!25197 = !DILocation(line: 3148, column: 47, scope: !25188)
!25198 = !DILocation(line: 3148, column: 34, scope: !25188)
!25199 = !DILocalVariable(name: "mlxsw_sp", scope: !25188, file: !3, line: 3149, type: !10721)
!25200 = !DILocation(line: 3149, column: 19, scope: !25188)
!25201 = !DILocation(line: 3149, column: 53, scope: !25188)
!25202 = !DILocation(line: 3149, column: 30, scope: !25188)
!25203 = !DILocation(line: 3151, column: 56, scope: !25188)
!25204 = !DILocation(line: 3151, column: 18, scope: !25188)
!25205 = !DILocation(line: 3151, column: 2, scope: !25188)
!25206 = !DILocation(line: 3151, column: 7, scope: !25188)
!25207 = !DILocation(line: 3151, column: 11, scope: !25188)
!25208 = !DILocation(line: 3151, column: 16, scope: !25188)
!25209 = !DILocation(line: 3152, column: 2, scope: !25188)
!25210 = distinct !DISubprogram(name: "mlxsw_sp_params_acl_region_rehash_intrvl_set", scope: !3, file: !3, line: 3156, type: !12517, scopeLine: 3158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!25211 = !DILocalVariable(name: "devlink", arg: 1, scope: !25210, file: !3, line: 3156, type: !8429)
!25212 = !DILocation(line: 3156, column: 62, scope: !25210)
!25213 = !DILocalVariable(name: "id", arg: 2, scope: !25210, file: !3, line: 3156, type: !862)
!25214 = !DILocation(line: 3156, column: 75, scope: !25210)
!25215 = !DILocalVariable(name: "ctx", arg: 3, scope: !25210, file: !3, line: 3157, type: !12519)
!25216 = !DILocation(line: 3157, column: 42, scope: !25210)
!25217 = !DILocalVariable(name: "mlxsw_core", scope: !25210, file: !3, line: 3159, type: !10727)
!25218 = !DILocation(line: 3159, column: 21, scope: !25210)
!25219 = !DILocation(line: 3159, column: 47, scope: !25210)
!25220 = !DILocation(line: 3159, column: 34, scope: !25210)
!25221 = !DILocalVariable(name: "mlxsw_sp", scope: !25210, file: !3, line: 3160, type: !10721)
!25222 = !DILocation(line: 3160, column: 19, scope: !25210)
!25223 = !DILocation(line: 3160, column: 53, scope: !25210)
!25224 = !DILocation(line: 3160, column: 30, scope: !25210)
!25225 = !DILocation(line: 3162, column: 47, scope: !25210)
!25226 = !DILocation(line: 3162, column: 57, scope: !25210)
!25227 = !DILocation(line: 3162, column: 62, scope: !25210)
!25228 = !DILocation(line: 3162, column: 66, scope: !25210)
!25229 = !DILocation(line: 3162, column: 9, scope: !25210)
!25230 = !DILocation(line: 3162, column: 2, scope: !25210)
!25231 = distinct !DISubprogram(name: "devlink_priv", scope: !8423, file: !8423, line: 1350, type: !25232, scopeLine: 1351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!25232 = !DISubroutineType(types: !25233)
!25233 = !{!726, !8429}
!25234 = !DILocalVariable(name: "devlink", arg: 1, scope: !25231, file: !8423, line: 1350, type: !8429)
!25235 = !DILocation(line: 1350, column: 50, scope: !25231)
!25236 = !DILocation(line: 1352, column: 2, scope: !25231)
!25237 = !DILocation(line: 1352, column: 2, scope: !25238)
!25238 = distinct !DILexicalBlock(scope: !25239, file: !8423, line: 1352, column: 2)
!25239 = distinct !DILexicalBlock(scope: !25231, file: !8423, line: 1352, column: 2)
!25240 = !DILocation(line: 1352, column: 2, scope: !25239)
!25241 = !DILocation(line: 1352, column: 2, scope: !25242)
!25242 = distinct !DILexicalBlock(scope: !25238, file: !8423, line: 1352, column: 2)
!25243 = !DILocation(line: 1352, column: 2, scope: !25244)
!25244 = distinct !DILexicalBlock(scope: !25242, file: !8423, line: 1352, column: 2)
!25245 = !DILocation(line: 1352, column: 2, scope: !25246)
!25246 = distinct !DILexicalBlock(scope: !25242, file: !8423, line: 1352, column: 2)
!25247 = !{i32 -2137072227, i32 -2137072198, i32 -2137072152, i32 -2137072094, i32 -2137072040, i32 -2137071986, i32 -2137071931, i32 -2137071900}
!25248 = !DILocation(line: 1352, column: 2, scope: !25249)
!25249 = distinct !DILexicalBlock(scope: !25250, file: !8423, line: 1352, column: 2)
!25250 = distinct !DILexicalBlock(scope: !25242, file: !8423, line: 1352, column: 2)
!25251 = !{i32 -2137071455, i32 -2137071448, i32 -2137071394, i32 -2137071363, i32 -2137071333}
!25252 = !DILocation(line: 1352, column: 2, scope: !25250)
!25253 = !DILocation(line: 1353, column: 10, scope: !25231)
!25254 = !DILocation(line: 1353, column: 19, scope: !25231)
!25255 = !DILocation(line: 1353, column: 9, scope: !25231)
!25256 = !DILocation(line: 1353, column: 2, scope: !25231)
!25257 = distinct !DISubprogram(name: "mlxsw_sp2_init", scope: !3, file: !3, line: 2759, type: !12051, scopeLine: 2762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!25258 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !25257, file: !3, line: 2759, type: !10727)
!25259 = !DILocation(line: 2759, column: 46, scope: !25257)
!25260 = !DILocalVariable(name: "mlxsw_bus_info", arg: 2, scope: !25257, file: !3, line: 2760, type: !10731)
!25261 = !DILocation(line: 2760, column: 35, scope: !25257)
!25262 = !DILocalVariable(name: "extack", arg: 3, scope: !25257, file: !3, line: 2761, type: !2633)
!25263 = !DILocation(line: 2761, column: 30, scope: !25257)
!25264 = !DILocalVariable(name: "mlxsw_sp", scope: !25257, file: !3, line: 2763, type: !10721)
!25265 = !DILocation(line: 2763, column: 19, scope: !25257)
!25266 = !DILocation(line: 2763, column: 53, scope: !25257)
!25267 = !DILocation(line: 2763, column: 30, scope: !25257)
!25268 = !DILocation(line: 2765, column: 2, scope: !25257)
!25269 = !DILocation(line: 2765, column: 12, scope: !25257)
!25270 = !DILocation(line: 2765, column: 21, scope: !25257)
!25271 = !DILocation(line: 2766, column: 2, scope: !25257)
!25272 = !DILocation(line: 2766, column: 12, scope: !25257)
!25273 = !DILocation(line: 2766, column: 20, scope: !25257)
!25274 = !DILocation(line: 2767, column: 2, scope: !25257)
!25275 = !DILocation(line: 2767, column: 12, scope: !25257)
!25276 = !DILocation(line: 2767, column: 20, scope: !25257)
!25277 = !DILocation(line: 2768, column: 2, scope: !25257)
!25278 = !DILocation(line: 2768, column: 12, scope: !25257)
!25279 = !DILocation(line: 2768, column: 24, scope: !25257)
!25280 = !DILocation(line: 2769, column: 2, scope: !25257)
!25281 = !DILocation(line: 2769, column: 12, scope: !25257)
!25282 = !DILocation(line: 2769, column: 26, scope: !25257)
!25283 = !DILocation(line: 2770, column: 2, scope: !25257)
!25284 = !DILocation(line: 2770, column: 12, scope: !25257)
!25285 = !DILocation(line: 2770, column: 25, scope: !25257)
!25286 = !DILocation(line: 2771, column: 2, scope: !25257)
!25287 = !DILocation(line: 2771, column: 12, scope: !25257)
!25288 = !DILocation(line: 2771, column: 24, scope: !25257)
!25289 = !DILocation(line: 2772, column: 2, scope: !25257)
!25290 = !DILocation(line: 2772, column: 12, scope: !25257)
!25291 = !DILocation(line: 2772, column: 21, scope: !25257)
!25292 = !DILocation(line: 2773, column: 2, scope: !25257)
!25293 = !DILocation(line: 2773, column: 12, scope: !25257)
!25294 = !DILocation(line: 2773, column: 24, scope: !25257)
!25295 = !DILocation(line: 2774, column: 2, scope: !25257)
!25296 = !DILocation(line: 2774, column: 12, scope: !25257)
!25297 = !DILocation(line: 2774, column: 20, scope: !25257)
!25298 = !DILocation(line: 2775, column: 2, scope: !25257)
!25299 = !DILocation(line: 2775, column: 12, scope: !25257)
!25300 = !DILocation(line: 2775, column: 19, scope: !25257)
!25301 = !DILocation(line: 2776, column: 2, scope: !25257)
!25302 = !DILocation(line: 2776, column: 12, scope: !25257)
!25303 = !DILocation(line: 2776, column: 32, scope: !25257)
!25304 = !DILocation(line: 2777, column: 2, scope: !25257)
!25305 = !DILocation(line: 2777, column: 12, scope: !25257)
!25306 = !DILocation(line: 2777, column: 20, scope: !25257)
!25307 = !DILocation(line: 2778, column: 2, scope: !25257)
!25308 = !DILocation(line: 2778, column: 12, scope: !25257)
!25309 = !DILocation(line: 2778, column: 21, scope: !25257)
!25310 = !DILocation(line: 2779, column: 2, scope: !25257)
!25311 = !DILocation(line: 2779, column: 12, scope: !25257)
!25312 = !DILocation(line: 2779, column: 29, scope: !25257)
!25313 = !DILocation(line: 2780, column: 2, scope: !25257)
!25314 = !DILocation(line: 2780, column: 12, scope: !25257)
!25315 = !DILocation(line: 2780, column: 21, scope: !25257)
!25316 = !DILocation(line: 2781, column: 2, scope: !25257)
!25317 = !DILocation(line: 2781, column: 12, scope: !25257)
!25318 = !DILocation(line: 2781, column: 29, scope: !25257)
!25319 = !DILocation(line: 2783, column: 23, scope: !25257)
!25320 = !DILocation(line: 2783, column: 35, scope: !25257)
!25321 = !DILocation(line: 2783, column: 51, scope: !25257)
!25322 = !DILocation(line: 2783, column: 9, scope: !25257)
!25323 = !DILocation(line: 2783, column: 2, scope: !25257)
!25324 = distinct !DISubprogram(name: "mlxsw_sp1_init", scope: !3, file: !3, line: 2730, type: !12051, scopeLine: 2733, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!25325 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !25324, file: !3, line: 2730, type: !10727)
!25326 = !DILocation(line: 2730, column: 46, scope: !25324)
!25327 = !DILocalVariable(name: "mlxsw_bus_info", arg: 2, scope: !25324, file: !3, line: 2731, type: !10731)
!25328 = !DILocation(line: 2731, column: 35, scope: !25324)
!25329 = !DILocalVariable(name: "extack", arg: 3, scope: !25324, file: !3, line: 2732, type: !2633)
!25330 = !DILocation(line: 2732, column: 30, scope: !25324)
!25331 = !DILocalVariable(name: "mlxsw_sp", scope: !25324, file: !3, line: 2734, type: !10721)
!25332 = !DILocation(line: 2734, column: 19, scope: !25324)
!25333 = !DILocation(line: 2734, column: 53, scope: !25324)
!25334 = !DILocation(line: 2734, column: 30, scope: !25324)
!25335 = !DILocation(line: 2736, column: 2, scope: !25324)
!25336 = !DILocation(line: 2736, column: 12, scope: !25324)
!25337 = !DILocation(line: 2736, column: 21, scope: !25324)
!25338 = !DILocation(line: 2737, column: 2, scope: !25324)
!25339 = !DILocation(line: 2737, column: 12, scope: !25324)
!25340 = !DILocation(line: 2737, column: 20, scope: !25324)
!25341 = !DILocation(line: 2738, column: 2, scope: !25324)
!25342 = !DILocation(line: 2738, column: 12, scope: !25324)
!25343 = !DILocation(line: 2738, column: 20, scope: !25324)
!25344 = !DILocation(line: 2739, column: 2, scope: !25324)
!25345 = !DILocation(line: 2739, column: 12, scope: !25324)
!25346 = !DILocation(line: 2739, column: 24, scope: !25324)
!25347 = !DILocation(line: 2740, column: 2, scope: !25324)
!25348 = !DILocation(line: 2740, column: 12, scope: !25324)
!25349 = !DILocation(line: 2740, column: 26, scope: !25324)
!25350 = !DILocation(line: 2741, column: 2, scope: !25324)
!25351 = !DILocation(line: 2741, column: 12, scope: !25324)
!25352 = !DILocation(line: 2741, column: 25, scope: !25324)
!25353 = !DILocation(line: 2742, column: 2, scope: !25324)
!25354 = !DILocation(line: 2742, column: 12, scope: !25324)
!25355 = !DILocation(line: 2742, column: 24, scope: !25324)
!25356 = !DILocation(line: 2743, column: 2, scope: !25324)
!25357 = !DILocation(line: 2743, column: 12, scope: !25324)
!25358 = !DILocation(line: 2743, column: 21, scope: !25324)
!25359 = !DILocation(line: 2744, column: 2, scope: !25324)
!25360 = !DILocation(line: 2744, column: 12, scope: !25324)
!25361 = !DILocation(line: 2744, column: 24, scope: !25324)
!25362 = !DILocation(line: 2745, column: 2, scope: !25324)
!25363 = !DILocation(line: 2745, column: 12, scope: !25324)
!25364 = !DILocation(line: 2745, column: 20, scope: !25324)
!25365 = !DILocation(line: 2746, column: 2, scope: !25324)
!25366 = !DILocation(line: 2746, column: 12, scope: !25324)
!25367 = !DILocation(line: 2746, column: 19, scope: !25324)
!25368 = !DILocation(line: 2747, column: 2, scope: !25324)
!25369 = !DILocation(line: 2747, column: 12, scope: !25324)
!25370 = !DILocation(line: 2747, column: 32, scope: !25324)
!25371 = !DILocation(line: 2748, column: 2, scope: !25324)
!25372 = !DILocation(line: 2748, column: 12, scope: !25324)
!25373 = !DILocation(line: 2748, column: 20, scope: !25324)
!25374 = !DILocation(line: 2749, column: 2, scope: !25324)
!25375 = !DILocation(line: 2749, column: 12, scope: !25324)
!25376 = !DILocation(line: 2749, column: 21, scope: !25324)
!25377 = !DILocation(line: 2750, column: 2, scope: !25324)
!25378 = !DILocation(line: 2750, column: 12, scope: !25324)
!25379 = !DILocation(line: 2750, column: 29, scope: !25324)
!25380 = !DILocation(line: 2751, column: 2, scope: !25324)
!25381 = !DILocation(line: 2751, column: 12, scope: !25324)
!25382 = !DILocation(line: 2751, column: 21, scope: !25324)
!25383 = !DILocation(line: 2752, column: 2, scope: !25324)
!25384 = !DILocation(line: 2752, column: 12, scope: !25324)
!25385 = !DILocation(line: 2752, column: 22, scope: !25324)
!25386 = !DILocation(line: 2753, column: 2, scope: !25324)
!25387 = !DILocation(line: 2753, column: 12, scope: !25324)
!25388 = !DILocation(line: 2753, column: 28, scope: !25324)
!25389 = !DILocation(line: 2754, column: 2, scope: !25324)
!25390 = !DILocation(line: 2754, column: 12, scope: !25324)
!25391 = !DILocation(line: 2754, column: 29, scope: !25324)
!25392 = !DILocation(line: 2756, column: 23, scope: !25324)
!25393 = !DILocation(line: 2756, column: 35, scope: !25324)
!25394 = !DILocation(line: 2756, column: 51, scope: !25324)
!25395 = !DILocation(line: 2756, column: 9, scope: !25324)
!25396 = !DILocation(line: 2756, column: 2, scope: !25324)
!25397 = distinct !DISubprogram(name: "mlxsw_sp1_resources_register", scope: !3, file: !3, line: 3033, type: !12059, scopeLine: 3034, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!25398 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !25397, file: !3, line: 3033, type: !10727)
!25399 = !DILocation(line: 3033, column: 60, scope: !25397)
!25400 = !DILocalVariable(name: "err", scope: !25397, file: !3, line: 3035, type: !7)
!25401 = !DILocation(line: 3035, column: 6, scope: !25397)
!25402 = !DILocation(line: 3037, column: 41, scope: !25397)
!25403 = !DILocation(line: 3037, column: 8, scope: !25397)
!25404 = !DILocation(line: 3037, column: 6, scope: !25397)
!25405 = !DILocation(line: 3038, column: 6, scope: !25406)
!25406 = distinct !DILexicalBlock(scope: !25397, file: !3, line: 3038, column: 6)
!25407 = !DILocation(line: 3038, column: 6, scope: !25397)
!25408 = !DILocation(line: 3039, column: 10, scope: !25406)
!25409 = !DILocation(line: 3039, column: 3, scope: !25406)
!25410 = !DILocation(line: 3041, column: 41, scope: !25397)
!25411 = !DILocation(line: 3041, column: 8, scope: !25397)
!25412 = !DILocation(line: 3041, column: 6, scope: !25397)
!25413 = !DILocation(line: 3042, column: 6, scope: !25414)
!25414 = distinct !DILexicalBlock(scope: !25397, file: !3, line: 3042, column: 6)
!25415 = !DILocation(line: 3042, column: 6, scope: !25397)
!25416 = !DILocation(line: 3043, column: 3, scope: !25414)
!25417 = !DILocation(line: 3045, column: 44, scope: !25397)
!25418 = !DILocation(line: 3045, column: 8, scope: !25397)
!25419 = !DILocation(line: 3045, column: 6, scope: !25397)
!25420 = !DILocation(line: 3046, column: 6, scope: !25421)
!25421 = distinct !DILexicalBlock(scope: !25397, file: !3, line: 3046, column: 6)
!25422 = !DILocation(line: 3046, column: 6, scope: !25397)
!25423 = !DILocation(line: 3047, column: 3, scope: !25421)
!25424 = !DILocation(line: 3049, column: 44, scope: !25397)
!25425 = !DILocation(line: 3049, column: 8, scope: !25397)
!25426 = !DILocation(line: 3049, column: 6, scope: !25397)
!25427 = !DILocation(line: 3050, column: 6, scope: !25428)
!25428 = distinct !DILexicalBlock(scope: !25397, file: !3, line: 3050, column: 6)
!25429 = !DILocation(line: 3050, column: 6, scope: !25397)
!25430 = !DILocation(line: 3051, column: 3, scope: !25428)
!25431 = !DILocation(line: 3053, column: 2, scope: !25397)
!25432 = !DILabel(scope: !25397, name: "err_resources_counter_register", file: !3, line: 3055)
!25433 = !DILocation(line: 3055, column: 1, scope: !25397)
!25434 = !DILabel(scope: !25397, name: "err_resources_span_register", file: !3, line: 3056)
!25435 = !DILocation(line: 3056, column: 1, scope: !25397)
!25436 = !DILocation(line: 3057, column: 47, scope: !25397)
!25437 = !DILocation(line: 3057, column: 31, scope: !25397)
!25438 = !DILocation(line: 3057, column: 2, scope: !25397)
!25439 = !DILocation(line: 3058, column: 9, scope: !25397)
!25440 = !DILocation(line: 3058, column: 2, scope: !25397)
!25441 = !DILocation(line: 3059, column: 1, scope: !25397)
!25442 = distinct !DISubprogram(name: "mlxsw_sp_kvd_sizes_get", scope: !3, file: !3, line: 3089, type: !12161, scopeLine: 3093, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!25443 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !25442, file: !3, line: 3089, type: !10727)
!25444 = !DILocation(line: 3089, column: 54, scope: !25442)
!25445 = !DILocalVariable(name: "profile", arg: 2, scope: !25442, file: !3, line: 3090, type: !12163)
!25446 = !DILocation(line: 3090, column: 42, scope: !25442)
!25447 = !DILocalVariable(name: "p_single_size", arg: 3, scope: !25442, file: !3, line: 3091, type: !3933)
!25448 = !DILocation(line: 3091, column: 12, scope: !25442)
!25449 = !DILocalVariable(name: "p_double_size", arg: 4, scope: !25442, file: !3, line: 3091, type: !3933)
!25450 = !DILocation(line: 3091, column: 32, scope: !25442)
!25451 = !DILocalVariable(name: "p_linear_size", arg: 5, scope: !25442, file: !3, line: 3092, type: !3933)
!25452 = !DILocation(line: 3092, column: 12, scope: !25442)
!25453 = !DILocalVariable(name: "devlink", scope: !25442, file: !3, line: 3094, type: !8429)
!25454 = !DILocation(line: 3094, column: 18, scope: !25442)
!25455 = !DILocation(line: 3094, column: 44, scope: !25442)
!25456 = !DILocation(line: 3094, column: 28, scope: !25442)
!25457 = !DILocalVariable(name: "double_size", scope: !25442, file: !3, line: 3095, type: !862)
!25458 = !DILocation(line: 3095, column: 6, scope: !25442)
!25459 = !DILocalVariable(name: "err", scope: !25442, file: !3, line: 3096, type: !7)
!25460 = !DILocation(line: 3096, column: 6, scope: !25442)
!25461 = !DILocation(line: 3098, column: 7, scope: !25462)
!25462 = distinct !DILexicalBlock(scope: !25442, file: !3, line: 3098, column: 6)
!25463 = !DILocation(line: 3098, column: 61, scope: !25462)
!25464 = !DILocation(line: 3099, column: 7, scope: !25462)
!25465 = !DILocation(line: 3098, column: 6, scope: !25442)
!25466 = !DILocation(line: 3100, column: 3, scope: !25462)
!25467 = !DILocation(line: 3109, column: 34, scope: !25442)
!25468 = !DILocation(line: 3111, column: 6, scope: !25442)
!25469 = !DILocation(line: 3109, column: 8, scope: !25442)
!25470 = !DILocation(line: 3109, column: 6, scope: !25442)
!25471 = !DILocation(line: 3112, column: 6, scope: !25472)
!25472 = distinct !DILexicalBlock(scope: !25442, file: !3, line: 3112, column: 6)
!25473 = !DILocation(line: 3112, column: 6, scope: !25442)
!25474 = !DILocation(line: 3113, column: 20, scope: !25472)
!25475 = !DILocation(line: 3113, column: 29, scope: !25472)
!25476 = !DILocation(line: 3113, column: 4, scope: !25472)
!25477 = !DILocation(line: 3113, column: 18, scope: !25472)
!25478 = !DILocation(line: 3113, column: 3, scope: !25472)
!25479 = !DILocation(line: 3115, column: 34, scope: !25442)
!25480 = !DILocation(line: 3117, column: 6, scope: !25442)
!25481 = !DILocation(line: 3115, column: 8, scope: !25442)
!25482 = !DILocation(line: 3115, column: 6, scope: !25442)
!25483 = !DILocation(line: 3118, column: 6, scope: !25484)
!25484 = distinct !DILexicalBlock(scope: !25442, file: !3, line: 3118, column: 6)
!25485 = !DILocation(line: 3118, column: 6, scope: !25442)
!25486 = !DILocation(line: 3119, column: 17, scope: !25487)
!25487 = distinct !DILexicalBlock(scope: !25484, file: !3, line: 3118, column: 11)
!25488 = !DILocation(line: 3120, column: 11, scope: !25487)
!25489 = !DILocation(line: 3120, column: 10, scope: !25487)
!25490 = !DILocation(line: 3119, column: 58, scope: !25487)
!25491 = !DILocation(line: 3119, column: 15, scope: !25487)
!25492 = !DILocation(line: 3121, column: 18, scope: !25487)
!25493 = !DILocation(line: 3121, column: 27, scope: !25487)
!25494 = !DILocation(line: 3121, column: 15, scope: !25487)
!25495 = !DILocation(line: 3122, column: 18, scope: !25487)
!25496 = !DILocation(line: 3122, column: 27, scope: !25487)
!25497 = !DILocation(line: 3123, column: 11, scope: !25487)
!25498 = !DILocation(line: 3123, column: 20, scope: !25487)
!25499 = !DILocation(line: 3122, column: 49, scope: !25487)
!25500 = !DILocation(line: 3122, column: 15, scope: !25487)
!25501 = !DILocalVariable(name: "__x", scope: !25502, file: !3, line: 3124, type: !862)
!25502 = distinct !DILexicalBlock(scope: !25487, file: !3, line: 3124, column: 20)
!25503 = !DILocation(line: 3124, column: 20, scope: !25502)
!25504 = !DILocation(line: 3124, column: 20, scope: !25487)
!25505 = !DILocation(line: 3124, column: 4, scope: !25487)
!25506 = !DILocation(line: 3124, column: 18, scope: !25487)
!25507 = !DILocation(line: 3126, column: 2, scope: !25487)
!25508 = !DILocation(line: 3128, column: 34, scope: !25442)
!25509 = !DILocation(line: 3130, column: 6, scope: !25442)
!25510 = !DILocation(line: 3128, column: 8, scope: !25442)
!25511 = !DILocation(line: 3128, column: 6, scope: !25442)
!25512 = !DILocation(line: 3131, column: 6, scope: !25513)
!25513 = distinct !DILexicalBlock(scope: !25442, file: !3, line: 3131, column: 6)
!25514 = !DILocation(line: 3131, column: 6, scope: !25442)
!25515 = !DILocation(line: 3132, column: 20, scope: !25513)
!25516 = !DILocation(line: 3133, column: 7, scope: !25513)
!25517 = !DILocation(line: 3133, column: 6, scope: !25513)
!25518 = !DILocation(line: 3132, column: 61, scope: !25513)
!25519 = !DILocation(line: 3133, column: 24, scope: !25513)
!25520 = !DILocation(line: 3133, column: 23, scope: !25513)
!25521 = !DILocation(line: 3133, column: 21, scope: !25513)
!25522 = !DILocation(line: 3132, column: 4, scope: !25513)
!25523 = !DILocation(line: 3132, column: 18, scope: !25513)
!25524 = !DILocation(line: 3132, column: 3, scope: !25513)
!25525 = !DILocation(line: 3136, column: 7, scope: !25526)
!25526 = distinct !DILexicalBlock(scope: !25442, file: !3, line: 3136, column: 6)
!25527 = !DILocation(line: 3136, column: 6, scope: !25526)
!25528 = !DILocation(line: 3136, column: 23, scope: !25526)
!25529 = !DILocation(line: 3136, column: 21, scope: !25526)
!25530 = !DILocation(line: 3136, column: 75, scope: !25526)
!25531 = !DILocation(line: 3137, column: 7, scope: !25526)
!25532 = !DILocation(line: 3137, column: 6, scope: !25526)
!25533 = !DILocation(line: 3137, column: 23, scope: !25526)
!25534 = !DILocation(line: 3137, column: 21, scope: !25526)
!25535 = !DILocation(line: 3137, column: 75, scope: !25526)
!25536 = !DILocation(line: 3138, column: 6, scope: !25526)
!25537 = !DILocation(line: 3138, column: 50, scope: !25526)
!25538 = !DILocation(line: 3138, column: 49, scope: !25526)
!25539 = !DILocation(line: 3138, column: 47, scope: !25526)
!25540 = !DILocation(line: 3136, column: 6, scope: !25442)
!25541 = !DILocation(line: 3139, column: 3, scope: !25526)
!25542 = !DILocation(line: 3141, column: 2, scope: !25442)
!25543 = !DILocation(line: 3142, column: 1, scope: !25442)
!25544 = distinct !DISubprogram(name: "mlxsw_sp1_ptp_egr_fifo_event_func", scope: !3, file: !3, line: 2106, type: !11303, scopeLine: 2108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!25545 = !DILocalVariable(name: "reg", arg: 1, scope: !25544, file: !3, line: 2106, type: !11305)
!25546 = !DILocation(line: 2106, column: 76, scope: !25544)
!25547 = !DILocalVariable(name: "mtpptr_pl", arg: 2, scope: !25544, file: !3, line: 2107, type: !733)
!25548 = !DILocation(line: 2107, column: 18, scope: !25544)
!25549 = !DILocalVariable(name: "priv", arg: 3, scope: !25544, file: !3, line: 2107, type: !726)
!25550 = !DILocation(line: 2107, column: 35, scope: !25544)
!25551 = !DILocalVariable(name: "mlxsw_sp", scope: !25544, file: !3, line: 2109, type: !10721)
!25552 = !DILocation(line: 2109, column: 19, scope: !25544)
!25553 = !DILocation(line: 2109, column: 30, scope: !25544)
!25554 = !DILocation(line: 2111, column: 32, scope: !25544)
!25555 = !DILocation(line: 2111, column: 42, scope: !25544)
!25556 = !DILocation(line: 2111, column: 2, scope: !25544)
!25557 = !DILocation(line: 2112, column: 1, scope: !25544)
!25558 = distinct !DISubprogram(name: "mlxsw_sp1_ptp_ing_fifo_event_func", scope: !3, file: !3, line: 2098, type: !11303, scopeLine: 2100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!25559 = !DILocalVariable(name: "reg", arg: 1, scope: !25558, file: !3, line: 2098, type: !11305)
!25560 = !DILocation(line: 2098, column: 76, scope: !25558)
!25561 = !DILocalVariable(name: "mtpptr_pl", arg: 2, scope: !25558, file: !3, line: 2099, type: !733)
!25562 = !DILocation(line: 2099, column: 18, scope: !25558)
!25563 = !DILocalVariable(name: "priv", arg: 3, scope: !25558, file: !3, line: 2099, type: !726)
!25564 = !DILocation(line: 2099, column: 35, scope: !25558)
!25565 = !DILocalVariable(name: "mlxsw_sp", scope: !25558, file: !3, line: 2101, type: !10721)
!25566 = !DILocation(line: 2101, column: 19, scope: !25558)
!25567 = !DILocation(line: 2101, column: 30, scope: !25558)
!25568 = !DILocation(line: 2103, column: 32, scope: !25558)
!25569 = !DILocation(line: 2103, column: 42, scope: !25558)
!25570 = !DILocation(line: 2103, column: 2, scope: !25558)
!25571 = !DILocation(line: 2104, column: 1, scope: !25558)
!25572 = distinct !DISubprogram(name: "mlxsw_sp1_ptp_fifo_event_func", scope: !3, file: !3, line: 2074, type: !25573, scopeLine: 2076, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!25573 = !DISubroutineType(types: !25574)
!25574 = !{null, !10721, !733, !696}
!25575 = !DILocalVariable(name: "mlxsw_sp", arg: 1, scope: !25572, file: !3, line: 2074, type: !10721)
!25576 = !DILocation(line: 2074, column: 60, scope: !25572)
!25577 = !DILocalVariable(name: "mtpptr_pl", arg: 2, scope: !25572, file: !3, line: 2075, type: !733)
!25578 = !DILocation(line: 2075, column: 14, scope: !25572)
!25579 = !DILocalVariable(name: "ingress", arg: 3, scope: !25572, file: !3, line: 2075, type: !696)
!25580 = !DILocation(line: 2075, column: 30, scope: !25572)
!25581 = !DILocalVariable(name: "local_port", scope: !25572, file: !3, line: 2077, type: !1552)
!25582 = !DILocation(line: 2077, column: 5, scope: !25572)
!25583 = !DILocalVariable(name: "num_rec", scope: !25572, file: !3, line: 2078, type: !1552)
!25584 = !DILocation(line: 2078, column: 5, scope: !25572)
!25585 = !DILocalVariable(name: "i", scope: !25572, file: !3, line: 2079, type: !7)
!25586 = !DILocation(line: 2079, column: 6, scope: !25572)
!25587 = !DILocation(line: 2081, column: 47, scope: !25572)
!25588 = !DILocation(line: 2081, column: 15, scope: !25572)
!25589 = !DILocation(line: 2081, column: 13, scope: !25572)
!25590 = !DILocation(line: 2082, column: 41, scope: !25572)
!25591 = !DILocation(line: 2082, column: 12, scope: !25572)
!25592 = !DILocation(line: 2082, column: 10, scope: !25572)
!25593 = !DILocation(line: 2083, column: 9, scope: !25594)
!25594 = distinct !DILexicalBlock(scope: !25572, file: !3, line: 2083, column: 2)
!25595 = !DILocation(line: 2083, column: 7, scope: !25594)
!25596 = !DILocation(line: 2083, column: 14, scope: !25597)
!25597 = distinct !DILexicalBlock(scope: !25594, file: !3, line: 2083, column: 2)
!25598 = !DILocation(line: 2083, column: 18, scope: !25597)
!25599 = !DILocation(line: 2083, column: 16, scope: !25597)
!25600 = !DILocation(line: 2083, column: 2, scope: !25594)
!25601 = !DILocalVariable(name: "domain_number", scope: !25602, file: !3, line: 2084, type: !1552)
!25602 = distinct !DILexicalBlock(scope: !25597, file: !3, line: 2083, column: 32)
!25603 = !DILocation(line: 2084, column: 6, scope: !25602)
!25604 = !DILocalVariable(name: "message_type", scope: !25602, file: !3, line: 2085, type: !1552)
!25605 = !DILocation(line: 2085, column: 6, scope: !25602)
!25606 = !DILocalVariable(name: "sequence_id", scope: !25602, file: !3, line: 2086, type: !1193)
!25607 = !DILocation(line: 2086, column: 7, scope: !25602)
!25608 = !DILocalVariable(name: "timestamp", scope: !25602, file: !3, line: 2087, type: !492)
!25609 = !DILocation(line: 2087, column: 7, scope: !25602)
!25610 = !DILocation(line: 2089, column: 27, scope: !25602)
!25611 = !DILocation(line: 2089, column: 38, scope: !25602)
!25612 = !DILocation(line: 2089, column: 3, scope: !25602)
!25613 = !DILocation(line: 2092, column: 31, scope: !25602)
!25614 = !DILocation(line: 2092, column: 41, scope: !25602)
!25615 = !DILocation(line: 2092, column: 50, scope: !25602)
!25616 = !DILocation(line: 2093, column: 10, scope: !25602)
!25617 = !DILocation(line: 2093, column: 24, scope: !25602)
!25618 = !DILocation(line: 2094, column: 10, scope: !25602)
!25619 = !DILocation(line: 2094, column: 23, scope: !25602)
!25620 = !DILocation(line: 2092, column: 3, scope: !25602)
!25621 = !DILocation(line: 2095, column: 2, scope: !25602)
!25622 = !DILocation(line: 2083, column: 28, scope: !25597)
!25623 = !DILocation(line: 2083, column: 2, scope: !25597)
!25624 = distinct !{!25624, !25600, !25625}
!25625 = !DILocation(line: 2095, column: 2, scope: !25594)
!25626 = !DILocation(line: 2096, column: 1, scope: !25572)
!25627 = distinct !DISubprogram(name: "mlxsw_reg_mtpptr_local_port_get", scope: !10113, file: !10113, line: 9830, type: !19837, scopeLine: 9830, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!25628 = !DILocalVariable(name: "buf", arg: 1, scope: !25627, file: !10113, line: 9830, type: !453)
!25629 = !DILocation(line: 9830, column: 1, scope: !25627)
!25630 = distinct !DISubprogram(name: "mlxsw_reg_mtpptr_num_rec_get", scope: !10113, file: !10113, line: 9854, type: !19837, scopeLine: 9854, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!25631 = !DILocalVariable(name: "buf", arg: 1, scope: !25630, file: !10113, line: 9854, type: !453)
!25632 = !DILocation(line: 9854, column: 1, scope: !25630)
!25633 = distinct !DISubprogram(name: "mlxsw_reg_mtpptr_unpack", scope: !10113, file: !10113, line: 9899, type: !25634, scopeLine: 9905, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!25634 = !DISubroutineType(types: !25635)
!25635 = !{null, !453, !14, !8100, !8100, !8521, !3933}
!25636 = !DILocalVariable(name: "payload", arg: 1, scope: !25633, file: !10113, line: 9899, type: !453)
!25637 = !DILocation(line: 9899, column: 56, scope: !25633)
!25638 = !DILocalVariable(name: "rec", arg: 2, scope: !25633, file: !10113, line: 9900, type: !14)
!25639 = !DILocation(line: 9900, column: 22, scope: !25633)
!25640 = !DILocalVariable(name: "p_message_type", arg: 3, scope: !25633, file: !10113, line: 9901, type: !8100)
!25641 = !DILocation(line: 9901, column: 13, scope: !25633)
!25642 = !DILocalVariable(name: "p_domain_number", arg: 4, scope: !25633, file: !10113, line: 9902, type: !8100)
!25643 = !DILocation(line: 9902, column: 13, scope: !25633)
!25644 = !DILocalVariable(name: "p_sequence_id", arg: 5, scope: !25633, file: !10113, line: 9903, type: !8521)
!25645 = !DILocation(line: 9903, column: 14, scope: !25633)
!25646 = !DILocalVariable(name: "p_timestamp", arg: 6, scope: !25633, file: !10113, line: 9904, type: !3933)
!25647 = !DILocation(line: 9904, column: 14, scope: !25633)
!25648 = !DILocalVariable(name: "timestamp_high", scope: !25633, file: !10113, line: 9906, type: !862)
!25649 = !DILocation(line: 9906, column: 6, scope: !25633)
!25650 = !DILocalVariable(name: "timestamp_low", scope: !25633, file: !10113, line: 9906, type: !862)
!25651 = !DILocation(line: 9906, column: 22, scope: !25633)
!25652 = !DILocation(line: 9908, column: 58, scope: !25633)
!25653 = !DILocation(line: 9908, column: 67, scope: !25633)
!25654 = !DILocation(line: 9908, column: 20, scope: !25633)
!25655 = !DILocation(line: 9908, column: 3, scope: !25633)
!25656 = !DILocation(line: 9908, column: 18, scope: !25633)
!25657 = !DILocation(line: 9909, column: 60, scope: !25633)
!25658 = !DILocation(line: 9909, column: 69, scope: !25633)
!25659 = !DILocation(line: 9909, column: 21, scope: !25633)
!25660 = !DILocation(line: 9909, column: 3, scope: !25633)
!25661 = !DILocation(line: 9909, column: 19, scope: !25633)
!25662 = !DILocation(line: 9910, column: 56, scope: !25633)
!25663 = !DILocation(line: 9910, column: 65, scope: !25633)
!25664 = !DILocation(line: 9910, column: 19, scope: !25633)
!25665 = !DILocation(line: 9910, column: 3, scope: !25633)
!25666 = !DILocation(line: 9910, column: 17, scope: !25633)
!25667 = !DILocation(line: 9911, column: 59, scope: !25633)
!25668 = !DILocation(line: 9911, column: 68, scope: !25633)
!25669 = !DILocation(line: 9911, column: 19, scope: !25633)
!25670 = !DILocation(line: 9911, column: 17, scope: !25633)
!25671 = !DILocation(line: 9912, column: 57, scope: !25633)
!25672 = !DILocation(line: 9912, column: 66, scope: !25633)
!25673 = !DILocation(line: 9912, column: 18, scope: !25633)
!25674 = !DILocation(line: 9912, column: 16, scope: !25633)
!25675 = !DILocation(line: 9913, column: 22, scope: !25633)
!25676 = !DILocation(line: 9913, column: 17, scope: !25633)
!25677 = !DILocation(line: 9913, column: 37, scope: !25633)
!25678 = !DILocation(line: 9913, column: 45, scope: !25633)
!25679 = !DILocation(line: 9913, column: 43, scope: !25633)
!25680 = !DILocation(line: 9913, column: 3, scope: !25633)
!25681 = !DILocation(line: 9913, column: 15, scope: !25633)
!25682 = !DILocation(line: 9914, column: 1, scope: !25633)
!25683 = distinct !DISubprogram(name: "mlxsw_reg_mtpptr_rec_message_type_get", scope: !10113, file: !10113, line: 9861, type: !23167, scopeLine: 9861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!25684 = !DILocalVariable(name: "buf", arg: 1, scope: !25683, file: !10113, line: 9861, type: !453)
!25685 = !DILocation(line: 9861, column: 1, scope: !25683)
!25686 = !DILocalVariable(name: "index", arg: 2, scope: !25683, file: !10113, line: 9861, type: !633)
!25687 = distinct !DISubprogram(name: "mlxsw_reg_mtpptr_rec_domain_number_get", scope: !10113, file: !10113, line: 9869, type: !23167, scopeLine: 9869, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!25688 = !DILocalVariable(name: "buf", arg: 1, scope: !25687, file: !10113, line: 9869, type: !453)
!25689 = !DILocation(line: 9869, column: 1, scope: !25687)
!25690 = !DILocalVariable(name: "index", arg: 2, scope: !25687, file: !10113, line: 9869, type: !633)
!25691 = distinct !DISubprogram(name: "mlxsw_reg_mtpptr_rec_sequence_id_get", scope: !10113, file: !10113, line: 9877, type: !23167, scopeLine: 9877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!25692 = !DILocalVariable(name: "buf", arg: 1, scope: !25691, file: !10113, line: 9877, type: !453)
!25693 = !DILocation(line: 9877, column: 1, scope: !25691)
!25694 = !DILocalVariable(name: "index", arg: 2, scope: !25691, file: !10113, line: 9877, type: !633)
!25695 = distinct !DISubprogram(name: "mlxsw_reg_mtpptr_rec_timestamp_high_get", scope: !10113, file: !10113, line: 9887, type: !23167, scopeLine: 9887, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!25696 = !DILocalVariable(name: "buf", arg: 1, scope: !25695, file: !10113, line: 9887, type: !453)
!25697 = !DILocation(line: 9887, column: 1, scope: !25695)
!25698 = !DILocalVariable(name: "index", arg: 2, scope: !25695, file: !10113, line: 9887, type: !633)
!25699 = distinct !DISubprogram(name: "mlxsw_reg_mtpptr_rec_timestamp_low_get", scope: !10113, file: !10113, line: 9895, type: !23167, scopeLine: 9895, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!25700 = !DILocalVariable(name: "buf", arg: 1, scope: !25699, file: !10113, line: 9895, type: !453)
!25701 = !DILocation(line: 9895, column: 1, scope: !25699)
!25702 = !DILocalVariable(name: "index", arg: 2, scope: !25699, file: !10113, line: 9895, type: !633)
!25703 = distinct !DISubprogram(name: "mlxsw_sp1_resources_kvd_register", scope: !3, file: !3, line: 2928, type: !12059, scopeLine: 2929, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!25704 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !25703, file: !3, line: 2928, type: !10727)
!25705 = !DILocation(line: 2928, column: 64, scope: !25703)
!25706 = !DILocalVariable(name: "devlink", scope: !25703, file: !3, line: 2930, type: !8429)
!25707 = !DILocation(line: 2930, column: 18, scope: !25703)
!25708 = !DILocation(line: 2930, column: 44, scope: !25703)
!25709 = !DILocation(line: 2930, column: 28, scope: !25703)
!25710 = !DILocalVariable(name: "hash_single_size_params", scope: !25703, file: !3, line: 2931, type: !25109)
!25711 = !DILocation(line: 2931, column: 38, scope: !25703)
!25712 = !DILocalVariable(name: "hash_double_size_params", scope: !25703, file: !3, line: 2932, type: !25109)
!25713 = !DILocation(line: 2932, column: 38, scope: !25703)
!25714 = !DILocalVariable(name: "linear_size_params", scope: !25703, file: !3, line: 2933, type: !25109)
!25715 = !DILocation(line: 2933, column: 38, scope: !25703)
!25716 = !DILocalVariable(name: "kvd_size_params", scope: !25703, file: !3, line: 2934, type: !25109)
!25717 = !DILocation(line: 2934, column: 38, scope: !25703)
!25718 = !DILocalVariable(name: "kvd_size", scope: !25703, file: !3, line: 2935, type: !862)
!25719 = !DILocation(line: 2935, column: 6, scope: !25703)
!25720 = !DILocalVariable(name: "single_size", scope: !25703, file: !3, line: 2935, type: !862)
!25721 = !DILocation(line: 2935, column: 16, scope: !25703)
!25722 = !DILocalVariable(name: "double_size", scope: !25703, file: !3, line: 2935, type: !862)
!25723 = !DILocation(line: 2935, column: 29, scope: !25703)
!25724 = !DILocalVariable(name: "linear_size", scope: !25703, file: !3, line: 2935, type: !862)
!25725 = !DILocation(line: 2935, column: 42, scope: !25703)
!25726 = !DILocalVariable(name: "profile", scope: !25703, file: !3, line: 2936, type: !12163)
!25727 = !DILocation(line: 2936, column: 37, scope: !25703)
!25728 = !DILocalVariable(name: "err", scope: !25703, file: !3, line: 2937, type: !7)
!25729 = !DILocation(line: 2937, column: 6, scope: !25703)
!25730 = !DILocation(line: 2939, column: 10, scope: !25703)
!25731 = !DILocation(line: 2940, column: 7, scope: !25732)
!25732 = distinct !DILexicalBlock(scope: !25703, file: !3, line: 2940, column: 6)
!25733 = !DILocation(line: 2940, column: 6, scope: !25703)
!25734 = !DILocation(line: 2941, column: 3, scope: !25732)
!25735 = !DILocation(line: 2943, column: 40, scope: !25703)
!25736 = !DILocation(line: 2943, column: 2, scope: !25703)
!25737 = !DILocation(line: 2948, column: 13, scope: !25703)
!25738 = !DILocation(line: 2948, column: 11, scope: !25703)
!25739 = !DILocation(line: 2949, column: 34, scope: !25703)
!25740 = !DILocation(line: 2950, column: 6, scope: !25703)
!25741 = !DILocation(line: 2949, column: 8, scope: !25703)
!25742 = !DILocation(line: 2949, column: 6, scope: !25703)
!25743 = !DILocation(line: 2953, column: 6, scope: !25744)
!25744 = distinct !DILexicalBlock(scope: !25703, file: !3, line: 2953, column: 6)
!25745 = !DILocation(line: 2953, column: 6, scope: !25703)
!25746 = !DILocation(line: 2954, column: 10, scope: !25744)
!25747 = !DILocation(line: 2954, column: 3, scope: !25744)
!25748 = !DILocation(line: 2956, column: 16, scope: !25703)
!25749 = !DILocation(line: 2956, column: 25, scope: !25703)
!25750 = !DILocation(line: 2956, column: 14, scope: !25703)
!25751 = !DILocation(line: 2957, column: 34, scope: !25703)
!25752 = !DILocation(line: 2958, column: 6, scope: !25703)
!25753 = !DILocation(line: 2957, column: 8, scope: !25703)
!25754 = !DILocation(line: 2957, column: 6, scope: !25703)
!25755 = !DILocation(line: 2962, column: 6, scope: !25756)
!25756 = distinct !DILexicalBlock(scope: !25703, file: !3, line: 2962, column: 6)
!25757 = !DILocation(line: 2962, column: 6, scope: !25703)
!25758 = !DILocation(line: 2963, column: 10, scope: !25756)
!25759 = !DILocation(line: 2963, column: 3, scope: !25756)
!25760 = !DILocation(line: 2965, column: 42, scope: !25703)
!25761 = !DILocation(line: 2965, column: 8, scope: !25703)
!25762 = !DILocation(line: 2965, column: 6, scope: !25703)
!25763 = !DILocation(line: 2966, column: 7, scope: !25764)
!25764 = distinct !DILexicalBlock(scope: !25703, file: !3, line: 2966, column: 7)
!25765 = !DILocation(line: 2966, column: 7, scope: !25703)
!25766 = !DILocation(line: 2967, column: 10, scope: !25764)
!25767 = !DILocation(line: 2967, column: 3, scope: !25764)
!25768 = !DILocation(line: 2969, column: 16, scope: !25703)
!25769 = !DILocation(line: 2969, column: 27, scope: !25703)
!25770 = !DILocation(line: 2969, column: 25, scope: !25703)
!25771 = !DILocation(line: 2969, column: 14, scope: !25703)
!25772 = !DILocation(line: 2970, column: 17, scope: !25703)
!25773 = !DILocation(line: 2970, column: 26, scope: !25703)
!25774 = !DILocation(line: 2970, column: 14, scope: !25703)
!25775 = !DILocation(line: 2971, column: 17, scope: !25703)
!25776 = !DILocation(line: 2971, column: 26, scope: !25703)
!25777 = !DILocation(line: 2972, column: 10, scope: !25703)
!25778 = !DILocation(line: 2972, column: 19, scope: !25703)
!25779 = !DILocation(line: 2971, column: 48, scope: !25703)
!25780 = !DILocation(line: 2971, column: 14, scope: !25703)
!25781 = !DILocalVariable(name: "__x", scope: !25782, file: !3, line: 2973, type: !862)
!25782 = distinct !DILexicalBlock(scope: !25703, file: !3, line: 2973, column: 16)
!25783 = !DILocation(line: 2973, column: 16, scope: !25782)
!25784 = !DILocation(line: 2973, column: 14, scope: !25703)
!25785 = !DILocation(line: 2974, column: 34, scope: !25703)
!25786 = !DILocation(line: 2975, column: 6, scope: !25703)
!25787 = !DILocation(line: 2974, column: 8, scope: !25703)
!25788 = !DILocation(line: 2974, column: 6, scope: !25703)
!25789 = !DILocation(line: 2979, column: 6, scope: !25790)
!25790 = distinct !DILexicalBlock(scope: !25703, file: !3, line: 2979, column: 6)
!25791 = !DILocation(line: 2979, column: 6, scope: !25703)
!25792 = !DILocation(line: 2980, column: 10, scope: !25790)
!25793 = !DILocation(line: 2980, column: 3, scope: !25790)
!25794 = !DILocation(line: 2982, column: 16, scope: !25703)
!25795 = !DILocation(line: 2982, column: 27, scope: !25703)
!25796 = !DILocation(line: 2982, column: 25, scope: !25703)
!25797 = !DILocation(line: 2982, column: 41, scope: !25703)
!25798 = !DILocation(line: 2982, column: 39, scope: !25703)
!25799 = !DILocation(line: 2982, column: 14, scope: !25703)
!25800 = !DILocation(line: 2983, column: 34, scope: !25703)
!25801 = !DILocation(line: 2984, column: 6, scope: !25703)
!25802 = !DILocation(line: 2983, column: 8, scope: !25703)
!25803 = !DILocation(line: 2983, column: 6, scope: !25703)
!25804 = !DILocation(line: 2988, column: 6, scope: !25805)
!25805 = distinct !DILexicalBlock(scope: !25703, file: !3, line: 2988, column: 6)
!25806 = !DILocation(line: 2988, column: 6, scope: !25703)
!25807 = !DILocation(line: 2989, column: 10, scope: !25805)
!25808 = !DILocation(line: 2989, column: 3, scope: !25805)
!25809 = !DILocation(line: 2991, column: 2, scope: !25703)
!25810 = !DILocation(line: 2992, column: 1, scope: !25703)
!25811 = distinct !DISubprogram(name: "mlxsw_sp_resource_size_params_prepare", scope: !3, file: !3, line: 2893, type: !25812, scopeLine: 2898, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !898)
!25812 = !DISubroutineType(types: !25813)
!25813 = !{null, !10727, !25160, !25160, !25160, !25160}
!25814 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !25811, file: !3, line: 2893, type: !10727)
!25815 = !DILocation(line: 2893, column: 58, scope: !25811)
!25816 = !DILocalVariable(name: "kvd_size_params", arg: 2, scope: !25811, file: !3, line: 2894, type: !25160)
!25817 = !DILocation(line: 2894, column: 48, scope: !25811)
!25818 = !DILocalVariable(name: "linear_size_params", arg: 3, scope: !25811, file: !3, line: 2895, type: !25160)
!25819 = !DILocation(line: 2895, column: 48, scope: !25811)
!25820 = !DILocalVariable(name: "hash_double_size_params", arg: 4, scope: !25811, file: !3, line: 2896, type: !25160)
!25821 = !DILocation(line: 2896, column: 48, scope: !25811)
!25822 = !DILocalVariable(name: "hash_single_size_params", arg: 5, scope: !25811, file: !3, line: 2897, type: !25160)
!25823 = !DILocation(line: 2897, column: 48, scope: !25811)
!25824 = !DILocalVariable(name: "single_size_min", scope: !25811, file: !3, line: 2899, type: !862)
!25825 = !DILocation(line: 2899, column: 6, scope: !25811)
!25826 = !DILocation(line: 2899, column: 24, scope: !25811)
!25827 = !DILocalVariable(name: "double_size_min", scope: !25811, file: !3, line: 2901, type: !862)
!25828 = !DILocation(line: 2901, column: 6, scope: !25811)
!25829 = !DILocation(line: 2901, column: 24, scope: !25811)
!25830 = !DILocalVariable(name: "kvd_size", scope: !25811, file: !3, line: 2903, type: !862)
!25831 = !DILocation(line: 2903, column: 6, scope: !25811)
!25832 = !DILocation(line: 2903, column: 17, scope: !25811)
!25833 = !DILocalVariable(name: "linear_size_min", scope: !25811, file: !3, line: 2904, type: !862)
!25834 = !DILocation(line: 2904, column: 6, scope: !25811)
!25835 = !DILocation(line: 2906, column: 36, scope: !25811)
!25836 = !DILocation(line: 2906, column: 53, scope: !25811)
!25837 = !DILocation(line: 2906, column: 63, scope: !25811)
!25838 = !DILocation(line: 2906, column: 2, scope: !25811)
!25839 = !DILocation(line: 2909, column: 36, scope: !25811)
!25840 = !DILocation(line: 2909, column: 56, scope: !25811)
!25841 = !DILocation(line: 2910, column: 8, scope: !25811)
!25842 = !DILocation(line: 2910, column: 19, scope: !25811)
!25843 = !DILocation(line: 2910, column: 17, scope: !25811)
!25844 = !DILocation(line: 2911, column: 8, scope: !25811)
!25845 = !DILocation(line: 2910, column: 35, scope: !25811)
!25846 = !DILocation(line: 2909, column: 2, scope: !25811)
!25847 = !DILocation(line: 2914, column: 36, scope: !25811)
!25848 = !DILocation(line: 2915, column: 8, scope: !25811)
!25849 = !DILocation(line: 2916, column: 8, scope: !25811)
!25850 = !DILocation(line: 2916, column: 19, scope: !25811)
!25851 = !DILocation(line: 2916, column: 17, scope: !25811)
!25852 = !DILocation(line: 2917, column: 8, scope: !25811)
!25853 = !DILocation(line: 2916, column: 35, scope: !25811)
!25854 = !DILocation(line: 2914, column: 2, scope: !25811)
!25855 = !DILocation(line: 2920, column: 36, scope: !25811)
!25856 = !DILocation(line: 2921, column: 8, scope: !25811)
!25857 = !DILocation(line: 2922, column: 8, scope: !25811)
!25858 = !DILocation(line: 2922, column: 19, scope: !25811)
!25859 = !DILocation(line: 2922, column: 17, scope: !25811)
!25860 = !DILocation(line: 2923, column: 8, scope: !25811)
!25861 = !DILocation(line: 2922, column: 35, scope: !25811)
!25862 = !DILocation(line: 2920, column: 2, scope: !25811)
!25863 = !DILocation(line: 2926, column: 1, scope: !25811)
