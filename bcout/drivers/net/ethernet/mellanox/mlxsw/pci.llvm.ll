; ModuleID = '../bcout/drivers/net/ethernet/mellanox/mlxsw/pci.llvm.bc'
source_filename = "drivers/net/ethernet/mellanox/mlxsw/pci.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_mlxsw_pci_module_init6:\09\09\09"
module asm ".long\09mlxsw_pci_module_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.mlxsw_bus = type { i8*, i32 (i8*, %struct.mlxsw_core*, %struct.mlxsw_config_profile*, %struct.mlxsw_res*)*, void (i8*)*, i1 (i8*, %struct.mlxsw_tx_info*)*, i32 (i8*, %struct.sk_buff*, %struct.mlxsw_tx_info*)*, i32 (i8*, i16, i8, i32, i1, i8*, i64, i8*, i64, i8*)*, i32 (i8*)*, i32 (i8*)*, i8 }
%struct.mlxsw_core = type opaque
%struct.mlxsw_config_profile = type { i16, i8, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i8, i16, i16, i16, i8, i16, i8, i32, i8, i8, [8 x %struct.mlxsw_swid_config] }
%struct.mlxsw_swid_config = type { i8, i8, i8 }
%struct.mlxsw_res = type { [50 x i8], [50 x i64] }
%struct.mlxsw_tx_info = type { i8, i8 }
%struct.sk_buff = type { %union.anon.40, %union.anon.43, %union.anon.44, [48 x i8], %union.anon.45, i32, i32, i16, i16, i16, [0 x i8], i8, [0 x i32], [0 x i8], i16, [0 x i8], i16, %union.anon.47, i32, i32, i32, i16, i16, %union.anon.49, %union.anon.50, %union.anon.51, i16, i16, i16, i16, i16, i16, i16, [0 x i32], i32, i32, i8*, i8*, i32, %struct.refcount_struct }
%union.anon.40 = type { %struct.anon.41 }
%struct.anon.41 = type { %struct.sk_buff*, %struct.sk_buff*, %union.anon.42 }
%union.anon.42 = type { %struct.net_device* }
%struct.net_device = type { [16 x i8], %struct.netdev_name_node*, %struct.dev_ifalias*, i64, i64, i64, i32, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.88, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.net_device_stats, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.iw_handler_def*, %struct.iw_public_data*, %struct.net_device_ops*, %struct.ethtool_ops*, %struct.ndisc_ops*, %struct.header_ops*, i32, i32, i16, i16, i8, i8, i8, i8, i32, i32, i32, i16, i16, i8, i8, i16, i16, [32 x i8], i8, i8, i8, i8, i16, i16, i16, %struct.spinlock, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.kset*, i32, i32, i8, %struct.vlan_info*, %struct.in_device*, %struct.inet6_dev*, %struct.wireless_dev*, %struct.wpan_dev*, i8*, %struct.netdev_rx_queue*, i32, i32, %struct.bpf_prog*, i64, i32, i32 (%struct.sk_buff**)*, i8*, %struct.netdev_queue*, [32 x i8], %struct.hlist_node, %struct.netdev_queue*, i32, i32, %struct.Qdisc*, i32, %struct.spinlock, %struct.xdp_dev_bulk_queue*, %struct.timer_list, i32, i32, %struct.list_head, i32*, %struct.list_head, i8, i8, i16, i8, void (%struct.net_device*)*, %struct.possible_net_t, %union.anon.129, %struct.device, [4 x %struct.attribute_group*], %struct.attribute_group*, %struct.rtnl_link_ops*, i32, i16, i16, [16 x %struct.netdev_tc_txq], [16 x i8], %struct.phy_device*, %struct.sfp_bus*, %struct.lock_class_key*, %struct.lock_class_key*, i8, i8, %struct.list_head, %struct.udp_tunnel_nic_info*, %struct.udp_tunnel_nic*, [3 x %struct.bpf_xdp_entity] }
%struct.netdev_name_node = type { %struct.hlist_node, %struct.list_head, %struct.net_device*, i8* }
%struct.dev_ifalias = type { %struct.callback_head, [0 x i8] }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.anon.88 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.atomic64_t = type { i64 }
%struct.atomic_t = type { i32 }
%struct.iw_handler_def = type opaque
%struct.iw_public_data = type opaque
%struct.net_device_ops = type { i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.sk_buff*, %struct.net_device*, i64)*, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*)*, i32 (%struct.net_device*, i8*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ifreq*, i32)*, i32 (%struct.net_device*, %struct.ifmap*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.neigh_parms*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.rtnl_link_stats64*)*, i1 (%struct.net_device*, i32)*, i32 (i32, %struct.net_device*, i8*)*, %struct.net_device_stats* (%struct.net_device*)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32, i16, i8, i16)*, i32 (%struct.net_device*, i32, i32, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)*, i32 (%struct.net_device*, i32, %struct.nlattr**)*, i32 (%struct.net_device*, i32, %struct.sk_buff*)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)*, i32 (%struct.net_device*, i32, i64, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.net_device*)*, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)*, i64 (%struct.net_device*, i64)*, i32 (%struct.net_device*, i64)*, i32 (%struct.net_device*, %struct.neighbour*)*, void (%struct.net_device*, %struct.neighbour*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)*, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)*, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, i8*, i64)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, i8* (%struct.net_device*, %struct.net_device*)*, void (%struct.net_device*, i8*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.sk_buff*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.netdev_bpf*)*, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)*, i32 (%struct.net_device*, i32, i32)*, %struct.devlink_port* (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)*, %struct.net_device* (%struct.net_device*)* }
%struct.ifreq = type { %union.anon.89, %union.anon.90 }
%union.anon.89 = type { [16 x i8] }
%union.anon.90 = type { %struct.ifmap }
%struct.ifmap = type { i64, i64, i16, i8, i8, i8 }
%struct.neigh_parms = type opaque
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_info = type { i32, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.ifla_vf_stats = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.nlattr = type { i16, i16 }
%struct.ifla_vf_guid = type { i32, i64 }
%struct.netlink_ext_ack = type { i8*, %struct.nlattr*, %struct.nla_policy*, [20 x i8], i8 }
%struct.nla_policy = type opaque
%struct.neighbour = type opaque
%struct.ndmsg = type { i8, i8, i16, i32, i16, i8, i8 }
%struct.netlink_callback = type { %struct.sk_buff*, %struct.nlmsghdr*, i32 (%struct.sk_buff*, %struct.netlink_callback*)*, i32 (%struct.netlink_callback*)*, i8*, %struct.module*, %struct.netlink_ext_ack*, i16, i16, i32, i32, i32, i8, %union.anon.92 }
%struct.nlmsghdr = type { i32, i16, i16, i32, i32 }
%struct.module = type opaque
%union.anon.92 = type { [6 x i64] }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%struct.udp_tunnel_info = type opaque
%struct.netdev_bpf = type { i32, %union.anon.93 }
%union.anon.93 = type { %struct.anon.94 }
%struct.anon.94 = type { i32, %struct.bpf_prog*, %struct.netlink_ext_ack* }
%struct.xdp_frame = type { i8*, i16, i16, i32, %struct.xdp_mem_info, %struct.net_device* }
%struct.xdp_mem_info = type { i32, i32 }
%struct.devlink_port = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.devlink*, i32, i8, %struct.spinlock, i32, i32, i8*, %struct.devlink_port_attrs, i8, %struct.delayed_work, %struct.list_head, %struct.mutex }
%struct.devlink = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.devlink_dpipe_headers*, %struct.list_head, %struct.list_head, %struct.list_head, %struct.devlink_ops*, %struct.xarray, %struct.devlink_dev_stats, %struct.device*, %struct.possible_net_t, %struct.mutex, i8, [31 x i8], [0 x i8] }
%struct.devlink_dpipe_headers = type { %struct.devlink_dpipe_header**, i32 }
%struct.devlink_dpipe_header = type { i8*, i32, %struct.devlink_dpipe_field*, i32, i8 }
%struct.devlink_dpipe_field = type { i8*, i32, i32, i32 }
%struct.devlink_ops = type { i32, i64, i64, i32 (%struct.devlink*, i1, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32, i32, i32*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink_port*, i32)*, i32 (%struct.devlink*, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32, i16, %struct.devlink_sb_pool_info*)*, i32 (%struct.devlink*, i32, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink_port*, i32, i16, i32*)*, i32 (%struct.devlink_port*, i32, i16, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink_port*, i32, i16, i32, i16*, i32*)*, i32 (%struct.devlink_port*, i32, i16, i32, i16, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32)*, i32 (%struct.devlink*, i32)*, i32 (%struct.devlink_port*, i32, i16, i32*, i32*)*, i32 (%struct.devlink_port*, i32, i16, i32, i32*, i32*)*, i32 (%struct.devlink*, i16*)*, i32 (%struct.devlink*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i8*)*, i32 (%struct.devlink*, i8, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32*)*, i32 (%struct.devlink*, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_info_req*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_flash_update_params*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap*, i8*)*, void (%struct.devlink*, %struct.devlink_trap*, i8*)*, i32 (%struct.devlink*, %struct.devlink_trap*, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap_group*)*, i32 (%struct.devlink*, %struct.devlink_trap_group*, %struct.devlink_trap_policer*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap_group*, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap_policer*)*, void (%struct.devlink*, %struct.devlink_trap_policer*)*, i32 (%struct.devlink*, %struct.devlink_trap_policer*, i64, i64, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap_policer*, i64*)*, i32 (%struct.devlink*, %struct.devlink_port*, i8*, i32*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_port*, i8*, i32, %struct.netlink_ext_ack*)* }
%struct.devlink_sb_pool_info = type { i32, i32, i32, i32 }
%struct.devlink_info_req = type opaque
%struct.devlink_flash_update_params = type { i8*, i8*, i32 }
%struct.devlink_trap = type { i32, i32, i8, i16, i8*, i16, i32 }
%struct.devlink_trap_group = type { i8*, i16, i8, i32 }
%struct.devlink_trap_policer = type { i32, i64, i64, i64, i64, i64, i64 }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.devlink_dev_stats = type { [6 x i32], [6 x i32] }
%struct.devlink_port_attrs = type { i8, i32, i32, %struct.netdev_phys_item_id, %union.anon.125 }
%union.anon.125 = type { %struct.devlink_port_pci_vf_attrs }
%struct.devlink_port_pci_vf_attrs = type { i32, i16, i16, i8 }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.workqueue_struct = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.ip_tunnel_parm = type opaque
%struct.ethtool_ops = type { i32, void (%struct.net_device*, %struct.ethtool_drvinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, %struct.ethtool_regs*, i8*)*, void (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, void (%struct.net_device*, %struct.ethtool_ringparam*)*, i32 (%struct.net_device*, %struct.ethtool_ringparam*)*, void (%struct.net_device*, %struct.ethtool_pause_stats*)*, void (%struct.net_device*, %struct.ethtool_pauseparam*)*, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)*, void (%struct.net_device*, %struct.ethtool_test*, i64*)*, void (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)*, i32 (%struct.net_device*, %struct.ethtool_flash*)*, i32 (%struct.net_device*, i32*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32*, i8*, i8*)*, i32 (%struct.net_device*, i32*, i8*, i8)*, i32 (%struct.net_device*, i32*, i8*, i8*, i32)*, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)*, void (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_ts_info*)*, i32 (%struct.net_device*, %struct.ethtool_modinfo*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* }
%struct.ethtool_drvinfo = type { i32, [32 x i8], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [12 x i8], i32, i32, i32, i32, i32 }
%struct.ethtool_regs = type { i32, i32, i32, [0 x i8] }
%struct.ethtool_wolinfo = type { i32, i32, i32, [6 x i8] }
%struct.ethtool_link_ext_state_info = type { i32, %union.anon.126 }
%union.anon.126 = type { i32 }
%struct.ethtool_coalesce = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_ringparam = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_pause_stats = type { i64, i64 }
%struct.ethtool_pauseparam = type { i32, i32, i32, i32 }
%struct.ethtool_test = type { i32, i32, i32, i32, [0 x i64] }
%struct.ethtool_rxnfc = type { i32, i32, i64, %struct.ethtool_rx_flow_spec, %union.anon.127, [0 x i32] }
%struct.ethtool_rx_flow_spec = type { i32, %union.ethtool_flow_union, %struct.ethtool_flow_ext, %union.ethtool_flow_union, %struct.ethtool_flow_ext, i64, i32 }
%union.ethtool_flow_union = type { %struct.ethtool_tcpip6_spec, [12 x i8] }
%struct.ethtool_tcpip6_spec = type { [4 x i32], [4 x i32], i16, i16, i8 }
%struct.ethtool_flow_ext = type { [2 x i8], [6 x i8], i16, i16, [2 x i32] }
%union.anon.127 = type { i32 }
%struct.ethtool_flash = type { i32, i32, [128 x i8] }
%struct.ethtool_channels = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_dump = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_ts_info = type { i32, i32, i32, i32, [3 x i32], i32, [3 x i32] }
%struct.ethtool_modinfo = type { i32, i32, i32, [8 x i32] }
%struct.ethtool_eeprom = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_eee = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.ethtool_link_ksettings = type { %struct.ethtool_link_settings, %struct.anon.128 }
%struct.ethtool_link_settings = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [1 x i8], [7 x i32], [0 x i32] }
%struct.anon.128 = type { [2 x i64], [2 x i64], [2 x i64] }
%struct.ethtool_fecparam = type { i32, i32, i32, i32 }
%struct.ethtool_stats = type { i32, i32, [0 x i64] }
%struct.ethtool_tunable = type { i32, i32, i32, i32, [0 x i8*] }
%struct.ndisc_ops = type opaque
%struct.header_ops = type { i32 (%struct.sk_buff*, %struct.net_device*, i16, i8*, i8*, i32)*, i32 (%struct.sk_buff*, i8*)*, i32 (%struct.neighbour*, %struct.hh_cache*, i16)*, void (%struct.hh_cache*, %struct.net_device*, i8*)*, i1 (i8*, i32)*, i16 (%struct.sk_buff*)* }
%struct.hh_cache = type { i32, %struct.seqlock_t, [12 x i64] }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.86, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.86 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.84, %struct.list_head, %struct.list_head, %union.anon.85 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.82 }
%union.anon.82 = type { %struct.anon.83 }
%struct.anon.83 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.2, %union.anon.74, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.74 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.75, i32 }
%union.anon.75 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.67, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.18, [0 x i64] }
%struct.anon.18 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.19, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.19 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.20 }
%union.anon.20 = type { %struct.anon.21 }
%struct.anon.21 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.25, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.26, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.27, %union.anon.31, %struct.key_restriction* }
%union.anon.25 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.26 = type { i64 }
%union.anon.27 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.28, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.28 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.31 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type { %struct.refcount_struct, %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, %struct.key_tag*, %struct.user_namespace*, %struct.ucounts*, %struct.idr, %struct.ns_common, %struct.list_head, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.ctl_table_set, %struct.sock*, %struct.sock*, %struct.uevent_sock*, %struct.hlist_head*, %struct.hlist_head*, %struct.raw_notifier_head, i32, %struct.net_device*, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, %struct.netns_ipv4, %struct.netns_ipv6, %struct.sk_buff_head, %struct.net_generic*, %struct.netns_bpf, %struct.atomic64_t, %struct.netns_can, %struct.sock* }
%struct.llist_node = type { %struct.llist_node* }
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.proc_dir_entry = type opaque
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.35, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.35 = type { %struct.anon.36 }
%struct.anon.36 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.uevent_sock = type opaque
%struct.raw_notifier_head = type { %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.netns_core = type { %struct.ctl_table_header*, i32, i32*, %struct.prot_inuse* }
%struct.prot_inuse = type opaque
%struct.netns_mib = type { %struct.tcp_mib*, %struct.ipstats_mib*, %struct.linux_mib*, %struct.udp_mib*, %struct.udp_mib*, %struct.icmp_mib*, %struct.icmpmsg_mib*, %struct.proc_dir_entry*, %struct.udp_mib*, %struct.udp_mib*, %struct.ipstats_mib*, %struct.icmpv6_mib*, %struct.icmpv6msg_mib* }
%struct.tcp_mib = type { [16 x i64] }
%struct.linux_mib = type { [124 x i64] }
%struct.icmp_mib = type { [28 x i64] }
%struct.icmpmsg_mib = type { [512 x %struct.atomic64_t] }
%struct.udp_mib = type { [9 x i64] }
%struct.ipstats_mib = type { [37 x i64], %struct.u64_stats_sync }
%struct.u64_stats_sync = type {}
%struct.icmpv6_mib = type { [6 x i64] }
%struct.icmpv6msg_mib = type { [512 x %struct.atomic64_t] }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, %struct.ctl_table_header* }
%struct.netns_nexthop = type { %struct.rb_root, %struct.hlist_head*, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.netns_ipv4 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ipv4_devconf*, %struct.ipv4_devconf*, %struct.ip_ra_chain*, %struct.mutex, i8, %struct.hlist_head*, i8, %struct.sock*, %struct.sock**, %struct.sock*, %struct.inet_peer_base*, %struct.sock**, %struct.fqdir*, i32, i32, i32, i32, i32, i32, %struct.local_ports, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, i64, i64, %struct.inet_timewait_death_row, i32, i32, %struct.tcp_congestion_ops*, %struct.tcp_fastopen_context*, %struct.spinlock, i32, %struct.atomic_t, i64, i32, i32, i32, i32, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, i64*, i32, %struct.fib_notifier_ops*, i32, %struct.fib_notifier_ops*, i32, %struct.atomic_t, %struct.siphash_key_t }
%struct.ipv4_devconf = type opaque
%struct.ip_ra_chain = type opaque
%struct.inet_peer_base = type opaque
%struct.fqdir = type { i64, i64, i32, i32, %struct.inet_frags*, %struct.net*, i8, %struct.rhashtable, %struct.atomic64_t, %struct.work_struct }
%struct.inet_frags = type { i32, void (%struct.inet_frag_queue*, i8*)*, void (%struct.inet_frag_queue*)*, void (%struct.timer_list*)*, %struct.kmem_cache*, i8*, %struct.rhashtable_params, %struct.refcount_struct, %struct.completion }
%struct.inet_frag_queue = type { %struct.rhash_head, %union.anon.38, %struct.timer_list, %struct.spinlock, %struct.refcount_struct, %struct.rb_root, %struct.sk_buff*, %struct.sk_buff*, i64, i32, i32, i8, i16, %struct.fqdir*, %struct.callback_head }
%struct.rhash_head = type { %struct.rhash_head* }
%union.anon.38 = type { %struct.frag_v6_compare_key }
%struct.frag_v6_compare_key = type { %struct.in6_addr, %struct.in6_addr, i32, i32, i32 }
%struct.in6_addr = type { %union.anon.39 }
%union.anon.39 = type { [4 x i32] }
%struct.kmem_cache = type opaque
%struct.rhashtable_params = type { i16, i16, i16, i16, i32, i16, i8, i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)*, i32 (%struct.rhashtable_compare_arg*, i8*)* }
%struct.rhashtable_compare_arg = type { %struct.rhashtable*, i8* }
%struct.rhashtable = type { %struct.bucket_table*, i32, i32, %struct.rhashtable_params, i8, %struct.work_struct, %struct.mutex, %struct.spinlock, %struct.atomic_t }
%struct.bucket_table = type opaque
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.inet_timewait_death_row = type { %struct.atomic_t, %struct.inet_hashinfo*, i32 }
%struct.inet_hashinfo = type opaque
%struct.tcp_congestion_ops = type opaque
%struct.tcp_fastopen_context = type opaque
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.fib_notifier_ops = type opaque
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.netns_sysctl_ipv6, %struct.ipv6_devconf*, %struct.ipv6_devconf*, %struct.inet_peer_base*, %struct.fqdir*, %struct.fib6_info*, %struct.rt6_info*, %struct.rt6_statistics*, %struct.timer_list, %struct.hlist_head*, %struct.fib6_table*, %struct.list_head, %struct.dst_ops, %struct.rwlock_t, %struct.spinlock, i32, i64, %struct.sock**, %struct.sock*, %struct.sock*, %struct.sock*, %struct.sock*, %struct.atomic_t, %struct.atomic_t, %struct.seg6_pernet_data*, %struct.fib_notifier_ops*, %struct.fib_notifier_ops*, i32, %struct.anon.52 }
%struct.netns_sysctl_ipv6 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i64], i64*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.ipv6_devconf = type opaque
%struct.fib6_info = type opaque
%struct.rt6_info = type opaque
%struct.rt6_statistics = type opaque
%struct.fib6_table = type opaque
%struct.dst_ops = type { i16, i32, i32 (%struct.dst_ops*)*, %struct.dst_entry* (%struct.dst_entry*, i32)*, i32 (%struct.dst_entry*)*, i32 (%struct.dst_entry*)*, i32* (%struct.dst_entry*, i64)*, void (%struct.dst_entry*)*, void (%struct.dst_entry*, %struct.net_device*, i32)*, %struct.dst_entry* (%struct.dst_entry*)*, void (%struct.sk_buff*)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*, i32, i1)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, %struct.neighbour* (%struct.dst_entry*, %struct.sk_buff*, i8*)*, void (%struct.dst_entry*, i8*)*, %struct.kmem_cache*, %struct.percpu_counter }
%struct.dst_entry = type opaque
%struct.percpu_counter = type { i64 }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.seg6_pernet_data = type opaque
%struct.anon.52 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.sk_buff_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.net_generic = type opaque
%struct.netns_bpf = type { [2 x %struct.bpf_prog_array*], [2 x %struct.bpf_prog*], [2 x %struct.list_head] }
%struct.bpf_prog_array = type { %struct.callback_head, [0 x %struct.bpf_prog_array_item] }
%struct.bpf_prog_array_item = type { %struct.bpf_prog*, [2 x %struct.bpf_cgroup_storage*] }
%struct.bpf_cgroup_storage = type opaque
%struct.netns_can = type { %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.can_dev_rcv_lists*, %struct.spinlock, %struct.timer_list, %struct.can_pkg_stats*, %struct.can_rcv_lists_stats*, %struct.hlist_head }
%struct.can_dev_rcv_lists = type opaque
%struct.can_pkg_stats = type opaque
%struct.can_rcv_lists_stats = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.53, %union.anon.54, i32 }
%struct.request_queue = type opaque
%union.anon.53 = type { %struct.list_head }
%union.anon.54 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.55 }
%struct.anon.55 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.59 }
%struct.anon.59 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.66, i32, [12 x i8] }
%union.anon.66 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.67 = type { %struct.callback_head }
%struct.pipe_inode_info = type { %struct.mutex, %struct.wait_queue_head, %struct.wait_queue_head, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.page*, %struct.fasync_struct*, %struct.fasync_struct*, %struct.pipe_buffer*, %struct.user_struct* }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.pipe_buffer = type { %struct.page*, i32, i32, %struct.pipe_buf_operations*, i32, i64 }
%struct.pipe_buf_operations = type { i32 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, void (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)* }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.68, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.71 }
%union.anon.68 = type { %struct.anon.69 }
%struct.anon.69 = type { i64, i64 }
%union.anon.71 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.33 }
%union.anon.33 = type { %struct.anon.34, [48 x i8] }
%struct.anon.34 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.84 = type { %struct.list_head }
%union.anon.85 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.76, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.77, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.78, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.81, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.76 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.77 = type { %struct.callback_head }
%union.anon.78 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type { i32, i64, i64, %union.anon.5, %union.anon.6 }
%union.anon.5 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.6 = type { i64 }
%struct.swap_info_struct = type opaque
%union.anon.81 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.79 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.79 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.37 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.37 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.vlan_info = type opaque
%struct.in_device = type opaque
%struct.inet6_dev = type opaque
%struct.wireless_dev = type opaque
%struct.wpan_dev = type opaque
%struct.netdev_rx_queue = type { %struct.kobject, %struct.net_device*, [56 x i8], %struct.xdp_rxq_info }
%struct.xdp_rxq_info = type { %struct.net_device*, i32, i32, %struct.xdp_mem_info, [40 x i8] }
%struct.bpf_prog = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.netdev_queue = type { %struct.net_device*, %struct.Qdisc*, %struct.Qdisc*, %struct.kobject, i64, i64, %struct.net_device*, %struct.spinlock, i32, i64, i64, %struct.dql }
%struct.dql = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32 }
%struct.Qdisc = type opaque
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.xdp_dev_bulk_queue = type opaque
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.possible_net_t = type { %struct.net* }
%union.anon.129 = type { i8* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.rtnl_link_ops = type opaque
%struct.netdev_tc_txq = type { i16, i16 }
%struct.phy_device = type opaque
%struct.sfp_bus = type opaque
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.udp_tunnel_nic_info = type opaque
%struct.udp_tunnel_nic = type opaque
%struct.bpf_xdp_entity = type { %struct.bpf_prog*, %struct.bpf_xdp_link* }
%struct.bpf_xdp_link = type opaque
%union.anon.43 = type { %struct.sock* }
%union.anon.44 = type { i64 }
%union.anon.45 = type { %struct.anon.46 }
%struct.anon.46 = type { i64, void (%struct.sk_buff*)* }
%union.anon.47 = type { i32 }
%union.anon.49 = type { i32 }
%union.anon.50 = type { i32 }
%union.anon.51 = type { i16 }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.mlxsw_reg_info = type { i16, i16, i8* }
%struct.mlxsw_item = type { i16, i16, i16, i8, i8, i8, %union.anon.140, i8* }
%union.anon.140 = type { i16 }
%struct.mlxsw_pci_queue_ops = type { i8*, i32, void (%struct.mlxsw_pci*, %struct.mlxsw_pci_queue*)*, i32 (%struct.mlxsw_pci*, i8*, %struct.mlxsw_pci_queue*)*, void (%struct.mlxsw_pci*, %struct.mlxsw_pci_queue*)*, void (%struct.tasklet_struct*)*, i16 (%struct.mlxsw_pci_queue*)*, i8 (%struct.mlxsw_pci_queue*)*, i16, i8 }
%struct.mlxsw_pci = type { %struct.pci_dev*, i8*, i64, [4 x %struct.mlxsw_pci_queue_type_group], i32, %struct.mlxsw_core*, %struct.anon.137, %struct.anon.138, %struct.mlxsw_bus_info, %struct.pci_device_id*, i32, i8 }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.87, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.pcie_link_state = type opaque
%struct.pci_vpd = type opaque
%union.anon.87 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.mlxsw_pci_queue_type_group = type { %struct.mlxsw_pci_queue*, i8 }
%struct.anon.137 = type { %struct.mlxsw_pci_mem_item*, i32 }
%struct.mlxsw_pci_mem_item = type { i8*, i64, i64 }
%struct.anon.138 = type { %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item, %struct.mutex, i8, %struct.wait_queue_head, i8, %struct.anon.139 }
%struct.anon.139 = type { i8, i64 }
%struct.mlxsw_bus_info = type { i8*, i8*, %struct.device*, %struct.mlxsw_fw_rev, [208 x i8], [16 x i8], i8 }
%struct.mlxsw_fw_rev = type { i16, i16, i16, i16 }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.mlxsw_pci_queue = type { %struct.spinlock, %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_queue_elem_info*, i16, i16, i16, i8, i8, i32, %struct.tasklet_struct, %struct.mlxsw_pci*, %union.anon.134 }
%struct.mlxsw_pci_queue_elem_info = type { i8*, %union.anon.130 }
%union.anon.130 = type { %struct.anon.131 }
%struct.anon.131 = type { %struct.sk_buff* }
%struct.tasklet_struct = type { %struct.tasklet_struct*, i64, %struct.atomic_t, i8, %union.anon.133, i64 }
%union.anon.133 = type { void (i64)* }
%union.anon.134 = type { %struct.anon.135 }
%struct.anon.135 = type { i32, i32, i32 }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.skb_shared_info = type { i8, i8, i8, i8, i16, i16, %struct.sk_buff*, %struct.skb_shared_hwtstamps, i32, i32, %struct.atomic_t, i8*, [17 x %struct.bio_vec] }
%struct.skb_shared_hwtstamps = type { i64 }
%struct.mlxsw_skb_cb = type { %union.anon.141 }
%union.anon.141 = type { i32 }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.irq_affinity = type { i32, i32, i32, [4 x i32], void (%struct.irq_affinity*, i32)*, i8* }
%struct.anon.136 = type { i32, i32, i32 }
%struct.mlxsw_rx_info = type { i8, %union.anon.142, i8, i8, i32 }
%union.anon.142 = type { i16 }
%struct.anon.132 = type { %struct.sk_buff* }

@.str = private unnamed_addr constant [10 x i8] c"mlxsw_pci\00", align 1
@__UNIQUE_ID___addressable_mlxsw_pci_module_init344 = internal global i8* bitcast (i32 ()* @mlxsw_pci_module_init to i8*), section ".discard.addressable", align 8, !dbg !0
@__exitcall_mlxsw_pci_module_exit = internal global void ()* @mlxsw_pci_module_exit, section ".exitcall.exit", align 8, !dbg !8107
@__UNIQUE_ID_file345 = internal constant [61 x i8] c"mlxsw_pci.file=drivers/net/ethernet/mellanox/mlxsw/mlxsw_pci\00", section ".modinfo", align 1, !dbg !8112
@__UNIQUE_ID_license346 = internal constant [31 x i8] c"mlxsw_pci.license=Dual BSD/GPL\00", section ".modinfo", align 1, !dbg !8117
@__UNIQUE_ID_author347 = internal constant [48 x i8] c"mlxsw_pci.author=Jiri Pirko <jiri@mellanox.com>\00", section ".modinfo", align 1, !dbg !8122
@__UNIQUE_ID_description348 = internal constant [59 x i8] c"mlxsw_pci.description=Mellanox switch PCI interface driver\00", section ".modinfo", align 1, !dbg !8125
@.str.1 = private unnamed_addr constant [26 x i8] c"pci_enable_device failed\0A\00", align 1
@.str.2 = private unnamed_addr constant [28 x i8] c"pci_request_regions failed\0A\00", align 1
@.str.3 = private unnamed_addr constant [36 x i8] c"pci_set_consistent_dma_mask failed\0A\00", align 1
@.str.4 = private unnamed_addr constant [25 x i8] c"pci_set_dma_mask failed\0A\00", align 1
@.str.5 = private unnamed_addr constant [25 x i8] c"invalid PCI region size\0A\00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"ioremap failed\0A\00", align 1
@mlxsw_pci_bus = internal constant %struct.mlxsw_bus { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i32 0, i32 0), i32 (i8*, %struct.mlxsw_core*, %struct.mlxsw_config_profile*, %struct.mlxsw_res*)* @mlxsw_pci_init, void (i8*)* @mlxsw_pci_fini, i1 (i8*, %struct.mlxsw_tx_info*)* @mlxsw_pci_skb_transmit_busy, i32 (i8*, %struct.sk_buff*, %struct.mlxsw_tx_info*)* @mlxsw_pci_skb_transmit, i32 (i8*, i16, i8, i32, i1, i8*, i64, i8*, i64, i8*)* @mlxsw_pci_cmd_exec, i32 (i8*)* @mlxsw_pci_read_frc_h, i32 (i8*)* @mlxsw_pci_read_frc_l, i8 3 }, align 8, !dbg !8137
@.str.7 = private unnamed_addr constant [28 x i8] c"cannot register bus device\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.8 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@mlxsw_pci_cmd_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !8130
@.str.9 = private unnamed_addr constant [21 x i8] c"&mlxsw_pci->cmd.lock\00", align 1
@mlxsw_pci_cmd_init.__key.10 = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !8135
@.str.11 = private unnamed_addr constant [21 x i8] c"&mlxsw_pci->cmd.wait\00", align 1
@.str.12 = private unnamed_addr constant [38 x i8] c"Failed allocating memory for mailbox\0A\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"pci\00", align 1
@.str.14 = private unnamed_addr constant [19 x i8] c"MSI-X init failed\0A\00", align 1
@.str.15 = private unnamed_addr constant [55 x i8] c"Unsupported cmd interface revision ID queried from hw\0A\00", align 1
@.str.16 = private unnamed_addr constant [47 x i8] c"Unsupported doorbell page bar queried from hw\0A\00", align 1
@.str.17 = private unnamed_addr constant [52 x i8] c"Unsupported free running clock BAR queried from hw\0A\00", align 1
@.str.18 = private unnamed_addr constant [52 x i8] c"Invalid supported CQE version combination reported\0A\00", align 1
@.str.19 = private unnamed_addr constant [20 x i8] c"IRQ request failed\0A\00", align 1
@.str.20 = private unnamed_addr constant [66 x i8] c"Failed to reach system ready status before reset. Status is 0x%x\0A\00", align 1
@mlxsw_reg_mrsr = internal constant %struct.mlxsw_reg_info { i16 -28637, i16 8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0) }, align 8, !dbg !8238
@.str.21 = private unnamed_addr constant [65 x i8] c"Failed to reach system ready status after reset. Status is 0x%x\0A\00", align 1
@jiffies = external dso_local global i64, align 8
@.str.22 = private unnamed_addr constant [42 x i8] c"drivers/net/ethernet/mellanox/mlxsw/pci.c\00", align 1
@.str.23 = private unnamed_addr constant [43 x i8] c"drivers/net/ethernet/mellanox/mlxsw/item.h\00", align 1
@.str.24 = private unnamed_addr constant [78 x i8] c"\013mlxsw: item bug (name=%s,offset=%x,step=%x,in_step_offset=%x,typesize=%zx)\0A\00", align 1
@.str.25 = private unnamed_addr constant [17 x i8] c"reg_mrsr_command\00", align 1
@mlxsw_reg_mrsr_command_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i32 0, i32 0) }, align 8, !dbg !8220
@.str.27 = private unnamed_addr constant [5 x i8] c"mrsr\00", align 1
@.str.28 = private unnamed_addr constant [31 x i8] c"cmd_mbox_query_fw_fw_rev_major\00", align 1
@mlxsw_cmd_mbox_query_fw_fw_rev_major_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.28, i32 0, i32 0) }, align 8, !dbg !8246
@.str.30 = private unnamed_addr constant [31 x i8] c"cmd_mbox_query_fw_fw_rev_minor\00", align 1
@mlxsw_cmd_mbox_query_fw_fw_rev_minor_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0) }, align 8, !dbg !8248
@.str.32 = private unnamed_addr constant [34 x i8] c"cmd_mbox_query_fw_fw_rev_subminor\00", align 1
@mlxsw_cmd_mbox_query_fw_fw_rev_subminor_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.32, i32 0, i32 0) }, align 8, !dbg !8250
@.str.34 = private unnamed_addr constant [36 x i8] c"cmd_mbox_query_fw_cmd_interface_rev\00", align 1
@mlxsw_cmd_mbox_query_fw_cmd_interface_rev_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 8, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.34, i32 0, i32 0) }, align 8, !dbg !8252
@.str.36 = private unnamed_addr constant [36 x i8] c"cmd_mbox_query_fw_doorbell_page_bar\00", align 1
@mlxsw_cmd_mbox_query_fw_doorbell_page_bar_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 72, i16 0, i16 0, i8 30, i8 0, i8 0, i8 undef, { i8, i8 } { i8 2, i8 undef }, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.36, i32 0, i32 0) }, align 8, !dbg !8254
@.str.38 = private unnamed_addr constant [39 x i8] c"cmd_mbox_query_fw_doorbell_page_offset\00", align 1
@mlxsw_cmd_mbox_query_fw_doorbell_page_offset_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 64, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 64, i8 undef }, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.38, i32 0, i32 0) }, align 8, !dbg !8256
@.str.40 = private unnamed_addr constant [32 x i8] c"cmd_mbox_query_fw_fr_rn_clk_bar\00", align 1
@mlxsw_cmd_mbox_query_fw_fr_rn_clk_bar_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 88, i16 0, i16 0, i8 30, i8 0, i8 0, i8 undef, { i8, i8 } { i8 2, i8 undef }, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.40, i32 0, i32 0) }, align 8, !dbg !8258
@.str.42 = private unnamed_addr constant [44 x i8] c"cmd_mbox_query_fw_free_running_clock_offset\00", align 1
@mlxsw_cmd_mbox_query_fw_free_running_clock_offset_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 80, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 64, i8 undef }, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.42, i32 0, i32 0) }, align 8, !dbg !8260
@.str.44 = private unnamed_addr constant [27 x i8] c"cmd_mbox_query_fw_fw_pages\00", align 1
@mlxsw_cmd_mbox_query_fw_fw_pages_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.44, i32 0, i32 0) }, align 8, !dbg !8262
@.str.46 = private unnamed_addr constant [19 x i8] c"cmd_mbox_map_fa_pa\00", align 1
@mlxsw_cmd_mbox_map_fa_pa_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 8, i16 0, i8 12, i8 0, i8 1, i8 undef, { i8, i8 } { i8 52, i8 undef }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.46, i32 0, i32 0) }, align 8, !dbg !8264
@.str.48 = private unnamed_addr constant [25 x i8] c"cmd_mbox_map_fa_log2size\00", align 1
@mlxsw_cmd_mbox_map_fa_log2size_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 8, i16 4, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 5, i8 undef }, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.48, i32 0, i32 0) }, align 8, !dbg !8266
@mlxsw_cmd_mbox_boardinfo_vsd_item = internal global %struct.mlxsw_item { i16 32, i16 0, i16 0, i8 0, i8 0, i8 0, %union.anon.140 { i16 208 }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.50, i32 0, i32 0) }, align 8, !dbg !8268
@.str.50 = private unnamed_addr constant [23 x i8] c"cmd_mbox_boardinfo_vsd\00", align 1
@mlxsw_cmd_mbox_boardinfo_psid_item = internal global %struct.mlxsw_item { i16 240, i16 0, i16 0, i8 0, i8 0, i8 0, %union.anon.140 { i16 16 }, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.51, i32 0, i32 0) }, align 8, !dbg !8270
@.str.51 = private unnamed_addr constant [24 x i8] c"cmd_mbox_boardinfo_psid\00", align 1
@.str.52 = private unnamed_addr constant [46 x i8] c"cmd_mbox_config_profile_set_max_vepa_channels\00", align 1
@mlxsw_cmd_mbox_config_profile_set_max_vepa_channels_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.52, i32 0, i32 0) }, align 8, !dbg !8272
@.str.54 = private unnamed_addr constant [42 x i8] c"cmd_mbox_config_profile_max_vepa_channels\00", align 1
@mlxsw_cmd_mbox_config_profile_max_vepa_channels_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.54, i32 0, i32 0) }, align 8, !dbg !8274
@.str.56 = private unnamed_addr constant [36 x i8] c"cmd_mbox_config_profile_set_max_mid\00", align 1
@mlxsw_cmd_mbox_config_profile_set_max_mid_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 3, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.56, i32 0, i32 0) }, align 8, !dbg !8276
@.str.58 = private unnamed_addr constant [32 x i8] c"cmd_mbox_config_profile_max_mid\00", align 1
@mlxsw_cmd_mbox_config_profile_max_mid_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 28, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.58, i32 0, i32 0) }, align 8, !dbg !8278
@.str.60 = private unnamed_addr constant [36 x i8] c"cmd_mbox_config_profile_set_max_pgt\00", align 1
@mlxsw_cmd_mbox_config_profile_set_max_pgt_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 4, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.60, i32 0, i32 0) }, align 8, !dbg !8280
@.str.62 = private unnamed_addr constant [32 x i8] c"cmd_mbox_config_profile_max_pgt\00", align 1
@mlxsw_cmd_mbox_config_profile_max_pgt_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 32, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.62, i32 0, i32 0) }, align 8, !dbg !8282
@.str.64 = private unnamed_addr constant [44 x i8] c"cmd_mbox_config_profile_set_max_system_port\00", align 1
@mlxsw_cmd_mbox_config_profile_set_max_system_port_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 5, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.64, i32 0, i32 0) }, align 8, !dbg !8284
@.str.66 = private unnamed_addr constant [40 x i8] c"cmd_mbox_config_profile_max_system_port\00", align 1
@mlxsw_cmd_mbox_config_profile_max_system_port_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 36, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.66, i32 0, i32 0) }, align 8, !dbg !8286
@.str.68 = private unnamed_addr constant [44 x i8] c"cmd_mbox_config_profile_set_max_vlan_groups\00", align 1
@mlxsw_cmd_mbox_config_profile_set_max_vlan_groups_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 6, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.68, i32 0, i32 0) }, align 8, !dbg !8288
@.str.70 = private unnamed_addr constant [40 x i8] c"cmd_mbox_config_profile_max_vlan_groups\00", align 1
@mlxsw_cmd_mbox_config_profile_max_vlan_groups_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 40, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 12, i8 undef }, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.70, i32 0, i32 0) }, align 8, !dbg !8290
@.str.72 = private unnamed_addr constant [40 x i8] c"cmd_mbox_config_profile_set_max_regions\00", align 1
@mlxsw_cmd_mbox_config_profile_set_max_regions_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 7, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.72, i32 0, i32 0) }, align 8, !dbg !8292
@.str.74 = private unnamed_addr constant [36 x i8] c"cmd_mbox_config_profile_max_regions\00", align 1
@mlxsw_cmd_mbox_config_profile_max_regions_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 44, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.74, i32 0, i32 0) }, align 8, !dbg !8294
@.str.76 = private unnamed_addr constant [41 x i8] c"cmd_mbox_config_profile_set_flood_tables\00", align 1
@mlxsw_cmd_mbox_config_profile_set_flood_tables_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 9, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.76, i32 0, i32 0) }, align 8, !dbg !8296
@.str.78 = private unnamed_addr constant [41 x i8] c"cmd_mbox_config_profile_max_flood_tables\00", align 1
@mlxsw_cmd_mbox_config_profile_max_flood_tables_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 48, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.78, i32 0, i32 0) }, align 8, !dbg !8298
@.str.80 = private unnamed_addr constant [45 x i8] c"cmd_mbox_config_profile_max_vid_flood_tables\00", align 1
@mlxsw_cmd_mbox_config_profile_max_vid_flood_tables_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 48, i16 0, i16 0, i8 8, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.80, i32 0, i32 0) }, align 8, !dbg !8300
@.str.82 = private unnamed_addr constant [52 x i8] c"cmd_mbox_config_profile_max_fid_offset_flood_tables\00", align 1
@mlxsw_cmd_mbox_config_profile_max_fid_offset_flood_tables_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 52, i16 0, i16 0, i8 24, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.82, i32 0, i32 0) }, align 8, !dbg !8302
@.str.84 = private unnamed_addr constant [52 x i8] c"cmd_mbox_config_profile_fid_offset_flood_table_size\00", align 1
@mlxsw_cmd_mbox_config_profile_fid_offset_flood_table_size_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 52, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.84, i32 0, i32 0) }, align 8, !dbg !8304
@.str.86 = private unnamed_addr constant [45 x i8] c"cmd_mbox_config_profile_max_fid_flood_tables\00", align 1
@mlxsw_cmd_mbox_config_profile_max_fid_flood_tables_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 56, i16 0, i16 0, i8 24, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.86, i32 0, i32 0) }, align 8, !dbg !8306
@.str.88 = private unnamed_addr constant [45 x i8] c"cmd_mbox_config_profile_fid_flood_table_size\00", align 1
@mlxsw_cmd_mbox_config_profile_fid_flood_table_size_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 56, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.88, i32 0, i32 0) }, align 8, !dbg !8308
@.str.90 = private unnamed_addr constant [39 x i8] c"cmd_mbox_config_profile_set_flood_mode\00", align 1
@mlxsw_cmd_mbox_config_profile_set_flood_mode_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 8, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.90, i32 0, i32 0) }, align 8, !dbg !8310
@.str.92 = private unnamed_addr constant [35 x i8] c"cmd_mbox_config_profile_flood_mode\00", align 1
@mlxsw_cmd_mbox_config_profile_flood_mode_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 48, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 2, i8 undef }, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.92, i32 0, i32 0) }, align 8, !dbg !8312
@.str.94 = private unnamed_addr constant [38 x i8] c"cmd_mbox_config_profile_set_max_ib_mc\00", align 1
@mlxsw_cmd_mbox_config_profile_set_max_ib_mc_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 12, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.94, i32 0, i32 0) }, align 8, !dbg !8314
@.str.96 = private unnamed_addr constant [34 x i8] c"cmd_mbox_config_profile_max_ib_mc\00", align 1
@mlxsw_cmd_mbox_config_profile_max_ib_mc_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 64, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 15, i8 undef }, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.96, i32 0, i32 0) }, align 8, !dbg !8316
@.str.98 = private unnamed_addr constant [37 x i8] c"cmd_mbox_config_profile_set_max_pkey\00", align 1
@mlxsw_cmd_mbox_config_profile_set_max_pkey_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 13, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.98, i32 0, i32 0) }, align 8, !dbg !8318
@.str.100 = private unnamed_addr constant [33 x i8] c"cmd_mbox_config_profile_max_pkey\00", align 1
@mlxsw_cmd_mbox_config_profile_max_pkey_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 68, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 15, i8 undef }, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.100, i32 0, i32 0) }, align 8, !dbg !8320
@.str.102 = private unnamed_addr constant [35 x i8] c"cmd_mbox_config_profile_set_ar_sec\00", align 1
@mlxsw_cmd_mbox_config_profile_set_ar_sec_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 15, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.102, i32 0, i32 0) }, align 8, !dbg !8322
@.str.104 = private unnamed_addr constant [31 x i8] c"cmd_mbox_config_profile_ar_sec\00", align 1
@mlxsw_cmd_mbox_config_profile_ar_sec_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 76, i16 0, i16 0, i8 24, i8 0, i8 0, i8 undef, { i8, i8 } { i8 2, i8 undef }, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.104, i32 0, i32 0) }, align 8, !dbg !8324
@.str.106 = private unnamed_addr constant [55 x i8] c"cmd_mbox_config_profile_set_adaptive_routing_group_cap\00", align 1
@mlxsw_cmd_mbox_config_profile_set_adaptive_routing_group_cap_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 14, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.106, i32 0, i32 0) }, align 8, !dbg !8326
@.str.108 = private unnamed_addr constant [51 x i8] c"cmd_mbox_config_profile_adaptive_routing_group_cap\00", align 1
@mlxsw_cmd_mbox_config_profile_adaptive_routing_group_cap_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 76, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.108, i32 0, i32 0) }, align 8, !dbg !8328
@.str.110 = private unnamed_addr constant [44 x i8] c"cmd_mbox_config_profile_set_kvd_linear_size\00", align 1
@mlxsw_cmd_mbox_config_profile_set_kvd_linear_size_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 24, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.110, i32 0, i32 0) }, align 8, !dbg !8330
@.str.112 = private unnamed_addr constant [40 x i8] c"cmd_mbox_config_profile_kvd_linear_size\00", align 1
@mlxsw_cmd_mbox_config_profile_kvd_linear_size_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 84, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 24, i8 undef }, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.112, i32 0, i32 0) }, align 8, !dbg !8332
@.str.114 = private unnamed_addr constant [48 x i8] c"drivers/net/ethernet/mellanox/mlxsw/resources.h\00", align 1
@.str.115 = private unnamed_addr constant [49 x i8] c"cmd_mbox_config_profile_set_kvd_hash_single_size\00", align 1
@mlxsw_cmd_mbox_config_profile_set_kvd_hash_single_size_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 25, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.115, i32 0, i32 0) }, align 8, !dbg !8334
@.str.117 = private unnamed_addr constant [45 x i8] c"cmd_mbox_config_profile_kvd_hash_single_size\00", align 1
@mlxsw_cmd_mbox_config_profile_kvd_hash_single_size_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 88, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 24, i8 undef }, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.117, i32 0, i32 0) }, align 8, !dbg !8336
@.str.119 = private unnamed_addr constant [49 x i8] c"cmd_mbox_config_profile_set_kvd_hash_double_size\00", align 1
@mlxsw_cmd_mbox_config_profile_set_kvd_hash_double_size_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 26, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.119, i32 0, i32 0) }, align 8, !dbg !8338
@.str.121 = private unnamed_addr constant [45 x i8] c"cmd_mbox_config_profile_kvd_hash_double_size\00", align 1
@mlxsw_cmd_mbox_config_profile_kvd_hash_double_size_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 92, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 24, i8 undef }, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.121, i32 0, i32 0) }, align 8, !dbg !8340
@.str.123 = private unnamed_addr constant [41 x i8] c"cmd_mbox_config_profile_swid_config_type\00", align 1
@mlxsw_cmd_mbox_config_profile_swid_config_type_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 96, i16 8, i16 0, i8 20, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.123, i32 0, i32 0) }, align 8, !dbg !8342
@.str.125 = private unnamed_addr constant [47 x i8] c"cmd_mbox_config_profile_swid_config_properties\00", align 1
@mlxsw_cmd_mbox_config_profile_swid_config_properties_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 96, i16 8, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.125, i32 0, i32 0) }, align 8, !dbg !8344
@.str.127 = private unnamed_addr constant [41 x i8] c"cmd_mbox_config_profile_swid_config_mask\00", align 1
@mlxsw_cmd_mbox_config_profile_swid_config_mask_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 96, i16 8, i16 0, i8 24, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.127, i32 0, i32 0) }, align 8, !dbg !8346
@.str.129 = private unnamed_addr constant [40 x i8] c"cmd_mbox_config_profile_set_cqe_version\00", align 1
@mlxsw_cmd_mbox_config_profile_set_cqe_version_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 8, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.129, i32 0, i32 0) }, align 8, !dbg !8348
@.str.131 = private unnamed_addr constant [36 x i8] c"cmd_mbox_config_profile_cqe_version\00", align 1
@mlxsw_cmd_mbox_config_profile_cqe_version_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 176, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.131, i32 0, i32 0) }, align 8, !dbg !8350
@.str.133 = private unnamed_addr constant [30 x i8] c"Unsupported number of queues\0A\00", align 1
@.str.134 = private unnamed_addr constant [47 x i8] c"Unsupported number of async queue descriptors\0A\00", align 1
@mlxsw_pci_eq_ops = internal constant %struct.mlxsw_pci_queue_ops { i8* null, i32 3, void (%struct.mlxsw_pci*, %struct.mlxsw_pci_queue*)* null, i32 (%struct.mlxsw_pci*, i8*, %struct.mlxsw_pci_queue*)* @mlxsw_pci_eq_init, void (%struct.mlxsw_pci*, %struct.mlxsw_pci_queue*)* @mlxsw_pci_eq_fini, void (%struct.tasklet_struct*)* @mlxsw_pci_eq_tasklet, i16 (%struct.mlxsw_pci_queue*)* null, i8 (%struct.mlxsw_pci_queue*)* null, i16 2048, i8 16 }, align 8, !dbg !8370
@.str.135 = private unnamed_addr constant [35 x i8] c"Failed to initialize event queues\0A\00", align 1
@mlxsw_pci_cq_ops = internal constant %struct.mlxsw_pci_queue_ops { i8* null, i32 2, void (%struct.mlxsw_pci*, %struct.mlxsw_pci_queue*)* @mlxsw_pci_cq_pre_init, i32 (%struct.mlxsw_pci*, i8*, %struct.mlxsw_pci_queue*)* @mlxsw_pci_cq_init, void (%struct.mlxsw_pci*, %struct.mlxsw_pci_queue*)* @mlxsw_pci_cq_fini, void (%struct.tasklet_struct*)* @mlxsw_pci_cq_tasklet, i16 (%struct.mlxsw_pci_queue*)* @mlxsw_pci_cq_elem_count, i8 (%struct.mlxsw_pci_queue*)* @mlxsw_pci_cq_elem_size, i16 0, i8 0 }, align 8, !dbg !8423
@.str.136 = private unnamed_addr constant [40 x i8] c"Failed to initialize completion queues\0A\00", align 1
@mlxsw_pci_sdq_ops = internal constant %struct.mlxsw_pci_queue_ops { i8* null, i32 0, void (%struct.mlxsw_pci*, %struct.mlxsw_pci_queue*)* null, i32 (%struct.mlxsw_pci*, i8*, %struct.mlxsw_pci_queue*)* @mlxsw_pci_sdq_init, void (%struct.mlxsw_pci*, %struct.mlxsw_pci_queue*)* @mlxsw_pci_sdq_fini, void (%struct.tasklet_struct*)* null, i16 (%struct.mlxsw_pci_queue*)* null, i8 (%struct.mlxsw_pci_queue*)* null, i16 1024, i8 32 }, align 8, !dbg !8490
@.str.137 = private unnamed_addr constant [45 x i8] c"Failed to initialize send descriptor queues\0A\00", align 1
@mlxsw_pci_rdq_ops = internal constant %struct.mlxsw_pci_queue_ops { i8* null, i32 1, void (%struct.mlxsw_pci*, %struct.mlxsw_pci_queue*)* null, i32 (%struct.mlxsw_pci*, i8*, %struct.mlxsw_pci_queue*)* @mlxsw_pci_rdq_init, void (%struct.mlxsw_pci*, %struct.mlxsw_pci_queue*)* @mlxsw_pci_rdq_fini, void (%struct.tasklet_struct*)* null, i16 (%struct.mlxsw_pci_queue*)* null, i8 (%struct.mlxsw_pci_queue*)* null, i16 1024, i8 32 }, align 8, !dbg !8500
@.str.138 = private unnamed_addr constant [48 x i8] c"Failed to initialize receive descriptor queues\0A\00", align 1
@.str.139 = private unnamed_addr constant [35 x i8] c"cmd_mbox_query_aq_cap_max_num_sdqs\00", align 1
@mlxsw_cmd_mbox_query_aq_cap_max_num_sdqs_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.139, i32 0, i32 0) }, align 8, !dbg !8352
@.str.141 = private unnamed_addr constant [37 x i8] c"cmd_mbox_query_aq_cap_log_max_sdq_sz\00", align 1
@mlxsw_cmd_mbox_query_aq_cap_log_max_sdq_sz_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 24, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.141, i32 0, i32 0) }, align 8, !dbg !8354
@.str.143 = private unnamed_addr constant [35 x i8] c"cmd_mbox_query_aq_cap_max_num_rdqs\00", align 1
@mlxsw_cmd_mbox_query_aq_cap_max_num_rdqs_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.143, i32 0, i32 0) }, align 8, !dbg !8356
@.str.145 = private unnamed_addr constant [37 x i8] c"cmd_mbox_query_aq_cap_log_max_rdq_sz\00", align 1
@mlxsw_cmd_mbox_query_aq_cap_log_max_rdq_sz_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 24, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.145, i32 0, i32 0) }, align 8, !dbg !8358
@.str.147 = private unnamed_addr constant [34 x i8] c"cmd_mbox_query_aq_cap_max_num_cqs\00", align 1
@mlxsw_cmd_mbox_query_aq_cap_max_num_cqs_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 8, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.147, i32 0, i32 0) }, align 8, !dbg !8360
@.str.149 = private unnamed_addr constant [36 x i8] c"cmd_mbox_query_aq_cap_log_max_cq_sz\00", align 1
@mlxsw_cmd_mbox_query_aq_cap_log_max_cq_sz_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 8, i16 0, i16 0, i8 24, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.149, i32 0, i32 0) }, align 8, !dbg !8362
@.str.151 = private unnamed_addr constant [38 x i8] c"cmd_mbox_query_aq_cap_log_max_cqv2_sz\00", align 1
@mlxsw_cmd_mbox_query_aq_cap_log_max_cqv2_sz_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 8, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.151, i32 0, i32 0) }, align 8, !dbg !8364
@.str.153 = private unnamed_addr constant [34 x i8] c"cmd_mbox_query_aq_cap_max_num_eqs\00", align 1
@mlxsw_cmd_mbox_query_aq_cap_max_num_eqs_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.153, i32 0, i32 0) }, align 8, !dbg !8366
@.str.155 = private unnamed_addr constant [36 x i8] c"cmd_mbox_query_aq_cap_log_max_eq_sz\00", align 1
@mlxsw_cmd_mbox_query_aq_cap_log_max_eq_sz_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 24, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.155, i32 0, i32 0) }, align 8, !dbg !8368
@.str.157 = private unnamed_addr constant [14 x i8] c"pci_eqe_owner\00", align 1
@mlxsw_pci_eqe_owner_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.157, i32 0, i32 0) }, align 8, !dbg !8399
@.str.159 = private unnamed_addr constant [27 x i8] c"cmd_mbox_sw2hw_eq_int_msix\00", align 1
@mlxsw_cmd_mbox_sw2hw_eq_int_msix_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 24, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.159, i32 0, i32 0) }, align 8, !dbg !8401
@.str.161 = private unnamed_addr constant [21 x i8] c"cmd_mbox_sw2hw_eq_st\00", align 1
@mlxsw_cmd_mbox_sw2hw_eq_st_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 8, i8 0, i8 0, i8 undef, { i8, i8 } { i8 2, i8 undef }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.161, i32 0, i32 0) }, align 8, !dbg !8403
@.str.163 = private unnamed_addr constant [30 x i8] c"cmd_mbox_sw2hw_eq_log_eq_size\00", align 1
@mlxsw_cmd_mbox_sw2hw_eq_log_eq_size_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.163, i32 0, i32 0) }, align 8, !dbg !8405
@.str.165 = private unnamed_addr constant [21 x i8] c"cmd_mbox_sw2hw_eq_pa\00", align 1
@mlxsw_cmd_mbox_sw2hw_eq_pa_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 8, i16 0, i8 11, i8 0, i8 1, i8 undef, { i8, i8 } { i8 53, i8 undef }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.165, i32 0, i32 0) }, align 8, !dbg !8407
@mlxsw_pci_doorbell_type_offset = internal constant [4 x i16] [i16 0, i16 512, i16 1024, i16 1536], align 2, !dbg !8409
@mlxsw_pci_doorbell_arm_type_offset = internal constant [4 x i16] [i16 0, i16 0, i16 2048, i16 2560], align 2, !dbg !8413
@.str.167 = private unnamed_addr constant [19 x i8] c"pci_eqe_cmd_status\00", align 1
@mlxsw_pci_eqe_cmd_status_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.167, i32 0, i32 0) }, align 8, !dbg !8415
@.str.169 = private unnamed_addr constant [24 x i8] c"pci_eqe_cmd_out_param_h\00", align 1
@mlxsw_pci_eqe_cmd_out_param_h_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 32, i8 undef }, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.169, i32 0, i32 0) }, align 8, !dbg !8417
@.str.171 = private unnamed_addr constant [24 x i8] c"pci_eqe_cmd_out_param_l\00", align 1
@mlxsw_pci_eqe_cmd_out_param_l_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 8, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 32, i8 undef }, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.171, i32 0, i32 0) }, align 8, !dbg !8419
@.str.173 = private unnamed_addr constant [12 x i8] c"pci_eqe_cqn\00", align 1
@mlxsw_pci_eqe_cqn_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 8, i8 0, i8 0, i8 undef, { i8, i8 } { i8 7, i8 undef }, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.173, i32 0, i32 0) }, align 8, !dbg !8421
@.str.175 = private unnamed_addr constant [16 x i8] c"pci_cqe01_owner\00", align 1
@mlxsw_pci_cqe01_owner_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.175, i32 0, i32 0) }, align 8, !dbg !8425
@.str.177 = private unnamed_addr constant [15 x i8] c"pci_cqe2_owner\00", align 1
@mlxsw_pci_cqe2_owner_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 28, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.177, i32 0, i32 0) }, align 8, !dbg !8427
@.str.179 = private unnamed_addr constant [26 x i8] c"cmd_mbox_sw2hw_cq_cqe_ver\00", align 1
@mlxsw_cmd_mbox_sw2hw_cq_cqe_ver_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 28, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.179, i32 0, i32 0) }, align 8, !dbg !8429
@.str.181 = private unnamed_addr constant [24 x i8] c"cmd_mbox_sw2hw_cq_c_eqn\00", align 1
@mlxsw_cmd_mbox_sw2hw_cq_c_eqn_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 24, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.181, i32 0, i32 0) }, align 8, !dbg !8431
@.str.183 = private unnamed_addr constant [21 x i8] c"cmd_mbox_sw2hw_cq_st\00", align 1
@mlxsw_cmd_mbox_sw2hw_cq_st_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 8, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.183, i32 0, i32 0) }, align 8, !dbg !8433
@.str.185 = private unnamed_addr constant [30 x i8] c"cmd_mbox_sw2hw_cq_log_cq_size\00", align 1
@mlxsw_cmd_mbox_sw2hw_cq_log_cq_size_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.185, i32 0, i32 0) }, align 8, !dbg !8435
@.str.187 = private unnamed_addr constant [21 x i8] c"cmd_mbox_sw2hw_cq_pa\00", align 1
@mlxsw_cmd_mbox_sw2hw_cq_pa_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 8, i16 0, i8 11, i8 0, i8 1, i8 undef, { i8, i8 } { i8 53, i8 undef }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.187, i32 0, i32 0) }, align 8, !dbg !8437
@.str.189 = private unnamed_addr constant [20 x i8] c"pci_cqe_wqe_counter\00", align 1
@mlxsw_pci_cqe_wqe_counter_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.189, i32 0, i32 0) }, align 8, !dbg !8439
@.str.191 = private unnamed_addr constant [12 x i8] c"pci_cqe0_sr\00", align 1
@mlxsw_pci_cqe0_sr_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 6, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.191, i32 0, i32 0) }, align 8, !dbg !8441
@.str.193 = private unnamed_addr constant [13 x i8] c"pci_cqe12_sr\00", align 1
@mlxsw_pci_cqe12_sr_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 26, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.193, i32 0, i32 0) }, align 8, !dbg !8443
@.str.195 = private unnamed_addr constant [13 x i8] c"pci_cqe0_dqn\00", align 1
@mlxsw_pci_cqe0_dqn_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 1, i8 0, i8 0, i8 undef, { i8, i8 } { i8 5, i8 undef }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.195, i32 0, i32 0) }, align 8, !dbg !8445
@.str.197 = private unnamed_addr constant [14 x i8] c"pci_cqe12_dqn\00", align 1
@mlxsw_pci_cqe12_dqn_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 1, i8 0, i8 0, i8 undef, { i8, i8 } { i8 6, i8 undef }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.197, i32 0, i32 0) }, align 8, !dbg !8447
@.str.199 = private unnamed_addr constant [19 x i8] c"pci_wqe_byte_count\00", align 1
@mlxsw_pci_wqe_byte_count_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 2, i16 2, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 14, i8 undef }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.199, i32 0, i32 0) }, align 8, !dbg !8449
@.str.201 = private unnamed_addr constant [16 x i8] c"pci_wqe_address\00", align 1
@mlxsw_pci_wqe_address_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 8, i16 8, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 64, i8 undef }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.201, i32 0, i32 0) }, align 8, !dbg !8451
@.str.203 = private unnamed_addr constant [13 x i8] c"pci_cqe0_lag\00", align 1
@mlxsw_pci_cqe0_lag_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 23, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.203, i32 0, i32 0) }, align 8, !dbg !8453
@.str.205 = private unnamed_addr constant [14 x i8] c"pci_cqe12_lag\00", align 1
@mlxsw_pci_cqe12_lag_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 24, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.205, i32 0, i32 0) }, align 8, !dbg !8455
@.str.207 = private unnamed_addr constant [16 x i8] c"pci_cqe0_lag_id\00", align 1
@mlxsw_pci_cqe0_lag_id_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 4, i8 0, i8 0, i8 undef, { i8, i8 } { i8 12, i8 undef }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.207, i32 0, i32 0) }, align 8, !dbg !8457
@.str.209 = private unnamed_addr constant [17 x i8] c"pci_cqe12_lag_id\00", align 1
@mlxsw_pci_cqe12_lag_id_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.209, i32 0, i32 0) }, align 8, !dbg !8459
@.str.211 = private unnamed_addr constant [21 x i8] c"pci_cqe0_lag_subport\00", align 1
@mlxsw_pci_cqe0_lag_subport_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.211, i32 0, i32 0) }, align 8, !dbg !8461
@.str.213 = private unnamed_addr constant [22 x i8] c"pci_cqe12_lag_subport\00", align 1
@mlxsw_pci_cqe12_lag_subport_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.213, i32 0, i32 0) }, align 8, !dbg !8463
@.str.215 = private unnamed_addr constant [20 x i8] c"pci_cqe_system_port\00", align 1
@mlxsw_pci_cqe_system_port_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 16, i8 undef }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.215, i32 0, i32 0) }, align 8, !dbg !8465
@.str.217 = private unnamed_addr constant [16 x i8] c"pci_cqe_trap_id\00", align 1
@mlxsw_pci_cqe_trap_id_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 8, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 10, i8 undef }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.217, i32 0, i32 0) }, align 8, !dbg !8467
@.str.219 = private unnamed_addr constant [35 x i8] c"pci_cqe2_user_def_val_orig_pkt_len\00", align 1
@mlxsw_pci_cqe2_user_def_val_orig_pkt_len_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 20, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 20, i8 undef }, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.219, i32 0, i32 0) }, align 8, !dbg !8469
@.str.221 = private unnamed_addr constant [23 x i8] c"pci_cqe2_mirror_reason\00", align 1
@mlxsw_pci_cqe2_mirror_reason_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 24, i16 0, i16 0, i8 24, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.221, i32 0, i32 0) }, align 8, !dbg !8471
@.str.223 = private unnamed_addr constant [19 x i8] c"pci_cqe_byte_count\00", align 1
@mlxsw_pci_cqe_byte_count_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 4, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 14, i8 undef }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.223, i32 0, i32 0) }, align 8, !dbg !8473
@.str.225 = private unnamed_addr constant [13 x i8] c"pci_cqe0_crc\00", align 1
@mlxsw_pci_cqe0_crc_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 8, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.225, i32 0, i32 0) }, align 8, !dbg !8475
@.str.227 = private unnamed_addr constant [14 x i8] c"pci_cqe12_crc\00", align 1
@mlxsw_pci_cqe12_crc_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 12, i16 0, i16 0, i8 9, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.227, i32 0, i32 0) }, align 8, !dbg !8477
@mlxsw_pci_wqe_frag_map._rs = internal global %struct.ratelimit_state { %struct.raw_spinlock undef, i32 1250, i32 10, i32 0, i32 0, i64 0, i64 0 }, align 8, !dbg !8479
@__func__.mlxsw_pci_wqe_frag_map = private unnamed_addr constant [23 x i8] c"mlxsw_pci_wqe_frag_map\00", align 1
@.str.229 = private unnamed_addr constant [27 x i8] c"failed to dma map tx frag\0A\00", align 1
@dma_map_single_attrs.__warned = internal global i8 0, section ".data.once", align 1, !dbg !8484
@.str.230 = private unnamed_addr constant [44 x i8] c"%s %s: rejecting DMA map of vmalloc memory\0A\00", align 1
@.str.231 = private unnamed_addr constant [28 x i8] c"include/linux/dma-mapping.h\00", align 1
@vmemmap_base = external dso_local global i64, align 8
@phys_base = external dso_local global i64, align 8
@page_offset_base = external dso_local global i64, align 8
@.str.232 = private unnamed_addr constant [21 x i8] c"cmd_mbox_sw2hw_dq_cq\00", align 1
@mlxsw_cmd_mbox_sw2hw_dq_cq_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 24, i8 0, i8 0, i8 undef, { i8, i8 } { i8 8, i8 undef }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.232, i32 0, i32 0) }, align 8, !dbg !8492
@.str.234 = private unnamed_addr constant [29 x i8] c"cmd_mbox_sw2hw_dq_sdq_tclass\00", align 1
@mlxsw_cmd_mbox_sw2hw_dq_sdq_tclass_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 16, i8 0, i8 0, i8 undef, { i8, i8 } { i8 6, i8 undef }, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.234, i32 0, i32 0) }, align 8, !dbg !8494
@.str.236 = private unnamed_addr constant [29 x i8] c"cmd_mbox_sw2hw_dq_log2_dq_sz\00", align 1
@mlxsw_cmd_mbox_sw2hw_dq_log2_dq_sz_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 undef, { i8, i8 } { i8 6, i8 undef }, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.236, i32 0, i32 0) }, align 8, !dbg !8496
@.str.238 = private unnamed_addr constant [21 x i8] c"cmd_mbox_sw2hw_dq_pa\00", align 1
@mlxsw_cmd_mbox_sw2hw_dq_pa_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 16, i16 8, i16 0, i8 12, i8 0, i8 1, i8 undef, { i8, i8 } { i8 52, i8 undef }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.238, i32 0, i32 0) }, align 8, !dbg !8498
@__preempt_count = external dso_local global i32, section ".data", align 4
@.str.240 = private unnamed_addr constant [10 x i8] c"pci_wqe_c\00", align 1
@mlxsw_pci_wqe_c_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 31, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.240, i32 0, i32 0) }, align 8, !dbg !8502
@.str.242 = private unnamed_addr constant [11 x i8] c"pci_wqe_lp\00", align 1
@mlxsw_pci_wqe_lp_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 30, i8 0, i8 0, i8 undef, { i8, i8 } { i8 1, i8 undef }, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.242, i32 0, i32 0) }, align 8, !dbg !8504
@.str.244 = private unnamed_addr constant [13 x i8] c"pci_wqe_type\00", align 1
@mlxsw_pci_wqe_type_item = internal global { i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* } { i16 0, i16 0, i16 0, i8 23, i8 0, i8 0, i8 undef, { i8, i8 } { i8 4, i8 undef }, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.244, i32 0, i32 0) }, align 8, !dbg !8506
@llvm.used = appending global [7 x i8*] [i8* bitcast (void ()* @mlxsw_pci_module_exit to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_mlxsw_pci_module_init344 to i8*), i8* bitcast (void ()** @__exitcall_mlxsw_pci_module_exit to i8*), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__UNIQUE_ID_file345, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__UNIQUE_ID_license346, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @__UNIQUE_ID_author347, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__UNIQUE_ID_description348, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlxsw_pci_driver_register(%struct.pci_driver* %pci_driver) #0 !dbg !8513 {
entry:
  %pci_driver.addr = alloca %struct.pci_driver*, align 8
  store %struct.pci_driver* %pci_driver, %struct.pci_driver** %pci_driver.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_driver** %pci_driver.addr, metadata !8516, metadata !DIExpression()), !dbg !8517
  %0 = load %struct.pci_driver*, %struct.pci_driver** %pci_driver.addr, align 8, !dbg !8518
  %probe = getelementptr inbounds %struct.pci_driver, %struct.pci_driver* %0, i32 0, i32 3, !dbg !8519
  store i32 (%struct.pci_dev*, %struct.pci_device_id*)* @mlxsw_pci_probe, i32 (%struct.pci_dev*, %struct.pci_device_id*)** %probe, align 8, !dbg !8520
  %1 = load %struct.pci_driver*, %struct.pci_driver** %pci_driver.addr, align 8, !dbg !8521
  %remove = getelementptr inbounds %struct.pci_driver, %struct.pci_driver* %1, i32 0, i32 4, !dbg !8522
  store void (%struct.pci_dev*)* @mlxsw_pci_remove, void (%struct.pci_dev*)** %remove, align 8, !dbg !8523
  %2 = load %struct.pci_driver*, %struct.pci_driver** %pci_driver.addr, align 8, !dbg !8524
  %call = call i32 @__pci_register_driver(%struct.pci_driver* %2, %struct.module* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)) #10, !dbg !8524
  ret i32 %call, !dbg !8525
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_probe(%struct.pci_dev* %pdev, %struct.pci_device_id* %id) #0 !dbg !8526 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %id.addr = alloca %struct.pci_device_id*, align 8
  %driver_name = alloca i8*, align 8
  %mlxsw_pci = alloca %struct.mlxsw_pci*, align 8
  %err = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !8527, metadata !DIExpression()), !dbg !8528
  store %struct.pci_device_id* %id, %struct.pci_device_id** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %id.addr, metadata !8529, metadata !DIExpression()), !dbg !8530
  call void @llvm.dbg.declare(metadata i8** %driver_name, metadata !8531, metadata !DIExpression()), !dbg !8532
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8533
  %driver = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 23, !dbg !8534
  %1 = load %struct.pci_driver*, %struct.pci_driver** %driver, align 8, !dbg !8534
  %name = getelementptr inbounds %struct.pci_driver, %struct.pci_driver* %1, i32 0, i32 1, !dbg !8535
  %2 = load i8*, i8** %name, align 8, !dbg !8535
  store i8* %2, i8** %driver_name, align 8, !dbg !8532
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci, metadata !8536, metadata !DIExpression()), !dbg !8537
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8538, metadata !DIExpression()), !dbg !8539
  %call = call i8* @kzalloc(i64 520, i32 3264) #10, !dbg !8540
  %3 = bitcast i8* %call to %struct.mlxsw_pci*, !dbg !8540
  store %struct.mlxsw_pci* %3, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !8541
  %4 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !8542
  %tobool = icmp ne %struct.mlxsw_pci* %4, null, !dbg !8542
  br i1 %tobool, label %if.end, label %if.then, !dbg !8544

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !8545
  br label %return, !dbg !8545

if.end:                                           ; preds = %entry
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8546
  %call1 = call i32 @pci_enable_device(%struct.pci_dev* %5) #10, !dbg !8547
  store i32 %call1, i32* %err, align 4, !dbg !8548
  %6 = load i32, i32* %err, align 4, !dbg !8549
  %tobool2 = icmp ne i32 %6, 0, !dbg !8549
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !8551

if.then3:                                         ; preds = %if.end
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8552
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %7, i32 0, i32 41, !dbg !8552
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0)) #11, !dbg !8552
  br label %err_pci_enable_device, !dbg !8554

if.end4:                                          ; preds = %if.end
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8555
  %9 = load i8*, i8** %driver_name, align 8, !dbg !8556
  %call5 = call i32 @pci_request_regions(%struct.pci_dev* %8, i8* %9) #10, !dbg !8557
  store i32 %call5, i32* %err, align 4, !dbg !8558
  %10 = load i32, i32* %err, align 4, !dbg !8559
  %tobool6 = icmp ne i32 %10, 0, !dbg !8559
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !8561

if.then7:                                         ; preds = %if.end4
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8562
  %dev8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 41, !dbg !8562
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev8, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i64 0, i64 0)) #11, !dbg !8562
  br label %err_pci_request_regions, !dbg !8564

if.end9:                                          ; preds = %if.end4
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8565
  %call10 = call i32 @pci_set_dma_mask(%struct.pci_dev* %12, i64 -1) #10, !dbg !8566
  store i32 %call10, i32* %err, align 4, !dbg !8567
  %13 = load i32, i32* %err, align 4, !dbg !8568
  %tobool11 = icmp ne i32 %13, 0, !dbg !8568
  br i1 %tobool11, label %if.else, label %if.then12, !dbg !8570

if.then12:                                        ; preds = %if.end9
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8571
  %call13 = call i32 @pci_set_consistent_dma_mask(%struct.pci_dev* %14, i64 -1) #10, !dbg !8573
  store i32 %call13, i32* %err, align 4, !dbg !8574
  %15 = load i32, i32* %err, align 4, !dbg !8575
  %tobool14 = icmp ne i32 %15, 0, !dbg !8575
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !8577

if.then15:                                        ; preds = %if.then12
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8578
  %dev16 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 41, !dbg !8578
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3, i64 0, i64 0)) #11, !dbg !8578
  br label %err_pci_set_dma_mask, !dbg !8580

if.end17:                                         ; preds = %if.then12
  br label %if.end23, !dbg !8581

if.else:                                          ; preds = %if.end9
  %17 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8582
  %call18 = call i32 @pci_set_dma_mask(%struct.pci_dev* %17, i64 4294967295) #10, !dbg !8584
  store i32 %call18, i32* %err, align 4, !dbg !8585
  %18 = load i32, i32* %err, align 4, !dbg !8586
  %tobool19 = icmp ne i32 %18, 0, !dbg !8586
  br i1 %tobool19, label %if.then20, label %if.end22, !dbg !8588

if.then20:                                        ; preds = %if.else
  %19 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8589
  %dev21 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %19, i32 0, i32 41, !dbg !8589
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev21, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0)) #11, !dbg !8589
  br label %err_pci_set_dma_mask, !dbg !8591

if.end22:                                         ; preds = %if.else
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.end17
  %20 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8592
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 44, !dbg !8592
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !8592
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 0, !dbg !8592
  %21 = load i64, i64* %start, align 8, !dbg !8592
  %cmp = icmp eq i64 %21, 0, !dbg !8592
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !8592

land.lhs.true:                                    ; preds = %if.end23
  %22 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8592
  %resource24 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %22, i32 0, i32 44, !dbg !8592
  %arrayidx25 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource24, i64 0, i64 0, !dbg !8592
  %end = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx25, i32 0, i32 1, !dbg !8592
  %23 = load i64, i64* %end, align 8, !dbg !8592
  %24 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8592
  %resource26 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 44, !dbg !8592
  %arrayidx27 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource26, i64 0, i64 0, !dbg !8592
  %start28 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx27, i32 0, i32 0, !dbg !8592
  %25 = load i64, i64* %start28, align 8, !dbg !8592
  %cmp29 = icmp eq i64 %23, %25, !dbg !8592
  br i1 %cmp29, label %cond.true, label %cond.false, !dbg !8592

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !8592

cond.false:                                       ; preds = %land.lhs.true, %if.end23
  %26 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8592
  %resource30 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %26, i32 0, i32 44, !dbg !8592
  %arrayidx31 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource30, i64 0, i64 0, !dbg !8592
  %end32 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx31, i32 0, i32 1, !dbg !8592
  %27 = load i64, i64* %end32, align 8, !dbg !8592
  %28 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8592
  %resource33 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %28, i32 0, i32 44, !dbg !8592
  %arrayidx34 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource33, i64 0, i64 0, !dbg !8592
  %start35 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx34, i32 0, i32 0, !dbg !8592
  %29 = load i64, i64* %start35, align 8, !dbg !8592
  %sub = sub i64 %27, %29, !dbg !8592
  %add = add i64 %sub, 1, !dbg !8592
  br label %cond.end, !dbg !8592

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %add, %cond.false ], !dbg !8592
  %cmp36 = icmp ult i64 %cond, 1048576, !dbg !8594
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !8595

if.then37:                                        ; preds = %cond.end
  %30 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8596
  %dev38 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %30, i32 0, i32 41, !dbg !8596
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev38, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0)) #11, !dbg !8596
  store i32 -22, i32* %err, align 4, !dbg !8598
  br label %err_pci_resource_len_check, !dbg !8599

if.end39:                                         ; preds = %cond.end
  %31 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8600
  %resource40 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %31, i32 0, i32 44, !dbg !8600
  %arrayidx41 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource40, i64 0, i64 0, !dbg !8600
  %start42 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx41, i32 0, i32 0, !dbg !8600
  %32 = load i64, i64* %start42, align 8, !dbg !8600
  %33 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8601
  %resource43 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %33, i32 0, i32 44, !dbg !8601
  %arrayidx44 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource43, i64 0, i64 0, !dbg !8601
  %start45 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx44, i32 0, i32 0, !dbg !8601
  %34 = load i64, i64* %start45, align 8, !dbg !8601
  %cmp46 = icmp eq i64 %34, 0, !dbg !8601
  br i1 %cmp46, label %land.lhs.true47, label %cond.false56, !dbg !8601

land.lhs.true47:                                  ; preds = %if.end39
  %35 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8601
  %resource48 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %35, i32 0, i32 44, !dbg !8601
  %arrayidx49 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource48, i64 0, i64 0, !dbg !8601
  %end50 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx49, i32 0, i32 1, !dbg !8601
  %36 = load i64, i64* %end50, align 8, !dbg !8601
  %37 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8601
  %resource51 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %37, i32 0, i32 44, !dbg !8601
  %arrayidx52 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource51, i64 0, i64 0, !dbg !8601
  %start53 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx52, i32 0, i32 0, !dbg !8601
  %38 = load i64, i64* %start53, align 8, !dbg !8601
  %cmp54 = icmp eq i64 %36, %38, !dbg !8601
  br i1 %cmp54, label %cond.true55, label %cond.false56, !dbg !8601

cond.true55:                                      ; preds = %land.lhs.true47
  br label %cond.end65, !dbg !8601

cond.false56:                                     ; preds = %land.lhs.true47, %if.end39
  %39 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8601
  %resource57 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %39, i32 0, i32 44, !dbg !8601
  %arrayidx58 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource57, i64 0, i64 0, !dbg !8601
  %end59 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx58, i32 0, i32 1, !dbg !8601
  %40 = load i64, i64* %end59, align 8, !dbg !8601
  %41 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8601
  %resource60 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %41, i32 0, i32 44, !dbg !8601
  %arrayidx61 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource60, i64 0, i64 0, !dbg !8601
  %start62 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx61, i32 0, i32 0, !dbg !8601
  %42 = load i64, i64* %start62, align 8, !dbg !8601
  %sub63 = sub i64 %40, %42, !dbg !8601
  %add64 = add i64 %sub63, 1, !dbg !8601
  br label %cond.end65, !dbg !8601

cond.end65:                                       ; preds = %cond.false56, %cond.true55
  %cond66 = phi i64 [ 0, %cond.true55 ], [ %add64, %cond.false56 ], !dbg !8601
  %call67 = call i8* @ioremap(i64 %32, i64 %cond66) #10, !dbg !8602
  %43 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !8603
  %hw_addr = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %43, i32 0, i32 1, !dbg !8604
  store i8* %call67, i8** %hw_addr, align 8, !dbg !8605
  %44 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !8606
  %hw_addr68 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %44, i32 0, i32 1, !dbg !8608
  %45 = load i8*, i8** %hw_addr68, align 8, !dbg !8608
  %tobool69 = icmp ne i8* %45, null, !dbg !8606
  br i1 %tobool69, label %if.end72, label %if.then70, !dbg !8609

if.then70:                                        ; preds = %cond.end65
  %46 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8610
  %dev71 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %46, i32 0, i32 41, !dbg !8610
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev71, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0)) #11, !dbg !8610
  store i32 -5, i32* %err, align 4, !dbg !8612
  br label %err_ioremap, !dbg !8613

if.end72:                                         ; preds = %cond.end65
  %47 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8614
  call void @pci_set_master(%struct.pci_dev* %47) #10, !dbg !8615
  %48 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8616
  %49 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !8617
  %pdev73 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %49, i32 0, i32 0, !dbg !8618
  store %struct.pci_dev* %48, %struct.pci_dev** %pdev73, align 8, !dbg !8619
  %50 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8620
  %51 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !8621
  %52 = bitcast %struct.mlxsw_pci* %51 to i8*, !dbg !8621
  call void @pci_set_drvdata(%struct.pci_dev* %50, i8* %52) #10, !dbg !8622
  %53 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !8623
  %call74 = call i32 @mlxsw_pci_cmd_init(%struct.mlxsw_pci* %53) #10, !dbg !8624
  store i32 %call74, i32* %err, align 4, !dbg !8625
  %54 = load i32, i32* %err, align 4, !dbg !8626
  %tobool75 = icmp ne i32 %54, 0, !dbg !8626
  br i1 %tobool75, label %if.then76, label %if.end77, !dbg !8628

if.then76:                                        ; preds = %if.end72
  br label %err_pci_cmd_init, !dbg !8629

if.end77:                                         ; preds = %if.end72
  %55 = load i8*, i8** %driver_name, align 8, !dbg !8630
  %56 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !8631
  %bus_info = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %56, i32 0, i32 8, !dbg !8632
  %device_kind = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %bus_info, i32 0, i32 0, !dbg !8633
  store i8* %55, i8** %device_kind, align 8, !dbg !8634
  %57 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !8635
  %pdev78 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %57, i32 0, i32 0, !dbg !8636
  %58 = load %struct.pci_dev*, %struct.pci_dev** %pdev78, align 8, !dbg !8636
  %call79 = call i8* @pci_name(%struct.pci_dev* %58) #10, !dbg !8637
  %59 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !8638
  %bus_info80 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %59, i32 0, i32 8, !dbg !8639
  %device_name = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %bus_info80, i32 0, i32 1, !dbg !8640
  store i8* %call79, i8** %device_name, align 8, !dbg !8641
  %60 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8642
  %dev81 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %60, i32 0, i32 41, !dbg !8643
  %61 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !8644
  %bus_info82 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %61, i32 0, i32 8, !dbg !8645
  %dev83 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %bus_info82, i32 0, i32 2, !dbg !8646
  store %struct.device* %dev81, %struct.device** %dev83, align 8, !dbg !8647
  %62 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !8648
  %bus_info84 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %62, i32 0, i32 8, !dbg !8649
  %read_frc_capable = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %bus_info84, i32 0, i32 6, !dbg !8650
  %bf.load = load i8, i8* %read_frc_capable, align 8, !dbg !8651
  %bf.clear = and i8 %bf.load, -3, !dbg !8651
  %bf.set = or i8 %bf.clear, 2, !dbg !8651
  store i8 %bf.set, i8* %read_frc_capable, align 8, !dbg !8651
  %63 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !8652
  %64 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !8653
  %id85 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %64, i32 0, i32 9, !dbg !8654
  store %struct.pci_device_id* %63, %struct.pci_device_id** %id85, align 8, !dbg !8655
  %65 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !8656
  %bus_info86 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %65, i32 0, i32 8, !dbg !8657
  %66 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !8658
  %67 = bitcast %struct.mlxsw_pci* %66 to i8*, !dbg !8658
  %call87 = call i32 @mlxsw_core_bus_device_register(%struct.mlxsw_bus_info* %bus_info86, %struct.mlxsw_bus* @mlxsw_pci_bus, i8* %67, i1 zeroext false, %struct.devlink* null, %struct.netlink_ext_ack* null) #10, !dbg !8659
  store i32 %call87, i32* %err, align 4, !dbg !8660
  %68 = load i32, i32* %err, align 4, !dbg !8661
  %tobool88 = icmp ne i32 %68, 0, !dbg !8661
  br i1 %tobool88, label %if.then89, label %if.end91, !dbg !8663

if.then89:                                        ; preds = %if.end77
  %69 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8664
  %dev90 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %69, i32 0, i32 41, !dbg !8664
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev90, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0)) #11, !dbg !8664
  br label %err_bus_device_register, !dbg !8666

if.end91:                                         ; preds = %if.end77
  store i32 0, i32* %retval, align 4, !dbg !8667
  br label %return, !dbg !8667

err_bus_device_register:                          ; preds = %if.then89
  call void @llvm.dbg.label(metadata !8668), !dbg !8669
  %70 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !8670
  call void @mlxsw_pci_cmd_fini(%struct.mlxsw_pci* %70) #10, !dbg !8671
  br label %err_pci_cmd_init, !dbg !8671

err_pci_cmd_init:                                 ; preds = %err_bus_device_register, %if.then76
  call void @llvm.dbg.label(metadata !8672), !dbg !8673
  %71 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !8674
  %hw_addr92 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %71, i32 0, i32 1, !dbg !8675
  %72 = load i8*, i8** %hw_addr92, align 8, !dbg !8675
  call void @iounmap(i8* %72) #10, !dbg !8676
  br label %err_ioremap, !dbg !8676

err_ioremap:                                      ; preds = %err_pci_cmd_init, %if.then70
  call void @llvm.dbg.label(metadata !8677), !dbg !8678
  br label %err_pci_resource_len_check, !dbg !8676

err_pci_resource_len_check:                       ; preds = %err_ioremap, %if.then37
  call void @llvm.dbg.label(metadata !8679), !dbg !8680
  br label %err_pci_set_dma_mask, !dbg !8676

err_pci_set_dma_mask:                             ; preds = %err_pci_resource_len_check, %if.then20, %if.then15
  call void @llvm.dbg.label(metadata !8681), !dbg !8682
  %73 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8683
  call void @pci_release_regions(%struct.pci_dev* %73) #10, !dbg !8684
  br label %err_pci_request_regions, !dbg !8684

err_pci_request_regions:                          ; preds = %err_pci_set_dma_mask, %if.then7
  call void @llvm.dbg.label(metadata !8685), !dbg !8686
  %74 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8687
  call void @pci_disable_device(%struct.pci_dev* %74) #10, !dbg !8688
  br label %err_pci_enable_device, !dbg !8688

err_pci_enable_device:                            ; preds = %err_pci_request_regions, %if.then3
  call void @llvm.dbg.label(metadata !8689), !dbg !8690
  %75 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !8691
  %76 = bitcast %struct.mlxsw_pci* %75 to i8*, !dbg !8691
  call void @kfree(i8* %76) #10, !dbg !8692
  %77 = load i32, i32* %err, align 4, !dbg !8693
  store i32 %77, i32* %retval, align 4, !dbg !8694
  br label %return, !dbg !8694

return:                                           ; preds = %err_pci_enable_device, %if.end91, %if.then
  %78 = load i32, i32* %retval, align 4, !dbg !8695
  ret i32 %78, !dbg !8695
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_remove(%struct.pci_dev* %pdev) #0 !dbg !8696 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %mlxsw_pci = alloca %struct.mlxsw_pci*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !8697, metadata !DIExpression()), !dbg !8698
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci, metadata !8699, metadata !DIExpression()), !dbg !8700
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8701
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #10, !dbg !8702
  %1 = bitcast i8* %call to %struct.mlxsw_pci*, !dbg !8702
  store %struct.mlxsw_pci* %1, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !8700
  %2 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !8703
  %core = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %2, i32 0, i32 5, !dbg !8704
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !8704
  call void @mlxsw_core_bus_device_unregister(%struct.mlxsw_core* %3, i1 zeroext false) #10, !dbg !8705
  %4 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !8706
  call void @mlxsw_pci_cmd_fini(%struct.mlxsw_pci* %4) #10, !dbg !8707
  %5 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !8708
  %hw_addr = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %5, i32 0, i32 1, !dbg !8709
  %6 = load i8*, i8** %hw_addr, align 8, !dbg !8709
  call void @iounmap(i8* %6) #10, !dbg !8710
  %7 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !8711
  %pdev1 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %7, i32 0, i32 0, !dbg !8712
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !8712
  call void @pci_release_regions(%struct.pci_dev* %8) #10, !dbg !8713
  %9 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !8714
  %pdev2 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %9, i32 0, i32 0, !dbg !8715
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev2, align 8, !dbg !8715
  call void @pci_disable_device(%struct.pci_dev* %10) #10, !dbg !8716
  %11 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !8717
  %12 = bitcast %struct.mlxsw_pci* %11 to i8*, !dbg !8717
  call void @kfree(i8* %12) #10, !dbg !8718
  ret void, !dbg !8719
}

; Function Attrs: noredzone
declare dso_local i32 @__pci_register_driver(%struct.pci_driver*, %struct.module*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlxsw_pci_driver_unregister(%struct.pci_driver* %pci_driver) #0 !dbg !8720 {
entry:
  %pci_driver.addr = alloca %struct.pci_driver*, align 8
  store %struct.pci_driver* %pci_driver, %struct.pci_driver** %pci_driver.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_driver** %pci_driver.addr, metadata !8723, metadata !DIExpression()), !dbg !8724
  %0 = load %struct.pci_driver*, %struct.pci_driver** %pci_driver.addr, align 8, !dbg !8725
  call void @pci_unregister_driver(%struct.pci_driver* %0) #10, !dbg !8726
  ret void, !dbg !8727
}

; Function Attrs: noredzone
declare dso_local void @pci_unregister_driver(%struct.pci_driver*) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_module_exit() #3 section ".exit.text" !dbg !8728 {
entry:
  ret void, !dbg !8729
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_module_init() #3 section ".init.text" !dbg !8730 {
entry:
  ret i32 0, !dbg !8733
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !8734 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !8737, metadata !DIExpression()), !dbg !8741
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !8747, metadata !DIExpression()), !dbg !8748
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !8749, metadata !DIExpression()), !dbg !8750
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !8751, metadata !DIExpression()), !dbg !8752
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !8753, metadata !DIExpression()), !dbg !8757
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !8759, metadata !DIExpression()), !dbg !8763
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !8765, metadata !DIExpression()), !dbg !8769
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !8774, metadata !DIExpression()), !dbg !8775
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !8776, metadata !DIExpression()), !dbg !8777
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8778, metadata !DIExpression()), !dbg !8779
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !8780, metadata !DIExpression()), !dbg !8781
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !8782, metadata !DIExpression()), !dbg !8783
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8784, metadata !DIExpression()), !dbg !8785
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !8786, metadata !DIExpression()), !dbg !8787
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !8788, metadata !DIExpression()), !dbg !8789
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8790, metadata !DIExpression()), !dbg !8791
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8792, metadata !DIExpression()), !dbg !8793
  %0 = load i64, i64* %size.addr, align 8, !dbg !8794
  %1 = load i32, i32* %flags.addr, align 4, !dbg !8795
  %or = or i32 %1, 256, !dbg !8796
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !8797
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #12, !dbg !8798
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !8799

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !8800
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !8801
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !8802

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !8803
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !8804
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !8805
  %call.i.i = call i32 @get_order(i64 %7) #13, !dbg !8806
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !8783
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !8807
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !8808
  %10 = load i32, i32* %order.i.i, align 4, !dbg !8809
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !8810
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !8811
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !8812
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #14, !dbg !8813
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !8813
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !8813
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !8813
  call void @llvm.assume(i1 %maskcond.i.i.i) #12, !dbg !8813
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !8814
  br label %kmalloc.exit, !dbg !8814

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !8815
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8816
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !8816
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !8818

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !8819
  br label %kmalloc_index.exit.i, !dbg !8819

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8820
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !8822
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !8823

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8824
  br label %kmalloc_index.exit.i, !dbg !8824

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8825
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !8827
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !8828

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8829
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !8830
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !8831

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !8832
  br label %kmalloc_index.exit.i, !dbg !8832

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8833
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !8835
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !8836

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8837
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !8838
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !8839

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !8840
  br label %kmalloc_index.exit.i, !dbg !8840

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8841
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !8843
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !8844

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8845
  br label %kmalloc_index.exit.i, !dbg !8845

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8846
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !8848
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !8849

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !8850
  br label %kmalloc_index.exit.i, !dbg !8850

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8851
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !8853
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !8854

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !8855
  br label %kmalloc_index.exit.i, !dbg !8855

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8856
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !8858
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !8859

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !8860
  br label %kmalloc_index.exit.i, !dbg !8860

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8861
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !8863
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !8864

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !8865
  br label %kmalloc_index.exit.i, !dbg !8865

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8866
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !8868
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !8869

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !8870
  br label %kmalloc_index.exit.i, !dbg !8870

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8871
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !8873
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !8874

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !8875
  br label %kmalloc_index.exit.i, !dbg !8875

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8876
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !8878
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !8879

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !8880
  br label %kmalloc_index.exit.i, !dbg !8880

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8881
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !8883
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !8884

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !8885
  br label %kmalloc_index.exit.i, !dbg !8885

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8886
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !8888
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !8889

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !8890
  br label %kmalloc_index.exit.i, !dbg !8890

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8891
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !8893
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !8894

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !8895
  br label %kmalloc_index.exit.i, !dbg !8895

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8896
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !8898
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !8899

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !8900
  br label %kmalloc_index.exit.i, !dbg !8900

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8901
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !8903
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !8904

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !8905
  br label %kmalloc_index.exit.i, !dbg !8905

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8906
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !8908
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !8909

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !8910
  br label %kmalloc_index.exit.i, !dbg !8910

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8911
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !8913
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !8914

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !8915
  br label %kmalloc_index.exit.i, !dbg !8915

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8916
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !8918
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !8919

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !8920
  br label %kmalloc_index.exit.i, !dbg !8920

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8921
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !8923
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !8924

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !8925
  br label %kmalloc_index.exit.i, !dbg !8925

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8926
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !8928
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !8929

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !8930
  br label %kmalloc_index.exit.i, !dbg !8930

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8931
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !8933
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !8934

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !8935
  br label %kmalloc_index.exit.i, !dbg !8935

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8936
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !8938
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !8939

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !8940
  br label %kmalloc_index.exit.i, !dbg !8940

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8941
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !8943
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !8944

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !8945
  br label %kmalloc_index.exit.i, !dbg !8945

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8946
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !8948
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !8949

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !8950
  br label %kmalloc_index.exit.i, !dbg !8950

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8951
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !8953
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !8954

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !8955
  br label %kmalloc_index.exit.i, !dbg !8955

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8956
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !8958
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !8959

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !8960
  br label %kmalloc_index.exit.i, !dbg !8960

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0), i32 382, i32 0, i64 12) #12, !dbg !8961, !srcloc !8964
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 160) #12, !dbg !8965, !srcloc !8968
  unreachable, !dbg !8969

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !8970
  store i32 %45, i32* %index.i, align 4, !dbg !8971
  %46 = load i32, i32* %index.i, align 4, !dbg !8972
  %tobool.i = icmp ne i32 %46, 0, !dbg !8972
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !8974

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !8975
  br label %kmalloc.exit, !dbg !8975

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !8976
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8977
  %and.i.i = and i32 %48, 17, !dbg !8977
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !8977
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !8977
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !8977
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8977
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !8979

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !8980
  br label %kmalloc_type.exit.i, !dbg !8980

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8981
  %and2.i.i = and i32 %49, 1, !dbg !8982
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !8981
  %50 = zext i1 %tobool3.i.i to i64, !dbg !8981
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !8981
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !8983
  br label %kmalloc_type.exit.i, !dbg !8983

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !8984
  %idxprom.i = zext i32 %51 to i64, !dbg !8985
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !8985
  %52 = load i32, i32* %index.i, align 4, !dbg !8986
  %idxprom6.i = zext i32 %52 to i64, !dbg !8985
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !8985
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !8985
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !8987
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !8988
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8989
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8990
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #14, !dbg !8991
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !8991
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !8991
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !8991
  call void @llvm.assume(i1 %maskcond.i.i) #12, !dbg !8991
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !8752
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8992
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !8993
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !8994
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8995
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #14, !dbg !8996
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !8997
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !8998
  store i8* %62, i8** %retval.i, align 8, !dbg !8999
  br label %kmalloc.exit, !dbg !8999

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !9000
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !9001
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #14, !dbg !9002
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !9002
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !9002
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !9002
  call void @llvm.assume(i1 %maskcond.i) #12, !dbg !9002
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !9003
  br label %kmalloc.exit, !dbg !9003

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !9004
  ret i8* %65, !dbg !9005
}

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_device(%struct.pci_dev*) #2

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local i32 @pci_request_regions(%struct.pci_dev*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_set_dma_mask(%struct.pci_dev* %dev, i64 %mask) #0 !dbg !9006 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %mask.addr = alloca i64, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9010, metadata !DIExpression()), !dbg !9011
  store i64 %mask, i64* %mask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %mask.addr, metadata !9012, metadata !DIExpression()), !dbg !9013
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9014
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !9015
  %1 = load i64, i64* %mask.addr, align 8, !dbg !9016
  %call = call i32 @dma_set_mask(%struct.device* %dev1, i64 %1) #10, !dbg !9017
  ret i32 %call, !dbg !9018
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_set_consistent_dma_mask(%struct.pci_dev* %dev, i64 %mask) #0 !dbg !9019 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %mask.addr = alloca i64, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9020, metadata !DIExpression()), !dbg !9021
  store i64 %mask, i64* %mask.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %mask.addr, metadata !9022, metadata !DIExpression()), !dbg !9023
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9024
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !9025
  %1 = load i64, i64* %mask.addr, align 8, !dbg !9026
  %call = call i32 @dma_set_coherent_mask(%struct.device* %dev1, i64 %1) #10, !dbg !9027
  ret i32 %call, !dbg !9028
}

; Function Attrs: noredzone
declare dso_local i8* @ioremap(i64, i64) #2

; Function Attrs: noredzone
declare dso_local void @pci_set_master(%struct.pci_dev*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_set_drvdata(%struct.pci_dev* %pdev, i8* %data) #0 !dbg !9029 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !9032, metadata !DIExpression()), !dbg !9033
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !9034, metadata !DIExpression()), !dbg !9035
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9036
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !9037
  %1 = load i8*, i8** %data.addr, align 8, !dbg !9038
  call void @dev_set_drvdata(%struct.device* %dev, i8* %1) #10, !dbg !9039
  ret void, !dbg !9040
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_cmd_init(%struct.mlxsw_pci* %mlxsw_pci) #0 !dbg !8132 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !9041, metadata !DIExpression()), !dbg !9042
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9043, metadata !DIExpression()), !dbg !9044
  br label %do.body, !dbg !9045

do.body:                                          ; preds = %entry
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !9046
  %cmd = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %0, i32 0, i32 7, !dbg !9046
  %lock = getelementptr inbounds %struct.anon.138, %struct.anon.138* %cmd, i32 0, i32 2, !dbg !9046
  call void @__mutex_init(%struct.mutex* %lock, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i64 0, i64 0), %struct.lock_class_key* @mlxsw_pci_cmd_init.__key) #10, !dbg !9046
  br label %do.end, !dbg !9046

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !9048

do.body1:                                         ; preds = %do.end
  %1 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !9049
  %cmd2 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %1, i32 0, i32 7, !dbg !9049
  %wait = getelementptr inbounds %struct.anon.138, %struct.anon.138* %cmd2, i32 0, i32 4, !dbg !9049
  call void @__init_waitqueue_head(%struct.wait_queue_head* %wait, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0), %struct.lock_class_key* @mlxsw_pci_cmd_init.__key.10) #10, !dbg !9049
  br label %do.end3, !dbg !9049

do.end3:                                          ; preds = %do.body1
  %2 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !9051
  %3 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !9052
  %cmd4 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %3, i32 0, i32 7, !dbg !9053
  %in_mbox = getelementptr inbounds %struct.anon.138, %struct.anon.138* %cmd4, i32 0, i32 1, !dbg !9054
  %call = call i32 @mlxsw_pci_mbox_alloc(%struct.mlxsw_pci* %2, %struct.mlxsw_pci_mem_item* %in_mbox) #10, !dbg !9055
  store i32 %call, i32* %err, align 4, !dbg !9056
  %4 = load i32, i32* %err, align 4, !dbg !9057
  %tobool = icmp ne i32 %4, 0, !dbg !9057
  br i1 %tobool, label %if.then, label %if.end, !dbg !9059

if.then:                                          ; preds = %do.end3
  br label %err_in_mbox_alloc, !dbg !9060

if.end:                                           ; preds = %do.end3
  %5 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !9061
  %6 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !9062
  %cmd5 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %6, i32 0, i32 7, !dbg !9063
  %out_mbox = getelementptr inbounds %struct.anon.138, %struct.anon.138* %cmd5, i32 0, i32 0, !dbg !9064
  %call6 = call i32 @mlxsw_pci_mbox_alloc(%struct.mlxsw_pci* %5, %struct.mlxsw_pci_mem_item* %out_mbox) #10, !dbg !9065
  store i32 %call6, i32* %err, align 4, !dbg !9066
  %7 = load i32, i32* %err, align 4, !dbg !9067
  %tobool7 = icmp ne i32 %7, 0, !dbg !9067
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !9069

if.then8:                                         ; preds = %if.end
  br label %err_out_mbox_alloc, !dbg !9070

if.end9:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9071
  br label %return, !dbg !9071

err_out_mbox_alloc:                               ; preds = %if.then8
  call void @llvm.dbg.label(metadata !9072), !dbg !9073
  %8 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !9074
  %9 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !9075
  %cmd10 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %9, i32 0, i32 7, !dbg !9076
  %in_mbox11 = getelementptr inbounds %struct.anon.138, %struct.anon.138* %cmd10, i32 0, i32 1, !dbg !9077
  call void @mlxsw_pci_mbox_free(%struct.mlxsw_pci* %8, %struct.mlxsw_pci_mem_item* %in_mbox11) #10, !dbg !9078
  br label %err_in_mbox_alloc, !dbg !9078

err_in_mbox_alloc:                                ; preds = %err_out_mbox_alloc, %if.then
  call void @llvm.dbg.label(metadata !9079), !dbg !9080
  %10 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !9081
  %cmd12 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %10, i32 0, i32 7, !dbg !9082
  %lock13 = getelementptr inbounds %struct.anon.138, %struct.anon.138* %cmd12, i32 0, i32 2, !dbg !9083
  call void @mutex_destroy(%struct.mutex* %lock13) #10, !dbg !9084
  %11 = load i32, i32* %err, align 4, !dbg !9085
  store i32 %11, i32* %retval, align 4, !dbg !9086
  br label %return, !dbg !9086

return:                                           ; preds = %err_in_mbox_alloc, %if.end9
  %12 = load i32, i32* %retval, align 4, !dbg !9087
  ret i32 %12, !dbg !9087
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_name(%struct.pci_dev* %pdev) #0 !dbg !9088 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !9093, metadata !DIExpression()), !dbg !9094
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9095
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !9096
  %call = call i8* @dev_name(%struct.device* %dev) #10, !dbg !9097
  ret i8* %call, !dbg !9098
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_core_bus_device_register(%struct.mlxsw_bus_info*, %struct.mlxsw_bus*, i8*, i1 zeroext, %struct.devlink*, %struct.netlink_ext_ack*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_cmd_fini(%struct.mlxsw_pci* %mlxsw_pci) #0 !dbg !9099 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !9102, metadata !DIExpression()), !dbg !9103
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !9104
  %1 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !9105
  %cmd = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %1, i32 0, i32 7, !dbg !9106
  %out_mbox = getelementptr inbounds %struct.anon.138, %struct.anon.138* %cmd, i32 0, i32 0, !dbg !9107
  call void @mlxsw_pci_mbox_free(%struct.mlxsw_pci* %0, %struct.mlxsw_pci_mem_item* %out_mbox) #10, !dbg !9108
  %2 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !9109
  %3 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !9110
  %cmd1 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %3, i32 0, i32 7, !dbg !9111
  %in_mbox = getelementptr inbounds %struct.anon.138, %struct.anon.138* %cmd1, i32 0, i32 1, !dbg !9112
  call void @mlxsw_pci_mbox_free(%struct.mlxsw_pci* %2, %struct.mlxsw_pci_mem_item* %in_mbox) #10, !dbg !9113
  %4 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !9114
  %cmd2 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %4, i32 0, i32 7, !dbg !9115
  %lock = getelementptr inbounds %struct.anon.138, %struct.anon.138* %cmd2, i32 0, i32 2, !dbg !9116
  call void @mutex_destroy(%struct.mutex* %lock) #10, !dbg !9117
  ret void, !dbg !9118
}

; Function Attrs: noredzone
declare dso_local void @iounmap(i8*) #2

; Function Attrs: noredzone
declare dso_local void @pci_release_regions(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local void @pci_disable_device(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #5

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #6

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #7 !dbg !9119 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !9123, metadata !DIExpression()), !dbg !9128
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !9130, metadata !DIExpression()), !dbg !9131
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9132, metadata !DIExpression()), !dbg !9133
  %0 = load i64, i64* %size.addr, align 8, !dbg !9134
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !9136
  br i1 %1, label %if.then, label %if.end447, !dbg !9137

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !9138
  %tobool = icmp ne i64 %2, 0, !dbg !9138
  br i1 %tobool, label %if.end, label %if.then1, !dbg !9141

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !9142
  br label %return, !dbg !9142

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !9143
  %cmp = icmp ult i64 %3, 4096, !dbg !9145
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !9146

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9147
  br label %return, !dbg !9147

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub = sub i64 %4, 1, !dbg !9148
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !9148
  br i1 %5, label %cond.true, label %cond.false442, !dbg !9148

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub4 = sub i64 %6, 1, !dbg !9148
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !9148
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !9148

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub6 = sub i64 %8, 1, !dbg !9148
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !9148
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !9148

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !9148

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub9 = sub i64 %9, 1, !dbg !9148
  %and = and i64 %sub9, -9223372036854775808, !dbg !9148
  %tobool10 = icmp ne i64 %and, 0, !dbg !9148
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !9148

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !9148

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub13 = sub i64 %10, 1, !dbg !9148
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !9148
  %tobool15 = icmp ne i64 %and14, 0, !dbg !9148
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !9148

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !9148

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub18 = sub i64 %11, 1, !dbg !9148
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !9148
  %tobool20 = icmp ne i64 %and19, 0, !dbg !9148
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !9148

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !9148

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub23 = sub i64 %12, 1, !dbg !9148
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !9148
  %tobool25 = icmp ne i64 %and24, 0, !dbg !9148
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !9148

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !9148

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub28 = sub i64 %13, 1, !dbg !9148
  %and29 = and i64 %sub28, 576460752303423488, !dbg !9148
  %tobool30 = icmp ne i64 %and29, 0, !dbg !9148
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !9148

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !9148

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub33 = sub i64 %14, 1, !dbg !9148
  %and34 = and i64 %sub33, 288230376151711744, !dbg !9148
  %tobool35 = icmp ne i64 %and34, 0, !dbg !9148
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !9148

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !9148

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub38 = sub i64 %15, 1, !dbg !9148
  %and39 = and i64 %sub38, 144115188075855872, !dbg !9148
  %tobool40 = icmp ne i64 %and39, 0, !dbg !9148
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !9148

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !9148

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub43 = sub i64 %16, 1, !dbg !9148
  %and44 = and i64 %sub43, 72057594037927936, !dbg !9148
  %tobool45 = icmp ne i64 %and44, 0, !dbg !9148
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !9148

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !9148

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub48 = sub i64 %17, 1, !dbg !9148
  %and49 = and i64 %sub48, 36028797018963968, !dbg !9148
  %tobool50 = icmp ne i64 %and49, 0, !dbg !9148
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !9148

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !9148

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub53 = sub i64 %18, 1, !dbg !9148
  %and54 = and i64 %sub53, 18014398509481984, !dbg !9148
  %tobool55 = icmp ne i64 %and54, 0, !dbg !9148
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !9148

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !9148

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub58 = sub i64 %19, 1, !dbg !9148
  %and59 = and i64 %sub58, 9007199254740992, !dbg !9148
  %tobool60 = icmp ne i64 %and59, 0, !dbg !9148
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !9148

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !9148

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub63 = sub i64 %20, 1, !dbg !9148
  %and64 = and i64 %sub63, 4503599627370496, !dbg !9148
  %tobool65 = icmp ne i64 %and64, 0, !dbg !9148
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !9148

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !9148

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub68 = sub i64 %21, 1, !dbg !9148
  %and69 = and i64 %sub68, 2251799813685248, !dbg !9148
  %tobool70 = icmp ne i64 %and69, 0, !dbg !9148
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !9148

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !9148

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub73 = sub i64 %22, 1, !dbg !9148
  %and74 = and i64 %sub73, 1125899906842624, !dbg !9148
  %tobool75 = icmp ne i64 %and74, 0, !dbg !9148
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !9148

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !9148

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub78 = sub i64 %23, 1, !dbg !9148
  %and79 = and i64 %sub78, 562949953421312, !dbg !9148
  %tobool80 = icmp ne i64 %and79, 0, !dbg !9148
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !9148

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !9148

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub83 = sub i64 %24, 1, !dbg !9148
  %and84 = and i64 %sub83, 281474976710656, !dbg !9148
  %tobool85 = icmp ne i64 %and84, 0, !dbg !9148
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !9148

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !9148

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub88 = sub i64 %25, 1, !dbg !9148
  %and89 = and i64 %sub88, 140737488355328, !dbg !9148
  %tobool90 = icmp ne i64 %and89, 0, !dbg !9148
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !9148

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !9148

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub93 = sub i64 %26, 1, !dbg !9148
  %and94 = and i64 %sub93, 70368744177664, !dbg !9148
  %tobool95 = icmp ne i64 %and94, 0, !dbg !9148
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !9148

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !9148

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub98 = sub i64 %27, 1, !dbg !9148
  %and99 = and i64 %sub98, 35184372088832, !dbg !9148
  %tobool100 = icmp ne i64 %and99, 0, !dbg !9148
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !9148

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !9148

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub103 = sub i64 %28, 1, !dbg !9148
  %and104 = and i64 %sub103, 17592186044416, !dbg !9148
  %tobool105 = icmp ne i64 %and104, 0, !dbg !9148
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !9148

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !9148

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub108 = sub i64 %29, 1, !dbg !9148
  %and109 = and i64 %sub108, 8796093022208, !dbg !9148
  %tobool110 = icmp ne i64 %and109, 0, !dbg !9148
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !9148

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !9148

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub113 = sub i64 %30, 1, !dbg !9148
  %and114 = and i64 %sub113, 4398046511104, !dbg !9148
  %tobool115 = icmp ne i64 %and114, 0, !dbg !9148
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !9148

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !9148

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub118 = sub i64 %31, 1, !dbg !9148
  %and119 = and i64 %sub118, 2199023255552, !dbg !9148
  %tobool120 = icmp ne i64 %and119, 0, !dbg !9148
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !9148

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !9148

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub123 = sub i64 %32, 1, !dbg !9148
  %and124 = and i64 %sub123, 1099511627776, !dbg !9148
  %tobool125 = icmp ne i64 %and124, 0, !dbg !9148
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !9148

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !9148

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub128 = sub i64 %33, 1, !dbg !9148
  %and129 = and i64 %sub128, 549755813888, !dbg !9148
  %tobool130 = icmp ne i64 %and129, 0, !dbg !9148
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !9148

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !9148

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub133 = sub i64 %34, 1, !dbg !9148
  %and134 = and i64 %sub133, 274877906944, !dbg !9148
  %tobool135 = icmp ne i64 %and134, 0, !dbg !9148
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !9148

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !9148

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub138 = sub i64 %35, 1, !dbg !9148
  %and139 = and i64 %sub138, 137438953472, !dbg !9148
  %tobool140 = icmp ne i64 %and139, 0, !dbg !9148
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !9148

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !9148

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub143 = sub i64 %36, 1, !dbg !9148
  %and144 = and i64 %sub143, 68719476736, !dbg !9148
  %tobool145 = icmp ne i64 %and144, 0, !dbg !9148
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !9148

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !9148

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub148 = sub i64 %37, 1, !dbg !9148
  %and149 = and i64 %sub148, 34359738368, !dbg !9148
  %tobool150 = icmp ne i64 %and149, 0, !dbg !9148
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !9148

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !9148

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub153 = sub i64 %38, 1, !dbg !9148
  %and154 = and i64 %sub153, 17179869184, !dbg !9148
  %tobool155 = icmp ne i64 %and154, 0, !dbg !9148
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !9148

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !9148

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub158 = sub i64 %39, 1, !dbg !9148
  %and159 = and i64 %sub158, 8589934592, !dbg !9148
  %tobool160 = icmp ne i64 %and159, 0, !dbg !9148
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !9148

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !9148

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub163 = sub i64 %40, 1, !dbg !9148
  %and164 = and i64 %sub163, 4294967296, !dbg !9148
  %tobool165 = icmp ne i64 %and164, 0, !dbg !9148
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !9148

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !9148

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub168 = sub i64 %41, 1, !dbg !9148
  %and169 = and i64 %sub168, 2147483648, !dbg !9148
  %tobool170 = icmp ne i64 %and169, 0, !dbg !9148
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !9148

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !9148

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub173 = sub i64 %42, 1, !dbg !9148
  %and174 = and i64 %sub173, 1073741824, !dbg !9148
  %tobool175 = icmp ne i64 %and174, 0, !dbg !9148
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !9148

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !9148

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub178 = sub i64 %43, 1, !dbg !9148
  %and179 = and i64 %sub178, 536870912, !dbg !9148
  %tobool180 = icmp ne i64 %and179, 0, !dbg !9148
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !9148

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !9148

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub183 = sub i64 %44, 1, !dbg !9148
  %and184 = and i64 %sub183, 268435456, !dbg !9148
  %tobool185 = icmp ne i64 %and184, 0, !dbg !9148
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !9148

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !9148

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub188 = sub i64 %45, 1, !dbg !9148
  %and189 = and i64 %sub188, 134217728, !dbg !9148
  %tobool190 = icmp ne i64 %and189, 0, !dbg !9148
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !9148

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !9148

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub193 = sub i64 %46, 1, !dbg !9148
  %and194 = and i64 %sub193, 67108864, !dbg !9148
  %tobool195 = icmp ne i64 %and194, 0, !dbg !9148
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !9148

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !9148

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub198 = sub i64 %47, 1, !dbg !9148
  %and199 = and i64 %sub198, 33554432, !dbg !9148
  %tobool200 = icmp ne i64 %and199, 0, !dbg !9148
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !9148

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !9148

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub203 = sub i64 %48, 1, !dbg !9148
  %and204 = and i64 %sub203, 16777216, !dbg !9148
  %tobool205 = icmp ne i64 %and204, 0, !dbg !9148
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !9148

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !9148

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub208 = sub i64 %49, 1, !dbg !9148
  %and209 = and i64 %sub208, 8388608, !dbg !9148
  %tobool210 = icmp ne i64 %and209, 0, !dbg !9148
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !9148

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !9148

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub213 = sub i64 %50, 1, !dbg !9148
  %and214 = and i64 %sub213, 4194304, !dbg !9148
  %tobool215 = icmp ne i64 %and214, 0, !dbg !9148
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !9148

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !9148

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub218 = sub i64 %51, 1, !dbg !9148
  %and219 = and i64 %sub218, 2097152, !dbg !9148
  %tobool220 = icmp ne i64 %and219, 0, !dbg !9148
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !9148

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !9148

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub223 = sub i64 %52, 1, !dbg !9148
  %and224 = and i64 %sub223, 1048576, !dbg !9148
  %tobool225 = icmp ne i64 %and224, 0, !dbg !9148
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !9148

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !9148

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub228 = sub i64 %53, 1, !dbg !9148
  %and229 = and i64 %sub228, 524288, !dbg !9148
  %tobool230 = icmp ne i64 %and229, 0, !dbg !9148
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !9148

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !9148

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub233 = sub i64 %54, 1, !dbg !9148
  %and234 = and i64 %sub233, 262144, !dbg !9148
  %tobool235 = icmp ne i64 %and234, 0, !dbg !9148
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !9148

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !9148

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub238 = sub i64 %55, 1, !dbg !9148
  %and239 = and i64 %sub238, 131072, !dbg !9148
  %tobool240 = icmp ne i64 %and239, 0, !dbg !9148
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !9148

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !9148

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub243 = sub i64 %56, 1, !dbg !9148
  %and244 = and i64 %sub243, 65536, !dbg !9148
  %tobool245 = icmp ne i64 %and244, 0, !dbg !9148
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !9148

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !9148

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub248 = sub i64 %57, 1, !dbg !9148
  %and249 = and i64 %sub248, 32768, !dbg !9148
  %tobool250 = icmp ne i64 %and249, 0, !dbg !9148
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !9148

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !9148

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub253 = sub i64 %58, 1, !dbg !9148
  %and254 = and i64 %sub253, 16384, !dbg !9148
  %tobool255 = icmp ne i64 %and254, 0, !dbg !9148
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !9148

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !9148

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub258 = sub i64 %59, 1, !dbg !9148
  %and259 = and i64 %sub258, 8192, !dbg !9148
  %tobool260 = icmp ne i64 %and259, 0, !dbg !9148
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !9148

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !9148

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub263 = sub i64 %60, 1, !dbg !9148
  %and264 = and i64 %sub263, 4096, !dbg !9148
  %tobool265 = icmp ne i64 %and264, 0, !dbg !9148
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !9148

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !9148

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub268 = sub i64 %61, 1, !dbg !9148
  %and269 = and i64 %sub268, 2048, !dbg !9148
  %tobool270 = icmp ne i64 %and269, 0, !dbg !9148
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !9148

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !9148

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub273 = sub i64 %62, 1, !dbg !9148
  %and274 = and i64 %sub273, 1024, !dbg !9148
  %tobool275 = icmp ne i64 %and274, 0, !dbg !9148
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !9148

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !9148

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub278 = sub i64 %63, 1, !dbg !9148
  %and279 = and i64 %sub278, 512, !dbg !9148
  %tobool280 = icmp ne i64 %and279, 0, !dbg !9148
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !9148

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !9148

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub283 = sub i64 %64, 1, !dbg !9148
  %and284 = and i64 %sub283, 256, !dbg !9148
  %tobool285 = icmp ne i64 %and284, 0, !dbg !9148
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !9148

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !9148

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub288 = sub i64 %65, 1, !dbg !9148
  %and289 = and i64 %sub288, 128, !dbg !9148
  %tobool290 = icmp ne i64 %and289, 0, !dbg !9148
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !9148

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !9148

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub293 = sub i64 %66, 1, !dbg !9148
  %and294 = and i64 %sub293, 64, !dbg !9148
  %tobool295 = icmp ne i64 %and294, 0, !dbg !9148
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !9148

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !9148

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub298 = sub i64 %67, 1, !dbg !9148
  %and299 = and i64 %sub298, 32, !dbg !9148
  %tobool300 = icmp ne i64 %and299, 0, !dbg !9148
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !9148

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !9148

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub303 = sub i64 %68, 1, !dbg !9148
  %and304 = and i64 %sub303, 16, !dbg !9148
  %tobool305 = icmp ne i64 %and304, 0, !dbg !9148
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !9148

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !9148

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub308 = sub i64 %69, 1, !dbg !9148
  %and309 = and i64 %sub308, 8, !dbg !9148
  %tobool310 = icmp ne i64 %and309, 0, !dbg !9148
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !9148

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !9148

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub313 = sub i64 %70, 1, !dbg !9148
  %and314 = and i64 %sub313, 4, !dbg !9148
  %tobool315 = icmp ne i64 %and314, 0, !dbg !9148
  %71 = zext i1 %tobool315 to i64, !dbg !9148
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !9148
  br label %cond.end, !dbg !9148

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !9148
  br label %cond.end317, !dbg !9148

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !9148
  br label %cond.end319, !dbg !9148

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !9148
  br label %cond.end321, !dbg !9148

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !9148
  br label %cond.end323, !dbg !9148

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !9148
  br label %cond.end325, !dbg !9148

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !9148
  br label %cond.end327, !dbg !9148

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !9148
  br label %cond.end329, !dbg !9148

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !9148
  br label %cond.end331, !dbg !9148

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !9148
  br label %cond.end333, !dbg !9148

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !9148
  br label %cond.end335, !dbg !9148

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !9148
  br label %cond.end337, !dbg !9148

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !9148
  br label %cond.end339, !dbg !9148

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !9148
  br label %cond.end341, !dbg !9148

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !9148
  br label %cond.end343, !dbg !9148

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !9148
  br label %cond.end345, !dbg !9148

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !9148
  br label %cond.end347, !dbg !9148

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !9148
  br label %cond.end349, !dbg !9148

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !9148
  br label %cond.end351, !dbg !9148

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !9148
  br label %cond.end353, !dbg !9148

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !9148
  br label %cond.end355, !dbg !9148

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !9148
  br label %cond.end357, !dbg !9148

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !9148
  br label %cond.end359, !dbg !9148

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !9148
  br label %cond.end361, !dbg !9148

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !9148
  br label %cond.end363, !dbg !9148

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !9148
  br label %cond.end365, !dbg !9148

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !9148
  br label %cond.end367, !dbg !9148

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !9148
  br label %cond.end369, !dbg !9148

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !9148
  br label %cond.end371, !dbg !9148

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !9148
  br label %cond.end373, !dbg !9148

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !9148
  br label %cond.end375, !dbg !9148

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !9148
  br label %cond.end377, !dbg !9148

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !9148
  br label %cond.end379, !dbg !9148

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !9148
  br label %cond.end381, !dbg !9148

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !9148
  br label %cond.end383, !dbg !9148

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !9148
  br label %cond.end385, !dbg !9148

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !9148
  br label %cond.end387, !dbg !9148

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !9148
  br label %cond.end389, !dbg !9148

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !9148
  br label %cond.end391, !dbg !9148

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !9148
  br label %cond.end393, !dbg !9148

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !9148
  br label %cond.end395, !dbg !9148

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !9148
  br label %cond.end397, !dbg !9148

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !9148
  br label %cond.end399, !dbg !9148

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !9148
  br label %cond.end401, !dbg !9148

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !9148
  br label %cond.end403, !dbg !9148

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !9148
  br label %cond.end405, !dbg !9148

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !9148
  br label %cond.end407, !dbg !9148

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !9148
  br label %cond.end409, !dbg !9148

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !9148
  br label %cond.end411, !dbg !9148

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !9148
  br label %cond.end413, !dbg !9148

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !9148
  br label %cond.end415, !dbg !9148

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !9148
  br label %cond.end417, !dbg !9148

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !9148
  br label %cond.end419, !dbg !9148

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !9148
  br label %cond.end421, !dbg !9148

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !9148
  br label %cond.end423, !dbg !9148

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !9148
  br label %cond.end425, !dbg !9148

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !9148
  br label %cond.end427, !dbg !9148

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !9148
  br label %cond.end429, !dbg !9148

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !9148
  br label %cond.end431, !dbg !9148

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !9148
  br label %cond.end433, !dbg !9148

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !9148
  br label %cond.end435, !dbg !9148

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !9148
  br label %cond.end437, !dbg !9148

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !9148
  br label %cond.end440, !dbg !9148

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !9148

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !9148
  br label %cond.end444, !dbg !9148

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !9148
  %sub443 = sub i64 %72, 1, !dbg !9148
  %call = call i32 @__ilog2_u64(i64 %sub443) #13, !dbg !9148
  br label %cond.end444, !dbg !9148

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !9148
  %sub446 = sub i32 %cond445, 12, !dbg !9149
  %add = add i32 %sub446, 1, !dbg !9150
  store i32 %add, i32* %retval, align 4, !dbg !9151
  br label %return, !dbg !9151

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !9152
  %dec = add i64 %73, -1, !dbg !9152
  store i64 %dec, i64* %size.addr, align 8, !dbg !9152
  %74 = load i64, i64* %size.addr, align 8, !dbg !9153
  %shr = lshr i64 %74, 12, !dbg !9153
  store i64 %shr, i64* %size.addr, align 8, !dbg !9153
  %75 = load i64, i64* %size.addr, align 8, !dbg !9154
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !9131
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !9155
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !9156
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #15, !dbg !9155, !srcloc !9157
  store i32 %78, i32* %bitpos.i, align 4, !dbg !9155
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !9158
  %add.i = add i32 %79, 1, !dbg !9159
  store i32 %add.i, i32* %retval, align 4, !dbg !9160
  br label %return, !dbg !9160

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !9161
  ret i32 %80, !dbg !9161
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #7 !dbg !9162 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !9123, metadata !DIExpression()), !dbg !9166
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !9130, metadata !DIExpression()), !dbg !9168
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !9169, metadata !DIExpression()), !dbg !9170
  %0 = load i64, i64* %n.addr, align 8, !dbg !9171
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !9168
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !9172
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !9173
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #15, !dbg !9172, !srcloc !9157
  store i32 %3, i32* %bitpos.i, align 4, !dbg !9172
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !9174
  %add.i = add i32 %4, 1, !dbg !9175
  %sub = sub i32 %add.i, 1, !dbg !9176
  ret i32 %sub, !dbg !9177
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !9178 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !9182, metadata !DIExpression()), !dbg !9183
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !9184, metadata !DIExpression()), !dbg !9185
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9186, metadata !DIExpression()), !dbg !9187
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9188, metadata !DIExpression()), !dbg !9189
  %0 = load i8*, i8** %object.addr, align 8, !dbg !9190
  ret i8* %0, !dbg !9191
}

; Function Attrs: noredzone
declare dso_local i32 @dma_set_mask(%struct.device*, i64) #2

; Function Attrs: noredzone
declare dso_local i32 @dma_set_coherent_mask(%struct.device*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #0 !dbg !9192 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9195, metadata !DIExpression()), !dbg !9196
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !9197, metadata !DIExpression()), !dbg !9198
  %0 = load i8*, i8** %data.addr, align 8, !dbg !9199
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9200
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !9201
  store i8* %0, i8** %driver_data, align 8, !dbg !9202
  ret void, !dbg !9203
}

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #2

; Function Attrs: noredzone
declare dso_local void @__init_waitqueue_head(%struct.wait_queue_head*, i8*, %struct.lock_class_key*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_mbox_alloc(%struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci_mem_item* %mbox) #0 !dbg !9204 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %mbox.addr = alloca %struct.mlxsw_pci_mem_item*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !9207, metadata !DIExpression()), !dbg !9208
  store %struct.mlxsw_pci_mem_item* %mbox, %struct.mlxsw_pci_mem_item** %mbox.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_mem_item** %mbox.addr, metadata !9209, metadata !DIExpression()), !dbg !9210
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !9211, metadata !DIExpression()), !dbg !9212
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !9213
  %pdev1 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %0, i32 0, i32 0, !dbg !9214
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !9214
  store %struct.pci_dev* %1, %struct.pci_dev** %pdev, align 8, !dbg !9212
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9215, metadata !DIExpression()), !dbg !9216
  store i32 0, i32* %err, align 4, !dbg !9216
  %2 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %mbox.addr, align 8, !dbg !9217
  %size = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %2, i32 0, i32 2, !dbg !9218
  store i64 4096, i64* %size, align 8, !dbg !9219
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9220
  %4 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %mbox.addr, align 8, !dbg !9221
  %mapaddr = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %4, i32 0, i32 1, !dbg !9222
  %call = call i8* @pci_alloc_consistent(%struct.pci_dev* %3, i64 4096, i64* %mapaddr) #10, !dbg !9223
  %5 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %mbox.addr, align 8, !dbg !9224
  %buf = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %5, i32 0, i32 0, !dbg !9225
  store i8* %call, i8** %buf, align 8, !dbg !9226
  %6 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %mbox.addr, align 8, !dbg !9227
  %buf2 = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %6, i32 0, i32 0, !dbg !9229
  %7 = load i8*, i8** %buf2, align 8, !dbg !9229
  %tobool = icmp ne i8* %7, null, !dbg !9227
  br i1 %tobool, label %if.end, label %if.then, !dbg !9230

if.then:                                          ; preds = %entry
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9231
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 41, !dbg !9231
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.12, i64 0, i64 0)) #11, !dbg !9231
  store i32 -12, i32* %err, align 4, !dbg !9233
  br label %if.end, !dbg !9234

if.end:                                           ; preds = %if.then, %entry
  %9 = load i32, i32* %err, align 4, !dbg !9235
  ret i32 %9, !dbg !9236
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_mbox_free(%struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci_mem_item* %mbox) #0 !dbg !9237 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %mbox.addr = alloca %struct.mlxsw_pci_mem_item*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !9240, metadata !DIExpression()), !dbg !9241
  store %struct.mlxsw_pci_mem_item* %mbox, %struct.mlxsw_pci_mem_item** %mbox.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_mem_item** %mbox.addr, metadata !9242, metadata !DIExpression()), !dbg !9243
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !9244, metadata !DIExpression()), !dbg !9245
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !9246
  %pdev1 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %0, i32 0, i32 0, !dbg !9247
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !9247
  store %struct.pci_dev* %1, %struct.pci_dev** %pdev, align 8, !dbg !9245
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9248
  %3 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %mbox.addr, align 8, !dbg !9249
  %buf = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %3, i32 0, i32 0, !dbg !9250
  %4 = load i8*, i8** %buf, align 8, !dbg !9250
  %5 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %mbox.addr, align 8, !dbg !9251
  %mapaddr = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %5, i32 0, i32 1, !dbg !9252
  %6 = load i64, i64* %mapaddr, align 8, !dbg !9252
  call void @pci_free_consistent(%struct.pci_dev* %2, i64 4096, i8* %4, i64 %6) #10, !dbg !9253
  ret void, !dbg !9254
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mutex_destroy(%struct.mutex* %lock) #0 !dbg !9255 {
entry:
  %lock.addr = alloca %struct.mutex*, align 8
  store %struct.mutex* %lock, %struct.mutex** %lock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mutex** %lock.addr, metadata !9259, metadata !DIExpression()), !dbg !9260
  ret void, !dbg !9261
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_alloc_consistent(%struct.pci_dev* %hwdev, i64 %size, i64* %dma_handle) #0 !dbg !9262 {
entry:
  %hwdev.addr = alloca %struct.pci_dev*, align 8
  %size.addr = alloca i64, align 8
  %dma_handle.addr = alloca i64*, align 8
  store %struct.pci_dev* %hwdev, %struct.pci_dev** %hwdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %hwdev.addr, metadata !9266, metadata !DIExpression()), !dbg !9267
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9268, metadata !DIExpression()), !dbg !9269
  store i64* %dma_handle, i64** %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dma_handle.addr, metadata !9270, metadata !DIExpression()), !dbg !9271
  %0 = load %struct.pci_dev*, %struct.pci_dev** %hwdev.addr, align 8, !dbg !9272
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !9273
  %1 = load i64, i64* %size.addr, align 8, !dbg !9274
  %2 = load i64*, i64** %dma_handle.addr, align 8, !dbg !9275
  %call = call i8* @dma_alloc_coherent(%struct.device* %dev, i64 %1, i64* %2, i32 2592) #10, !dbg !9276
  ret i8* %call, !dbg !9277
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dma_alloc_coherent(%struct.device* %dev, i64 %size, i64* %dma_handle, i32 %gfp) #0 !dbg !9278 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %dma_handle.addr = alloca i64*, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9281, metadata !DIExpression()), !dbg !9282
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9283, metadata !DIExpression()), !dbg !9284
  store i64* %dma_handle, i64** %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dma_handle.addr, metadata !9285, metadata !DIExpression()), !dbg !9286
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !9287, metadata !DIExpression()), !dbg !9288
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9289
  %1 = load i64, i64* %size.addr, align 8, !dbg !9290
  %2 = load i64*, i64** %dma_handle.addr, align 8, !dbg !9291
  %3 = load i32, i32* %gfp.addr, align 4, !dbg !9292
  %4 = load i32, i32* %gfp.addr, align 4, !dbg !9293
  %and = and i32 %4, 8192, !dbg !9294
  %tobool = icmp ne i32 %and, 0, !dbg !9295
  %5 = zext i1 %tobool to i64, !dbg !9295
  %cond = select i1 %tobool, i64 256, i64 0, !dbg !9295
  %call = call i8* @dma_alloc_attrs(%struct.device* %0, i64 %1, i64* %2, i32 %3, i64 %cond) #10, !dbg !9296
  ret i8* %call, !dbg !9297
}

; Function Attrs: noredzone
declare dso_local i8* @dma_alloc_attrs(%struct.device*, i64, i64*, i32, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_free_consistent(%struct.pci_dev* %hwdev, i64 %size, i8* %vaddr, i64 %dma_handle) #0 !dbg !9298 {
entry:
  %hwdev.addr = alloca %struct.pci_dev*, align 8
  %size.addr = alloca i64, align 8
  %vaddr.addr = alloca i8*, align 8
  %dma_handle.addr = alloca i64, align 8
  store %struct.pci_dev* %hwdev, %struct.pci_dev** %hwdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %hwdev.addr, metadata !9301, metadata !DIExpression()), !dbg !9302
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9303, metadata !DIExpression()), !dbg !9304
  store i8* %vaddr, i8** %vaddr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vaddr.addr, metadata !9305, metadata !DIExpression()), !dbg !9306
  store i64 %dma_handle, i64* %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_handle.addr, metadata !9307, metadata !DIExpression()), !dbg !9308
  %0 = load %struct.pci_dev*, %struct.pci_dev** %hwdev.addr, align 8, !dbg !9309
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !9310
  %1 = load i64, i64* %size.addr, align 8, !dbg !9311
  %2 = load i8*, i8** %vaddr.addr, align 8, !dbg !9312
  %3 = load i64, i64* %dma_handle.addr, align 8, !dbg !9313
  call void @dma_free_coherent(%struct.device* %dev, i64 %1, i8* %2, i64 %3) #10, !dbg !9314
  ret void, !dbg !9315
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_free_coherent(%struct.device* %dev, i64 %size, i8* %cpu_addr, i64 %dma_handle) #0 !dbg !9316 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %cpu_addr.addr = alloca i8*, align 8
  %dma_handle.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9319, metadata !DIExpression()), !dbg !9320
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9321, metadata !DIExpression()), !dbg !9322
  store i8* %cpu_addr, i8** %cpu_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cpu_addr.addr, metadata !9323, metadata !DIExpression()), !dbg !9324
  store i64 %dma_handle, i64* %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_handle.addr, metadata !9325, metadata !DIExpression()), !dbg !9326
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9327
  %1 = load i64, i64* %size.addr, align 8, !dbg !9328
  %2 = load i8*, i8** %cpu_addr.addr, align 8, !dbg !9329
  %3 = load i64, i64* %dma_handle.addr, align 8, !dbg !9330
  call void @dma_free_attrs(%struct.device* %0, i64 %1, i8* %2, i64 %3, i64 0) #10, !dbg !9331
  ret void, !dbg !9332
}

; Function Attrs: noredzone
declare dso_local void @dma_free_attrs(%struct.device*, i64, i8*, i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !9333 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9336, metadata !DIExpression()), !dbg !9337
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9338
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !9340
  %1 = load i8*, i8** %init_name, align 8, !dbg !9340
  %tobool = icmp ne i8* %1, null, !dbg !9338
  br i1 %tobool, label %if.then, label %if.end, !dbg !9341

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9342
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !9343
  %3 = load i8*, i8** %init_name1, align 8, !dbg !9343
  store i8* %3, i8** %retval, align 8, !dbg !9344
  br label %return, !dbg !9344

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9345
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !9346
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #10, !dbg !9347
  store i8* %call, i8** %retval, align 8, !dbg !9348
  br label %return, !dbg !9348

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !9349
  ret i8* %5, !dbg !9349
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !9350 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !9355, metadata !DIExpression()), !dbg !9356
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !9357
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !9358
  %1 = load i8*, i8** %name, align 8, !dbg !9358
  ret i8* %1, !dbg !9359
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_init(i8* %bus_priv, %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_config_profile* %profile, %struct.mlxsw_res* %res) #0 !dbg !9360 {
entry:
  %retval = alloca i32, align 4
  %bus_priv.addr = alloca i8*, align 8
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %profile.addr = alloca %struct.mlxsw_config_profile*, align 8
  %res.addr = alloca %struct.mlxsw_res*, align 8
  %mlxsw_pci = alloca %struct.mlxsw_pci*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %mbox = alloca i8*, align 8
  %num_pages = alloca i16, align 2
  %err = alloca i32, align 4
  store i8* %bus_priv, i8** %bus_priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bus_priv.addr, metadata !9361, metadata !DIExpression()), !dbg !9362
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !9363, metadata !DIExpression()), !dbg !9364
  store %struct.mlxsw_config_profile* %profile, %struct.mlxsw_config_profile** %profile.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_config_profile** %profile.addr, metadata !9365, metadata !DIExpression()), !dbg !9366
  store %struct.mlxsw_res* %res, %struct.mlxsw_res** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_res** %res.addr, metadata !9367, metadata !DIExpression()), !dbg !9368
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci, metadata !9369, metadata !DIExpression()), !dbg !9370
  %0 = load i8*, i8** %bus_priv.addr, align 8, !dbg !9371
  %1 = bitcast i8* %0 to %struct.mlxsw_pci*, !dbg !9371
  store %struct.mlxsw_pci* %1, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9370
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !9372, metadata !DIExpression()), !dbg !9373
  %2 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9374
  %pdev1 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %2, i32 0, i32 0, !dbg !9375
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !9375
  store %struct.pci_dev* %3, %struct.pci_dev** %pdev, align 8, !dbg !9373
  call void @llvm.dbg.declare(metadata i8** %mbox, metadata !9376, metadata !DIExpression()), !dbg !9377
  call void @llvm.dbg.declare(metadata i16* %num_pages, metadata !9378, metadata !DIExpression()), !dbg !9379
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9380, metadata !DIExpression()), !dbg !9381
  %4 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9382
  %5 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9383
  %core = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %5, i32 0, i32 5, !dbg !9384
  store %struct.mlxsw_core* %4, %struct.mlxsw_core** %core, align 8, !dbg !9385
  %call = call i8* @mlxsw_cmd_mbox_alloc() #10, !dbg !9386
  store i8* %call, i8** %mbox, align 8, !dbg !9387
  %6 = load i8*, i8** %mbox, align 8, !dbg !9388
  %tobool = icmp ne i8* %6, null, !dbg !9388
  br i1 %tobool, label %if.end, label %if.then, !dbg !9390

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !9391
  br label %return, !dbg !9391

if.end:                                           ; preds = %entry
  %7 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9392
  %8 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9393
  %id = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %8, i32 0, i32 9, !dbg !9394
  %9 = load %struct.pci_device_id*, %struct.pci_device_id** %id, align 8, !dbg !9394
  %call2 = call i32 @mlxsw_pci_sw_reset(%struct.mlxsw_pci* %7, %struct.pci_device_id* %9) #10, !dbg !9395
  store i32 %call2, i32* %err, align 4, !dbg !9396
  %10 = load i32, i32* %err, align 4, !dbg !9397
  %tobool3 = icmp ne i32 %10, 0, !dbg !9397
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !9399

if.then4:                                         ; preds = %if.end
  br label %err_sw_reset, !dbg !9400

if.end5:                                          ; preds = %if.end
  %11 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9401
  %call6 = call i32 @mlxsw_pci_alloc_irq_vectors(%struct.mlxsw_pci* %11) #10, !dbg !9402
  store i32 %call6, i32* %err, align 4, !dbg !9403
  %12 = load i32, i32* %err, align 4, !dbg !9404
  %cmp = icmp slt i32 %12, 0, !dbg !9406
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !9407

if.then7:                                         ; preds = %if.end5
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9408
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 41, !dbg !9408
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14, i64 0, i64 0)) #11, !dbg !9408
  br label %err_alloc_irq, !dbg !9410

if.end8:                                          ; preds = %if.end5
  %14 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9411
  %15 = load i8*, i8** %mbox, align 8, !dbg !9412
  %call9 = call i32 @mlxsw_cmd_query_fw(%struct.mlxsw_core* %14, i8* %15) #10, !dbg !9413
  store i32 %call9, i32* %err, align 4, !dbg !9414
  %16 = load i32, i32* %err, align 4, !dbg !9415
  %tobool10 = icmp ne i32 %16, 0, !dbg !9415
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !9417

if.then11:                                        ; preds = %if.end8
  br label %err_query_fw, !dbg !9418

if.end12:                                         ; preds = %if.end8
  %17 = load i8*, i8** %mbox, align 8, !dbg !9419
  %call13 = call i32 @mlxsw_cmd_mbox_query_fw_fw_rev_major_get(i8* %17) #10, !dbg !9420
  %conv = trunc i32 %call13 to i16, !dbg !9420
  %18 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9421
  %bus_info = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %18, i32 0, i32 8, !dbg !9422
  %fw_rev = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %bus_info, i32 0, i32 3, !dbg !9423
  %major = getelementptr inbounds %struct.mlxsw_fw_rev, %struct.mlxsw_fw_rev* %fw_rev, i32 0, i32 0, !dbg !9424
  store i16 %conv, i16* %major, align 8, !dbg !9425
  %19 = load i8*, i8** %mbox, align 8, !dbg !9426
  %call14 = call i32 @mlxsw_cmd_mbox_query_fw_fw_rev_minor_get(i8* %19) #10, !dbg !9427
  %conv15 = trunc i32 %call14 to i16, !dbg !9427
  %20 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9428
  %bus_info16 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %20, i32 0, i32 8, !dbg !9429
  %fw_rev17 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %bus_info16, i32 0, i32 3, !dbg !9430
  %minor = getelementptr inbounds %struct.mlxsw_fw_rev, %struct.mlxsw_fw_rev* %fw_rev17, i32 0, i32 1, !dbg !9431
  store i16 %conv15, i16* %minor, align 2, !dbg !9432
  %21 = load i8*, i8** %mbox, align 8, !dbg !9433
  %call18 = call i32 @mlxsw_cmd_mbox_query_fw_fw_rev_subminor_get(i8* %21) #10, !dbg !9434
  %conv19 = trunc i32 %call18 to i16, !dbg !9434
  %22 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9435
  %bus_info20 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %22, i32 0, i32 8, !dbg !9436
  %fw_rev21 = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %bus_info20, i32 0, i32 3, !dbg !9437
  %subminor = getelementptr inbounds %struct.mlxsw_fw_rev, %struct.mlxsw_fw_rev* %fw_rev21, i32 0, i32 2, !dbg !9438
  store i16 %conv19, i16* %subminor, align 4, !dbg !9439
  %23 = load i8*, i8** %mbox, align 8, !dbg !9440
  %call22 = call i32 @mlxsw_cmd_mbox_query_fw_cmd_interface_rev_get(i8* %23) #10, !dbg !9442
  %cmp23 = icmp ne i32 %call22, 1, !dbg !9443
  br i1 %cmp23, label %if.then25, label %if.end27, !dbg !9444

if.then25:                                        ; preds = %if.end12
  %24 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9445
  %dev26 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %24, i32 0, i32 41, !dbg !9445
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev26, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.15, i64 0, i64 0)) #11, !dbg !9445
  store i32 -22, i32* %err, align 4, !dbg !9447
  br label %err_iface_rev, !dbg !9448

if.end27:                                         ; preds = %if.end12
  %25 = load i8*, i8** %mbox, align 8, !dbg !9449
  %call28 = call i32 @mlxsw_cmd_mbox_query_fw_doorbell_page_bar_get(i8* %25) #10, !dbg !9451
  %cmp29 = icmp ne i32 %call28, 0, !dbg !9452
  br i1 %cmp29, label %if.then31, label %if.end33, !dbg !9453

if.then31:                                        ; preds = %if.end27
  %26 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9454
  %dev32 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %26, i32 0, i32 41, !dbg !9454
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev32, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.16, i64 0, i64 0)) #11, !dbg !9454
  store i32 -22, i32* %err, align 4, !dbg !9456
  br label %err_doorbell_page_bar, !dbg !9457

if.end33:                                         ; preds = %if.end27
  %27 = load i8*, i8** %mbox, align 8, !dbg !9458
  %call34 = call i64 @mlxsw_cmd_mbox_query_fw_doorbell_page_offset_get(i8* %27) #10, !dbg !9459
  %conv35 = trunc i64 %call34 to i32, !dbg !9459
  %28 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9460
  %doorbell_offset = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %28, i32 0, i32 4, !dbg !9461
  store i32 %conv35, i32* %doorbell_offset, align 8, !dbg !9462
  %29 = load i8*, i8** %mbox, align 8, !dbg !9463
  %call36 = call i32 @mlxsw_cmd_mbox_query_fw_fr_rn_clk_bar_get(i8* %29) #10, !dbg !9465
  %cmp37 = icmp ne i32 %call36, 0, !dbg !9466
  br i1 %cmp37, label %if.then39, label %if.end41, !dbg !9467

if.then39:                                        ; preds = %if.end33
  %30 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9468
  %dev40 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %30, i32 0, i32 41, !dbg !9468
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev40, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.17, i64 0, i64 0)) #11, !dbg !9468
  store i32 -22, i32* %err, align 4, !dbg !9470
  br label %err_fr_rn_clk_bar, !dbg !9471

if.end41:                                         ; preds = %if.end33
  %31 = load i8*, i8** %mbox, align 8, !dbg !9472
  %call42 = call i64 @mlxsw_cmd_mbox_query_fw_free_running_clock_offset_get(i8* %31) #10, !dbg !9473
  %32 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9474
  %free_running_clock_offset = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %32, i32 0, i32 2, !dbg !9475
  store i64 %call42, i64* %free_running_clock_offset, align 8, !dbg !9476
  %33 = load i8*, i8** %mbox, align 8, !dbg !9477
  %call43 = call i32 @mlxsw_cmd_mbox_query_fw_fw_pages_get(i8* %33) #10, !dbg !9478
  %conv44 = trunc i32 %call43 to i16, !dbg !9478
  store i16 %conv44, i16* %num_pages, align 2, !dbg !9479
  %34 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9480
  %35 = load i8*, i8** %mbox, align 8, !dbg !9481
  %36 = load i16, i16* %num_pages, align 2, !dbg !9482
  %call45 = call i32 @mlxsw_pci_fw_area_init(%struct.mlxsw_pci* %34, i8* %35, i16 zeroext %36) #10, !dbg !9483
  store i32 %call45, i32* %err, align 4, !dbg !9484
  %37 = load i32, i32* %err, align 4, !dbg !9485
  %tobool46 = icmp ne i32 %37, 0, !dbg !9485
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !9487

if.then47:                                        ; preds = %if.end41
  br label %err_fw_area_init, !dbg !9488

if.end48:                                         ; preds = %if.end41
  %38 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9489
  %39 = load i8*, i8** %mbox, align 8, !dbg !9490
  %call49 = call i32 @mlxsw_pci_boardinfo(%struct.mlxsw_pci* %38, i8* %39) #10, !dbg !9491
  store i32 %call49, i32* %err, align 4, !dbg !9492
  %40 = load i32, i32* %err, align 4, !dbg !9493
  %tobool50 = icmp ne i32 %40, 0, !dbg !9493
  br i1 %tobool50, label %if.then51, label %if.end52, !dbg !9495

if.then51:                                        ; preds = %if.end48
  br label %err_boardinfo, !dbg !9496

if.end52:                                         ; preds = %if.end48
  %41 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9497
  %42 = load i8*, i8** %mbox, align 8, !dbg !9498
  %43 = load %struct.mlxsw_res*, %struct.mlxsw_res** %res.addr, align 8, !dbg !9499
  %call53 = call i32 @mlxsw_core_resources_query(%struct.mlxsw_core* %41, i8* %42, %struct.mlxsw_res* %43) #10, !dbg !9500
  store i32 %call53, i32* %err, align 4, !dbg !9501
  %44 = load i32, i32* %err, align 4, !dbg !9502
  %tobool54 = icmp ne i32 %44, 0, !dbg !9502
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !9504

if.then55:                                        ; preds = %if.end52
  br label %err_query_resources, !dbg !9505

if.end56:                                         ; preds = %if.end52
  %45 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9506
  %call57 = call zeroext i1 @mlxsw_core_res_valid(%struct.mlxsw_core* %45, i32 8) #10, !dbg !9506
  br i1 %call57, label %land.lhs.true, label %if.else, !dbg !9508

land.lhs.true:                                    ; preds = %if.end56
  %46 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9509
  %call59 = call i64 @mlxsw_core_res_get(%struct.mlxsw_core* %46, i32 8) #10, !dbg !9509
  %tobool60 = icmp ne i64 %call59, 0, !dbg !9509
  br i1 %tobool60, label %if.then61, label %if.else, !dbg !9510

if.then61:                                        ; preds = %land.lhs.true
  %47 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9511
  %max_cqe_ver = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %47, i32 0, i32 10, !dbg !9512
  store i32 2, i32* %max_cqe_ver, align 8, !dbg !9513
  br label %if.end82, !dbg !9511

if.else:                                          ; preds = %land.lhs.true, %if.end56
  %48 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9514
  %call62 = call zeroext i1 @mlxsw_core_res_valid(%struct.mlxsw_core* %48, i32 7) #10, !dbg !9514
  br i1 %call62, label %land.lhs.true64, label %if.else69, !dbg !9516

land.lhs.true64:                                  ; preds = %if.else
  %49 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9517
  %call65 = call i64 @mlxsw_core_res_get(%struct.mlxsw_core* %49, i32 7) #10, !dbg !9517
  %tobool66 = icmp ne i64 %call65, 0, !dbg !9517
  br i1 %tobool66, label %if.then67, label %if.else69, !dbg !9518

if.then67:                                        ; preds = %land.lhs.true64
  %50 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9519
  %max_cqe_ver68 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %50, i32 0, i32 10, !dbg !9520
  store i32 1, i32* %max_cqe_ver68, align 8, !dbg !9521
  br label %if.end81, !dbg !9519

if.else69:                                        ; preds = %land.lhs.true64, %if.else
  %51 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9522
  %call70 = call zeroext i1 @mlxsw_core_res_valid(%struct.mlxsw_core* %51, i32 6) #10, !dbg !9522
  br i1 %call70, label %land.lhs.true72, label %lor.lhs.false, !dbg !9524

land.lhs.true72:                                  ; preds = %if.else69
  %52 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9525
  %call73 = call i64 @mlxsw_core_res_get(%struct.mlxsw_core* %52, i32 6) #10, !dbg !9525
  %tobool74 = icmp ne i64 %call73, 0, !dbg !9525
  br i1 %tobool74, label %if.then76, label %lor.lhs.false, !dbg !9526

lor.lhs.false:                                    ; preds = %land.lhs.true72, %if.else69
  %53 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !9527
  %call75 = call zeroext i1 @mlxsw_core_res_valid(%struct.mlxsw_core* %53, i32 6) #10, !dbg !9527
  br i1 %call75, label %if.else78, label %if.then76, !dbg !9528

if.then76:                                        ; preds = %lor.lhs.false, %land.lhs.true72
  %54 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9529
  %max_cqe_ver77 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %54, i32 0, i32 10, !dbg !9531
  store i32 0, i32* %max_cqe_ver77, align 8, !dbg !9532
  br label %if.end80, !dbg !9533

if.else78:                                        ; preds = %lor.lhs.false
  %55 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9534
  %dev79 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %55, i32 0, i32 41, !dbg !9534
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev79, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.18, i64 0, i64 0)) #11, !dbg !9534
  br label %err_cqe_v_check, !dbg !9536

if.end80:                                         ; preds = %if.then76
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.then67
  br label %if.end82

if.end82:                                         ; preds = %if.end81, %if.then61
  %56 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9537
  %57 = load i8*, i8** %mbox, align 8, !dbg !9538
  %58 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !9539
  %59 = load %struct.mlxsw_res*, %struct.mlxsw_res** %res.addr, align 8, !dbg !9540
  %call83 = call i32 @mlxsw_pci_config_profile(%struct.mlxsw_pci* %56, i8* %57, %struct.mlxsw_config_profile* %58, %struct.mlxsw_res* %59) #10, !dbg !9541
  store i32 %call83, i32* %err, align 4, !dbg !9542
  %60 = load i32, i32* %err, align 4, !dbg !9543
  %tobool84 = icmp ne i32 %60, 0, !dbg !9543
  br i1 %tobool84, label %if.then85, label %if.end86, !dbg !9545

if.then85:                                        ; preds = %if.end82
  br label %err_config_profile, !dbg !9546

if.end86:                                         ; preds = %if.end82
  %61 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9547
  %62 = load i8*, i8** %mbox, align 8, !dbg !9548
  %call87 = call i32 @mlxsw_pci_aqs_init(%struct.mlxsw_pci* %61, i8* %62) #10, !dbg !9549
  store i32 %call87, i32* %err, align 4, !dbg !9550
  %63 = load i32, i32* %err, align 4, !dbg !9551
  %tobool88 = icmp ne i32 %63, 0, !dbg !9551
  br i1 %tobool88, label %if.then89, label %if.end90, !dbg !9553

if.then89:                                        ; preds = %if.end86
  br label %err_aqs_init, !dbg !9554

if.end90:                                         ; preds = %if.end86
  %64 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9555
  %call91 = call i32 @pci_irq_vector(%struct.pci_dev* %64, i32 0) #10, !dbg !9556
  %65 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9557
  %bus_info92 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %65, i32 0, i32 8, !dbg !9558
  %device_kind = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %bus_info92, i32 0, i32 0, !dbg !9559
  %66 = load i8*, i8** %device_kind, align 8, !dbg !9559
  %67 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9560
  %68 = bitcast %struct.mlxsw_pci* %67 to i8*, !dbg !9560
  %call93 = call i32 @request_irq(i32 %call91, i32 (i32, i8*)* @mlxsw_pci_eq_irq_handler, i64 0, i8* %66, i8* %68) #10, !dbg !9561
  store i32 %call93, i32* %err, align 4, !dbg !9562
  %69 = load i32, i32* %err, align 4, !dbg !9563
  %tobool94 = icmp ne i32 %69, 0, !dbg !9563
  br i1 %tobool94, label %if.then95, label %if.end97, !dbg !9565

if.then95:                                        ; preds = %if.end90
  %70 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9566
  %dev96 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %70, i32 0, i32 41, !dbg !9566
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev96, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.19, i64 0, i64 0)) #11, !dbg !9566
  br label %err_request_eq_irq, !dbg !9568

if.end97:                                         ; preds = %if.end90
  br label %mbox_put, !dbg !9569

err_request_eq_irq:                               ; preds = %if.then95
  call void @llvm.dbg.label(metadata !9570), !dbg !9571
  %71 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9572
  call void @mlxsw_pci_aqs_fini(%struct.mlxsw_pci* %71) #10, !dbg !9573
  br label %err_aqs_init, !dbg !9573

err_aqs_init:                                     ; preds = %err_request_eq_irq, %if.then89
  call void @llvm.dbg.label(metadata !9574), !dbg !9575
  br label %err_config_profile, !dbg !9573

err_config_profile:                               ; preds = %err_aqs_init, %if.then85
  call void @llvm.dbg.label(metadata !9576), !dbg !9577
  br label %err_cqe_v_check, !dbg !9573

err_cqe_v_check:                                  ; preds = %err_config_profile, %if.else78
  call void @llvm.dbg.label(metadata !9578), !dbg !9579
  br label %err_query_resources, !dbg !9573

err_query_resources:                              ; preds = %err_cqe_v_check, %if.then55
  call void @llvm.dbg.label(metadata !9580), !dbg !9581
  br label %err_boardinfo, !dbg !9573

err_boardinfo:                                    ; preds = %err_query_resources, %if.then51
  call void @llvm.dbg.label(metadata !9582), !dbg !9583
  %72 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9584
  call void @mlxsw_pci_fw_area_fini(%struct.mlxsw_pci* %72) #10, !dbg !9585
  br label %err_fw_area_init, !dbg !9585

err_fw_area_init:                                 ; preds = %err_boardinfo, %if.then47
  call void @llvm.dbg.label(metadata !9586), !dbg !9587
  br label %err_fr_rn_clk_bar, !dbg !9585

err_fr_rn_clk_bar:                                ; preds = %err_fw_area_init, %if.then39
  call void @llvm.dbg.label(metadata !9588), !dbg !9589
  br label %err_doorbell_page_bar, !dbg !9585

err_doorbell_page_bar:                            ; preds = %err_fr_rn_clk_bar, %if.then31
  call void @llvm.dbg.label(metadata !9590), !dbg !9591
  br label %err_iface_rev, !dbg !9585

err_iface_rev:                                    ; preds = %err_doorbell_page_bar, %if.then25
  call void @llvm.dbg.label(metadata !9592), !dbg !9593
  br label %err_query_fw, !dbg !9585

err_query_fw:                                     ; preds = %err_iface_rev, %if.then11
  call void @llvm.dbg.label(metadata !9594), !dbg !9595
  %73 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9596
  call void @mlxsw_pci_free_irq_vectors(%struct.mlxsw_pci* %73) #10, !dbg !9597
  br label %err_alloc_irq, !dbg !9597

err_alloc_irq:                                    ; preds = %err_query_fw, %if.then7
  call void @llvm.dbg.label(metadata !9598), !dbg !9599
  br label %err_sw_reset, !dbg !9597

err_sw_reset:                                     ; preds = %err_alloc_irq, %if.then4
  call void @llvm.dbg.label(metadata !9600), !dbg !9601
  br label %mbox_put, !dbg !9597

mbox_put:                                         ; preds = %err_sw_reset, %if.end97
  call void @llvm.dbg.label(metadata !9602), !dbg !9603
  %74 = load i8*, i8** %mbox, align 8, !dbg !9604
  call void @mlxsw_cmd_mbox_free(i8* %74) #10, !dbg !9605
  %75 = load i32, i32* %err, align 4, !dbg !9606
  store i32 %75, i32* %retval, align 4, !dbg !9607
  br label %return, !dbg !9607

return:                                           ; preds = %mbox_put, %if.then
  %76 = load i32, i32* %retval, align 4, !dbg !9608
  ret i32 %76, !dbg !9608
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_fini(i8* %bus_priv) #0 !dbg !9609 {
entry:
  %bus_priv.addr = alloca i8*, align 8
  %mlxsw_pci = alloca %struct.mlxsw_pci*, align 8
  store i8* %bus_priv, i8** %bus_priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bus_priv.addr, metadata !9610, metadata !DIExpression()), !dbg !9611
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci, metadata !9612, metadata !DIExpression()), !dbg !9613
  %0 = load i8*, i8** %bus_priv.addr, align 8, !dbg !9614
  %1 = bitcast i8* %0 to %struct.mlxsw_pci*, !dbg !9614
  store %struct.mlxsw_pci* %1, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9613
  %2 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9615
  %pdev = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %2, i32 0, i32 0, !dbg !9616
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9616
  %call = call i32 @pci_irq_vector(%struct.pci_dev* %3, i32 0) #10, !dbg !9617
  %4 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9618
  %5 = bitcast %struct.mlxsw_pci* %4 to i8*, !dbg !9618
  %call1 = call i8* @free_irq(i32 %call, i8* %5) #10, !dbg !9619
  %6 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9620
  call void @mlxsw_pci_aqs_fini(%struct.mlxsw_pci* %6) #10, !dbg !9621
  %7 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9622
  call void @mlxsw_pci_fw_area_fini(%struct.mlxsw_pci* %7) #10, !dbg !9623
  %8 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9624
  call void @mlxsw_pci_free_irq_vectors(%struct.mlxsw_pci* %8) #10, !dbg !9625
  ret void, !dbg !9626
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mlxsw_pci_skb_transmit_busy(i8* %bus_priv, %struct.mlxsw_tx_info* %tx_info) #0 !dbg !9627 {
entry:
  %bus_priv.addr = alloca i8*, align 8
  %tx_info.addr = alloca %struct.mlxsw_tx_info*, align 8
  %mlxsw_pci = alloca %struct.mlxsw_pci*, align 8
  %q = alloca %struct.mlxsw_pci_queue*, align 8
  store i8* %bus_priv, i8** %bus_priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bus_priv.addr, metadata !9628, metadata !DIExpression()), !dbg !9629
  store %struct.mlxsw_tx_info* %tx_info, %struct.mlxsw_tx_info** %tx_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_tx_info** %tx_info.addr, metadata !9630, metadata !DIExpression()), !dbg !9631
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci, metadata !9632, metadata !DIExpression()), !dbg !9633
  %0 = load i8*, i8** %bus_priv.addr, align 8, !dbg !9634
  %1 = bitcast i8* %0 to %struct.mlxsw_pci*, !dbg !9634
  store %struct.mlxsw_pci* %1, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9633
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q, metadata !9635, metadata !DIExpression()), !dbg !9636
  %2 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9637
  %3 = load %struct.mlxsw_tx_info*, %struct.mlxsw_tx_info** %tx_info.addr, align 8, !dbg !9638
  %call = call %struct.mlxsw_pci_queue* @mlxsw_pci_sdq_pick(%struct.mlxsw_pci* %2, %struct.mlxsw_tx_info* %3) #10, !dbg !9639
  store %struct.mlxsw_pci_queue* %call, %struct.mlxsw_pci_queue** %q, align 8, !dbg !9636
  %4 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q, align 8, !dbg !9640
  %call1 = call %struct.mlxsw_pci_queue_elem_info* @mlxsw_pci_queue_elem_info_producer_get(%struct.mlxsw_pci_queue* %4) #10, !dbg !9641
  %tobool = icmp ne %struct.mlxsw_pci_queue_elem_info* %call1, null, !dbg !9642
  %lnot = xor i1 %tobool, true, !dbg !9642
  ret i1 %lnot, !dbg !9643
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_skb_transmit(i8* %bus_priv, %struct.sk_buff* %skb, %struct.mlxsw_tx_info* %tx_info) #0 !dbg !9644 {
entry:
  %retval = alloca i32, align 4
  %bus_priv.addr = alloca i8*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %tx_info.addr = alloca %struct.mlxsw_tx_info*, align 8
  %mlxsw_pci = alloca %struct.mlxsw_pci*, align 8
  %q = alloca %struct.mlxsw_pci_queue*, align 8
  %elem_info = alloca %struct.mlxsw_pci_queue_elem_info*, align 8
  %wqe = alloca i8*, align 8
  %i = alloca i32, align 4
  %err = alloca i32, align 4
  %frag = alloca %struct.bio_vec*, align 8
  store i8* %bus_priv, i8** %bus_priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bus_priv.addr, metadata !9645, metadata !DIExpression()), !dbg !9646
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !9647, metadata !DIExpression()), !dbg !9648
  store %struct.mlxsw_tx_info* %tx_info, %struct.mlxsw_tx_info** %tx_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_tx_info** %tx_info.addr, metadata !9649, metadata !DIExpression()), !dbg !9650
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci, metadata !9651, metadata !DIExpression()), !dbg !9652
  %0 = load i8*, i8** %bus_priv.addr, align 8, !dbg !9653
  %1 = bitcast i8* %0 to %struct.mlxsw_pci*, !dbg !9653
  store %struct.mlxsw_pci* %1, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9652
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q, metadata !9654, metadata !DIExpression()), !dbg !9655
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue_elem_info** %elem_info, metadata !9656, metadata !DIExpression()), !dbg !9657
  call void @llvm.dbg.declare(metadata i8** %wqe, metadata !9658, metadata !DIExpression()), !dbg !9659
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9660, metadata !DIExpression()), !dbg !9661
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9662, metadata !DIExpression()), !dbg !9663
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !9664
  %call = call i8* @skb_end_pointer(%struct.sk_buff* %2) #10, !dbg !9664
  %3 = bitcast i8* %call to %struct.skb_shared_info*, !dbg !9666
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %3, i32 0, i32 2, !dbg !9666
  %4 = load i8, i8* %nr_frags, align 2, !dbg !9666
  %conv = zext i8 %4 to i32, !dbg !9664
  %cmp = icmp sgt i32 %conv, 2, !dbg !9667
  br i1 %cmp, label %if.then, label %if.end4, !dbg !9668

if.then:                                          ; preds = %entry
  %5 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !9669
  %call2 = call i32 @skb_linearize(%struct.sk_buff* %5) #10, !dbg !9671
  store i32 %call2, i32* %err, align 4, !dbg !9672
  %6 = load i32, i32* %err, align 4, !dbg !9673
  %tobool = icmp ne i32 %6, 0, !dbg !9673
  br i1 %tobool, label %if.then3, label %if.end, !dbg !9675

if.then3:                                         ; preds = %if.then
  %7 = load i32, i32* %err, align 4, !dbg !9676
  store i32 %7, i32* %retval, align 4, !dbg !9677
  br label %return, !dbg !9677

if.end:                                           ; preds = %if.then
  br label %if.end4, !dbg !9678

if.end4:                                          ; preds = %if.end, %entry
  %8 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9679
  %9 = load %struct.mlxsw_tx_info*, %struct.mlxsw_tx_info** %tx_info.addr, align 8, !dbg !9680
  %call5 = call %struct.mlxsw_pci_queue* @mlxsw_pci_sdq_pick(%struct.mlxsw_pci* %8, %struct.mlxsw_tx_info* %9) #10, !dbg !9681
  store %struct.mlxsw_pci_queue* %call5, %struct.mlxsw_pci_queue** %q, align 8, !dbg !9682
  %10 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q, align 8, !dbg !9683
  %lock = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %10, i32 0, i32 0, !dbg !9684
  call void @spin_lock_bh(%struct.spinlock* %lock) #10, !dbg !9685
  %11 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q, align 8, !dbg !9686
  %call6 = call %struct.mlxsw_pci_queue_elem_info* @mlxsw_pci_queue_elem_info_producer_get(%struct.mlxsw_pci_queue* %11) #10, !dbg !9687
  store %struct.mlxsw_pci_queue_elem_info* %call6, %struct.mlxsw_pci_queue_elem_info** %elem_info, align 8, !dbg !9688
  %12 = load %struct.mlxsw_pci_queue_elem_info*, %struct.mlxsw_pci_queue_elem_info** %elem_info, align 8, !dbg !9689
  %tobool7 = icmp ne %struct.mlxsw_pci_queue_elem_info* %12, null, !dbg !9689
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !9691

if.then8:                                         ; preds = %if.end4
  store i32 -11, i32* %err, align 4, !dbg !9692
  br label %unlock, !dbg !9694

if.end9:                                          ; preds = %if.end4
  %13 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !9695
  %call10 = call %struct.mlxsw_skb_cb* @mlxsw_skb_cb(%struct.sk_buff* %13) #10, !dbg !9696
  %14 = getelementptr inbounds %struct.mlxsw_skb_cb, %struct.mlxsw_skb_cb* %call10, i32 0, i32 0, !dbg !9697
  %tx_info11 = bitcast %union.anon.141* %14 to %struct.mlxsw_tx_info*, !dbg !9697
  %15 = load %struct.mlxsw_tx_info*, %struct.mlxsw_tx_info** %tx_info.addr, align 8, !dbg !9698
  %16 = bitcast %struct.mlxsw_tx_info* %tx_info11 to i8*, !dbg !9699
  %17 = bitcast %struct.mlxsw_tx_info* %15 to i8*, !dbg !9699
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 1 %17, i64 2, i1 false), !dbg !9699
  %18 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !9700
  %19 = load %struct.mlxsw_pci_queue_elem_info*, %struct.mlxsw_pci_queue_elem_info** %elem_info, align 8, !dbg !9701
  %u = getelementptr inbounds %struct.mlxsw_pci_queue_elem_info, %struct.mlxsw_pci_queue_elem_info* %19, i32 0, i32 1, !dbg !9702
  %sdq = bitcast %union.anon.130* %u to %struct.anon.131*, !dbg !9703
  %skb12 = getelementptr inbounds %struct.anon.131, %struct.anon.131* %sdq, i32 0, i32 0, !dbg !9704
  store %struct.sk_buff* %18, %struct.sk_buff** %skb12, align 8, !dbg !9705
  %20 = load %struct.mlxsw_pci_queue_elem_info*, %struct.mlxsw_pci_queue_elem_info** %elem_info, align 8, !dbg !9706
  %elem = getelementptr inbounds %struct.mlxsw_pci_queue_elem_info, %struct.mlxsw_pci_queue_elem_info* %20, i32 0, i32 0, !dbg !9707
  %21 = load i8*, i8** %elem, align 8, !dbg !9707
  store i8* %21, i8** %wqe, align 8, !dbg !9708
  %22 = load i8*, i8** %wqe, align 8, !dbg !9709
  call void @mlxsw_pci_wqe_c_set(i8* %22, i32 1) #10, !dbg !9710
  %23 = load i8*, i8** %wqe, align 8, !dbg !9711
  %24 = load %struct.mlxsw_tx_info*, %struct.mlxsw_tx_info** %tx_info.addr, align 8, !dbg !9712
  %is_emad = getelementptr inbounds %struct.mlxsw_tx_info, %struct.mlxsw_tx_info* %24, i32 0, i32 1, !dbg !9713
  %25 = load i8, i8* %is_emad, align 1, !dbg !9713
  %tobool13 = trunc i8 %25 to i1, !dbg !9713
  %lnot = xor i1 %tobool13, true, !dbg !9714
  %lnot14 = xor i1 %lnot, true, !dbg !9715
  %lnot.ext = zext i1 %lnot14 to i32, !dbg !9715
  call void @mlxsw_pci_wqe_lp_set(i8* %23, i32 %lnot.ext) #10, !dbg !9716
  %26 = load i8*, i8** %wqe, align 8, !dbg !9717
  call void @mlxsw_pci_wqe_type_set(i8* %26, i32 10) #10, !dbg !9718
  %27 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9719
  %28 = load i8*, i8** %wqe, align 8, !dbg !9720
  %29 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !9721
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %29, i32 0, i32 37, !dbg !9722
  %30 = load i8*, i8** %data, align 8, !dbg !9722
  %31 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !9723
  %call15 = call i32 @skb_headlen(%struct.sk_buff* %31) #10, !dbg !9724
  %conv16 = zext i32 %call15 to i64, !dbg !9724
  %call17 = call i32 @mlxsw_pci_wqe_frag_map(%struct.mlxsw_pci* %27, i8* %28, i32 0, i8* %30, i64 %conv16, i32 1) #10, !dbg !9725
  store i32 %call17, i32* %err, align 4, !dbg !9726
  %32 = load i32, i32* %err, align 4, !dbg !9727
  %tobool18 = icmp ne i32 %32, 0, !dbg !9727
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !9729

if.then19:                                        ; preds = %if.end9
  br label %unlock, !dbg !9730

if.end20:                                         ; preds = %if.end9
  store i32 0, i32* %i, align 4, !dbg !9731
  br label %for.cond, !dbg !9733

for.cond:                                         ; preds = %for.inc, %if.end20
  %33 = load i32, i32* %i, align 4, !dbg !9734
  %34 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !9736
  %call21 = call i8* @skb_end_pointer(%struct.sk_buff* %34) #10, !dbg !9736
  %35 = bitcast i8* %call21 to %struct.skb_shared_info*, !dbg !9737
  %nr_frags22 = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %35, i32 0, i32 2, !dbg !9737
  %36 = load i8, i8* %nr_frags22, align 2, !dbg !9737
  %conv23 = zext i8 %36 to i32, !dbg !9736
  %cmp24 = icmp slt i32 %33, %conv23, !dbg !9738
  br i1 %cmp24, label %for.body, label %for.end, !dbg !9739

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag, metadata !9740, metadata !DIExpression()), !dbg !9744
  %37 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !9745
  %call26 = call i8* @skb_end_pointer(%struct.sk_buff* %37) #10, !dbg !9745
  %38 = bitcast i8* %call26 to %struct.skb_shared_info*, !dbg !9746
  %frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %38, i32 0, i32 12, !dbg !9746
  %39 = load i32, i32* %i, align 4, !dbg !9747
  %idxprom = sext i32 %39 to i64, !dbg !9745
  %arrayidx = getelementptr [17 x %struct.bio_vec], [17 x %struct.bio_vec]* %frags, i64 0, i64 %idxprom, !dbg !9745
  store %struct.bio_vec* %arrayidx, %struct.bio_vec** %frag, align 8, !dbg !9744
  %40 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9748
  %41 = load i8*, i8** %wqe, align 8, !dbg !9749
  %42 = load i32, i32* %i, align 4, !dbg !9750
  %add = add i32 %42, 1, !dbg !9751
  %43 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !9752
  %call27 = call i8* @skb_frag_address(%struct.bio_vec* %43) #10, !dbg !9753
  %44 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !9754
  %call28 = call i32 @skb_frag_size(%struct.bio_vec* %44) #10, !dbg !9755
  %conv29 = zext i32 %call28 to i64, !dbg !9755
  %call30 = call i32 @mlxsw_pci_wqe_frag_map(%struct.mlxsw_pci* %40, i8* %41, i32 %add, i8* %call27, i64 %conv29, i32 1) #10, !dbg !9756
  store i32 %call30, i32* %err, align 4, !dbg !9757
  %45 = load i32, i32* %err, align 4, !dbg !9758
  %tobool31 = icmp ne i32 %45, 0, !dbg !9758
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !9760

if.then32:                                        ; preds = %for.body
  br label %unmap_frags, !dbg !9761

if.end33:                                         ; preds = %for.body
  br label %for.inc, !dbg !9762

for.inc:                                          ; preds = %if.end33
  %46 = load i32, i32* %i, align 4, !dbg !9763
  %inc = add i32 %46, 1, !dbg !9763
  store i32 %inc, i32* %i, align 4, !dbg !9763
  br label %for.cond, !dbg !9764, !llvm.loop !9765

for.end:                                          ; preds = %for.cond
  %47 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !9767
  %call34 = call i8* @skb_end_pointer(%struct.sk_buff* %47) #10, !dbg !9767
  %48 = bitcast i8* %call34 to %struct.skb_shared_info*, !dbg !9767
  %tx_flags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %48, i32 0, i32 3, !dbg !9767
  %49 = load i8, i8* %tx_flags, align 1, !dbg !9767
  %conv35 = zext i8 %49 to i32, !dbg !9767
  %and = and i32 %conv35, 1, !dbg !9767
  %tobool36 = icmp ne i32 %and, 0, !dbg !9767
  %lnot37 = xor i1 %tobool36, true, !dbg !9767
  %lnot39 = xor i1 %lnot37, true, !dbg !9767
  %lnot.ext40 = zext i1 %lnot39 to i32, !dbg !9767
  %conv41 = sext i32 %lnot.ext40 to i64, !dbg !9767
  %tobool42 = icmp ne i64 %conv41, 0, !dbg !9767
  br i1 %tobool42, label %if.then43, label %if.end48, !dbg !9769

if.then43:                                        ; preds = %for.end
  %50 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !9770
  %call44 = call i8* @skb_end_pointer(%struct.sk_buff* %50) #10, !dbg !9770
  %51 = bitcast i8* %call44 to %struct.skb_shared_info*, !dbg !9771
  %tx_flags45 = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %51, i32 0, i32 3, !dbg !9771
  %52 = load i8, i8* %tx_flags45, align 1, !dbg !9772
  %conv46 = zext i8 %52 to i32, !dbg !9772
  %or = or i32 %conv46, 4, !dbg !9772
  %conv47 = trunc i32 %or to i8, !dbg !9772
  store i8 %conv47, i8* %tx_flags45, align 1, !dbg !9772
  br label %if.end48, !dbg !9770

if.end48:                                         ; preds = %if.then43, %for.end
  %53 = load i32, i32* %i, align 4, !dbg !9773
  %inc49 = add i32 %53, 1, !dbg !9773
  store i32 %inc49, i32* %i, align 4, !dbg !9773
  br label %for.cond50, !dbg !9775

for.cond50:                                       ; preds = %for.inc55, %if.end48
  %54 = load i32, i32* %i, align 4, !dbg !9776
  %cmp51 = icmp slt i32 %54, 3, !dbg !9778
  br i1 %cmp51, label %for.body53, label %for.end57, !dbg !9779

for.body53:                                       ; preds = %for.cond50
  %55 = load i8*, i8** %wqe, align 8, !dbg !9780
  %56 = load i32, i32* %i, align 4, !dbg !9781
  %conv54 = trunc i32 %56 to i16, !dbg !9781
  call void @mlxsw_pci_wqe_byte_count_set(i8* %55, i16 zeroext %conv54, i16 zeroext 0) #10, !dbg !9782
  br label %for.inc55, !dbg !9782

for.inc55:                                        ; preds = %for.body53
  %57 = load i32, i32* %i, align 4, !dbg !9783
  %inc56 = add i32 %57, 1, !dbg !9783
  store i32 %inc56, i32* %i, align 4, !dbg !9783
  br label %for.cond50, !dbg !9784, !llvm.loop !9785

for.end57:                                        ; preds = %for.cond50
  %58 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q, align 8, !dbg !9787
  %producer_counter = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %58, i32 0, i32 3, !dbg !9788
  %59 = load i16, i16* %producer_counter, align 8, !dbg !9789
  %inc58 = add i16 %59, 1, !dbg !9789
  store i16 %inc58, i16* %producer_counter, align 8, !dbg !9789
  %60 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9790
  %61 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q, align 8, !dbg !9791
  call void @mlxsw_pci_queue_doorbell_producer_ring(%struct.mlxsw_pci* %60, %struct.mlxsw_pci_queue* %61) #10, !dbg !9792
  br label %unlock, !dbg !9793

unmap_frags:                                      ; preds = %if.then32
  call void @llvm.dbg.label(metadata !9794), !dbg !9795
  br label %for.cond59, !dbg !9796

for.cond59:                                       ; preds = %for.inc63, %unmap_frags
  %62 = load i32, i32* %i, align 4, !dbg !9797
  %cmp60 = icmp sge i32 %62, 0, !dbg !9800
  br i1 %cmp60, label %for.body62, label %for.end64, !dbg !9801

for.body62:                                       ; preds = %for.cond59
  %63 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9802
  %64 = load i8*, i8** %wqe, align 8, !dbg !9803
  %65 = load i32, i32* %i, align 4, !dbg !9804
  call void @mlxsw_pci_wqe_frag_unmap(%struct.mlxsw_pci* %63, i8* %64, i32 %65, i32 1) #10, !dbg !9805
  br label %for.inc63, !dbg !9805

for.inc63:                                        ; preds = %for.body62
  %66 = load i32, i32* %i, align 4, !dbg !9806
  %dec = add i32 %66, -1, !dbg !9806
  store i32 %dec, i32* %i, align 4, !dbg !9806
  br label %for.cond59, !dbg !9807, !llvm.loop !9808

for.end64:                                        ; preds = %for.cond59
  br label %unlock, !dbg !9809

unlock:                                           ; preds = %for.end64, %for.end57, %if.then19, %if.then8
  call void @llvm.dbg.label(metadata !9810), !dbg !9811
  %67 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q, align 8, !dbg !9812
  %lock65 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %67, i32 0, i32 0, !dbg !9813
  call void @spin_unlock_bh(%struct.spinlock* %lock65) #10, !dbg !9814
  %68 = load i32, i32* %err, align 4, !dbg !9815
  store i32 %68, i32* %retval, align 4, !dbg !9816
  br label %return, !dbg !9816

return:                                           ; preds = %unlock, %if.then3
  %69 = load i32, i32* %retval, align 4, !dbg !9817
  ret i32 %69, !dbg !9817
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_cmd_exec(i8* %bus_priv, i16 zeroext %opcode, i8 zeroext %opcode_mod, i32 %in_mod, i1 zeroext %out_mbox_direct, i8* %in_mbox, i64 %in_mbox_size, i8* %out_mbox, i64 %out_mbox_size, i8* %p_status) #0 !dbg !9818 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !9819, metadata !DIExpression()), !dbg !9824
  %retval = alloca i32, align 4
  %bus_priv.addr = alloca i8*, align 8
  %opcode.addr = alloca i16, align 2
  %opcode_mod.addr = alloca i8, align 1
  %in_mod.addr = alloca i32, align 4
  %out_mbox_direct.addr = alloca i8, align 1
  %in_mbox.addr = alloca i8*, align 8
  %in_mbox_size.addr = alloca i64, align 8
  %out_mbox.addr = alloca i8*, align 8
  %out_mbox_size.addr = alloca i64, align 8
  %p_status.addr = alloca i8*, align 8
  %mlxsw_pci = alloca %struct.mlxsw_pci*, align 8
  %in_mapaddr = alloca i64, align 8
  %out_mapaddr = alloca i64, align 8
  %evreq = alloca i8, align 1
  %timeout = alloca i64, align 8
  %p_wait_done = alloca i8*, align 8
  %err = alloca i32, align 4
  %end = alloca i64, align 8
  %ctrl = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__ret = alloca i64, align 8
  %__cond = alloca i8, align 1
  %tmp73 = alloca i32, align 4
  %__wq_entry = alloca %struct.wait_queue_entry, align 8
  %__ret79 = alloca i64, align 8
  %__int = alloca i64, align 8
  %__cond82 = alloca i8, align 1
  %tmp91 = alloca i32, align 4
  %tmp105 = alloca i64, align 8
  %tmp107 = alloca i64, align 8
  %tmp124 = alloca i32, align 4
  store i8* %bus_priv, i8** %bus_priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bus_priv.addr, metadata !9826, metadata !DIExpression()), !dbg !9827
  store i16 %opcode, i16* %opcode.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %opcode.addr, metadata !9828, metadata !DIExpression()), !dbg !9829
  store i8 %opcode_mod, i8* %opcode_mod.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %opcode_mod.addr, metadata !9830, metadata !DIExpression()), !dbg !9831
  store i32 %in_mod, i32* %in_mod.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %in_mod.addr, metadata !9832, metadata !DIExpression()), !dbg !9833
  %frombool = zext i1 %out_mbox_direct to i8
  store i8 %frombool, i8* %out_mbox_direct.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %out_mbox_direct.addr, metadata !9834, metadata !DIExpression()), !dbg !9835
  store i8* %in_mbox, i8** %in_mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %in_mbox.addr, metadata !9836, metadata !DIExpression()), !dbg !9837
  store i64 %in_mbox_size, i64* %in_mbox_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %in_mbox_size.addr, metadata !9838, metadata !DIExpression()), !dbg !9839
  store i8* %out_mbox, i8** %out_mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out_mbox.addr, metadata !9840, metadata !DIExpression()), !dbg !9841
  store i64 %out_mbox_size, i64* %out_mbox_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %out_mbox_size.addr, metadata !9842, metadata !DIExpression()), !dbg !9843
  store i8* %p_status, i8** %p_status.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p_status.addr, metadata !9844, metadata !DIExpression()), !dbg !9845
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci, metadata !9846, metadata !DIExpression()), !dbg !9847
  %0 = load i8*, i8** %bus_priv.addr, align 8, !dbg !9848
  %1 = bitcast i8* %0 to %struct.mlxsw_pci*, !dbg !9848
  store %struct.mlxsw_pci* %1, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9847
  call void @llvm.dbg.declare(metadata i64* %in_mapaddr, metadata !9849, metadata !DIExpression()), !dbg !9850
  store i64 0, i64* %in_mapaddr, align 8, !dbg !9850
  call void @llvm.dbg.declare(metadata i64* %out_mapaddr, metadata !9851, metadata !DIExpression()), !dbg !9852
  store i64 0, i64* %out_mapaddr, align 8, !dbg !9852
  call void @llvm.dbg.declare(metadata i8* %evreq, metadata !9853, metadata !DIExpression()), !dbg !9854
  %2 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9855
  %cmd = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %2, i32 0, i32 7, !dbg !9856
  %nopoll = getelementptr inbounds %struct.anon.138, %struct.anon.138* %cmd, i32 0, i32 3, !dbg !9857
  %3 = load i8, i8* %nopoll, align 8, !dbg !9857
  %tobool = trunc i8 %3 to i1, !dbg !9857
  %frombool1 = zext i1 %tobool to i8, !dbg !9854
  store i8 %frombool1, i8* %evreq, align 1, !dbg !9854
  call void @llvm.dbg.declare(metadata i64* %timeout, metadata !9858, metadata !DIExpression()), !dbg !9859
  store i32 1000, i32* %m.addr.i, align 4
  %4 = load i32, i32* %m.addr.i, align 4, !dbg !9860
  %5 = call i1 @llvm.is.constant.i32(i32 %4) #12, !dbg !9862
  br i1 %5, label %if.then.i, label %if.else.i, !dbg !9863

if.then.i:                                        ; preds = %entry
  %6 = load i32, i32* %m.addr.i, align 4, !dbg !9864
  %cmp.i = icmp slt i32 %6, 0, !dbg !9867
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !9868

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !9869
  br label %msecs_to_jiffies.exit, !dbg !9869

if.end.i:                                         ; preds = %if.then.i
  %7 = load i32, i32* %m.addr.i, align 4, !dbg !9870
  %call.i = call i64 @_msecs_to_jiffies(i32 %7) #14, !dbg !9871
  store i64 %call.i, i64* %retval.i, align 8, !dbg !9872
  br label %msecs_to_jiffies.exit, !dbg !9872

if.else.i:                                        ; preds = %entry
  %8 = load i32, i32* %m.addr.i, align 4, !dbg !9873
  %call2.i = call i64 @__msecs_to_jiffies(i32 %8) #14, !dbg !9875
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !9876
  br label %msecs_to_jiffies.exit, !dbg !9876

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %9 = load i64, i64* %retval.i, align 8, !dbg !9877
  store i64 %9, i64* %timeout, align 8, !dbg !9859
  call void @llvm.dbg.declare(metadata i8** %p_wait_done, metadata !9878, metadata !DIExpression()), !dbg !9879
  %10 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9880
  %cmd2 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %10, i32 0, i32 7, !dbg !9881
  %wait_done = getelementptr inbounds %struct.anon.138, %struct.anon.138* %cmd2, i32 0, i32 5, !dbg !9882
  store i8* %wait_done, i8** %p_wait_done, align 8, !dbg !9879
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9883, metadata !DIExpression()), !dbg !9884
  %11 = load i8*, i8** %p_status.addr, align 8, !dbg !9885
  store i8 0, i8* %11, align 1, !dbg !9886
  %12 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9887
  %cmd3 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %12, i32 0, i32 7, !dbg !9888
  %lock = getelementptr inbounds %struct.anon.138, %struct.anon.138* %cmd3, i32 0, i32 2, !dbg !9889
  %call4 = call i32 @mutex_lock_interruptible(%struct.mutex* %lock) #10, !dbg !9890
  store i32 %call4, i32* %err, align 4, !dbg !9891
  %13 = load i32, i32* %err, align 4, !dbg !9892
  %tobool5 = icmp ne i32 %13, 0, !dbg !9892
  br i1 %tobool5, label %if.then, label %if.end, !dbg !9894

if.then:                                          ; preds = %msecs_to_jiffies.exit
  %14 = load i32, i32* %err, align 4, !dbg !9895
  store i32 %14, i32* %retval, align 4, !dbg !9896
  br label %return, !dbg !9896

if.end:                                           ; preds = %msecs_to_jiffies.exit
  %15 = load i8*, i8** %in_mbox.addr, align 8, !dbg !9897
  %tobool6 = icmp ne i8* %15, null, !dbg !9897
  br i1 %tobool6, label %if.then7, label %if.end12, !dbg !9899

if.then7:                                         ; preds = %if.end
  %16 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9900
  %cmd8 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %16, i32 0, i32 7, !dbg !9902
  %in_mbox9 = getelementptr inbounds %struct.anon.138, %struct.anon.138* %cmd8, i32 0, i32 1, !dbg !9903
  %buf = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %in_mbox9, i32 0, i32 0, !dbg !9904
  %17 = load i8*, i8** %buf, align 8, !dbg !9904
  %18 = load i8*, i8** %in_mbox.addr, align 8, !dbg !9905
  %19 = load i64, i64* %in_mbox_size.addr, align 8, !dbg !9906
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %17, i8* align 1 %18, i64 %19, i1 false), !dbg !9907
  %20 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9908
  %cmd10 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %20, i32 0, i32 7, !dbg !9909
  %in_mbox11 = getelementptr inbounds %struct.anon.138, %struct.anon.138* %cmd10, i32 0, i32 1, !dbg !9910
  %mapaddr = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %in_mbox11, i32 0, i32 1, !dbg !9911
  %21 = load i64, i64* %mapaddr, align 8, !dbg !9911
  store i64 %21, i64* %in_mapaddr, align 8, !dbg !9912
  br label %if.end12, !dbg !9913

if.end12:                                         ; preds = %if.then7, %if.end
  %22 = load i64, i64* %in_mapaddr, align 8, !dbg !9914
  %shr = lshr i64 %22, 16, !dbg !9914
  %shr13 = lshr i64 %shr, 16, !dbg !9914
  %conv = trunc i64 %shr13 to i32, !dbg !9914
  %23 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9914
  %hw_addr = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %23, i32 0, i32 1, !dbg !9914
  %24 = load i8*, i8** %hw_addr, align 8, !dbg !9914
  %add.ptr = getelementptr i8, i8* %24, i64 462848, !dbg !9914
  call void @iowrite32be(i32 %conv, i8* %add.ptr) #10, !dbg !9914
  %25 = load i64, i64* %in_mapaddr, align 8, !dbg !9915
  %and = and i64 %25, 4294967295, !dbg !9915
  %conv14 = trunc i64 %and to i32, !dbg !9915
  %26 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9915
  %hw_addr15 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %26, i32 0, i32 1, !dbg !9915
  %27 = load i8*, i8** %hw_addr15, align 8, !dbg !9915
  %add.ptr16 = getelementptr i8, i8* %27, i64 462852, !dbg !9915
  call void @iowrite32be(i32 %conv14, i8* %add.ptr16) #10, !dbg !9915
  %28 = load i8*, i8** %out_mbox.addr, align 8, !dbg !9916
  %tobool17 = icmp ne i8* %28, null, !dbg !9916
  br i1 %tobool17, label %if.then18, label %if.end22, !dbg !9918

if.then18:                                        ; preds = %if.end12
  %29 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9919
  %cmd19 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %29, i32 0, i32 7, !dbg !9920
  %out_mbox20 = getelementptr inbounds %struct.anon.138, %struct.anon.138* %cmd19, i32 0, i32 0, !dbg !9921
  %mapaddr21 = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %out_mbox20, i32 0, i32 1, !dbg !9922
  %30 = load i64, i64* %mapaddr21, align 8, !dbg !9922
  store i64 %30, i64* %out_mapaddr, align 8, !dbg !9923
  br label %if.end22, !dbg !9924

if.end22:                                         ; preds = %if.then18, %if.end12
  %31 = load i64, i64* %out_mapaddr, align 8, !dbg !9925
  %shr23 = lshr i64 %31, 16, !dbg !9925
  %shr24 = lshr i64 %shr23, 16, !dbg !9925
  %conv25 = trunc i64 %shr24 to i32, !dbg !9925
  %32 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9925
  %hw_addr26 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %32, i32 0, i32 1, !dbg !9925
  %33 = load i8*, i8** %hw_addr26, align 8, !dbg !9925
  %add.ptr27 = getelementptr i8, i8* %33, i64 462860, !dbg !9925
  call void @iowrite32be(i32 %conv25, i8* %add.ptr27) #10, !dbg !9925
  %34 = load i64, i64* %out_mapaddr, align 8, !dbg !9926
  %and28 = and i64 %34, 4294967295, !dbg !9926
  %conv29 = trunc i64 %and28 to i32, !dbg !9926
  %35 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9926
  %hw_addr30 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %35, i32 0, i32 1, !dbg !9926
  %36 = load i8*, i8** %hw_addr30, align 8, !dbg !9926
  %add.ptr31 = getelementptr i8, i8* %36, i64 462864, !dbg !9926
  call void @iowrite32be(i32 %conv29, i8* %add.ptr31) #10, !dbg !9926
  %37 = load i32, i32* %in_mod.addr, align 4, !dbg !9927
  %38 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9927
  %hw_addr32 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %38, i32 0, i32 1, !dbg !9927
  %39 = load i8*, i8** %hw_addr32, align 8, !dbg !9927
  %add.ptr33 = getelementptr i8, i8* %39, i64 462856, !dbg !9927
  call void @iowrite32be(i32 %37, i8* %add.ptr33) #10, !dbg !9927
  %40 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9928
  %hw_addr34 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %40, i32 0, i32 1, !dbg !9928
  %41 = load i8*, i8** %hw_addr34, align 8, !dbg !9928
  %add.ptr35 = getelementptr i8, i8* %41, i64 462868, !dbg !9928
  call void @iowrite32be(i32 0, i8* %add.ptr35) #10, !dbg !9928
  %42 = load i8*, i8** %p_wait_done, align 8, !dbg !9929
  store i8 0, i8* %42, align 1, !dbg !9930
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #12, !dbg !9931, !srcloc !9932
  %43 = load i8, i8* %evreq, align 1, !dbg !9933
  %tobool36 = trunc i8 %43 to i1, !dbg !9933
  %44 = zext i1 %tobool36 to i64, !dbg !9933
  %cond = select i1 %tobool36, i64 4194304, i64 0, !dbg !9933
  %or = or i64 8388608, %cond, !dbg !9933
  %45 = load i8, i8* %opcode_mod.addr, align 1, !dbg !9933
  %conv38 = zext i8 %45 to i32, !dbg !9933
  %shl = shl i32 %conv38, 12, !dbg !9933
  %conv39 = sext i32 %shl to i64, !dbg !9933
  %or40 = or i64 %or, %conv39, !dbg !9933
  %46 = load i16, i16* %opcode.addr, align 2, !dbg !9933
  %conv41 = zext i16 %46 to i64, !dbg !9933
  %or42 = or i64 %or40, %conv41, !dbg !9933
  %conv43 = trunc i64 %or42 to i32, !dbg !9933
  %47 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9933
  %hw_addr44 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %47, i32 0, i32 1, !dbg !9933
  %48 = load i8*, i8** %hw_addr44, align 8, !dbg !9933
  %add.ptr45 = getelementptr i8, i8* %48, i64 462872, !dbg !9933
  call void @iowrite32be(i32 %conv43, i8* %add.ptr45) #10, !dbg !9933
  %49 = load i8, i8* %evreq, align 1, !dbg !9934
  %tobool46 = trunc i8 %49 to i1, !dbg !9934
  br i1 %tobool46, label %if.else, label %if.then47, !dbg !9936

if.then47:                                        ; preds = %if.end22
  call void @llvm.dbg.declare(metadata i64* %end, metadata !9937, metadata !DIExpression()), !dbg !9939
  %50 = load volatile i64, i64* @jiffies, align 8, !dbg !9940
  %51 = load i64, i64* %timeout, align 8, !dbg !9941
  %add = add i64 %50, %51, !dbg !9942
  store i64 %add, i64* %end, align 8, !dbg !9943
  br label %do.body, !dbg !9944

do.body:                                          ; preds = %do.cond, %if.then47
  call void @llvm.dbg.declare(metadata i32* %ctrl, metadata !9945, metadata !DIExpression()), !dbg !9947
  %52 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9948
  %hw_addr48 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %52, i32 0, i32 1, !dbg !9948
  %53 = load i8*, i8** %hw_addr48, align 8, !dbg !9948
  %add.ptr49 = getelementptr i8, i8* %53, i64 462872, !dbg !9948
  %call50 = call i32 @ioread32be(i8* %add.ptr49) #10, !dbg !9948
  store i32 %call50, i32* %ctrl, align 4, !dbg !9947
  %54 = load i32, i32* %ctrl, align 4, !dbg !9949
  %conv51 = zext i32 %54 to i64, !dbg !9949
  %and52 = and i64 %conv51, 8388608, !dbg !9951
  %tobool53 = icmp ne i64 %and52, 0, !dbg !9951
  br i1 %tobool53, label %if.end57, label %if.then54, !dbg !9952

if.then54:                                        ; preds = %do.body
  %55 = load i8*, i8** %p_wait_done, align 8, !dbg !9953
  store i8 1, i8* %55, align 1, !dbg !9955
  %56 = load i32, i32* %ctrl, align 4, !dbg !9956
  %shr55 = lshr i32 %56, 24, !dbg !9957
  %conv56 = trunc i32 %shr55 to i8, !dbg !9956
  %57 = load i8*, i8** %p_status.addr, align 8, !dbg !9958
  store i8 %conv56, i8* %57, align 1, !dbg !9959
  br label %do.end, !dbg !9960

if.end57:                                         ; preds = %do.body
  call void @___might_sleep(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22, i64 0, i64 0), i32 1698, i32 0) #10, !dbg !9961
  %call58 = call i32 @_cond_resched() #10, !dbg !9961
  store i32 %call58, i32* %tmp, align 4, !dbg !9961
  %58 = load i32, i32* %tmp, align 4, !dbg !9961
  br label %do.cond, !dbg !9963

do.cond:                                          ; preds = %if.end57
  %59 = load volatile i64, i64* @jiffies, align 8, !dbg !9964
  %60 = load i64, i64* %end, align 8, !dbg !9964
  %sub = sub i64 %59, %60, !dbg !9964
  %cmp = icmp slt i64 %sub, 0, !dbg !9964
  br i1 %cmp, label %do.body, label %do.end, !dbg !9963, !llvm.loop !9965

do.end:                                           ; preds = %do.cond, %if.then54
  br label %if.end109, !dbg !9967

if.else:                                          ; preds = %if.end22
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !9968, metadata !DIExpression()), !dbg !9971
  %61 = load i64, i64* %timeout, align 8, !dbg !9971
  store i64 %61, i64* %__ret, align 8, !dbg !9971
  br label %do.body60, !dbg !9971

do.body60:                                        ; preds = %if.else
  br label %do.body61, !dbg !9972

do.body61:                                        ; preds = %do.body60
  br label %do.end63, !dbg !9974

do.end63:                                         ; preds = %do.body61
  br label %do.end65, !dbg !9972

do.end65:                                         ; preds = %do.end63
  call void @llvm.dbg.declare(metadata i8* %__cond, metadata !9976, metadata !DIExpression()), !dbg !9979
  %62 = load i8*, i8** %p_wait_done, align 8, !dbg !9979
  %63 = load i8, i8* %62, align 1, !dbg !9979
  %tobool66 = trunc i8 %63 to i1, !dbg !9979
  %frombool67 = zext i1 %tobool66 to i8, !dbg !9979
  store i8 %frombool67, i8* %__cond, align 1, !dbg !9979
  %64 = load i8, i8* %__cond, align 1, !dbg !9980
  %tobool68 = trunc i8 %64 to i1, !dbg !9980
  br i1 %tobool68, label %land.lhs.true, label %if.end72, !dbg !9980

land.lhs.true:                                    ; preds = %do.end65
  %65 = load i64, i64* %__ret, align 8, !dbg !9980
  %tobool70 = icmp ne i64 %65, 0, !dbg !9980
  br i1 %tobool70, label %if.end72, label %if.then71, !dbg !9979

if.then71:                                        ; preds = %land.lhs.true
  store i64 1, i64* %__ret, align 8, !dbg !9980
  br label %if.end72, !dbg !9980

if.end72:                                         ; preds = %if.then71, %land.lhs.true, %do.end65
  %66 = load i8, i8* %__cond, align 1, !dbg !9979
  %tobool74 = trunc i8 %66 to i1, !dbg !9979
  br i1 %tobool74, label %lor.end, label %lor.rhs, !dbg !9979

lor.rhs:                                          ; preds = %if.end72
  %67 = load i64, i64* %__ret, align 8, !dbg !9979
  %tobool76 = icmp ne i64 %67, 0, !dbg !9979
  %lnot = xor i1 %tobool76, true, !dbg !9979
  br label %lor.end, !dbg !9979

lor.end:                                          ; preds = %lor.rhs, %if.end72
  %68 = phi i1 [ true, %if.end72 ], [ %lnot, %lor.rhs ]
  %lor.ext = zext i1 %68 to i32, !dbg !9979
  store i32 %lor.ext, i32* %tmp73, align 4, !dbg !9980
  %69 = load i32, i32* %tmp73, align 4, !dbg !9979
  %tobool77 = icmp ne i32 %69, 0, !dbg !9982
  br i1 %tobool77, label %if.end106, label %if.then78, !dbg !9971

if.then78:                                        ; preds = %lor.end
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %__wq_entry, metadata !9983, metadata !DIExpression()), !dbg !9996
  call void @llvm.dbg.declare(metadata i64* %__ret79, metadata !9997, metadata !DIExpression()), !dbg !9996
  %70 = load i64, i64* %timeout, align 8, !dbg !9996
  store i64 %70, i64* %__ret79, align 8, !dbg !9996
  call void @init_wait_entry(%struct.wait_queue_entry* %__wq_entry, i32 0) #10, !dbg !9996
  br label %for.cond, !dbg !9996

for.cond:                                         ; preds = %if.end101, %if.then78
  call void @llvm.dbg.declare(metadata i64* %__int, metadata !9998, metadata !DIExpression()), !dbg !10002
  %71 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !10002
  %cmd80 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %71, i32 0, i32 7, !dbg !10002
  %wait = getelementptr inbounds %struct.anon.138, %struct.anon.138* %cmd80, i32 0, i32 4, !dbg !10002
  %call81 = call i64 @prepare_to_wait_event(%struct.wait_queue_head* %wait, %struct.wait_queue_entry* %__wq_entry, i32 2) #10, !dbg !10002
  store i64 %call81, i64* %__int, align 8, !dbg !10002
  call void @llvm.dbg.declare(metadata i8* %__cond82, metadata !10003, metadata !DIExpression()), !dbg !10006
  %72 = load i8*, i8** %p_wait_done, align 8, !dbg !10006
  %73 = load i8, i8* %72, align 1, !dbg !10006
  %tobool83 = trunc i8 %73 to i1, !dbg !10006
  %frombool84 = zext i1 %tobool83 to i8, !dbg !10006
  store i8 %frombool84, i8* %__cond82, align 1, !dbg !10006
  %74 = load i8, i8* %__cond82, align 1, !dbg !10007
  %tobool85 = trunc i8 %74 to i1, !dbg !10007
  br i1 %tobool85, label %land.lhs.true87, label %if.end90, !dbg !10007

land.lhs.true87:                                  ; preds = %for.cond
  %75 = load i64, i64* %__ret79, align 8, !dbg !10007
  %tobool88 = icmp ne i64 %75, 0, !dbg !10007
  br i1 %tobool88, label %if.end90, label %if.then89, !dbg !10006

if.then89:                                        ; preds = %land.lhs.true87
  store i64 1, i64* %__ret79, align 8, !dbg !10007
  br label %if.end90, !dbg !10007

if.end90:                                         ; preds = %if.then89, %land.lhs.true87, %for.cond
  %76 = load i8, i8* %__cond82, align 1, !dbg !10006
  %tobool92 = trunc i8 %76 to i1, !dbg !10006
  br i1 %tobool92, label %lor.end97, label %lor.rhs94, !dbg !10006

lor.rhs94:                                        ; preds = %if.end90
  %77 = load i64, i64* %__ret79, align 8, !dbg !10006
  %tobool95 = icmp ne i64 %77, 0, !dbg !10006
  %lnot96 = xor i1 %tobool95, true, !dbg !10006
  br label %lor.end97, !dbg !10006

lor.end97:                                        ; preds = %lor.rhs94, %if.end90
  %78 = phi i1 [ true, %if.end90 ], [ %lnot96, %lor.rhs94 ]
  %lor.ext98 = zext i1 %78 to i32, !dbg !10006
  store i32 %lor.ext98, i32* %tmp91, align 4, !dbg !10007
  %79 = load i32, i32* %tmp91, align 4, !dbg !10006
  %tobool99 = icmp ne i32 %79, 0, !dbg !10009
  br i1 %tobool99, label %if.then100, label %if.end101, !dbg !10002

if.then100:                                       ; preds = %lor.end97
  br label %for.end, !dbg !10009

if.end101:                                        ; preds = %lor.end97
  %80 = load i64, i64* %__ret79, align 8, !dbg !10002
  %call102 = call i64 @schedule_timeout(i64 %80) #10, !dbg !10002
  store i64 %call102, i64* %__ret79, align 8, !dbg !10002
  br label %for.cond, !dbg !10010, !llvm.loop !10011

for.end:                                          ; preds = %if.then100
  %81 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !9996
  %cmd103 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %81, i32 0, i32 7, !dbg !9996
  %wait104 = getelementptr inbounds %struct.anon.138, %struct.anon.138* %cmd103, i32 0, i32 4, !dbg !9996
  call void @finish_wait(%struct.wait_queue_head* %wait104, %struct.wait_queue_entry* %__wq_entry) #10, !dbg !9996
  br label %__out, !dbg !9996

__out:                                            ; preds = %for.end
  call void @llvm.dbg.label(metadata !10013), !dbg !9996
  %82 = load i64, i64* %__ret79, align 8, !dbg !9996
  store i64 %82, i64* %tmp105, align 8, !dbg !9996
  %83 = load i64, i64* %tmp105, align 8, !dbg !9996
  store i64 %83, i64* %__ret, align 8, !dbg !9982
  br label %if.end106, !dbg !9982

if.end106:                                        ; preds = %__out, %lor.end
  %84 = load i64, i64* %__ret, align 8, !dbg !9971
  store i64 %84, i64* %tmp107, align 8, !dbg !9982
  %85 = load i64, i64* %tmp107, align 8, !dbg !9971
  %86 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !10014
  %cmd108 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %86, i32 0, i32 7, !dbg !10015
  %comp = getelementptr inbounds %struct.anon.138, %struct.anon.138* %cmd108, i32 0, i32 6, !dbg !10016
  %status = getelementptr inbounds %struct.anon.139, %struct.anon.139* %comp, i32 0, i32 0, !dbg !10017
  %87 = load i8, i8* %status, align 8, !dbg !10017
  %88 = load i8*, i8** %p_status.addr, align 8, !dbg !10018
  store i8 %87, i8* %88, align 1, !dbg !10019
  br label %if.end109

if.end109:                                        ; preds = %if.end106, %do.end
  store i32 0, i32* %err, align 4, !dbg !10020
  %89 = load i8*, i8** %p_wait_done, align 8, !dbg !10021
  %90 = load i8, i8* %89, align 1, !dbg !10023
  %tobool110 = trunc i8 %90 to i1, !dbg !10023
  br i1 %tobool110, label %if.then111, label %if.else115, !dbg !10024

if.then111:                                       ; preds = %if.end109
  %91 = load i8*, i8** %p_status.addr, align 8, !dbg !10025
  %92 = load i8, i8* %91, align 1, !dbg !10028
  %tobool112 = icmp ne i8 %92, 0, !dbg !10028
  br i1 %tobool112, label %if.then113, label %if.end114, !dbg !10029

if.then113:                                       ; preds = %if.then111
  store i32 -5, i32* %err, align 4, !dbg !10030
  br label %if.end114, !dbg !10031

if.end114:                                        ; preds = %if.then113, %if.then111
  br label %if.end116, !dbg !10032

if.else115:                                       ; preds = %if.end109
  store i32 -110, i32* %err, align 4, !dbg !10033
  br label %if.end116

if.end116:                                        ; preds = %if.else115, %if.end114
  %93 = load i32, i32* %err, align 4, !dbg !10035
  %tobool117 = icmp ne i32 %93, 0, !dbg !10035
  br i1 %tobool117, label %if.else137, label %land.lhs.true118, !dbg !10037

land.lhs.true118:                                 ; preds = %if.end116
  %94 = load i8*, i8** %out_mbox.addr, align 8, !dbg !10038
  %tobool119 = icmp ne i8* %94, null, !dbg !10038
  br i1 %tobool119, label %land.lhs.true120, label %if.else137, !dbg !10039

land.lhs.true120:                                 ; preds = %land.lhs.true118
  %95 = load i8, i8* %out_mbox_direct.addr, align 1, !dbg !10040
  %tobool121 = trunc i8 %95 to i1, !dbg !10040
  br i1 %tobool121, label %if.then123, label %if.else137, !dbg !10041

if.then123:                                       ; preds = %land.lhs.true120
  call void @llvm.dbg.declare(metadata i32* %tmp124, metadata !10042, metadata !DIExpression()), !dbg !10044
  %96 = load i8, i8* %evreq, align 1, !dbg !10045
  %tobool125 = trunc i8 %96 to i1, !dbg !10045
  br i1 %tobool125, label %if.end136, label %if.then126, !dbg !10047

if.then126:                                       ; preds = %if.then123
  %97 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !10048
  %hw_addr127 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %97, i32 0, i32 1, !dbg !10048
  %98 = load i8*, i8** %hw_addr127, align 8, !dbg !10048
  %add.ptr128 = getelementptr i8, i8* %98, i64 462860, !dbg !10048
  %call129 = call i32 @ioread32be(i8* %add.ptr128) #10, !dbg !10048
  %call130 = call i32 @__fswab32(i32 %call129) #13, !dbg !10048
  store i32 %call130, i32* %tmp124, align 4, !dbg !10050
  %99 = load i8*, i8** %out_mbox.addr, align 8, !dbg !10051
  %100 = bitcast i32* %tmp124 to i8*, !dbg !10052
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %99, i8* align 4 %100, i64 4, i1 false), !dbg !10052
  %101 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !10053
  %hw_addr131 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %101, i32 0, i32 1, !dbg !10053
  %102 = load i8*, i8** %hw_addr131, align 8, !dbg !10053
  %add.ptr132 = getelementptr i8, i8* %102, i64 462864, !dbg !10053
  %call133 = call i32 @ioread32be(i8* %add.ptr132) #10, !dbg !10053
  %call134 = call i32 @__fswab32(i32 %call133) #13, !dbg !10053
  store i32 %call134, i32* %tmp124, align 4, !dbg !10054
  %103 = load i8*, i8** %out_mbox.addr, align 8, !dbg !10055
  %add.ptr135 = getelementptr i8, i8* %103, i64 4, !dbg !10056
  %104 = bitcast i32* %tmp124 to i8*, !dbg !10057
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr135, i8* align 4 %104, i64 4, i1 false), !dbg !10057
  br label %if.end136, !dbg !10058

if.end136:                                        ; preds = %if.then126, %if.then123
  br label %if.end146, !dbg !10059

if.else137:                                       ; preds = %land.lhs.true120, %land.lhs.true118, %if.end116
  %105 = load i32, i32* %err, align 4, !dbg !10060
  %tobool138 = icmp ne i32 %105, 0, !dbg !10060
  br i1 %tobool138, label %if.end145, label %land.lhs.true139, !dbg !10062

land.lhs.true139:                                 ; preds = %if.else137
  %106 = load i8*, i8** %out_mbox.addr, align 8, !dbg !10063
  %tobool140 = icmp ne i8* %106, null, !dbg !10063
  br i1 %tobool140, label %if.then141, label %if.end145, !dbg !10064

if.then141:                                       ; preds = %land.lhs.true139
  %107 = load i8*, i8** %out_mbox.addr, align 8, !dbg !10065
  %108 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !10067
  %cmd142 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %108, i32 0, i32 7, !dbg !10068
  %out_mbox143 = getelementptr inbounds %struct.anon.138, %struct.anon.138* %cmd142, i32 0, i32 0, !dbg !10069
  %buf144 = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %out_mbox143, i32 0, i32 0, !dbg !10070
  %109 = load i8*, i8** %buf144, align 8, !dbg !10070
  %110 = load i64, i64* %out_mbox_size.addr, align 8, !dbg !10071
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %107, i8* align 1 %109, i64 %110, i1 false), !dbg !10072
  br label %if.end145, !dbg !10073

if.end145:                                        ; preds = %if.then141, %land.lhs.true139, %if.else137
  br label %if.end146

if.end146:                                        ; preds = %if.end145, %if.end136
  %111 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !10074
  %cmd147 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %111, i32 0, i32 7, !dbg !10075
  %lock148 = getelementptr inbounds %struct.anon.138, %struct.anon.138* %cmd147, i32 0, i32 2, !dbg !10076
  call void @mutex_unlock(%struct.mutex* %lock148) #10, !dbg !10077
  %112 = load i32, i32* %err, align 4, !dbg !10078
  store i32 %112, i32* %retval, align 4, !dbg !10079
  br label %return, !dbg !10079

return:                                           ; preds = %if.end146, %if.then
  %113 = load i32, i32* %retval, align 4, !dbg !10080
  ret i32 %113, !dbg !10080
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_read_frc_h(i8* %bus_priv) #0 !dbg !10081 {
entry:
  %bus_priv.addr = alloca i8*, align 8
  %mlxsw_pci = alloca %struct.mlxsw_pci*, align 8
  %frc_offset = alloca i64, align 8
  store i8* %bus_priv, i8** %bus_priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bus_priv.addr, metadata !10082, metadata !DIExpression()), !dbg !10083
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci, metadata !10084, metadata !DIExpression()), !dbg !10085
  %0 = load i8*, i8** %bus_priv.addr, align 8, !dbg !10086
  %1 = bitcast i8* %0 to %struct.mlxsw_pci*, !dbg !10086
  store %struct.mlxsw_pci* %1, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !10085
  call void @llvm.dbg.declare(metadata i64* %frc_offset, metadata !10087, metadata !DIExpression()), !dbg !10088
  %2 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !10089
  %free_running_clock_offset = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %2, i32 0, i32 2, !dbg !10090
  %3 = load i64, i64* %free_running_clock_offset, align 8, !dbg !10090
  store i64 %3, i64* %frc_offset, align 8, !dbg !10091
  %4 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !10092
  %hw_addr = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %4, i32 0, i32 1, !dbg !10092
  %5 = load i8*, i8** %hw_addr, align 8, !dbg !10092
  %6 = load i64, i64* %frc_offset, align 8, !dbg !10092
  %add.ptr = getelementptr i8, i8* %5, i64 %6, !dbg !10092
  %call = call i32 @ioread32be(i8* %add.ptr) #10, !dbg !10092
  ret i32 %call, !dbg !10093
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_read_frc_l(i8* %bus_priv) #0 !dbg !10094 {
entry:
  %bus_priv.addr = alloca i8*, align 8
  %mlxsw_pci = alloca %struct.mlxsw_pci*, align 8
  %frc_offset = alloca i64, align 8
  store i8* %bus_priv, i8** %bus_priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bus_priv.addr, metadata !10095, metadata !DIExpression()), !dbg !10096
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci, metadata !10097, metadata !DIExpression()), !dbg !10098
  %0 = load i8*, i8** %bus_priv.addr, align 8, !dbg !10099
  %1 = bitcast i8* %0 to %struct.mlxsw_pci*, !dbg !10099
  store %struct.mlxsw_pci* %1, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !10098
  call void @llvm.dbg.declare(metadata i64* %frc_offset, metadata !10100, metadata !DIExpression()), !dbg !10101
  %2 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !10102
  %free_running_clock_offset = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %2, i32 0, i32 2, !dbg !10103
  %3 = load i64, i64* %free_running_clock_offset, align 8, !dbg !10103
  store i64 %3, i64* %frc_offset, align 8, !dbg !10104
  %4 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !10105
  %hw_addr = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %4, i32 0, i32 1, !dbg !10105
  %5 = load i8*, i8** %hw_addr, align 8, !dbg !10105
  %6 = load i64, i64* %frc_offset, align 8, !dbg !10105
  %add = add i64 %6, 4, !dbg !10105
  %add.ptr = getelementptr i8, i8* %5, i64 %add, !dbg !10105
  %call = call i32 @ioread32be(i8* %add.ptr) #10, !dbg !10105
  ret i32 %call, !dbg !10106
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @mlxsw_cmd_mbox_alloc() #0 !dbg !10107 {
entry:
  %call = call i8* @kzalloc(i64 4096, i32 3264) #10, !dbg !10110
  ret i8* %call, !dbg !10111
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_sw_reset(%struct.mlxsw_pci* %mlxsw_pci, %struct.pci_device_id* %id) #0 !dbg !10112 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %id.addr = alloca %struct.pci_device_id*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %mrsr_pl = alloca [8 x i8], align 1
  %sys_status = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !10115, metadata !DIExpression()), !dbg !10116
  store %struct.pci_device_id* %id, %struct.pci_device_id** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %id.addr, metadata !10117, metadata !DIExpression()), !dbg !10118
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !10119, metadata !DIExpression()), !dbg !10120
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10121
  %pdev1 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %0, i32 0, i32 0, !dbg !10122
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !10122
  store %struct.pci_dev* %1, %struct.pci_dev** %pdev, align 8, !dbg !10120
  call void @llvm.dbg.declare(metadata [8 x i8]* %mrsr_pl, metadata !10123, metadata !DIExpression()), !dbg !10124
  call void @llvm.dbg.declare(metadata i32* %sys_status, metadata !10125, metadata !DIExpression()), !dbg !10126
  call void @llvm.dbg.declare(metadata i32* %err, metadata !10127, metadata !DIExpression()), !dbg !10128
  %2 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10129
  %3 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !10130
  %call = call i32 @mlxsw_pci_sys_ready_wait(%struct.mlxsw_pci* %2, %struct.pci_device_id* %3, i32* %sys_status) #10, !dbg !10131
  store i32 %call, i32* %err, align 4, !dbg !10132
  %4 = load i32, i32* %err, align 4, !dbg !10133
  %tobool = icmp ne i32 %4, 0, !dbg !10133
  br i1 %tobool, label %if.then, label %if.end, !dbg !10135

if.then:                                          ; preds = %entry
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !10136
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 41, !dbg !10136
  %6 = load i32, i32* %sys_status, align 4, !dbg !10136
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.20, i64 0, i64 0), i32 %6) #11, !dbg !10136
  %7 = load i32, i32* %err, align 4, !dbg !10138
  store i32 %7, i32* %retval, align 4, !dbg !10139
  br label %return, !dbg !10139

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %mrsr_pl, i64 0, i64 0, !dbg !10140
  call void @mlxsw_reg_mrsr_pack(i8* %arraydecay) #10, !dbg !10141
  %8 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10142
  %core = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %8, i32 0, i32 5, !dbg !10143
  %9 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !10143
  %arraydecay2 = getelementptr inbounds [8 x i8], [8 x i8]* %mrsr_pl, i64 0, i64 0, !dbg !10144
  %call3 = call i32 @mlxsw_reg_write(%struct.mlxsw_core* %9, %struct.mlxsw_reg_info* @mlxsw_reg_mrsr, i8* %arraydecay2) #10, !dbg !10145
  store i32 %call3, i32* %err, align 4, !dbg !10146
  %10 = load i32, i32* %err, align 4, !dbg !10147
  %tobool4 = icmp ne i32 %10, 0, !dbg !10147
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !10149

if.then5:                                         ; preds = %if.end
  %11 = load i32, i32* %err, align 4, !dbg !10150
  store i32 %11, i32* %retval, align 4, !dbg !10151
  br label %return, !dbg !10151

if.end6:                                          ; preds = %if.end
  %12 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10152
  %13 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !10153
  %call7 = call i32 @mlxsw_pci_sys_ready_wait(%struct.mlxsw_pci* %12, %struct.pci_device_id* %13, i32* %sys_status) #10, !dbg !10154
  store i32 %call7, i32* %err, align 4, !dbg !10155
  %14 = load i32, i32* %err, align 4, !dbg !10156
  %tobool8 = icmp ne i32 %14, 0, !dbg !10156
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !10158

if.then9:                                         ; preds = %if.end6
  %15 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !10159
  %dev10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 41, !dbg !10159
  %16 = load i32, i32* %sys_status, align 4, !dbg !10159
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev10, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.21, i64 0, i64 0), i32 %16) #11, !dbg !10159
  %17 = load i32, i32* %err, align 4, !dbg !10161
  store i32 %17, i32* %retval, align 4, !dbg !10162
  br label %return, !dbg !10162

if.end11:                                         ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !10163
  br label %return, !dbg !10163

return:                                           ; preds = %if.end11, %if.then9, %if.then5, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !10164
  ret i32 %18, !dbg !10164
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_alloc_irq_vectors(%struct.mlxsw_pci* %mlxsw_pci) #0 !dbg !10165 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !10166, metadata !DIExpression()), !dbg !10167
  call void @llvm.dbg.declare(metadata i32* %err, metadata !10168, metadata !DIExpression()), !dbg !10169
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10170
  %pdev = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %0, i32 0, i32 0, !dbg !10171
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !10171
  %call = call i32 @pci_alloc_irq_vectors(%struct.pci_dev* %1, i32 1, i32 1, i32 4) #10, !dbg !10172
  store i32 %call, i32* %err, align 4, !dbg !10173
  %2 = load i32, i32* %err, align 4, !dbg !10174
  %cmp = icmp slt i32 %2, 0, !dbg !10176
  br i1 %cmp, label %if.then, label %if.end, !dbg !10177

if.then:                                          ; preds = %entry
  %3 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10178
  %pdev1 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %3, i32 0, i32 0, !dbg !10178
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !10178
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !10178
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14, i64 0, i64 0)) #11, !dbg !10178
  br label %if.end, !dbg !10178

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %err, align 4, !dbg !10179
  ret i32 %5, !dbg !10180
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_query_fw(%struct.mlxsw_core* %mlxsw_core, i8* %out_mbox) #0 !dbg !10181 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %out_mbox.addr = alloca i8*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !10184, metadata !DIExpression()), !dbg !10185
  store i8* %out_mbox, i8** %out_mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out_mbox.addr, metadata !10186, metadata !DIExpression()), !dbg !10187
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !10188
  %1 = load i8*, i8** %out_mbox.addr, align 8, !dbg !10189
  %call = call i32 @mlxsw_cmd_exec_out(%struct.mlxsw_core* %0, i16 zeroext 4, i8 zeroext 0, i32 0, i1 zeroext false, i8* %1, i64 4096) #10, !dbg !10190
  ret i32 %call, !dbg !10191
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_mbox_query_fw_fw_rev_major_get(i8* %buf) #0 !dbg !10192 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10195, metadata !DIExpression()), !dbg !10196
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !10196
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_query_fw_fw_rev_major_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !10196
  ret i32 %call, !dbg !10196
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_mbox_query_fw_fw_rev_minor_get(i8* %buf) #0 !dbg !10197 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10198, metadata !DIExpression()), !dbg !10199
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !10199
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_query_fw_fw_rev_minor_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !10199
  ret i32 %call, !dbg !10199
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_mbox_query_fw_fw_rev_subminor_get(i8* %buf) #0 !dbg !10200 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10201, metadata !DIExpression()), !dbg !10202
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !10202
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_query_fw_fw_rev_subminor_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !10202
  ret i32 %call, !dbg !10202
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_mbox_query_fw_cmd_interface_rev_get(i8* %buf) #0 !dbg !10203 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10204, metadata !DIExpression()), !dbg !10205
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !10205
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_query_fw_cmd_interface_rev_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !10205
  ret i32 %call, !dbg !10205
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_mbox_query_fw_doorbell_page_bar_get(i8* %buf) #0 !dbg !10206 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10207, metadata !DIExpression()), !dbg !10208
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !10208
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_query_fw_doorbell_page_bar_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !10208
  ret i32 %call, !dbg !10208
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mlxsw_cmd_mbox_query_fw_doorbell_page_offset_get(i8* %buf) #0 !dbg !10209 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10212, metadata !DIExpression()), !dbg !10213
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !10213
  %call = call i64 @__mlxsw_item_get64(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_query_fw_doorbell_page_offset_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !10213
  ret i64 %call, !dbg !10213
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_mbox_query_fw_fr_rn_clk_bar_get(i8* %buf) #0 !dbg !10214 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10215, metadata !DIExpression()), !dbg !10216
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !10216
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_query_fw_fr_rn_clk_bar_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !10216
  ret i32 %call, !dbg !10216
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mlxsw_cmd_mbox_query_fw_free_running_clock_offset_get(i8* %buf) #0 !dbg !10217 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10218, metadata !DIExpression()), !dbg !10219
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !10219
  %call = call i64 @__mlxsw_item_get64(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_query_fw_free_running_clock_offset_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !10219
  ret i64 %call, !dbg !10219
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_mbox_query_fw_fw_pages_get(i8* %buf) #0 !dbg !10220 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10221, metadata !DIExpression()), !dbg !10222
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !10222
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_query_fw_fw_pages_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !10222
  ret i32 %call, !dbg !10222
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_fw_area_init(%struct.mlxsw_pci* %mlxsw_pci, i8* %mbox, i16 zeroext %num_pages) #0 !dbg !10223 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %mbox.addr = alloca i8*, align 8
  %num_pages.addr = alloca i16, align 2
  %mem_item = alloca %struct.mlxsw_pci_mem_item*, align 8
  %nent = alloca i32, align 4
  %i = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !10226, metadata !DIExpression()), !dbg !10227
  store i8* %mbox, i8** %mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mbox.addr, metadata !10228, metadata !DIExpression()), !dbg !10229
  store i16 %num_pages, i16* %num_pages.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %num_pages.addr, metadata !10230, metadata !DIExpression()), !dbg !10231
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_mem_item** %mem_item, metadata !10232, metadata !DIExpression()), !dbg !10233
  call void @llvm.dbg.declare(metadata i32* %nent, metadata !10234, metadata !DIExpression()), !dbg !10235
  store i32 0, i32* %nent, align 4, !dbg !10235
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10236, metadata !DIExpression()), !dbg !10237
  call void @llvm.dbg.declare(metadata i32* %err, metadata !10238, metadata !DIExpression()), !dbg !10239
  %0 = load i16, i16* %num_pages.addr, align 2, !dbg !10240
  %conv = zext i16 %0 to i64, !dbg !10240
  %call = call i8* @kcalloc(i64 %conv, i64 24, i32 3264) #10, !dbg !10241
  %1 = bitcast i8* %call to %struct.mlxsw_pci_mem_item*, !dbg !10241
  %2 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10242
  %fw_area = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %2, i32 0, i32 6, !dbg !10243
  %items = getelementptr inbounds %struct.anon.137, %struct.anon.137* %fw_area, i32 0, i32 0, !dbg !10244
  store %struct.mlxsw_pci_mem_item* %1, %struct.mlxsw_pci_mem_item** %items, align 8, !dbg !10245
  %3 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10246
  %fw_area1 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %3, i32 0, i32 6, !dbg !10248
  %items2 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %fw_area1, i32 0, i32 0, !dbg !10249
  %4 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %items2, align 8, !dbg !10249
  %tobool = icmp ne %struct.mlxsw_pci_mem_item* %4, null, !dbg !10246
  br i1 %tobool, label %if.end, label %if.then, !dbg !10250

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !10251
  br label %return, !dbg !10251

if.end:                                           ; preds = %entry
  %5 = load i16, i16* %num_pages.addr, align 2, !dbg !10252
  %conv3 = zext i16 %5 to i32, !dbg !10252
  %6 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10253
  %fw_area4 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %6, i32 0, i32 6, !dbg !10254
  %count = getelementptr inbounds %struct.anon.137, %struct.anon.137* %fw_area4, i32 0, i32 1, !dbg !10255
  store i32 %conv3, i32* %count, align 8, !dbg !10256
  %7 = load i8*, i8** %mbox.addr, align 8, !dbg !10257
  call void @mlxsw_cmd_mbox_zero(i8* %7) #10, !dbg !10258
  store i32 0, i32* %i, align 4, !dbg !10259
  br label %for.cond, !dbg !10261

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i32, i32* %i, align 4, !dbg !10262
  %9 = load i16, i16* %num_pages.addr, align 2, !dbg !10264
  %conv5 = zext i16 %9 to i32, !dbg !10264
  %cmp = icmp slt i32 %8, %conv5, !dbg !10265
  br i1 %cmp, label %for.body, label %for.end, !dbg !10266

for.body:                                         ; preds = %for.cond
  %10 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10267
  %fw_area7 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %10, i32 0, i32 6, !dbg !10269
  %items8 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %fw_area7, i32 0, i32 0, !dbg !10270
  %11 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %items8, align 8, !dbg !10270
  %12 = load i32, i32* %i, align 4, !dbg !10271
  %idxprom = sext i32 %12 to i64, !dbg !10267
  %arrayidx = getelementptr %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %11, i64 %idxprom, !dbg !10267
  store %struct.mlxsw_pci_mem_item* %arrayidx, %struct.mlxsw_pci_mem_item** %mem_item, align 8, !dbg !10272
  %13 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %mem_item, align 8, !dbg !10273
  %size = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %13, i32 0, i32 2, !dbg !10274
  store i64 4096, i64* %size, align 8, !dbg !10275
  %14 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10276
  %pdev = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %14, i32 0, i32 0, !dbg !10277
  %15 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !10277
  %16 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %mem_item, align 8, !dbg !10278
  %size9 = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %16, i32 0, i32 2, !dbg !10279
  %17 = load i64, i64* %size9, align 8, !dbg !10279
  %18 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %mem_item, align 8, !dbg !10280
  %mapaddr = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %18, i32 0, i32 1, !dbg !10281
  %call10 = call i8* @pci_alloc_consistent(%struct.pci_dev* %15, i64 %17, i64* %mapaddr) #10, !dbg !10282
  %19 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %mem_item, align 8, !dbg !10283
  %buf = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %19, i32 0, i32 0, !dbg !10284
  store i8* %call10, i8** %buf, align 8, !dbg !10285
  %20 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %mem_item, align 8, !dbg !10286
  %buf11 = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %20, i32 0, i32 0, !dbg !10288
  %21 = load i8*, i8** %buf11, align 8, !dbg !10288
  %tobool12 = icmp ne i8* %21, null, !dbg !10286
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !10289

if.then13:                                        ; preds = %for.body
  store i32 -12, i32* %err, align 4, !dbg !10290
  br label %err_alloc, !dbg !10292

if.end14:                                         ; preds = %for.body
  %22 = load i8*, i8** %mbox.addr, align 8, !dbg !10293
  %23 = load i32, i32* %nent, align 4, !dbg !10294
  %conv15 = trunc i32 %23 to i16, !dbg !10294
  %24 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %mem_item, align 8, !dbg !10295
  %mapaddr16 = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %24, i32 0, i32 1, !dbg !10296
  %25 = load i64, i64* %mapaddr16, align 8, !dbg !10296
  call void @mlxsw_cmd_mbox_map_fa_pa_set(i8* %22, i16 zeroext %conv15, i64 %25) #10, !dbg !10297
  %26 = load i8*, i8** %mbox.addr, align 8, !dbg !10298
  %27 = load i32, i32* %nent, align 4, !dbg !10299
  %conv17 = trunc i32 %27 to i16, !dbg !10299
  call void @mlxsw_cmd_mbox_map_fa_log2size_set(i8* %26, i16 zeroext %conv17, i32 0) #10, !dbg !10300
  %28 = load i32, i32* %nent, align 4, !dbg !10301
  %inc = add i32 %28, 1, !dbg !10301
  store i32 %inc, i32* %nent, align 4, !dbg !10301
  %cmp18 = icmp eq i32 %inc, 32, !dbg !10303
  br i1 %cmp18, label %if.then20, label %if.end25, !dbg !10304

if.then20:                                        ; preds = %if.end14
  %29 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10305
  %core = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %29, i32 0, i32 5, !dbg !10307
  %30 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !10307
  %31 = load i8*, i8** %mbox.addr, align 8, !dbg !10308
  %32 = load i32, i32* %nent, align 4, !dbg !10309
  %call21 = call i32 @mlxsw_cmd_map_fa(%struct.mlxsw_core* %30, i8* %31, i32 %32) #10, !dbg !10310
  store i32 %call21, i32* %err, align 4, !dbg !10311
  %33 = load i32, i32* %err, align 4, !dbg !10312
  %tobool22 = icmp ne i32 %33, 0, !dbg !10312
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !10314

if.then23:                                        ; preds = %if.then20
  br label %err_cmd_map_fa, !dbg !10315

if.end24:                                         ; preds = %if.then20
  store i32 0, i32* %nent, align 4, !dbg !10316
  %34 = load i8*, i8** %mbox.addr, align 8, !dbg !10317
  call void @mlxsw_cmd_mbox_zero(i8* %34) #10, !dbg !10318
  br label %if.end25, !dbg !10319

if.end25:                                         ; preds = %if.end24, %if.end14
  br label %for.inc, !dbg !10320

for.inc:                                          ; preds = %if.end25
  %35 = load i32, i32* %i, align 4, !dbg !10321
  %inc26 = add i32 %35, 1, !dbg !10321
  store i32 %inc26, i32* %i, align 4, !dbg !10321
  br label %for.cond, !dbg !10322, !llvm.loop !10323

for.end:                                          ; preds = %for.cond
  %36 = load i32, i32* %nent, align 4, !dbg !10325
  %tobool27 = icmp ne i32 %36, 0, !dbg !10325
  br i1 %tobool27, label %if.then28, label %if.end34, !dbg !10327

if.then28:                                        ; preds = %for.end
  %37 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10328
  %core29 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %37, i32 0, i32 5, !dbg !10330
  %38 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core29, align 8, !dbg !10330
  %39 = load i8*, i8** %mbox.addr, align 8, !dbg !10331
  %40 = load i32, i32* %nent, align 4, !dbg !10332
  %call30 = call i32 @mlxsw_cmd_map_fa(%struct.mlxsw_core* %38, i8* %39, i32 %40) #10, !dbg !10333
  store i32 %call30, i32* %err, align 4, !dbg !10334
  %41 = load i32, i32* %err, align 4, !dbg !10335
  %tobool31 = icmp ne i32 %41, 0, !dbg !10335
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !10337

if.then32:                                        ; preds = %if.then28
  br label %err_cmd_map_fa, !dbg !10338

if.end33:                                         ; preds = %if.then28
  br label %if.end34, !dbg !10339

if.end34:                                         ; preds = %if.end33, %for.end
  store i32 0, i32* %retval, align 4, !dbg !10340
  br label %return, !dbg !10340

err_cmd_map_fa:                                   ; preds = %if.then32, %if.then23
  call void @llvm.dbg.label(metadata !10341), !dbg !10342
  br label %err_alloc, !dbg !10340

err_alloc:                                        ; preds = %err_cmd_map_fa, %if.then13
  call void @llvm.dbg.label(metadata !10343), !dbg !10344
  %42 = load i32, i32* %i, align 4, !dbg !10345
  %dec = add i32 %42, -1, !dbg !10345
  store i32 %dec, i32* %i, align 4, !dbg !10345
  br label %for.cond35, !dbg !10347

for.cond35:                                       ; preds = %for.inc47, %err_alloc
  %43 = load i32, i32* %i, align 4, !dbg !10348
  %cmp36 = icmp sge i32 %43, 0, !dbg !10350
  br i1 %cmp36, label %for.body38, label %for.end49, !dbg !10351

for.body38:                                       ; preds = %for.cond35
  %44 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10352
  %fw_area39 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %44, i32 0, i32 6, !dbg !10354
  %items40 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %fw_area39, i32 0, i32 0, !dbg !10355
  %45 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %items40, align 8, !dbg !10355
  %46 = load i32, i32* %i, align 4, !dbg !10356
  %idxprom41 = sext i32 %46 to i64, !dbg !10352
  %arrayidx42 = getelementptr %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %45, i64 %idxprom41, !dbg !10352
  store %struct.mlxsw_pci_mem_item* %arrayidx42, %struct.mlxsw_pci_mem_item** %mem_item, align 8, !dbg !10357
  %47 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10358
  %pdev43 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %47, i32 0, i32 0, !dbg !10359
  %48 = load %struct.pci_dev*, %struct.pci_dev** %pdev43, align 8, !dbg !10359
  %49 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %mem_item, align 8, !dbg !10360
  %size44 = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %49, i32 0, i32 2, !dbg !10361
  %50 = load i64, i64* %size44, align 8, !dbg !10361
  %51 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %mem_item, align 8, !dbg !10362
  %buf45 = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %51, i32 0, i32 0, !dbg !10363
  %52 = load i8*, i8** %buf45, align 8, !dbg !10363
  %53 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %mem_item, align 8, !dbg !10364
  %mapaddr46 = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %53, i32 0, i32 1, !dbg !10365
  %54 = load i64, i64* %mapaddr46, align 8, !dbg !10365
  call void @pci_free_consistent(%struct.pci_dev* %48, i64 %50, i8* %52, i64 %54) #10, !dbg !10366
  br label %for.inc47, !dbg !10367

for.inc47:                                        ; preds = %for.body38
  %55 = load i32, i32* %i, align 4, !dbg !10368
  %dec48 = add i32 %55, -1, !dbg !10368
  store i32 %dec48, i32* %i, align 4, !dbg !10368
  br label %for.cond35, !dbg !10369, !llvm.loop !10370

for.end49:                                        ; preds = %for.cond35
  %56 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10372
  %fw_area50 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %56, i32 0, i32 6, !dbg !10373
  %items51 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %fw_area50, i32 0, i32 0, !dbg !10374
  %57 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %items51, align 8, !dbg !10374
  %58 = bitcast %struct.mlxsw_pci_mem_item* %57 to i8*, !dbg !10372
  call void @kfree(i8* %58) #10, !dbg !10375
  %59 = load i32, i32* %err, align 4, !dbg !10376
  store i32 %59, i32* %retval, align 4, !dbg !10377
  br label %return, !dbg !10377

return:                                           ; preds = %for.end49, %if.end34, %if.then
  %60 = load i32, i32* %retval, align 4, !dbg !10378
  ret i32 %60, !dbg !10378
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_boardinfo(%struct.mlxsw_pci* %mlxsw_pci, i8* %mbox) #0 !dbg !10379 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %mbox.addr = alloca i8*, align 8
  %bus_info = alloca %struct.mlxsw_bus_info*, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !10382, metadata !DIExpression()), !dbg !10383
  store i8* %mbox, i8** %mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mbox.addr, metadata !10384, metadata !DIExpression()), !dbg !10385
  call void @llvm.dbg.declare(metadata %struct.mlxsw_bus_info** %bus_info, metadata !10386, metadata !DIExpression()), !dbg !10388
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10389
  %bus_info1 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %0, i32 0, i32 8, !dbg !10390
  store %struct.mlxsw_bus_info* %bus_info1, %struct.mlxsw_bus_info** %bus_info, align 8, !dbg !10388
  call void @llvm.dbg.declare(metadata i32* %err, metadata !10391, metadata !DIExpression()), !dbg !10392
  %1 = load i8*, i8** %mbox.addr, align 8, !dbg !10393
  call void @mlxsw_cmd_mbox_zero(i8* %1) #10, !dbg !10394
  %2 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10395
  %core = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %2, i32 0, i32 5, !dbg !10396
  %3 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !10396
  %4 = load i8*, i8** %mbox.addr, align 8, !dbg !10397
  %call = call i32 @mlxsw_cmd_boardinfo(%struct.mlxsw_core* %3, i8* %4) #10, !dbg !10398
  store i32 %call, i32* %err, align 4, !dbg !10399
  %5 = load i32, i32* %err, align 4, !dbg !10400
  %tobool = icmp ne i32 %5, 0, !dbg !10400
  br i1 %tobool, label %if.then, label %if.end, !dbg !10402

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %err, align 4, !dbg !10403
  store i32 %6, i32* %retval, align 4, !dbg !10404
  br label %return, !dbg !10404

if.end:                                           ; preds = %entry
  %7 = load i8*, i8** %mbox.addr, align 8, !dbg !10405
  %8 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info, align 8, !dbg !10406
  %vsd = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %8, i32 0, i32 4, !dbg !10407
  %arraydecay = getelementptr inbounds [208 x i8], [208 x i8]* %vsd, i64 0, i64 0, !dbg !10406
  call void @mlxsw_cmd_mbox_boardinfo_vsd_memcpy_from(i8* %7, i8* %arraydecay) #10, !dbg !10408
  %9 = load i8*, i8** %mbox.addr, align 8, !dbg !10409
  %10 = load %struct.mlxsw_bus_info*, %struct.mlxsw_bus_info** %bus_info, align 8, !dbg !10410
  %psid = getelementptr inbounds %struct.mlxsw_bus_info, %struct.mlxsw_bus_info* %10, i32 0, i32 5, !dbg !10411
  %arraydecay2 = getelementptr inbounds [16 x i8], [16 x i8]* %psid, i64 0, i64 0, !dbg !10410
  call void @mlxsw_cmd_mbox_boardinfo_psid_memcpy_from(i8* %9, i8* %arraydecay2) #10, !dbg !10412
  store i32 0, i32* %retval, align 4, !dbg !10413
  br label %return, !dbg !10413

return:                                           ; preds = %if.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !10414
  ret i32 %11, !dbg !10414
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_core_resources_query(%struct.mlxsw_core*, i8*, %struct.mlxsw_res*) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @mlxsw_core_res_valid(%struct.mlxsw_core*, i32) #2

; Function Attrs: noredzone
declare dso_local i64 @mlxsw_core_res_get(%struct.mlxsw_core*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_config_profile(%struct.mlxsw_pci* %mlxsw_pci, i8* %mbox, %struct.mlxsw_config_profile* %profile, %struct.mlxsw_res* %res) #0 !dbg !10415 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %mbox.addr = alloca i8*, align 8
  %profile.addr = alloca %struct.mlxsw_config_profile*, align 8
  %res.addr = alloca %struct.mlxsw_res*, align 8
  %i = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !10418, metadata !DIExpression()), !dbg !10419
  store i8* %mbox, i8** %mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mbox.addr, metadata !10420, metadata !DIExpression()), !dbg !10421
  store %struct.mlxsw_config_profile* %profile, %struct.mlxsw_config_profile** %profile.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_config_profile** %profile.addr, metadata !10422, metadata !DIExpression()), !dbg !10423
  store %struct.mlxsw_res* %res, %struct.mlxsw_res** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_res** %res.addr, metadata !10424, metadata !DIExpression()), !dbg !10425
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10426, metadata !DIExpression()), !dbg !10427
  call void @llvm.dbg.declare(metadata i32* %err, metadata !10428, metadata !DIExpression()), !dbg !10429
  %0 = load i8*, i8** %mbox.addr, align 8, !dbg !10430
  call void @mlxsw_cmd_mbox_zero(i8* %0) #10, !dbg !10431
  %1 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !10432
  %2 = bitcast %struct.mlxsw_config_profile* %1 to i16*, !dbg !10434
  %bf.load = load i16, i16* %2, align 4, !dbg !10434
  %bf.clear = and i16 %bf.load, 1, !dbg !10434
  %tobool = icmp ne i16 %bf.clear, 0, !dbg !10432
  br i1 %tobool, label %if.then, label %if.end, !dbg !10435

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %mbox.addr, align 8, !dbg !10436
  call void @mlxsw_cmd_mbox_config_profile_set_max_vepa_channels_set(i8* %3, i32 1) #10, !dbg !10438
  %4 = load i8*, i8** %mbox.addr, align 8, !dbg !10439
  %5 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !10440
  %max_vepa_channels = getelementptr inbounds %struct.mlxsw_config_profile, %struct.mlxsw_config_profile* %5, i32 0, i32 1, !dbg !10441
  %6 = load i8, i8* %max_vepa_channels, align 2, !dbg !10441
  %conv = zext i8 %6 to i32, !dbg !10440
  call void @mlxsw_cmd_mbox_config_profile_max_vepa_channels_set(i8* %4, i32 %conv) #10, !dbg !10442
  br label %if.end, !dbg !10443

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !10444
  %8 = bitcast %struct.mlxsw_config_profile* %7 to i16*, !dbg !10446
  %bf.load1 = load i16, i16* %8, align 4, !dbg !10446
  %bf.lshr = lshr i16 %bf.load1, 1, !dbg !10446
  %bf.clear2 = and i16 %bf.lshr, 1, !dbg !10446
  %tobool3 = icmp ne i16 %bf.clear2, 0, !dbg !10444
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !10447

if.then4:                                         ; preds = %if.end
  %9 = load i8*, i8** %mbox.addr, align 8, !dbg !10448
  call void @mlxsw_cmd_mbox_config_profile_set_max_mid_set(i8* %9, i32 1) #10, !dbg !10450
  %10 = load i8*, i8** %mbox.addr, align 8, !dbg !10451
  %11 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !10452
  %max_mid = getelementptr inbounds %struct.mlxsw_config_profile, %struct.mlxsw_config_profile* %11, i32 0, i32 2, !dbg !10453
  %12 = load i16, i16* %max_mid, align 4, !dbg !10453
  %conv5 = zext i16 %12 to i32, !dbg !10452
  call void @mlxsw_cmd_mbox_config_profile_max_mid_set(i8* %10, i32 %conv5) #10, !dbg !10454
  br label %if.end6, !dbg !10455

if.end6:                                          ; preds = %if.then4, %if.end
  %13 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !10456
  %14 = bitcast %struct.mlxsw_config_profile* %13 to i16*, !dbg !10458
  %bf.load7 = load i16, i16* %14, align 4, !dbg !10458
  %bf.lshr8 = lshr i16 %bf.load7, 2, !dbg !10458
  %bf.clear9 = and i16 %bf.lshr8, 1, !dbg !10458
  %tobool10 = icmp ne i16 %bf.clear9, 0, !dbg !10456
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !10459

if.then11:                                        ; preds = %if.end6
  %15 = load i8*, i8** %mbox.addr, align 8, !dbg !10460
  call void @mlxsw_cmd_mbox_config_profile_set_max_pgt_set(i8* %15, i32 1) #10, !dbg !10462
  %16 = load i8*, i8** %mbox.addr, align 8, !dbg !10463
  %17 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !10464
  %max_pgt = getelementptr inbounds %struct.mlxsw_config_profile, %struct.mlxsw_config_profile* %17, i32 0, i32 3, !dbg !10465
  %18 = load i16, i16* %max_pgt, align 2, !dbg !10465
  %conv12 = zext i16 %18 to i32, !dbg !10464
  call void @mlxsw_cmd_mbox_config_profile_max_pgt_set(i8* %16, i32 %conv12) #10, !dbg !10466
  br label %if.end13, !dbg !10467

if.end13:                                         ; preds = %if.then11, %if.end6
  %19 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !10468
  %20 = bitcast %struct.mlxsw_config_profile* %19 to i16*, !dbg !10470
  %bf.load14 = load i16, i16* %20, align 4, !dbg !10470
  %bf.lshr15 = lshr i16 %bf.load14, 3, !dbg !10470
  %bf.clear16 = and i16 %bf.lshr15, 1, !dbg !10470
  %tobool17 = icmp ne i16 %bf.clear16, 0, !dbg !10468
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !10471

if.then18:                                        ; preds = %if.end13
  %21 = load i8*, i8** %mbox.addr, align 8, !dbg !10472
  call void @mlxsw_cmd_mbox_config_profile_set_max_system_port_set(i8* %21, i32 1) #10, !dbg !10474
  %22 = load i8*, i8** %mbox.addr, align 8, !dbg !10475
  %23 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !10476
  %max_system_port = getelementptr inbounds %struct.mlxsw_config_profile, %struct.mlxsw_config_profile* %23, i32 0, i32 4, !dbg !10477
  %24 = load i16, i16* %max_system_port, align 4, !dbg !10477
  %conv19 = zext i16 %24 to i32, !dbg !10476
  call void @mlxsw_cmd_mbox_config_profile_max_system_port_set(i8* %22, i32 %conv19) #10, !dbg !10478
  br label %if.end20, !dbg !10479

if.end20:                                         ; preds = %if.then18, %if.end13
  %25 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !10480
  %26 = bitcast %struct.mlxsw_config_profile* %25 to i16*, !dbg !10482
  %bf.load21 = load i16, i16* %26, align 4, !dbg !10482
  %bf.lshr22 = lshr i16 %bf.load21, 4, !dbg !10482
  %bf.clear23 = and i16 %bf.lshr22, 1, !dbg !10482
  %tobool24 = icmp ne i16 %bf.clear23, 0, !dbg !10480
  br i1 %tobool24, label %if.then25, label %if.end27, !dbg !10483

if.then25:                                        ; preds = %if.end20
  %27 = load i8*, i8** %mbox.addr, align 8, !dbg !10484
  call void @mlxsw_cmd_mbox_config_profile_set_max_vlan_groups_set(i8* %27, i32 1) #10, !dbg !10486
  %28 = load i8*, i8** %mbox.addr, align 8, !dbg !10487
  %29 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !10488
  %max_vlan_groups = getelementptr inbounds %struct.mlxsw_config_profile, %struct.mlxsw_config_profile* %29, i32 0, i32 5, !dbg !10489
  %30 = load i16, i16* %max_vlan_groups, align 2, !dbg !10489
  %conv26 = zext i16 %30 to i32, !dbg !10488
  call void @mlxsw_cmd_mbox_config_profile_max_vlan_groups_set(i8* %28, i32 %conv26) #10, !dbg !10490
  br label %if.end27, !dbg !10491

if.end27:                                         ; preds = %if.then25, %if.end20
  %31 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !10492
  %32 = bitcast %struct.mlxsw_config_profile* %31 to i16*, !dbg !10494
  %bf.load28 = load i16, i16* %32, align 4, !dbg !10494
  %bf.lshr29 = lshr i16 %bf.load28, 5, !dbg !10494
  %bf.clear30 = and i16 %bf.lshr29, 1, !dbg !10494
  %tobool31 = icmp ne i16 %bf.clear30, 0, !dbg !10492
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !10495

if.then32:                                        ; preds = %if.end27
  %33 = load i8*, i8** %mbox.addr, align 8, !dbg !10496
  call void @mlxsw_cmd_mbox_config_profile_set_max_regions_set(i8* %33, i32 1) #10, !dbg !10498
  %34 = load i8*, i8** %mbox.addr, align 8, !dbg !10499
  %35 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !10500
  %max_regions = getelementptr inbounds %struct.mlxsw_config_profile, %struct.mlxsw_config_profile* %35, i32 0, i32 6, !dbg !10501
  %36 = load i16, i16* %max_regions, align 4, !dbg !10501
  %conv33 = zext i16 %36 to i32, !dbg !10500
  call void @mlxsw_cmd_mbox_config_profile_max_regions_set(i8* %34, i32 %conv33) #10, !dbg !10502
  br label %if.end34, !dbg !10503

if.end34:                                         ; preds = %if.then32, %if.end27
  %37 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !10504
  %38 = bitcast %struct.mlxsw_config_profile* %37 to i16*, !dbg !10506
  %bf.load35 = load i16, i16* %38, align 4, !dbg !10506
  %bf.lshr36 = lshr i16 %bf.load35, 6, !dbg !10506
  %bf.clear37 = and i16 %bf.lshr36, 1, !dbg !10506
  %tobool38 = icmp ne i16 %bf.clear37, 0, !dbg !10504
  br i1 %tobool38, label %if.then39, label %if.end46, !dbg !10507

if.then39:                                        ; preds = %if.end34
  %39 = load i8*, i8** %mbox.addr, align 8, !dbg !10508
  call void @mlxsw_cmd_mbox_config_profile_set_flood_tables_set(i8* %39, i32 1) #10, !dbg !10510
  %40 = load i8*, i8** %mbox.addr, align 8, !dbg !10511
  %41 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !10512
  %max_flood_tables = getelementptr inbounds %struct.mlxsw_config_profile, %struct.mlxsw_config_profile* %41, i32 0, i32 7, !dbg !10513
  %42 = load i8, i8* %max_flood_tables, align 2, !dbg !10513
  %conv40 = zext i8 %42 to i32, !dbg !10512
  call void @mlxsw_cmd_mbox_config_profile_max_flood_tables_set(i8* %40, i32 %conv40) #10, !dbg !10514
  %43 = load i8*, i8** %mbox.addr, align 8, !dbg !10515
  %44 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !10516
  %max_vid_flood_tables = getelementptr inbounds %struct.mlxsw_config_profile, %struct.mlxsw_config_profile* %44, i32 0, i32 8, !dbg !10517
  %45 = load i8, i8* %max_vid_flood_tables, align 1, !dbg !10517
  %conv41 = zext i8 %45 to i32, !dbg !10516
  call void @mlxsw_cmd_mbox_config_profile_max_vid_flood_tables_set(i8* %43, i32 %conv41) #10, !dbg !10518
  %46 = load i8*, i8** %mbox.addr, align 8, !dbg !10519
  %47 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !10520
  %max_fid_offset_flood_tables = getelementptr inbounds %struct.mlxsw_config_profile, %struct.mlxsw_config_profile* %47, i32 0, i32 10, !dbg !10521
  %48 = load i8, i8* %max_fid_offset_flood_tables, align 1, !dbg !10521
  %conv42 = zext i8 %48 to i32, !dbg !10520
  call void @mlxsw_cmd_mbox_config_profile_max_fid_offset_flood_tables_set(i8* %46, i32 %conv42) #10, !dbg !10522
  %49 = load i8*, i8** %mbox.addr, align 8, !dbg !10523
  %50 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !10524
  %fid_offset_flood_table_size = getelementptr inbounds %struct.mlxsw_config_profile, %struct.mlxsw_config_profile* %50, i32 0, i32 11, !dbg !10525
  %51 = load i16, i16* %fid_offset_flood_table_size, align 2, !dbg !10525
  %conv43 = zext i16 %51 to i32, !dbg !10524
  call void @mlxsw_cmd_mbox_config_profile_fid_offset_flood_table_size_set(i8* %49, i32 %conv43) #10, !dbg !10526
  %52 = load i8*, i8** %mbox.addr, align 8, !dbg !10527
  %53 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !10528
  %max_fid_flood_tables = getelementptr inbounds %struct.mlxsw_config_profile, %struct.mlxsw_config_profile* %53, i32 0, i32 12, !dbg !10529
  %54 = load i8, i8* %max_fid_flood_tables, align 4, !dbg !10529
  %conv44 = zext i8 %54 to i32, !dbg !10528
  call void @mlxsw_cmd_mbox_config_profile_max_fid_flood_tables_set(i8* %52, i32 %conv44) #10, !dbg !10530
  %55 = load i8*, i8** %mbox.addr, align 8, !dbg !10531
  %56 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !10532
  %fid_flood_table_size = getelementptr inbounds %struct.mlxsw_config_profile, %struct.mlxsw_config_profile* %56, i32 0, i32 13, !dbg !10533
  %57 = load i16, i16* %fid_flood_table_size, align 2, !dbg !10533
  %conv45 = zext i16 %57 to i32, !dbg !10532
  call void @mlxsw_cmd_mbox_config_profile_fid_flood_table_size_set(i8* %55, i32 %conv45) #10, !dbg !10534
  br label %if.end46, !dbg !10535

if.end46:                                         ; preds = %if.then39, %if.end34
  %58 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !10536
  %59 = bitcast %struct.mlxsw_config_profile* %58 to i16*, !dbg !10538
  %bf.load47 = load i16, i16* %59, align 4, !dbg !10538
  %bf.lshr48 = lshr i16 %bf.load47, 7, !dbg !10538
  %bf.clear49 = and i16 %bf.lshr48, 1, !dbg !10538
  %tobool50 = icmp ne i16 %bf.clear49, 0, !dbg !10536
  br i1 %tobool50, label %if.then51, label %if.end53, !dbg !10539

if.then51:                                        ; preds = %if.end46
  %60 = load i8*, i8** %mbox.addr, align 8, !dbg !10540
  call void @mlxsw_cmd_mbox_config_profile_set_flood_mode_set(i8* %60, i32 1) #10, !dbg !10542
  %61 = load i8*, i8** %mbox.addr, align 8, !dbg !10543
  %62 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !10544
  %flood_mode = getelementptr inbounds %struct.mlxsw_config_profile, %struct.mlxsw_config_profile* %62, i32 0, i32 9, !dbg !10545
  %63 = load i8, i8* %flood_mode, align 4, !dbg !10545
  %conv52 = zext i8 %63 to i32, !dbg !10544
  call void @mlxsw_cmd_mbox_config_profile_flood_mode_set(i8* %61, i32 %conv52) #10, !dbg !10546
  br label %if.end53, !dbg !10547

if.end53:                                         ; preds = %if.then51, %if.end46
  %64 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !10548
  %65 = bitcast %struct.mlxsw_config_profile* %64 to i16*, !dbg !10550
  %bf.load54 = load i16, i16* %65, align 4, !dbg !10550
  %bf.lshr55 = lshr i16 %bf.load54, 8, !dbg !10550
  %bf.clear56 = and i16 %bf.lshr55, 1, !dbg !10550
  %tobool57 = icmp ne i16 %bf.clear56, 0, !dbg !10548
  br i1 %tobool57, label %if.then58, label %if.end60, !dbg !10551

if.then58:                                        ; preds = %if.end53
  %66 = load i8*, i8** %mbox.addr, align 8, !dbg !10552
  call void @mlxsw_cmd_mbox_config_profile_set_max_ib_mc_set(i8* %66, i32 1) #10, !dbg !10554
  %67 = load i8*, i8** %mbox.addr, align 8, !dbg !10555
  %68 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !10556
  %max_ib_mc = getelementptr inbounds %struct.mlxsw_config_profile, %struct.mlxsw_config_profile* %68, i32 0, i32 14, !dbg !10557
  %69 = load i16, i16* %max_ib_mc, align 4, !dbg !10557
  %conv59 = zext i16 %69 to i32, !dbg !10556
  call void @mlxsw_cmd_mbox_config_profile_max_ib_mc_set(i8* %67, i32 %conv59) #10, !dbg !10558
  br label %if.end60, !dbg !10559

if.end60:                                         ; preds = %if.then58, %if.end53
  %70 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !10560
  %71 = bitcast %struct.mlxsw_config_profile* %70 to i16*, !dbg !10562
  %bf.load61 = load i16, i16* %71, align 4, !dbg !10562
  %bf.lshr62 = lshr i16 %bf.load61, 9, !dbg !10562
  %bf.clear63 = and i16 %bf.lshr62, 1, !dbg !10562
  %tobool64 = icmp ne i16 %bf.clear63, 0, !dbg !10560
  br i1 %tobool64, label %if.then65, label %if.end67, !dbg !10563

if.then65:                                        ; preds = %if.end60
  %72 = load i8*, i8** %mbox.addr, align 8, !dbg !10564
  call void @mlxsw_cmd_mbox_config_profile_set_max_pkey_set(i8* %72, i32 1) #10, !dbg !10566
  %73 = load i8*, i8** %mbox.addr, align 8, !dbg !10567
  %74 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !10568
  %max_pkey = getelementptr inbounds %struct.mlxsw_config_profile, %struct.mlxsw_config_profile* %74, i32 0, i32 15, !dbg !10569
  %75 = load i16, i16* %max_pkey, align 2, !dbg !10569
  %conv66 = zext i16 %75 to i32, !dbg !10568
  call void @mlxsw_cmd_mbox_config_profile_max_pkey_set(i8* %73, i32 %conv66) #10, !dbg !10570
  br label %if.end67, !dbg !10571

if.end67:                                         ; preds = %if.then65, %if.end60
  %76 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !10572
  %77 = bitcast %struct.mlxsw_config_profile* %76 to i16*, !dbg !10574
  %bf.load68 = load i16, i16* %77, align 4, !dbg !10574
  %bf.lshr69 = lshr i16 %bf.load68, 10, !dbg !10574
  %bf.clear70 = and i16 %bf.lshr69, 1, !dbg !10574
  %tobool71 = icmp ne i16 %bf.clear70, 0, !dbg !10572
  br i1 %tobool71, label %if.then72, label %if.end74, !dbg !10575

if.then72:                                        ; preds = %if.end67
  %78 = load i8*, i8** %mbox.addr, align 8, !dbg !10576
  call void @mlxsw_cmd_mbox_config_profile_set_ar_sec_set(i8* %78, i32 1) #10, !dbg !10578
  %79 = load i8*, i8** %mbox.addr, align 8, !dbg !10579
  %80 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !10580
  %ar_sec = getelementptr inbounds %struct.mlxsw_config_profile, %struct.mlxsw_config_profile* %80, i32 0, i32 16, !dbg !10581
  %81 = load i8, i8* %ar_sec, align 4, !dbg !10581
  %conv73 = zext i8 %81 to i32, !dbg !10580
  call void @mlxsw_cmd_mbox_config_profile_ar_sec_set(i8* %79, i32 %conv73) #10, !dbg !10582
  br label %if.end74, !dbg !10583

if.end74:                                         ; preds = %if.then72, %if.end67
  %82 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !10584
  %83 = bitcast %struct.mlxsw_config_profile* %82 to i16*, !dbg !10586
  %bf.load75 = load i16, i16* %83, align 4, !dbg !10586
  %bf.lshr76 = lshr i16 %bf.load75, 11, !dbg !10586
  %bf.clear77 = and i16 %bf.lshr76, 1, !dbg !10586
  %tobool78 = icmp ne i16 %bf.clear77, 0, !dbg !10584
  br i1 %tobool78, label %if.then79, label %if.end81, !dbg !10587

if.then79:                                        ; preds = %if.end74
  %84 = load i8*, i8** %mbox.addr, align 8, !dbg !10588
  call void @mlxsw_cmd_mbox_config_profile_set_adaptive_routing_group_cap_set(i8* %84, i32 1) #10, !dbg !10590
  %85 = load i8*, i8** %mbox.addr, align 8, !dbg !10591
  %86 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !10592
  %adaptive_routing_group_cap = getelementptr inbounds %struct.mlxsw_config_profile, %struct.mlxsw_config_profile* %86, i32 0, i32 17, !dbg !10593
  %87 = load i16, i16* %adaptive_routing_group_cap, align 2, !dbg !10593
  %conv80 = zext i16 %87 to i32, !dbg !10592
  call void @mlxsw_cmd_mbox_config_profile_adaptive_routing_group_cap_set(i8* %85, i32 %conv80) #10, !dbg !10594
  br label %if.end81, !dbg !10595

if.end81:                                         ; preds = %if.then79, %if.end74
  %88 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !10596
  %89 = bitcast %struct.mlxsw_config_profile* %88 to i16*, !dbg !10598
  %bf.load82 = load i16, i16* %89, align 4, !dbg !10598
  %bf.lshr83 = lshr i16 %bf.load82, 12, !dbg !10598
  %bf.clear84 = and i16 %bf.lshr83, 1, !dbg !10598
  %conv85 = zext i16 %bf.clear84 to i32, !dbg !10596
  %tobool86 = icmp ne i32 %conv85, 0, !dbg !10596
  br i1 %tobool86, label %land.lhs.true, label %if.end99, !dbg !10599

land.lhs.true:                                    ; preds = %if.end81
  %90 = load %struct.mlxsw_res*, %struct.mlxsw_res** %res.addr, align 8, !dbg !10600
  %call = call zeroext i1 @mlxsw_res_valid(%struct.mlxsw_res* %90, i32 0) #10, !dbg !10600
  br i1 %call, label %if.then88, label %if.end99, !dbg !10601

if.then88:                                        ; preds = %land.lhs.true
  %91 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10602
  %92 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !10604
  %93 = load %struct.mlxsw_res*, %struct.mlxsw_res** %res.addr, align 8, !dbg !10605
  %call89 = call i32 @mlxsw_pci_profile_get_kvd_sizes(%struct.mlxsw_pci* %91, %struct.mlxsw_config_profile* %92, %struct.mlxsw_res* %93) #10, !dbg !10606
  store i32 %call89, i32* %err, align 4, !dbg !10607
  %94 = load i32, i32* %err, align 4, !dbg !10608
  %tobool90 = icmp ne i32 %94, 0, !dbg !10608
  br i1 %tobool90, label %if.then91, label %if.end92, !dbg !10610

if.then91:                                        ; preds = %if.then88
  %95 = load i32, i32* %err, align 4, !dbg !10611
  store i32 %95, i32* %retval, align 4, !dbg !10612
  br label %return, !dbg !10612

if.end92:                                         ; preds = %if.then88
  %96 = load i8*, i8** %mbox.addr, align 8, !dbg !10613
  call void @mlxsw_cmd_mbox_config_profile_set_kvd_linear_size_set(i8* %96, i32 1) #10, !dbg !10614
  %97 = load i8*, i8** %mbox.addr, align 8, !dbg !10615
  %98 = load %struct.mlxsw_res*, %struct.mlxsw_res** %res.addr, align 8, !dbg !10616
  %call93 = call i64 @mlxsw_res_get(%struct.mlxsw_res* %98, i32 49) #10, !dbg !10616
  %conv94 = trunc i64 %call93 to i32, !dbg !10616
  call void @mlxsw_cmd_mbox_config_profile_kvd_linear_size_set(i8* %97, i32 %conv94) #10, !dbg !10617
  %99 = load i8*, i8** %mbox.addr, align 8, !dbg !10618
  call void @mlxsw_cmd_mbox_config_profile_set_kvd_hash_single_size_set(i8* %99, i32 1) #10, !dbg !10619
  %100 = load i8*, i8** %mbox.addr, align 8, !dbg !10620
  %101 = load %struct.mlxsw_res*, %struct.mlxsw_res** %res.addr, align 8, !dbg !10621
  %call95 = call i64 @mlxsw_res_get(%struct.mlxsw_res* %101, i32 47) #10, !dbg !10621
  %conv96 = trunc i64 %call95 to i32, !dbg !10621
  call void @mlxsw_cmd_mbox_config_profile_kvd_hash_single_size_set(i8* %100, i32 %conv96) #10, !dbg !10622
  %102 = load i8*, i8** %mbox.addr, align 8, !dbg !10623
  call void @mlxsw_cmd_mbox_config_profile_set_kvd_hash_double_size_set(i8* %102, i32 1) #10, !dbg !10624
  %103 = load i8*, i8** %mbox.addr, align 8, !dbg !10625
  %104 = load %struct.mlxsw_res*, %struct.mlxsw_res** %res.addr, align 8, !dbg !10626
  %call97 = call i64 @mlxsw_res_get(%struct.mlxsw_res* %104, i32 48) #10, !dbg !10626
  %conv98 = trunc i64 %call97 to i32, !dbg !10626
  call void @mlxsw_cmd_mbox_config_profile_kvd_hash_double_size_set(i8* %103, i32 %conv98) #10, !dbg !10627
  br label %if.end99, !dbg !10628

if.end99:                                         ; preds = %if.end92, %land.lhs.true, %if.end81
  store i32 0, i32* %i, align 4, !dbg !10629
  br label %for.cond, !dbg !10631

for.cond:                                         ; preds = %for.inc, %if.end99
  %105 = load i32, i32* %i, align 4, !dbg !10632
  %cmp = icmp slt i32 %105, 8, !dbg !10634
  br i1 %cmp, label %for.body, label %for.end, !dbg !10635

for.body:                                         ; preds = %for.cond
  %106 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10636
  %107 = load i8*, i8** %mbox.addr, align 8, !dbg !10637
  %108 = load i32, i32* %i, align 4, !dbg !10638
  %109 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !10639
  %swid_config = getelementptr inbounds %struct.mlxsw_config_profile, %struct.mlxsw_config_profile* %109, i32 0, i32 22, !dbg !10640
  %110 = load i32, i32* %i, align 4, !dbg !10641
  %idxprom = sext i32 %110 to i64, !dbg !10639
  %arrayidx = getelementptr [8 x %struct.mlxsw_swid_config], [8 x %struct.mlxsw_swid_config]* %swid_config, i64 0, i64 %idxprom, !dbg !10639
  call void @mlxsw_pci_config_profile_swid_config(%struct.mlxsw_pci* %106, i8* %107, i32 %108, %struct.mlxsw_swid_config* %arrayidx) #10, !dbg !10642
  br label %for.inc, !dbg !10642

for.inc:                                          ; preds = %for.body
  %111 = load i32, i32* %i, align 4, !dbg !10643
  %inc = add i32 %111, 1, !dbg !10643
  store i32 %inc, i32* %i, align 4, !dbg !10643
  br label %for.cond, !dbg !10644, !llvm.loop !10645

for.end:                                          ; preds = %for.cond
  %112 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10647
  %max_cqe_ver = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %112, i32 0, i32 10, !dbg !10649
  %113 = load i32, i32* %max_cqe_ver, align 8, !dbg !10649
  %cmp101 = icmp ugt i32 %113, 0, !dbg !10650
  br i1 %cmp101, label %if.then103, label %if.end104, !dbg !10651

if.then103:                                       ; preds = %for.end
  %114 = load i8*, i8** %mbox.addr, align 8, !dbg !10652
  call void @mlxsw_cmd_mbox_config_profile_set_cqe_version_set(i8* %114, i32 1) #10, !dbg !10654
  %115 = load i8*, i8** %mbox.addr, align 8, !dbg !10655
  call void @mlxsw_cmd_mbox_config_profile_cqe_version_set(i8* %115, i32 1) #10, !dbg !10656
  br label %if.end104, !dbg !10657

if.end104:                                        ; preds = %if.then103, %for.end
  %116 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10658
  %core = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %116, i32 0, i32 5, !dbg !10659
  %117 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !10659
  %118 = load i8*, i8** %mbox.addr, align 8, !dbg !10660
  %call105 = call i32 @mlxsw_cmd_config_profile_set(%struct.mlxsw_core* %117, i8* %118) #10, !dbg !10661
  store i32 %call105, i32* %retval, align 4, !dbg !10662
  br label %return, !dbg !10662

return:                                           ; preds = %if.end104, %if.then91
  %119 = load i32, i32* %retval, align 4, !dbg !10663
  ret i32 %119, !dbg !10663
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_aqs_init(%struct.mlxsw_pci* %mlxsw_pci, i8* %mbox) #0 !dbg !10664 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %mbox.addr = alloca i8*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %num_sdqs = alloca i8, align 1
  %sdq_log2sz = alloca i8, align 1
  %num_rdqs = alloca i8, align 1
  %rdq_log2sz = alloca i8, align 1
  %num_cqs = alloca i8, align 1
  %cq_log2sz = alloca i8, align 1
  %cqv2_log2sz = alloca i8, align 1
  %num_eqs = alloca i8, align 1
  %eq_log2sz = alloca i8, align 1
  %err = alloca i32, align 4
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !10665, metadata !DIExpression()), !dbg !10666
  store i8* %mbox, i8** %mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mbox.addr, metadata !10667, metadata !DIExpression()), !dbg !10668
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !10669, metadata !DIExpression()), !dbg !10670
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10671
  %pdev1 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %0, i32 0, i32 0, !dbg !10672
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !10672
  store %struct.pci_dev* %1, %struct.pci_dev** %pdev, align 8, !dbg !10670
  call void @llvm.dbg.declare(metadata i8* %num_sdqs, metadata !10673, metadata !DIExpression()), !dbg !10674
  call void @llvm.dbg.declare(metadata i8* %sdq_log2sz, metadata !10675, metadata !DIExpression()), !dbg !10676
  call void @llvm.dbg.declare(metadata i8* %num_rdqs, metadata !10677, metadata !DIExpression()), !dbg !10678
  call void @llvm.dbg.declare(metadata i8* %rdq_log2sz, metadata !10679, metadata !DIExpression()), !dbg !10680
  call void @llvm.dbg.declare(metadata i8* %num_cqs, metadata !10681, metadata !DIExpression()), !dbg !10682
  call void @llvm.dbg.declare(metadata i8* %cq_log2sz, metadata !10683, metadata !DIExpression()), !dbg !10684
  call void @llvm.dbg.declare(metadata i8* %cqv2_log2sz, metadata !10685, metadata !DIExpression()), !dbg !10686
  call void @llvm.dbg.declare(metadata i8* %num_eqs, metadata !10687, metadata !DIExpression()), !dbg !10688
  call void @llvm.dbg.declare(metadata i8* %eq_log2sz, metadata !10689, metadata !DIExpression()), !dbg !10690
  call void @llvm.dbg.declare(metadata i32* %err, metadata !10691, metadata !DIExpression()), !dbg !10692
  %2 = load i8*, i8** %mbox.addr, align 8, !dbg !10693
  call void @mlxsw_cmd_mbox_zero(i8* %2) #10, !dbg !10694
  %3 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10695
  %core = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %3, i32 0, i32 5, !dbg !10696
  %4 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !10696
  %5 = load i8*, i8** %mbox.addr, align 8, !dbg !10697
  %call = call i32 @mlxsw_cmd_query_aq_cap(%struct.mlxsw_core* %4, i8* %5) #10, !dbg !10698
  store i32 %call, i32* %err, align 4, !dbg !10699
  %6 = load i32, i32* %err, align 4, !dbg !10700
  %tobool = icmp ne i32 %6, 0, !dbg !10700
  br i1 %tobool, label %if.then, label %if.end, !dbg !10702

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %err, align 4, !dbg !10703
  store i32 %7, i32* %retval, align 4, !dbg !10704
  br label %return, !dbg !10704

if.end:                                           ; preds = %entry
  %8 = load i8*, i8** %mbox.addr, align 8, !dbg !10705
  %call2 = call i32 @mlxsw_cmd_mbox_query_aq_cap_max_num_sdqs_get(i8* %8) #10, !dbg !10706
  %conv = trunc i32 %call2 to i8, !dbg !10706
  store i8 %conv, i8* %num_sdqs, align 1, !dbg !10707
  %9 = load i8*, i8** %mbox.addr, align 8, !dbg !10708
  %call3 = call i32 @mlxsw_cmd_mbox_query_aq_cap_log_max_sdq_sz_get(i8* %9) #10, !dbg !10709
  %conv4 = trunc i32 %call3 to i8, !dbg !10709
  store i8 %conv4, i8* %sdq_log2sz, align 1, !dbg !10710
  %10 = load i8*, i8** %mbox.addr, align 8, !dbg !10711
  %call5 = call i32 @mlxsw_cmd_mbox_query_aq_cap_max_num_rdqs_get(i8* %10) #10, !dbg !10712
  %conv6 = trunc i32 %call5 to i8, !dbg !10712
  store i8 %conv6, i8* %num_rdqs, align 1, !dbg !10713
  %11 = load i8*, i8** %mbox.addr, align 8, !dbg !10714
  %call7 = call i32 @mlxsw_cmd_mbox_query_aq_cap_log_max_rdq_sz_get(i8* %11) #10, !dbg !10715
  %conv8 = trunc i32 %call7 to i8, !dbg !10715
  store i8 %conv8, i8* %rdq_log2sz, align 1, !dbg !10716
  %12 = load i8*, i8** %mbox.addr, align 8, !dbg !10717
  %call9 = call i32 @mlxsw_cmd_mbox_query_aq_cap_max_num_cqs_get(i8* %12) #10, !dbg !10718
  %conv10 = trunc i32 %call9 to i8, !dbg !10718
  store i8 %conv10, i8* %num_cqs, align 1, !dbg !10719
  %13 = load i8*, i8** %mbox.addr, align 8, !dbg !10720
  %call11 = call i32 @mlxsw_cmd_mbox_query_aq_cap_log_max_cq_sz_get(i8* %13) #10, !dbg !10721
  %conv12 = trunc i32 %call11 to i8, !dbg !10721
  store i8 %conv12, i8* %cq_log2sz, align 1, !dbg !10722
  %14 = load i8*, i8** %mbox.addr, align 8, !dbg !10723
  %call13 = call i32 @mlxsw_cmd_mbox_query_aq_cap_log_max_cqv2_sz_get(i8* %14) #10, !dbg !10724
  %conv14 = trunc i32 %call13 to i8, !dbg !10724
  store i8 %conv14, i8* %cqv2_log2sz, align 1, !dbg !10725
  %15 = load i8*, i8** %mbox.addr, align 8, !dbg !10726
  %call15 = call i32 @mlxsw_cmd_mbox_query_aq_cap_max_num_eqs_get(i8* %15) #10, !dbg !10727
  %conv16 = trunc i32 %call15 to i8, !dbg !10727
  store i8 %conv16, i8* %num_eqs, align 1, !dbg !10728
  %16 = load i8*, i8** %mbox.addr, align 8, !dbg !10729
  %call17 = call i32 @mlxsw_cmd_mbox_query_aq_cap_log_max_eq_sz_get(i8* %16) #10, !dbg !10730
  %conv18 = trunc i32 %call17 to i8, !dbg !10730
  store i8 %conv18, i8* %eq_log2sz, align 1, !dbg !10731
  %17 = load i8, i8* %num_sdqs, align 1, !dbg !10732
  %conv19 = zext i8 %17 to i32, !dbg !10732
  %18 = load i8, i8* %num_rdqs, align 1, !dbg !10734
  %conv20 = zext i8 %18 to i32, !dbg !10734
  %add = add i32 %conv19, %conv20, !dbg !10735
  %19 = load i8, i8* %num_cqs, align 1, !dbg !10736
  %conv21 = zext i8 %19 to i32, !dbg !10736
  %cmp = icmp sgt i32 %add, %conv21, !dbg !10737
  br i1 %cmp, label %if.then34, label %lor.lhs.false, !dbg !10738

lor.lhs.false:                                    ; preds = %if.end
  %20 = load i8, i8* %num_sdqs, align 1, !dbg !10739
  %conv23 = zext i8 %20 to i32, !dbg !10739
  %cmp24 = icmp slt i32 %conv23, 2, !dbg !10740
  br i1 %cmp24, label %if.then34, label %lor.lhs.false26, !dbg !10741

lor.lhs.false26:                                  ; preds = %lor.lhs.false
  %21 = load i8, i8* %num_cqs, align 1, !dbg !10742
  %conv27 = zext i8 %21 to i32, !dbg !10742
  %cmp28 = icmp sgt i32 %conv27, 96, !dbg !10743
  br i1 %cmp28, label %if.then34, label %lor.lhs.false30, !dbg !10744

lor.lhs.false30:                                  ; preds = %lor.lhs.false26
  %22 = load i8, i8* %num_eqs, align 1, !dbg !10745
  %conv31 = zext i8 %22 to i32, !dbg !10745
  %cmp32 = icmp ne i32 %conv31, 2, !dbg !10746
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !10747

if.then34:                                        ; preds = %lor.lhs.false30, %lor.lhs.false26, %lor.lhs.false, %if.end
  %23 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !10748
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %23, i32 0, i32 41, !dbg !10748
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.133, i64 0, i64 0)) #11, !dbg !10748
  store i32 -22, i32* %retval, align 4, !dbg !10750
  br label %return, !dbg !10750

if.end35:                                         ; preds = %lor.lhs.false30
  %24 = load i8, i8* %sdq_log2sz, align 1, !dbg !10751
  %conv36 = zext i8 %24 to i32, !dbg !10751
  %shl = shl i32 1, %conv36, !dbg !10753
  %cmp37 = icmp ne i32 %shl, 1024, !dbg !10754
  br i1 %cmp37, label %if.then61, label %lor.lhs.false39, !dbg !10755

lor.lhs.false39:                                  ; preds = %if.end35
  %25 = load i8, i8* %rdq_log2sz, align 1, !dbg !10756
  %conv40 = zext i8 %25 to i32, !dbg !10756
  %shl41 = shl i32 1, %conv40, !dbg !10757
  %cmp42 = icmp ne i32 %shl41, 1024, !dbg !10758
  br i1 %cmp42, label %if.then61, label %lor.lhs.false44, !dbg !10759

lor.lhs.false44:                                  ; preds = %lor.lhs.false39
  %26 = load i8, i8* %cq_log2sz, align 1, !dbg !10760
  %conv45 = zext i8 %26 to i32, !dbg !10760
  %shl46 = shl i32 1, %conv45, !dbg !10761
  %cmp47 = icmp ne i32 %shl46, 2048, !dbg !10762
  br i1 %cmp47, label %if.then61, label %lor.lhs.false49, !dbg !10763

lor.lhs.false49:                                  ; preds = %lor.lhs.false44
  %27 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10764
  %max_cqe_ver = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %27, i32 0, i32 10, !dbg !10765
  %28 = load i32, i32* %max_cqe_ver, align 8, !dbg !10765
  %cmp50 = icmp eq i32 %28, 2, !dbg !10766
  br i1 %cmp50, label %land.lhs.true, label %lor.lhs.false56, !dbg !10767

land.lhs.true:                                    ; preds = %lor.lhs.false49
  %29 = load i8, i8* %cqv2_log2sz, align 1, !dbg !10768
  %conv52 = zext i8 %29 to i32, !dbg !10768
  %shl53 = shl i32 1, %conv52, !dbg !10769
  %cmp54 = icmp ne i32 %shl53, 1024, !dbg !10770
  br i1 %cmp54, label %if.then61, label %lor.lhs.false56, !dbg !10771

lor.lhs.false56:                                  ; preds = %land.lhs.true, %lor.lhs.false49
  %30 = load i8, i8* %eq_log2sz, align 1, !dbg !10772
  %conv57 = zext i8 %30 to i32, !dbg !10772
  %shl58 = shl i32 1, %conv57, !dbg !10773
  %cmp59 = icmp ne i32 %shl58, 2048, !dbg !10774
  br i1 %cmp59, label %if.then61, label %if.end63, !dbg !10775

if.then61:                                        ; preds = %lor.lhs.false56, %land.lhs.true, %lor.lhs.false44, %lor.lhs.false39, %if.end35
  %31 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !10776
  %dev62 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %31, i32 0, i32 41, !dbg !10776
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev62, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.134, i64 0, i64 0)) #11, !dbg !10776
  store i32 -22, i32* %retval, align 4, !dbg !10778
  br label %return, !dbg !10778

if.end63:                                         ; preds = %lor.lhs.false56
  %32 = load i8, i8* %num_sdqs, align 1, !dbg !10779
  %33 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10780
  %num_sdq_cqs = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %33, i32 0, i32 11, !dbg !10781
  store i8 %32, i8* %num_sdq_cqs, align 4, !dbg !10782
  %34 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10783
  %35 = load i8*, i8** %mbox.addr, align 8, !dbg !10784
  %36 = load i8, i8* %num_eqs, align 1, !dbg !10785
  %call64 = call i32 @mlxsw_pci_queue_group_init(%struct.mlxsw_pci* %34, i8* %35, %struct.mlxsw_pci_queue_ops* @mlxsw_pci_eq_ops, i8 zeroext %36) #10, !dbg !10786
  store i32 %call64, i32* %err, align 4, !dbg !10787
  %37 = load i32, i32* %err, align 4, !dbg !10788
  %tobool65 = icmp ne i32 %37, 0, !dbg !10788
  br i1 %tobool65, label %if.then66, label %if.end68, !dbg !10790

if.then66:                                        ; preds = %if.end63
  %38 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !10791
  %dev67 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %38, i32 0, i32 41, !dbg !10791
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev67, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.135, i64 0, i64 0)) #11, !dbg !10791
  %39 = load i32, i32* %err, align 4, !dbg !10793
  store i32 %39, i32* %retval, align 4, !dbg !10794
  br label %return, !dbg !10794

if.end68:                                         ; preds = %if.end63
  %40 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10795
  %41 = load i8*, i8** %mbox.addr, align 8, !dbg !10796
  %42 = load i8, i8* %num_cqs, align 1, !dbg !10797
  %call69 = call i32 @mlxsw_pci_queue_group_init(%struct.mlxsw_pci* %40, i8* %41, %struct.mlxsw_pci_queue_ops* @mlxsw_pci_cq_ops, i8 zeroext %42) #10, !dbg !10798
  store i32 %call69, i32* %err, align 4, !dbg !10799
  %43 = load i32, i32* %err, align 4, !dbg !10800
  %tobool70 = icmp ne i32 %43, 0, !dbg !10800
  br i1 %tobool70, label %if.then71, label %if.end73, !dbg !10802

if.then71:                                        ; preds = %if.end68
  %44 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !10803
  %dev72 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %44, i32 0, i32 41, !dbg !10803
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev72, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.136, i64 0, i64 0)) #11, !dbg !10803
  br label %err_cqs_init, !dbg !10805

if.end73:                                         ; preds = %if.end68
  %45 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10806
  %46 = load i8*, i8** %mbox.addr, align 8, !dbg !10807
  %47 = load i8, i8* %num_sdqs, align 1, !dbg !10808
  %call74 = call i32 @mlxsw_pci_queue_group_init(%struct.mlxsw_pci* %45, i8* %46, %struct.mlxsw_pci_queue_ops* @mlxsw_pci_sdq_ops, i8 zeroext %47) #10, !dbg !10809
  store i32 %call74, i32* %err, align 4, !dbg !10810
  %48 = load i32, i32* %err, align 4, !dbg !10811
  %tobool75 = icmp ne i32 %48, 0, !dbg !10811
  br i1 %tobool75, label %if.then76, label %if.end78, !dbg !10813

if.then76:                                        ; preds = %if.end73
  %49 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !10814
  %dev77 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %49, i32 0, i32 41, !dbg !10814
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev77, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.137, i64 0, i64 0)) #11, !dbg !10814
  br label %err_sdqs_init, !dbg !10816

if.end78:                                         ; preds = %if.end73
  %50 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10817
  %51 = load i8*, i8** %mbox.addr, align 8, !dbg !10818
  %52 = load i8, i8* %num_rdqs, align 1, !dbg !10819
  %call79 = call i32 @mlxsw_pci_queue_group_init(%struct.mlxsw_pci* %50, i8* %51, %struct.mlxsw_pci_queue_ops* @mlxsw_pci_rdq_ops, i8 zeroext %52) #10, !dbg !10820
  store i32 %call79, i32* %err, align 4, !dbg !10821
  %53 = load i32, i32* %err, align 4, !dbg !10822
  %tobool80 = icmp ne i32 %53, 0, !dbg !10822
  br i1 %tobool80, label %if.then81, label %if.end83, !dbg !10824

if.then81:                                        ; preds = %if.end78
  %54 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !10825
  %dev82 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %54, i32 0, i32 41, !dbg !10825
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev82, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.138, i64 0, i64 0)) #11, !dbg !10825
  br label %err_rdqs_init, !dbg !10827

if.end83:                                         ; preds = %if.end78
  %55 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10828
  %cmd = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %55, i32 0, i32 7, !dbg !10829
  %nopoll = getelementptr inbounds %struct.anon.138, %struct.anon.138* %cmd, i32 0, i32 3, !dbg !10830
  store i8 1, i8* %nopoll, align 8, !dbg !10831
  store i32 0, i32* %retval, align 4, !dbg !10832
  br label %return, !dbg !10832

err_rdqs_init:                                    ; preds = %if.then81
  call void @llvm.dbg.label(metadata !10833), !dbg !10834
  %56 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10835
  call void @mlxsw_pci_queue_group_fini(%struct.mlxsw_pci* %56, %struct.mlxsw_pci_queue_ops* @mlxsw_pci_sdq_ops) #10, !dbg !10836
  br label %err_sdqs_init, !dbg !10836

err_sdqs_init:                                    ; preds = %err_rdqs_init, %if.then76
  call void @llvm.dbg.label(metadata !10837), !dbg !10838
  %57 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10839
  call void @mlxsw_pci_queue_group_fini(%struct.mlxsw_pci* %57, %struct.mlxsw_pci_queue_ops* @mlxsw_pci_cq_ops) #10, !dbg !10840
  br label %err_cqs_init, !dbg !10840

err_cqs_init:                                     ; preds = %err_sdqs_init, %if.then71
  call void @llvm.dbg.label(metadata !10841), !dbg !10842
  %58 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10843
  call void @mlxsw_pci_queue_group_fini(%struct.mlxsw_pci* %58, %struct.mlxsw_pci_queue_ops* @mlxsw_pci_eq_ops) #10, !dbg !10844
  %59 = load i32, i32* %err, align 4, !dbg !10845
  store i32 %59, i32* %retval, align 4, !dbg !10846
  br label %return, !dbg !10846

return:                                           ; preds = %err_cqs_init, %if.end83, %if.then66, %if.then61, %if.then34, %if.then
  %60 = load i32, i32* %retval, align 4, !dbg !10847
  ret i32 %60, !dbg !10847
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #0 !dbg !10848 {
entry:
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %flags.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !10856, metadata !DIExpression()), !dbg !10857
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !10858, metadata !DIExpression()), !dbg !10859
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !10860, metadata !DIExpression()), !dbg !10861
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10862, metadata !DIExpression()), !dbg !10863
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !10864, metadata !DIExpression()), !dbg !10865
  %0 = load i32, i32* %irq.addr, align 4, !dbg !10866
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !10867
  %2 = load i64, i64* %flags.addr, align 8, !dbg !10868
  %3 = load i8*, i8** %name.addr, align 8, !dbg !10869
  %4 = load i8*, i8** %dev.addr, align 8, !dbg !10870
  %call = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4) #10, !dbg !10871
  ret i32 %call, !dbg !10872
}

; Function Attrs: noredzone
declare dso_local i32 @pci_irq_vector(%struct.pci_dev*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_eq_irq_handler(i32 %irq, i8* %dev_id) #0 !dbg !10873 {
entry:
  %irq.addr = alloca i32, align 4
  %dev_id.addr = alloca i8*, align 8
  %mlxsw_pci = alloca %struct.mlxsw_pci*, align 8
  %q = alloca %struct.mlxsw_pci_queue*, align 8
  %i = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !10874, metadata !DIExpression()), !dbg !10875
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !10876, metadata !DIExpression()), !dbg !10877
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci, metadata !10878, metadata !DIExpression()), !dbg !10879
  %0 = load i8*, i8** %dev_id.addr, align 8, !dbg !10880
  %1 = bitcast i8* %0 to %struct.mlxsw_pci*, !dbg !10880
  store %struct.mlxsw_pci* %1, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !10879
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q, metadata !10881, metadata !DIExpression()), !dbg !10882
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10883, metadata !DIExpression()), !dbg !10884
  store i32 0, i32* %i, align 4, !dbg !10885
  br label %for.cond, !dbg !10887

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !10888
  %cmp = icmp slt i32 %2, 2, !dbg !10890
  br i1 %cmp, label %for.body, label %for.end, !dbg !10891

for.body:                                         ; preds = %for.cond
  %3 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !10892
  %4 = load i32, i32* %i, align 4, !dbg !10894
  %conv = trunc i32 %4 to i8, !dbg !10894
  %call = call %struct.mlxsw_pci_queue* @mlxsw_pci_eq_get(%struct.mlxsw_pci* %3, i8 zeroext %conv) #10, !dbg !10895
  store %struct.mlxsw_pci_queue* %call, %struct.mlxsw_pci_queue** %q, align 8, !dbg !10896
  %5 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q, align 8, !dbg !10897
  call void @mlxsw_pci_queue_tasklet_schedule(%struct.mlxsw_pci_queue* %5) #10, !dbg !10898
  br label %for.inc, !dbg !10899

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !10900
  %inc = add i32 %6, 1, !dbg !10900
  store i32 %inc, i32* %i, align 4, !dbg !10900
  br label %for.cond, !dbg !10901, !llvm.loop !10902

for.end:                                          ; preds = %for.cond
  ret i32 1, !dbg !10904
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_aqs_fini(%struct.mlxsw_pci* %mlxsw_pci) #0 !dbg !10905 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !10906, metadata !DIExpression()), !dbg !10907
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10908
  %cmd = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %0, i32 0, i32 7, !dbg !10909
  %nopoll = getelementptr inbounds %struct.anon.138, %struct.anon.138* %cmd, i32 0, i32 3, !dbg !10910
  store i8 0, i8* %nopoll, align 8, !dbg !10911
  %1 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10912
  call void @mlxsw_pci_queue_group_fini(%struct.mlxsw_pci* %1, %struct.mlxsw_pci_queue_ops* @mlxsw_pci_rdq_ops) #10, !dbg !10913
  %2 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10914
  call void @mlxsw_pci_queue_group_fini(%struct.mlxsw_pci* %2, %struct.mlxsw_pci_queue_ops* @mlxsw_pci_sdq_ops) #10, !dbg !10915
  %3 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10916
  call void @mlxsw_pci_queue_group_fini(%struct.mlxsw_pci* %3, %struct.mlxsw_pci_queue_ops* @mlxsw_pci_cq_ops) #10, !dbg !10917
  %4 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10918
  call void @mlxsw_pci_queue_group_fini(%struct.mlxsw_pci* %4, %struct.mlxsw_pci_queue_ops* @mlxsw_pci_eq_ops) #10, !dbg !10919
  ret void, !dbg !10920
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_fw_area_fini(%struct.mlxsw_pci* %mlxsw_pci) #0 !dbg !10921 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %mem_item = alloca %struct.mlxsw_pci_mem_item*, align 8
  %i = alloca i32, align 4
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !10922, metadata !DIExpression()), !dbg !10923
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_mem_item** %mem_item, metadata !10924, metadata !DIExpression()), !dbg !10925
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10926, metadata !DIExpression()), !dbg !10927
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10928
  %core = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %0, i32 0, i32 5, !dbg !10929
  %1 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !10929
  %call = call i32 @mlxsw_cmd_unmap_fa(%struct.mlxsw_core* %1) #10, !dbg !10930
  store i32 0, i32* %i, align 4, !dbg !10931
  br label %for.cond, !dbg !10933

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !10934
  %3 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10936
  %fw_area = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %3, i32 0, i32 6, !dbg !10937
  %count = getelementptr inbounds %struct.anon.137, %struct.anon.137* %fw_area, i32 0, i32 1, !dbg !10938
  %4 = load i32, i32* %count, align 8, !dbg !10938
  %cmp = icmp ult i32 %2, %4, !dbg !10939
  br i1 %cmp, label %for.body, label %for.end, !dbg !10940

for.body:                                         ; preds = %for.cond
  %5 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10941
  %fw_area1 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %5, i32 0, i32 6, !dbg !10943
  %items = getelementptr inbounds %struct.anon.137, %struct.anon.137* %fw_area1, i32 0, i32 0, !dbg !10944
  %6 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %items, align 8, !dbg !10944
  %7 = load i32, i32* %i, align 4, !dbg !10945
  %idxprom = sext i32 %7 to i64, !dbg !10941
  %arrayidx = getelementptr %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %6, i64 %idxprom, !dbg !10941
  store %struct.mlxsw_pci_mem_item* %arrayidx, %struct.mlxsw_pci_mem_item** %mem_item, align 8, !dbg !10946
  %8 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10947
  %pdev = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %8, i32 0, i32 0, !dbg !10948
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !10948
  %10 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %mem_item, align 8, !dbg !10949
  %size = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %10, i32 0, i32 2, !dbg !10950
  %11 = load i64, i64* %size, align 8, !dbg !10950
  %12 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %mem_item, align 8, !dbg !10951
  %buf = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %12, i32 0, i32 0, !dbg !10952
  %13 = load i8*, i8** %buf, align 8, !dbg !10952
  %14 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %mem_item, align 8, !dbg !10953
  %mapaddr = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %14, i32 0, i32 1, !dbg !10954
  %15 = load i64, i64* %mapaddr, align 8, !dbg !10954
  call void @pci_free_consistent(%struct.pci_dev* %9, i64 %11, i8* %13, i64 %15) #10, !dbg !10955
  br label %for.inc, !dbg !10956

for.inc:                                          ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !dbg !10957
  %inc = add i32 %16, 1, !dbg !10957
  store i32 %inc, i32* %i, align 4, !dbg !10957
  br label %for.cond, !dbg !10958, !llvm.loop !10959

for.end:                                          ; preds = %for.cond
  %17 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10961
  %fw_area2 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %17, i32 0, i32 6, !dbg !10962
  %items3 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %fw_area2, i32 0, i32 0, !dbg !10963
  %18 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %items3, align 8, !dbg !10963
  %19 = bitcast %struct.mlxsw_pci_mem_item* %18 to i8*, !dbg !10961
  call void @kfree(i8* %19) #10, !dbg !10964
  ret void, !dbg !10965
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_free_irq_vectors(%struct.mlxsw_pci* %mlxsw_pci) #0 !dbg !10966 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !10967, metadata !DIExpression()), !dbg !10968
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !10969
  %pdev = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %0, i32 0, i32 0, !dbg !10970
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !10970
  call void @pci_free_irq_vectors(%struct.pci_dev* %1) #10, !dbg !10971
  ret void, !dbg !10972
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_free(i8* %mbox) #0 !dbg !10973 {
entry:
  %mbox.addr = alloca i8*, align 8
  store i8* %mbox, i8** %mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mbox.addr, metadata !10976, metadata !DIExpression()), !dbg !10977
  %0 = load i8*, i8** %mbox.addr, align 8, !dbg !10978
  call void @kfree(i8* %0) #10, !dbg !10979
  ret void, !dbg !10980
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_sys_ready_wait(%struct.mlxsw_pci* %mlxsw_pci, %struct.pci_device_id* %id, i32* %p_sys_status) #0 !dbg !10981 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !9819, metadata !DIExpression()), !dbg !10984
  %retval = alloca i32, align 4
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %id.addr = alloca %struct.pci_device_id*, align 8
  %p_sys_status.addr = alloca i32*, align 8
  %end = alloca i64, align 8
  %val = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !10986, metadata !DIExpression()), !dbg !10987
  store %struct.pci_device_id* %id, %struct.pci_device_id** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %id.addr, metadata !10988, metadata !DIExpression()), !dbg !10989
  store i32* %p_sys_status, i32** %p_sys_status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p_sys_status.addr, metadata !10990, metadata !DIExpression()), !dbg !10991
  call void @llvm.dbg.declare(metadata i64* %end, metadata !10992, metadata !DIExpression()), !dbg !10993
  call void @llvm.dbg.declare(metadata i32* %val, metadata !10994, metadata !DIExpression()), !dbg !10995
  %0 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !10996
  %device = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %0, i32 0, i32 1, !dbg !10998
  %1 = load i32, i32* %device, align 4, !dbg !10998
  %cmp = icmp eq i32 %1, 51000, !dbg !10999
  br i1 %cmp, label %if.then, label %if.end, !dbg !11000

if.then:                                          ; preds = %entry
  call void @msleep(i32 900000) #10, !dbg !11001
  store i32 0, i32* %retval, align 4, !dbg !11003
  br label %return, !dbg !11003

if.end:                                           ; preds = %entry
  call void @msleep(i32 200) #10, !dbg !11004
  %2 = load volatile i64, i64* @jiffies, align 8, !dbg !11005
  store i32 900000, i32* %m.addr.i, align 4
  %3 = load i32, i32* %m.addr.i, align 4, !dbg !11006
  %4 = call i1 @llvm.is.constant.i32(i32 %3) #12, !dbg !11007
  br i1 %4, label %if.then.i, label %if.else.i, !dbg !11008

if.then.i:                                        ; preds = %if.end
  %5 = load i32, i32* %m.addr.i, align 4, !dbg !11009
  %cmp.i = icmp slt i32 %5, 0, !dbg !11010
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !11011

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !11012
  br label %msecs_to_jiffies.exit, !dbg !11012

if.end.i:                                         ; preds = %if.then.i
  %6 = load i32, i32* %m.addr.i, align 4, !dbg !11013
  %call.i = call i64 @_msecs_to_jiffies(i32 %6) #14, !dbg !11014
  store i64 %call.i, i64* %retval.i, align 8, !dbg !11015
  br label %msecs_to_jiffies.exit, !dbg !11015

if.else.i:                                        ; preds = %if.end
  %7 = load i32, i32* %m.addr.i, align 4, !dbg !11016
  %call2.i = call i64 @__msecs_to_jiffies(i32 %7) #14, !dbg !11017
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !11018
  br label %msecs_to_jiffies.exit, !dbg !11018

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %8 = load i64, i64* %retval.i, align 8, !dbg !11019
  %add = add i64 %2, %8, !dbg !11020
  store i64 %add, i64* %end, align 8, !dbg !11021
  br label %do.body, !dbg !11022

do.body:                                          ; preds = %do.cond, %msecs_to_jiffies.exit
  %9 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !11023
  %hw_addr = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %9, i32 0, i32 1, !dbg !11023
  %10 = load i8*, i8** %hw_addr, align 8, !dbg !11023
  %add.ptr = getelementptr i8, i8* %10, i64 661572, !dbg !11023
  %call1 = call i32 @ioread32be(i8* %add.ptr) #10, !dbg !11023
  store i32 %call1, i32* %val, align 4, !dbg !11025
  %11 = load i32, i32* %val, align 4, !dbg !11026
  %and = and i32 %11, 65535, !dbg !11028
  %cmp2 = icmp eq i32 %and, 94, !dbg !11029
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !11030

if.then3:                                         ; preds = %do.body
  store i32 0, i32* %retval, align 4, !dbg !11031
  br label %return, !dbg !11031

if.end4:                                          ; preds = %do.body
  call void @___might_sleep(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22, i64 0, i64 0), i32 1358, i32 0) #10, !dbg !11032
  %call5 = call i32 @_cond_resched() #10, !dbg !11032
  store i32 %call5, i32* %tmp, align 4, !dbg !11032
  %12 = load i32, i32* %tmp, align 4, !dbg !11032
  br label %do.cond, !dbg !11034

do.cond:                                          ; preds = %if.end4
  %13 = load volatile i64, i64* @jiffies, align 8, !dbg !11035
  %14 = load i64, i64* %end, align 8, !dbg !11035
  %sub = sub i64 %13, %14, !dbg !11035
  %cmp6 = icmp slt i64 %sub, 0, !dbg !11035
  br i1 %cmp6, label %do.body, label %do.end, !dbg !11034, !llvm.loop !11036

do.end:                                           ; preds = %do.cond
  %15 = load i32, i32* %val, align 4, !dbg !11038
  %and7 = and i32 %15, 65535, !dbg !11039
  %16 = load i32*, i32** %p_sys_status.addr, align 8, !dbg !11040
  store i32 %and7, i32* %16, align 4, !dbg !11041
  store i32 -16, i32* %retval, align 4, !dbg !11042
  br label %return, !dbg !11042

return:                                           ; preds = %do.end, %if.then3, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !11043
  ret i32 %17, !dbg !11043
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_mrsr_pack(i8* %payload) #0 !dbg !11044 {
entry:
  %payload.addr = alloca i8*, align 8
  store i8* %payload, i8** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %payload.addr, metadata !11045, metadata !DIExpression()), !dbg !11046
  %0 = load i8*, i8** %payload.addr, align 8, !dbg !11047
  %1 = load i16, i16* getelementptr inbounds (%struct.mlxsw_reg_info, %struct.mlxsw_reg_info* @mlxsw_reg_mrsr, i32 0, i32 1), align 2, !dbg !11047
  %conv = zext i16 %1 to i64, !dbg !11047
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %conv, i1 false), !dbg !11047
  %2 = load i8*, i8** %payload.addr, align 8, !dbg !11048
  call void @mlxsw_reg_mrsr_command_set(i8* %2, i32 1) #10, !dbg !11049
  ret void, !dbg !11050
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_reg_write(%struct.mlxsw_core*, %struct.mlxsw_reg_info*, i8*) #2

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #2

; Function Attrs: noredzone
declare dso_local i32 @ioread32be(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @___might_sleep(i8* %file, i32 %line, i32 %preempt_offset) #0 !dbg !11051 {
entry:
  %file.addr = alloca i8*, align 8
  %line.addr = alloca i32, align 4
  %preempt_offset.addr = alloca i32, align 4
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !11055, metadata !DIExpression()), !dbg !11056
  store i32 %line, i32* %line.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %line.addr, metadata !11057, metadata !DIExpression()), !dbg !11058
  store i32 %preempt_offset, i32* %preempt_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %preempt_offset.addr, metadata !11059, metadata !DIExpression()), !dbg !11060
  ret void, !dbg !11061
}

; Function Attrs: noredzone
declare dso_local i32 @_cond_resched() #2

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #0 !dbg !11062 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !11063, metadata !DIExpression()), !dbg !11064
  %0 = load i32, i32* %m.addr, align 4, !dbg !11065
  %conv = zext i32 %0 to i64, !dbg !11065
  %add = add i64 %conv, 4, !dbg !11066
  %sub = sub i64 %add, 1, !dbg !11067
  %div = sdiv i64 %sub, 4, !dbg !11068
  ret i64 %div, !dbg !11069
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_reg_mrsr_command_set(i8* %buf, i32 %val) #0 !dbg !11070 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11073, metadata !DIExpression()), !dbg !11074
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11075, metadata !DIExpression()), !dbg !11074
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11074
  %1 = load i32, i32* %val.addr, align 4, !dbg !11074
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_reg_mrsr_command_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11074
  ret void, !dbg !11074
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__mlxsw_item_set32(i8* %buf, %struct.mlxsw_item* %item, i16 zeroext %index, i32 %val) #0 !dbg !11076 {
entry:
  %buf.addr = alloca i8*, align 8
  %item.addr = alloca %struct.mlxsw_item*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  %offset = alloca i32, align 4
  %b = alloca i32*, align 8
  %mask = alloca i32, align 4
  %tmp = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11081, metadata !DIExpression()), !dbg !11082
  store %struct.mlxsw_item* %item, %struct.mlxsw_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_item** %item.addr, metadata !11083, metadata !DIExpression()), !dbg !11084
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !11085, metadata !DIExpression()), !dbg !11086
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11087, metadata !DIExpression()), !dbg !11088
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !11089, metadata !DIExpression()), !dbg !11090
  %0 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11091
  %1 = load i16, i16* %index.addr, align 2, !dbg !11092
  %call = call i32 @__mlxsw_item_offset(%struct.mlxsw_item* %0, i16 zeroext %1, i64 4) #10, !dbg !11093
  store i32 %call, i32* %offset, align 4, !dbg !11090
  call void @llvm.dbg.declare(metadata i32** %b, metadata !11094, metadata !DIExpression()), !dbg !11095
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !11096
  %3 = bitcast i8* %2 to i32*, !dbg !11097
  store i32* %3, i32** %b, align 8, !dbg !11095
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !11098, metadata !DIExpression()), !dbg !11099
  %4 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11100
  %size = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %4, i32 0, i32 6, !dbg !11100
  %bits = bitcast %union.anon.140* %size to i8*, !dbg !11100
  %5 = load i8, i8* %bits, align 2, !dbg !11100
  %conv = zext i8 %5 to i32, !dbg !11100
  %sub = sub i32 %conv, 1, !dbg !11100
  %sub1 = sub i32 63, %sub, !dbg !11100
  %sh_prom = zext i32 %sub1 to i64, !dbg !11100
  %shr = lshr i64 -1, %sh_prom, !dbg !11100
  %and = and i64 -1, %shr, !dbg !11100
  %add = add i64 0, %and, !dbg !11100
  %6 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11101
  %shift = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %6, i32 0, i32 3, !dbg !11102
  %7 = load i8, i8* %shift, align 2, !dbg !11102
  %conv2 = zext i8 %7 to i32, !dbg !11101
  %sh_prom3 = zext i32 %conv2 to i64, !dbg !11103
  %shl = shl i64 %add, %sh_prom3, !dbg !11103
  %conv4 = trunc i64 %shl to i32, !dbg !11100
  store i32 %conv4, i32* %mask, align 4, !dbg !11099
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !11104, metadata !DIExpression()), !dbg !11105
  %8 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11106
  %no_real_shift = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %8, i32 0, i32 5, !dbg !11108
  %9 = load i8, i8* %no_real_shift, align 8, !dbg !11108
  %tobool = trunc i8 %9 to i1, !dbg !11108
  br i1 %tobool, label %if.end, label %if.then, !dbg !11109

if.then:                                          ; preds = %entry
  %10 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11110
  %shift5 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %10, i32 0, i32 3, !dbg !11111
  %11 = load i8, i8* %shift5, align 2, !dbg !11111
  %conv6 = zext i8 %11 to i32, !dbg !11110
  %12 = load i32, i32* %val.addr, align 4, !dbg !11112
  %shl7 = shl i32 %12, %conv6, !dbg !11112
  store i32 %shl7, i32* %val.addr, align 4, !dbg !11112
  br label %if.end, !dbg !11113

if.end:                                           ; preds = %if.then, %entry
  %13 = load i32, i32* %mask, align 4, !dbg !11114
  %14 = load i32, i32* %val.addr, align 4, !dbg !11115
  %and8 = and i32 %14, %13, !dbg !11115
  store i32 %and8, i32* %val.addr, align 4, !dbg !11115
  %15 = load i32*, i32** %b, align 8, !dbg !11116
  %16 = load i32, i32* %offset, align 4, !dbg !11116
  %idxprom = zext i32 %16 to i64, !dbg !11116
  %arrayidx = getelementptr i32, i32* %15, i64 %idxprom, !dbg !11116
  %17 = load i32, i32* %arrayidx, align 4, !dbg !11116
  %18 = call i1 @llvm.is.constant.i32(i32 %17), !dbg !11116
  br i1 %18, label %cond.true, label %cond.false, !dbg !11116

cond.true:                                        ; preds = %if.end
  %19 = load i32*, i32** %b, align 8, !dbg !11116
  %20 = load i32, i32* %offset, align 4, !dbg !11116
  %idxprom9 = zext i32 %20 to i64, !dbg !11116
  %arrayidx10 = getelementptr i32, i32* %19, i64 %idxprom9, !dbg !11116
  %21 = load i32, i32* %arrayidx10, align 4, !dbg !11116
  %and11 = and i32 %21, 255, !dbg !11116
  %shl12 = shl i32 %and11, 24, !dbg !11116
  %22 = load i32*, i32** %b, align 8, !dbg !11116
  %23 = load i32, i32* %offset, align 4, !dbg !11116
  %idxprom13 = zext i32 %23 to i64, !dbg !11116
  %arrayidx14 = getelementptr i32, i32* %22, i64 %idxprom13, !dbg !11116
  %24 = load i32, i32* %arrayidx14, align 4, !dbg !11116
  %and15 = and i32 %24, 65280, !dbg !11116
  %shl16 = shl i32 %and15, 8, !dbg !11116
  %or = or i32 %shl12, %shl16, !dbg !11116
  %25 = load i32*, i32** %b, align 8, !dbg !11116
  %26 = load i32, i32* %offset, align 4, !dbg !11116
  %idxprom17 = zext i32 %26 to i64, !dbg !11116
  %arrayidx18 = getelementptr i32, i32* %25, i64 %idxprom17, !dbg !11116
  %27 = load i32, i32* %arrayidx18, align 4, !dbg !11116
  %and19 = and i32 %27, 16711680, !dbg !11116
  %shr20 = lshr i32 %and19, 8, !dbg !11116
  %or21 = or i32 %or, %shr20, !dbg !11116
  %28 = load i32*, i32** %b, align 8, !dbg !11116
  %29 = load i32, i32* %offset, align 4, !dbg !11116
  %idxprom22 = zext i32 %29 to i64, !dbg !11116
  %arrayidx23 = getelementptr i32, i32* %28, i64 %idxprom22, !dbg !11116
  %30 = load i32, i32* %arrayidx23, align 4, !dbg !11116
  %and24 = and i32 %30, -16777216, !dbg !11116
  %shr25 = lshr i32 %and24, 24, !dbg !11116
  %or26 = or i32 %or21, %shr25, !dbg !11116
  br label %cond.end, !dbg !11116

cond.false:                                       ; preds = %if.end
  %31 = load i32*, i32** %b, align 8, !dbg !11116
  %32 = load i32, i32* %offset, align 4, !dbg !11116
  %idxprom27 = zext i32 %32 to i64, !dbg !11116
  %arrayidx28 = getelementptr i32, i32* %31, i64 %idxprom27, !dbg !11116
  %33 = load i32, i32* %arrayidx28, align 4, !dbg !11116
  %call29 = call i32 @__fswab32(i32 %33) #13, !dbg !11116
  br label %cond.end, !dbg !11116

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or26, %cond.true ], [ %call29, %cond.false ], !dbg !11116
  store i32 %cond, i32* %tmp, align 4, !dbg !11117
  %34 = load i32, i32* %mask, align 4, !dbg !11118
  %neg = xor i32 %34, -1, !dbg !11119
  %35 = load i32, i32* %tmp, align 4, !dbg !11120
  %and30 = and i32 %35, %neg, !dbg !11120
  store i32 %and30, i32* %tmp, align 4, !dbg !11120
  %36 = load i32, i32* %val.addr, align 4, !dbg !11121
  %37 = load i32, i32* %tmp, align 4, !dbg !11122
  %or31 = or i32 %37, %36, !dbg !11122
  store i32 %or31, i32* %tmp, align 4, !dbg !11122
  %38 = load i32, i32* %tmp, align 4, !dbg !11123
  %39 = call i1 @llvm.is.constant.i32(i32 %38), !dbg !11123
  br i1 %39, label %cond.true32, label %cond.false44, !dbg !11123

cond.true32:                                      ; preds = %cond.end
  %40 = load i32, i32* %tmp, align 4, !dbg !11123
  %and33 = and i32 %40, 255, !dbg !11123
  %shl34 = shl i32 %and33, 24, !dbg !11123
  %41 = load i32, i32* %tmp, align 4, !dbg !11123
  %and35 = and i32 %41, 65280, !dbg !11123
  %shl36 = shl i32 %and35, 8, !dbg !11123
  %or37 = or i32 %shl34, %shl36, !dbg !11123
  %42 = load i32, i32* %tmp, align 4, !dbg !11123
  %and38 = and i32 %42, 16711680, !dbg !11123
  %shr39 = lshr i32 %and38, 8, !dbg !11123
  %or40 = or i32 %or37, %shr39, !dbg !11123
  %43 = load i32, i32* %tmp, align 4, !dbg !11123
  %and41 = and i32 %43, -16777216, !dbg !11123
  %shr42 = lshr i32 %and41, 24, !dbg !11123
  %or43 = or i32 %or40, %shr42, !dbg !11123
  br label %cond.end46, !dbg !11123

cond.false44:                                     ; preds = %cond.end
  %44 = load i32, i32* %tmp, align 4, !dbg !11123
  %call45 = call i32 @__fswab32(i32 %44) #13, !dbg !11123
  br label %cond.end46, !dbg !11123

cond.end46:                                       ; preds = %cond.false44, %cond.true32
  %cond47 = phi i32 [ %or43, %cond.true32 ], [ %call45, %cond.false44 ], !dbg !11123
  %45 = load i32*, i32** %b, align 8, !dbg !11124
  %46 = load i32, i32* %offset, align 4, !dbg !11125
  %idxprom48 = zext i32 %46 to i64, !dbg !11124
  %arrayidx49 = getelementptr i32, i32* %45, i64 %idxprom48, !dbg !11124
  store i32 %cond47, i32* %arrayidx49, align 4, !dbg !11126
  ret void, !dbg !11127
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__mlxsw_item_offset(%struct.mlxsw_item* %item, i16 zeroext %index, i64 %typesize) #0 !dbg !11128 {
entry:
  %item.addr = alloca %struct.mlxsw_item*, align 8
  %index.addr = alloca i16, align 2
  %typesize.addr = alloca i64, align 8
  store %struct.mlxsw_item* %item, %struct.mlxsw_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_item** %item.addr, metadata !11131, metadata !DIExpression()), !dbg !11132
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !11133, metadata !DIExpression()), !dbg !11134
  store i64 %typesize, i64* %typesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %typesize.addr, metadata !11135, metadata !DIExpression()), !dbg !11136
  br label %do.body, !dbg !11137

do.body:                                          ; preds = %entry
  %0 = load i16, i16* %index.addr, align 2, !dbg !11138
  %conv = zext i16 %0 to i32, !dbg !11138
  %tobool = icmp ne i32 %conv, 0, !dbg !11138
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !11138

land.rhs:                                         ; preds = %do.body
  %1 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11138
  %step = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %1, i32 0, i32 1, !dbg !11138
  %2 = load i16, i16* %step, align 2, !dbg !11138
  %tobool1 = icmp ne i16 %2, 0, !dbg !11138
  %lnot = xor i1 %tobool1, true, !dbg !11138
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.body
  %3 = phi i1 [ false, %do.body ], [ %lnot, %land.rhs ], !dbg !11141
  %lnot2 = xor i1 %3, true, !dbg !11138
  %lnot3 = xor i1 %lnot2, true, !dbg !11138
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !11138
  %conv4 = sext i32 %lnot.ext to i64, !dbg !11138
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !11138
  br i1 %tobool5, label %if.then, label %if.end, !dbg !11142

if.then:                                          ; preds = %land.end
  br label %do.body6, !dbg !11138

do.body6:                                         ; preds = %if.then
  br label %do.body7, !dbg !11143

do.body7:                                         ; preds = %do.body6
  br label %do.end, !dbg !11145

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !11143

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.23, i64 0, i64 0), i32 29, i32 0, i64 12) #12, !dbg !11147, !srcloc !11149
  br label %do.end9, !dbg !11147

do.end9:                                          ; preds = %do.body8
  br label %do.body10, !dbg !11143

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 325) #12, !dbg !11150, !srcloc !11153
  unreachable, !dbg !11154

do.end11:                                         ; No predecessors!
  br label %do.end12, !dbg !11143

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !11143

if.end:                                           ; preds = %do.end12, %land.end
  br label %do.end13, !dbg !11142

do.end13:                                         ; preds = %if.end
  %4 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11155
  %offset = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %4, i32 0, i32 0, !dbg !11157
  %5 = load i16, i16* %offset, align 8, !dbg !11157
  %conv14 = zext i16 %5 to i64, !dbg !11155
  %6 = load i64, i64* %typesize.addr, align 8, !dbg !11158
  %rem = urem i64 %conv14, %6, !dbg !11159
  %cmp = icmp ne i64 %rem, 0, !dbg !11160
  br i1 %cmp, label %if.then26, label %lor.lhs.false, !dbg !11161

lor.lhs.false:                                    ; preds = %do.end13
  %7 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11162
  %step16 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %7, i32 0, i32 1, !dbg !11163
  %8 = load i16, i16* %step16, align 2, !dbg !11163
  %conv17 = sext i16 %8 to i64, !dbg !11162
  %9 = load i64, i64* %typesize.addr, align 8, !dbg !11164
  %rem18 = urem i64 %conv17, %9, !dbg !11165
  %cmp19 = icmp ne i64 %rem18, 0, !dbg !11166
  br i1 %cmp19, label %if.then26, label %lor.lhs.false21, !dbg !11167

lor.lhs.false21:                                  ; preds = %lor.lhs.false
  %10 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11168
  %in_step_offset = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %10, i32 0, i32 2, !dbg !11169
  %11 = load i16, i16* %in_step_offset, align 4, !dbg !11169
  %conv22 = zext i16 %11 to i64, !dbg !11168
  %12 = load i64, i64* %typesize.addr, align 8, !dbg !11170
  %rem23 = urem i64 %conv22, %12, !dbg !11171
  %cmp24 = icmp ne i64 %rem23, 0, !dbg !11172
  br i1 %cmp24, label %if.then26, label %if.end41, !dbg !11173

if.then26:                                        ; preds = %lor.lhs.false21, %lor.lhs.false, %do.end13
  %13 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11174
  %name = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %13, i32 0, i32 7, !dbg !11174
  %14 = load i8*, i8** %name, align 8, !dbg !11174
  %15 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11174
  %offset27 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %15, i32 0, i32 0, !dbg !11174
  %16 = load i16, i16* %offset27, align 8, !dbg !11174
  %conv28 = zext i16 %16 to i32, !dbg !11174
  %17 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11174
  %step29 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %17, i32 0, i32 1, !dbg !11174
  %18 = load i16, i16* %step29, align 2, !dbg !11174
  %conv30 = sext i16 %18 to i32, !dbg !11174
  %19 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11174
  %in_step_offset31 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %19, i32 0, i32 2, !dbg !11174
  %20 = load i16, i16* %in_step_offset31, align 4, !dbg !11174
  %conv32 = zext i16 %20 to i32, !dbg !11174
  %21 = load i64, i64* %typesize.addr, align 8, !dbg !11174
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.24, i64 0, i64 0), i8* %14, i32 %conv28, i32 %conv30, i32 %conv32, i64 %21) #11, !dbg !11174
  br label %do.body33, !dbg !11176

do.body33:                                        ; preds = %if.then26
  br label %do.body34, !dbg !11177

do.body34:                                        ; preds = %do.body33
  br label %do.end35, !dbg !11179

do.end35:                                         ; preds = %do.body34
  br label %do.body36, !dbg !11177

do.body36:                                        ; preds = %do.end35
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.23, i64 0, i64 0), i32 36, i32 0, i64 12) #12, !dbg !11181, !srcloc !11183
  br label %do.end37, !dbg !11181

do.end37:                                         ; preds = %do.body36
  br label %do.body38, !dbg !11177

do.body38:                                        ; preds = %do.end37
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 326) #12, !dbg !11184, !srcloc !11187
  unreachable, !dbg !11188

do.end39:                                         ; No predecessors!
  br label %do.end40, !dbg !11177

do.end40:                                         ; preds = %do.end39
  br label %if.end41, !dbg !11189

if.end41:                                         ; preds = %do.end40, %lor.lhs.false21
  %22 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11190
  %offset42 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %22, i32 0, i32 0, !dbg !11191
  %23 = load i16, i16* %offset42, align 8, !dbg !11191
  %conv43 = zext i16 %23 to i32, !dbg !11190
  %24 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11192
  %step44 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %24, i32 0, i32 1, !dbg !11193
  %25 = load i16, i16* %step44, align 2, !dbg !11193
  %conv45 = sext i16 %25 to i32, !dbg !11192
  %26 = load i16, i16* %index.addr, align 2, !dbg !11194
  %conv46 = zext i16 %26 to i32, !dbg !11194
  %mul = mul i32 %conv45, %conv46, !dbg !11195
  %add = add i32 %conv43, %mul, !dbg !11196
  %27 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11197
  %in_step_offset47 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %27, i32 0, i32 2, !dbg !11198
  %28 = load i16, i16* %in_step_offset47, align 4, !dbg !11198
  %conv48 = zext i16 %28 to i32, !dbg !11197
  %add49 = add i32 %add, %conv48, !dbg !11199
  %conv50 = sext i32 %add49 to i64, !dbg !11200
  %29 = load i64, i64* %typesize.addr, align 8, !dbg !11201
  %div = udiv i64 %conv50, %29, !dbg !11202
  %conv51 = trunc i64 %div to i32, !dbg !11203
  ret i32 %conv51, !dbg !11204
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__fswab32(i32 %val) #7 !dbg !11205 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11209, metadata !DIExpression()), !dbg !11210
  %0 = load i32, i32* %val.addr, align 4, !dbg !11211
  %call = call i32 @__arch_swab32(i32 %0) #13, !dbg !11212
  ret i32 %call, !dbg !11213
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__arch_swab32(i32 %val) #7 !dbg !11214 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11216, metadata !DIExpression()), !dbg !11217
  %0 = load i32, i32* %val.addr, align 4, !dbg !11218
  %1 = call i32 asm "bswapl $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %0) #16, !dbg !11219, !srcloc !11220
  store i32 %1, i32* %val.addr, align 4, !dbg !11219
  %2 = load i32, i32* %val.addr, align 4, !dbg !11221
  ret i32 %2, !dbg !11222
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_alloc_irq_vectors(%struct.pci_dev* %dev, i32 %min_vecs, i32 %max_vecs, i32 %flags) #0 !dbg !11223 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %min_vecs.addr = alloca i32, align 4
  %max_vecs.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !11226, metadata !DIExpression()), !dbg !11227
  store i32 %min_vecs, i32* %min_vecs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %min_vecs.addr, metadata !11228, metadata !DIExpression()), !dbg !11229
  store i32 %max_vecs, i32* %max_vecs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_vecs.addr, metadata !11230, metadata !DIExpression()), !dbg !11231
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11232, metadata !DIExpression()), !dbg !11233
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !11234
  %1 = load i32, i32* %min_vecs.addr, align 4, !dbg !11235
  %2 = load i32, i32* %max_vecs.addr, align 4, !dbg !11236
  %3 = load i32, i32* %flags.addr, align 4, !dbg !11237
  %call = call i32 @pci_alloc_irq_vectors_affinity(%struct.pci_dev* %0, i32 %1, i32 %2, i32 %3, %struct.irq_affinity* null) #10, !dbg !11238
  ret i32 %call, !dbg !11239
}

; Function Attrs: noredzone
declare dso_local i32 @pci_alloc_irq_vectors_affinity(%struct.pci_dev*, i32, i32, i32, %struct.irq_affinity*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_exec_out(%struct.mlxsw_core* %mlxsw_core, i16 zeroext %opcode, i8 zeroext %opcode_mod, i32 %in_mod, i1 zeroext %out_mbox_direct, i8* %out_mbox, i64 %out_mbox_size) #0 !dbg !11240 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %opcode.addr = alloca i16, align 2
  %opcode_mod.addr = alloca i8, align 1
  %in_mod.addr = alloca i32, align 4
  %out_mbox_direct.addr = alloca i8, align 1
  %out_mbox.addr = alloca i8*, align 8
  %out_mbox_size.addr = alloca i64, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !11243, metadata !DIExpression()), !dbg !11244
  store i16 %opcode, i16* %opcode.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %opcode.addr, metadata !11245, metadata !DIExpression()), !dbg !11246
  store i8 %opcode_mod, i8* %opcode_mod.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %opcode_mod.addr, metadata !11247, metadata !DIExpression()), !dbg !11248
  store i32 %in_mod, i32* %in_mod.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %in_mod.addr, metadata !11249, metadata !DIExpression()), !dbg !11250
  %frombool = zext i1 %out_mbox_direct to i8
  store i8 %frombool, i8* %out_mbox_direct.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %out_mbox_direct.addr, metadata !11251, metadata !DIExpression()), !dbg !11252
  store i8* %out_mbox, i8** %out_mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out_mbox.addr, metadata !11253, metadata !DIExpression()), !dbg !11254
  store i64 %out_mbox_size, i64* %out_mbox_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %out_mbox_size.addr, metadata !11255, metadata !DIExpression()), !dbg !11256
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11257
  %1 = load i16, i16* %opcode.addr, align 2, !dbg !11258
  %2 = load i8, i8* %opcode_mod.addr, align 1, !dbg !11259
  %3 = load i32, i32* %in_mod.addr, align 4, !dbg !11260
  %4 = load i8, i8* %out_mbox_direct.addr, align 1, !dbg !11261
  %tobool = trunc i8 %4 to i1, !dbg !11261
  %5 = load i8*, i8** %out_mbox.addr, align 8, !dbg !11262
  %6 = load i64, i64* %out_mbox_size.addr, align 8, !dbg !11263
  %call = call i32 @mlxsw_cmd_exec(%struct.mlxsw_core* %0, i16 zeroext %1, i8 zeroext %2, i32 %3, i1 zeroext %tobool, i1 zeroext false, i8* null, i64 0, i8* %5, i64 %6) #10, !dbg !11264
  ret i32 %call, !dbg !11265
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_cmd_exec(%struct.mlxsw_core*, i16 zeroext, i8 zeroext, i32, i1 zeroext, i1 zeroext, i8*, i64, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__mlxsw_item_get32(i8* %buf, %struct.mlxsw_item* %item, i16 zeroext %index) #0 !dbg !11266 {
entry:
  %buf.addr = alloca i8*, align 8
  %item.addr = alloca %struct.mlxsw_item*, align 8
  %index.addr = alloca i16, align 2
  %offset = alloca i32, align 4
  %b = alloca i32*, align 8
  %tmp = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11269, metadata !DIExpression()), !dbg !11270
  store %struct.mlxsw_item* %item, %struct.mlxsw_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_item** %item.addr, metadata !11271, metadata !DIExpression()), !dbg !11272
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !11273, metadata !DIExpression()), !dbg !11274
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !11275, metadata !DIExpression()), !dbg !11276
  %0 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11277
  %1 = load i16, i16* %index.addr, align 2, !dbg !11278
  %call = call i32 @__mlxsw_item_offset(%struct.mlxsw_item* %0, i16 zeroext %1, i64 4) #10, !dbg !11279
  store i32 %call, i32* %offset, align 4, !dbg !11276
  call void @llvm.dbg.declare(metadata i32** %b, metadata !11280, metadata !DIExpression()), !dbg !11281
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !11282
  %3 = bitcast i8* %2 to i32*, !dbg !11283
  store i32* %3, i32** %b, align 8, !dbg !11281
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !11284, metadata !DIExpression()), !dbg !11285
  %4 = load i32*, i32** %b, align 8, !dbg !11286
  %5 = load i32, i32* %offset, align 4, !dbg !11286
  %idxprom = zext i32 %5 to i64, !dbg !11286
  %arrayidx = getelementptr i32, i32* %4, i64 %idxprom, !dbg !11286
  %6 = load i32, i32* %arrayidx, align 4, !dbg !11286
  %7 = call i1 @llvm.is.constant.i32(i32 %6), !dbg !11286
  br i1 %7, label %cond.true, label %cond.false, !dbg !11286

cond.true:                                        ; preds = %entry
  %8 = load i32*, i32** %b, align 8, !dbg !11286
  %9 = load i32, i32* %offset, align 4, !dbg !11286
  %idxprom1 = zext i32 %9 to i64, !dbg !11286
  %arrayidx2 = getelementptr i32, i32* %8, i64 %idxprom1, !dbg !11286
  %10 = load i32, i32* %arrayidx2, align 4, !dbg !11286
  %and = and i32 %10, 255, !dbg !11286
  %shl = shl i32 %and, 24, !dbg !11286
  %11 = load i32*, i32** %b, align 8, !dbg !11286
  %12 = load i32, i32* %offset, align 4, !dbg !11286
  %idxprom3 = zext i32 %12 to i64, !dbg !11286
  %arrayidx4 = getelementptr i32, i32* %11, i64 %idxprom3, !dbg !11286
  %13 = load i32, i32* %arrayidx4, align 4, !dbg !11286
  %and5 = and i32 %13, 65280, !dbg !11286
  %shl6 = shl i32 %and5, 8, !dbg !11286
  %or = or i32 %shl, %shl6, !dbg !11286
  %14 = load i32*, i32** %b, align 8, !dbg !11286
  %15 = load i32, i32* %offset, align 4, !dbg !11286
  %idxprom7 = zext i32 %15 to i64, !dbg !11286
  %arrayidx8 = getelementptr i32, i32* %14, i64 %idxprom7, !dbg !11286
  %16 = load i32, i32* %arrayidx8, align 4, !dbg !11286
  %and9 = and i32 %16, 16711680, !dbg !11286
  %shr = lshr i32 %and9, 8, !dbg !11286
  %or10 = or i32 %or, %shr, !dbg !11286
  %17 = load i32*, i32** %b, align 8, !dbg !11286
  %18 = load i32, i32* %offset, align 4, !dbg !11286
  %idxprom11 = zext i32 %18 to i64, !dbg !11286
  %arrayidx12 = getelementptr i32, i32* %17, i64 %idxprom11, !dbg !11286
  %19 = load i32, i32* %arrayidx12, align 4, !dbg !11286
  %and13 = and i32 %19, -16777216, !dbg !11286
  %shr14 = lshr i32 %and13, 24, !dbg !11286
  %or15 = or i32 %or10, %shr14, !dbg !11286
  br label %cond.end, !dbg !11286

cond.false:                                       ; preds = %entry
  %20 = load i32*, i32** %b, align 8, !dbg !11286
  %21 = load i32, i32* %offset, align 4, !dbg !11286
  %idxprom16 = zext i32 %21 to i64, !dbg !11286
  %arrayidx17 = getelementptr i32, i32* %20, i64 %idxprom16, !dbg !11286
  %22 = load i32, i32* %arrayidx17, align 4, !dbg !11286
  %call18 = call i32 @__fswab32(i32 %22) #13, !dbg !11286
  br label %cond.end, !dbg !11286

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or15, %cond.true ], [ %call18, %cond.false ], !dbg !11286
  store i32 %cond, i32* %tmp, align 4, !dbg !11287
  %23 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11288
  %shift = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %23, i32 0, i32 3, !dbg !11289
  %24 = load i8, i8* %shift, align 2, !dbg !11289
  %conv = zext i8 %24 to i32, !dbg !11288
  %25 = load i32, i32* %tmp, align 4, !dbg !11290
  %shr19 = lshr i32 %25, %conv, !dbg !11290
  store i32 %shr19, i32* %tmp, align 4, !dbg !11290
  %26 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11291
  %size = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %26, i32 0, i32 6, !dbg !11291
  %bits = bitcast %union.anon.140* %size to i8*, !dbg !11291
  %27 = load i8, i8* %bits, align 2, !dbg !11291
  %conv20 = zext i8 %27 to i32, !dbg !11291
  %sub = sub i32 %conv20, 1, !dbg !11291
  %sub21 = sub i32 63, %sub, !dbg !11291
  %sh_prom = zext i32 %sub21 to i64, !dbg !11291
  %shr22 = lshr i64 -1, %sh_prom, !dbg !11291
  %and23 = and i64 -1, %shr22, !dbg !11291
  %add = add i64 0, %and23, !dbg !11291
  %28 = load i32, i32* %tmp, align 4, !dbg !11292
  %conv24 = zext i32 %28 to i64, !dbg !11292
  %and25 = and i64 %conv24, %add, !dbg !11292
  %conv26 = trunc i64 %and25 to i32, !dbg !11292
  store i32 %conv26, i32* %tmp, align 4, !dbg !11292
  %29 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11293
  %no_real_shift = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %29, i32 0, i32 5, !dbg !11295
  %30 = load i8, i8* %no_real_shift, align 8, !dbg !11295
  %tobool = trunc i8 %30 to i1, !dbg !11295
  br i1 %tobool, label %if.then, label %if.end, !dbg !11296

if.then:                                          ; preds = %cond.end
  %31 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11297
  %shift27 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %31, i32 0, i32 3, !dbg !11298
  %32 = load i8, i8* %shift27, align 2, !dbg !11298
  %conv28 = zext i8 %32 to i32, !dbg !11297
  %33 = load i32, i32* %tmp, align 4, !dbg !11299
  %shl29 = shl i32 %33, %conv28, !dbg !11299
  store i32 %shl29, i32* %tmp, align 4, !dbg !11299
  br label %if.end, !dbg !11300

if.end:                                           ; preds = %if.then, %cond.end
  %34 = load i32, i32* %tmp, align 4, !dbg !11301
  ret i32 %34, !dbg !11302
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__mlxsw_item_get64(i8* %buf, %struct.mlxsw_item* %item, i16 zeroext %index) #0 !dbg !11303 {
entry:
  %buf.addr = alloca i8*, align 8
  %item.addr = alloca %struct.mlxsw_item*, align 8
  %index.addr = alloca i16, align 2
  %offset = alloca i32, align 4
  %b = alloca i64*, align 8
  %tmp = alloca i64, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11306, metadata !DIExpression()), !dbg !11307
  store %struct.mlxsw_item* %item, %struct.mlxsw_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_item** %item.addr, metadata !11308, metadata !DIExpression()), !dbg !11309
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !11310, metadata !DIExpression()), !dbg !11311
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !11312, metadata !DIExpression()), !dbg !11313
  %0 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11314
  %1 = load i16, i16* %index.addr, align 2, !dbg !11315
  %call = call i32 @__mlxsw_item_offset(%struct.mlxsw_item* %0, i16 zeroext %1, i64 8) #10, !dbg !11316
  store i32 %call, i32* %offset, align 4, !dbg !11313
  call void @llvm.dbg.declare(metadata i64** %b, metadata !11317, metadata !DIExpression()), !dbg !11318
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !11319
  %3 = bitcast i8* %2 to i64*, !dbg !11320
  store i64* %3, i64** %b, align 8, !dbg !11318
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !11321, metadata !DIExpression()), !dbg !11322
  %4 = load i64*, i64** %b, align 8, !dbg !11323
  %5 = load i32, i32* %offset, align 4, !dbg !11323
  %idxprom = zext i32 %5 to i64, !dbg !11323
  %arrayidx = getelementptr i64, i64* %4, i64 %idxprom, !dbg !11323
  %6 = load i64, i64* %arrayidx, align 8, !dbg !11323
  %7 = call i1 @llvm.is.constant.i64(i64 %6), !dbg !11323
  br i1 %7, label %cond.true, label %cond.false, !dbg !11323

cond.true:                                        ; preds = %entry
  %8 = load i64*, i64** %b, align 8, !dbg !11323
  %9 = load i32, i32* %offset, align 4, !dbg !11323
  %idxprom1 = zext i32 %9 to i64, !dbg !11323
  %arrayidx2 = getelementptr i64, i64* %8, i64 %idxprom1, !dbg !11323
  %10 = load i64, i64* %arrayidx2, align 8, !dbg !11323
  %and = and i64 %10, 255, !dbg !11323
  %shl = shl i64 %and, 56, !dbg !11323
  %11 = load i64*, i64** %b, align 8, !dbg !11323
  %12 = load i32, i32* %offset, align 4, !dbg !11323
  %idxprom3 = zext i32 %12 to i64, !dbg !11323
  %arrayidx4 = getelementptr i64, i64* %11, i64 %idxprom3, !dbg !11323
  %13 = load i64, i64* %arrayidx4, align 8, !dbg !11323
  %and5 = and i64 %13, 65280, !dbg !11323
  %shl6 = shl i64 %and5, 40, !dbg !11323
  %or = or i64 %shl, %shl6, !dbg !11323
  %14 = load i64*, i64** %b, align 8, !dbg !11323
  %15 = load i32, i32* %offset, align 4, !dbg !11323
  %idxprom7 = zext i32 %15 to i64, !dbg !11323
  %arrayidx8 = getelementptr i64, i64* %14, i64 %idxprom7, !dbg !11323
  %16 = load i64, i64* %arrayidx8, align 8, !dbg !11323
  %and9 = and i64 %16, 16711680, !dbg !11323
  %shl10 = shl i64 %and9, 24, !dbg !11323
  %or11 = or i64 %or, %shl10, !dbg !11323
  %17 = load i64*, i64** %b, align 8, !dbg !11323
  %18 = load i32, i32* %offset, align 4, !dbg !11323
  %idxprom12 = zext i32 %18 to i64, !dbg !11323
  %arrayidx13 = getelementptr i64, i64* %17, i64 %idxprom12, !dbg !11323
  %19 = load i64, i64* %arrayidx13, align 8, !dbg !11323
  %and14 = and i64 %19, 4278190080, !dbg !11323
  %shl15 = shl i64 %and14, 8, !dbg !11323
  %or16 = or i64 %or11, %shl15, !dbg !11323
  %20 = load i64*, i64** %b, align 8, !dbg !11323
  %21 = load i32, i32* %offset, align 4, !dbg !11323
  %idxprom17 = zext i32 %21 to i64, !dbg !11323
  %arrayidx18 = getelementptr i64, i64* %20, i64 %idxprom17, !dbg !11323
  %22 = load i64, i64* %arrayidx18, align 8, !dbg !11323
  %and19 = and i64 %22, 1095216660480, !dbg !11323
  %shr = lshr i64 %and19, 8, !dbg !11323
  %or20 = or i64 %or16, %shr, !dbg !11323
  %23 = load i64*, i64** %b, align 8, !dbg !11323
  %24 = load i32, i32* %offset, align 4, !dbg !11323
  %idxprom21 = zext i32 %24 to i64, !dbg !11323
  %arrayidx22 = getelementptr i64, i64* %23, i64 %idxprom21, !dbg !11323
  %25 = load i64, i64* %arrayidx22, align 8, !dbg !11323
  %and23 = and i64 %25, 280375465082880, !dbg !11323
  %shr24 = lshr i64 %and23, 24, !dbg !11323
  %or25 = or i64 %or20, %shr24, !dbg !11323
  %26 = load i64*, i64** %b, align 8, !dbg !11323
  %27 = load i32, i32* %offset, align 4, !dbg !11323
  %idxprom26 = zext i32 %27 to i64, !dbg !11323
  %arrayidx27 = getelementptr i64, i64* %26, i64 %idxprom26, !dbg !11323
  %28 = load i64, i64* %arrayidx27, align 8, !dbg !11323
  %and28 = and i64 %28, 71776119061217280, !dbg !11323
  %shr29 = lshr i64 %and28, 40, !dbg !11323
  %or30 = or i64 %or25, %shr29, !dbg !11323
  %29 = load i64*, i64** %b, align 8, !dbg !11323
  %30 = load i32, i32* %offset, align 4, !dbg !11323
  %idxprom31 = zext i32 %30 to i64, !dbg !11323
  %arrayidx32 = getelementptr i64, i64* %29, i64 %idxprom31, !dbg !11323
  %31 = load i64, i64* %arrayidx32, align 8, !dbg !11323
  %and33 = and i64 %31, -72057594037927936, !dbg !11323
  %shr34 = lshr i64 %and33, 56, !dbg !11323
  %or35 = or i64 %or30, %shr34, !dbg !11323
  br label %cond.end, !dbg !11323

cond.false:                                       ; preds = %entry
  %32 = load i64*, i64** %b, align 8, !dbg !11323
  %33 = load i32, i32* %offset, align 4, !dbg !11323
  %idxprom36 = zext i32 %33 to i64, !dbg !11323
  %arrayidx37 = getelementptr i64, i64* %32, i64 %idxprom36, !dbg !11323
  %34 = load i64, i64* %arrayidx37, align 8, !dbg !11323
  %call38 = call i64 @__fswab64(i64 %34) #13, !dbg !11323
  br label %cond.end, !dbg !11323

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %or35, %cond.true ], [ %call38, %cond.false ], !dbg !11323
  store i64 %cond, i64* %tmp, align 8, !dbg !11324
  %35 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11325
  %shift = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %35, i32 0, i32 3, !dbg !11326
  %36 = load i8, i8* %shift, align 2, !dbg !11326
  %conv = zext i8 %36 to i32, !dbg !11325
  %37 = load i64, i64* %tmp, align 8, !dbg !11327
  %sh_prom = zext i32 %conv to i64, !dbg !11327
  %shr39 = lshr i64 %37, %sh_prom, !dbg !11327
  store i64 %shr39, i64* %tmp, align 8, !dbg !11327
  %38 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11328
  %size = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %38, i32 0, i32 6, !dbg !11328
  %bits = bitcast %union.anon.140* %size to i8*, !dbg !11328
  %39 = load i8, i8* %bits, align 2, !dbg !11328
  %conv40 = zext i8 %39 to i32, !dbg !11328
  %sub = sub i32 %conv40, 1, !dbg !11328
  %sub41 = sub i32 63, %sub, !dbg !11328
  %sh_prom42 = zext i32 %sub41 to i64, !dbg !11328
  %shr43 = lshr i64 -1, %sh_prom42, !dbg !11328
  %and44 = and i64 -1, %shr43, !dbg !11328
  %add = add i64 0, %and44, !dbg !11328
  %40 = load i64, i64* %tmp, align 8, !dbg !11329
  %and45 = and i64 %40, %add, !dbg !11329
  store i64 %and45, i64* %tmp, align 8, !dbg !11329
  %41 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11330
  %no_real_shift = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %41, i32 0, i32 5, !dbg !11332
  %42 = load i8, i8* %no_real_shift, align 8, !dbg !11332
  %tobool = trunc i8 %42 to i1, !dbg !11332
  br i1 %tobool, label %if.then, label %if.end, !dbg !11333

if.then:                                          ; preds = %cond.end
  %43 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11334
  %shift46 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %43, i32 0, i32 3, !dbg !11335
  %44 = load i8, i8* %shift46, align 2, !dbg !11335
  %conv47 = zext i8 %44 to i32, !dbg !11334
  %45 = load i64, i64* %tmp, align 8, !dbg !11336
  %sh_prom48 = zext i32 %conv47 to i64, !dbg !11336
  %shl49 = shl i64 %45, %sh_prom48, !dbg !11336
  store i64 %shl49, i64* %tmp, align 8, !dbg !11336
  br label %if.end, !dbg !11337

if.end:                                           ; preds = %if.then, %cond.end
  %46 = load i64, i64* %tmp, align 8, !dbg !11338
  ret i64 %46, !dbg !11339
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i64 @__fswab64(i64 %val) #7 !dbg !11340 {
entry:
  %val.addr = alloca i64, align 8
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !11343, metadata !DIExpression()), !dbg !11344
  %0 = load i64, i64* %val.addr, align 8, !dbg !11345
  %call = call i64 @__arch_swab64(i64 %0) #13, !dbg !11346
  ret i64 %call, !dbg !11347
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i64 @__arch_swab64(i64 %val) #7 !dbg !11348 {
entry:
  %val.addr = alloca i64, align 8
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !11349, metadata !DIExpression()), !dbg !11350
  %0 = load i64, i64* %val.addr, align 8, !dbg !11351
  %1 = call i64 asm "bswapq $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i64 %0) #16, !dbg !11352, !srcloc !11353
  store i64 %1, i64* %val.addr, align 8, !dbg !11352
  %2 = load i64, i64* %val.addr, align 8, !dbg !11354
  ret i64 %2, !dbg !11355
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #0 !dbg !11356 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11359, metadata !DIExpression()), !dbg !11360
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11361, metadata !DIExpression()), !dbg !11362
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11363, metadata !DIExpression()), !dbg !11364
  %0 = load i64, i64* %n.addr, align 8, !dbg !11365
  %1 = load i64, i64* %size.addr, align 8, !dbg !11366
  %2 = load i32, i32* %flags.addr, align 4, !dbg !11367
  %or = or i32 %2, 256, !dbg !11368
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #10, !dbg !11369
  ret i8* %call, !dbg !11370
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_zero(i8* %mbox) #0 !dbg !11371 {
entry:
  %mbox.addr = alloca i8*, align 8
  store i8* %mbox, i8** %mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mbox.addr, metadata !11372, metadata !DIExpression()), !dbg !11373
  %0 = load i8*, i8** %mbox.addr, align 8, !dbg !11374
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 4096, i1 false), !dbg !11375
  ret void, !dbg !11376
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_map_fa_pa_set(i8* %buf, i16 zeroext %index, i64 %val) #0 !dbg !11377 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i64, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11380, metadata !DIExpression()), !dbg !11381
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !11382, metadata !DIExpression()), !dbg !11381
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !11383, metadata !DIExpression()), !dbg !11381
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11381
  %1 = load i16, i16* %index.addr, align 2, !dbg !11381
  %2 = load i64, i64* %val.addr, align 8, !dbg !11381
  call void @__mlxsw_item_set64(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_map_fa_pa_item to %struct.mlxsw_item*), i16 zeroext %1, i64 %2) #10, !dbg !11381
  ret void, !dbg !11381
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_map_fa_log2size_set(i8* %buf, i16 zeroext %index, i32 %val) #0 !dbg !11384 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11387, metadata !DIExpression()), !dbg !11388
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !11389, metadata !DIExpression()), !dbg !11388
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11390, metadata !DIExpression()), !dbg !11388
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11388
  %1 = load i16, i16* %index.addr, align 2, !dbg !11388
  %2 = load i32, i32* %val.addr, align 4, !dbg !11388
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_map_fa_log2size_item to %struct.mlxsw_item*), i16 zeroext %1, i32 %2) #10, !dbg !11388
  ret void, !dbg !11388
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_map_fa(%struct.mlxsw_core* %mlxsw_core, i8* %in_mbox, i32 %vpm_entries_count) #0 !dbg !11391 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %in_mbox.addr = alloca i8*, align 8
  %vpm_entries_count.addr = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !11394, metadata !DIExpression()), !dbg !11395
  store i8* %in_mbox, i8** %in_mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %in_mbox.addr, metadata !11396, metadata !DIExpression()), !dbg !11397
  store i32 %vpm_entries_count, i32* %vpm_entries_count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vpm_entries_count.addr, metadata !11398, metadata !DIExpression()), !dbg !11399
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11400
  %1 = load i32, i32* %vpm_entries_count.addr, align 4, !dbg !11401
  %2 = load i8*, i8** %in_mbox.addr, align 8, !dbg !11402
  %call = call i32 @mlxsw_cmd_exec_in(%struct.mlxsw_core* %0, i16 zeroext 4095, i8 zeroext 0, i32 %1, i8* %2, i64 4096) #10, !dbg !11403
  ret i32 %call, !dbg !11404
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #0 !dbg !11405 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !8737, metadata !DIExpression()), !dbg !11406
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !8747, metadata !DIExpression()), !dbg !11410
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !8749, metadata !DIExpression()), !dbg !11411
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !8751, metadata !DIExpression()), !dbg !11412
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !8753, metadata !DIExpression()), !dbg !11413
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !8759, metadata !DIExpression()), !dbg !11415
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !8765, metadata !DIExpression()), !dbg !11417
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !8774, metadata !DIExpression()), !dbg !11420
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !8776, metadata !DIExpression()), !dbg !11421
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8778, metadata !DIExpression()), !dbg !11422
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !8780, metadata !DIExpression()), !dbg !11423
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !8782, metadata !DIExpression()), !dbg !11424
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8784, metadata !DIExpression()), !dbg !11425
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !8786, metadata !DIExpression()), !dbg !11426
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !8788, metadata !DIExpression()), !dbg !11427
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11428, metadata !DIExpression()), !dbg !11429
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11430, metadata !DIExpression()), !dbg !11431
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11432, metadata !DIExpression()), !dbg !11433
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !11434, metadata !DIExpression()), !dbg !11435
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !11436, metadata !DIExpression()), !dbg !11439
  %0 = load i64, i64* %n.addr, align 8, !dbg !11439
  store i64 %0, i64* %__a, align 8, !dbg !11439
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !11440, metadata !DIExpression()), !dbg !11439
  %1 = load i64, i64* %size.addr, align 8, !dbg !11439
  store i64 %1, i64* %__b, align 8, !dbg !11439
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !11441, metadata !DIExpression()), !dbg !11439
  store i64* %bytes, i64** %__d, align 8, !dbg !11439
  %cmp = icmp eq i64* %__a, %__b, !dbg !11439
  %conv = zext i1 %cmp to i32, !dbg !11439
  %2 = load i64*, i64** %__d, align 8, !dbg !11439
  %cmp1 = icmp eq i64* %__a, %2, !dbg !11439
  %conv2 = zext i1 %cmp1 to i32, !dbg !11439
  %3 = load i64, i64* %__a, align 8, !dbg !11439
  %4 = load i64, i64* %__b, align 8, !dbg !11439
  %5 = load i64*, i64** %__d, align 8, !dbg !11439
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !11439
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !11439
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !11439
  store i64 %8, i64* %5, align 8, !dbg !11439
  %frombool = zext i1 %7 to i8, !dbg !11439
  store i8 %frombool, i8* %tmp, align 1, !dbg !11439
  %9 = load i8, i8* %tmp, align 1, !dbg !11439
  %tobool = trunc i8 %9 to i1, !dbg !11439
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #10, !dbg !11442
  %lnot = xor i1 %call, true, !dbg !11442
  %lnot3 = xor i1 %lnot, true, !dbg !11442
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !11442
  %conv4 = sext i32 %lnot.ext to i64, !dbg !11442
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !11442
  br i1 %tobool5, label %if.then, label %if.end, !dbg !11443

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11444
  br label %return, !dbg !11444

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !11445
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !11446
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !11447

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !11448
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !11449
  br i1 %13, label %if.then6, label %if.end8, !dbg !11450

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !11451
  %15 = load i32, i32* %flags.addr, align 4, !dbg !11452
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !11453
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #12, !dbg !11454
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !11455

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !11456
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !11457
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !11458

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !11459
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !11460
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !11461
  %call.i.i = call i32 @get_order(i64 %21) #13, !dbg !11462
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !11424
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !11463
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !11464
  %24 = load i32, i32* %order.i.i, align 4, !dbg !11465
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !11466
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !11467
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !11468
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #14, !dbg !11469
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !11469
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !11469
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !11469
  call void @llvm.assume(i1 %maskcond.i.i.i) #12, !dbg !11469
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !11470
  br label %kmalloc.exit, !dbg !11470

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !11471
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11472
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !11472
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !11473

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !11474
  br label %kmalloc_index.exit.i, !dbg !11474

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11475
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !11476
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !11477

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11478
  br label %kmalloc_index.exit.i, !dbg !11478

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11479
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !11480
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !11481

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11482
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !11483
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !11484

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !11485
  br label %kmalloc_index.exit.i, !dbg !11485

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11486
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !11487
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !11488

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11489
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !11490
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !11491

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !11492
  br label %kmalloc_index.exit.i, !dbg !11492

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11493
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !11494
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !11495

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11496
  br label %kmalloc_index.exit.i, !dbg !11496

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11497
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !11498
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !11499

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !11500
  br label %kmalloc_index.exit.i, !dbg !11500

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11501
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !11502
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !11503

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !11504
  br label %kmalloc_index.exit.i, !dbg !11504

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11505
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !11506
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !11507

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !11508
  br label %kmalloc_index.exit.i, !dbg !11508

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11509
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !11510
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !11511

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !11512
  br label %kmalloc_index.exit.i, !dbg !11512

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11513
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !11514
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !11515

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !11516
  br label %kmalloc_index.exit.i, !dbg !11516

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11517
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !11518
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !11519

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !11520
  br label %kmalloc_index.exit.i, !dbg !11520

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11521
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !11522
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !11523

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !11524
  br label %kmalloc_index.exit.i, !dbg !11524

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11525
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !11526
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !11527

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !11528
  br label %kmalloc_index.exit.i, !dbg !11528

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11529
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !11530
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !11531

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !11532
  br label %kmalloc_index.exit.i, !dbg !11532

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11533
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !11534
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !11535

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !11536
  br label %kmalloc_index.exit.i, !dbg !11536

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11537
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !11538
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !11539

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !11540
  br label %kmalloc_index.exit.i, !dbg !11540

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11541
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !11542
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !11543

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !11544
  br label %kmalloc_index.exit.i, !dbg !11544

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11545
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !11546
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !11547

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !11548
  br label %kmalloc_index.exit.i, !dbg !11548

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11549
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !11550
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !11551

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !11552
  br label %kmalloc_index.exit.i, !dbg !11552

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11553
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !11554
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !11555

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !11556
  br label %kmalloc_index.exit.i, !dbg !11556

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11557
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !11558
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !11559

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !11560
  br label %kmalloc_index.exit.i, !dbg !11560

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11561
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !11562
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !11563

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !11564
  br label %kmalloc_index.exit.i, !dbg !11564

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11565
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !11566
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !11567

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !11568
  br label %kmalloc_index.exit.i, !dbg !11568

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11569
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !11570
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !11571

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !11572
  br label %kmalloc_index.exit.i, !dbg !11572

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11573
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !11574
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !11575

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !11576
  br label %kmalloc_index.exit.i, !dbg !11576

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11577
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !11578
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !11579

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !11580
  br label %kmalloc_index.exit.i, !dbg !11580

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11581
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !11582
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !11583

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !11584
  br label %kmalloc_index.exit.i, !dbg !11584

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11585
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !11586
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !11587

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !11588
  br label %kmalloc_index.exit.i, !dbg !11588

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0), i32 382, i32 0, i64 12) #12, !dbg !11589, !srcloc !8964
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 160) #12, !dbg !11590, !srcloc !8968
  unreachable, !dbg !11591

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !11592
  store i32 %59, i32* %index.i, align 4, !dbg !11593
  %60 = load i32, i32* %index.i, align 4, !dbg !11594
  %tobool.i = icmp ne i32 %60, 0, !dbg !11594
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !11595

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !11596
  br label %kmalloc.exit, !dbg !11596

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !11597
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !11598
  %and.i.i = and i32 %62, 17, !dbg !11598
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !11598
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !11598
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !11598
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !11598
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !11599

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !11600
  br label %kmalloc_type.exit.i, !dbg !11600

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !11601
  %and2.i.i = and i32 %63, 1, !dbg !11602
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !11601
  %64 = zext i1 %tobool3.i.i to i64, !dbg !11601
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !11601
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !11603
  br label %kmalloc_type.exit.i, !dbg !11603

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !11604
  %idxprom.i = zext i32 %65 to i64, !dbg !11605
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !11605
  %66 = load i32, i32* %index.i, align 4, !dbg !11606
  %idxprom6.i = zext i32 %66 to i64, !dbg !11605
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !11605
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !11605
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !11607
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !11608
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !11609
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !11610
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #14, !dbg !11611
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !11611
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !11611
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !11611
  call void @llvm.assume(i1 %maskcond.i.i) #12, !dbg !11611
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !11412
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !11612
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !11613
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !11614
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !11615
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #14, !dbg !11616
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !11617
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !11618
  store i8* %76, i8** %retval.i, align 8, !dbg !11619
  br label %kmalloc.exit, !dbg !11619

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !11620
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !11621
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #14, !dbg !11622
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !11622
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !11622
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !11622
  call void @llvm.assume(i1 %maskcond.i) #12, !dbg !11622
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !11623
  br label %kmalloc.exit, !dbg !11623

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !11624
  store i8* %79, i8** %retval, align 8, !dbg !11625
  br label %return, !dbg !11625

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !11626
  %81 = load i32, i32* %flags.addr, align 4, !dbg !11627
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #10, !dbg !11628
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !11628
  %maskedptr = and i64 %ptrint, 7, !dbg !11628
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !11628
  call void @llvm.assume(i1 %maskcond), !dbg !11628
  store i8* %call9, i8** %retval, align 8, !dbg !11629
  br label %return, !dbg !11629

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !11630
  ret i8* %82, !dbg !11630
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #0 !dbg !11631 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !11635, metadata !DIExpression()), !dbg !11636
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !11637
  %tobool = trunc i8 %0 to i1, !dbg !11637
  %lnot = xor i1 %tobool, true, !dbg !11637
  %lnot1 = xor i1 %lnot, true, !dbg !11637
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !11637
  %conv = sext i32 %lnot.ext to i64, !dbg !11637
  %tobool2 = icmp ne i64 %conv, 0, !dbg !11637
  ret i1 %tobool2, !dbg !11638
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__mlxsw_item_set64(i8* %buf, %struct.mlxsw_item* %item, i16 zeroext %index, i64 %val) #0 !dbg !11639 {
entry:
  %buf.addr = alloca i8*, align 8
  %item.addr = alloca %struct.mlxsw_item*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i64, align 8
  %offset = alloca i32, align 4
  %b = alloca i64*, align 8
  %mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11642, metadata !DIExpression()), !dbg !11643
  store %struct.mlxsw_item* %item, %struct.mlxsw_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_item** %item.addr, metadata !11644, metadata !DIExpression()), !dbg !11645
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !11646, metadata !DIExpression()), !dbg !11647
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !11648, metadata !DIExpression()), !dbg !11649
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !11650, metadata !DIExpression()), !dbg !11651
  %0 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11652
  %1 = load i16, i16* %index.addr, align 2, !dbg !11653
  %call = call i32 @__mlxsw_item_offset(%struct.mlxsw_item* %0, i16 zeroext %1, i64 8) #10, !dbg !11654
  store i32 %call, i32* %offset, align 4, !dbg !11651
  call void @llvm.dbg.declare(metadata i64** %b, metadata !11655, metadata !DIExpression()), !dbg !11656
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !11657
  %3 = bitcast i8* %2 to i64*, !dbg !11658
  store i64* %3, i64** %b, align 8, !dbg !11656
  call void @llvm.dbg.declare(metadata i64* %mask, metadata !11659, metadata !DIExpression()), !dbg !11660
  %4 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11661
  %size = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %4, i32 0, i32 6, !dbg !11661
  %bits = bitcast %union.anon.140* %size to i8*, !dbg !11661
  %5 = load i8, i8* %bits, align 2, !dbg !11661
  %conv = zext i8 %5 to i32, !dbg !11661
  %sub = sub i32 %conv, 1, !dbg !11661
  %sub1 = sub i32 63, %sub, !dbg !11661
  %sh_prom = zext i32 %sub1 to i64, !dbg !11661
  %shr = lshr i64 -1, %sh_prom, !dbg !11661
  %and = and i64 -1, %shr, !dbg !11661
  %add = add i64 0, %and, !dbg !11661
  %6 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11662
  %shift = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %6, i32 0, i32 3, !dbg !11663
  %7 = load i8, i8* %shift, align 2, !dbg !11663
  %conv2 = zext i8 %7 to i32, !dbg !11662
  %sh_prom3 = zext i32 %conv2 to i64, !dbg !11664
  %shl = shl i64 %add, %sh_prom3, !dbg !11664
  store i64 %shl, i64* %mask, align 8, !dbg !11660
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !11665, metadata !DIExpression()), !dbg !11666
  %8 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11667
  %no_real_shift = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %8, i32 0, i32 5, !dbg !11669
  %9 = load i8, i8* %no_real_shift, align 8, !dbg !11669
  %tobool = trunc i8 %9 to i1, !dbg !11669
  br i1 %tobool, label %if.end, label %if.then, !dbg !11670

if.then:                                          ; preds = %entry
  %10 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11671
  %shift4 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %10, i32 0, i32 3, !dbg !11672
  %11 = load i8, i8* %shift4, align 2, !dbg !11672
  %conv5 = zext i8 %11 to i32, !dbg !11671
  %12 = load i64, i64* %val.addr, align 8, !dbg !11673
  %sh_prom6 = zext i32 %conv5 to i64, !dbg !11673
  %shl7 = shl i64 %12, %sh_prom6, !dbg !11673
  store i64 %shl7, i64* %val.addr, align 8, !dbg !11673
  br label %if.end, !dbg !11674

if.end:                                           ; preds = %if.then, %entry
  %13 = load i64, i64* %mask, align 8, !dbg !11675
  %14 = load i64, i64* %val.addr, align 8, !dbg !11676
  %and8 = and i64 %14, %13, !dbg !11676
  store i64 %and8, i64* %val.addr, align 8, !dbg !11676
  %15 = load i64*, i64** %b, align 8, !dbg !11677
  %16 = load i32, i32* %offset, align 4, !dbg !11677
  %idxprom = zext i32 %16 to i64, !dbg !11677
  %arrayidx = getelementptr i64, i64* %15, i64 %idxprom, !dbg !11677
  %17 = load i64, i64* %arrayidx, align 8, !dbg !11677
  %18 = call i1 @llvm.is.constant.i64(i64 %17), !dbg !11677
  br i1 %18, label %cond.true, label %cond.false, !dbg !11677

cond.true:                                        ; preds = %if.end
  %19 = load i64*, i64** %b, align 8, !dbg !11677
  %20 = load i32, i32* %offset, align 4, !dbg !11677
  %idxprom9 = zext i32 %20 to i64, !dbg !11677
  %arrayidx10 = getelementptr i64, i64* %19, i64 %idxprom9, !dbg !11677
  %21 = load i64, i64* %arrayidx10, align 8, !dbg !11677
  %and11 = and i64 %21, 255, !dbg !11677
  %shl12 = shl i64 %and11, 56, !dbg !11677
  %22 = load i64*, i64** %b, align 8, !dbg !11677
  %23 = load i32, i32* %offset, align 4, !dbg !11677
  %idxprom13 = zext i32 %23 to i64, !dbg !11677
  %arrayidx14 = getelementptr i64, i64* %22, i64 %idxprom13, !dbg !11677
  %24 = load i64, i64* %arrayidx14, align 8, !dbg !11677
  %and15 = and i64 %24, 65280, !dbg !11677
  %shl16 = shl i64 %and15, 40, !dbg !11677
  %or = or i64 %shl12, %shl16, !dbg !11677
  %25 = load i64*, i64** %b, align 8, !dbg !11677
  %26 = load i32, i32* %offset, align 4, !dbg !11677
  %idxprom17 = zext i32 %26 to i64, !dbg !11677
  %arrayidx18 = getelementptr i64, i64* %25, i64 %idxprom17, !dbg !11677
  %27 = load i64, i64* %arrayidx18, align 8, !dbg !11677
  %and19 = and i64 %27, 16711680, !dbg !11677
  %shl20 = shl i64 %and19, 24, !dbg !11677
  %or21 = or i64 %or, %shl20, !dbg !11677
  %28 = load i64*, i64** %b, align 8, !dbg !11677
  %29 = load i32, i32* %offset, align 4, !dbg !11677
  %idxprom22 = zext i32 %29 to i64, !dbg !11677
  %arrayidx23 = getelementptr i64, i64* %28, i64 %idxprom22, !dbg !11677
  %30 = load i64, i64* %arrayidx23, align 8, !dbg !11677
  %and24 = and i64 %30, 4278190080, !dbg !11677
  %shl25 = shl i64 %and24, 8, !dbg !11677
  %or26 = or i64 %or21, %shl25, !dbg !11677
  %31 = load i64*, i64** %b, align 8, !dbg !11677
  %32 = load i32, i32* %offset, align 4, !dbg !11677
  %idxprom27 = zext i32 %32 to i64, !dbg !11677
  %arrayidx28 = getelementptr i64, i64* %31, i64 %idxprom27, !dbg !11677
  %33 = load i64, i64* %arrayidx28, align 8, !dbg !11677
  %and29 = and i64 %33, 1095216660480, !dbg !11677
  %shr30 = lshr i64 %and29, 8, !dbg !11677
  %or31 = or i64 %or26, %shr30, !dbg !11677
  %34 = load i64*, i64** %b, align 8, !dbg !11677
  %35 = load i32, i32* %offset, align 4, !dbg !11677
  %idxprom32 = zext i32 %35 to i64, !dbg !11677
  %arrayidx33 = getelementptr i64, i64* %34, i64 %idxprom32, !dbg !11677
  %36 = load i64, i64* %arrayidx33, align 8, !dbg !11677
  %and34 = and i64 %36, 280375465082880, !dbg !11677
  %shr35 = lshr i64 %and34, 24, !dbg !11677
  %or36 = or i64 %or31, %shr35, !dbg !11677
  %37 = load i64*, i64** %b, align 8, !dbg !11677
  %38 = load i32, i32* %offset, align 4, !dbg !11677
  %idxprom37 = zext i32 %38 to i64, !dbg !11677
  %arrayidx38 = getelementptr i64, i64* %37, i64 %idxprom37, !dbg !11677
  %39 = load i64, i64* %arrayidx38, align 8, !dbg !11677
  %and39 = and i64 %39, 71776119061217280, !dbg !11677
  %shr40 = lshr i64 %and39, 40, !dbg !11677
  %or41 = or i64 %or36, %shr40, !dbg !11677
  %40 = load i64*, i64** %b, align 8, !dbg !11677
  %41 = load i32, i32* %offset, align 4, !dbg !11677
  %idxprom42 = zext i32 %41 to i64, !dbg !11677
  %arrayidx43 = getelementptr i64, i64* %40, i64 %idxprom42, !dbg !11677
  %42 = load i64, i64* %arrayidx43, align 8, !dbg !11677
  %and44 = and i64 %42, -72057594037927936, !dbg !11677
  %shr45 = lshr i64 %and44, 56, !dbg !11677
  %or46 = or i64 %or41, %shr45, !dbg !11677
  br label %cond.end, !dbg !11677

cond.false:                                       ; preds = %if.end
  %43 = load i64*, i64** %b, align 8, !dbg !11677
  %44 = load i32, i32* %offset, align 4, !dbg !11677
  %idxprom47 = zext i32 %44 to i64, !dbg !11677
  %arrayidx48 = getelementptr i64, i64* %43, i64 %idxprom47, !dbg !11677
  %45 = load i64, i64* %arrayidx48, align 8, !dbg !11677
  %call49 = call i64 @__fswab64(i64 %45) #13, !dbg !11677
  br label %cond.end, !dbg !11677

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %or46, %cond.true ], [ %call49, %cond.false ], !dbg !11677
  store i64 %cond, i64* %tmp, align 8, !dbg !11678
  %46 = load i64, i64* %mask, align 8, !dbg !11679
  %neg = xor i64 %46, -1, !dbg !11680
  %47 = load i64, i64* %tmp, align 8, !dbg !11681
  %and50 = and i64 %47, %neg, !dbg !11681
  store i64 %and50, i64* %tmp, align 8, !dbg !11681
  %48 = load i64, i64* %val.addr, align 8, !dbg !11682
  %49 = load i64, i64* %tmp, align 8, !dbg !11683
  %or51 = or i64 %49, %48, !dbg !11683
  store i64 %or51, i64* %tmp, align 8, !dbg !11683
  %50 = load i64, i64* %tmp, align 8, !dbg !11684
  %51 = call i1 @llvm.is.constant.i64(i64 %50), !dbg !11684
  br i1 %51, label %cond.true52, label %cond.false76, !dbg !11684

cond.true52:                                      ; preds = %cond.end
  %52 = load i64, i64* %tmp, align 8, !dbg !11684
  %and53 = and i64 %52, 255, !dbg !11684
  %shl54 = shl i64 %and53, 56, !dbg !11684
  %53 = load i64, i64* %tmp, align 8, !dbg !11684
  %and55 = and i64 %53, 65280, !dbg !11684
  %shl56 = shl i64 %and55, 40, !dbg !11684
  %or57 = or i64 %shl54, %shl56, !dbg !11684
  %54 = load i64, i64* %tmp, align 8, !dbg !11684
  %and58 = and i64 %54, 16711680, !dbg !11684
  %shl59 = shl i64 %and58, 24, !dbg !11684
  %or60 = or i64 %or57, %shl59, !dbg !11684
  %55 = load i64, i64* %tmp, align 8, !dbg !11684
  %and61 = and i64 %55, 4278190080, !dbg !11684
  %shl62 = shl i64 %and61, 8, !dbg !11684
  %or63 = or i64 %or60, %shl62, !dbg !11684
  %56 = load i64, i64* %tmp, align 8, !dbg !11684
  %and64 = and i64 %56, 1095216660480, !dbg !11684
  %shr65 = lshr i64 %and64, 8, !dbg !11684
  %or66 = or i64 %or63, %shr65, !dbg !11684
  %57 = load i64, i64* %tmp, align 8, !dbg !11684
  %and67 = and i64 %57, 280375465082880, !dbg !11684
  %shr68 = lshr i64 %and67, 24, !dbg !11684
  %or69 = or i64 %or66, %shr68, !dbg !11684
  %58 = load i64, i64* %tmp, align 8, !dbg !11684
  %and70 = and i64 %58, 71776119061217280, !dbg !11684
  %shr71 = lshr i64 %and70, 40, !dbg !11684
  %or72 = or i64 %or69, %shr71, !dbg !11684
  %59 = load i64, i64* %tmp, align 8, !dbg !11684
  %and73 = and i64 %59, -72057594037927936, !dbg !11684
  %shr74 = lshr i64 %and73, 56, !dbg !11684
  %or75 = or i64 %or72, %shr74, !dbg !11684
  br label %cond.end78, !dbg !11684

cond.false76:                                     ; preds = %cond.end
  %60 = load i64, i64* %tmp, align 8, !dbg !11684
  %call77 = call i64 @__fswab64(i64 %60) #13, !dbg !11684
  br label %cond.end78, !dbg !11684

cond.end78:                                       ; preds = %cond.false76, %cond.true52
  %cond79 = phi i64 [ %or75, %cond.true52 ], [ %call77, %cond.false76 ], !dbg !11684
  %61 = load i64*, i64** %b, align 8, !dbg !11685
  %62 = load i32, i32* %offset, align 4, !dbg !11686
  %idxprom80 = zext i32 %62 to i64, !dbg !11685
  %arrayidx81 = getelementptr i64, i64* %61, i64 %idxprom80, !dbg !11685
  store i64 %cond79, i64* %arrayidx81, align 8, !dbg !11687
  ret void, !dbg !11688
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_exec_in(%struct.mlxsw_core* %mlxsw_core, i16 zeroext %opcode, i8 zeroext %opcode_mod, i32 %in_mod, i8* %in_mbox, i64 %in_mbox_size) #0 !dbg !11689 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %opcode.addr = alloca i16, align 2
  %opcode_mod.addr = alloca i8, align 1
  %in_mod.addr = alloca i32, align 4
  %in_mbox.addr = alloca i8*, align 8
  %in_mbox_size.addr = alloca i64, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !11692, metadata !DIExpression()), !dbg !11693
  store i16 %opcode, i16* %opcode.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %opcode.addr, metadata !11694, metadata !DIExpression()), !dbg !11695
  store i8 %opcode_mod, i8* %opcode_mod.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %opcode_mod.addr, metadata !11696, metadata !DIExpression()), !dbg !11697
  store i32 %in_mod, i32* %in_mod.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %in_mod.addr, metadata !11698, metadata !DIExpression()), !dbg !11699
  store i8* %in_mbox, i8** %in_mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %in_mbox.addr, metadata !11700, metadata !DIExpression()), !dbg !11701
  store i64 %in_mbox_size, i64* %in_mbox_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %in_mbox_size.addr, metadata !11702, metadata !DIExpression()), !dbg !11703
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11704
  %1 = load i16, i16* %opcode.addr, align 2, !dbg !11705
  %2 = load i8, i8* %opcode_mod.addr, align 1, !dbg !11706
  %3 = load i32, i32* %in_mod.addr, align 4, !dbg !11707
  %4 = load i8*, i8** %in_mbox.addr, align 8, !dbg !11708
  %5 = load i64, i64* %in_mbox_size.addr, align 8, !dbg !11709
  %call = call i32 @mlxsw_cmd_exec(%struct.mlxsw_core* %0, i16 zeroext %1, i8 zeroext %2, i32 %3, i1 zeroext false, i1 zeroext false, i8* %4, i64 %5, i8* null, i64 0) #10, !dbg !11710
  ret i32 %call, !dbg !11711
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_boardinfo(%struct.mlxsw_core* %mlxsw_core, i8* %out_mbox) #0 !dbg !11712 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %out_mbox.addr = alloca i8*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !11713, metadata !DIExpression()), !dbg !11714
  store i8* %out_mbox, i8** %out_mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out_mbox.addr, metadata !11715, metadata !DIExpression()), !dbg !11716
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !11717
  %1 = load i8*, i8** %out_mbox.addr, align 8, !dbg !11718
  %call = call i32 @mlxsw_cmd_exec_out(%struct.mlxsw_core* %0, i16 zeroext 6, i8 zeroext 0, i32 0, i1 zeroext false, i8* %1, i64 4096) #10, !dbg !11719
  ret i32 %call, !dbg !11720
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_boardinfo_vsd_memcpy_from(i8* %buf, i8* %dst) #0 !dbg !11721 {
entry:
  %buf.addr = alloca i8*, align 8
  %dst.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11724, metadata !DIExpression()), !dbg !11725
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !11726, metadata !DIExpression()), !dbg !11725
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11725
  %1 = load i8*, i8** %dst.addr, align 8, !dbg !11725
  call void @__mlxsw_item_memcpy_from(i8* %0, i8* %1, %struct.mlxsw_item* @mlxsw_cmd_mbox_boardinfo_vsd_item, i16 zeroext 0) #10, !dbg !11725
  ret void, !dbg !11725
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_boardinfo_psid_memcpy_from(i8* %buf, i8* %dst) #0 !dbg !11727 {
entry:
  %buf.addr = alloca i8*, align 8
  %dst.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11728, metadata !DIExpression()), !dbg !11729
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !11730, metadata !DIExpression()), !dbg !11729
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11729
  %1 = load i8*, i8** %dst.addr, align 8, !dbg !11729
  call void @__mlxsw_item_memcpy_from(i8* %0, i8* %1, %struct.mlxsw_item* @mlxsw_cmd_mbox_boardinfo_psid_item, i16 zeroext 0) #10, !dbg !11729
  ret void, !dbg !11729
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__mlxsw_item_memcpy_from(i8* %buf, i8* %dst, %struct.mlxsw_item* %item, i16 zeroext %index) #0 !dbg !11731 {
entry:
  %buf.addr = alloca i8*, align 8
  %dst.addr = alloca i8*, align 8
  %item.addr = alloca %struct.mlxsw_item*, align 8
  %index.addr = alloca i16, align 2
  %offset = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11734, metadata !DIExpression()), !dbg !11735
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !11736, metadata !DIExpression()), !dbg !11737
  store %struct.mlxsw_item* %item, %struct.mlxsw_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_item** %item.addr, metadata !11738, metadata !DIExpression()), !dbg !11739
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !11740, metadata !DIExpression()), !dbg !11741
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !11742, metadata !DIExpression()), !dbg !11743
  %0 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11744
  %1 = load i16, i16* %index.addr, align 2, !dbg !11745
  %call = call i32 @__mlxsw_item_offset(%struct.mlxsw_item* %0, i16 zeroext %1, i64 1) #10, !dbg !11746
  store i32 %call, i32* %offset, align 4, !dbg !11743
  %2 = load i8*, i8** %dst.addr, align 8, !dbg !11747
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !11748
  %4 = load i32, i32* %offset, align 4, !dbg !11749
  %idxprom = zext i32 %4 to i64, !dbg !11748
  %arrayidx = getelementptr i8, i8* %3, i64 %idxprom, !dbg !11748
  %5 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !11750
  %size = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %5, i32 0, i32 6, !dbg !11751
  %bytes = bitcast %union.anon.140* %size to i16*, !dbg !11752
  %6 = load i16, i16* %bytes, align 2, !dbg !11752
  %conv = zext i16 %6 to i64, !dbg !11750
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %arrayidx, i64 %conv, i1 false), !dbg !11753
  ret void, !dbg !11754
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_set_max_vepa_channels_set(i8* %buf, i32 %val) #0 !dbg !11755 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11756, metadata !DIExpression()), !dbg !11757
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11758, metadata !DIExpression()), !dbg !11757
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11757
  %1 = load i32, i32* %val.addr, align 4, !dbg !11757
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_set_max_vepa_channels_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11757
  ret void, !dbg !11757
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_max_vepa_channels_set(i8* %buf, i32 %val) #0 !dbg !11759 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11760, metadata !DIExpression()), !dbg !11761
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11762, metadata !DIExpression()), !dbg !11761
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11761
  %1 = load i32, i32* %val.addr, align 4, !dbg !11761
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_max_vepa_channels_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11761
  ret void, !dbg !11761
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_set_max_mid_set(i8* %buf, i32 %val) #0 !dbg !11763 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11764, metadata !DIExpression()), !dbg !11765
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11766, metadata !DIExpression()), !dbg !11765
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11765
  %1 = load i32, i32* %val.addr, align 4, !dbg !11765
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_set_max_mid_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11765
  ret void, !dbg !11765
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_max_mid_set(i8* %buf, i32 %val) #0 !dbg !11767 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11768, metadata !DIExpression()), !dbg !11769
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11770, metadata !DIExpression()), !dbg !11769
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11769
  %1 = load i32, i32* %val.addr, align 4, !dbg !11769
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_max_mid_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11769
  ret void, !dbg !11769
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_set_max_pgt_set(i8* %buf, i32 %val) #0 !dbg !11771 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11772, metadata !DIExpression()), !dbg !11773
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11774, metadata !DIExpression()), !dbg !11773
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11773
  %1 = load i32, i32* %val.addr, align 4, !dbg !11773
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_set_max_pgt_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11773
  ret void, !dbg !11773
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_max_pgt_set(i8* %buf, i32 %val) #0 !dbg !11775 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11776, metadata !DIExpression()), !dbg !11777
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11778, metadata !DIExpression()), !dbg !11777
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11777
  %1 = load i32, i32* %val.addr, align 4, !dbg !11777
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_max_pgt_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11777
  ret void, !dbg !11777
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_set_max_system_port_set(i8* %buf, i32 %val) #0 !dbg !11779 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11780, metadata !DIExpression()), !dbg !11781
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11782, metadata !DIExpression()), !dbg !11781
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11781
  %1 = load i32, i32* %val.addr, align 4, !dbg !11781
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_set_max_system_port_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11781
  ret void, !dbg !11781
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_max_system_port_set(i8* %buf, i32 %val) #0 !dbg !11783 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11784, metadata !DIExpression()), !dbg !11785
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11786, metadata !DIExpression()), !dbg !11785
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11785
  %1 = load i32, i32* %val.addr, align 4, !dbg !11785
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_max_system_port_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11785
  ret void, !dbg !11785
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_set_max_vlan_groups_set(i8* %buf, i32 %val) #0 !dbg !11787 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11788, metadata !DIExpression()), !dbg !11789
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11790, metadata !DIExpression()), !dbg !11789
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11789
  %1 = load i32, i32* %val.addr, align 4, !dbg !11789
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_set_max_vlan_groups_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11789
  ret void, !dbg !11789
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_max_vlan_groups_set(i8* %buf, i32 %val) #0 !dbg !11791 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11792, metadata !DIExpression()), !dbg !11793
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11794, metadata !DIExpression()), !dbg !11793
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11793
  %1 = load i32, i32* %val.addr, align 4, !dbg !11793
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_max_vlan_groups_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11793
  ret void, !dbg !11793
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_set_max_regions_set(i8* %buf, i32 %val) #0 !dbg !11795 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11796, metadata !DIExpression()), !dbg !11797
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11798, metadata !DIExpression()), !dbg !11797
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11797
  %1 = load i32, i32* %val.addr, align 4, !dbg !11797
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_set_max_regions_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11797
  ret void, !dbg !11797
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_max_regions_set(i8* %buf, i32 %val) #0 !dbg !11799 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11800, metadata !DIExpression()), !dbg !11801
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11802, metadata !DIExpression()), !dbg !11801
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11801
  %1 = load i32, i32* %val.addr, align 4, !dbg !11801
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_max_regions_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11801
  ret void, !dbg !11801
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_set_flood_tables_set(i8* %buf, i32 %val) #0 !dbg !11803 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11804, metadata !DIExpression()), !dbg !11805
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11806, metadata !DIExpression()), !dbg !11805
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11805
  %1 = load i32, i32* %val.addr, align 4, !dbg !11805
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_set_flood_tables_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11805
  ret void, !dbg !11805
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_max_flood_tables_set(i8* %buf, i32 %val) #0 !dbg !11807 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11808, metadata !DIExpression()), !dbg !11809
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11810, metadata !DIExpression()), !dbg !11809
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11809
  %1 = load i32, i32* %val.addr, align 4, !dbg !11809
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_max_flood_tables_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11809
  ret void, !dbg !11809
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_max_vid_flood_tables_set(i8* %buf, i32 %val) #0 !dbg !11811 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11812, metadata !DIExpression()), !dbg !11813
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11814, metadata !DIExpression()), !dbg !11813
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11813
  %1 = load i32, i32* %val.addr, align 4, !dbg !11813
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_max_vid_flood_tables_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11813
  ret void, !dbg !11813
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_max_fid_offset_flood_tables_set(i8* %buf, i32 %val) #0 !dbg !11815 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11816, metadata !DIExpression()), !dbg !11817
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11818, metadata !DIExpression()), !dbg !11817
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11817
  %1 = load i32, i32* %val.addr, align 4, !dbg !11817
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_max_fid_offset_flood_tables_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11817
  ret void, !dbg !11817
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_fid_offset_flood_table_size_set(i8* %buf, i32 %val) #0 !dbg !11819 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11820, metadata !DIExpression()), !dbg !11821
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11822, metadata !DIExpression()), !dbg !11821
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11821
  %1 = load i32, i32* %val.addr, align 4, !dbg !11821
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_fid_offset_flood_table_size_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11821
  ret void, !dbg !11821
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_max_fid_flood_tables_set(i8* %buf, i32 %val) #0 !dbg !11823 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11824, metadata !DIExpression()), !dbg !11825
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11826, metadata !DIExpression()), !dbg !11825
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11825
  %1 = load i32, i32* %val.addr, align 4, !dbg !11825
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_max_fid_flood_tables_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11825
  ret void, !dbg !11825
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_fid_flood_table_size_set(i8* %buf, i32 %val) #0 !dbg !11827 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11828, metadata !DIExpression()), !dbg !11829
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11830, metadata !DIExpression()), !dbg !11829
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11829
  %1 = load i32, i32* %val.addr, align 4, !dbg !11829
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_fid_flood_table_size_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11829
  ret void, !dbg !11829
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_set_flood_mode_set(i8* %buf, i32 %val) #0 !dbg !11831 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11832, metadata !DIExpression()), !dbg !11833
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11834, metadata !DIExpression()), !dbg !11833
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11833
  %1 = load i32, i32* %val.addr, align 4, !dbg !11833
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_set_flood_mode_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11833
  ret void, !dbg !11833
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_flood_mode_set(i8* %buf, i32 %val) #0 !dbg !11835 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11836, metadata !DIExpression()), !dbg !11837
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11838, metadata !DIExpression()), !dbg !11837
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11837
  %1 = load i32, i32* %val.addr, align 4, !dbg !11837
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_flood_mode_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11837
  ret void, !dbg !11837
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_set_max_ib_mc_set(i8* %buf, i32 %val) #0 !dbg !11839 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11840, metadata !DIExpression()), !dbg !11841
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11842, metadata !DIExpression()), !dbg !11841
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11841
  %1 = load i32, i32* %val.addr, align 4, !dbg !11841
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_set_max_ib_mc_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11841
  ret void, !dbg !11841
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_max_ib_mc_set(i8* %buf, i32 %val) #0 !dbg !11843 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11844, metadata !DIExpression()), !dbg !11845
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11846, metadata !DIExpression()), !dbg !11845
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11845
  %1 = load i32, i32* %val.addr, align 4, !dbg !11845
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_max_ib_mc_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11845
  ret void, !dbg !11845
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_set_max_pkey_set(i8* %buf, i32 %val) #0 !dbg !11847 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11848, metadata !DIExpression()), !dbg !11849
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11850, metadata !DIExpression()), !dbg !11849
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11849
  %1 = load i32, i32* %val.addr, align 4, !dbg !11849
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_set_max_pkey_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11849
  ret void, !dbg !11849
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_max_pkey_set(i8* %buf, i32 %val) #0 !dbg !11851 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11852, metadata !DIExpression()), !dbg !11853
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11854, metadata !DIExpression()), !dbg !11853
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11853
  %1 = load i32, i32* %val.addr, align 4, !dbg !11853
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_max_pkey_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11853
  ret void, !dbg !11853
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_set_ar_sec_set(i8* %buf, i32 %val) #0 !dbg !11855 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11856, metadata !DIExpression()), !dbg !11857
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11858, metadata !DIExpression()), !dbg !11857
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11857
  %1 = load i32, i32* %val.addr, align 4, !dbg !11857
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_set_ar_sec_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11857
  ret void, !dbg !11857
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_ar_sec_set(i8* %buf, i32 %val) #0 !dbg !11859 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11860, metadata !DIExpression()), !dbg !11861
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11862, metadata !DIExpression()), !dbg !11861
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11861
  %1 = load i32, i32* %val.addr, align 4, !dbg !11861
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_ar_sec_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11861
  ret void, !dbg !11861
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_set_adaptive_routing_group_cap_set(i8* %buf, i32 %val) #0 !dbg !11863 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11864, metadata !DIExpression()), !dbg !11865
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11866, metadata !DIExpression()), !dbg !11865
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11865
  %1 = load i32, i32* %val.addr, align 4, !dbg !11865
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_set_adaptive_routing_group_cap_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11865
  ret void, !dbg !11865
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_adaptive_routing_group_cap_set(i8* %buf, i32 %val) #0 !dbg !11867 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11868, metadata !DIExpression()), !dbg !11869
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11870, metadata !DIExpression()), !dbg !11869
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11869
  %1 = load i32, i32* %val.addr, align 4, !dbg !11869
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_adaptive_routing_group_cap_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11869
  ret void, !dbg !11869
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mlxsw_res_valid(%struct.mlxsw_res* %res, i32 %res_id) #0 !dbg !11871 {
entry:
  %res.addr = alloca %struct.mlxsw_res*, align 8
  %res_id.addr = alloca i32, align 4
  store %struct.mlxsw_res* %res, %struct.mlxsw_res** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_res** %res.addr, metadata !11874, metadata !DIExpression()), !dbg !11875
  store i32 %res_id, i32* %res_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %res_id.addr, metadata !11876, metadata !DIExpression()), !dbg !11877
  %0 = load %struct.mlxsw_res*, %struct.mlxsw_res** %res.addr, align 8, !dbg !11878
  %valid = getelementptr inbounds %struct.mlxsw_res, %struct.mlxsw_res* %0, i32 0, i32 0, !dbg !11879
  %1 = load i32, i32* %res_id.addr, align 4, !dbg !11880
  %idxprom = zext i32 %1 to i64, !dbg !11878
  %arrayidx = getelementptr [50 x i8], [50 x i8]* %valid, i64 0, i64 %idxprom, !dbg !11878
  %2 = load i8, i8* %arrayidx, align 1, !dbg !11878
  %tobool = trunc i8 %2 to i1, !dbg !11878
  ret i1 %tobool, !dbg !11881
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_profile_get_kvd_sizes(%struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_config_profile* %profile, %struct.mlxsw_res* %res) #0 !dbg !11882 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %profile.addr = alloca %struct.mlxsw_config_profile*, align 8
  %res.addr = alloca %struct.mlxsw_res*, align 8
  %single_size = alloca i64, align 8
  %double_size = alloca i64, align 8
  %linear_size = alloca i64, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !11887, metadata !DIExpression()), !dbg !11888
  store %struct.mlxsw_config_profile* %profile, %struct.mlxsw_config_profile** %profile.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_config_profile** %profile.addr, metadata !11889, metadata !DIExpression()), !dbg !11890
  store %struct.mlxsw_res* %res, %struct.mlxsw_res** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_res** %res.addr, metadata !11891, metadata !DIExpression()), !dbg !11892
  call void @llvm.dbg.declare(metadata i64* %single_size, metadata !11893, metadata !DIExpression()), !dbg !11894
  call void @llvm.dbg.declare(metadata i64* %double_size, metadata !11895, metadata !DIExpression()), !dbg !11896
  call void @llvm.dbg.declare(metadata i64* %linear_size, metadata !11897, metadata !DIExpression()), !dbg !11898
  call void @llvm.dbg.declare(metadata i32* %err, metadata !11899, metadata !DIExpression()), !dbg !11900
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !11901
  %core = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %0, i32 0, i32 5, !dbg !11902
  %1 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !11902
  %2 = load %struct.mlxsw_config_profile*, %struct.mlxsw_config_profile** %profile.addr, align 8, !dbg !11903
  %call = call i32 @mlxsw_core_kvd_sizes_get(%struct.mlxsw_core* %1, %struct.mlxsw_config_profile* %2, i64* %single_size, i64* %double_size, i64* %linear_size) #10, !dbg !11904
  store i32 %call, i32* %err, align 4, !dbg !11905
  %3 = load i32, i32* %err, align 4, !dbg !11906
  %tobool = icmp ne i32 %3, 0, !dbg !11906
  br i1 %tobool, label %if.then, label %if.end, !dbg !11908

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %err, align 4, !dbg !11909
  store i32 %4, i32* %retval, align 4, !dbg !11910
  br label %return, !dbg !11910

if.end:                                           ; preds = %entry
  %5 = load %struct.mlxsw_res*, %struct.mlxsw_res** %res.addr, align 8, !dbg !11911
  %6 = load i64, i64* %single_size, align 8, !dbg !11911
  call void @mlxsw_res_set(%struct.mlxsw_res* %5, i32 47, i64 %6) #10, !dbg !11911
  %7 = load %struct.mlxsw_res*, %struct.mlxsw_res** %res.addr, align 8, !dbg !11912
  %8 = load i64, i64* %double_size, align 8, !dbg !11912
  call void @mlxsw_res_set(%struct.mlxsw_res* %7, i32 48, i64 %8) #10, !dbg !11912
  %9 = load %struct.mlxsw_res*, %struct.mlxsw_res** %res.addr, align 8, !dbg !11913
  %10 = load i64, i64* %linear_size, align 8, !dbg !11913
  call void @mlxsw_res_set(%struct.mlxsw_res* %9, i32 49, i64 %10) #10, !dbg !11913
  store i32 0, i32* %retval, align 4, !dbg !11914
  br label %return, !dbg !11914

return:                                           ; preds = %if.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !11915
  ret i32 %11, !dbg !11915
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_set_kvd_linear_size_set(i8* %buf, i32 %val) #0 !dbg !11916 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11917, metadata !DIExpression()), !dbg !11918
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11919, metadata !DIExpression()), !dbg !11918
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11918
  %1 = load i32, i32* %val.addr, align 4, !dbg !11918
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_set_kvd_linear_size_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11918
  ret void, !dbg !11918
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_kvd_linear_size_set(i8* %buf, i32 %val) #0 !dbg !11920 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11921, metadata !DIExpression()), !dbg !11922
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11923, metadata !DIExpression()), !dbg !11922
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11922
  %1 = load i32, i32* %val.addr, align 4, !dbg !11922
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_kvd_linear_size_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11922
  ret void, !dbg !11922
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mlxsw_res_get(%struct.mlxsw_res* %res, i32 %res_id) #0 !dbg !11924 {
entry:
  %retval = alloca i64, align 8
  %res.addr = alloca %struct.mlxsw_res*, align 8
  %res_id.addr = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mlxsw_res* %res, %struct.mlxsw_res** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_res** %res.addr, metadata !11927, metadata !DIExpression()), !dbg !11928
  store i32 %res_id, i32* %res_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %res_id.addr, metadata !11929, metadata !DIExpression()), !dbg !11930
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11931, metadata !DIExpression()), !dbg !11934
  %0 = load %struct.mlxsw_res*, %struct.mlxsw_res** %res.addr, align 8, !dbg !11934
  %valid = getelementptr inbounds %struct.mlxsw_res, %struct.mlxsw_res* %0, i32 0, i32 0, !dbg !11934
  %1 = load i32, i32* %res_id.addr, align 4, !dbg !11934
  %idxprom = zext i32 %1 to i64, !dbg !11934
  %arrayidx = getelementptr [50 x i8], [50 x i8]* %valid, i64 0, i64 %idxprom, !dbg !11934
  %2 = load i8, i8* %arrayidx, align 1, !dbg !11934
  %tobool = trunc i8 %2 to i1, !dbg !11934
  %lnot = xor i1 %tobool, true, !dbg !11934
  %lnot1 = xor i1 %lnot, true, !dbg !11934
  %lnot2 = xor i1 %lnot1, true, !dbg !11934
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !11934
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !11934
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !11935
  %tobool3 = icmp ne i32 %3, 0, !dbg !11935
  %lnot4 = xor i1 %tobool3, true, !dbg !11935
  %lnot6 = xor i1 %lnot4, true, !dbg !11935
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !11935
  %conv = sext i32 %lnot.ext7 to i64, !dbg !11935
  %tobool8 = icmp ne i64 %conv, 0, !dbg !11935
  br i1 %tobool8, label %if.then, label %if.end, !dbg !11934

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !11935

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !11937

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !11939

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !11937

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.114, i64 0, i64 0), i32 136, i32 2305, i64 12) #12, !dbg !11941, !srcloc !11943
  br label %do.end11, !dbg !11941

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 338) #12, !dbg !11944, !srcloc !11946
  br label %do.body12, !dbg !11937

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !11947

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !11937

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !11937

if.end:                                           ; preds = %do.end14, %entry
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !11934
  %tobool15 = icmp ne i32 %4, 0, !dbg !11934
  %lnot16 = xor i1 %tobool15, true, !dbg !11934
  %lnot18 = xor i1 %lnot16, true, !dbg !11934
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !11934
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !11934
  store i64 %conv20, i64* %tmp, align 8, !dbg !11935
  %5 = load i64, i64* %tmp, align 8, !dbg !11934
  %tobool21 = icmp ne i64 %5, 0, !dbg !11949
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !11950

if.then22:                                        ; preds = %if.end
  store i64 0, i64* %retval, align 8, !dbg !11951
  br label %return, !dbg !11951

if.end23:                                         ; preds = %if.end
  %6 = load %struct.mlxsw_res*, %struct.mlxsw_res** %res.addr, align 8, !dbg !11952
  %values = getelementptr inbounds %struct.mlxsw_res, %struct.mlxsw_res* %6, i32 0, i32 1, !dbg !11953
  %7 = load i32, i32* %res_id.addr, align 4, !dbg !11954
  %idxprom24 = zext i32 %7 to i64, !dbg !11952
  %arrayidx25 = getelementptr [50 x i64], [50 x i64]* %values, i64 0, i64 %idxprom24, !dbg !11952
  %8 = load i64, i64* %arrayidx25, align 8, !dbg !11952
  store i64 %8, i64* %retval, align 8, !dbg !11955
  br label %return, !dbg !11955

return:                                           ; preds = %if.end23, %if.then22
  %9 = load i64, i64* %retval, align 8, !dbg !11956
  ret i64 %9, !dbg !11956
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_set_kvd_hash_single_size_set(i8* %buf, i32 %val) #0 !dbg !11957 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11958, metadata !DIExpression()), !dbg !11959
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11960, metadata !DIExpression()), !dbg !11959
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11959
  %1 = load i32, i32* %val.addr, align 4, !dbg !11959
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_set_kvd_hash_single_size_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11959
  ret void, !dbg !11959
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_kvd_hash_single_size_set(i8* %buf, i32 %val) #0 !dbg !11961 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11962, metadata !DIExpression()), !dbg !11963
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11964, metadata !DIExpression()), !dbg !11963
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11963
  %1 = load i32, i32* %val.addr, align 4, !dbg !11963
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_kvd_hash_single_size_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11963
  ret void, !dbg !11963
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_set_kvd_hash_double_size_set(i8* %buf, i32 %val) #0 !dbg !11965 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11966, metadata !DIExpression()), !dbg !11967
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11968, metadata !DIExpression()), !dbg !11967
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11967
  %1 = load i32, i32* %val.addr, align 4, !dbg !11967
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_set_kvd_hash_double_size_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11967
  ret void, !dbg !11967
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_kvd_hash_double_size_set(i8* %buf, i32 %val) #0 !dbg !11969 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11970, metadata !DIExpression()), !dbg !11971
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11972, metadata !DIExpression()), !dbg !11971
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11971
  %1 = load i32, i32* %val.addr, align 4, !dbg !11971
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_kvd_hash_double_size_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !11971
  ret void, !dbg !11971
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_config_profile_swid_config(%struct.mlxsw_pci* %mlxsw_pci, i8* %mbox, i32 %index, %struct.mlxsw_swid_config* %swid) #0 !dbg !11973 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %mbox.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %swid.addr = alloca %struct.mlxsw_swid_config*, align 8
  %mask = alloca i8, align 1
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !11978, metadata !DIExpression()), !dbg !11979
  store i8* %mbox, i8** %mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mbox.addr, metadata !11980, metadata !DIExpression()), !dbg !11981
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !11982, metadata !DIExpression()), !dbg !11983
  store %struct.mlxsw_swid_config* %swid, %struct.mlxsw_swid_config** %swid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_swid_config** %swid.addr, metadata !11984, metadata !DIExpression()), !dbg !11985
  call void @llvm.dbg.declare(metadata i8* %mask, metadata !11986, metadata !DIExpression()), !dbg !11987
  store i8 0, i8* %mask, align 1, !dbg !11987
  %0 = load %struct.mlxsw_swid_config*, %struct.mlxsw_swid_config** %swid.addr, align 8, !dbg !11988
  %1 = bitcast %struct.mlxsw_swid_config* %0 to i8*, !dbg !11990
  %bf.load = load i8, i8* %1, align 1, !dbg !11990
  %bf.clear = and i8 %bf.load, 1, !dbg !11990
  %tobool = icmp ne i8 %bf.clear, 0, !dbg !11988
  br i1 %tobool, label %if.then, label %if.end, !dbg !11991

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %mbox.addr, align 8, !dbg !11992
  %3 = load i32, i32* %index.addr, align 4, !dbg !11994
  %conv = trunc i32 %3 to i16, !dbg !11994
  %4 = load %struct.mlxsw_swid_config*, %struct.mlxsw_swid_config** %swid.addr, align 8, !dbg !11995
  %type = getelementptr inbounds %struct.mlxsw_swid_config, %struct.mlxsw_swid_config* %4, i32 0, i32 1, !dbg !11996
  %5 = load i8, i8* %type, align 1, !dbg !11996
  %conv1 = zext i8 %5 to i32, !dbg !11995
  call void @mlxsw_cmd_mbox_config_profile_swid_config_type_set(i8* %2, i16 zeroext %conv, i32 %conv1) #10, !dbg !11997
  %6 = load i8, i8* %mask, align 1, !dbg !11998
  %conv2 = zext i8 %6 to i32, !dbg !11998
  %or = or i32 %conv2, 1, !dbg !11998
  %conv3 = trunc i32 %or to i8, !dbg !11998
  store i8 %conv3, i8* %mask, align 1, !dbg !11998
  br label %if.end, !dbg !11999

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.mlxsw_swid_config*, %struct.mlxsw_swid_config** %swid.addr, align 8, !dbg !12000
  %8 = bitcast %struct.mlxsw_swid_config* %7 to i8*, !dbg !12002
  %bf.load4 = load i8, i8* %8, align 1, !dbg !12002
  %bf.lshr = lshr i8 %bf.load4, 1, !dbg !12002
  %bf.clear5 = and i8 %bf.lshr, 1, !dbg !12002
  %tobool6 = icmp ne i8 %bf.clear5, 0, !dbg !12000
  br i1 %tobool6, label %if.then7, label %if.end13, !dbg !12003

if.then7:                                         ; preds = %if.end
  %9 = load i8*, i8** %mbox.addr, align 8, !dbg !12004
  %10 = load i32, i32* %index.addr, align 4, !dbg !12006
  %conv8 = trunc i32 %10 to i16, !dbg !12006
  %11 = load %struct.mlxsw_swid_config*, %struct.mlxsw_swid_config** %swid.addr, align 8, !dbg !12007
  %properties = getelementptr inbounds %struct.mlxsw_swid_config, %struct.mlxsw_swid_config* %11, i32 0, i32 2, !dbg !12008
  %12 = load i8, i8* %properties, align 1, !dbg !12008
  %conv9 = zext i8 %12 to i32, !dbg !12007
  call void @mlxsw_cmd_mbox_config_profile_swid_config_properties_set(i8* %9, i16 zeroext %conv8, i32 %conv9) #10, !dbg !12009
  %13 = load i8, i8* %mask, align 1, !dbg !12010
  %conv10 = zext i8 %13 to i32, !dbg !12010
  %or11 = or i32 %conv10, 2, !dbg !12010
  %conv12 = trunc i32 %or11 to i8, !dbg !12010
  store i8 %conv12, i8* %mask, align 1, !dbg !12010
  br label %if.end13, !dbg !12011

if.end13:                                         ; preds = %if.then7, %if.end
  %14 = load i8*, i8** %mbox.addr, align 8, !dbg !12012
  %15 = load i32, i32* %index.addr, align 4, !dbg !12013
  %conv14 = trunc i32 %15 to i16, !dbg !12013
  %16 = load i8, i8* %mask, align 1, !dbg !12014
  %conv15 = zext i8 %16 to i32, !dbg !12014
  call void @mlxsw_cmd_mbox_config_profile_swid_config_mask_set(i8* %14, i16 zeroext %conv14, i32 %conv15) #10, !dbg !12015
  ret void, !dbg !12016
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_set_cqe_version_set(i8* %buf, i32 %val) #0 !dbg !12017 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12018, metadata !DIExpression()), !dbg !12019
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !12020, metadata !DIExpression()), !dbg !12019
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !12019
  %1 = load i32, i32* %val.addr, align 4, !dbg !12019
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_set_cqe_version_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !12019
  ret void, !dbg !12019
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_cqe_version_set(i8* %buf, i32 %val) #0 !dbg !12021 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12022, metadata !DIExpression()), !dbg !12023
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !12024, metadata !DIExpression()), !dbg !12023
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !12023
  %1 = load i32, i32* %val.addr, align 4, !dbg !12023
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_cqe_version_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !12023
  ret void, !dbg !12023
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_config_profile_set(%struct.mlxsw_core* %mlxsw_core, i8* %in_mbox) #0 !dbg !12025 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %in_mbox.addr = alloca i8*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !12026, metadata !DIExpression()), !dbg !12027
  store i8* %in_mbox, i8** %in_mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %in_mbox.addr, metadata !12028, metadata !DIExpression()), !dbg !12029
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12030
  %1 = load i8*, i8** %in_mbox.addr, align 8, !dbg !12031
  %call = call i32 @mlxsw_cmd_exec_in(%struct.mlxsw_core* %0, i16 zeroext 256, i8 zeroext 1, i32 0, i8* %1, i64 4096) #10, !dbg !12032
  ret i32 %call, !dbg !12033
}

; Function Attrs: noredzone
declare dso_local i32 @mlxsw_core_kvd_sizes_get(%struct.mlxsw_core*, %struct.mlxsw_config_profile*, i64*, i64*, i64*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_res_set(%struct.mlxsw_res* %res, i32 %res_id, i64 %value) #0 !dbg !12034 {
entry:
  %res.addr = alloca %struct.mlxsw_res*, align 8
  %res_id.addr = alloca i32, align 4
  %value.addr = alloca i64, align 8
  store %struct.mlxsw_res* %res, %struct.mlxsw_res** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_res** %res.addr, metadata !12037, metadata !DIExpression()), !dbg !12038
  store i32 %res_id, i32* %res_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %res_id.addr, metadata !12039, metadata !DIExpression()), !dbg !12040
  store i64 %value, i64* %value.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %value.addr, metadata !12041, metadata !DIExpression()), !dbg !12042
  %0 = load %struct.mlxsw_res*, %struct.mlxsw_res** %res.addr, align 8, !dbg !12043
  %valid = getelementptr inbounds %struct.mlxsw_res, %struct.mlxsw_res* %0, i32 0, i32 0, !dbg !12044
  %1 = load i32, i32* %res_id.addr, align 4, !dbg !12045
  %idxprom = zext i32 %1 to i64, !dbg !12043
  %arrayidx = getelementptr [50 x i8], [50 x i8]* %valid, i64 0, i64 %idxprom, !dbg !12043
  store i8 1, i8* %arrayidx, align 1, !dbg !12046
  %2 = load i64, i64* %value.addr, align 8, !dbg !12047
  %3 = load %struct.mlxsw_res*, %struct.mlxsw_res** %res.addr, align 8, !dbg !12048
  %values = getelementptr inbounds %struct.mlxsw_res, %struct.mlxsw_res* %3, i32 0, i32 1, !dbg !12049
  %4 = load i32, i32* %res_id.addr, align 4, !dbg !12050
  %idxprom1 = zext i32 %4 to i64, !dbg !12048
  %arrayidx2 = getelementptr [50 x i64], [50 x i64]* %values, i64 0, i64 %idxprom1, !dbg !12048
  store i64 %2, i64* %arrayidx2, align 8, !dbg !12051
  ret void, !dbg !12052
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_swid_config_type_set(i8* %buf, i16 zeroext %index, i32 %val) #0 !dbg !12053 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12054, metadata !DIExpression()), !dbg !12055
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !12056, metadata !DIExpression()), !dbg !12055
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !12057, metadata !DIExpression()), !dbg !12055
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !12055
  %1 = load i16, i16* %index.addr, align 2, !dbg !12055
  %2 = load i32, i32* %val.addr, align 4, !dbg !12055
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_swid_config_type_item to %struct.mlxsw_item*), i16 zeroext %1, i32 %2) #10, !dbg !12055
  ret void, !dbg !12055
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_swid_config_properties_set(i8* %buf, i16 zeroext %index, i32 %val) #0 !dbg !12058 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12059, metadata !DIExpression()), !dbg !12060
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !12061, metadata !DIExpression()), !dbg !12060
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !12062, metadata !DIExpression()), !dbg !12060
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !12060
  %1 = load i16, i16* %index.addr, align 2, !dbg !12060
  %2 = load i32, i32* %val.addr, align 4, !dbg !12060
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_swid_config_properties_item to %struct.mlxsw_item*), i16 zeroext %1, i32 %2) #10, !dbg !12060
  ret void, !dbg !12060
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_config_profile_swid_config_mask_set(i8* %buf, i16 zeroext %index, i32 %val) #0 !dbg !12063 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12064, metadata !DIExpression()), !dbg !12065
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !12066, metadata !DIExpression()), !dbg !12065
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !12067, metadata !DIExpression()), !dbg !12065
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !12065
  %1 = load i16, i16* %index.addr, align 2, !dbg !12065
  %2 = load i32, i32* %val.addr, align 4, !dbg !12065
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_config_profile_swid_config_mask_item to %struct.mlxsw_item*), i16 zeroext %1, i32 %2) #10, !dbg !12065
  ret void, !dbg !12065
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_query_aq_cap(%struct.mlxsw_core* %mlxsw_core, i8* %out_mbox) #0 !dbg !12068 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %out_mbox.addr = alloca i8*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !12069, metadata !DIExpression()), !dbg !12070
  store i8* %out_mbox, i8** %out_mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out_mbox.addr, metadata !12071, metadata !DIExpression()), !dbg !12072
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12073
  %1 = load i8*, i8** %out_mbox.addr, align 8, !dbg !12074
  %call = call i32 @mlxsw_cmd_exec_out(%struct.mlxsw_core* %0, i16 zeroext 3, i8 zeroext 0, i32 0, i1 zeroext false, i8* %1, i64 4096) #10, !dbg !12075
  ret i32 %call, !dbg !12076
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_mbox_query_aq_cap_max_num_sdqs_get(i8* %buf) #0 !dbg !12077 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12078, metadata !DIExpression()), !dbg !12079
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !12079
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_query_aq_cap_max_num_sdqs_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !12079
  ret i32 %call, !dbg !12079
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_mbox_query_aq_cap_log_max_sdq_sz_get(i8* %buf) #0 !dbg !12080 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12081, metadata !DIExpression()), !dbg !12082
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !12082
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_query_aq_cap_log_max_sdq_sz_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !12082
  ret i32 %call, !dbg !12082
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_mbox_query_aq_cap_max_num_rdqs_get(i8* %buf) #0 !dbg !12083 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12084, metadata !DIExpression()), !dbg !12085
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !12085
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_query_aq_cap_max_num_rdqs_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !12085
  ret i32 %call, !dbg !12085
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_mbox_query_aq_cap_log_max_rdq_sz_get(i8* %buf) #0 !dbg !12086 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12087, metadata !DIExpression()), !dbg !12088
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !12088
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_query_aq_cap_log_max_rdq_sz_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !12088
  ret i32 %call, !dbg !12088
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_mbox_query_aq_cap_max_num_cqs_get(i8* %buf) #0 !dbg !12089 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12090, metadata !DIExpression()), !dbg !12091
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !12091
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_query_aq_cap_max_num_cqs_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !12091
  ret i32 %call, !dbg !12091
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_mbox_query_aq_cap_log_max_cq_sz_get(i8* %buf) #0 !dbg !12092 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12093, metadata !DIExpression()), !dbg !12094
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !12094
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_query_aq_cap_log_max_cq_sz_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !12094
  ret i32 %call, !dbg !12094
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_mbox_query_aq_cap_log_max_cqv2_sz_get(i8* %buf) #0 !dbg !12095 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12096, metadata !DIExpression()), !dbg !12097
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !12097
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_query_aq_cap_log_max_cqv2_sz_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !12097
  ret i32 %call, !dbg !12097
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_mbox_query_aq_cap_max_num_eqs_get(i8* %buf) #0 !dbg !12098 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12099, metadata !DIExpression()), !dbg !12100
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !12100
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_query_aq_cap_max_num_eqs_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !12100
  ret i32 %call, !dbg !12100
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_mbox_query_aq_cap_log_max_eq_sz_get(i8* %buf) #0 !dbg !12101 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12102, metadata !DIExpression()), !dbg !12103
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !12103
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_query_aq_cap_log_max_eq_sz_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !12103
  ret i32 %call, !dbg !12103
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_queue_group_init(%struct.mlxsw_pci* %mlxsw_pci, i8* %mbox, %struct.mlxsw_pci_queue_ops* %q_ops, i8 zeroext %num_qs) #0 !dbg !12104 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %mbox.addr = alloca i8*, align 8
  %q_ops.addr = alloca %struct.mlxsw_pci_queue_ops*, align 8
  %num_qs.addr = alloca i8, align 1
  %queue_group = alloca %struct.mlxsw_pci_queue_type_group*, align 8
  %i = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !12108, metadata !DIExpression()), !dbg !12109
  store i8* %mbox, i8** %mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mbox.addr, metadata !12110, metadata !DIExpression()), !dbg !12111
  store %struct.mlxsw_pci_queue_ops* %q_ops, %struct.mlxsw_pci_queue_ops** %q_ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue_ops** %q_ops.addr, metadata !12112, metadata !DIExpression()), !dbg !12113
  store i8 %num_qs, i8* %num_qs.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %num_qs.addr, metadata !12114, metadata !DIExpression()), !dbg !12115
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue_type_group** %queue_group, metadata !12116, metadata !DIExpression()), !dbg !12118
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12119, metadata !DIExpression()), !dbg !12120
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12121, metadata !DIExpression()), !dbg !12122
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !12123
  %1 = load %struct.mlxsw_pci_queue_ops*, %struct.mlxsw_pci_queue_ops** %q_ops.addr, align 8, !dbg !12124
  %type = getelementptr inbounds %struct.mlxsw_pci_queue_ops, %struct.mlxsw_pci_queue_ops* %1, i32 0, i32 1, !dbg !12125
  %2 = load i32, i32* %type, align 8, !dbg !12125
  %call = call %struct.mlxsw_pci_queue_type_group* @mlxsw_pci_queue_type_group_get(%struct.mlxsw_pci* %0, i32 %2) #10, !dbg !12126
  store %struct.mlxsw_pci_queue_type_group* %call, %struct.mlxsw_pci_queue_type_group** %queue_group, align 8, !dbg !12127
  %3 = load i8, i8* %num_qs.addr, align 1, !dbg !12128
  %conv = zext i8 %3 to i64, !dbg !12128
  %call1 = call i8* @kcalloc(i64 %conv, i64 112, i32 3264) #10, !dbg !12129
  %4 = bitcast i8* %call1 to %struct.mlxsw_pci_queue*, !dbg !12129
  %5 = load %struct.mlxsw_pci_queue_type_group*, %struct.mlxsw_pci_queue_type_group** %queue_group, align 8, !dbg !12130
  %q = getelementptr inbounds %struct.mlxsw_pci_queue_type_group, %struct.mlxsw_pci_queue_type_group* %5, i32 0, i32 0, !dbg !12131
  store %struct.mlxsw_pci_queue* %4, %struct.mlxsw_pci_queue** %q, align 8, !dbg !12132
  %6 = load %struct.mlxsw_pci_queue_type_group*, %struct.mlxsw_pci_queue_type_group** %queue_group, align 8, !dbg !12133
  %q2 = getelementptr inbounds %struct.mlxsw_pci_queue_type_group, %struct.mlxsw_pci_queue_type_group* %6, i32 0, i32 0, !dbg !12135
  %7 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q2, align 8, !dbg !12135
  %tobool = icmp ne %struct.mlxsw_pci_queue* %7, null, !dbg !12133
  br i1 %tobool, label %if.end, label %if.then, !dbg !12136

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !12137
  br label %return, !dbg !12137

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !12138
  br label %for.cond, !dbg !12140

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i32, i32* %i, align 4, !dbg !12141
  %9 = load i8, i8* %num_qs.addr, align 1, !dbg !12143
  %conv3 = zext i8 %9 to i32, !dbg !12143
  %cmp = icmp slt i32 %8, %conv3, !dbg !12144
  br i1 %cmp, label %for.body, label %for.end, !dbg !12145

for.body:                                         ; preds = %for.cond
  %10 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !12146
  %11 = load i8*, i8** %mbox.addr, align 8, !dbg !12148
  %12 = load %struct.mlxsw_pci_queue_ops*, %struct.mlxsw_pci_queue_ops** %q_ops.addr, align 8, !dbg !12149
  %13 = load %struct.mlxsw_pci_queue_type_group*, %struct.mlxsw_pci_queue_type_group** %queue_group, align 8, !dbg !12150
  %q5 = getelementptr inbounds %struct.mlxsw_pci_queue_type_group, %struct.mlxsw_pci_queue_type_group* %13, i32 0, i32 0, !dbg !12151
  %14 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q5, align 8, !dbg !12151
  %15 = load i32, i32* %i, align 4, !dbg !12152
  %idxprom = sext i32 %15 to i64, !dbg !12150
  %arrayidx = getelementptr %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %14, i64 %idxprom, !dbg !12150
  %16 = load i32, i32* %i, align 4, !dbg !12153
  %conv6 = trunc i32 %16 to i8, !dbg !12153
  %call7 = call i32 @mlxsw_pci_queue_init(%struct.mlxsw_pci* %10, i8* %11, %struct.mlxsw_pci_queue_ops* %12, %struct.mlxsw_pci_queue* %arrayidx, i8 zeroext %conv6) #10, !dbg !12154
  store i32 %call7, i32* %err, align 4, !dbg !12155
  %17 = load i32, i32* %err, align 4, !dbg !12156
  %tobool8 = icmp ne i32 %17, 0, !dbg !12156
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !12158

if.then9:                                         ; preds = %for.body
  br label %err_queue_init, !dbg !12159

if.end10:                                         ; preds = %for.body
  br label %for.inc, !dbg !12160

for.inc:                                          ; preds = %if.end10
  %18 = load i32, i32* %i, align 4, !dbg !12161
  %inc = add i32 %18, 1, !dbg !12161
  store i32 %inc, i32* %i, align 4, !dbg !12161
  br label %for.cond, !dbg !12162, !llvm.loop !12163

for.end:                                          ; preds = %for.cond
  %19 = load i8, i8* %num_qs.addr, align 1, !dbg !12165
  %20 = load %struct.mlxsw_pci_queue_type_group*, %struct.mlxsw_pci_queue_type_group** %queue_group, align 8, !dbg !12166
  %count = getelementptr inbounds %struct.mlxsw_pci_queue_type_group, %struct.mlxsw_pci_queue_type_group* %20, i32 0, i32 1, !dbg !12167
  store i8 %19, i8* %count, align 8, !dbg !12168
  store i32 0, i32* %retval, align 4, !dbg !12169
  br label %return, !dbg !12169

err_queue_init:                                   ; preds = %if.then9
  call void @llvm.dbg.label(metadata !12170), !dbg !12171
  %21 = load i32, i32* %i, align 4, !dbg !12172
  %dec = add i32 %21, -1, !dbg !12172
  store i32 %dec, i32* %i, align 4, !dbg !12172
  br label %for.cond11, !dbg !12174

for.cond11:                                       ; preds = %for.inc18, %err_queue_init
  %22 = load i32, i32* %i, align 4, !dbg !12175
  %cmp12 = icmp sge i32 %22, 0, !dbg !12177
  br i1 %cmp12, label %for.body14, label %for.end20, !dbg !12178

for.body14:                                       ; preds = %for.cond11
  %23 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !12179
  %24 = load %struct.mlxsw_pci_queue_ops*, %struct.mlxsw_pci_queue_ops** %q_ops.addr, align 8, !dbg !12180
  %25 = load %struct.mlxsw_pci_queue_type_group*, %struct.mlxsw_pci_queue_type_group** %queue_group, align 8, !dbg !12181
  %q15 = getelementptr inbounds %struct.mlxsw_pci_queue_type_group, %struct.mlxsw_pci_queue_type_group* %25, i32 0, i32 0, !dbg !12182
  %26 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q15, align 8, !dbg !12182
  %27 = load i32, i32* %i, align 4, !dbg !12183
  %idxprom16 = sext i32 %27 to i64, !dbg !12181
  %arrayidx17 = getelementptr %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %26, i64 %idxprom16, !dbg !12181
  call void @mlxsw_pci_queue_fini(%struct.mlxsw_pci* %23, %struct.mlxsw_pci_queue_ops* %24, %struct.mlxsw_pci_queue* %arrayidx17) #10, !dbg !12184
  br label %for.inc18, !dbg !12184

for.inc18:                                        ; preds = %for.body14
  %28 = load i32, i32* %i, align 4, !dbg !12185
  %dec19 = add i32 %28, -1, !dbg !12185
  store i32 %dec19, i32* %i, align 4, !dbg !12185
  br label %for.cond11, !dbg !12186, !llvm.loop !12187

for.end20:                                        ; preds = %for.cond11
  %29 = load %struct.mlxsw_pci_queue_type_group*, %struct.mlxsw_pci_queue_type_group** %queue_group, align 8, !dbg !12189
  %q21 = getelementptr inbounds %struct.mlxsw_pci_queue_type_group, %struct.mlxsw_pci_queue_type_group* %29, i32 0, i32 0, !dbg !12190
  %30 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q21, align 8, !dbg !12190
  %31 = bitcast %struct.mlxsw_pci_queue* %30 to i8*, !dbg !12189
  call void @kfree(i8* %31) #10, !dbg !12191
  %32 = load i32, i32* %err, align 4, !dbg !12192
  store i32 %32, i32* %retval, align 4, !dbg !12193
  br label %return, !dbg !12193

return:                                           ; preds = %for.end20, %for.end, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !12194
  ret i32 %33, !dbg !12194
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_queue_group_fini(%struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci_queue_ops* %q_ops) #0 !dbg !12195 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %q_ops.addr = alloca %struct.mlxsw_pci_queue_ops*, align 8
  %queue_group = alloca %struct.mlxsw_pci_queue_type_group*, align 8
  %i = alloca i32, align 4
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !12198, metadata !DIExpression()), !dbg !12199
  store %struct.mlxsw_pci_queue_ops* %q_ops, %struct.mlxsw_pci_queue_ops** %q_ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue_ops** %q_ops.addr, metadata !12200, metadata !DIExpression()), !dbg !12201
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue_type_group** %queue_group, metadata !12202, metadata !DIExpression()), !dbg !12203
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12204, metadata !DIExpression()), !dbg !12205
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !12206
  %1 = load %struct.mlxsw_pci_queue_ops*, %struct.mlxsw_pci_queue_ops** %q_ops.addr, align 8, !dbg !12207
  %type = getelementptr inbounds %struct.mlxsw_pci_queue_ops, %struct.mlxsw_pci_queue_ops* %1, i32 0, i32 1, !dbg !12208
  %2 = load i32, i32* %type, align 8, !dbg !12208
  %call = call %struct.mlxsw_pci_queue_type_group* @mlxsw_pci_queue_type_group_get(%struct.mlxsw_pci* %0, i32 %2) #10, !dbg !12209
  store %struct.mlxsw_pci_queue_type_group* %call, %struct.mlxsw_pci_queue_type_group** %queue_group, align 8, !dbg !12210
  store i32 0, i32* %i, align 4, !dbg !12211
  br label %for.cond, !dbg !12213

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !12214
  %4 = load %struct.mlxsw_pci_queue_type_group*, %struct.mlxsw_pci_queue_type_group** %queue_group, align 8, !dbg !12216
  %count = getelementptr inbounds %struct.mlxsw_pci_queue_type_group, %struct.mlxsw_pci_queue_type_group* %4, i32 0, i32 1, !dbg !12217
  %5 = load i8, i8* %count, align 8, !dbg !12217
  %conv = zext i8 %5 to i32, !dbg !12216
  %cmp = icmp slt i32 %3, %conv, !dbg !12218
  br i1 %cmp, label %for.body, label %for.end, !dbg !12219

for.body:                                         ; preds = %for.cond
  %6 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !12220
  %7 = load %struct.mlxsw_pci_queue_ops*, %struct.mlxsw_pci_queue_ops** %q_ops.addr, align 8, !dbg !12221
  %8 = load %struct.mlxsw_pci_queue_type_group*, %struct.mlxsw_pci_queue_type_group** %queue_group, align 8, !dbg !12222
  %q = getelementptr inbounds %struct.mlxsw_pci_queue_type_group, %struct.mlxsw_pci_queue_type_group* %8, i32 0, i32 0, !dbg !12223
  %9 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q, align 8, !dbg !12223
  %10 = load i32, i32* %i, align 4, !dbg !12224
  %idxprom = sext i32 %10 to i64, !dbg !12222
  %arrayidx = getelementptr %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %9, i64 %idxprom, !dbg !12222
  call void @mlxsw_pci_queue_fini(%struct.mlxsw_pci* %6, %struct.mlxsw_pci_queue_ops* %7, %struct.mlxsw_pci_queue* %arrayidx) #10, !dbg !12225
  br label %for.inc, !dbg !12225

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !12226
  %inc = add i32 %11, 1, !dbg !12226
  store i32 %inc, i32* %i, align 4, !dbg !12226
  br label %for.cond, !dbg !12227, !llvm.loop !12228

for.end:                                          ; preds = %for.cond
  %12 = load %struct.mlxsw_pci_queue_type_group*, %struct.mlxsw_pci_queue_type_group** %queue_group, align 8, !dbg !12230
  %q2 = getelementptr inbounds %struct.mlxsw_pci_queue_type_group, %struct.mlxsw_pci_queue_type_group* %12, i32 0, i32 0, !dbg !12231
  %13 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q2, align 8, !dbg !12231
  %14 = bitcast %struct.mlxsw_pci_queue* %13 to i8*, !dbg !12230
  call void @kfree(i8* %14) #10, !dbg !12232
  ret void, !dbg !12233
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_pci_queue_type_group* @mlxsw_pci_queue_type_group_get(%struct.mlxsw_pci* %mlxsw_pci, i32 %q_type) #0 !dbg !12234 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %q_type.addr = alloca i32, align 4
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !12237, metadata !DIExpression()), !dbg !12238
  store i32 %q_type, i32* %q_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %q_type.addr, metadata !12239, metadata !DIExpression()), !dbg !12240
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !12241
  %queues = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %0, i32 0, i32 3, !dbg !12242
  %1 = load i32, i32* %q_type.addr, align 4, !dbg !12243
  %idxprom = zext i32 %1 to i64, !dbg !12241
  %arrayidx = getelementptr [4 x %struct.mlxsw_pci_queue_type_group], [4 x %struct.mlxsw_pci_queue_type_group]* %queues, i64 0, i64 %idxprom, !dbg !12241
  ret %struct.mlxsw_pci_queue_type_group* %arrayidx, !dbg !12244
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_queue_init(%struct.mlxsw_pci* %mlxsw_pci, i8* %mbox, %struct.mlxsw_pci_queue_ops* %q_ops, %struct.mlxsw_pci_queue* %q, i8 zeroext %q_num) #0 !dbg !12245 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !12248, metadata !DIExpression()), !dbg !12254
  %retval = alloca i32, align 4
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %mbox.addr = alloca i8*, align 8
  %q_ops.addr = alloca %struct.mlxsw_pci_queue_ops*, align 8
  %q.addr = alloca %struct.mlxsw_pci_queue*, align 8
  %q_num.addr = alloca i8, align 1
  %mem_item = alloca %struct.mlxsw_pci_mem_item*, align 8
  %i = alloca i32, align 4
  %err = alloca i32, align 4
  %.compoundliteral = alloca %struct.spinlock, align 1
  %elem_info42 = alloca %struct.mlxsw_pci_queue_elem_info*, align 8
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !12257, metadata !DIExpression()), !dbg !12258
  store i8* %mbox, i8** %mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mbox.addr, metadata !12259, metadata !DIExpression()), !dbg !12260
  store %struct.mlxsw_pci_queue_ops* %q_ops, %struct.mlxsw_pci_queue_ops** %q_ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue_ops** %q_ops.addr, metadata !12261, metadata !DIExpression()), !dbg !12262
  store %struct.mlxsw_pci_queue* %q, %struct.mlxsw_pci_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q.addr, metadata !12263, metadata !DIExpression()), !dbg !12264
  store i8 %q_num, i8* %q_num.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %q_num.addr, metadata !12265, metadata !DIExpression()), !dbg !12266
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_mem_item** %mem_item, metadata !12267, metadata !DIExpression()), !dbg !12268
  %0 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12269
  %mem_item1 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %0, i32 0, i32 1, !dbg !12270
  store %struct.mlxsw_pci_mem_item* %mem_item1, %struct.mlxsw_pci_mem_item** %mem_item, align 8, !dbg !12268
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12271, metadata !DIExpression()), !dbg !12272
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12273, metadata !DIExpression()), !dbg !12274
  %1 = load i8, i8* %q_num.addr, align 1, !dbg !12275
  %2 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12276
  %num = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %2, i32 0, i32 6, !dbg !12277
  store i8 %1, i8* %num, align 2, !dbg !12278
  %3 = load %struct.mlxsw_pci_queue_ops*, %struct.mlxsw_pci_queue_ops** %q_ops.addr, align 8, !dbg !12279
  %pre_init = getelementptr inbounds %struct.mlxsw_pci_queue_ops, %struct.mlxsw_pci_queue_ops* %3, i32 0, i32 2, !dbg !12281
  %4 = load void (%struct.mlxsw_pci*, %struct.mlxsw_pci_queue*)*, void (%struct.mlxsw_pci*, %struct.mlxsw_pci_queue*)** %pre_init, align 8, !dbg !12281
  %tobool = icmp ne void (%struct.mlxsw_pci*, %struct.mlxsw_pci_queue*)* %4, null, !dbg !12279
  br i1 %tobool, label %if.then, label %if.end, !dbg !12282

if.then:                                          ; preds = %entry
  %5 = load %struct.mlxsw_pci_queue_ops*, %struct.mlxsw_pci_queue_ops** %q_ops.addr, align 8, !dbg !12283
  %pre_init2 = getelementptr inbounds %struct.mlxsw_pci_queue_ops, %struct.mlxsw_pci_queue_ops* %5, i32 0, i32 2, !dbg !12284
  %6 = load void (%struct.mlxsw_pci*, %struct.mlxsw_pci_queue*)*, void (%struct.mlxsw_pci*, %struct.mlxsw_pci_queue*)** %pre_init2, align 8, !dbg !12284
  %7 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !12285
  %8 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12286
  call void %6(%struct.mlxsw_pci* %7, %struct.mlxsw_pci_queue* %8) #10, !dbg !12283
  br label %if.end, !dbg !12283

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !12287

do.body:                                          ; preds = %if.end
  %9 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12288
  %lock = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %9, i32 0, i32 0, !dbg !12288
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12289
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !12290
  %rlock.i = bitcast %union.anon.1* %11 to %struct.raw_spinlock*, !dbg !12290
  %12 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12288
  %lock3 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %12, i32 0, i32 0, !dbg !12288
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !12288
  %rlock = bitcast %union.anon.1* %13 to %struct.raw_spinlock*, !dbg !12288
  %14 = bitcast %struct.spinlock* %lock3 to i8*, !dbg !12288
  %15 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !12288
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 1 %15, i64 0, i1 false), !dbg !12288
  br label %do.end, !dbg !12288

do.end:                                           ; preds = %do.body
  %16 = load %struct.mlxsw_pci_queue_ops*, %struct.mlxsw_pci_queue_ops** %q_ops.addr, align 8, !dbg !12291
  %elem_count_f = getelementptr inbounds %struct.mlxsw_pci_queue_ops, %struct.mlxsw_pci_queue_ops* %16, i32 0, i32 6, !dbg !12292
  %17 = load i16 (%struct.mlxsw_pci_queue*)*, i16 (%struct.mlxsw_pci_queue*)** %elem_count_f, align 8, !dbg !12292
  %tobool4 = icmp ne i16 (%struct.mlxsw_pci_queue*)* %17, null, !dbg !12291
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !12291

cond.true:                                        ; preds = %do.end
  %18 = load %struct.mlxsw_pci_queue_ops*, %struct.mlxsw_pci_queue_ops** %q_ops.addr, align 8, !dbg !12293
  %elem_count_f5 = getelementptr inbounds %struct.mlxsw_pci_queue_ops, %struct.mlxsw_pci_queue_ops* %18, i32 0, i32 6, !dbg !12294
  %19 = load i16 (%struct.mlxsw_pci_queue*)*, i16 (%struct.mlxsw_pci_queue*)** %elem_count_f5, align 8, !dbg !12294
  %20 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12295
  %call6 = call zeroext i16 %19(%struct.mlxsw_pci_queue* %20) #10, !dbg !12293
  %conv = zext i16 %call6 to i32, !dbg !12293
  br label %cond.end, !dbg !12291

cond.false:                                       ; preds = %do.end
  %21 = load %struct.mlxsw_pci_queue_ops*, %struct.mlxsw_pci_queue_ops** %q_ops.addr, align 8, !dbg !12296
  %elem_count = getelementptr inbounds %struct.mlxsw_pci_queue_ops, %struct.mlxsw_pci_queue_ops* %21, i32 0, i32 8, !dbg !12297
  %22 = load i16, i16* %elem_count, align 8, !dbg !12297
  %conv7 = zext i16 %22 to i32, !dbg !12296
  br label %cond.end, !dbg !12291

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv7, %cond.false ], !dbg !12291
  %conv8 = trunc i32 %cond to i16, !dbg !12291
  %23 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12298
  %count = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %23, i32 0, i32 5, !dbg !12299
  store i16 %conv8, i16* %count, align 4, !dbg !12300
  %24 = load %struct.mlxsw_pci_queue_ops*, %struct.mlxsw_pci_queue_ops** %q_ops.addr, align 8, !dbg !12301
  %elem_size_f = getelementptr inbounds %struct.mlxsw_pci_queue_ops, %struct.mlxsw_pci_queue_ops* %24, i32 0, i32 7, !dbg !12302
  %25 = load i8 (%struct.mlxsw_pci_queue*)*, i8 (%struct.mlxsw_pci_queue*)** %elem_size_f, align 8, !dbg !12302
  %tobool9 = icmp ne i8 (%struct.mlxsw_pci_queue*)* %25, null, !dbg !12301
  br i1 %tobool9, label %cond.true10, label %cond.false14, !dbg !12301

cond.true10:                                      ; preds = %cond.end
  %26 = load %struct.mlxsw_pci_queue_ops*, %struct.mlxsw_pci_queue_ops** %q_ops.addr, align 8, !dbg !12303
  %elem_size_f11 = getelementptr inbounds %struct.mlxsw_pci_queue_ops, %struct.mlxsw_pci_queue_ops* %26, i32 0, i32 7, !dbg !12304
  %27 = load i8 (%struct.mlxsw_pci_queue*)*, i8 (%struct.mlxsw_pci_queue*)** %elem_size_f11, align 8, !dbg !12304
  %28 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12305
  %call12 = call zeroext i8 %27(%struct.mlxsw_pci_queue* %28) #10, !dbg !12303
  %conv13 = zext i8 %call12 to i32, !dbg !12303
  br label %cond.end16, !dbg !12301

cond.false14:                                     ; preds = %cond.end
  %29 = load %struct.mlxsw_pci_queue_ops*, %struct.mlxsw_pci_queue_ops** %q_ops.addr, align 8, !dbg !12306
  %elem_size = getelementptr inbounds %struct.mlxsw_pci_queue_ops, %struct.mlxsw_pci_queue_ops* %29, i32 0, i32 9, !dbg !12307
  %30 = load i8, i8* %elem_size, align 2, !dbg !12307
  %conv15 = zext i8 %30 to i32, !dbg !12306
  br label %cond.end16, !dbg !12301

cond.end16:                                       ; preds = %cond.false14, %cond.true10
  %cond17 = phi i32 [ %conv13, %cond.true10 ], [ %conv15, %cond.false14 ], !dbg !12301
  %conv18 = trunc i32 %cond17 to i8, !dbg !12301
  %31 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12308
  %elem_size19 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %31, i32 0, i32 7, !dbg !12309
  store i8 %conv18, i8* %elem_size19, align 1, !dbg !12310
  %32 = load %struct.mlxsw_pci_queue_ops*, %struct.mlxsw_pci_queue_ops** %q_ops.addr, align 8, !dbg !12311
  %type = getelementptr inbounds %struct.mlxsw_pci_queue_ops, %struct.mlxsw_pci_queue_ops* %32, i32 0, i32 1, !dbg !12312
  %33 = load i32, i32* %type, align 8, !dbg !12312
  %34 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12313
  %type20 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %34, i32 0, i32 8, !dbg !12314
  store i32 %33, i32* %type20, align 8, !dbg !12315
  %35 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !12316
  %36 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12317
  %pci = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %36, i32 0, i32 10, !dbg !12318
  store %struct.mlxsw_pci* %35, %struct.mlxsw_pci** %pci, align 8, !dbg !12319
  %37 = load %struct.mlxsw_pci_queue_ops*, %struct.mlxsw_pci_queue_ops** %q_ops.addr, align 8, !dbg !12320
  %tasklet = getelementptr inbounds %struct.mlxsw_pci_queue_ops, %struct.mlxsw_pci_queue_ops* %37, i32 0, i32 5, !dbg !12322
  %38 = load void (%struct.tasklet_struct*)*, void (%struct.tasklet_struct*)** %tasklet, align 8, !dbg !12322
  %tobool21 = icmp ne void (%struct.tasklet_struct*)* %38, null, !dbg !12320
  br i1 %tobool21, label %if.then22, label %if.end25, !dbg !12323

if.then22:                                        ; preds = %cond.end16
  %39 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12324
  %tasklet23 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %39, i32 0, i32 9, !dbg !12325
  %40 = load %struct.mlxsw_pci_queue_ops*, %struct.mlxsw_pci_queue_ops** %q_ops.addr, align 8, !dbg !12326
  %tasklet24 = getelementptr inbounds %struct.mlxsw_pci_queue_ops, %struct.mlxsw_pci_queue_ops* %40, i32 0, i32 5, !dbg !12327
  %41 = load void (%struct.tasklet_struct*)*, void (%struct.tasklet_struct*)** %tasklet24, align 8, !dbg !12327
  call void @tasklet_setup(%struct.tasklet_struct* %tasklet23, void (%struct.tasklet_struct*)* %41) #10, !dbg !12328
  br label %if.end25, !dbg !12328

if.end25:                                         ; preds = %if.then22, %cond.end16
  %42 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %mem_item, align 8, !dbg !12329
  %size = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %42, i32 0, i32 2, !dbg !12330
  store i64 32768, i64* %size, align 8, !dbg !12331
  %43 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !12332
  %pdev = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %43, i32 0, i32 0, !dbg !12333
  %44 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12333
  %45 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %mem_item, align 8, !dbg !12334
  %size26 = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %45, i32 0, i32 2, !dbg !12335
  %46 = load i64, i64* %size26, align 8, !dbg !12335
  %47 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %mem_item, align 8, !dbg !12336
  %mapaddr = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %47, i32 0, i32 1, !dbg !12337
  %call27 = call i8* @pci_alloc_consistent(%struct.pci_dev* %44, i64 %46, i64* %mapaddr) #10, !dbg !12338
  %48 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %mem_item, align 8, !dbg !12339
  %buf = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %48, i32 0, i32 0, !dbg !12340
  store i8* %call27, i8** %buf, align 8, !dbg !12341
  %49 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %mem_item, align 8, !dbg !12342
  %buf28 = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %49, i32 0, i32 0, !dbg !12344
  %50 = load i8*, i8** %buf28, align 8, !dbg !12344
  %tobool29 = icmp ne i8* %50, null, !dbg !12342
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !12345

if.then30:                                        ; preds = %if.end25
  store i32 -12, i32* %retval, align 4, !dbg !12346
  br label %return, !dbg !12346

if.end31:                                         ; preds = %if.end25
  %51 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12347
  %count32 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %51, i32 0, i32 5, !dbg !12348
  %52 = load i16, i16* %count32, align 4, !dbg !12348
  %conv33 = zext i16 %52 to i64, !dbg !12347
  %call34 = call i8* @kcalloc(i64 %conv33, i64 16, i32 3264) #10, !dbg !12349
  %53 = bitcast i8* %call34 to %struct.mlxsw_pci_queue_elem_info*, !dbg !12349
  %54 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12350
  %elem_info = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %54, i32 0, i32 2, !dbg !12351
  store %struct.mlxsw_pci_queue_elem_info* %53, %struct.mlxsw_pci_queue_elem_info** %elem_info, align 8, !dbg !12352
  %55 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12353
  %elem_info35 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %55, i32 0, i32 2, !dbg !12355
  %56 = load %struct.mlxsw_pci_queue_elem_info*, %struct.mlxsw_pci_queue_elem_info** %elem_info35, align 8, !dbg !12355
  %tobool36 = icmp ne %struct.mlxsw_pci_queue_elem_info* %56, null, !dbg !12353
  br i1 %tobool36, label %if.end38, label %if.then37, !dbg !12356

if.then37:                                        ; preds = %if.end31
  store i32 -12, i32* %err, align 4, !dbg !12357
  br label %err_elem_info_alloc, !dbg !12359

if.end38:                                         ; preds = %if.end31
  store i32 0, i32* %i, align 4, !dbg !12360
  br label %for.cond, !dbg !12362

for.cond:                                         ; preds = %for.inc, %if.end38
  %57 = load i32, i32* %i, align 4, !dbg !12363
  %58 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12365
  %count39 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %58, i32 0, i32 5, !dbg !12366
  %59 = load i16, i16* %count39, align 4, !dbg !12366
  %conv40 = zext i16 %59 to i32, !dbg !12365
  %cmp = icmp slt i32 %57, %conv40, !dbg !12367
  br i1 %cmp, label %for.body, label %for.end, !dbg !12368

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue_elem_info** %elem_info42, metadata !12369, metadata !DIExpression()), !dbg !12371
  %60 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12372
  %61 = load i32, i32* %i, align 4, !dbg !12373
  %call43 = call %struct.mlxsw_pci_queue_elem_info* @mlxsw_pci_queue_elem_info_get(%struct.mlxsw_pci_queue* %60, i32 %61) #10, !dbg !12374
  store %struct.mlxsw_pci_queue_elem_info* %call43, %struct.mlxsw_pci_queue_elem_info** %elem_info42, align 8, !dbg !12375
  %62 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12376
  %63 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12377
  %elem_size44 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %63, i32 0, i32 7, !dbg !12378
  %64 = load i8, i8* %elem_size44, align 1, !dbg !12378
  %conv45 = zext i8 %64 to i64, !dbg !12377
  %65 = load i32, i32* %i, align 4, !dbg !12379
  %call46 = call i8* @__mlxsw_pci_queue_elem_get(%struct.mlxsw_pci_queue* %62, i64 %conv45, i32 %65) #10, !dbg !12380
  %66 = load %struct.mlxsw_pci_queue_elem_info*, %struct.mlxsw_pci_queue_elem_info** %elem_info42, align 8, !dbg !12381
  %elem = getelementptr inbounds %struct.mlxsw_pci_queue_elem_info, %struct.mlxsw_pci_queue_elem_info* %66, i32 0, i32 0, !dbg !12382
  store i8* %call46, i8** %elem, align 8, !dbg !12383
  br label %for.inc, !dbg !12384

for.inc:                                          ; preds = %for.body
  %67 = load i32, i32* %i, align 4, !dbg !12385
  %inc = add i32 %67, 1, !dbg !12385
  store i32 %inc, i32* %i, align 4, !dbg !12385
  br label %for.cond, !dbg !12386, !llvm.loop !12387

for.end:                                          ; preds = %for.cond
  %68 = load i8*, i8** %mbox.addr, align 8, !dbg !12389
  call void @mlxsw_cmd_mbox_zero(i8* %68) #10, !dbg !12390
  %69 = load %struct.mlxsw_pci_queue_ops*, %struct.mlxsw_pci_queue_ops** %q_ops.addr, align 8, !dbg !12391
  %init = getelementptr inbounds %struct.mlxsw_pci_queue_ops, %struct.mlxsw_pci_queue_ops* %69, i32 0, i32 3, !dbg !12392
  %70 = load i32 (%struct.mlxsw_pci*, i8*, %struct.mlxsw_pci_queue*)*, i32 (%struct.mlxsw_pci*, i8*, %struct.mlxsw_pci_queue*)** %init, align 8, !dbg !12392
  %71 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !12393
  %72 = load i8*, i8** %mbox.addr, align 8, !dbg !12394
  %73 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12395
  %call47 = call i32 %70(%struct.mlxsw_pci* %71, i8* %72, %struct.mlxsw_pci_queue* %73) #10, !dbg !12391
  store i32 %call47, i32* %err, align 4, !dbg !12396
  %74 = load i32, i32* %err, align 4, !dbg !12397
  %tobool48 = icmp ne i32 %74, 0, !dbg !12397
  br i1 %tobool48, label %if.then49, label %if.end50, !dbg !12399

if.then49:                                        ; preds = %for.end
  br label %err_q_ops_init, !dbg !12400

if.end50:                                         ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !12401
  br label %return, !dbg !12401

err_q_ops_init:                                   ; preds = %if.then49
  call void @llvm.dbg.label(metadata !12402), !dbg !12403
  %75 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12404
  %elem_info51 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %75, i32 0, i32 2, !dbg !12405
  %76 = load %struct.mlxsw_pci_queue_elem_info*, %struct.mlxsw_pci_queue_elem_info** %elem_info51, align 8, !dbg !12405
  %77 = bitcast %struct.mlxsw_pci_queue_elem_info* %76 to i8*, !dbg !12404
  call void @kfree(i8* %77) #10, !dbg !12406
  br label %err_elem_info_alloc, !dbg !12406

err_elem_info_alloc:                              ; preds = %err_q_ops_init, %if.then37
  call void @llvm.dbg.label(metadata !12407), !dbg !12408
  %78 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !12409
  %pdev52 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %78, i32 0, i32 0, !dbg !12410
  %79 = load %struct.pci_dev*, %struct.pci_dev** %pdev52, align 8, !dbg !12410
  %80 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %mem_item, align 8, !dbg !12411
  %size53 = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %80, i32 0, i32 2, !dbg !12412
  %81 = load i64, i64* %size53, align 8, !dbg !12412
  %82 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %mem_item, align 8, !dbg !12413
  %buf54 = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %82, i32 0, i32 0, !dbg !12414
  %83 = load i8*, i8** %buf54, align 8, !dbg !12414
  %84 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %mem_item, align 8, !dbg !12415
  %mapaddr55 = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %84, i32 0, i32 1, !dbg !12416
  %85 = load i64, i64* %mapaddr55, align 8, !dbg !12416
  call void @pci_free_consistent(%struct.pci_dev* %79, i64 %81, i8* %83, i64 %85) #10, !dbg !12417
  %86 = load i32, i32* %err, align 4, !dbg !12418
  store i32 %86, i32* %retval, align 4, !dbg !12419
  br label %return, !dbg !12419

return:                                           ; preds = %err_elem_info_alloc, %if.end50, %if.then30
  %87 = load i32, i32* %retval, align 4, !dbg !12420
  ret i32 %87, !dbg !12420
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_queue_fini(%struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci_queue_ops* %q_ops, %struct.mlxsw_pci_queue* %q) #0 !dbg !12421 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %q_ops.addr = alloca %struct.mlxsw_pci_queue_ops*, align 8
  %q.addr = alloca %struct.mlxsw_pci_queue*, align 8
  %mem_item = alloca %struct.mlxsw_pci_mem_item*, align 8
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !12424, metadata !DIExpression()), !dbg !12425
  store %struct.mlxsw_pci_queue_ops* %q_ops, %struct.mlxsw_pci_queue_ops** %q_ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue_ops** %q_ops.addr, metadata !12426, metadata !DIExpression()), !dbg !12427
  store %struct.mlxsw_pci_queue* %q, %struct.mlxsw_pci_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q.addr, metadata !12428, metadata !DIExpression()), !dbg !12429
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_mem_item** %mem_item, metadata !12430, metadata !DIExpression()), !dbg !12431
  %0 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12432
  %mem_item1 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %0, i32 0, i32 1, !dbg !12433
  store %struct.mlxsw_pci_mem_item* %mem_item1, %struct.mlxsw_pci_mem_item** %mem_item, align 8, !dbg !12431
  %1 = load %struct.mlxsw_pci_queue_ops*, %struct.mlxsw_pci_queue_ops** %q_ops.addr, align 8, !dbg !12434
  %fini = getelementptr inbounds %struct.mlxsw_pci_queue_ops, %struct.mlxsw_pci_queue_ops* %1, i32 0, i32 4, !dbg !12435
  %2 = load void (%struct.mlxsw_pci*, %struct.mlxsw_pci_queue*)*, void (%struct.mlxsw_pci*, %struct.mlxsw_pci_queue*)** %fini, align 8, !dbg !12435
  %3 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !12436
  %4 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12437
  call void %2(%struct.mlxsw_pci* %3, %struct.mlxsw_pci_queue* %4) #10, !dbg !12434
  %5 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12438
  %elem_info = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %5, i32 0, i32 2, !dbg !12439
  %6 = load %struct.mlxsw_pci_queue_elem_info*, %struct.mlxsw_pci_queue_elem_info** %elem_info, align 8, !dbg !12439
  %7 = bitcast %struct.mlxsw_pci_queue_elem_info* %6 to i8*, !dbg !12438
  call void @kfree(i8* %7) #10, !dbg !12440
  %8 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !12441
  %pdev = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %8, i32 0, i32 0, !dbg !12442
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !12442
  %10 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %mem_item, align 8, !dbg !12443
  %size = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %10, i32 0, i32 2, !dbg !12444
  %11 = load i64, i64* %size, align 8, !dbg !12444
  %12 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %mem_item, align 8, !dbg !12445
  %buf = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %12, i32 0, i32 0, !dbg !12446
  %13 = load i8*, i8** %buf, align 8, !dbg !12446
  %14 = load %struct.mlxsw_pci_mem_item*, %struct.mlxsw_pci_mem_item** %mem_item, align 8, !dbg !12447
  %mapaddr = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %14, i32 0, i32 1, !dbg !12448
  %15 = load i64, i64* %mapaddr, align 8, !dbg !12448
  call void @pci_free_consistent(%struct.pci_dev* %9, i64 %11, i8* %13, i64 %15) #10, !dbg !12449
  ret void, !dbg !12450
}

; Function Attrs: noredzone
declare dso_local void @tasklet_setup(%struct.tasklet_struct*, void (%struct.tasklet_struct*)*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_pci_queue_elem_info* @mlxsw_pci_queue_elem_info_get(%struct.mlxsw_pci_queue* %q, i32 %elem_index) #0 !dbg !12451 {
entry:
  %q.addr = alloca %struct.mlxsw_pci_queue*, align 8
  %elem_index.addr = alloca i32, align 4
  store %struct.mlxsw_pci_queue* %q, %struct.mlxsw_pci_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q.addr, metadata !12454, metadata !DIExpression()), !dbg !12455
  store i32 %elem_index, i32* %elem_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %elem_index.addr, metadata !12456, metadata !DIExpression()), !dbg !12457
  %0 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12458
  %elem_info = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %0, i32 0, i32 2, !dbg !12459
  %1 = load %struct.mlxsw_pci_queue_elem_info*, %struct.mlxsw_pci_queue_elem_info** %elem_info, align 8, !dbg !12459
  %2 = load i32, i32* %elem_index.addr, align 4, !dbg !12460
  %idxprom = sext i32 %2 to i64, !dbg !12458
  %arrayidx = getelementptr %struct.mlxsw_pci_queue_elem_info, %struct.mlxsw_pci_queue_elem_info* %1, i64 %idxprom, !dbg !12458
  ret %struct.mlxsw_pci_queue_elem_info* %arrayidx, !dbg !12461
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @__mlxsw_pci_queue_elem_get(%struct.mlxsw_pci_queue* %q, i64 %elem_size, i32 %elem_index) #0 !dbg !12462 {
entry:
  %q.addr = alloca %struct.mlxsw_pci_queue*, align 8
  %elem_size.addr = alloca i64, align 8
  %elem_index.addr = alloca i32, align 4
  store %struct.mlxsw_pci_queue* %q, %struct.mlxsw_pci_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q.addr, metadata !12465, metadata !DIExpression()), !dbg !12466
  store i64 %elem_size, i64* %elem_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %elem_size.addr, metadata !12467, metadata !DIExpression()), !dbg !12468
  store i32 %elem_index, i32* %elem_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %elem_index.addr, metadata !12469, metadata !DIExpression()), !dbg !12470
  %0 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12471
  %mem_item = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %0, i32 0, i32 1, !dbg !12472
  %buf = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %mem_item, i32 0, i32 0, !dbg !12473
  %1 = load i8*, i8** %buf, align 8, !dbg !12473
  %2 = load i64, i64* %elem_size.addr, align 8, !dbg !12474
  %3 = load i32, i32* %elem_index.addr, align 4, !dbg !12475
  %conv = sext i32 %3 to i64, !dbg !12475
  %mul = mul i64 %2, %conv, !dbg !12476
  %add.ptr = getelementptr i8, i8* %1, i64 %mul, !dbg !12477
  ret i8* %add.ptr, !dbg !12478
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_eq_init(%struct.mlxsw_pci* %mlxsw_pci, i8* %mbox, %struct.mlxsw_pci_queue* %q) #0 !dbg !12479 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %mbox.addr = alloca i8*, align 8
  %q.addr = alloca %struct.mlxsw_pci_queue*, align 8
  %i = alloca i32, align 4
  %err = alloca i32, align 4
  %elem = alloca i8*, align 8
  %mapaddr = alloca i64, align 8
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !12480, metadata !DIExpression()), !dbg !12481
  store i8* %mbox, i8** %mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mbox.addr, metadata !12482, metadata !DIExpression()), !dbg !12483
  store %struct.mlxsw_pci_queue* %q, %struct.mlxsw_pci_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q.addr, metadata !12484, metadata !DIExpression()), !dbg !12485
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12486, metadata !DIExpression()), !dbg !12487
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12488, metadata !DIExpression()), !dbg !12489
  %0 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12490
  %consumer_counter = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %0, i32 0, i32 4, !dbg !12491
  store i16 0, i16* %consumer_counter, align 2, !dbg !12492
  store i32 0, i32* %i, align 4, !dbg !12493
  br label %for.cond, !dbg !12495

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !12496
  %2 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12498
  %count = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %2, i32 0, i32 5, !dbg !12499
  %3 = load i16, i16* %count, align 4, !dbg !12499
  %conv = zext i16 %3 to i32, !dbg !12498
  %cmp = icmp slt i32 %1, %conv, !dbg !12500
  br i1 %cmp, label %for.body, label %for.end, !dbg !12501

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %elem, metadata !12502, metadata !DIExpression()), !dbg !12504
  %4 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12505
  %5 = load i32, i32* %i, align 4, !dbg !12506
  %call = call i8* @mlxsw_pci_queue_elem_get(%struct.mlxsw_pci_queue* %4, i32 %5) #10, !dbg !12507
  store i8* %call, i8** %elem, align 8, !dbg !12504
  %6 = load i8*, i8** %elem, align 8, !dbg !12508
  call void @mlxsw_pci_eqe_owner_set(i8* %6, i32 1) #10, !dbg !12509
  br label %for.inc, !dbg !12510

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !12511
  %inc = add i32 %7, 1, !dbg !12511
  store i32 %inc, i32* %i, align 4, !dbg !12511
  br label %for.cond, !dbg !12512, !llvm.loop !12513

for.end:                                          ; preds = %for.cond
  %8 = load i8*, i8** %mbox.addr, align 8, !dbg !12515
  call void @mlxsw_cmd_mbox_sw2hw_eq_int_msix_set(i8* %8, i32 1) #10, !dbg !12516
  %9 = load i8*, i8** %mbox.addr, align 8, !dbg !12517
  call void @mlxsw_cmd_mbox_sw2hw_eq_st_set(i8* %9, i32 1) #10, !dbg !12518
  %10 = load i8*, i8** %mbox.addr, align 8, !dbg !12519
  %11 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count2 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %11, i32 0, i32 5, !dbg !12520
  %12 = load i16, i16* %count2, align 4, !dbg !12520
  %13 = call i1 @llvm.is.constant.i16(i16 %12), !dbg !12520
  br i1 %13, label %cond.true, label %cond.false504, !dbg !12520

cond.true:                                        ; preds = %for.end
  %14 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count3 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %14, i32 0, i32 5, !dbg !12520
  %15 = load i16, i16* %count3, align 4, !dbg !12520
  %16 = call i1 @llvm.is.constant.i16(i16 %15), !dbg !12520
  br i1 %16, label %cond.true4, label %cond.false501, !dbg !12520

cond.true4:                                       ; preds = %cond.true
  %17 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count5 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %17, i32 0, i32 5, !dbg !12520
  %18 = load i16, i16* %count5, align 4, !dbg !12520
  %conv6 = zext i16 %18 to i32, !dbg !12520
  %cmp7 = icmp slt i32 %conv6, 2, !dbg !12520
  br i1 %cmp7, label %cond.true9, label %cond.false, !dbg !12520

cond.true9:                                       ; preds = %cond.true4
  br label %cond.end499, !dbg !12520

cond.false:                                       ; preds = %cond.true4
  %19 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count10 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %19, i32 0, i32 5, !dbg !12520
  %20 = load i16, i16* %count10, align 4, !dbg !12520
  %conv11 = zext i16 %20 to i64, !dbg !12520
  %and = and i64 %conv11, -9223372036854775808, !dbg !12520
  %tobool = icmp ne i64 %and, 0, !dbg !12520
  br i1 %tobool, label %cond.true12, label %cond.false13, !dbg !12520

cond.true12:                                      ; preds = %cond.false
  br label %cond.end497, !dbg !12520

cond.false13:                                     ; preds = %cond.false
  %21 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count14 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %21, i32 0, i32 5, !dbg !12520
  %22 = load i16, i16* %count14, align 4, !dbg !12520
  %conv15 = zext i16 %22 to i64, !dbg !12520
  %and16 = and i64 %conv15, 4611686018427387904, !dbg !12520
  %tobool17 = icmp ne i64 %and16, 0, !dbg !12520
  br i1 %tobool17, label %cond.true18, label %cond.false19, !dbg !12520

cond.true18:                                      ; preds = %cond.false13
  br label %cond.end495, !dbg !12520

cond.false19:                                     ; preds = %cond.false13
  %23 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count20 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %23, i32 0, i32 5, !dbg !12520
  %24 = load i16, i16* %count20, align 4, !dbg !12520
  %conv21 = zext i16 %24 to i64, !dbg !12520
  %and22 = and i64 %conv21, 2305843009213693952, !dbg !12520
  %tobool23 = icmp ne i64 %and22, 0, !dbg !12520
  br i1 %tobool23, label %cond.true24, label %cond.false25, !dbg !12520

cond.true24:                                      ; preds = %cond.false19
  br label %cond.end493, !dbg !12520

cond.false25:                                     ; preds = %cond.false19
  %25 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count26 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %25, i32 0, i32 5, !dbg !12520
  %26 = load i16, i16* %count26, align 4, !dbg !12520
  %conv27 = zext i16 %26 to i64, !dbg !12520
  %and28 = and i64 %conv27, 1152921504606846976, !dbg !12520
  %tobool29 = icmp ne i64 %and28, 0, !dbg !12520
  br i1 %tobool29, label %cond.true30, label %cond.false31, !dbg !12520

cond.true30:                                      ; preds = %cond.false25
  br label %cond.end491, !dbg !12520

cond.false31:                                     ; preds = %cond.false25
  %27 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count32 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %27, i32 0, i32 5, !dbg !12520
  %28 = load i16, i16* %count32, align 4, !dbg !12520
  %conv33 = zext i16 %28 to i64, !dbg !12520
  %and34 = and i64 %conv33, 576460752303423488, !dbg !12520
  %tobool35 = icmp ne i64 %and34, 0, !dbg !12520
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !12520

cond.true36:                                      ; preds = %cond.false31
  br label %cond.end489, !dbg !12520

cond.false37:                                     ; preds = %cond.false31
  %29 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count38 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %29, i32 0, i32 5, !dbg !12520
  %30 = load i16, i16* %count38, align 4, !dbg !12520
  %conv39 = zext i16 %30 to i64, !dbg !12520
  %and40 = and i64 %conv39, 288230376151711744, !dbg !12520
  %tobool41 = icmp ne i64 %and40, 0, !dbg !12520
  br i1 %tobool41, label %cond.true42, label %cond.false43, !dbg !12520

cond.true42:                                      ; preds = %cond.false37
  br label %cond.end487, !dbg !12520

cond.false43:                                     ; preds = %cond.false37
  %31 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count44 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %31, i32 0, i32 5, !dbg !12520
  %32 = load i16, i16* %count44, align 4, !dbg !12520
  %conv45 = zext i16 %32 to i64, !dbg !12520
  %and46 = and i64 %conv45, 144115188075855872, !dbg !12520
  %tobool47 = icmp ne i64 %and46, 0, !dbg !12520
  br i1 %tobool47, label %cond.true48, label %cond.false49, !dbg !12520

cond.true48:                                      ; preds = %cond.false43
  br label %cond.end485, !dbg !12520

cond.false49:                                     ; preds = %cond.false43
  %33 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count50 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %33, i32 0, i32 5, !dbg !12520
  %34 = load i16, i16* %count50, align 4, !dbg !12520
  %conv51 = zext i16 %34 to i64, !dbg !12520
  %and52 = and i64 %conv51, 72057594037927936, !dbg !12520
  %tobool53 = icmp ne i64 %and52, 0, !dbg !12520
  br i1 %tobool53, label %cond.true54, label %cond.false55, !dbg !12520

cond.true54:                                      ; preds = %cond.false49
  br label %cond.end483, !dbg !12520

cond.false55:                                     ; preds = %cond.false49
  %35 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count56 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %35, i32 0, i32 5, !dbg !12520
  %36 = load i16, i16* %count56, align 4, !dbg !12520
  %conv57 = zext i16 %36 to i64, !dbg !12520
  %and58 = and i64 %conv57, 36028797018963968, !dbg !12520
  %tobool59 = icmp ne i64 %and58, 0, !dbg !12520
  br i1 %tobool59, label %cond.true60, label %cond.false61, !dbg !12520

cond.true60:                                      ; preds = %cond.false55
  br label %cond.end481, !dbg !12520

cond.false61:                                     ; preds = %cond.false55
  %37 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count62 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %37, i32 0, i32 5, !dbg !12520
  %38 = load i16, i16* %count62, align 4, !dbg !12520
  %conv63 = zext i16 %38 to i64, !dbg !12520
  %and64 = and i64 %conv63, 18014398509481984, !dbg !12520
  %tobool65 = icmp ne i64 %and64, 0, !dbg !12520
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !12520

cond.true66:                                      ; preds = %cond.false61
  br label %cond.end479, !dbg !12520

cond.false67:                                     ; preds = %cond.false61
  %39 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count68 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %39, i32 0, i32 5, !dbg !12520
  %40 = load i16, i16* %count68, align 4, !dbg !12520
  %conv69 = zext i16 %40 to i64, !dbg !12520
  %and70 = and i64 %conv69, 9007199254740992, !dbg !12520
  %tobool71 = icmp ne i64 %and70, 0, !dbg !12520
  br i1 %tobool71, label %cond.true72, label %cond.false73, !dbg !12520

cond.true72:                                      ; preds = %cond.false67
  br label %cond.end477, !dbg !12520

cond.false73:                                     ; preds = %cond.false67
  %41 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count74 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %41, i32 0, i32 5, !dbg !12520
  %42 = load i16, i16* %count74, align 4, !dbg !12520
  %conv75 = zext i16 %42 to i64, !dbg !12520
  %and76 = and i64 %conv75, 4503599627370496, !dbg !12520
  %tobool77 = icmp ne i64 %and76, 0, !dbg !12520
  br i1 %tobool77, label %cond.true78, label %cond.false79, !dbg !12520

cond.true78:                                      ; preds = %cond.false73
  br label %cond.end475, !dbg !12520

cond.false79:                                     ; preds = %cond.false73
  %43 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count80 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %43, i32 0, i32 5, !dbg !12520
  %44 = load i16, i16* %count80, align 4, !dbg !12520
  %conv81 = zext i16 %44 to i64, !dbg !12520
  %and82 = and i64 %conv81, 2251799813685248, !dbg !12520
  %tobool83 = icmp ne i64 %and82, 0, !dbg !12520
  br i1 %tobool83, label %cond.true84, label %cond.false85, !dbg !12520

cond.true84:                                      ; preds = %cond.false79
  br label %cond.end473, !dbg !12520

cond.false85:                                     ; preds = %cond.false79
  %45 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count86 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %45, i32 0, i32 5, !dbg !12520
  %46 = load i16, i16* %count86, align 4, !dbg !12520
  %conv87 = zext i16 %46 to i64, !dbg !12520
  %and88 = and i64 %conv87, 1125899906842624, !dbg !12520
  %tobool89 = icmp ne i64 %and88, 0, !dbg !12520
  br i1 %tobool89, label %cond.true90, label %cond.false91, !dbg !12520

cond.true90:                                      ; preds = %cond.false85
  br label %cond.end471, !dbg !12520

cond.false91:                                     ; preds = %cond.false85
  %47 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count92 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %47, i32 0, i32 5, !dbg !12520
  %48 = load i16, i16* %count92, align 4, !dbg !12520
  %conv93 = zext i16 %48 to i64, !dbg !12520
  %and94 = and i64 %conv93, 562949953421312, !dbg !12520
  %tobool95 = icmp ne i64 %and94, 0, !dbg !12520
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !12520

cond.true96:                                      ; preds = %cond.false91
  br label %cond.end469, !dbg !12520

cond.false97:                                     ; preds = %cond.false91
  %49 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count98 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %49, i32 0, i32 5, !dbg !12520
  %50 = load i16, i16* %count98, align 4, !dbg !12520
  %conv99 = zext i16 %50 to i64, !dbg !12520
  %and100 = and i64 %conv99, 281474976710656, !dbg !12520
  %tobool101 = icmp ne i64 %and100, 0, !dbg !12520
  br i1 %tobool101, label %cond.true102, label %cond.false103, !dbg !12520

cond.true102:                                     ; preds = %cond.false97
  br label %cond.end467, !dbg !12520

cond.false103:                                    ; preds = %cond.false97
  %51 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count104 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %51, i32 0, i32 5, !dbg !12520
  %52 = load i16, i16* %count104, align 4, !dbg !12520
  %conv105 = zext i16 %52 to i64, !dbg !12520
  %and106 = and i64 %conv105, 140737488355328, !dbg !12520
  %tobool107 = icmp ne i64 %and106, 0, !dbg !12520
  br i1 %tobool107, label %cond.true108, label %cond.false109, !dbg !12520

cond.true108:                                     ; preds = %cond.false103
  br label %cond.end465, !dbg !12520

cond.false109:                                    ; preds = %cond.false103
  %53 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count110 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %53, i32 0, i32 5, !dbg !12520
  %54 = load i16, i16* %count110, align 4, !dbg !12520
  %conv111 = zext i16 %54 to i64, !dbg !12520
  %and112 = and i64 %conv111, 70368744177664, !dbg !12520
  %tobool113 = icmp ne i64 %and112, 0, !dbg !12520
  br i1 %tobool113, label %cond.true114, label %cond.false115, !dbg !12520

cond.true114:                                     ; preds = %cond.false109
  br label %cond.end463, !dbg !12520

cond.false115:                                    ; preds = %cond.false109
  %55 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count116 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %55, i32 0, i32 5, !dbg !12520
  %56 = load i16, i16* %count116, align 4, !dbg !12520
  %conv117 = zext i16 %56 to i64, !dbg !12520
  %and118 = and i64 %conv117, 35184372088832, !dbg !12520
  %tobool119 = icmp ne i64 %and118, 0, !dbg !12520
  br i1 %tobool119, label %cond.true120, label %cond.false121, !dbg !12520

cond.true120:                                     ; preds = %cond.false115
  br label %cond.end461, !dbg !12520

cond.false121:                                    ; preds = %cond.false115
  %57 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count122 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %57, i32 0, i32 5, !dbg !12520
  %58 = load i16, i16* %count122, align 4, !dbg !12520
  %conv123 = zext i16 %58 to i64, !dbg !12520
  %and124 = and i64 %conv123, 17592186044416, !dbg !12520
  %tobool125 = icmp ne i64 %and124, 0, !dbg !12520
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !12520

cond.true126:                                     ; preds = %cond.false121
  br label %cond.end459, !dbg !12520

cond.false127:                                    ; preds = %cond.false121
  %59 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count128 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %59, i32 0, i32 5, !dbg !12520
  %60 = load i16, i16* %count128, align 4, !dbg !12520
  %conv129 = zext i16 %60 to i64, !dbg !12520
  %and130 = and i64 %conv129, 8796093022208, !dbg !12520
  %tobool131 = icmp ne i64 %and130, 0, !dbg !12520
  br i1 %tobool131, label %cond.true132, label %cond.false133, !dbg !12520

cond.true132:                                     ; preds = %cond.false127
  br label %cond.end457, !dbg !12520

cond.false133:                                    ; preds = %cond.false127
  %61 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count134 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %61, i32 0, i32 5, !dbg !12520
  %62 = load i16, i16* %count134, align 4, !dbg !12520
  %conv135 = zext i16 %62 to i64, !dbg !12520
  %and136 = and i64 %conv135, 4398046511104, !dbg !12520
  %tobool137 = icmp ne i64 %and136, 0, !dbg !12520
  br i1 %tobool137, label %cond.true138, label %cond.false139, !dbg !12520

cond.true138:                                     ; preds = %cond.false133
  br label %cond.end455, !dbg !12520

cond.false139:                                    ; preds = %cond.false133
  %63 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count140 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %63, i32 0, i32 5, !dbg !12520
  %64 = load i16, i16* %count140, align 4, !dbg !12520
  %conv141 = zext i16 %64 to i64, !dbg !12520
  %and142 = and i64 %conv141, 2199023255552, !dbg !12520
  %tobool143 = icmp ne i64 %and142, 0, !dbg !12520
  br i1 %tobool143, label %cond.true144, label %cond.false145, !dbg !12520

cond.true144:                                     ; preds = %cond.false139
  br label %cond.end453, !dbg !12520

cond.false145:                                    ; preds = %cond.false139
  %65 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count146 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %65, i32 0, i32 5, !dbg !12520
  %66 = load i16, i16* %count146, align 4, !dbg !12520
  %conv147 = zext i16 %66 to i64, !dbg !12520
  %and148 = and i64 %conv147, 1099511627776, !dbg !12520
  %tobool149 = icmp ne i64 %and148, 0, !dbg !12520
  br i1 %tobool149, label %cond.true150, label %cond.false151, !dbg !12520

cond.true150:                                     ; preds = %cond.false145
  br label %cond.end451, !dbg !12520

cond.false151:                                    ; preds = %cond.false145
  %67 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count152 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %67, i32 0, i32 5, !dbg !12520
  %68 = load i16, i16* %count152, align 4, !dbg !12520
  %conv153 = zext i16 %68 to i64, !dbg !12520
  %and154 = and i64 %conv153, 549755813888, !dbg !12520
  %tobool155 = icmp ne i64 %and154, 0, !dbg !12520
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !12520

cond.true156:                                     ; preds = %cond.false151
  br label %cond.end449, !dbg !12520

cond.false157:                                    ; preds = %cond.false151
  %69 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count158 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %69, i32 0, i32 5, !dbg !12520
  %70 = load i16, i16* %count158, align 4, !dbg !12520
  %conv159 = zext i16 %70 to i64, !dbg !12520
  %and160 = and i64 %conv159, 274877906944, !dbg !12520
  %tobool161 = icmp ne i64 %and160, 0, !dbg !12520
  br i1 %tobool161, label %cond.true162, label %cond.false163, !dbg !12520

cond.true162:                                     ; preds = %cond.false157
  br label %cond.end447, !dbg !12520

cond.false163:                                    ; preds = %cond.false157
  %71 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count164 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %71, i32 0, i32 5, !dbg !12520
  %72 = load i16, i16* %count164, align 4, !dbg !12520
  %conv165 = zext i16 %72 to i64, !dbg !12520
  %and166 = and i64 %conv165, 137438953472, !dbg !12520
  %tobool167 = icmp ne i64 %and166, 0, !dbg !12520
  br i1 %tobool167, label %cond.true168, label %cond.false169, !dbg !12520

cond.true168:                                     ; preds = %cond.false163
  br label %cond.end445, !dbg !12520

cond.false169:                                    ; preds = %cond.false163
  %73 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count170 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %73, i32 0, i32 5, !dbg !12520
  %74 = load i16, i16* %count170, align 4, !dbg !12520
  %conv171 = zext i16 %74 to i64, !dbg !12520
  %and172 = and i64 %conv171, 68719476736, !dbg !12520
  %tobool173 = icmp ne i64 %and172, 0, !dbg !12520
  br i1 %tobool173, label %cond.true174, label %cond.false175, !dbg !12520

cond.true174:                                     ; preds = %cond.false169
  br label %cond.end443, !dbg !12520

cond.false175:                                    ; preds = %cond.false169
  %75 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count176 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %75, i32 0, i32 5, !dbg !12520
  %76 = load i16, i16* %count176, align 4, !dbg !12520
  %conv177 = zext i16 %76 to i64, !dbg !12520
  %and178 = and i64 %conv177, 34359738368, !dbg !12520
  %tobool179 = icmp ne i64 %and178, 0, !dbg !12520
  br i1 %tobool179, label %cond.true180, label %cond.false181, !dbg !12520

cond.true180:                                     ; preds = %cond.false175
  br label %cond.end441, !dbg !12520

cond.false181:                                    ; preds = %cond.false175
  %77 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count182 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %77, i32 0, i32 5, !dbg !12520
  %78 = load i16, i16* %count182, align 4, !dbg !12520
  %conv183 = zext i16 %78 to i64, !dbg !12520
  %and184 = and i64 %conv183, 17179869184, !dbg !12520
  %tobool185 = icmp ne i64 %and184, 0, !dbg !12520
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !12520

cond.true186:                                     ; preds = %cond.false181
  br label %cond.end439, !dbg !12520

cond.false187:                                    ; preds = %cond.false181
  %79 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count188 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %79, i32 0, i32 5, !dbg !12520
  %80 = load i16, i16* %count188, align 4, !dbg !12520
  %conv189 = zext i16 %80 to i64, !dbg !12520
  %and190 = and i64 %conv189, 8589934592, !dbg !12520
  %tobool191 = icmp ne i64 %and190, 0, !dbg !12520
  br i1 %tobool191, label %cond.true192, label %cond.false193, !dbg !12520

cond.true192:                                     ; preds = %cond.false187
  br label %cond.end437, !dbg !12520

cond.false193:                                    ; preds = %cond.false187
  %81 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count194 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %81, i32 0, i32 5, !dbg !12520
  %82 = load i16, i16* %count194, align 4, !dbg !12520
  %conv195 = zext i16 %82 to i64, !dbg !12520
  %and196 = and i64 %conv195, 4294967296, !dbg !12520
  %tobool197 = icmp ne i64 %and196, 0, !dbg !12520
  br i1 %tobool197, label %cond.true198, label %cond.false199, !dbg !12520

cond.true198:                                     ; preds = %cond.false193
  br label %cond.end435, !dbg !12520

cond.false199:                                    ; preds = %cond.false193
  %83 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count200 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %83, i32 0, i32 5, !dbg !12520
  %84 = load i16, i16* %count200, align 4, !dbg !12520
  %conv201 = zext i16 %84 to i64, !dbg !12520
  %and202 = and i64 %conv201, 2147483648, !dbg !12520
  %tobool203 = icmp ne i64 %and202, 0, !dbg !12520
  br i1 %tobool203, label %cond.true204, label %cond.false205, !dbg !12520

cond.true204:                                     ; preds = %cond.false199
  br label %cond.end433, !dbg !12520

cond.false205:                                    ; preds = %cond.false199
  %85 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count206 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %85, i32 0, i32 5, !dbg !12520
  %86 = load i16, i16* %count206, align 4, !dbg !12520
  %conv207 = zext i16 %86 to i64, !dbg !12520
  %and208 = and i64 %conv207, 1073741824, !dbg !12520
  %tobool209 = icmp ne i64 %and208, 0, !dbg !12520
  br i1 %tobool209, label %cond.true210, label %cond.false211, !dbg !12520

cond.true210:                                     ; preds = %cond.false205
  br label %cond.end431, !dbg !12520

cond.false211:                                    ; preds = %cond.false205
  %87 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count212 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %87, i32 0, i32 5, !dbg !12520
  %88 = load i16, i16* %count212, align 4, !dbg !12520
  %conv213 = zext i16 %88 to i64, !dbg !12520
  %and214 = and i64 %conv213, 536870912, !dbg !12520
  %tobool215 = icmp ne i64 %and214, 0, !dbg !12520
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !12520

cond.true216:                                     ; preds = %cond.false211
  br label %cond.end429, !dbg !12520

cond.false217:                                    ; preds = %cond.false211
  %89 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count218 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %89, i32 0, i32 5, !dbg !12520
  %90 = load i16, i16* %count218, align 4, !dbg !12520
  %conv219 = zext i16 %90 to i64, !dbg !12520
  %and220 = and i64 %conv219, 268435456, !dbg !12520
  %tobool221 = icmp ne i64 %and220, 0, !dbg !12520
  br i1 %tobool221, label %cond.true222, label %cond.false223, !dbg !12520

cond.true222:                                     ; preds = %cond.false217
  br label %cond.end427, !dbg !12520

cond.false223:                                    ; preds = %cond.false217
  %91 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count224 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %91, i32 0, i32 5, !dbg !12520
  %92 = load i16, i16* %count224, align 4, !dbg !12520
  %conv225 = zext i16 %92 to i64, !dbg !12520
  %and226 = and i64 %conv225, 134217728, !dbg !12520
  %tobool227 = icmp ne i64 %and226, 0, !dbg !12520
  br i1 %tobool227, label %cond.true228, label %cond.false229, !dbg !12520

cond.true228:                                     ; preds = %cond.false223
  br label %cond.end425, !dbg !12520

cond.false229:                                    ; preds = %cond.false223
  %93 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count230 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %93, i32 0, i32 5, !dbg !12520
  %94 = load i16, i16* %count230, align 4, !dbg !12520
  %conv231 = zext i16 %94 to i64, !dbg !12520
  %and232 = and i64 %conv231, 67108864, !dbg !12520
  %tobool233 = icmp ne i64 %and232, 0, !dbg !12520
  br i1 %tobool233, label %cond.true234, label %cond.false235, !dbg !12520

cond.true234:                                     ; preds = %cond.false229
  br label %cond.end423, !dbg !12520

cond.false235:                                    ; preds = %cond.false229
  %95 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count236 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %95, i32 0, i32 5, !dbg !12520
  %96 = load i16, i16* %count236, align 4, !dbg !12520
  %conv237 = zext i16 %96 to i64, !dbg !12520
  %and238 = and i64 %conv237, 33554432, !dbg !12520
  %tobool239 = icmp ne i64 %and238, 0, !dbg !12520
  br i1 %tobool239, label %cond.true240, label %cond.false241, !dbg !12520

cond.true240:                                     ; preds = %cond.false235
  br label %cond.end421, !dbg !12520

cond.false241:                                    ; preds = %cond.false235
  %97 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count242 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %97, i32 0, i32 5, !dbg !12520
  %98 = load i16, i16* %count242, align 4, !dbg !12520
  %conv243 = zext i16 %98 to i64, !dbg !12520
  %and244 = and i64 %conv243, 16777216, !dbg !12520
  %tobool245 = icmp ne i64 %and244, 0, !dbg !12520
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !12520

cond.true246:                                     ; preds = %cond.false241
  br label %cond.end419, !dbg !12520

cond.false247:                                    ; preds = %cond.false241
  %99 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count248 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %99, i32 0, i32 5, !dbg !12520
  %100 = load i16, i16* %count248, align 4, !dbg !12520
  %conv249 = zext i16 %100 to i64, !dbg !12520
  %and250 = and i64 %conv249, 8388608, !dbg !12520
  %tobool251 = icmp ne i64 %and250, 0, !dbg !12520
  br i1 %tobool251, label %cond.true252, label %cond.false253, !dbg !12520

cond.true252:                                     ; preds = %cond.false247
  br label %cond.end417, !dbg !12520

cond.false253:                                    ; preds = %cond.false247
  %101 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count254 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %101, i32 0, i32 5, !dbg !12520
  %102 = load i16, i16* %count254, align 4, !dbg !12520
  %conv255 = zext i16 %102 to i64, !dbg !12520
  %and256 = and i64 %conv255, 4194304, !dbg !12520
  %tobool257 = icmp ne i64 %and256, 0, !dbg !12520
  br i1 %tobool257, label %cond.true258, label %cond.false259, !dbg !12520

cond.true258:                                     ; preds = %cond.false253
  br label %cond.end415, !dbg !12520

cond.false259:                                    ; preds = %cond.false253
  %103 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count260 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %103, i32 0, i32 5, !dbg !12520
  %104 = load i16, i16* %count260, align 4, !dbg !12520
  %conv261 = zext i16 %104 to i64, !dbg !12520
  %and262 = and i64 %conv261, 2097152, !dbg !12520
  %tobool263 = icmp ne i64 %and262, 0, !dbg !12520
  br i1 %tobool263, label %cond.true264, label %cond.false265, !dbg !12520

cond.true264:                                     ; preds = %cond.false259
  br label %cond.end413, !dbg !12520

cond.false265:                                    ; preds = %cond.false259
  %105 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count266 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %105, i32 0, i32 5, !dbg !12520
  %106 = load i16, i16* %count266, align 4, !dbg !12520
  %conv267 = zext i16 %106 to i64, !dbg !12520
  %and268 = and i64 %conv267, 1048576, !dbg !12520
  %tobool269 = icmp ne i64 %and268, 0, !dbg !12520
  br i1 %tobool269, label %cond.true270, label %cond.false271, !dbg !12520

cond.true270:                                     ; preds = %cond.false265
  br label %cond.end411, !dbg !12520

cond.false271:                                    ; preds = %cond.false265
  %107 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count272 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %107, i32 0, i32 5, !dbg !12520
  %108 = load i16, i16* %count272, align 4, !dbg !12520
  %conv273 = zext i16 %108 to i64, !dbg !12520
  %and274 = and i64 %conv273, 524288, !dbg !12520
  %tobool275 = icmp ne i64 %and274, 0, !dbg !12520
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !12520

cond.true276:                                     ; preds = %cond.false271
  br label %cond.end409, !dbg !12520

cond.false277:                                    ; preds = %cond.false271
  %109 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count278 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %109, i32 0, i32 5, !dbg !12520
  %110 = load i16, i16* %count278, align 4, !dbg !12520
  %conv279 = zext i16 %110 to i64, !dbg !12520
  %and280 = and i64 %conv279, 262144, !dbg !12520
  %tobool281 = icmp ne i64 %and280, 0, !dbg !12520
  br i1 %tobool281, label %cond.true282, label %cond.false283, !dbg !12520

cond.true282:                                     ; preds = %cond.false277
  br label %cond.end407, !dbg !12520

cond.false283:                                    ; preds = %cond.false277
  %111 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count284 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %111, i32 0, i32 5, !dbg !12520
  %112 = load i16, i16* %count284, align 4, !dbg !12520
  %conv285 = zext i16 %112 to i64, !dbg !12520
  %and286 = and i64 %conv285, 131072, !dbg !12520
  %tobool287 = icmp ne i64 %and286, 0, !dbg !12520
  br i1 %tobool287, label %cond.true288, label %cond.false289, !dbg !12520

cond.true288:                                     ; preds = %cond.false283
  br label %cond.end405, !dbg !12520

cond.false289:                                    ; preds = %cond.false283
  %113 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count290 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %113, i32 0, i32 5, !dbg !12520
  %114 = load i16, i16* %count290, align 4, !dbg !12520
  %conv291 = zext i16 %114 to i64, !dbg !12520
  %and292 = and i64 %conv291, 65536, !dbg !12520
  %tobool293 = icmp ne i64 %and292, 0, !dbg !12520
  br i1 %tobool293, label %cond.true294, label %cond.false295, !dbg !12520

cond.true294:                                     ; preds = %cond.false289
  br label %cond.end403, !dbg !12520

cond.false295:                                    ; preds = %cond.false289
  %115 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count296 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %115, i32 0, i32 5, !dbg !12520
  %116 = load i16, i16* %count296, align 4, !dbg !12520
  %conv297 = zext i16 %116 to i64, !dbg !12520
  %and298 = and i64 %conv297, 32768, !dbg !12520
  %tobool299 = icmp ne i64 %and298, 0, !dbg !12520
  br i1 %tobool299, label %cond.true300, label %cond.false301, !dbg !12520

cond.true300:                                     ; preds = %cond.false295
  br label %cond.end401, !dbg !12520

cond.false301:                                    ; preds = %cond.false295
  %117 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count302 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %117, i32 0, i32 5, !dbg !12520
  %118 = load i16, i16* %count302, align 4, !dbg !12520
  %conv303 = zext i16 %118 to i64, !dbg !12520
  %and304 = and i64 %conv303, 16384, !dbg !12520
  %tobool305 = icmp ne i64 %and304, 0, !dbg !12520
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !12520

cond.true306:                                     ; preds = %cond.false301
  br label %cond.end399, !dbg !12520

cond.false307:                                    ; preds = %cond.false301
  %119 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count308 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %119, i32 0, i32 5, !dbg !12520
  %120 = load i16, i16* %count308, align 4, !dbg !12520
  %conv309 = zext i16 %120 to i64, !dbg !12520
  %and310 = and i64 %conv309, 8192, !dbg !12520
  %tobool311 = icmp ne i64 %and310, 0, !dbg !12520
  br i1 %tobool311, label %cond.true312, label %cond.false313, !dbg !12520

cond.true312:                                     ; preds = %cond.false307
  br label %cond.end397, !dbg !12520

cond.false313:                                    ; preds = %cond.false307
  %121 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count314 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %121, i32 0, i32 5, !dbg !12520
  %122 = load i16, i16* %count314, align 4, !dbg !12520
  %conv315 = zext i16 %122 to i64, !dbg !12520
  %and316 = and i64 %conv315, 4096, !dbg !12520
  %tobool317 = icmp ne i64 %and316, 0, !dbg !12520
  br i1 %tobool317, label %cond.true318, label %cond.false319, !dbg !12520

cond.true318:                                     ; preds = %cond.false313
  br label %cond.end395, !dbg !12520

cond.false319:                                    ; preds = %cond.false313
  %123 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count320 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %123, i32 0, i32 5, !dbg !12520
  %124 = load i16, i16* %count320, align 4, !dbg !12520
  %conv321 = zext i16 %124 to i64, !dbg !12520
  %and322 = and i64 %conv321, 2048, !dbg !12520
  %tobool323 = icmp ne i64 %and322, 0, !dbg !12520
  br i1 %tobool323, label %cond.true324, label %cond.false325, !dbg !12520

cond.true324:                                     ; preds = %cond.false319
  br label %cond.end393, !dbg !12520

cond.false325:                                    ; preds = %cond.false319
  %125 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count326 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %125, i32 0, i32 5, !dbg !12520
  %126 = load i16, i16* %count326, align 4, !dbg !12520
  %conv327 = zext i16 %126 to i64, !dbg !12520
  %and328 = and i64 %conv327, 1024, !dbg !12520
  %tobool329 = icmp ne i64 %and328, 0, !dbg !12520
  br i1 %tobool329, label %cond.true330, label %cond.false331, !dbg !12520

cond.true330:                                     ; preds = %cond.false325
  br label %cond.end391, !dbg !12520

cond.false331:                                    ; preds = %cond.false325
  %127 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count332 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %127, i32 0, i32 5, !dbg !12520
  %128 = load i16, i16* %count332, align 4, !dbg !12520
  %conv333 = zext i16 %128 to i64, !dbg !12520
  %and334 = and i64 %conv333, 512, !dbg !12520
  %tobool335 = icmp ne i64 %and334, 0, !dbg !12520
  br i1 %tobool335, label %cond.true336, label %cond.false337, !dbg !12520

cond.true336:                                     ; preds = %cond.false331
  br label %cond.end389, !dbg !12520

cond.false337:                                    ; preds = %cond.false331
  %129 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count338 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %129, i32 0, i32 5, !dbg !12520
  %130 = load i16, i16* %count338, align 4, !dbg !12520
  %conv339 = zext i16 %130 to i64, !dbg !12520
  %and340 = and i64 %conv339, 256, !dbg !12520
  %tobool341 = icmp ne i64 %and340, 0, !dbg !12520
  br i1 %tobool341, label %cond.true342, label %cond.false343, !dbg !12520

cond.true342:                                     ; preds = %cond.false337
  br label %cond.end387, !dbg !12520

cond.false343:                                    ; preds = %cond.false337
  %131 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count344 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %131, i32 0, i32 5, !dbg !12520
  %132 = load i16, i16* %count344, align 4, !dbg !12520
  %conv345 = zext i16 %132 to i64, !dbg !12520
  %and346 = and i64 %conv345, 128, !dbg !12520
  %tobool347 = icmp ne i64 %and346, 0, !dbg !12520
  br i1 %tobool347, label %cond.true348, label %cond.false349, !dbg !12520

cond.true348:                                     ; preds = %cond.false343
  br label %cond.end385, !dbg !12520

cond.false349:                                    ; preds = %cond.false343
  %133 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count350 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %133, i32 0, i32 5, !dbg !12520
  %134 = load i16, i16* %count350, align 4, !dbg !12520
  %conv351 = zext i16 %134 to i64, !dbg !12520
  %and352 = and i64 %conv351, 64, !dbg !12520
  %tobool353 = icmp ne i64 %and352, 0, !dbg !12520
  br i1 %tobool353, label %cond.true354, label %cond.false355, !dbg !12520

cond.true354:                                     ; preds = %cond.false349
  br label %cond.end383, !dbg !12520

cond.false355:                                    ; preds = %cond.false349
  %135 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count356 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %135, i32 0, i32 5, !dbg !12520
  %136 = load i16, i16* %count356, align 4, !dbg !12520
  %conv357 = zext i16 %136 to i64, !dbg !12520
  %and358 = and i64 %conv357, 32, !dbg !12520
  %tobool359 = icmp ne i64 %and358, 0, !dbg !12520
  br i1 %tobool359, label %cond.true360, label %cond.false361, !dbg !12520

cond.true360:                                     ; preds = %cond.false355
  br label %cond.end381, !dbg !12520

cond.false361:                                    ; preds = %cond.false355
  %137 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count362 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %137, i32 0, i32 5, !dbg !12520
  %138 = load i16, i16* %count362, align 4, !dbg !12520
  %conv363 = zext i16 %138 to i64, !dbg !12520
  %and364 = and i64 %conv363, 16, !dbg !12520
  %tobool365 = icmp ne i64 %and364, 0, !dbg !12520
  br i1 %tobool365, label %cond.true366, label %cond.false367, !dbg !12520

cond.true366:                                     ; preds = %cond.false361
  br label %cond.end379, !dbg !12520

cond.false367:                                    ; preds = %cond.false361
  %139 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count368 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %139, i32 0, i32 5, !dbg !12520
  %140 = load i16, i16* %count368, align 4, !dbg !12520
  %conv369 = zext i16 %140 to i64, !dbg !12520
  %and370 = and i64 %conv369, 8, !dbg !12520
  %tobool371 = icmp ne i64 %and370, 0, !dbg !12520
  br i1 %tobool371, label %cond.true372, label %cond.false373, !dbg !12520

cond.true372:                                     ; preds = %cond.false367
  br label %cond.end, !dbg !12520

cond.false373:                                    ; preds = %cond.false367
  %141 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count374 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %141, i32 0, i32 5, !dbg !12520
  %142 = load i16, i16* %count374, align 4, !dbg !12520
  %conv375 = zext i16 %142 to i64, !dbg !12520
  %and376 = and i64 %conv375, 4, !dbg !12520
  %tobool377 = icmp ne i64 %and376, 0, !dbg !12520
  %143 = zext i1 %tobool377 to i64, !dbg !12520
  %cond = select i1 %tobool377, i32 2, i32 1, !dbg !12520
  br label %cond.end, !dbg !12520

cond.end:                                         ; preds = %cond.false373, %cond.true372
  %cond378 = phi i32 [ 3, %cond.true372 ], [ %cond, %cond.false373 ], !dbg !12520
  br label %cond.end379, !dbg !12520

cond.end379:                                      ; preds = %cond.end, %cond.true366
  %cond380 = phi i32 [ 4, %cond.true366 ], [ %cond378, %cond.end ], !dbg !12520
  br label %cond.end381, !dbg !12520

cond.end381:                                      ; preds = %cond.end379, %cond.true360
  %cond382 = phi i32 [ 5, %cond.true360 ], [ %cond380, %cond.end379 ], !dbg !12520
  br label %cond.end383, !dbg !12520

cond.end383:                                      ; preds = %cond.end381, %cond.true354
  %cond384 = phi i32 [ 6, %cond.true354 ], [ %cond382, %cond.end381 ], !dbg !12520
  br label %cond.end385, !dbg !12520

cond.end385:                                      ; preds = %cond.end383, %cond.true348
  %cond386 = phi i32 [ 7, %cond.true348 ], [ %cond384, %cond.end383 ], !dbg !12520
  br label %cond.end387, !dbg !12520

cond.end387:                                      ; preds = %cond.end385, %cond.true342
  %cond388 = phi i32 [ 8, %cond.true342 ], [ %cond386, %cond.end385 ], !dbg !12520
  br label %cond.end389, !dbg !12520

cond.end389:                                      ; preds = %cond.end387, %cond.true336
  %cond390 = phi i32 [ 9, %cond.true336 ], [ %cond388, %cond.end387 ], !dbg !12520
  br label %cond.end391, !dbg !12520

cond.end391:                                      ; preds = %cond.end389, %cond.true330
  %cond392 = phi i32 [ 10, %cond.true330 ], [ %cond390, %cond.end389 ], !dbg !12520
  br label %cond.end393, !dbg !12520

cond.end393:                                      ; preds = %cond.end391, %cond.true324
  %cond394 = phi i32 [ 11, %cond.true324 ], [ %cond392, %cond.end391 ], !dbg !12520
  br label %cond.end395, !dbg !12520

cond.end395:                                      ; preds = %cond.end393, %cond.true318
  %cond396 = phi i32 [ 12, %cond.true318 ], [ %cond394, %cond.end393 ], !dbg !12520
  br label %cond.end397, !dbg !12520

cond.end397:                                      ; preds = %cond.end395, %cond.true312
  %cond398 = phi i32 [ 13, %cond.true312 ], [ %cond396, %cond.end395 ], !dbg !12520
  br label %cond.end399, !dbg !12520

cond.end399:                                      ; preds = %cond.end397, %cond.true306
  %cond400 = phi i32 [ 14, %cond.true306 ], [ %cond398, %cond.end397 ], !dbg !12520
  br label %cond.end401, !dbg !12520

cond.end401:                                      ; preds = %cond.end399, %cond.true300
  %cond402 = phi i32 [ 15, %cond.true300 ], [ %cond400, %cond.end399 ], !dbg !12520
  br label %cond.end403, !dbg !12520

cond.end403:                                      ; preds = %cond.end401, %cond.true294
  %cond404 = phi i32 [ 16, %cond.true294 ], [ %cond402, %cond.end401 ], !dbg !12520
  br label %cond.end405, !dbg !12520

cond.end405:                                      ; preds = %cond.end403, %cond.true288
  %cond406 = phi i32 [ 17, %cond.true288 ], [ %cond404, %cond.end403 ], !dbg !12520
  br label %cond.end407, !dbg !12520

cond.end407:                                      ; preds = %cond.end405, %cond.true282
  %cond408 = phi i32 [ 18, %cond.true282 ], [ %cond406, %cond.end405 ], !dbg !12520
  br label %cond.end409, !dbg !12520

cond.end409:                                      ; preds = %cond.end407, %cond.true276
  %cond410 = phi i32 [ 19, %cond.true276 ], [ %cond408, %cond.end407 ], !dbg !12520
  br label %cond.end411, !dbg !12520

cond.end411:                                      ; preds = %cond.end409, %cond.true270
  %cond412 = phi i32 [ 20, %cond.true270 ], [ %cond410, %cond.end409 ], !dbg !12520
  br label %cond.end413, !dbg !12520

cond.end413:                                      ; preds = %cond.end411, %cond.true264
  %cond414 = phi i32 [ 21, %cond.true264 ], [ %cond412, %cond.end411 ], !dbg !12520
  br label %cond.end415, !dbg !12520

cond.end415:                                      ; preds = %cond.end413, %cond.true258
  %cond416 = phi i32 [ 22, %cond.true258 ], [ %cond414, %cond.end413 ], !dbg !12520
  br label %cond.end417, !dbg !12520

cond.end417:                                      ; preds = %cond.end415, %cond.true252
  %cond418 = phi i32 [ 23, %cond.true252 ], [ %cond416, %cond.end415 ], !dbg !12520
  br label %cond.end419, !dbg !12520

cond.end419:                                      ; preds = %cond.end417, %cond.true246
  %cond420 = phi i32 [ 24, %cond.true246 ], [ %cond418, %cond.end417 ], !dbg !12520
  br label %cond.end421, !dbg !12520

cond.end421:                                      ; preds = %cond.end419, %cond.true240
  %cond422 = phi i32 [ 25, %cond.true240 ], [ %cond420, %cond.end419 ], !dbg !12520
  br label %cond.end423, !dbg !12520

cond.end423:                                      ; preds = %cond.end421, %cond.true234
  %cond424 = phi i32 [ 26, %cond.true234 ], [ %cond422, %cond.end421 ], !dbg !12520
  br label %cond.end425, !dbg !12520

cond.end425:                                      ; preds = %cond.end423, %cond.true228
  %cond426 = phi i32 [ 27, %cond.true228 ], [ %cond424, %cond.end423 ], !dbg !12520
  br label %cond.end427, !dbg !12520

cond.end427:                                      ; preds = %cond.end425, %cond.true222
  %cond428 = phi i32 [ 28, %cond.true222 ], [ %cond426, %cond.end425 ], !dbg !12520
  br label %cond.end429, !dbg !12520

cond.end429:                                      ; preds = %cond.end427, %cond.true216
  %cond430 = phi i32 [ 29, %cond.true216 ], [ %cond428, %cond.end427 ], !dbg !12520
  br label %cond.end431, !dbg !12520

cond.end431:                                      ; preds = %cond.end429, %cond.true210
  %cond432 = phi i32 [ 30, %cond.true210 ], [ %cond430, %cond.end429 ], !dbg !12520
  br label %cond.end433, !dbg !12520

cond.end433:                                      ; preds = %cond.end431, %cond.true204
  %cond434 = phi i32 [ 31, %cond.true204 ], [ %cond432, %cond.end431 ], !dbg !12520
  br label %cond.end435, !dbg !12520

cond.end435:                                      ; preds = %cond.end433, %cond.true198
  %cond436 = phi i32 [ 32, %cond.true198 ], [ %cond434, %cond.end433 ], !dbg !12520
  br label %cond.end437, !dbg !12520

cond.end437:                                      ; preds = %cond.end435, %cond.true192
  %cond438 = phi i32 [ 33, %cond.true192 ], [ %cond436, %cond.end435 ], !dbg !12520
  br label %cond.end439, !dbg !12520

cond.end439:                                      ; preds = %cond.end437, %cond.true186
  %cond440 = phi i32 [ 34, %cond.true186 ], [ %cond438, %cond.end437 ], !dbg !12520
  br label %cond.end441, !dbg !12520

cond.end441:                                      ; preds = %cond.end439, %cond.true180
  %cond442 = phi i32 [ 35, %cond.true180 ], [ %cond440, %cond.end439 ], !dbg !12520
  br label %cond.end443, !dbg !12520

cond.end443:                                      ; preds = %cond.end441, %cond.true174
  %cond444 = phi i32 [ 36, %cond.true174 ], [ %cond442, %cond.end441 ], !dbg !12520
  br label %cond.end445, !dbg !12520

cond.end445:                                      ; preds = %cond.end443, %cond.true168
  %cond446 = phi i32 [ 37, %cond.true168 ], [ %cond444, %cond.end443 ], !dbg !12520
  br label %cond.end447, !dbg !12520

cond.end447:                                      ; preds = %cond.end445, %cond.true162
  %cond448 = phi i32 [ 38, %cond.true162 ], [ %cond446, %cond.end445 ], !dbg !12520
  br label %cond.end449, !dbg !12520

cond.end449:                                      ; preds = %cond.end447, %cond.true156
  %cond450 = phi i32 [ 39, %cond.true156 ], [ %cond448, %cond.end447 ], !dbg !12520
  br label %cond.end451, !dbg !12520

cond.end451:                                      ; preds = %cond.end449, %cond.true150
  %cond452 = phi i32 [ 40, %cond.true150 ], [ %cond450, %cond.end449 ], !dbg !12520
  br label %cond.end453, !dbg !12520

cond.end453:                                      ; preds = %cond.end451, %cond.true144
  %cond454 = phi i32 [ 41, %cond.true144 ], [ %cond452, %cond.end451 ], !dbg !12520
  br label %cond.end455, !dbg !12520

cond.end455:                                      ; preds = %cond.end453, %cond.true138
  %cond456 = phi i32 [ 42, %cond.true138 ], [ %cond454, %cond.end453 ], !dbg !12520
  br label %cond.end457, !dbg !12520

cond.end457:                                      ; preds = %cond.end455, %cond.true132
  %cond458 = phi i32 [ 43, %cond.true132 ], [ %cond456, %cond.end455 ], !dbg !12520
  br label %cond.end459, !dbg !12520

cond.end459:                                      ; preds = %cond.end457, %cond.true126
  %cond460 = phi i32 [ 44, %cond.true126 ], [ %cond458, %cond.end457 ], !dbg !12520
  br label %cond.end461, !dbg !12520

cond.end461:                                      ; preds = %cond.end459, %cond.true120
  %cond462 = phi i32 [ 45, %cond.true120 ], [ %cond460, %cond.end459 ], !dbg !12520
  br label %cond.end463, !dbg !12520

cond.end463:                                      ; preds = %cond.end461, %cond.true114
  %cond464 = phi i32 [ 46, %cond.true114 ], [ %cond462, %cond.end461 ], !dbg !12520
  br label %cond.end465, !dbg !12520

cond.end465:                                      ; preds = %cond.end463, %cond.true108
  %cond466 = phi i32 [ 47, %cond.true108 ], [ %cond464, %cond.end463 ], !dbg !12520
  br label %cond.end467, !dbg !12520

cond.end467:                                      ; preds = %cond.end465, %cond.true102
  %cond468 = phi i32 [ 48, %cond.true102 ], [ %cond466, %cond.end465 ], !dbg !12520
  br label %cond.end469, !dbg !12520

cond.end469:                                      ; preds = %cond.end467, %cond.true96
  %cond470 = phi i32 [ 49, %cond.true96 ], [ %cond468, %cond.end467 ], !dbg !12520
  br label %cond.end471, !dbg !12520

cond.end471:                                      ; preds = %cond.end469, %cond.true90
  %cond472 = phi i32 [ 50, %cond.true90 ], [ %cond470, %cond.end469 ], !dbg !12520
  br label %cond.end473, !dbg !12520

cond.end473:                                      ; preds = %cond.end471, %cond.true84
  %cond474 = phi i32 [ 51, %cond.true84 ], [ %cond472, %cond.end471 ], !dbg !12520
  br label %cond.end475, !dbg !12520

cond.end475:                                      ; preds = %cond.end473, %cond.true78
  %cond476 = phi i32 [ 52, %cond.true78 ], [ %cond474, %cond.end473 ], !dbg !12520
  br label %cond.end477, !dbg !12520

cond.end477:                                      ; preds = %cond.end475, %cond.true72
  %cond478 = phi i32 [ 53, %cond.true72 ], [ %cond476, %cond.end475 ], !dbg !12520
  br label %cond.end479, !dbg !12520

cond.end479:                                      ; preds = %cond.end477, %cond.true66
  %cond480 = phi i32 [ 54, %cond.true66 ], [ %cond478, %cond.end477 ], !dbg !12520
  br label %cond.end481, !dbg !12520

cond.end481:                                      ; preds = %cond.end479, %cond.true60
  %cond482 = phi i32 [ 55, %cond.true60 ], [ %cond480, %cond.end479 ], !dbg !12520
  br label %cond.end483, !dbg !12520

cond.end483:                                      ; preds = %cond.end481, %cond.true54
  %cond484 = phi i32 [ 56, %cond.true54 ], [ %cond482, %cond.end481 ], !dbg !12520
  br label %cond.end485, !dbg !12520

cond.end485:                                      ; preds = %cond.end483, %cond.true48
  %cond486 = phi i32 [ 57, %cond.true48 ], [ %cond484, %cond.end483 ], !dbg !12520
  br label %cond.end487, !dbg !12520

cond.end487:                                      ; preds = %cond.end485, %cond.true42
  %cond488 = phi i32 [ 58, %cond.true42 ], [ %cond486, %cond.end485 ], !dbg !12520
  br label %cond.end489, !dbg !12520

cond.end489:                                      ; preds = %cond.end487, %cond.true36
  %cond490 = phi i32 [ 59, %cond.true36 ], [ %cond488, %cond.end487 ], !dbg !12520
  br label %cond.end491, !dbg !12520

cond.end491:                                      ; preds = %cond.end489, %cond.true30
  %cond492 = phi i32 [ 60, %cond.true30 ], [ %cond490, %cond.end489 ], !dbg !12520
  br label %cond.end493, !dbg !12520

cond.end493:                                      ; preds = %cond.end491, %cond.true24
  %cond494 = phi i32 [ 61, %cond.true24 ], [ %cond492, %cond.end491 ], !dbg !12520
  br label %cond.end495, !dbg !12520

cond.end495:                                      ; preds = %cond.end493, %cond.true18
  %cond496 = phi i32 [ 62, %cond.true18 ], [ %cond494, %cond.end493 ], !dbg !12520
  br label %cond.end497, !dbg !12520

cond.end497:                                      ; preds = %cond.end495, %cond.true12
  %cond498 = phi i32 [ 63, %cond.true12 ], [ %cond496, %cond.end495 ], !dbg !12520
  br label %cond.end499, !dbg !12520

cond.end499:                                      ; preds = %cond.end497, %cond.true9
  %cond500 = phi i32 [ 0, %cond.true9 ], [ %cond498, %cond.end497 ], !dbg !12520
  br label %cond.end502, !dbg !12520

cond.false501:                                    ; preds = %cond.true
  br label %cond.end502, !dbg !12520

cond.end502:                                      ; preds = %cond.false501, %cond.end499
  %cond503 = phi i32 [ %cond500, %cond.end499 ], [ -1, %cond.false501 ], !dbg !12520
  br label %cond.end508, !dbg !12520

cond.false504:                                    ; preds = %for.end
  %144 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12520
  %count505 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %144, i32 0, i32 5, !dbg !12520
  %145 = load i16, i16* %count505, align 4, !dbg !12520
  %conv506 = zext i16 %145 to i32, !dbg !12520
  %call507 = call i32 @__ilog2_u32(i32 %conv506) #13, !dbg !12520
  br label %cond.end508, !dbg !12520

cond.end508:                                      ; preds = %cond.false504, %cond.end502
  %cond509 = phi i32 [ %cond503, %cond.end502 ], [ %call507, %cond.false504 ], !dbg !12520
  call void @mlxsw_cmd_mbox_sw2hw_eq_log_eq_size_set(i8* %10, i32 %cond509) #10, !dbg !12521
  store i32 0, i32* %i, align 4, !dbg !12522
  br label %for.cond510, !dbg !12524

for.cond510:                                      ; preds = %for.inc516, %cond.end508
  %146 = load i32, i32* %i, align 4, !dbg !12525
  %cmp511 = icmp slt i32 %146, 8, !dbg !12527
  br i1 %cmp511, label %for.body513, label %for.end518, !dbg !12528

for.body513:                                      ; preds = %for.cond510
  call void @llvm.dbg.declare(metadata i64* %mapaddr, metadata !12529, metadata !DIExpression()), !dbg !12531
  %147 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12532
  %148 = load i32, i32* %i, align 4, !dbg !12533
  %call514 = call i64 @__mlxsw_pci_queue_page_get(%struct.mlxsw_pci_queue* %147, i32 %148) #10, !dbg !12534
  store i64 %call514, i64* %mapaddr, align 8, !dbg !12531
  %149 = load i8*, i8** %mbox.addr, align 8, !dbg !12535
  %150 = load i32, i32* %i, align 4, !dbg !12536
  %conv515 = trunc i32 %150 to i16, !dbg !12536
  %151 = load i64, i64* %mapaddr, align 8, !dbg !12537
  call void @mlxsw_cmd_mbox_sw2hw_eq_pa_set(i8* %149, i16 zeroext %conv515, i64 %151) #10, !dbg !12538
  br label %for.inc516, !dbg !12539

for.inc516:                                       ; preds = %for.body513
  %152 = load i32, i32* %i, align 4, !dbg !12540
  %inc517 = add i32 %152, 1, !dbg !12540
  store i32 %inc517, i32* %i, align 4, !dbg !12540
  br label %for.cond510, !dbg !12541, !llvm.loop !12542

for.end518:                                       ; preds = %for.cond510
  %153 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !12544
  %core = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %153, i32 0, i32 5, !dbg !12545
  %154 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !12545
  %155 = load i8*, i8** %mbox.addr, align 8, !dbg !12546
  %156 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12547
  %num = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %156, i32 0, i32 6, !dbg !12548
  %157 = load i8, i8* %num, align 2, !dbg !12548
  %conv519 = zext i8 %157 to i32, !dbg !12547
  %call520 = call i32 @mlxsw_cmd_sw2hw_eq(%struct.mlxsw_core* %154, i8* %155, i32 %conv519) #10, !dbg !12549
  store i32 %call520, i32* %err, align 4, !dbg !12550
  %158 = load i32, i32* %err, align 4, !dbg !12551
  %tobool521 = icmp ne i32 %158, 0, !dbg !12551
  br i1 %tobool521, label %if.then, label %if.end, !dbg !12553

if.then:                                          ; preds = %for.end518
  %159 = load i32, i32* %err, align 4, !dbg !12554
  store i32 %159, i32* %retval, align 4, !dbg !12555
  br label %return, !dbg !12555

if.end:                                           ; preds = %for.end518
  %160 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !12556
  %161 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12557
  call void @mlxsw_pci_queue_doorbell_consumer_ring(%struct.mlxsw_pci* %160, %struct.mlxsw_pci_queue* %161) #10, !dbg !12558
  %162 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !12559
  %163 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12560
  call void @mlxsw_pci_queue_doorbell_arm_consumer_ring(%struct.mlxsw_pci* %162, %struct.mlxsw_pci_queue* %163) #10, !dbg !12561
  store i32 0, i32* %retval, align 4, !dbg !12562
  br label %return, !dbg !12562

return:                                           ; preds = %if.end, %if.then
  %164 = load i32, i32* %retval, align 4, !dbg !12563
  ret i32 %164, !dbg !12563
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_eq_fini(%struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci_queue* %q) #0 !dbg !12564 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %q.addr = alloca %struct.mlxsw_pci_queue*, align 8
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !12565, metadata !DIExpression()), !dbg !12566
  store %struct.mlxsw_pci_queue* %q, %struct.mlxsw_pci_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q.addr, metadata !12567, metadata !DIExpression()), !dbg !12568
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !12569
  %core = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %0, i32 0, i32 5, !dbg !12570
  %1 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !12570
  %2 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12571
  %num = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %2, i32 0, i32 6, !dbg !12572
  %3 = load i8, i8* %num, align 2, !dbg !12572
  %conv = zext i8 %3 to i32, !dbg !12571
  %call = call i32 @mlxsw_cmd_hw2sw_eq(%struct.mlxsw_core* %1, i32 %conv) #10, !dbg !12573
  ret void, !dbg !12574
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_eq_tasklet(%struct.tasklet_struct* %t) #0 !dbg !12575 {
entry:
  %t.addr = alloca %struct.tasklet_struct*, align 8
  %q = alloca %struct.mlxsw_pci_queue*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_pci_queue*, align 8
  %mlxsw_pci = alloca %struct.mlxsw_pci*, align 8
  %cq_count = alloca i8, align 1
  %active_cqns = alloca [2 x i64], align 16
  %eqe = alloca i8*, align 8
  %cqn = alloca i8, align 1
  %cq_handle = alloca i8, align 1
  %items = alloca i32, align 4
  %credits = alloca i32, align 4
  store %struct.tasklet_struct* %t, %struct.tasklet_struct** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tasklet_struct** %t.addr, metadata !12576, metadata !DIExpression()), !dbg !12577
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q, metadata !12578, metadata !DIExpression()), !dbg !12579
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12580, metadata !DIExpression()), !dbg !12582
  %0 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !12582
  %1 = bitcast %struct.tasklet_struct* %0 to i8*, !dbg !12582
  store i8* %1, i8** %__mptr, align 8, !dbg !12582
  br label %do.body, !dbg !12582

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12583

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12582
  %add.ptr = getelementptr i8, i8* %2, i64 -48, !dbg !12582
  %3 = bitcast i8* %add.ptr to %struct.mlxsw_pci_queue*, !dbg !12582
  store %struct.mlxsw_pci_queue* %3, %struct.mlxsw_pci_queue** %tmp, align 8, !dbg !12583
  %4 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %tmp, align 8, !dbg !12582
  store %struct.mlxsw_pci_queue* %4, %struct.mlxsw_pci_queue** %q, align 8, !dbg !12579
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci, metadata !12585, metadata !DIExpression()), !dbg !12586
  %5 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q, align 8, !dbg !12587
  %pci = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %5, i32 0, i32 10, !dbg !12588
  %6 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %pci, align 8, !dbg !12588
  store %struct.mlxsw_pci* %6, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !12586
  call void @llvm.dbg.declare(metadata i8* %cq_count, metadata !12589, metadata !DIExpression()), !dbg !12590
  %7 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !12591
  %call = call zeroext i8 @mlxsw_pci_cq_count(%struct.mlxsw_pci* %7) #10, !dbg !12592
  store i8 %call, i8* %cq_count, align 1, !dbg !12590
  call void @llvm.dbg.declare(metadata [2 x i64]* %active_cqns, metadata !12593, metadata !DIExpression()), !dbg !12594
  call void @llvm.dbg.declare(metadata i8** %eqe, metadata !12595, metadata !DIExpression()), !dbg !12596
  call void @llvm.dbg.declare(metadata i8* %cqn, metadata !12597, metadata !DIExpression()), !dbg !12598
  call void @llvm.dbg.declare(metadata i8* %cq_handle, metadata !12599, metadata !DIExpression()), !dbg !12600
  store i8 0, i8* %cq_handle, align 1, !dbg !12600
  call void @llvm.dbg.declare(metadata i32* %items, metadata !12601, metadata !DIExpression()), !dbg !12602
  store i32 0, i32* %items, align 4, !dbg !12602
  call void @llvm.dbg.declare(metadata i32* %credits, metadata !12603, metadata !DIExpression()), !dbg !12604
  %8 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q, align 8, !dbg !12605
  %count = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %8, i32 0, i32 5, !dbg !12606
  %9 = load i16, i16* %count, align 4, !dbg !12606
  %conv = zext i16 %9 to i32, !dbg !12605
  %shr = ashr i32 %conv, 1, !dbg !12607
  store i32 %shr, i32* %credits, align 4, !dbg !12604
  %10 = bitcast [2 x i64]* %active_cqns to i8*, !dbg !12608
  call void @llvm.memset.p0i8.i64(i8* align 16 %10, i8 0, i64 16, i1 false), !dbg !12608
  br label %while.cond, !dbg !12609

while.cond:                                       ; preds = %if.end, %do.end
  %11 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q, align 8, !dbg !12610
  %call1 = call i8* @mlxsw_pci_eq_sw_eqe_get(%struct.mlxsw_pci_queue* %11) #10, !dbg !12611
  store i8* %call1, i8** %eqe, align 8, !dbg !12612
  %tobool = icmp ne i8* %call1, null, !dbg !12609
  br i1 %tobool, label %while.body, label %while.end, !dbg !12609

while.body:                                       ; preds = %while.cond
  %12 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q, align 8, !dbg !12613
  %num = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %12, i32 0, i32 6, !dbg !12615
  %13 = load i8, i8* %num, align 2, !dbg !12615
  %conv2 = zext i8 %13 to i32, !dbg !12613
  switch i32 %conv2, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb3
  ], !dbg !12616

sw.bb:                                            ; preds = %while.body
  %14 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !12617
  %15 = load i8*, i8** %eqe, align 8, !dbg !12619
  call void @mlxsw_pci_eq_cmd_event(%struct.mlxsw_pci* %14, i8* %15) #10, !dbg !12620
  %16 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q, align 8, !dbg !12621
  %u = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %16, i32 0, i32 11, !dbg !12622
  %eq = bitcast %union.anon.134* %u to %struct.anon.136*, !dbg !12623
  %ev_cmd_count = getelementptr inbounds %struct.anon.136, %struct.anon.136* %eq, i32 0, i32 0, !dbg !12624
  %17 = load i32, i32* %ev_cmd_count, align 8, !dbg !12625
  %inc = add i32 %17, 1, !dbg !12625
  store i32 %inc, i32* %ev_cmd_count, align 8, !dbg !12625
  br label %sw.epilog, !dbg !12626

sw.bb3:                                           ; preds = %while.body
  %18 = load i8*, i8** %eqe, align 8, !dbg !12627
  %call4 = call i32 @mlxsw_pci_eqe_cqn_get(i8* %18) #10, !dbg !12628
  %conv5 = trunc i32 %call4 to i8, !dbg !12628
  store i8 %conv5, i8* %cqn, align 1, !dbg !12629
  %19 = load i8, i8* %cqn, align 1, !dbg !12630
  %conv6 = zext i8 %19 to i64, !dbg !12630
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %active_cqns, i64 0, i64 0, !dbg !12631
  call void @set_bit(i64 %conv6, i64* %arraydecay) #10, !dbg !12632
  store i8 1, i8* %cq_handle, align 1, !dbg !12633
  %20 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q, align 8, !dbg !12634
  %u7 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %20, i32 0, i32 11, !dbg !12635
  %eq8 = bitcast %union.anon.134* %u7 to %struct.anon.136*, !dbg !12636
  %ev_comp_count = getelementptr inbounds %struct.anon.136, %struct.anon.136* %eq8, i32 0, i32 1, !dbg !12637
  %21 = load i32, i32* %ev_comp_count, align 4, !dbg !12638
  %inc9 = add i32 %21, 1, !dbg !12638
  store i32 %inc9, i32* %ev_comp_count, align 4, !dbg !12638
  br label %sw.epilog, !dbg !12639

sw.default:                                       ; preds = %while.body
  %22 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q, align 8, !dbg !12640
  %u10 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %22, i32 0, i32 11, !dbg !12641
  %eq11 = bitcast %union.anon.134* %u10 to %struct.anon.136*, !dbg !12642
  %ev_other_count = getelementptr inbounds %struct.anon.136, %struct.anon.136* %eq11, i32 0, i32 2, !dbg !12643
  %23 = load i32, i32* %ev_other_count, align 8, !dbg !12644
  %inc12 = add i32 %23, 1, !dbg !12644
  store i32 %inc12, i32* %ev_other_count, align 8, !dbg !12644
  br label %sw.epilog, !dbg !12645

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb
  %24 = load i32, i32* %items, align 4, !dbg !12646
  %inc13 = add i32 %24, 1, !dbg !12646
  store i32 %inc13, i32* %items, align 4, !dbg !12646
  %25 = load i32, i32* %credits, align 4, !dbg !12648
  %cmp = icmp eq i32 %inc13, %25, !dbg !12649
  br i1 %cmp, label %if.then, label %if.end, !dbg !12650

if.then:                                          ; preds = %sw.epilog
  br label %while.end, !dbg !12651

if.end:                                           ; preds = %sw.epilog
  br label %while.cond, !dbg !12609, !llvm.loop !12652

while.end:                                        ; preds = %if.then, %while.cond
  %26 = load i32, i32* %items, align 4, !dbg !12654
  %tobool15 = icmp ne i32 %26, 0, !dbg !12654
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !12656

if.then16:                                        ; preds = %while.end
  %27 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !12657
  %28 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q, align 8, !dbg !12659
  call void @mlxsw_pci_queue_doorbell_consumer_ring(%struct.mlxsw_pci* %27, %struct.mlxsw_pci_queue* %28) #10, !dbg !12660
  %29 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !12661
  %30 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q, align 8, !dbg !12662
  call void @mlxsw_pci_queue_doorbell_arm_consumer_ring(%struct.mlxsw_pci* %29, %struct.mlxsw_pci_queue* %30) #10, !dbg !12663
  br label %if.end17, !dbg !12664

if.end17:                                         ; preds = %if.then16, %while.end
  %31 = load i8, i8* %cq_handle, align 1, !dbg !12665
  %tobool18 = trunc i8 %31 to i1, !dbg !12665
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !12667

if.then19:                                        ; preds = %if.end17
  br label %for.end, !dbg !12668

if.end20:                                         ; preds = %if.end17
  %arraydecay21 = getelementptr inbounds [2 x i64], [2 x i64]* %active_cqns, i64 0, i64 0, !dbg !12669
  %32 = load i8, i8* %cq_count, align 1, !dbg !12669
  %conv22 = zext i8 %32 to i64, !dbg !12669
  %call23 = call i64 @find_first_bit(i64* %arraydecay21, i64 %conv22) #10, !dbg !12669
  %conv24 = trunc i64 %call23 to i8, !dbg !12669
  store i8 %conv24, i8* %cqn, align 1, !dbg !12669
  br label %for.cond, !dbg !12669

for.cond:                                         ; preds = %for.inc, %if.end20
  %33 = load i8, i8* %cqn, align 1, !dbg !12671
  %conv25 = zext i8 %33 to i32, !dbg !12671
  %34 = load i8, i8* %cq_count, align 1, !dbg !12671
  %conv26 = zext i8 %34 to i32, !dbg !12671
  %cmp27 = icmp slt i32 %conv25, %conv26, !dbg !12671
  br i1 %cmp27, label %for.body, label %for.end, !dbg !12669

for.body:                                         ; preds = %for.cond
  %35 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !12673
  %36 = load i8, i8* %cqn, align 1, !dbg !12675
  %call29 = call %struct.mlxsw_pci_queue* @mlxsw_pci_cq_get(%struct.mlxsw_pci* %35, i8 zeroext %36) #10, !dbg !12676
  store %struct.mlxsw_pci_queue* %call29, %struct.mlxsw_pci_queue** %q, align 8, !dbg !12677
  %37 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q, align 8, !dbg !12678
  call void @mlxsw_pci_queue_tasklet_schedule(%struct.mlxsw_pci_queue* %37) #10, !dbg !12679
  br label %for.inc, !dbg !12680

for.inc:                                          ; preds = %for.body
  %arraydecay30 = getelementptr inbounds [2 x i64], [2 x i64]* %active_cqns, i64 0, i64 0, !dbg !12671
  %38 = load i8, i8* %cq_count, align 1, !dbg !12671
  %conv31 = zext i8 %38 to i64, !dbg !12671
  %39 = load i8, i8* %cqn, align 1, !dbg !12671
  %conv32 = zext i8 %39 to i32, !dbg !12671
  %add = add i32 %conv32, 1, !dbg !12671
  %conv33 = sext i32 %add to i64, !dbg !12671
  %call34 = call i64 @find_next_bit(i64* %arraydecay30, i64 %conv31, i64 %conv33) #10, !dbg !12671
  %conv35 = trunc i64 %call34 to i8, !dbg !12671
  store i8 %conv35, i8* %cqn, align 1, !dbg !12671
  br label %for.cond, !dbg !12671, !llvm.loop !12681

for.end:                                          ; preds = %if.then19, %for.cond
  ret void, !dbg !12683
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @mlxsw_pci_queue_elem_get(%struct.mlxsw_pci_queue* %q, i32 %elem_index) #0 !dbg !12684 {
entry:
  %q.addr = alloca %struct.mlxsw_pci_queue*, align 8
  %elem_index.addr = alloca i32, align 4
  store %struct.mlxsw_pci_queue* %q, %struct.mlxsw_pci_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q.addr, metadata !12687, metadata !DIExpression()), !dbg !12688
  store i32 %elem_index, i32* %elem_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %elem_index.addr, metadata !12689, metadata !DIExpression()), !dbg !12690
  %0 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12691
  %1 = load i32, i32* %elem_index.addr, align 4, !dbg !12692
  %call = call %struct.mlxsw_pci_queue_elem_info* @mlxsw_pci_queue_elem_info_get(%struct.mlxsw_pci_queue* %0, i32 %1) #10, !dbg !12693
  %elem = getelementptr inbounds %struct.mlxsw_pci_queue_elem_info, %struct.mlxsw_pci_queue_elem_info* %call, i32 0, i32 0, !dbg !12694
  %2 = load i8*, i8** %elem, align 8, !dbg !12694
  ret i8* %2, !dbg !12695
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_eqe_owner_set(i8* %buf, i32 %val) #0 !dbg !12696 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12697, metadata !DIExpression()), !dbg !12698
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !12699, metadata !DIExpression()), !dbg !12698
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !12698
  %1 = load i32, i32* %val.addr, align 4, !dbg !12698
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_eqe_owner_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !12698
  ret void, !dbg !12698
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_sw2hw_eq_int_msix_set(i8* %buf, i32 %val) #0 !dbg !12700 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12701, metadata !DIExpression()), !dbg !12702
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !12703, metadata !DIExpression()), !dbg !12702
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !12702
  %1 = load i32, i32* %val.addr, align 4, !dbg !12702
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_sw2hw_eq_int_msix_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !12702
  ret void, !dbg !12702
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_sw2hw_eq_st_set(i8* %buf, i32 %val) #0 !dbg !12704 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12705, metadata !DIExpression()), !dbg !12706
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !12707, metadata !DIExpression()), !dbg !12706
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !12706
  %1 = load i32, i32* %val.addr, align 4, !dbg !12706
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_sw2hw_eq_st_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !12706
  ret void, !dbg !12706
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_sw2hw_eq_log_eq_size_set(i8* %buf, i32 %val) #0 !dbg !12708 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12709, metadata !DIExpression()), !dbg !12710
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !12711, metadata !DIExpression()), !dbg !12710
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !12710
  %1 = load i32, i32* %val.addr, align 4, !dbg !12710
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_sw2hw_eq_log_eq_size_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !12710
  ret void, !dbg !12710
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i16(i16) #5

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u32(i32 %n) #7 !dbg !12712 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !12715, metadata !DIExpression()), !dbg !12719
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !12721, metadata !DIExpression()), !dbg !12722
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !12723, metadata !DIExpression()), !dbg !12724
  %0 = load i32, i32* %n.addr, align 4, !dbg !12725
  store i32 %0, i32* %x.addr.i, align 4
  %1 = load i32, i32* %x.addr.i, align 4, !dbg !12726
  %2 = call i32 asm "bsrl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %1, i32 -1) #15, !dbg !12727, !srcloc !12728
  store i32 %2, i32* %r.i, align 4, !dbg !12727
  %3 = load i32, i32* %r.i, align 4, !dbg !12729
  %add.i = add i32 %3, 1, !dbg !12730
  %sub = sub i32 %add.i, 1, !dbg !12731
  ret i32 %sub, !dbg !12732
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__mlxsw_pci_queue_page_get(%struct.mlxsw_pci_queue* %q, i32 %page_index) #0 !dbg !12733 {
entry:
  %q.addr = alloca %struct.mlxsw_pci_queue*, align 8
  %page_index.addr = alloca i32, align 4
  store %struct.mlxsw_pci_queue* %q, %struct.mlxsw_pci_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q.addr, metadata !12736, metadata !DIExpression()), !dbg !12737
  store i32 %page_index, i32* %page_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %page_index.addr, metadata !12738, metadata !DIExpression()), !dbg !12739
  %0 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12740
  %mem_item = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %0, i32 0, i32 1, !dbg !12741
  %mapaddr = getelementptr inbounds %struct.mlxsw_pci_mem_item, %struct.mlxsw_pci_mem_item* %mem_item, i32 0, i32 1, !dbg !12742
  %1 = load i64, i64* %mapaddr, align 8, !dbg !12742
  %2 = load i32, i32* %page_index.addr, align 4, !dbg !12743
  %mul = mul i32 4096, %2, !dbg !12744
  %conv = sext i32 %mul to i64, !dbg !12745
  %add = add i64 %1, %conv, !dbg !12746
  ret i64 %add, !dbg !12747
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_sw2hw_eq_pa_set(i8* %buf, i16 zeroext %index, i64 %val) #0 !dbg !12748 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i64, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12749, metadata !DIExpression()), !dbg !12750
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !12751, metadata !DIExpression()), !dbg !12750
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !12752, metadata !DIExpression()), !dbg !12750
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !12750
  %1 = load i16, i16* %index.addr, align 2, !dbg !12750
  %2 = load i64, i64* %val.addr, align 8, !dbg !12750
  call void @__mlxsw_item_set64(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_sw2hw_eq_pa_item to %struct.mlxsw_item*), i16 zeroext %1, i64 %2) #10, !dbg !12750
  ret void, !dbg !12750
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_sw2hw_eq(%struct.mlxsw_core* %mlxsw_core, i8* %in_mbox, i32 %eq_number) #0 !dbg !12753 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %in_mbox.addr = alloca i8*, align 8
  %eq_number.addr = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !12754, metadata !DIExpression()), !dbg !12755
  store i8* %in_mbox, i8** %in_mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %in_mbox.addr, metadata !12756, metadata !DIExpression()), !dbg !12757
  store i32 %eq_number, i32* %eq_number.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %eq_number.addr, metadata !12758, metadata !DIExpression()), !dbg !12759
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12760
  %1 = load i32, i32* %eq_number.addr, align 4, !dbg !12761
  %2 = load i8*, i8** %in_mbox.addr, align 8, !dbg !12762
  %call = call i32 @mlxsw_cmd_exec_in(%struct.mlxsw_core* %0, i16 zeroext 19, i8 zeroext 0, i32 %1, i8* %2, i64 4096) #10, !dbg !12763
  ret i32 %call, !dbg !12764
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_queue_doorbell_consumer_ring(%struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci_queue* %q) #0 !dbg !12765 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %q.addr = alloca %struct.mlxsw_pci_queue*, align 8
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !12766, metadata !DIExpression()), !dbg !12767
  store %struct.mlxsw_pci_queue* %q, %struct.mlxsw_pci_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q.addr, metadata !12768, metadata !DIExpression()), !dbg !12769
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #12, !dbg !12770, !srcloc !12771
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !12772
  %1 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12773
  %2 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12774
  %consumer_counter = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %2, i32 0, i32 4, !dbg !12775
  %3 = load i16, i16* %consumer_counter, align 2, !dbg !12775
  %conv = zext i16 %3 to i32, !dbg !12774
  %4 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12776
  %count = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %4, i32 0, i32 5, !dbg !12777
  %5 = load i16, i16* %count, align 4, !dbg !12777
  %conv1 = zext i16 %5 to i32, !dbg !12776
  %add = add i32 %conv, %conv1, !dbg !12778
  %conv2 = trunc i32 %add to i16, !dbg !12774
  call void @__mlxsw_pci_queue_doorbell_set(%struct.mlxsw_pci* %0, %struct.mlxsw_pci_queue* %1, i16 zeroext %conv2) #10, !dbg !12779
  ret void, !dbg !12780
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_queue_doorbell_arm_consumer_ring(%struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci_queue* %q) #0 !dbg !12781 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %q.addr = alloca %struct.mlxsw_pci_queue*, align 8
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !12782, metadata !DIExpression()), !dbg !12783
  store %struct.mlxsw_pci_queue* %q, %struct.mlxsw_pci_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q.addr, metadata !12784, metadata !DIExpression()), !dbg !12785
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #12, !dbg !12786, !srcloc !12787
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !12788
  %1 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12789
  %2 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12790
  %consumer_counter = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %2, i32 0, i32 4, !dbg !12791
  %3 = load i16, i16* %consumer_counter, align 2, !dbg !12791
  call void @__mlxsw_pci_queue_doorbell_arm_set(%struct.mlxsw_pci* %0, %struct.mlxsw_pci_queue* %1, i16 zeroext %3) #10, !dbg !12792
  ret void, !dbg !12793
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__mlxsw_pci_queue_doorbell_set(%struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci_queue* %q, i16 zeroext %val) #0 !dbg !12794 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %q.addr = alloca %struct.mlxsw_pci_queue*, align 8
  %val.addr = alloca i16, align 2
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !12797, metadata !DIExpression()), !dbg !12798
  store %struct.mlxsw_pci_queue* %q, %struct.mlxsw_pci_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q.addr, metadata !12799, metadata !DIExpression()), !dbg !12800
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !12801, metadata !DIExpression()), !dbg !12802
  %0 = load i16, i16* %val.addr, align 2, !dbg !12803
  %conv = zext i16 %0 to i32, !dbg !12803
  %1 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !12803
  %hw_addr = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %1, i32 0, i32 1, !dbg !12803
  %2 = load i8*, i8** %hw_addr, align 8, !dbg !12803
  %3 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !12803
  %doorbell_offset = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %3, i32 0, i32 4, !dbg !12803
  %4 = load i32, i32* %doorbell_offset, align 8, !dbg !12803
  %5 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12803
  %type = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %5, i32 0, i32 8, !dbg !12803
  %6 = load i32, i32* %type, align 8, !dbg !12803
  %idxprom = zext i32 %6 to i64, !dbg !12803
  %arrayidx = getelementptr [4 x i16], [4 x i16]* @mlxsw_pci_doorbell_type_offset, i64 0, i64 %idxprom, !dbg !12803
  %7 = load i16, i16* %arrayidx, align 2, !dbg !12803
  %conv1 = zext i16 %7 to i32, !dbg !12803
  %add = add i32 %4, %conv1, !dbg !12803
  %8 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12803
  %num = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %8, i32 0, i32 6, !dbg !12803
  %9 = load i8, i8* %num, align 2, !dbg !12803
  %conv2 = zext i8 %9 to i32, !dbg !12803
  %mul = mul i32 %conv2, 4, !dbg !12803
  %add3 = add i32 %add, %mul, !dbg !12803
  %idx.ext = zext i32 %add3 to i64, !dbg !12803
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !12803
  call void @iowrite32be(i32 %conv, i8* %add.ptr) #10, !dbg !12803
  ret void, !dbg !12804
}

; Function Attrs: noredzone
declare dso_local void @iowrite32be(i32, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__mlxsw_pci_queue_doorbell_arm_set(%struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci_queue* %q, i16 zeroext %val) #0 !dbg !12805 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %q.addr = alloca %struct.mlxsw_pci_queue*, align 8
  %val.addr = alloca i16, align 2
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !12806, metadata !DIExpression()), !dbg !12807
  store %struct.mlxsw_pci_queue* %q, %struct.mlxsw_pci_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q.addr, metadata !12808, metadata !DIExpression()), !dbg !12809
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !12810, metadata !DIExpression()), !dbg !12811
  %0 = load i16, i16* %val.addr, align 2, !dbg !12812
  %conv = zext i16 %0 to i32, !dbg !12812
  %1 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !12812
  %hw_addr = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %1, i32 0, i32 1, !dbg !12812
  %2 = load i8*, i8** %hw_addr, align 8, !dbg !12812
  %3 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !12812
  %doorbell_offset = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %3, i32 0, i32 4, !dbg !12812
  %4 = load i32, i32* %doorbell_offset, align 8, !dbg !12812
  %5 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12812
  %type = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %5, i32 0, i32 8, !dbg !12812
  %6 = load i32, i32* %type, align 8, !dbg !12812
  %idxprom = zext i32 %6 to i64, !dbg !12812
  %arrayidx = getelementptr [4 x i16], [4 x i16]* @mlxsw_pci_doorbell_arm_type_offset, i64 0, i64 %idxprom, !dbg !12812
  %7 = load i16, i16* %arrayidx, align 2, !dbg !12812
  %conv1 = zext i16 %7 to i32, !dbg !12812
  %add = add i32 %4, %conv1, !dbg !12812
  %8 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12812
  %num = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %8, i32 0, i32 6, !dbg !12812
  %9 = load i8, i8* %num, align 2, !dbg !12812
  %conv2 = zext i8 %9 to i32, !dbg !12812
  %mul = mul i32 %conv2, 4, !dbg !12812
  %add3 = add i32 %add, %mul, !dbg !12812
  %idx.ext = zext i32 %add3 to i64, !dbg !12812
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !12812
  call void @iowrite32be(i32 %conv, i8* %add.ptr) #10, !dbg !12812
  ret void, !dbg !12813
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_hw2sw_eq(%struct.mlxsw_core* %mlxsw_core, i32 %eq_number) #0 !dbg !12814 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %eq_number.addr = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !12817, metadata !DIExpression()), !dbg !12818
  store i32 %eq_number, i32* %eq_number.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %eq_number.addr, metadata !12819, metadata !DIExpression()), !dbg !12820
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12821
  %1 = load i32, i32* %eq_number.addr, align 4, !dbg !12822
  %call = call i32 @mlxsw_cmd_exec_none(%struct.mlxsw_core* %0, i16 zeroext 20, i8 zeroext 0, i32 %1) #10, !dbg !12823
  ret i32 %call, !dbg !12824
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_exec_none(%struct.mlxsw_core* %mlxsw_core, i16 zeroext %opcode, i8 zeroext %opcode_mod, i32 %in_mod) #0 !dbg !12825 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %opcode.addr = alloca i16, align 2
  %opcode_mod.addr = alloca i8, align 1
  %in_mod.addr = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !12828, metadata !DIExpression()), !dbg !12829
  store i16 %opcode, i16* %opcode.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %opcode.addr, metadata !12830, metadata !DIExpression()), !dbg !12831
  store i8 %opcode_mod, i8* %opcode_mod.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %opcode_mod.addr, metadata !12832, metadata !DIExpression()), !dbg !12833
  store i32 %in_mod, i32* %in_mod.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %in_mod.addr, metadata !12834, metadata !DIExpression()), !dbg !12835
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !12836
  %1 = load i16, i16* %opcode.addr, align 2, !dbg !12837
  %2 = load i8, i8* %opcode_mod.addr, align 1, !dbg !12838
  %3 = load i32, i32* %in_mod.addr, align 4, !dbg !12839
  %call = call i32 @mlxsw_cmd_exec(%struct.mlxsw_core* %0, i16 zeroext %1, i8 zeroext %2, i32 %3, i1 zeroext false, i1 zeroext false, i8* null, i64 0, i8* null, i64 0) #10, !dbg !12840
  ret i32 %call, !dbg !12841
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @mlxsw_pci_cq_count(%struct.mlxsw_pci* %mlxsw_pci) #0 !dbg !12842 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !12845, metadata !DIExpression()), !dbg !12846
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !12847
  %call = call zeroext i8 @__mlxsw_pci_queue_count(%struct.mlxsw_pci* %0, i32 2) #10, !dbg !12848
  ret i8 %call, !dbg !12849
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @mlxsw_pci_eq_sw_eqe_get(%struct.mlxsw_pci_queue* %q) #0 !dbg !12850 {
entry:
  %retval = alloca i8*, align 8
  %q.addr = alloca %struct.mlxsw_pci_queue*, align 8
  %elem_info = alloca %struct.mlxsw_pci_queue_elem_info*, align 8
  %elem = alloca i8*, align 8
  %owner_bit = alloca i8, align 1
  store %struct.mlxsw_pci_queue* %q, %struct.mlxsw_pci_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q.addr, metadata !12853, metadata !DIExpression()), !dbg !12854
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue_elem_info** %elem_info, metadata !12855, metadata !DIExpression()), !dbg !12856
  call void @llvm.dbg.declare(metadata i8** %elem, metadata !12857, metadata !DIExpression()), !dbg !12858
  call void @llvm.dbg.declare(metadata i8* %owner_bit, metadata !12859, metadata !DIExpression()), !dbg !12860
  %0 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12861
  %call = call %struct.mlxsw_pci_queue_elem_info* @mlxsw_pci_queue_elem_info_consumer_get(%struct.mlxsw_pci_queue* %0) #10, !dbg !12862
  store %struct.mlxsw_pci_queue_elem_info* %call, %struct.mlxsw_pci_queue_elem_info** %elem_info, align 8, !dbg !12863
  %1 = load %struct.mlxsw_pci_queue_elem_info*, %struct.mlxsw_pci_queue_elem_info** %elem_info, align 8, !dbg !12864
  %elem1 = getelementptr inbounds %struct.mlxsw_pci_queue_elem_info, %struct.mlxsw_pci_queue_elem_info* %1, i32 0, i32 0, !dbg !12865
  %2 = load i8*, i8** %elem1, align 8, !dbg !12865
  store i8* %2, i8** %elem, align 8, !dbg !12866
  %3 = load i8*, i8** %elem, align 8, !dbg !12867
  %call2 = call i32 @mlxsw_pci_eqe_owner_get(i8* %3) #10, !dbg !12868
  %tobool = icmp ne i32 %call2, 0, !dbg !12868
  %frombool = zext i1 %tobool to i8, !dbg !12869
  store i8 %frombool, i8* %owner_bit, align 1, !dbg !12869
  %4 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12870
  %5 = load i8, i8* %owner_bit, align 1, !dbg !12872
  %tobool3 = trunc i8 %5 to i1, !dbg !12872
  %call4 = call zeroext i1 @mlxsw_pci_elem_hw_owned(%struct.mlxsw_pci_queue* %4, i1 zeroext %tobool3) #10, !dbg !12873
  br i1 %call4, label %if.then, label %if.end, !dbg !12874

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !12875
  br label %return, !dbg !12875

if.end:                                           ; preds = %entry
  %6 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12876
  %consumer_counter = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %6, i32 0, i32 4, !dbg !12877
  %7 = load i16, i16* %consumer_counter, align 2, !dbg !12878
  %inc = add i16 %7, 1, !dbg !12878
  store i16 %inc, i16* %consumer_counter, align 2, !dbg !12878
  call void asm sideeffect "lfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #12, !dbg !12879, !srcloc !12880
  %8 = load i8*, i8** %elem, align 8, !dbg !12881
  store i8* %8, i8** %retval, align 8, !dbg !12882
  br label %return, !dbg !12882

return:                                           ; preds = %if.end, %if.then
  %9 = load i8*, i8** %retval, align 8, !dbg !12883
  ret i8* %9, !dbg !12883
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_eq_cmd_event(%struct.mlxsw_pci* %mlxsw_pci, i8* %eqe) #0 !dbg !12884 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %eqe.addr = alloca i8*, align 8
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !12887, metadata !DIExpression()), !dbg !12888
  store i8* %eqe, i8** %eqe.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %eqe.addr, metadata !12889, metadata !DIExpression()), !dbg !12890
  %0 = load i8*, i8** %eqe.addr, align 8, !dbg !12891
  %call = call i32 @mlxsw_pci_eqe_cmd_status_get(i8* %0) #10, !dbg !12892
  %conv = trunc i32 %call to i8, !dbg !12892
  %1 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !12893
  %cmd = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %1, i32 0, i32 7, !dbg !12894
  %comp = getelementptr inbounds %struct.anon.138, %struct.anon.138* %cmd, i32 0, i32 6, !dbg !12895
  %status = getelementptr inbounds %struct.anon.139, %struct.anon.139* %comp, i32 0, i32 0, !dbg !12896
  store i8 %conv, i8* %status, align 8, !dbg !12897
  %2 = load i8*, i8** %eqe.addr, align 8, !dbg !12898
  %call1 = call i32 @mlxsw_pci_eqe_cmd_out_param_h_get(i8* %2) #10, !dbg !12899
  %conv2 = zext i32 %call1 to i64, !dbg !12900
  %shl = shl i64 %conv2, 32, !dbg !12901
  %3 = load i8*, i8** %eqe.addr, align 8, !dbg !12902
  %call3 = call i32 @mlxsw_pci_eqe_cmd_out_param_l_get(i8* %3) #10, !dbg !12903
  %conv4 = zext i32 %call3 to i64, !dbg !12903
  %or = or i64 %shl, %conv4, !dbg !12904
  %4 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !12905
  %cmd5 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %4, i32 0, i32 7, !dbg !12906
  %comp6 = getelementptr inbounds %struct.anon.138, %struct.anon.138* %cmd5, i32 0, i32 6, !dbg !12907
  %out_param = getelementptr inbounds %struct.anon.139, %struct.anon.139* %comp6, i32 0, i32 1, !dbg !12908
  store i64 %or, i64* %out_param, align 8, !dbg !12909
  %5 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !12910
  %cmd7 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %5, i32 0, i32 7, !dbg !12911
  %wait_done = getelementptr inbounds %struct.anon.138, %struct.anon.138* %cmd7, i32 0, i32 5, !dbg !12912
  store i8 1, i8* %wait_done, align 8, !dbg !12913
  %6 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !12914
  %cmd8 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %6, i32 0, i32 7, !dbg !12914
  %wait = getelementptr inbounds %struct.anon.138, %struct.anon.138* %cmd8, i32 0, i32 4, !dbg !12914
  call void @__wake_up(%struct.wait_queue_head* %wait, i32 3, i32 1, i8* null) #10, !dbg !12914
  ret void, !dbg !12915
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_eqe_cqn_get(i8* %buf) #0 !dbg !12916 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12917, metadata !DIExpression()), !dbg !12918
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !12918
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_eqe_cqn_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !12918
  ret i32 %call, !dbg !12918
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #0 !dbg !12919 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !12925, metadata !DIExpression()), !dbg !12927
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !12929, metadata !DIExpression()), !dbg !12930
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !12931, metadata !DIExpression()), !dbg !12939
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12941, metadata !DIExpression()), !dbg !12942
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !12943, metadata !DIExpression()), !dbg !12944
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !12945, metadata !DIExpression()), !dbg !12946
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !12947
  %1 = load i64, i64* %nr.addr, align 8, !dbg !12948
  %div = sdiv i64 %1, 64, !dbg !12948
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !12949
  %2 = bitcast i64* %add.ptr to i8*, !dbg !12947
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !12950
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !12951
  %conv.i = trunc i64 %4 to i32, !dbg !12951
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #14, !dbg !12952
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !12953
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !12953
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #14, !dbg !12953
  %7 = load i64, i64* %nr.addr, align 8, !dbg !12954
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !12955
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !12956
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #12, !dbg !12958
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !12959

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !12960
  %12 = bitcast i64* %11 to i8*, !dbg !12960
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !12960
  %shr.i = ashr i64 %13, 3, !dbg !12960
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !12960
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !12962
  %and.i = and i64 %14, 7, !dbg !12962
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !12962
  %shl.i = shl i32 1, %sh_prom.i, !dbg !12962
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #12, !dbg !12963, !srcloc !12964
  br label %arch_set_bit.exit, !dbg !12965

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !12966
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !12968
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #12, !dbg !12969, !srcloc !12970
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !12971
}

; Function Attrs: noredzone
declare dso_local i64 @find_first_bit(i64*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_pci_queue* @mlxsw_pci_cq_get(%struct.mlxsw_pci* %mlxsw_pci, i8 zeroext %q_num) #0 !dbg !12972 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %q_num.addr = alloca i8, align 1
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !12975, metadata !DIExpression()), !dbg !12976
  store i8 %q_num, i8* %q_num.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %q_num.addr, metadata !12977, metadata !DIExpression()), !dbg !12978
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !12979
  %1 = load i8, i8* %q_num.addr, align 1, !dbg !12980
  %call = call %struct.mlxsw_pci_queue* @__mlxsw_pci_queue_get(%struct.mlxsw_pci* %0, i32 2, i8 zeroext %1) #10, !dbg !12981
  ret %struct.mlxsw_pci_queue* %call, !dbg !12982
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_queue_tasklet_schedule(%struct.mlxsw_pci_queue* %q) #0 !dbg !12983 {
entry:
  %q.addr = alloca %struct.mlxsw_pci_queue*, align 8
  store %struct.mlxsw_pci_queue* %q, %struct.mlxsw_pci_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q.addr, metadata !12986, metadata !DIExpression()), !dbg !12987
  %0 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !12988
  %tasklet = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %0, i32 0, i32 9, !dbg !12989
  call void @tasklet_schedule(%struct.tasklet_struct* %tasklet) #10, !dbg !12990
  ret void, !dbg !12991
}

; Function Attrs: noredzone
declare dso_local i64 @find_next_bit(i64*, i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @__mlxsw_pci_queue_count(%struct.mlxsw_pci* %mlxsw_pci, i32 %q_type) #0 !dbg !12992 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %q_type.addr = alloca i32, align 4
  %queue_group = alloca %struct.mlxsw_pci_queue_type_group*, align 8
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !12995, metadata !DIExpression()), !dbg !12996
  store i32 %q_type, i32* %q_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %q_type.addr, metadata !12997, metadata !DIExpression()), !dbg !12998
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue_type_group** %queue_group, metadata !12999, metadata !DIExpression()), !dbg !13000
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !13001
  %1 = load i32, i32* %q_type.addr, align 4, !dbg !13002
  %call = call %struct.mlxsw_pci_queue_type_group* @mlxsw_pci_queue_type_group_get(%struct.mlxsw_pci* %0, i32 %1) #10, !dbg !13003
  store %struct.mlxsw_pci_queue_type_group* %call, %struct.mlxsw_pci_queue_type_group** %queue_group, align 8, !dbg !13004
  %2 = load %struct.mlxsw_pci_queue_type_group*, %struct.mlxsw_pci_queue_type_group** %queue_group, align 8, !dbg !13005
  %count = getelementptr inbounds %struct.mlxsw_pci_queue_type_group, %struct.mlxsw_pci_queue_type_group* %2, i32 0, i32 1, !dbg !13006
  %3 = load i8, i8* %count, align 8, !dbg !13006
  ret i8 %3, !dbg !13007
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_pci_queue_elem_info* @mlxsw_pci_queue_elem_info_consumer_get(%struct.mlxsw_pci_queue* %q) #0 !dbg !13008 {
entry:
  %q.addr = alloca %struct.mlxsw_pci_queue*, align 8
  %index = alloca i32, align 4
  store %struct.mlxsw_pci_queue* %q, %struct.mlxsw_pci_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q.addr, metadata !13011, metadata !DIExpression()), !dbg !13012
  call void @llvm.dbg.declare(metadata i32* %index, metadata !13013, metadata !DIExpression()), !dbg !13014
  %0 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13015
  %consumer_counter = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %0, i32 0, i32 4, !dbg !13016
  %1 = load i16, i16* %consumer_counter, align 2, !dbg !13016
  %conv = zext i16 %1 to i32, !dbg !13015
  %2 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13017
  %count = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %2, i32 0, i32 5, !dbg !13018
  %3 = load i16, i16* %count, align 4, !dbg !13018
  %conv1 = zext i16 %3 to i32, !dbg !13017
  %sub = sub i32 %conv1, 1, !dbg !13019
  %and = and i32 %conv, %sub, !dbg !13020
  store i32 %and, i32* %index, align 4, !dbg !13014
  %4 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13021
  %5 = load i32, i32* %index, align 4, !dbg !13022
  %call = call %struct.mlxsw_pci_queue_elem_info* @mlxsw_pci_queue_elem_info_get(%struct.mlxsw_pci_queue* %4, i32 %5) #10, !dbg !13023
  ret %struct.mlxsw_pci_queue_elem_info* %call, !dbg !13024
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_eqe_owner_get(i8* %buf) #0 !dbg !13025 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13026, metadata !DIExpression()), !dbg !13027
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13027
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_eqe_owner_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !13027
  ret i32 %call, !dbg !13027
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mlxsw_pci_elem_hw_owned(%struct.mlxsw_pci_queue* %q, i1 zeroext %owner_bit) #0 !dbg !13028 {
entry:
  %q.addr = alloca %struct.mlxsw_pci_queue*, align 8
  %owner_bit.addr = alloca i8, align 1
  store %struct.mlxsw_pci_queue* %q, %struct.mlxsw_pci_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q.addr, metadata !13031, metadata !DIExpression()), !dbg !13032
  %frombool = zext i1 %owner_bit to i8
  store i8 %frombool, i8* %owner_bit.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %owner_bit.addr, metadata !13033, metadata !DIExpression()), !dbg !13034
  %0 = load i8, i8* %owner_bit.addr, align 1, !dbg !13035
  %tobool = trunc i8 %0 to i1, !dbg !13035
  %conv = zext i1 %tobool to i32, !dbg !13035
  %1 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13036
  %consumer_counter = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %1, i32 0, i32 4, !dbg !13037
  %2 = load i16, i16* %consumer_counter, align 2, !dbg !13037
  %conv1 = zext i16 %2 to i32, !dbg !13036
  %3 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13038
  %count = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %3, i32 0, i32 5, !dbg !13039
  %4 = load i16, i16* %count, align 4, !dbg !13039
  %conv2 = zext i16 %4 to i32, !dbg !13038
  %and = and i32 %conv1, %conv2, !dbg !13040
  %tobool3 = icmp ne i32 %and, 0, !dbg !13041
  %lnot = xor i1 %tobool3, true, !dbg !13041
  %lnot4 = xor i1 %lnot, true, !dbg !13042
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !13042
  %cmp = icmp ne i32 %conv, %lnot.ext, !dbg !13043
  ret i1 %cmp, !dbg !13044
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_eqe_cmd_status_get(i8* %buf) #0 !dbg !13045 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13046, metadata !DIExpression()), !dbg !13047
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13047
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_eqe_cmd_status_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !13047
  ret i32 %call, !dbg !13047
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_eqe_cmd_out_param_h_get(i8* %buf) #0 !dbg !13048 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13049, metadata !DIExpression()), !dbg !13050
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13050
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_eqe_cmd_out_param_h_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !13050
  ret i32 %call, !dbg !13050
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_eqe_cmd_out_param_l_get(i8* %buf) #0 !dbg !13051 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13052, metadata !DIExpression()), !dbg !13053
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13053
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_eqe_cmd_out_param_l_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !13053
  ret i32 %call, !dbg !13053
}

; Function Attrs: noredzone
declare dso_local void @__wake_up(%struct.wait_queue_head*, i32, i32, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !13054 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !13058, metadata !DIExpression()), !dbg !13059
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !13060, metadata !DIExpression()), !dbg !13061
  ret i1 true, !dbg !13062
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !13063 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !13067, metadata !DIExpression()), !dbg !13068
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13069, metadata !DIExpression()), !dbg !13070
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !13071, metadata !DIExpression()), !dbg !13072
  ret void, !dbg !13073
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_pci_queue* @__mlxsw_pci_queue_get(%struct.mlxsw_pci* %mlxsw_pci, i32 %q_type, i8 zeroext %q_num) #0 !dbg !13074 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %q_type.addr = alloca i32, align 4
  %q_num.addr = alloca i8, align 1
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !13077, metadata !DIExpression()), !dbg !13078
  store i32 %q_type, i32* %q_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %q_type.addr, metadata !13079, metadata !DIExpression()), !dbg !13080
  store i8 %q_num, i8* %q_num.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %q_num.addr, metadata !13081, metadata !DIExpression()), !dbg !13082
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !13083
  %queues = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %0, i32 0, i32 3, !dbg !13084
  %1 = load i32, i32* %q_type.addr, align 4, !dbg !13085
  %idxprom = zext i32 %1 to i64, !dbg !13083
  %arrayidx = getelementptr [4 x %struct.mlxsw_pci_queue_type_group], [4 x %struct.mlxsw_pci_queue_type_group]* %queues, i64 0, i64 %idxprom, !dbg !13083
  %q = getelementptr inbounds %struct.mlxsw_pci_queue_type_group, %struct.mlxsw_pci_queue_type_group* %arrayidx, i32 0, i32 0, !dbg !13086
  %2 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q, align 8, !dbg !13086
  %3 = load i8, i8* %q_num.addr, align 1, !dbg !13087
  %idxprom1 = zext i8 %3 to i64, !dbg !13083
  %arrayidx2 = getelementptr %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %2, i64 %idxprom1, !dbg !13083
  ret %struct.mlxsw_pci_queue* %arrayidx2, !dbg !13088
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tasklet_schedule(%struct.tasklet_struct* %t) #0 !dbg !13089 {
entry:
  %t.addr = alloca %struct.tasklet_struct*, align 8
  store %struct.tasklet_struct* %t, %struct.tasklet_struct** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tasklet_struct** %t.addr, metadata !13090, metadata !DIExpression()), !dbg !13091
  %0 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !13092
  %state = getelementptr inbounds %struct.tasklet_struct, %struct.tasklet_struct* %0, i32 0, i32 1, !dbg !13094
  %call = call zeroext i1 @test_and_set_bit(i64 0, i64* %state) #10, !dbg !13095
  br i1 %call, label %if.end, label %if.then, !dbg !13096

if.then:                                          ; preds = %entry
  %1 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !13097
  call void @__tasklet_schedule(%struct.tasklet_struct* %1) #10, !dbg !13098
  br label %if.end, !dbg !13098

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !13099
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_set_bit(i64 %nr, i64* %addr) #0 !dbg !13100 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !13103, metadata !DIExpression()), !dbg !13105
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !13107, metadata !DIExpression()), !dbg !13108
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !13109, metadata !DIExpression()), !dbg !13111
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !13112, metadata !DIExpression()), !dbg !13114
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !13116, metadata !DIExpression()), !dbg !13117
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !13118, metadata !DIExpression()), !dbg !13119
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !13120, metadata !DIExpression()), !dbg !13121
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !13122
  %1 = load i64, i64* %nr.addr, align 8, !dbg !13123
  %div = sdiv i64 %1, 64, !dbg !13123
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !13124
  %2 = bitcast i64* %add.ptr to i8*, !dbg !13122
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !13125
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !13126
  %conv.i = trunc i64 %4 to i32, !dbg !13126
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #14, !dbg !13127
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !13128
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !13128
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #14, !dbg !13128
  %7 = load i64, i64* %nr.addr, align 8, !dbg !13129
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !13130
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !13111
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !13111
  %11 = call i8 asm sideeffect " btsq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #12, !dbg !13111, !srcloc !13131
  store i8 %11, i8* %c.i, align 1, !dbg !13111
  %12 = load i8, i8* %c.i, align 1, !dbg !13111
  %tobool.i = trunc i8 %12 to i1, !dbg !13111
  %frombool.i = zext i1 %tobool.i to i8, !dbg !13111
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !13111
  %13 = load i8, i8* %tmp.i, align 1, !dbg !13111
  %tobool1.i = trunc i8 %13 to i1, !dbg !13111
  ret i1 %tobool1.i, !dbg !13132
}

; Function Attrs: noredzone
declare dso_local void @__tasklet_schedule(%struct.tasklet_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_cq_pre_init(%struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci_queue* %q) #0 !dbg !13133 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %q.addr = alloca %struct.mlxsw_pci_queue*, align 8
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !13134, metadata !DIExpression()), !dbg !13135
  store %struct.mlxsw_pci_queue* %q, %struct.mlxsw_pci_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q.addr, metadata !13136, metadata !DIExpression()), !dbg !13137
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !13138
  %max_cqe_ver = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %0, i32 0, i32 10, !dbg !13139
  %1 = load i32, i32* %max_cqe_ver, align 8, !dbg !13139
  %2 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13140
  %u = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %2, i32 0, i32 11, !dbg !13141
  %cq = bitcast %union.anon.134* %u to %struct.anon.135*, !dbg !13142
  %v = getelementptr inbounds %struct.anon.135, %struct.anon.135* %cq, i32 0, i32 2, !dbg !13143
  store i32 %1, i32* %v, align 8, !dbg !13144
  %3 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13145
  %u1 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %3, i32 0, i32 11, !dbg !13147
  %cq2 = bitcast %union.anon.134* %u1 to %struct.anon.135*, !dbg !13148
  %v3 = getelementptr inbounds %struct.anon.135, %struct.anon.135* %cq2, i32 0, i32 2, !dbg !13149
  %4 = load i32, i32* %v3, align 8, !dbg !13149
  %cmp = icmp eq i32 %4, 2, !dbg !13150
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !13151

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13152
  %num = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %5, i32 0, i32 6, !dbg !13153
  %6 = load i8, i8* %num, align 2, !dbg !13153
  %conv = zext i8 %6 to i32, !dbg !13152
  %7 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !13154
  %num_sdq_cqs = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %7, i32 0, i32 11, !dbg !13155
  %8 = load i8, i8* %num_sdq_cqs, align 4, !dbg !13155
  %conv4 = zext i8 %8 to i32, !dbg !13154
  %cmp5 = icmp slt i32 %conv, %conv4, !dbg !13156
  br i1 %cmp5, label %if.then, label %if.end, !dbg !13157

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13158
  %u7 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %9, i32 0, i32 11, !dbg !13159
  %cq8 = bitcast %union.anon.134* %u7 to %struct.anon.135*, !dbg !13160
  %v9 = getelementptr inbounds %struct.anon.135, %struct.anon.135* %cq8, i32 0, i32 2, !dbg !13161
  store i32 1, i32* %v9, align 8, !dbg !13162
  br label %if.end, !dbg !13158

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !13163
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_cq_init(%struct.mlxsw_pci* %mlxsw_pci, i8* %mbox, %struct.mlxsw_pci_queue* %q) #0 !dbg !13164 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %mbox.addr = alloca i8*, align 8
  %q.addr = alloca %struct.mlxsw_pci_queue*, align 8
  %i = alloca i32, align 4
  %err = alloca i32, align 4
  %elem = alloca i8*, align 8
  %mapaddr = alloca i64, align 8
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !13165, metadata !DIExpression()), !dbg !13166
  store i8* %mbox, i8** %mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mbox.addr, metadata !13167, metadata !DIExpression()), !dbg !13168
  store %struct.mlxsw_pci_queue* %q, %struct.mlxsw_pci_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q.addr, metadata !13169, metadata !DIExpression()), !dbg !13170
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13171, metadata !DIExpression()), !dbg !13172
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13173, metadata !DIExpression()), !dbg !13174
  %0 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13175
  %consumer_counter = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %0, i32 0, i32 4, !dbg !13176
  store i16 0, i16* %consumer_counter, align 2, !dbg !13177
  store i32 0, i32* %i, align 4, !dbg !13178
  br label %for.cond, !dbg !13180

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !13181
  %2 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13183
  %count = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %2, i32 0, i32 5, !dbg !13184
  %3 = load i16, i16* %count, align 4, !dbg !13184
  %conv = zext i16 %3 to i32, !dbg !13183
  %cmp = icmp slt i32 %1, %conv, !dbg !13185
  br i1 %cmp, label %for.body, label %for.end, !dbg !13186

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %elem, metadata !13187, metadata !DIExpression()), !dbg !13189
  %4 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13190
  %5 = load i32, i32* %i, align 4, !dbg !13191
  %call = call i8* @mlxsw_pci_queue_elem_get(%struct.mlxsw_pci_queue* %4, i32 %5) #10, !dbg !13192
  store i8* %call, i8** %elem, align 8, !dbg !13189
  %6 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13193
  %u = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %6, i32 0, i32 11, !dbg !13194
  %cq = bitcast %union.anon.134* %u to %struct.anon.135*, !dbg !13195
  %v = getelementptr inbounds %struct.anon.135, %struct.anon.135* %cq, i32 0, i32 2, !dbg !13196
  %7 = load i32, i32* %v, align 8, !dbg !13196
  %8 = load i8*, i8** %elem, align 8, !dbg !13197
  call void @mlxsw_pci_cqe_owner_set(i32 %7, i8* %8, i32 1) #10, !dbg !13198
  br label %for.inc, !dbg !13199

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !13200
  %inc = add i32 %9, 1, !dbg !13200
  store i32 %inc, i32* %i, align 4, !dbg !13200
  br label %for.cond, !dbg !13201, !llvm.loop !13202

for.end:                                          ; preds = %for.cond
  %10 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13204
  %u2 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %10, i32 0, i32 11, !dbg !13206
  %cq3 = bitcast %union.anon.134* %u2 to %struct.anon.135*, !dbg !13207
  %v4 = getelementptr inbounds %struct.anon.135, %struct.anon.135* %cq3, i32 0, i32 2, !dbg !13208
  %11 = load i32, i32* %v4, align 8, !dbg !13208
  %cmp5 = icmp eq i32 %11, 1, !dbg !13209
  br i1 %cmp5, label %if.then, label %if.else, !dbg !13210

if.then:                                          ; preds = %for.end
  %12 = load i8*, i8** %mbox.addr, align 8, !dbg !13211
  call void @mlxsw_cmd_mbox_sw2hw_cq_cqe_ver_set(i8* %12, i32 0) #10, !dbg !13212
  br label %if.end13, !dbg !13212

if.else:                                          ; preds = %for.end
  %13 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13213
  %u7 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %13, i32 0, i32 11, !dbg !13215
  %cq8 = bitcast %union.anon.134* %u7 to %struct.anon.135*, !dbg !13216
  %v9 = getelementptr inbounds %struct.anon.135, %struct.anon.135* %cq8, i32 0, i32 2, !dbg !13217
  %14 = load i32, i32* %v9, align 8, !dbg !13217
  %cmp10 = icmp eq i32 %14, 2, !dbg !13218
  br i1 %cmp10, label %if.then12, label %if.end, !dbg !13219

if.then12:                                        ; preds = %if.else
  %15 = load i8*, i8** %mbox.addr, align 8, !dbg !13220
  call void @mlxsw_cmd_mbox_sw2hw_cq_cqe_ver_set(i8* %15, i32 1) #10, !dbg !13221
  br label %if.end, !dbg !13221

if.end:                                           ; preds = %if.then12, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then
  %16 = load i8*, i8** %mbox.addr, align 8, !dbg !13222
  call void @mlxsw_cmd_mbox_sw2hw_cq_c_eqn_set(i8* %16, i32 1) #10, !dbg !13223
  %17 = load i8*, i8** %mbox.addr, align 8, !dbg !13224
  call void @mlxsw_cmd_mbox_sw2hw_cq_st_set(i8* %17, i32 0) #10, !dbg !13225
  %18 = load i8*, i8** %mbox.addr, align 8, !dbg !13226
  %19 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count14 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %19, i32 0, i32 5, !dbg !13227
  %20 = load i16, i16* %count14, align 4, !dbg !13227
  %21 = call i1 @llvm.is.constant.i16(i16 %20), !dbg !13227
  br i1 %21, label %cond.true, label %cond.false516, !dbg !13227

cond.true:                                        ; preds = %if.end13
  %22 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count15 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %22, i32 0, i32 5, !dbg !13227
  %23 = load i16, i16* %count15, align 4, !dbg !13227
  %24 = call i1 @llvm.is.constant.i16(i16 %23), !dbg !13227
  br i1 %24, label %cond.true16, label %cond.false513, !dbg !13227

cond.true16:                                      ; preds = %cond.true
  %25 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count17 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %25, i32 0, i32 5, !dbg !13227
  %26 = load i16, i16* %count17, align 4, !dbg !13227
  %conv18 = zext i16 %26 to i32, !dbg !13227
  %cmp19 = icmp slt i32 %conv18, 2, !dbg !13227
  br i1 %cmp19, label %cond.true21, label %cond.false, !dbg !13227

cond.true21:                                      ; preds = %cond.true16
  br label %cond.end511, !dbg !13227

cond.false:                                       ; preds = %cond.true16
  %27 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count22 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %27, i32 0, i32 5, !dbg !13227
  %28 = load i16, i16* %count22, align 4, !dbg !13227
  %conv23 = zext i16 %28 to i64, !dbg !13227
  %and = and i64 %conv23, -9223372036854775808, !dbg !13227
  %tobool = icmp ne i64 %and, 0, !dbg !13227
  br i1 %tobool, label %cond.true24, label %cond.false25, !dbg !13227

cond.true24:                                      ; preds = %cond.false
  br label %cond.end509, !dbg !13227

cond.false25:                                     ; preds = %cond.false
  %29 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count26 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %29, i32 0, i32 5, !dbg !13227
  %30 = load i16, i16* %count26, align 4, !dbg !13227
  %conv27 = zext i16 %30 to i64, !dbg !13227
  %and28 = and i64 %conv27, 4611686018427387904, !dbg !13227
  %tobool29 = icmp ne i64 %and28, 0, !dbg !13227
  br i1 %tobool29, label %cond.true30, label %cond.false31, !dbg !13227

cond.true30:                                      ; preds = %cond.false25
  br label %cond.end507, !dbg !13227

cond.false31:                                     ; preds = %cond.false25
  %31 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count32 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %31, i32 0, i32 5, !dbg !13227
  %32 = load i16, i16* %count32, align 4, !dbg !13227
  %conv33 = zext i16 %32 to i64, !dbg !13227
  %and34 = and i64 %conv33, 2305843009213693952, !dbg !13227
  %tobool35 = icmp ne i64 %and34, 0, !dbg !13227
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !13227

cond.true36:                                      ; preds = %cond.false31
  br label %cond.end505, !dbg !13227

cond.false37:                                     ; preds = %cond.false31
  %33 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count38 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %33, i32 0, i32 5, !dbg !13227
  %34 = load i16, i16* %count38, align 4, !dbg !13227
  %conv39 = zext i16 %34 to i64, !dbg !13227
  %and40 = and i64 %conv39, 1152921504606846976, !dbg !13227
  %tobool41 = icmp ne i64 %and40, 0, !dbg !13227
  br i1 %tobool41, label %cond.true42, label %cond.false43, !dbg !13227

cond.true42:                                      ; preds = %cond.false37
  br label %cond.end503, !dbg !13227

cond.false43:                                     ; preds = %cond.false37
  %35 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count44 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %35, i32 0, i32 5, !dbg !13227
  %36 = load i16, i16* %count44, align 4, !dbg !13227
  %conv45 = zext i16 %36 to i64, !dbg !13227
  %and46 = and i64 %conv45, 576460752303423488, !dbg !13227
  %tobool47 = icmp ne i64 %and46, 0, !dbg !13227
  br i1 %tobool47, label %cond.true48, label %cond.false49, !dbg !13227

cond.true48:                                      ; preds = %cond.false43
  br label %cond.end501, !dbg !13227

cond.false49:                                     ; preds = %cond.false43
  %37 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count50 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %37, i32 0, i32 5, !dbg !13227
  %38 = load i16, i16* %count50, align 4, !dbg !13227
  %conv51 = zext i16 %38 to i64, !dbg !13227
  %and52 = and i64 %conv51, 288230376151711744, !dbg !13227
  %tobool53 = icmp ne i64 %and52, 0, !dbg !13227
  br i1 %tobool53, label %cond.true54, label %cond.false55, !dbg !13227

cond.true54:                                      ; preds = %cond.false49
  br label %cond.end499, !dbg !13227

cond.false55:                                     ; preds = %cond.false49
  %39 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count56 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %39, i32 0, i32 5, !dbg !13227
  %40 = load i16, i16* %count56, align 4, !dbg !13227
  %conv57 = zext i16 %40 to i64, !dbg !13227
  %and58 = and i64 %conv57, 144115188075855872, !dbg !13227
  %tobool59 = icmp ne i64 %and58, 0, !dbg !13227
  br i1 %tobool59, label %cond.true60, label %cond.false61, !dbg !13227

cond.true60:                                      ; preds = %cond.false55
  br label %cond.end497, !dbg !13227

cond.false61:                                     ; preds = %cond.false55
  %41 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count62 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %41, i32 0, i32 5, !dbg !13227
  %42 = load i16, i16* %count62, align 4, !dbg !13227
  %conv63 = zext i16 %42 to i64, !dbg !13227
  %and64 = and i64 %conv63, 72057594037927936, !dbg !13227
  %tobool65 = icmp ne i64 %and64, 0, !dbg !13227
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !13227

cond.true66:                                      ; preds = %cond.false61
  br label %cond.end495, !dbg !13227

cond.false67:                                     ; preds = %cond.false61
  %43 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count68 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %43, i32 0, i32 5, !dbg !13227
  %44 = load i16, i16* %count68, align 4, !dbg !13227
  %conv69 = zext i16 %44 to i64, !dbg !13227
  %and70 = and i64 %conv69, 36028797018963968, !dbg !13227
  %tobool71 = icmp ne i64 %and70, 0, !dbg !13227
  br i1 %tobool71, label %cond.true72, label %cond.false73, !dbg !13227

cond.true72:                                      ; preds = %cond.false67
  br label %cond.end493, !dbg !13227

cond.false73:                                     ; preds = %cond.false67
  %45 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count74 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %45, i32 0, i32 5, !dbg !13227
  %46 = load i16, i16* %count74, align 4, !dbg !13227
  %conv75 = zext i16 %46 to i64, !dbg !13227
  %and76 = and i64 %conv75, 18014398509481984, !dbg !13227
  %tobool77 = icmp ne i64 %and76, 0, !dbg !13227
  br i1 %tobool77, label %cond.true78, label %cond.false79, !dbg !13227

cond.true78:                                      ; preds = %cond.false73
  br label %cond.end491, !dbg !13227

cond.false79:                                     ; preds = %cond.false73
  %47 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count80 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %47, i32 0, i32 5, !dbg !13227
  %48 = load i16, i16* %count80, align 4, !dbg !13227
  %conv81 = zext i16 %48 to i64, !dbg !13227
  %and82 = and i64 %conv81, 9007199254740992, !dbg !13227
  %tobool83 = icmp ne i64 %and82, 0, !dbg !13227
  br i1 %tobool83, label %cond.true84, label %cond.false85, !dbg !13227

cond.true84:                                      ; preds = %cond.false79
  br label %cond.end489, !dbg !13227

cond.false85:                                     ; preds = %cond.false79
  %49 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count86 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %49, i32 0, i32 5, !dbg !13227
  %50 = load i16, i16* %count86, align 4, !dbg !13227
  %conv87 = zext i16 %50 to i64, !dbg !13227
  %and88 = and i64 %conv87, 4503599627370496, !dbg !13227
  %tobool89 = icmp ne i64 %and88, 0, !dbg !13227
  br i1 %tobool89, label %cond.true90, label %cond.false91, !dbg !13227

cond.true90:                                      ; preds = %cond.false85
  br label %cond.end487, !dbg !13227

cond.false91:                                     ; preds = %cond.false85
  %51 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count92 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %51, i32 0, i32 5, !dbg !13227
  %52 = load i16, i16* %count92, align 4, !dbg !13227
  %conv93 = zext i16 %52 to i64, !dbg !13227
  %and94 = and i64 %conv93, 2251799813685248, !dbg !13227
  %tobool95 = icmp ne i64 %and94, 0, !dbg !13227
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !13227

cond.true96:                                      ; preds = %cond.false91
  br label %cond.end485, !dbg !13227

cond.false97:                                     ; preds = %cond.false91
  %53 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count98 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %53, i32 0, i32 5, !dbg !13227
  %54 = load i16, i16* %count98, align 4, !dbg !13227
  %conv99 = zext i16 %54 to i64, !dbg !13227
  %and100 = and i64 %conv99, 1125899906842624, !dbg !13227
  %tobool101 = icmp ne i64 %and100, 0, !dbg !13227
  br i1 %tobool101, label %cond.true102, label %cond.false103, !dbg !13227

cond.true102:                                     ; preds = %cond.false97
  br label %cond.end483, !dbg !13227

cond.false103:                                    ; preds = %cond.false97
  %55 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count104 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %55, i32 0, i32 5, !dbg !13227
  %56 = load i16, i16* %count104, align 4, !dbg !13227
  %conv105 = zext i16 %56 to i64, !dbg !13227
  %and106 = and i64 %conv105, 562949953421312, !dbg !13227
  %tobool107 = icmp ne i64 %and106, 0, !dbg !13227
  br i1 %tobool107, label %cond.true108, label %cond.false109, !dbg !13227

cond.true108:                                     ; preds = %cond.false103
  br label %cond.end481, !dbg !13227

cond.false109:                                    ; preds = %cond.false103
  %57 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count110 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %57, i32 0, i32 5, !dbg !13227
  %58 = load i16, i16* %count110, align 4, !dbg !13227
  %conv111 = zext i16 %58 to i64, !dbg !13227
  %and112 = and i64 %conv111, 281474976710656, !dbg !13227
  %tobool113 = icmp ne i64 %and112, 0, !dbg !13227
  br i1 %tobool113, label %cond.true114, label %cond.false115, !dbg !13227

cond.true114:                                     ; preds = %cond.false109
  br label %cond.end479, !dbg !13227

cond.false115:                                    ; preds = %cond.false109
  %59 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count116 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %59, i32 0, i32 5, !dbg !13227
  %60 = load i16, i16* %count116, align 4, !dbg !13227
  %conv117 = zext i16 %60 to i64, !dbg !13227
  %and118 = and i64 %conv117, 140737488355328, !dbg !13227
  %tobool119 = icmp ne i64 %and118, 0, !dbg !13227
  br i1 %tobool119, label %cond.true120, label %cond.false121, !dbg !13227

cond.true120:                                     ; preds = %cond.false115
  br label %cond.end477, !dbg !13227

cond.false121:                                    ; preds = %cond.false115
  %61 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count122 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %61, i32 0, i32 5, !dbg !13227
  %62 = load i16, i16* %count122, align 4, !dbg !13227
  %conv123 = zext i16 %62 to i64, !dbg !13227
  %and124 = and i64 %conv123, 70368744177664, !dbg !13227
  %tobool125 = icmp ne i64 %and124, 0, !dbg !13227
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !13227

cond.true126:                                     ; preds = %cond.false121
  br label %cond.end475, !dbg !13227

cond.false127:                                    ; preds = %cond.false121
  %63 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count128 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %63, i32 0, i32 5, !dbg !13227
  %64 = load i16, i16* %count128, align 4, !dbg !13227
  %conv129 = zext i16 %64 to i64, !dbg !13227
  %and130 = and i64 %conv129, 35184372088832, !dbg !13227
  %tobool131 = icmp ne i64 %and130, 0, !dbg !13227
  br i1 %tobool131, label %cond.true132, label %cond.false133, !dbg !13227

cond.true132:                                     ; preds = %cond.false127
  br label %cond.end473, !dbg !13227

cond.false133:                                    ; preds = %cond.false127
  %65 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count134 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %65, i32 0, i32 5, !dbg !13227
  %66 = load i16, i16* %count134, align 4, !dbg !13227
  %conv135 = zext i16 %66 to i64, !dbg !13227
  %and136 = and i64 %conv135, 17592186044416, !dbg !13227
  %tobool137 = icmp ne i64 %and136, 0, !dbg !13227
  br i1 %tobool137, label %cond.true138, label %cond.false139, !dbg !13227

cond.true138:                                     ; preds = %cond.false133
  br label %cond.end471, !dbg !13227

cond.false139:                                    ; preds = %cond.false133
  %67 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count140 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %67, i32 0, i32 5, !dbg !13227
  %68 = load i16, i16* %count140, align 4, !dbg !13227
  %conv141 = zext i16 %68 to i64, !dbg !13227
  %and142 = and i64 %conv141, 8796093022208, !dbg !13227
  %tobool143 = icmp ne i64 %and142, 0, !dbg !13227
  br i1 %tobool143, label %cond.true144, label %cond.false145, !dbg !13227

cond.true144:                                     ; preds = %cond.false139
  br label %cond.end469, !dbg !13227

cond.false145:                                    ; preds = %cond.false139
  %69 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count146 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %69, i32 0, i32 5, !dbg !13227
  %70 = load i16, i16* %count146, align 4, !dbg !13227
  %conv147 = zext i16 %70 to i64, !dbg !13227
  %and148 = and i64 %conv147, 4398046511104, !dbg !13227
  %tobool149 = icmp ne i64 %and148, 0, !dbg !13227
  br i1 %tobool149, label %cond.true150, label %cond.false151, !dbg !13227

cond.true150:                                     ; preds = %cond.false145
  br label %cond.end467, !dbg !13227

cond.false151:                                    ; preds = %cond.false145
  %71 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count152 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %71, i32 0, i32 5, !dbg !13227
  %72 = load i16, i16* %count152, align 4, !dbg !13227
  %conv153 = zext i16 %72 to i64, !dbg !13227
  %and154 = and i64 %conv153, 2199023255552, !dbg !13227
  %tobool155 = icmp ne i64 %and154, 0, !dbg !13227
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !13227

cond.true156:                                     ; preds = %cond.false151
  br label %cond.end465, !dbg !13227

cond.false157:                                    ; preds = %cond.false151
  %73 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count158 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %73, i32 0, i32 5, !dbg !13227
  %74 = load i16, i16* %count158, align 4, !dbg !13227
  %conv159 = zext i16 %74 to i64, !dbg !13227
  %and160 = and i64 %conv159, 1099511627776, !dbg !13227
  %tobool161 = icmp ne i64 %and160, 0, !dbg !13227
  br i1 %tobool161, label %cond.true162, label %cond.false163, !dbg !13227

cond.true162:                                     ; preds = %cond.false157
  br label %cond.end463, !dbg !13227

cond.false163:                                    ; preds = %cond.false157
  %75 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count164 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %75, i32 0, i32 5, !dbg !13227
  %76 = load i16, i16* %count164, align 4, !dbg !13227
  %conv165 = zext i16 %76 to i64, !dbg !13227
  %and166 = and i64 %conv165, 549755813888, !dbg !13227
  %tobool167 = icmp ne i64 %and166, 0, !dbg !13227
  br i1 %tobool167, label %cond.true168, label %cond.false169, !dbg !13227

cond.true168:                                     ; preds = %cond.false163
  br label %cond.end461, !dbg !13227

cond.false169:                                    ; preds = %cond.false163
  %77 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count170 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %77, i32 0, i32 5, !dbg !13227
  %78 = load i16, i16* %count170, align 4, !dbg !13227
  %conv171 = zext i16 %78 to i64, !dbg !13227
  %and172 = and i64 %conv171, 274877906944, !dbg !13227
  %tobool173 = icmp ne i64 %and172, 0, !dbg !13227
  br i1 %tobool173, label %cond.true174, label %cond.false175, !dbg !13227

cond.true174:                                     ; preds = %cond.false169
  br label %cond.end459, !dbg !13227

cond.false175:                                    ; preds = %cond.false169
  %79 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count176 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %79, i32 0, i32 5, !dbg !13227
  %80 = load i16, i16* %count176, align 4, !dbg !13227
  %conv177 = zext i16 %80 to i64, !dbg !13227
  %and178 = and i64 %conv177, 137438953472, !dbg !13227
  %tobool179 = icmp ne i64 %and178, 0, !dbg !13227
  br i1 %tobool179, label %cond.true180, label %cond.false181, !dbg !13227

cond.true180:                                     ; preds = %cond.false175
  br label %cond.end457, !dbg !13227

cond.false181:                                    ; preds = %cond.false175
  %81 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count182 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %81, i32 0, i32 5, !dbg !13227
  %82 = load i16, i16* %count182, align 4, !dbg !13227
  %conv183 = zext i16 %82 to i64, !dbg !13227
  %and184 = and i64 %conv183, 68719476736, !dbg !13227
  %tobool185 = icmp ne i64 %and184, 0, !dbg !13227
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !13227

cond.true186:                                     ; preds = %cond.false181
  br label %cond.end455, !dbg !13227

cond.false187:                                    ; preds = %cond.false181
  %83 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count188 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %83, i32 0, i32 5, !dbg !13227
  %84 = load i16, i16* %count188, align 4, !dbg !13227
  %conv189 = zext i16 %84 to i64, !dbg !13227
  %and190 = and i64 %conv189, 34359738368, !dbg !13227
  %tobool191 = icmp ne i64 %and190, 0, !dbg !13227
  br i1 %tobool191, label %cond.true192, label %cond.false193, !dbg !13227

cond.true192:                                     ; preds = %cond.false187
  br label %cond.end453, !dbg !13227

cond.false193:                                    ; preds = %cond.false187
  %85 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count194 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %85, i32 0, i32 5, !dbg !13227
  %86 = load i16, i16* %count194, align 4, !dbg !13227
  %conv195 = zext i16 %86 to i64, !dbg !13227
  %and196 = and i64 %conv195, 17179869184, !dbg !13227
  %tobool197 = icmp ne i64 %and196, 0, !dbg !13227
  br i1 %tobool197, label %cond.true198, label %cond.false199, !dbg !13227

cond.true198:                                     ; preds = %cond.false193
  br label %cond.end451, !dbg !13227

cond.false199:                                    ; preds = %cond.false193
  %87 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count200 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %87, i32 0, i32 5, !dbg !13227
  %88 = load i16, i16* %count200, align 4, !dbg !13227
  %conv201 = zext i16 %88 to i64, !dbg !13227
  %and202 = and i64 %conv201, 8589934592, !dbg !13227
  %tobool203 = icmp ne i64 %and202, 0, !dbg !13227
  br i1 %tobool203, label %cond.true204, label %cond.false205, !dbg !13227

cond.true204:                                     ; preds = %cond.false199
  br label %cond.end449, !dbg !13227

cond.false205:                                    ; preds = %cond.false199
  %89 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count206 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %89, i32 0, i32 5, !dbg !13227
  %90 = load i16, i16* %count206, align 4, !dbg !13227
  %conv207 = zext i16 %90 to i64, !dbg !13227
  %and208 = and i64 %conv207, 4294967296, !dbg !13227
  %tobool209 = icmp ne i64 %and208, 0, !dbg !13227
  br i1 %tobool209, label %cond.true210, label %cond.false211, !dbg !13227

cond.true210:                                     ; preds = %cond.false205
  br label %cond.end447, !dbg !13227

cond.false211:                                    ; preds = %cond.false205
  %91 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count212 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %91, i32 0, i32 5, !dbg !13227
  %92 = load i16, i16* %count212, align 4, !dbg !13227
  %conv213 = zext i16 %92 to i64, !dbg !13227
  %and214 = and i64 %conv213, 2147483648, !dbg !13227
  %tobool215 = icmp ne i64 %and214, 0, !dbg !13227
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !13227

cond.true216:                                     ; preds = %cond.false211
  br label %cond.end445, !dbg !13227

cond.false217:                                    ; preds = %cond.false211
  %93 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count218 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %93, i32 0, i32 5, !dbg !13227
  %94 = load i16, i16* %count218, align 4, !dbg !13227
  %conv219 = zext i16 %94 to i64, !dbg !13227
  %and220 = and i64 %conv219, 1073741824, !dbg !13227
  %tobool221 = icmp ne i64 %and220, 0, !dbg !13227
  br i1 %tobool221, label %cond.true222, label %cond.false223, !dbg !13227

cond.true222:                                     ; preds = %cond.false217
  br label %cond.end443, !dbg !13227

cond.false223:                                    ; preds = %cond.false217
  %95 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count224 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %95, i32 0, i32 5, !dbg !13227
  %96 = load i16, i16* %count224, align 4, !dbg !13227
  %conv225 = zext i16 %96 to i64, !dbg !13227
  %and226 = and i64 %conv225, 536870912, !dbg !13227
  %tobool227 = icmp ne i64 %and226, 0, !dbg !13227
  br i1 %tobool227, label %cond.true228, label %cond.false229, !dbg !13227

cond.true228:                                     ; preds = %cond.false223
  br label %cond.end441, !dbg !13227

cond.false229:                                    ; preds = %cond.false223
  %97 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count230 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %97, i32 0, i32 5, !dbg !13227
  %98 = load i16, i16* %count230, align 4, !dbg !13227
  %conv231 = zext i16 %98 to i64, !dbg !13227
  %and232 = and i64 %conv231, 268435456, !dbg !13227
  %tobool233 = icmp ne i64 %and232, 0, !dbg !13227
  br i1 %tobool233, label %cond.true234, label %cond.false235, !dbg !13227

cond.true234:                                     ; preds = %cond.false229
  br label %cond.end439, !dbg !13227

cond.false235:                                    ; preds = %cond.false229
  %99 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count236 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %99, i32 0, i32 5, !dbg !13227
  %100 = load i16, i16* %count236, align 4, !dbg !13227
  %conv237 = zext i16 %100 to i64, !dbg !13227
  %and238 = and i64 %conv237, 134217728, !dbg !13227
  %tobool239 = icmp ne i64 %and238, 0, !dbg !13227
  br i1 %tobool239, label %cond.true240, label %cond.false241, !dbg !13227

cond.true240:                                     ; preds = %cond.false235
  br label %cond.end437, !dbg !13227

cond.false241:                                    ; preds = %cond.false235
  %101 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count242 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %101, i32 0, i32 5, !dbg !13227
  %102 = load i16, i16* %count242, align 4, !dbg !13227
  %conv243 = zext i16 %102 to i64, !dbg !13227
  %and244 = and i64 %conv243, 67108864, !dbg !13227
  %tobool245 = icmp ne i64 %and244, 0, !dbg !13227
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !13227

cond.true246:                                     ; preds = %cond.false241
  br label %cond.end435, !dbg !13227

cond.false247:                                    ; preds = %cond.false241
  %103 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count248 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %103, i32 0, i32 5, !dbg !13227
  %104 = load i16, i16* %count248, align 4, !dbg !13227
  %conv249 = zext i16 %104 to i64, !dbg !13227
  %and250 = and i64 %conv249, 33554432, !dbg !13227
  %tobool251 = icmp ne i64 %and250, 0, !dbg !13227
  br i1 %tobool251, label %cond.true252, label %cond.false253, !dbg !13227

cond.true252:                                     ; preds = %cond.false247
  br label %cond.end433, !dbg !13227

cond.false253:                                    ; preds = %cond.false247
  %105 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count254 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %105, i32 0, i32 5, !dbg !13227
  %106 = load i16, i16* %count254, align 4, !dbg !13227
  %conv255 = zext i16 %106 to i64, !dbg !13227
  %and256 = and i64 %conv255, 16777216, !dbg !13227
  %tobool257 = icmp ne i64 %and256, 0, !dbg !13227
  br i1 %tobool257, label %cond.true258, label %cond.false259, !dbg !13227

cond.true258:                                     ; preds = %cond.false253
  br label %cond.end431, !dbg !13227

cond.false259:                                    ; preds = %cond.false253
  %107 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count260 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %107, i32 0, i32 5, !dbg !13227
  %108 = load i16, i16* %count260, align 4, !dbg !13227
  %conv261 = zext i16 %108 to i64, !dbg !13227
  %and262 = and i64 %conv261, 8388608, !dbg !13227
  %tobool263 = icmp ne i64 %and262, 0, !dbg !13227
  br i1 %tobool263, label %cond.true264, label %cond.false265, !dbg !13227

cond.true264:                                     ; preds = %cond.false259
  br label %cond.end429, !dbg !13227

cond.false265:                                    ; preds = %cond.false259
  %109 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count266 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %109, i32 0, i32 5, !dbg !13227
  %110 = load i16, i16* %count266, align 4, !dbg !13227
  %conv267 = zext i16 %110 to i64, !dbg !13227
  %and268 = and i64 %conv267, 4194304, !dbg !13227
  %tobool269 = icmp ne i64 %and268, 0, !dbg !13227
  br i1 %tobool269, label %cond.true270, label %cond.false271, !dbg !13227

cond.true270:                                     ; preds = %cond.false265
  br label %cond.end427, !dbg !13227

cond.false271:                                    ; preds = %cond.false265
  %111 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count272 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %111, i32 0, i32 5, !dbg !13227
  %112 = load i16, i16* %count272, align 4, !dbg !13227
  %conv273 = zext i16 %112 to i64, !dbg !13227
  %and274 = and i64 %conv273, 2097152, !dbg !13227
  %tobool275 = icmp ne i64 %and274, 0, !dbg !13227
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !13227

cond.true276:                                     ; preds = %cond.false271
  br label %cond.end425, !dbg !13227

cond.false277:                                    ; preds = %cond.false271
  %113 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count278 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %113, i32 0, i32 5, !dbg !13227
  %114 = load i16, i16* %count278, align 4, !dbg !13227
  %conv279 = zext i16 %114 to i64, !dbg !13227
  %and280 = and i64 %conv279, 1048576, !dbg !13227
  %tobool281 = icmp ne i64 %and280, 0, !dbg !13227
  br i1 %tobool281, label %cond.true282, label %cond.false283, !dbg !13227

cond.true282:                                     ; preds = %cond.false277
  br label %cond.end423, !dbg !13227

cond.false283:                                    ; preds = %cond.false277
  %115 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count284 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %115, i32 0, i32 5, !dbg !13227
  %116 = load i16, i16* %count284, align 4, !dbg !13227
  %conv285 = zext i16 %116 to i64, !dbg !13227
  %and286 = and i64 %conv285, 524288, !dbg !13227
  %tobool287 = icmp ne i64 %and286, 0, !dbg !13227
  br i1 %tobool287, label %cond.true288, label %cond.false289, !dbg !13227

cond.true288:                                     ; preds = %cond.false283
  br label %cond.end421, !dbg !13227

cond.false289:                                    ; preds = %cond.false283
  %117 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count290 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %117, i32 0, i32 5, !dbg !13227
  %118 = load i16, i16* %count290, align 4, !dbg !13227
  %conv291 = zext i16 %118 to i64, !dbg !13227
  %and292 = and i64 %conv291, 262144, !dbg !13227
  %tobool293 = icmp ne i64 %and292, 0, !dbg !13227
  br i1 %tobool293, label %cond.true294, label %cond.false295, !dbg !13227

cond.true294:                                     ; preds = %cond.false289
  br label %cond.end419, !dbg !13227

cond.false295:                                    ; preds = %cond.false289
  %119 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count296 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %119, i32 0, i32 5, !dbg !13227
  %120 = load i16, i16* %count296, align 4, !dbg !13227
  %conv297 = zext i16 %120 to i64, !dbg !13227
  %and298 = and i64 %conv297, 131072, !dbg !13227
  %tobool299 = icmp ne i64 %and298, 0, !dbg !13227
  br i1 %tobool299, label %cond.true300, label %cond.false301, !dbg !13227

cond.true300:                                     ; preds = %cond.false295
  br label %cond.end417, !dbg !13227

cond.false301:                                    ; preds = %cond.false295
  %121 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count302 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %121, i32 0, i32 5, !dbg !13227
  %122 = load i16, i16* %count302, align 4, !dbg !13227
  %conv303 = zext i16 %122 to i64, !dbg !13227
  %and304 = and i64 %conv303, 65536, !dbg !13227
  %tobool305 = icmp ne i64 %and304, 0, !dbg !13227
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !13227

cond.true306:                                     ; preds = %cond.false301
  br label %cond.end415, !dbg !13227

cond.false307:                                    ; preds = %cond.false301
  %123 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count308 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %123, i32 0, i32 5, !dbg !13227
  %124 = load i16, i16* %count308, align 4, !dbg !13227
  %conv309 = zext i16 %124 to i64, !dbg !13227
  %and310 = and i64 %conv309, 32768, !dbg !13227
  %tobool311 = icmp ne i64 %and310, 0, !dbg !13227
  br i1 %tobool311, label %cond.true312, label %cond.false313, !dbg !13227

cond.true312:                                     ; preds = %cond.false307
  br label %cond.end413, !dbg !13227

cond.false313:                                    ; preds = %cond.false307
  %125 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count314 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %125, i32 0, i32 5, !dbg !13227
  %126 = load i16, i16* %count314, align 4, !dbg !13227
  %conv315 = zext i16 %126 to i64, !dbg !13227
  %and316 = and i64 %conv315, 16384, !dbg !13227
  %tobool317 = icmp ne i64 %and316, 0, !dbg !13227
  br i1 %tobool317, label %cond.true318, label %cond.false319, !dbg !13227

cond.true318:                                     ; preds = %cond.false313
  br label %cond.end411, !dbg !13227

cond.false319:                                    ; preds = %cond.false313
  %127 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count320 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %127, i32 0, i32 5, !dbg !13227
  %128 = load i16, i16* %count320, align 4, !dbg !13227
  %conv321 = zext i16 %128 to i64, !dbg !13227
  %and322 = and i64 %conv321, 8192, !dbg !13227
  %tobool323 = icmp ne i64 %and322, 0, !dbg !13227
  br i1 %tobool323, label %cond.true324, label %cond.false325, !dbg !13227

cond.true324:                                     ; preds = %cond.false319
  br label %cond.end409, !dbg !13227

cond.false325:                                    ; preds = %cond.false319
  %129 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count326 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %129, i32 0, i32 5, !dbg !13227
  %130 = load i16, i16* %count326, align 4, !dbg !13227
  %conv327 = zext i16 %130 to i64, !dbg !13227
  %and328 = and i64 %conv327, 4096, !dbg !13227
  %tobool329 = icmp ne i64 %and328, 0, !dbg !13227
  br i1 %tobool329, label %cond.true330, label %cond.false331, !dbg !13227

cond.true330:                                     ; preds = %cond.false325
  br label %cond.end407, !dbg !13227

cond.false331:                                    ; preds = %cond.false325
  %131 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count332 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %131, i32 0, i32 5, !dbg !13227
  %132 = load i16, i16* %count332, align 4, !dbg !13227
  %conv333 = zext i16 %132 to i64, !dbg !13227
  %and334 = and i64 %conv333, 2048, !dbg !13227
  %tobool335 = icmp ne i64 %and334, 0, !dbg !13227
  br i1 %tobool335, label %cond.true336, label %cond.false337, !dbg !13227

cond.true336:                                     ; preds = %cond.false331
  br label %cond.end405, !dbg !13227

cond.false337:                                    ; preds = %cond.false331
  %133 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count338 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %133, i32 0, i32 5, !dbg !13227
  %134 = load i16, i16* %count338, align 4, !dbg !13227
  %conv339 = zext i16 %134 to i64, !dbg !13227
  %and340 = and i64 %conv339, 1024, !dbg !13227
  %tobool341 = icmp ne i64 %and340, 0, !dbg !13227
  br i1 %tobool341, label %cond.true342, label %cond.false343, !dbg !13227

cond.true342:                                     ; preds = %cond.false337
  br label %cond.end403, !dbg !13227

cond.false343:                                    ; preds = %cond.false337
  %135 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count344 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %135, i32 0, i32 5, !dbg !13227
  %136 = load i16, i16* %count344, align 4, !dbg !13227
  %conv345 = zext i16 %136 to i64, !dbg !13227
  %and346 = and i64 %conv345, 512, !dbg !13227
  %tobool347 = icmp ne i64 %and346, 0, !dbg !13227
  br i1 %tobool347, label %cond.true348, label %cond.false349, !dbg !13227

cond.true348:                                     ; preds = %cond.false343
  br label %cond.end401, !dbg !13227

cond.false349:                                    ; preds = %cond.false343
  %137 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count350 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %137, i32 0, i32 5, !dbg !13227
  %138 = load i16, i16* %count350, align 4, !dbg !13227
  %conv351 = zext i16 %138 to i64, !dbg !13227
  %and352 = and i64 %conv351, 256, !dbg !13227
  %tobool353 = icmp ne i64 %and352, 0, !dbg !13227
  br i1 %tobool353, label %cond.true354, label %cond.false355, !dbg !13227

cond.true354:                                     ; preds = %cond.false349
  br label %cond.end399, !dbg !13227

cond.false355:                                    ; preds = %cond.false349
  %139 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count356 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %139, i32 0, i32 5, !dbg !13227
  %140 = load i16, i16* %count356, align 4, !dbg !13227
  %conv357 = zext i16 %140 to i64, !dbg !13227
  %and358 = and i64 %conv357, 128, !dbg !13227
  %tobool359 = icmp ne i64 %and358, 0, !dbg !13227
  br i1 %tobool359, label %cond.true360, label %cond.false361, !dbg !13227

cond.true360:                                     ; preds = %cond.false355
  br label %cond.end397, !dbg !13227

cond.false361:                                    ; preds = %cond.false355
  %141 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count362 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %141, i32 0, i32 5, !dbg !13227
  %142 = load i16, i16* %count362, align 4, !dbg !13227
  %conv363 = zext i16 %142 to i64, !dbg !13227
  %and364 = and i64 %conv363, 64, !dbg !13227
  %tobool365 = icmp ne i64 %and364, 0, !dbg !13227
  br i1 %tobool365, label %cond.true366, label %cond.false367, !dbg !13227

cond.true366:                                     ; preds = %cond.false361
  br label %cond.end395, !dbg !13227

cond.false367:                                    ; preds = %cond.false361
  %143 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count368 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %143, i32 0, i32 5, !dbg !13227
  %144 = load i16, i16* %count368, align 4, !dbg !13227
  %conv369 = zext i16 %144 to i64, !dbg !13227
  %and370 = and i64 %conv369, 32, !dbg !13227
  %tobool371 = icmp ne i64 %and370, 0, !dbg !13227
  br i1 %tobool371, label %cond.true372, label %cond.false373, !dbg !13227

cond.true372:                                     ; preds = %cond.false367
  br label %cond.end393, !dbg !13227

cond.false373:                                    ; preds = %cond.false367
  %145 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count374 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %145, i32 0, i32 5, !dbg !13227
  %146 = load i16, i16* %count374, align 4, !dbg !13227
  %conv375 = zext i16 %146 to i64, !dbg !13227
  %and376 = and i64 %conv375, 16, !dbg !13227
  %tobool377 = icmp ne i64 %and376, 0, !dbg !13227
  br i1 %tobool377, label %cond.true378, label %cond.false379, !dbg !13227

cond.true378:                                     ; preds = %cond.false373
  br label %cond.end391, !dbg !13227

cond.false379:                                    ; preds = %cond.false373
  %147 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count380 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %147, i32 0, i32 5, !dbg !13227
  %148 = load i16, i16* %count380, align 4, !dbg !13227
  %conv381 = zext i16 %148 to i64, !dbg !13227
  %and382 = and i64 %conv381, 8, !dbg !13227
  %tobool383 = icmp ne i64 %and382, 0, !dbg !13227
  br i1 %tobool383, label %cond.true384, label %cond.false385, !dbg !13227

cond.true384:                                     ; preds = %cond.false379
  br label %cond.end, !dbg !13227

cond.false385:                                    ; preds = %cond.false379
  %149 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count386 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %149, i32 0, i32 5, !dbg !13227
  %150 = load i16, i16* %count386, align 4, !dbg !13227
  %conv387 = zext i16 %150 to i64, !dbg !13227
  %and388 = and i64 %conv387, 4, !dbg !13227
  %tobool389 = icmp ne i64 %and388, 0, !dbg !13227
  %151 = zext i1 %tobool389 to i64, !dbg !13227
  %cond = select i1 %tobool389, i32 2, i32 1, !dbg !13227
  br label %cond.end, !dbg !13227

cond.end:                                         ; preds = %cond.false385, %cond.true384
  %cond390 = phi i32 [ 3, %cond.true384 ], [ %cond, %cond.false385 ], !dbg !13227
  br label %cond.end391, !dbg !13227

cond.end391:                                      ; preds = %cond.end, %cond.true378
  %cond392 = phi i32 [ 4, %cond.true378 ], [ %cond390, %cond.end ], !dbg !13227
  br label %cond.end393, !dbg !13227

cond.end393:                                      ; preds = %cond.end391, %cond.true372
  %cond394 = phi i32 [ 5, %cond.true372 ], [ %cond392, %cond.end391 ], !dbg !13227
  br label %cond.end395, !dbg !13227

cond.end395:                                      ; preds = %cond.end393, %cond.true366
  %cond396 = phi i32 [ 6, %cond.true366 ], [ %cond394, %cond.end393 ], !dbg !13227
  br label %cond.end397, !dbg !13227

cond.end397:                                      ; preds = %cond.end395, %cond.true360
  %cond398 = phi i32 [ 7, %cond.true360 ], [ %cond396, %cond.end395 ], !dbg !13227
  br label %cond.end399, !dbg !13227

cond.end399:                                      ; preds = %cond.end397, %cond.true354
  %cond400 = phi i32 [ 8, %cond.true354 ], [ %cond398, %cond.end397 ], !dbg !13227
  br label %cond.end401, !dbg !13227

cond.end401:                                      ; preds = %cond.end399, %cond.true348
  %cond402 = phi i32 [ 9, %cond.true348 ], [ %cond400, %cond.end399 ], !dbg !13227
  br label %cond.end403, !dbg !13227

cond.end403:                                      ; preds = %cond.end401, %cond.true342
  %cond404 = phi i32 [ 10, %cond.true342 ], [ %cond402, %cond.end401 ], !dbg !13227
  br label %cond.end405, !dbg !13227

cond.end405:                                      ; preds = %cond.end403, %cond.true336
  %cond406 = phi i32 [ 11, %cond.true336 ], [ %cond404, %cond.end403 ], !dbg !13227
  br label %cond.end407, !dbg !13227

cond.end407:                                      ; preds = %cond.end405, %cond.true330
  %cond408 = phi i32 [ 12, %cond.true330 ], [ %cond406, %cond.end405 ], !dbg !13227
  br label %cond.end409, !dbg !13227

cond.end409:                                      ; preds = %cond.end407, %cond.true324
  %cond410 = phi i32 [ 13, %cond.true324 ], [ %cond408, %cond.end407 ], !dbg !13227
  br label %cond.end411, !dbg !13227

cond.end411:                                      ; preds = %cond.end409, %cond.true318
  %cond412 = phi i32 [ 14, %cond.true318 ], [ %cond410, %cond.end409 ], !dbg !13227
  br label %cond.end413, !dbg !13227

cond.end413:                                      ; preds = %cond.end411, %cond.true312
  %cond414 = phi i32 [ 15, %cond.true312 ], [ %cond412, %cond.end411 ], !dbg !13227
  br label %cond.end415, !dbg !13227

cond.end415:                                      ; preds = %cond.end413, %cond.true306
  %cond416 = phi i32 [ 16, %cond.true306 ], [ %cond414, %cond.end413 ], !dbg !13227
  br label %cond.end417, !dbg !13227

cond.end417:                                      ; preds = %cond.end415, %cond.true300
  %cond418 = phi i32 [ 17, %cond.true300 ], [ %cond416, %cond.end415 ], !dbg !13227
  br label %cond.end419, !dbg !13227

cond.end419:                                      ; preds = %cond.end417, %cond.true294
  %cond420 = phi i32 [ 18, %cond.true294 ], [ %cond418, %cond.end417 ], !dbg !13227
  br label %cond.end421, !dbg !13227

cond.end421:                                      ; preds = %cond.end419, %cond.true288
  %cond422 = phi i32 [ 19, %cond.true288 ], [ %cond420, %cond.end419 ], !dbg !13227
  br label %cond.end423, !dbg !13227

cond.end423:                                      ; preds = %cond.end421, %cond.true282
  %cond424 = phi i32 [ 20, %cond.true282 ], [ %cond422, %cond.end421 ], !dbg !13227
  br label %cond.end425, !dbg !13227

cond.end425:                                      ; preds = %cond.end423, %cond.true276
  %cond426 = phi i32 [ 21, %cond.true276 ], [ %cond424, %cond.end423 ], !dbg !13227
  br label %cond.end427, !dbg !13227

cond.end427:                                      ; preds = %cond.end425, %cond.true270
  %cond428 = phi i32 [ 22, %cond.true270 ], [ %cond426, %cond.end425 ], !dbg !13227
  br label %cond.end429, !dbg !13227

cond.end429:                                      ; preds = %cond.end427, %cond.true264
  %cond430 = phi i32 [ 23, %cond.true264 ], [ %cond428, %cond.end427 ], !dbg !13227
  br label %cond.end431, !dbg !13227

cond.end431:                                      ; preds = %cond.end429, %cond.true258
  %cond432 = phi i32 [ 24, %cond.true258 ], [ %cond430, %cond.end429 ], !dbg !13227
  br label %cond.end433, !dbg !13227

cond.end433:                                      ; preds = %cond.end431, %cond.true252
  %cond434 = phi i32 [ 25, %cond.true252 ], [ %cond432, %cond.end431 ], !dbg !13227
  br label %cond.end435, !dbg !13227

cond.end435:                                      ; preds = %cond.end433, %cond.true246
  %cond436 = phi i32 [ 26, %cond.true246 ], [ %cond434, %cond.end433 ], !dbg !13227
  br label %cond.end437, !dbg !13227

cond.end437:                                      ; preds = %cond.end435, %cond.true240
  %cond438 = phi i32 [ 27, %cond.true240 ], [ %cond436, %cond.end435 ], !dbg !13227
  br label %cond.end439, !dbg !13227

cond.end439:                                      ; preds = %cond.end437, %cond.true234
  %cond440 = phi i32 [ 28, %cond.true234 ], [ %cond438, %cond.end437 ], !dbg !13227
  br label %cond.end441, !dbg !13227

cond.end441:                                      ; preds = %cond.end439, %cond.true228
  %cond442 = phi i32 [ 29, %cond.true228 ], [ %cond440, %cond.end439 ], !dbg !13227
  br label %cond.end443, !dbg !13227

cond.end443:                                      ; preds = %cond.end441, %cond.true222
  %cond444 = phi i32 [ 30, %cond.true222 ], [ %cond442, %cond.end441 ], !dbg !13227
  br label %cond.end445, !dbg !13227

cond.end445:                                      ; preds = %cond.end443, %cond.true216
  %cond446 = phi i32 [ 31, %cond.true216 ], [ %cond444, %cond.end443 ], !dbg !13227
  br label %cond.end447, !dbg !13227

cond.end447:                                      ; preds = %cond.end445, %cond.true210
  %cond448 = phi i32 [ 32, %cond.true210 ], [ %cond446, %cond.end445 ], !dbg !13227
  br label %cond.end449, !dbg !13227

cond.end449:                                      ; preds = %cond.end447, %cond.true204
  %cond450 = phi i32 [ 33, %cond.true204 ], [ %cond448, %cond.end447 ], !dbg !13227
  br label %cond.end451, !dbg !13227

cond.end451:                                      ; preds = %cond.end449, %cond.true198
  %cond452 = phi i32 [ 34, %cond.true198 ], [ %cond450, %cond.end449 ], !dbg !13227
  br label %cond.end453, !dbg !13227

cond.end453:                                      ; preds = %cond.end451, %cond.true192
  %cond454 = phi i32 [ 35, %cond.true192 ], [ %cond452, %cond.end451 ], !dbg !13227
  br label %cond.end455, !dbg !13227

cond.end455:                                      ; preds = %cond.end453, %cond.true186
  %cond456 = phi i32 [ 36, %cond.true186 ], [ %cond454, %cond.end453 ], !dbg !13227
  br label %cond.end457, !dbg !13227

cond.end457:                                      ; preds = %cond.end455, %cond.true180
  %cond458 = phi i32 [ 37, %cond.true180 ], [ %cond456, %cond.end455 ], !dbg !13227
  br label %cond.end459, !dbg !13227

cond.end459:                                      ; preds = %cond.end457, %cond.true174
  %cond460 = phi i32 [ 38, %cond.true174 ], [ %cond458, %cond.end457 ], !dbg !13227
  br label %cond.end461, !dbg !13227

cond.end461:                                      ; preds = %cond.end459, %cond.true168
  %cond462 = phi i32 [ 39, %cond.true168 ], [ %cond460, %cond.end459 ], !dbg !13227
  br label %cond.end463, !dbg !13227

cond.end463:                                      ; preds = %cond.end461, %cond.true162
  %cond464 = phi i32 [ 40, %cond.true162 ], [ %cond462, %cond.end461 ], !dbg !13227
  br label %cond.end465, !dbg !13227

cond.end465:                                      ; preds = %cond.end463, %cond.true156
  %cond466 = phi i32 [ 41, %cond.true156 ], [ %cond464, %cond.end463 ], !dbg !13227
  br label %cond.end467, !dbg !13227

cond.end467:                                      ; preds = %cond.end465, %cond.true150
  %cond468 = phi i32 [ 42, %cond.true150 ], [ %cond466, %cond.end465 ], !dbg !13227
  br label %cond.end469, !dbg !13227

cond.end469:                                      ; preds = %cond.end467, %cond.true144
  %cond470 = phi i32 [ 43, %cond.true144 ], [ %cond468, %cond.end467 ], !dbg !13227
  br label %cond.end471, !dbg !13227

cond.end471:                                      ; preds = %cond.end469, %cond.true138
  %cond472 = phi i32 [ 44, %cond.true138 ], [ %cond470, %cond.end469 ], !dbg !13227
  br label %cond.end473, !dbg !13227

cond.end473:                                      ; preds = %cond.end471, %cond.true132
  %cond474 = phi i32 [ 45, %cond.true132 ], [ %cond472, %cond.end471 ], !dbg !13227
  br label %cond.end475, !dbg !13227

cond.end475:                                      ; preds = %cond.end473, %cond.true126
  %cond476 = phi i32 [ 46, %cond.true126 ], [ %cond474, %cond.end473 ], !dbg !13227
  br label %cond.end477, !dbg !13227

cond.end477:                                      ; preds = %cond.end475, %cond.true120
  %cond478 = phi i32 [ 47, %cond.true120 ], [ %cond476, %cond.end475 ], !dbg !13227
  br label %cond.end479, !dbg !13227

cond.end479:                                      ; preds = %cond.end477, %cond.true114
  %cond480 = phi i32 [ 48, %cond.true114 ], [ %cond478, %cond.end477 ], !dbg !13227
  br label %cond.end481, !dbg !13227

cond.end481:                                      ; preds = %cond.end479, %cond.true108
  %cond482 = phi i32 [ 49, %cond.true108 ], [ %cond480, %cond.end479 ], !dbg !13227
  br label %cond.end483, !dbg !13227

cond.end483:                                      ; preds = %cond.end481, %cond.true102
  %cond484 = phi i32 [ 50, %cond.true102 ], [ %cond482, %cond.end481 ], !dbg !13227
  br label %cond.end485, !dbg !13227

cond.end485:                                      ; preds = %cond.end483, %cond.true96
  %cond486 = phi i32 [ 51, %cond.true96 ], [ %cond484, %cond.end483 ], !dbg !13227
  br label %cond.end487, !dbg !13227

cond.end487:                                      ; preds = %cond.end485, %cond.true90
  %cond488 = phi i32 [ 52, %cond.true90 ], [ %cond486, %cond.end485 ], !dbg !13227
  br label %cond.end489, !dbg !13227

cond.end489:                                      ; preds = %cond.end487, %cond.true84
  %cond490 = phi i32 [ 53, %cond.true84 ], [ %cond488, %cond.end487 ], !dbg !13227
  br label %cond.end491, !dbg !13227

cond.end491:                                      ; preds = %cond.end489, %cond.true78
  %cond492 = phi i32 [ 54, %cond.true78 ], [ %cond490, %cond.end489 ], !dbg !13227
  br label %cond.end493, !dbg !13227

cond.end493:                                      ; preds = %cond.end491, %cond.true72
  %cond494 = phi i32 [ 55, %cond.true72 ], [ %cond492, %cond.end491 ], !dbg !13227
  br label %cond.end495, !dbg !13227

cond.end495:                                      ; preds = %cond.end493, %cond.true66
  %cond496 = phi i32 [ 56, %cond.true66 ], [ %cond494, %cond.end493 ], !dbg !13227
  br label %cond.end497, !dbg !13227

cond.end497:                                      ; preds = %cond.end495, %cond.true60
  %cond498 = phi i32 [ 57, %cond.true60 ], [ %cond496, %cond.end495 ], !dbg !13227
  br label %cond.end499, !dbg !13227

cond.end499:                                      ; preds = %cond.end497, %cond.true54
  %cond500 = phi i32 [ 58, %cond.true54 ], [ %cond498, %cond.end497 ], !dbg !13227
  br label %cond.end501, !dbg !13227

cond.end501:                                      ; preds = %cond.end499, %cond.true48
  %cond502 = phi i32 [ 59, %cond.true48 ], [ %cond500, %cond.end499 ], !dbg !13227
  br label %cond.end503, !dbg !13227

cond.end503:                                      ; preds = %cond.end501, %cond.true42
  %cond504 = phi i32 [ 60, %cond.true42 ], [ %cond502, %cond.end501 ], !dbg !13227
  br label %cond.end505, !dbg !13227

cond.end505:                                      ; preds = %cond.end503, %cond.true36
  %cond506 = phi i32 [ 61, %cond.true36 ], [ %cond504, %cond.end503 ], !dbg !13227
  br label %cond.end507, !dbg !13227

cond.end507:                                      ; preds = %cond.end505, %cond.true30
  %cond508 = phi i32 [ 62, %cond.true30 ], [ %cond506, %cond.end505 ], !dbg !13227
  br label %cond.end509, !dbg !13227

cond.end509:                                      ; preds = %cond.end507, %cond.true24
  %cond510 = phi i32 [ 63, %cond.true24 ], [ %cond508, %cond.end507 ], !dbg !13227
  br label %cond.end511, !dbg !13227

cond.end511:                                      ; preds = %cond.end509, %cond.true21
  %cond512 = phi i32 [ 0, %cond.true21 ], [ %cond510, %cond.end509 ], !dbg !13227
  br label %cond.end514, !dbg !13227

cond.false513:                                    ; preds = %cond.true
  br label %cond.end514, !dbg !13227

cond.end514:                                      ; preds = %cond.false513, %cond.end511
  %cond515 = phi i32 [ %cond512, %cond.end511 ], [ -1, %cond.false513 ], !dbg !13227
  br label %cond.end520, !dbg !13227

cond.false516:                                    ; preds = %if.end13
  %152 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13227
  %count517 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %152, i32 0, i32 5, !dbg !13227
  %153 = load i16, i16* %count517, align 4, !dbg !13227
  %conv518 = zext i16 %153 to i32, !dbg !13227
  %call519 = call i32 @__ilog2_u32(i32 %conv518) #13, !dbg !13227
  br label %cond.end520, !dbg !13227

cond.end520:                                      ; preds = %cond.false516, %cond.end514
  %cond521 = phi i32 [ %cond515, %cond.end514 ], [ %call519, %cond.false516 ], !dbg !13227
  call void @mlxsw_cmd_mbox_sw2hw_cq_log_cq_size_set(i8* %18, i32 %cond521) #10, !dbg !13228
  store i32 0, i32* %i, align 4, !dbg !13229
  br label %for.cond522, !dbg !13231

for.cond522:                                      ; preds = %for.inc528, %cond.end520
  %154 = load i32, i32* %i, align 4, !dbg !13232
  %cmp523 = icmp slt i32 %154, 8, !dbg !13234
  br i1 %cmp523, label %for.body525, label %for.end530, !dbg !13235

for.body525:                                      ; preds = %for.cond522
  call void @llvm.dbg.declare(metadata i64* %mapaddr, metadata !13236, metadata !DIExpression()), !dbg !13238
  %155 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13239
  %156 = load i32, i32* %i, align 4, !dbg !13240
  %call526 = call i64 @__mlxsw_pci_queue_page_get(%struct.mlxsw_pci_queue* %155, i32 %156) #10, !dbg !13241
  store i64 %call526, i64* %mapaddr, align 8, !dbg !13238
  %157 = load i8*, i8** %mbox.addr, align 8, !dbg !13242
  %158 = load i32, i32* %i, align 4, !dbg !13243
  %conv527 = trunc i32 %158 to i16, !dbg !13243
  %159 = load i64, i64* %mapaddr, align 8, !dbg !13244
  call void @mlxsw_cmd_mbox_sw2hw_cq_pa_set(i8* %157, i16 zeroext %conv527, i64 %159) #10, !dbg !13245
  br label %for.inc528, !dbg !13246

for.inc528:                                       ; preds = %for.body525
  %160 = load i32, i32* %i, align 4, !dbg !13247
  %inc529 = add i32 %160, 1, !dbg !13247
  store i32 %inc529, i32* %i, align 4, !dbg !13247
  br label %for.cond522, !dbg !13248, !llvm.loop !13249

for.end530:                                       ; preds = %for.cond522
  %161 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !13251
  %core = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %161, i32 0, i32 5, !dbg !13252
  %162 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !13252
  %163 = load i8*, i8** %mbox.addr, align 8, !dbg !13253
  %164 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13254
  %num = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %164, i32 0, i32 6, !dbg !13255
  %165 = load i8, i8* %num, align 2, !dbg !13255
  %conv531 = zext i8 %165 to i32, !dbg !13254
  %call532 = call i32 @mlxsw_cmd_sw2hw_cq(%struct.mlxsw_core* %162, i8* %163, i32 %conv531) #10, !dbg !13256
  store i32 %call532, i32* %err, align 4, !dbg !13257
  %166 = load i32, i32* %err, align 4, !dbg !13258
  %tobool533 = icmp ne i32 %166, 0, !dbg !13258
  br i1 %tobool533, label %if.then534, label %if.end535, !dbg !13260

if.then534:                                       ; preds = %for.end530
  %167 = load i32, i32* %err, align 4, !dbg !13261
  store i32 %167, i32* %retval, align 4, !dbg !13262
  br label %return, !dbg !13262

if.end535:                                        ; preds = %for.end530
  %168 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !13263
  %169 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13264
  call void @mlxsw_pci_queue_doorbell_consumer_ring(%struct.mlxsw_pci* %168, %struct.mlxsw_pci_queue* %169) #10, !dbg !13265
  %170 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !13266
  %171 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13267
  call void @mlxsw_pci_queue_doorbell_arm_consumer_ring(%struct.mlxsw_pci* %170, %struct.mlxsw_pci_queue* %171) #10, !dbg !13268
  store i32 0, i32* %retval, align 4, !dbg !13269
  br label %return, !dbg !13269

return:                                           ; preds = %if.end535, %if.then534
  %172 = load i32, i32* %retval, align 4, !dbg !13270
  ret i32 %172, !dbg !13270
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_cq_fini(%struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci_queue* %q) #0 !dbg !13271 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %q.addr = alloca %struct.mlxsw_pci_queue*, align 8
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !13272, metadata !DIExpression()), !dbg !13273
  store %struct.mlxsw_pci_queue* %q, %struct.mlxsw_pci_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q.addr, metadata !13274, metadata !DIExpression()), !dbg !13275
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !13276
  %core = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %0, i32 0, i32 5, !dbg !13277
  %1 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !13277
  %2 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13278
  %num = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %2, i32 0, i32 6, !dbg !13279
  %3 = load i8, i8* %num, align 2, !dbg !13279
  %conv = zext i8 %3 to i32, !dbg !13278
  %call = call i32 @mlxsw_cmd_hw2sw_cq(%struct.mlxsw_core* %1, i32 %conv) #10, !dbg !13280
  ret void, !dbg !13281
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_cq_tasklet(%struct.tasklet_struct* %t) #0 !dbg !13282 {
entry:
  %t.addr = alloca %struct.tasklet_struct*, align 8
  %q = alloca %struct.mlxsw_pci_queue*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlxsw_pci_queue*, align 8
  %mlxsw_pci = alloca %struct.mlxsw_pci*, align 8
  %cqe = alloca i8*, align 8
  %items = alloca i32, align 4
  %credits = alloca i32, align 4
  %wqe_counter = alloca i16, align 2
  %sendq = alloca i8, align 1
  %dqn = alloca i8, align 1
  %ncqe = alloca [32 x i8], align 16
  %sdq = alloca %struct.mlxsw_pci_queue*, align 8
  %rdq = alloca %struct.mlxsw_pci_queue*, align 8
  store %struct.tasklet_struct* %t, %struct.tasklet_struct** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tasklet_struct** %t.addr, metadata !13283, metadata !DIExpression()), !dbg !13284
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q, metadata !13285, metadata !DIExpression()), !dbg !13286
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13287, metadata !DIExpression()), !dbg !13289
  %0 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !13289
  %1 = bitcast %struct.tasklet_struct* %0 to i8*, !dbg !13289
  store i8* %1, i8** %__mptr, align 8, !dbg !13289
  br label %do.body, !dbg !13289

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13290

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !13289
  %add.ptr = getelementptr i8, i8* %2, i64 -48, !dbg !13289
  %3 = bitcast i8* %add.ptr to %struct.mlxsw_pci_queue*, !dbg !13289
  store %struct.mlxsw_pci_queue* %3, %struct.mlxsw_pci_queue** %tmp, align 8, !dbg !13290
  %4 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %tmp, align 8, !dbg !13289
  store %struct.mlxsw_pci_queue* %4, %struct.mlxsw_pci_queue** %q, align 8, !dbg !13286
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci, metadata !13292, metadata !DIExpression()), !dbg !13293
  %5 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q, align 8, !dbg !13294
  %pci = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %5, i32 0, i32 10, !dbg !13295
  %6 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %pci, align 8, !dbg !13295
  store %struct.mlxsw_pci* %6, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !13293
  call void @llvm.dbg.declare(metadata i8** %cqe, metadata !13296, metadata !DIExpression()), !dbg !13297
  call void @llvm.dbg.declare(metadata i32* %items, metadata !13298, metadata !DIExpression()), !dbg !13299
  store i32 0, i32* %items, align 4, !dbg !13299
  call void @llvm.dbg.declare(metadata i32* %credits, metadata !13300, metadata !DIExpression()), !dbg !13301
  %7 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q, align 8, !dbg !13302
  %count = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %7, i32 0, i32 5, !dbg !13303
  %8 = load i16, i16* %count, align 4, !dbg !13303
  %conv = zext i16 %8 to i32, !dbg !13302
  %shr = ashr i32 %conv, 1, !dbg !13304
  store i32 %shr, i32* %credits, align 4, !dbg !13301
  br label %while.cond, !dbg !13305

while.cond:                                       ; preds = %if.end27, %do.end
  %9 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q, align 8, !dbg !13306
  %call = call i8* @mlxsw_pci_cq_sw_cqe_get(%struct.mlxsw_pci_queue* %9) #10, !dbg !13307
  store i8* %call, i8** %cqe, align 8, !dbg !13308
  %tobool = icmp ne i8* %call, null, !dbg !13305
  br i1 %tobool, label %while.body, label %while.end, !dbg !13305

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i16* %wqe_counter, metadata !13309, metadata !DIExpression()), !dbg !13311
  %10 = load i8*, i8** %cqe, align 8, !dbg !13312
  %call1 = call i32 @mlxsw_pci_cqe_wqe_counter_get(i8* %10) #10, !dbg !13313
  %conv2 = trunc i32 %call1 to i16, !dbg !13313
  store i16 %conv2, i16* %wqe_counter, align 2, !dbg !13311
  call void @llvm.dbg.declare(metadata i8* %sendq, metadata !13314, metadata !DIExpression()), !dbg !13315
  %11 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q, align 8, !dbg !13316
  %u = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %11, i32 0, i32 11, !dbg !13317
  %cq = bitcast %union.anon.134* %u to %struct.anon.135*, !dbg !13318
  %v = getelementptr inbounds %struct.anon.135, %struct.anon.135* %cq, i32 0, i32 2, !dbg !13319
  %12 = load i32, i32* %v, align 8, !dbg !13319
  %13 = load i8*, i8** %cqe, align 8, !dbg !13320
  %call3 = call i32 @mlxsw_pci_cqe_sr_get(i32 %12, i8* %13) #10, !dbg !13321
  %conv4 = trunc i32 %call3 to i8, !dbg !13321
  store i8 %conv4, i8* %sendq, align 1, !dbg !13315
  call void @llvm.dbg.declare(metadata i8* %dqn, metadata !13322, metadata !DIExpression()), !dbg !13323
  %14 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q, align 8, !dbg !13324
  %u5 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %14, i32 0, i32 11, !dbg !13325
  %cq6 = bitcast %union.anon.134* %u5 to %struct.anon.135*, !dbg !13326
  %v7 = getelementptr inbounds %struct.anon.135, %struct.anon.135* %cq6, i32 0, i32 2, !dbg !13327
  %15 = load i32, i32* %v7, align 8, !dbg !13327
  %16 = load i8*, i8** %cqe, align 8, !dbg !13328
  %call8 = call i32 @mlxsw_pci_cqe_dqn_get(i32 %15, i8* %16) #10, !dbg !13329
  %conv9 = trunc i32 %call8 to i8, !dbg !13329
  store i8 %conv9, i8* %dqn, align 1, !dbg !13323
  call void @llvm.dbg.declare(metadata [32 x i8]* %ncqe, metadata !13330, metadata !DIExpression()), !dbg !13331
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %ncqe, i64 0, i64 0, !dbg !13332
  %17 = load i8*, i8** %cqe, align 8, !dbg !13333
  %18 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q, align 8, !dbg !13334
  %elem_size = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %18, i32 0, i32 7, !dbg !13335
  %19 = load i8, i8* %elem_size, align 1, !dbg !13335
  %conv10 = zext i8 %19 to i64, !dbg !13334
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %arraydecay, i8* align 1 %17, i64 %conv10, i1 false), !dbg !13332
  %20 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !13336
  %21 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q, align 8, !dbg !13337
  call void @mlxsw_pci_queue_doorbell_consumer_ring(%struct.mlxsw_pci* %20, %struct.mlxsw_pci_queue* %21) #10, !dbg !13338
  %22 = load i8, i8* %sendq, align 1, !dbg !13339
  %tobool11 = icmp ne i8 %22, 0, !dbg !13339
  br i1 %tobool11, label %if.then, label %if.else, !dbg !13341

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %sdq, metadata !13342, metadata !DIExpression()), !dbg !13344
  %23 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !13345
  %24 = load i8, i8* %dqn, align 1, !dbg !13346
  %call12 = call %struct.mlxsw_pci_queue* @mlxsw_pci_sdq_get(%struct.mlxsw_pci* %23, i8 zeroext %24) #10, !dbg !13347
  store %struct.mlxsw_pci_queue* %call12, %struct.mlxsw_pci_queue** %sdq, align 8, !dbg !13348
  %25 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !13349
  %26 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %sdq, align 8, !dbg !13350
  %27 = load i16, i16* %wqe_counter, align 2, !dbg !13351
  %arraydecay13 = getelementptr inbounds [32 x i8], [32 x i8]* %ncqe, i64 0, i64 0, !dbg !13352
  call void @mlxsw_pci_cqe_sdq_handle(%struct.mlxsw_pci* %25, %struct.mlxsw_pci_queue* %26, i16 zeroext %27, i8* %arraydecay13) #10, !dbg !13353
  %28 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q, align 8, !dbg !13354
  %u14 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %28, i32 0, i32 11, !dbg !13355
  %cq15 = bitcast %union.anon.134* %u14 to %struct.anon.135*, !dbg !13356
  %comp_sdq_count = getelementptr inbounds %struct.anon.135, %struct.anon.135* %cq15, i32 0, i32 0, !dbg !13357
  %29 = load i32, i32* %comp_sdq_count, align 8, !dbg !13358
  %inc = add i32 %29, 1, !dbg !13358
  store i32 %inc, i32* %comp_sdq_count, align 8, !dbg !13358
  br label %if.end, !dbg !13359

if.else:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %rdq, metadata !13360, metadata !DIExpression()), !dbg !13362
  %30 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !13363
  %31 = load i8, i8* %dqn, align 1, !dbg !13364
  %call16 = call %struct.mlxsw_pci_queue* @mlxsw_pci_rdq_get(%struct.mlxsw_pci* %30, i8 zeroext %31) #10, !dbg !13365
  store %struct.mlxsw_pci_queue* %call16, %struct.mlxsw_pci_queue** %rdq, align 8, !dbg !13366
  %32 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !13367
  %33 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %rdq, align 8, !dbg !13368
  %34 = load i16, i16* %wqe_counter, align 2, !dbg !13369
  %35 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q, align 8, !dbg !13370
  %u17 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %35, i32 0, i32 11, !dbg !13371
  %cq18 = bitcast %union.anon.134* %u17 to %struct.anon.135*, !dbg !13372
  %v19 = getelementptr inbounds %struct.anon.135, %struct.anon.135* %cq18, i32 0, i32 2, !dbg !13373
  %36 = load i32, i32* %v19, align 8, !dbg !13373
  %arraydecay20 = getelementptr inbounds [32 x i8], [32 x i8]* %ncqe, i64 0, i64 0, !dbg !13374
  call void @mlxsw_pci_cqe_rdq_handle(%struct.mlxsw_pci* %32, %struct.mlxsw_pci_queue* %33, i16 zeroext %34, i32 %36, i8* %arraydecay20) #10, !dbg !13375
  %37 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q, align 8, !dbg !13376
  %u21 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %37, i32 0, i32 11, !dbg !13377
  %cq22 = bitcast %union.anon.134* %u21 to %struct.anon.135*, !dbg !13378
  %comp_rdq_count = getelementptr inbounds %struct.anon.135, %struct.anon.135* %cq22, i32 0, i32 1, !dbg !13379
  %38 = load i32, i32* %comp_rdq_count, align 4, !dbg !13380
  %inc23 = add i32 %38, 1, !dbg !13380
  store i32 %inc23, i32* %comp_rdq_count, align 4, !dbg !13380
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %39 = load i32, i32* %items, align 4, !dbg !13381
  %inc24 = add i32 %39, 1, !dbg !13381
  store i32 %inc24, i32* %items, align 4, !dbg !13381
  %40 = load i32, i32* %credits, align 4, !dbg !13383
  %cmp = icmp eq i32 %inc24, %40, !dbg !13384
  br i1 %cmp, label %if.then26, label %if.end27, !dbg !13385

if.then26:                                        ; preds = %if.end
  br label %while.end, !dbg !13386

if.end27:                                         ; preds = %if.end
  br label %while.cond, !dbg !13305, !llvm.loop !13387

while.end:                                        ; preds = %if.then26, %while.cond
  %41 = load i32, i32* %items, align 4, !dbg !13389
  %tobool28 = icmp ne i32 %41, 0, !dbg !13389
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !13391

if.then29:                                        ; preds = %while.end
  %42 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci, align 8, !dbg !13392
  %43 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q, align 8, !dbg !13393
  call void @mlxsw_pci_queue_doorbell_arm_consumer_ring(%struct.mlxsw_pci* %42, %struct.mlxsw_pci_queue* %43) #10, !dbg !13394
  br label %if.end30, !dbg !13394

if.end30:                                         ; preds = %if.then29, %while.end
  ret void, !dbg !13395
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @mlxsw_pci_cq_elem_count(%struct.mlxsw_pci_queue* %q) #0 !dbg !13396 {
entry:
  %q.addr = alloca %struct.mlxsw_pci_queue*, align 8
  store %struct.mlxsw_pci_queue* %q, %struct.mlxsw_pci_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q.addr, metadata !13397, metadata !DIExpression()), !dbg !13398
  %0 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13399
  %u = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %0, i32 0, i32 11, !dbg !13400
  %cq = bitcast %union.anon.134* %u to %struct.anon.135*, !dbg !13401
  %v = getelementptr inbounds %struct.anon.135, %struct.anon.135* %cq, i32 0, i32 2, !dbg !13402
  %1 = load i32, i32* %v, align 8, !dbg !13402
  %cmp = icmp eq i32 %1, 2, !dbg !13403
  %2 = zext i1 %cmp to i64, !dbg !13399
  %cond = select i1 %cmp, i32 1024, i32 2048, !dbg !13399
  %conv = trunc i32 %cond to i16, !dbg !13399
  ret i16 %conv, !dbg !13404
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @mlxsw_pci_cq_elem_size(%struct.mlxsw_pci_queue* %q) #0 !dbg !13405 {
entry:
  %q.addr = alloca %struct.mlxsw_pci_queue*, align 8
  store %struct.mlxsw_pci_queue* %q, %struct.mlxsw_pci_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q.addr, metadata !13406, metadata !DIExpression()), !dbg !13407
  %0 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13408
  %u = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %0, i32 0, i32 11, !dbg !13409
  %cq = bitcast %union.anon.134* %u to %struct.anon.135*, !dbg !13410
  %v = getelementptr inbounds %struct.anon.135, %struct.anon.135* %cq, i32 0, i32 2, !dbg !13411
  %1 = load i32, i32* %v, align 8, !dbg !13411
  %cmp = icmp eq i32 %1, 2, !dbg !13412
  %2 = zext i1 %cmp to i64, !dbg !13408
  %cond = select i1 %cmp, i32 32, i32 16, !dbg !13408
  %conv = trunc i32 %cond to i8, !dbg !13408
  ret i8 %conv, !dbg !13413
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_cqe_owner_set(i32 %v, i8* %cqe, i32 %val) #0 !dbg !13414 {
entry:
  %v.addr = alloca i32, align 4
  %cqe.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i32 %v, i32* %v.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v.addr, metadata !13417, metadata !DIExpression()), !dbg !13418
  store i8* %cqe, i8** %cqe.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cqe.addr, metadata !13419, metadata !DIExpression()), !dbg !13418
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !13420, metadata !DIExpression()), !dbg !13418
  %0 = load i32, i32* %v.addr, align 4, !dbg !13418
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
  ], !dbg !13418

sw.default:                                       ; preds = %entry
  br label %sw.bb, !dbg !13418

sw.bb:                                            ; preds = %entry, %sw.default
  %1 = load i8*, i8** %cqe.addr, align 8, !dbg !13421
  %2 = load i32, i32* %val.addr, align 4, !dbg !13421
  call void @mlxsw_pci_cqe01_owner_set(i8* %1, i32 %2) #10, !dbg !13421
  br label %sw.epilog, !dbg !13421

sw.bb1:                                           ; preds = %entry
  %3 = load i8*, i8** %cqe.addr, align 8, !dbg !13421
  %4 = load i32, i32* %val.addr, align 4, !dbg !13421
  call void @mlxsw_pci_cqe01_owner_set(i8* %3, i32 %4) #10, !dbg !13421
  br label %sw.epilog, !dbg !13421

sw.bb2:                                           ; preds = %entry
  %5 = load i8*, i8** %cqe.addr, align 8, !dbg !13421
  %6 = load i32, i32* %val.addr, align 4, !dbg !13421
  call void @mlxsw_pci_cqe2_owner_set(i8* %5, i32 %6) #10, !dbg !13421
  br label %sw.epilog, !dbg !13421

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb1, %sw.bb
  ret void, !dbg !13418
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_sw2hw_cq_cqe_ver_set(i8* %buf, i32 %val) #0 !dbg !13423 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13424, metadata !DIExpression()), !dbg !13425
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !13426, metadata !DIExpression()), !dbg !13425
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13425
  %1 = load i32, i32* %val.addr, align 4, !dbg !13425
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_sw2hw_cq_cqe_ver_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !13425
  ret void, !dbg !13425
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_sw2hw_cq_c_eqn_set(i8* %buf, i32 %val) #0 !dbg !13427 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13428, metadata !DIExpression()), !dbg !13429
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !13430, metadata !DIExpression()), !dbg !13429
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13429
  %1 = load i32, i32* %val.addr, align 4, !dbg !13429
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_sw2hw_cq_c_eqn_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !13429
  ret void, !dbg !13429
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_sw2hw_cq_st_set(i8* %buf, i32 %val) #0 !dbg !13431 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13432, metadata !DIExpression()), !dbg !13433
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !13434, metadata !DIExpression()), !dbg !13433
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13433
  %1 = load i32, i32* %val.addr, align 4, !dbg !13433
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_sw2hw_cq_st_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !13433
  ret void, !dbg !13433
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_sw2hw_cq_log_cq_size_set(i8* %buf, i32 %val) #0 !dbg !13435 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13436, metadata !DIExpression()), !dbg !13437
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !13438, metadata !DIExpression()), !dbg !13437
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13437
  %1 = load i32, i32* %val.addr, align 4, !dbg !13437
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_sw2hw_cq_log_cq_size_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !13437
  ret void, !dbg !13437
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_sw2hw_cq_pa_set(i8* %buf, i16 zeroext %index, i64 %val) #0 !dbg !13439 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i64, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13440, metadata !DIExpression()), !dbg !13441
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !13442, metadata !DIExpression()), !dbg !13441
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !13443, metadata !DIExpression()), !dbg !13441
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13441
  %1 = load i16, i16* %index.addr, align 2, !dbg !13441
  %2 = load i64, i64* %val.addr, align 8, !dbg !13441
  call void @__mlxsw_item_set64(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_sw2hw_cq_pa_item to %struct.mlxsw_item*), i16 zeroext %1, i64 %2) #10, !dbg !13441
  ret void, !dbg !13441
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_sw2hw_cq(%struct.mlxsw_core* %mlxsw_core, i8* %in_mbox, i32 %cq_number) #0 !dbg !13444 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %in_mbox.addr = alloca i8*, align 8
  %cq_number.addr = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !13445, metadata !DIExpression()), !dbg !13446
  store i8* %in_mbox, i8** %in_mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %in_mbox.addr, metadata !13447, metadata !DIExpression()), !dbg !13448
  store i32 %cq_number, i32* %cq_number.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cq_number.addr, metadata !13449, metadata !DIExpression()), !dbg !13450
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !13451
  %1 = load i32, i32* %cq_number.addr, align 4, !dbg !13452
  %2 = load i8*, i8** %in_mbox.addr, align 8, !dbg !13453
  %call = call i32 @mlxsw_cmd_exec_in(%struct.mlxsw_core* %0, i16 zeroext 22, i8 zeroext 0, i32 %1, i8* %2, i64 4096) #10, !dbg !13454
  ret i32 %call, !dbg !13455
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_cqe01_owner_set(i8* %buf, i32 %val) #0 !dbg !13456 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13457, metadata !DIExpression()), !dbg !13458
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !13459, metadata !DIExpression()), !dbg !13458
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13458
  %1 = load i32, i32* %val.addr, align 4, !dbg !13458
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_cqe01_owner_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !13458
  ret void, !dbg !13458
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_cqe2_owner_set(i8* %buf, i32 %val) #0 !dbg !13460 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13461, metadata !DIExpression()), !dbg !13462
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !13463, metadata !DIExpression()), !dbg !13462
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13462
  %1 = load i32, i32* %val.addr, align 4, !dbg !13462
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_cqe2_owner_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !13462
  ret void, !dbg !13462
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_hw2sw_cq(%struct.mlxsw_core* %mlxsw_core, i32 %cq_number) #0 !dbg !13464 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %cq_number.addr = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !13465, metadata !DIExpression()), !dbg !13466
  store i32 %cq_number, i32* %cq_number.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cq_number.addr, metadata !13467, metadata !DIExpression()), !dbg !13468
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !13469
  %1 = load i32, i32* %cq_number.addr, align 4, !dbg !13470
  %call = call i32 @mlxsw_cmd_exec_none(%struct.mlxsw_core* %0, i16 zeroext 23, i8 zeroext 0, i32 %1) #10, !dbg !13471
  ret i32 %call, !dbg !13472
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @mlxsw_pci_cq_sw_cqe_get(%struct.mlxsw_pci_queue* %q) #0 !dbg !13473 {
entry:
  %retval = alloca i8*, align 8
  %q.addr = alloca %struct.mlxsw_pci_queue*, align 8
  %elem_info = alloca %struct.mlxsw_pci_queue_elem_info*, align 8
  %elem = alloca i8*, align 8
  %owner_bit = alloca i8, align 1
  store %struct.mlxsw_pci_queue* %q, %struct.mlxsw_pci_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q.addr, metadata !13474, metadata !DIExpression()), !dbg !13475
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue_elem_info** %elem_info, metadata !13476, metadata !DIExpression()), !dbg !13477
  call void @llvm.dbg.declare(metadata i8** %elem, metadata !13478, metadata !DIExpression()), !dbg !13479
  call void @llvm.dbg.declare(metadata i8* %owner_bit, metadata !13480, metadata !DIExpression()), !dbg !13481
  %0 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13482
  %call = call %struct.mlxsw_pci_queue_elem_info* @mlxsw_pci_queue_elem_info_consumer_get(%struct.mlxsw_pci_queue* %0) #10, !dbg !13483
  store %struct.mlxsw_pci_queue_elem_info* %call, %struct.mlxsw_pci_queue_elem_info** %elem_info, align 8, !dbg !13484
  %1 = load %struct.mlxsw_pci_queue_elem_info*, %struct.mlxsw_pci_queue_elem_info** %elem_info, align 8, !dbg !13485
  %elem1 = getelementptr inbounds %struct.mlxsw_pci_queue_elem_info, %struct.mlxsw_pci_queue_elem_info* %1, i32 0, i32 0, !dbg !13486
  %2 = load i8*, i8** %elem1, align 8, !dbg !13486
  store i8* %2, i8** %elem, align 8, !dbg !13487
  %3 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13488
  %u = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %3, i32 0, i32 11, !dbg !13489
  %cq = bitcast %union.anon.134* %u to %struct.anon.135*, !dbg !13490
  %v = getelementptr inbounds %struct.anon.135, %struct.anon.135* %cq, i32 0, i32 2, !dbg !13491
  %4 = load i32, i32* %v, align 8, !dbg !13491
  %5 = load i8*, i8** %elem, align 8, !dbg !13492
  %call2 = call i32 @mlxsw_pci_cqe_owner_get(i32 %4, i8* %5) #10, !dbg !13493
  %tobool = icmp ne i32 %call2, 0, !dbg !13493
  %frombool = zext i1 %tobool to i8, !dbg !13494
  store i8 %frombool, i8* %owner_bit, align 1, !dbg !13494
  %6 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13495
  %7 = load i8, i8* %owner_bit, align 1, !dbg !13497
  %tobool3 = trunc i8 %7 to i1, !dbg !13497
  %call4 = call zeroext i1 @mlxsw_pci_elem_hw_owned(%struct.mlxsw_pci_queue* %6, i1 zeroext %tobool3) #10, !dbg !13498
  br i1 %call4, label %if.then, label %if.end, !dbg !13499

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !13500
  br label %return, !dbg !13500

if.end:                                           ; preds = %entry
  %8 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13501
  %consumer_counter = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %8, i32 0, i32 4, !dbg !13502
  %9 = load i16, i16* %consumer_counter, align 2, !dbg !13503
  %inc = add i16 %9, 1, !dbg !13503
  store i16 %inc, i16* %consumer_counter, align 2, !dbg !13503
  call void asm sideeffect "lfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #12, !dbg !13504, !srcloc !13505
  %10 = load i8*, i8** %elem, align 8, !dbg !13506
  store i8* %10, i8** %retval, align 8, !dbg !13507
  br label %return, !dbg !13507

return:                                           ; preds = %if.end, %if.then
  %11 = load i8*, i8** %retval, align 8, !dbg !13508
  ret i8* %11, !dbg !13508
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_cqe_wqe_counter_get(i8* %buf) #0 !dbg !13509 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13510, metadata !DIExpression()), !dbg !13511
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13511
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_cqe_wqe_counter_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !13511
  ret i32 %call, !dbg !13511
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_cqe_sr_get(i32 %v, i8* %cqe) #0 !dbg !13512 {
entry:
  %retval = alloca i32, align 4
  %v.addr = alloca i32, align 4
  %cqe.addr = alloca i8*, align 8
  store i32 %v, i32* %v.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v.addr, metadata !13515, metadata !DIExpression()), !dbg !13516
  store i8* %cqe, i8** %cqe.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cqe.addr, metadata !13517, metadata !DIExpression()), !dbg !13516
  %0 = load i32, i32* %v.addr, align 4, !dbg !13516
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb3
  ], !dbg !13516

sw.default:                                       ; preds = %entry
  br label %sw.bb, !dbg !13516

sw.bb:                                            ; preds = %entry, %sw.default
  %1 = load i8*, i8** %cqe.addr, align 8, !dbg !13518
  %call = call i32 @mlxsw_pci_cqe0_sr_get(i8* %1) #10, !dbg !13518
  store i32 %call, i32* %retval, align 4, !dbg !13518
  br label %return, !dbg !13518

sw.bb1:                                           ; preds = %entry
  %2 = load i8*, i8** %cqe.addr, align 8, !dbg !13518
  %call2 = call i32 @mlxsw_pci_cqe12_sr_get(i8* %2) #10, !dbg !13518
  store i32 %call2, i32* %retval, align 4, !dbg !13518
  br label %return, !dbg !13518

sw.bb3:                                           ; preds = %entry
  %3 = load i8*, i8** %cqe.addr, align 8, !dbg !13518
  %call4 = call i32 @mlxsw_pci_cqe12_sr_get(i8* %3) #10, !dbg !13518
  store i32 %call4, i32* %retval, align 4, !dbg !13518
  br label %return, !dbg !13518

return:                                           ; preds = %sw.bb3, %sw.bb1, %sw.bb
  %4 = load i32, i32* %retval, align 4, !dbg !13516
  ret i32 %4, !dbg !13516
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_cqe_dqn_get(i32 %v, i8* %cqe) #0 !dbg !13520 {
entry:
  %retval = alloca i32, align 4
  %v.addr = alloca i32, align 4
  %cqe.addr = alloca i8*, align 8
  store i32 %v, i32* %v.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v.addr, metadata !13521, metadata !DIExpression()), !dbg !13522
  store i8* %cqe, i8** %cqe.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cqe.addr, metadata !13523, metadata !DIExpression()), !dbg !13522
  %0 = load i32, i32* %v.addr, align 4, !dbg !13522
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb3
  ], !dbg !13522

sw.default:                                       ; preds = %entry
  br label %sw.bb, !dbg !13522

sw.bb:                                            ; preds = %entry, %sw.default
  %1 = load i8*, i8** %cqe.addr, align 8, !dbg !13524
  %call = call i32 @mlxsw_pci_cqe0_dqn_get(i8* %1) #10, !dbg !13524
  store i32 %call, i32* %retval, align 4, !dbg !13524
  br label %return, !dbg !13524

sw.bb1:                                           ; preds = %entry
  %2 = load i8*, i8** %cqe.addr, align 8, !dbg !13524
  %call2 = call i32 @mlxsw_pci_cqe12_dqn_get(i8* %2) #10, !dbg !13524
  store i32 %call2, i32* %retval, align 4, !dbg !13524
  br label %return, !dbg !13524

sw.bb3:                                           ; preds = %entry
  %3 = load i8*, i8** %cqe.addr, align 8, !dbg !13524
  %call4 = call i32 @mlxsw_pci_cqe12_dqn_get(i8* %3) #10, !dbg !13524
  store i32 %call4, i32* %retval, align 4, !dbg !13524
  br label %return, !dbg !13524

return:                                           ; preds = %sw.bb3, %sw.bb1, %sw.bb
  %4 = load i32, i32* %retval, align 4, !dbg !13522
  ret i32 %4, !dbg !13522
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_pci_queue* @mlxsw_pci_sdq_get(%struct.mlxsw_pci* %mlxsw_pci, i8 zeroext %q_num) #0 !dbg !13526 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %q_num.addr = alloca i8, align 1
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !13527, metadata !DIExpression()), !dbg !13528
  store i8 %q_num, i8* %q_num.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %q_num.addr, metadata !13529, metadata !DIExpression()), !dbg !13530
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !13531
  %1 = load i8, i8* %q_num.addr, align 1, !dbg !13532
  %call = call %struct.mlxsw_pci_queue* @__mlxsw_pci_queue_get(%struct.mlxsw_pci* %0, i32 0, i8 zeroext %1) #10, !dbg !13533
  ret %struct.mlxsw_pci_queue* %call, !dbg !13534
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_cqe_sdq_handle(%struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci_queue* %q, i16 zeroext %consumer_counter_limit, i8* %cqe) #0 !dbg !13535 {
entry:
  %lock.addr.i27 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i27, metadata !13538, metadata !DIExpression()), !dbg !13542
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !13544, metadata !DIExpression()), !dbg !13546
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %q.addr = alloca %struct.mlxsw_pci_queue*, align 8
  %consumer_counter_limit.addr = alloca i16, align 2
  %cqe.addr = alloca i8*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %elem_info = alloca %struct.mlxsw_pci_queue_elem_info*, align 8
  %tx_info = alloca %struct.mlxsw_tx_info, align 1
  %wqe = alloca i8*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  %i = alloca i32, align 4
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !13548, metadata !DIExpression()), !dbg !13549
  store %struct.mlxsw_pci_queue* %q, %struct.mlxsw_pci_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q.addr, metadata !13550, metadata !DIExpression()), !dbg !13551
  store i16 %consumer_counter_limit, i16* %consumer_counter_limit.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %consumer_counter_limit.addr, metadata !13552, metadata !DIExpression()), !dbg !13553
  store i8* %cqe, i8** %cqe.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cqe.addr, metadata !13554, metadata !DIExpression()), !dbg !13555
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !13556, metadata !DIExpression()), !dbg !13557
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !13558
  %pdev1 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %0, i32 0, i32 0, !dbg !13559
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !13559
  store %struct.pci_dev* %1, %struct.pci_dev** %pdev, align 8, !dbg !13557
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue_elem_info** %elem_info, metadata !13560, metadata !DIExpression()), !dbg !13561
  call void @llvm.dbg.declare(metadata %struct.mlxsw_tx_info* %tx_info, metadata !13562, metadata !DIExpression()), !dbg !13563
  call void @llvm.dbg.declare(metadata i8** %wqe, metadata !13564, metadata !DIExpression()), !dbg !13565
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !13566, metadata !DIExpression()), !dbg !13567
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13568, metadata !DIExpression()), !dbg !13569
  %2 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13570
  %lock = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %2, i32 0, i32 0, !dbg !13571
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #12, !dbg !13572, !srcloc !13574
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13575
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !13575
  %rlock.i = bitcast %union.anon.1* %4 to %struct.raw_spinlock*, !dbg !13575
  %5 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13577
  %call = call %struct.mlxsw_pci_queue_elem_info* @mlxsw_pci_queue_elem_info_consumer_get(%struct.mlxsw_pci_queue* %5) #10, !dbg !13578
  store %struct.mlxsw_pci_queue_elem_info* %call, %struct.mlxsw_pci_queue_elem_info** %elem_info, align 8, !dbg !13579
  %6 = load %struct.mlxsw_pci_queue_elem_info*, %struct.mlxsw_pci_queue_elem_info** %elem_info, align 8, !dbg !13580
  %u = getelementptr inbounds %struct.mlxsw_pci_queue_elem_info, %struct.mlxsw_pci_queue_elem_info* %6, i32 0, i32 1, !dbg !13581
  %sdq = bitcast %union.anon.130* %u to %struct.anon.131*, !dbg !13582
  %skb2 = getelementptr inbounds %struct.anon.131, %struct.anon.131* %sdq, i32 0, i32 0, !dbg !13583
  %7 = load %struct.sk_buff*, %struct.sk_buff** %skb2, align 8, !dbg !13583
  %call3 = call %struct.mlxsw_skb_cb* @mlxsw_skb_cb(%struct.sk_buff* %7) #10, !dbg !13584
  %8 = getelementptr inbounds %struct.mlxsw_skb_cb, %struct.mlxsw_skb_cb* %call3, i32 0, i32 0, !dbg !13585
  %tx_info4 = bitcast %union.anon.141* %8 to %struct.mlxsw_tx_info*, !dbg !13585
  %9 = bitcast %struct.mlxsw_tx_info* %tx_info to i8*, !dbg !13585
  %10 = bitcast %struct.mlxsw_tx_info* %tx_info4 to i8*, !dbg !13585
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %9, i8* align 4 %10, i64 2, i1 false), !dbg !13585
  %11 = load %struct.mlxsw_pci_queue_elem_info*, %struct.mlxsw_pci_queue_elem_info** %elem_info, align 8, !dbg !13586
  %u5 = getelementptr inbounds %struct.mlxsw_pci_queue_elem_info, %struct.mlxsw_pci_queue_elem_info* %11, i32 0, i32 1, !dbg !13587
  %sdq6 = bitcast %union.anon.130* %u5 to %struct.anon.131*, !dbg !13588
  %skb7 = getelementptr inbounds %struct.anon.131, %struct.anon.131* %sdq6, i32 0, i32 0, !dbg !13589
  %12 = load %struct.sk_buff*, %struct.sk_buff** %skb7, align 8, !dbg !13589
  store %struct.sk_buff* %12, %struct.sk_buff** %skb, align 8, !dbg !13590
  %13 = load %struct.mlxsw_pci_queue_elem_info*, %struct.mlxsw_pci_queue_elem_info** %elem_info, align 8, !dbg !13591
  %elem = getelementptr inbounds %struct.mlxsw_pci_queue_elem_info, %struct.mlxsw_pci_queue_elem_info* %13, i32 0, i32 0, !dbg !13592
  %14 = load i8*, i8** %elem, align 8, !dbg !13592
  store i8* %14, i8** %wqe, align 8, !dbg !13593
  store i32 0, i32* %i, align 4, !dbg !13594
  br label %for.cond, !dbg !13596

for.cond:                                         ; preds = %for.inc, %entry
  %15 = load i32, i32* %i, align 4, !dbg !13597
  %cmp = icmp slt i32 %15, 3, !dbg !13599
  br i1 %cmp, label %for.body, label %for.end, !dbg !13600

for.body:                                         ; preds = %for.cond
  %16 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !13601
  %17 = load i8*, i8** %wqe, align 8, !dbg !13602
  %18 = load i32, i32* %i, align 4, !dbg !13603
  call void @mlxsw_pci_wqe_frag_unmap(%struct.mlxsw_pci* %16, i8* %17, i32 %18, i32 1) #10, !dbg !13604
  br label %for.inc, !dbg !13604

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !13605
  %inc = add i32 %19, 1, !dbg !13605
  store i32 %inc, i32* %i, align 4, !dbg !13605
  br label %for.cond, !dbg !13606, !llvm.loop !13607

for.end:                                          ; preds = %for.cond
  %is_emad = getelementptr inbounds %struct.mlxsw_tx_info, %struct.mlxsw_tx_info* %tx_info, i32 0, i32 1, !dbg !13609
  %20 = load i8, i8* %is_emad, align 1, !dbg !13609
  %tobool = trunc i8 %20 to i1, !dbg !13609
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !13609

land.rhs:                                         ; preds = %for.end
  %21 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13609
  %call8 = call i8* @skb_end_pointer(%struct.sk_buff* %21) #10, !dbg !13609
  %22 = bitcast i8* %call8 to %struct.skb_shared_info*, !dbg !13609
  %tx_flags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %22, i32 0, i32 3, !dbg !13609
  %23 = load i8, i8* %tx_flags, align 1, !dbg !13609
  %conv = zext i8 %23 to i32, !dbg !13609
  %and = and i32 %conv, 1, !dbg !13609
  %tobool9 = icmp ne i32 %and, 0, !dbg !13609
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.end
  %24 = phi i1 [ false, %for.end ], [ %tobool9, %land.rhs ], !dbg !13611
  %lnot = xor i1 %24, true, !dbg !13609
  %lnot10 = xor i1 %lnot, true, !dbg !13609
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !13609
  %conv11 = sext i32 %lnot.ext to i64, !dbg !13609
  %tobool12 = icmp ne i64 %conv11, 0, !dbg !13609
  br i1 %tobool12, label %if.then, label %if.end, !dbg !13612

if.then:                                          ; preds = %land.end
  %25 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !13613
  %core = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %25, i32 0, i32 5, !dbg !13615
  %26 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !13615
  %27 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13616
  %local_port = getelementptr inbounds %struct.mlxsw_tx_info, %struct.mlxsw_tx_info* %tx_info, i32 0, i32 0, !dbg !13617
  %28 = load i8, i8* %local_port, align 1, !dbg !13617
  call void @mlxsw_core_ptp_transmitted(%struct.mlxsw_core* %26, %struct.sk_buff* %27, i8 zeroext %28) #10, !dbg !13618
  store %struct.sk_buff* null, %struct.sk_buff** %skb, align 8, !dbg !13619
  br label %if.end, !dbg !13620

if.end:                                           ; preds = %if.then, %land.end
  %29 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13621
  %tobool13 = icmp ne %struct.sk_buff* %29, null, !dbg !13621
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !13623

if.then14:                                        ; preds = %if.end
  %30 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13624
  call void @dev_kfree_skb_any(%struct.sk_buff* %30) #10, !dbg !13625
  br label %if.end15, !dbg !13625

if.end15:                                         ; preds = %if.then14, %if.end
  %31 = load %struct.mlxsw_pci_queue_elem_info*, %struct.mlxsw_pci_queue_elem_info** %elem_info, align 8, !dbg !13626
  %u16 = getelementptr inbounds %struct.mlxsw_pci_queue_elem_info, %struct.mlxsw_pci_queue_elem_info* %31, i32 0, i32 1, !dbg !13627
  %sdq17 = bitcast %union.anon.130* %u16 to %struct.anon.131*, !dbg !13628
  %skb18 = getelementptr inbounds %struct.anon.131, %struct.anon.131* %sdq17, i32 0, i32 0, !dbg !13629
  store %struct.sk_buff* null, %struct.sk_buff** %skb18, align 8, !dbg !13630
  %32 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13631
  %consumer_counter = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %32, i32 0, i32 4, !dbg !13633
  %33 = load i16, i16* %consumer_counter, align 2, !dbg !13634
  %inc19 = add i16 %33, 1, !dbg !13634
  store i16 %inc19, i16* %consumer_counter, align 2, !dbg !13634
  %conv20 = zext i16 %33 to i32, !dbg !13631
  %34 = load i16, i16* %consumer_counter_limit.addr, align 2, !dbg !13635
  %conv21 = zext i16 %34 to i32, !dbg !13635
  %cmp22 = icmp ne i32 %conv20, %conv21, !dbg !13636
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !13637

if.then24:                                        ; preds = %if.end15
  br label %do.body, !dbg !13638

do.body:                                          ; preds = %if.then24
  br label %do.end, !dbg !13639

do.end:                                           ; preds = %do.body
  br label %if.end25, !dbg !13639

if.end25:                                         ; preds = %do.end, %if.end15
  %35 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13641
  %lock26 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %35, i32 0, i32 0, !dbg !13642
  store %struct.spinlock* %lock26, %struct.spinlock** %lock.addr.i27, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #12, !dbg !13643, !srcloc !13645
  %36 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i27, align 8, !dbg !13646
  %37 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %36, i32 0, i32 0, !dbg !13646
  %rlock.i28 = bitcast %union.anon.1* %37 to %struct.raw_spinlock*, !dbg !13646
  ret void, !dbg !13648
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_pci_queue* @mlxsw_pci_rdq_get(%struct.mlxsw_pci* %mlxsw_pci, i8 zeroext %q_num) #0 !dbg !13649 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %q_num.addr = alloca i8, align 1
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !13650, metadata !DIExpression()), !dbg !13651
  store i8 %q_num, i8* %q_num.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %q_num.addr, metadata !13652, metadata !DIExpression()), !dbg !13653
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !13654
  %1 = load i8, i8* %q_num.addr, align 1, !dbg !13655
  %call = call %struct.mlxsw_pci_queue* @__mlxsw_pci_queue_get(%struct.mlxsw_pci* %0, i32 1, i8 zeroext %1) #10, !dbg !13656
  ret %struct.mlxsw_pci_queue* %call, !dbg !13657
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_cqe_rdq_handle(%struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci_queue* %q, i16 zeroext %consumer_counter_limit, i32 %cqe_v, i8* %cqe) #0 !dbg !13658 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %q.addr = alloca %struct.mlxsw_pci_queue*, align 8
  %consumer_counter_limit.addr = alloca i16, align 2
  %cqe_v.addr = alloca i32, align 4
  %cqe.addr = alloca i8*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %elem_info = alloca %struct.mlxsw_pci_queue_elem_info*, align 8
  %rx_info = alloca %struct.mlxsw_rx_info, align 4
  %wqe = alloca i8*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  %byte_count = alloca i16, align 2
  %err = alloca i32, align 4
  %cookie_index = alloca i32, align 4
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !13661, metadata !DIExpression()), !dbg !13662
  store %struct.mlxsw_pci_queue* %q, %struct.mlxsw_pci_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q.addr, metadata !13663, metadata !DIExpression()), !dbg !13664
  store i16 %consumer_counter_limit, i16* %consumer_counter_limit.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %consumer_counter_limit.addr, metadata !13665, metadata !DIExpression()), !dbg !13666
  store i32 %cqe_v, i32* %cqe_v.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cqe_v.addr, metadata !13667, metadata !DIExpression()), !dbg !13668
  store i8* %cqe, i8** %cqe.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cqe.addr, metadata !13669, metadata !DIExpression()), !dbg !13670
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !13671, metadata !DIExpression()), !dbg !13672
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !13673
  %pdev1 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %0, i32 0, i32 0, !dbg !13674
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !13674
  store %struct.pci_dev* %1, %struct.pci_dev** %pdev, align 8, !dbg !13672
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue_elem_info** %elem_info, metadata !13675, metadata !DIExpression()), !dbg !13676
  call void @llvm.dbg.declare(metadata %struct.mlxsw_rx_info* %rx_info, metadata !13677, metadata !DIExpression()), !dbg !13689
  %2 = bitcast %struct.mlxsw_rx_info* %rx_info to i8*, !dbg !13689
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 12, i1 false), !dbg !13689
  call void @llvm.dbg.declare(metadata i8** %wqe, metadata !13690, metadata !DIExpression()), !dbg !13691
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !13692, metadata !DIExpression()), !dbg !13693
  call void @llvm.dbg.declare(metadata i16* %byte_count, metadata !13694, metadata !DIExpression()), !dbg !13695
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13696, metadata !DIExpression()), !dbg !13697
  %3 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13698
  %call = call %struct.mlxsw_pci_queue_elem_info* @mlxsw_pci_queue_elem_info_consumer_get(%struct.mlxsw_pci_queue* %3) #10, !dbg !13699
  store %struct.mlxsw_pci_queue_elem_info* %call, %struct.mlxsw_pci_queue_elem_info** %elem_info, align 8, !dbg !13700
  %4 = load %struct.mlxsw_pci_queue_elem_info*, %struct.mlxsw_pci_queue_elem_info** %elem_info, align 8, !dbg !13701
  %u = getelementptr inbounds %struct.mlxsw_pci_queue_elem_info, %struct.mlxsw_pci_queue_elem_info* %4, i32 0, i32 1, !dbg !13702
  %sdq = bitcast %union.anon.130* %u to %struct.anon.131*, !dbg !13703
  %skb2 = getelementptr inbounds %struct.anon.131, %struct.anon.131* %sdq, i32 0, i32 0, !dbg !13704
  %5 = load %struct.sk_buff*, %struct.sk_buff** %skb2, align 8, !dbg !13704
  store %struct.sk_buff* %5, %struct.sk_buff** %skb, align 8, !dbg !13705
  %6 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13706
  %tobool = icmp ne %struct.sk_buff* %6, null, !dbg !13706
  br i1 %tobool, label %if.end, label %if.then, !dbg !13708

if.then:                                          ; preds = %entry
  br label %return, !dbg !13709

if.end:                                           ; preds = %entry
  %7 = load %struct.mlxsw_pci_queue_elem_info*, %struct.mlxsw_pci_queue_elem_info** %elem_info, align 8, !dbg !13710
  %elem = getelementptr inbounds %struct.mlxsw_pci_queue_elem_info, %struct.mlxsw_pci_queue_elem_info* %7, i32 0, i32 0, !dbg !13711
  %8 = load i8*, i8** %elem, align 8, !dbg !13711
  store i8* %8, i8** %wqe, align 8, !dbg !13712
  %9 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !13713
  %10 = load i8*, i8** %wqe, align 8, !dbg !13714
  call void @mlxsw_pci_wqe_frag_unmap(%struct.mlxsw_pci* %9, i8* %10, i32 0, i32 2) #10, !dbg !13715
  %11 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13716
  %consumer_counter = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %11, i32 0, i32 4, !dbg !13718
  %12 = load i16, i16* %consumer_counter, align 2, !dbg !13719
  %inc = add i16 %12, 1, !dbg !13719
  store i16 %inc, i16* %consumer_counter, align 2, !dbg !13719
  %conv = zext i16 %12 to i32, !dbg !13716
  %13 = load i16, i16* %consumer_counter_limit.addr, align 2, !dbg !13720
  %conv3 = zext i16 %13 to i32, !dbg !13720
  %cmp = icmp ne i32 %conv, %conv3, !dbg !13721
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !13722

if.then5:                                         ; preds = %if.end
  br label %do.body, !dbg !13723

do.body:                                          ; preds = %if.then5
  br label %do.end, !dbg !13724

do.end:                                           ; preds = %do.body
  br label %if.end6, !dbg !13724

if.end6:                                          ; preds = %do.end, %if.end
  %14 = load i32, i32* %cqe_v.addr, align 4, !dbg !13726
  %15 = load i8*, i8** %cqe.addr, align 8, !dbg !13728
  %call7 = call i32 @mlxsw_pci_cqe_lag_get(i32 %14, i8* %15) #10, !dbg !13729
  %tobool8 = icmp ne i32 %call7, 0, !dbg !13729
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !13730

if.then9:                                         ; preds = %if.end6
  %is_lag = getelementptr inbounds %struct.mlxsw_rx_info, %struct.mlxsw_rx_info* %rx_info, i32 0, i32 0, !dbg !13731
  store i8 1, i8* %is_lag, align 4, !dbg !13733
  %16 = load i32, i32* %cqe_v.addr, align 4, !dbg !13734
  %17 = load i8*, i8** %cqe.addr, align 8, !dbg !13735
  %call10 = call i32 @mlxsw_pci_cqe_lag_id_get(i32 %16, i8* %17) #10, !dbg !13736
  %conv11 = trunc i32 %call10 to i16, !dbg !13736
  %u12 = getelementptr inbounds %struct.mlxsw_rx_info, %struct.mlxsw_rx_info* %rx_info, i32 0, i32 1, !dbg !13737
  %lag_id = bitcast %union.anon.142* %u12 to i16*, !dbg !13738
  store i16 %conv11, i16* %lag_id, align 2, !dbg !13739
  %18 = load i32, i32* %cqe_v.addr, align 4, !dbg !13740
  %19 = load i8*, i8** %cqe.addr, align 8, !dbg !13741
  %call13 = call i32 @mlxsw_pci_cqe_lag_subport_get(i32 %18, i8* %19) #10, !dbg !13742
  %conv14 = trunc i32 %call13 to i8, !dbg !13742
  %lag_port_index = getelementptr inbounds %struct.mlxsw_rx_info, %struct.mlxsw_rx_info* %rx_info, i32 0, i32 2, !dbg !13743
  store i8 %conv14, i8* %lag_port_index, align 4, !dbg !13744
  br label %if.end19, !dbg !13745

if.else:                                          ; preds = %if.end6
  %is_lag15 = getelementptr inbounds %struct.mlxsw_rx_info, %struct.mlxsw_rx_info* %rx_info, i32 0, i32 0, !dbg !13746
  store i8 0, i8* %is_lag15, align 4, !dbg !13748
  %20 = load i8*, i8** %cqe.addr, align 8, !dbg !13749
  %call16 = call i32 @mlxsw_pci_cqe_system_port_get(i8* %20) #10, !dbg !13750
  %conv17 = trunc i32 %call16 to i16, !dbg !13750
  %u18 = getelementptr inbounds %struct.mlxsw_rx_info, %struct.mlxsw_rx_info* %rx_info, i32 0, i32 1, !dbg !13751
  %sys_port = bitcast %union.anon.142* %u18 to i16*, !dbg !13752
  store i16 %conv17, i16* %sys_port, align 2, !dbg !13753
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then9
  %21 = load i8*, i8** %cqe.addr, align 8, !dbg !13754
  %call20 = call i32 @mlxsw_pci_cqe_trap_id_get(i8* %21) #10, !dbg !13755
  %trap_id = getelementptr inbounds %struct.mlxsw_rx_info, %struct.mlxsw_rx_info* %rx_info, i32 0, i32 4, !dbg !13756
  store i32 %call20, i32* %trap_id, align 4, !dbg !13757
  %trap_id21 = getelementptr inbounds %struct.mlxsw_rx_info, %struct.mlxsw_rx_info* %rx_info, i32 0, i32 4, !dbg !13758
  %22 = load i32, i32* %trap_id21, align 4, !dbg !13758
  %cmp22 = icmp eq i32 %22, 451, !dbg !13760
  br i1 %cmp22, label %if.then27, label %lor.lhs.false, !dbg !13761

lor.lhs.false:                                    ; preds = %if.end19
  %trap_id24 = getelementptr inbounds %struct.mlxsw_rx_info, %struct.mlxsw_rx_info* %rx_info, i32 0, i32 4, !dbg !13762
  %23 = load i32, i32* %trap_id24, align 4, !dbg !13762
  %cmp25 = icmp eq i32 %23, 452, !dbg !13763
  br i1 %cmp25, label %if.then27, label %if.else35, !dbg !13764

if.then27:                                        ; preds = %lor.lhs.false, %if.end19
  call void @llvm.dbg.declare(metadata i32* %cookie_index, metadata !13765, metadata !DIExpression()), !dbg !13767
  store i32 0, i32* %cookie_index, align 4, !dbg !13767
  %24 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !13768
  %max_cqe_ver = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %24, i32 0, i32 10, !dbg !13770
  %25 = load i32, i32* %max_cqe_ver, align 8, !dbg !13770
  %cmp28 = icmp uge i32 %25, 2, !dbg !13771
  br i1 %cmp28, label %if.then30, label %if.end32, !dbg !13772

if.then30:                                        ; preds = %if.then27
  %26 = load i8*, i8** %cqe.addr, align 8, !dbg !13773
  %call31 = call i32 @mlxsw_pci_cqe2_user_def_val_orig_pkt_len_get(i8* %26) #10, !dbg !13774
  store i32 %call31, i32* %cookie_index, align 4, !dbg !13775
  br label %if.end32, !dbg !13776

if.end32:                                         ; preds = %if.then30, %if.then27
  %27 = load i32, i32* %cookie_index, align 4, !dbg !13777
  %28 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13778
  %call33 = call %struct.mlxsw_skb_cb* @mlxsw_skb_cb(%struct.sk_buff* %28) #10, !dbg !13779
  %29 = getelementptr inbounds %struct.mlxsw_skb_cb, %struct.mlxsw_skb_cb* %call33, i32 0, i32 0, !dbg !13780
  %cookie_index34 = bitcast %union.anon.141* %29 to i32*, !dbg !13780
  store i32 %27, i32* %cookie_index34, align 4, !dbg !13781
  br label %if.end50, !dbg !13782

if.else35:                                        ; preds = %lor.lhs.false
  %trap_id36 = getelementptr inbounds %struct.mlxsw_rx_info, %struct.mlxsw_rx_info* %rx_info, i32 0, i32 4, !dbg !13783
  %30 = load i32, i32* %trap_id36, align 4, !dbg !13783
  %cmp37 = icmp sge i32 %30, 544, !dbg !13785
  br i1 %cmp37, label %land.lhs.true, label %if.end49, !dbg !13786

land.lhs.true:                                    ; preds = %if.else35
  %trap_id39 = getelementptr inbounds %struct.mlxsw_rx_info, %struct.mlxsw_rx_info* %rx_info, i32 0, i32 4, !dbg !13787
  %31 = load i32, i32* %trap_id39, align 4, !dbg !13787
  %cmp40 = icmp sle i32 %31, 551, !dbg !13788
  br i1 %cmp40, label %land.lhs.true42, label %if.end49, !dbg !13789

land.lhs.true42:                                  ; preds = %land.lhs.true
  %32 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !13790
  %max_cqe_ver43 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %32, i32 0, i32 10, !dbg !13791
  %33 = load i32, i32* %max_cqe_ver43, align 8, !dbg !13791
  %cmp44 = icmp uge i32 %33, 2, !dbg !13792
  br i1 %cmp44, label %if.then46, label %if.end49, !dbg !13793

if.then46:                                        ; preds = %land.lhs.true42
  %34 = load i8*, i8** %cqe.addr, align 8, !dbg !13794
  %call47 = call i32 @mlxsw_pci_cqe2_mirror_reason_get(i8* %34) #10, !dbg !13796
  %conv48 = trunc i32 %call47 to i8, !dbg !13796
  %mirror_reason = getelementptr inbounds %struct.mlxsw_rx_info, %struct.mlxsw_rx_info* %rx_info, i32 0, i32 3, !dbg !13797
  store i8 %conv48, i8* %mirror_reason, align 1, !dbg !13798
  br label %if.end49, !dbg !13799

if.end49:                                         ; preds = %if.then46, %land.lhs.true42, %land.lhs.true, %if.else35
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.end32
  %35 = load i8*, i8** %cqe.addr, align 8, !dbg !13800
  %call51 = call i32 @mlxsw_pci_cqe_byte_count_get(i8* %35) #10, !dbg !13801
  %conv52 = trunc i32 %call51 to i16, !dbg !13801
  store i16 %conv52, i16* %byte_count, align 2, !dbg !13802
  %36 = load i32, i32* %cqe_v.addr, align 4, !dbg !13803
  %37 = load i8*, i8** %cqe.addr, align 8, !dbg !13805
  %call53 = call i32 @mlxsw_pci_cqe_crc_get(i32 %36, i8* %37) #10, !dbg !13806
  %tobool54 = icmp ne i32 %call53, 0, !dbg !13806
  br i1 %tobool54, label %if.then55, label %if.end58, !dbg !13807

if.then55:                                        ; preds = %if.end50
  %38 = load i16, i16* %byte_count, align 2, !dbg !13808
  %conv56 = zext i16 %38 to i32, !dbg !13808
  %sub = sub i32 %conv56, 4, !dbg !13808
  %conv57 = trunc i32 %sub to i16, !dbg !13808
  store i16 %conv57, i16* %byte_count, align 2, !dbg !13808
  br label %if.end58, !dbg !13809

if.end58:                                         ; preds = %if.then55, %if.end50
  %39 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13810
  %40 = load i16, i16* %byte_count, align 2, !dbg !13811
  %conv59 = zext i16 %40 to i32, !dbg !13811
  %call60 = call i8* @skb_put(%struct.sk_buff* %39, i32 %conv59) #10, !dbg !13812
  %41 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !13813
  %core = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %41, i32 0, i32 5, !dbg !13814
  %42 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !13814
  %43 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13815
  call void @mlxsw_core_skb_receive(%struct.mlxsw_core* %42, %struct.sk_buff* %43, %struct.mlxsw_rx_info* %rx_info) #10, !dbg !13816
  %44 = load i8*, i8** %wqe, align 8, !dbg !13817
  %45 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13818
  %elem_size = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %45, i32 0, i32 7, !dbg !13819
  %46 = load i8, i8* %elem_size, align 1, !dbg !13819
  %conv61 = zext i8 %46 to i64, !dbg !13818
  call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %conv61, i1 false), !dbg !13820
  %47 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !13821
  %48 = load %struct.mlxsw_pci_queue_elem_info*, %struct.mlxsw_pci_queue_elem_info** %elem_info, align 8, !dbg !13822
  %call62 = call i32 @mlxsw_pci_rdq_skb_alloc(%struct.mlxsw_pci* %47, %struct.mlxsw_pci_queue_elem_info* %48) #10, !dbg !13823
  store i32 %call62, i32* %err, align 4, !dbg !13824
  %49 = load i32, i32* %err, align 4, !dbg !13825
  %tobool63 = icmp ne i32 %49, 0, !dbg !13825
  br i1 %tobool63, label %if.then64, label %if.end67, !dbg !13827

if.then64:                                        ; preds = %if.end58
  br label %do.body65, !dbg !13828

do.body65:                                        ; preds = %if.then64
  br label %do.end66, !dbg !13829

do.end66:                                         ; preds = %do.body65
  br label %if.end67, !dbg !13829

if.end67:                                         ; preds = %do.end66, %if.end58
  %50 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13831
  %producer_counter = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %50, i32 0, i32 3, !dbg !13832
  %51 = load i16, i16* %producer_counter, align 8, !dbg !13833
  %inc68 = add i16 %51, 1, !dbg !13833
  store i16 %inc68, i16* %producer_counter, align 8, !dbg !13833
  %52 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !13834
  %53 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !13835
  call void @mlxsw_pci_queue_doorbell_producer_ring(%struct.mlxsw_pci* %52, %struct.mlxsw_pci_queue* %53) #10, !dbg !13836
  br label %return, !dbg !13837

return:                                           ; preds = %if.end67, %if.then
  ret void, !dbg !13838
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_cqe_owner_get(i32 %v, i8* %cqe) #0 !dbg !13839 {
entry:
  %retval = alloca i32, align 4
  %v.addr = alloca i32, align 4
  %cqe.addr = alloca i8*, align 8
  store i32 %v, i32* %v.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v.addr, metadata !13840, metadata !DIExpression()), !dbg !13841
  store i8* %cqe, i8** %cqe.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cqe.addr, metadata !13842, metadata !DIExpression()), !dbg !13841
  %0 = load i32, i32* %v.addr, align 4, !dbg !13841
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb3
  ], !dbg !13841

sw.default:                                       ; preds = %entry
  br label %sw.bb, !dbg !13841

sw.bb:                                            ; preds = %entry, %sw.default
  %1 = load i8*, i8** %cqe.addr, align 8, !dbg !13843
  %call = call i32 @mlxsw_pci_cqe01_owner_get(i8* %1) #10, !dbg !13843
  store i32 %call, i32* %retval, align 4, !dbg !13843
  br label %return, !dbg !13843

sw.bb1:                                           ; preds = %entry
  %2 = load i8*, i8** %cqe.addr, align 8, !dbg !13843
  %call2 = call i32 @mlxsw_pci_cqe01_owner_get(i8* %2) #10, !dbg !13843
  store i32 %call2, i32* %retval, align 4, !dbg !13843
  br label %return, !dbg !13843

sw.bb3:                                           ; preds = %entry
  %3 = load i8*, i8** %cqe.addr, align 8, !dbg !13843
  %call4 = call i32 @mlxsw_pci_cqe2_owner_get(i8* %3) #10, !dbg !13843
  store i32 %call4, i32* %retval, align 4, !dbg !13843
  br label %return, !dbg !13843

return:                                           ; preds = %sw.bb3, %sw.bb1, %sw.bb
  %4 = load i32, i32* %retval, align 4, !dbg !13841
  ret i32 %4, !dbg !13841
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_cqe01_owner_get(i8* %buf) #0 !dbg !13845 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13846, metadata !DIExpression()), !dbg !13847
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13847
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_cqe01_owner_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !13847
  ret i32 %call, !dbg !13847
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_cqe2_owner_get(i8* %buf) #0 !dbg !13848 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13849, metadata !DIExpression()), !dbg !13850
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13850
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_cqe2_owner_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !13850
  ret i32 %call, !dbg !13850
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_cqe0_sr_get(i8* %buf) #0 !dbg !13851 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13852, metadata !DIExpression()), !dbg !13853
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13853
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_cqe0_sr_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !13853
  ret i32 %call, !dbg !13853
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_cqe12_sr_get(i8* %buf) #0 !dbg !13854 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13855, metadata !DIExpression()), !dbg !13856
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13856
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_cqe12_sr_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !13856
  ret i32 %call, !dbg !13856
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_cqe0_dqn_get(i8* %buf) #0 !dbg !13857 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13858, metadata !DIExpression()), !dbg !13859
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13859
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_cqe0_dqn_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !13859
  ret i32 %call, !dbg !13859
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_cqe12_dqn_get(i8* %buf) #0 !dbg !13860 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13861, metadata !DIExpression()), !dbg !13862
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13862
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_cqe12_dqn_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !13862
  ret i32 %call, !dbg !13862
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_skb_cb* @mlxsw_skb_cb(%struct.sk_buff* %skb) #0 !dbg !13863 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !13866, metadata !DIExpression()), !dbg !13867
  br label %do.body, !dbg !13868

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13869

do.end:                                           ; preds = %do.body
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13871
  %cb = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 3, !dbg !13872
  %arraydecay = getelementptr inbounds [48 x i8], [48 x i8]* %cb, i64 0, i64 0, !dbg !13871
  %1 = bitcast i8* %arraydecay to %struct.mlxsw_skb_cb*, !dbg !13873
  ret %struct.mlxsw_skb_cb* %1, !dbg !13874
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_wqe_frag_unmap(%struct.mlxsw_pci* %mlxsw_pci, i8* %wqe, i32 %index, i32 %direction) #0 !dbg !13875 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %wqe.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %direction.addr = alloca i32, align 4
  %pdev = alloca %struct.pci_dev*, align 8
  %frag_len = alloca i64, align 8
  %mapaddr = alloca i64, align 8
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !13878, metadata !DIExpression()), !dbg !13879
  store i8* %wqe, i8** %wqe.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %wqe.addr, metadata !13880, metadata !DIExpression()), !dbg !13881
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !13882, metadata !DIExpression()), !dbg !13883
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !13884, metadata !DIExpression()), !dbg !13885
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !13886, metadata !DIExpression()), !dbg !13887
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !13888
  %pdev1 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %0, i32 0, i32 0, !dbg !13889
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !13889
  store %struct.pci_dev* %1, %struct.pci_dev** %pdev, align 8, !dbg !13887
  call void @llvm.dbg.declare(metadata i64* %frag_len, metadata !13890, metadata !DIExpression()), !dbg !13891
  %2 = load i8*, i8** %wqe.addr, align 8, !dbg !13892
  %3 = load i32, i32* %index.addr, align 4, !dbg !13893
  %conv = trunc i32 %3 to i16, !dbg !13893
  %call = call zeroext i16 @mlxsw_pci_wqe_byte_count_get(i8* %2, i16 zeroext %conv) #10, !dbg !13894
  %conv2 = zext i16 %call to i64, !dbg !13894
  store i64 %conv2, i64* %frag_len, align 8, !dbg !13891
  call void @llvm.dbg.declare(metadata i64* %mapaddr, metadata !13895, metadata !DIExpression()), !dbg !13896
  %4 = load i8*, i8** %wqe.addr, align 8, !dbg !13897
  %5 = load i32, i32* %index.addr, align 4, !dbg !13898
  %conv3 = trunc i32 %5 to i16, !dbg !13898
  %call4 = call i64 @mlxsw_pci_wqe_address_get(i8* %4, i16 zeroext %conv3) #10, !dbg !13899
  store i64 %call4, i64* %mapaddr, align 8, !dbg !13896
  %6 = load i64, i64* %frag_len, align 8, !dbg !13900
  %tobool = icmp ne i64 %6, 0, !dbg !13900
  br i1 %tobool, label %if.end, label %if.then, !dbg !13902

if.then:                                          ; preds = %entry
  br label %return, !dbg !13903

if.end:                                           ; preds = %entry
  %7 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !13904
  %8 = load i64, i64* %mapaddr, align 8, !dbg !13905
  %9 = load i64, i64* %frag_len, align 8, !dbg !13906
  %10 = load i32, i32* %direction.addr, align 4, !dbg !13907
  call void @pci_unmap_single(%struct.pci_dev* %7, i64 %8, i64 %9, i32 %10) #10, !dbg !13908
  br label %return, !dbg !13909

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !13909
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_end_pointer(%struct.sk_buff* %skb) #0 !dbg !13910 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !13913, metadata !DIExpression()), !dbg !13914
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13915
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 36, !dbg !13916
  %1 = load i8*, i8** %head, align 8, !dbg !13916
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13917
  %end = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 35, !dbg !13918
  %3 = load i32, i32* %end, align 4, !dbg !13918
  %idx.ext = zext i32 %3 to i64, !dbg !13919
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !13919
  ret i8* %add.ptr, !dbg !13920
}

; Function Attrs: noredzone
declare dso_local void @mlxsw_core_ptp_transmitted(%struct.mlxsw_core*, %struct.sk_buff*, i8 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_kfree_skb_any(%struct.sk_buff* %skb) #0 !dbg !13921 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !13922, metadata !DIExpression()), !dbg !13923
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13924
  call void @__dev_kfree_skb_any(%struct.sk_buff* %0, i32 1) #10, !dbg !13925
  ret void, !dbg !13926
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @mlxsw_pci_wqe_byte_count_get(i8* %buf, i16 zeroext %index) #0 !dbg !13927 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13930, metadata !DIExpression()), !dbg !13931
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !13932, metadata !DIExpression()), !dbg !13931
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13931
  %1 = load i16, i16* %index.addr, align 2, !dbg !13931
  %call = call zeroext i16 @__mlxsw_item_get16(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_wqe_byte_count_item to %struct.mlxsw_item*), i16 zeroext %1) #10, !dbg !13931
  ret i16 %call, !dbg !13931
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mlxsw_pci_wqe_address_get(i8* %buf, i16 zeroext %index) #0 !dbg !13933 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13936, metadata !DIExpression()), !dbg !13937
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !13938, metadata !DIExpression()), !dbg !13937
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13937
  %1 = load i16, i16* %index.addr, align 2, !dbg !13937
  %call = call i64 @__mlxsw_item_get64(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_wqe_address_item to %struct.mlxsw_item*), i16 zeroext %1) #10, !dbg !13937
  ret i64 %call, !dbg !13937
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_unmap_single(%struct.pci_dev* %hwdev, i64 %dma_addr, i64 %size, i32 %direction) #0 !dbg !13939 {
entry:
  %hwdev.addr = alloca %struct.pci_dev*, align 8
  %dma_addr.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %direction.addr = alloca i32, align 4
  store %struct.pci_dev* %hwdev, %struct.pci_dev** %hwdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %hwdev.addr, metadata !13942, metadata !DIExpression()), !dbg !13943
  store i64 %dma_addr, i64* %dma_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_addr.addr, metadata !13944, metadata !DIExpression()), !dbg !13945
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13946, metadata !DIExpression()), !dbg !13947
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !13948, metadata !DIExpression()), !dbg !13949
  %0 = load %struct.pci_dev*, %struct.pci_dev** %hwdev.addr, align 8, !dbg !13950
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !13950
  %1 = load i64, i64* %dma_addr.addr, align 8, !dbg !13950
  %2 = load i64, i64* %size.addr, align 8, !dbg !13950
  %3 = load i32, i32* %direction.addr, align 4, !dbg !13950
  call void @dma_unmap_single_attrs(%struct.device* %dev, i64 %1, i64 %2, i32 %3, i64 0) #10, !dbg !13950
  ret void, !dbg !13951
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @__mlxsw_item_get16(i8* %buf, %struct.mlxsw_item* %item, i16 zeroext %index) #0 !dbg !13952 {
entry:
  %buf.addr = alloca i8*, align 8
  %item.addr = alloca %struct.mlxsw_item*, align 8
  %index.addr = alloca i16, align 2
  %offset = alloca i32, align 4
  %b = alloca i16*, align 8
  %tmp = alloca i16, align 2
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13955, metadata !DIExpression()), !dbg !13956
  store %struct.mlxsw_item* %item, %struct.mlxsw_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_item** %item.addr, metadata !13957, metadata !DIExpression()), !dbg !13958
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !13959, metadata !DIExpression()), !dbg !13960
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !13961, metadata !DIExpression()), !dbg !13962
  %0 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13963
  %1 = load i16, i16* %index.addr, align 2, !dbg !13964
  %call = call i32 @__mlxsw_item_offset(%struct.mlxsw_item* %0, i16 zeroext %1, i64 2) #10, !dbg !13965
  store i32 %call, i32* %offset, align 4, !dbg !13962
  call void @llvm.dbg.declare(metadata i16** %b, metadata !13966, metadata !DIExpression()), !dbg !13967
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !13968
  %3 = bitcast i8* %2 to i16*, !dbg !13969
  store i16* %3, i16** %b, align 8, !dbg !13967
  call void @llvm.dbg.declare(metadata i16* %tmp, metadata !13970, metadata !DIExpression()), !dbg !13971
  %4 = load i16*, i16** %b, align 8, !dbg !13972
  %5 = load i32, i32* %offset, align 4, !dbg !13972
  %idxprom = zext i32 %5 to i64, !dbg !13972
  %arrayidx = getelementptr i16, i16* %4, i64 %idxprom, !dbg !13972
  %6 = load i16, i16* %arrayidx, align 2, !dbg !13972
  %7 = call i1 @llvm.is.constant.i16(i16 %6), !dbg !13972
  br i1 %7, label %cond.true, label %cond.false, !dbg !13972

cond.true:                                        ; preds = %entry
  %8 = load i16*, i16** %b, align 8, !dbg !13972
  %9 = load i32, i32* %offset, align 4, !dbg !13972
  %idxprom1 = zext i32 %9 to i64, !dbg !13972
  %arrayidx2 = getelementptr i16, i16* %8, i64 %idxprom1, !dbg !13972
  %10 = load i16, i16* %arrayidx2, align 2, !dbg !13972
  %conv = zext i16 %10 to i32, !dbg !13972
  %and = and i32 %conv, 255, !dbg !13972
  %shl = shl i32 %and, 8, !dbg !13972
  %11 = load i16*, i16** %b, align 8, !dbg !13972
  %12 = load i32, i32* %offset, align 4, !dbg !13972
  %idxprom3 = zext i32 %12 to i64, !dbg !13972
  %arrayidx4 = getelementptr i16, i16* %11, i64 %idxprom3, !dbg !13972
  %13 = load i16, i16* %arrayidx4, align 2, !dbg !13972
  %conv5 = zext i16 %13 to i32, !dbg !13972
  %and6 = and i32 %conv5, 65280, !dbg !13972
  %shr = ashr i32 %and6, 8, !dbg !13972
  %or = or i32 %shl, %shr, !dbg !13972
  %conv7 = trunc i32 %or to i16, !dbg !13972
  %conv8 = zext i16 %conv7 to i32, !dbg !13972
  br label %cond.end, !dbg !13972

cond.false:                                       ; preds = %entry
  %14 = load i16*, i16** %b, align 8, !dbg !13972
  %15 = load i32, i32* %offset, align 4, !dbg !13972
  %idxprom9 = zext i32 %15 to i64, !dbg !13972
  %arrayidx10 = getelementptr i16, i16* %14, i64 %idxprom9, !dbg !13972
  %16 = load i16, i16* %arrayidx10, align 2, !dbg !13972
  %call11 = call zeroext i16 @__fswab16(i16 zeroext %16) #13, !dbg !13972
  %conv12 = zext i16 %call11 to i32, !dbg !13972
  br label %cond.end, !dbg !13972

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv8, %cond.true ], [ %conv12, %cond.false ], !dbg !13972
  %conv13 = trunc i32 %cond to i16, !dbg !13972
  store i16 %conv13, i16* %tmp, align 2, !dbg !13973
  %17 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13974
  %shift = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %17, i32 0, i32 3, !dbg !13975
  %18 = load i8, i8* %shift, align 2, !dbg !13975
  %conv14 = zext i8 %18 to i32, !dbg !13974
  %19 = load i16, i16* %tmp, align 2, !dbg !13976
  %conv15 = zext i16 %19 to i32, !dbg !13976
  %shr16 = ashr i32 %conv15, %conv14, !dbg !13976
  %conv17 = trunc i32 %shr16 to i16, !dbg !13976
  store i16 %conv17, i16* %tmp, align 2, !dbg !13976
  %20 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13977
  %size = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %20, i32 0, i32 6, !dbg !13977
  %bits = bitcast %union.anon.140* %size to i8*, !dbg !13977
  %21 = load i8, i8* %bits, align 2, !dbg !13977
  %conv18 = zext i8 %21 to i32, !dbg !13977
  %sub = sub i32 %conv18, 1, !dbg !13977
  %sub19 = sub i32 63, %sub, !dbg !13977
  %sh_prom = zext i32 %sub19 to i64, !dbg !13977
  %shr20 = lshr i64 -1, %sh_prom, !dbg !13977
  %and21 = and i64 -1, %shr20, !dbg !13977
  %add = add i64 0, %and21, !dbg !13977
  %22 = load i16, i16* %tmp, align 2, !dbg !13978
  %conv22 = zext i16 %22 to i64, !dbg !13978
  %and23 = and i64 %conv22, %add, !dbg !13978
  %conv24 = trunc i64 %and23 to i16, !dbg !13978
  store i16 %conv24, i16* %tmp, align 2, !dbg !13978
  %23 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13979
  %no_real_shift = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %23, i32 0, i32 5, !dbg !13981
  %24 = load i8, i8* %no_real_shift, align 8, !dbg !13981
  %tobool = trunc i8 %24 to i1, !dbg !13981
  br i1 %tobool, label %if.then, label %if.end, !dbg !13982

if.then:                                          ; preds = %cond.end
  %25 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !13983
  %shift25 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %25, i32 0, i32 3, !dbg !13984
  %26 = load i8, i8* %shift25, align 2, !dbg !13984
  %conv26 = zext i8 %26 to i32, !dbg !13983
  %27 = load i16, i16* %tmp, align 2, !dbg !13985
  %conv27 = zext i16 %27 to i32, !dbg !13985
  %shl28 = shl i32 %conv27, %conv26, !dbg !13985
  %conv29 = trunc i32 %shl28 to i16, !dbg !13985
  store i16 %conv29, i16* %tmp, align 2, !dbg !13985
  br label %if.end, !dbg !13986

if.end:                                           ; preds = %if.then, %cond.end
  %28 = load i16, i16* %tmp, align 2, !dbg !13987
  ret i16 %28, !dbg !13988
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal zeroext i16 @__fswab16(i16 zeroext %val) #7 !dbg !13989 {
entry:
  %val.addr = alloca i16, align 2
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !13992, metadata !DIExpression()), !dbg !13993
  %0 = load i16, i16* %val.addr, align 2, !dbg !13994
  %conv = zext i16 %0 to i32, !dbg !13994
  %and = and i32 %conv, 255, !dbg !13994
  %shl = shl i32 %and, 8, !dbg !13994
  %1 = load i16, i16* %val.addr, align 2, !dbg !13994
  %conv1 = zext i16 %1 to i32, !dbg !13994
  %and2 = and i32 %conv1, 65280, !dbg !13994
  %shr = ashr i32 %and2, 8, !dbg !13994
  %or = or i32 %shl, %shr, !dbg !13994
  %conv3 = trunc i32 %or to i16, !dbg !13994
  ret i16 %conv3, !dbg !13995
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_unmap_single_attrs(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir, i64 %attrs) #0 !dbg !13996 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13999, metadata !DIExpression()), !dbg !14000
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !14001, metadata !DIExpression()), !dbg !14002
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14003, metadata !DIExpression()), !dbg !14004
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !14005, metadata !DIExpression()), !dbg !14006
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !14007, metadata !DIExpression()), !dbg !14008
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14009
  %1 = load i64, i64* %addr.addr, align 8, !dbg !14010
  %2 = load i64, i64* %size.addr, align 8, !dbg !14011
  %3 = load i32, i32* %dir.addr, align 4, !dbg !14012
  %4 = load i64, i64* %attrs.addr, align 8, !dbg !14013
  call void @dma_unmap_page_attrs(%struct.device* %0, i64 %1, i64 %2, i32 %3, i64 %4) #10, !dbg !14014
  ret void, !dbg !14015
}

; Function Attrs: noredzone
declare dso_local void @dma_unmap_page_attrs(%struct.device*, i64, i64, i32, i64) #2

; Function Attrs: noredzone
declare dso_local void @__dev_kfree_skb_any(%struct.sk_buff*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_cqe_lag_get(i32 %v, i8* %cqe) #0 !dbg !14016 {
entry:
  %retval = alloca i32, align 4
  %v.addr = alloca i32, align 4
  %cqe.addr = alloca i8*, align 8
  store i32 %v, i32* %v.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v.addr, metadata !14017, metadata !DIExpression()), !dbg !14018
  store i8* %cqe, i8** %cqe.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cqe.addr, metadata !14019, metadata !DIExpression()), !dbg !14018
  %0 = load i32, i32* %v.addr, align 4, !dbg !14018
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb3
  ], !dbg !14018

sw.default:                                       ; preds = %entry
  br label %sw.bb, !dbg !14018

sw.bb:                                            ; preds = %entry, %sw.default
  %1 = load i8*, i8** %cqe.addr, align 8, !dbg !14020
  %call = call i32 @mlxsw_pci_cqe0_lag_get(i8* %1) #10, !dbg !14020
  store i32 %call, i32* %retval, align 4, !dbg !14020
  br label %return, !dbg !14020

sw.bb1:                                           ; preds = %entry
  %2 = load i8*, i8** %cqe.addr, align 8, !dbg !14020
  %call2 = call i32 @mlxsw_pci_cqe12_lag_get(i8* %2) #10, !dbg !14020
  store i32 %call2, i32* %retval, align 4, !dbg !14020
  br label %return, !dbg !14020

sw.bb3:                                           ; preds = %entry
  %3 = load i8*, i8** %cqe.addr, align 8, !dbg !14020
  %call4 = call i32 @mlxsw_pci_cqe12_lag_get(i8* %3) #10, !dbg !14020
  store i32 %call4, i32* %retval, align 4, !dbg !14020
  br label %return, !dbg !14020

return:                                           ; preds = %sw.bb3, %sw.bb1, %sw.bb
  %4 = load i32, i32* %retval, align 4, !dbg !14018
  ret i32 %4, !dbg !14018
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_cqe_lag_id_get(i32 %v, i8* %cqe) #0 !dbg !14022 {
entry:
  %retval = alloca i32, align 4
  %v.addr = alloca i32, align 4
  %cqe.addr = alloca i8*, align 8
  store i32 %v, i32* %v.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v.addr, metadata !14023, metadata !DIExpression()), !dbg !14024
  store i8* %cqe, i8** %cqe.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cqe.addr, metadata !14025, metadata !DIExpression()), !dbg !14024
  %0 = load i32, i32* %v.addr, align 4, !dbg !14024
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb3
  ], !dbg !14024

sw.default:                                       ; preds = %entry
  br label %sw.bb, !dbg !14024

sw.bb:                                            ; preds = %entry, %sw.default
  %1 = load i8*, i8** %cqe.addr, align 8, !dbg !14026
  %call = call i32 @mlxsw_pci_cqe0_lag_id_get(i8* %1) #10, !dbg !14026
  store i32 %call, i32* %retval, align 4, !dbg !14026
  br label %return, !dbg !14026

sw.bb1:                                           ; preds = %entry
  %2 = load i8*, i8** %cqe.addr, align 8, !dbg !14026
  %call2 = call i32 @mlxsw_pci_cqe12_lag_id_get(i8* %2) #10, !dbg !14026
  store i32 %call2, i32* %retval, align 4, !dbg !14026
  br label %return, !dbg !14026

sw.bb3:                                           ; preds = %entry
  %3 = load i8*, i8** %cqe.addr, align 8, !dbg !14026
  %call4 = call i32 @mlxsw_pci_cqe12_lag_id_get(i8* %3) #10, !dbg !14026
  store i32 %call4, i32* %retval, align 4, !dbg !14026
  br label %return, !dbg !14026

return:                                           ; preds = %sw.bb3, %sw.bb1, %sw.bb
  %4 = load i32, i32* %retval, align 4, !dbg !14024
  ret i32 %4, !dbg !14024
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_cqe_lag_subport_get(i32 %v, i8* %cqe) #0 !dbg !14028 {
entry:
  %retval = alloca i32, align 4
  %v.addr = alloca i32, align 4
  %cqe.addr = alloca i8*, align 8
  store i32 %v, i32* %v.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v.addr, metadata !14029, metadata !DIExpression()), !dbg !14030
  store i8* %cqe, i8** %cqe.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cqe.addr, metadata !14031, metadata !DIExpression()), !dbg !14030
  %0 = load i32, i32* %v.addr, align 4, !dbg !14030
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb3
  ], !dbg !14030

sw.default:                                       ; preds = %entry
  br label %sw.bb, !dbg !14030

sw.bb:                                            ; preds = %entry, %sw.default
  %1 = load i8*, i8** %cqe.addr, align 8, !dbg !14032
  %call = call i32 @mlxsw_pci_cqe0_lag_subport_get(i8* %1) #10, !dbg !14032
  store i32 %call, i32* %retval, align 4, !dbg !14032
  br label %return, !dbg !14032

sw.bb1:                                           ; preds = %entry
  %2 = load i8*, i8** %cqe.addr, align 8, !dbg !14032
  %call2 = call i32 @mlxsw_pci_cqe12_lag_subport_get(i8* %2) #10, !dbg !14032
  store i32 %call2, i32* %retval, align 4, !dbg !14032
  br label %return, !dbg !14032

sw.bb3:                                           ; preds = %entry
  %3 = load i8*, i8** %cqe.addr, align 8, !dbg !14032
  %call4 = call i32 @mlxsw_pci_cqe12_lag_subport_get(i8* %3) #10, !dbg !14032
  store i32 %call4, i32* %retval, align 4, !dbg !14032
  br label %return, !dbg !14032

return:                                           ; preds = %sw.bb3, %sw.bb1, %sw.bb
  %4 = load i32, i32* %retval, align 4, !dbg !14030
  ret i32 %4, !dbg !14030
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_cqe_system_port_get(i8* %buf) #0 !dbg !14034 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14035, metadata !DIExpression()), !dbg !14036
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14036
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_cqe_system_port_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !14036
  ret i32 %call, !dbg !14036
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_cqe_trap_id_get(i8* %buf) #0 !dbg !14037 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14038, metadata !DIExpression()), !dbg !14039
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14039
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_cqe_trap_id_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !14039
  ret i32 %call, !dbg !14039
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_cqe2_user_def_val_orig_pkt_len_get(i8* %buf) #0 !dbg !14040 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14041, metadata !DIExpression()), !dbg !14042
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14042
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_cqe2_user_def_val_orig_pkt_len_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !14042
  ret i32 %call, !dbg !14042
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_cqe2_mirror_reason_get(i8* %buf) #0 !dbg !14043 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14044, metadata !DIExpression()), !dbg !14045
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14045
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_cqe2_mirror_reason_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !14045
  ret i32 %call, !dbg !14045
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_cqe_byte_count_get(i8* %buf) #0 !dbg !14046 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14047, metadata !DIExpression()), !dbg !14048
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14048
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_cqe_byte_count_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !14048
  ret i32 %call, !dbg !14048
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_cqe_crc_get(i32 %v, i8* %cqe) #0 !dbg !14049 {
entry:
  %retval = alloca i32, align 4
  %v.addr = alloca i32, align 4
  %cqe.addr = alloca i8*, align 8
  store i32 %v, i32* %v.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v.addr, metadata !14050, metadata !DIExpression()), !dbg !14051
  store i8* %cqe, i8** %cqe.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cqe.addr, metadata !14052, metadata !DIExpression()), !dbg !14051
  %0 = load i32, i32* %v.addr, align 4, !dbg !14051
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb3
  ], !dbg !14051

sw.default:                                       ; preds = %entry
  br label %sw.bb, !dbg !14051

sw.bb:                                            ; preds = %entry, %sw.default
  %1 = load i8*, i8** %cqe.addr, align 8, !dbg !14053
  %call = call i32 @mlxsw_pci_cqe0_crc_get(i8* %1) #10, !dbg !14053
  store i32 %call, i32* %retval, align 4, !dbg !14053
  br label %return, !dbg !14053

sw.bb1:                                           ; preds = %entry
  %2 = load i8*, i8** %cqe.addr, align 8, !dbg !14053
  %call2 = call i32 @mlxsw_pci_cqe12_crc_get(i8* %2) #10, !dbg !14053
  store i32 %call2, i32* %retval, align 4, !dbg !14053
  br label %return, !dbg !14053

sw.bb3:                                           ; preds = %entry
  %3 = load i8*, i8** %cqe.addr, align 8, !dbg !14053
  %call4 = call i32 @mlxsw_pci_cqe12_crc_get(i8* %3) #10, !dbg !14053
  store i32 %call4, i32* %retval, align 4, !dbg !14053
  br label %return, !dbg !14053

return:                                           ; preds = %sw.bb3, %sw.bb1, %sw.bb
  %4 = load i32, i32* %retval, align 4, !dbg !14051
  ret i32 %4, !dbg !14051
}

; Function Attrs: noredzone
declare dso_local i8* @skb_put(%struct.sk_buff*, i32) #2

; Function Attrs: noredzone
declare dso_local void @mlxsw_core_skb_receive(%struct.mlxsw_core*, %struct.sk_buff*, %struct.mlxsw_rx_info*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_rdq_skb_alloc(%struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci_queue_elem_info* %elem_info) #0 !dbg !14055 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %elem_info.addr = alloca %struct.mlxsw_pci_queue_elem_info*, align 8
  %buf_len = alloca i64, align 8
  %wqe = alloca i8*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  %err = alloca i32, align 4
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !14058, metadata !DIExpression()), !dbg !14059
  store %struct.mlxsw_pci_queue_elem_info* %elem_info, %struct.mlxsw_pci_queue_elem_info** %elem_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue_elem_info** %elem_info.addr, metadata !14060, metadata !DIExpression()), !dbg !14061
  call void @llvm.dbg.declare(metadata i64* %buf_len, metadata !14062, metadata !DIExpression()), !dbg !14063
  store i64 10000, i64* %buf_len, align 8, !dbg !14063
  call void @llvm.dbg.declare(metadata i8** %wqe, metadata !14064, metadata !DIExpression()), !dbg !14065
  %0 = load %struct.mlxsw_pci_queue_elem_info*, %struct.mlxsw_pci_queue_elem_info** %elem_info.addr, align 8, !dbg !14066
  %elem = getelementptr inbounds %struct.mlxsw_pci_queue_elem_info, %struct.mlxsw_pci_queue_elem_info* %0, i32 0, i32 0, !dbg !14067
  %1 = load i8*, i8** %elem, align 8, !dbg !14067
  store i8* %1, i8** %wqe, align 8, !dbg !14065
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !14068, metadata !DIExpression()), !dbg !14069
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14070, metadata !DIExpression()), !dbg !14071
  %2 = load %struct.mlxsw_pci_queue_elem_info*, %struct.mlxsw_pci_queue_elem_info** %elem_info.addr, align 8, !dbg !14072
  %u = getelementptr inbounds %struct.mlxsw_pci_queue_elem_info, %struct.mlxsw_pci_queue_elem_info* %2, i32 0, i32 1, !dbg !14073
  %rdq = bitcast %union.anon.130* %u to %struct.anon.132*, !dbg !14074
  %skb1 = getelementptr inbounds %struct.anon.132, %struct.anon.132* %rdq, i32 0, i32 0, !dbg !14075
  store %struct.sk_buff* null, %struct.sk_buff** %skb1, align 8, !dbg !14076
  %3 = load i64, i64* %buf_len, align 8, !dbg !14077
  %conv = trunc i64 %3 to i32, !dbg !14077
  %call = call %struct.sk_buff* @netdev_alloc_skb_ip_align(%struct.net_device* null, i32 %conv) #10, !dbg !14078
  store %struct.sk_buff* %call, %struct.sk_buff** %skb, align 8, !dbg !14079
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !14080
  %tobool = icmp ne %struct.sk_buff* %4, null, !dbg !14080
  br i1 %tobool, label %if.end, label %if.then, !dbg !14082

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !14083
  br label %return, !dbg !14083

if.end:                                           ; preds = %entry
  %5 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !14084
  %6 = load i8*, i8** %wqe, align 8, !dbg !14085
  %7 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !14086
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %7, i32 0, i32 37, !dbg !14087
  %8 = load i8*, i8** %data, align 8, !dbg !14087
  %9 = load i64, i64* %buf_len, align 8, !dbg !14088
  %call2 = call i32 @mlxsw_pci_wqe_frag_map(%struct.mlxsw_pci* %5, i8* %6, i32 0, i8* %8, i64 %9, i32 2) #10, !dbg !14089
  store i32 %call2, i32* %err, align 4, !dbg !14090
  %10 = load i32, i32* %err, align 4, !dbg !14091
  %tobool3 = icmp ne i32 %10, 0, !dbg !14091
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !14093

if.then4:                                         ; preds = %if.end
  br label %err_frag_map, !dbg !14094

if.end5:                                          ; preds = %if.end
  %11 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !14095
  %12 = load %struct.mlxsw_pci_queue_elem_info*, %struct.mlxsw_pci_queue_elem_info** %elem_info.addr, align 8, !dbg !14096
  %u6 = getelementptr inbounds %struct.mlxsw_pci_queue_elem_info, %struct.mlxsw_pci_queue_elem_info* %12, i32 0, i32 1, !dbg !14097
  %rdq7 = bitcast %union.anon.130* %u6 to %struct.anon.132*, !dbg !14098
  %skb8 = getelementptr inbounds %struct.anon.132, %struct.anon.132* %rdq7, i32 0, i32 0, !dbg !14099
  store %struct.sk_buff* %11, %struct.sk_buff** %skb8, align 8, !dbg !14100
  store i32 0, i32* %retval, align 4, !dbg !14101
  br label %return, !dbg !14101

err_frag_map:                                     ; preds = %if.then4
  call void @llvm.dbg.label(metadata !14102), !dbg !14103
  %13 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !14104
  call void @dev_kfree_skb_any(%struct.sk_buff* %13) #10, !dbg !14105
  %14 = load i32, i32* %err, align 4, !dbg !14106
  store i32 %14, i32* %retval, align 4, !dbg !14107
  br label %return, !dbg !14107

return:                                           ; preds = %err_frag_map, %if.end5, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !14108
  ret i32 %15, !dbg !14108
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_queue_doorbell_producer_ring(%struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci_queue* %q) #0 !dbg !14109 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %q.addr = alloca %struct.mlxsw_pci_queue*, align 8
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !14110, metadata !DIExpression()), !dbg !14111
  store %struct.mlxsw_pci_queue* %q, %struct.mlxsw_pci_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q.addr, metadata !14112, metadata !DIExpression()), !dbg !14113
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #12, !dbg !14114, !srcloc !14115
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !14116
  %1 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !14117
  %2 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !14118
  %producer_counter = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %2, i32 0, i32 3, !dbg !14119
  %3 = load i16, i16* %producer_counter, align 8, !dbg !14119
  call void @__mlxsw_pci_queue_doorbell_set(%struct.mlxsw_pci* %0, %struct.mlxsw_pci_queue* %1, i16 zeroext %3) #10, !dbg !14120
  ret void, !dbg !14121
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_cqe0_lag_get(i8* %buf) #0 !dbg !14122 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14123, metadata !DIExpression()), !dbg !14124
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14124
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_cqe0_lag_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !14124
  ret i32 %call, !dbg !14124
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_cqe12_lag_get(i8* %buf) #0 !dbg !14125 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14126, metadata !DIExpression()), !dbg !14127
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14127
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_cqe12_lag_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !14127
  ret i32 %call, !dbg !14127
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_cqe0_lag_id_get(i8* %buf) #0 !dbg !14128 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14129, metadata !DIExpression()), !dbg !14130
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14130
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_cqe0_lag_id_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !14130
  ret i32 %call, !dbg !14130
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_cqe12_lag_id_get(i8* %buf) #0 !dbg !14131 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14132, metadata !DIExpression()), !dbg !14133
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14133
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_cqe12_lag_id_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !14133
  ret i32 %call, !dbg !14133
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_cqe0_lag_subport_get(i8* %buf) #0 !dbg !14134 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14135, metadata !DIExpression()), !dbg !14136
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14136
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_cqe0_lag_subport_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !14136
  ret i32 %call, !dbg !14136
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_cqe12_lag_subport_get(i8* %buf) #0 !dbg !14137 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14138, metadata !DIExpression()), !dbg !14139
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14139
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_cqe12_lag_subport_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !14139
  ret i32 %call, !dbg !14139
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_cqe0_crc_get(i8* %buf) #0 !dbg !14140 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14141, metadata !DIExpression()), !dbg !14142
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14142
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_cqe0_crc_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !14142
  ret i32 %call, !dbg !14142
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_cqe12_crc_get(i8* %buf) #0 !dbg !14143 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14144, metadata !DIExpression()), !dbg !14145
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14145
  %call = call i32 @__mlxsw_item_get32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_cqe12_crc_item to %struct.mlxsw_item*), i16 zeroext 0) #10, !dbg !14145
  ret i32 %call, !dbg !14145
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @netdev_alloc_skb_ip_align(%struct.net_device* %dev, i32 %length) #0 !dbg !14146 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %length.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14149, metadata !DIExpression()), !dbg !14150
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !14151, metadata !DIExpression()), !dbg !14152
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14153
  %1 = load i32, i32* %length.addr, align 4, !dbg !14154
  %call = call %struct.sk_buff* @__netdev_alloc_skb_ip_align(%struct.net_device* %0, i32 %1, i32 2592) #10, !dbg !14155
  ret %struct.sk_buff* %call, !dbg !14156
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_wqe_frag_map(%struct.mlxsw_pci* %mlxsw_pci, i8* %wqe, i32 %index, i8* %frag_data, i64 %frag_len, i32 %direction) #0 !dbg !8481 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %wqe.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %frag_data.addr = alloca i8*, align 8
  %frag_len.addr = alloca i64, align 8
  %direction.addr = alloca i32, align 4
  %pdev = alloca %struct.pci_dev*, align 8
  %mapaddr = alloca i64, align 8
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !14157, metadata !DIExpression()), !dbg !14158
  store i8* %wqe, i8** %wqe.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %wqe.addr, metadata !14159, metadata !DIExpression()), !dbg !14160
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !14161, metadata !DIExpression()), !dbg !14162
  store i8* %frag_data, i8** %frag_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %frag_data.addr, metadata !14163, metadata !DIExpression()), !dbg !14164
  store i64 %frag_len, i64* %frag_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %frag_len.addr, metadata !14165, metadata !DIExpression()), !dbg !14166
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !14167, metadata !DIExpression()), !dbg !14168
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !14169, metadata !DIExpression()), !dbg !14170
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !14171
  %pdev1 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %0, i32 0, i32 0, !dbg !14172
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !14172
  store %struct.pci_dev* %1, %struct.pci_dev** %pdev, align 8, !dbg !14170
  call void @llvm.dbg.declare(metadata i64* %mapaddr, metadata !14173, metadata !DIExpression()), !dbg !14174
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !14175
  %3 = load i8*, i8** %frag_data.addr, align 8, !dbg !14176
  %4 = load i64, i64* %frag_len.addr, align 8, !dbg !14177
  %5 = load i32, i32* %direction.addr, align 4, !dbg !14178
  %call = call i64 @pci_map_single(%struct.pci_dev* %2, i8* %3, i64 %4, i32 %5) #10, !dbg !14179
  store i64 %call, i64* %mapaddr, align 8, !dbg !14180
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !14181
  %7 = load i64, i64* %mapaddr, align 8, !dbg !14181
  %call2 = call i32 @pci_dma_mapping_error(%struct.pci_dev* %6, i64 %7) #10, !dbg !14181
  %tobool = icmp ne i32 %call2, 0, !dbg !14181
  %lnot = xor i1 %tobool, true, !dbg !14181
  %lnot3 = xor i1 %lnot, true, !dbg !14181
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !14181
  %conv = sext i32 %lnot.ext to i64, !dbg !14181
  %tobool4 = icmp ne i64 %conv, 0, !dbg !14181
  br i1 %tobool4, label %if.then, label %if.end8, !dbg !14183

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !14184

do.body:                                          ; preds = %if.then
  %call5 = call i32 @___ratelimit(%struct.ratelimit_state* @mlxsw_pci_wqe_frag_map._rs, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.mlxsw_pci_wqe_frag_map, i64 0, i64 0)) #10, !dbg !14186
  %tobool6 = icmp ne i32 %call5, 0, !dbg !14186
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !14189

if.then7:                                         ; preds = %do.body
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !14186
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 41, !dbg !14186
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.229, i64 0, i64 0)) #11, !dbg !14186
  br label %if.end, !dbg !14186

if.end:                                           ; preds = %if.then7, %do.body
  br label %do.end, !dbg !14189

do.end:                                           ; preds = %if.end
  store i32 -5, i32* %retval, align 4, !dbg !14190
  br label %return, !dbg !14190

if.end8:                                          ; preds = %entry
  %9 = load i8*, i8** %wqe.addr, align 8, !dbg !14191
  %10 = load i32, i32* %index.addr, align 4, !dbg !14192
  %conv9 = trunc i32 %10 to i16, !dbg !14192
  %11 = load i64, i64* %mapaddr, align 8, !dbg !14193
  call void @mlxsw_pci_wqe_address_set(i8* %9, i16 zeroext %conv9, i64 %11) #10, !dbg !14194
  %12 = load i8*, i8** %wqe.addr, align 8, !dbg !14195
  %13 = load i32, i32* %index.addr, align 4, !dbg !14196
  %conv10 = trunc i32 %13 to i16, !dbg !14196
  %14 = load i64, i64* %frag_len.addr, align 8, !dbg !14197
  %conv11 = trunc i64 %14 to i16, !dbg !14197
  call void @mlxsw_pci_wqe_byte_count_set(i8* %12, i16 zeroext %conv10, i16 zeroext %conv11) #10, !dbg !14198
  store i32 0, i32* %retval, align 4, !dbg !14199
  br label %return, !dbg !14199

return:                                           ; preds = %if.end8, %do.end
  %15 = load i32, i32* %retval, align 4, !dbg !14200
  ret i32 %15, !dbg !14200
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @__netdev_alloc_skb_ip_align(%struct.net_device* %dev, i32 %length, i32 %gfp) #0 !dbg !14201 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %length.addr = alloca i32, align 4
  %gfp.addr = alloca i32, align 4
  %skb = alloca %struct.sk_buff*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14204, metadata !DIExpression()), !dbg !14205
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !14206, metadata !DIExpression()), !dbg !14207
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !14208, metadata !DIExpression()), !dbg !14209
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !14210, metadata !DIExpression()), !dbg !14211
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14212
  %1 = load i32, i32* %length.addr, align 4, !dbg !14213
  %add = add i32 %1, 0, !dbg !14214
  %2 = load i32, i32* %gfp.addr, align 4, !dbg !14215
  %call = call %struct.sk_buff* @__netdev_alloc_skb(%struct.net_device* %0, i32 %add, i32 %2) #10, !dbg !14216
  store %struct.sk_buff* %call, %struct.sk_buff** %skb, align 8, !dbg !14211
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !14217
  ret %struct.sk_buff* %3, !dbg !14218
}

; Function Attrs: noredzone
declare dso_local %struct.sk_buff* @__netdev_alloc_skb(%struct.net_device*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @pci_map_single(%struct.pci_dev* %hwdev, i8* %ptr, i64 %size, i32 %direction) #0 !dbg !14219 {
entry:
  %hwdev.addr = alloca %struct.pci_dev*, align 8
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %direction.addr = alloca i32, align 4
  store %struct.pci_dev* %hwdev, %struct.pci_dev** %hwdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %hwdev.addr, metadata !14222, metadata !DIExpression()), !dbg !14223
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !14224, metadata !DIExpression()), !dbg !14225
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14226, metadata !DIExpression()), !dbg !14227
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !14228, metadata !DIExpression()), !dbg !14229
  %0 = load %struct.pci_dev*, %struct.pci_dev** %hwdev.addr, align 8, !dbg !14230
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !14230
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !14230
  %2 = load i64, i64* %size.addr, align 8, !dbg !14230
  %3 = load i32, i32* %direction.addr, align 4, !dbg !14230
  %call = call i64 @dma_map_single_attrs(%struct.device* %dev, i8* %1, i64 %2, i32 %3, i64 0) #10, !dbg !14230
  ret i64 %call, !dbg !14231
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_dma_mapping_error(%struct.pci_dev* %pdev, i64 %dma_addr) #0 !dbg !14232 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %dma_addr.addr = alloca i64, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !14235, metadata !DIExpression()), !dbg !14236
  store i64 %dma_addr, i64* %dma_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_addr.addr, metadata !14237, metadata !DIExpression()), !dbg !14238
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !14239
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !14240
  %1 = load i64, i64* %dma_addr.addr, align 8, !dbg !14241
  %call = call i32 @dma_mapping_error(%struct.device* %dev, i64 %1) #10, !dbg !14242
  ret i32 %call, !dbg !14243
}

; Function Attrs: noredzone
declare dso_local i32 @___ratelimit(%struct.ratelimit_state*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_wqe_address_set(i8* %buf, i16 zeroext %index, i64 %val) #0 !dbg !14244 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i64, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14245, metadata !DIExpression()), !dbg !14246
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !14247, metadata !DIExpression()), !dbg !14246
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !14248, metadata !DIExpression()), !dbg !14246
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14246
  %1 = load i16, i16* %index.addr, align 2, !dbg !14246
  %2 = load i64, i64* %val.addr, align 8, !dbg !14246
  call void @__mlxsw_item_set64(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_wqe_address_item to %struct.mlxsw_item*), i16 zeroext %1, i64 %2) #10, !dbg !14246
  ret void, !dbg !14246
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_wqe_byte_count_set(i8* %buf, i16 zeroext %index, i16 zeroext %val) #0 !dbg !14249 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i16, align 2
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14252, metadata !DIExpression()), !dbg !14253
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !14254, metadata !DIExpression()), !dbg !14253
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !14255, metadata !DIExpression()), !dbg !14253
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14253
  %1 = load i16, i16* %index.addr, align 2, !dbg !14253
  %2 = load i16, i16* %val.addr, align 2, !dbg !14253
  call void @__mlxsw_item_set16(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_wqe_byte_count_item to %struct.mlxsw_item*), i16 zeroext %1, i16 zeroext %2) #10, !dbg !14253
  ret void, !dbg !14253
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @dma_map_single_attrs(%struct.device* %dev, i8* %ptr, i64 %size, i32 %dir, i64 %attrs) #0 !dbg !8486 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  %__ret_warn_once = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp39 = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14256, metadata !DIExpression()), !dbg !14257
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !14258, metadata !DIExpression()), !dbg !14259
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14260, metadata !DIExpression()), !dbg !14261
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !14262, metadata !DIExpression()), !dbg !14263
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !14264, metadata !DIExpression()), !dbg !14265
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_once, metadata !14266, metadata !DIExpression()), !dbg !14269
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !14269
  %call = call zeroext i1 @is_vmalloc_addr(i8* %0) #10, !dbg !14269
  %lnot = xor i1 %call, true, !dbg !14269
  %lnot1 = xor i1 %lnot, true, !dbg !14269
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !14269
  store i32 %lnot.ext, i32* %__ret_warn_once, align 4, !dbg !14269
  %1 = load i32, i32* %__ret_warn_once, align 4, !dbg !14270
  %tobool = icmp ne i32 %1, 0, !dbg !14270
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !14270

land.rhs:                                         ; preds = %entry
  %2 = load i8, i8* @dma_map_single_attrs.__warned, align 1, !dbg !14270
  %tobool2 = trunc i8 %2 to i1, !dbg !14270
  %lnot3 = xor i1 %tobool2, true, !dbg !14270
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot3, %land.rhs ], !dbg !14272
  %lnot5 = xor i1 %3, true, !dbg !14270
  %lnot7 = xor i1 %lnot5, true, !dbg !14270
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !14270
  %conv = sext i32 %lnot.ext8 to i64, !dbg !14270
  %tobool9 = icmp ne i64 %conv, 0, !dbg !14270
  br i1 %tobool9, label %if.then, label %if.end38, !dbg !14269

if.then:                                          ; preds = %land.end
  store i8 1, i8* @dma_map_single_attrs.__warned, align 1, !dbg !14273
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !14275, metadata !DIExpression()), !dbg !14277
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !14277
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !14278
  %tobool10 = icmp ne i32 %4, 0, !dbg !14278
  %lnot11 = xor i1 %tobool10, true, !dbg !14278
  %lnot13 = xor i1 %lnot11, true, !dbg !14278
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !14278
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !14278
  %tobool16 = icmp ne i64 %conv15, 0, !dbg !14278
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !14277

if.then17:                                        ; preds = %if.then
  br label %do.body, !dbg !14278

do.body:                                          ; preds = %if.then17
  br label %do.body18, !dbg !14280

do.body18:                                        ; preds = %do.body
  br label %do.end, !dbg !14282

do.end:                                           ; preds = %do.body18
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14280
  %call19 = call i8* @dev_driver_string(%struct.device* %5) #10, !dbg !14280
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14280
  %call20 = call i8* @dev_name(%struct.device* %6) #10, !dbg !14280
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.230, i64 0, i64 0), i8* %call19, i8* %call20) #10, !dbg !14280
  br label %do.body21, !dbg !14280

do.body21:                                        ; preds = %do.end
  br label %do.body22, !dbg !14284

do.body22:                                        ; preds = %do.body21
  br label %do.end23, !dbg !14286

do.end23:                                         ; preds = %do.body22
  br label %do.body24, !dbg !14284

do.body24:                                        ; preds = %do.end23
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.231, i64 0, i64 0), i32 276, i32 2313, i64 12) #12, !dbg !14288, !srcloc !14290
  br label %do.end25, !dbg !14288

do.end25:                                         ; preds = %do.body24
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 231) #12, !dbg !14291, !srcloc !14293
  br label %do.body26, !dbg !14284

do.body26:                                        ; preds = %do.end25
  br label %do.end27, !dbg !14294

do.end27:                                         ; preds = %do.body26
  br label %do.end28, !dbg !14284

do.end28:                                         ; preds = %do.end27
  br label %do.body29, !dbg !14280

do.body29:                                        ; preds = %do.end28
  br label %do.end30, !dbg !14296

do.end30:                                         ; preds = %do.body29
  br label %do.end31, !dbg !14280

do.end31:                                         ; preds = %do.end30
  br label %if.end, !dbg !14280

if.end:                                           ; preds = %do.end31, %if.then
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !14277
  %tobool32 = icmp ne i32 %7, 0, !dbg !14277
  %lnot33 = xor i1 %tobool32, true, !dbg !14277
  %lnot35 = xor i1 %lnot33, true, !dbg !14277
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !14277
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !14277
  store i64 %conv37, i64* %tmp, align 8, !dbg !14278
  %8 = load i64, i64* %tmp, align 8, !dbg !14277
  br label %if.end38, !dbg !14273

if.end38:                                         ; preds = %if.end, %land.end
  %9 = load i32, i32* %__ret_warn_once, align 4, !dbg !14269
  %tobool40 = icmp ne i32 %9, 0, !dbg !14269
  %lnot41 = xor i1 %tobool40, true, !dbg !14269
  %lnot43 = xor i1 %lnot41, true, !dbg !14269
  %lnot.ext44 = zext i1 %lnot43 to i32, !dbg !14269
  %conv45 = sext i32 %lnot.ext44 to i64, !dbg !14269
  store i64 %conv45, i64* %tmp39, align 8, !dbg !14270
  %10 = load i64, i64* %tmp39, align 8, !dbg !14269
  %tobool46 = icmp ne i64 %10, 0, !dbg !14298
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !14299

if.then47:                                        ; preds = %if.end38
  store i64 -1, i64* %retval, align 8, !dbg !14300
  br label %return, !dbg !14300

if.end48:                                         ; preds = %if.end38
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14301
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !14302
  %13 = load i64, i64* %size.addr, align 8, !dbg !14303
  call void @debug_dma_map_single(%struct.device* %11, i8* %12, i64 %13) #10, !dbg !14304
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14305
  %15 = load i64, i64* @vmemmap_base, align 8, !dbg !14306
  %16 = inttoptr i64 %15 to %struct.page*, !dbg !14306
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !14306
  %18 = ptrtoint i8* %17 to i64, !dbg !14306
  %call49 = call i64 @__phys_addr_nodebug(i64 %18) #10, !dbg !14306
  %shr = lshr i64 %call49, 12, !dbg !14306
  %add.ptr = getelementptr %struct.page, %struct.page* %16, i64 %shr, !dbg !14306
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !14307
  %20 = ptrtoint i8* %19 to i64, !dbg !14307
  %and = and i64 %20, 4095, !dbg !14307
  %21 = load i64, i64* %size.addr, align 8, !dbg !14308
  %22 = load i32, i32* %dir.addr, align 4, !dbg !14309
  %23 = load i64, i64* %attrs.addr, align 8, !dbg !14310
  %call50 = call i64 @dma_map_page_attrs(%struct.device* %14, %struct.page* %add.ptr, i64 %and, i64 %21, i32 %22, i64 %23) #10, !dbg !14311
  store i64 %call50, i64* %retval, align 8, !dbg !14312
  br label %return, !dbg !14312

return:                                           ; preds = %if.end48, %if.then47
  %24 = load i64, i64* %retval, align 8, !dbg !14313
  ret i64 %24, !dbg !14313
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @is_vmalloc_addr(i8*) #2

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i8* @dev_driver_string(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debug_dma_map_single(%struct.device* %dev, i8* %addr, i64 %len) #0 !dbg !14314 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14317, metadata !DIExpression()), !dbg !14318
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !14319, metadata !DIExpression()), !dbg !14320
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !14321, metadata !DIExpression()), !dbg !14322
  ret void, !dbg !14323
}

; Function Attrs: noredzone
declare dso_local i64 @dma_map_page_attrs(%struct.device*, %struct.page*, i64, i64, i32, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__phys_addr_nodebug(i64 %x) #0 !dbg !14324 {
entry:
  %x.addr = alloca i64, align 8
  %y = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !14328, metadata !DIExpression()), !dbg !14329
  call void @llvm.dbg.declare(metadata i64* %y, metadata !14330, metadata !DIExpression()), !dbg !14331
  %0 = load i64, i64* %x.addr, align 8, !dbg !14332
  %sub = sub i64 %0, -2147483648, !dbg !14333
  store i64 %sub, i64* %y, align 8, !dbg !14331
  %1 = load i64, i64* %y, align 8, !dbg !14334
  %2 = load i64, i64* %x.addr, align 8, !dbg !14335
  %3 = load i64, i64* %y, align 8, !dbg !14336
  %cmp = icmp ugt i64 %2, %3, !dbg !14337
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !14338

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* @phys_base, align 8, !dbg !14339
  br label %cond.end, !dbg !14338

cond.false:                                       ; preds = %entry
  %5 = load i64, i64* @page_offset_base, align 8, !dbg !14340
  %sub1 = sub i64 -2147483648, %5, !dbg !14341
  br label %cond.end, !dbg !14338

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ %sub1, %cond.false ], !dbg !14338
  %add = add i64 %1, %cond, !dbg !14342
  store i64 %add, i64* %x.addr, align 8, !dbg !14343
  %6 = load i64, i64* %x.addr, align 8, !dbg !14344
  ret i64 %6, !dbg !14345
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_mapping_error(%struct.device* %dev, i64 %dma_addr) #0 !dbg !14346 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %dma_addr.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14349, metadata !DIExpression()), !dbg !14350
  store i64 %dma_addr, i64* %dma_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_addr.addr, metadata !14351, metadata !DIExpression()), !dbg !14352
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14353
  %1 = load i64, i64* %dma_addr.addr, align 8, !dbg !14354
  call void @debug_dma_mapping_error(%struct.device* %0, i64 %1) #10, !dbg !14355
  %2 = load i64, i64* %dma_addr.addr, align 8, !dbg !14356
  %cmp = icmp eq i64 %2, -1, !dbg !14358
  br i1 %cmp, label %if.then, label %if.end, !dbg !14359

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !14360
  br label %return, !dbg !14360

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !14361
  br label %return, !dbg !14361

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !14362
  ret i32 %3, !dbg !14362
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debug_dma_mapping_error(%struct.device* %dev, i64 %dma_addr) #0 !dbg !14363 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %dma_addr.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14366, metadata !DIExpression()), !dbg !14367
  store i64 %dma_addr, i64* %dma_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_addr.addr, metadata !14368, metadata !DIExpression()), !dbg !14369
  ret void, !dbg !14370
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__mlxsw_item_set16(i8* %buf, %struct.mlxsw_item* %item, i16 zeroext %index, i16 zeroext %val) #0 !dbg !14371 {
entry:
  %buf.addr = alloca i8*, align 8
  %item.addr = alloca %struct.mlxsw_item*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i16, align 2
  %offset = alloca i32, align 4
  %b = alloca i16*, align 8
  %mask = alloca i16, align 2
  %tmp = alloca i16, align 2
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14374, metadata !DIExpression()), !dbg !14375
  store %struct.mlxsw_item* %item, %struct.mlxsw_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_item** %item.addr, metadata !14376, metadata !DIExpression()), !dbg !14377
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !14378, metadata !DIExpression()), !dbg !14379
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !14380, metadata !DIExpression()), !dbg !14381
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !14382, metadata !DIExpression()), !dbg !14383
  %0 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14384
  %1 = load i16, i16* %index.addr, align 2, !dbg !14385
  %call = call i32 @__mlxsw_item_offset(%struct.mlxsw_item* %0, i16 zeroext %1, i64 2) #10, !dbg !14386
  store i32 %call, i32* %offset, align 4, !dbg !14383
  call void @llvm.dbg.declare(metadata i16** %b, metadata !14387, metadata !DIExpression()), !dbg !14388
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !14389
  %3 = bitcast i8* %2 to i16*, !dbg !14390
  store i16* %3, i16** %b, align 8, !dbg !14388
  call void @llvm.dbg.declare(metadata i16* %mask, metadata !14391, metadata !DIExpression()), !dbg !14392
  %4 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14393
  %size = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %4, i32 0, i32 6, !dbg !14393
  %bits = bitcast %union.anon.140* %size to i8*, !dbg !14393
  %5 = load i8, i8* %bits, align 2, !dbg !14393
  %conv = zext i8 %5 to i32, !dbg !14393
  %sub = sub i32 %conv, 1, !dbg !14393
  %sub1 = sub i32 63, %sub, !dbg !14393
  %sh_prom = zext i32 %sub1 to i64, !dbg !14393
  %shr = lshr i64 -1, %sh_prom, !dbg !14393
  %and = and i64 -1, %shr, !dbg !14393
  %add = add i64 0, %and, !dbg !14393
  %6 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14394
  %shift = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %6, i32 0, i32 3, !dbg !14395
  %7 = load i8, i8* %shift, align 2, !dbg !14395
  %conv2 = zext i8 %7 to i32, !dbg !14394
  %sh_prom3 = zext i32 %conv2 to i64, !dbg !14396
  %shl = shl i64 %add, %sh_prom3, !dbg !14396
  %conv4 = trunc i64 %shl to i16, !dbg !14393
  store i16 %conv4, i16* %mask, align 2, !dbg !14392
  call void @llvm.dbg.declare(metadata i16* %tmp, metadata !14397, metadata !DIExpression()), !dbg !14398
  %8 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14399
  %no_real_shift = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %8, i32 0, i32 5, !dbg !14401
  %9 = load i8, i8* %no_real_shift, align 8, !dbg !14401
  %tobool = trunc i8 %9 to i1, !dbg !14401
  br i1 %tobool, label %if.end, label %if.then, !dbg !14402

if.then:                                          ; preds = %entry
  %10 = load %struct.mlxsw_item*, %struct.mlxsw_item** %item.addr, align 8, !dbg !14403
  %shift5 = getelementptr inbounds %struct.mlxsw_item, %struct.mlxsw_item* %10, i32 0, i32 3, !dbg !14404
  %11 = load i8, i8* %shift5, align 2, !dbg !14404
  %conv6 = zext i8 %11 to i32, !dbg !14403
  %12 = load i16, i16* %val.addr, align 2, !dbg !14405
  %conv7 = zext i16 %12 to i32, !dbg !14405
  %shl8 = shl i32 %conv7, %conv6, !dbg !14405
  %conv9 = trunc i32 %shl8 to i16, !dbg !14405
  store i16 %conv9, i16* %val.addr, align 2, !dbg !14405
  br label %if.end, !dbg !14406

if.end:                                           ; preds = %if.then, %entry
  %13 = load i16, i16* %mask, align 2, !dbg !14407
  %conv10 = zext i16 %13 to i32, !dbg !14407
  %14 = load i16, i16* %val.addr, align 2, !dbg !14408
  %conv11 = zext i16 %14 to i32, !dbg !14408
  %and12 = and i32 %conv11, %conv10, !dbg !14408
  %conv13 = trunc i32 %and12 to i16, !dbg !14408
  store i16 %conv13, i16* %val.addr, align 2, !dbg !14408
  %15 = load i16*, i16** %b, align 8, !dbg !14409
  %16 = load i32, i32* %offset, align 4, !dbg !14409
  %idxprom = zext i32 %16 to i64, !dbg !14409
  %arrayidx = getelementptr i16, i16* %15, i64 %idxprom, !dbg !14409
  %17 = load i16, i16* %arrayidx, align 2, !dbg !14409
  %18 = call i1 @llvm.is.constant.i16(i16 %17), !dbg !14409
  br i1 %18, label %cond.true, label %cond.false, !dbg !14409

cond.true:                                        ; preds = %if.end
  %19 = load i16*, i16** %b, align 8, !dbg !14409
  %20 = load i32, i32* %offset, align 4, !dbg !14409
  %idxprom14 = zext i32 %20 to i64, !dbg !14409
  %arrayidx15 = getelementptr i16, i16* %19, i64 %idxprom14, !dbg !14409
  %21 = load i16, i16* %arrayidx15, align 2, !dbg !14409
  %conv16 = zext i16 %21 to i32, !dbg !14409
  %and17 = and i32 %conv16, 255, !dbg !14409
  %shl18 = shl i32 %and17, 8, !dbg !14409
  %22 = load i16*, i16** %b, align 8, !dbg !14409
  %23 = load i32, i32* %offset, align 4, !dbg !14409
  %idxprom19 = zext i32 %23 to i64, !dbg !14409
  %arrayidx20 = getelementptr i16, i16* %22, i64 %idxprom19, !dbg !14409
  %24 = load i16, i16* %arrayidx20, align 2, !dbg !14409
  %conv21 = zext i16 %24 to i32, !dbg !14409
  %and22 = and i32 %conv21, 65280, !dbg !14409
  %shr23 = ashr i32 %and22, 8, !dbg !14409
  %or = or i32 %shl18, %shr23, !dbg !14409
  %conv24 = trunc i32 %or to i16, !dbg !14409
  %conv25 = zext i16 %conv24 to i32, !dbg !14409
  br label %cond.end, !dbg !14409

cond.false:                                       ; preds = %if.end
  %25 = load i16*, i16** %b, align 8, !dbg !14409
  %26 = load i32, i32* %offset, align 4, !dbg !14409
  %idxprom26 = zext i32 %26 to i64, !dbg !14409
  %arrayidx27 = getelementptr i16, i16* %25, i64 %idxprom26, !dbg !14409
  %27 = load i16, i16* %arrayidx27, align 2, !dbg !14409
  %call28 = call zeroext i16 @__fswab16(i16 zeroext %27) #13, !dbg !14409
  %conv29 = zext i16 %call28 to i32, !dbg !14409
  br label %cond.end, !dbg !14409

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv25, %cond.true ], [ %conv29, %cond.false ], !dbg !14409
  %conv30 = trunc i32 %cond to i16, !dbg !14409
  store i16 %conv30, i16* %tmp, align 2, !dbg !14410
  %28 = load i16, i16* %mask, align 2, !dbg !14411
  %conv31 = zext i16 %28 to i32, !dbg !14411
  %neg = xor i32 %conv31, -1, !dbg !14412
  %29 = load i16, i16* %tmp, align 2, !dbg !14413
  %conv32 = zext i16 %29 to i32, !dbg !14413
  %and33 = and i32 %conv32, %neg, !dbg !14413
  %conv34 = trunc i32 %and33 to i16, !dbg !14413
  store i16 %conv34, i16* %tmp, align 2, !dbg !14413
  %30 = load i16, i16* %val.addr, align 2, !dbg !14414
  %conv35 = zext i16 %30 to i32, !dbg !14414
  %31 = load i16, i16* %tmp, align 2, !dbg !14415
  %conv36 = zext i16 %31 to i32, !dbg !14415
  %or37 = or i32 %conv36, %conv35, !dbg !14415
  %conv38 = trunc i32 %or37 to i16, !dbg !14415
  store i16 %conv38, i16* %tmp, align 2, !dbg !14415
  %32 = load i16, i16* %tmp, align 2, !dbg !14416
  %33 = call i1 @llvm.is.constant.i16(i16 %32), !dbg !14416
  br i1 %33, label %cond.true39, label %cond.false49, !dbg !14416

cond.true39:                                      ; preds = %cond.end
  %34 = load i16, i16* %tmp, align 2, !dbg !14416
  %conv40 = zext i16 %34 to i32, !dbg !14416
  %and41 = and i32 %conv40, 255, !dbg !14416
  %shl42 = shl i32 %and41, 8, !dbg !14416
  %35 = load i16, i16* %tmp, align 2, !dbg !14416
  %conv43 = zext i16 %35 to i32, !dbg !14416
  %and44 = and i32 %conv43, 65280, !dbg !14416
  %shr45 = ashr i32 %and44, 8, !dbg !14416
  %or46 = or i32 %shl42, %shr45, !dbg !14416
  %conv47 = trunc i32 %or46 to i16, !dbg !14416
  %conv48 = zext i16 %conv47 to i32, !dbg !14416
  br label %cond.end52, !dbg !14416

cond.false49:                                     ; preds = %cond.end
  %36 = load i16, i16* %tmp, align 2, !dbg !14416
  %call50 = call zeroext i16 @__fswab16(i16 zeroext %36) #13, !dbg !14416
  %conv51 = zext i16 %call50 to i32, !dbg !14416
  br label %cond.end52, !dbg !14416

cond.end52:                                       ; preds = %cond.false49, %cond.true39
  %cond53 = phi i32 [ %conv48, %cond.true39 ], [ %conv51, %cond.false49 ], !dbg !14416
  %conv54 = trunc i32 %cond53 to i16, !dbg !14416
  %37 = load i16*, i16** %b, align 8, !dbg !14417
  %38 = load i32, i32* %offset, align 4, !dbg !14418
  %idxprom55 = zext i32 %38 to i64, !dbg !14417
  %arrayidx56 = getelementptr i16, i16* %37, i64 %idxprom55, !dbg !14417
  store i16 %conv54, i16* %arrayidx56, align 2, !dbg !14419
  ret void, !dbg !14420
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_sdq_init(%struct.mlxsw_pci* %mlxsw_pci, i8* %mbox, %struct.mlxsw_pci_queue* %q) #0 !dbg !14421 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %mbox.addr = alloca i8*, align 8
  %q.addr = alloca %struct.mlxsw_pci_queue*, align 8
  %tclass = alloca i32, align 4
  %i = alloca i32, align 4
  %err = alloca i32, align 4
  %mapaddr = alloca i64, align 8
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !14422, metadata !DIExpression()), !dbg !14423
  store i8* %mbox, i8** %mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mbox.addr, metadata !14424, metadata !DIExpression()), !dbg !14425
  store %struct.mlxsw_pci_queue* %q, %struct.mlxsw_pci_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q.addr, metadata !14426, metadata !DIExpression()), !dbg !14427
  call void @llvm.dbg.declare(metadata i32* %tclass, metadata !14428, metadata !DIExpression()), !dbg !14429
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14430, metadata !DIExpression()), !dbg !14431
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14432, metadata !DIExpression()), !dbg !14433
  %0 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !14434
  %producer_counter = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %0, i32 0, i32 3, !dbg !14435
  store i16 0, i16* %producer_counter, align 8, !dbg !14436
  %1 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !14437
  %consumer_counter = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %1, i32 0, i32 4, !dbg !14438
  store i16 0, i16* %consumer_counter, align 2, !dbg !14439
  %2 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !14440
  %num = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %2, i32 0, i32 6, !dbg !14441
  %3 = load i8, i8* %num, align 2, !dbg !14441
  %conv = zext i8 %3 to i32, !dbg !14440
  %cmp = icmp eq i32 %conv, 0, !dbg !14442
  %4 = zext i1 %cmp to i64, !dbg !14440
  %cond = select i1 %cmp, i32 0, i32 3, !dbg !14440
  store i32 %cond, i32* %tclass, align 4, !dbg !14443
  %5 = load i8*, i8** %mbox.addr, align 8, !dbg !14444
  %6 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !14445
  %num2 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %6, i32 0, i32 6, !dbg !14446
  %7 = load i8, i8* %num2, align 2, !dbg !14446
  %conv3 = zext i8 %7 to i32, !dbg !14445
  call void @mlxsw_cmd_mbox_sw2hw_dq_cq_set(i8* %5, i32 %conv3) #10, !dbg !14447
  %8 = load i8*, i8** %mbox.addr, align 8, !dbg !14448
  %9 = load i32, i32* %tclass, align 4, !dbg !14449
  call void @mlxsw_cmd_mbox_sw2hw_dq_sdq_tclass_set(i8* %8, i32 %9) #10, !dbg !14450
  %10 = load i8*, i8** %mbox.addr, align 8, !dbg !14451
  call void @mlxsw_cmd_mbox_sw2hw_dq_log2_dq_sz_set(i8* %10, i32 3) #10, !dbg !14452
  store i32 0, i32* %i, align 4, !dbg !14453
  br label %for.cond, !dbg !14455

for.cond:                                         ; preds = %for.inc, %entry
  %11 = load i32, i32* %i, align 4, !dbg !14456
  %cmp4 = icmp slt i32 %11, 8, !dbg !14458
  br i1 %cmp4, label %for.body, label %for.end, !dbg !14459

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %mapaddr, metadata !14460, metadata !DIExpression()), !dbg !14462
  %12 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !14463
  %13 = load i32, i32* %i, align 4, !dbg !14464
  %call = call i64 @__mlxsw_pci_queue_page_get(%struct.mlxsw_pci_queue* %12, i32 %13) #10, !dbg !14465
  store i64 %call, i64* %mapaddr, align 8, !dbg !14462
  %14 = load i8*, i8** %mbox.addr, align 8, !dbg !14466
  %15 = load i32, i32* %i, align 4, !dbg !14467
  %conv6 = trunc i32 %15 to i16, !dbg !14467
  %16 = load i64, i64* %mapaddr, align 8, !dbg !14468
  call void @mlxsw_cmd_mbox_sw2hw_dq_pa_set(i8* %14, i16 zeroext %conv6, i64 %16) #10, !dbg !14469
  br label %for.inc, !dbg !14470

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !14471
  %inc = add i32 %17, 1, !dbg !14471
  store i32 %inc, i32* %i, align 4, !dbg !14471
  br label %for.cond, !dbg !14472, !llvm.loop !14473

for.end:                                          ; preds = %for.cond
  %18 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !14475
  %core = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %18, i32 0, i32 5, !dbg !14476
  %19 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !14476
  %20 = load i8*, i8** %mbox.addr, align 8, !dbg !14477
  %21 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !14478
  %num7 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %21, i32 0, i32 6, !dbg !14479
  %22 = load i8, i8* %num7, align 2, !dbg !14479
  %conv8 = zext i8 %22 to i32, !dbg !14478
  %call9 = call i32 @mlxsw_cmd_sw2hw_sdq(%struct.mlxsw_core* %19, i8* %20, i32 %conv8) #10, !dbg !14480
  store i32 %call9, i32* %err, align 4, !dbg !14481
  %23 = load i32, i32* %err, align 4, !dbg !14482
  %tobool = icmp ne i32 %23, 0, !dbg !14482
  br i1 %tobool, label %if.then, label %if.end, !dbg !14484

if.then:                                          ; preds = %for.end
  %24 = load i32, i32* %err, align 4, !dbg !14485
  store i32 %24, i32* %retval, align 4, !dbg !14486
  br label %return, !dbg !14486

if.end:                                           ; preds = %for.end
  %25 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !14487
  %26 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !14488
  call void @mlxsw_pci_queue_doorbell_producer_ring(%struct.mlxsw_pci* %25, %struct.mlxsw_pci_queue* %26) #10, !dbg !14489
  store i32 0, i32* %retval, align 4, !dbg !14490
  br label %return, !dbg !14490

return:                                           ; preds = %if.end, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !14491
  ret i32 %27, !dbg !14491
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_sdq_fini(%struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci_queue* %q) #0 !dbg !14492 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %q.addr = alloca %struct.mlxsw_pci_queue*, align 8
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !14493, metadata !DIExpression()), !dbg !14494
  store %struct.mlxsw_pci_queue* %q, %struct.mlxsw_pci_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q.addr, metadata !14495, metadata !DIExpression()), !dbg !14496
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !14497
  %core = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %0, i32 0, i32 5, !dbg !14498
  %1 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !14498
  %2 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !14499
  %num = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %2, i32 0, i32 6, !dbg !14500
  %3 = load i8, i8* %num, align 2, !dbg !14500
  %conv = zext i8 %3 to i32, !dbg !14499
  %call = call i32 @mlxsw_cmd_hw2sw_sdq(%struct.mlxsw_core* %1, i32 %conv) #10, !dbg !14501
  ret void, !dbg !14502
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_sw2hw_dq_cq_set(i8* %buf, i32 %val) #0 !dbg !14503 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14504, metadata !DIExpression()), !dbg !14505
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14506, metadata !DIExpression()), !dbg !14505
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14505
  %1 = load i32, i32* %val.addr, align 4, !dbg !14505
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_sw2hw_dq_cq_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !14505
  ret void, !dbg !14505
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_sw2hw_dq_sdq_tclass_set(i8* %buf, i32 %val) #0 !dbg !14507 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14508, metadata !DIExpression()), !dbg !14509
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14510, metadata !DIExpression()), !dbg !14509
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14509
  %1 = load i32, i32* %val.addr, align 4, !dbg !14509
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_sw2hw_dq_sdq_tclass_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !14509
  ret void, !dbg !14509
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_sw2hw_dq_log2_dq_sz_set(i8* %buf, i32 %val) #0 !dbg !14511 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14512, metadata !DIExpression()), !dbg !14513
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14514, metadata !DIExpression()), !dbg !14513
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14513
  %1 = load i32, i32* %val.addr, align 4, !dbg !14513
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_sw2hw_dq_log2_dq_sz_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !14513
  ret void, !dbg !14513
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_cmd_mbox_sw2hw_dq_pa_set(i8* %buf, i16 zeroext %index, i64 %val) #0 !dbg !14515 {
entry:
  %buf.addr = alloca i8*, align 8
  %index.addr = alloca i16, align 2
  %val.addr = alloca i64, align 8
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14516, metadata !DIExpression()), !dbg !14517
  store i16 %index, i16* %index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %index.addr, metadata !14518, metadata !DIExpression()), !dbg !14517
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !14519, metadata !DIExpression()), !dbg !14517
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14517
  %1 = load i16, i16* %index.addr, align 2, !dbg !14517
  %2 = load i64, i64* %val.addr, align 8, !dbg !14517
  call void @__mlxsw_item_set64(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_cmd_mbox_sw2hw_dq_pa_item to %struct.mlxsw_item*), i16 zeroext %1, i64 %2) #10, !dbg !14517
  ret void, !dbg !14517
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_sw2hw_sdq(%struct.mlxsw_core* %mlxsw_core, i8* %in_mbox, i32 %dq_number) #0 !dbg !14520 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %in_mbox.addr = alloca i8*, align 8
  %dq_number.addr = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !14521, metadata !DIExpression()), !dbg !14522
  store i8* %in_mbox, i8** %in_mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %in_mbox.addr, metadata !14523, metadata !DIExpression()), !dbg !14524
  store i32 %dq_number, i32* %dq_number.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dq_number.addr, metadata !14525, metadata !DIExpression()), !dbg !14526
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !14527
  %1 = load i8*, i8** %in_mbox.addr, align 8, !dbg !14528
  %2 = load i32, i32* %dq_number.addr, align 4, !dbg !14529
  %call = call i32 @__mlxsw_cmd_sw2hw_dq(%struct.mlxsw_core* %0, i8* %1, i32 %2, i8 zeroext 0) #10, !dbg !14530
  ret i32 %call, !dbg !14531
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__mlxsw_cmd_sw2hw_dq(%struct.mlxsw_core* %mlxsw_core, i8* %in_mbox, i32 %dq_number, i8 zeroext %opcode_mod) #0 !dbg !14532 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %in_mbox.addr = alloca i8*, align 8
  %dq_number.addr = alloca i32, align 4
  %opcode_mod.addr = alloca i8, align 1
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !14535, metadata !DIExpression()), !dbg !14536
  store i8* %in_mbox, i8** %in_mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %in_mbox.addr, metadata !14537, metadata !DIExpression()), !dbg !14538
  store i32 %dq_number, i32* %dq_number.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dq_number.addr, metadata !14539, metadata !DIExpression()), !dbg !14540
  store i8 %opcode_mod, i8* %opcode_mod.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %opcode_mod.addr, metadata !14541, metadata !DIExpression()), !dbg !14542
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !14543
  %1 = load i8, i8* %opcode_mod.addr, align 1, !dbg !14544
  %2 = load i32, i32* %dq_number.addr, align 4, !dbg !14545
  %3 = load i8*, i8** %in_mbox.addr, align 8, !dbg !14546
  %call = call i32 @mlxsw_cmd_exec_in(%struct.mlxsw_core* %0, i16 zeroext 513, i8 zeroext %1, i32 %2, i8* %3, i64 4096) #10, !dbg !14547
  ret i32 %call, !dbg !14548
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_hw2sw_sdq(%struct.mlxsw_core* %mlxsw_core, i32 %dq_number) #0 !dbg !14549 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %dq_number.addr = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !14550, metadata !DIExpression()), !dbg !14551
  store i32 %dq_number, i32* %dq_number.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dq_number.addr, metadata !14552, metadata !DIExpression()), !dbg !14553
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !14554
  %1 = load i32, i32* %dq_number.addr, align 4, !dbg !14555
  %call = call i32 @__mlxsw_cmd_hw2sw_dq(%struct.mlxsw_core* %0, i32 %1, i8 zeroext 0) #10, !dbg !14556
  ret i32 %call, !dbg !14557
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__mlxsw_cmd_hw2sw_dq(%struct.mlxsw_core* %mlxsw_core, i32 %dq_number, i8 zeroext %opcode_mod) #0 !dbg !14558 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %dq_number.addr = alloca i32, align 4
  %opcode_mod.addr = alloca i8, align 1
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !14561, metadata !DIExpression()), !dbg !14562
  store i32 %dq_number, i32* %dq_number.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dq_number.addr, metadata !14563, metadata !DIExpression()), !dbg !14564
  store i8 %opcode_mod, i8* %opcode_mod.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %opcode_mod.addr, metadata !14565, metadata !DIExpression()), !dbg !14566
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !14567
  %1 = load i8, i8* %opcode_mod.addr, align 1, !dbg !14568
  %2 = load i32, i32* %dq_number.addr, align 4, !dbg !14569
  %call = call i32 @mlxsw_cmd_exec_none(%struct.mlxsw_core* %0, i16 zeroext 514, i8 zeroext %1, i32 %2) #10, !dbg !14570
  ret i32 %call, !dbg !14571
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_pci_rdq_init(%struct.mlxsw_pci* %mlxsw_pci, i8* %mbox, %struct.mlxsw_pci_queue* %q) #0 !dbg !14572 {
entry:
  %retval = alloca i32, align 4
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %mbox.addr = alloca i8*, align 8
  %q.addr = alloca %struct.mlxsw_pci_queue*, align 8
  %elem_info = alloca %struct.mlxsw_pci_queue_elem_info*, align 8
  %sdq_count = alloca i8, align 1
  %i = alloca i32, align 4
  %err = alloca i32, align 4
  %mapaddr = alloca i64, align 8
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !14573, metadata !DIExpression()), !dbg !14574
  store i8* %mbox, i8** %mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mbox.addr, metadata !14575, metadata !DIExpression()), !dbg !14576
  store %struct.mlxsw_pci_queue* %q, %struct.mlxsw_pci_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q.addr, metadata !14577, metadata !DIExpression()), !dbg !14578
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue_elem_info** %elem_info, metadata !14579, metadata !DIExpression()), !dbg !14580
  call void @llvm.dbg.declare(metadata i8* %sdq_count, metadata !14581, metadata !DIExpression()), !dbg !14582
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !14583
  %call = call zeroext i8 @mlxsw_pci_sdq_count(%struct.mlxsw_pci* %0) #10, !dbg !14584
  store i8 %call, i8* %sdq_count, align 1, !dbg !14582
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14585, metadata !DIExpression()), !dbg !14586
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14587, metadata !DIExpression()), !dbg !14588
  %1 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !14589
  %producer_counter = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %1, i32 0, i32 3, !dbg !14590
  store i16 0, i16* %producer_counter, align 8, !dbg !14591
  %2 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !14592
  %consumer_counter = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %2, i32 0, i32 4, !dbg !14593
  store i16 0, i16* %consumer_counter, align 2, !dbg !14594
  %3 = load i8*, i8** %mbox.addr, align 8, !dbg !14595
  %4 = load i8, i8* %sdq_count, align 1, !dbg !14596
  %conv = zext i8 %4 to i32, !dbg !14596
  %5 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !14597
  %num = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %5, i32 0, i32 6, !dbg !14598
  %6 = load i8, i8* %num, align 2, !dbg !14598
  %conv1 = zext i8 %6 to i32, !dbg !14597
  %add = add i32 %conv, %conv1, !dbg !14599
  call void @mlxsw_cmd_mbox_sw2hw_dq_cq_set(i8* %3, i32 %add) #10, !dbg !14600
  %7 = load i8*, i8** %mbox.addr, align 8, !dbg !14601
  call void @mlxsw_cmd_mbox_sw2hw_dq_log2_dq_sz_set(i8* %7, i32 3) #10, !dbg !14602
  store i32 0, i32* %i, align 4, !dbg !14603
  br label %for.cond, !dbg !14605

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %i, align 4, !dbg !14606
  %cmp = icmp slt i32 %8, 8, !dbg !14608
  br i1 %cmp, label %for.body, label %for.end, !dbg !14609

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %mapaddr, metadata !14610, metadata !DIExpression()), !dbg !14612
  %9 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !14613
  %10 = load i32, i32* %i, align 4, !dbg !14614
  %call3 = call i64 @__mlxsw_pci_queue_page_get(%struct.mlxsw_pci_queue* %9, i32 %10) #10, !dbg !14615
  store i64 %call3, i64* %mapaddr, align 8, !dbg !14612
  %11 = load i8*, i8** %mbox.addr, align 8, !dbg !14616
  %12 = load i32, i32* %i, align 4, !dbg !14617
  %conv4 = trunc i32 %12 to i16, !dbg !14617
  %13 = load i64, i64* %mapaddr, align 8, !dbg !14618
  call void @mlxsw_cmd_mbox_sw2hw_dq_pa_set(i8* %11, i16 zeroext %conv4, i64 %13) #10, !dbg !14619
  br label %for.inc, !dbg !14620

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !14621
  %inc = add i32 %14, 1, !dbg !14621
  store i32 %inc, i32* %i, align 4, !dbg !14621
  br label %for.cond, !dbg !14622, !llvm.loop !14623

for.end:                                          ; preds = %for.cond
  %15 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !14625
  %core = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %15, i32 0, i32 5, !dbg !14626
  %16 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !14626
  %17 = load i8*, i8** %mbox.addr, align 8, !dbg !14627
  %18 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !14628
  %num5 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %18, i32 0, i32 6, !dbg !14629
  %19 = load i8, i8* %num5, align 2, !dbg !14629
  %conv6 = zext i8 %19 to i32, !dbg !14628
  %call7 = call i32 @mlxsw_cmd_sw2hw_rdq(%struct.mlxsw_core* %16, i8* %17, i32 %conv6) #10, !dbg !14630
  store i32 %call7, i32* %err, align 4, !dbg !14631
  %20 = load i32, i32* %err, align 4, !dbg !14632
  %tobool = icmp ne i32 %20, 0, !dbg !14632
  br i1 %tobool, label %if.then, label %if.end, !dbg !14634

if.then:                                          ; preds = %for.end
  %21 = load i32, i32* %err, align 4, !dbg !14635
  store i32 %21, i32* %retval, align 4, !dbg !14636
  br label %return, !dbg !14636

if.end:                                           ; preds = %for.end
  %22 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !14637
  %23 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !14638
  call void @mlxsw_pci_queue_doorbell_producer_ring(%struct.mlxsw_pci* %22, %struct.mlxsw_pci_queue* %23) #10, !dbg !14639
  store i32 0, i32* %i, align 4, !dbg !14640
  br label %for.cond8, !dbg !14642

for.cond8:                                        ; preds = %for.inc35, %if.end
  %24 = load i32, i32* %i, align 4, !dbg !14643
  %25 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !14645
  %count = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %25, i32 0, i32 5, !dbg !14646
  %26 = load i16, i16* %count, align 4, !dbg !14646
  %conv9 = zext i16 %26 to i32, !dbg !14645
  %cmp10 = icmp slt i32 %24, %conv9, !dbg !14647
  br i1 %cmp10, label %for.body12, label %for.end37, !dbg !14648

for.body12:                                       ; preds = %for.cond8
  %27 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !14649
  %call13 = call %struct.mlxsw_pci_queue_elem_info* @mlxsw_pci_queue_elem_info_producer_get(%struct.mlxsw_pci_queue* %27) #10, !dbg !14651
  store %struct.mlxsw_pci_queue_elem_info* %call13, %struct.mlxsw_pci_queue_elem_info** %elem_info, align 8, !dbg !14652
  br label %do.body, !dbg !14653

do.body:                                          ; preds = %for.body12
  %28 = load %struct.mlxsw_pci_queue_elem_info*, %struct.mlxsw_pci_queue_elem_info** %elem_info, align 8, !dbg !14654
  %tobool14 = icmp ne %struct.mlxsw_pci_queue_elem_info* %28, null, !dbg !14654
  %lnot = xor i1 %tobool14, true, !dbg !14654
  %lnot15 = xor i1 %lnot, true, !dbg !14654
  %lnot16 = xor i1 %lnot15, true, !dbg !14654
  %lnot.ext = zext i1 %lnot16 to i32, !dbg !14654
  %conv17 = sext i32 %lnot.ext to i64, !dbg !14654
  %tobool18 = icmp ne i64 %conv17, 0, !dbg !14654
  br i1 %tobool18, label %if.then19, label %if.end27, !dbg !14657

if.then19:                                        ; preds = %do.body
  br label %do.body20, !dbg !14654

do.body20:                                        ; preds = %if.then19
  br label %do.body21, !dbg !14658

do.body21:                                        ; preds = %do.body20
  br label %do.end, !dbg !14660

do.end:                                           ; preds = %do.body21
  br label %do.body22, !dbg !14658

do.body22:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22, i64 0, i64 0), i32 419, i32 0, i64 12) #12, !dbg !14662, !srcloc !14664
  br label %do.end23, !dbg !14662

do.end23:                                         ; preds = %do.body22
  br label %do.body24, !dbg !14658

do.body24:                                        ; preds = %do.end23
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 340) #12, !dbg !14665, !srcloc !14668
  unreachable, !dbg !14669

do.end25:                                         ; No predecessors!
  br label %do.end26, !dbg !14658

do.end26:                                         ; preds = %do.end25
  br label %if.end27, !dbg !14658

if.end27:                                         ; preds = %do.end26, %do.body
  br label %do.end28, !dbg !14657

do.end28:                                         ; preds = %if.end27
  %29 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !14670
  %30 = load %struct.mlxsw_pci_queue_elem_info*, %struct.mlxsw_pci_queue_elem_info** %elem_info, align 8, !dbg !14671
  %call29 = call i32 @mlxsw_pci_rdq_skb_alloc(%struct.mlxsw_pci* %29, %struct.mlxsw_pci_queue_elem_info* %30) #10, !dbg !14672
  store i32 %call29, i32* %err, align 4, !dbg !14673
  %31 = load i32, i32* %err, align 4, !dbg !14674
  %tobool30 = icmp ne i32 %31, 0, !dbg !14674
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !14676

if.then31:                                        ; preds = %do.end28
  br label %rollback, !dbg !14677

if.end32:                                         ; preds = %do.end28
  %32 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !14678
  %producer_counter33 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %32, i32 0, i32 3, !dbg !14679
  %33 = load i16, i16* %producer_counter33, align 8, !dbg !14680
  %inc34 = add i16 %33, 1, !dbg !14680
  store i16 %inc34, i16* %producer_counter33, align 8, !dbg !14680
  %34 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !14681
  %35 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !14682
  call void @mlxsw_pci_queue_doorbell_producer_ring(%struct.mlxsw_pci* %34, %struct.mlxsw_pci_queue* %35) #10, !dbg !14683
  br label %for.inc35, !dbg !14684

for.inc35:                                        ; preds = %if.end32
  %36 = load i32, i32* %i, align 4, !dbg !14685
  %inc36 = add i32 %36, 1, !dbg !14685
  store i32 %inc36, i32* %i, align 4, !dbg !14685
  br label %for.cond8, !dbg !14686, !llvm.loop !14687

for.end37:                                        ; preds = %for.cond8
  store i32 0, i32* %retval, align 4, !dbg !14689
  br label %return, !dbg !14689

rollback:                                         ; preds = %if.then31
  call void @llvm.dbg.label(metadata !14690), !dbg !14691
  %37 = load i32, i32* %i, align 4, !dbg !14692
  %dec = add i32 %37, -1, !dbg !14692
  store i32 %dec, i32* %i, align 4, !dbg !14692
  br label %for.cond38, !dbg !14694

for.cond38:                                       ; preds = %for.inc43, %rollback
  %38 = load i32, i32* %i, align 4, !dbg !14695
  %cmp39 = icmp sge i32 %38, 0, !dbg !14697
  br i1 %cmp39, label %for.body41, label %for.end45, !dbg !14698

for.body41:                                       ; preds = %for.cond38
  %39 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !14699
  %40 = load i32, i32* %i, align 4, !dbg !14701
  %call42 = call %struct.mlxsw_pci_queue_elem_info* @mlxsw_pci_queue_elem_info_get(%struct.mlxsw_pci_queue* %39, i32 %40) #10, !dbg !14702
  store %struct.mlxsw_pci_queue_elem_info* %call42, %struct.mlxsw_pci_queue_elem_info** %elem_info, align 8, !dbg !14703
  %41 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !14704
  %42 = load %struct.mlxsw_pci_queue_elem_info*, %struct.mlxsw_pci_queue_elem_info** %elem_info, align 8, !dbg !14705
  call void @mlxsw_pci_rdq_skb_free(%struct.mlxsw_pci* %41, %struct.mlxsw_pci_queue_elem_info* %42) #10, !dbg !14706
  br label %for.inc43, !dbg !14707

for.inc43:                                        ; preds = %for.body41
  %43 = load i32, i32* %i, align 4, !dbg !14708
  %dec44 = add i32 %43, -1, !dbg !14708
  store i32 %dec44, i32* %i, align 4, !dbg !14708
  br label %for.cond38, !dbg !14709, !llvm.loop !14710

for.end45:                                        ; preds = %for.cond38
  %44 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !14712
  %core46 = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %44, i32 0, i32 5, !dbg !14713
  %45 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core46, align 8, !dbg !14713
  %46 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !14714
  %num47 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %46, i32 0, i32 6, !dbg !14715
  %47 = load i8, i8* %num47, align 2, !dbg !14715
  %conv48 = zext i8 %47 to i32, !dbg !14714
  %call49 = call i32 @mlxsw_cmd_hw2sw_rdq(%struct.mlxsw_core* %45, i32 %conv48) #10, !dbg !14716
  %48 = load i32, i32* %err, align 4, !dbg !14717
  store i32 %48, i32* %retval, align 4, !dbg !14718
  br label %return, !dbg !14718

return:                                           ; preds = %for.end45, %for.end37, %if.then
  %49 = load i32, i32* %retval, align 4, !dbg !14719
  ret i32 %49, !dbg !14719
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_rdq_fini(%struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci_queue* %q) #0 !dbg !14720 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %q.addr = alloca %struct.mlxsw_pci_queue*, align 8
  %elem_info = alloca %struct.mlxsw_pci_queue_elem_info*, align 8
  %i = alloca i32, align 4
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !14721, metadata !DIExpression()), !dbg !14722
  store %struct.mlxsw_pci_queue* %q, %struct.mlxsw_pci_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q.addr, metadata !14723, metadata !DIExpression()), !dbg !14724
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue_elem_info** %elem_info, metadata !14725, metadata !DIExpression()), !dbg !14726
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14727, metadata !DIExpression()), !dbg !14728
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !14729
  %core = getelementptr inbounds %struct.mlxsw_pci, %struct.mlxsw_pci* %0, i32 0, i32 5, !dbg !14730
  %1 = load %struct.mlxsw_core*, %struct.mlxsw_core** %core, align 8, !dbg !14730
  %2 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !14731
  %num = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %2, i32 0, i32 6, !dbg !14732
  %3 = load i8, i8* %num, align 2, !dbg !14732
  %conv = zext i8 %3 to i32, !dbg !14731
  %call = call i32 @mlxsw_cmd_hw2sw_rdq(%struct.mlxsw_core* %1, i32 %conv) #10, !dbg !14733
  store i32 0, i32* %i, align 4, !dbg !14734
  br label %for.cond, !dbg !14736

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !14737
  %5 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !14739
  %count = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %5, i32 0, i32 5, !dbg !14740
  %6 = load i16, i16* %count, align 4, !dbg !14740
  %conv1 = zext i16 %6 to i32, !dbg !14739
  %cmp = icmp slt i32 %4, %conv1, !dbg !14741
  br i1 %cmp, label %for.body, label %for.end, !dbg !14742

for.body:                                         ; preds = %for.cond
  %7 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !14743
  %8 = load i32, i32* %i, align 4, !dbg !14745
  %call3 = call %struct.mlxsw_pci_queue_elem_info* @mlxsw_pci_queue_elem_info_get(%struct.mlxsw_pci_queue* %7, i32 %8) #10, !dbg !14746
  store %struct.mlxsw_pci_queue_elem_info* %call3, %struct.mlxsw_pci_queue_elem_info** %elem_info, align 8, !dbg !14747
  %9 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !14748
  %10 = load %struct.mlxsw_pci_queue_elem_info*, %struct.mlxsw_pci_queue_elem_info** %elem_info, align 8, !dbg !14749
  call void @mlxsw_pci_rdq_skb_free(%struct.mlxsw_pci* %9, %struct.mlxsw_pci_queue_elem_info* %10) #10, !dbg !14750
  br label %for.inc, !dbg !14751

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !14752
  %inc = add i32 %11, 1, !dbg !14752
  store i32 %inc, i32* %i, align 4, !dbg !14752
  br label %for.cond, !dbg !14753, !llvm.loop !14754

for.end:                                          ; preds = %for.cond
  ret void, !dbg !14756
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @mlxsw_pci_sdq_count(%struct.mlxsw_pci* %mlxsw_pci) #0 !dbg !14757 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !14758, metadata !DIExpression()), !dbg !14759
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !14760
  %call = call zeroext i8 @__mlxsw_pci_queue_count(%struct.mlxsw_pci* %0, i32 0) #10, !dbg !14761
  ret i8 %call, !dbg !14762
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_sw2hw_rdq(%struct.mlxsw_core* %mlxsw_core, i8* %in_mbox, i32 %dq_number) #0 !dbg !14763 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %in_mbox.addr = alloca i8*, align 8
  %dq_number.addr = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !14764, metadata !DIExpression()), !dbg !14765
  store i8* %in_mbox, i8** %in_mbox.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %in_mbox.addr, metadata !14766, metadata !DIExpression()), !dbg !14767
  store i32 %dq_number, i32* %dq_number.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dq_number.addr, metadata !14768, metadata !DIExpression()), !dbg !14769
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !14770
  %1 = load i8*, i8** %in_mbox.addr, align 8, !dbg !14771
  %2 = load i32, i32* %dq_number.addr, align 4, !dbg !14772
  %call = call i32 @__mlxsw_cmd_sw2hw_dq(%struct.mlxsw_core* %0, i8* %1, i32 %2, i8 zeroext 1) #10, !dbg !14773
  ret i32 %call, !dbg !14774
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_pci_queue_elem_info* @mlxsw_pci_queue_elem_info_producer_get(%struct.mlxsw_pci_queue* %q) #0 !dbg !14775 {
entry:
  %retval = alloca %struct.mlxsw_pci_queue_elem_info*, align 8
  %q.addr = alloca %struct.mlxsw_pci_queue*, align 8
  %index = alloca i32, align 4
  store %struct.mlxsw_pci_queue* %q, %struct.mlxsw_pci_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue** %q.addr, metadata !14776, metadata !DIExpression()), !dbg !14777
  call void @llvm.dbg.declare(metadata i32* %index, metadata !14778, metadata !DIExpression()), !dbg !14779
  %0 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !14780
  %producer_counter = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %0, i32 0, i32 3, !dbg !14781
  %1 = load i16, i16* %producer_counter, align 8, !dbg !14781
  %conv = zext i16 %1 to i32, !dbg !14780
  %2 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !14782
  %count = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %2, i32 0, i32 5, !dbg !14783
  %3 = load i16, i16* %count, align 4, !dbg !14783
  %conv1 = zext i16 %3 to i32, !dbg !14782
  %sub = sub i32 %conv1, 1, !dbg !14784
  %and = and i32 %conv, %sub, !dbg !14785
  store i32 %and, i32* %index, align 4, !dbg !14779
  %4 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !14786
  %producer_counter2 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %4, i32 0, i32 3, !dbg !14788
  %5 = load i16, i16* %producer_counter2, align 8, !dbg !14788
  %conv3 = zext i16 %5 to i32, !dbg !14786
  %6 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !14789
  %consumer_counter = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %6, i32 0, i32 4, !dbg !14790
  %7 = load i16, i16* %consumer_counter, align 2, !dbg !14790
  %conv4 = zext i16 %7 to i32, !dbg !14789
  %sub5 = sub i32 %conv3, %conv4, !dbg !14791
  %conv6 = trunc i32 %sub5 to i16, !dbg !14792
  %conv7 = zext i16 %conv6 to i32, !dbg !14792
  %8 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !14793
  %count8 = getelementptr inbounds %struct.mlxsw_pci_queue, %struct.mlxsw_pci_queue* %8, i32 0, i32 5, !dbg !14794
  %9 = load i16, i16* %count8, align 4, !dbg !14794
  %conv9 = zext i16 %9 to i32, !dbg !14793
  %cmp = icmp eq i32 %conv7, %conv9, !dbg !14795
  br i1 %cmp, label %if.then, label %if.end, !dbg !14796

if.then:                                          ; preds = %entry
  store %struct.mlxsw_pci_queue_elem_info* null, %struct.mlxsw_pci_queue_elem_info** %retval, align 8, !dbg !14797
  br label %return, !dbg !14797

if.end:                                           ; preds = %entry
  %10 = load %struct.mlxsw_pci_queue*, %struct.mlxsw_pci_queue** %q.addr, align 8, !dbg !14798
  %11 = load i32, i32* %index, align 4, !dbg !14799
  %call = call %struct.mlxsw_pci_queue_elem_info* @mlxsw_pci_queue_elem_info_get(%struct.mlxsw_pci_queue* %10, i32 %11) #10, !dbg !14800
  store %struct.mlxsw_pci_queue_elem_info* %call, %struct.mlxsw_pci_queue_elem_info** %retval, align 8, !dbg !14801
  br label %return, !dbg !14801

return:                                           ; preds = %if.end, %if.then
  %12 = load %struct.mlxsw_pci_queue_elem_info*, %struct.mlxsw_pci_queue_elem_info** %retval, align 8, !dbg !14802
  ret %struct.mlxsw_pci_queue_elem_info* %12, !dbg !14802
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_rdq_skb_free(%struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci_queue_elem_info* %elem_info) #0 !dbg !14803 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %elem_info.addr = alloca %struct.mlxsw_pci_queue_elem_info*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  %wqe = alloca i8*, align 8
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !14806, metadata !DIExpression()), !dbg !14807
  store %struct.mlxsw_pci_queue_elem_info* %elem_info, %struct.mlxsw_pci_queue_elem_info** %elem_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci_queue_elem_info** %elem_info.addr, metadata !14808, metadata !DIExpression()), !dbg !14809
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !14810, metadata !DIExpression()), !dbg !14811
  call void @llvm.dbg.declare(metadata i8** %wqe, metadata !14812, metadata !DIExpression()), !dbg !14813
  %0 = load %struct.mlxsw_pci_queue_elem_info*, %struct.mlxsw_pci_queue_elem_info** %elem_info.addr, align 8, !dbg !14814
  %u = getelementptr inbounds %struct.mlxsw_pci_queue_elem_info, %struct.mlxsw_pci_queue_elem_info* %0, i32 0, i32 1, !dbg !14815
  %rdq = bitcast %union.anon.130* %u to %struct.anon.132*, !dbg !14816
  %skb1 = getelementptr inbounds %struct.anon.132, %struct.anon.132* %rdq, i32 0, i32 0, !dbg !14817
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb1, align 8, !dbg !14817
  store %struct.sk_buff* %1, %struct.sk_buff** %skb, align 8, !dbg !14818
  %2 = load %struct.mlxsw_pci_queue_elem_info*, %struct.mlxsw_pci_queue_elem_info** %elem_info.addr, align 8, !dbg !14819
  %elem = getelementptr inbounds %struct.mlxsw_pci_queue_elem_info, %struct.mlxsw_pci_queue_elem_info* %2, i32 0, i32 0, !dbg !14820
  %3 = load i8*, i8** %elem, align 8, !dbg !14820
  store i8* %3, i8** %wqe, align 8, !dbg !14821
  %4 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !14822
  %5 = load i8*, i8** %wqe, align 8, !dbg !14823
  call void @mlxsw_pci_wqe_frag_unmap(%struct.mlxsw_pci* %4, i8* %5, i32 0, i32 2) #10, !dbg !14824
  %6 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !14825
  call void @dev_kfree_skb_any(%struct.sk_buff* %6) #10, !dbg !14826
  ret void, !dbg !14827
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_hw2sw_rdq(%struct.mlxsw_core* %mlxsw_core, i32 %dq_number) #0 !dbg !14828 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  %dq_number.addr = alloca i32, align 4
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !14829, metadata !DIExpression()), !dbg !14830
  store i32 %dq_number, i32* %dq_number.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dq_number.addr, metadata !14831, metadata !DIExpression()), !dbg !14832
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !14833
  %1 = load i32, i32* %dq_number.addr, align 4, !dbg !14834
  %call = call i32 @__mlxsw_cmd_hw2sw_dq(%struct.mlxsw_core* %0, i32 %1, i8 zeroext 1) #10, !dbg !14835
  ret i32 %call, !dbg !14836
}

; Function Attrs: noredzone
declare dso_local i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_pci_queue* @mlxsw_pci_eq_get(%struct.mlxsw_pci* %mlxsw_pci, i8 zeroext %q_num) #0 !dbg !14837 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %q_num.addr = alloca i8, align 1
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !14838, metadata !DIExpression()), !dbg !14839
  store i8 %q_num, i8* %q_num.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %q_num.addr, metadata !14840, metadata !DIExpression()), !dbg !14841
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !14842
  %1 = load i8, i8* %q_num.addr, align 1, !dbg !14843
  %call = call %struct.mlxsw_pci_queue* @__mlxsw_pci_queue_get(%struct.mlxsw_pci* %0, i32 3, i8 zeroext %1) #10, !dbg !14844
  ret %struct.mlxsw_pci_queue* %call, !dbg !14845
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlxsw_cmd_unmap_fa(%struct.mlxsw_core* %mlxsw_core) #0 !dbg !14846 {
entry:
  %mlxsw_core.addr = alloca %struct.mlxsw_core*, align 8
  store %struct.mlxsw_core* %mlxsw_core, %struct.mlxsw_core** %mlxsw_core.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_core** %mlxsw_core.addr, metadata !14849, metadata !DIExpression()), !dbg !14850
  %0 = load %struct.mlxsw_core*, %struct.mlxsw_core** %mlxsw_core.addr, align 8, !dbg !14851
  %call = call i32 @mlxsw_cmd_exec_none(%struct.mlxsw_core* %0, i16 zeroext 4094, i8 zeroext 0, i32 0) #10, !dbg !14852
  ret i32 %call, !dbg !14853
}

; Function Attrs: noredzone
declare dso_local void @pci_free_irq_vectors(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local i8* @free_irq(i32, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlxsw_pci_queue* @mlxsw_pci_sdq_pick(%struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_tx_info* %tx_info) #0 !dbg !14854 {
entry:
  %mlxsw_pci.addr = alloca %struct.mlxsw_pci*, align 8
  %tx_info.addr = alloca %struct.mlxsw_tx_info*, align 8
  %ctl_sdq_count = alloca i8, align 1
  %sdqn = alloca i8, align 1
  store %struct.mlxsw_pci* %mlxsw_pci, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_pci** %mlxsw_pci.addr, metadata !14857, metadata !DIExpression()), !dbg !14858
  store %struct.mlxsw_tx_info* %tx_info, %struct.mlxsw_tx_info** %tx_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlxsw_tx_info** %tx_info.addr, metadata !14859, metadata !DIExpression()), !dbg !14860
  call void @llvm.dbg.declare(metadata i8* %ctl_sdq_count, metadata !14861, metadata !DIExpression()), !dbg !14862
  %0 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !14863
  %call = call zeroext i8 @mlxsw_pci_sdq_count(%struct.mlxsw_pci* %0) #10, !dbg !14864
  %conv = zext i8 %call to i32, !dbg !14864
  %sub = sub i32 %conv, 1, !dbg !14865
  %conv1 = trunc i32 %sub to i8, !dbg !14864
  store i8 %conv1, i8* %ctl_sdq_count, align 1, !dbg !14862
  call void @llvm.dbg.declare(metadata i8* %sdqn, metadata !14866, metadata !DIExpression()), !dbg !14867
  %1 = load %struct.mlxsw_tx_info*, %struct.mlxsw_tx_info** %tx_info.addr, align 8, !dbg !14868
  %is_emad = getelementptr inbounds %struct.mlxsw_tx_info, %struct.mlxsw_tx_info* %1, i32 0, i32 1, !dbg !14870
  %2 = load i8, i8* %is_emad, align 1, !dbg !14870
  %tobool = trunc i8 %2 to i1, !dbg !14870
  br i1 %tobool, label %if.then, label %if.else, !dbg !14871

if.then:                                          ; preds = %entry
  store i8 0, i8* %sdqn, align 1, !dbg !14872
  br label %if.end, !dbg !14874

if.else:                                          ; preds = %entry
  br label %do.body, !dbg !14875

do.body:                                          ; preds = %if.else
  br label %do.end, !dbg !14877

do.end:                                           ; preds = %do.body
  %3 = load %struct.mlxsw_tx_info*, %struct.mlxsw_tx_info** %tx_info.addr, align 8, !dbg !14879
  %local_port = getelementptr inbounds %struct.mlxsw_tx_info, %struct.mlxsw_tx_info* %3, i32 0, i32 0, !dbg !14880
  %4 = load i8, i8* %local_port, align 1, !dbg !14880
  %conv2 = zext i8 %4 to i32, !dbg !14879
  %5 = load i8, i8* %ctl_sdq_count, align 1, !dbg !14881
  %conv3 = zext i8 %5 to i32, !dbg !14881
  %rem = srem i32 %conv2, %conv3, !dbg !14882
  %add = add i32 1, %rem, !dbg !14883
  %conv4 = trunc i32 %add to i8, !dbg !14884
  store i8 %conv4, i8* %sdqn, align 1, !dbg !14885
  br label %if.end

if.end:                                           ; preds = %do.end, %if.then
  %6 = load %struct.mlxsw_pci*, %struct.mlxsw_pci** %mlxsw_pci.addr, align 8, !dbg !14886
  %7 = load i8, i8* %sdqn, align 1, !dbg !14887
  %call5 = call %struct.mlxsw_pci_queue* @mlxsw_pci_sdq_get(%struct.mlxsw_pci* %6, i8 zeroext %7) #10, !dbg !14888
  ret %struct.mlxsw_pci_queue* %call5, !dbg !14889
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_linearize(%struct.sk_buff* %skb) #0 !dbg !14890 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !14893, metadata !DIExpression()), !dbg !14894
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !14895
  %call = call zeroext i1 @skb_is_nonlinear(%struct.sk_buff* %0) #10, !dbg !14896
  br i1 %call, label %cond.true, label %cond.false, !dbg !14896

cond.true:                                        ; preds = %entry
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !14897
  %call1 = call i32 @__skb_linearize(%struct.sk_buff* %1) #10, !dbg !14898
  br label %cond.end, !dbg !14896

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14896

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call1, %cond.true ], [ 0, %cond.false ], !dbg !14896
  ret i32 %cond, !dbg !14899
}

; Function Attrs: alwaysinline noredzone nounwind sspstrong
define internal void @spin_lock_bh(%struct.spinlock* %lock) #9 !dbg !14900 {
entry:
  %val.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i.i, metadata !14901, metadata !DIExpression()), !dbg !14904
  %pao_ID__.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pao_ID__.i.i, metadata !14912, metadata !DIExpression()), !dbg !14915
  %pto_val__.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pto_val__.i.i, metadata !14916, metadata !DIExpression()), !dbg !14920
  %ip.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %ip.addr.i, metadata !14921, metadata !DIExpression()), !dbg !14922
  %cnt.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr.i, metadata !14923, metadata !DIExpression()), !dbg !14924
  %lock.addr = alloca %struct.spinlock*, align 8
  %tmp = alloca i64, align 8
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr, metadata !14925, metadata !DIExpression()), !dbg !14926
  br label %do.body, !dbg !14927

do.body:                                          ; preds = %entry
  br label %__here, !dbg !14928

__here:                                           ; preds = %indirectgoto, %do.body
  call void @llvm.dbg.label(metadata !14930), !dbg !14928
  store i64 ptrtoint (i8* blockaddress(@spin_lock_bh, %__here) to i64), i64* %tmp, align 8, !dbg !14928
  %0 = load i64, i64* %tmp, align 8, !dbg !14928
  store i64 %0, i64* %ip.addr.i, align 8
  store i32 512, i32* %cnt.addr.i, align 4
  %1 = load i32, i32* %cnt.addr.i, align 4, !dbg !14931
  store i32 %1, i32* %val.addr.i.i, align 4
  %2 = load i32, i32* %val.addr.i.i, align 4, !dbg !14915
  %3 = call i1 @llvm.is.constant.i32(i32 %2) #12, !dbg !14915
  br i1 %3, label %land.lhs.true.i.i, label %cond.false.i.i, !dbg !14915

land.lhs.true.i.i:                                ; preds = %__here
  %4 = load i32, i32* %val.addr.i.i, align 4, !dbg !14915
  %cmp.i.i = icmp eq i32 %4, 1, !dbg !14915
  br i1 %cmp.i.i, label %cond.true.i.i, label %lor.lhs.false.i.i, !dbg !14915

lor.lhs.false.i.i:                                ; preds = %land.lhs.true.i.i
  %5 = load i32, i32* %val.addr.i.i, align 4, !dbg !14915
  %cmp1.i.i = icmp eq i32 %5, -1, !dbg !14915
  br i1 %cmp1.i.i, label %cond.true.i.i, label %cond.false.i.i, !dbg !14915

cond.true.i.i:                                    ; preds = %lor.lhs.false.i.i, %land.lhs.true.i.i
  %6 = load i32, i32* %val.addr.i.i, align 4, !dbg !14915
  br label %__local_bh_disable_ip.exit, !dbg !14915

cond.false.i.i:                                   ; preds = %lor.lhs.false.i.i, %__here
  br label %__local_bh_disable_ip.exit, !dbg !14915

__local_bh_disable_ip.exit:                       ; preds = %cond.true.i.i, %cond.false.i.i
  %cond.i.i = phi i32 [ %6, %cond.true.i.i ], [ 0, %cond.false.i.i ], !dbg !14915
  store i32 %cond.i.i, i32* %pao_ID__.i.i, align 4, !dbg !14915
  %7 = load i32, i32* %val.addr.i.i, align 4, !dbg !14920
  %conv.i.i = sext i32 %7 to i64, !dbg !14920
  %and.i.i = and i64 %conv.i.i, 4294967295, !dbg !14920
  %conv3.i.i = trunc i64 %and.i.i to i32, !dbg !14920
  store i32 %conv3.i.i, i32* %pto_val__.i.i, align 4, !dbg !14920
  %8 = load i32, i32* %pto_val__.i.i, align 4, !dbg !14920
  call void asm "addl $1, $0", "=*m,ri,*m,~{dirflag},~{fpsr},~{flags}"(i32* @__preempt_count, i32 %8, i32* @__preempt_count) #12, !dbg !14920, !srcloc !14932
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #12, !dbg !14933, !srcloc !14934
  br label %do.body1, !dbg !14935

do.body1:                                         ; preds = %__local_bh_disable_ip.exit
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr, align 8, !dbg !14936
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !14936
  %rlock = bitcast %union.anon.1* %10 to %struct.raw_spinlock*, !dbg !14936
  br label %do.end, !dbg !14936

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !14935

do.end2:                                          ; preds = %do.end
  ret void, !dbg !14938

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here]
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_wqe_c_set(i8* %buf, i32 %val) #0 !dbg !14939 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14940, metadata !DIExpression()), !dbg !14941
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14942, metadata !DIExpression()), !dbg !14941
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14941
  %1 = load i32, i32* %val.addr, align 4, !dbg !14941
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_wqe_c_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !14941
  ret void, !dbg !14941
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_wqe_lp_set(i8* %buf, i32 %val) #0 !dbg !14943 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14944, metadata !DIExpression()), !dbg !14945
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14946, metadata !DIExpression()), !dbg !14945
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14945
  %1 = load i32, i32* %val.addr, align 4, !dbg !14945
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_wqe_lp_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !14945
  ret void, !dbg !14945
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlxsw_pci_wqe_type_set(i8* %buf, i32 %val) #0 !dbg !14947 {
entry:
  %buf.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14948, metadata !DIExpression()), !dbg !14949
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14950, metadata !DIExpression()), !dbg !14949
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !14949
  %1 = load i32, i32* %val.addr, align 4, !dbg !14949
  call void @__mlxsw_item_set32(i8* %0, %struct.mlxsw_item* bitcast ({ i16, i16, i16, i8, i8, i8, i8, { i8, i8 }, i8* }* @mlxsw_pci_wqe_type_item to %struct.mlxsw_item*), i16 zeroext 0, i32 %1) #10, !dbg !14949
  ret void, !dbg !14949
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_headlen(%struct.sk_buff* %skb) #0 !dbg !14951 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !14954, metadata !DIExpression()), !dbg !14955
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !14956
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 5, !dbg !14957
  %1 = load i32, i32* %len, align 8, !dbg !14957
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !14958
  %data_len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 6, !dbg !14959
  %3 = load i32, i32* %data_len, align 4, !dbg !14959
  %sub = sub i32 %1, %3, !dbg !14960
  ret i32 %sub, !dbg !14961
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_frag_address(%struct.bio_vec* %frag) #0 !dbg !14962 {
entry:
  %page.addr.i = alloca %struct.page*, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr.i, metadata !14965, metadata !DIExpression()), !dbg !14971
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !14973, metadata !DIExpression()), !dbg !14974
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !14975
  %call = call %struct.page* @skb_frag_page(%struct.bio_vec* %0) #10, !dbg !14975
  store %struct.page* %call, %struct.page** %page.addr.i, align 8
  %1 = load %struct.page*, %struct.page** %page.addr.i, align 8, !dbg !14976
  %2 = load i64, i64* @vmemmap_base, align 8, !dbg !14976
  %3 = inttoptr i64 %2 to %struct.page*, !dbg !14976
  %sub.ptr.lhs.cast.i = ptrtoint %struct.page* %1 to i64, !dbg !14976
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %2, !dbg !14976
  %sub.ptr.div.i = sdiv exact i64 %sub.ptr.sub.i, 64, !dbg !14976
  %shl.i = shl i64 %sub.ptr.div.i, 12, !dbg !14976
  %4 = load i64, i64* @page_offset_base, align 8, !dbg !14976
  %add.i = add i64 %shl.i, %4, !dbg !14976
  %5 = inttoptr i64 %add.i to i8*, !dbg !14976
  %6 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !14977
  %call2 = call i32 @skb_frag_off(%struct.bio_vec* %6) #10, !dbg !14978
  %idx.ext = zext i32 %call2 to i64, !dbg !14979
  %add.ptr = getelementptr i8, i8* %5, i64 %idx.ext, !dbg !14979
  ret i8* %add.ptr, !dbg !14980
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_frag_size(%struct.bio_vec* %frag) #0 !dbg !14981 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !14984, metadata !DIExpression()), !dbg !14985
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !14986
  %bv_len = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %0, i32 0, i32 1, !dbg !14987
  %1 = load i32, i32* %bv_len, align 8, !dbg !14987
  ret i32 %1, !dbg !14988
}

; Function Attrs: alwaysinline noredzone nounwind sspstrong
define internal void @spin_unlock_bh(%struct.spinlock* %lock) #9 !dbg !14989 {
entry:
  %lock.addr = alloca %struct.spinlock*, align 8
  %tmp = alloca i64, align 8
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr, metadata !14990, metadata !DIExpression()), !dbg !14991
  br label %do.body, !dbg !14992

do.body:                                          ; preds = %entry
  br label %__here, !dbg !14993

__here:                                           ; preds = %indirectgoto, %do.body
  call void @llvm.dbg.label(metadata !14996), !dbg !14993
  store i64 ptrtoint (i8* blockaddress(@spin_unlock_bh, %__here) to i64), i64* %tmp, align 8, !dbg !14993
  %0 = load i64, i64* %tmp, align 8, !dbg !14993
  call void @__local_bh_enable_ip(i64 %0, i32 512) #10, !dbg !14997
  br label %do.body1, !dbg !14997

do.body1:                                         ; preds = %__here
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr, align 8, !dbg !14998
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !14998
  %rlock = bitcast %union.anon.1* %2 to %struct.raw_spinlock*, !dbg !14998
  br label %do.end, !dbg !14998

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !14997

do.end2:                                          ; preds = %do.end
  ret void, !dbg !15000

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here]
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @skb_is_nonlinear(%struct.sk_buff* %skb) #0 !dbg !15001 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !15004, metadata !DIExpression()), !dbg !15005
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15006
  %data_len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 6, !dbg !15007
  %1 = load i32, i32* %data_len, align 4, !dbg !15007
  %tobool = icmp ne i32 %1, 0, !dbg !15006
  ret i1 %tobool, !dbg !15008
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__skb_linearize(%struct.sk_buff* %skb) #0 !dbg !15009 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !15010, metadata !DIExpression()), !dbg !15011
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15012
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15013
  %data_len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 6, !dbg !15014
  %2 = load i32, i32* %data_len, align 4, !dbg !15014
  %call = call i8* @__pskb_pull_tail(%struct.sk_buff* %0, i32 %2) #10, !dbg !15015
  %tobool = icmp ne i8* %call, null, !dbg !15015
  %3 = zext i1 %tobool to i64, !dbg !15015
  %cond = select i1 %tobool, i32 0, i32 -12, !dbg !15015
  ret i32 %cond, !dbg !15016
}

; Function Attrs: noredzone
declare dso_local i8* @__pskb_pull_tail(%struct.sk_buff*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @skb_frag_page(%struct.bio_vec* %frag) #0 !dbg !15017 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !15020, metadata !DIExpression()), !dbg !15021
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !15022
  %bv_page = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %0, i32 0, i32 0, !dbg !15023
  %1 = load %struct.page*, %struct.page** %bv_page, align 8, !dbg !15023
  ret %struct.page* %1, !dbg !15024
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_frag_off(%struct.bio_vec* %frag) #0 !dbg !15025 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !15026, metadata !DIExpression()), !dbg !15027
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !15028
  %bv_offset = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %0, i32 0, i32 2, !dbg !15029
  %1 = load i32, i32* %bv_offset, align 4, !dbg !15029
  ret i32 %1, !dbg !15030
}

; Function Attrs: noredzone
declare dso_local void @__local_bh_enable_ip(i64, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @mutex_lock_interruptible(%struct.mutex*) #2

; Function Attrs: noredzone
declare dso_local void @init_wait_entry(%struct.wait_queue_entry*, i32) #2

; Function Attrs: noredzone
declare dso_local i64 @prepare_to_wait_event(%struct.wait_queue_head*, %struct.wait_queue_entry*, i32) #2

; Function Attrs: noredzone
declare dso_local i64 @schedule_timeout(i64) #2

; Function Attrs: noredzone
declare dso_local void @finish_wait(%struct.wait_queue_head*, %struct.wait_queue_entry*) #2

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_get_drvdata(%struct.pci_dev* %pdev) #0 !dbg !15031 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !15034, metadata !DIExpression()), !dbg !15035
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !15036
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !15037
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #10, !dbg !15038
  ret i8* %call, !dbg !15039
}

; Function Attrs: noredzone
declare dso_local void @mlxsw_core_bus_device_unregister(%struct.mlxsw_core*, i1 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #0 !dbg !15040 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15043, metadata !DIExpression()), !dbg !15044
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15045
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !15046
  %1 = load i8*, i8** %driver_data, align 8, !dbg !15046
  ret i8* %1, !dbg !15047
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone willreturn }
attributes #6 = { nounwind willreturn }
attributes #7 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind willreturn }
attributes #9 = { alwaysinline noredzone nounwind sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noredzone }
attributes #11 = { cold noredzone }
attributes #12 = { nounwind }
attributes #13 = { noredzone nounwind readnone }
attributes #14 = { noredzone nounwind }
attributes #15 = { nounwind readonly }
attributes #16 = { nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!8508, !8509, !8510, !8511}
!llvm.ident = !{!8512}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_mlxsw_pci_module_init344", scope: !2, file: !3, line: 1923, type: !646, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !7665, globals: !8106, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/pci.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !57, !64, !95, !129, !170, !177, !208, !213, !220, !226, !232, !236, !240, !244, !249, !254, !263, !276, !284, !290, !297, !301, !305, !312, !318, !7306, !4344, !4439, !5106, !5125, !5932, !6175, !6255, !6331, !6339, !7403, !7409, !7415, !7420, !7427, !7481, !7502, !7506, !7510, !7517, !7526, !7530, !7640, !7644, !7650}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_tx", file: !31, line: 115, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "./include/linux/netdevice.h", directory: "/home/lizy2001/genbc/linux")
!32 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!33 = !{!34, !35, !36}
!34 = !DIEnumerator(name: "__NETDEV_TX_MIN", value: -2147483648)
!35 = !DIEnumerator(name: "NETDEV_TX_OK", value: 0)
!36 = !DIEnumerator(name: "NETDEV_TX_BUSY", value: 16)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tc_setup_type", file: !31, line: 836, baseType: !7, size: 32, elements: !38)
!38 = !{!39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56}
!39 = !DIEnumerator(name: "TC_SETUP_QDISC_MQPRIO", value: 0, isUnsigned: true)
!40 = !DIEnumerator(name: "TC_SETUP_CLSU32", value: 1, isUnsigned: true)
!41 = !DIEnumerator(name: "TC_SETUP_CLSFLOWER", value: 2, isUnsigned: true)
!42 = !DIEnumerator(name: "TC_SETUP_CLSMATCHALL", value: 3, isUnsigned: true)
!43 = !DIEnumerator(name: "TC_SETUP_CLSBPF", value: 4, isUnsigned: true)
!44 = !DIEnumerator(name: "TC_SETUP_BLOCK", value: 5, isUnsigned: true)
!45 = !DIEnumerator(name: "TC_SETUP_QDISC_CBS", value: 6, isUnsigned: true)
!46 = !DIEnumerator(name: "TC_SETUP_QDISC_RED", value: 7, isUnsigned: true)
!47 = !DIEnumerator(name: "TC_SETUP_QDISC_PRIO", value: 8, isUnsigned: true)
!48 = !DIEnumerator(name: "TC_SETUP_QDISC_MQ", value: 9, isUnsigned: true)
!49 = !DIEnumerator(name: "TC_SETUP_QDISC_ETF", value: 10, isUnsigned: true)
!50 = !DIEnumerator(name: "TC_SETUP_ROOT_QDISC", value: 11, isUnsigned: true)
!51 = !DIEnumerator(name: "TC_SETUP_QDISC_GRED", value: 12, isUnsigned: true)
!52 = !DIEnumerator(name: "TC_SETUP_QDISC_TAPRIO", value: 13, isUnsigned: true)
!53 = !DIEnumerator(name: "TC_SETUP_FT", value: 14, isUnsigned: true)
!54 = !DIEnumerator(name: "TC_SETUP_QDISC_ETS", value: 15, isUnsigned: true)
!55 = !DIEnumerator(name: "TC_SETUP_QDISC_TBF", value: 16, isUnsigned: true)
!56 = !DIEnumerator(name: "TC_SETUP_QDISC_FIFO", value: 17, isUnsigned: true)
!57 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_netdev_command", file: !31, line: 860, baseType: !7, size: 32, elements: !58)
!58 = !{!59, !60, !61, !62, !63}
!59 = !DIEnumerator(name: "XDP_SETUP_PROG", value: 0, isUnsigned: true)
!60 = !DIEnumerator(name: "XDP_SETUP_PROG_HW", value: 1, isUnsigned: true)
!61 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_ALLOC", value: 2, isUnsigned: true)
!62 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_FREE", value: 3, isUnsigned: true)
!63 = !DIEnumerator(name: "XDP_SETUP_XSK_POOL", value: 4, isUnsigned: true)
!64 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_reg_type", file: !65, line: 369, baseType: !7, size: 32, elements: !66)
!65 = !DIFile(filename: "./include/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!66 = !{!67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94}
!67 = !DIEnumerator(name: "NOT_INIT", value: 0, isUnsigned: true)
!68 = !DIEnumerator(name: "SCALAR_VALUE", value: 1, isUnsigned: true)
!69 = !DIEnumerator(name: "PTR_TO_CTX", value: 2, isUnsigned: true)
!70 = !DIEnumerator(name: "CONST_PTR_TO_MAP", value: 3, isUnsigned: true)
!71 = !DIEnumerator(name: "PTR_TO_MAP_VALUE", value: 4, isUnsigned: true)
!72 = !DIEnumerator(name: "PTR_TO_MAP_VALUE_OR_NULL", value: 5, isUnsigned: true)
!73 = !DIEnumerator(name: "PTR_TO_STACK", value: 6, isUnsigned: true)
!74 = !DIEnumerator(name: "PTR_TO_PACKET_META", value: 7, isUnsigned: true)
!75 = !DIEnumerator(name: "PTR_TO_PACKET", value: 8, isUnsigned: true)
!76 = !DIEnumerator(name: "PTR_TO_PACKET_END", value: 9, isUnsigned: true)
!77 = !DIEnumerator(name: "PTR_TO_FLOW_KEYS", value: 10, isUnsigned: true)
!78 = !DIEnumerator(name: "PTR_TO_SOCKET", value: 11, isUnsigned: true)
!79 = !DIEnumerator(name: "PTR_TO_SOCKET_OR_NULL", value: 12, isUnsigned: true)
!80 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON", value: 13, isUnsigned: true)
!81 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON_OR_NULL", value: 14, isUnsigned: true)
!82 = !DIEnumerator(name: "PTR_TO_TCP_SOCK", value: 15, isUnsigned: true)
!83 = !DIEnumerator(name: "PTR_TO_TCP_SOCK_OR_NULL", value: 16, isUnsigned: true)
!84 = !DIEnumerator(name: "PTR_TO_TP_BUFFER", value: 17, isUnsigned: true)
!85 = !DIEnumerator(name: "PTR_TO_XDP_SOCK", value: 18, isUnsigned: true)
!86 = !DIEnumerator(name: "PTR_TO_BTF_ID", value: 19, isUnsigned: true)
!87 = !DIEnumerator(name: "PTR_TO_BTF_ID_OR_NULL", value: 20, isUnsigned: true)
!88 = !DIEnumerator(name: "PTR_TO_MEM", value: 21, isUnsigned: true)
!89 = !DIEnumerator(name: "PTR_TO_MEM_OR_NULL", value: 22, isUnsigned: true)
!90 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF", value: 23, isUnsigned: true)
!91 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF_OR_NULL", value: 24, isUnsigned: true)
!92 = !DIEnumerator(name: "PTR_TO_RDWR_BUF", value: 25, isUnsigned: true)
!93 = !DIEnumerator(name: "PTR_TO_RDWR_BUF_OR_NULL", value: 26, isUnsigned: true)
!94 = !DIEnumerator(name: "PTR_TO_PERCPU_BTF_ID", value: 27, isUnsigned: true)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_prog_type", file: !96, line: 170, baseType: !7, size: 32, elements: !97)
!96 = !DIFile(filename: "./include/uapi/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!97 = !{!98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128}
!98 = !DIEnumerator(name: "BPF_PROG_TYPE_UNSPEC", value: 0, isUnsigned: true)
!99 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCKET_FILTER", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "BPF_PROG_TYPE_KPROBE", value: 2, isUnsigned: true)
!101 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_CLS", value: 3, isUnsigned: true)
!102 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_ACT", value: 4, isUnsigned: true)
!103 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACEPOINT", value: 5, isUnsigned: true)
!104 = !DIEnumerator(name: "BPF_PROG_TYPE_XDP", value: 6, isUnsigned: true)
!105 = !DIEnumerator(name: "BPF_PROG_TYPE_PERF_EVENT", value: 7, isUnsigned: true)
!106 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SKB", value: 8, isUnsigned: true)
!107 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK", value: 9, isUnsigned: true)
!108 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_IN", value: 10, isUnsigned: true)
!109 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_OUT", value: 11, isUnsigned: true)
!110 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_XMIT", value: 12, isUnsigned: true)
!111 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCK_OPS", value: 13, isUnsigned: true)
!112 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_SKB", value: 14, isUnsigned: true)
!113 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_DEVICE", value: 15, isUnsigned: true)
!114 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_MSG", value: 16, isUnsigned: true)
!115 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT", value: 17, isUnsigned: true)
!116 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK_ADDR", value: 18, isUnsigned: true)
!117 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_SEG6LOCAL", value: 19, isUnsigned: true)
!118 = !DIEnumerator(name: "BPF_PROG_TYPE_LIRC_MODE2", value: 20, isUnsigned: true)
!119 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_REUSEPORT", value: 21, isUnsigned: true)
!120 = !DIEnumerator(name: "BPF_PROG_TYPE_FLOW_DISSECTOR", value: 22, isUnsigned: true)
!121 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SYSCTL", value: 23, isUnsigned: true)
!122 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE", value: 24, isUnsigned: true)
!123 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCKOPT", value: 25, isUnsigned: true)
!124 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACING", value: 26, isUnsigned: true)
!125 = !DIEnumerator(name: "BPF_PROG_TYPE_STRUCT_OPS", value: 27, isUnsigned: true)
!126 = !DIEnumerator(name: "BPF_PROG_TYPE_EXT", value: 28, isUnsigned: true)
!127 = !DIEnumerator(name: "BPF_PROG_TYPE_LSM", value: 29, isUnsigned: true)
!128 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_LOOKUP", value: 30, isUnsigned: true)
!129 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_attach_type", file: !96, line: 204, baseType: !7, size: 32, elements: !130)
!130 = !{!131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169}
!131 = !DIEnumerator(name: "BPF_CGROUP_INET_INGRESS", value: 0, isUnsigned: true)
!132 = !DIEnumerator(name: "BPF_CGROUP_INET_EGRESS", value: 1, isUnsigned: true)
!133 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_CREATE", value: 2, isUnsigned: true)
!134 = !DIEnumerator(name: "BPF_CGROUP_SOCK_OPS", value: 3, isUnsigned: true)
!135 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_PARSER", value: 4, isUnsigned: true)
!136 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_VERDICT", value: 5, isUnsigned: true)
!137 = !DIEnumerator(name: "BPF_CGROUP_DEVICE", value: 6, isUnsigned: true)
!138 = !DIEnumerator(name: "BPF_SK_MSG_VERDICT", value: 7, isUnsigned: true)
!139 = !DIEnumerator(name: "BPF_CGROUP_INET4_BIND", value: 8, isUnsigned: true)
!140 = !DIEnumerator(name: "BPF_CGROUP_INET6_BIND", value: 9, isUnsigned: true)
!141 = !DIEnumerator(name: "BPF_CGROUP_INET4_CONNECT", value: 10, isUnsigned: true)
!142 = !DIEnumerator(name: "BPF_CGROUP_INET6_CONNECT", value: 11, isUnsigned: true)
!143 = !DIEnumerator(name: "BPF_CGROUP_INET4_POST_BIND", value: 12, isUnsigned: true)
!144 = !DIEnumerator(name: "BPF_CGROUP_INET6_POST_BIND", value: 13, isUnsigned: true)
!145 = !DIEnumerator(name: "BPF_CGROUP_UDP4_SENDMSG", value: 14, isUnsigned: true)
!146 = !DIEnumerator(name: "BPF_CGROUP_UDP6_SENDMSG", value: 15, isUnsigned: true)
!147 = !DIEnumerator(name: "BPF_LIRC_MODE2", value: 16, isUnsigned: true)
!148 = !DIEnumerator(name: "BPF_FLOW_DISSECTOR", value: 17, isUnsigned: true)
!149 = !DIEnumerator(name: "BPF_CGROUP_SYSCTL", value: 18, isUnsigned: true)
!150 = !DIEnumerator(name: "BPF_CGROUP_UDP4_RECVMSG", value: 19, isUnsigned: true)
!151 = !DIEnumerator(name: "BPF_CGROUP_UDP6_RECVMSG", value: 20, isUnsigned: true)
!152 = !DIEnumerator(name: "BPF_CGROUP_GETSOCKOPT", value: 21, isUnsigned: true)
!153 = !DIEnumerator(name: "BPF_CGROUP_SETSOCKOPT", value: 22, isUnsigned: true)
!154 = !DIEnumerator(name: "BPF_TRACE_RAW_TP", value: 23, isUnsigned: true)
!155 = !DIEnumerator(name: "BPF_TRACE_FENTRY", value: 24, isUnsigned: true)
!156 = !DIEnumerator(name: "BPF_TRACE_FEXIT", value: 25, isUnsigned: true)
!157 = !DIEnumerator(name: "BPF_MODIFY_RETURN", value: 26, isUnsigned: true)
!158 = !DIEnumerator(name: "BPF_LSM_MAC", value: 27, isUnsigned: true)
!159 = !DIEnumerator(name: "BPF_TRACE_ITER", value: 28, isUnsigned: true)
!160 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETPEERNAME", value: 29, isUnsigned: true)
!161 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETPEERNAME", value: 30, isUnsigned: true)
!162 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETSOCKNAME", value: 31, isUnsigned: true)
!163 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETSOCKNAME", value: 32, isUnsigned: true)
!164 = !DIEnumerator(name: "BPF_XDP_DEVMAP", value: 33, isUnsigned: true)
!165 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_RELEASE", value: 34, isUnsigned: true)
!166 = !DIEnumerator(name: "BPF_XDP_CPUMAP", value: 35, isUnsigned: true)
!167 = !DIEnumerator(name: "BPF_SK_LOOKUP", value: 36, isUnsigned: true)
!168 = !DIEnumerator(name: "BPF_XDP", value: 37, isUnsigned: true)
!169 = !DIEnumerator(name: "__MAX_BPF_ATTACH_TYPE", value: 38, isUnsigned: true)
!170 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_tramp_prog_type", file: !65, line: 578, baseType: !7, size: 32, elements: !171)
!171 = !{!172, !173, !174, !175, !176}
!172 = !DIEnumerator(name: "BPF_TRAMP_FENTRY", value: 0, isUnsigned: true)
!173 = !DIEnumerator(name: "BPF_TRAMP_FEXIT", value: 1, isUnsigned: true)
!174 = !DIEnumerator(name: "BPF_TRAMP_MODIFY_RETURN", value: 2, isUnsigned: true)
!175 = !DIEnumerator(name: "BPF_TRAMP_MAX", value: 3, isUnsigned: true)
!176 = !DIEnumerator(name: "BPF_TRAMP_REPLACE", value: 4, isUnsigned: true)
!177 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_map_type", file: !96, line: 130, baseType: !7, size: 32, elements: !178)
!178 = !{!179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207}
!179 = !DIEnumerator(name: "BPF_MAP_TYPE_UNSPEC", value: 0, isUnsigned: true)
!180 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH", value: 1, isUnsigned: true)
!181 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY", value: 2, isUnsigned: true)
!182 = !DIEnumerator(name: "BPF_MAP_TYPE_PROG_ARRAY", value: 3, isUnsigned: true)
!183 = !DIEnumerator(name: "BPF_MAP_TYPE_PERF_EVENT_ARRAY", value: 4, isUnsigned: true)
!184 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_HASH", value: 5, isUnsigned: true)
!185 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_ARRAY", value: 6, isUnsigned: true)
!186 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK_TRACE", value: 7, isUnsigned: true)
!187 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_ARRAY", value: 8, isUnsigned: true)
!188 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_HASH", value: 9, isUnsigned: true)
!189 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_PERCPU_HASH", value: 10, isUnsigned: true)
!190 = !DIEnumerator(name: "BPF_MAP_TYPE_LPM_TRIE", value: 11, isUnsigned: true)
!191 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY_OF_MAPS", value: 12, isUnsigned: true)
!192 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH_OF_MAPS", value: 13, isUnsigned: true)
!193 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP", value: 14, isUnsigned: true)
!194 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKMAP", value: 15, isUnsigned: true)
!195 = !DIEnumerator(name: "BPF_MAP_TYPE_CPUMAP", value: 16, isUnsigned: true)
!196 = !DIEnumerator(name: "BPF_MAP_TYPE_XSKMAP", value: 17, isUnsigned: true)
!197 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKHASH", value: 18, isUnsigned: true)
!198 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_STORAGE", value: 19, isUnsigned: true)
!199 = !DIEnumerator(name: "BPF_MAP_TYPE_REUSEPORT_SOCKARRAY", value: 20, isUnsigned: true)
!200 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE", value: 21, isUnsigned: true)
!201 = !DIEnumerator(name: "BPF_MAP_TYPE_QUEUE", value: 22, isUnsigned: true)
!202 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK", value: 23, isUnsigned: true)
!203 = !DIEnumerator(name: "BPF_MAP_TYPE_SK_STORAGE", value: 24, isUnsigned: true)
!204 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP_HASH", value: 25, isUnsigned: true)
!205 = !DIEnumerator(name: "BPF_MAP_TYPE_STRUCT_OPS", value: 26, isUnsigned: true)
!206 = !DIEnumerator(name: "BPF_MAP_TYPE_RINGBUF", value: 27, isUnsigned: true)
!207 = !DIEnumerator(name: "BPF_MAP_TYPE_INODE_STORAGE", value: 28, isUnsigned: true)
!208 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_dpipe_field_mapping_type", file: !209, line: 541, baseType: !7, size: 32, elements: !210)
!209 = !DIFile(filename: "./include/uapi/linux/devlink.h", directory: "/home/lizy2001/genbc/linux")
!210 = !{!211, !212}
!211 = !DIEnumerator(name: "DEVLINK_DPIPE_FIELD_MAPPING_TYPE_NONE", value: 0, isUnsigned: true)
!212 = !DIEnumerator(name: "DEVLINK_DPIPE_FIELD_MAPPING_TYPE_IFINDEX", value: 1, isUnsigned: true)
!213 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_reload_action", file: !209, line: 304, baseType: !7, size: 32, elements: !214)
!214 = !{!215, !216, !217, !218, !219}
!215 = !DIEnumerator(name: "DEVLINK_RELOAD_ACTION_UNSPEC", value: 0, isUnsigned: true)
!216 = !DIEnumerator(name: "DEVLINK_RELOAD_ACTION_DRIVER_REINIT", value: 1, isUnsigned: true)
!217 = !DIEnumerator(name: "DEVLINK_RELOAD_ACTION_FW_ACTIVATE", value: 2, isUnsigned: true)
!218 = !DIEnumerator(name: "__DEVLINK_RELOAD_ACTION_MAX", value: 3, isUnsigned: true)
!219 = !DIEnumerator(name: "DEVLINK_RELOAD_ACTION_MAX", value: 2, isUnsigned: true)
!220 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_reload_limit", file: !209, line: 314, baseType: !7, size: 32, elements: !221)
!221 = !{!222, !223, !224, !225}
!222 = !DIEnumerator(name: "DEVLINK_RELOAD_LIMIT_UNSPEC", value: 0, isUnsigned: true)
!223 = !DIEnumerator(name: "DEVLINK_RELOAD_LIMIT_NO_RESET", value: 1, isUnsigned: true)
!224 = !DIEnumerator(name: "__DEVLINK_RELOAD_LIMIT_MAX", value: 2, isUnsigned: true)
!225 = !DIEnumerator(name: "DEVLINK_RELOAD_LIMIT_MAX", value: 1, isUnsigned: true)
!226 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_port_type", file: !209, line: 134, baseType: !7, size: 32, elements: !227)
!227 = !{!228, !229, !230, !231}
!228 = !DIEnumerator(name: "DEVLINK_PORT_TYPE_NOTSET", value: 0, isUnsigned: true)
!229 = !DIEnumerator(name: "DEVLINK_PORT_TYPE_AUTO", value: 1, isUnsigned: true)
!230 = !DIEnumerator(name: "DEVLINK_PORT_TYPE_ETH", value: 2, isUnsigned: true)
!231 = !DIEnumerator(name: "DEVLINK_PORT_TYPE_IB", value: 3, isUnsigned: true)
!232 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_sb_pool_type", file: !209, line: 141, baseType: !7, size: 32, elements: !233)
!233 = !{!234, !235}
!234 = !DIEnumerator(name: "DEVLINK_SB_POOL_TYPE_INGRESS", value: 0, isUnsigned: true)
!235 = !DIEnumerator(name: "DEVLINK_SB_POOL_TYPE_EGRESS", value: 1, isUnsigned: true)
!236 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_sb_threshold_type", file: !209, line: 159, baseType: !7, size: 32, elements: !237)
!237 = !{!238, !239}
!238 = !DIEnumerator(name: "DEVLINK_SB_THRESHOLD_TYPE_STATIC", value: 0, isUnsigned: true)
!239 = !DIEnumerator(name: "DEVLINK_SB_THRESHOLD_TYPE_DYNAMIC", value: 1, isUnsigned: true)
!240 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_eswitch_encap_mode", file: !209, line: 178, baseType: !7, size: 32, elements: !241)
!241 = !{!242, !243}
!242 = !DIEnumerator(name: "DEVLINK_ESWITCH_ENCAP_MODE_NONE", value: 0, isUnsigned: true)
!243 = !DIEnumerator(name: "DEVLINK_ESWITCH_ENCAP_MODE_BASIC", value: 1, isUnsigned: true)
!244 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_trap_type", file: !209, line: 291, baseType: !7, size: 32, elements: !245)
!245 = !{!246, !247, !248}
!246 = !DIEnumerator(name: "DEVLINK_TRAP_TYPE_DROP", value: 0, isUnsigned: true)
!247 = !DIEnumerator(name: "DEVLINK_TRAP_TYPE_EXCEPTION", value: 1, isUnsigned: true)
!248 = !DIEnumerator(name: "DEVLINK_TRAP_TYPE_CONTROL", value: 2, isUnsigned: true)
!249 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_trap_action", file: !209, line: 268, baseType: !7, size: 32, elements: !250)
!250 = !{!251, !252, !253}
!251 = !DIEnumerator(name: "DEVLINK_TRAP_ACTION_DROP", value: 0, isUnsigned: true)
!252 = !DIEnumerator(name: "DEVLINK_TRAP_ACTION_TRAP", value: 1, isUnsigned: true)
!253 = !DIEnumerator(name: "DEVLINK_TRAP_ACTION_MIRROR", value: 2, isUnsigned: true)
!254 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_port_flavour", file: !209, line: 183, baseType: !7, size: 32, elements: !255)
!255 = !{!256, !257, !258, !259, !260, !261, !262}
!256 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_PHYSICAL", value: 0, isUnsigned: true)
!257 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_CPU", value: 1, isUnsigned: true)
!258 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_DSA", value: 2, isUnsigned: true)
!259 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_PCI_PF", value: 3, isUnsigned: true)
!260 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_PCI_VF", value: 4, isUnsigned: true)
!261 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_VIRTUAL", value: 5, isUnsigned: true)
!262 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_UNUSED", value: 6, isUnsigned: true)
!263 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_state", file: !264, line: 585, baseType: !7, size: 32, elements: !265)
!264 = !DIFile(filename: "./include/uapi/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!265 = !{!266, !267, !268, !269, !270, !271, !272, !273, !274, !275}
!266 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_AUTONEG", value: 0, isUnsigned: true)
!267 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_TRAINING_FAILURE", value: 1, isUnsigned: true)
!268 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_LOGICAL_MISMATCH", value: 2, isUnsigned: true)
!269 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_BAD_SIGNAL_INTEGRITY", value: 3, isUnsigned: true)
!270 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_NO_CABLE", value: 4, isUnsigned: true)
!271 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CABLE_ISSUE", value: 5, isUnsigned: true)
!272 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_EEPROM_ISSUE", value: 6, isUnsigned: true)
!273 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CALIBRATION_FAILURE", value: 7, isUnsigned: true)
!274 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_POWER_BUDGET_EXCEEDED", value: 8, isUnsigned: true)
!275 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_OVERHEAT", value: 9, isUnsigned: true)
!276 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_autoneg", file: !264, line: 602, baseType: !7, size: 32, elements: !277)
!277 = !{!278, !279, !280, !281, !282, !283}
!278 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED", value: 1, isUnsigned: true)
!279 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_ACK_NOT_RECEIVED", value: 2, isUnsigned: true)
!280 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NEXT_PAGE_EXCHANGE_FAILED", value: 3, isUnsigned: true)
!281 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED_FORCE_MODE", value: 4, isUnsigned: true)
!282 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_FEC_MISMATCH_DURING_OVERRIDE", value: 5, isUnsigned: true)
!283 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_HCD", value: 6, isUnsigned: true)
!284 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_training", file: !264, line: 615, baseType: !7, size: 32, elements: !285)
!285 = !{!286, !287, !288, !289}
!286 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_FRAME_LOCK_NOT_ACQUIRED", value: 1, isUnsigned: true)
!287 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_INHIBIT_TIMEOUT", value: 2, isUnsigned: true)
!288 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_PARTNER_DID_NOT_SET_RECEIVER_READY", value: 3, isUnsigned: true)
!289 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_REMOTE_FAULT", value: 4, isUnsigned: true)
!290 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_logical_mismatch", file: !264, line: 626, baseType: !7, size: 32, elements: !291)
!291 = !{!292, !293, !294, !295, !296}
!292 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_BLOCK_LOCK", value: 1, isUnsigned: true)
!293 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_AM_LOCK", value: 2, isUnsigned: true)
!294 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_GET_ALIGN_STATUS", value: 3, isUnsigned: true)
!295 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_FC_FEC_IS_NOT_LOCKED", value: 4, isUnsigned: true)
!296 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_RS_FEC_IS_NOT_LOCKED", value: 5, isUnsigned: true)
!297 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_bad_signal_integrity", file: !264, line: 638, baseType: !7, size: 32, elements: !298)
!298 = !{!299, !300}
!299 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_LARGE_NUMBER_OF_PHYSICAL_ERRORS", value: 1, isUnsigned: true)
!300 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_UNSUPPORTED_RATE", value: 2, isUnsigned: true)
!301 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_cable_issue", file: !264, line: 647, baseType: !7, size: 32, elements: !302)
!302 = !{!303, !304}
!303 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_UNSUPPORTED_CABLE", value: 1, isUnsigned: true)
!304 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_CABLE_TEST_FAILURE", value: 2, isUnsigned: true)
!305 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_phys_id_state", file: !306, line: 54, baseType: !7, size: 32, elements: !307)
!306 = !DIFile(filename: "./include/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!307 = !{!308, !309, !310, !311}
!308 = !DIEnumerator(name: "ETHTOOL_ID_INACTIVE", value: 0, isUnsigned: true)
!309 = !DIEnumerator(name: "ETHTOOL_ID_ACTIVE", value: 1, isUnsigned: true)
!310 = !DIEnumerator(name: "ETHTOOL_ID_ON", value: 2, isUnsigned: true)
!311 = !DIEnumerator(name: "ETHTOOL_ID_OFF", value: 3, isUnsigned: true)
!312 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rx_handler_result", file: !31, line: 423, baseType: !7, size: 32, elements: !313)
!313 = !{!314, !315, !316, !317}
!314 = !DIEnumerator(name: "RX_HANDLER_CONSUMED", value: 0, isUnsigned: true)
!315 = !DIEnumerator(name: "RX_HANDLER_ANOTHER", value: 1, isUnsigned: true)
!316 = !DIEnumerator(name: "RX_HANDLER_EXACT", value: 2, isUnsigned: true)
!317 = !DIEnumerator(name: "RX_HANDLER_PASS", value: 3, isUnsigned: true)
!318 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !319, file: !31, line: 2085, baseType: !7, size: 32, elements: !7396)
!319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device", file: !31, line: 1858, size: 15808, elements: !320)
!320 = !{!321, !326, !349, !366, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !383, !391, !392, !393, !394, !395, !396, !397, !398, !399, !425, !435, !436, !437, !442, !443, !447, !450, !6615, !7129, !7133, !7173, !7174, !7175, !7176, !7177, !7178, !7179, !7180, !7181, !7182, !7183, !7184, !7185, !7186, !7187, !7188, !7189, !7190, !7191, !7192, !7193, !7194, !7195, !7196, !7197, !7198, !7199, !7204, !7205, !7206, !7207, !7208, !7209, !7210, !7213, !7216, !7219, !7222, !7225, !7226, !7239, !7240, !7241, !7242, !7243, !7244, !7251, !7252, !7286, !7287, !7288, !7289, !7290, !7291, !7292, !7293, !7294, !7297, !7298, !7299, !7300, !7301, !7302, !7303, !7304, !7305, !7310, !7311, !7312, !7313, !7350, !7351, !7353, !7354, !7358, !7359, !7360, !7361, !7367, !7369, !7372, !7375, !7377, !7378, !7379, !7380, !7381, !7385, !7388}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !319, file: !31, line: 1859, baseType: !322, size: 128)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 128, elements: !324)
!323 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!324 = !{!325}
!325 = !DISubrange(count: 16)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "name_node", scope: !319, file: !31, line: 1860, baseType: !327, size: 64, offset: 128)
!327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64)
!328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_name_node", file: !31, line: 938, size: 384, elements: !329)
!329 = !{!330, !338, !344, !346}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !328, file: !31, line: 939, baseType: !331, size: 128)
!331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !332, line: 186, size: 128, elements: !333)
!332 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!333 = !{!334, !336}
!334 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !331, file: !332, line: 187, baseType: !335, size: 64)
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !331, file: !332, line: 187, baseType: !337, size: 64, offset: 64)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !328, file: !31, line: 940, baseType: !339, size: 128, offset: 128)
!339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !332, line: 178, size: 128, elements: !340)
!340 = !{!341, !343}
!341 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !339, file: !332, line: 179, baseType: !342, size: 64)
!342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !339, size: 64)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !339, file: !332, line: 179, baseType: !342, size: 64, offset: 64)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !328, file: !31, line: 941, baseType: !345, size: 64, offset: 256)
!345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 64)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !328, file: !31, line: 942, baseType: !347, size: 64, offset: 320)
!347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !348, size: 64)
!348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !323)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !319, file: !31, line: 1861, baseType: !350, size: 64, offset: 192)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64)
!351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ifalias", file: !31, line: 930, size: 128, elements: !352)
!352 = !{!353, !362}
!353 = !DIDerivedType(tag: DW_TAG_member, name: "rcuhead", scope: !351, file: !31, line: 931, baseType: !354, size: 128, align: 64)
!354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !332, line: 216, size: 128, align: 64, elements: !355)
!355 = !{!356, !358}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !354, file: !332, line: 217, baseType: !357, size: 64)
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 64)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !354, file: !332, line: 218, baseType: !359, size: 64, offset: 64)
!359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 64)
!360 = !DISubroutineType(types: !361)
!361 = !{null, !357}
!362 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !351, file: !31, line: 932, baseType: !363, offset: 128)
!363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, elements: !364)
!364 = !{!365}
!365 = !DISubrange(count: -1)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !319, file: !31, line: 1866, baseType: !367, size: 64, offset: 256)
!367 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !319, file: !31, line: 1867, baseType: !367, size: 64, offset: 320)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !319, file: !31, line: 1868, baseType: !367, size: 64, offset: 384)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !319, file: !31, line: 1869, baseType: !32, size: 32, offset: 448)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !319, file: !31, line: 1877, baseType: !367, size: 64, offset: 512)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !319, file: !31, line: 1879, baseType: !339, size: 128, offset: 576)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "napi_list", scope: !319, file: !31, line: 1880, baseType: !339, size: 128, offset: 704)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "unreg_list", scope: !319, file: !31, line: 1881, baseType: !339, size: 128, offset: 832)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "close_list", scope: !319, file: !31, line: 1882, baseType: !339, size: 128, offset: 960)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_all", scope: !319, file: !31, line: 1883, baseType: !339, size: 128, offset: 1088)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_specific", scope: !319, file: !31, line: 1884, baseType: !339, size: 128, offset: 1216)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "adj_list", scope: !319, file: !31, line: 1889, baseType: !379, size: 256, offset: 1344)
!379 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !319, file: !31, line: 1886, size: 256, elements: !380)
!380 = !{!381, !382}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "upper", scope: !379, file: !31, line: 1887, baseType: !339, size: 128)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "lower", scope: !379, file: !31, line: 1888, baseType: !339, size: 128, offset: 128)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !319, file: !31, line: 1891, baseType: !384, size: 64, offset: 1600)
!384 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_features_t", file: !385, line: 12, baseType: !386)
!385 = !DIFile(filename: "./include/linux/netdev_features.h", directory: "/home/lizy2001/genbc/linux")
!386 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !387, line: 23, baseType: !388)
!387 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!388 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !389, line: 31, baseType: !390)
!389 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!390 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "hw_features", scope: !319, file: !31, line: 1892, baseType: !384, size: 64, offset: 1664)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "wanted_features", scope: !319, file: !31, line: 1893, baseType: !384, size: 64, offset: 1728)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_features", scope: !319, file: !31, line: 1894, baseType: !384, size: 64, offset: 1792)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "hw_enc_features", scope: !319, file: !31, line: 1895, baseType: !384, size: 64, offset: 1856)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "mpls_features", scope: !319, file: !31, line: 1896, baseType: !384, size: 64, offset: 1920)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "gso_partial_features", scope: !319, file: !31, line: 1897, baseType: !384, size: 64, offset: 1984)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !319, file: !31, line: 1899, baseType: !32, size: 32, offset: 2048)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !319, file: !31, line: 1900, baseType: !32, size: 32, offset: 2080)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !319, file: !31, line: 1902, baseType: !400, size: 1472, offset: 2112)
!400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_stats", file: !31, line: 169, size: 1472, elements: !401)
!401 = !{!402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !400, file: !31, line: 170, baseType: !367, size: 64)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !400, file: !31, line: 171, baseType: !367, size: 64, offset: 64)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !400, file: !31, line: 172, baseType: !367, size: 64, offset: 128)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !400, file: !31, line: 173, baseType: !367, size: 64, offset: 192)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !400, file: !31, line: 174, baseType: !367, size: 64, offset: 256)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !400, file: !31, line: 175, baseType: !367, size: 64, offset: 320)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !400, file: !31, line: 176, baseType: !367, size: 64, offset: 384)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !400, file: !31, line: 177, baseType: !367, size: 64, offset: 448)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !400, file: !31, line: 178, baseType: !367, size: 64, offset: 512)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !400, file: !31, line: 179, baseType: !367, size: 64, offset: 576)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !400, file: !31, line: 180, baseType: !367, size: 64, offset: 640)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !400, file: !31, line: 181, baseType: !367, size: 64, offset: 704)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !400, file: !31, line: 182, baseType: !367, size: 64, offset: 768)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !400, file: !31, line: 183, baseType: !367, size: 64, offset: 832)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !400, file: !31, line: 184, baseType: !367, size: 64, offset: 896)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !400, file: !31, line: 185, baseType: !367, size: 64, offset: 960)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !400, file: !31, line: 186, baseType: !367, size: 64, offset: 1024)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !400, file: !31, line: 187, baseType: !367, size: 64, offset: 1088)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !400, file: !31, line: 188, baseType: !367, size: 64, offset: 1152)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !400, file: !31, line: 189, baseType: !367, size: 64, offset: 1216)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !400, file: !31, line: 190, baseType: !367, size: 64, offset: 1280)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !400, file: !31, line: 191, baseType: !367, size: 64, offset: 1344)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !400, file: !31, line: 192, baseType: !367, size: 64, offset: 1408)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !319, file: !31, line: 1904, baseType: !426, size: 64, offset: 3584)
!426 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !427, line: 13, baseType: !428)
!427 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!428 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !332, line: 175, baseType: !429)
!429 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !332, line: 173, size: 64, elements: !430)
!430 = !{!431}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !429, file: !332, line: 174, baseType: !432, size: 64)
!432 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !387, line: 22, baseType: !433)
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !389, line: 30, baseType: !434)
!434 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !319, file: !31, line: 1905, baseType: !426, size: 64, offset: 3648)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !319, file: !31, line: 1906, baseType: !426, size: 64, offset: 3712)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_up_count", scope: !319, file: !31, line: 1909, baseType: !438, size: 32, offset: 3776)
!438 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !332, line: 168, baseType: !439)
!439 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !332, line: 166, size: 32, elements: !440)
!440 = !{!441}
!441 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !439, file: !332, line: 167, baseType: !32, size: 32)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_down_count", scope: !319, file: !31, line: 1910, baseType: !438, size: 32, offset: 3808)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_handlers", scope: !319, file: !31, line: 1913, baseType: !444, size: 64, offset: 3840)
!444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !446)
!446 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_handler_def", file: !31, line: 1913, flags: DIFlagFwdDecl)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_data", scope: !319, file: !31, line: 1914, baseType: !448, size: 64, offset: 3904)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 64)
!449 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_public_data", file: !31, line: 1914, flags: DIFlagFwdDecl)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_ops", scope: !319, file: !31, line: 1916, baseType: !451, size: 64, offset: 3968)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 64)
!452 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !453)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_ops", file: !31, line: 1283, size: 4416, elements: !454)
!454 = !{!455, !459, !463, !464, !465, !628, !632, !637, !641, !642, !647, !648, !771, !776, !780, !786, !790, !822, !830, !834, !839, !843, !844, !850, !854, !858, !862, !863, !885, !889, !904, !915, !919, !928, !932, !933, !937, !958, !962, !966, !970, !974, !981, !985, !1003, !1007, !1057, !1061, !1066, !1070, !1074, !1078, !1088, !1089, !1098, !1104, !1105, !1109, !1113, !1117, !1121, !1122, !1126, !1127, !5534, !5554, !5558, !6605, !6611}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_init", scope: !453, file: !31, line: 1284, baseType: !456, size: 64)
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !457, size: 64)
!457 = !DISubroutineType(types: !458)
!458 = !{!32, !345}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_uninit", scope: !453, file: !31, line: 1285, baseType: !460, size: 64, offset: 64)
!460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64)
!461 = !DISubroutineType(types: !462)
!462 = !{null, !345}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_open", scope: !453, file: !31, line: 1286, baseType: !456, size: 64, offset: 128)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_stop", scope: !453, file: !31, line: 1287, baseType: !456, size: 64, offset: 192)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_start_xmit", scope: !453, file: !31, line: 1288, baseType: !466, size: 64, offset: 256)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64)
!467 = !DISubroutineType(types: !468)
!468 = !{!469, !470, !345}
!469 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_tx_t", file: !31, line: 120, baseType: !30)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff", file: !472, line: 713, size: 1600, elements: !473)
!472 = !DIFile(filename: "./include/linux/skbuff.h", directory: "/home/lizy2001/genbc/linux")
!473 = !{!474, !496, !504, !511, !515, !527, !528, !529, !532, !533, !534, !540, !541, !542, !543, !544, !545, !546, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !586, !587, !588, !589, !591, !592, !597, !602, !607, !608, !609, !610, !611, !612, !613, !614, !615, !617, !618, !620, !621, !622}
!474 = !DIDerivedType(tag: DW_TAG_member, scope: !471, file: !472, line: 714, baseType: !475, size: 192)
!475 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !471, file: !472, line: 714, size: 192, elements: !476)
!476 = !{!477, !487, !495}
!477 = !DIDerivedType(tag: DW_TAG_member, scope: !475, file: !472, line: 715, baseType: !478, size: 192)
!478 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !475, file: !472, line: 715, size: 192, elements: !479)
!479 = !{!480, !481, !482}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !478, file: !472, line: 717, baseType: !470, size: 64)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !478, file: !472, line: 718, baseType: !470, size: 64, offset: 64)
!482 = !DIDerivedType(tag: DW_TAG_member, scope: !478, file: !472, line: 720, baseType: !483, size: 64, offset: 128)
!483 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !478, file: !472, line: 720, size: 64, elements: !484)
!484 = !{!485, !486}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !483, file: !472, line: 721, baseType: !345, size: 64)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "dev_scratch", scope: !483, file: !472, line: 726, baseType: !367, size: 64)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "rbnode", scope: !475, file: !472, line: 729, baseType: !488, size: 192, align: 64)
!488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !489, line: 24, size: 192, align: 64, elements: !490)
!489 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!490 = !{!491, !492, !494}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !488, file: !489, line: 25, baseType: !367, size: 64)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !488, file: !489, line: 26, baseType: !493, size: 64, offset: 64)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 64)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !488, file: !489, line: 27, baseType: !493, size: 64, offset: 128)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !475, file: !472, line: 730, baseType: !339, size: 128)
!496 = !DIDerivedType(tag: DW_TAG_member, scope: !471, file: !472, line: 733, baseType: !497, size: 64, offset: 192)
!497 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !471, file: !472, line: 733, size: 64, elements: !498)
!498 = !{!499, !503}
!499 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !497, file: !472, line: 734, baseType: !500, size: 64)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!501 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !502, line: 19, flags: DIFlagFwdDecl)
!502 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!503 = !DIDerivedType(tag: DW_TAG_member, name: "ip_defrag_offset", scope: !497, file: !472, line: 735, baseType: !32, size: 32)
!504 = !DIDerivedType(tag: DW_TAG_member, scope: !471, file: !472, line: 738, baseType: !505, size: 64, offset: 256)
!505 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !471, file: !472, line: 738, size: 64, elements: !506)
!506 = !{!507, !510}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !505, file: !472, line: 739, baseType: !508, size: 64)
!508 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !509, line: 29, baseType: !432)
!509 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!510 = !DIDerivedType(tag: DW_TAG_member, name: "skb_mstamp_ns", scope: !505, file: !472, line: 740, baseType: !386, size: 64)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !471, file: !472, line: 748, baseType: !512, size: 384, align: 64, offset: 320)
!512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 384, elements: !513)
!513 = !{!514}
!514 = !DISubrange(count: 48)
!515 = !DIDerivedType(tag: DW_TAG_member, scope: !471, file: !472, line: 750, baseType: !516, size: 128, offset: 704)
!516 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !471, file: !472, line: 750, size: 128, elements: !517)
!517 = !{!518, !526}
!518 = !DIDerivedType(tag: DW_TAG_member, scope: !516, file: !472, line: 751, baseType: !519, size: 128)
!519 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !516, file: !472, line: 751, size: 128, elements: !520)
!520 = !{!521, !522}
!521 = !DIDerivedType(tag: DW_TAG_member, name: "_skb_refdst", scope: !519, file: !472, line: 752, baseType: !367, size: 64)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !519, file: !472, line: 753, baseType: !523, size: 64, offset: 64)
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 64)
!524 = !DISubroutineType(types: !525)
!525 = !{null, !470}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_tsorted_anchor", scope: !516, file: !472, line: 755, baseType: !339, size: 128)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !471, file: !472, line: 761, baseType: !7, size: 32, offset: 832)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !471, file: !472, line: 762, baseType: !7, size: 32, offset: 864)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "mac_len", scope: !471, file: !472, line: 763, baseType: !530, size: 16, offset: 896)
!530 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !389, line: 24, baseType: !531)
!531 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_len", scope: !471, file: !472, line: 764, baseType: !530, size: 16, offset: 912)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "queue_mapping", scope: !471, file: !472, line: 769, baseType: !530, size: 16, offset: 928)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "__cloned_offset", scope: !471, file: !472, line: 780, baseType: !535, offset: 944)
!535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !536, elements: !538)
!536 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !389, line: 21, baseType: !537)
!537 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!538 = !{!539}
!539 = !DISubrange(count: 0)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "cloned", scope: !471, file: !472, line: 782, baseType: !536, size: 1, offset: 944, flags: DIFlagBitField, extraData: i64 944)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "nohdr", scope: !471, file: !472, line: 783, baseType: !536, size: 1, offset: 945, flags: DIFlagBitField, extraData: i64 944)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "fclone", scope: !471, file: !472, line: 784, baseType: !536, size: 2, offset: 946, flags: DIFlagBitField, extraData: i64 944)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "peeked", scope: !471, file: !472, line: 785, baseType: !536, size: 1, offset: 948, flags: DIFlagBitField, extraData: i64 944)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "head_frag", scope: !471, file: !472, line: 786, baseType: !536, size: 1, offset: 949, flags: DIFlagBitField, extraData: i64 944)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "pfmemalloc", scope: !471, file: !472, line: 787, baseType: !536, size: 1, offset: 950, flags: DIFlagBitField, extraData: i64 944)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "headers_start", scope: !471, file: !472, line: 795, baseType: !547, offset: 960)
!547 = !DICompositeType(tag: DW_TAG_array_type, baseType: !548, elements: !538)
!548 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !389, line: 27, baseType: !7)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_type_offset", scope: !471, file: !472, line: 807, baseType: !535, offset: 960)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_type", scope: !471, file: !472, line: 809, baseType: !536, size: 3, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_df", scope: !471, file: !472, line: 810, baseType: !536, size: 1, offset: 963, flags: DIFlagBitField, extraData: i64 960)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "nf_trace", scope: !471, file: !472, line: 811, baseType: !536, size: 1, offset: 964, flags: DIFlagBitField, extraData: i64 960)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "ip_summed", scope: !471, file: !472, line: 812, baseType: !536, size: 2, offset: 965, flags: DIFlagBitField, extraData: i64 960)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "ooo_okay", scope: !471, file: !472, line: 813, baseType: !536, size: 1, offset: 967, flags: DIFlagBitField, extraData: i64 960)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "l4_hash", scope: !471, file: !472, line: 815, baseType: !536, size: 1, offset: 968, flags: DIFlagBitField, extraData: i64 960)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "sw_hash", scope: !471, file: !472, line: 816, baseType: !536, size: 1, offset: 969, flags: DIFlagBitField, extraData: i64 960)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked_valid", scope: !471, file: !472, line: 817, baseType: !536, size: 1, offset: 970, flags: DIFlagBitField, extraData: i64 960)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked", scope: !471, file: !472, line: 818, baseType: !536, size: 1, offset: 971, flags: DIFlagBitField, extraData: i64 960)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "no_fcs", scope: !471, file: !472, line: 819, baseType: !536, size: 1, offset: 972, flags: DIFlagBitField, extraData: i64 960)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "encapsulation", scope: !471, file: !472, line: 821, baseType: !536, size: 1, offset: 973, flags: DIFlagBitField, extraData: i64 960)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "encap_hdr_csum", scope: !471, file: !472, line: 822, baseType: !536, size: 1, offset: 974, flags: DIFlagBitField, extraData: i64 960)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "csum_valid", scope: !471, file: !472, line: 823, baseType: !536, size: 1, offset: 975, flags: DIFlagBitField, extraData: i64 960)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_vlan_present_offset", scope: !471, file: !472, line: 832, baseType: !535, offset: 976)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_present", scope: !471, file: !472, line: 834, baseType: !536, size: 1, offset: 976, flags: DIFlagBitField, extraData: i64 976)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "csum_complete_sw", scope: !471, file: !472, line: 835, baseType: !536, size: 1, offset: 977, flags: DIFlagBitField, extraData: i64 976)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "csum_level", scope: !471, file: !472, line: 836, baseType: !536, size: 2, offset: 978, flags: DIFlagBitField, extraData: i64 976)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "csum_not_inet", scope: !471, file: !472, line: 837, baseType: !536, size: 1, offset: 980, flags: DIFlagBitField, extraData: i64 976)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "dst_pending_confirm", scope: !471, file: !472, line: 838, baseType: !536, size: 1, offset: 981, flags: DIFlagBitField, extraData: i64 976)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_nodetype", scope: !471, file: !472, line: 840, baseType: !536, size: 2, offset: 982, flags: DIFlagBitField, extraData: i64 976)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "ipvs_property", scope: !471, file: !472, line: 843, baseType: !536, size: 1, offset: 984, flags: DIFlagBitField, extraData: i64 976)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol_type", scope: !471, file: !472, line: 844, baseType: !536, size: 1, offset: 985, flags: DIFlagBitField, extraData: i64 976)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "remcsum_offload", scope: !471, file: !472, line: 845, baseType: !536, size: 1, offset: 986, flags: DIFlagBitField, extraData: i64 976)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "offload_fwd_mark", scope: !471, file: !472, line: 847, baseType: !536, size: 1, offset: 987, flags: DIFlagBitField, extraData: i64 976)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "offload_l3_fwd_mark", scope: !471, file: !472, line: 848, baseType: !536, size: 1, offset: 988, flags: DIFlagBitField, extraData: i64 976)
!575 = !DIDerivedType(tag: DW_TAG_member, scope: !471, file: !472, line: 866, baseType: !576, size: 32, offset: 992)
!576 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !471, file: !472, line: 866, size: 32, elements: !577)
!577 = !{!578, !581}
!578 = !DIDerivedType(tag: DW_TAG_member, name: "csum", scope: !576, file: !472, line: 867, baseType: !579, size: 32)
!579 = !DIDerivedType(tag: DW_TAG_typedef, name: "__wsum", file: !580, line: 37, baseType: !548)
!580 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!581 = !DIDerivedType(tag: DW_TAG_member, scope: !576, file: !472, line: 868, baseType: !582, size: 32)
!582 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !576, file: !472, line: 868, size: 32, elements: !583)
!583 = !{!584, !585}
!584 = !DIDerivedType(tag: DW_TAG_member, name: "csum_start", scope: !582, file: !472, line: 869, baseType: !530, size: 16)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "csum_offset", scope: !582, file: !472, line: 870, baseType: !530, size: 16, offset: 16)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !471, file: !472, line: 873, baseType: !548, size: 32, offset: 1024)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "skb_iif", scope: !471, file: !472, line: 874, baseType: !32, size: 32, offset: 1056)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !471, file: !472, line: 875, baseType: !548, size: 32, offset: 1088)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !471, file: !472, line: 876, baseType: !590, size: 16, offset: 1120)
!590 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be16", file: !580, line: 30, baseType: !530)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !471, file: !472, line: 877, baseType: !530, size: 16, offset: 1136)
!592 = !DIDerivedType(tag: DW_TAG_member, scope: !471, file: !472, line: 879, baseType: !593, size: 32, offset: 1152)
!593 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !471, file: !472, line: 879, size: 32, elements: !594)
!594 = !{!595, !596}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !593, file: !472, line: 880, baseType: !7, size: 32)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "sender_cpu", scope: !593, file: !472, line: 881, baseType: !7, size: 32)
!597 = !DIDerivedType(tag: DW_TAG_member, scope: !471, file: !472, line: 888, baseType: !598, size: 32, offset: 1184)
!598 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !471, file: !472, line: 888, size: 32, elements: !599)
!599 = !{!600, !601}
!600 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !598, file: !472, line: 889, baseType: !548, size: 32)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tailroom", scope: !598, file: !472, line: 890, baseType: !548, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_member, scope: !471, file: !472, line: 893, baseType: !603, size: 16, offset: 1216)
!603 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !471, file: !472, line: 893, size: 16, elements: !604)
!604 = !{!605, !606}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol", scope: !603, file: !472, line: 894, baseType: !590, size: 16)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "inner_ipproto", scope: !603, file: !472, line: 895, baseType: !536, size: 8)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "inner_transport_header", scope: !471, file: !472, line: 898, baseType: !530, size: 16, offset: 1232)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "inner_network_header", scope: !471, file: !472, line: 899, baseType: !530, size: 16, offset: 1248)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "inner_mac_header", scope: !471, file: !472, line: 900, baseType: !530, size: 16, offset: 1264)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !471, file: !472, line: 902, baseType: !590, size: 16, offset: 1280)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "transport_header", scope: !471, file: !472, line: 903, baseType: !530, size: 16, offset: 1296)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "network_header", scope: !471, file: !472, line: 904, baseType: !530, size: 16, offset: 1312)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "mac_header", scope: !471, file: !472, line: 905, baseType: !530, size: 16, offset: 1328)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "headers_end", scope: !471, file: !472, line: 908, baseType: !547, offset: 1344)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !471, file: !472, line: 912, baseType: !616, size: 32, offset: 1344)
!616 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_buff_data_t", file: !472, line: 606, baseType: !7)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !471, file: !472, line: 913, baseType: !616, size: 32, offset: 1376)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !471, file: !472, line: 914, baseType: !619, size: 64, offset: 1408)
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !537, size: 64)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !471, file: !472, line: 915, baseType: !619, size: 64, offset: 1472)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "truesize", scope: !471, file: !472, line: 916, baseType: !7, size: 32, offset: 1536)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !471, file: !472, line: 917, baseType: !623, size: 32, offset: 1568)
!623 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !624, line: 113, baseType: !625)
!624 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !624, line: 111, size: 32, elements: !626)
!626 = !{!627}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !625, file: !624, line: 112, baseType: !438, size: 32)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_features_check", scope: !453, file: !31, line: 1290, baseType: !629, size: 64, offset: 320)
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!630 = !DISubroutineType(types: !631)
!631 = !{!384, !470, !345, !384}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_select_queue", scope: !453, file: !31, line: 1293, baseType: !633, size: 64, offset: 384)
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 64)
!634 = !DISubroutineType(types: !635)
!635 = !{!636, !345, !470, !345}
!636 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !387, line: 19, baseType: !530)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_rx_flags", scope: !453, file: !31, line: 1296, baseType: !638, size: 64, offset: 448)
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 64)
!639 = !DISubroutineType(types: !640)
!640 = !{null, !345, !32}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_mode", scope: !453, file: !31, line: 1298, baseType: !460, size: 64, offset: 512)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_mac_address", scope: !453, file: !31, line: 1299, baseType: !643, size: 64, offset: 576)
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64)
!644 = !DISubroutineType(types: !645)
!645 = !{!32, !345, !646}
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_validate_addr", scope: !453, file: !31, line: 1301, baseType: !456, size: 64, offset: 640)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_do_ioctl", scope: !453, file: !31, line: 1302, baseType: !649, size: 64, offset: 704)
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 64)
!650 = !DISubroutineType(types: !651)
!651 = !{!32, !345, !652, !32}
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifreq", file: !654, line: 234, size: 320, elements: !655)
!654 = !DIFile(filename: "./include/uapi/linux/if.h", directory: "/home/lizy2001/genbc/linux")
!655 = !{!656, !660}
!656 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifrn", scope: !653, file: !654, line: 239, baseType: !657, size: 128)
!657 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !653, file: !654, line: 236, size: 128, elements: !658)
!658 = !{!659}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "ifrn_name", scope: !657, file: !654, line: 238, baseType: !322, size: 128)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifru", scope: !653, file: !654, line: 255, baseType: !661, size: 192, offset: 128)
!661 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !653, file: !654, line: 241, size: 192, elements: !662)
!662 = !{!663, !675, !676, !677, !678, !679, !681, !682, !683, !692, !693, !694, !695}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_addr", scope: !661, file: !654, line: 242, baseType: !664, size: 128)
!664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !665, line: 32, size: 128, elements: !666)
!665 = !DIFile(filename: "./include/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!666 = !{!667, !671}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !664, file: !665, line: 33, baseType: !668, size: 16)
!668 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !665, line: 26, baseType: !669)
!669 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_sa_family_t", file: !670, line: 10, baseType: !531)
!670 = !DIFile(filename: "./include/uapi/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!671 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !664, file: !665, line: 34, baseType: !672, size: 112, offset: 16)
!672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 112, elements: !673)
!673 = !{!674}
!674 = !DISubrange(count: 14)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_dstaddr", scope: !661, file: !654, line: 243, baseType: !664, size: 128)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_broadaddr", scope: !661, file: !654, line: 244, baseType: !664, size: 128)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_netmask", scope: !661, file: !654, line: 245, baseType: !664, size: 128)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_hwaddr", scope: !661, file: !654, line: 246, baseType: !664, size: 128)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_flags", scope: !661, file: !654, line: 247, baseType: !680, size: 16)
!680 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_ivalue", scope: !661, file: !654, line: 248, baseType: !32, size: 32)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_mtu", scope: !661, file: !654, line: 249, baseType: !32, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_map", scope: !661, file: !654, line: 250, baseType: !684, size: 192)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmap", file: !654, line: 196, size: 192, elements: !685)
!685 = !{!686, !687, !688, !689, !690, !691}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !684, file: !654, line: 197, baseType: !367, size: 64)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !684, file: !654, line: 198, baseType: !367, size: 64, offset: 64)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !684, file: !654, line: 199, baseType: !531, size: 16, offset: 128)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !684, file: !654, line: 200, baseType: !537, size: 8, offset: 144)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !684, file: !654, line: 201, baseType: !537, size: 8, offset: 152)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !684, file: !654, line: 202, baseType: !537, size: 8, offset: 160)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_slave", scope: !661, file: !654, line: 251, baseType: !322, size: 128)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_newname", scope: !661, file: !654, line: 252, baseType: !322, size: 128)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_data", scope: !661, file: !654, line: 253, baseType: !646, size: 64)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_settings", scope: !661, file: !654, line: 254, baseType: !696, size: 128)
!696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "if_settings", file: !654, line: 207, size: 128, elements: !697)
!697 = !{!698, !699, !700}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !696, file: !654, line: 208, baseType: !7, size: 32)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !696, file: !654, line: 209, baseType: !7, size: 32, offset: 32)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "ifs_ifsu", scope: !696, file: !654, line: 222, baseType: !701, size: 64, offset: 64)
!701 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !696, file: !654, line: 210, size: 64, elements: !702)
!702 = !{!703, !711, !718, !730, !736, !743, !754, !762}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hdlc", scope: !701, file: !654, line: 212, baseType: !704, size: 64)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 64)
!705 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_hdlc_proto", file: !706, line: 56, baseType: !707)
!706 = !DIFile(filename: "./include/uapi/linux/hdlc/ioctl.h", directory: "/home/lizy2001/genbc/linux")
!707 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !706, line: 53, size: 32, elements: !708)
!708 = !{!709, !710}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !707, file: !706, line: 54, baseType: !531, size: 16)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !707, file: !706, line: 55, baseType: !531, size: 16, offset: 16)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "cisco", scope: !701, file: !654, line: 213, baseType: !712, size: 64)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!713 = !DIDerivedType(tag: DW_TAG_typedef, name: "cisco_proto", file: !706, line: 80, baseType: !714)
!714 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !706, line: 77, size: 64, elements: !715)
!715 = !{!716, !717}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !714, file: !706, line: 78, baseType: !7, size: 32)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !714, file: !706, line: 79, baseType: !7, size: 32, offset: 32)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "fr", scope: !701, file: !654, line: 214, baseType: !719, size: 64)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 64)
!720 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto", file: !706, line: 66, baseType: !721)
!721 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !706, line: 58, size: 192, elements: !722)
!722 = !{!723, !724, !725, !726, !727, !728, !729}
!723 = !DIDerivedType(tag: DW_TAG_member, name: "t391", scope: !721, file: !706, line: 59, baseType: !7, size: 32)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "t392", scope: !721, file: !706, line: 60, baseType: !7, size: 32, offset: 32)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "n391", scope: !721, file: !706, line: 61, baseType: !7, size: 32, offset: 64)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "n392", scope: !721, file: !706, line: 62, baseType: !7, size: 32, offset: 96)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "n393", scope: !721, file: !706, line: 63, baseType: !7, size: 32, offset: 128)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "lmi", scope: !721, file: !706, line: 64, baseType: !531, size: 16, offset: 160)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !721, file: !706, line: 65, baseType: !531, size: 16, offset: 176)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc", scope: !701, file: !654, line: 215, baseType: !731, size: 64)
!731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 64)
!732 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc", file: !706, line: 70, baseType: !733)
!733 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !706, line: 68, size: 32, elements: !734)
!734 = !{!735}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !733, file: !706, line: 69, baseType: !7, size: 32)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc_info", scope: !701, file: !654, line: 216, baseType: !737, size: 64)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 64)
!738 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc_info", file: !706, line: 75, baseType: !739)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !706, line: 72, size: 160, elements: !740)
!740 = !{!741, !742}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !739, file: !706, line: 73, baseType: !7, size: 32)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !739, file: !706, line: 74, baseType: !322, size: 128, offset: 32)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "x25", scope: !701, file: !654, line: 217, baseType: !744, size: 64)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!745 = !DIDerivedType(tag: DW_TAG_typedef, name: "x25_hdlc_proto", file: !706, line: 89, baseType: !746)
!746 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !706, line: 82, size: 192, elements: !747)
!747 = !{!748, !749, !750, !751, !752, !753}
!748 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !746, file: !706, line: 83, baseType: !531, size: 16)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "modulo", scope: !746, file: !706, line: 84, baseType: !7, size: 32, offset: 32)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !746, file: !706, line: 85, baseType: !7, size: 32, offset: 64)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !746, file: !706, line: 86, baseType: !7, size: 32, offset: 96)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "t2", scope: !746, file: !706, line: 87, baseType: !7, size: 32, offset: 128)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !746, file: !706, line: 88, baseType: !7, size: 32, offset: 160)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !701, file: !654, line: 220, baseType: !755, size: 64)
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!756 = !DIDerivedType(tag: DW_TAG_typedef, name: "sync_serial_settings", file: !706, line: 44, baseType: !757)
!757 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !706, line: 40, size: 96, elements: !758)
!758 = !{!759, !760, !761}
!759 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !757, file: !706, line: 41, baseType: !7, size: 32)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !757, file: !706, line: 42, baseType: !7, size: 32, offset: 32)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !757, file: !706, line: 43, baseType: !531, size: 16, offset: 64)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "te1", scope: !701, file: !654, line: 221, baseType: !763, size: 64)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 64)
!764 = !DIDerivedType(tag: DW_TAG_typedef, name: "te1_settings", file: !706, line: 51, baseType: !765)
!765 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !706, line: 46, size: 128, elements: !766)
!766 = !{!767, !768, !769, !770}
!767 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !765, file: !706, line: 47, baseType: !7, size: 32)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !765, file: !706, line: 48, baseType: !7, size: 32, offset: 32)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !765, file: !706, line: 49, baseType: !531, size: 16, offset: 64)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "slot_map", scope: !765, file: !706, line: 50, baseType: !7, size: 32, offset: 96)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_config", scope: !453, file: !31, line: 1304, baseType: !772, size: 64, offset: 768)
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 64)
!773 = !DISubroutineType(types: !774)
!774 = !{!32, !345, !775}
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !684, size: 64)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_mtu", scope: !453, file: !31, line: 1306, baseType: !777, size: 64, offset: 832)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!778 = !DISubroutineType(types: !779)
!779 = !{!32, !345, !32}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_setup", scope: !453, file: !31, line: 1308, baseType: !781, size: 64, offset: 896)
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 64)
!782 = !DISubroutineType(types: !783)
!783 = !{!32, !345, !784}
!784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !785, size: 64)
!785 = !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_parms", file: !31, line: 206, flags: DIFlagFwdDecl)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tx_timeout", scope: !453, file: !31, line: 1310, baseType: !787, size: 64, offset: 960)
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 64)
!788 = !DISubroutineType(types: !789)
!789 = !{null, !345, !7}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats64", scope: !453, file: !31, line: 1313, baseType: !791, size: 64, offset: 1024)
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 64)
!792 = !DISubroutineType(types: !793)
!793 = !{null, !345, !794}
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 64)
!795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_stats64", file: !796, line: 214, size: 1536, elements: !797)
!796 = !DIFile(filename: "./include/uapi/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!797 = !{!798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821}
!798 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !795, file: !796, line: 215, baseType: !388, size: 64)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !795, file: !796, line: 216, baseType: !388, size: 64, offset: 64)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !795, file: !796, line: 217, baseType: !388, size: 64, offset: 128)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !795, file: !796, line: 218, baseType: !388, size: 64, offset: 192)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !795, file: !796, line: 219, baseType: !388, size: 64, offset: 256)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !795, file: !796, line: 220, baseType: !388, size: 64, offset: 320)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !795, file: !796, line: 221, baseType: !388, size: 64, offset: 384)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !795, file: !796, line: 222, baseType: !388, size: 64, offset: 448)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !795, file: !796, line: 223, baseType: !388, size: 64, offset: 512)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !795, file: !796, line: 224, baseType: !388, size: 64, offset: 576)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !795, file: !796, line: 227, baseType: !388, size: 64, offset: 640)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !795, file: !796, line: 228, baseType: !388, size: 64, offset: 704)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !795, file: !796, line: 229, baseType: !388, size: 64, offset: 768)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !795, file: !796, line: 230, baseType: !388, size: 64, offset: 832)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !795, file: !796, line: 231, baseType: !388, size: 64, offset: 896)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !795, file: !796, line: 232, baseType: !388, size: 64, offset: 960)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !795, file: !796, line: 235, baseType: !388, size: 64, offset: 1024)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !795, file: !796, line: 236, baseType: !388, size: 64, offset: 1088)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !795, file: !796, line: 237, baseType: !388, size: 64, offset: 1152)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !795, file: !796, line: 238, baseType: !388, size: 64, offset: 1216)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !795, file: !796, line: 239, baseType: !388, size: 64, offset: 1280)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !795, file: !796, line: 242, baseType: !388, size: 64, offset: 1344)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !795, file: !796, line: 243, baseType: !388, size: 64, offset: 1408)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !795, file: !796, line: 244, baseType: !388, size: 64, offset: 1472)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_has_offload_stats", scope: !453, file: !31, line: 1315, baseType: !823, size: 64, offset: 1088)
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64)
!824 = !DISubroutineType(types: !825)
!825 = !{!826, !828, !32}
!826 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !332, line: 30, baseType: !827)
!827 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!829 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !319)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_offload_stats", scope: !453, file: !31, line: 1316, baseType: !831, size: 64, offset: 1152)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = !DISubroutineType(types: !833)
!833 = !{!32, !32, !828, !646}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats", scope: !453, file: !31, line: 1319, baseType: !835, size: 64, offset: 1216)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = !DISubroutineType(types: !837)
!837 = !{!838, !345}
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !400, size: 64)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_add_vid", scope: !453, file: !31, line: 1321, baseType: !840, size: 64, offset: 1280)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = !DISubroutineType(types: !842)
!842 = !{!32, !345, !590, !636}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_kill_vid", scope: !453, file: !31, line: 1323, baseType: !840, size: 64, offset: 1344)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_mac", scope: !453, file: !31, line: 1331, baseType: !845, size: 64, offset: 1408)
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !846, size: 64)
!846 = !DISubroutineType(types: !847)
!847 = !{!32, !345, !32, !848}
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!849 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !387, line: 17, baseType: !536)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_vlan", scope: !453, file: !31, line: 1333, baseType: !851, size: 64, offset: 1472)
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 64)
!852 = !DISubroutineType(types: !853)
!853 = !{!32, !345, !32, !636, !849, !590}
!854 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rate", scope: !453, file: !31, line: 1336, baseType: !855, size: 64, offset: 1536)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 64)
!856 = !DISubroutineType(types: !857)
!857 = !{!32, !345, !32, !32, !32}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_spoofchk", scope: !453, file: !31, line: 1339, baseType: !859, size: 64, offset: 1600)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 64)
!860 = !DISubroutineType(types: !861)
!861 = !{!32, !345, !32, !826}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_trust", scope: !453, file: !31, line: 1341, baseType: !859, size: 64, offset: 1664)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_config", scope: !453, file: !31, line: 1343, baseType: !864, size: 64, offset: 1728)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 64)
!865 = !DISubroutineType(types: !866)
!866 = !{!32, !345, !32, !867}
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 64)
!868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_info", file: !869, line: 20, size: 576, elements: !870)
!869 = !DIFile(filename: "./include/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!870 = !{!871, !872, !876, !877, !878, !879, !880, !881, !882, !883, !884}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !868, file: !869, line: 21, baseType: !548, size: 32)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "mac", scope: !868, file: !869, line: 22, baseType: !873, size: 256, offset: 32)
!873 = !DICompositeType(tag: DW_TAG_array_type, baseType: !536, size: 256, elements: !874)
!874 = !{!875}
!875 = !DISubrange(count: 32)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "vlan", scope: !868, file: !869, line: 23, baseType: !548, size: 32, offset: 288)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !868, file: !869, line: 24, baseType: !548, size: 32, offset: 320)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "spoofchk", scope: !868, file: !869, line: 25, baseType: !548, size: 32, offset: 352)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "linkstate", scope: !868, file: !869, line: 26, baseType: !548, size: 32, offset: 384)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "min_tx_rate", scope: !868, file: !869, line: 27, baseType: !548, size: 32, offset: 416)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx_rate", scope: !868, file: !869, line: 28, baseType: !548, size: 32, offset: 448)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "rss_query_en", scope: !868, file: !869, line: 29, baseType: !548, size: 32, offset: 480)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "trusted", scope: !868, file: !869, line: 30, baseType: !548, size: 32, offset: 512)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !868, file: !869, line: 31, baseType: !590, size: 16, offset: 544)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_link_state", scope: !453, file: !31, line: 1346, baseType: !886, size: 64, offset: 1792)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = !DISubroutineType(types: !888)
!888 = !{!32, !345, !32, !32}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_stats", scope: !453, file: !31, line: 1348, baseType: !890, size: 64, offset: 1856)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64)
!891 = !DISubroutineType(types: !892)
!892 = !{!32, !345, !32, !893}
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 64)
!894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_stats", file: !869, line: 9, size: 512, elements: !895)
!895 = !{!896, !897, !898, !899, !900, !901, !902, !903}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !894, file: !869, line: 10, baseType: !388, size: 64)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !894, file: !869, line: 11, baseType: !388, size: 64, offset: 64)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !894, file: !869, line: 12, baseType: !388, size: 64, offset: 128)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !894, file: !869, line: 13, baseType: !388, size: 64, offset: 192)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !894, file: !869, line: 14, baseType: !388, size: 64, offset: 256)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !894, file: !869, line: 15, baseType: !388, size: 64, offset: 320)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !894, file: !869, line: 16, baseType: !388, size: 64, offset: 384)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !894, file: !869, line: 17, baseType: !388, size: 64, offset: 448)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_port", scope: !453, file: !31, line: 1352, baseType: !905, size: 64, offset: 1920)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 64)
!906 = !DISubroutineType(types: !907)
!907 = !{!32, !345, !32, !908}
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 64)
!910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlattr", file: !911, line: 213, size: 32, elements: !912)
!911 = !DIFile(filename: "./include/uapi/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!912 = !{!913, !914}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "nla_len", scope: !910, file: !911, line: 214, baseType: !530, size: 16)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "nla_type", scope: !910, file: !911, line: 215, baseType: !530, size: 16, offset: 16)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_port", scope: !453, file: !31, line: 1355, baseType: !916, size: 64, offset: 1984)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!917 = !DISubroutineType(types: !918)
!918 = !{!32, !345, !32, !470}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_guid", scope: !453, file: !31, line: 1357, baseType: !920, size: 64, offset: 2048)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!921 = !DISubroutineType(types: !922)
!922 = !{!32, !345, !32, !923, !923}
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_guid", file: !796, line: 956, size: 128, elements: !925)
!925 = !{!926, !927}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !924, file: !796, line: 957, baseType: !548, size: 32)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "guid", scope: !924, file: !796, line: 958, baseType: !388, size: 64, offset: 64)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_guid", scope: !453, file: !31, line: 1361, baseType: !929, size: 64, offset: 2112)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!930 = !DISubroutineType(types: !931)
!931 = !{!32, !345, !32, !386, !32}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rss_query_en", scope: !453, file: !31, line: 1364, baseType: !859, size: 64, offset: 2176)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_setup_tc", scope: !453, file: !31, line: 1367, baseType: !934, size: 64, offset: 2240)
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64)
!935 = !DISubroutineType(types: !936)
!936 = !{!32, !345, !37, !646}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_add_slave", scope: !453, file: !31, line: 1400, baseType: !938, size: 64, offset: 2304)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64)
!939 = !DISubroutineType(types: !940)
!940 = !{!32, !345, !345, !941}
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64)
!942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_ext_ack", file: !943, line: 75, size: 384, elements: !944)
!943 = !DIFile(filename: "./include/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!944 = !{!945, !946, !949, !953, !957}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "_msg", scope: !942, file: !943, line: 76, baseType: !347, size: 64)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "bad_attr", scope: !942, file: !943, line: 77, baseType: !947, size: 64, offset: 64)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 64)
!948 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !910)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !942, file: !943, line: 78, baseType: !950, size: 64, offset: 128)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !952)
!952 = !DICompositeType(tag: DW_TAG_structure_type, name: "nla_policy", file: !943, line: 78, flags: DIFlagFwdDecl)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !942, file: !943, line: 79, baseType: !954, size: 160, offset: 192)
!954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !849, size: 160, elements: !955)
!955 = !{!956}
!956 = !DISubrange(count: 20)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "cookie_len", scope: !942, file: !943, line: 80, baseType: !849, size: 8, offset: 352)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_del_slave", scope: !453, file: !31, line: 1403, baseType: !959, size: 64, offset: 2368)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 64)
!960 = !DISubroutineType(types: !961)
!961 = !{!32, !345, !345}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_xmit_slave", scope: !453, file: !31, line: 1405, baseType: !963, size: 64, offset: 2432)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 64)
!964 = !DISubroutineType(types: !965)
!965 = !{!345, !345, !470, !826}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fix_features", scope: !453, file: !31, line: 1408, baseType: !967, size: 64, offset: 2496)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 64)
!968 = !DISubroutineType(types: !969)
!969 = !{!384, !345, !384}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_features", scope: !453, file: !31, line: 1410, baseType: !971, size: 64, offset: 2560)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DISubroutineType(types: !973)
!973 = !{!32, !345, !384}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_construct", scope: !453, file: !31, line: 1412, baseType: !975, size: 64, offset: 2624)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = !DISubroutineType(types: !977)
!977 = !{!32, !345, !978}
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!979 = !DICompositeType(tag: DW_TAG_structure_type, name: "neighbour", file: !980, line: 35, flags: DIFlagFwdDecl)
!980 = !DIFile(filename: "./include/net/dst_ops.h", directory: "/home/lizy2001/genbc/linux")
!981 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_destroy", scope: !453, file: !31, line: 1414, baseType: !982, size: 64, offset: 2688)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64)
!983 = !DISubroutineType(types: !984)
!984 = !{null, !345, !978}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_add", scope: !453, file: !31, line: 1417, baseType: !986, size: 64, offset: 2752)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!987 = !DISubroutineType(types: !988)
!988 = !{!32, !989, !908, !345, !1001, !636, !636, !941}
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 64)
!990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndmsg", file: !991, line: 8, size: 96, elements: !992)
!991 = !DIFile(filename: "./include/uapi/linux/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!992 = !{!993, !994, !995, !996, !998, !999, !1000}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_family", scope: !990, file: !991, line: 9, baseType: !536, size: 8)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad1", scope: !990, file: !991, line: 10, baseType: !536, size: 8, offset: 8)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad2", scope: !990, file: !991, line: 11, baseType: !530, size: 16, offset: 16)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_ifindex", scope: !990, file: !991, line: 12, baseType: !997, size: 32, offset: 32)
!997 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !389, line: 26, baseType: !32)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_state", scope: !990, file: !991, line: 13, baseType: !530, size: 16, offset: 64)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_flags", scope: !990, file: !991, line: 14, baseType: !536, size: 8, offset: 80)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_type", scope: !990, file: !991, line: 15, baseType: !536, size: 8, offset: 88)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1002 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !537)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_del", scope: !453, file: !31, line: 1424, baseType: !1004, size: 64, offset: 2816)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!1005 = !DISubroutineType(types: !1006)
!1006 = !{!32, !989, !908, !345, !1001, !636}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_dump", scope: !453, file: !31, line: 1429, baseType: !1008, size: 64, offset: 2880)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64)
!1009 = !DISubroutineType(types: !1010)
!1010 = !{!32, !470, !1011, !345, !345, !1056}
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64)
!1012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_callback", file: !943, line: 203, size: 1024, elements: !1013)
!1013 = !{!1014, !1015, !1025, !1029, !1033, !1034, !1038, !1039, !1040, !1041, !1043, !1044, !1045, !1046}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !1012, file: !943, line: 204, baseType: !470, size: 64)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "nlh", scope: !1012, file: !943, line: 205, baseType: !1016, size: 64, offset: 64)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!1017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1018)
!1018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlmsghdr", file: !911, line: 44, size: 128, elements: !1019)
!1019 = !{!1020, !1021, !1022, !1023, !1024}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_len", scope: !1018, file: !911, line: 45, baseType: !548, size: 32)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_type", scope: !1018, file: !911, line: 46, baseType: !530, size: 16, offset: 32)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_flags", scope: !1018, file: !911, line: 47, baseType: !530, size: 16, offset: 48)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_seq", scope: !1018, file: !911, line: 48, baseType: !548, size: 32, offset: 64)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_pid", scope: !1018, file: !911, line: 49, baseType: !548, size: 32, offset: 96)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !1012, file: !943, line: 206, baseType: !1026, size: 64, offset: 128)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64)
!1027 = !DISubroutineType(types: !1028)
!1028 = !{!32, !470, !1011}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1012, file: !943, line: 208, baseType: !1030, size: 64, offset: 192)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64)
!1031 = !DISubroutineType(types: !1032)
!1032 = !{!32, !1011}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1012, file: !943, line: 209, baseType: !646, size: 64, offset: 256)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !1012, file: !943, line: 211, baseType: !1035, size: 64, offset: 320)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64)
!1036 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !1037, line: 76, flags: DIFlagFwdDecl)
!1037 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !1012, file: !943, line: 212, baseType: !941, size: 64, offset: 384)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !1012, file: !943, line: 213, baseType: !636, size: 16, offset: 448)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "answer_flags", scope: !1012, file: !943, line: 214, baseType: !636, size: 16, offset: 464)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "min_dump_alloc", scope: !1012, file: !943, line: 215, baseType: !1042, size: 32, offset: 480)
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !387, line: 21, baseType: !548)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "prev_seq", scope: !1012, file: !943, line: 216, baseType: !7, size: 32, offset: 512)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1012, file: !943, line: 216, baseType: !7, size: 32, offset: 544)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "strict_check", scope: !1012, file: !943, line: 217, baseType: !826, size: 8, offset: 576)
!1046 = !DIDerivedType(tag: DW_TAG_member, scope: !1012, file: !943, line: 218, baseType: !1047, size: 384, offset: 640)
!1047 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1012, file: !943, line: 218, size: 384, elements: !1048)
!1048 = !{!1049, !1051}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !1047, file: !943, line: 219, baseType: !1050, size: 384)
!1050 = !DICompositeType(tag: DW_TAG_array_type, baseType: !849, size: 384, elements: !513)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1047, file: !943, line: 224, baseType: !1052, size: 384)
!1052 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1053, size: 384, elements: !1054)
!1053 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!1054 = !{!1055}
!1055 = !DISubrange(count: 6)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !32, size: 64)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_get", scope: !453, file: !31, line: 1434, baseType: !1058, size: 64, offset: 2944)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 64)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{!32, !470, !908, !345, !1001, !636, !1042, !1042, !941}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_setlink", scope: !453, file: !31, line: 1440, baseType: !1062, size: 64, offset: 3008)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 64)
!1063 = !DISubroutineType(types: !1064)
!1064 = !{!32, !345, !1065, !636, !941}
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_getlink", scope: !453, file: !31, line: 1444, baseType: !1067, size: 64, offset: 3072)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 64)
!1068 = !DISubroutineType(types: !1069)
!1069 = !{!32, !470, !1042, !1042, !345, !1042, !32}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_dellink", scope: !453, file: !31, line: 1449, baseType: !1071, size: 64, offset: 3136)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64)
!1072 = !DISubroutineType(types: !1073)
!1073 = !{!32, !345, !1065, !636}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_carrier", scope: !453, file: !31, line: 1452, baseType: !1075, size: 64, offset: 3200)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64)
!1076 = !DISubroutineType(types: !1077)
!1077 = !{!32, !345, !826}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_id", scope: !453, file: !31, line: 1454, baseType: !1079, size: 64, offset: 3264)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 64)
!1080 = !DISubroutineType(types: !1081)
!1081 = !{!32, !345, !1082}
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 64)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_phys_item_id", file: !31, line: 820, size: 264, elements: !1084)
!1084 = !{!1085, !1087}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1083, file: !31, line: 821, baseType: !1086, size: 256)
!1086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !537, size: 256, elements: !874)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "id_len", scope: !1083, file: !31, line: 822, baseType: !537, size: 8, offset: 256)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_port_parent_id", scope: !453, file: !31, line: 1456, baseType: !1079, size: 64, offset: 3328)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_name", scope: !453, file: !31, line: 1458, baseType: !1090, size: 64, offset: 3392)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64)
!1091 = !DISubroutineType(types: !1092)
!1092 = !{!32, !345, !1093, !1094}
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64)
!1094 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !332, line: 55, baseType: !1095)
!1095 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !1096, line: 72, baseType: !1097)
!1096 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!1097 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !1096, line: 16, baseType: !367)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_add", scope: !453, file: !31, line: 1460, baseType: !1099, size: 64, offset: 3456)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64)
!1100 = !DISubroutineType(types: !1101)
!1101 = !{null, !345, !1102}
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64)
!1103 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_info", file: !31, line: 67, flags: DIFlagFwdDecl)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_del", scope: !453, file: !31, line: 1462, baseType: !1099, size: 64, offset: 3520)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_add_station", scope: !453, file: !31, line: 1464, baseType: !1106, size: 64, offset: 3584)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = !DISubroutineType(types: !1108)
!1108 = !{!646, !345, !345}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_del_station", scope: !453, file: !31, line: 1466, baseType: !1110, size: 64, offset: 3648)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{null, !345, !646}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_tx_maxrate", scope: !453, file: !31, line: 1469, baseType: !1114, size: 64, offset: 3712)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!32, !345, !32, !1042}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_iflink", scope: !453, file: !31, line: 1472, baseType: !1118, size: 64, offset: 3776)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 64)
!1119 = !DISubroutineType(types: !1120)
!1120 = !{!32, !828}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_proto_down", scope: !453, file: !31, line: 1473, baseType: !1075, size: 64, offset: 3840)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fill_metadata_dst", scope: !453, file: !31, line: 1475, baseType: !1123, size: 64, offset: 3904)
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64)
!1124 = !DISubroutineType(types: !1125)
!1125 = !{!32, !345, !470}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_headroom", scope: !453, file: !31, line: 1477, baseType: !638, size: 64, offset: 3968)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bpf", scope: !453, file: !31, line: 1479, baseType: !1128, size: 64, offset: 4032)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64)
!1129 = !DISubroutineType(types: !1130)
!1130 = !{!32, !345, !1131}
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64)
!1132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_bpf", file: !31, line: 894, size: 256, elements: !1133)
!1133 = !{!1134, !1135}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !1132, file: !31, line: 895, baseType: !57, size: 32)
!1135 = !DIDerivedType(tag: DW_TAG_member, scope: !1132, file: !31, line: 896, baseType: !1136, size: 192, offset: 64)
!1136 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1132, file: !31, line: 896, size: 192, elements: !1137)
!1137 = !{!1138, !1147, !5527}
!1138 = !DIDerivedType(tag: DW_TAG_member, scope: !1136, file: !31, line: 898, baseType: !1139, size: 192)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1136, file: !31, line: 898, size: 192, elements: !1140)
!1140 = !{!1141, !1142, !1146}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1139, file: !31, line: 899, baseType: !1042, size: 32)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !1139, file: !31, line: 900, baseType: !1143, size: 64, offset: 64)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 64)
!1144 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog", file: !1145, line: 11, flags: DIFlagFwdDecl)
!1145 = !DIFile(filename: "./include/net/flow_dissector.h", directory: "/home/lizy2001/genbc/linux")
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !1139, file: !31, line: 901, baseType: !941, size: 64, offset: 128)
!1147 = !DIDerivedType(tag: DW_TAG_member, scope: !1136, file: !31, line: 904, baseType: !1148, size: 64)
!1148 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1136, file: !31, line: 904, size: 64, elements: !1149)
!1149 = !{!1150}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "offmap", scope: !1148, file: !31, line: 905, baseType: !1151, size: 64)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 64)
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offloaded_map", file: !65, line: 222, size: 2560, elements: !1153)
!1153 = !{!1154, !5506, !5507, !5525, !5526}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !1152, file: !65, line: 223, baseType: !1155, size: 2048)
!1155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map", file: !65, line: 141, size: 2048, elements: !1156)
!1156 = !{!1157, !5480, !5481, !5482, !5483, !5484, !5485, !5486, !5487, !5488, !5489, !5490, !5491, !5492, !5497, !5498, !5499, !5500, !5501, !5502, !5503, !5504, !5505}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1155, file: !65, line: 145, baseType: !1158, size: 64, align: 512)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64)
!1159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1160)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_ops", file: !65, line: 54, size: 2368, elements: !1161)
!1161 = !{!1162, !1361, !1366, !5152, !5156, !5160, !5161, !5165, !5171, !5172, !5173, !5174, !5175, !5179, !5183, !5187, !5188, !5189, !5193, !5194, !5206, !5210, !5214, !5226, !5415, !5419, !5423, !5428, !5432, !5436, !5440, !5446, !5450, !5457, !5461, !5463, !5464}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc_check", scope: !1160, file: !65, line: 56, baseType: !1163, size: 64)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64)
!1164 = !DISubroutineType(types: !1165)
!1165 = !{!32, !1166}
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "bpf_attr", file: !96, line: 483, size: 960, align: 64, elements: !1168)
!1168 = !{!1169, !1185, !1196, !1207, !1231, !1237, !1245, !1262, !1275, !1281, !1290, !1295, !1303, !1315, !1335, !1342, !1346, !1350, !1355}
!1169 = !DIDerivedType(tag: DW_TAG_member, scope: !1167, file: !96, line: 484, baseType: !1170, size: 512)
!1170 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1167, file: !96, line: 484, size: 512, elements: !1171)
!1171 = !{!1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !1170, file: !96, line: 485, baseType: !548, size: 32)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !1170, file: !96, line: 486, baseType: !548, size: 32, offset: 32)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !1170, file: !96, line: 487, baseType: !548, size: 32, offset: 64)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !1170, file: !96, line: 488, baseType: !548, size: 32, offset: 96)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !1170, file: !96, line: 489, baseType: !548, size: 32, offset: 128)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_fd", scope: !1170, file: !96, line: 492, baseType: !548, size: 32, offset: 160)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !1170, file: !96, line: 493, baseType: !548, size: 32, offset: 192)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "map_name", scope: !1170, file: !96, line: 496, baseType: !322, size: 128, offset: 224)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "map_ifindex", scope: !1170, file: !96, line: 497, baseType: !548, size: 32, offset: 352)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "btf_fd", scope: !1170, file: !96, line: 498, baseType: !548, size: 32, offset: 384)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !1170, file: !96, line: 499, baseType: !548, size: 32, offset: 416)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !1170, file: !96, line: 500, baseType: !548, size: 32, offset: 448)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !1170, file: !96, line: 501, baseType: !548, size: 32, offset: 480)
!1185 = !DIDerivedType(tag: DW_TAG_member, scope: !1167, file: !96, line: 507, baseType: !1186, size: 256)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1167, file: !96, line: 507, size: 256, elements: !1187)
!1187 = !{!1188, !1189, !1190, !1195}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1186, file: !96, line: 508, baseType: !548, size: 32)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1186, file: !96, line: 509, baseType: !388, size: 64, align: 64, offset: 64)
!1190 = !DIDerivedType(tag: DW_TAG_member, scope: !1186, file: !96, line: 510, baseType: !1191, size: 64, offset: 128)
!1191 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1186, file: !96, line: 510, size: 64, elements: !1192)
!1192 = !{!1193, !1194}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1191, file: !96, line: 511, baseType: !388, size: 64, align: 64)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "next_key", scope: !1191, file: !96, line: 512, baseType: !388, size: 64, align: 64)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1186, file: !96, line: 514, baseType: !388, size: 64, offset: 192)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !1167, file: !96, line: 532, baseType: !1197, size: 448)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1167, file: !96, line: 517, size: 448, elements: !1198)
!1198 = !{!1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "in_batch", scope: !1197, file: !96, line: 518, baseType: !388, size: 64, align: 64)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "out_batch", scope: !1197, file: !96, line: 521, baseType: !388, size: 64, align: 64, offset: 64)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1197, file: !96, line: 522, baseType: !388, size: 64, align: 64, offset: 128)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1197, file: !96, line: 523, baseType: !388, size: 64, align: 64, offset: 192)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1197, file: !96, line: 524, baseType: !548, size: 32, offset: 256)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1197, file: !96, line: 529, baseType: !548, size: 32, offset: 288)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "elem_flags", scope: !1197, file: !96, line: 530, baseType: !388, size: 64, offset: 320)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1197, file: !96, line: 531, baseType: !388, size: 64, offset: 384)
!1207 = !DIDerivedType(tag: DW_TAG_member, scope: !1167, file: !96, line: 534, baseType: !1208, size: 960)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1167, file: !96, line: 534, size: 960, elements: !1209)
!1209 = !{!1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "prog_type", scope: !1208, file: !96, line: 535, baseType: !548, size: 32)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "insn_cnt", scope: !1208, file: !96, line: 536, baseType: !548, size: 32, offset: 32)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1208, file: !96, line: 537, baseType: !388, size: 64, align: 64, offset: 64)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "license", scope: !1208, file: !96, line: 538, baseType: !388, size: 64, align: 64, offset: 128)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "log_level", scope: !1208, file: !96, line: 539, baseType: !548, size: 32, offset: 192)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "log_size", scope: !1208, file: !96, line: 540, baseType: !548, size: 32, offset: 224)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "log_buf", scope: !1208, file: !96, line: 541, baseType: !388, size: 64, align: 64, offset: 256)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "kern_version", scope: !1208, file: !96, line: 542, baseType: !548, size: 32, offset: 320)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "prog_flags", scope: !1208, file: !96, line: 543, baseType: !548, size: 32, offset: 352)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "prog_name", scope: !1208, file: !96, line: 544, baseType: !322, size: 128, offset: 384)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ifindex", scope: !1208, file: !96, line: 545, baseType: !548, size: 32, offset: 512)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !1208, file: !96, line: 550, baseType: !548, size: 32, offset: 544)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "prog_btf_fd", scope: !1208, file: !96, line: 551, baseType: !548, size: 32, offset: 576)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_rec_size", scope: !1208, file: !96, line: 552, baseType: !548, size: 32, offset: 608)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !1208, file: !96, line: 553, baseType: !388, size: 64, align: 64, offset: 640)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !1208, file: !96, line: 554, baseType: !548, size: 32, offset: 704)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_rec_size", scope: !1208, file: !96, line: 555, baseType: !548, size: 32, offset: 736)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "line_info", scope: !1208, file: !96, line: 556, baseType: !388, size: 64, align: 64, offset: 768)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_cnt", scope: !1208, file: !96, line: 557, baseType: !548, size: 32, offset: 832)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !1208, file: !96, line: 558, baseType: !548, size: 32, offset: 864)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "attach_prog_fd", scope: !1208, file: !96, line: 559, baseType: !548, size: 32, offset: 896)
!1231 = !DIDerivedType(tag: DW_TAG_member, scope: !1167, file: !96, line: 562, baseType: !1232, size: 128)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1167, file: !96, line: 562, size: 128, elements: !1233)
!1233 = !{!1234, !1235, !1236}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "pathname", scope: !1232, file: !96, line: 563, baseType: !388, size: 64, align: 64)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !1232, file: !96, line: 564, baseType: !548, size: 32, offset: 64)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "file_flags", scope: !1232, file: !96, line: 565, baseType: !548, size: 32, offset: 96)
!1237 = !DIDerivedType(tag: DW_TAG_member, scope: !1167, file: !96, line: 568, baseType: !1238, size: 160)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1167, file: !96, line: 568, size: 160, elements: !1239)
!1239 = !{!1240, !1241, !1242, !1243, !1244}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1238, file: !96, line: 569, baseType: !548, size: 32)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "attach_bpf_fd", scope: !1238, file: !96, line: 570, baseType: !548, size: 32, offset: 32)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1238, file: !96, line: 571, baseType: !548, size: 32, offset: 64)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !1238, file: !96, line: 572, baseType: !548, size: 32, offset: 96)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "replace_bpf_fd", scope: !1238, file: !96, line: 573, baseType: !548, size: 32, offset: 128)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !1167, file: !96, line: 600, baseType: !1246, size: 576)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1167, file: !96, line: 579, size: 576, elements: !1247)
!1247 = !{!1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1246, file: !96, line: 580, baseType: !548, size: 32)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !1246, file: !96, line: 581, baseType: !548, size: 32, offset: 32)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_in", scope: !1246, file: !96, line: 582, baseType: !548, size: 32, offset: 64)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_out", scope: !1246, file: !96, line: 583, baseType: !548, size: 32, offset: 96)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "data_in", scope: !1246, file: !96, line: 587, baseType: !388, size: 64, align: 64, offset: 128)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "data_out", scope: !1246, file: !96, line: 588, baseType: !388, size: 64, align: 64, offset: 192)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !1246, file: !96, line: 589, baseType: !548, size: 32, offset: 256)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1246, file: !96, line: 590, baseType: !548, size: 32, offset: 288)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_in", scope: !1246, file: !96, line: 591, baseType: !548, size: 32, offset: 320)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_out", scope: !1246, file: !96, line: 592, baseType: !548, size: 32, offset: 352)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_in", scope: !1246, file: !96, line: 596, baseType: !388, size: 64, align: 64, offset: 384)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_out", scope: !1246, file: !96, line: 597, baseType: !388, size: 64, align: 64, offset: 448)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1246, file: !96, line: 598, baseType: !548, size: 32, offset: 512)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1246, file: !96, line: 599, baseType: !548, size: 32, offset: 544)
!1262 = !DIDerivedType(tag: DW_TAG_member, scope: !1167, file: !96, line: 602, baseType: !1263, size: 96)
!1263 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1167, file: !96, line: 602, size: 96, elements: !1264)
!1264 = !{!1265, !1273, !1274}
!1265 = !DIDerivedType(tag: DW_TAG_member, scope: !1263, file: !96, line: 603, baseType: !1266, size: 32)
!1266 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1263, file: !96, line: 603, size: 32, elements: !1267)
!1267 = !{!1268, !1269, !1270, !1271, !1272}
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "start_id", scope: !1266, file: !96, line: 604, baseType: !548, size: 32)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !1266, file: !96, line: 605, baseType: !548, size: 32)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "map_id", scope: !1266, file: !96, line: 606, baseType: !548, size: 32)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !1266, file: !96, line: 607, baseType: !548, size: 32)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "link_id", scope: !1266, file: !96, line: 608, baseType: !548, size: 32)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "next_id", scope: !1263, file: !96, line: 610, baseType: !548, size: 32, offset: 32)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "open_flags", scope: !1263, file: !96, line: 611, baseType: !548, size: 32, offset: 64)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1167, file: !96, line: 618, baseType: !1276, size: 128)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1167, file: !96, line: 614, size: 128, elements: !1277)
!1277 = !{!1278, !1279, !1280}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !1276, file: !96, line: 615, baseType: !548, size: 32)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "info_len", scope: !1276, file: !96, line: 616, baseType: !548, size: 32, offset: 32)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1276, file: !96, line: 617, baseType: !388, size: 64, align: 64, offset: 64)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "query", scope: !1167, file: !96, line: 627, baseType: !1282, size: 256)
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1167, file: !96, line: 620, size: 256, elements: !1283)
!1283 = !{!1284, !1285, !1286, !1287, !1288, !1289}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1282, file: !96, line: 621, baseType: !548, size: 32)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1282, file: !96, line: 622, baseType: !548, size: 32, offset: 32)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "query_flags", scope: !1282, file: !96, line: 623, baseType: !548, size: 32, offset: 64)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !1282, file: !96, line: 624, baseType: !548, size: 32, offset: 96)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ids", scope: !1282, file: !96, line: 625, baseType: !388, size: 64, align: 64, offset: 128)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "prog_cnt", scope: !1282, file: !96, line: 626, baseType: !548, size: 32, offset: 192)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "raw_tracepoint", scope: !1167, file: !96, line: 632, baseType: !1291, size: 128)
!1291 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1167, file: !96, line: 629, size: 128, elements: !1292)
!1292 = !{!1293, !1294}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1291, file: !96, line: 630, baseType: !388, size: 64)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1291, file: !96, line: 631, baseType: !548, size: 32, offset: 64)
!1295 = !DIDerivedType(tag: DW_TAG_member, scope: !1167, file: !96, line: 634, baseType: !1296, size: 256)
!1296 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1167, file: !96, line: 634, size: 256, elements: !1297)
!1297 = !{!1298, !1299, !1300, !1301, !1302}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !1296, file: !96, line: 635, baseType: !388, size: 64, align: 64)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_buf", scope: !1296, file: !96, line: 636, baseType: !388, size: 64, align: 64, offset: 64)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "btf_size", scope: !1296, file: !96, line: 637, baseType: !548, size: 32, offset: 128)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_size", scope: !1296, file: !96, line: 638, baseType: !548, size: 32, offset: 160)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_level", scope: !1296, file: !96, line: 639, baseType: !548, size: 32, offset: 192)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "task_fd_query", scope: !1167, file: !96, line: 656, baseType: !1304, size: 384)
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1167, file: !96, line: 642, size: 384, elements: !1305)
!1305 = !{!1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1304, file: !96, line: 643, baseType: !548, size: 32)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1304, file: !96, line: 644, baseType: !548, size: 32, offset: 32)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1304, file: !96, line: 645, baseType: !548, size: 32, offset: 64)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !1304, file: !96, line: 646, baseType: !548, size: 32, offset: 96)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1304, file: !96, line: 647, baseType: !388, size: 64, align: 64, offset: 128)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !1304, file: !96, line: 652, baseType: !548, size: 32, offset: 192)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "fd_type", scope: !1304, file: !96, line: 653, baseType: !548, size: 32, offset: 224)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "probe_offset", scope: !1304, file: !96, line: 654, baseType: !388, size: 64, offset: 256)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "probe_addr", scope: !1304, file: !96, line: 655, baseType: !388, size: 64, offset: 320)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "link_create", scope: !1167, file: !96, line: 673, baseType: !1316, size: 256)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1167, file: !96, line: 658, size: 256, elements: !1317)
!1317 = !{!1318, !1319, !1324, !1325, !1326}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1316, file: !96, line: 659, baseType: !548, size: 32)
!1319 = !DIDerivedType(tag: DW_TAG_member, scope: !1316, file: !96, line: 660, baseType: !1320, size: 32, offset: 32)
!1320 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1316, file: !96, line: 660, size: 32, elements: !1321)
!1321 = !{!1322, !1323}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1320, file: !96, line: 661, baseType: !548, size: 32)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "target_ifindex", scope: !1320, file: !96, line: 662, baseType: !548, size: 32)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1316, file: !96, line: 664, baseType: !548, size: 32, offset: 64)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1316, file: !96, line: 665, baseType: !548, size: 32, offset: 96)
!1326 = !DIDerivedType(tag: DW_TAG_member, scope: !1316, file: !96, line: 666, baseType: !1327, size: 128, offset: 128)
!1327 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1316, file: !96, line: 666, size: 128, elements: !1328)
!1328 = !{!1329, !1330}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "target_btf_id", scope: !1327, file: !96, line: 667, baseType: !548, size: 32)
!1330 = !DIDerivedType(tag: DW_TAG_member, scope: !1327, file: !96, line: 668, baseType: !1331, size: 128)
!1331 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1327, file: !96, line: 668, size: 128, elements: !1332)
!1332 = !{!1333, !1334}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info", scope: !1331, file: !96, line: 669, baseType: !388, size: 64, align: 64)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info_len", scope: !1331, file: !96, line: 670, baseType: !548, size: 32, offset: 64)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "link_update", scope: !1167, file: !96, line: 683, baseType: !1336, size: 128)
!1336 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1167, file: !96, line: 675, size: 128, elements: !1337)
!1337 = !{!1338, !1339, !1340, !1341}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1336, file: !96, line: 676, baseType: !548, size: 32)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "new_prog_fd", scope: !1336, file: !96, line: 678, baseType: !548, size: 32, offset: 32)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1336, file: !96, line: 679, baseType: !548, size: 32, offset: 64)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "old_prog_fd", scope: !1336, file: !96, line: 682, baseType: !548, size: 32, offset: 96)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "link_detach", scope: !1167, file: !96, line: 687, baseType: !1343, size: 32)
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1167, file: !96, line: 685, size: 32, elements: !1344)
!1344 = !{!1345}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1343, file: !96, line: 686, baseType: !548, size: 32)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "enable_stats", scope: !1167, file: !96, line: 691, baseType: !1347, size: 32)
!1347 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1167, file: !96, line: 689, size: 32, elements: !1348)
!1348 = !{!1349}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1347, file: !96, line: 690, baseType: !548, size: 32)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "iter_create", scope: !1167, file: !96, line: 696, baseType: !1351, size: 64)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1167, file: !96, line: 693, size: 64, elements: !1352)
!1352 = !{!1353, !1354}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1351, file: !96, line: 694, baseType: !548, size: 32)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1351, file: !96, line: 695, baseType: !548, size: 32, offset: 32)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "prog_bind_map", scope: !1167, file: !96, line: 702, baseType: !1356, size: 96)
!1356 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1167, file: !96, line: 698, size: 96, elements: !1357)
!1357 = !{!1358, !1359, !1360}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1356, file: !96, line: 699, baseType: !548, size: 32)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1356, file: !96, line: 700, baseType: !548, size: 32, offset: 32)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1356, file: !96, line: 701, baseType: !548, size: 32, offset: 64)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc", scope: !1160, file: !65, line: 57, baseType: !1362, size: 64, offset: 64)
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 64)
!1363 = !DISubroutineType(types: !1364)
!1364 = !{!1365, !1166}
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 64)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "map_release", scope: !1160, file: !65, line: 58, baseType: !1367, size: 64, offset: 128)
!1367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 64)
!1368 = !DISubroutineType(types: !1369)
!1369 = !{null, !1365, !1370}
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 64)
!1371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !1372, line: 916, size: 1856, align: 32, elements: !1373)
!1372 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!1373 = !{!1374, !1384, !5102, !5103, !5104, !5105, !5114, !5115, !5116, !5117, !5118, !5119, !5135, !5136, !5145, !5146, !5147, !5148, !5149, !5150, !5151}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !1371, file: !1372, line: 920, baseType: !1375, size: 128)
!1375 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1371, file: !1372, line: 917, size: 128, elements: !1376)
!1376 = !{!1377, !1383}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !1375, file: !1372, line: 918, baseType: !1378, size: 64)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !1379, line: 58, size: 64, elements: !1380)
!1379 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1380 = !{!1381}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1378, file: !1379, line: 59, baseType: !1382, size: 64)
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 64)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !1375, file: !1372, line: 919, baseType: !354, size: 128, align: 64)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !1371, file: !1372, line: 921, baseType: !1385, size: 128, offset: 128)
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !1386, line: 8, size: 128, elements: !1387)
!1386 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!1387 = !{!1388, !1392}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !1385, file: !1386, line: 9, baseType: !1389, size: 64)
!1389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!1390 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !1391, line: 18, flags: DIFlagFwdDecl)
!1391 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !1385, file: !1386, line: 10, baseType: !1393, size: 64, offset: 64)
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 64)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !1391, line: 89, size: 1536, elements: !1395)
!1395 = !{!1396, !1397, !1407, !1415, !1416, !1429, !5071, !5072, !5084, !5085, !5086, !5087, !5088, !5094, !5095, !5096}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !1394, file: !1391, line: 91, baseType: !7, size: 32)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !1394, file: !1391, line: 92, baseType: !1398, size: 32, offset: 32)
!1398 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !1399, line: 277, baseType: !1400)
!1399 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!1400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !1399, line: 277, size: 32, elements: !1401)
!1401 = !{!1402}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1400, file: !1399, line: 277, baseType: !1403, size: 32)
!1403 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !1399, line: 70, baseType: !1404)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !1399, line: 65, size: 32, elements: !1405)
!1405 = !{!1406}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !1404, file: !1399, line: 66, baseType: !7, size: 32)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !1394, file: !1391, line: 93, baseType: !1408, size: 128, offset: 64)
!1408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !1409, line: 38, size: 128, elements: !1410)
!1409 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!1410 = !{!1411, !1413}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1408, file: !1409, line: 39, baseType: !1412, size: 64)
!1412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !1408, file: !1409, line: 39, baseType: !1414, size: 64, offset: 64)
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 64)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !1394, file: !1391, line: 94, baseType: !1393, size: 64, offset: 192)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1394, file: !1391, line: 95, baseType: !1417, size: 128, offset: 256)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !1391, line: 47, size: 128, elements: !1418)
!1418 = !{!1419, !1428}
!1419 = !DIDerivedType(tag: DW_TAG_member, scope: !1417, file: !1391, line: 48, baseType: !1420, size: 64)
!1420 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1417, file: !1391, line: 48, size: 64, elements: !1421)
!1421 = !{!1422, !1427}
!1422 = !DIDerivedType(tag: DW_TAG_member, scope: !1420, file: !1391, line: 49, baseType: !1423, size: 64)
!1423 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1420, file: !1391, line: 49, size: 64, elements: !1424)
!1424 = !{!1425, !1426}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1423, file: !1391, line: 50, baseType: !1042, size: 32)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1423, file: !1391, line: 50, baseType: !1042, size: 32, offset: 32)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !1420, file: !1391, line: 52, baseType: !386, size: 64)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1417, file: !1391, line: 54, baseType: !1001, size: 64, offset: 64)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !1394, file: !1391, line: 96, baseType: !1430, size: 64, offset: 384)
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 64)
!1431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !1372, line: 610, size: 4224, elements: !1432)
!1432 = !{!1433, !1435, !1436, !1444, !1451, !1452, !1599, !4800, !4801, !4802, !4808, !4809, !4810, !4811, !4812, !4813, !4814, !4815, !4816, !4817, !4818, !4819, !4820, !4821, !4822, !4823, !4824, !4825, !4826, !4827, !4832, !4833, !4834, !4835, !4836, !4837, !4838, !5047, !5055, !5056, !5057, !5067, !5068, !5069, !5070}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !1431, file: !1372, line: 611, baseType: !1434, size: 16)
!1434 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !332, line: 19, baseType: !531)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !1431, file: !1372, line: 612, baseType: !531, size: 16, offset: 16)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !1431, file: !1372, line: 613, baseType: !1437, size: 32, offset: 32)
!1437 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !1438, line: 23, baseType: !1439)
!1438 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!1439 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1438, line: 21, size: 32, elements: !1440)
!1440 = !{!1441}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1439, file: !1438, line: 22, baseType: !1442, size: 32)
!1442 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !332, line: 32, baseType: !1443)
!1443 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !1096, line: 49, baseType: !7)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !1431, file: !1372, line: 614, baseType: !1445, size: 32, offset: 64)
!1445 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !1438, line: 28, baseType: !1446)
!1446 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1438, line: 26, size: 32, elements: !1447)
!1447 = !{!1448}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1446, file: !1438, line: 27, baseType: !1449, size: 32)
!1449 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !332, line: 33, baseType: !1450)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !1096, line: 50, baseType: !7)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1431, file: !1372, line: 615, baseType: !7, size: 32, offset: 96)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !1431, file: !1372, line: 622, baseType: !1453, size: 64, offset: 128)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64)
!1454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1455)
!1455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !1372, line: 1864, size: 1536, align: 512, elements: !1456)
!1456 = !{!1457, !1461, !1474, !1478, !1484, !1488, !1492, !1496, !1500, !1504, !1508, !1509, !1515, !1519, !1543, !1572, !1579, !1585, !1590, !1594, !1595}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1455, file: !1372, line: 1865, baseType: !1458, size: 64)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 64)
!1459 = !DISubroutineType(types: !1460)
!1460 = !{!1393, !1430, !1393, !7}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !1455, file: !1372, line: 1866, baseType: !1462, size: 64, offset: 64)
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 64)
!1463 = !DISubroutineType(types: !1464)
!1464 = !{!347, !1393, !1430, !1465}
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !1467, line: 10, size: 128, elements: !1468)
!1467 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!1468 = !{!1469, !1473}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1466, file: !1467, line: 11, baseType: !1470, size: 64)
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 64)
!1471 = !DISubroutineType(types: !1472)
!1472 = !{null, !646}
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !1466, file: !1467, line: 12, baseType: !646, size: 64, offset: 64)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !1455, file: !1372, line: 1867, baseType: !1475, size: 64, offset: 128)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1476 = !DISubroutineType(types: !1477)
!1477 = !{!32, !1430, !32}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !1455, file: !1372, line: 1868, baseType: !1479, size: 64, offset: 192)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 64)
!1480 = !DISubroutineType(types: !1481)
!1481 = !{!1482, !1430, !32}
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64)
!1483 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !1372, line: 581, flags: DIFlagFwdDecl)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !1455, file: !1372, line: 1870, baseType: !1485, size: 64, offset: 256)
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 64)
!1486 = !DISubroutineType(types: !1487)
!1487 = !{!32, !1393, !1093, !32}
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !1455, file: !1372, line: 1872, baseType: !1489, size: 64, offset: 320)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64)
!1490 = !DISubroutineType(types: !1491)
!1491 = !{!32, !1430, !1393, !1434, !826}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1455, file: !1372, line: 1873, baseType: !1493, size: 64, offset: 384)
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 64)
!1494 = !DISubroutineType(types: !1495)
!1495 = !{!32, !1393, !1430, !1393}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !1455, file: !1372, line: 1874, baseType: !1497, size: 64, offset: 448)
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 64)
!1498 = !DISubroutineType(types: !1499)
!1499 = !{!32, !1430, !1393}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1455, file: !1372, line: 1875, baseType: !1501, size: 64, offset: 512)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64)
!1502 = !DISubroutineType(types: !1503)
!1503 = !{!32, !1430, !1393, !347}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1455, file: !1372, line: 1876, baseType: !1505, size: 64, offset: 576)
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 64)
!1506 = !DISubroutineType(types: !1507)
!1507 = !{!32, !1430, !1393, !1434}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1455, file: !1372, line: 1877, baseType: !1497, size: 64, offset: 640)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !1455, file: !1372, line: 1878, baseType: !1510, size: 64, offset: 704)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 64)
!1511 = !DISubroutineType(types: !1512)
!1512 = !{!32, !1430, !1393, !1434, !1513}
!1513 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !332, line: 16, baseType: !1514)
!1514 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !332, line: 13, baseType: !1042)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1455, file: !1372, line: 1879, baseType: !1516, size: 64, offset: 768)
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 64)
!1517 = !DISubroutineType(types: !1518)
!1518 = !{!32, !1430, !1393, !1430, !1393, !7}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !1455, file: !1372, line: 1881, baseType: !1520, size: 64, offset: 832)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 64)
!1521 = !DISubroutineType(types: !1522)
!1522 = !{!32, !1393, !1523}
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64)
!1524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !1372, line: 219, size: 640, elements: !1525)
!1525 = !{!1526, !1527, !1528, !1529, !1530, !1533, !1540, !1541, !1542}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !1524, file: !1372, line: 220, baseType: !7, size: 32)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !1524, file: !1372, line: 221, baseType: !1434, size: 16, offset: 32)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !1524, file: !1372, line: 222, baseType: !1437, size: 32, offset: 64)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !1524, file: !1372, line: 223, baseType: !1445, size: 32, offset: 96)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !1524, file: !1372, line: 224, baseType: !1531, size: 64, offset: 128)
!1531 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !332, line: 46, baseType: !1532)
!1532 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !1096, line: 88, baseType: !434)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !1524, file: !1372, line: 225, baseType: !1534, size: 128, offset: 192)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1535, line: 13, size: 128, elements: !1536)
!1535 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1536 = !{!1537, !1539}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1534, file: !1535, line: 14, baseType: !1538, size: 64)
!1538 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1535, line: 8, baseType: !433)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1534, file: !1535, line: 15, baseType: !1053, size: 64, offset: 64)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !1524, file: !1372, line: 226, baseType: !1534, size: 128, offset: 320)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !1524, file: !1372, line: 227, baseType: !1534, size: 128, offset: 448)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !1524, file: !1372, line: 234, baseType: !1370, size: 64, offset: 576)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !1455, file: !1372, line: 1882, baseType: !1544, size: 64, offset: 896)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 64)
!1545 = !DISubroutineType(types: !1546)
!1546 = !{!32, !1547, !1549, !1042, !7}
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 64)
!1548 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1385)
!1549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1550, size: 64)
!1550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !1551, line: 22, size: 1152, elements: !1552)
!1551 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!1552 = !{!1553, !1554, !1555, !1556, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !1550, file: !1551, line: 23, baseType: !1042, size: 32)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1550, file: !1551, line: 24, baseType: !1434, size: 16, offset: 32)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !1550, file: !1551, line: 25, baseType: !7, size: 32, offset: 64)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !1550, file: !1551, line: 26, baseType: !1557, size: 32, offset: 96)
!1557 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !332, line: 104, baseType: !1042)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1550, file: !1551, line: 27, baseType: !386, size: 64, offset: 128)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !1550, file: !1551, line: 28, baseType: !386, size: 64, offset: 192)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1550, file: !1551, line: 37, baseType: !386, size: 64, offset: 256)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1550, file: !1551, line: 38, baseType: !1513, size: 32, offset: 320)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !1550, file: !1551, line: 39, baseType: !1513, size: 32, offset: 352)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1550, file: !1551, line: 40, baseType: !1437, size: 32, offset: 384)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1550, file: !1551, line: 41, baseType: !1445, size: 32, offset: 416)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1550, file: !1551, line: 42, baseType: !1531, size: 64, offset: 448)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !1550, file: !1551, line: 43, baseType: !1534, size: 128, offset: 512)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !1550, file: !1551, line: 44, baseType: !1534, size: 128, offset: 640)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1550, file: !1551, line: 45, baseType: !1534, size: 128, offset: 768)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !1550, file: !1551, line: 46, baseType: !1534, size: 128, offset: 896)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1550, file: !1551, line: 47, baseType: !386, size: 64, offset: 1024)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !1550, file: !1551, line: 48, baseType: !386, size: 64, offset: 1088)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !1455, file: !1372, line: 1883, baseType: !1573, size: 64, offset: 960)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 64)
!1574 = !DISubroutineType(types: !1575)
!1575 = !{!1576, !1393, !1093, !1094}
!1576 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !332, line: 60, baseType: !1577)
!1577 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !1096, line: 73, baseType: !1578)
!1578 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !1096, line: 15, baseType: !1053)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !1455, file: !1372, line: 1884, baseType: !1580, size: 64, offset: 1024)
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 64)
!1581 = !DISubroutineType(types: !1582)
!1582 = !{!32, !1430, !1583, !386, !386}
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 64)
!1584 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !1372, line: 50, flags: DIFlagFwdDecl)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !1455, file: !1372, line: 1886, baseType: !1586, size: 64, offset: 1088)
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1587, size: 64)
!1587 = !DISubroutineType(types: !1588)
!1588 = !{!32, !1430, !1589, !32}
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 64)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !1455, file: !1372, line: 1887, baseType: !1591, size: 64, offset: 1152)
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 64)
!1592 = !DISubroutineType(types: !1593)
!1593 = !{!32, !1430, !1393, !1370, !7, !1434}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !1455, file: !1372, line: 1890, baseType: !1505, size: 64, offset: 1216)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !1455, file: !1372, line: 1891, baseType: !1596, size: 64, offset: 1280)
!1596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1597, size: 64)
!1597 = !DISubroutineType(types: !1598)
!1598 = !{!32, !1430, !1482, !32}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !1431, file: !1372, line: 623, baseType: !1600, size: 64, offset: 192)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 64)
!1601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !1372, line: 1416, size: 9472, elements: !1602)
!1602 = !{!1603, !1604, !1605, !1606, !1607, !1608, !1652, !4402, !4490, !4573, !4577, !4578, !4579, !4580, !4581, !4582, !4583, !4584, !4589, !4593, !4594, !4597, !4598, !4601, !4602, !4603, !4644, !4671, !4672, !4673, !4674, !4675, !4676, !4679, !4681, !4687, !4688, !4690, !4691, !4692, !4751, !4752, !4767, !4768, !4769, !4770, !4771, !4774, !4775, !4776, !4791, !4792, !4793, !4794, !4795, !4796, !4797, !4798, !4799}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !1601, file: !1372, line: 1417, baseType: !339, size: 128)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !1601, file: !1372, line: 1418, baseType: !1513, size: 32, offset: 128)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !1601, file: !1372, line: 1419, baseType: !537, size: 8, offset: 160)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !1601, file: !1372, line: 1420, baseType: !367, size: 64, offset: 192)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !1601, file: !1372, line: 1421, baseType: !1531, size: 64, offset: 256)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !1601, file: !1372, line: 1422, baseType: !1609, size: 64, offset: 320)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 64)
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !1372, line: 2228, size: 576, elements: !1611)
!1611 = !{!1612, !1613, !1614, !1621, !1625, !1629, !1633, !1634, !1635, !1639, !1643, !1644, !1645, !1649, !1650, !1651}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1610, file: !1372, line: 2229, baseType: !347, size: 64)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !1610, file: !1372, line: 2230, baseType: !32, size: 32, offset: 64)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !1610, file: !1372, line: 2238, baseType: !1615, size: 64, offset: 128)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 64)
!1616 = !DISubroutineType(types: !1617)
!1617 = !{!32, !1618}
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 64)
!1619 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !1620, line: 28, flags: DIFlagFwdDecl)
!1620 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !1610, file: !1372, line: 2239, baseType: !1622, size: 64, offset: 192)
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 64)
!1623 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1624)
!1624 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !1372, line: 70, flags: DIFlagFwdDecl)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !1610, file: !1372, line: 2240, baseType: !1626, size: 64, offset: 256)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 64)
!1627 = !DISubroutineType(types: !1628)
!1628 = !{!1393, !1609, !32, !347, !646}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !1610, file: !1372, line: 2242, baseType: !1630, size: 64, offset: 320)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64)
!1631 = !DISubroutineType(types: !1632)
!1632 = !{null, !1600}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1610, file: !1372, line: 2243, baseType: !1035, size: 64, offset: 384)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1610, file: !1372, line: 2244, baseType: !1609, size: 64, offset: 448)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !1610, file: !1372, line: 2245, baseType: !1636, size: 64, offset: 512)
!1636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !332, line: 182, size: 64, elements: !1637)
!1637 = !{!1638}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1636, file: !332, line: 183, baseType: !335, size: 64)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !1610, file: !1372, line: 2247, baseType: !1640, offset: 576)
!1640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !1641, line: 187, elements: !1642)
!1641 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!1642 = !{}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !1610, file: !1372, line: 2248, baseType: !1640, offset: 576)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !1610, file: !1372, line: 2249, baseType: !1640, offset: 576)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !1610, file: !1372, line: 2250, baseType: !1646, offset: 576)
!1646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1640, elements: !1647)
!1647 = !{!1648}
!1648 = !DISubrange(count: 3)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !1610, file: !1372, line: 2252, baseType: !1640, offset: 576)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !1610, file: !1372, line: 2253, baseType: !1640, offset: 576)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !1610, file: !1372, line: 2254, baseType: !1640, offset: 576)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !1601, file: !1372, line: 1423, baseType: !1653, size: 64, offset: 384)
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 64)
!1654 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1655)
!1655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !1372, line: 1935, size: 1472, elements: !1656)
!1656 = !{!1657, !1661, !1665, !1666, !1670, !1676, !1680, !1681, !1682, !1686, !1690, !1691, !1692, !1693, !1699, !1703, !1704, !1767, !1768, !1769, !1770, !4386, !4401}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !1655, file: !1372, line: 1936, baseType: !1658, size: 64)
!1658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1659, size: 64)
!1659 = !DISubroutineType(types: !1660)
!1660 = !{!1430, !1600}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !1655, file: !1372, line: 1937, baseType: !1662, size: 64, offset: 64)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 64)
!1663 = !DISubroutineType(types: !1664)
!1664 = !{null, !1430}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !1655, file: !1372, line: 1938, baseType: !1662, size: 64, offset: 128)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !1655, file: !1372, line: 1940, baseType: !1667, size: 64, offset: 192)
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 64)
!1668 = !DISubroutineType(types: !1669)
!1669 = !{null, !1430, !32}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !1655, file: !1372, line: 1941, baseType: !1671, size: 64, offset: 256)
!1671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1672, size: 64)
!1672 = !DISubroutineType(types: !1673)
!1673 = !{!32, !1430, !1674}
!1674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1675, size: 64)
!1675 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !14, line: 40, flags: DIFlagFwdDecl)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !1655, file: !1372, line: 1942, baseType: !1677, size: 64, offset: 320)
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 64)
!1678 = !DISubroutineType(types: !1679)
!1679 = !{!32, !1430}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !1655, file: !1372, line: 1943, baseType: !1662, size: 64, offset: 384)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !1655, file: !1372, line: 1944, baseType: !1630, size: 64, offset: 448)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !1655, file: !1372, line: 1945, baseType: !1683, size: 64, offset: 512)
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 64)
!1684 = !DISubroutineType(types: !1685)
!1685 = !{!32, !1600, !32}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !1655, file: !1372, line: 1946, baseType: !1687, size: 64, offset: 576)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 64)
!1688 = !DISubroutineType(types: !1689)
!1689 = !{!32, !1600}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !1655, file: !1372, line: 1947, baseType: !1687, size: 64, offset: 640)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !1655, file: !1372, line: 1948, baseType: !1687, size: 64, offset: 704)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !1655, file: !1372, line: 1949, baseType: !1687, size: 64, offset: 768)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !1655, file: !1372, line: 1950, baseType: !1694, size: 64, offset: 832)
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 64)
!1695 = !DISubroutineType(types: !1696)
!1696 = !{!32, !1393, !1697}
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 64)
!1698 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !1372, line: 57, flags: DIFlagFwdDecl)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !1655, file: !1372, line: 1951, baseType: !1700, size: 64, offset: 896)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 64)
!1701 = !DISubroutineType(types: !1702)
!1702 = !{!32, !1600, !1056, !1093}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !1655, file: !1372, line: 1952, baseType: !1630, size: 64, offset: 960)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1655, file: !1372, line: 1954, baseType: !1705, size: 64, offset: 1024)
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 64)
!1706 = !DISubroutineType(types: !1707)
!1707 = !{!32, !1708, !1393}
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 64)
!1709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !1710, line: 16, size: 896, elements: !1711)
!1710 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!1711 = !{!1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1740, !1762, !1763, !1766}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1709, file: !1710, line: 17, baseType: !1093, size: 64)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1709, file: !1710, line: 18, baseType: !1094, size: 64, offset: 64)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1709, file: !1710, line: 19, baseType: !1094, size: 64, offset: 128)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1709, file: !1710, line: 20, baseType: !1094, size: 64, offset: 192)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !1709, file: !1710, line: 21, baseType: !1094, size: 64, offset: 256)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1709, file: !1710, line: 22, baseType: !1531, size: 64, offset: 320)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !1709, file: !1710, line: 23, baseType: !1531, size: 64, offset: 384)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1709, file: !1710, line: 24, baseType: !1720, size: 192, offset: 448)
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1721, line: 53, size: 192, elements: !1722)
!1721 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1722 = !{!1723, !1724, !1739}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1720, file: !1721, line: 54, baseType: !426, size: 64)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1720, file: !1721, line: 55, baseType: !1725, offset: 64)
!1725 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !1726, line: 83, baseType: !1727)
!1726 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !1726, line: 71, elements: !1728)
!1728 = !{!1729}
!1729 = !DIDerivedType(tag: DW_TAG_member, scope: !1727, file: !1726, line: 72, baseType: !1730)
!1730 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1727, file: !1726, line: 72, elements: !1731)
!1731 = !{!1732}
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !1730, file: !1726, line: 73, baseType: !1733)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !1726, line: 20, elements: !1734)
!1734 = !{!1735}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1733, file: !1726, line: 21, baseType: !1736)
!1736 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !1737, line: 25, baseType: !1738)
!1737 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1737, line: 25, elements: !1642)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1720, file: !1721, line: 59, baseType: !339, size: 128, offset: 64)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1709, file: !1710, line: 25, baseType: !1741, size: 64, offset: 640)
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 64)
!1742 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1743)
!1743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !1710, line: 31, size: 256, elements: !1744)
!1744 = !{!1745, !1750, !1754, !1758}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1743, file: !1710, line: 32, baseType: !1746, size: 64)
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 64)
!1747 = !DISubroutineType(types: !1748)
!1748 = !{!646, !1708, !1749}
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 64)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1743, file: !1710, line: 33, baseType: !1751, size: 64, offset: 64)
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64)
!1752 = !DISubroutineType(types: !1753)
!1753 = !{null, !1708, !646}
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1743, file: !1710, line: 34, baseType: !1755, size: 64, offset: 128)
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1756, size: 64)
!1756 = !DISubroutineType(types: !1757)
!1757 = !{!646, !1708, !646, !1749}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1743, file: !1710, line: 35, baseType: !1759, size: 64, offset: 192)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 64)
!1760 = !DISubroutineType(types: !1761)
!1761 = !{!32, !1708, !646}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !1709, file: !1710, line: 26, baseType: !32, size: 32, offset: 704)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1709, file: !1710, line: 27, baseType: !1764, size: 64, offset: 768)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 64)
!1765 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1371)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1709, file: !1710, line: 28, baseType: !646, size: 64, offset: 832)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !1655, file: !1372, line: 1955, baseType: !1705, size: 64, offset: 1088)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1655, file: !1372, line: 1956, baseType: !1705, size: 64, offset: 1152)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !1655, file: !1372, line: 1957, baseType: !1705, size: 64, offset: 1216)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !1655, file: !1372, line: 1963, baseType: !1771, size: 64, offset: 1280)
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1772, size: 64)
!1772 = !DISubroutineType(types: !1773)
!1773 = !{!32, !1600, !1774, !1797}
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 64)
!1775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !1776, line: 68, size: 512, align: 128, elements: !1777)
!1776 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!1777 = !{!1778, !1779, !4378, !4385}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1775, file: !1776, line: 69, baseType: !367, size: 64)
!1779 = !DIDerivedType(tag: DW_TAG_member, scope: !1775, file: !1776, line: 77, baseType: !1780, size: 320, offset: 64)
!1780 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1775, file: !1776, line: 77, size: 320, elements: !1781)
!1781 = !{!1782, !2087, !2092, !2120, !2128, !2134, !4302, !4377}
!1782 = !DIDerivedType(tag: DW_TAG_member, scope: !1780, file: !1776, line: 78, baseType: !1783, size: 320)
!1783 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1780, file: !1776, line: 78, size: 320, elements: !1784)
!1784 = !{!1785, !1786, !2085, !2086}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1783, file: !1776, line: 84, baseType: !339, size: 128)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1783, file: !1776, line: 86, baseType: !1787, size: 64, offset: 128)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !1372, line: 451, size: 1216, align: 64, elements: !1789)
!1789 = !{!1790, !1791, !1799, !1800, !1801, !1809, !1818, !1819, !1820, !1821, !2078, !2079, !2082, !2083, !2084}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1788, file: !1372, line: 452, baseType: !1430, size: 64)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !1788, file: !1372, line: 453, baseType: !1792, size: 128, offset: 64)
!1792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1793, line: 292, size: 128, elements: !1794)
!1793 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1794 = !{!1795, !1796, !1798}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1792, file: !1793, line: 293, baseType: !1725)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1792, file: !1793, line: 295, baseType: !1797, size: 32)
!1797 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !332, line: 148, baseType: !7)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1792, file: !1793, line: 296, baseType: !646, size: 64, offset: 64)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1788, file: !1372, line: 454, baseType: !1797, size: 32, offset: 192)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !1788, file: !1372, line: 455, baseType: !438, size: 32, offset: 224)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !1788, file: !1372, line: 460, baseType: !1802, size: 128, offset: 256)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !489, line: 125, size: 128, elements: !1803)
!1803 = !{!1804, !1808}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1802, file: !489, line: 126, baseType: !1805, size: 64)
!1805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !489, line: 31, size: 64, elements: !1806)
!1806 = !{!1807}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1805, file: !489, line: 32, baseType: !493, size: 64)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1802, file: !489, line: 127, baseType: !493, size: 64, offset: 64)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !1788, file: !1372, line: 461, baseType: !1810, size: 256, offset: 384)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1811, line: 35, size: 256, elements: !1812)
!1811 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1812 = !{!1813, !1814, !1815, !1817}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1810, file: !1811, line: 36, baseType: !426, size: 64)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1810, file: !1811, line: 42, baseType: !426, size: 64, offset: 64)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1810, file: !1811, line: 46, baseType: !1816, offset: 128)
!1816 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !1726, line: 29, baseType: !1733)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1810, file: !1811, line: 47, baseType: !339, size: 128, offset: 128)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !1788, file: !1372, line: 462, baseType: !367, size: 64, offset: 640)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !1788, file: !1372, line: 463, baseType: !367, size: 64, offset: 704)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !1788, file: !1372, line: 464, baseType: !367, size: 64, offset: 768)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !1788, file: !1372, line: 465, baseType: !1822, size: 64, offset: 832)
!1822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1823, size: 64)
!1823 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1824)
!1824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !1372, line: 367, size: 1408, elements: !1825)
!1825 = !{!1826, !1830, !1834, !1838, !1842, !1846, !1852, !1858, !1862, !1867, !1871, !1875, !1879, !2042, !2046, !2052, !2053, !2054, !2058, !2063, !2067, !2074}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !1824, file: !1372, line: 368, baseType: !1827, size: 64)
!1827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1828, size: 64)
!1828 = !DISubroutineType(types: !1829)
!1829 = !{!32, !1774, !1674}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !1824, file: !1372, line: 369, baseType: !1831, size: 64, offset: 64)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 64)
!1832 = !DISubroutineType(types: !1833)
!1833 = !{!32, !1370, !1774}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !1824, file: !1372, line: 372, baseType: !1835, size: 64, offset: 128)
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 64)
!1836 = !DISubroutineType(types: !1837)
!1837 = !{!32, !1787, !1674}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !1824, file: !1372, line: 375, baseType: !1839, size: 64, offset: 192)
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 64)
!1840 = !DISubroutineType(types: !1841)
!1841 = !{!32, !1774}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !1824, file: !1372, line: 381, baseType: !1843, size: 64, offset: 256)
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 64)
!1844 = !DISubroutineType(types: !1845)
!1845 = !{!32, !1370, !1787, !342, !7}
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !1824, file: !1372, line: 383, baseType: !1847, size: 64, offset: 320)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64)
!1848 = !DISubroutineType(types: !1849)
!1849 = !{null, !1850}
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 64)
!1851 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1372, line: 290, flags: DIFlagFwdDecl)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !1824, file: !1372, line: 385, baseType: !1853, size: 64, offset: 384)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 64)
!1854 = !DISubroutineType(types: !1855)
!1855 = !{!32, !1370, !1787, !1531, !7, !7, !1856, !1857}
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1774, size: 64)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 64)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !1824, file: !1372, line: 388, baseType: !1859, size: 64, offset: 448)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 64)
!1860 = !DISubroutineType(types: !1861)
!1861 = !{!32, !1370, !1787, !1531, !7, !7, !1774, !646}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !1824, file: !1372, line: 393, baseType: !1863, size: 64, offset: 512)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 64)
!1864 = !DISubroutineType(types: !1865)
!1865 = !{!1866, !1787, !1866}
!1866 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !332, line: 125, baseType: !386)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !1824, file: !1372, line: 394, baseType: !1868, size: 64, offset: 576)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 64)
!1869 = !DISubroutineType(types: !1870)
!1870 = !{null, !1774, !7, !7}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !1824, file: !1372, line: 395, baseType: !1872, size: 64, offset: 640)
!1872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1873, size: 64)
!1873 = !DISubroutineType(types: !1874)
!1874 = !{!32, !1774, !1797}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !1824, file: !1372, line: 396, baseType: !1876, size: 64, offset: 704)
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 64)
!1877 = !DISubroutineType(types: !1878)
!1878 = !{null, !1774}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !1824, file: !1372, line: 397, baseType: !1880, size: 64, offset: 768)
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 64)
!1881 = !DISubroutineType(types: !1882)
!1882 = !{!1576, !1883, !1903}
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 64)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !1372, line: 320, size: 384, elements: !1885)
!1885 = !{!1886, !1887, !1888, !1892, !1893, !1894, !1895, !1896}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1884, file: !1372, line: 321, baseType: !1370, size: 64)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1884, file: !1372, line: 326, baseType: !1531, size: 64, offset: 64)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1884, file: !1372, line: 327, baseType: !1889, size: 64, offset: 128)
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 64)
!1890 = !DISubroutineType(types: !1891)
!1891 = !{null, !1883, !1053, !1053}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1884, file: !1372, line: 328, baseType: !646, size: 64, offset: 192)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1884, file: !1372, line: 329, baseType: !32, size: 32, offset: 256)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1884, file: !1372, line: 330, baseType: !636, size: 16, offset: 288)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1884, file: !1372, line: 331, baseType: !636, size: 16, offset: 304)
!1896 = !DIDerivedType(tag: DW_TAG_member, scope: !1884, file: !1372, line: 332, baseType: !1897, size: 64, offset: 320)
!1897 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1884, file: !1372, line: 332, size: 64, elements: !1898)
!1898 = !{!1899, !1900}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1897, file: !1372, line: 333, baseType: !7, size: 32)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1897, file: !1372, line: 334, baseType: !1901, size: 64)
!1901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 64)
!1902 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1372, line: 334, flags: DIFlagFwdDecl)
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1904, size: 64)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !1905, line: 29, size: 320, elements: !1906)
!1905 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1906 = !{!1907, !1908, !1909, !1910, !2033}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1904, file: !1905, line: 35, baseType: !7, size: 32)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !1904, file: !1905, line: 36, baseType: !1094, size: 64, offset: 64)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1904, file: !1905, line: 37, baseType: !1094, size: 64, offset: 128)
!1910 = !DIDerivedType(tag: DW_TAG_member, scope: !1904, file: !1905, line: 38, baseType: !1911, size: 64, offset: 192)
!1911 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1904, file: !1905, line: 38, size: 64, elements: !1912)
!1912 = !{!1913, !1921, !1928, !1937}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !1911, file: !1905, line: 39, baseType: !1914, size: 64)
!1914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1915, size: 64)
!1915 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1916)
!1916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !1917, line: 17, size: 128, elements: !1918)
!1917 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1918 = !{!1919, !1920}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1916, file: !1917, line: 19, baseType: !646, size: 64)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1916, file: !1917, line: 20, baseType: !1095, size: 64, offset: 64)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !1911, file: !1905, line: 40, baseType: !1922, size: 64)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 64)
!1923 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1924)
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !1905, line: 15, size: 128, elements: !1925)
!1925 = !{!1926, !1927}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1924, file: !1905, line: 16, baseType: !646, size: 64)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1924, file: !1905, line: 17, baseType: !1094, size: 64, offset: 64)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !1911, file: !1905, line: 41, baseType: !1929, size: 64)
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 64)
!1930 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1931)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !1932, line: 31, size: 128, elements: !1933)
!1932 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!1933 = !{!1934, !1935, !1936}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !1931, file: !1932, line: 32, baseType: !1774, size: 64)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !1931, file: !1932, line: 33, baseType: !7, size: 32, offset: 64)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !1931, file: !1932, line: 34, baseType: !7, size: 32, offset: 96)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !1911, file: !1905, line: 42, baseType: !1938, size: 64)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64)
!1939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1940, line: 57, size: 1088, elements: !1941)
!1940 = !DIFile(filename: "./include/linux/pipe_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!1941 = !{!1942, !1943, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1979, !1980, !2007}
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1939, file: !1940, line: 58, baseType: !1720, size: 192)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "rd_wait", scope: !1939, file: !1940, line: 59, baseType: !1944, size: 128, offset: 192)
!1944 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1945, line: 40, baseType: !1946)
!1945 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1945, line: 36, size: 128, elements: !1947)
!1947 = !{!1948, !1949}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1946, file: !1945, line: 37, baseType: !1725)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1946, file: !1945, line: 38, baseType: !339, size: 128)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "wr_wait", scope: !1939, file: !1940, line: 59, baseType: !1944, size: 128, offset: 320)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1939, file: !1940, line: 60, baseType: !7, size: 32, offset: 448)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1939, file: !1940, line: 61, baseType: !7, size: 32, offset: 480)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "max_usage", scope: !1939, file: !1940, line: 62, baseType: !7, size: 32, offset: 512)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "ring_size", scope: !1939, file: !1940, line: 63, baseType: !7, size: 32, offset: 544)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "nr_accounted", scope: !1939, file: !1940, line: 67, baseType: !7, size: 32, offset: 576)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !1939, file: !1940, line: 68, baseType: !7, size: 32, offset: 608)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !1939, file: !1940, line: 69, baseType: !7, size: 32, offset: 640)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1939, file: !1940, line: 70, baseType: !7, size: 32, offset: 672)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "r_counter", scope: !1939, file: !1940, line: 71, baseType: !7, size: 32, offset: 704)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "w_counter", scope: !1939, file: !1940, line: 72, baseType: !7, size: 32, offset: 736)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_page", scope: !1939, file: !1940, line: 73, baseType: !1774, size: 64, offset: 768)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_readers", scope: !1939, file: !1940, line: 74, baseType: !1963, size: 64, offset: 832)
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 64)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !1372, line: 1314, size: 320, elements: !1965)
!1965 = !{!1966, !1974, !1975, !1976, !1977, !1978}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !1964, file: !1372, line: 1315, baseType: !1967)
!1967 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !1968, line: 20, baseType: !1969)
!1968 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1969 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1968, line: 11, elements: !1970)
!1970 = !{!1971}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1969, file: !1968, line: 12, baseType: !1972)
!1972 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !1737, line: 33, baseType: !1973)
!1973 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1737, line: 31, elements: !1642)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1964, file: !1372, line: 1316, baseType: !32, size: 32)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !1964, file: !1372, line: 1317, baseType: !32, size: 32, offset: 32)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !1964, file: !1372, line: 1318, baseType: !1963, size: 64, offset: 64)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !1964, file: !1372, line: 1319, baseType: !1370, size: 64, offset: 128)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !1964, file: !1372, line: 1320, baseType: !354, size: 128, align: 64, offset: 192)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_writers", scope: !1939, file: !1940, line: 75, baseType: !1963, size: 64, offset: 896)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "bufs", scope: !1939, file: !1940, line: 76, baseType: !1981, size: 64, offset: 960)
!1981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1982, size: 64)
!1982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buffer", file: !1940, line: 26, size: 320, elements: !1983)
!1983 = !{!1984, !1985, !1986, !1987, !2005, !2006}
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1982, file: !1940, line: 27, baseType: !1774, size: 64)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1982, file: !1940, line: 28, baseType: !7, size: 32, offset: 64)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1982, file: !1940, line: 28, baseType: !7, size: 32, offset: 96)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1982, file: !1940, line: 29, baseType: !1988, size: 64, offset: 128)
!1988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 64)
!1989 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1990)
!1990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buf_operations", file: !1940, line: 93, size: 256, elements: !1991)
!1991 = !{!1992, !1996, !2000, !2004}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "confirm", scope: !1990, file: !1940, line: 101, baseType: !1993, size: 64)
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 64)
!1994 = !DISubroutineType(types: !1995)
!1995 = !{!32, !1938, !1981}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1990, file: !1940, line: 107, baseType: !1997, size: 64, offset: 64)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 64)
!1998 = !DISubroutineType(types: !1999)
!1999 = !{null, !1938, !1981}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "try_steal", scope: !1990, file: !1940, line: 117, baseType: !2001, size: 64, offset: 128)
!2001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2002, size: 64)
!2002 = !DISubroutineType(types: !2003)
!2003 = !{!826, !1938, !1981}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !1990, file: !1940, line: 122, baseType: !2001, size: 64, offset: 192)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1982, file: !1940, line: 30, baseType: !7, size: 32, offset: 192)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1982, file: !1940, line: 31, baseType: !367, size: 64, offset: 256)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1939, file: !1940, line: 77, baseType: !2008, size: 64, offset: 1024)
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2009, size: 64)
!2009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !2010, line: 13, size: 896, elements: !2011)
!2010 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!2011 = !{!2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2009, file: !2010, line: 14, baseType: !623, size: 32)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !2009, file: !2010, line: 15, baseType: !438, size: 32, offset: 32)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !2009, file: !2010, line: 16, baseType: !438, size: 32, offset: 64)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !2009, file: !2010, line: 21, baseType: !426, size: 64, offset: 128)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !2009, file: !2010, line: 27, baseType: !367, size: 64, offset: 192)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !2009, file: !2010, line: 28, baseType: !367, size: 64, offset: 256)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !2009, file: !2010, line: 29, baseType: !426, size: 64, offset: 320)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !2009, file: !2010, line: 32, baseType: !331, size: 128, offset: 384)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2009, file: !2010, line: 33, baseType: !1437, size: 32, offset: 512)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2009, file: !2010, line: 37, baseType: !426, size: 64, offset: 576)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !2009, file: !2010, line: 44, baseType: !2023, size: 256, offset: 640)
!2023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !2024, line: 15, size: 256, elements: !2025)
!2024 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!2025 = !{!2026, !2027, !2028, !2029, !2030, !2031, !2032}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2023, file: !2024, line: 16, baseType: !1816)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !2023, file: !2024, line: 18, baseType: !32, size: 32)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !2023, file: !2024, line: 19, baseType: !32, size: 32, offset: 32)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !2023, file: !2024, line: 20, baseType: !32, size: 32, offset: 64)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !2023, file: !2024, line: 21, baseType: !32, size: 32, offset: 96)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !2023, file: !2024, line: 22, baseType: !367, size: 64, offset: 128)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2023, file: !2024, line: 23, baseType: !367, size: 64, offset: 192)
!2033 = !DIDerivedType(tag: DW_TAG_member, scope: !1904, file: !1905, line: 44, baseType: !2034, size: 64, offset: 256)
!2034 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1904, file: !1905, line: 44, size: 64, elements: !2035)
!2035 = !{!2036, !2037}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !2034, file: !1905, line: 45, baseType: !367, size: 64)
!2037 = !DIDerivedType(tag: DW_TAG_member, scope: !2034, file: !1905, line: 46, baseType: !2038, size: 64)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2034, file: !1905, line: 46, size: 64, elements: !2039)
!2039 = !{!2040, !2041}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2038, file: !1905, line: 47, baseType: !7, size: 32)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !2038, file: !1905, line: 48, baseType: !7, size: 32, offset: 32)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !1824, file: !1372, line: 402, baseType: !2043, size: 64, offset: 832)
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 64)
!2044 = !DISubroutineType(types: !2045)
!2045 = !{!32, !1787, !1774, !1774, !5}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !1824, file: !1372, line: 404, baseType: !2047, size: 64, offset: 896)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 64)
!2048 = !DISubroutineType(types: !2049)
!2049 = !{!826, !1774, !2050}
!2050 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !2051, line: 305, baseType: !7)
!2051 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !1824, file: !1372, line: 405, baseType: !1876, size: 64, offset: 960)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !1824, file: !1372, line: 406, baseType: !1839, size: 64, offset: 1024)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !1824, file: !1372, line: 407, baseType: !2055, size: 64, offset: 1088)
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 64)
!2056 = !DISubroutineType(types: !2057)
!2057 = !{!32, !1774, !367, !367}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !1824, file: !1372, line: 409, baseType: !2059, size: 64, offset: 1152)
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 64)
!2060 = !DISubroutineType(types: !2061)
!2061 = !{null, !1774, !2062, !2062}
!2062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 64)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !1824, file: !1372, line: 410, baseType: !2064, size: 64, offset: 1216)
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 64)
!2065 = !DISubroutineType(types: !2066)
!2066 = !{!32, !1787, !1774}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !1824, file: !1372, line: 413, baseType: !2068, size: 64, offset: 1280)
!2068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2069, size: 64)
!2069 = !DISubroutineType(types: !2070)
!2070 = !{!32, !2071, !1370, !2073}
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 64)
!2072 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !1372, line: 61, flags: DIFlagFwdDecl)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 64)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !1824, file: !1372, line: 415, baseType: !2075, size: 64, offset: 1344)
!2075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 64)
!2076 = !DISubroutineType(types: !2077)
!2077 = !{null, !1370}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1788, file: !1372, line: 466, baseType: !367, size: 64, offset: 896)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !1788, file: !1372, line: 467, baseType: !2080, size: 32, offset: 960)
!2080 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !2081, line: 8, baseType: !1042)
!2081 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !1788, file: !1372, line: 468, baseType: !1725, offset: 992)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !1788, file: !1372, line: 469, baseType: !339, size: 128, offset: 1024)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1788, file: !1372, line: 470, baseType: !646, size: 64, offset: 1152)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1783, file: !1776, line: 87, baseType: !367, size: 64, offset: 192)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1783, file: !1776, line: 94, baseType: !367, size: 64, offset: 256)
!2087 = !DIDerivedType(tag: DW_TAG_member, scope: !1780, file: !1776, line: 96, baseType: !2088, size: 64)
!2088 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1780, file: !1776, line: 96, size: 64, elements: !2089)
!2089 = !{!2090}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !2088, file: !1776, line: 101, baseType: !2091, size: 64)
!2091 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !332, line: 143, baseType: !386)
!2092 = !DIDerivedType(tag: DW_TAG_member, scope: !1780, file: !1776, line: 103, baseType: !2093, size: 320)
!2093 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1780, file: !1776, line: 103, size: 320, elements: !2094)
!2094 = !{!2095, !2105, !2108, !2109}
!2095 = !DIDerivedType(tag: DW_TAG_member, scope: !2093, file: !1776, line: 104, baseType: !2096, size: 128)
!2096 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2093, file: !1776, line: 104, size: 128, elements: !2097)
!2097 = !{!2098, !2099}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !2096, file: !1776, line: 105, baseType: !339, size: 128)
!2099 = !DIDerivedType(tag: DW_TAG_member, scope: !2096, file: !1776, line: 106, baseType: !2100, size: 128)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2096, file: !1776, line: 106, size: 128, elements: !2101)
!2101 = !{!2102, !2103, !2104}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2100, file: !1776, line: 107, baseType: !1774, size: 64)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2100, file: !1776, line: 109, baseType: !32, size: 32, offset: 64)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !2100, file: !1776, line: 110, baseType: !32, size: 32, offset: 96)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !2093, file: !1776, line: 117, baseType: !2106, size: 64, offset: 128)
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2107, size: 64)
!2107 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !1776, line: 117, flags: DIFlagFwdDecl)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !2093, file: !1776, line: 119, baseType: !646, size: 64, offset: 192)
!2109 = !DIDerivedType(tag: DW_TAG_member, scope: !2093, file: !1776, line: 120, baseType: !2110, size: 64, offset: 256)
!2110 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2093, file: !1776, line: 120, size: 64, elements: !2111)
!2111 = !{!2112, !2113, !2114}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !2110, file: !1776, line: 121, baseType: !646, size: 64)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !2110, file: !1776, line: 122, baseType: !367, size: 64)
!2114 = !DIDerivedType(tag: DW_TAG_member, scope: !2110, file: !1776, line: 123, baseType: !2115, size: 32)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2110, file: !1776, line: 123, size: 32, elements: !2116)
!2116 = !{!2117, !2118, !2119}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !2115, file: !1776, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2115, file: !1776, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2115, file: !1776, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2120 = !DIDerivedType(tag: DW_TAG_member, scope: !1780, file: !1776, line: 130, baseType: !2121, size: 192)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1780, file: !1776, line: 130, size: 192, elements: !2122)
!2122 = !{!2123, !2124, !2125, !2126, !2127}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !2121, file: !1776, line: 131, baseType: !367, size: 64)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !2121, file: !1776, line: 134, baseType: !537, size: 8, offset: 64)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !2121, file: !1776, line: 135, baseType: !537, size: 8, offset: 72)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !2121, file: !1776, line: 136, baseType: !438, size: 32, offset: 96)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !2121, file: !1776, line: 137, baseType: !7, size: 32, offset: 128)
!2128 = !DIDerivedType(tag: DW_TAG_member, scope: !1780, file: !1776, line: 139, baseType: !2129, size: 256)
!2129 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1780, file: !1776, line: 139, size: 256, elements: !2130)
!2130 = !{!2131, !2132, !2133}
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !2129, file: !1776, line: 140, baseType: !367, size: 64)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !2129, file: !1776, line: 141, baseType: !438, size: 32, offset: 64)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !2129, file: !1776, line: 143, baseType: !339, size: 128, offset: 128)
!2134 = !DIDerivedType(tag: DW_TAG_member, scope: !1780, file: !1776, line: 145, baseType: !2135, size: 256)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1780, file: !1776, line: 145, size: 256, elements: !2136)
!2136 = !{!2137, !2138, !2141, !2142, !4301}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !2135, file: !1776, line: 146, baseType: !367, size: 64)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !2135, file: !1776, line: 147, baseType: !2139, size: 64, offset: 64)
!2139 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !2140, line: 509, baseType: !1774)
!2140 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !2135, file: !1776, line: 148, baseType: !367, size: 64, offset: 128)
!2142 = !DIDerivedType(tag: DW_TAG_member, scope: !2135, file: !1776, line: 149, baseType: !2143, size: 64, offset: 192)
!2143 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2135, file: !1776, line: 149, size: 64, elements: !2144)
!2144 = !{!2145, !4300}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !2143, file: !1776, line: 150, baseType: !2146, size: 64)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 64)
!2147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !1776, line: 388, size: 7296, elements: !2148)
!2148 = !{!2149, !4298}
!2149 = !DIDerivedType(tag: DW_TAG_member, scope: !2147, file: !1776, line: 389, baseType: !2150, size: 7296)
!2150 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2147, file: !1776, line: 389, size: 7296, elements: !2151)
!2151 = !{!2152, !2270, !2271, !2272, !2276, !2277, !2278, !2279, !2280, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2321, !2329, !2332, !2371, !2372, !4282, !4283, !4286, !4287, !4288, !4291, !4292, !4293, !4296, !4297}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2150, file: !1776, line: 390, baseType: !2153, size: 64)
!2153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2154, size: 64)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !1776, line: 305, size: 1472, elements: !2155)
!2155 = !{!2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2170, !2171, !2176, !2177, !2180, !2264, !2265, !2266, !2267, !2268}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !2154, file: !1776, line: 308, baseType: !367, size: 64)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !2154, file: !1776, line: 309, baseType: !367, size: 64, offset: 64)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !2154, file: !1776, line: 313, baseType: !2153, size: 64, offset: 128)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !2154, file: !1776, line: 313, baseType: !2153, size: 64, offset: 192)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !2154, file: !1776, line: 315, baseType: !488, size: 192, align: 64, offset: 256)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !2154, file: !1776, line: 323, baseType: !367, size: 64, offset: 448)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !2154, file: !1776, line: 327, baseType: !2146, size: 64, offset: 512)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !2154, file: !1776, line: 333, baseType: !2164, size: 64, offset: 576)
!2164 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !2140, line: 284, baseType: !2165)
!2165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !2140, line: 284, size: 64, elements: !2166)
!2166 = !{!2167}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !2165, file: !2140, line: 284, baseType: !2168, size: 64)
!2168 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !2169, line: 19, baseType: !367)
!2169 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !2154, file: !1776, line: 334, baseType: !367, size: 64, offset: 640)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !2154, file: !1776, line: 343, baseType: !2172, size: 256, offset: 704)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2154, file: !1776, line: 340, size: 256, elements: !2173)
!2173 = !{!2174, !2175}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !2172, file: !1776, line: 341, baseType: !488, size: 192, align: 64)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !2172, file: !1776, line: 342, baseType: !367, size: 64, offset: 192)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !2154, file: !1776, line: 351, baseType: !339, size: 128, offset: 960)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !2154, file: !1776, line: 353, baseType: !2178, size: 64, offset: 1088)
!2178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2179, size: 64)
!2179 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !1776, line: 353, flags: DIFlagFwdDecl)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !2154, file: !1776, line: 356, baseType: !2181, size: 64, offset: 1152)
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2182, size: 64)
!2182 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2183)
!2183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !2184)
!2184 = !{!2185, !2189, !2190, !2194, !2198, !2238, !2242, !2246, !2250, !2251, !2252, !2256, !2260}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2183, file: !14, line: 558, baseType: !2186, size: 64)
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2187, size: 64)
!2187 = !DISubroutineType(types: !2188)
!2188 = !{null, !2153}
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !2183, file: !14, line: 559, baseType: !2186, size: 64, offset: 64)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !2183, file: !14, line: 560, baseType: !2191, size: 64, offset: 128)
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 64)
!2192 = !DISubroutineType(types: !2193)
!2193 = !{!32, !2153, !367}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !2183, file: !14, line: 561, baseType: !2195, size: 64, offset: 192)
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 64)
!2196 = !DISubroutineType(types: !2197)
!2197 = !{!32, !2153}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !2183, file: !14, line: 562, baseType: !2199, size: 64, offset: 256)
!2199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2200, size: 64)
!2200 = !DISubroutineType(types: !2201)
!2201 = !{!2202, !2203}
!2202 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !1776, line: 682, baseType: !7)
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 64)
!2204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !2205)
!2205 = !{!2206, !2207, !2208, !2209, !2210, !2211, !2218, !2225, !2231, !2232, !2233, !2235, !2237}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !2204, file: !14, line: 509, baseType: !2153, size: 64)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2204, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2204, file: !14, line: 511, baseType: !1797, size: 32, offset: 96)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !2204, file: !14, line: 512, baseType: !367, size: 64, offset: 128)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !2204, file: !14, line: 513, baseType: !367, size: 64, offset: 192)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2204, file: !14, line: 514, baseType: !2212, size: 64, offset: 256)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 64)
!2213 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !2140, line: 385, baseType: !2214)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2140, line: 385, size: 64, elements: !2215)
!2215 = !{!2216}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2214, file: !2140, line: 385, baseType: !2217, size: 64)
!2217 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !2169, line: 15, baseType: !367)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2204, file: !14, line: 516, baseType: !2219, size: 64, offset: 320)
!2219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2220, size: 64)
!2220 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !2140, line: 359, baseType: !2221)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2140, line: 359, size: 64, elements: !2222)
!2222 = !{!2223}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2221, file: !2140, line: 359, baseType: !2224, size: 64)
!2224 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !2169, line: 16, baseType: !367)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !2204, file: !14, line: 519, baseType: !2226, size: 64, offset: 384)
!2226 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !2169, line: 21, baseType: !2227)
!2227 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2169, line: 21, size: 64, elements: !2228)
!2228 = !{!2229}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2227, file: !2169, line: 21, baseType: !2230, size: 64)
!2230 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !2169, line: 14, baseType: !367)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !2204, file: !14, line: 521, baseType: !1774, size: 64, offset: 448)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2204, file: !14, line: 522, baseType: !1774, size: 64, offset: 512)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2204, file: !14, line: 528, baseType: !2234, size: 64, offset: 576)
!2234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2226, size: 64)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2204, file: !14, line: 532, baseType: !2236, size: 64, offset: 640)
!2236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 64)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !2204, file: !14, line: 536, baseType: !2139, size: 64, offset: 704)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !2183, file: !14, line: 563, baseType: !2239, size: 64, offset: 320)
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 64)
!2240 = !DISubroutineType(types: !2241)
!2241 = !{!2202, !2203, !13}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !2183, file: !14, line: 565, baseType: !2243, size: 64, offset: 384)
!2243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2244, size: 64)
!2244 = !DISubroutineType(types: !2245)
!2245 = !{null, !2203, !367, !367}
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !2183, file: !14, line: 567, baseType: !2247, size: 64, offset: 448)
!2247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 64)
!2248 = !DISubroutineType(types: !2249)
!2249 = !{!367, !2153}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !2183, file: !14, line: 571, baseType: !2199, size: 64, offset: 512)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !2183, file: !14, line: 574, baseType: !2199, size: 64, offset: 576)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !2183, file: !14, line: 579, baseType: !2253, size: 64, offset: 640)
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 64)
!2254 = !DISubroutineType(types: !2255)
!2255 = !{!32, !2153, !367, !646, !32, !32}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2183, file: !14, line: 585, baseType: !2257, size: 64, offset: 704)
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 64)
!2258 = !DISubroutineType(types: !2259)
!2259 = !{!347, !2153}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !2183, file: !14, line: 615, baseType: !2261, size: 64, offset: 768)
!2261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 64)
!2262 = !DISubroutineType(types: !2263)
!2263 = !{!1774, !2153, !367}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !2154, file: !1776, line: 359, baseType: !367, size: 64, offset: 1216)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !2154, file: !1776, line: 361, baseType: !1370, size: 64, offset: 1280)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !2154, file: !1776, line: 362, baseType: !646, size: 64, offset: 1344)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !2154, file: !1776, line: 365, baseType: !426, size: 64, offset: 1408)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !2154, file: !1776, line: 373, baseType: !2269, offset: 1472)
!2269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !1776, line: 296, elements: !1642)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !2150, file: !1776, line: 391, baseType: !1805, size: 64, offset: 64)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !2150, file: !1776, line: 392, baseType: !386, size: 64, offset: 128)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2150, file: !1776, line: 394, baseType: !2273, size: 64, offset: 192)
!2273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 64)
!2274 = !DISubroutineType(types: !2275)
!2275 = !{!367, !1370, !367, !367, !367, !367}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !2150, file: !1776, line: 398, baseType: !367, size: 64, offset: 256)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !2150, file: !1776, line: 399, baseType: !367, size: 64, offset: 320)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !2150, file: !1776, line: 405, baseType: !367, size: 64, offset: 384)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !2150, file: !1776, line: 406, baseType: !367, size: 64, offset: 448)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2150, file: !1776, line: 407, baseType: !2281, size: 64, offset: 512)
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2282, size: 64)
!2282 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !2140, line: 286, baseType: !2283)
!2283 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2140, line: 286, size: 64, elements: !2284)
!2284 = !{!2285}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2283, file: !2140, line: 286, baseType: !2286, size: 64)
!2286 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !2169, line: 18, baseType: !367)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !2150, file: !1776, line: 416, baseType: !438, size: 32, offset: 576)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !2150, file: !1776, line: 428, baseType: !438, size: 32, offset: 608)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !2150, file: !1776, line: 437, baseType: !438, size: 32, offset: 640)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !2150, file: !1776, line: 447, baseType: !438, size: 32, offset: 672)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !2150, file: !1776, line: 450, baseType: !426, size: 64, offset: 704)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !2150, file: !1776, line: 452, baseType: !32, size: 32, offset: 768)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !2150, file: !1776, line: 454, baseType: !1725, offset: 800)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !2150, file: !1776, line: 457, baseType: !1810, size: 256, offset: 832)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !2150, file: !1776, line: 459, baseType: !339, size: 128, offset: 1088)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !2150, file: !1776, line: 466, baseType: !367, size: 64, offset: 1216)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !2150, file: !1776, line: 467, baseType: !367, size: 64, offset: 1280)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !2150, file: !1776, line: 469, baseType: !367, size: 64, offset: 1344)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2150, file: !1776, line: 470, baseType: !367, size: 64, offset: 1408)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !2150, file: !1776, line: 471, baseType: !428, size: 64, offset: 1472)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !2150, file: !1776, line: 472, baseType: !367, size: 64, offset: 1536)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !2150, file: !1776, line: 473, baseType: !367, size: 64, offset: 1600)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !2150, file: !1776, line: 474, baseType: !367, size: 64, offset: 1664)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !2150, file: !1776, line: 475, baseType: !367, size: 64, offset: 1728)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !2150, file: !1776, line: 477, baseType: !1725, offset: 1792)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !2150, file: !1776, line: 478, baseType: !367, size: 64, offset: 1792)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !2150, file: !1776, line: 478, baseType: !367, size: 64, offset: 1856)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !2150, file: !1776, line: 478, baseType: !367, size: 64, offset: 1920)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !2150, file: !1776, line: 478, baseType: !367, size: 64, offset: 1984)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !2150, file: !1776, line: 479, baseType: !367, size: 64, offset: 2048)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !2150, file: !1776, line: 479, baseType: !367, size: 64, offset: 2112)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !2150, file: !1776, line: 479, baseType: !367, size: 64, offset: 2176)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !2150, file: !1776, line: 480, baseType: !367, size: 64, offset: 2240)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !2150, file: !1776, line: 480, baseType: !367, size: 64, offset: 2304)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !2150, file: !1776, line: 480, baseType: !367, size: 64, offset: 2368)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !2150, file: !1776, line: 480, baseType: !367, size: 64, offset: 2432)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !2150, file: !1776, line: 482, baseType: !2318, size: 2816, offset: 2496)
!2318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !367, size: 2816, elements: !2319)
!2319 = !{!2320}
!2320 = !DISubrange(count: 44)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !2150, file: !1776, line: 488, baseType: !2322, size: 256, offset: 5312)
!2322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !2323, line: 60, size: 256, elements: !2324)
!2323 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!2324 = !{!2325}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2322, file: !2323, line: 61, baseType: !2326, size: 256)
!2326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 256, elements: !2327)
!2327 = !{!2328}
!2328 = !DISubrange(count: 4)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !2150, file: !1776, line: 490, baseType: !2330, size: 64, offset: 5568)
!2330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2331, size: 64)
!2331 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !1776, line: 490, flags: DIFlagFwdDecl)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2150, file: !1776, line: 493, baseType: !2333, size: 896, offset: 5632)
!2333 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !2334, line: 53, baseType: !2335)
!2334 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2334, line: 13, size: 896, elements: !2336)
!2336 = !{!2337, !2338, !2339, !2340, !2343, !2344, !2345, !2346, !2366, !2367, !2368}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !2335, file: !2334, line: 18, baseType: !386, size: 64)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !2335, file: !2334, line: 28, baseType: !428, size: 64, offset: 64)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !2335, file: !2334, line: 31, baseType: !1810, size: 256, offset: 128)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !2335, file: !2334, line: 32, baseType: !2341, size: 64, offset: 384)
!2341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 64)
!2342 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !2334, line: 32, flags: DIFlagFwdDecl)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !2335, file: !2334, line: 37, baseType: !531, size: 16, offset: 448)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2335, file: !2334, line: 40, baseType: !1720, size: 192, offset: 512)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !2335, file: !2334, line: 41, baseType: !646, size: 64, offset: 704)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !2335, file: !2334, line: 42, baseType: !2347, size: 64, offset: 768)
!2347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2348, size: 64)
!2348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2349)
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !2350, line: 13, size: 896, elements: !2351)
!2350 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!2351 = !{!2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2349, file: !2350, line: 14, baseType: !646, size: 64)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2349, file: !2350, line: 15, baseType: !367, size: 64, offset: 64)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2349, file: !2350, line: 17, baseType: !367, size: 64, offset: 128)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !2349, file: !2350, line: 17, baseType: !367, size: 64, offset: 192)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !2349, file: !2350, line: 19, baseType: !1053, size: 64, offset: 256)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !2349, file: !2350, line: 21, baseType: !1053, size: 64, offset: 320)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !2349, file: !2350, line: 22, baseType: !1053, size: 64, offset: 384)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !2349, file: !2350, line: 23, baseType: !1053, size: 64, offset: 448)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !2349, file: !2350, line: 24, baseType: !1053, size: 64, offset: 512)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !2349, file: !2350, line: 25, baseType: !1053, size: 64, offset: 576)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !2349, file: !2350, line: 26, baseType: !1053, size: 64, offset: 640)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !2349, file: !2350, line: 27, baseType: !1053, size: 64, offset: 704)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !2349, file: !2350, line: 28, baseType: !1053, size: 64, offset: 768)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !2349, file: !2350, line: 29, baseType: !1053, size: 64, offset: 832)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !2335, file: !2334, line: 44, baseType: !438, size: 32, offset: 832)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !2335, file: !2334, line: 50, baseType: !636, size: 16, offset: 864)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !2335, file: !2334, line: 51, baseType: !2369, size: 16, offset: 880)
!2369 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !387, line: 18, baseType: !2370)
!2370 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !389, line: 23, baseType: !680)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2150, file: !1776, line: 495, baseType: !367, size: 64, offset: 6528)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !2150, file: !1776, line: 497, baseType: !2373, size: 64, offset: 6592)
!2373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2374, size: 64)
!2374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !1776, line: 381, size: 384, elements: !2375)
!2375 = !{!2376, !2377, !4281}
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2374, file: !1776, line: 382, baseType: !438, size: 32)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !2374, file: !1776, line: 383, baseType: !2378, size: 128, offset: 64)
!2378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !1776, line: 376, size: 128, elements: !2379)
!2379 = !{!2380, !4279}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2378, file: !1776, line: 377, baseType: !2381, size: 64)
!2381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2382, size: 64)
!2382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !2383, line: 640, size: 48640, elements: !2384)
!2383 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!2384 = !{!2385, !2391, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2406, !2424, !2435, !2516, !2517, !2518, !2529, !2530, !2532, !2533, !2534, !2535, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2613, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2646, !2648, !2649, !2650, !2662, !2663, !2664, !2665, !2666, !2667, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2691, !2696, !3004, !3005, !3006, !3007, !3008, !3011, !3014, !3017, !3020, !3742, !3838, !3869, !3870, !3871, !3872, !3873, !3874, !3875, !3876, !3877, !3886, !3887, !3888, !3889, !3890, !3895, !3896, !3897, !3900, !3901, !3904, !3907, !3910, !3913, !3945, !3948, !3949, !4028, !4029, !4032, !4033, !4036, !4037, !4038, !4042, !4043, !4044, !4057, !4058, !4059, !4069, !4074, !4075, !4081, !4082, !4083, !4084, !4085, !4086, !4087, !4088, !4102, !4103, !4104, !4105, !4106, !4107, !4108, !4109, !4110}
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !2382, file: !2383, line: 646, baseType: !2386, size: 128)
!2386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !2387, line: 56, size: 128, elements: !2388)
!2387 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!2388 = !{!2389, !2390}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2386, file: !2387, line: 57, baseType: !367, size: 64)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2386, file: !2387, line: 58, baseType: !1042, size: 32, offset: 64)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2382, file: !2383, line: 649, baseType: !2392, size: 64, offset: 128)
!2392 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1053)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2382, file: !2383, line: 657, baseType: !646, size: 64, offset: 192)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2382, file: !2383, line: 658, baseType: !623, size: 32, offset: 256)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2382, file: !2383, line: 660, baseType: !7, size: 32, offset: 288)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !2382, file: !2383, line: 661, baseType: !7, size: 32, offset: 320)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2382, file: !2383, line: 684, baseType: !32, size: 32, offset: 352)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2382, file: !2383, line: 686, baseType: !32, size: 32, offset: 384)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !2382, file: !2383, line: 687, baseType: !32, size: 32, offset: 416)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !2382, file: !2383, line: 688, baseType: !32, size: 32, offset: 448)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !2382, file: !2383, line: 689, baseType: !7, size: 32, offset: 480)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !2382, file: !2383, line: 691, baseType: !2403, size: 64, offset: 512)
!2403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2404, size: 64)
!2404 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2405)
!2405 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !2383, line: 691, flags: DIFlagFwdDecl)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !2382, file: !2383, line: 692, baseType: !2407, size: 832, offset: 576)
!2407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !2383, line: 451, size: 832, elements: !2408)
!2408 = !{!2409, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !2407, file: !2383, line: 453, baseType: !2410, size: 128)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !2383, line: 325, size: 128, elements: !2411)
!2411 = !{!2412, !2413}
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2410, file: !2383, line: 326, baseType: !367, size: 64)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !2410, file: !2383, line: 327, baseType: !1042, size: 32, offset: 64)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !2407, file: !2383, line: 454, baseType: !488, size: 192, align: 64, offset: 128)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !2407, file: !2383, line: 455, baseType: !339, size: 128, offset: 320)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2407, file: !2383, line: 456, baseType: !7, size: 32, offset: 448)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !2407, file: !2383, line: 458, baseType: !386, size: 64, offset: 512)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2407, file: !2383, line: 459, baseType: !386, size: 64, offset: 576)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !2407, file: !2383, line: 460, baseType: !386, size: 64, offset: 640)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !2407, file: !2383, line: 461, baseType: !386, size: 64, offset: 704)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !2407, file: !2383, line: 463, baseType: !386, size: 64, offset: 768)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !2407, file: !2383, line: 465, baseType: !2423, offset: 832)
!2423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !2383, line: 415, elements: !1642)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2382, file: !2383, line: 693, baseType: !2425, size: 384, offset: 1408)
!2425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !2383, line: 489, size: 384, elements: !2426)
!2426 = !{!2427, !2428, !2429, !2430, !2431, !2432, !2433}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !2425, file: !2383, line: 490, baseType: !339, size: 128)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2425, file: !2383, line: 491, baseType: !367, size: 64, offset: 128)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !2425, file: !2383, line: 492, baseType: !367, size: 64, offset: 192)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !2425, file: !2383, line: 493, baseType: !7, size: 32, offset: 256)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2425, file: !2383, line: 494, baseType: !531, size: 16, offset: 288)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !2425, file: !2383, line: 495, baseType: !531, size: 16, offset: 304)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2425, file: !2383, line: 497, baseType: !2434, size: 64, offset: 320)
!2434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 64)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !2382, file: !2383, line: 697, baseType: !2436, size: 1792, offset: 1792)
!2436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !2383, line: 507, size: 1792, elements: !2437)
!2437 = !{!2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2513, !2514}
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2436, file: !2383, line: 508, baseType: !488, size: 192, align: 64)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !2436, file: !2383, line: 515, baseType: !386, size: 64, offset: 192)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !2436, file: !2383, line: 516, baseType: !386, size: 64, offset: 256)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !2436, file: !2383, line: 517, baseType: !386, size: 64, offset: 320)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !2436, file: !2383, line: 518, baseType: !386, size: 64, offset: 384)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !2436, file: !2383, line: 519, baseType: !386, size: 64, offset: 448)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !2436, file: !2383, line: 526, baseType: !432, size: 64, offset: 512)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2436, file: !2383, line: 527, baseType: !386, size: 64, offset: 576)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2436, file: !2383, line: 528, baseType: !7, size: 32, offset: 640)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !2436, file: !2383, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !2436, file: !2383, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !2436, file: !2383, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !2436, file: !2383, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !2436, file: !2383, line: 563, baseType: !2452, size: 512, offset: 704)
!2452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !2453)
!2453 = !{!2454, !2460, !2461, !2466, !2509, !2510, !2511, !2512}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2452, file: !20, line: 119, baseType: !2455, size: 256)
!2455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !2456, line: 9, size: 256, elements: !2457)
!2456 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!2457 = !{!2458, !2459}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2455, file: !2456, line: 10, baseType: !488, size: 192, align: 64)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2455, file: !2456, line: 11, baseType: !508, size: 64, offset: 192)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !2452, file: !20, line: 120, baseType: !508, size: 64, offset: 256)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2452, file: !20, line: 121, baseType: !2462, size: 64, offset: 320)
!2462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2463, size: 64)
!2463 = !DISubroutineType(types: !2464)
!2464 = !{!19, !2465}
!2465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2452, size: 64)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2452, file: !20, line: 122, baseType: !2467, size: 64, offset: 384)
!2467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2468, size: 64)
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !2469)
!2469 = !{!2470, !2490, !2491, !2494, !2499, !2500, !2504, !2508}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !2468, file: !20, line: 160, baseType: !2471, size: 64)
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2472, size: 64)
!2472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !2473)
!2473 = !{!2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2472, file: !20, line: 215, baseType: !1816)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2472, file: !20, line: 216, baseType: !7, size: 32)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !2472, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !2472, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !2472, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !2472, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !2472, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !2472, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !2472, file: !20, line: 233, baseType: !508, size: 64, offset: 128)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !2472, file: !20, line: 234, baseType: !2465, size: 64, offset: 192)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !2472, file: !20, line: 235, baseType: !508, size: 64, offset: 256)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !2472, file: !20, line: 236, baseType: !2465, size: 64, offset: 320)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !2472, file: !20, line: 237, baseType: !2487, size: 4096, offset: 512)
!2487 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2468, size: 4096, elements: !2488)
!2488 = !{!2489}
!2489 = !DISubrange(count: 8)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2468, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2468, file: !20, line: 162, baseType: !2492, size: 32, offset: 96)
!2492 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !332, line: 27, baseType: !2493)
!2493 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !1096, line: 96, baseType: !32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2468, file: !20, line: 163, baseType: !2495, size: 32, offset: 128)
!2495 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !1399, line: 276, baseType: !2496)
!2496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !1399, line: 276, size: 32, elements: !2497)
!2497 = !{!2498}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2496, file: !1399, line: 276, baseType: !1403, size: 32)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !2468, file: !20, line: 164, baseType: !2465, size: 64, offset: 192)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2468, file: !20, line: 165, baseType: !2501, size: 128, offset: 256)
!2501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !2456, line: 14, size: 128, elements: !2502)
!2502 = !{!2503}
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2501, file: !2456, line: 15, baseType: !1802, size: 128)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !2468, file: !20, line: 166, baseType: !2505, size: 64, offset: 384)
!2505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2506, size: 64)
!2506 = !DISubroutineType(types: !2507)
!2507 = !{!508}
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2468, file: !20, line: 167, baseType: !508, size: 64, offset: 448)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2452, file: !20, line: 123, baseType: !849, size: 8, offset: 448)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !2452, file: !20, line: 124, baseType: !849, size: 8, offset: 456)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !2452, file: !20, line: 125, baseType: !849, size: 8, offset: 464)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !2452, file: !20, line: 126, baseType: !849, size: 8, offset: 472)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !2436, file: !2383, line: 572, baseType: !2452, size: 512, offset: 1216)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !2436, file: !2383, line: 580, baseType: !2515, size: 64, offset: 1728)
!2515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2436, size: 64)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2382, file: !2383, line: 721, baseType: !7, size: 32, offset: 3584)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !2382, file: !2383, line: 722, baseType: !32, size: 32, offset: 3616)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !2382, file: !2383, line: 723, baseType: !2519, size: 64, offset: 3648)
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2520, size: 64)
!2520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2521)
!2521 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !2522, line: 17, baseType: !2523)
!2522 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!2523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !2522, line: 17, size: 64, elements: !2524)
!2524 = !{!2525}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2523, file: !2522, line: 17, baseType: !2526, size: 64)
!2526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !367, size: 64, elements: !2527)
!2527 = !{!2528}
!2528 = !DISubrange(count: 1)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !2382, file: !2383, line: 724, baseType: !2521, size: 64, offset: 3712)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !2382, file: !2383, line: 749, baseType: !2531, offset: 3776)
!2531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !2383, line: 290, elements: !1642)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2382, file: !2383, line: 751, baseType: !339, size: 128, offset: 3776)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !2382, file: !2383, line: 757, baseType: !2146, size: 64, offset: 3904)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !2382, file: !2383, line: 758, baseType: !2146, size: 64, offset: 3968)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !2382, file: !2383, line: 761, baseType: !2536, size: 320, offset: 4032)
!2536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !2323, line: 34, size: 320, elements: !2537)
!2537 = !{!2538, !2539}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !2536, file: !2323, line: 35, baseType: !386, size: 64)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !2536, file: !2323, line: 36, baseType: !2540, size: 256, offset: 64)
!2540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2153, size: 256, elements: !2327)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !2382, file: !2383, line: 766, baseType: !32, size: 32, offset: 4352)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !2382, file: !2383, line: 767, baseType: !32, size: 32, offset: 4384)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !2382, file: !2383, line: 768, baseType: !32, size: 32, offset: 4416)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !2382, file: !2383, line: 770, baseType: !32, size: 32, offset: 4448)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !2382, file: !2383, line: 772, baseType: !367, size: 64, offset: 4480)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !2382, file: !2383, line: 775, baseType: !7, size: 32, offset: 4544)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !2382, file: !2383, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !2382, file: !2383, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !2382, file: !2383, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !2382, file: !2383, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !2382, file: !2383, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !2382, file: !2383, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !2382, file: !2383, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !2382, file: !2383, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !2382, file: !2383, line: 831, baseType: !367, size: 64, offset: 4672)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !2382, file: !2383, line: 833, baseType: !2557, size: 384, offset: 4736)
!2557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !2558)
!2558 = !{!2559, !2564}
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2557, file: !25, line: 26, baseType: !2560, size: 64)
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2561, size: 64)
!2561 = !DISubroutineType(types: !2562)
!2562 = !{!1053, !2563}
!2563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2557, size: 64)
!2564 = !DIDerivedType(tag: DW_TAG_member, scope: !2557, file: !25, line: 27, baseType: !2565, size: 320, offset: 64)
!2565 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2557, file: !25, line: 27, size: 320, elements: !2566)
!2566 = !{!2567, !2577, !2603}
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !2565, file: !25, line: 36, baseType: !2568, size: 320)
!2568 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2565, file: !25, line: 29, size: 320, elements: !2569)
!2569 = !{!2570, !2572, !2573, !2574, !2575, !2576}
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !2568, file: !25, line: 30, baseType: !2571, size: 64)
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2568, file: !25, line: 31, baseType: !1042, size: 32, offset: 64)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2568, file: !25, line: 32, baseType: !1042, size: 32, offset: 96)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !2568, file: !25, line: 33, baseType: !1042, size: 32, offset: 128)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2568, file: !25, line: 34, baseType: !386, size: 64, offset: 192)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !2568, file: !25, line: 35, baseType: !2571, size: 64, offset: 256)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !2565, file: !25, line: 46, baseType: !2578, size: 192)
!2578 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2565, file: !25, line: 38, size: 192, elements: !2579)
!2579 = !{!2580, !2581, !2582, !2602}
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2578, file: !25, line: 39, baseType: !2492, size: 32)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2578, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!2582 = !DIDerivedType(tag: DW_TAG_member, scope: !2578, file: !25, line: 41, baseType: !2583, size: 64, offset: 64)
!2583 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2578, file: !25, line: 41, size: 64, elements: !2584)
!2584 = !{!2585, !2593}
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !2583, file: !25, line: 42, baseType: !2586, size: 64)
!2586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2587, size: 64)
!2587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !2588, line: 7, size: 128, elements: !2589)
!2588 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!2589 = !{!2590, !2592}
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2587, file: !2588, line: 8, baseType: !2591, size: 64)
!2591 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !1096, line: 93, baseType: !434)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2587, file: !2588, line: 9, baseType: !434, size: 64, offset: 64)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !2583, file: !25, line: 43, baseType: !2594, size: 64)
!2594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2595, size: 64)
!2595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !2596, line: 7, size: 64, elements: !2597)
!2596 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!2597 = !{!2598, !2601}
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2595, file: !2596, line: 8, baseType: !2599, size: 32)
!2599 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !2596, line: 5, baseType: !2600)
!2600 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !387, line: 20, baseType: !997)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2595, file: !2596, line: 9, baseType: !2600, size: 32, offset: 32)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2578, file: !25, line: 45, baseType: !386, size: 64, offset: 128)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2565, file: !25, line: 54, baseType: !2604, size: 256)
!2604 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2565, file: !25, line: 48, size: 256, elements: !2605)
!2605 = !{!2606, !2609, !2610, !2611, !2612}
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !2604, file: !25, line: 49, baseType: !2607, size: 64)
!2607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2608, size: 64)
!2608 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !2604, file: !25, line: 50, baseType: !32, size: 32, offset: 64)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !2604, file: !25, line: 51, baseType: !32, size: 32, offset: 96)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2604, file: !25, line: 52, baseType: !367, size: 64, offset: 128)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2604, file: !25, line: 53, baseType: !367, size: 64, offset: 192)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2382, file: !2383, line: 835, baseType: !2614, size: 32, offset: 5120)
!2614 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !332, line: 22, baseType: !2615)
!2615 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !1096, line: 28, baseType: !32)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !2382, file: !2383, line: 836, baseType: !2614, size: 32, offset: 5152)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !2382, file: !2383, line: 840, baseType: !367, size: 64, offset: 5184)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !2382, file: !2383, line: 849, baseType: !2381, size: 64, offset: 5248)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2382, file: !2383, line: 852, baseType: !2381, size: 64, offset: 5312)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2382, file: !2383, line: 857, baseType: !339, size: 128, offset: 5376)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !2382, file: !2383, line: 858, baseType: !339, size: 128, offset: 5504)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !2382, file: !2383, line: 859, baseType: !2381, size: 64, offset: 5632)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !2382, file: !2383, line: 867, baseType: !339, size: 128, offset: 5696)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !2382, file: !2383, line: 868, baseType: !339, size: 128, offset: 5824)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !2382, file: !2383, line: 871, baseType: !2626, size: 64, offset: 5952)
!2626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2627, size: 64)
!2627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !2628, line: 59, size: 768, elements: !2629)
!2628 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!2629 = !{!2630, !2631, !2632, !2633, !2635, !2636, !2637, !2638}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2627, file: !2628, line: 61, baseType: !623, size: 32)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2627, file: !2628, line: 62, baseType: !7, size: 32, offset: 32)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2627, file: !2628, line: 63, baseType: !1725, offset: 64)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2627, file: !2628, line: 65, baseType: !2634, size: 256, offset: 64)
!2634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1636, size: 256, elements: !2327)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2627, file: !2628, line: 66, baseType: !1636, size: 64, offset: 320)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !2627, file: !2628, line: 68, baseType: !1944, size: 128, offset: 384)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2627, file: !2628, line: 69, baseType: !354, size: 128, align: 64, offset: 512)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !2627, file: !2628, line: 70, baseType: !2639, size: 128, offset: 640)
!2639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2640, size: 128, elements: !2527)
!2640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !2628, line: 54, size: 128, elements: !2641)
!2641 = !{!2642, !2643}
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !2640, file: !2628, line: 55, baseType: !32, size: 32)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2640, file: !2628, line: 56, baseType: !2644, size: 64, offset: 64)
!2644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2645, size: 64)
!2645 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !2628, line: 56, flags: DIFlagFwdDecl)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !2382, file: !2383, line: 872, baseType: !2647, size: 512, offset: 6016)
!2647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 512, elements: !2327)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !2382, file: !2383, line: 873, baseType: !339, size: 128, offset: 6528)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !2382, file: !2383, line: 874, baseType: !339, size: 128, offset: 6656)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !2382, file: !2383, line: 876, baseType: !2651, size: 64, offset: 6784)
!2651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2652, size: 64)
!2652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2653, line: 26, size: 192, elements: !2654)
!2653 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2654 = !{!2655, !2656}
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2652, file: !2653, line: 27, baseType: !7, size: 32)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2652, file: !2653, line: 28, baseType: !2657, size: 128, offset: 64)
!2657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2658, line: 43, size: 128, elements: !2659)
!2658 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2659 = !{!2660, !2661}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2657, file: !2658, line: 44, baseType: !1816)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2657, file: !2658, line: 45, baseType: !339, size: 128)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !2382, file: !2383, line: 879, baseType: !1056, size: 64, offset: 6848)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !2382, file: !2383, line: 882, baseType: !1056, size: 64, offset: 6912)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2382, file: !2383, line: 884, baseType: !386, size: 64, offset: 6976)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2382, file: !2383, line: 885, baseType: !386, size: 64, offset: 7040)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2382, file: !2383, line: 890, baseType: !386, size: 64, offset: 7104)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2382, file: !2383, line: 891, baseType: !2668, size: 128, offset: 7168)
!2668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !2383, line: 242, size: 128, elements: !2669)
!2669 = !{!2670, !2671, !2672}
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2668, file: !2383, line: 244, baseType: !386, size: 64)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2668, file: !2383, line: 245, baseType: !386, size: 64, offset: 64)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2668, file: !2383, line: 246, baseType: !1816, offset: 128)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2382, file: !2383, line: 900, baseType: !367, size: 64, offset: 7296)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2382, file: !2383, line: 901, baseType: !367, size: 64, offset: 7360)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2382, file: !2383, line: 904, baseType: !386, size: 64, offset: 7424)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !2382, file: !2383, line: 907, baseType: !386, size: 64, offset: 7488)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2382, file: !2383, line: 910, baseType: !367, size: 64, offset: 7552)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2382, file: !2383, line: 911, baseType: !367, size: 64, offset: 7616)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2382, file: !2383, line: 914, baseType: !2680, size: 640, offset: 7680)
!2680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !2681, line: 123, size: 640, elements: !2682)
!2681 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!2682 = !{!2683, !2689, !2690}
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !2680, file: !2681, line: 124, baseType: !2684, size: 576)
!2684 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2685, size: 576, elements: !1647)
!2685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !2681, line: 108, size: 192, elements: !2686)
!2686 = !{!2687, !2688}
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !2685, file: !2681, line: 109, baseType: !386, size: 64)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !2685, file: !2681, line: 110, baseType: !2501, size: 128, offset: 64)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !2680, file: !2681, line: 125, baseType: !7, size: 32, offset: 576)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !2680, file: !2681, line: 126, baseType: !7, size: 32, offset: 608)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !2382, file: !2383, line: 917, baseType: !2692, size: 192, offset: 8320)
!2692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !2681, line: 134, size: 192, elements: !2693)
!2693 = !{!2694, !2695}
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2692, file: !2681, line: 135, baseType: !354, size: 128, align: 64)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !2692, file: !2681, line: 136, baseType: !7, size: 32, offset: 128)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !2382, file: !2383, line: 923, baseType: !2697, size: 64, offset: 8512)
!2697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2698, size: 64)
!2698 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2699)
!2699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !2700, line: 111, size: 1280, elements: !2701)
!2700 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!2701 = !{!2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2721, !2722, !2723, !2724, !2725, !2726, !2831, !2832, !2833, !2834, !2835, !2991, !2999}
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2699, file: !2700, line: 112, baseType: !438, size: 32)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2699, file: !2700, line: 120, baseType: !1437, size: 32, offset: 32)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2699, file: !2700, line: 121, baseType: !1445, size: 32, offset: 64)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !2699, file: !2700, line: 122, baseType: !1437, size: 32, offset: 96)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !2699, file: !2700, line: 123, baseType: !1445, size: 32, offset: 128)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2699, file: !2700, line: 124, baseType: !1437, size: 32, offset: 160)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !2699, file: !2700, line: 125, baseType: !1445, size: 32, offset: 192)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !2699, file: !2700, line: 126, baseType: !1437, size: 32, offset: 224)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !2699, file: !2700, line: 127, baseType: !1445, size: 32, offset: 256)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !2699, file: !2700, line: 128, baseType: !7, size: 32, offset: 288)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !2699, file: !2700, line: 129, baseType: !2713, size: 64, offset: 320)
!2713 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !2714, line: 26, baseType: !2715)
!2714 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!2715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !2714, line: 24, size: 64, elements: !2716)
!2716 = !{!2717}
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2715, file: !2714, line: 25, baseType: !2718, size: 64)
!2718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !548, size: 64, elements: !2719)
!2719 = !{!2720}
!2720 = !DISubrange(count: 2)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !2699, file: !2700, line: 130, baseType: !2713, size: 64, offset: 384)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !2699, file: !2700, line: 131, baseType: !2713, size: 64, offset: 448)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !2699, file: !2700, line: 132, baseType: !2713, size: 64, offset: 512)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !2699, file: !2700, line: 133, baseType: !2713, size: 64, offset: 576)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !2699, file: !2700, line: 135, baseType: !537, size: 8, offset: 640)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !2699, file: !2700, line: 137, baseType: !2727, size: 64, offset: 704)
!2727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 64)
!2728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !2729, line: 189, size: 1664, elements: !2730)
!2729 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!2730 = !{!2731, !2732, !2735, !2740, !2741, !2744, !2745, !2750, !2751, !2752, !2753, !2755, !2756, !2757, !2758, !2759, !2795, !2816}
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2728, file: !2729, line: 190, baseType: !623, size: 32)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !2728, file: !2729, line: 191, baseType: !2733, size: 32, offset: 32)
!2733 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !2729, line: 28, baseType: !2734)
!2734 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !332, line: 98, baseType: !2600)
!2735 = !DIDerivedType(tag: DW_TAG_member, scope: !2728, file: !2729, line: 192, baseType: !2736, size: 192, offset: 64)
!2736 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2728, file: !2729, line: 192, size: 192, elements: !2737)
!2737 = !{!2738, !2739}
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !2736, file: !2729, line: 193, baseType: !339, size: 128)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !2736, file: !2729, line: 194, baseType: !488, size: 192, align: 64)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !2728, file: !2729, line: 199, baseType: !1810, size: 256, offset: 256)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2728, file: !2729, line: 200, baseType: !2742, size: 64, offset: 512)
!2742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2743, size: 64)
!2743 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !2729, line: 200, flags: DIFlagFwdDecl)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !2728, file: !2729, line: 201, baseType: !646, size: 64, offset: 576)
!2745 = !DIDerivedType(tag: DW_TAG_member, scope: !2728, file: !2729, line: 202, baseType: !2746, size: 64, offset: 640)
!2746 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2728, file: !2729, line: 202, size: 64, elements: !2747)
!2747 = !{!2748, !2749}
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !2746, file: !2729, line: 203, baseType: !1538, size: 64)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !2746, file: !2729, line: 204, baseType: !1538, size: 64)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !2728, file: !2729, line: 206, baseType: !1538, size: 64, offset: 704)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2728, file: !2729, line: 207, baseType: !1437, size: 32, offset: 768)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2728, file: !2729, line: 208, baseType: !1445, size: 32, offset: 800)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !2728, file: !2729, line: 209, baseType: !2754, size: 32, offset: 832)
!2754 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !2729, line: 31, baseType: !1557)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !2728, file: !2729, line: 210, baseType: !531, size: 16, offset: 864)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !2728, file: !2729, line: 211, baseType: !531, size: 16, offset: 880)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2728, file: !2729, line: 215, baseType: !680, size: 16, offset: 896)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2728, file: !2729, line: 222, baseType: !367, size: 64, offset: 960)
!2759 = !DIDerivedType(tag: DW_TAG_member, scope: !2728, file: !2729, line: 239, baseType: !2760, size: 320, offset: 1024)
!2760 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2728, file: !2729, line: 239, size: 320, elements: !2761)
!2761 = !{!2762, !2787}
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !2760, file: !2729, line: 240, baseType: !2763, size: 320)
!2763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !2729, line: 108, size: 320, elements: !2764)
!2764 = !{!2765, !2766, !2776, !2779, !2786}
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2763, file: !2729, line: 110, baseType: !367, size: 64)
!2766 = !DIDerivedType(tag: DW_TAG_member, scope: !2763, file: !2729, line: 111, baseType: !2767, size: 64, offset: 64)
!2767 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2763, file: !2729, line: 111, size: 64, elements: !2768)
!2768 = !{!2769, !2775}
!2769 = !DIDerivedType(tag: DW_TAG_member, scope: !2767, file: !2729, line: 112, baseType: !2770, size: 64)
!2770 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2767, file: !2729, line: 112, size: 64, elements: !2771)
!2771 = !{!2772, !2773}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !2770, file: !2729, line: 114, baseType: !636, size: 16)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !2770, file: !2729, line: 115, baseType: !2774, size: 48, offset: 16)
!2774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 48, elements: !1054)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2767, file: !2729, line: 121, baseType: !367, size: 64)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2763, file: !2729, line: 123, baseType: !2777, size: 64, offset: 128)
!2777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2778, size: 64)
!2778 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !2729, line: 96, flags: DIFlagFwdDecl)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2763, file: !2729, line: 124, baseType: !2780, size: 64, offset: 192)
!2780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2781, size: 64)
!2781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !2729, line: 102, size: 192, elements: !2782)
!2782 = !{!2783, !2784, !2785}
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2781, file: !2729, line: 103, baseType: !354, size: 128, align: 64)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2781, file: !2729, line: 104, baseType: !623, size: 32, offset: 128)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !2781, file: !2729, line: 105, baseType: !826, size: 8, offset: 160)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2763, file: !2729, line: 125, baseType: !347, size: 64, offset: 256)
!2787 = !DIDerivedType(tag: DW_TAG_member, scope: !2760, file: !2729, line: 241, baseType: !2788, size: 320)
!2788 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2760, file: !2729, line: 241, size: 320, elements: !2789)
!2789 = !{!2790, !2791, !2792, !2793, !2794}
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2788, file: !2729, line: 242, baseType: !367, size: 64)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !2788, file: !2729, line: 243, baseType: !367, size: 64, offset: 64)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2788, file: !2729, line: 244, baseType: !2777, size: 64, offset: 128)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2788, file: !2729, line: 245, baseType: !2780, size: 64, offset: 192)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2788, file: !2729, line: 246, baseType: !1093, size: 64, offset: 256)
!2795 = !DIDerivedType(tag: DW_TAG_member, scope: !2728, file: !2729, line: 254, baseType: !2796, size: 256, offset: 1344)
!2796 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2728, file: !2729, line: 254, size: 256, elements: !2797)
!2797 = !{!2798, !2804}
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !2796, file: !2729, line: 255, baseType: !2799, size: 256)
!2799 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !2729, line: 128, size: 256, elements: !2800)
!2800 = !{!2801, !2802}
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !2799, file: !2729, line: 129, baseType: !646, size: 64)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2799, file: !2729, line: 130, baseType: !2803, size: 256)
!2803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !646, size: 256, elements: !2327)
!2804 = !DIDerivedType(tag: DW_TAG_member, scope: !2796, file: !2729, line: 256, baseType: !2805, size: 256)
!2805 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2796, file: !2729, line: 256, size: 256, elements: !2806)
!2806 = !{!2807, !2808}
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !2805, file: !2729, line: 258, baseType: !339, size: 128)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !2805, file: !2729, line: 259, baseType: !2809, size: 128, offset: 128)
!2809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !2810, line: 22, size: 128, elements: !2811)
!2810 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!2811 = !{!2812, !2815}
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2809, file: !2810, line: 23, baseType: !2813, size: 64)
!2813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2814, size: 64)
!2814 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !2810, line: 23, flags: DIFlagFwdDecl)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !2809, file: !2810, line: 24, baseType: !367, size: 64, offset: 64)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !2728, file: !2729, line: 274, baseType: !2817, size: 64, offset: 1600)
!2817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2818, size: 64)
!2818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !2729, line: 170, size: 192, elements: !2819)
!2819 = !{!2820, !2829, !2830}
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2818, file: !2729, line: 171, baseType: !2821, size: 64)
!2821 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !2729, line: 165, baseType: !2822)
!2822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2823, size: 64)
!2823 = !DISubroutineType(types: !2824)
!2824 = !{!32, !2727, !2825, !2827, !2727}
!2825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2826, size: 64)
!2826 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2778)
!2827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2828, size: 64)
!2828 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2799)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2818, file: !2729, line: 172, baseType: !2727, size: 64, offset: 64)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !2818, file: !2729, line: 173, baseType: !2777, size: 64, offset: 128)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !2699, file: !2700, line: 138, baseType: !2727, size: 64, offset: 768)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !2699, file: !2700, line: 139, baseType: !2727, size: 64, offset: 832)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !2699, file: !2700, line: 140, baseType: !2727, size: 64, offset: 896)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2699, file: !2700, line: 145, baseType: !2008, size: 64, offset: 960)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2699, file: !2700, line: 146, baseType: !2836, size: 64, offset: 1024)
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2837, size: 64)
!2837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !2838, line: 56, size: 4160, elements: !2839)
!2838 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2839 = !{!2840, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2879, !2880, !2881, !2882, !2883, !2895, !2976, !2977, !2989}
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !2837, file: !2838, line: 57, baseType: !2841, size: 576)
!2841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !2838, line: 23, size: 576, elements: !2842)
!2842 = !{!2843, !2844}
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !2841, file: !2838, line: 24, baseType: !1042, size: 32)
!2844 = !DIDerivedType(tag: DW_TAG_member, scope: !2841, file: !2838, line: 25, baseType: !2845, size: 512, offset: 64)
!2845 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2841, file: !2838, line: 25, size: 512, elements: !2846)
!2846 = !{!2847, !2856}
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !2845, file: !2838, line: 26, baseType: !2848, size: 480)
!2848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2849, size: 480, elements: !2854)
!2849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !2838, line: 17, size: 96, elements: !2850)
!2850 = !{!2851, !2852, !2853}
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2849, file: !2838, line: 18, baseType: !1042, size: 32)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !2849, file: !2838, line: 19, baseType: !1042, size: 32, offset: 32)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2849, file: !2838, line: 20, baseType: !1042, size: 32, offset: 64)
!2854 = !{!2855}
!2855 = !DISubrange(count: 5)
!2856 = !DIDerivedType(tag: DW_TAG_member, scope: !2845, file: !2838, line: 27, baseType: !2857, size: 128)
!2857 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2845, file: !2838, line: 27, size: 128, elements: !2858)
!2858 = !{!2859, !2861}
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !2857, file: !2838, line: 28, baseType: !2860, size: 64)
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2849, size: 64)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !2857, file: !2838, line: 29, baseType: !2860, size: 64, offset: 64)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !2837, file: !2838, line: 58, baseType: !2841, size: 576, offset: 576)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !2837, file: !2838, line: 59, baseType: !2841, size: 576, offset: 1152)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2837, file: !2838, line: 60, baseType: !438, size: 32, offset: 1728)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2837, file: !2838, line: 61, baseType: !2836, size: 64, offset: 1792)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2837, file: !2838, line: 62, baseType: !32, size: 32, offset: 1856)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2837, file: !2838, line: 63, baseType: !1437, size: 32, offset: 1888)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2837, file: !2838, line: 64, baseType: !1445, size: 32, offset: 1920)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2837, file: !2838, line: 65, baseType: !2870, size: 192, offset: 1984)
!2870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !2871, line: 7, size: 192, elements: !2872)
!2871 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!2872 = !{!2873, !2874, !2878}
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !2870, file: !2871, line: 8, baseType: !426, size: 64)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2870, file: !2871, line: 9, baseType: !2875, size: 64, offset: 64)
!2875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2876, size: 64)
!2876 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2877)
!2877 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !2871, line: 5, flags: DIFlagFwdDecl)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !2870, file: !2871, line: 10, baseType: !7, size: 32, offset: 128)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2837, file: !2838, line: 66, baseType: !367, size: 64, offset: 2176)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !2837, file: !2838, line: 74, baseType: !339, size: 128, offset: 2240)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !2837, file: !2838, line: 75, baseType: !2727, size: 64, offset: 2368)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !2837, file: !2838, line: 76, baseType: !1810, size: 256, offset: 2432)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2837, file: !2838, line: 83, baseType: !2884, size: 256, offset: 2688)
!2884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2885, line: 102, size: 256, elements: !2886)
!2885 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2886 = !{!2887, !2888, !2889}
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2884, file: !2885, line: 103, baseType: !426, size: 64)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2884, file: !2885, line: 104, baseType: !339, size: 128, offset: 64)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2884, file: !2885, line: 105, baseType: !2890, size: 64, offset: 192)
!2890 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2885, line: 21, baseType: !2891)
!2891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2892, size: 64)
!2892 = !DISubroutineType(types: !2893)
!2893 = !{null, !2894}
!2894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2884, size: 64)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2837, file: !2838, line: 85, baseType: !2896, size: 768, offset: 2944)
!2896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !2897, line: 156, size: 768, elements: !2898)
!2897 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!2898 = !{!2899, !2904}
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !2896, file: !2897, line: 157, baseType: !2900, size: 64)
!2900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2901, size: 64)
!2901 = !DISubroutineType(types: !2902)
!2902 = !{!32, !2903}
!2903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2896, size: 64)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2896, file: !2897, line: 158, baseType: !2905, size: 704, offset: 64)
!2905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !2897, line: 150, size: 704, elements: !2906)
!2906 = !{!2907, !2975}
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2905, file: !2897, line: 152, baseType: !2908, size: 640)
!2908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !2897, line: 131, size: 640, elements: !2909)
!2909 = !{!2910, !2943, !2944, !2945, !2965, !2966, !2968, !2974}
!2910 = !DIDerivedType(tag: DW_TAG_member, scope: !2908, file: !2897, line: 132, baseType: !2911, size: 192)
!2911 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2908, file: !2897, line: 132, size: 192, elements: !2912)
!2912 = !{!2913, !2942}
!2913 = !DIDerivedType(tag: DW_TAG_member, scope: !2911, file: !2897, line: 133, baseType: !2914, size: 192)
!2914 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2911, file: !2897, line: 133, size: 192, elements: !2915)
!2915 = !{!2916, !2939, !2940, !2941}
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !2914, file: !2897, line: 134, baseType: !2917, size: 64)
!2917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2918, size: 64)
!2918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !2897, line: 112, size: 512, elements: !2919)
!2919 = !{!2920, !2921, !2922, !2923, !2924, !2925, !2931, !2937, !2938}
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !2918, file: !2897, line: 113, baseType: !347, size: 64)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2918, file: !2897, line: 114, baseType: !646, size: 64, offset: 64)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !2918, file: !2897, line: 115, baseType: !32, size: 32, offset: 128)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2918, file: !2897, line: 116, baseType: !1434, size: 16, offset: 160)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !2918, file: !2897, line: 117, baseType: !2917, size: 64, offset: 192)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !2918, file: !2897, line: 118, baseType: !2926, size: 64, offset: 256)
!2926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2927, size: 64)
!2927 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !2897, line: 47, baseType: !2928)
!2928 = !DISubroutineType(types: !2929)
!2929 = !{!32, !2917, !32, !646, !2930, !1749}
!2930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2918, file: !2897, line: 119, baseType: !2932, size: 64, offset: 320)
!2932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2933, size: 64)
!2933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !2897, line: 94, size: 192, elements: !2934)
!2934 = !{!2935, !2936}
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2933, file: !2897, line: 95, baseType: !438, size: 32)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2933, file: !2897, line: 96, baseType: !1944, size: 128, offset: 64)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !2918, file: !2897, line: 120, baseType: !646, size: 64, offset: 384)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !2918, file: !2897, line: 121, baseType: !646, size: 64, offset: 448)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2914, file: !2897, line: 135, baseType: !32, size: 32, offset: 64)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2914, file: !2897, line: 136, baseType: !32, size: 32, offset: 96)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !2914, file: !2897, line: 137, baseType: !32, size: 32, offset: 128)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2911, file: !2897, line: 139, baseType: !354, size: 128, align: 64)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !2908, file: !2897, line: 141, baseType: !2651, size: 64, offset: 192)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !2908, file: !2897, line: 142, baseType: !2917, size: 64, offset: 256)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2908, file: !2897, line: 143, baseType: !2946, size: 64, offset: 320)
!2946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2947, size: 64)
!2947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !2897, line: 161, size: 960, elements: !2948)
!2948 = !{!2949, !2950, !2954, !2961}
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !2947, file: !2897, line: 162, baseType: !2896, size: 768)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !2947, file: !2897, line: 163, baseType: !2951, size: 64, offset: 768)
!2951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2952, size: 64)
!2952 = !DISubroutineType(types: !2953)
!2953 = !{!2903, !2946}
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !2947, file: !2897, line: 164, baseType: !2955, size: 64, offset: 832)
!2955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2956, size: 64)
!2956 = !DISubroutineType(types: !2957)
!2957 = !{null, !2958, !2917, !2959, !2960}
!2958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2908, size: 64)
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 64)
!2960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 64)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !2947, file: !2897, line: 167, baseType: !2962, size: 64, offset: 896)
!2962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2963, size: 64)
!2963 = !DISubroutineType(types: !2964)
!2964 = !{!32, !2958, !2917}
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2908, file: !2897, line: 144, baseType: !2903, size: 64, offset: 384)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2908, file: !2897, line: 145, baseType: !2967, size: 64, offset: 448)
!2967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2905, size: 64)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2908, file: !2897, line: 146, baseType: !2969, size: 64, offset: 512)
!2969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2970, size: 64)
!2970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !2897, line: 124, size: 256, elements: !2971)
!2971 = !{!2972, !2973}
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2970, file: !2897, line: 125, baseType: !488, size: 192, align: 64)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2970, file: !2897, line: 126, baseType: !2958, size: 64, offset: 192)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2908, file: !2897, line: 147, baseType: !1636, size: 64, offset: 576)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2905, file: !2897, line: 153, baseType: !1805, size: 64, offset: 640)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2837, file: !2838, line: 86, baseType: !2958, size: 64, offset: 3712)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2837, file: !2838, line: 88, baseType: !2978, size: 64, offset: 3776)
!2978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2979, size: 64)
!2979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !2838, line: 92, size: 576, elements: !2980)
!2980 = !{!2981, !2982, !2983, !2984, !2985}
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2979, file: !2838, line: 93, baseType: !331, size: 128)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2979, file: !2838, line: 94, baseType: !2836, size: 64, offset: 128)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2979, file: !2838, line: 95, baseType: !1437, size: 32, offset: 192)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2979, file: !2838, line: 96, baseType: !32, size: 32, offset: 224)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !2979, file: !2838, line: 97, baseType: !2986, size: 320, offset: 256)
!2986 = !DICompositeType(tag: DW_TAG_array_type, baseType: !438, size: 320, elements: !2987)
!2987 = !{!2988}
!2988 = !DISubrange(count: 10)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !2837, file: !2838, line: 89, baseType: !2990, size: 320, offset: 3840)
!2990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 320, elements: !2987)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !2699, file: !2700, line: 147, baseType: !2992, size: 64, offset: 1088)
!2992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2993, size: 64)
!2993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !2700, line: 25, size: 64, elements: !2994)
!2994 = !{!2995, !2996, !2997}
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2993, file: !2700, line: 26, baseType: !438, size: 32)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2993, file: !2700, line: 27, baseType: !32, size: 32, offset: 32)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2993, file: !2700, line: 28, baseType: !2998, offset: 64)
!2998 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1445, elements: !538)
!2999 = !DIDerivedType(tag: DW_TAG_member, scope: !2699, file: !2700, line: 149, baseType: !3000, size: 128, offset: 1152)
!3000 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2699, file: !2700, line: 149, size: 128, elements: !3001)
!3001 = !{!3002, !3003}
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !3000, file: !2700, line: 150, baseType: !32, size: 32)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3000, file: !2700, line: 151, baseType: !354, size: 128, align: 64)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !2382, file: !2383, line: 926, baseType: !2697, size: 64, offset: 8576)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !2382, file: !2383, line: 929, baseType: !2697, size: 64, offset: 8640)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !2382, file: !2383, line: 933, baseType: !2727, size: 64, offset: 8704)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !2382, file: !2383, line: 943, baseType: !322, size: 128, offset: 8768)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !2382, file: !2383, line: 945, baseType: !3009, size: 64, offset: 8896)
!3009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3010, size: 64)
!3010 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !2383, line: 49, flags: DIFlagFwdDecl)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !2382, file: !2383, line: 956, baseType: !3012, size: 64, offset: 8960)
!3012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3013, size: 64)
!3013 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !2383, line: 45, flags: DIFlagFwdDecl)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2382, file: !2383, line: 959, baseType: !3015, size: 64, offset: 9024)
!3015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3016, size: 64)
!3016 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !2383, line: 959, flags: DIFlagFwdDecl)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !2382, file: !2383, line: 962, baseType: !3018, size: 64, offset: 9088)
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 64)
!3019 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !2383, line: 66, flags: DIFlagFwdDecl)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !2382, file: !2383, line: 966, baseType: !3021, size: 64, offset: 9152)
!3021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3022, size: 64)
!3022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !3023, line: 31, size: 576, elements: !3024)
!3023 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!3024 = !{!3025, !3026, !3029, !3032, !3035, !3036, !3725, !3728, !3729}
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3022, file: !3023, line: 32, baseType: !438, size: 32)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !3022, file: !3023, line: 33, baseType: !3027, size: 64, offset: 64)
!3027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3028, size: 64)
!3028 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !3023, line: 9, flags: DIFlagFwdDecl)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !3022, file: !3023, line: 34, baseType: !3030, size: 64, offset: 128)
!3030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3031, size: 64)
!3031 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !3023, line: 10, flags: DIFlagFwdDecl)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !3022, file: !3023, line: 35, baseType: !3033, size: 64, offset: 192)
!3033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3034, size: 64)
!3034 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !3023, line: 8, flags: DIFlagFwdDecl)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !3022, file: !3023, line: 36, baseType: !2644, size: 64, offset: 256)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !3022, file: !3023, line: 37, baseType: !3037, size: 64, offset: 320)
!3037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3038, size: 64)
!3038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !3039, line: 56, size: 16896, elements: !3040)
!3039 = !DIFile(filename: "./include/net/net_namespace.h", directory: "/home/lizy2001/genbc/linux")
!3040 = !{!3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3062, !3063, !3064, !3068, !3069, !3070, !3071, !3072, !3075, !3077, !3078, !3093, !3094, !3095, !3096, !3106, !3176, !3182, !3188, !3201, !3510, !3664, !3671, !3674, !3697, !3698, !3724}
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "passive", scope: !3038, file: !3039, line: 60, baseType: !623, size: 32)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3038, file: !3039, line: 63, baseType: !623, size: 32, offset: 32)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "rules_mod_lock", scope: !3038, file: !3039, line: 66, baseType: !1725, offset: 64)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "dev_unreg_count", scope: !3038, file: !3039, line: 68, baseType: !7, size: 32, offset: 64)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_seq", scope: !3038, file: !3039, line: 70, baseType: !7, size: 32, offset: 96)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !3038, file: !3039, line: 71, baseType: !32, size: 32, offset: 128)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "nsid_lock", scope: !3038, file: !3039, line: 73, baseType: !1725, offset: 160)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_genid", scope: !3038, file: !3039, line: 74, baseType: !438, size: 32, offset: 160)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3038, file: !3039, line: 76, baseType: !339, size: 128, offset: 192)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "exit_list", scope: !3038, file: !3039, line: 77, baseType: !339, size: 128, offset: 320)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_list", scope: !3038, file: !3039, line: 83, baseType: !1378, size: 64, offset: 448)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "key_domain", scope: !3038, file: !3039, line: 86, baseType: !2780, size: 64, offset: 512)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !3038, file: !3039, line: 88, baseType: !2836, size: 64, offset: 576)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !3038, file: !3039, line: 89, baseType: !2978, size: 64, offset: 640)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "netns_ids", scope: !3038, file: !3039, line: 90, baseType: !3056, size: 192, offset: 704)
!3056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3057, line: 19, size: 192, elements: !3058)
!3057 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3058 = !{!3059, !3060, !3061}
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3056, file: !3057, line: 20, baseType: !1792, size: 128)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3056, file: !3057, line: 21, baseType: !7, size: 32, offset: 128)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3056, file: !3057, line: 22, baseType: !7, size: 32, offset: 160)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3038, file: !3039, line: 92, baseType: !2870, size: 192, offset: 896)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_head", scope: !3038, file: !3039, line: 94, baseType: !339, size: 128, offset: 1088)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net", scope: !3038, file: !3039, line: 95, baseType: !3065, size: 64, offset: 1216)
!3065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3066, size: 64)
!3066 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !3067, line: 123, flags: DIFlagFwdDecl)
!3067 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_stat", scope: !3038, file: !3039, line: 96, baseType: !3065, size: 64, offset: 1280)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !3038, file: !3039, line: 99, baseType: !2896, size: 768, offset: 1344)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl", scope: !3038, file: !3039, line: 102, baseType: !500, size: 64, offset: 2112)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "genl_sock", scope: !3038, file: !3039, line: 103, baseType: !500, size: 64, offset: 2176)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_sock", scope: !3038, file: !3039, line: 105, baseType: !3073, size: 64, offset: 2240)
!3073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3074, size: 64)
!3074 = !DICompositeType(tag: DW_TAG_structure_type, name: "uevent_sock", file: !3039, line: 48, flags: DIFlagFwdDecl)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name_head", scope: !3038, file: !3039, line: 107, baseType: !3076, size: 64, offset: 2304)
!3076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "dev_index_head", scope: !3038, file: !3039, line: 108, baseType: !3076, size: 64, offset: 2368)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_chain", scope: !3038, file: !3039, line: 109, baseType: !3079, size: 64, offset: 2432)
!3079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_notifier_head", file: !3080, line: 70, size: 64, elements: !3081)
!3080 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!3081 = !{!3082}
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3079, file: !3080, line: 71, baseType: !3083, size: 64)
!3083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3084, size: 64)
!3084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !3080, line: 54, size: 192, elements: !3085)
!3085 = !{!3086, !3091, !3092}
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !3084, file: !3080, line: 55, baseType: !3087, size: 64)
!3087 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !3080, line: 51, baseType: !3088)
!3088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3089, size: 64)
!3089 = !DISubroutineType(types: !3090)
!3090 = !{!32, !3083, !367, !646}
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3084, file: !3080, line: 56, baseType: !3083, size: 64, offset: 64)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !3084, file: !3080, line: 57, baseType: !32, size: 32, offset: 128)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "hash_mix", scope: !3038, file: !3039, line: 114, baseType: !1042, size: 32, offset: 2496)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "loopback_dev", scope: !3038, file: !3039, line: 116, baseType: !345, size: 64, offset: 2560)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "rules_ops", scope: !3038, file: !3039, line: 119, baseType: !339, size: 128, offset: 2624)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !3038, file: !3039, line: 121, baseType: !3097, size: 256, offset: 2752)
!3097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_core", file: !3098, line: 8, size: 256, elements: !3099)
!3098 = !DIFile(filename: "./include/net/netns/core.h", directory: "/home/lizy2001/genbc/linux")
!3099 = !{!3100, !3101, !3102, !3103}
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_hdr", scope: !3097, file: !3098, line: 10, baseType: !2958, size: 64)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_somaxconn", scope: !3097, file: !3098, line: 12, baseType: !32, size: 32, offset: 64)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "sock_inuse", scope: !3097, file: !3098, line: 15, baseType: !1056, size: 64, offset: 128)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "prot_inuse", scope: !3097, file: !3098, line: 16, baseType: !3104, size: 64, offset: 192)
!3104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3105, size: 64)
!3105 = !DICompositeType(tag: DW_TAG_structure_type, name: "prot_inuse", file: !3098, line: 6, flags: DIFlagFwdDecl)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "mib", scope: !3038, file: !3039, line: 122, baseType: !3107, size: 832, offset: 3008)
!3107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_mib", file: !3108, line: 7, size: 832, elements: !3109)
!3108 = !DIFile(filename: "./include/net/netns/mib.h", directory: "/home/lizy2001/genbc/linux")
!3109 = !{!3110, !3117, !3128, !3136, !3144, !3145, !3153, !3161, !3162, !3163, !3164, !3165, !3171}
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_statistics", scope: !3107, file: !3108, line: 8, baseType: !3111, size: 64)
!3111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3112, size: 64)
!3112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_mib", file: !3113, line: 92, size: 1024, elements: !3114)
!3113 = !DIFile(filename: "./include/net/snmp.h", directory: "/home/lizy2001/genbc/linux")
!3114 = !{!3115}
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3112, file: !3113, line: 93, baseType: !3116, size: 1024)
!3116 = !DICompositeType(tag: DW_TAG_array_type, baseType: !367, size: 1024, elements: !324)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "ip_statistics", scope: !3107, file: !3108, line: 9, baseType: !3118, size: 64, offset: 64)
!3118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3119, size: 64)
!3119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipstats_mib", file: !3113, line: 51, size: 2368, elements: !3120)
!3120 = !{!3121, !3125}
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3119, file: !3113, line: 53, baseType: !3122, size: 2368)
!3122 = !DICompositeType(tag: DW_TAG_array_type, baseType: !386, size: 2368, elements: !3123)
!3123 = !{!3124}
!3124 = !DISubrange(count: 37)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !3119, file: !3113, line: 54, baseType: !3126, offset: 2368)
!3126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "u64_stats_sync", file: !3127, line: 68, elements: !1642)
!3127 = !DIFile(filename: "./include/linux/u64_stats_sync.h", directory: "/home/lizy2001/genbc/linux")
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "net_statistics", scope: !3107, file: !3108, line: 10, baseType: !3129, size: 64, offset: 128)
!3129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3130, size: 64)
!3130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "linux_mib", file: !3113, line: 104, size: 7936, elements: !3131)
!3131 = !{!3132}
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3130, file: !3113, line: 105, baseType: !3133, size: 7936)
!3133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !367, size: 7936, elements: !3134)
!3134 = !{!3135}
!3135 = !DISubrange(count: 124)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "udp_statistics", scope: !3107, file: !3108, line: 11, baseType: !3137, size: 64, offset: 192)
!3137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3138, size: 64)
!3138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_mib", file: !3113, line: 98, size: 576, elements: !3139)
!3139 = !{!3140}
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3138, file: !3113, line: 99, baseType: !3141, size: 576)
!3141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !367, size: 576, elements: !3142)
!3142 = !{!3143}
!3143 = !DISubrange(count: 9)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_statistics", scope: !3107, file: !3108, line: 12, baseType: !3137, size: 64, offset: 256)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_statistics", scope: !3107, file: !3108, line: 13, baseType: !3146, size: 64, offset: 320)
!3146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3147, size: 64)
!3147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmp_mib", file: !3113, line: 59, size: 1792, elements: !3148)
!3148 = !{!3149}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3147, file: !3113, line: 60, baseType: !3150, size: 1792)
!3150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !367, size: 1792, elements: !3151)
!3151 = !{!3152}
!3152 = !DISubrange(count: 28)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "icmpmsg_statistics", scope: !3107, file: !3108, line: 14, baseType: !3154, size: 64, offset: 384)
!3154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3155, size: 64)
!3155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpmsg_mib", file: !3113, line: 64, size: 32768, elements: !3156)
!3156 = !{!3157}
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3155, file: !3113, line: 65, baseType: !3158, size: 32768)
!3158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 32768, elements: !3159)
!3159 = !{!3160}
!3160 = !DISubrange(count: 512)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_devsnmp6", scope: !3107, file: !3108, line: 17, baseType: !3065, size: 64, offset: 448)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "udp_stats_in6", scope: !3107, file: !3108, line: 18, baseType: !3137, size: 64, offset: 512)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_stats_in6", scope: !3107, file: !3108, line: 19, baseType: !3137, size: 64, offset: 576)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6_statistics", scope: !3107, file: !3108, line: 20, baseType: !3118, size: 64, offset: 640)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_statistics", scope: !3107, file: !3108, line: 21, baseType: !3166, size: 64, offset: 704)
!3166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3167, size: 64)
!3167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib", file: !3113, line: 71, size: 384, elements: !3168)
!3168 = !{!3169}
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3167, file: !3113, line: 72, baseType: !3170, size: 384)
!3170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !367, size: 384, elements: !1054)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msg_statistics", scope: !3107, file: !3108, line: 22, baseType: !3172, size: 64, offset: 768)
!3172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3173, size: 64)
!3173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib", file: !3113, line: 81, size: 32768, elements: !3174)
!3174 = !{!3175}
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3173, file: !3113, line: 82, baseType: !3158, size: 32768)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !3038, file: !3039, line: 123, baseType: !3177, size: 256, offset: 3840)
!3177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_packet", file: !3178, line: 11, size: 256, elements: !3179)
!3178 = !DIFile(filename: "./include/net/netns/packet.h", directory: "/home/lizy2001/genbc/linux")
!3179 = !{!3180, !3181}
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "sklist_lock", scope: !3177, file: !3178, line: 12, baseType: !1720, size: 192)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "sklist", scope: !3177, file: !3178, line: 13, baseType: !1636, size: 64, offset: 192)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "unx", scope: !3038, file: !3039, line: 124, baseType: !3183, size: 128, offset: 4096)
!3183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_unix", file: !3184, line: 9, size: 128, elements: !3185)
!3184 = !DIFile(filename: "./include/net/netns/unix.h", directory: "/home/lizy2001/genbc/linux")
!3185 = !{!3186, !3187}
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_dgram_qlen", scope: !3183, file: !3184, line: 10, baseType: !32, size: 32)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !3183, file: !3184, line: 11, baseType: !2958, size: 64, offset: 64)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop", scope: !3038, file: !3039, line: 125, baseType: !3189, size: 512, offset: 4224)
!3189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_nexthop", file: !3190, line: 11, size: 512, elements: !3191)
!3190 = !DIFile(filename: "./include/net/netns/nexthop.h", directory: "/home/lizy2001/genbc/linux")
!3191 = !{!3192, !3193, !3194, !3195, !3196}
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !3189, file: !3190, line: 12, baseType: !1805, size: 64)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "devhash", scope: !3189, file: !3190, line: 13, baseType: !3076, size: 64, offset: 64)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3189, file: !3190, line: 15, baseType: !7, size: 32, offset: 128)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_allocated", scope: !3189, file: !3190, line: 16, baseType: !1042, size: 32, offset: 160)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_chain", scope: !3189, file: !3190, line: 17, baseType: !3197, size: 320, offset: 192)
!3197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !3080, line: 65, size: 320, elements: !3198)
!3198 = !{!3199, !3200}
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !3197, file: !3080, line: 66, baseType: !1810, size: 256)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3197, file: !3080, line: 67, baseType: !3083, size: 64, offset: 256)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !3038, file: !3039, line: 126, baseType: !3202, size: 5440, offset: 4736)
!3202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv4", file: !3203, line: 43, size: 5440, elements: !3204)
!3203 = !DIFile(filename: "./include/net/netns/ipv4.h", directory: "/home/lizy2001/genbc/linux")
!3204 = !{!3205, !3206, !3207, !3208, !3209, !3210, !3213, !3214, !3217, !3218, !3219, !3220, !3221, !3222, !3224, !3225, !3228, !3229, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3400, !3401, !3402, !3403, !3404, !3405, !3406, !3407, !3408, !3409, !3410, !3411, !3412, !3413, !3414, !3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422, !3423, !3424, !3425, !3426, !3427, !3428, !3429, !3430, !3431, !3432, !3433, !3434, !3435, !3436, !3437, !3438, !3439, !3440, !3441, !3442, !3443, !3444, !3445, !3446, !3447, !3448, !3449, !3450, !3451, !3452, !3454, !3455, !3456, !3457, !3458, !3466, !3467, !3468, !3472, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3482, !3483, !3484, !3485, !3486, !3492, !3493, !3495, !3496, !3499, !3500, !3501, !3502, !3503}
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "forw_hdr", scope: !3202, file: !3203, line: 45, baseType: !2958, size: 64)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !3202, file: !3203, line: 46, baseType: !2958, size: 64, offset: 64)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4_hdr", scope: !3202, file: !3203, line: 47, baseType: !2958, size: 64, offset: 128)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !3202, file: !3203, line: 48, baseType: !2958, size: 64, offset: 192)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm4_hdr", scope: !3202, file: !3203, line: 49, baseType: !2958, size: 64, offset: 256)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !3202, file: !3203, line: 51, baseType: !3211, size: 64, offset: 320)
!3211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3212, size: 64)
!3212 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv4_devconf", file: !3203, line: 16, flags: DIFlagFwdDecl)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !3202, file: !3203, line: 52, baseType: !3211, size: 64, offset: 384)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "ra_chain", scope: !3202, file: !3203, line: 53, baseType: !3215, size: 64, offset: 448)
!3215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3216, size: 64)
!3216 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_ra_chain", file: !3203, line: 53, flags: DIFlagFwdDecl)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "ra_mutex", scope: !3202, file: !3203, line: 54, baseType: !1720, size: 192, offset: 512)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "fib_has_custom_local_routes", scope: !3202, file: !3203, line: 62, baseType: !826, size: 8, offset: 704)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !3202, file: !3203, line: 66, baseType: !3076, size: 64, offset: 768)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "fib_offload_disabled", scope: !3202, file: !3203, line: 67, baseType: !826, size: 8, offset: 832)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "fibnl", scope: !3202, file: !3203, line: 68, baseType: !500, size: 64, offset: 896)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !3202, file: !3203, line: 70, baseType: !3223, size: 64, offset: 960)
!3223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 64)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !3202, file: !3203, line: 71, baseType: !500, size: 64, offset: 1024)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !3202, file: !3203, line: 73, baseType: !3226, size: 64, offset: 1088)
!3226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3227, size: 64)
!3227 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_peer_base", file: !3203, line: 73, flags: DIFlagFwdDecl)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !3202, file: !3203, line: 74, baseType: !3223, size: 64, offset: 1152)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3202, file: !3203, line: 75, baseType: !3230, size: 64, offset: 1216)
!3230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3231, size: 64)
!3231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fqdir", file: !3232, line: 9, size: 1728, elements: !3233)
!3232 = !DIFile(filename: "./include/net/inet_frag.h", directory: "/home/lizy2001/genbc/linux")
!3233 = !{!3234, !3235, !3236, !3237, !3238, !3365, !3366, !3367, !3368, !3369}
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "high_thresh", scope: !3231, file: !3232, line: 11, baseType: !1053, size: 64)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "low_thresh", scope: !3231, file: !3232, line: 12, baseType: !1053, size: 64, offset: 64)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3231, file: !3232, line: 13, baseType: !32, size: 32, offset: 128)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "max_dist", scope: !3231, file: !3232, line: 14, baseType: !32, size: 32, offset: 160)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !3231, file: !3232, line: 15, baseType: !3239, size: 64, offset: 192)
!3239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3240, size: 64)
!3240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frags", file: !3232, line: 98, size: 960, elements: !3241)
!3241 = !{!3242, !3243, !3315, !3319, !3320, !3321, !3322, !3363, !3364}
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "qsize", scope: !3240, file: !3232, line: 99, baseType: !7, size: 32)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !3240, file: !3232, line: 101, baseType: !3244, size: 64, offset: 64)
!3244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3245, size: 64)
!3245 = !DISubroutineType(types: !3246)
!3246 = !{null, !3247, !3313}
!3247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3248, size: 64)
!3248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frag_queue", file: !3232, line: 77, size: 1408, elements: !3249)
!3249 = !{!3250, !3256, !3289, !3301, !3302, !3303, !3304, !3305, !3306, !3307, !3308, !3309, !3310, !3311, !3312}
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3248, file: !3232, line: 78, baseType: !3251, size: 64)
!3251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhash_head", file: !3252, line: 17, size: 64, elements: !3253)
!3252 = !DIFile(filename: "./include/linux/rhashtable-types.h", directory: "/home/lizy2001/genbc/linux")
!3253 = !{!3254}
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3251, file: !3252, line: 18, baseType: !3255, size: 64)
!3255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3251, size: 64)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3248, file: !3232, line: 82, baseType: !3257, size: 352, offset: 64)
!3257 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3248, file: !3232, line: 79, size: 352, elements: !3258)
!3258 = !{!3259, !3269}
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3257, file: !3232, line: 80, baseType: !3260, size: 160)
!3260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v4_compare_key", file: !3232, line: 41, size: 160, elements: !3261)
!3261 = !{!3262, !3264, !3265, !3266, !3267, !3268}
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !3260, file: !3232, line: 42, baseType: !3263, size: 32)
!3263 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !580, line: 32, baseType: !548)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !3260, file: !3232, line: 43, baseType: !3263, size: 32, offset: 32)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3260, file: !3232, line: 44, baseType: !1042, size: 32, offset: 64)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !3260, file: !3232, line: 45, baseType: !1042, size: 32, offset: 96)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3260, file: !3232, line: 46, baseType: !590, size: 16, offset: 128)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !3260, file: !3232, line: 47, baseType: !636, size: 16, offset: 144)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3257, file: !3232, line: 81, baseType: !3270, size: 352)
!3270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v6_compare_key", file: !3232, line: 50, size: 352, elements: !3271)
!3271 = !{!3272, !3285, !3286, !3287, !3288}
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !3270, file: !3232, line: 51, baseType: !3273, size: 128)
!3273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !3274, line: 33, size: 128, elements: !3275)
!3274 = !DIFile(filename: "./include/uapi/linux/in6.h", directory: "/home/lizy2001/genbc/linux")
!3275 = !{!3276}
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "in6_u", scope: !3273, file: !3274, line: 40, baseType: !3277, size: 128)
!3277 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3273, file: !3274, line: 34, size: 128, elements: !3278)
!3278 = !{!3279, !3281, !3283}
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr8", scope: !3277, file: !3274, line: 35, baseType: !3280, size: 128)
!3280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !536, size: 128, elements: !324)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr16", scope: !3277, file: !3274, line: 37, baseType: !3282, size: 128)
!3282 = !DICompositeType(tag: DW_TAG_array_type, baseType: !590, size: 128, elements: !2488)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr32", scope: !3277, file: !3274, line: 38, baseType: !3284, size: 128)
!3284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3263, size: 128, elements: !2327)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !3270, file: !3232, line: 52, baseType: !3273, size: 128, offset: 128)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3270, file: !3232, line: 53, baseType: !1042, size: 32, offset: 256)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3270, file: !3232, line: 54, baseType: !3263, size: 32, offset: 288)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "iif", scope: !3270, file: !3232, line: 55, baseType: !1042, size: 32, offset: 320)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3248, file: !3232, line: 83, baseType: !3290, size: 320, offset: 448)
!3290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3291, line: 11, size: 320, elements: !3292)
!3291 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3292 = !{!3293, !3294, !3295, !3300}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3290, file: !3291, line: 16, baseType: !331, size: 128)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3290, file: !3291, line: 17, baseType: !367, size: 64, offset: 128)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3290, file: !3291, line: 18, baseType: !3296, size: 64, offset: 192)
!3296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3297, size: 64)
!3297 = !DISubroutineType(types: !3298)
!3298 = !{null, !3299}
!3299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3290, size: 64)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3290, file: !3291, line: 19, baseType: !1042, size: 32, offset: 256)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3248, file: !3232, line: 84, baseType: !1725, offset: 768)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3248, file: !3232, line: 85, baseType: !623, size: 32, offset: 768)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "rb_fragments", scope: !3248, file: !3232, line: 86, baseType: !1805, size: 64, offset: 832)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "fragments_tail", scope: !3248, file: !3232, line: 87, baseType: !470, size: 64, offset: 896)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "last_run_head", scope: !3248, file: !3232, line: 88, baseType: !470, size: 64, offset: 960)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !3248, file: !3232, line: 89, baseType: !508, size: 64, offset: 1024)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3248, file: !3232, line: 90, baseType: !32, size: 32, offset: 1088)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "meat", scope: !3248, file: !3232, line: 91, baseType: !32, size: 32, offset: 1120)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3248, file: !3232, line: 92, baseType: !536, size: 8, offset: 1152)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !3248, file: !3232, line: 93, baseType: !636, size: 16, offset: 1168)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3248, file: !3232, line: 94, baseType: !3230, size: 64, offset: 1216)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3248, file: !3232, line: 95, baseType: !354, size: 128, align: 64, offset: 1280)
!3313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3314, size: 64)
!3314 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !3240, file: !3232, line: 103, baseType: !3316, size: 64, offset: 128)
!3316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3317, size: 64)
!3317 = !DISubroutineType(types: !3318)
!3318 = !{null, !3247}
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "frag_expire", scope: !3240, file: !3232, line: 104, baseType: !3296, size: 64, offset: 192)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cachep", scope: !3240, file: !3232, line: 105, baseType: !2106, size: 64, offset: 256)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cache_name", scope: !3240, file: !3232, line: 106, baseType: !347, size: 64, offset: 320)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "rhash_params", scope: !3240, file: !3232, line: 107, baseType: !3323, size: 320, offset: 384)
!3323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_params", file: !3252, line: 56, size: 320, elements: !3324)
!3324 = !{!3325, !3326, !3327, !3328, !3329, !3330, !3331, !3332, !3337, !3339}
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "nelem_hint", scope: !3323, file: !3252, line: 57, baseType: !636, size: 16)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !3323, file: !3252, line: 58, baseType: !636, size: 16, offset: 16)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "key_offset", scope: !3323, file: !3252, line: 59, baseType: !636, size: 16, offset: 32)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "head_offset", scope: !3323, file: !3252, line: 60, baseType: !636, size: 16, offset: 48)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !3323, file: !3252, line: 61, baseType: !7, size: 32, offset: 64)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "min_size", scope: !3323, file: !3252, line: 62, baseType: !636, size: 16, offset: 96)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "automatic_shrinking", scope: !3323, file: !3252, line: 63, baseType: !826, size: 8, offset: 112)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "hashfn", scope: !3323, file: !3252, line: 64, baseType: !3333, size: 64, offset: 128)
!3333 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_hashfn_t", file: !3252, line: 38, baseType: !3334)
!3334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3335, size: 64)
!3335 = !DISubroutineType(types: !3336)
!3336 = !{!1042, !3313, !1042, !1042}
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "obj_hashfn", scope: !3323, file: !3252, line: 65, baseType: !3338, size: 64, offset: 192)
!3338 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_hashfn_t", file: !3252, line: 39, baseType: !3334)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "obj_cmpfn", scope: !3323, file: !3252, line: 66, baseType: !3340, size: 64, offset: 256)
!3340 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_cmpfn_t", file: !3252, line: 40, baseType: !3341)
!3341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3342, size: 64)
!3342 = !DISubroutineType(types: !3343)
!3343 = !{!32, !3344, !3313}
!3344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3345, size: 64)
!3345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_compare_arg", file: !3252, line: 33, size: 128, elements: !3346)
!3346 = !{!3347, !3362}
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !3345, file: !3252, line: 34, baseType: !3348, size: 64)
!3348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3349, size: 64)
!3349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable", file: !3252, line: 81, size: 1024, elements: !3350)
!3350 = !{!3351, !3354, !3355, !3356, !3357, !3358, !3359, !3360, !3361}
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !3349, file: !3252, line: 82, baseType: !3352, size: 64)
!3352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3353, size: 64)
!3353 = !DICompositeType(tag: DW_TAG_structure_type, name: "bucket_table", file: !3252, line: 26, flags: DIFlagFwdDecl)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !3349, file: !3252, line: 83, baseType: !7, size: 32, offset: 64)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "max_elems", scope: !3349, file: !3252, line: 84, baseType: !7, size: 32, offset: 96)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3349, file: !3252, line: 85, baseType: !3323, size: 320, offset: 128)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "rhlist", scope: !3349, file: !3252, line: 86, baseType: !826, size: 8, offset: 448)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !3349, file: !3252, line: 87, baseType: !2884, size: 256, offset: 512)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3349, file: !3252, line: 88, baseType: !1720, size: 192, offset: 768)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3349, file: !3252, line: 89, baseType: !1725, offset: 960)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "nelems", scope: !3349, file: !3252, line: 90, baseType: !438, size: 32, offset: 960)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3345, file: !3252, line: 35, baseType: !3313, size: 64, offset: 64)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3240, file: !3232, line: 108, baseType: !623, size: 32, offset: 704)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3240, file: !3232, line: 109, baseType: !2652, size: 192, offset: 768)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !3231, file: !3232, line: 16, baseType: !3037, size: 64, offset: 256)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !3231, file: !3232, line: 17, baseType: !826, size: 8, offset: 320)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "rhashtable", scope: !3231, file: !3232, line: 19, baseType: !3349, size: 1024, offset: 384)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !3231, file: !3232, line: 22, baseType: !426, size: 64, offset: 1408)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !3231, file: !3232, line: 23, baseType: !2884, size: 256, offset: 1472)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_all", scope: !3202, file: !3203, line: 87, baseType: !32, size: 32, offset: 1280)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_broadcasts", scope: !3202, file: !3203, line: 88, baseType: !32, size: 32, offset: 1312)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ignore_bogus_error_responses", scope: !3202, file: !3203, line: 89, baseType: !32, size: 32, offset: 1344)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratelimit", scope: !3202, file: !3203, line: 90, baseType: !32, size: 32, offset: 1376)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratemask", scope: !3202, file: !3203, line: 91, baseType: !32, size: 32, offset: 1408)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_errors_use_inbound_ifaddr", scope: !3202, file: !3203, line: 92, baseType: !32, size: 32, offset: 1440)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "ip_local_ports", scope: !3202, file: !3203, line: 94, baseType: !3377, size: 128, offset: 1472)
!3377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "local_ports", file: !3203, line: 21, size: 128, elements: !3378)
!3378 = !{!3379, !3385, !3387}
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3377, file: !3203, line: 22, baseType: !3380, size: 32)
!3380 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !1399, line: 805, baseType: !3381)
!3381 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1399, line: 798, size: 32, elements: !3382)
!3382 = !{!3383, !3384}
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !3381, file: !1399, line: 803, baseType: !1398, size: 32)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3381, file: !1399, line: 804, baseType: !1725, offset: 32)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3377, file: !3203, line: 23, baseType: !3386, size: 64, offset: 32)
!3386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 64, elements: !2719)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "warned", scope: !3377, file: !3203, line: 24, baseType: !826, size: 8, offset: 96)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn", scope: !3202, file: !3203, line: 96, baseType: !32, size: 32, offset: 1600)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn_fallback", scope: !3202, file: !3203, line: 97, baseType: !32, size: 32, offset: 1632)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_default_ttl", scope: !3202, file: !3203, line: 99, baseType: !32, size: 32, offset: 1664)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_no_pmtu_disc", scope: !3202, file: !3203, line: 100, baseType: !32, size: 32, offset: 1696)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_use_pmtu", scope: !3202, file: !3203, line: 101, baseType: !32, size: 32, offset: 1728)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_update_priority", scope: !3202, file: !3203, line: 102, baseType: !32, size: 32, offset: 1760)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_nonlocal_bind", scope: !3202, file: !3203, line: 103, baseType: !32, size: 32, offset: 1792)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_autobind_reuse", scope: !3202, file: !3203, line: 104, baseType: !32, size: 32, offset: 1824)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_dynaddr", scope: !3202, file: !3203, line: 106, baseType: !32, size: 32, offset: 1856)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_early_demux", scope: !3202, file: !3203, line: 107, baseType: !32, size: 32, offset: 1888)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_demux", scope: !3202, file: !3203, line: 111, baseType: !32, size: 32, offset: 1920)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_early_demux", scope: !3202, file: !3203, line: 112, baseType: !32, size: 32, offset: 1952)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_nexthop_compat_mode", scope: !3202, file: !3203, line: 114, baseType: !32, size: 32, offset: 1984)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_fwmark_reflect", scope: !3202, file: !3203, line: 116, baseType: !32, size: 32, offset: 2016)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fwmark_accept", scope: !3202, file: !3203, line: 117, baseType: !32, size: 32, offset: 2048)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probing", scope: !3202, file: !3203, line: 121, baseType: !32, size: 32, offset: 2080)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probe_floor", scope: !3202, file: !3203, line: 122, baseType: !32, size: 32, offset: 2112)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_base_mss", scope: !3202, file: !3203, line: 123, baseType: !32, size: 32, offset: 2144)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_snd_mss", scope: !3202, file: !3203, line: 124, baseType: !32, size: 32, offset: 2176)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_threshold", scope: !3202, file: !3203, line: 125, baseType: !32, size: 32, offset: 2208)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_interval", scope: !3202, file: !3203, line: 126, baseType: !1042, size: 32, offset: 2240)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_time", scope: !3202, file: !3203, line: 128, baseType: !32, size: 32, offset: 2272)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_probes", scope: !3202, file: !3203, line: 129, baseType: !32, size: 32, offset: 2304)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_intvl", scope: !3202, file: !3203, line: 130, baseType: !32, size: 32, offset: 2336)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syn_retries", scope: !3202, file: !3203, line: 132, baseType: !32, size: 32, offset: 2368)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_synack_retries", scope: !3202, file: !3203, line: 133, baseType: !32, size: 32, offset: 2400)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syncookies", scope: !3202, file: !3203, line: 134, baseType: !32, size: 32, offset: 2432)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reordering", scope: !3202, file: !3203, line: 135, baseType: !32, size: 32, offset: 2464)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries1", scope: !3202, file: !3203, line: 136, baseType: !32, size: 32, offset: 2496)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries2", scope: !3202, file: !3203, line: 137, baseType: !32, size: 32, offset: 2528)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_orphan_retries", scope: !3202, file: !3203, line: 138, baseType: !32, size: 32, offset: 2560)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fin_timeout", scope: !3202, file: !3203, line: 139, baseType: !32, size: 32, offset: 2592)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_notsent_lowat", scope: !3202, file: !3203, line: 140, baseType: !7, size: 32, offset: 2624)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tw_reuse", scope: !3202, file: !3203, line: 141, baseType: !32, size: 32, offset: 2656)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_sack", scope: !3202, file: !3203, line: 142, baseType: !32, size: 32, offset: 2688)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_window_scaling", scope: !3202, file: !3203, line: 143, baseType: !32, size: 32, offset: 2720)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_timestamps", scope: !3202, file: !3203, line: 144, baseType: !32, size: 32, offset: 2752)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_retrans", scope: !3202, file: !3203, line: 145, baseType: !32, size: 32, offset: 2784)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_recovery", scope: !3202, file: !3203, line: 146, baseType: !32, size: 32, offset: 2816)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_thin_linear_timeouts", scope: !3202, file: !3203, line: 147, baseType: !32, size: 32, offset: 2848)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_slow_start_after_idle", scope: !3202, file: !3203, line: 148, baseType: !32, size: 32, offset: 2880)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retrans_collapse", scope: !3202, file: !3203, line: 149, baseType: !32, size: 32, offset: 2912)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_stdurg", scope: !3202, file: !3203, line: 150, baseType: !32, size: 32, offset: 2944)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rfc1337", scope: !3202, file: !3203, line: 151, baseType: !32, size: 32, offset: 2976)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_abort_on_overflow", scope: !3202, file: !3203, line: 152, baseType: !32, size: 32, offset: 3008)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fack", scope: !3202, file: !3203, line: 153, baseType: !32, size: 32, offset: 3040)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_max_reordering", scope: !3202, file: !3203, line: 154, baseType: !32, size: 32, offset: 3072)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_dsack", scope: !3202, file: !3203, line: 155, baseType: !32, size: 32, offset: 3104)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_app_win", scope: !3202, file: !3203, line: 156, baseType: !32, size: 32, offset: 3136)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_adv_win_scale", scope: !3202, file: !3203, line: 157, baseType: !32, size: 32, offset: 3168)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_frto", scope: !3202, file: !3203, line: 158, baseType: !32, size: 32, offset: 3200)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_nometrics_save", scope: !3202, file: !3203, line: 159, baseType: !32, size: 32, offset: 3232)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_no_ssthresh_metrics_save", scope: !3202, file: !3203, line: 160, baseType: !32, size: 32, offset: 3264)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_moderate_rcvbuf", scope: !3202, file: !3203, line: 161, baseType: !32, size: 32, offset: 3296)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tso_win_divisor", scope: !3202, file: !3203, line: 162, baseType: !32, size: 32, offset: 3328)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_workaround_signed_windows", scope: !3202, file: !3203, line: 163, baseType: !32, size: 32, offset: 3360)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_limit_output_bytes", scope: !3202, file: !3203, line: 164, baseType: !32, size: 32, offset: 3392)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_challenge_ack_limit", scope: !3202, file: !3203, line: 165, baseType: !32, size: 32, offset: 3424)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_tso_segs", scope: !3202, file: !3203, line: 166, baseType: !32, size: 32, offset: 3456)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_rtt_wlen", scope: !3202, file: !3203, line: 167, baseType: !32, size: 32, offset: 3488)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_autocorking", scope: !3202, file: !3203, line: 168, baseType: !32, size: 32, offset: 3520)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_invalid_ratelimit", scope: !3202, file: !3203, line: 169, baseType: !32, size: 32, offset: 3552)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ss_ratio", scope: !3202, file: !3203, line: 170, baseType: !32, size: 32, offset: 3584)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ca_ratio", scope: !3202, file: !3203, line: 171, baseType: !32, size: 32, offset: 3616)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_wmem", scope: !3202, file: !3203, line: 172, baseType: !3453, size: 96, offset: 3648)
!3453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 96, elements: !1647)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rmem", scope: !3202, file: !3203, line: 173, baseType: !3453, size: 96, offset: 3744)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_nr", scope: !3202, file: !3203, line: 174, baseType: !32, size: 32, offset: 3840)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_delay_ns", scope: !3202, file: !3203, line: 175, baseType: !367, size: 64, offset: 3904)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_slack_ns", scope: !3202, file: !3203, line: 176, baseType: !367, size: 64, offset: 3968)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_death_row", scope: !3202, file: !3203, line: 177, baseType: !3459, size: 192, offset: 4032)
!3459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_timewait_death_row", file: !3203, line: 34, size: 192, elements: !3460)
!3460 = !{!3461, !3462, !3465}
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "tw_count", scope: !3459, file: !3203, line: 35, baseType: !438, size: 32)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !3459, file: !3203, line: 37, baseType: !3463, size: 64, offset: 64)
!3463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3464, size: 64)
!3464 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_hashinfo", file: !3203, line: 32, flags: DIFlagFwdDecl)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_tw_buckets", scope: !3459, file: !3203, line: 38, baseType: !32, size: 32, offset: 128)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_syn_backlog", scope: !3202, file: !3203, line: 178, baseType: !32, size: 32, offset: 4224)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen", scope: !3202, file: !3203, line: 179, baseType: !32, size: 32, offset: 4256)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_congestion_control", scope: !3202, file: !3203, line: 180, baseType: !3469, size: 64, offset: 4288)
!3469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3470, size: 64)
!3470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3471)
!3471 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_congestion_ops", file: !3203, line: 180, flags: DIFlagFwdDecl)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx", scope: !3202, file: !3203, line: 181, baseType: !3473, size: 64, offset: 4352)
!3473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3474, size: 64)
!3474 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_fastopen_context", file: !3203, line: 41, flags: DIFlagFwdDecl)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx_lock", scope: !3202, file: !3203, line: 182, baseType: !1725, offset: 4416)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen_blackhole_timeout", scope: !3202, file: !3203, line: 183, baseType: !7, size: 32, offset: 4416)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_times", scope: !3202, file: !3203, line: 184, baseType: !438, size: 32, offset: 4448)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_stamp", scope: !3202, file: !3203, line: 185, baseType: !367, size: 64, offset: 4480)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reflect_tos", scope: !3202, file: !3203, line: 186, baseType: !32, size: 32, offset: 4544)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_wmem_min", scope: !3202, file: !3203, line: 188, baseType: !32, size: 32, offset: 4576)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_rmem_min", scope: !3202, file: !3203, line: 189, baseType: !32, size: 32, offset: 4608)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_memberships", scope: !3202, file: !3203, line: 195, baseType: !32, size: 32, offset: 4640)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_msf", scope: !3202, file: !3203, line: 196, baseType: !32, size: 32, offset: 4672)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_llm_reports", scope: !3202, file: !3203, line: 197, baseType: !32, size: 32, offset: 4704)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_qrv", scope: !3202, file: !3203, line: 198, baseType: !32, size: 32, offset: 4736)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "ping_group_range", scope: !3202, file: !3203, line: 200, baseType: !3487, size: 96, offset: 4768)
!3487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ping_group_range", file: !3203, line: 27, size: 96, elements: !3488)
!3488 = !{!3489, !3490}
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3487, file: !3203, line: 28, baseType: !3380, size: 32)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3487, file: !3203, line: 29, baseType: !3491, size: 64, offset: 32)
!3491 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1445, size: 64, elements: !2719)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !3202, file: !3203, line: 202, baseType: !438, size: 32, offset: 4864)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_local_reserved_ports", scope: !3202, file: !3203, line: 205, baseType: !3494, size: 64, offset: 4928)
!3494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_prot_sock", scope: !3202, file: !3203, line: 206, baseType: !32, size: 32, offset: 4992)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !3202, file: !3203, line: 222, baseType: !3497, size: 64, offset: 5056)
!3497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3498, size: 64)
!3498 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib_notifier_ops", file: !3203, line: 222, flags: DIFlagFwdDecl)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq", scope: !3202, file: !3203, line: 223, baseType: !7, size: 32, offset: 5120)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_notifier_ops", scope: !3202, file: !3203, line: 225, baseType: !3497, size: 64, offset: 5184)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !3202, file: !3203, line: 226, baseType: !7, size: 32, offset: 5248)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "rt_genid", scope: !3202, file: !3203, line: 228, baseType: !438, size: 32, offset: 5280)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "ip_id_key", scope: !3202, file: !3203, line: 229, baseType: !3504, size: 128, offset: 5312)
!3504 = !DIDerivedType(tag: DW_TAG_typedef, name: "siphash_key_t", file: !3505, line: 22, baseType: !3506)
!3505 = !DIFile(filename: "./include/linux/siphash.h", directory: "/home/lizy2001/genbc/linux")
!3506 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3505, line: 20, size: 128, elements: !3507)
!3507 = !{!3508}
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3506, file: !3505, line: 21, baseType: !3509, size: 128)
!3509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !386, size: 128, elements: !2719)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !3038, file: !3039, line: 128, baseType: !3511, size: 4608, offset: 10176)
!3511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv6", file: !3512, line: 56, size: 4608, elements: !3513)
!3512 = !DIFile(filename: "./include/net/netns/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!3513 = !{!3514, !3554, !3557, !3558, !3559, !3560, !3563, !3566, !3569, !3570, !3571, !3574, !3575, !3641, !3642, !3643, !3644, !3645, !3646, !3647, !3648, !3649, !3650, !3651, !3652, !3655, !3656, !3657, !3658}
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl", scope: !3511, file: !3512, line: 57, baseType: !3515, size: 1600)
!3515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_sysctl_ipv6", file: !3512, line: 15, size: 1600, elements: !3516)
!3516 = !{!3517, !3518, !3519, !3520, !3521, !3522, !3523, !3524, !3525, !3526, !3527, !3528, !3529, !3530, !3531, !3532, !3533, !3534, !3535, !3536, !3537, !3538, !3540, !3541, !3542, !3543, !3544, !3545, !3546, !3547, !3548, !3549, !3550, !3551, !3552, !3553}
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3515, file: !3512, line: 17, baseType: !2958, size: 64)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !3515, file: !3512, line: 18, baseType: !2958, size: 64, offset: 64)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_hdr", scope: !3515, file: !3512, line: 19, baseType: !2958, size: 64, offset: 128)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !3515, file: !3512, line: 20, baseType: !2958, size: 64, offset: 192)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm6_hdr", scope: !3515, file: !3512, line: 21, baseType: !2958, size: 64, offset: 256)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "bindv6only", scope: !3515, file: !3512, line: 23, baseType: !32, size: 32, offset: 320)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "flush_delay", scope: !3515, file: !3512, line: 24, baseType: !32, size: 32, offset: 352)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_max_size", scope: !3515, file: !3512, line: 25, baseType: !32, size: 32, offset: 384)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_min_interval", scope: !3515, file: !3512, line: 26, baseType: !32, size: 32, offset: 416)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_timeout", scope: !3515, file: !3512, line: 27, baseType: !32, size: 32, offset: 448)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_interval", scope: !3515, file: !3512, line: 28, baseType: !32, size: 32, offset: 480)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_elasticity", scope: !3515, file: !3512, line: 29, baseType: !32, size: 32, offset: 512)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_mtu_expires", scope: !3515, file: !3512, line: 30, baseType: !32, size: 32, offset: 544)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_min_advmss", scope: !3515, file: !3512, line: 31, baseType: !32, size: 32, offset: 576)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "multipath_hash_policy", scope: !3515, file: !3512, line: 32, baseType: !32, size: 32, offset: 608)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_consistency", scope: !3515, file: !3512, line: 33, baseType: !32, size: 32, offset: 640)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "auto_flowlabels", scope: !3515, file: !3512, line: 34, baseType: !32, size: 32, offset: 672)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_time", scope: !3515, file: !3512, line: 35, baseType: !32, size: 32, offset: 704)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_all", scope: !3515, file: !3512, line: 36, baseType: !32, size: 32, offset: 736)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_multicast", scope: !3515, file: !3512, line: 37, baseType: !32, size: 32, offset: 768)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_anycast", scope: !3515, file: !3512, line: 38, baseType: !32, size: 32, offset: 800)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask", scope: !3515, file: !3512, line: 39, baseType: !3539, size: 256, offset: 832)
!3539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !367, size: 256, elements: !2327)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask_ptr", scope: !3515, file: !3512, line: 40, baseType: !3494, size: 64, offset: 1088)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "anycast_src_echo_reply", scope: !3515, file: !3512, line: 41, baseType: !32, size: 32, offset: 1152)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "ip_nonlocal_bind", scope: !3515, file: !3512, line: 42, baseType: !32, size: 32, offset: 1184)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "fwmark_reflect", scope: !3515, file: !3512, line: 43, baseType: !32, size: 32, offset: 1216)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_retries", scope: !3515, file: !3512, line: 44, baseType: !32, size: 32, offset: 1248)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_delay", scope: !3515, file: !3512, line: 45, baseType: !32, size: 32, offset: 1280)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_state_ranges", scope: !3515, file: !3512, line: 46, baseType: !32, size: 32, offset: 1312)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_reflect", scope: !3515, file: !3512, line: 47, baseType: !32, size: 32, offset: 1344)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_cnt", scope: !3515, file: !3512, line: 48, baseType: !32, size: 32, offset: 1376)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_cnt", scope: !3515, file: !3512, line: 49, baseType: !32, size: 32, offset: 1408)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_len", scope: !3515, file: !3512, line: 50, baseType: !32, size: 32, offset: 1440)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_len", scope: !3515, file: !3512, line: 51, baseType: !32, size: 32, offset: 1472)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_flowlabel", scope: !3515, file: !3512, line: 52, baseType: !32, size: 32, offset: 1504)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "skip_notify_on_dev_down", scope: !3515, file: !3512, line: 53, baseType: !826, size: 8, offset: 1536)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !3511, file: !3512, line: 58, baseType: !3555, size: 64, offset: 1600)
!3555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3556, size: 64)
!3556 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devconf", file: !3512, line: 58, flags: DIFlagFwdDecl)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !3511, file: !3512, line: 59, baseType: !3555, size: 64, offset: 1664)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !3511, file: !3512, line: 60, baseType: !3226, size: 64, offset: 1728)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3511, file: !3512, line: 61, baseType: !3230, size: 64, offset: 1792)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_null_entry", scope: !3511, file: !3512, line: 71, baseType: !3561, size: 64, offset: 1856)
!3561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3562, size: 64)
!3562 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_info", file: !3512, line: 71, flags: DIFlagFwdDecl)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_null_entry", scope: !3511, file: !3512, line: 72, baseType: !3564, size: 64, offset: 1920)
!3564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3565, size: 64)
!3565 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_info", file: !3512, line: 72, flags: DIFlagFwdDecl)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "rt6_stats", scope: !3511, file: !3512, line: 73, baseType: !3567, size: 64, offset: 1984)
!3567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3568, size: 64)
!3568 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_statistics", file: !3512, line: 73, flags: DIFlagFwdDecl)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_fib_timer", scope: !3511, file: !3512, line: 74, baseType: !3290, size: 320, offset: 2048)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !3511, file: !3512, line: 75, baseType: !3076, size: 64, offset: 2368)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_main_tbl", scope: !3511, file: !3512, line: 76, baseType: !3572, size: 64, offset: 2432)
!3572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3573, size: 64)
!3573 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_table", file: !3512, line: 76, flags: DIFlagFwdDecl)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walkers", scope: !3511, file: !3512, line: 77, baseType: !339, size: 128, offset: 2496)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_dst_ops", scope: !3511, file: !3512, line: 78, baseType: !3576, size: 1088, offset: 2624)
!3576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_ops", file: !980, line: 15, size: 1088, elements: !3577)
!3577 = !{!3578, !3579, !3580, !3585, !3591, !3597, !3598, !3602, !3606, !3610, !3614, !3615, !3619, !3623, !3627, !3631, !3635, !3636}
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !3576, file: !980, line: 16, baseType: !531, size: 16)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh", scope: !3576, file: !980, line: 17, baseType: !7, size: 32, offset: 32)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3576, file: !980, line: 19, baseType: !3581, size: 64, offset: 64)
!3581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3582, size: 64)
!3582 = !DISubroutineType(types: !3583)
!3583 = !{!32, !3584}
!3584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3576, size: 64)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !3576, file: !980, line: 20, baseType: !3586, size: 64, offset: 128)
!3586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3587, size: 64)
!3587 = !DISubroutineType(types: !3588)
!3588 = !{!3589, !3589, !548}
!3589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3590, size: 64)
!3590 = !DICompositeType(tag: DW_TAG_structure_type, name: "dst_entry", file: !472, line: 956, flags: DIFlagFwdDecl)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "default_advmss", scope: !3576, file: !980, line: 21, baseType: !3592, size: 64, offset: 192)
!3592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3593, size: 64)
!3593 = !DISubroutineType(types: !3594)
!3594 = !{!7, !3595}
!3595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3596, size: 64)
!3596 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3590)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !3576, file: !980, line: 22, baseType: !3592, size: 64, offset: 256)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "cow_metrics", scope: !3576, file: !980, line: 23, baseType: !3599, size: 64, offset: 320)
!3599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3600, size: 64)
!3600 = !DISubroutineType(types: !3601)
!3601 = !{!2571, !3589, !367}
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !3576, file: !980, line: 24, baseType: !3603, size: 64, offset: 384)
!3603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3604, size: 64)
!3604 = !DISubroutineType(types: !3605)
!3605 = !{null, !3589}
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "ifdown", scope: !3576, file: !980, line: 25, baseType: !3607, size: 64, offset: 448)
!3607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3608, size: 64)
!3608 = !DISubroutineType(types: !3609)
!3609 = !{null, !3589, !345, !32}
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "negative_advice", scope: !3576, file: !980, line: 27, baseType: !3611, size: 64, offset: 512)
!3611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3612, size: 64)
!3612 = !DISubroutineType(types: !3613)
!3613 = !{!3589, !3589}
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "link_failure", scope: !3576, file: !980, line: 28, baseType: !523, size: 64, offset: 576)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "update_pmtu", scope: !3576, file: !980, line: 29, baseType: !3616, size: 64, offset: 640)
!3616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3617, size: 64)
!3617 = !DISubroutineType(types: !3618)
!3618 = !{null, !3589, !500, !470, !1042, !826}
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "redirect", scope: !3576, file: !980, line: 32, baseType: !3620, size: 64, offset: 704)
!3620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3621, size: 64)
!3621 = !DISubroutineType(types: !3622)
!3622 = !{null, !3589, !500, !470}
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "local_out", scope: !3576, file: !980, line: 34, baseType: !3624, size: 64, offset: 768)
!3624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3625, size: 64)
!3625 = !DISubroutineType(types: !3626)
!3626 = !{!32, !3037, !500, !470}
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_lookup", scope: !3576, file: !980, line: 35, baseType: !3628, size: 64, offset: 832)
!3628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3629, size: 64)
!3629 = !DISubroutineType(types: !3630)
!3630 = !{!978, !3595, !470, !3313}
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_neigh", scope: !3576, file: !980, line: 38, baseType: !3632, size: 64, offset: 896)
!3632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3633, size: 64)
!3633 = !DISubroutineType(types: !3634)
!3634 = !{null, !3595, !3313}
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "kmem_cachep", scope: !3576, file: !980, line: 41, baseType: !2106, size: 64, offset: 960)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "pcpuc_entries", scope: !3576, file: !980, line: 43, baseType: !3637, size: 64, offset: 1024)
!3637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !3638, line: 97, size: 64, elements: !3639)
!3638 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!3639 = !{!3640}
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3637, file: !3638, line: 98, baseType: !432, size: 64)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walker_lock", scope: !3511, file: !3512, line: 79, baseType: !1967, offset: 3712)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_gc_lock", scope: !3511, file: !3512, line: 80, baseType: !1725, offset: 3712)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_expire", scope: !3511, file: !3512, line: 81, baseType: !7, size: 32, offset: 3712)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_last_gc", scope: !3511, file: !3512, line: 82, baseType: !367, size: 64, offset: 3776)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !3511, file: !3512, line: 94, baseType: !3223, size: 64, offset: 3840)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_sk", scope: !3511, file: !3512, line: 95, baseType: !500, size: 64, offset: 3904)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !3511, file: !3512, line: 96, baseType: !500, size: 64, offset: 3968)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "igmp_sk", scope: !3511, file: !3512, line: 97, baseType: !500, size: 64, offset: 4032)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !3511, file: !3512, line: 98, baseType: !500, size: 64, offset: 4096)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !3511, file: !3512, line: 107, baseType: !438, size: 32, offset: 4160)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_sernum", scope: !3511, file: !3512, line: 108, baseType: !438, size: 32, offset: 4192)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_data", scope: !3511, file: !3512, line: 109, baseType: !3653, size: 64, offset: 4224)
!3653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3654, size: 64)
!3654 = !DICompositeType(tag: DW_TAG_structure_type, name: "seg6_pernet_data", file: !3512, line: 109, flags: DIFlagFwdDecl)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !3511, file: !3512, line: 110, baseType: !3497, size: 64, offset: 4288)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "ip6mr_notifier_ops", scope: !3511, file: !3512, line: 111, baseType: !3497, size: 64, offset: 4352)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !3511, file: !3512, line: 112, baseType: !7, size: 32, offset: 4416)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "ip6addrlbl_table", scope: !3511, file: !3512, line: 117, baseType: !3659, size: 128, offset: 4480)
!3659 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3511, file: !3512, line: 113, size: 128, elements: !3660)
!3660 = !{!3661, !3662, !3663}
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3659, file: !3512, line: 114, baseType: !1636, size: 64)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3659, file: !3512, line: 115, baseType: !1725, offset: 64)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3659, file: !3512, line: 116, baseType: !1042, size: 32, offset: 64)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "wext_nlevents", scope: !3038, file: !3039, line: 162, baseType: !3665, size: 192, offset: 14784)
!3665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff_head", file: !472, line: 291, size: 192, elements: !3666)
!3666 = !{!3667, !3668, !3669, !3670}
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3665, file: !472, line: 293, baseType: !470, size: 64)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3665, file: !472, line: 294, baseType: !470, size: 64, offset: 64)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !3665, file: !472, line: 296, baseType: !548, size: 32, offset: 128)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3665, file: !472, line: 297, baseType: !1725, offset: 160)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !3038, file: !3039, line: 164, baseType: !3672, size: 64, offset: 14976)
!3672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3673, size: 64)
!3673 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_generic", file: !3039, line: 47, flags: DIFlagFwdDecl)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "bpf", scope: !3038, file: !3039, line: 167, baseType: !3675, size: 512, offset: 15040)
!3675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_bpf", file: !3676, line: 14, size: 512, elements: !3677)
!3676 = !DIFile(filename: "./include/net/netns/bpf.h", directory: "/home/lizy2001/genbc/linux")
!3677 = !{!3678, !3693, !3695}
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "run_array", scope: !3675, file: !3676, line: 16, baseType: !3679, size: 128)
!3679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3680, size: 128, elements: !2719)
!3680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3681, size: 64)
!3681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array", file: !65, line: 1037, size: 128, elements: !3682)
!3682 = !{!3683, !3684}
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3681, file: !65, line: 1038, baseType: !354, size: 128, align: 64)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !3681, file: !65, line: 1039, baseType: !3685, offset: 128)
!3685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3686, elements: !364)
!3686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array_item", file: !65, line: 1032, size: 192, elements: !3687)
!3687 = !{!3688, !3689}
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3686, file: !65, line: 1033, baseType: !1143, size: 64)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !3686, file: !65, line: 1034, baseType: !3690, size: 128, offset: 64)
!3690 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3691, size: 128, elements: !2719)
!3691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3692, size: 64)
!3692 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_cgroup_storage", file: !65, line: 1034, flags: DIFlagFwdDecl)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "progs", scope: !3675, file: !3676, line: 17, baseType: !3694, size: 128, offset: 128)
!3694 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1143, size: 128, elements: !2719)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3675, file: !3676, line: 18, baseType: !3696, size: 256, offset: 256)
!3696 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 256, elements: !2719)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "net_cookie", scope: !3038, file: !3039, line: 174, baseType: !428, size: 64, offset: 15552)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "can", scope: !3038, file: !3039, line: 183, baseType: !3699, size: 1216, offset: 15616)
!3699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_can", file: !3700, line: 15, size: 1216, elements: !3701)
!3700 = !DIFile(filename: "./include/net/netns/can.h", directory: "/home/lizy2001/genbc/linux")
!3701 = !{!3702, !3703, !3704, !3705, !3706, !3707, !3708, !3709, !3710, !3711, !3712, !3715, !3716, !3717, !3720, !3723}
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !3699, file: !3700, line: 17, baseType: !3065, size: 64)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "pde_stats", scope: !3699, file: !3700, line: 18, baseType: !3065, size: 64, offset: 64)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "pde_reset_stats", scope: !3699, file: !3700, line: 19, baseType: !3065, size: 64, offset: 128)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_all", scope: !3699, file: !3700, line: 20, baseType: !3065, size: 64, offset: 192)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_fil", scope: !3699, file: !3700, line: 21, baseType: !3065, size: 64, offset: 256)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_inv", scope: !3699, file: !3700, line: 22, baseType: !3065, size: 64, offset: 320)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_sff", scope: !3699, file: !3700, line: 23, baseType: !3065, size: 64, offset: 384)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_eff", scope: !3699, file: !3700, line: 24, baseType: !3065, size: 64, offset: 448)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_err", scope: !3699, file: !3700, line: 25, baseType: !3065, size: 64, offset: 512)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "bcmproc_dir", scope: !3699, file: !3700, line: 26, baseType: !3065, size: 64, offset: 576)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "rx_alldev_list", scope: !3699, file: !3700, line: 30, baseType: !3713, size: 64, offset: 640)
!3713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3714, size: 64)
!3714 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_dev_rcv_lists", file: !3700, line: 11, flags: DIFlagFwdDecl)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "rcvlists_lock", scope: !3699, file: !3700, line: 31, baseType: !1725, offset: 704)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "stattimer", scope: !3699, file: !3700, line: 32, baseType: !3290, size: 320, offset: 704)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "pkg_stats", scope: !3699, file: !3700, line: 33, baseType: !3718, size: 64, offset: 1024)
!3718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3719, size: 64)
!3719 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_pkg_stats", file: !3700, line: 12, flags: DIFlagFwdDecl)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_lists_stats", scope: !3699, file: !3700, line: 34, baseType: !3721, size: 64, offset: 1088)
!3721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3722, size: 64)
!3722 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_rcv_lists_stats", file: !3700, line: 13, flags: DIFlagFwdDecl)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "cgw_list", scope: !3699, file: !3700, line: 37, baseType: !1636, size: 64, offset: 1152)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "diag_nlsk", scope: !3038, file: !3039, line: 191, baseType: !500, size: 64, offset: 16832)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !3022, file: !3023, line: 38, baseType: !3726, size: 64, offset: 384)
!3726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3727, size: 64)
!3727 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !3023, line: 38, flags: DIFlagFwdDecl)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !3022, file: !3023, line: 39, baseType: !3726, size: 64, offset: 448)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !3022, file: !3023, line: 40, baseType: !3730, size: 64, offset: 512)
!3730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3731, size: 64)
!3731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !3732, line: 856, size: 448, elements: !3733)
!3732 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!3733 = !{!3734, !3735, !3736, !3737, !3738}
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3731, file: !3732, line: 857, baseType: !623, size: 32)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3731, file: !3732, line: 858, baseType: !2870, size: 192, offset: 64)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !3731, file: !3732, line: 859, baseType: !2836, size: 64, offset: 256)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !3731, file: !3732, line: 860, baseType: !2978, size: 64, offset: 320)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !3731, file: !3732, line: 861, baseType: !3739, size: 64, offset: 384)
!3739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3740, size: 64)
!3740 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !3741, line: 16, flags: DIFlagFwdDecl)
!3741 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2382, file: !2383, line: 969, baseType: !3743, size: 64, offset: 9216)
!3743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3744, size: 64)
!3744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !3745, line: 82, size: 7296, elements: !3746)
!3745 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!3746 = !{!3747, !3748, !3749, !3750, !3751, !3752, !3753, !3764, !3765, !3766, !3767, !3768, !3769, !3770, !3771, !3772, !3773, !3774, !3775, !3776, !3782, !3791, !3792, !3794, !3795, !3796, !3799, !3800, !3801, !3802, !3803, !3804, !3805, !3806, !3807, !3808, !3809, !3810, !3811, !3812, !3813, !3814, !3815, !3816, !3817, !3818, !3819, !3820, !3821, !3824, !3825, !3832, !3833, !3834, !3835, !3836, !3837}
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !3744, file: !3745, line: 83, baseType: !623, size: 32)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !3744, file: !3745, line: 84, baseType: !438, size: 32, offset: 32)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !3744, file: !3745, line: 85, baseType: !32, size: 32, offset: 64)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !3744, file: !3745, line: 86, baseType: !339, size: 128, offset: 128)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !3744, file: !3745, line: 88, baseType: !1944, size: 128, offset: 256)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !3744, file: !3745, line: 91, baseType: !2381, size: 64, offset: 384)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !3744, file: !3745, line: 94, baseType: !3754, size: 192, offset: 448)
!3754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !3755, line: 30, size: 192, elements: !3756)
!3755 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!3756 = !{!3757, !3758}
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3754, file: !3755, line: 31, baseType: !339, size: 128)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !3754, file: !3755, line: 32, baseType: !3759, size: 64, offset: 128)
!3759 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !3760, line: 25, baseType: !3761)
!3760 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!3761 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3760, line: 23, size: 64, elements: !3762)
!3762 = !{!3763}
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !3761, file: !3760, line: 24, baseType: !2526, size: 64)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !3744, file: !3745, line: 97, baseType: !1636, size: 64, offset: 640)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !3744, file: !3745, line: 100, baseType: !32, size: 32, offset: 704)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !3744, file: !3745, line: 106, baseType: !32, size: 32, offset: 736)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !3744, file: !3745, line: 107, baseType: !2381, size: 64, offset: 768)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !3744, file: !3745, line: 110, baseType: !32, size: 32, offset: 832)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3744, file: !3745, line: 111, baseType: !7, size: 32, offset: 864)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !3744, file: !3745, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !3744, file: !3745, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !3744, file: !3745, line: 128, baseType: !32, size: 32, offset: 928)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !3744, file: !3745, line: 129, baseType: !339, size: 128, offset: 960)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !3744, file: !3745, line: 132, baseType: !2452, size: 512, offset: 1088)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !3744, file: !3745, line: 133, baseType: !508, size: 64, offset: 1600)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !3744, file: !3745, line: 140, baseType: !3777, size: 256, offset: 1664)
!3777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3778, size: 256, elements: !2719)
!3778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !3745, line: 38, size: 128, elements: !3779)
!3779 = !{!3780, !3781}
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3778, file: !3745, line: 39, baseType: !386, size: 64)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !3778, file: !3745, line: 40, baseType: !386, size: 64, offset: 64)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !3744, file: !3745, line: 146, baseType: !3783, size: 192, offset: 1920)
!3783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !3745, line: 66, size: 192, elements: !3784)
!3784 = !{!3785}
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !3783, file: !3745, line: 67, baseType: !3786, size: 192)
!3786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !3745, line: 47, size: 192, elements: !3787)
!3787 = !{!3788, !3789, !3790}
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3786, file: !3745, line: 48, baseType: !428, size: 64)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3786, file: !3745, line: 49, baseType: !428, size: 64, offset: 64)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !3786, file: !3745, line: 50, baseType: !428, size: 64, offset: 128)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !3744, file: !3745, line: 150, baseType: !2680, size: 640, offset: 2112)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !3744, file: !3745, line: 153, baseType: !3793, size: 256, offset: 2752)
!3793 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2626, size: 256, elements: !2327)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !3744, file: !3745, line: 159, baseType: !2626, size: 64, offset: 3008)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !3744, file: !3745, line: 162, baseType: !32, size: 32, offset: 3072)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !3744, file: !3745, line: 164, baseType: !3797, size: 64, offset: 3136)
!3797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3798, size: 64)
!3798 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !3745, line: 164, flags: DIFlagFwdDecl)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !3744, file: !3745, line: 175, baseType: !3380, size: 32, offset: 3200)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3744, file: !3745, line: 176, baseType: !386, size: 64, offset: 3264)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3744, file: !3745, line: 176, baseType: !386, size: 64, offset: 3328)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !3744, file: !3745, line: 176, baseType: !386, size: 64, offset: 3392)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !3744, file: !3745, line: 176, baseType: !386, size: 64, offset: 3456)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !3744, file: !3745, line: 177, baseType: !386, size: 64, offset: 3520)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !3744, file: !3745, line: 178, baseType: !386, size: 64, offset: 3584)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !3744, file: !3745, line: 179, baseType: !2668, size: 128, offset: 3648)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !3744, file: !3745, line: 180, baseType: !367, size: 64, offset: 3776)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !3744, file: !3745, line: 180, baseType: !367, size: 64, offset: 3840)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !3744, file: !3745, line: 180, baseType: !367, size: 64, offset: 3904)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !3744, file: !3745, line: 180, baseType: !367, size: 64, offset: 3968)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !3744, file: !3745, line: 181, baseType: !367, size: 64, offset: 4032)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !3744, file: !3745, line: 181, baseType: !367, size: 64, offset: 4096)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !3744, file: !3745, line: 181, baseType: !367, size: 64, offset: 4160)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !3744, file: !3745, line: 181, baseType: !367, size: 64, offset: 4224)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !3744, file: !3745, line: 182, baseType: !367, size: 64, offset: 4288)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !3744, file: !3745, line: 182, baseType: !367, size: 64, offset: 4352)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !3744, file: !3745, line: 182, baseType: !367, size: 64, offset: 4416)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !3744, file: !3745, line: 182, baseType: !367, size: 64, offset: 4480)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !3744, file: !3745, line: 183, baseType: !367, size: 64, offset: 4544)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !3744, file: !3745, line: 183, baseType: !367, size: 64, offset: 4608)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !3744, file: !3745, line: 184, baseType: !3822, offset: 4672)
!3822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !3823, line: 12, elements: !1642)
!3823 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !3744, file: !3745, line: 192, baseType: !390, size: 64, offset: 4672)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !3744, file: !3745, line: 203, baseType: !3826, size: 2048, offset: 4736)
!3826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3827, size: 2048, elements: !324)
!3827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !3828, line: 43, size: 128, elements: !3829)
!3828 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!3829 = !{!3830, !3831}
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !3827, file: !3828, line: 44, baseType: !1097, size: 64)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !3827, file: !3828, line: 45, baseType: !1097, size: 64, offset: 64)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !3744, file: !3745, line: 220, baseType: !826, size: 8, offset: 6784)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !3744, file: !3745, line: 221, baseType: !680, size: 16, offset: 6800)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !3744, file: !3745, line: 222, baseType: !680, size: 16, offset: 6816)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !3744, file: !3745, line: 224, baseType: !2146, size: 64, offset: 6848)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !3744, file: !3745, line: 227, baseType: !1720, size: 192, offset: 6912)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !3744, file: !3745, line: 233, baseType: !1720, size: 192, offset: 7104)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !2382, file: !2383, line: 970, baseType: !3839, size: 64, offset: 9280)
!3839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3840, size: 64)
!3840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !3745, line: 20, size: 16576, elements: !3841)
!3841 = !{!3842, !3843, !3844, !3845}
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !3840, file: !3745, line: 21, baseType: !1725)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3840, file: !3745, line: 22, baseType: !623, size: 32)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !3840, file: !3745, line: 23, baseType: !1944, size: 128, offset: 64)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3840, file: !3745, line: 24, baseType: !3846, size: 16384, offset: 192)
!3846 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3847, size: 16384, elements: !3867)
!3847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !3755, line: 49, size: 256, elements: !3848)
!3848 = !{!3849}
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !3847, file: !3755, line: 50, baseType: !3850, size: 256)
!3850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !3755, line: 35, size: 256, elements: !3851)
!3851 = !{!3852, !3859, !3860, !3866}
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !3850, file: !3755, line: 37, baseType: !3853, size: 64)
!3853 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !3854, line: 19, baseType: !3855)
!3854 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!3855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3856, size: 64)
!3856 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !3854, line: 18, baseType: !3857)
!3857 = !DISubroutineType(types: !3858)
!3858 = !{null, !32}
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !3850, file: !3755, line: 38, baseType: !367, size: 64, offset: 64)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !3850, file: !3755, line: 44, baseType: !3861, size: 64, offset: 128)
!3861 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !3854, line: 22, baseType: !3862)
!3862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3863, size: 64)
!3863 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !3854, line: 21, baseType: !3864)
!3864 = !DISubroutineType(types: !3865)
!3865 = !{null}
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !3850, file: !3755, line: 46, baseType: !3759, size: 64, offset: 192)
!3867 = !{!3868}
!3868 = !DISubrange(count: 64)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !2382, file: !2383, line: 971, baseType: !3759, size: 64, offset: 9344)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !2382, file: !2383, line: 972, baseType: !3759, size: 64, offset: 9408)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !2382, file: !2383, line: 974, baseType: !3759, size: 64, offset: 9472)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !2382, file: !2383, line: 975, baseType: !3754, size: 192, offset: 9536)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !2382, file: !2383, line: 976, baseType: !367, size: 64, offset: 9728)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !2382, file: !2383, line: 977, baseType: !1094, size: 64, offset: 9792)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !2382, file: !2383, line: 978, baseType: !7, size: 32, offset: 9856)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !2382, file: !2383, line: 980, baseType: !357, size: 64, offset: 9920)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !2382, file: !2383, line: 989, baseType: !3878, size: 128, offset: 9984)
!3878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !3879, line: 35, size: 128, elements: !3880)
!3879 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!3880 = !{!3881, !3882, !3883}
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3878, file: !3879, line: 36, baseType: !32, size: 32)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !3878, file: !3879, line: 37, baseType: !438, size: 32, offset: 32)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3878, file: !3879, line: 38, baseType: !3884, size: 64, offset: 64)
!3884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3885, size: 64)
!3885 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !3879, line: 23, flags: DIFlagFwdDecl)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !2382, file: !2383, line: 992, baseType: !386, size: 64, offset: 10112)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !2382, file: !2383, line: 993, baseType: !386, size: 64, offset: 10176)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !2382, file: !2383, line: 996, baseType: !1725, offset: 10240)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !2382, file: !2383, line: 999, baseType: !1816, offset: 10240)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !2382, file: !2383, line: 1001, baseType: !3891, size: 64, offset: 10240)
!3891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !2383, line: 636, size: 64, elements: !3892)
!3892 = !{!3893}
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3891, file: !2383, line: 637, baseType: !3894, size: 64)
!3894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3891, size: 64)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !2382, file: !2383, line: 1005, baseType: !1802, size: 128, offset: 10304)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !2382, file: !2383, line: 1007, baseType: !2381, size: 64, offset: 10432)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !2382, file: !2383, line: 1009, baseType: !3898, size: 64, offset: 10496)
!3898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3899, size: 64)
!3899 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !2383, line: 1009, flags: DIFlagFwdDecl)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !2382, file: !2383, line: 1043, baseType: !646, size: 64, offset: 10560)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !2382, file: !2383, line: 1046, baseType: !3902, size: 64, offset: 10624)
!3902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3903, size: 64)
!3903 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !2383, line: 41, flags: DIFlagFwdDecl)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !2382, file: !2383, line: 1050, baseType: !3905, size: 64, offset: 10688)
!3905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3906, size: 64)
!3906 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !2383, line: 42, flags: DIFlagFwdDecl)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !2382, file: !2383, line: 1054, baseType: !3908, size: 64, offset: 10752)
!3908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3909, size: 64)
!3909 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !2383, line: 55, flags: DIFlagFwdDecl)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2382, file: !2383, line: 1056, baseType: !3911, size: 64, offset: 10816)
!3911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3912, size: 64)
!3912 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !2383, line: 40, flags: DIFlagFwdDecl)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !2382, file: !2383, line: 1058, baseType: !3914, size: 64, offset: 10880)
!3914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3915, size: 64)
!3915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !3916, line: 99, size: 704, elements: !3917)
!3916 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!3917 = !{!3918, !3919, !3920, !3921, !3922, !3923, !3924, !3943, !3944}
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3915, file: !3916, line: 100, baseType: !426, size: 64)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !3915, file: !3916, line: 101, baseType: !438, size: 32, offset: 64)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !3915, file: !3916, line: 102, baseType: !438, size: 32, offset: 96)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3915, file: !3916, line: 105, baseType: !1725, offset: 128)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !3915, file: !3916, line: 107, baseType: !531, size: 16, offset: 128)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !3915, file: !3916, line: 109, baseType: !1792, size: 128, offset: 192)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !3915, file: !3916, line: 110, baseType: !3925, size: 64, offset: 320)
!3925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3926, size: 64)
!3926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !3916, line: 73, size: 448, elements: !3927)
!3927 = !{!3928, !3931, !3932, !3937, !3942}
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !3926, file: !3916, line: 74, baseType: !3929, size: 64)
!3929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3930, size: 64)
!3930 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !3916, line: 74, flags: DIFlagFwdDecl)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !3926, file: !3916, line: 75, baseType: !3914, size: 64, offset: 64)
!3932 = !DIDerivedType(tag: DW_TAG_member, scope: !3926, file: !3916, line: 83, baseType: !3933, size: 128, offset: 128)
!3933 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3926, file: !3916, line: 83, size: 128, elements: !3934)
!3934 = !{!3935, !3936}
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !3933, file: !3916, line: 84, baseType: !339, size: 128)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !3933, file: !3916, line: 85, baseType: !2106, size: 64)
!3937 = !DIDerivedType(tag: DW_TAG_member, scope: !3926, file: !3916, line: 87, baseType: !3938, size: 128, offset: 256)
!3938 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3926, file: !3916, line: 87, size: 128, elements: !3939)
!3939 = !{!3940, !3941}
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !3938, file: !3916, line: 88, baseType: !331, size: 128)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !3938, file: !3916, line: 89, baseType: !354, size: 128, align: 64)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3926, file: !3916, line: 92, baseType: !7, size: 32, offset: 384)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !3915, file: !3916, line: 111, baseType: !1636, size: 64, offset: 384)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !3915, file: !3916, line: 113, baseType: !2884, size: 256, offset: 448)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !2382, file: !2383, line: 1061, baseType: !3946, size: 64, offset: 10944)
!3946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3947, size: 64)
!3947 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !2383, line: 43, flags: DIFlagFwdDecl)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !2382, file: !2383, line: 1064, baseType: !367, size: 64, offset: 11008)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !2382, file: !2383, line: 1065, baseType: !3950, size: 64, offset: 11072)
!3950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3951, size: 64)
!3951 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !3755, line: 14, baseType: !3952)
!3952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !3755, line: 12, size: 384, elements: !3953)
!3953 = !{!3954}
!3954 = !DIDerivedType(tag: DW_TAG_member, scope: !3952, file: !3755, line: 13, baseType: !3955, size: 384)
!3955 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3952, file: !3755, line: 13, size: 384, elements: !3956)
!3956 = !{!3957, !3958, !3959, !3960}
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !3955, file: !3755, line: 13, baseType: !32, size: 32)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !3955, file: !3755, line: 13, baseType: !32, size: 32, offset: 32)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !3955, file: !3755, line: 13, baseType: !32, size: 32, offset: 64)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !3955, file: !3755, line: 13, baseType: !3961, size: 256, offset: 128)
!3961 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !3962, line: 32, size: 256, elements: !3963)
!3962 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!3963 = !{!3964, !3969, !3982, !3988, !3997, !4017, !4022}
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !3961, file: !3962, line: 37, baseType: !3965, size: 64)
!3965 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3961, file: !3962, line: 34, size: 64, elements: !3966)
!3966 = !{!3967, !3968}
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3965, file: !3962, line: 35, baseType: !2615, size: 32)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3965, file: !3962, line: 36, baseType: !1443, size: 32, offset: 32)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !3961, file: !3962, line: 45, baseType: !3970, size: 192)
!3970 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3961, file: !3962, line: 40, size: 192, elements: !3971)
!3971 = !{!3972, !3974, !3975, !3981}
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !3970, file: !3962, line: 41, baseType: !3973, size: 32)
!3973 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !1096, line: 95, baseType: !32)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !3970, file: !3962, line: 42, baseType: !32, size: 32, offset: 32)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3970, file: !3962, line: 43, baseType: !3976, size: 64, offset: 64)
!3976 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !3962, line: 11, baseType: !3977)
!3977 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !3962, line: 8, size: 64, elements: !3978)
!3978 = !{!3979, !3980}
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !3977, file: !3962, line: 9, baseType: !32, size: 32)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !3977, file: !3962, line: 10, baseType: !646, size: 64)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !3970, file: !3962, line: 44, baseType: !32, size: 32, offset: 128)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !3961, file: !3962, line: 52, baseType: !3983, size: 128)
!3983 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3961, file: !3962, line: 48, size: 128, elements: !3984)
!3984 = !{!3985, !3986, !3987}
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3983, file: !3962, line: 49, baseType: !2615, size: 32)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3983, file: !3962, line: 50, baseType: !1443, size: 32, offset: 32)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3983, file: !3962, line: 51, baseType: !3976, size: 64, offset: 64)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !3961, file: !3962, line: 61, baseType: !3989, size: 256)
!3989 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3961, file: !3962, line: 55, size: 256, elements: !3990)
!3990 = !{!3991, !3992, !3993, !3994, !3996}
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3989, file: !3962, line: 56, baseType: !2615, size: 32)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3989, file: !3962, line: 57, baseType: !1443, size: 32, offset: 32)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !3989, file: !3962, line: 58, baseType: !32, size: 32, offset: 64)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !3989, file: !3962, line: 59, baseType: !3995, size: 64, offset: 128)
!3995 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !1096, line: 94, baseType: !1578)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !3989, file: !3962, line: 60, baseType: !3995, size: 64, offset: 192)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !3961, file: !3962, line: 95, baseType: !3998, size: 256)
!3998 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3961, file: !3962, line: 64, size: 256, elements: !3999)
!3999 = !{!4000, !4001}
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !3998, file: !3962, line: 65, baseType: !646, size: 64)
!4001 = !DIDerivedType(tag: DW_TAG_member, scope: !3998, file: !3962, line: 77, baseType: !4002, size: 192, offset: 64)
!4002 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3998, file: !3962, line: 77, size: 192, elements: !4003)
!4003 = !{!4004, !4005, !4012}
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !4002, file: !3962, line: 82, baseType: !680, size: 16)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !4002, file: !3962, line: 88, baseType: !4006, size: 192)
!4006 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4002, file: !3962, line: 84, size: 192, elements: !4007)
!4007 = !{!4008, !4010, !4011}
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !4006, file: !3962, line: 85, baseType: !4009, size: 64)
!4009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 64, elements: !2488)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !4006, file: !3962, line: 86, baseType: !646, size: 64, offset: 64)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !4006, file: !3962, line: 87, baseType: !646, size: 64, offset: 128)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !4002, file: !3962, line: 93, baseType: !4013, size: 96)
!4013 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4002, file: !3962, line: 90, size: 96, elements: !4014)
!4014 = !{!4015, !4016}
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !4013, file: !3962, line: 91, baseType: !4009, size: 64)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !4013, file: !3962, line: 92, baseType: !548, size: 32, offset: 64)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !3961, file: !3962, line: 101, baseType: !4018, size: 128)
!4018 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3961, file: !3962, line: 98, size: 128, elements: !4019)
!4019 = !{!4020, !4021}
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !4018, file: !3962, line: 99, baseType: !1053, size: 64)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !4018, file: !3962, line: 100, baseType: !32, size: 32, offset: 64)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !3961, file: !3962, line: 108, baseType: !4023, size: 128)
!4023 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3961, file: !3962, line: 104, size: 128, elements: !4024)
!4024 = !{!4025, !4026, !4027}
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !4023, file: !3962, line: 105, baseType: !646, size: 64)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !4023, file: !3962, line: 106, baseType: !32, size: 32, offset: 64)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !4023, file: !3962, line: 107, baseType: !7, size: 32, offset: 96)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2382, file: !2383, line: 1067, baseType: !3822, offset: 11136)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !2382, file: !2383, line: 1099, baseType: !4030, size: 64, offset: 11136)
!4030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4031, size: 64)
!4031 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !2383, line: 56, flags: DIFlagFwdDecl)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !2382, file: !2383, line: 1103, baseType: !339, size: 128, offset: 11200)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !2382, file: !2383, line: 1104, baseType: !4034, size: 64, offset: 11328)
!4034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4035, size: 64)
!4035 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !2383, line: 46, flags: DIFlagFwdDecl)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !2382, file: !2383, line: 1105, baseType: !1720, size: 192, offset: 11392)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !2382, file: !2383, line: 1106, baseType: !7, size: 32, offset: 11584)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !2382, file: !2383, line: 1109, baseType: !4039, size: 128, offset: 11648)
!4039 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4040, size: 128, elements: !2719)
!4040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4041, size: 64)
!4041 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !2383, line: 51, flags: DIFlagFwdDecl)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !2382, file: !2383, line: 1110, baseType: !1720, size: 192, offset: 11776)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !2382, file: !2383, line: 1111, baseType: !339, size: 128, offset: 11968)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !2382, file: !2383, line: 1173, baseType: !4045, size: 64, offset: 12096)
!4045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4046, size: 64)
!4046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !4047, line: 62, size: 256, align: 256, elements: !4048)
!4047 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!4048 = !{!4049, !4050, !4051, !4056}
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !4046, file: !4047, line: 75, baseType: !548, size: 32)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !4046, file: !4047, line: 90, baseType: !548, size: 32, offset: 32)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !4046, file: !4047, line: 124, baseType: !4052, size: 64, offset: 64)
!4052 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4046, file: !4047, line: 109, size: 64, elements: !4053)
!4053 = !{!4054, !4055}
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !4052, file: !4047, line: 110, baseType: !388, size: 64)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4052, file: !4047, line: 112, baseType: !388, size: 64)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4046, file: !4047, line: 144, baseType: !548, size: 32, offset: 128)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !2382, file: !2383, line: 1174, baseType: !1042, size: 32, offset: 12160)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !2382, file: !2383, line: 1179, baseType: !367, size: 64, offset: 12224)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !2382, file: !2383, line: 1182, baseType: !4060, size: 128, offset: 12288)
!4060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !2323, line: 76, size: 128, elements: !4061)
!4061 = !{!4062, !4067, !4068}
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4060, file: !2323, line: 85, baseType: !4063, size: 64)
!4063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !4064, line: 7, size: 64, elements: !4065)
!4064 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!4065 = !{!4066}
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !4063, file: !4064, line: 12, baseType: !2523, size: 64)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !4060, file: !2323, line: 88, baseType: !826, size: 8, offset: 64)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !4060, file: !2323, line: 95, baseType: !826, size: 8, offset: 72)
!4069 = !DIDerivedType(tag: DW_TAG_member, scope: !2382, file: !2383, line: 1184, baseType: !4070, size: 128, offset: 12416)
!4070 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2382, file: !2383, line: 1184, size: 128, elements: !4071)
!4071 = !{!4072, !4073}
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !4070, file: !2383, line: 1185, baseType: !623, size: 32)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4070, file: !2383, line: 1186, baseType: !354, size: 128, align: 64)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !2382, file: !2383, line: 1190, baseType: !1938, size: 64, offset: 12544)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !2382, file: !2383, line: 1192, baseType: !4076, size: 128, offset: 12608)
!4076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !2323, line: 64, size: 128, elements: !4077)
!4077 = !{!4078, !4079, !4080}
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !4076, file: !2323, line: 65, baseType: !1774, size: 64)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4076, file: !2323, line: 67, baseType: !548, size: 32, offset: 64)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4076, file: !2323, line: 68, baseType: !548, size: 32, offset: 96)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !2382, file: !2383, line: 1206, baseType: !32, size: 32, offset: 12736)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !2382, file: !2383, line: 1207, baseType: !32, size: 32, offset: 12768)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !2382, file: !2383, line: 1209, baseType: !367, size: 64, offset: 12800)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !2382, file: !2383, line: 1219, baseType: !386, size: 64, offset: 12864)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !2382, file: !2383, line: 1220, baseType: !386, size: 64, offset: 12928)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !2382, file: !2383, line: 1317, baseType: !32, size: 32, offset: 12992)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !2382, file: !2383, line: 1319, baseType: !2381, size: 64, offset: 13056)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !2382, file: !2383, line: 1322, baseType: !4089, size: 64, offset: 13120)
!4089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4090, size: 64)
!4090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !4091, line: 56, size: 512, elements: !4092)
!4091 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!4092 = !{!4093, !4094, !4095, !4096, !4097, !4098, !4099, !4101}
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4090, file: !4091, line: 57, baseType: !4089, size: 64)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4090, file: !4091, line: 58, baseType: !646, size: 64, offset: 64)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4090, file: !4091, line: 59, baseType: !367, size: 64, offset: 128)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4090, file: !4091, line: 60, baseType: !367, size: 64, offset: 192)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !4090, file: !4091, line: 61, baseType: !1856, size: 64, offset: 256)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !4090, file: !4091, line: 62, baseType: !7, size: 32, offset: 320)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !4090, file: !4091, line: 63, baseType: !4100, size: 64, offset: 384)
!4100 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !332, line: 153, baseType: !386)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !4090, file: !4091, line: 64, baseType: !3313, size: 64, offset: 448)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !2382, file: !2383, line: 1326, baseType: !623, size: 32, offset: 13184)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !2382, file: !2383, line: 1342, baseType: !646, size: 64, offset: 13248)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !2382, file: !2383, line: 1343, baseType: !388, size: 64, offset: 13312)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !2382, file: !2383, line: 1344, baseType: !386, size: 64, offset: 13376)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !2382, file: !2383, line: 1345, baseType: !388, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !2382, file: !2383, line: 1346, baseType: !388, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !2382, file: !2383, line: 1347, baseType: !388, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !2382, file: !2383, line: 1348, baseType: !354, size: 128, align: 64, offset: 13504)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !2382, file: !2383, line: 1358, baseType: !4111, size: 34816, offset: 13824)
!4111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !4112, line: 485, size: 34816, elements: !4113)
!4112 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!4113 = !{!4114, !4132, !4133, !4134, !4135, !4136, !4137, !4138, !4139, !4143, !4144, !4145, !4146, !4147, !4148, !4151, !4152, !4153}
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !4111, file: !4112, line: 487, baseType: !4115, size: 192)
!4115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4116, size: 192, elements: !1647)
!4116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !4117, line: 16, size: 64, elements: !4118)
!4117 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!4118 = !{!4119, !4120, !4121, !4122, !4123, !4124, !4125, !4126, !4127, !4128, !4129, !4130, !4131}
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !4116, file: !4117, line: 17, baseType: !636, size: 16)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !4116, file: !4117, line: 18, baseType: !636, size: 16, offset: 16)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !4116, file: !4117, line: 19, baseType: !636, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4116, file: !4117, line: 19, baseType: !636, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !4116, file: !4117, line: 19, baseType: !636, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !4116, file: !4117, line: 19, baseType: !636, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4116, file: !4117, line: 19, baseType: !636, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !4116, file: !4117, line: 20, baseType: !636, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !4116, file: !4117, line: 20, baseType: !636, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !4116, file: !4117, line: 20, baseType: !636, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4116, file: !4117, line: 20, baseType: !636, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4116, file: !4117, line: 20, baseType: !636, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !4116, file: !4117, line: 20, baseType: !636, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4111, file: !4112, line: 491, baseType: !367, size: 64, offset: 192)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !4111, file: !4112, line: 495, baseType: !531, size: 16, offset: 256)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !4111, file: !4112, line: 496, baseType: !531, size: 16, offset: 272)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !4111, file: !4112, line: 497, baseType: !531, size: 16, offset: 288)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !4111, file: !4112, line: 498, baseType: !531, size: 16, offset: 304)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !4111, file: !4112, line: 502, baseType: !367, size: 64, offset: 320)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !4111, file: !4112, line: 503, baseType: !367, size: 64, offset: 384)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !4111, file: !4112, line: 514, baseType: !4140, size: 256, offset: 448)
!4140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4141, size: 256, elements: !2327)
!4141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4142, size: 64)
!4142 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !4112, line: 483, flags: DIFlagFwdDecl)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !4111, file: !4112, line: 516, baseType: !367, size: 64, offset: 704)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !4111, file: !4112, line: 518, baseType: !367, size: 64, offset: 768)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !4111, file: !4112, line: 520, baseType: !367, size: 64, offset: 832)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !4111, file: !4112, line: 521, baseType: !367, size: 64, offset: 896)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !4111, file: !4112, line: 522, baseType: !367, size: 64, offset: 960)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !4111, file: !4112, line: 528, baseType: !4149, size: 64, offset: 1024)
!4149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4150, size: 64)
!4150 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !4112, line: 10, flags: DIFlagFwdDecl)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !4111, file: !4112, line: 535, baseType: !367, size: 64, offset: 1088)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !4111, file: !4112, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !4111, file: !4112, line: 540, baseType: !4154, size: 33280, offset: 1536)
!4154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !4155, line: 317, size: 33280, elements: !4156)
!4155 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!4156 = !{!4157, !4158, !4159}
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !4154, file: !4155, line: 330, baseType: !7, size: 32)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !4154, file: !4155, line: 337, baseType: !367, size: 64, offset: 64)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4154, file: !4155, line: 348, baseType: !4160, size: 32768, offset: 512)
!4160 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !4155, line: 304, size: 32768, elements: !4161)
!4161 = !{!4162, !4175, !4212, !4262, !4275}
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !4160, file: !4155, line: 305, baseType: !4163, size: 896)
!4163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !4155, line: 12, size: 896, elements: !4164)
!4164 = !{!4165, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4174}
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4163, file: !4155, line: 13, baseType: !1042, size: 32)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4163, file: !4155, line: 14, baseType: !1042, size: 32, offset: 32)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4163, file: !4155, line: 15, baseType: !1042, size: 32, offset: 64)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4163, file: !4155, line: 16, baseType: !1042, size: 32, offset: 96)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4163, file: !4155, line: 17, baseType: !1042, size: 32, offset: 128)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4163, file: !4155, line: 18, baseType: !1042, size: 32, offset: 160)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4163, file: !4155, line: 19, baseType: !1042, size: 32, offset: 192)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4163, file: !4155, line: 22, baseType: !4173, size: 640, offset: 224)
!4173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1042, size: 640, elements: !955)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4163, file: !4155, line: 25, baseType: !1042, size: 32, offset: 864)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !4160, file: !4155, line: 306, baseType: !4176, size: 4096, align: 128)
!4176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !4155, line: 34, size: 4096, align: 128, elements: !4177)
!4177 = !{!4178, !4179, !4180, !4181, !4182, !4197, !4198, !4199, !4201, !4203, !4207}
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4176, file: !4155, line: 35, baseType: !636, size: 16)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4176, file: !4155, line: 36, baseType: !636, size: 16, offset: 16)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4176, file: !4155, line: 37, baseType: !636, size: 16, offset: 32)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !4176, file: !4155, line: 38, baseType: !636, size: 16, offset: 48)
!4182 = !DIDerivedType(tag: DW_TAG_member, scope: !4176, file: !4155, line: 39, baseType: !4183, size: 128, offset: 64)
!4183 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4176, file: !4155, line: 39, size: 128, elements: !4184)
!4184 = !{!4185, !4190}
!4185 = !DIDerivedType(tag: DW_TAG_member, scope: !4183, file: !4155, line: 40, baseType: !4186, size: 128)
!4186 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4183, file: !4155, line: 40, size: 128, elements: !4187)
!4187 = !{!4188, !4189}
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !4186, file: !4155, line: 41, baseType: !386, size: 64)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !4186, file: !4155, line: 42, baseType: !386, size: 64, offset: 64)
!4190 = !DIDerivedType(tag: DW_TAG_member, scope: !4183, file: !4155, line: 44, baseType: !4191, size: 128)
!4191 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4183, file: !4155, line: 44, size: 128, elements: !4192)
!4192 = !{!4193, !4194, !4195, !4196}
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4191, file: !4155, line: 45, baseType: !1042, size: 32)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4191, file: !4155, line: 46, baseType: !1042, size: 32, offset: 32)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4191, file: !4155, line: 47, baseType: !1042, size: 32, offset: 64)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4191, file: !4155, line: 48, baseType: !1042, size: 32, offset: 96)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !4176, file: !4155, line: 51, baseType: !1042, size: 32, offset: 192)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !4176, file: !4155, line: 52, baseType: !1042, size: 32, offset: 224)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4176, file: !4155, line: 55, baseType: !4200, size: 1024, offset: 256)
!4200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1042, size: 1024, elements: !874)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !4176, file: !4155, line: 58, baseType: !4202, size: 2048, offset: 1280)
!4202 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1042, size: 2048, elements: !3867)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4176, file: !4155, line: 60, baseType: !4204, size: 384, offset: 3328)
!4204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1042, size: 384, elements: !4205)
!4205 = !{!4206}
!4206 = !DISubrange(count: 12)
!4207 = !DIDerivedType(tag: DW_TAG_member, scope: !4176, file: !4155, line: 62, baseType: !4208, size: 384, offset: 3712)
!4208 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4176, file: !4155, line: 62, size: 384, elements: !4209)
!4209 = !{!4210, !4211}
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !4208, file: !4155, line: 63, baseType: !4204, size: 384)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !4208, file: !4155, line: 64, baseType: !4204, size: 384)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !4160, file: !4155, line: 307, baseType: !4213, size: 1088)
!4213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !4155, line: 79, size: 1088, elements: !4214)
!4214 = !{!4215, !4216, !4217, !4218, !4219, !4220, !4221, !4222, !4223, !4224, !4225, !4226, !4227, !4228, !4229, !4261}
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4213, file: !4155, line: 80, baseType: !1042, size: 32)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4213, file: !4155, line: 81, baseType: !1042, size: 32, offset: 32)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4213, file: !4155, line: 82, baseType: !1042, size: 32, offset: 64)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4213, file: !4155, line: 83, baseType: !1042, size: 32, offset: 96)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4213, file: !4155, line: 84, baseType: !1042, size: 32, offset: 128)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4213, file: !4155, line: 85, baseType: !1042, size: 32, offset: 160)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4213, file: !4155, line: 86, baseType: !1042, size: 32, offset: 192)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4213, file: !4155, line: 88, baseType: !4173, size: 640, offset: 224)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !4213, file: !4155, line: 89, baseType: !849, size: 8, offset: 864)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !4213, file: !4155, line: 90, baseType: !849, size: 8, offset: 872)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !4213, file: !4155, line: 91, baseType: !849, size: 8, offset: 880)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !4213, file: !4155, line: 92, baseType: !849, size: 8, offset: 888)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !4213, file: !4155, line: 93, baseType: !849, size: 8, offset: 896)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !4213, file: !4155, line: 94, baseType: !849, size: 8, offset: 904)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4213, file: !4155, line: 95, baseType: !4230, size: 64, offset: 960)
!4230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4231, size: 64)
!4231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !4232, line: 11, size: 128, elements: !4233)
!4232 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!4233 = !{!4234, !4235}
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !4231, file: !4232, line: 12, baseType: !1053, size: 64)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4231, file: !4232, line: 13, baseType: !4236, size: 64, offset: 64)
!4236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4237, size: 64)
!4237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !4238, line: 56, size: 1344, elements: !4239)
!4238 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!4239 = !{!4240, !4241, !4242, !4243, !4244, !4245, !4246, !4247, !4248, !4249, !4250, !4251, !4252, !4253, !4254, !4255, !4256, !4257, !4258, !4259, !4260}
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !4237, file: !4238, line: 61, baseType: !367, size: 64)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !4237, file: !4238, line: 62, baseType: !367, size: 64, offset: 64)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !4237, file: !4238, line: 63, baseType: !367, size: 64, offset: 128)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !4237, file: !4238, line: 64, baseType: !367, size: 64, offset: 192)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !4237, file: !4238, line: 65, baseType: !367, size: 64, offset: 256)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !4237, file: !4238, line: 66, baseType: !367, size: 64, offset: 320)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !4237, file: !4238, line: 68, baseType: !367, size: 64, offset: 384)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !4237, file: !4238, line: 69, baseType: !367, size: 64, offset: 448)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !4237, file: !4238, line: 70, baseType: !367, size: 64, offset: 512)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !4237, file: !4238, line: 71, baseType: !367, size: 64, offset: 576)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !4237, file: !4238, line: 72, baseType: !367, size: 64, offset: 640)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !4237, file: !4238, line: 73, baseType: !367, size: 64, offset: 704)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !4237, file: !4238, line: 74, baseType: !367, size: 64, offset: 768)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !4237, file: !4238, line: 75, baseType: !367, size: 64, offset: 832)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !4237, file: !4238, line: 76, baseType: !367, size: 64, offset: 896)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !4237, file: !4238, line: 81, baseType: !367, size: 64, offset: 960)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4237, file: !4238, line: 83, baseType: !367, size: 64, offset: 1024)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !4237, file: !4238, line: 84, baseType: !367, size: 64, offset: 1088)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4237, file: !4238, line: 85, baseType: !367, size: 64, offset: 1152)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4237, file: !4238, line: 86, baseType: !367, size: 64, offset: 1216)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !4237, file: !4238, line: 87, baseType: !367, size: 64, offset: 1280)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !4213, file: !4155, line: 96, baseType: !1042, size: 32, offset: 1024)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !4160, file: !4155, line: 308, baseType: !4263, size: 4608, align: 512)
!4263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !4155, line: 289, size: 4608, align: 512, elements: !4264)
!4264 = !{!4265, !4266, !4273}
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !4263, file: !4155, line: 290, baseType: !4176, size: 4096, align: 128)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !4263, file: !4155, line: 291, baseType: !4267, size: 512, offset: 4096)
!4267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !4155, line: 268, size: 512, elements: !4268)
!4268 = !{!4269, !4270, !4271}
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !4267, file: !4155, line: 269, baseType: !386, size: 64)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !4267, file: !4155, line: 270, baseType: !386, size: 64, offset: 64)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4267, file: !4155, line: 271, baseType: !4272, size: 384, offset: 128)
!4272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !386, size: 384, elements: !1054)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !4263, file: !4155, line: 292, baseType: !4274, offset: 4608)
!4274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !849, elements: !538)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !4160, file: !4155, line: 309, baseType: !4276, size: 32768)
!4276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !849, size: 32768, elements: !4277)
!4277 = !{!4278}
!4278 = !DISubrange(count: 4096)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2378, file: !1776, line: 378, baseType: !4280, size: 64, offset: 64)
!4280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2378, size: 64)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !2374, file: !1776, line: 384, baseType: !2652, size: 192, offset: 192)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !2150, file: !1776, line: 500, baseType: !1725, offset: 6656)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !2150, file: !1776, line: 501, baseType: !4284, size: 64, offset: 6656)
!4284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4285, size: 64)
!4285 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !1776, line: 387, flags: DIFlagFwdDecl)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2150, file: !1776, line: 516, baseType: !2836, size: 64, offset: 6720)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !2150, file: !1776, line: 519, baseType: !1370, size: 64, offset: 6784)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !2150, file: !1776, line: 521, baseType: !4289, size: 64, offset: 6848)
!4289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4290, size: 64)
!4290 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !1776, line: 521, flags: DIFlagFwdDecl)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !2150, file: !1776, line: 545, baseType: !438, size: 32, offset: 6912)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !2150, file: !1776, line: 548, baseType: !826, size: 8, offset: 6944)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !2150, file: !1776, line: 550, baseType: !4294, offset: 6952)
!4294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !4295, line: 142, elements: !1642)
!4295 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !2150, file: !1776, line: 554, baseType: !2884, size: 256, offset: 6976)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !2150, file: !1776, line: 557, baseType: !1042, size: 32, offset: 7232)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !2147, file: !1776, line: 565, baseType: !4299, offset: 7296)
!4299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !367, elements: !364)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !2143, file: !1776, line: 151, baseType: !438, size: 32)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2135, file: !1776, line: 156, baseType: !1725, offset: 256)
!4302 = !DIDerivedType(tag: DW_TAG_member, scope: !1780, file: !1776, line: 159, baseType: !4303, size: 128)
!4303 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1780, file: !1776, line: 159, size: 128, elements: !4304)
!4304 = !{!4305, !4376}
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !4303, file: !1776, line: 161, baseType: !4306, size: 64)
!4306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4307, size: 64)
!4307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !4308, line: 110, size: 1152, elements: !4309)
!4308 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!4309 = !{!4310, !4320, !4341, !4342, !4343, !4350, !4351, !4363, !4364, !4365}
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !4307, file: !4308, line: 111, baseType: !4311, size: 384)
!4311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !4308, line: 19, size: 384, elements: !4312)
!4312 = !{!4313, !4315, !4316, !4317, !4318, !4319}
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !4311, file: !4308, line: 20, baseType: !4314, size: 64)
!4314 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !367)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !4311, file: !4308, line: 21, baseType: !4314, size: 64, offset: 64)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !4311, file: !4308, line: 22, baseType: !4314, size: 64, offset: 128)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4311, file: !4308, line: 23, baseType: !367, size: 64, offset: 192)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !4311, file: !4308, line: 24, baseType: !367, size: 64, offset: 256)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4311, file: !4308, line: 25, baseType: !367, size: 64, offset: 320)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4307, file: !4308, line: 112, baseType: !4321, size: 64, offset: 384)
!4321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4322, size: 64)
!4322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !4323, line: 105, size: 128, elements: !4324)
!4323 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!4324 = !{!4325, !4326}
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !4322, file: !4323, line: 110, baseType: !367, size: 64)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4322, file: !4323, line: 118, baseType: !4327, size: 64, offset: 64)
!4327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4328, size: 64)
!4328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !4323, line: 95, size: 448, elements: !4329)
!4329 = !{!4330, !4331, !4336, !4337, !4338, !4339, !4340}
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4328, file: !4323, line: 96, baseType: !426, size: 64)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4328, file: !4323, line: 97, baseType: !4332, size: 64, offset: 64)
!4332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4333, size: 64)
!4333 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !4323, line: 60, baseType: !4334)
!4334 = !DISubroutineType(types: !4335)
!4335 = !{null, !4321}
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !4328, file: !4323, line: 98, baseType: !4332, size: 64, offset: 128)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !4328, file: !4323, line: 99, baseType: !826, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !4328, file: !4323, line: 100, baseType: !826, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4328, file: !4323, line: 101, baseType: !354, size: 128, align: 64, offset: 256)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4328, file: !4323, line: 102, baseType: !4321, size: 64, offset: 384)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !4307, file: !4308, line: 113, baseType: !4322, size: 128, offset: 448)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !4307, file: !4308, line: 114, baseType: !2652, size: 192, offset: 576)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4307, file: !4308, line: 115, baseType: !4344, size: 32, offset: 768)
!4344 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !4308, line: 59, baseType: !7, size: 32, elements: !4345)
!4345 = !{!4346, !4347, !4348, !4349}
!4346 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!4347 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!4348 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!4349 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4307, file: !4308, line: 116, baseType: !7, size: 32, offset: 800)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4307, file: !4308, line: 117, baseType: !4352, size: 64, offset: 832)
!4352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4353, size: 64)
!4353 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4354)
!4354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !4308, line: 67, size: 256, elements: !4355)
!4355 = !{!4356, !4357, !4361, !4362}
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !4354, file: !4308, line: 73, baseType: !1876, size: 64)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !4354, file: !4308, line: 78, baseType: !4358, size: 64, offset: 64)
!4358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4359, size: 64)
!4359 = !DISubroutineType(types: !4360)
!4360 = !{null, !4306}
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !4354, file: !4308, line: 83, baseType: !4358, size: 64, offset: 128)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !4354, file: !4308, line: 89, baseType: !2199, size: 64, offset: 192)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4307, file: !4308, line: 118, baseType: !646, size: 64, offset: 896)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !4307, file: !4308, line: 119, baseType: !32, size: 32, offset: 960)
!4365 = !DIDerivedType(tag: DW_TAG_member, scope: !4307, file: !4308, line: 120, baseType: !4366, size: 128, offset: 1024)
!4366 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4307, file: !4308, line: 120, size: 128, elements: !4367)
!4367 = !{!4368, !4374}
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !4366, file: !4308, line: 121, baseType: !4369, size: 128)
!4369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !4370, line: 6, size: 128, elements: !4371)
!4370 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!4371 = !{!4372, !4373}
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4369, file: !4370, line: 7, baseType: !386, size: 64)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4369, file: !4370, line: 8, baseType: !386, size: 64, offset: 64)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !4366, file: !4308, line: 122, baseType: !4375)
!4375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4369, elements: !538)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !4303, file: !1776, line: 162, baseType: !646, size: 64, offset: 64)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1780, file: !1776, line: 176, baseType: !354, size: 128, align: 64)
!4378 = !DIDerivedType(tag: DW_TAG_member, scope: !1775, file: !1776, line: 179, baseType: !4379, size: 32, offset: 384)
!4379 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1775, file: !1776, line: 179, size: 32, elements: !4380)
!4380 = !{!4381, !4382, !4383, !4384}
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !4379, file: !1776, line: 184, baseType: !438, size: 32)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !4379, file: !1776, line: 192, baseType: !7, size: 32)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4379, file: !1776, line: 194, baseType: !7, size: 32)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !4379, file: !1776, line: 195, baseType: !32, size: 32)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !1775, file: !1776, line: 199, baseType: !438, size: 32, offset: 416)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !1655, file: !1372, line: 1964, baseType: !4387, size: 64, offset: 1344)
!4387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4388, size: 64)
!4388 = !DISubroutineType(types: !4389)
!4389 = !{!1053, !1600, !4390}
!4390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4391, size: 64)
!4391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !4392, line: 12, size: 256, elements: !4393)
!4392 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!4393 = !{!4394, !4395, !4396, !4397, !4398}
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !4391, file: !4392, line: 13, baseType: !1797, size: 32)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !4391, file: !4392, line: 16, baseType: !32, size: 32, offset: 32)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !4391, file: !4392, line: 23, baseType: !367, size: 64, offset: 64)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !4391, file: !4392, line: 30, baseType: !367, size: 64, offset: 128)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !4391, file: !4392, line: 33, baseType: !4399, size: 64, offset: 192)
!4399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4400, size: 64)
!4400 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !1776, line: 27, flags: DIFlagFwdDecl)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !1655, file: !1372, line: 1966, baseType: !4387, size: 64, offset: 1408)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !1601, file: !1372, line: 1424, baseType: !4403, size: 64, offset: 448)
!4403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4404, size: 64)
!4404 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4405)
!4405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !4406, line: 322, size: 704, elements: !4407)
!4406 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!4407 = !{!4408, !4459, !4463, !4467, !4468, !4469, !4470, !4471, !4476, !4481, !4485}
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !4405, file: !4406, line: 323, baseType: !4409, size: 64)
!4409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4410, size: 64)
!4410 = !DISubroutineType(types: !4411)
!4411 = !{!32, !4412}
!4412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4413, size: 64)
!4413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !4406, line: 294, size: 1600, elements: !4414)
!4414 = !{!4415, !4416, !4417, !4418, !4419, !4420, !4421, !4422, !4423, !4444, !4445, !4446}
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !4413, file: !4406, line: 295, baseType: !331, size: 128)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !4413, file: !4406, line: 296, baseType: !339, size: 128, offset: 128)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !4413, file: !4406, line: 297, baseType: !339, size: 128, offset: 256)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !4413, file: !4406, line: 298, baseType: !339, size: 128, offset: 384)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !4413, file: !4406, line: 299, baseType: !1720, size: 192, offset: 512)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !4413, file: !4406, line: 300, baseType: !1725, offset: 704)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !4413, file: !4406, line: 301, baseType: !438, size: 32, offset: 704)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !4413, file: !4406, line: 302, baseType: !1600, size: 64, offset: 768)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !4413, file: !4406, line: 303, baseType: !4424, size: 64, offset: 832)
!4424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !4406, line: 68, size: 64, elements: !4425)
!4425 = !{!4426, !4438}
!4426 = !DIDerivedType(tag: DW_TAG_member, scope: !4424, file: !4406, line: 69, baseType: !4427, size: 32)
!4427 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4424, file: !4406, line: 69, size: 32, elements: !4428)
!4428 = !{!4429, !4430, !4431}
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4427, file: !4406, line: 70, baseType: !1437, size: 32)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !4427, file: !4406, line: 71, baseType: !1445, size: 32)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !4427, file: !4406, line: 72, baseType: !4432, size: 32)
!4432 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !4433, line: 24, baseType: !4434)
!4433 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!4434 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4433, line: 22, size: 32, elements: !4435)
!4435 = !{!4436}
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4434, file: !4433, line: 23, baseType: !4437, size: 32)
!4437 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !4433, line: 20, baseType: !1443)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4424, file: !4406, line: 74, baseType: !4439, size: 32, offset: 32)
!4439 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !4406, line: 54, baseType: !7, size: 32, elements: !4440)
!4440 = !{!4441, !4442, !4443}
!4441 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!4442 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!4443 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !4413, file: !4406, line: 304, baseType: !1531, size: 64, offset: 896)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !4413, file: !4406, line: 305, baseType: !367, size: 64, offset: 960)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !4413, file: !4406, line: 306, baseType: !4447, size: 576, offset: 1024)
!4447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !4406, line: 205, size: 576, elements: !4448)
!4448 = !{!4449, !4451, !4452, !4453, !4454, !4455, !4456, !4457, !4458}
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !4447, file: !4406, line: 206, baseType: !4450, size: 64)
!4450 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !4406, line: 66, baseType: !434)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !4447, file: !4406, line: 207, baseType: !4450, size: 64, offset: 64)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !4447, file: !4406, line: 208, baseType: !4450, size: 64, offset: 128)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !4447, file: !4406, line: 209, baseType: !4450, size: 64, offset: 192)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !4447, file: !4406, line: 210, baseType: !4450, size: 64, offset: 256)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !4447, file: !4406, line: 211, baseType: !4450, size: 64, offset: 320)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !4447, file: !4406, line: 212, baseType: !4450, size: 64, offset: 384)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !4447, file: !4406, line: 213, baseType: !1538, size: 64, offset: 448)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !4447, file: !4406, line: 214, baseType: !1538, size: 64, offset: 512)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !4405, file: !4406, line: 324, baseType: !4460, size: 64, offset: 64)
!4460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4461, size: 64)
!4461 = !DISubroutineType(types: !4462)
!4462 = !{!4412, !1600, !32}
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !4405, file: !4406, line: 325, baseType: !4464, size: 64, offset: 128)
!4464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4465, size: 64)
!4465 = !DISubroutineType(types: !4466)
!4466 = !{null, !4412}
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !4405, file: !4406, line: 326, baseType: !4409, size: 64, offset: 192)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !4405, file: !4406, line: 327, baseType: !4409, size: 64, offset: 256)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !4405, file: !4406, line: 328, baseType: !4409, size: 64, offset: 320)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !4405, file: !4406, line: 329, baseType: !1683, size: 64, offset: 384)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !4405, file: !4406, line: 332, baseType: !4472, size: 64, offset: 448)
!4472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4473, size: 64)
!4473 = !DISubroutineType(types: !4474)
!4474 = !{!4475, !1430}
!4475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4450, size: 64)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !4405, file: !4406, line: 333, baseType: !4477, size: 64, offset: 512)
!4477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4478, size: 64)
!4478 = !DISubroutineType(types: !4479)
!4479 = !{!32, !1430, !4480}
!4480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4432, size: 64)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !4405, file: !4406, line: 335, baseType: !4482, size: 64, offset: 576)
!4482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4483, size: 64)
!4483 = !DISubroutineType(types: !4484)
!4484 = !{!32, !1430, !4475}
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4405, file: !4406, line: 337, baseType: !4486, size: 64, offset: 640)
!4486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4487, size: 64)
!4487 = !DISubroutineType(types: !4488)
!4488 = !{!32, !1600, !4489}
!4489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4424, size: 64)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !1601, file: !1372, line: 1425, baseType: !4491, size: 64, offset: 512)
!4491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4492, size: 64)
!4492 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4493)
!4493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !4406, line: 428, size: 704, elements: !4494)
!4494 = !{!4495, !4499, !4500, !4504, !4505, !4506, !4521, !4544, !4548, !4549, !4572}
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !4493, file: !4406, line: 429, baseType: !4496, size: 64)
!4496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4497, size: 64)
!4497 = !DISubroutineType(types: !4498)
!4498 = !{!32, !1600, !32, !32, !1547}
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !4493, file: !4406, line: 430, baseType: !1683, size: 64, offset: 64)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !4493, file: !4406, line: 431, baseType: !4501, size: 64, offset: 128)
!4501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4502, size: 64)
!4502 = !DISubroutineType(types: !4503)
!4503 = !{!32, !1600, !7}
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !4493, file: !4406, line: 432, baseType: !4501, size: 64, offset: 192)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !4493, file: !4406, line: 433, baseType: !1683, size: 64, offset: 256)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !4493, file: !4406, line: 434, baseType: !4507, size: 64, offset: 320)
!4507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4508, size: 64)
!4508 = !DISubroutineType(types: !4509)
!4509 = !{!32, !1600, !32, !4510}
!4510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4511, size: 64)
!4511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !4406, line: 415, size: 256, elements: !4512)
!4512 = !{!4513, !4514, !4515, !4516, !4517, !4518, !4519, !4520}
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !4511, file: !4406, line: 416, baseType: !32, size: 32)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !4511, file: !4406, line: 417, baseType: !7, size: 32, offset: 32)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !4511, file: !4406, line: 418, baseType: !7, size: 32, offset: 64)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !4511, file: !4406, line: 420, baseType: !7, size: 32, offset: 96)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !4511, file: !4406, line: 421, baseType: !7, size: 32, offset: 128)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !4511, file: !4406, line: 422, baseType: !7, size: 32, offset: 160)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !4511, file: !4406, line: 423, baseType: !7, size: 32, offset: 192)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !4511, file: !4406, line: 424, baseType: !7, size: 32, offset: 224)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !4493, file: !4406, line: 435, baseType: !4522, size: 64, offset: 384)
!4522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4523, size: 64)
!4523 = !DISubroutineType(types: !4524)
!4524 = !{!32, !1600, !4424, !4525}
!4525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4526, size: 64)
!4526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !4406, line: 343, size: 960, elements: !4527)
!4527 = !{!4528, !4529, !4530, !4531, !4532, !4533, !4534, !4535, !4536, !4537, !4538, !4539, !4540, !4541, !4542, !4543}
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !4526, file: !4406, line: 344, baseType: !32, size: 32)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !4526, file: !4406, line: 345, baseType: !386, size: 64, offset: 64)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !4526, file: !4406, line: 346, baseType: !386, size: 64, offset: 128)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !4526, file: !4406, line: 347, baseType: !386, size: 64, offset: 192)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !4526, file: !4406, line: 348, baseType: !386, size: 64, offset: 256)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !4526, file: !4406, line: 349, baseType: !386, size: 64, offset: 320)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !4526, file: !4406, line: 350, baseType: !386, size: 64, offset: 384)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !4526, file: !4406, line: 351, baseType: !432, size: 64, offset: 448)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !4526, file: !4406, line: 353, baseType: !432, size: 64, offset: 512)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !4526, file: !4406, line: 354, baseType: !32, size: 32, offset: 576)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !4526, file: !4406, line: 355, baseType: !32, size: 32, offset: 608)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !4526, file: !4406, line: 356, baseType: !386, size: 64, offset: 640)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !4526, file: !4406, line: 357, baseType: !386, size: 64, offset: 704)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !4526, file: !4406, line: 358, baseType: !386, size: 64, offset: 768)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !4526, file: !4406, line: 359, baseType: !432, size: 64, offset: 832)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !4526, file: !4406, line: 360, baseType: !32, size: 32, offset: 896)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !4493, file: !4406, line: 436, baseType: !4545, size: 64, offset: 448)
!4545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4546, size: 64)
!4546 = !DISubroutineType(types: !4547)
!4547 = !{!32, !1600, !4489, !4525}
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !4493, file: !4406, line: 438, baseType: !4522, size: 64, offset: 512)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !4493, file: !4406, line: 439, baseType: !4550, size: 64, offset: 576)
!4550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4551, size: 64)
!4551 = !DISubroutineType(types: !4552)
!4552 = !{!32, !1600, !4553}
!4553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4554, size: 64)
!4554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !4406, line: 409, size: 1408, elements: !4555)
!4555 = !{!4556, !4557}
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !4554, file: !4406, line: 410, baseType: !7, size: 32)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !4554, file: !4406, line: 411, baseType: !4558, size: 1344, offset: 64)
!4558 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4559, size: 1344, elements: !1647)
!4559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !4406, line: 395, size: 448, elements: !4560)
!4560 = !{!4561, !4562, !4563, !4564, !4565, !4566, !4567, !4568, !4569, !4571}
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4559, file: !4406, line: 396, baseType: !7, size: 32)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !4559, file: !4406, line: 397, baseType: !7, size: 32, offset: 32)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !4559, file: !4406, line: 399, baseType: !7, size: 32, offset: 64)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !4559, file: !4406, line: 400, baseType: !7, size: 32, offset: 96)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !4559, file: !4406, line: 401, baseType: !7, size: 32, offset: 128)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !4559, file: !4406, line: 402, baseType: !7, size: 32, offset: 160)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !4559, file: !4406, line: 403, baseType: !7, size: 32, offset: 192)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !4559, file: !4406, line: 404, baseType: !390, size: 64, offset: 256)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !4559, file: !4406, line: 405, baseType: !4570, size: 64, offset: 320)
!4570 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !332, line: 126, baseType: !386)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !4559, file: !4406, line: 406, baseType: !4570, size: 64, offset: 384)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !4493, file: !4406, line: 440, baseType: !4501, size: 64, offset: 640)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !1601, file: !1372, line: 1426, baseType: !4574, size: 64, offset: 576)
!4574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4575, size: 64)
!4575 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4576)
!4576 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !1372, line: 49, flags: DIFlagFwdDecl)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !1601, file: !1372, line: 1427, baseType: !367, size: 64, offset: 640)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !1601, file: !1372, line: 1428, baseType: !367, size: 64, offset: 704)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !1601, file: !1372, line: 1429, baseType: !367, size: 64, offset: 768)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !1601, file: !1372, line: 1430, baseType: !1393, size: 64, offset: 832)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !1601, file: !1372, line: 1431, baseType: !1810, size: 256, offset: 896)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !1601, file: !1372, line: 1432, baseType: !32, size: 32, offset: 1152)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !1601, file: !1372, line: 1433, baseType: !438, size: 32, offset: 1184)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !1601, file: !1372, line: 1437, baseType: !4585, size: 64, offset: 1216)
!4585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4586, size: 64)
!4586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4587, size: 64)
!4587 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4588)
!4588 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !1372, line: 1437, flags: DIFlagFwdDecl)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !1601, file: !1372, line: 1449, baseType: !4590, size: 64, offset: 1280)
!4590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !1409, line: 34, size: 64, elements: !4591)
!4591 = !{!4592}
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !4590, file: !1409, line: 35, baseType: !1412, size: 64)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !1601, file: !1372, line: 1450, baseType: !339, size: 128, offset: 1344)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !1601, file: !1372, line: 1451, baseType: !4595, size: 64, offset: 1472)
!4595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4596, size: 64)
!4596 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !1372, line: 699, flags: DIFlagFwdDecl)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !1601, file: !1372, line: 1452, baseType: !3911, size: 64, offset: 1536)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !1601, file: !1372, line: 1453, baseType: !4599, size: 64, offset: 1600)
!4599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4600, size: 64)
!4600 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !1372, line: 1453, flags: DIFlagFwdDecl)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !1601, file: !1372, line: 1454, baseType: !331, size: 128, offset: 1664)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !1601, file: !1372, line: 1455, baseType: !7, size: 32, offset: 1792)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !1601, file: !1372, line: 1456, baseType: !4604, size: 2432, offset: 1856)
!4604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !4406, line: 518, size: 2432, elements: !4605)
!4605 = !{!4606, !4607, !4608, !4610, !4642}
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4604, file: !4406, line: 519, baseType: !7, size: 32)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !4604, file: !4406, line: 520, baseType: !1810, size: 256, offset: 64)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !4604, file: !4406, line: 521, baseType: !4609, size: 192, offset: 320)
!4609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1430, size: 192, elements: !1647)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4604, file: !4406, line: 522, baseType: !4611, size: 1728, offset: 512)
!4611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4612, size: 1728, elements: !1647)
!4612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !4406, line: 222, size: 576, elements: !4613)
!4613 = !{!4614, !4634, !4635, !4636, !4637, !4638, !4639, !4640, !4641}
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !4612, file: !4406, line: 223, baseType: !4615, size: 64)
!4615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4616, size: 64)
!4616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !4406, line: 443, size: 256, elements: !4617)
!4617 = !{!4618, !4619, !4632, !4633}
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !4616, file: !4406, line: 444, baseType: !32, size: 32)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !4616, file: !4406, line: 445, baseType: !4620, size: 64, offset: 64)
!4620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4621, size: 64)
!4621 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4622)
!4622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !4406, line: 310, size: 512, elements: !4623)
!4623 = !{!4624, !4625, !4626, !4627, !4628, !4629, !4630, !4631}
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !4622, file: !4406, line: 311, baseType: !1683, size: 64)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !4622, file: !4406, line: 312, baseType: !1683, size: 64, offset: 64)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !4622, file: !4406, line: 313, baseType: !1683, size: 64, offset: 128)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !4622, file: !4406, line: 314, baseType: !1683, size: 64, offset: 192)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !4622, file: !4406, line: 315, baseType: !4409, size: 64, offset: 256)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !4622, file: !4406, line: 316, baseType: !4409, size: 64, offset: 320)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !4622, file: !4406, line: 317, baseType: !4409, size: 64, offset: 384)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4622, file: !4406, line: 318, baseType: !4486, size: 64, offset: 448)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !4616, file: !4406, line: 446, baseType: !1035, size: 64, offset: 128)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !4616, file: !4406, line: 447, baseType: !4615, size: 64, offset: 192)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !4612, file: !4406, line: 224, baseType: !32, size: 32, offset: 64)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !4612, file: !4406, line: 226, baseType: !339, size: 128, offset: 128)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !4612, file: !4406, line: 227, baseType: !367, size: 64, offset: 256)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !4612, file: !4406, line: 228, baseType: !7, size: 32, offset: 320)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !4612, file: !4406, line: 229, baseType: !7, size: 32, offset: 352)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !4612, file: !4406, line: 230, baseType: !4450, size: 64, offset: 384)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !4612, file: !4406, line: 231, baseType: !4450, size: 64, offset: 448)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !4612, file: !4406, line: 232, baseType: !646, size: 64, offset: 512)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4604, file: !4406, line: 523, baseType: !4643, size: 192, offset: 2240)
!4643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4620, size: 192, elements: !1647)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !1601, file: !1372, line: 1458, baseType: !4645, size: 2112, offset: 4288)
!4645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !1372, line: 1410, size: 2112, elements: !4646)
!4646 = !{!4647, !4648, !4649}
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !4645, file: !1372, line: 1411, baseType: !32, size: 32)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !4645, file: !1372, line: 1412, baseType: !1944, size: 128, offset: 64)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !4645, file: !1372, line: 1413, baseType: !4650, size: 1920, offset: 192)
!4650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4651, size: 1920, elements: !1647)
!4651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !4652, line: 12, size: 640, elements: !4653)
!4652 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!4653 = !{!4654, !4662, !4664, !4669, !4670}
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !4651, file: !4652, line: 13, baseType: !4655, size: 320)
!4655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !4656, line: 17, size: 320, elements: !4657)
!4656 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!4657 = !{!4658, !4659, !4660, !4661}
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !4655, file: !4656, line: 18, baseType: !32, size: 32)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !4655, file: !4656, line: 19, baseType: !32, size: 32, offset: 32)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !4655, file: !4656, line: 20, baseType: !1944, size: 128, offset: 64)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !4655, file: !4656, line: 22, baseType: !354, size: 128, align: 64, offset: 192)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !4651, file: !4652, line: 14, baseType: !4663, size: 64, offset: 320)
!4663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !4651, file: !4652, line: 15, baseType: !4665, size: 64, offset: 384)
!4665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !4666, line: 16, size: 64, elements: !4667)
!4666 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!4667 = !{!4668}
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !4665, file: !4666, line: 17, baseType: !2381, size: 64)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !4651, file: !4652, line: 16, baseType: !1944, size: 128, offset: 448)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !4651, file: !4652, line: 17, baseType: !438, size: 32, offset: 576)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !1601, file: !1372, line: 1465, baseType: !646, size: 64, offset: 6400)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !1601, file: !1372, line: 1468, baseType: !1042, size: 32, offset: 6464)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !1601, file: !1372, line: 1470, baseType: !1538, size: 64, offset: 6528)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !1601, file: !1372, line: 1471, baseType: !1538, size: 64, offset: 6592)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !1601, file: !1372, line: 1473, baseType: !548, size: 32, offset: 6656)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !1601, file: !1372, line: 1474, baseType: !4677, size: 64, offset: 6720)
!4677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4678, size: 64)
!4678 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !1372, line: 603, flags: DIFlagFwdDecl)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !1601, file: !1372, line: 1477, baseType: !4680, size: 256, offset: 6784)
!4680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 256, elements: !874)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !1601, file: !1372, line: 1478, baseType: !4682, size: 128, offset: 7040)
!4682 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !4683, line: 18, baseType: !4684)
!4683 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!4684 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4683, line: 16, size: 128, elements: !4685)
!4685 = !{!4686}
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !4684, file: !4683, line: 17, baseType: !3280, size: 128)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !1601, file: !1372, line: 1480, baseType: !7, size: 32, offset: 7168)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !1601, file: !1372, line: 1481, baseType: !4689, size: 32, offset: 7200)
!4689 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !332, line: 150, baseType: !7)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !1601, file: !1372, line: 1487, baseType: !1720, size: 192, offset: 7232)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !1601, file: !1372, line: 1493, baseType: !347, size: 64, offset: 7424)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !1601, file: !1372, line: 1495, baseType: !4693, size: 64, offset: 7488)
!4693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4694, size: 64)
!4694 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4695)
!4695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !1391, line: 135, size: 1024, align: 512, elements: !4696)
!4696 = !{!4697, !4701, !4702, !4709, !4715, !4719, !4723, !4727, !4728, !4732, !4736, !4741, !4745}
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !4695, file: !1391, line: 136, baseType: !4698, size: 64)
!4698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4699, size: 64)
!4699 = !DISubroutineType(types: !4700)
!4700 = !{!32, !1393, !7}
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !4695, file: !1391, line: 137, baseType: !4698, size: 64, offset: 64)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !4695, file: !1391, line: 138, baseType: !4703, size: 64, offset: 128)
!4703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4704, size: 64)
!4704 = !DISubroutineType(types: !4705)
!4705 = !{!32, !4706, !4708}
!4706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4707, size: 64)
!4707 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1394)
!4708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1417, size: 64)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !4695, file: !1391, line: 139, baseType: !4710, size: 64, offset: 192)
!4710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4711, size: 64)
!4711 = !DISubroutineType(types: !4712)
!4712 = !{!32, !4706, !7, !347, !4713}
!4713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4714, size: 64)
!4714 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1417)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !4695, file: !1391, line: 141, baseType: !4716, size: 64, offset: 256)
!4716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4717, size: 64)
!4717 = !DISubroutineType(types: !4718)
!4718 = !{!32, !4706}
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !4695, file: !1391, line: 142, baseType: !4720, size: 64, offset: 320)
!4720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4721, size: 64)
!4721 = !DISubroutineType(types: !4722)
!4722 = !{!32, !1393}
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !4695, file: !1391, line: 143, baseType: !4724, size: 64, offset: 384)
!4724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4725, size: 64)
!4725 = !DISubroutineType(types: !4726)
!4726 = !{null, !1393}
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !4695, file: !1391, line: 144, baseType: !4724, size: 64, offset: 448)
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !4695, file: !1391, line: 145, baseType: !4729, size: 64, offset: 512)
!4729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4730, size: 64)
!4730 = !DISubroutineType(types: !4731)
!4731 = !{null, !1393, !1430}
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !4695, file: !1391, line: 146, baseType: !4733, size: 64, offset: 576)
!4733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4734, size: 64)
!4734 = !DISubroutineType(types: !4735)
!4735 = !{!1093, !1393, !1093, !32}
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !4695, file: !1391, line: 147, baseType: !4737, size: 64, offset: 640)
!4737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4738, size: 64)
!4738 = !DISubroutineType(types: !4739)
!4739 = !{!1389, !4740}
!4740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 64)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !4695, file: !1391, line: 148, baseType: !4742, size: 64, offset: 704)
!4742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4743, size: 64)
!4743 = !DISubroutineType(types: !4744)
!4744 = !{!32, !1547, !826}
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !4695, file: !1391, line: 149, baseType: !4746, size: 64, offset: 768)
!4746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4747, size: 64)
!4747 = !DISubroutineType(types: !4748)
!4748 = !{!1393, !1393, !4749}
!4749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4750, size: 64)
!4750 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1431)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !1601, file: !1372, line: 1500, baseType: !32, size: 32, offset: 7552)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !1601, file: !1372, line: 1502, baseType: !4753, size: 448, offset: 7616)
!4753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !4392, line: 60, size: 448, elements: !4754)
!4754 = !{!4755, !4760, !4761, !4762, !4763, !4764, !4765}
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !4753, file: !4392, line: 61, baseType: !4756, size: 64)
!4756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4757, size: 64)
!4757 = !DISubroutineType(types: !4758)
!4758 = !{!367, !4759, !4390}
!4759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4753, size: 64)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !4753, file: !4392, line: 63, baseType: !4756, size: 64, offset: 64)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !4753, file: !4392, line: 66, baseType: !1053, size: 64, offset: 128)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !4753, file: !4392, line: 67, baseType: !32, size: 32, offset: 192)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4753, file: !4392, line: 68, baseType: !7, size: 32, offset: 224)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4753, file: !4392, line: 71, baseType: !339, size: 128, offset: 256)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !4753, file: !4392, line: 77, baseType: !4766, size: 64, offset: 384)
!4766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 64)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !1601, file: !1372, line: 1505, baseType: !426, size: 64, offset: 8064)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !1601, file: !1372, line: 1508, baseType: !426, size: 64, offset: 8128)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !1601, file: !1372, line: 1511, baseType: !32, size: 32, offset: 8192)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !1601, file: !1372, line: 1514, baseType: !2080, size: 32, offset: 8224)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !1601, file: !1372, line: 1517, baseType: !4772, size: 64, offset: 8256)
!4772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4773, size: 64)
!4773 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2885, line: 18, flags: DIFlagFwdDecl)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !1601, file: !1372, line: 1518, baseType: !1636, size: 64, offset: 8320)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !1601, file: !1372, line: 1525, baseType: !2836, size: 64, offset: 8384)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !1601, file: !1372, line: 1532, baseType: !4777, size: 64, offset: 8448)
!4777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !4778, line: 52, size: 64, elements: !4779)
!4778 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!4779 = !{!4780}
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4777, file: !4778, line: 53, baseType: !4781, size: 64)
!4781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4782, size: 64)
!4782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !4778, line: 40, size: 256, elements: !4783)
!4783 = !{!4784, !4785, !4790}
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4782, file: !4778, line: 42, baseType: !1725)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !4782, file: !4778, line: 44, baseType: !4786, size: 192)
!4786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !4778, line: 28, size: 192, elements: !4787)
!4787 = !{!4788, !4789}
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4786, file: !4778, line: 29, baseType: !339, size: 128)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4786, file: !4778, line: 31, baseType: !1053, size: 64, offset: 128)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4782, file: !4778, line: 49, baseType: !1053, size: 64, offset: 192)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !1601, file: !1372, line: 1533, baseType: !4777, size: 64, offset: 8512)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1601, file: !1372, line: 1534, baseType: !354, size: 128, align: 64, offset: 8576)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !1601, file: !1372, line: 1535, baseType: !2884, size: 256, offset: 8704)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !1601, file: !1372, line: 1537, baseType: !1720, size: 192, offset: 8960)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !1601, file: !1372, line: 1542, baseType: !32, size: 32, offset: 9152)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !1601, file: !1372, line: 1545, baseType: !1725, offset: 9184)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !1601, file: !1372, line: 1546, baseType: !339, size: 128, offset: 9216)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !1601, file: !1372, line: 1548, baseType: !1725, offset: 9344)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !1601, file: !1372, line: 1549, baseType: !339, size: 128, offset: 9344)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !1431, file: !1372, line: 624, baseType: !1787, size: 64, offset: 256)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !1431, file: !1372, line: 631, baseType: !367, size: 64, offset: 320)
!4802 = !DIDerivedType(tag: DW_TAG_member, scope: !1431, file: !1372, line: 639, baseType: !4803, size: 32, offset: 384)
!4803 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1431, file: !1372, line: 639, size: 32, elements: !4804)
!4804 = !{!4805, !4807}
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !4803, file: !1372, line: 640, baseType: !4806, size: 32)
!4806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !4803, file: !1372, line: 641, baseType: !7, size: 32)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !1431, file: !1372, line: 643, baseType: !1513, size: 32, offset: 416)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !1431, file: !1372, line: 644, baseType: !1531, size: 64, offset: 448)
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !1431, file: !1372, line: 645, baseType: !1534, size: 128, offset: 512)
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !1431, file: !1372, line: 646, baseType: !1534, size: 128, offset: 640)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !1431, file: !1372, line: 647, baseType: !1534, size: 128, offset: 768)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !1431, file: !1372, line: 648, baseType: !1725, offset: 896)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !1431, file: !1372, line: 649, baseType: !531, size: 16, offset: 896)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !1431, file: !1372, line: 650, baseType: !849, size: 8, offset: 912)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !1431, file: !1372, line: 651, baseType: !849, size: 8, offset: 920)
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !1431, file: !1372, line: 652, baseType: !4570, size: 64, offset: 960)
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !1431, file: !1372, line: 659, baseType: !367, size: 64, offset: 1024)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !1431, file: !1372, line: 660, baseType: !1810, size: 256, offset: 1088)
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !1431, file: !1372, line: 662, baseType: !367, size: 64, offset: 1344)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !1431, file: !1372, line: 663, baseType: !367, size: 64, offset: 1408)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !1431, file: !1372, line: 665, baseType: !331, size: 128, offset: 1472)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !1431, file: !1372, line: 666, baseType: !339, size: 128, offset: 1600)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !1431, file: !1372, line: 675, baseType: !339, size: 128, offset: 1728)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !1431, file: !1372, line: 676, baseType: !339, size: 128, offset: 1856)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !1431, file: !1372, line: 677, baseType: !339, size: 128, offset: 1984)
!4827 = !DIDerivedType(tag: DW_TAG_member, scope: !1431, file: !1372, line: 678, baseType: !4828, size: 128, offset: 2112)
!4828 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1431, file: !1372, line: 678, size: 128, elements: !4829)
!4829 = !{!4830, !4831}
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !4828, file: !1372, line: 679, baseType: !1636, size: 64)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !4828, file: !1372, line: 680, baseType: !354, size: 128, align: 64)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !1431, file: !1372, line: 682, baseType: !428, size: 64, offset: 2240)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !1431, file: !1372, line: 683, baseType: !428, size: 64, offset: 2304)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1431, file: !1372, line: 684, baseType: !438, size: 32, offset: 2368)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !1431, file: !1372, line: 685, baseType: !438, size: 32, offset: 2400)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !1431, file: !1372, line: 686, baseType: !438, size: 32, offset: 2432)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !1431, file: !1372, line: 688, baseType: !438, size: 32, offset: 2464)
!4838 = !DIDerivedType(tag: DW_TAG_member, scope: !1431, file: !1372, line: 690, baseType: !4839, size: 64, offset: 2496)
!4839 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1431, file: !1372, line: 690, size: 64, elements: !4840)
!4840 = !{!4841, !5046}
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !4839, file: !1372, line: 691, baseType: !4842, size: 64)
!4842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4843, size: 64)
!4843 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4844)
!4844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !1372, line: 1822, size: 2048, elements: !4845)
!4845 = !{!4846, !4847, !4851, !4855, !4859, !4860, !4861, !4865, !4878, !4879, !4886, !4890, !4891, !4895, !4896, !4900, !4905, !4906, !4910, !4914, !5006, !5010, !5011, !5015, !5016, !5020, !5024, !5029, !5033, !5037, !5041, !5045}
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4844, file: !1372, line: 1823, baseType: !1035, size: 64)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !4844, file: !1372, line: 1824, baseType: !4848, size: 64, offset: 64)
!4848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4849, size: 64)
!4849 = !DISubroutineType(types: !4850)
!4850 = !{!1531, !1370, !1531, !32}
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4844, file: !1372, line: 1825, baseType: !4852, size: 64, offset: 128)
!4852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4853, size: 64)
!4853 = !DISubroutineType(types: !4854)
!4854 = !{!1576, !1370, !1093, !1094, !1749}
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4844, file: !1372, line: 1826, baseType: !4856, size: 64, offset: 192)
!4856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4857, size: 64)
!4857 = !DISubroutineType(types: !4858)
!4858 = !{!1576, !1370, !347, !1094, !1749}
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !4844, file: !1372, line: 1827, baseType: !1880, size: 64, offset: 256)
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !4844, file: !1372, line: 1828, baseType: !1880, size: 64, offset: 320)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !4844, file: !1372, line: 1829, baseType: !4862, size: 64, offset: 384)
!4862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4863, size: 64)
!4863 = !DISubroutineType(types: !4864)
!4864 = !{!32, !1883, !826}
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !4844, file: !1372, line: 1830, baseType: !4866, size: 64, offset: 448)
!4866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4867, size: 64)
!4867 = !DISubroutineType(types: !4868)
!4868 = !{!32, !1370, !4869}
!4869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4870, size: 64)
!4870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !1372, line: 1776, size: 128, elements: !4871)
!4871 = !{!4872, !4877}
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !4870, file: !1372, line: 1777, baseType: !4873, size: 64)
!4873 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !1372, line: 1773, baseType: !4874)
!4874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4875, size: 64)
!4875 = !DISubroutineType(types: !4876)
!4876 = !{!32, !4869, !347, !32, !1531, !386, !7}
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4870, file: !1372, line: 1778, baseType: !1531, size: 64, offset: 64)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !4844, file: !1372, line: 1831, baseType: !4866, size: 64, offset: 512)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4844, file: !1372, line: 1832, baseType: !4880, size: 64, offset: 576)
!4880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4881, size: 64)
!4881 = !DISubroutineType(types: !4882)
!4882 = !{!4883, !1370, !4884}
!4883 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !580, line: 52, baseType: !7)
!4884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4885, size: 64)
!4885 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1620, line: 27, flags: DIFlagFwdDecl)
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !4844, file: !1372, line: 1833, baseType: !4887, size: 64, offset: 640)
!4887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4888, size: 64)
!4888 = !DISubroutineType(types: !4889)
!4889 = !{!1053, !1370, !7, !367}
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4844, file: !1372, line: 1834, baseType: !4887, size: 64, offset: 704)
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4844, file: !1372, line: 1835, baseType: !4892, size: 64, offset: 768)
!4892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4893, size: 64)
!4893 = !DISubroutineType(types: !4894)
!4894 = !{!32, !1370, !2153}
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !4844, file: !1372, line: 1836, baseType: !367, size: 64, offset: 832)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4844, file: !1372, line: 1837, baseType: !4897, size: 64, offset: 896)
!4897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4898, size: 64)
!4898 = !DISubroutineType(types: !4899)
!4899 = !{!32, !1430, !1370}
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !4844, file: !1372, line: 1838, baseType: !4901, size: 64, offset: 960)
!4901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4902, size: 64)
!4902 = !DISubroutineType(types: !4903)
!4903 = !{!32, !1370, !4904}
!4904 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !1372, line: 1007, baseType: !646)
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4844, file: !1372, line: 1839, baseType: !4897, size: 64, offset: 1024)
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !4844, file: !1372, line: 1840, baseType: !4907, size: 64, offset: 1088)
!4907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4908, size: 64)
!4908 = !DISubroutineType(types: !4909)
!4909 = !{!32, !1370, !1531, !1531, !32}
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !4844, file: !1372, line: 1841, baseType: !4911, size: 64, offset: 1152)
!4911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4912, size: 64)
!4912 = !DISubroutineType(types: !4913)
!4913 = !{!32, !32, !1370, !32}
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4844, file: !1372, line: 1842, baseType: !4915, size: 64, offset: 1216)
!4915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4916, size: 64)
!4916 = !DISubroutineType(types: !4917)
!4917 = !{!32, !1370, !32, !4918}
!4918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4919, size: 64)
!4919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !1372, line: 1062, size: 1664, elements: !4920)
!4920 = !{!4921, !4922, !4923, !4924, !4925, !4926, !4927, !4928, !4929, !4930, !4931, !4932, !4933, !4934, !4935, !4936, !4937, !4938, !4951, !4982}
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !4919, file: !1372, line: 1063, baseType: !4918, size: 64)
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !4919, file: !1372, line: 1064, baseType: !339, size: 128, offset: 64)
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !4919, file: !1372, line: 1065, baseType: !331, size: 128, offset: 192)
!4924 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !4919, file: !1372, line: 1066, baseType: !339, size: 128, offset: 320)
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !4919, file: !1372, line: 1069, baseType: !339, size: 128, offset: 448)
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !4919, file: !1372, line: 1072, baseType: !4904, size: 64, offset: 576)
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !4919, file: !1372, line: 1073, baseType: !7, size: 32, offset: 640)
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !4919, file: !1372, line: 1074, baseType: !537, size: 8, offset: 672)
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !4919, file: !1372, line: 1075, baseType: !7, size: 32, offset: 704)
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !4919, file: !1372, line: 1076, baseType: !32, size: 32, offset: 736)
!4931 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !4919, file: !1372, line: 1077, baseType: !1944, size: 128, offset: 768)
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !4919, file: !1372, line: 1078, baseType: !1370, size: 64, offset: 896)
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !4919, file: !1372, line: 1079, baseType: !1531, size: 64, offset: 960)
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !4919, file: !1372, line: 1080, baseType: !1531, size: 64, offset: 1024)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !4919, file: !1372, line: 1082, baseType: !1963, size: 64, offset: 1088)
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !4919, file: !1372, line: 1084, baseType: !367, size: 64, offset: 1152)
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !4919, file: !1372, line: 1085, baseType: !367, size: 64, offset: 1216)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !4919, file: !1372, line: 1087, baseType: !4939, size: 64, offset: 1280)
!4939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4940, size: 64)
!4940 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4941)
!4941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !1372, line: 1011, size: 128, elements: !4942)
!4942 = !{!4943, !4947}
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !4941, file: !1372, line: 1012, baseType: !4944, size: 64)
!4944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4945, size: 64)
!4945 = !DISubroutineType(types: !4946)
!4946 = !{null, !4918, !4918}
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !4941, file: !1372, line: 1013, baseType: !4948, size: 64, offset: 64)
!4948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4949, size: 64)
!4949 = !DISubroutineType(types: !4950)
!4950 = !{null, !4918}
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !4919, file: !1372, line: 1088, baseType: !4952, size: 64, offset: 1344)
!4952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4953, size: 64)
!4953 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4954)
!4954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !1372, line: 1016, size: 512, elements: !4955)
!4955 = !{!4956, !4960, !4964, !4965, !4969, !4973, !4977, !4981}
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !4954, file: !1372, line: 1017, baseType: !4957, size: 64)
!4957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4958, size: 64)
!4958 = !DISubroutineType(types: !4959)
!4959 = !{!4904, !4904}
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !4954, file: !1372, line: 1018, baseType: !4961, size: 64, offset: 64)
!4961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4962, size: 64)
!4962 = !DISubroutineType(types: !4963)
!4963 = !{null, !4904}
!4964 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !4954, file: !1372, line: 1019, baseType: !4948, size: 64, offset: 128)
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !4954, file: !1372, line: 1020, baseType: !4966, size: 64, offset: 192)
!4966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4967, size: 64)
!4967 = !DISubroutineType(types: !4968)
!4968 = !{!32, !4918, !32}
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !4954, file: !1372, line: 1021, baseType: !4970, size: 64, offset: 256)
!4970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4971, size: 64)
!4971 = !DISubroutineType(types: !4972)
!4972 = !{!826, !4918}
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !4954, file: !1372, line: 1022, baseType: !4974, size: 64, offset: 320)
!4974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4975, size: 64)
!4975 = !DISubroutineType(types: !4976)
!4976 = !{!32, !4918, !32, !342}
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !4954, file: !1372, line: 1023, baseType: !4978, size: 64, offset: 384)
!4978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4979, size: 64)
!4979 = !DISubroutineType(types: !4980)
!4980 = !{null, !4918, !1857}
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !4954, file: !1372, line: 1024, baseType: !4970, size: 64, offset: 448)
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !4919, file: !1372, line: 1097, baseType: !4983, size: 256, offset: 1408)
!4983 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4919, file: !1372, line: 1089, size: 256, elements: !4984)
!4984 = !{!4985, !4994, !5000}
!4985 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !4983, file: !1372, line: 1090, baseType: !4986, size: 256)
!4986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !4987, line: 10, size: 256, elements: !4988)
!4987 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!4988 = !{!4989, !4990, !4993}
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4986, file: !4987, line: 11, baseType: !1042, size: 32)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4986, file: !4987, line: 12, baseType: !4991, size: 64, offset: 64)
!4991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4992, size: 64)
!4992 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !4987, line: 5, flags: DIFlagFwdDecl)
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4986, file: !4987, line: 13, baseType: !339, size: 128, offset: 128)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !4983, file: !1372, line: 1091, baseType: !4995, size: 64)
!4995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !4987, line: 17, size: 64, elements: !4996)
!4996 = !{!4997}
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4995, file: !4987, line: 18, baseType: !4998, size: 64)
!4998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4999, size: 64)
!4999 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !4987, line: 16, flags: DIFlagFwdDecl)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !4983, file: !1372, line: 1096, baseType: !5001, size: 192)
!5001 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4983, file: !1372, line: 1092, size: 192, elements: !5002)
!5002 = !{!5003, !5004, !5005}
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !5001, file: !1372, line: 1093, baseType: !339, size: 128)
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5001, file: !1372, line: 1094, baseType: !32, size: 32, offset: 128)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !5001, file: !1372, line: 1095, baseType: !7, size: 32, offset: 160)
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !4844, file: !1372, line: 1843, baseType: !5007, size: 64, offset: 1280)
!5007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5008, size: 64)
!5008 = !DISubroutineType(types: !5009)
!5009 = !{!1576, !1370, !1774, !32, !1094, !1749, !32}
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !4844, file: !1372, line: 1844, baseType: !2273, size: 64, offset: 1344)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !4844, file: !1372, line: 1845, baseType: !5012, size: 64, offset: 1408)
!5012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5013, size: 64)
!5013 = !DISubroutineType(types: !5014)
!5014 = !{!32, !32}
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !4844, file: !1372, line: 1846, baseType: !4915, size: 64, offset: 1472)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !4844, file: !1372, line: 1847, baseType: !5017, size: 64, offset: 1536)
!5017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5018, size: 64)
!5018 = !DISubroutineType(types: !5019)
!5019 = !{!1576, !1938, !1370, !1749, !1094, !7}
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !4844, file: !1372, line: 1848, baseType: !5021, size: 64, offset: 1600)
!5021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5022, size: 64)
!5022 = !DISubroutineType(types: !5023)
!5023 = !{!1576, !1370, !1749, !1938, !1094, !7}
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !4844, file: !1372, line: 1849, baseType: !5025, size: 64, offset: 1664)
!5025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5026, size: 64)
!5026 = !DISubroutineType(types: !5027)
!5027 = !{!32, !1370, !1053, !5028, !1857}
!5028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4918, size: 64)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !4844, file: !1372, line: 1850, baseType: !5030, size: 64, offset: 1728)
!5030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5031, size: 64)
!5031 = !DISubroutineType(types: !5032)
!5032 = !{!1053, !1370, !32, !1531, !1531}
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !4844, file: !1372, line: 1852, baseType: !5034, size: 64, offset: 1792)
!5034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5035, size: 64)
!5035 = !DISubroutineType(types: !5036)
!5036 = !{null, !1708, !1370}
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !4844, file: !1372, line: 1856, baseType: !5038, size: 64, offset: 1856)
!5038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5039, size: 64)
!5039 = !DISubroutineType(types: !5040)
!5040 = !{!1576, !1370, !1531, !1370, !1531, !1094, !7}
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !4844, file: !1372, line: 1858, baseType: !5042, size: 64, offset: 1920)
!5042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5043, size: 64)
!5043 = !DISubroutineType(types: !5044)
!5044 = !{!1531, !1370, !1531, !1370, !1531, !1531, !7}
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !4844, file: !1372, line: 1861, baseType: !4907, size: 64, offset: 1984)
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !4839, file: !1372, line: 692, baseType: !1662, size: 64)
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !1431, file: !1372, line: 694, baseType: !5048, size: 64, offset: 2560)
!5048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5049, size: 64)
!5049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !1372, line: 1100, size: 384, elements: !5050)
!5050 = !{!5051, !5052, !5053, !5054}
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !5049, file: !1372, line: 1101, baseType: !1725)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !5049, file: !1372, line: 1102, baseType: !339, size: 128)
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !5049, file: !1372, line: 1103, baseType: !339, size: 128, offset: 128)
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !5049, file: !1372, line: 1104, baseType: !339, size: 128, offset: 256)
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !1431, file: !1372, line: 695, baseType: !1788, size: 1216, align: 64, offset: 2624)
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !1431, file: !1372, line: 696, baseType: !339, size: 128, offset: 3840)
!5057 = !DIDerivedType(tag: DW_TAG_member, scope: !1431, file: !1372, line: 697, baseType: !5058, size: 64, offset: 3968)
!5058 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1431, file: !1372, line: 697, size: 64, elements: !5059)
!5059 = !{!5060, !5061, !5062, !5065, !5066}
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !5058, file: !1372, line: 698, baseType: !1938, size: 64)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !5058, file: !1372, line: 699, baseType: !4595, size: 64)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !5058, file: !1372, line: 700, baseType: !5063, size: 64)
!5063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5064, size: 64)
!5064 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !1372, line: 700, flags: DIFlagFwdDecl)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !5058, file: !1372, line: 701, baseType: !1093, size: 64)
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !5058, file: !1372, line: 702, baseType: !7, size: 32)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !1431, file: !1372, line: 705, baseType: !548, size: 32, offset: 4032)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !1431, file: !1372, line: 708, baseType: !548, size: 32, offset: 4064)
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !1431, file: !1372, line: 709, baseType: !4677, size: 64, offset: 4096)
!5070 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !1431, file: !1372, line: 720, baseType: !646, size: 64, offset: 4160)
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !1394, file: !1391, line: 98, baseType: !1086, size: 256, offset: 448)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !1394, file: !1391, line: 101, baseType: !5073, size: 32, offset: 704)
!5073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !5074, line: 25, size: 32, elements: !5075)
!5074 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!5075 = !{!5076}
!5076 = !DIDerivedType(tag: DW_TAG_member, scope: !5073, file: !5074, line: 26, baseType: !5077, size: 32)
!5077 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5073, file: !5074, line: 26, size: 32, elements: !5078)
!5078 = !{!5079}
!5079 = !DIDerivedType(tag: DW_TAG_member, scope: !5077, file: !5074, line: 30, baseType: !5080, size: 32)
!5080 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5077, file: !5074, line: 30, size: 32, elements: !5081)
!5081 = !{!5082, !5083}
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5080, file: !5074, line: 31, baseType: !1725)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5080, file: !5074, line: 32, baseType: !32, size: 32)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !1394, file: !1391, line: 102, baseType: !4693, size: 64, offset: 768)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !1394, file: !1391, line: 103, baseType: !1600, size: 64, offset: 832)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !1394, file: !1391, line: 104, baseType: !367, size: 64, offset: 896)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !1394, file: !1391, line: 105, baseType: !646, size: 64, offset: 960)
!5088 = !DIDerivedType(tag: DW_TAG_member, scope: !1394, file: !1391, line: 107, baseType: !5089, size: 128, offset: 1024)
!5089 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1394, file: !1391, line: 107, size: 128, elements: !5090)
!5090 = !{!5091, !5092}
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !5089, file: !1391, line: 108, baseType: !339, size: 128)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !5089, file: !1391, line: 109, baseType: !5093, size: 64)
!5093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 64)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !1394, file: !1391, line: 111, baseType: !339, size: 128, offset: 1152)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !1394, file: !1391, line: 112, baseType: !339, size: 128, offset: 1280)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !1394, file: !1391, line: 120, baseType: !5097, size: 128, offset: 1408)
!5097 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1394, file: !1391, line: 116, size: 128, elements: !5098)
!5098 = !{!5099, !5100, !5101}
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !5097, file: !1391, line: 117, baseType: !331, size: 128)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !5097, file: !1391, line: 118, baseType: !1408, size: 128)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !5097, file: !1391, line: 119, baseType: !354, size: 128, align: 64)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !1371, file: !1372, line: 922, baseType: !1430, size: 64, offset: 256)
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !1371, file: !1372, line: 923, baseType: !4842, size: 64, offset: 320)
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !1371, file: !1372, line: 929, baseType: !1725, offset: 384)
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !1371, file: !1372, line: 930, baseType: !5106, size: 32, offset: 384)
!5106 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !1372, line: 296, baseType: !7, size: 32, elements: !5107)
!5107 = !{!5108, !5109, !5110, !5111, !5112, !5113}
!5108 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!5109 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!5110 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!5111 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!5112 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!5113 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1371, file: !1372, line: 931, baseType: !426, size: 64, offset: 448)
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1371, file: !1372, line: 932, baseType: !7, size: 32, offset: 512)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !1371, file: !1372, line: 933, baseType: !4689, size: 32, offset: 544)
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !1371, file: !1372, line: 934, baseType: !1720, size: 192, offset: 576)
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !1371, file: !1372, line: 935, baseType: !1531, size: 64, offset: 768)
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !1371, file: !1372, line: 936, baseType: !5120, size: 192, offset: 832)
!5120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !1372, line: 885, size: 192, elements: !5121)
!5121 = !{!5122, !5123, !5124, !5132, !5133, !5134}
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5120, file: !1372, line: 886, baseType: !1967)
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !5120, file: !1372, line: 887, baseType: !2626, size: 64)
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !5120, file: !1372, line: 888, baseType: !5125, size: 32, offset: 64)
!5125 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !2628, line: 9, baseType: !7, size: 32, elements: !5126)
!5126 = !{!5127, !5128, !5129, !5130, !5131}
!5127 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!5128 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!5129 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!5130 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!5131 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !5120, file: !1372, line: 889, baseType: !1437, size: 32, offset: 96)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !5120, file: !1372, line: 889, baseType: !1437, size: 32, offset: 128)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !5120, file: !1372, line: 890, baseType: !32, size: 32, offset: 160)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !1371, file: !1372, line: 937, baseType: !2697, size: 64, offset: 1024)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !1371, file: !1372, line: 938, baseType: !5137, size: 256, offset: 1088)
!5137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !1372, line: 896, size: 256, elements: !5138)
!5138 = !{!5139, !5140, !5141, !5142, !5143, !5144}
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5137, file: !1372, line: 897, baseType: !367, size: 64)
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5137, file: !1372, line: 898, baseType: !7, size: 32, offset: 64)
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !5137, file: !1372, line: 899, baseType: !7, size: 32, offset: 96)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !5137, file: !1372, line: 902, baseType: !7, size: 32, offset: 128)
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !5137, file: !1372, line: 903, baseType: !7, size: 32, offset: 160)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !5137, file: !1372, line: 904, baseType: !1531, size: 64, offset: 192)
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !1371, file: !1372, line: 940, baseType: !386, size: 64, offset: 1344)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1371, file: !1372, line: 945, baseType: !646, size: 64, offset: 1408)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !1371, file: !1372, line: 949, baseType: !339, size: 128, offset: 1472)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !1371, file: !1372, line: 950, baseType: !339, size: 128, offset: 1600)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !1371, file: !1372, line: 952, baseType: !1787, size: 64, offset: 1728)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !1371, file: !1372, line: 953, baseType: !2080, size: 32, offset: 1792)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !1371, file: !1372, line: 954, baseType: !2080, size: 32, offset: 1824)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "map_free", scope: !1160, file: !65, line: 59, baseType: !5153, size: 64, offset: 192)
!5153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5154, size: 64)
!5154 = !DISubroutineType(types: !5155)
!5155 = !{null, !1365}
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !1160, file: !65, line: 60, baseType: !5157, size: 64, offset: 256)
!5157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5158, size: 64)
!5158 = !DISubroutineType(types: !5159)
!5159 = !{!32, !1365, !646, !646}
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "map_release_uref", scope: !1160, file: !65, line: 61, baseType: !5153, size: 64, offset: 320)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem_sys_only", scope: !1160, file: !65, line: 62, baseType: !5162, size: 64, offset: 384)
!5162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5163, size: 64)
!5163 = !DISubroutineType(types: !5164)
!5164 = !{!646, !1365, !646}
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_batch", scope: !1160, file: !65, line: 63, baseType: !5166, size: 64, offset: 448)
!5166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5167, size: 64)
!5167 = !DISubroutineType(types: !5168)
!5168 = !{!32, !1365, !5169, !1166}
!5169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5170, size: 64)
!5170 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1167)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_and_delete_batch", scope: !1160, file: !65, line: 65, baseType: !5166, size: 64, offset: 512)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_batch", scope: !1160, file: !65, line: 68, baseType: !5166, size: 64, offset: 576)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_batch", scope: !1160, file: !65, line: 70, baseType: !5166, size: 64, offset: 640)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !1160, file: !65, line: 74, baseType: !5162, size: 64, offset: 704)
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !1160, file: !65, line: 75, baseType: !5176, size: 64, offset: 768)
!5176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5177, size: 64)
!5177 = !DISubroutineType(types: !5178)
!5178 = !{!32, !1365, !646, !646, !386}
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !1160, file: !65, line: 76, baseType: !5180, size: 64, offset: 832)
!5180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5181, size: 64)
!5181 = !DISubroutineType(types: !5182)
!5182 = !{!32, !1365, !646}
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "map_push_elem", scope: !1160, file: !65, line: 77, baseType: !5184, size: 64, offset: 896)
!5184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5185, size: 64)
!5185 = !DISubroutineType(types: !5186)
!5186 = !{!32, !1365, !646, !386}
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "map_pop_elem", scope: !1160, file: !65, line: 78, baseType: !5180, size: 64, offset: 960)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "map_peek_elem", scope: !1160, file: !65, line: 79, baseType: !5180, size: 64, offset: 1024)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_get_ptr", scope: !1160, file: !65, line: 82, baseType: !5190, size: 64, offset: 1088)
!5190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5191, size: 64)
!5191 = !DISubroutineType(types: !5192)
!5192 = !{!646, !1365, !1370, !32}
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_put_ptr", scope: !1160, file: !65, line: 84, baseType: !1470, size: 64, offset: 1152)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "map_gen_lookup", scope: !1160, file: !65, line: 85, baseType: !5195, size: 64, offset: 1216)
!5195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5196, size: 64)
!5196 = !DISubroutineType(types: !5197)
!5197 = !{!32, !1365, !5198}
!5198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5199, size: 64)
!5199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_insn", file: !96, line: 65, size: 64, elements: !5200)
!5200 = !{!5201, !5202, !5203, !5204, !5205}
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !5199, file: !96, line: 66, baseType: !536, size: 8)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "dst_reg", scope: !5199, file: !96, line: 67, baseType: !536, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "src_reg", scope: !5199, file: !96, line: 68, baseType: !536, size: 4, offset: 12, flags: DIFlagBitField, extraData: i64 8)
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !5199, file: !96, line: 69, baseType: !2370, size: 16, offset: 16)
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "imm", scope: !5199, file: !96, line: 70, baseType: !997, size: 32, offset: 32)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_sys_lookup_elem", scope: !1160, file: !65, line: 86, baseType: !5207, size: 64, offset: 1280)
!5207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5208, size: 64)
!5208 = !DISubroutineType(types: !5209)
!5209 = !{!1042, !646}
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "map_seq_show_elem", scope: !1160, file: !65, line: 87, baseType: !5211, size: 64, offset: 1344)
!5211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5212, size: 64)
!5212 = !DISubroutineType(types: !5213)
!5213 = !{null, !1365, !646, !1708}
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "map_check_btf", scope: !1160, file: !65, line: 89, baseType: !5215, size: 64, offset: 1408)
!5215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5216, size: 64)
!5216 = !DISubroutineType(types: !5217)
!5217 = !{!32, !5218, !5220, !5223, !5223}
!5218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5219, size: 64)
!5219 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1155)
!5220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5221, size: 64)
!5221 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5222)
!5222 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf", file: !65, line: 32, flags: DIFlagFwdDecl)
!5223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5224, size: 64)
!5224 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5225)
!5225 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf_type", file: !65, line: 33, flags: DIFlagFwdDecl)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_track", scope: !1160, file: !65, line: 95, baseType: !5227, size: 64, offset: 1472)
!5227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5228, size: 64)
!5228 = !DISubroutineType(types: !5229)
!5229 = !{!32, !1365, !5230}
!5230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5231, size: 64)
!5231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_aux", file: !65, line: 757, size: 4928, elements: !5232)
!5232 = !{!5233, !5234, !5235, !5236, !5237, !5238, !5239, !5240, !5241, !5242, !5243, !5244, !5245, !5246, !5254, !5255, !5256, !5299, !5300, !5301, !5302, !5303, !5304, !5305, !5306, !5307, !5308, !5309, !5310, !5311, !5313, !5314, !5333, !5334, !5335, !5344, !5346, !5347, !5348, !5349, !5350, !5352, !5353, !5368, !5370, !5376, !5382, !5390, !5391, !5392, !5393, !5394, !5395, !5403, !5410}
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5231, file: !65, line: 758, baseType: !428, size: 64)
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "used_map_cnt", scope: !5231, file: !65, line: 759, baseType: !1042, size: 32, offset: 64)
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "max_ctx_offset", scope: !5231, file: !65, line: 760, baseType: !1042, size: 32, offset: 96)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "max_pkt_offset", scope: !5231, file: !65, line: 761, baseType: !1042, size: 32, offset: 128)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "max_tp_access", scope: !5231, file: !65, line: 762, baseType: !1042, size: 32, offset: 160)
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "stack_depth", scope: !5231, file: !65, line: 763, baseType: !1042, size: 32, offset: 192)
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5231, file: !65, line: 764, baseType: !1042, size: 32, offset: 224)
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "func_cnt", scope: !5231, file: !65, line: 765, baseType: !1042, size: 32, offset: 256)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "func_idx", scope: !5231, file: !65, line: 766, baseType: !1042, size: 32, offset: 288)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !5231, file: !65, line: 767, baseType: !1042, size: 32, offset: 320)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info_size", scope: !5231, file: !65, line: 768, baseType: !1042, size: 32, offset: 352)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdonly_access", scope: !5231, file: !65, line: 769, baseType: !1042, size: 32, offset: 384)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdwr_access", scope: !5231, file: !65, line: 770, baseType: !1042, size: 32, offset: 416)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info", scope: !5231, file: !65, line: 771, baseType: !5247, size: 64, offset: 448)
!5247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5248, size: 64)
!5248 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5249)
!5249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ctx_arg_aux", file: !65, line: 751, size: 96, elements: !5250)
!5250 = !{!5251, !5252, !5253}
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5249, file: !65, line: 752, baseType: !1042, size: 32)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "reg_type", scope: !5249, file: !65, line: 753, baseType: !64, size: 32, offset: 32)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !5249, file: !65, line: 754, baseType: !1042, size: 32, offset: 64)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "dst_mutex", scope: !5231, file: !65, line: 772, baseType: !1720, size: 192, offset: 512)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "dst_prog", scope: !5231, file: !65, line: 773, baseType: !1143, size: 64, offset: 704)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "dst_trampoline", scope: !5231, file: !65, line: 774, baseType: !5257, size: 64, offset: 768)
!5257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5258, size: 64)
!5258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_trampoline", file: !65, line: 586, size: 2944, elements: !5259)
!5259 = !{!5260, !5261, !5262, !5263, !5264, !5276, !5277, !5279, !5280, !5281, !5282}
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !5258, file: !65, line: 588, baseType: !331, size: 128)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !5258, file: !65, line: 590, baseType: !1720, size: 192, offset: 128)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5258, file: !65, line: 591, baseType: !623, size: 32, offset: 320)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !5258, file: !65, line: 592, baseType: !386, size: 64, offset: 384)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5258, file: !65, line: 597, baseType: !5265, size: 256, offset: 448)
!5265 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5258, file: !65, line: 593, size: 256, elements: !5266)
!5266 = !{!5267, !5274, !5275}
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !5265, file: !65, line: 594, baseType: !5268, size: 112)
!5268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "btf_func_model", file: !65, line: 509, size: 112, elements: !5269)
!5269 = !{!5270, !5271, !5272}
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "ret_size", scope: !5268, file: !65, line: 510, baseType: !849, size: 8)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "nr_args", scope: !5268, file: !65, line: 511, baseType: !849, size: 8, offset: 8)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !5268, file: !65, line: 512, baseType: !5273, size: 96, offset: 16)
!5273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !849, size: 96, elements: !4205)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !5265, file: !65, line: 595, baseType: !646, size: 64, offset: 128)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "ftrace_managed", scope: !5265, file: !65, line: 596, baseType: !826, size: 8, offset: 192)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "extension_prog", scope: !5258, file: !65, line: 602, baseType: !1143, size: 64, offset: 704)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "progs_hlist", scope: !5258, file: !65, line: 604, baseType: !5278, size: 192, offset: 768)
!5278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1636, size: 192, elements: !1647)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "progs_cnt", scope: !5258, file: !65, line: 606, baseType: !3453, size: 96, offset: 960)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !5258, file: !65, line: 608, baseType: !646, size: 64, offset: 1088)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "selector", scope: !5258, file: !65, line: 609, baseType: !386, size: 64, offset: 1152)
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !5258, file: !65, line: 610, baseType: !5283, size: 1728, offset: 1216)
!5283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ksym", file: !65, line: 569, size: 1728, elements: !5284)
!5284 = !{!5285, !5286, !5287, !5291, !5292, !5298}
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5283, file: !65, line: 570, baseType: !367, size: 64)
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !5283, file: !65, line: 571, baseType: !367, size: 64, offset: 64)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5283, file: !65, line: 572, baseType: !5288, size: 1024, offset: 128)
!5288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 1024, elements: !5289)
!5289 = !{!5290}
!5290 = !DISubrange(count: 128)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "lnode", scope: !5283, file: !65, line: 573, baseType: !339, size: 128, offset: 1152)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "tnode", scope: !5283, file: !65, line: 574, baseType: !5293, size: 384, offset: 1280)
!5293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "latch_tree_node", file: !5294, line: 40, size: 384, elements: !5295)
!5294 = !DIFile(filename: "./include/linux/rbtree_latch.h", directory: "/home/lizy2001/genbc/linux")
!5295 = !{!5296}
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5293, file: !5294, line: 41, baseType: !5297, size: 384)
!5297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !488, size: 384, elements: !2719)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !5283, file: !65, line: 575, baseType: !826, size: 8, offset: 1664)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_prog_type", scope: !5231, file: !65, line: 775, baseType: !95, size: 32, offset: 832)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_attach_type", scope: !5231, file: !65, line: 776, baseType: !129, size: 32, offset: 864)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "verifier_zext", scope: !5231, file: !65, line: 777, baseType: !826, size: 8, offset: 896)
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "offload_requested", scope: !5231, file: !65, line: 778, baseType: !826, size: 8, offset: 904)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_trace", scope: !5231, file: !65, line: 779, baseType: !826, size: 8, offset: 912)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "func_proto_unreliable", scope: !5231, file: !65, line: 780, baseType: !826, size: 8, offset: 920)
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "sleepable", scope: !5231, file: !65, line: 781, baseType: !826, size: 8, offset: 928)
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call_reachable", scope: !5231, file: !65, line: 782, baseType: !826, size: 8, offset: 936)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "trampoline_prog_type", scope: !5231, file: !65, line: 783, baseType: !170, size: 32, offset: 960)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "tramp_hlist", scope: !5231, file: !65, line: 784, baseType: !331, size: 128, offset: 1024)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_proto", scope: !5231, file: !65, line: 786, baseType: !5223, size: 64, offset: 1152)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_name", scope: !5231, file: !65, line: 788, baseType: !347, size: 64, offset: 1216)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5231, file: !65, line: 789, baseType: !5312, size: 64, offset: 1280)
!5312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 64)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "jit_data", scope: !5231, file: !65, line: 790, baseType: !646, size: 64, offset: 1344)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "poke_tab", scope: !5231, file: !65, line: 791, baseType: !5315, size: 64, offset: 1408)
!5315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5316, size: 64)
!5316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_jit_poke_descriptor", file: !65, line: 734, size: 384, elements: !5317)
!5317 = !{!5318, !5319, !5320, !5321, !5329, !5330, !5331, !5332}
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target", scope: !5316, file: !65, line: 735, baseType: !646, size: 64)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_bypass", scope: !5316, file: !65, line: 736, baseType: !646, size: 64, offset: 64)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_addr", scope: !5316, file: !65, line: 737, baseType: !646, size: 64, offset: 128)
!5321 = !DIDerivedType(tag: DW_TAG_member, scope: !5316, file: !65, line: 738, baseType: !5322, size: 128, offset: 192)
!5322 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5316, file: !65, line: 738, size: 128, elements: !5323)
!5323 = !{!5324}
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call", scope: !5322, file: !65, line: 742, baseType: !5325, size: 128)
!5325 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5322, file: !65, line: 739, size: 128, elements: !5326)
!5326 = !{!5327, !5328}
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !5325, file: !65, line: 740, baseType: !1365, size: 64)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !5325, file: !65, line: 741, baseType: !1042, size: 32, offset: 64)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target_stable", scope: !5316, file: !65, line: 744, baseType: !826, size: 8, offset: 320)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "adj_off", scope: !5316, file: !65, line: 745, baseType: !849, size: 8, offset: 328)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !5316, file: !65, line: 746, baseType: !636, size: 16, offset: 336)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "insn_idx", scope: !5316, file: !65, line: 747, baseType: !1042, size: 32, offset: 352)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "size_poke_tab", scope: !5231, file: !65, line: 792, baseType: !1042, size: 32, offset: 1472)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !5231, file: !65, line: 793, baseType: !5283, size: 1728, offset: 1536)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5231, file: !65, line: 794, baseType: !5336, size: 64, offset: 3264)
!5336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5337, size: 64)
!5337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5338)
!5338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_ops", file: !65, line: 432, size: 64, elements: !5339)
!5339 = !{!5340}
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "test_run", scope: !5338, file: !65, line: 433, baseType: !5341, size: 64)
!5341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5342, size: 64)
!5342 = !DISubroutineType(types: !5343)
!5343 = !{!32, !1143, !5169, !1166}
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps", scope: !5231, file: !65, line: 795, baseType: !5345, size: 64, offset: 3328)
!5345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1365, size: 64)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps_mutex", scope: !5231, file: !65, line: 796, baseType: !1720, size: 192, offset: 3392)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !5231, file: !65, line: 797, baseType: !1143, size: 64, offset: 3584)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !5231, file: !65, line: 798, baseType: !2008, size: 64, offset: 3648)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "load_time", scope: !5231, file: !65, line: 799, baseType: !386, size: 64, offset: 3712)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !5231, file: !65, line: 800, baseType: !5351, size: 128, offset: 3776)
!5351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1365, size: 128, elements: !2719)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5231, file: !65, line: 801, baseType: !322, size: 128, offset: 3904)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "offload", scope: !5231, file: !65, line: 805, baseType: !5354, size: 64, offset: 4032)
!5354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5355, size: 64)
!5355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_offload", file: !65, line: 478, size: 576, elements: !5356)
!5356 = !{!5357, !5358, !5359, !5362, !5363, !5364, !5365, !5366, !5367}
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !5355, file: !65, line: 479, baseType: !1143, size: 64)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !5355, file: !65, line: 480, baseType: !345, size: 64, offset: 64)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "offdev", scope: !5355, file: !65, line: 481, baseType: !5360, size: 64, offset: 128)
!5360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5361, size: 64)
!5361 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offload_dev", file: !65, line: 209, flags: DIFlagFwdDecl)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !5355, file: !65, line: 482, baseType: !646, size: 64, offset: 192)
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !5355, file: !65, line: 483, baseType: !339, size: 128, offset: 256)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "dev_state", scope: !5355, file: !65, line: 484, baseType: !826, size: 8, offset: 384)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "opt_failed", scope: !5355, file: !65, line: 485, baseType: !826, size: 8, offset: 392)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "jited_image", scope: !5355, file: !65, line: 486, baseType: !646, size: 64, offset: 448)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !5355, file: !65, line: 487, baseType: !1042, size: 32, offset: 512)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !5231, file: !65, line: 806, baseType: !5369, size: 64, offset: 4096)
!5369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5222, size: 64)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !5231, file: !65, line: 807, baseType: !5371, size: 64, offset: 4160)
!5371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5372, size: 64)
!5372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info", file: !96, line: 4963, size: 64, elements: !5373)
!5373 = !{!5374, !5375}
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !5372, file: !96, line: 4964, baseType: !548, size: 32)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !5372, file: !96, line: 4965, baseType: !548, size: 32, offset: 32)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_aux", scope: !5231, file: !65, line: 808, baseType: !5377, size: 64, offset: 4224)
!5377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5378, size: 64)
!5378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info_aux", file: !65, line: 724, size: 32, elements: !5379)
!5379 = !{!5380, !5381}
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "linkage", scope: !5378, file: !65, line: 725, baseType: !636, size: 16)
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "unreliable", scope: !5378, file: !65, line: 726, baseType: !826, size: 8, offset: 16)
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "linfo", scope: !5231, file: !65, line: 815, baseType: !5383, size: 64, offset: 4288)
!5383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5384, size: 64)
!5384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_line_info", file: !96, line: 4971, size: 128, elements: !5385)
!5385 = !{!5386, !5387, !5388, !5389}
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !5384, file: !96, line: 4972, baseType: !548, size: 32)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "file_name_off", scope: !5384, file: !96, line: 4973, baseType: !548, size: 32, offset: 32)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "line_off", scope: !5384, file: !96, line: 4974, baseType: !548, size: 32, offset: 64)
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !5384, file: !96, line: 4975, baseType: !548, size: 32, offset: 96)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "jited_linfo", scope: !5231, file: !65, line: 823, baseType: !1857, size: 64, offset: 4352)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !5231, file: !65, line: 824, baseType: !1042, size: 32, offset: 4416)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "nr_linfo", scope: !5231, file: !65, line: 825, baseType: !1042, size: 32, offset: 4448)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "linfo_idx", scope: !5231, file: !65, line: 830, baseType: !1042, size: 32, offset: 4480)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "num_exentries", scope: !5231, file: !65, line: 831, baseType: !1042, size: 32, offset: 4512)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "extable", scope: !5231, file: !65, line: 832, baseType: !5396, size: 64, offset: 4544)
!5396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5397, size: 64)
!5397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "exception_table_entry", file: !5398, line: 17, size: 96, elements: !5399)
!5398 = !DIFile(filename: "./arch/x86/include/asm/extable.h", directory: "/home/lizy2001/genbc/linux")
!5399 = !{!5400, !5401, !5402}
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !5397, file: !5398, line: 18, baseType: !32, size: 32)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !5397, file: !5398, line: 18, baseType: !32, size: 32, offset: 32)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !5397, file: !5398, line: 18, baseType: !32, size: 32, offset: 64)
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !5231, file: !65, line: 833, baseType: !5404, size: 64, offset: 4608)
!5404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5405, size: 64)
!5405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_stats", file: !65, line: 503, size: 128, align: 128, elements: !5406)
!5406 = !{!5407, !5408, !5409}
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !5405, file: !65, line: 504, baseType: !386, size: 64)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "nsecs", scope: !5405, file: !65, line: 505, baseType: !386, size: 64, offset: 64)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !5405, file: !65, line: 506, baseType: !3126, offset: 128)
!5410 = !DIDerivedType(tag: DW_TAG_member, scope: !5231, file: !65, line: 834, baseType: !5411, size: 256, offset: 4672)
!5411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5231, file: !65, line: 834, size: 256, elements: !5412)
!5412 = !{!5413, !5414}
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5411, file: !65, line: 835, baseType: !2884, size: 256)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5411, file: !65, line: 836, baseType: !354, size: 128, align: 64)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_untrack", scope: !1160, file: !65, line: 96, baseType: !5416, size: 64, offset: 1536)
!5416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5417, size: 64)
!5417 = !DISubroutineType(types: !5418)
!5418 = !{null, !1365, !5230}
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_run", scope: !1160, file: !65, line: 97, baseType: !5420, size: 64, offset: 1600)
!5420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5421, size: 64)
!5421 = !DISubroutineType(types: !5422)
!5422 = !{null, !1365, !1042, !1143, !1143}
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_addr", scope: !1160, file: !65, line: 101, baseType: !5424, size: 64, offset: 1664)
!5424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5425, size: 64)
!5425 = !DISubroutineType(types: !5426)
!5426 = !{!32, !5218, !5427, !1042}
!5427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !386, size: 64)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_meta", scope: !1160, file: !65, line: 103, baseType: !5429, size: 64, offset: 1728)
!5429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5430, size: 64)
!5430 = !DISubroutineType(types: !5431)
!5431 = !{!32, !5218, !386, !2571}
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "map_mmap", scope: !1160, file: !65, line: 105, baseType: !5433, size: 64, offset: 1792)
!5433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5434, size: 64)
!5434 = !DISubroutineType(types: !5435)
!5435 = !{!32, !1365, !2153}
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "map_poll", scope: !1160, file: !65, line: 106, baseType: !5437, size: 64, offset: 1856)
!5437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5438, size: 64)
!5438 = !DISubroutineType(types: !5439)
!5439 = !{!4883, !1365, !1370, !4884}
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_charge", scope: !1160, file: !65, line: 110, baseType: !5441, size: 64, offset: 1920)
!5441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5442, size: 64)
!5442 = !DISubroutineType(types: !5443)
!5443 = !{!32, !5444, !646, !1042}
!5444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5445, size: 64)
!5445 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage_map", file: !65, line: 38, flags: DIFlagFwdDecl)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_uncharge", scope: !1160, file: !65, line: 112, baseType: !5447, size: 64, offset: 1984)
!5447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5448, size: 64)
!5448 = !DISubroutineType(types: !5449)
!5449 = !{null, !5444, !646, !1042}
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "map_owner_storage_ptr", scope: !1160, file: !65, line: 114, baseType: !5451, size: 64, offset: 2048)
!5451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5452, size: 64)
!5452 = !DISubroutineType(types: !5453)
!5453 = !{!5454, !646}
!5454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5455, size: 64)
!5455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5456, size: 64)
!5456 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage", file: !65, line: 37, flags: DIFlagFwdDecl)
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "map_meta_equal", scope: !1160, file: !65, line: 125, baseType: !5458, size: 64, offset: 2112)
!5458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5459, size: 64)
!5459 = !DISubroutineType(types: !5460)
!5460 = !{!826, !5218, !5218}
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_name", scope: !1160, file: !65, line: 129, baseType: !5462, size: 64, offset: 2176)
!5462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !347)
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_id", scope: !1160, file: !65, line: 130, baseType: !1056, size: 64, offset: 2240)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "iter_seq_info", scope: !1160, file: !65, line: 133, baseType: !5465, size: 64, offset: 2304)
!5465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5466, size: 64)
!5466 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5467)
!5467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_seq_info", file: !65, line: 46, size: 256, elements: !5468)
!5468 = !{!5469, !5470, !5477, !5479}
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "seq_ops", scope: !5467, file: !65, line: 47, baseType: !1741, size: 64)
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "init_seq_private", scope: !5467, file: !65, line: 48, baseType: !5471, size: 64, offset: 64)
!5471 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_init_seq_priv_t", file: !65, line: 43, baseType: !5472)
!5472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5473, size: 64)
!5473 = !DISubroutineType(types: !5474)
!5474 = !{!32, !646, !5475}
!5475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5476, size: 64)
!5476 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_aux_info", file: !65, line: 36, flags: DIFlagFwdDecl)
!5477 = !DIDerivedType(tag: DW_TAG_member, name: "fini_seq_private", scope: !5467, file: !65, line: 49, baseType: !5478, size: 64, offset: 128)
!5478 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_fini_seq_priv_t", file: !65, line: 45, baseType: !1470)
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "seq_priv_size", scope: !5467, file: !65, line: 50, baseType: !1042, size: 32, offset: 192)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_meta", scope: !1155, file: !65, line: 146, baseType: !1365, size: 64, offset: 64)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !1155, file: !65, line: 150, baseType: !177, size: 32, offset: 128)
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !1155, file: !65, line: 151, baseType: !1042, size: 32, offset: 160)
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !1155, file: !65, line: 152, baseType: !1042, size: 32, offset: 192)
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !1155, file: !65, line: 153, baseType: !1042, size: 32, offset: 224)
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !1155, file: !65, line: 154, baseType: !1042, size: 32, offset: 256)
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "spin_lock_off", scope: !1155, file: !65, line: 155, baseType: !32, size: 32, offset: 288)
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1155, file: !65, line: 156, baseType: !1042, size: 32, offset: 320)
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !1155, file: !65, line: 157, baseType: !32, size: 32, offset: 352)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !1155, file: !65, line: 158, baseType: !1042, size: 32, offset: 384)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !1155, file: !65, line: 159, baseType: !1042, size: 32, offset: 416)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !1155, file: !65, line: 160, baseType: !5369, size: 64, offset: 448)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !1155, file: !65, line: 161, baseType: !5493, size: 128, offset: 512)
!5493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_memory", file: !65, line: 136, size: 128, elements: !5494)
!5494 = !{!5495, !5496}
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !5493, file: !65, line: 137, baseType: !1042, size: 32)
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !5493, file: !65, line: 138, baseType: !2008, size: 64, offset: 64)
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1155, file: !65, line: 162, baseType: !322, size: 128, offset: 640)
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !1155, file: !65, line: 163, baseType: !1042, size: 32, offset: 768)
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_spec_v1", scope: !1155, file: !65, line: 164, baseType: !826, size: 8, offset: 800)
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1155, file: !65, line: 165, baseType: !826, size: 8, offset: 808)
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !1155, file: !65, line: 171, baseType: !428, size: 64, align: 512, offset: 1024)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "usercnt", scope: !1155, file: !65, line: 172, baseType: !428, size: 64, offset: 1088)
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1155, file: !65, line: 173, baseType: !2884, size: 256, offset: 1152)
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_mutex", scope: !1155, file: !65, line: 174, baseType: !1720, size: 192, offset: 1408)
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "writecnt", scope: !1155, file: !65, line: 175, baseType: !386, size: 64, offset: 1600)
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !1152, file: !65, line: 224, baseType: !345, size: 64, offset: 2048)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ops", scope: !1152, file: !65, line: 225, baseType: !5508, size: 64, offset: 2112)
!5508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5509, size: 64)
!5509 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5510)
!5510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_dev_ops", file: !65, line: 212, size: 256, elements: !5511)
!5511 = !{!5512, !5516, !5517, !5521}
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !5510, file: !65, line: 213, baseType: !5513, size: 64)
!5513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5514, size: 64)
!5514 = !DISubroutineType(types: !5515)
!5515 = !{!32, !1151, !646, !646}
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !5510, file: !65, line: 215, baseType: !5513, size: 64, offset: 64)
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !5510, file: !65, line: 217, baseType: !5518, size: 64, offset: 128)
!5518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5519, size: 64)
!5519 = !DISubroutineType(types: !5520)
!5520 = !{!32, !1151, !646, !646, !386}
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !5510, file: !65, line: 219, baseType: !5522, size: 64, offset: 192)
!5522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5523, size: 64)
!5523 = !DISubroutineType(types: !5524)
!5524 = !{!32, !1151, !646}
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !1152, file: !65, line: 226, baseType: !646, size: 64, offset: 2176)
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !1152, file: !65, line: 227, baseType: !339, size: 128, offset: 2240)
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "xsk", scope: !1136, file: !31, line: 911, baseType: !5528, size: 128)
!5528 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1136, file: !31, line: 908, size: 128, elements: !5529)
!5529 = !{!5530, !5533}
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !5528, file: !31, line: 909, baseType: !5531, size: 64)
!5531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5532, size: 64)
!5532 = !DICompositeType(tag: DW_TAG_structure_type, name: "xsk_buff_pool", file: !31, line: 909, flags: DIFlagFwdDecl)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "queue_id", scope: !5528, file: !31, line: 910, baseType: !636, size: 16, offset: 64)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xdp_xmit", scope: !453, file: !31, line: 1481, baseType: !5535, size: 64, offset: 4096)
!5535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5536, size: 64)
!5536 = !DISubroutineType(types: !5537)
!5537 = !{!32, !345, !32, !5538, !1042}
!5538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5539, size: 64)
!5539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5540, size: 64)
!5540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_frame", file: !5541, line: 94, size: 256, elements: !5542)
!5541 = !DIFile(filename: "./include/net/xdp.h", directory: "/home/lizy2001/genbc/linux")
!5542 = !{!5543, !5544, !5545, !5546, !5547, !5548, !5553}
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5540, file: !5541, line: 95, baseType: !646, size: 64)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5540, file: !5541, line: 96, baseType: !636, size: 16, offset: 64)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "headroom", scope: !5540, file: !5541, line: 97, baseType: !636, size: 16, offset: 80)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "metasize", scope: !5540, file: !5541, line: 98, baseType: !1042, size: 8, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "frame_sz", scope: !5540, file: !5541, line: 99, baseType: !1042, size: 24, offset: 104, flags: DIFlagBitField, extraData: i64 96)
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !5540, file: !5541, line: 103, baseType: !5549, size: 64, offset: 128)
!5549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_mem_info", file: !5541, line: 50, size: 64, elements: !5550)
!5550 = !{!5551, !5552}
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5549, file: !5541, line: 51, baseType: !1042, size: 32)
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5549, file: !5541, line: 52, baseType: !1042, size: 32, offset: 32)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "dev_rx", scope: !5540, file: !5541, line: 104, baseType: !345, size: 64, offset: 192)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xsk_wakeup", scope: !453, file: !31, line: 1484, baseType: !5555, size: 64, offset: 4160)
!5555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5556, size: 64)
!5556 = !DISubroutineType(types: !5557)
!5557 = !{!32, !345, !1042, !1042}
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_devlink_port", scope: !453, file: !31, line: 1486, baseType: !5559, size: 64, offset: 4224)
!5559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5560, size: 64)
!5560 = !DISubroutineType(types: !5561)
!5561 = !{!5562, !345}
!5562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5563, size: 64)
!5563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port", file: !5564, line: 119, size: 2176, elements: !5565)
!5564 = !DIFile(filename: "./include/net/devlink.h", directory: "/home/lizy2001/genbc/linux")
!5565 = !{!5566, !5567, !5568, !5569, !6559, !6560, !6561, !6562, !6563, !6564, !6565, !6594, !6595, !6596, !6603, !6604}
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5563, file: !5564, line: 120, baseType: !339, size: 128)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "param_list", scope: !5563, file: !5564, line: 121, baseType: !339, size: 128, offset: 128)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "region_list", scope: !5563, file: !5564, line: 122, baseType: !339, size: 128, offset: 256)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "devlink", scope: !5563, file: !5564, line: 123, baseType: !5570, size: 64, offset: 384)
!5570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5571, size: 64)
!5571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink", file: !5564, line: 33, size: 2816, elements: !5572)
!5572 = !{!5573, !5574, !5575, !5576, !5577, !5578, !5579, !5580, !5581, !5582, !5604, !5605, !5606, !5607, !5801, !5802, !5808, !6548, !6553, !6554, !6555, !6556, !6557}
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5571, file: !5564, line: 34, baseType: !339, size: 128)
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "port_list", scope: !5571, file: !5564, line: 35, baseType: !339, size: 128, offset: 128)
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "sb_list", scope: !5571, file: !5564, line: 36, baseType: !339, size: 128, offset: 256)
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "dpipe_table_list", scope: !5571, file: !5564, line: 37, baseType: !339, size: 128, offset: 384)
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "resource_list", scope: !5571, file: !5564, line: 38, baseType: !339, size: 128, offset: 512)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "param_list", scope: !5571, file: !5564, line: 39, baseType: !339, size: 128, offset: 640)
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "region_list", scope: !5571, file: !5564, line: 40, baseType: !339, size: 128, offset: 768)
!5580 = !DIDerivedType(tag: DW_TAG_member, name: "reporter_list", scope: !5571, file: !5564, line: 41, baseType: !339, size: 128, offset: 896)
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "reporters_lock", scope: !5571, file: !5564, line: 42, baseType: !1720, size: 192, offset: 1024)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "dpipe_headers", scope: !5571, file: !5564, line: 43, baseType: !5583, size: 64, offset: 1216)
!5583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5584, size: 64)
!5584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_dpipe_headers", file: !5564, line: 320, size: 128, elements: !5585)
!5585 = !{!5586, !5603}
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "headers", scope: !5584, file: !5564, line: 321, baseType: !5587, size: 64)
!5587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5588, size: 64)
!5588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5589, size: 64)
!5589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_dpipe_header", file: !5564, line: 170, size: 256, elements: !5590)
!5590 = !{!5591, !5592, !5593, !5601, !5602}
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5589, file: !5564, line: 171, baseType: !347, size: 64)
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5589, file: !5564, line: 172, baseType: !7, size: 32, offset: 64)
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "fields", scope: !5589, file: !5564, line: 173, baseType: !5594, size: 64, offset: 128)
!5594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5595, size: 64)
!5595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_dpipe_field", file: !5564, line: 154, size: 192, elements: !5596)
!5596 = !{!5597, !5598, !5599, !5600}
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5595, file: !5564, line: 155, baseType: !347, size: 64)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5595, file: !5564, line: 156, baseType: !7, size: 32, offset: 64)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "bitwidth", scope: !5595, file: !5564, line: 157, baseType: !7, size: 32, offset: 96)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "mapping_type", scope: !5595, file: !5564, line: 158, baseType: !208, size: 32, offset: 128)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "fields_count", scope: !5589, file: !5564, line: 174, baseType: !7, size: 32, offset: 192)
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "global", scope: !5589, file: !5564, line: 175, baseType: !826, size: 8, offset: 224)
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "headers_count", scope: !5584, file: !5564, line: 322, baseType: !7, size: 32, offset: 64)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "trap_list", scope: !5571, file: !5564, line: 44, baseType: !339, size: 128, offset: 1280)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "trap_group_list", scope: !5571, file: !5564, line: 45, baseType: !339, size: 128, offset: 1408)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_list", scope: !5571, file: !5564, line: 46, baseType: !339, size: 128, offset: 1536)
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5571, file: !5564, line: 47, baseType: !5608, size: 64, offset: 1664)
!5608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5609, size: 64)
!5609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5610)
!5610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_ops", file: !5564, line: 1159, size: 2432, elements: !5611)
!5611 = !{!5612, !5613, !5614, !5615, !5619, !5623, !5627, !5631, !5635, !5646, !5650, !5654, !5658, !5663, !5667, !5671, !5672, !5676, !5680, !5684, !5688, !5692, !5696, !5701, !5705, !5711, !5721, !5736, !5740, !5744, !5756, !5771, !5775, !5779, !5783, !5787, !5791, !5795}
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "supported_flash_update_params", scope: !5610, file: !5564, line: 1165, baseType: !1042, size: 32)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "reload_actions", scope: !5610, file: !5564, line: 1166, baseType: !367, size: 64, offset: 64)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "reload_limits", scope: !5610, file: !5564, line: 1167, baseType: !367, size: 64, offset: 128)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "reload_down", scope: !5610, file: !5564, line: 1168, baseType: !5616, size: 64, offset: 192)
!5616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5617, size: 64)
!5617 = !DISubroutineType(types: !5618)
!5618 = !{!32, !5570, !826, !213, !220, !941}
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "reload_up", scope: !5610, file: !5564, line: 1172, baseType: !5620, size: 64, offset: 256)
!5620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5621, size: 64)
!5621 = !DISubroutineType(types: !5622)
!5622 = !{!32, !5570, !213, !220, !2571, !941}
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "port_type_set", scope: !5610, file: !5564, line: 1175, baseType: !5624, size: 64, offset: 320)
!5624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5625, size: 64)
!5625 = !DISubroutineType(types: !5626)
!5626 = !{!32, !5562, !226}
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "port_split", scope: !5610, file: !5564, line: 1177, baseType: !5628, size: 64, offset: 384)
!5628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5629, size: 64)
!5629 = !DISubroutineType(types: !5630)
!5630 = !{!32, !5570, !7, !7, !941}
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "port_unsplit", scope: !5610, file: !5564, line: 1179, baseType: !5632, size: 64, offset: 448)
!5632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5633, size: 64)
!5633 = !DISubroutineType(types: !5634)
!5634 = !{!32, !5570, !7, !941}
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "sb_pool_get", scope: !5610, file: !5564, line: 1181, baseType: !5636, size: 64, offset: 512)
!5636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5637, size: 64)
!5637 = !DISubroutineType(types: !5638)
!5638 = !{!32, !5570, !7, !636, !5639}
!5639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5640, size: 64)
!5640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_sb_pool_info", file: !5564, line: 140, size: 128, elements: !5641)
!5641 = !{!5642, !5643, !5644, !5645}
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "pool_type", scope: !5640, file: !5564, line: 141, baseType: !232, size: 32)
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5640, file: !5564, line: 142, baseType: !1042, size: 32, offset: 32)
!5644 = !DIDerivedType(tag: DW_TAG_member, name: "threshold_type", scope: !5640, file: !5564, line: 143, baseType: !236, size: 32, offset: 64)
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "cell_size", scope: !5640, file: !5564, line: 144, baseType: !1042, size: 32, offset: 96)
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "sb_pool_set", scope: !5610, file: !5564, line: 1184, baseType: !5647, size: 64, offset: 576)
!5647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5648, size: 64)
!5648 = !DISubroutineType(types: !5649)
!5649 = !{!32, !5570, !7, !636, !1042, !236, !941}
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "sb_port_pool_get", scope: !5610, file: !5564, line: 1188, baseType: !5651, size: 64, offset: 640)
!5651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5652, size: 64)
!5652 = !DISubroutineType(types: !5653)
!5653 = !{!32, !5562, !7, !636, !2571}
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "sb_port_pool_set", scope: !5610, file: !5564, line: 1191, baseType: !5655, size: 64, offset: 704)
!5655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5656, size: 64)
!5656 = !DISubroutineType(types: !5657)
!5657 = !{!32, !5562, !7, !636, !1042, !941}
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "sb_tc_pool_bind_get", scope: !5610, file: !5564, line: 1194, baseType: !5659, size: 64, offset: 768)
!5659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5660, size: 64)
!5660 = !DISubroutineType(types: !5661)
!5661 = !{!32, !5562, !7, !636, !232, !5662, !2571}
!5662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 64)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "sb_tc_pool_bind_set", scope: !5610, file: !5564, line: 1199, baseType: !5664, size: 64, offset: 832)
!5664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5665, size: 64)
!5665 = !DISubroutineType(types: !5666)
!5666 = !{!32, !5562, !7, !636, !232, !636, !1042, !941}
!5667 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_snapshot", scope: !5610, file: !5564, line: 1205, baseType: !5668, size: 64, offset: 896)
!5668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5669, size: 64)
!5669 = !DISubroutineType(types: !5670)
!5670 = !{!32, !5570, !7}
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_max_clear", scope: !5610, file: !5564, line: 1207, baseType: !5668, size: 64, offset: 960)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_port_pool_get", scope: !5610, file: !5564, line: 1209, baseType: !5673, size: 64, offset: 1024)
!5673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5674, size: 64)
!5674 = !DISubroutineType(types: !5675)
!5675 = !{!32, !5562, !7, !636, !2571, !2571}
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_tc_port_bind_get", scope: !5610, file: !5564, line: 1212, baseType: !5677, size: 64, offset: 1088)
!5677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5678, size: 64)
!5678 = !DISubroutineType(types: !5679)
!5679 = !{!32, !5562, !7, !636, !232, !2571, !2571}
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_mode_get", scope: !5610, file: !5564, line: 1218, baseType: !5681, size: 64, offset: 1152)
!5681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5682, size: 64)
!5682 = !DISubroutineType(types: !5683)
!5683 = !{!32, !5570, !5662}
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_mode_set", scope: !5610, file: !5564, line: 1219, baseType: !5685, size: 64, offset: 1216)
!5685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5686, size: 64)
!5686 = !DISubroutineType(types: !5687)
!5687 = !{!32, !5570, !636, !941}
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_inline_mode_get", scope: !5610, file: !5564, line: 1221, baseType: !5689, size: 64, offset: 1280)
!5689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5690, size: 64)
!5690 = !DISubroutineType(types: !5691)
!5691 = !{!32, !5570, !848}
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_inline_mode_set", scope: !5610, file: !5564, line: 1222, baseType: !5693, size: 64, offset: 1344)
!5693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5694, size: 64)
!5694 = !DISubroutineType(types: !5695)
!5695 = !{!32, !5570, !849, !941}
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_encap_mode_get", scope: !5610, file: !5564, line: 1224, baseType: !5697, size: 64, offset: 1408)
!5697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5698, size: 64)
!5698 = !DISubroutineType(types: !5699)
!5699 = !{!32, !5570, !5700}
!5700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64)
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_encap_mode_set", scope: !5610, file: !5564, line: 1226, baseType: !5702, size: 64, offset: 1472)
!5702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5703, size: 64)
!5703 = !DISubroutineType(types: !5704)
!5704 = !{!32, !5570, !240, !941}
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "info_get", scope: !5610, file: !5564, line: 1229, baseType: !5706, size: 64, offset: 1536)
!5706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5707, size: 64)
!5707 = !DISubroutineType(types: !5708)
!5708 = !{!32, !5570, !5709, !941}
!5709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5710, size: 64)
!5710 = !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_info_req", file: !5564, line: 586, flags: DIFlagFwdDecl)
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "flash_update", scope: !5610, file: !5564, line: 1238, baseType: !5712, size: 64, offset: 1600)
!5712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5713, size: 64)
!5713 = !DISubroutineType(types: !5714)
!5714 = !{!32, !5570, !5715, !941}
!5715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5716, size: 64)
!5716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_flash_update_params", file: !5564, line: 576, size: 192, elements: !5717)
!5717 = !{!5718, !5719, !5720}
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "file_name", scope: !5716, file: !5564, line: 577, baseType: !347, size: 64)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "component", scope: !5716, file: !5564, line: 578, baseType: !347, size: 64, offset: 64)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "overwrite_mask", scope: !5716, file: !5564, line: 579, baseType: !1042, size: 32, offset: 128)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "trap_init", scope: !5610, file: !5564, line: 1249, baseType: !5722, size: 64, offset: 1664)
!5722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5723, size: 64)
!5723 = !DISubroutineType(types: !5724)
!5724 = !{!32, !5570, !5725, !646}
!5725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5726, size: 64)
!5726 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5727)
!5727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_trap", file: !5564, line: 733, size: 256, elements: !5728)
!5728 = !{!5729, !5730, !5731, !5732, !5733, !5734, !5735}
!5729 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5727, file: !5564, line: 734, baseType: !244, size: 32)
!5730 = !DIDerivedType(tag: DW_TAG_member, name: "init_action", scope: !5727, file: !5564, line: 735, baseType: !249, size: 32, offset: 32)
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "generic", scope: !5727, file: !5564, line: 736, baseType: !826, size: 8, offset: 64)
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5727, file: !5564, line: 737, baseType: !636, size: 16, offset: 80)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5727, file: !5564, line: 738, baseType: !347, size: 64, offset: 128)
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "init_group_id", scope: !5727, file: !5564, line: 739, baseType: !636, size: 16, offset: 192)
!5735 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_cap", scope: !5727, file: !5564, line: 740, baseType: !1042, size: 32, offset: 224)
!5736 = !DIDerivedType(tag: DW_TAG_member, name: "trap_fini", scope: !5610, file: !5564, line: 1257, baseType: !5737, size: 64, offset: 1728)
!5737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5738, size: 64)
!5738 = !DISubroutineType(types: !5739)
!5739 = !{null, !5570, !5725, !646}
!5740 = !DIDerivedType(tag: DW_TAG_member, name: "trap_action_set", scope: !5610, file: !5564, line: 1262, baseType: !5741, size: 64, offset: 1792)
!5741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5742, size: 64)
!5742 = !DISubroutineType(types: !5743)
!5743 = !{!32, !5570, !5725, !249, !941}
!5744 = !DIDerivedType(tag: DW_TAG_member, name: "trap_group_init", scope: !5610, file: !5564, line: 1272, baseType: !5745, size: 64, offset: 1856)
!5745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5746, size: 64)
!5746 = !DISubroutineType(types: !5747)
!5747 = !{!32, !5570, !5748}
!5748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5749, size: 64)
!5749 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5750)
!5750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_trap_group", file: !5564, line: 710, size: 128, elements: !5751)
!5751 = !{!5752, !5753, !5754, !5755}
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5750, file: !5564, line: 711, baseType: !347, size: 64)
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5750, file: !5564, line: 712, baseType: !636, size: 16, offset: 64)
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "generic", scope: !5750, file: !5564, line: 713, baseType: !826, size: 8, offset: 80)
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "init_policer_id", scope: !5750, file: !5564, line: 714, baseType: !1042, size: 32, offset: 96)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "trap_group_set", scope: !5610, file: !5564, line: 1280, baseType: !5757, size: 64, offset: 1920)
!5757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5758, size: 64)
!5758 = !DISubroutineType(types: !5759)
!5759 = !{!32, !5570, !5748, !5760, !941}
!5760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5761, size: 64)
!5761 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5762)
!5762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_trap_policer", file: !5564, line: 690, size: 448, elements: !5763)
!5763 = !{!5764, !5765, !5766, !5767, !5768, !5769, !5770}
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5762, file: !5564, line: 691, baseType: !1042, size: 32)
!5765 = !DIDerivedType(tag: DW_TAG_member, name: "init_rate", scope: !5762, file: !5564, line: 692, baseType: !386, size: 64, offset: 64)
!5766 = !DIDerivedType(tag: DW_TAG_member, name: "init_burst", scope: !5762, file: !5564, line: 693, baseType: !386, size: 64, offset: 128)
!5767 = !DIDerivedType(tag: DW_TAG_member, name: "max_rate", scope: !5762, file: !5564, line: 694, baseType: !386, size: 64, offset: 192)
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "min_rate", scope: !5762, file: !5564, line: 695, baseType: !386, size: 64, offset: 256)
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "max_burst", scope: !5762, file: !5564, line: 696, baseType: !386, size: 64, offset: 320)
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "min_burst", scope: !5762, file: !5564, line: 697, baseType: !386, size: 64, offset: 384)
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "trap_group_action_set", scope: !5610, file: !5564, line: 1290, baseType: !5772, size: 64, offset: 1984)
!5772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5773, size: 64)
!5773 = !DISubroutineType(types: !5774)
!5774 = !{!32, !5570, !5748, !249, !941}
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_init", scope: !5610, file: !5564, line: 1300, baseType: !5776, size: 64, offset: 2048)
!5776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5777, size: 64)
!5777 = !DISubroutineType(types: !5778)
!5778 = !{!32, !5570, !5760}
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_fini", scope: !5610, file: !5564, line: 1308, baseType: !5780, size: 64, offset: 2112)
!5780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5781, size: 64)
!5781 = !DISubroutineType(types: !5782)
!5782 = !{null, !5570, !5760}
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_set", scope: !5610, file: !5564, line: 1313, baseType: !5784, size: 64, offset: 2176)
!5784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5785, size: 64)
!5785 = !DISubroutineType(types: !5786)
!5786 = !{!32, !5570, !5760, !386, !386, !941}
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_counter_get", scope: !5610, file: !5564, line: 1323, baseType: !5788, size: 64, offset: 2240)
!5788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5789, size: 64)
!5789 = !DISubroutineType(types: !5790)
!5790 = !{!32, !5570, !5760, !5427}
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "port_function_hw_addr_get", scope: !5610, file: !5564, line: 1335, baseType: !5792, size: 64, offset: 2304)
!5792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5793, size: 64)
!5793 = !DISubroutineType(types: !5794)
!5794 = !{!32, !5570, !5562, !848, !1056, !941}
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "port_function_hw_addr_set", scope: !5610, file: !5564, line: 1345, baseType: !5796, size: 64, offset: 2368)
!5796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5797, size: 64)
!5797 = !DISubroutineType(types: !5798)
!5798 = !{!32, !5570, !5562, !5799, !32, !941}
!5799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5800, size: 64)
!5800 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !849)
!5801 = !DIDerivedType(tag: DW_TAG_member, name: "snapshot_ids", scope: !5571, file: !5564, line: 48, baseType: !1792, size: 128, offset: 1728)
!5802 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !5571, file: !5564, line: 49, baseType: !5803, size: 384, offset: 1856)
!5803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_dev_stats", file: !5564, line: 26, size: 384, elements: !5804)
!5804 = !{!5805, !5807}
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "reload_stats", scope: !5803, file: !5564, line: 27, baseType: !5806, size: 192)
!5806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1042, size: 192, elements: !1054)
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "remote_reload_stats", scope: !5803, file: !5564, line: 28, baseType: !5806, size: 192, offset: 192)
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5571, file: !5564, line: 50, baseType: !5809, size: 64, offset: 2240)
!5809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5810, size: 64)
!5810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !5811, line: 461, size: 5568, elements: !5812)
!5811 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!5812 = !{!5813, !6093, !6094, !6097, !6098, !6150, !6242, !6243, !6244, !6245, !6246, !6261, !6368, !6381, !6384, !6385, !6389, !6390, !6391, !6392, !6396, !6402, !6403, !6406, !6410, !6500, !6501, !6502, !6503, !6504, !6536, !6537, !6538, !6541, !6544, !6545, !6546, !6547}
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5810, file: !5811, line: 462, baseType: !5814, size: 512)
!5814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !5815, line: 64, size: 512, elements: !5816)
!5815 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!5816 = !{!5817, !5818, !5819, !5821, !5861, !5962, !6083, !6088, !6089, !6090, !6091, !6092}
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5814, file: !5815, line: 65, baseType: !347, size: 64)
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !5814, file: !5815, line: 66, baseType: !339, size: 128, offset: 64)
!5819 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5814, file: !5815, line: 67, baseType: !5820, size: 64, offset: 192)
!5820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5814, size: 64)
!5821 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !5814, file: !5815, line: 68, baseType: !5822, size: 64, offset: 256)
!5822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5823, size: 64)
!5823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !5815, line: 192, size: 704, elements: !5824)
!5824 = !{!5825, !5826, !5827, !5828}
!5825 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5823, file: !5815, line: 193, baseType: !339, size: 128)
!5826 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !5823, file: !5815, line: 194, baseType: !1725, offset: 128)
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5823, file: !5815, line: 195, baseType: !5814, size: 512, offset: 128)
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !5823, file: !5815, line: 196, baseType: !5829, size: 64, offset: 640)
!5829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5830, size: 64)
!5830 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5831)
!5831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !5815, line: 156, size: 192, elements: !5832)
!5832 = !{!5833, !5838, !5843}
!5833 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !5831, file: !5815, line: 157, baseType: !5834, size: 64)
!5834 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5835)
!5835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5836, size: 64)
!5836 = !DISubroutineType(types: !5837)
!5837 = !{!32, !5822, !5820}
!5838 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5831, file: !5815, line: 158, baseType: !5839, size: 64, offset: 64)
!5839 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5840)
!5840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5841, size: 64)
!5841 = !DISubroutineType(types: !5842)
!5842 = !{!347, !5822, !5820}
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !5831, file: !5815, line: 159, baseType: !5844, size: 64, offset: 128)
!5844 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5845)
!5845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5846, size: 64)
!5846 = !DISubroutineType(types: !5847)
!5847 = !{!32, !5822, !5820, !5848}
!5848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5849, size: 64)
!5849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !5815, line: 148, size: 20736, elements: !5850)
!5850 = !{!5851, !5853, !5855, !5856, !5860}
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !5849, file: !5815, line: 149, baseType: !5852, size: 192)
!5852 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1093, size: 192, elements: !1647)
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !5849, file: !5815, line: 150, baseType: !5854, size: 4096, offset: 192)
!5854 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1093, size: 4096, elements: !3867)
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !5849, file: !5815, line: 151, baseType: !32, size: 32, offset: 4288)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !5849, file: !5815, line: 152, baseType: !5857, size: 16384, offset: 4320)
!5857 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 16384, elements: !5858)
!5858 = !{!5859}
!5859 = !DISubrange(count: 2048)
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !5849, file: !5815, line: 153, baseType: !32, size: 32, offset: 20704)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !5814, file: !5815, line: 69, baseType: !5862, size: 64, offset: 320)
!5862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5863, size: 64)
!5863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !5815, line: 138, size: 448, elements: !5864)
!5864 = !{!5865, !5869, !5888, !5890, !5923, !5954, !5958}
!5865 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5863, file: !5815, line: 139, baseType: !5866, size: 64)
!5866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5867, size: 64)
!5867 = !DISubroutineType(types: !5868)
!5868 = !{null, !5820}
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !5863, file: !5815, line: 140, baseType: !5870, size: 64, offset: 64)
!5870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5871, size: 64)
!5871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5872)
!5872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !5873, line: 230, size: 128, elements: !5874)
!5873 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!5874 = !{!5875, !5884}
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !5872, file: !5873, line: 231, baseType: !5876, size: 64)
!5876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5877, size: 64)
!5877 = !DISubroutineType(types: !5878)
!5878 = !{!1576, !5820, !5879, !1093}
!5879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5880, size: 64)
!5880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !5873, line: 30, size: 128, elements: !5881)
!5881 = !{!5882, !5883}
!5882 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5880, file: !5873, line: 31, baseType: !347, size: 64)
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5880, file: !5873, line: 32, baseType: !1434, size: 16, offset: 64)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !5872, file: !5873, line: 232, baseType: !5885, size: 64, offset: 64)
!5885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5886, size: 64)
!5886 = !DISubroutineType(types: !5887)
!5887 = !{!1576, !5820, !5879, !347, !1094}
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !5863, file: !5815, line: 141, baseType: !5889, size: 64, offset: 128)
!5889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5879, size: 64)
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !5863, file: !5815, line: 142, baseType: !5891, size: 64, offset: 192)
!5891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5892, size: 64)
!5892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5893, size: 64)
!5893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5894)
!5894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !5873, line: 84, size: 320, elements: !5895)
!5895 = !{!5896, !5897, !5901, !5920, !5921}
!5896 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5894, file: !5873, line: 85, baseType: !347, size: 64)
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !5894, file: !5873, line: 86, baseType: !5898, size: 64, offset: 64)
!5898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5899, size: 64)
!5899 = !DISubroutineType(types: !5900)
!5900 = !{!1434, !5820, !5879, !32}
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !5894, file: !5873, line: 88, baseType: !5902, size: 64, offset: 128)
!5902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5903, size: 64)
!5903 = !DISubroutineType(types: !5904)
!5904 = !{!1434, !5820, !5905, !32}
!5905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5906, size: 64)
!5906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !5873, line: 168, size: 448, elements: !5907)
!5907 = !{!5908, !5909, !5910, !5911, !5915, !5916}
!5908 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5906, file: !5873, line: 169, baseType: !5880, size: 128)
!5909 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5906, file: !5873, line: 170, baseType: !1094, size: 64, offset: 128)
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !5906, file: !5873, line: 171, baseType: !646, size: 64, offset: 192)
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !5906, file: !5873, line: 172, baseType: !5912, size: 64, offset: 256)
!5912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5913, size: 64)
!5913 = !DISubroutineType(types: !5914)
!5914 = !{!1576, !1370, !5820, !5905, !1093, !1531, !1094}
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !5906, file: !5873, line: 174, baseType: !5912, size: 64, offset: 320)
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !5906, file: !5873, line: 176, baseType: !5917, size: 64, offset: 384)
!5917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5918, size: 64)
!5918 = !DISubroutineType(types: !5919)
!5919 = !{!32, !1370, !5820, !5905, !2153}
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !5894, file: !5873, line: 90, baseType: !5889, size: 64, offset: 192)
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !5894, file: !5873, line: 91, baseType: !5922, size: 64, offset: 256)
!5922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5905, size: 64)
!5923 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !5863, file: !5815, line: 143, baseType: !5924, size: 64, offset: 256)
!5924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5925, size: 64)
!5925 = !DISubroutineType(types: !5926)
!5926 = !{!5927, !5820}
!5927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5928, size: 64)
!5928 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5929)
!5929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !502, line: 39, size: 384, elements: !5930)
!5930 = !{!5931, !5937, !5941, !5945, !5949, !5953}
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5929, file: !502, line: 40, baseType: !5932, size: 32)
!5932 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !502, line: 26, baseType: !7, size: 32, elements: !5933)
!5933 = !{!5934, !5935, !5936}
!5934 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!5935 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!5936 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!5937 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !5929, file: !502, line: 41, baseType: !5938, size: 64, offset: 64)
!5938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5939, size: 64)
!5939 = !DISubroutineType(types: !5940)
!5940 = !{!826}
!5941 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !5929, file: !502, line: 42, baseType: !5942, size: 64, offset: 128)
!5942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5943, size: 64)
!5943 = !DISubroutineType(types: !5944)
!5944 = !{!646}
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !5929, file: !502, line: 43, baseType: !5946, size: 64, offset: 192)
!5946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5947, size: 64)
!5947 = !DISubroutineType(types: !5948)
!5948 = !{!3313, !500}
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !5929, file: !502, line: 44, baseType: !5950, size: 64, offset: 256)
!5950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5951, size: 64)
!5951 = !DISubroutineType(types: !5952)
!5952 = !{!3313}
!5953 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !5929, file: !502, line: 45, baseType: !1470, size: 64, offset: 320)
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !5863, file: !5815, line: 144, baseType: !5955, size: 64, offset: 320)
!5955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5956, size: 64)
!5956 = !DISubroutineType(types: !5957)
!5957 = !{!3313, !5820}
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !5863, file: !5815, line: 145, baseType: !5959, size: 64, offset: 384)
!5959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5960, size: 64)
!5960 = !DISubroutineType(types: !5961)
!5961 = !{null, !5820, !2959, !2960}
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !5814, file: !5815, line: 70, baseType: !5963, size: 64, offset: 384)
!5963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5964, size: 64)
!5964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !1620, line: 123, size: 1024, elements: !5965)
!5965 = !{!5966, !5967, !5968, !5969, !5970, !5971, !5972, !5973, !6076, !6077, !6078, !6079, !6080}
!5966 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5964, file: !1620, line: 124, baseType: !438, size: 32)
!5967 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !5964, file: !1620, line: 125, baseType: !438, size: 32, offset: 32)
!5968 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5964, file: !1620, line: 135, baseType: !5963, size: 64, offset: 64)
!5969 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5964, file: !1620, line: 136, baseType: !347, size: 64, offset: 128)
!5970 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !5964, file: !1620, line: 138, baseType: !488, size: 192, align: 64, offset: 192)
!5971 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !5964, file: !1620, line: 140, baseType: !3313, size: 64, offset: 384)
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !5964, file: !1620, line: 141, baseType: !7, size: 32, offset: 448)
!5973 = !DIDerivedType(tag: DW_TAG_member, scope: !5964, file: !1620, line: 142, baseType: !5974, size: 256, offset: 512)
!5974 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5964, file: !1620, line: 142, size: 256, elements: !5975)
!5975 = !{!5976, !6016, !6020}
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !5974, file: !1620, line: 143, baseType: !5977, size: 192)
!5977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !1620, line: 91, size: 192, elements: !5978)
!5978 = !{!5979, !5980, !5981}
!5979 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !5977, file: !1620, line: 92, baseType: !367, size: 64)
!5980 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5977, file: !1620, line: 94, baseType: !1805, size: 64, offset: 64)
!5981 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !5977, file: !1620, line: 100, baseType: !5982, size: 64, offset: 128)
!5982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5983, size: 64)
!5983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !1620, line: 180, size: 704, elements: !5984)
!5984 = !{!5985, !5986, !5987, !5988, !5989, !5990, !6014, !6015}
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !5983, file: !1620, line: 182, baseType: !5963, size: 64)
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5983, file: !1620, line: 183, baseType: !7, size: 32, offset: 64)
!5987 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !5983, file: !1620, line: 186, baseType: !3056, size: 192, offset: 128)
!5988 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !5983, file: !1620, line: 187, baseType: !1042, size: 32, offset: 320)
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !5983, file: !1620, line: 188, baseType: !1042, size: 32, offset: 352)
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !5983, file: !1620, line: 189, baseType: !5991, size: 64, offset: 384)
!5991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5992, size: 64)
!5992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !1620, line: 168, size: 320, elements: !5993)
!5993 = !{!5994, !5998, !6002, !6006, !6010}
!5994 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !5992, file: !1620, line: 169, baseType: !5995, size: 64)
!5995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5996, size: 64)
!5996 = !DISubroutineType(types: !5997)
!5997 = !{!32, !1708, !5982}
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !5992, file: !1620, line: 171, baseType: !5999, size: 64, offset: 64)
!5999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6000, size: 64)
!6000 = !DISubroutineType(types: !6001)
!6001 = !{!32, !5963, !347, !1434}
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !5992, file: !1620, line: 173, baseType: !6003, size: 64, offset: 128)
!6003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6004, size: 64)
!6004 = !DISubroutineType(types: !6005)
!6005 = !{!32, !5963}
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !5992, file: !1620, line: 174, baseType: !6007, size: 64, offset: 192)
!6007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6008, size: 64)
!6008 = !DISubroutineType(types: !6009)
!6009 = !{!32, !5963, !5963, !347}
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !5992, file: !1620, line: 176, baseType: !6011, size: 64, offset: 256)
!6011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6012, size: 64)
!6012 = !DISubroutineType(types: !6013)
!6013 = !{!32, !1708, !5963, !5982}
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !5983, file: !1620, line: 192, baseType: !339, size: 128, offset: 448)
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !5983, file: !1620, line: 194, baseType: !1944, size: 128, offset: 576)
!6016 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !5974, file: !1620, line: 144, baseType: !6017, size: 64)
!6017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !1620, line: 103, size: 64, elements: !6018)
!6018 = !{!6019}
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !6017, file: !1620, line: 104, baseType: !5963, size: 64)
!6020 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5974, file: !1620, line: 145, baseType: !6021, size: 256)
!6021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !1620, line: 107, size: 256, elements: !6022)
!6022 = !{!6023, !6071, !6074, !6075}
!6023 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6021, file: !1620, line: 108, baseType: !6024, size: 64)
!6024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6025, size: 64)
!6025 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6026)
!6026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !1620, line: 217, size: 768, elements: !6027)
!6027 = !{!6028, !6048, !6052, !6053, !6054, !6055, !6056, !6060, !6061, !6062, !6063, !6067}
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !6026, file: !1620, line: 222, baseType: !6029, size: 64)
!6029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6030, size: 64)
!6030 = !DISubroutineType(types: !6031)
!6031 = !{!32, !6032}
!6032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6033, size: 64)
!6033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !1620, line: 197, size: 1088, elements: !6034)
!6034 = !{!6035, !6036, !6037, !6038, !6039, !6040, !6041, !6042, !6043, !6044, !6045, !6046, !6047}
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !6033, file: !1620, line: 199, baseType: !5963, size: 64)
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !6033, file: !1620, line: 200, baseType: !1370, size: 64, offset: 64)
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !6033, file: !1620, line: 201, baseType: !1708, size: 64, offset: 128)
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !6033, file: !1620, line: 202, baseType: !646, size: 64, offset: 192)
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !6033, file: !1620, line: 205, baseType: !1720, size: 192, offset: 256)
!6040 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !6033, file: !1620, line: 206, baseType: !1720, size: 192, offset: 448)
!6041 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !6033, file: !1620, line: 207, baseType: !32, size: 32, offset: 640)
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6033, file: !1620, line: 208, baseType: !339, size: 128, offset: 704)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !6033, file: !1620, line: 209, baseType: !1093, size: 64, offset: 832)
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !6033, file: !1620, line: 211, baseType: !1094, size: 64, offset: 896)
!6045 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !6033, file: !1620, line: 212, baseType: !826, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!6046 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !6033, file: !1620, line: 213, baseType: !826, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !6033, file: !1620, line: 214, baseType: !2181, size: 64, offset: 1024)
!6048 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6026, file: !1620, line: 223, baseType: !6049, size: 64, offset: 64)
!6049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6050, size: 64)
!6050 = !DISubroutineType(types: !6051)
!6051 = !{null, !6032}
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !6026, file: !1620, line: 236, baseType: !1759, size: 64, offset: 128)
!6053 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !6026, file: !1620, line: 238, baseType: !1746, size: 64, offset: 192)
!6054 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !6026, file: !1620, line: 239, baseType: !1755, size: 64, offset: 256)
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !6026, file: !1620, line: 240, baseType: !1751, size: 64, offset: 320)
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !6026, file: !1620, line: 242, baseType: !6057, size: 64, offset: 384)
!6057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6058, size: 64)
!6058 = !DISubroutineType(types: !6059)
!6059 = !{!1576, !6032, !1093, !1094, !1531}
!6060 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !6026, file: !1620, line: 252, baseType: !1094, size: 64, offset: 448)
!6061 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !6026, file: !1620, line: 259, baseType: !826, size: 8, offset: 512)
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !6026, file: !1620, line: 260, baseType: !6057, size: 64, offset: 576)
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !6026, file: !1620, line: 263, baseType: !6064, size: 64, offset: 640)
!6064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6065, size: 64)
!6065 = !DISubroutineType(types: !6066)
!6066 = !{!4883, !6032, !4884}
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !6026, file: !1620, line: 266, baseType: !6068, size: 64, offset: 704)
!6068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6069, size: 64)
!6069 = !DISubroutineType(types: !6070)
!6070 = !{!32, !6032, !2153}
!6071 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !6021, file: !1620, line: 109, baseType: !6072, size: 64, offset: 64)
!6072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6073, size: 64)
!6073 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !1620, line: 31, flags: DIFlagFwdDecl)
!6074 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6021, file: !1620, line: 110, baseType: !1531, size: 64, offset: 128)
!6075 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !6021, file: !1620, line: 111, baseType: !5963, size: 64, offset: 192)
!6076 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !5964, file: !1620, line: 148, baseType: !646, size: 64, offset: 768)
!6077 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5964, file: !1620, line: 154, baseType: !386, size: 64, offset: 832)
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5964, file: !1620, line: 156, baseType: !531, size: 16, offset: 896)
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5964, file: !1620, line: 157, baseType: !1434, size: 16, offset: 912)
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !5964, file: !1620, line: 158, baseType: !6081, size: 64, offset: 960)
!6081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6082, size: 64)
!6082 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !1620, line: 32, flags: DIFlagFwdDecl)
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !5814, file: !5815, line: 71, baseType: !6084, size: 32, offset: 448)
!6084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !6085, line: 19, size: 32, elements: !6086)
!6085 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!6086 = !{!6087}
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !6084, file: !6085, line: 20, baseType: !623, size: 32)
!6088 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !5814, file: !5815, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !5814, file: !5815, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !5814, file: !5815, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !5814, file: !5815, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !5814, file: !5815, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5810, file: !5811, line: 463, baseType: !5809, size: 64, offset: 512)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5810, file: !5811, line: 465, baseType: !6095, size: 64, offset: 576)
!6095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6096, size: 64)
!6096 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !5811, line: 36, flags: DIFlagFwdDecl)
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !5810, file: !5811, line: 467, baseType: !347, size: 64, offset: 640)
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5810, file: !5811, line: 468, baseType: !6099, size: 64, offset: 704)
!6099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6100, size: 64)
!6100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6101)
!6101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !5811, line: 87, size: 384, elements: !6102)
!6102 = !{!6103, !6104, !6105, !6109, !6114, !6118}
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6101, file: !5811, line: 88, baseType: !347, size: 64)
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !6101, file: !5811, line: 89, baseType: !5891, size: 64, offset: 64)
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !6101, file: !5811, line: 90, baseType: !6106, size: 64, offset: 128)
!6106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6107, size: 64)
!6107 = !DISubroutineType(types: !6108)
!6108 = !{!32, !5809, !5848}
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !6101, file: !5811, line: 91, baseType: !6110, size: 64, offset: 192)
!6110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6111, size: 64)
!6111 = !DISubroutineType(types: !6112)
!6112 = !{!1093, !5809, !6113, !2959, !2960}
!6113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1434, size: 64)
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6101, file: !5811, line: 93, baseType: !6115, size: 64, offset: 256)
!6115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6116, size: 64)
!6116 = !DISubroutineType(types: !6117)
!6117 = !{null, !5809}
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6101, file: !5811, line: 95, baseType: !6119, size: 64, offset: 320)
!6119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6120, size: 64)
!6120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6121)
!6121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !6122, line: 278, size: 1472, elements: !6123)
!6122 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!6123 = !{!6124, !6128, !6129, !6130, !6131, !6132, !6133, !6134, !6135, !6136, !6137, !6138, !6139, !6140, !6141, !6142, !6143, !6144, !6145, !6146, !6147, !6148, !6149}
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !6121, file: !6122, line: 279, baseType: !6125, size: 64)
!6125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6126, size: 64)
!6126 = !DISubroutineType(types: !6127)
!6127 = !{!32, !5809}
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !6121, file: !6122, line: 280, baseType: !6115, size: 64, offset: 64)
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6121, file: !6122, line: 281, baseType: !6125, size: 64, offset: 128)
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6121, file: !6122, line: 282, baseType: !6125, size: 64, offset: 192)
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !6121, file: !6122, line: 283, baseType: !6125, size: 64, offset: 256)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !6121, file: !6122, line: 284, baseType: !6125, size: 64, offset: 320)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !6121, file: !6122, line: 285, baseType: !6125, size: 64, offset: 384)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !6121, file: !6122, line: 286, baseType: !6125, size: 64, offset: 448)
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !6121, file: !6122, line: 287, baseType: !6125, size: 64, offset: 512)
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !6121, file: !6122, line: 288, baseType: !6125, size: 64, offset: 576)
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !6121, file: !6122, line: 289, baseType: !6125, size: 64, offset: 640)
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !6121, file: !6122, line: 290, baseType: !6125, size: 64, offset: 704)
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !6121, file: !6122, line: 291, baseType: !6125, size: 64, offset: 768)
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !6121, file: !6122, line: 292, baseType: !6125, size: 64, offset: 832)
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !6121, file: !6122, line: 293, baseType: !6125, size: 64, offset: 896)
!6142 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !6121, file: !6122, line: 294, baseType: !6125, size: 64, offset: 960)
!6143 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !6121, file: !6122, line: 295, baseType: !6125, size: 64, offset: 1024)
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !6121, file: !6122, line: 296, baseType: !6125, size: 64, offset: 1088)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !6121, file: !6122, line: 297, baseType: !6125, size: 64, offset: 1152)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !6121, file: !6122, line: 298, baseType: !6125, size: 64, offset: 1216)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !6121, file: !6122, line: 299, baseType: !6125, size: 64, offset: 1280)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !6121, file: !6122, line: 300, baseType: !6125, size: 64, offset: 1344)
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !6121, file: !6122, line: 301, baseType: !6125, size: 64, offset: 1408)
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !5810, file: !5811, line: 470, baseType: !6151, size: 64, offset: 768)
!6151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6152, size: 64)
!6152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !6153, line: 82, size: 1408, elements: !6154)
!6153 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!6154 = !{!6155, !6156, !6157, !6158, !6159, !6160, !6161, !6221, !6222, !6223, !6224, !6225, !6226, !6227, !6228, !6229, !6230, !6231, !6232, !6233, !6237, !6240, !6241}
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6152, file: !6153, line: 83, baseType: !347, size: 64)
!6156 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !6152, file: !6153, line: 84, baseType: !347, size: 64, offset: 64)
!6157 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !6152, file: !6153, line: 85, baseType: !5809, size: 64, offset: 128)
!6158 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !6152, file: !6153, line: 86, baseType: !5891, size: 64, offset: 192)
!6159 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !6152, file: !6153, line: 87, baseType: !5891, size: 64, offset: 256)
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !6152, file: !6153, line: 88, baseType: !5891, size: 64, offset: 320)
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !6152, file: !6153, line: 90, baseType: !6162, size: 64, offset: 384)
!6162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6163, size: 64)
!6163 = !DISubroutineType(types: !6164)
!6164 = !{!32, !5809, !6165}
!6165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6166, size: 64)
!6166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !6167, line: 95, size: 1152, elements: !6168)
!6167 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!6168 = !{!6169, !6170, !6171, !6172, !6173, !6174, !6180, !6190, !6201, !6202, !6203, !6204, !6205, !6213, !6214, !6215, !6216, !6217, !6218}
!6169 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6166, file: !6167, line: 96, baseType: !347, size: 64)
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !6166, file: !6167, line: 97, baseType: !6151, size: 64, offset: 64)
!6171 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6166, file: !6167, line: 99, baseType: !1035, size: 64, offset: 128)
!6172 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !6166, file: !6167, line: 100, baseType: !347, size: 64, offset: 192)
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !6166, file: !6167, line: 102, baseType: !826, size: 8, offset: 256)
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !6166, file: !6167, line: 103, baseType: !6175, size: 32, offset: 288)
!6175 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !6167, line: 44, baseType: !7, size: 32, elements: !6176)
!6176 = !{!6177, !6178, !6179}
!6177 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!6178 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!6179 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !6166, file: !6167, line: 105, baseType: !6181, size: 64, offset: 320)
!6181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6182, size: 64)
!6182 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6183)
!6183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !6184, line: 262, size: 1600, elements: !6185)
!6184 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!6185 = !{!6186, !6187, !6188, !6189}
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6183, file: !6184, line: 263, baseType: !4680, size: 256)
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6183, file: !6184, line: 264, baseType: !4680, size: 256, offset: 256)
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !6183, file: !6184, line: 265, baseType: !5288, size: 1024, offset: 512)
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6183, file: !6184, line: 266, baseType: !3313, size: 64, offset: 1536)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !6166, file: !6167, line: 106, baseType: !6191, size: 64, offset: 384)
!6191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6192, size: 64)
!6192 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6193)
!6193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !6184, line: 210, size: 256, elements: !6194)
!6194 = !{!6195, !6197, !6199, !6200}
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6193, file: !6184, line: 211, baseType: !6196, size: 72)
!6196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !536, size: 72, elements: !3142)
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !6193, file: !6184, line: 212, baseType: !6198, size: 64, offset: 128)
!6198 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !6184, line: 14, baseType: !367)
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !6193, file: !6184, line: 213, baseType: !548, size: 32, offset: 192)
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !6193, file: !6184, line: 214, baseType: !548, size: 32, offset: 224)
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !6166, file: !6167, line: 108, baseType: !6125, size: 64, offset: 448)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !6166, file: !6167, line: 109, baseType: !6115, size: 64, offset: 512)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !6166, file: !6167, line: 110, baseType: !6125, size: 64, offset: 576)
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !6166, file: !6167, line: 111, baseType: !6115, size: 64, offset: 640)
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6166, file: !6167, line: 112, baseType: !6206, size: 64, offset: 704)
!6206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6207, size: 64)
!6207 = !DISubroutineType(types: !6208)
!6208 = !{!32, !5809, !6209}
!6209 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !6122, line: 52, baseType: !6210)
!6210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !6122, line: 50, size: 32, elements: !6211)
!6211 = !{!6212}
!6212 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !6210, file: !6122, line: 51, baseType: !32, size: 32)
!6213 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6166, file: !6167, line: 113, baseType: !6125, size: 64, offset: 768)
!6214 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !6166, file: !6167, line: 114, baseType: !5891, size: 64, offset: 832)
!6215 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !6166, file: !6167, line: 115, baseType: !5891, size: 64, offset: 896)
!6216 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6166, file: !6167, line: 117, baseType: !6119, size: 64, offset: 960)
!6217 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !6166, file: !6167, line: 118, baseType: !6115, size: 64, offset: 1024)
!6218 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6166, file: !6167, line: 120, baseType: !6219, size: 64, offset: 1088)
!6219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6220, size: 64)
!6220 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !6167, line: 120, flags: DIFlagFwdDecl)
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !6152, file: !6153, line: 91, baseType: !6106, size: 64, offset: 448)
!6222 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !6152, file: !6153, line: 92, baseType: !6125, size: 64, offset: 512)
!6223 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !6152, file: !6153, line: 93, baseType: !6115, size: 64, offset: 576)
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !6152, file: !6153, line: 94, baseType: !6125, size: 64, offset: 640)
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !6152, file: !6153, line: 95, baseType: !6115, size: 64, offset: 704)
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !6152, file: !6153, line: 97, baseType: !6125, size: 64, offset: 768)
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !6152, file: !6153, line: 98, baseType: !6125, size: 64, offset: 832)
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6152, file: !6153, line: 100, baseType: !6206, size: 64, offset: 896)
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6152, file: !6153, line: 101, baseType: !6125, size: 64, offset: 960)
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !6152, file: !6153, line: 103, baseType: !6125, size: 64, offset: 1024)
!6231 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !6152, file: !6153, line: 105, baseType: !6125, size: 64, offset: 1088)
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6152, file: !6153, line: 107, baseType: !6119, size: 64, offset: 1152)
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !6152, file: !6153, line: 109, baseType: !6234, size: 64, offset: 1216)
!6234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6235, size: 64)
!6235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6236)
!6236 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !6153, line: 109, flags: DIFlagFwdDecl)
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6152, file: !6153, line: 111, baseType: !6238, size: 64, offset: 1280)
!6238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6239, size: 64)
!6239 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !6153, line: 111, flags: DIFlagFwdDecl)
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !6152, file: !6153, line: 112, baseType: !1640, offset: 1344)
!6241 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !6152, file: !6153, line: 114, baseType: !826, size: 8, offset: 1344)
!6242 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !5810, file: !5811, line: 471, baseType: !6165, size: 64, offset: 832)
!6243 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !5810, file: !5811, line: 473, baseType: !646, size: 64, offset: 896)
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !5810, file: !5811, line: 475, baseType: !646, size: 64, offset: 960)
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !5810, file: !5811, line: 480, baseType: !1720, size: 192, offset: 1024)
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !5810, file: !5811, line: 484, baseType: !6247, size: 576, offset: 1216)
!6247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !5811, line: 361, size: 576, elements: !6248)
!6248 = !{!6249, !6250, !6251, !6252, !6253, !6254}
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !6247, file: !5811, line: 362, baseType: !339, size: 128)
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !6247, file: !5811, line: 363, baseType: !339, size: 128, offset: 128)
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !6247, file: !5811, line: 364, baseType: !339, size: 128, offset: 256)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !6247, file: !5811, line: 365, baseType: !339, size: 128, offset: 384)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !6247, file: !5811, line: 366, baseType: !826, size: 8, offset: 512)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !6247, file: !5811, line: 367, baseType: !6255, size: 32, offset: 544)
!6255 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !5811, line: 343, baseType: !7, size: 32, elements: !6256)
!6256 = !{!6257, !6258, !6259, !6260}
!6257 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!6258 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!6259 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!6260 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !5810, file: !5811, line: 485, baseType: !6262, size: 2304, offset: 1792)
!6262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !6122, line: 565, size: 2304, elements: !6263)
!6263 = !{!6264, !6265, !6266, !6267, !6268, !6269, !6270, !6271, !6272, !6273, !6274, !6275, !6276, !6277, !6278, !6279, !6306, !6307, !6308, !6309, !6310, !6311, !6312, !6313, !6314, !6315, !6316, !6317, !6318, !6319, !6320, !6321, !6322, !6323, !6324, !6325, !6326, !6327, !6328, !6329, !6330, !6338, !6345, !6346, !6347, !6348, !6349, !6350, !6351, !6361, !6365}
!6264 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !6262, file: !6122, line: 566, baseType: !6209, size: 32)
!6265 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !6262, file: !6122, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !6262, file: !6122, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !6262, file: !6122, line: 569, baseType: !826, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !6262, file: !6122, line: 570, baseType: !826, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !6262, file: !6122, line: 571, baseType: !826, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!6270 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !6262, file: !6122, line: 572, baseType: !826, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !6262, file: !6122, line: 573, baseType: !826, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !6262, file: !6122, line: 574, baseType: !826, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!6273 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !6262, file: !6122, line: 575, baseType: !826, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!6274 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !6262, file: !6122, line: 576, baseType: !826, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !6262, file: !6122, line: 577, baseType: !1042, size: 32, offset: 64)
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6262, file: !6122, line: 578, baseType: !1725, offset: 96)
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6262, file: !6122, line: 580, baseType: !339, size: 128, offset: 128)
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !6262, file: !6122, line: 581, baseType: !2652, size: 192, offset: 256)
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !6262, file: !6122, line: 582, baseType: !6280, size: 64, offset: 448)
!6280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6281, size: 64)
!6281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !6282, line: 43, size: 1472, elements: !6283)
!6282 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!6283 = !{!6284, !6285, !6286, !6287, !6288, !6291, !6292, !6293, !6294, !6295, !6296, !6297, !6298, !6299, !6300, !6301, !6302, !6303, !6304, !6305}
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6281, file: !6282, line: 44, baseType: !347, size: 64)
!6285 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6281, file: !6282, line: 45, baseType: !32, size: 32, offset: 64)
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6281, file: !6282, line: 46, baseType: !339, size: 128, offset: 128)
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6281, file: !6282, line: 47, baseType: !1725, offset: 256)
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !6281, file: !6282, line: 48, baseType: !6289, size: 64, offset: 256)
!6289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6290, size: 64)
!6290 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !6122, line: 533, flags: DIFlagFwdDecl)
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !6281, file: !6282, line: 49, baseType: !3290, size: 320, offset: 320)
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !6281, file: !6282, line: 50, baseType: !367, size: 64, offset: 640)
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !6281, file: !6282, line: 51, baseType: !508, size: 64, offset: 704)
!6294 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !6281, file: !6282, line: 52, baseType: !508, size: 64, offset: 768)
!6295 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !6281, file: !6282, line: 53, baseType: !508, size: 64, offset: 832)
!6296 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !6281, file: !6282, line: 54, baseType: !508, size: 64, offset: 896)
!6297 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !6281, file: !6282, line: 55, baseType: !508, size: 64, offset: 960)
!6298 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !6281, file: !6282, line: 56, baseType: !367, size: 64, offset: 1024)
!6299 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !6281, file: !6282, line: 57, baseType: !367, size: 64, offset: 1088)
!6300 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !6281, file: !6282, line: 58, baseType: !367, size: 64, offset: 1152)
!6301 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !6281, file: !6282, line: 59, baseType: !367, size: 64, offset: 1216)
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !6281, file: !6282, line: 60, baseType: !367, size: 64, offset: 1280)
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6281, file: !6282, line: 61, baseType: !5809, size: 64, offset: 1344)
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !6281, file: !6282, line: 62, baseType: !826, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !6281, file: !6282, line: 63, baseType: !826, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !6262, file: !6122, line: 583, baseType: !826, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !6262, file: !6122, line: 584, baseType: !826, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !6262, file: !6122, line: 585, baseType: !826, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !6262, file: !6122, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !6262, file: !6122, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !6262, file: !6122, line: 592, baseType: !2452, size: 512, offset: 576)
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !6262, file: !6122, line: 593, baseType: !386, size: 64, offset: 1088)
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !6262, file: !6122, line: 594, baseType: !2884, size: 256, offset: 1152)
!6314 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !6262, file: !6122, line: 595, baseType: !1944, size: 128, offset: 1408)
!6315 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !6262, file: !6122, line: 596, baseType: !6289, size: 64, offset: 1536)
!6316 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !6262, file: !6122, line: 597, baseType: !438, size: 32, offset: 1600)
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !6262, file: !6122, line: 598, baseType: !438, size: 32, offset: 1632)
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !6262, file: !6122, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !6262, file: !6122, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!6320 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !6262, file: !6122, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!6321 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !6262, file: !6122, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!6322 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !6262, file: !6122, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!6323 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !6262, file: !6122, line: 604, baseType: !826, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!6324 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !6262, file: !6122, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!6325 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !6262, file: !6122, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !6262, file: !6122, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!6327 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !6262, file: !6122, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!6328 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !6262, file: !6122, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!6329 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !6262, file: !6122, line: 610, baseType: !7, size: 32, offset: 1696)
!6330 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !6262, file: !6122, line: 611, baseType: !6331, size: 32, offset: 1728)
!6331 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !6122, line: 524, baseType: !7, size: 32, elements: !6332)
!6332 = !{!6333, !6334, !6335, !6336, !6337}
!6333 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!6334 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!6335 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!6336 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!6337 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!6338 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !6262, file: !6122, line: 612, baseType: !6339, size: 32, offset: 1760)
!6339 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !6122, line: 502, baseType: !7, size: 32, elements: !6340)
!6340 = !{!6341, !6342, !6343, !6344}
!6341 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!6342 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!6343 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!6344 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !6262, file: !6122, line: 613, baseType: !32, size: 32, offset: 1792)
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !6262, file: !6122, line: 614, baseType: !32, size: 32, offset: 1824)
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !6262, file: !6122, line: 615, baseType: !386, size: 64, offset: 1856)
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !6262, file: !6122, line: 616, baseType: !386, size: 64, offset: 1920)
!6349 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !6262, file: !6122, line: 617, baseType: !386, size: 64, offset: 1984)
!6350 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !6262, file: !6122, line: 618, baseType: !386, size: 64, offset: 2048)
!6351 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !6262, file: !6122, line: 620, baseType: !6352, size: 64, offset: 2112)
!6352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6353, size: 64)
!6353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !6122, line: 536, size: 256, elements: !6354)
!6354 = !{!6355, !6356, !6357, !6358}
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6353, file: !6122, line: 537, baseType: !1725)
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !6353, file: !6122, line: 538, baseType: !7, size: 32)
!6357 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !6353, file: !6122, line: 540, baseType: !339, size: 128, offset: 64)
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !6353, file: !6122, line: 543, baseType: !6359, size: 64, offset: 192)
!6359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6360, size: 64)
!6360 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !6122, line: 534, flags: DIFlagFwdDecl)
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !6262, file: !6122, line: 621, baseType: !6362, size: 64, offset: 2176)
!6362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6363, size: 64)
!6363 = !DISubroutineType(types: !6364)
!6364 = !{null, !5809, !2600}
!6365 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !6262, file: !6122, line: 622, baseType: !6366, size: 64, offset: 2240)
!6366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6367, size: 64)
!6367 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !6122, line: 622, flags: DIFlagFwdDecl)
!6368 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !5810, file: !5811, line: 486, baseType: !6369, size: 64, offset: 4096)
!6369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6370, size: 64)
!6370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !6122, line: 642, size: 1792, elements: !6371)
!6371 = !{!6372, !6373, !6374, !6378, !6379, !6380}
!6372 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6370, file: !6122, line: 643, baseType: !6121, size: 1472)
!6373 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6370, file: !6122, line: 644, baseType: !6125, size: 64, offset: 1472)
!6374 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !6370, file: !6122, line: 645, baseType: !6375, size: 64, offset: 1536)
!6375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6376, size: 64)
!6376 = !DISubroutineType(types: !6377)
!6377 = !{null, !5809, !826}
!6378 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !6370, file: !6122, line: 646, baseType: !6125, size: 64, offset: 1600)
!6379 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !6370, file: !6122, line: 647, baseType: !6115, size: 64, offset: 1664)
!6380 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !6370, file: !6122, line: 648, baseType: !6115, size: 64, offset: 1728)
!6381 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !5810, file: !5811, line: 493, baseType: !6382, size: 64, offset: 4160)
!6382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6383, size: 64)
!6383 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !5811, line: 493, flags: DIFlagFwdDecl)
!6384 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !5810, file: !5811, line: 499, baseType: !339, size: 128, offset: 4224)
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !5810, file: !5811, line: 502, baseType: !6386, size: 64, offset: 4352)
!6386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6387, size: 64)
!6387 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6388)
!6388 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !5811, line: 502, flags: DIFlagFwdDecl)
!6389 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !5810, file: !5811, line: 504, baseType: !5427, size: 64, offset: 4416)
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !5810, file: !5811, line: 505, baseType: !386, size: 64, offset: 4480)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !5810, file: !5811, line: 510, baseType: !386, size: 64, offset: 4544)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !5810, file: !5811, line: 511, baseType: !6393, size: 64, offset: 4608)
!6393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6394, size: 64)
!6394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6395)
!6395 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !5811, line: 511, flags: DIFlagFwdDecl)
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !5810, file: !5811, line: 513, baseType: !6397, size: 64, offset: 4672)
!6397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6398, size: 64)
!6398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !5811, line: 288, size: 128, elements: !6399)
!6399 = !{!6400, !6401}
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !6398, file: !5811, line: 293, baseType: !7, size: 32)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !6398, file: !5811, line: 294, baseType: !367, size: 64, offset: 64)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !5810, file: !5811, line: 515, baseType: !339, size: 128, offset: 4736)
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !5810, file: !5811, line: 526, baseType: !6404, offset: 4864)
!6404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !6405, line: 5, elements: !1642)
!6405 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!6406 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !5810, file: !5811, line: 528, baseType: !6407, size: 64, offset: 4864)
!6407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6408, size: 64)
!6408 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !6409, line: 14, flags: DIFlagFwdDecl)
!6409 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!6410 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !5810, file: !5811, line: 529, baseType: !6411, size: 64, offset: 4928)
!6411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6412, size: 64)
!6412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !6413, line: 17, size: 192, elements: !6414)
!6413 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!6414 = !{!6415, !6416, !6499}
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !6412, file: !6413, line: 18, baseType: !6411, size: 64)
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6412, file: !6413, line: 19, baseType: !6417, size: 64, offset: 64)
!6417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6418, size: 64)
!6418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6419)
!6419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !6413, line: 110, size: 1152, elements: !6420)
!6420 = !{!6421, !6425, !6429, !6435, !6441, !6445, !6449, !6454, !6458, !6459, !6463, !6467, !6471, !6482, !6483, !6484, !6485, !6495}
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !6419, file: !6413, line: 111, baseType: !6422, size: 64)
!6422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6423, size: 64)
!6423 = !DISubroutineType(types: !6424)
!6424 = !{!6411, !6411}
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !6419, file: !6413, line: 112, baseType: !6426, size: 64, offset: 64)
!6426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6427, size: 64)
!6427 = !DISubroutineType(types: !6428)
!6428 = !{null, !6411}
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !6419, file: !6413, line: 113, baseType: !6430, size: 64, offset: 128)
!6430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6431, size: 64)
!6431 = !DISubroutineType(types: !6432)
!6432 = !{!826, !6433}
!6433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6434, size: 64)
!6434 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6412)
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !6419, file: !6413, line: 114, baseType: !6436, size: 64, offset: 192)
!6436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6437, size: 64)
!6437 = !DISubroutineType(types: !6438)
!6438 = !{!3313, !6433, !6439}
!6439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6440, size: 64)
!6440 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5810)
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !6419, file: !6413, line: 116, baseType: !6442, size: 64, offset: 256)
!6442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6443, size: 64)
!6443 = !DISubroutineType(types: !6444)
!6444 = !{!826, !6433, !347}
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !6419, file: !6413, line: 118, baseType: !6446, size: 64, offset: 320)
!6446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6447, size: 64)
!6447 = !DISubroutineType(types: !6448)
!6448 = !{!32, !6433, !347, !7, !646, !1094}
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !6419, file: !6413, line: 123, baseType: !6450, size: 64, offset: 384)
!6450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6451, size: 64)
!6451 = !DISubroutineType(types: !6452)
!6452 = !{!32, !6433, !347, !6453, !1094}
!6453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 64)
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !6419, file: !6413, line: 126, baseType: !6455, size: 64, offset: 448)
!6455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6456, size: 64)
!6456 = !DISubroutineType(types: !6457)
!6457 = !{!347, !6433}
!6458 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !6419, file: !6413, line: 127, baseType: !6455, size: 64, offset: 512)
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !6419, file: !6413, line: 128, baseType: !6460, size: 64, offset: 576)
!6460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6461, size: 64)
!6461 = !DISubroutineType(types: !6462)
!6462 = !{!6411, !6433}
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !6419, file: !6413, line: 130, baseType: !6464, size: 64, offset: 640)
!6464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6465, size: 64)
!6465 = !DISubroutineType(types: !6466)
!6466 = !{!6411, !6433, !6411}
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !6419, file: !6413, line: 133, baseType: !6468, size: 64, offset: 704)
!6468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6469, size: 64)
!6469 = !DISubroutineType(types: !6470)
!6470 = !{!6411, !6433, !347}
!6471 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !6419, file: !6413, line: 135, baseType: !6472, size: 64, offset: 768)
!6472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6473, size: 64)
!6473 = !DISubroutineType(types: !6474)
!6474 = !{!32, !6433, !347, !347, !7, !7, !6475}
!6475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6476, size: 64)
!6476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !6413, line: 43, size: 640, elements: !6477)
!6477 = !{!6478, !6479, !6480}
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !6476, file: !6413, line: 44, baseType: !6411, size: 64)
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !6476, file: !6413, line: 45, baseType: !7, size: 32, offset: 64)
!6480 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !6476, file: !6413, line: 46, baseType: !6481, size: 512, offset: 128)
!6481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !386, size: 512, elements: !2488)
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !6419, file: !6413, line: 140, baseType: !6464, size: 64, offset: 832)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !6419, file: !6413, line: 143, baseType: !6460, size: 64, offset: 896)
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !6419, file: !6413, line: 145, baseType: !6422, size: 64, offset: 960)
!6485 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !6419, file: !6413, line: 146, baseType: !6486, size: 64, offset: 1024)
!6486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6487, size: 64)
!6487 = !DISubroutineType(types: !6488)
!6488 = !{!32, !6433, !6489}
!6489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6490, size: 64)
!6490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !6413, line: 29, size: 128, elements: !6491)
!6491 = !{!6492, !6493, !6494}
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !6490, file: !6413, line: 30, baseType: !7, size: 32)
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6490, file: !6413, line: 31, baseType: !7, size: 32, offset: 32)
!6494 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !6490, file: !6413, line: 32, baseType: !6433, size: 64, offset: 64)
!6495 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !6419, file: !6413, line: 148, baseType: !6496, size: 64, offset: 1088)
!6496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6497, size: 64)
!6497 = !DISubroutineType(types: !6498)
!6498 = !{!32, !6433, !5809}
!6499 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6412, file: !6413, line: 20, baseType: !5809, size: 64, offset: 128)
!6500 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !5810, file: !5811, line: 534, baseType: !1513, size: 32, offset: 4992)
!6501 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5810, file: !5811, line: 535, baseType: !1042, size: 32, offset: 5024)
!6502 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !5810, file: !5811, line: 537, baseType: !1725, offset: 5056)
!6503 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !5810, file: !5811, line: 538, baseType: !339, size: 128, offset: 5056)
!6504 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !5810, file: !5811, line: 540, baseType: !6505, size: 64, offset: 5184)
!6505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6506, size: 64)
!6506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !6507, line: 54, size: 960, elements: !6508)
!6507 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!6508 = !{!6509, !6510, !6511, !6512, !6513, !6514, !6515, !6519, !6523, !6524, !6525, !6526, !6530, !6534, !6535}
!6509 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6506, file: !6507, line: 55, baseType: !347, size: 64)
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6506, file: !6507, line: 56, baseType: !1035, size: 64, offset: 64)
!6511 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !6506, file: !6507, line: 58, baseType: !5891, size: 64, offset: 128)
!6512 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !6506, file: !6507, line: 59, baseType: !5891, size: 64, offset: 192)
!6513 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !6506, file: !6507, line: 60, baseType: !5820, size: 64, offset: 256)
!6514 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !6506, file: !6507, line: 62, baseType: !6106, size: 64, offset: 320)
!6515 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !6506, file: !6507, line: 63, baseType: !6516, size: 64, offset: 384)
!6516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6517, size: 64)
!6517 = !DISubroutineType(types: !6518)
!6518 = !{!1093, !5809, !6113}
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !6506, file: !6507, line: 65, baseType: !6520, size: 64, offset: 448)
!6520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6521, size: 64)
!6521 = !DISubroutineType(types: !6522)
!6522 = !{null, !6505}
!6523 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !6506, file: !6507, line: 66, baseType: !6115, size: 64, offset: 512)
!6524 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !6506, file: !6507, line: 68, baseType: !6125, size: 64, offset: 576)
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !6506, file: !6507, line: 70, baseType: !5927, size: 64, offset: 640)
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !6506, file: !6507, line: 71, baseType: !6527, size: 64, offset: 704)
!6527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6528, size: 64)
!6528 = !DISubroutineType(types: !6529)
!6529 = !{!3313, !5809}
!6530 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !6506, file: !6507, line: 73, baseType: !6531, size: 64, offset: 768)
!6531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6532, size: 64)
!6532 = !DISubroutineType(types: !6533)
!6533 = !{null, !5809, !2959, !2960}
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6506, file: !6507, line: 75, baseType: !6119, size: 64, offset: 832)
!6535 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6506, file: !6507, line: 77, baseType: !6238, size: 64, offset: 896)
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !5810, file: !5811, line: 541, baseType: !5891, size: 64, offset: 5248)
!6537 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5810, file: !5811, line: 543, baseType: !6115, size: 64, offset: 5312)
!6538 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !5810, file: !5811, line: 544, baseType: !6539, size: 64, offset: 5376)
!6539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6540, size: 64)
!6540 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !5811, line: 45, flags: DIFlagFwdDecl)
!6541 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !5810, file: !5811, line: 545, baseType: !6542, size: 64, offset: 5440)
!6542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6543, size: 64)
!6543 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !5811, line: 47, flags: DIFlagFwdDecl)
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !5810, file: !5811, line: 547, baseType: !826, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !5810, file: !5811, line: 548, baseType: !826, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !5810, file: !5811, line: 549, baseType: !826, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!6547 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !5810, file: !5811, line: 550, baseType: !826, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!6548 = !DIDerivedType(tag: DW_TAG_member, name: "_net", scope: !5571, file: !5564, line: 51, baseType: !6549, size: 64, offset: 2304)
!6549 = !DIDerivedType(tag: DW_TAG_typedef, name: "possible_net_t", file: !3039, line: 318, baseType: !6550)
!6550 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3039, line: 314, size: 64, elements: !6551)
!6551 = !{!6552}
!6552 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !6550, file: !3039, line: 316, baseType: !3037, size: 64)
!6553 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5571, file: !5564, line: 52, baseType: !1720, size: 192, offset: 2368)
!6554 = !DIDerivedType(tag: DW_TAG_member, name: "reload_failed", scope: !5571, file: !5564, line: 55, baseType: !849, size: 1, offset: 2560, flags: DIFlagBitField, extraData: i64 2560)
!6555 = !DIDerivedType(tag: DW_TAG_member, name: "reload_enabled", scope: !5571, file: !5564, line: 56, baseType: !849, size: 1, offset: 2561, flags: DIFlagBitField, extraData: i64 2560)
!6556 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !5571, file: !5564, line: 57, baseType: !849, size: 1, offset: 2562, flags: DIFlagBitField, extraData: i64 2560)
!6557 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !5571, file: !5564, line: 58, baseType: !6558, align: 256, offset: 2816)
!6558 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, elements: !538)
!6559 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !5563, file: !5564, line: 124, baseType: !7, size: 32, offset: 448)
!6560 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !5563, file: !5564, line: 125, baseType: !826, size: 8, offset: 480)
!6561 = !DIDerivedType(tag: DW_TAG_member, name: "type_lock", scope: !5563, file: !5564, line: 126, baseType: !1725, offset: 488)
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5563, file: !5564, line: 129, baseType: !226, size: 32, offset: 512)
!6563 = !DIDerivedType(tag: DW_TAG_member, name: "desired_type", scope: !5563, file: !5564, line: 130, baseType: !226, size: 32, offset: 544)
!6564 = !DIDerivedType(tag: DW_TAG_member, name: "type_dev", scope: !5563, file: !5564, line: 131, baseType: !646, size: 64, offset: 576)
!6565 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !5563, file: !5564, line: 132, baseType: !6566, size: 480, offset: 640)
!6566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port_attrs", file: !5564, line: 106, size: 480, elements: !6567)
!6567 = !{!6568, !6569, !6570, !6571, !6572, !6573}
!6568 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !6566, file: !5564, line: 107, baseType: !849, size: 1, flags: DIFlagBitField, extraData: i64 0)
!6569 = !DIDerivedType(tag: DW_TAG_member, name: "splittable", scope: !6566, file: !5564, line: 108, baseType: !849, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "lanes", scope: !6566, file: !5564, line: 109, baseType: !1042, size: 32, offset: 32)
!6571 = !DIDerivedType(tag: DW_TAG_member, name: "flavour", scope: !6566, file: !5564, line: 110, baseType: !254, size: 32, offset: 64)
!6572 = !DIDerivedType(tag: DW_TAG_member, name: "switch_id", scope: !6566, file: !5564, line: 111, baseType: !1083, size: 264, offset: 96)
!6573 = !DIDerivedType(tag: DW_TAG_member, scope: !6566, file: !5564, line: 112, baseType: !6574, size: 96, offset: 384)
!6574 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6566, file: !5564, line: 112, size: 96, elements: !6575)
!6575 = !{!6576, !6581, !6587}
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "phys", scope: !6574, file: !5564, line: 113, baseType: !6577, size: 64)
!6577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port_phys_attrs", file: !5564, line: 61, size: 64, elements: !6578)
!6578 = !{!6579, !6580}
!6579 = !DIDerivedType(tag: DW_TAG_member, name: "port_number", scope: !6577, file: !5564, line: 62, baseType: !1042, size: 32)
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "split_subport_number", scope: !6577, file: !5564, line: 66, baseType: !1042, size: 32, offset: 32)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "pci_pf", scope: !6574, file: !5564, line: 114, baseType: !6582, size: 64)
!6582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port_pci_pf_attrs", file: !5564, line: 75, size: 64, elements: !6583)
!6583 = !{!6584, !6585, !6586}
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "controller", scope: !6582, file: !5564, line: 76, baseType: !1042, size: 32)
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "pf", scope: !6582, file: !5564, line: 77, baseType: !636, size: 16, offset: 32)
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !6582, file: !5564, line: 78, baseType: !849, size: 1, offset: 48, flags: DIFlagBitField, extraData: i64 48)
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "pci_vf", scope: !6574, file: !5564, line: 115, baseType: !6588, size: 96)
!6588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port_pci_vf_attrs", file: !5564, line: 88, size: 96, elements: !6589)
!6589 = !{!6590, !6591, !6592, !6593}
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "controller", scope: !6588, file: !5564, line: 89, baseType: !1042, size: 32)
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "pf", scope: !6588, file: !5564, line: 90, baseType: !636, size: 16, offset: 32)
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !6588, file: !5564, line: 91, baseType: !636, size: 16, offset: 48)
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !6588, file: !5564, line: 92, baseType: !849, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!6594 = !DIDerivedType(tag: DW_TAG_member, name: "attrs_set", scope: !5563, file: !5564, line: 133, baseType: !849, size: 1, offset: 1120, flags: DIFlagBitField, extraData: i64 1120)
!6595 = !DIDerivedType(tag: DW_TAG_member, name: "switch_port", scope: !5563, file: !5564, line: 134, baseType: !849, size: 1, offset: 1121, flags: DIFlagBitField, extraData: i64 1120)
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "type_warn_dw", scope: !5563, file: !5564, line: 135, baseType: !6597, size: 704, offset: 1152)
!6597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !2885, line: 115, size: 704, elements: !6598)
!6598 = !{!6599, !6600, !6601, !6602}
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !6597, file: !2885, line: 116, baseType: !2884, size: 256)
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !6597, file: !2885, line: 117, baseType: !3290, size: 320, offset: 256)
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !6597, file: !2885, line: 120, baseType: !4772, size: 64, offset: 576)
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !6597, file: !2885, line: 121, baseType: !32, size: 32, offset: 640)
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "reporter_list", scope: !5563, file: !5564, line: 136, baseType: !339, size: 128, offset: 1856)
!6604 = !DIDerivedType(tag: DW_TAG_member, name: "reporters_lock", scope: !5563, file: !5564, line: 137, baseType: !1720, size: 192, offset: 1984)
!6605 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tunnel_ctl", scope: !453, file: !31, line: 1487, baseType: !6606, size: 64, offset: 4288)
!6606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6607, size: 64)
!6607 = !DISubroutineType(types: !6608)
!6608 = !{!32, !345, !6609, !32}
!6609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6610, size: 64)
!6610 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_tunnel_parm", file: !31, line: 56, flags: DIFlagFwdDecl)
!6611 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_peer_dev", scope: !453, file: !31, line: 1489, baseType: !6612, size: 64, offset: 4352)
!6612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6613, size: 64)
!6613 = !DISubroutineType(types: !6614)
!6614 = !{!345, !345}
!6615 = !DIDerivedType(tag: DW_TAG_member, name: "ethtool_ops", scope: !319, file: !31, line: 1917, baseType: !6616, size: 64, offset: 4032)
!6616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6617, size: 64)
!6617 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6618)
!6618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ops", file: !306, line: 421, size: 3904, elements: !6619)
!6619 = !{!6620, !6621, !6641, !6642, !6653, !6665, !6669, !6673, !6677, !6678, !6679, !6696, !6697, !6709, !6710, !6740, !6741, !6757, !6761, !6770, !6781, !6785, !6798, !6802, !6806, !6816, !6817, !6818, !6819, !6823, !6824, !6926, !6930, !6940, !6944, !6945, !6946, !6950, !6956, !6960, !6964, !6980, !6984, !6996, !7000, !7001, !7016, !7028, !7029, !7045, !7046, !7060, !7064, !7068, !7069, !7108, !7114, !7125, !7126, !7127, !7128}
!6620 = !DIDerivedType(tag: DW_TAG_member, name: "supported_coalesce_params", scope: !6618, file: !306, line: 422, baseType: !1042, size: 32)
!6621 = !DIDerivedType(tag: DW_TAG_member, name: "get_drvinfo", scope: !6618, file: !306, line: 423, baseType: !6622, size: 64, offset: 64)
!6622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6623, size: 64)
!6623 = !DISubroutineType(types: !6624)
!6624 = !{null, !345, !6625}
!6625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6626, size: 64)
!6626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_drvinfo", file: !264, line: 177, size: 1568, elements: !6627)
!6627 = !{!6628, !6629, !6630, !6631, !6632, !6633, !6634, !6636, !6637, !6638, !6639, !6640}
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6626, file: !264, line: 178, baseType: !548, size: 32)
!6629 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !6626, file: !264, line: 179, baseType: !4680, size: 256, offset: 32)
!6630 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !6626, file: !264, line: 180, baseType: !4680, size: 256, offset: 288)
!6631 = !DIDerivedType(tag: DW_TAG_member, name: "fw_version", scope: !6626, file: !264, line: 181, baseType: !4680, size: 256, offset: 544)
!6632 = !DIDerivedType(tag: DW_TAG_member, name: "bus_info", scope: !6626, file: !264, line: 182, baseType: !4680, size: 256, offset: 800)
!6633 = !DIDerivedType(tag: DW_TAG_member, name: "erom_version", scope: !6626, file: !264, line: 183, baseType: !4680, size: 256, offset: 1056)
!6634 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !6626, file: !264, line: 184, baseType: !6635, size: 96, offset: 1312)
!6635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 96, elements: !4205)
!6636 = !DIDerivedType(tag: DW_TAG_member, name: "n_priv_flags", scope: !6626, file: !264, line: 185, baseType: !548, size: 32, offset: 1408)
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !6626, file: !264, line: 186, baseType: !548, size: 32, offset: 1440)
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "testinfo_len", scope: !6626, file: !264, line: 187, baseType: !548, size: 32, offset: 1472)
!6639 = !DIDerivedType(tag: DW_TAG_member, name: "eedump_len", scope: !6626, file: !264, line: 188, baseType: !548, size: 32, offset: 1504)
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "regdump_len", scope: !6626, file: !264, line: 189, baseType: !548, size: 32, offset: 1536)
!6641 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs_len", scope: !6618, file: !306, line: 424, baseType: !456, size: 64, offset: 128)
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs", scope: !6618, file: !306, line: 425, baseType: !6643, size: 64, offset: 192)
!6643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6644, size: 64)
!6644 = !DISubroutineType(types: !6645)
!6645 = !{null, !345, !6646, !646}
!6646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6647, size: 64)
!6647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_regs", file: !264, line: 310, size: 96, elements: !6648)
!6648 = !{!6649, !6650, !6651, !6652}
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6647, file: !264, line: 311, baseType: !548, size: 32)
!6650 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !6647, file: !264, line: 312, baseType: !548, size: 32, offset: 32)
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6647, file: !264, line: 313, baseType: !548, size: 32, offset: 64)
!6652 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6647, file: !264, line: 314, baseType: !535, offset: 96)
!6653 = !DIDerivedType(tag: DW_TAG_member, name: "get_wol", scope: !6618, file: !306, line: 426, baseType: !6654, size: 64, offset: 256)
!6654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6655, size: 64)
!6655 = !DISubroutineType(types: !6656)
!6656 = !{null, !345, !6657}
!6657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6658, size: 64)
!6658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_wolinfo", file: !264, line: 203, size: 160, elements: !6659)
!6659 = !{!6660, !6661, !6662, !6663}
!6660 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6658, file: !264, line: 204, baseType: !548, size: 32)
!6661 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !6658, file: !264, line: 205, baseType: !548, size: 32, offset: 32)
!6662 = !DIDerivedType(tag: DW_TAG_member, name: "wolopts", scope: !6658, file: !264, line: 206, baseType: !548, size: 32, offset: 64)
!6663 = !DIDerivedType(tag: DW_TAG_member, name: "sopass", scope: !6658, file: !264, line: 207, baseType: !6664, size: 48, offset: 96)
!6664 = !DICompositeType(tag: DW_TAG_array_type, baseType: !536, size: 48, elements: !1054)
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "set_wol", scope: !6618, file: !306, line: 427, baseType: !6666, size: 64, offset: 320)
!6666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6667, size: 64)
!6667 = !DISubroutineType(types: !6668)
!6668 = !{!32, !345, !6657}
!6669 = !DIDerivedType(tag: DW_TAG_member, name: "get_msglevel", scope: !6618, file: !306, line: 428, baseType: !6670, size: 64, offset: 384)
!6670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6671, size: 64)
!6671 = !DISubroutineType(types: !6672)
!6672 = !{!1042, !345}
!6673 = !DIDerivedType(tag: DW_TAG_member, name: "set_msglevel", scope: !6618, file: !306, line: 429, baseType: !6674, size: 64, offset: 448)
!6674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6675, size: 64)
!6675 = !DISubroutineType(types: !6676)
!6676 = !{null, !345, !1042}
!6677 = !DIDerivedType(tag: DW_TAG_member, name: "nway_reset", scope: !6618, file: !306, line: 430, baseType: !456, size: 64, offset: 512)
!6678 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !6618, file: !306, line: 431, baseType: !6670, size: 64, offset: 576)
!6679 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ext_state", scope: !6618, file: !306, line: 432, baseType: !6680, size: 64, offset: 640)
!6680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6681, size: 64)
!6681 = !DISubroutineType(types: !6682)
!6682 = !{!32, !345, !6683}
!6683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6684, size: 64)
!6684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ext_state_info", file: !306, line: 93, size: 64, elements: !6685)
!6685 = !{!6686, !6687}
!6686 = !DIDerivedType(tag: DW_TAG_member, name: "link_ext_state", scope: !6684, file: !306, line: 94, baseType: !263, size: 32)
!6687 = !DIDerivedType(tag: DW_TAG_member, scope: !6684, file: !306, line: 95, baseType: !6688, size: 32, offset: 32)
!6688 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6684, file: !306, line: 95, size: 32, elements: !6689)
!6689 = !{!6690, !6691, !6692, !6693, !6694, !6695}
!6690 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !6688, file: !306, line: 96, baseType: !276, size: 32)
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "link_training", scope: !6688, file: !306, line: 97, baseType: !284, size: 32)
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "link_logical_mismatch", scope: !6688, file: !306, line: 98, baseType: !290, size: 32)
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "bad_signal_integrity", scope: !6688, file: !306, line: 99, baseType: !297, size: 32)
!6694 = !DIDerivedType(tag: DW_TAG_member, name: "cable_issue", scope: !6688, file: !306, line: 100, baseType: !301, size: 32)
!6695 = !DIDerivedType(tag: DW_TAG_member, name: "__link_ext_substate", scope: !6688, file: !306, line: 101, baseType: !849, size: 8)
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom_len", scope: !6618, file: !306, line: 434, baseType: !456, size: 64, offset: 704)
!6697 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom", scope: !6618, file: !306, line: 435, baseType: !6698, size: 64, offset: 768)
!6698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6699, size: 64)
!6699 = !DISubroutineType(types: !6700)
!6700 = !{!32, !345, !6701, !848}
!6701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6702, size: 64)
!6702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eeprom", file: !264, line: 335, size: 128, elements: !6703)
!6703 = !{!6704, !6705, !6706, !6707, !6708}
!6704 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6702, file: !264, line: 336, baseType: !548, size: 32)
!6705 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !6702, file: !264, line: 337, baseType: !548, size: 32, offset: 32)
!6706 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !6702, file: !264, line: 338, baseType: !548, size: 32, offset: 64)
!6707 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6702, file: !264, line: 339, baseType: !548, size: 32, offset: 96)
!6708 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6702, file: !264, line: 340, baseType: !535, offset: 128)
!6709 = !DIDerivedType(tag: DW_TAG_member, name: "set_eeprom", scope: !6618, file: !306, line: 437, baseType: !6698, size: 64, offset: 832)
!6710 = !DIDerivedType(tag: DW_TAG_member, name: "get_coalesce", scope: !6618, file: !306, line: 439, baseType: !6711, size: 64, offset: 896)
!6711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6712, size: 64)
!6712 = !DISubroutineType(types: !6713)
!6713 = !{!32, !345, !6714}
!6714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6715, size: 64)
!6715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_coalesce", file: !264, line: 462, size: 736, elements: !6716)
!6716 = !{!6717, !6718, !6719, !6720, !6721, !6722, !6723, !6724, !6725, !6726, !6727, !6728, !6729, !6730, !6731, !6732, !6733, !6734, !6735, !6736, !6737, !6738, !6739}
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6715, file: !264, line: 463, baseType: !548, size: 32)
!6718 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs", scope: !6715, file: !264, line: 464, baseType: !548, size: 32, offset: 32)
!6719 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames", scope: !6715, file: !264, line: 465, baseType: !548, size: 32, offset: 64)
!6720 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_irq", scope: !6715, file: !264, line: 466, baseType: !548, size: 32, offset: 96)
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_irq", scope: !6715, file: !264, line: 467, baseType: !548, size: 32, offset: 128)
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs", scope: !6715, file: !264, line: 468, baseType: !548, size: 32, offset: 160)
!6723 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames", scope: !6715, file: !264, line: 469, baseType: !548, size: 32, offset: 192)
!6724 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_irq", scope: !6715, file: !264, line: 470, baseType: !548, size: 32, offset: 224)
!6725 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_irq", scope: !6715, file: !264, line: 471, baseType: !548, size: 32, offset: 256)
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "stats_block_coalesce_usecs", scope: !6715, file: !264, line: 472, baseType: !548, size: 32, offset: 288)
!6727 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_rx_coalesce", scope: !6715, file: !264, line: 473, baseType: !548, size: 32, offset: 320)
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_tx_coalesce", scope: !6715, file: !264, line: 474, baseType: !548, size: 32, offset: 352)
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_low", scope: !6715, file: !264, line: 475, baseType: !548, size: 32, offset: 384)
!6730 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_low", scope: !6715, file: !264, line: 476, baseType: !548, size: 32, offset: 416)
!6731 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_low", scope: !6715, file: !264, line: 477, baseType: !548, size: 32, offset: 448)
!6732 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_low", scope: !6715, file: !264, line: 478, baseType: !548, size: 32, offset: 480)
!6733 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_low", scope: !6715, file: !264, line: 479, baseType: !548, size: 32, offset: 512)
!6734 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_high", scope: !6715, file: !264, line: 480, baseType: !548, size: 32, offset: 544)
!6735 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_high", scope: !6715, file: !264, line: 481, baseType: !548, size: 32, offset: 576)
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_high", scope: !6715, file: !264, line: 482, baseType: !548, size: 32, offset: 608)
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_high", scope: !6715, file: !264, line: 483, baseType: !548, size: 32, offset: 640)
!6738 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_high", scope: !6715, file: !264, line: 484, baseType: !548, size: 32, offset: 672)
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "rate_sample_interval", scope: !6715, file: !264, line: 485, baseType: !548, size: 32, offset: 704)
!6740 = !DIDerivedType(tag: DW_TAG_member, name: "set_coalesce", scope: !6618, file: !306, line: 440, baseType: !6711, size: 64, offset: 960)
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "get_ringparam", scope: !6618, file: !306, line: 441, baseType: !6742, size: 64, offset: 1024)
!6742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6743, size: 64)
!6743 = !DISubroutineType(types: !6744)
!6744 = !{null, !345, !6745}
!6745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6746, size: 64)
!6746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ringparam", file: !264, line: 513, size: 288, elements: !6747)
!6747 = !{!6748, !6749, !6750, !6751, !6752, !6753, !6754, !6755, !6756}
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6746, file: !264, line: 514, baseType: !548, size: 32)
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_pending", scope: !6746, file: !264, line: 515, baseType: !548, size: 32, offset: 32)
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_max_pending", scope: !6746, file: !264, line: 516, baseType: !548, size: 32, offset: 64)
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_max_pending", scope: !6746, file: !264, line: 517, baseType: !548, size: 32, offset: 96)
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_pending", scope: !6746, file: !264, line: 518, baseType: !548, size: 32, offset: 128)
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pending", scope: !6746, file: !264, line: 519, baseType: !548, size: 32, offset: 160)
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_pending", scope: !6746, file: !264, line: 520, baseType: !548, size: 32, offset: 192)
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_pending", scope: !6746, file: !264, line: 521, baseType: !548, size: 32, offset: 224)
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pending", scope: !6746, file: !264, line: 522, baseType: !548, size: 32, offset: 256)
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "set_ringparam", scope: !6618, file: !306, line: 443, baseType: !6758, size: 64, offset: 1088)
!6758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6759, size: 64)
!6759 = !DISubroutineType(types: !6760)
!6760 = !{!32, !345, !6745}
!6761 = !DIDerivedType(tag: DW_TAG_member, name: "get_pause_stats", scope: !6618, file: !306, line: 445, baseType: !6762, size: 64, offset: 1152)
!6762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6763, size: 64)
!6763 = !DISubroutineType(types: !6764)
!6764 = !{null, !345, !6765}
!6765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6766, size: 64)
!6766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pause_stats", file: !306, line: 260, size: 128, elements: !6767)
!6767 = !{!6768, !6769}
!6768 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause_frames", scope: !6766, file: !306, line: 261, baseType: !386, size: 64)
!6769 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause_frames", scope: !6766, file: !306, line: 262, baseType: !386, size: 64, offset: 64)
!6770 = !DIDerivedType(tag: DW_TAG_member, name: "get_pauseparam", scope: !6618, file: !306, line: 447, baseType: !6771, size: 64, offset: 1216)
!6771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6772, size: 64)
!6772 = !DISubroutineType(types: !6773)
!6773 = !{null, !345, !6774}
!6774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6775, size: 64)
!6775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pauseparam", file: !264, line: 575, size: 128, elements: !6776)
!6776 = !{!6777, !6778, !6779, !6780}
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6775, file: !264, line: 576, baseType: !548, size: 32)
!6778 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !6775, file: !264, line: 577, baseType: !548, size: 32, offset: 32)
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause", scope: !6775, file: !264, line: 578, baseType: !548, size: 32, offset: 64)
!6780 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause", scope: !6775, file: !264, line: 579, baseType: !548, size: 32, offset: 96)
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "set_pauseparam", scope: !6618, file: !306, line: 449, baseType: !6782, size: 64, offset: 1280)
!6782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6783, size: 64)
!6783 = !DISubroutineType(types: !6784)
!6784 = !{!32, !345, !6774}
!6785 = !DIDerivedType(tag: DW_TAG_member, name: "self_test", scope: !6618, file: !306, line: 451, baseType: !6786, size: 64, offset: 1344)
!6786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6787, size: 64)
!6787 = !DISubroutineType(types: !6788)
!6788 = !{null, !345, !6789, !5427}
!6789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6790, size: 64)
!6790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_test", file: !264, line: 770, size: 128, elements: !6791)
!6791 = !{!6792, !6793, !6794, !6795, !6796}
!6792 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6790, file: !264, line: 771, baseType: !548, size: 32)
!6793 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6790, file: !264, line: 772, baseType: !548, size: 32, offset: 32)
!6794 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !6790, file: !264, line: 773, baseType: !548, size: 32, offset: 64)
!6795 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6790, file: !264, line: 774, baseType: !548, size: 32, offset: 96)
!6796 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6790, file: !264, line: 775, baseType: !6797, offset: 128)
!6797 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, elements: !538)
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "get_strings", scope: !6618, file: !306, line: 452, baseType: !6799, size: 64, offset: 1408)
!6799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6800, size: 64)
!6800 = !DISubroutineType(types: !6801)
!6801 = !{null, !345, !1042, !848}
!6802 = !DIDerivedType(tag: DW_TAG_member, name: "set_phys_id", scope: !6618, file: !306, line: 453, baseType: !6803, size: 64, offset: 1472)
!6803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6804, size: 64)
!6804 = !DISubroutineType(types: !6805)
!6805 = !{!32, !345, !305}
!6806 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_stats", scope: !6618, file: !306, line: 454, baseType: !6807, size: 64, offset: 1536)
!6807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6808, size: 64)
!6808 = !DISubroutineType(types: !6809)
!6809 = !{null, !345, !6810, !5427}
!6810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6811, size: 64)
!6811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_stats", file: !264, line: 789, size: 64, elements: !6812)
!6812 = !{!6813, !6814, !6815}
!6813 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6811, file: !264, line: 790, baseType: !548, size: 32)
!6814 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !6811, file: !264, line: 791, baseType: !548, size: 32, offset: 32)
!6815 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6811, file: !264, line: 792, baseType: !6797, offset: 64)
!6816 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !6618, file: !306, line: 456, baseType: !456, size: 64, offset: 1600)
!6817 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !6618, file: !306, line: 457, baseType: !460, size: 64, offset: 1664)
!6818 = !DIDerivedType(tag: DW_TAG_member, name: "get_priv_flags", scope: !6618, file: !306, line: 458, baseType: !6670, size: 64, offset: 1728)
!6819 = !DIDerivedType(tag: DW_TAG_member, name: "set_priv_flags", scope: !6618, file: !306, line: 459, baseType: !6820, size: 64, offset: 1792)
!6820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6821, size: 64)
!6821 = !DISubroutineType(types: !6822)
!6822 = !{!32, !345, !1042}
!6823 = !DIDerivedType(tag: DW_TAG_member, name: "get_sset_count", scope: !6618, file: !306, line: 460, baseType: !777, size: 64, offset: 1856)
!6824 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxnfc", scope: !6618, file: !306, line: 461, baseType: !6825, size: 64, offset: 1920)
!6825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6826, size: 64)
!6826 = !DISubroutineType(types: !6827)
!6827 = !{!32, !345, !6828, !2571}
!6828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6829, size: 64)
!6829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rxnfc", file: !264, line: 1088, size: 1536, elements: !6830)
!6830 = !{!6831, !6832, !6833, !6834, !6920, !6925}
!6831 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6829, file: !264, line: 1089, baseType: !548, size: 32)
!6832 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !6829, file: !264, line: 1090, baseType: !548, size: 32, offset: 32)
!6833 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6829, file: !264, line: 1091, baseType: !388, size: 64, offset: 64)
!6834 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !6829, file: !264, line: 1092, baseType: !6835, size: 1344, offset: 128)
!6835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rx_flow_spec", file: !264, line: 992, size: 1344, elements: !6836)
!6836 = !{!6837, !6838, !6906, !6916, !6917, !6918, !6919}
!6837 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !6835, file: !264, line: 993, baseType: !548, size: 32)
!6838 = !DIDerivedType(tag: DW_TAG_member, name: "h_u", scope: !6835, file: !264, line: 994, baseType: !6839, size: 416, offset: 32)
!6839 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ethtool_flow_union", file: !264, line: 939, size: 416, elements: !6840)
!6840 = !{!6841, !6849, !6850, !6851, !6858, !6859, !6868, !6876, !6877, !6878, !6885, !6886, !6894, !6902}
!6841 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip4_spec", scope: !6839, file: !264, line: 940, baseType: !6842, size: 128)
!6842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip4_spec", file: !264, line: 845, size: 128, elements: !6843)
!6843 = !{!6844, !6845, !6846, !6847, !6848}
!6844 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !6842, file: !264, line: 846, baseType: !3263, size: 32)
!6845 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !6842, file: !264, line: 847, baseType: !3263, size: 32, offset: 32)
!6846 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !6842, file: !264, line: 848, baseType: !590, size: 16, offset: 64)
!6847 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !6842, file: !264, line: 849, baseType: !590, size: 16, offset: 80)
!6848 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !6842, file: !264, line: 850, baseType: !536, size: 8, offset: 96)
!6849 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip4_spec", scope: !6839, file: !264, line: 941, baseType: !6842, size: 128)
!6850 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip4_spec", scope: !6839, file: !264, line: 942, baseType: !6842, size: 128)
!6851 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip4_spec", scope: !6839, file: !264, line: 943, baseType: !6852, size: 128)
!6852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip4_spec", file: !264, line: 862, size: 128, elements: !6853)
!6853 = !{!6854, !6855, !6856, !6857}
!6854 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !6852, file: !264, line: 863, baseType: !3263, size: 32)
!6855 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !6852, file: !264, line: 864, baseType: !3263, size: 32, offset: 32)
!6856 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !6852, file: !264, line: 865, baseType: !3263, size: 32, offset: 64)
!6857 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !6852, file: !264, line: 866, baseType: !536, size: 8, offset: 96)
!6858 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip4_spec", scope: !6839, file: !264, line: 944, baseType: !6852, size: 128)
!6859 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip4_spec", scope: !6839, file: !264, line: 945, baseType: !6860, size: 128)
!6860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip4_spec", file: !264, line: 880, size: 128, elements: !6861)
!6861 = !{!6862, !6863, !6864, !6865, !6866, !6867}
!6862 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !6860, file: !264, line: 881, baseType: !3263, size: 32)
!6863 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !6860, file: !264, line: 882, baseType: !3263, size: 32, offset: 32)
!6864 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !6860, file: !264, line: 883, baseType: !3263, size: 32, offset: 64)
!6865 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !6860, file: !264, line: 884, baseType: !536, size: 8, offset: 96)
!6866 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ver", scope: !6860, file: !264, line: 885, baseType: !536, size: 8, offset: 104)
!6867 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !6860, file: !264, line: 886, baseType: !536, size: 8, offset: 112)
!6868 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip6_spec", scope: !6839, file: !264, line: 946, baseType: !6869, size: 320)
!6869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip6_spec", file: !264, line: 899, size: 320, elements: !6870)
!6870 = !{!6871, !6872, !6873, !6874, !6875}
!6871 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !6869, file: !264, line: 900, baseType: !3284, size: 128)
!6872 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !6869, file: !264, line: 901, baseType: !3284, size: 128, offset: 128)
!6873 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !6869, file: !264, line: 902, baseType: !590, size: 16, offset: 256)
!6874 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !6869, file: !264, line: 903, baseType: !590, size: 16, offset: 272)
!6875 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !6869, file: !264, line: 904, baseType: !536, size: 8, offset: 288)
!6876 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip6_spec", scope: !6839, file: !264, line: 947, baseType: !6869, size: 320)
!6877 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip6_spec", scope: !6839, file: !264, line: 948, baseType: !6869, size: 320)
!6878 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip6_spec", scope: !6839, file: !264, line: 949, baseType: !6879, size: 320)
!6879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip6_spec", file: !264, line: 916, size: 320, elements: !6880)
!6880 = !{!6881, !6882, !6883, !6884}
!6881 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !6879, file: !264, line: 917, baseType: !3284, size: 128)
!6882 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !6879, file: !264, line: 918, baseType: !3284, size: 128, offset: 128)
!6883 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !6879, file: !264, line: 919, baseType: !3263, size: 32, offset: 256)
!6884 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !6879, file: !264, line: 920, baseType: !536, size: 8, offset: 288)
!6885 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip6_spec", scope: !6839, file: !264, line: 950, baseType: !6879, size: 320)
!6886 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip6_spec", scope: !6839, file: !264, line: 951, baseType: !6887, size: 320)
!6887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip6_spec", file: !264, line: 931, size: 320, elements: !6888)
!6888 = !{!6889, !6890, !6891, !6892, !6893}
!6889 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !6887, file: !264, line: 932, baseType: !3284, size: 128)
!6890 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !6887, file: !264, line: 933, baseType: !3284, size: 128, offset: 128)
!6891 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !6887, file: !264, line: 934, baseType: !3263, size: 32, offset: 256)
!6892 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !6887, file: !264, line: 935, baseType: !536, size: 8, offset: 288)
!6893 = !DIDerivedType(tag: DW_TAG_member, name: "l4_proto", scope: !6887, file: !264, line: 936, baseType: !536, size: 8, offset: 296)
!6894 = !DIDerivedType(tag: DW_TAG_member, name: "ether_spec", scope: !6839, file: !264, line: 952, baseType: !6895, size: 112)
!6895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethhdr", file: !6896, line: 164, size: 112, elements: !6897)
!6896 = !DIFile(filename: "./include/uapi/linux/if_ether.h", directory: "/home/lizy2001/genbc/linux")
!6897 = !{!6898, !6900, !6901}
!6898 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !6895, file: !6896, line: 165, baseType: !6899, size: 48)
!6899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !537, size: 48, elements: !1054)
!6900 = !DIDerivedType(tag: DW_TAG_member, name: "h_source", scope: !6895, file: !6896, line: 166, baseType: !6899, size: 48, offset: 48)
!6901 = !DIDerivedType(tag: DW_TAG_member, name: "h_proto", scope: !6895, file: !6896, line: 167, baseType: !590, size: 16, offset: 96)
!6902 = !DIDerivedType(tag: DW_TAG_member, name: "hdata", scope: !6839, file: !264, line: 953, baseType: !6903, size: 416)
!6903 = !DICompositeType(tag: DW_TAG_array_type, baseType: !536, size: 416, elements: !6904)
!6904 = !{!6905}
!6905 = !DISubrange(count: 52)
!6906 = !DIDerivedType(tag: DW_TAG_member, name: "h_ext", scope: !6835, file: !264, line: 995, baseType: !6907, size: 160, offset: 448)
!6907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flow_ext", file: !264, line: 967, size: 160, elements: !6908)
!6908 = !{!6909, !6911, !6912, !6913, !6914}
!6909 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !6907, file: !264, line: 968, baseType: !6910, size: 16)
!6910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !536, size: 16, elements: !2719)
!6911 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !6907, file: !264, line: 969, baseType: !6899, size: 48, offset: 16)
!6912 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_etype", scope: !6907, file: !264, line: 970, baseType: !590, size: 16, offset: 64)
!6913 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !6907, file: !264, line: 971, baseType: !590, size: 16, offset: 80)
!6914 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6907, file: !264, line: 972, baseType: !6915, size: 64, offset: 96)
!6915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3263, size: 64, elements: !2719)
!6916 = !DIDerivedType(tag: DW_TAG_member, name: "m_u", scope: !6835, file: !264, line: 996, baseType: !6839, size: 416, offset: 608)
!6917 = !DIDerivedType(tag: DW_TAG_member, name: "m_ext", scope: !6835, file: !264, line: 997, baseType: !6907, size: 160, offset: 1024)
!6918 = !DIDerivedType(tag: DW_TAG_member, name: "ring_cookie", scope: !6835, file: !264, line: 998, baseType: !388, size: 64, offset: 1216)
!6919 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !6835, file: !264, line: 999, baseType: !548, size: 32, offset: 1280)
!6920 = !DIDerivedType(tag: DW_TAG_member, scope: !6829, file: !264, line: 1093, baseType: !6921, size: 32, offset: 1472)
!6921 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6829, file: !264, line: 1093, size: 32, elements: !6922)
!6922 = !{!6923, !6924}
!6923 = !DIDerivedType(tag: DW_TAG_member, name: "rule_cnt", scope: !6921, file: !264, line: 1094, baseType: !548, size: 32)
!6924 = !DIDerivedType(tag: DW_TAG_member, name: "rss_context", scope: !6921, file: !264, line: 1095, baseType: !548, size: 32)
!6925 = !DIDerivedType(tag: DW_TAG_member, name: "rule_locs", scope: !6829, file: !264, line: 1097, baseType: !547, offset: 1504)
!6926 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxnfc", scope: !6618, file: !306, line: 463, baseType: !6927, size: 64, offset: 1984)
!6927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6928, size: 64)
!6928 = !DISubroutineType(types: !6929)
!6929 = !{!32, !345, !6828}
!6930 = !DIDerivedType(tag: DW_TAG_member, name: "flash_device", scope: !6618, file: !306, line: 464, baseType: !6931, size: 64, offset: 2048)
!6931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6932, size: 64)
!6932 = !DISubroutineType(types: !6933)
!6933 = !{!32, !345, !6934}
!6934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6935, size: 64)
!6935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flash", file: !264, line: 1217, size: 1088, elements: !6936)
!6936 = !{!6937, !6938, !6939}
!6937 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6935, file: !264, line: 1218, baseType: !548, size: 32)
!6938 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !6935, file: !264, line: 1219, baseType: !548, size: 32, offset: 32)
!6939 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6935, file: !264, line: 1220, baseType: !5288, size: 1024, offset: 64)
!6940 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !6618, file: !306, line: 465, baseType: !6941, size: 64, offset: 2112)
!6941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6942, size: 64)
!6942 = !DISubroutineType(types: !6943)
!6943 = !{!32, !345, !2571}
!6944 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_key_size", scope: !6618, file: !306, line: 466, baseType: !6670, size: 64, offset: 2176)
!6945 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_indir_size", scope: !6618, file: !306, line: 467, baseType: !6670, size: 64, offset: 2240)
!6946 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh", scope: !6618, file: !306, line: 468, baseType: !6947, size: 64, offset: 2304)
!6947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6948, size: 64)
!6948 = !DISubroutineType(types: !6949)
!6949 = !{!32, !345, !2571, !848, !848}
!6950 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh", scope: !6618, file: !306, line: 470, baseType: !6951, size: 64, offset: 2368)
!6951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6952, size: 64)
!6952 = !DISubroutineType(types: !6953)
!6953 = !{!32, !345, !6954, !5799, !5800}
!6954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6955, size: 64)
!6955 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1042)
!6956 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_context", scope: !6618, file: !306, line: 472, baseType: !6957, size: 64, offset: 2432)
!6957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6958, size: 64)
!6958 = !DISubroutineType(types: !6959)
!6959 = !{!32, !345, !2571, !848, !848, !1042}
!6960 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh_context", scope: !6618, file: !306, line: 474, baseType: !6961, size: 64, offset: 2496)
!6961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6962, size: 64)
!6962 = !DISubroutineType(types: !6963)
!6963 = !{!32, !345, !6954, !5799, !5800, !2571, !826}
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "get_channels", scope: !6618, file: !306, line: 477, baseType: !6965, size: 64, offset: 2560)
!6965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6966, size: 64)
!6966 = !DISubroutineType(types: !6967)
!6967 = !{null, !345, !6968}
!6968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6969, size: 64)
!6969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_channels", file: !264, line: 541, size: 288, elements: !6970)
!6970 = !{!6971, !6972, !6973, !6974, !6975, !6976, !6977, !6978, !6979}
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6969, file: !264, line: 542, baseType: !548, size: 32)
!6972 = !DIDerivedType(tag: DW_TAG_member, name: "max_rx", scope: !6969, file: !264, line: 543, baseType: !548, size: 32, offset: 32)
!6973 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx", scope: !6969, file: !264, line: 544, baseType: !548, size: 32, offset: 64)
!6974 = !DIDerivedType(tag: DW_TAG_member, name: "max_other", scope: !6969, file: !264, line: 545, baseType: !548, size: 32, offset: 96)
!6975 = !DIDerivedType(tag: DW_TAG_member, name: "max_combined", scope: !6969, file: !264, line: 546, baseType: !548, size: 32, offset: 128)
!6976 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !6969, file: !264, line: 547, baseType: !548, size: 32, offset: 160)
!6977 = !DIDerivedType(tag: DW_TAG_member, name: "tx_count", scope: !6969, file: !264, line: 548, baseType: !548, size: 32, offset: 192)
!6978 = !DIDerivedType(tag: DW_TAG_member, name: "other_count", scope: !6969, file: !264, line: 549, baseType: !548, size: 32, offset: 224)
!6979 = !DIDerivedType(tag: DW_TAG_member, name: "combined_count", scope: !6969, file: !264, line: 550, baseType: !548, size: 32, offset: 256)
!6980 = !DIDerivedType(tag: DW_TAG_member, name: "set_channels", scope: !6618, file: !306, line: 478, baseType: !6981, size: 64, offset: 2624)
!6981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6982, size: 64)
!6982 = !DISubroutineType(types: !6983)
!6983 = !{!32, !345, !6968}
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_flag", scope: !6618, file: !306, line: 479, baseType: !6985, size: 64, offset: 2688)
!6985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6986, size: 64)
!6986 = !DISubroutineType(types: !6987)
!6987 = !{!32, !345, !6988}
!6988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6989, size: 64)
!6989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_dump", file: !264, line: 1237, size: 128, elements: !6990)
!6990 = !{!6991, !6992, !6993, !6994, !6995}
!6991 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6989, file: !264, line: 1238, baseType: !548, size: 32)
!6992 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !6989, file: !264, line: 1239, baseType: !548, size: 32, offset: 32)
!6993 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6989, file: !264, line: 1240, baseType: !548, size: 32, offset: 64)
!6994 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6989, file: !264, line: 1241, baseType: !548, size: 32, offset: 96)
!6995 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6989, file: !264, line: 1242, baseType: !535, offset: 128)
!6996 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_data", scope: !6618, file: !306, line: 480, baseType: !6997, size: 64, offset: 2752)
!6997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6998, size: 64)
!6998 = !DISubroutineType(types: !6999)
!6999 = !{!32, !345, !6988, !646}
!7000 = !DIDerivedType(tag: DW_TAG_member, name: "set_dump", scope: !6618, file: !306, line: 482, baseType: !6985, size: 64, offset: 2816)
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "get_ts_info", scope: !6618, file: !306, line: 483, baseType: !7002, size: 64, offset: 2880)
!7002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7003, size: 64)
!7003 = !DISubroutineType(types: !7004)
!7004 = !{!32, !345, !7005}
!7005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7006, size: 64)
!7006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ts_info", file: !264, line: 1317, size: 352, elements: !7007)
!7007 = !{!7008, !7009, !7010, !7011, !7012, !7014, !7015}
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7006, file: !264, line: 1318, baseType: !548, size: 32)
!7009 = !DIDerivedType(tag: DW_TAG_member, name: "so_timestamping", scope: !7006, file: !264, line: 1319, baseType: !548, size: 32, offset: 32)
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "phc_index", scope: !7006, file: !264, line: 1320, baseType: !997, size: 32, offset: 64)
!7011 = !DIDerivedType(tag: DW_TAG_member, name: "tx_types", scope: !7006, file: !264, line: 1321, baseType: !548, size: 32, offset: 96)
!7012 = !DIDerivedType(tag: DW_TAG_member, name: "tx_reserved", scope: !7006, file: !264, line: 1322, baseType: !7013, size: 96, offset: 128)
!7013 = !DICompositeType(tag: DW_TAG_array_type, baseType: !548, size: 96, elements: !1647)
!7014 = !DIDerivedType(tag: DW_TAG_member, name: "rx_filters", scope: !7006, file: !264, line: 1323, baseType: !548, size: 32, offset: 224)
!7015 = !DIDerivedType(tag: DW_TAG_member, name: "rx_reserved", scope: !7006, file: !264, line: 1324, baseType: !7013, size: 96, offset: 256)
!7016 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_info", scope: !6618, file: !306, line: 484, baseType: !7017, size: 64, offset: 2944)
!7017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7018, size: 64)
!7018 = !DISubroutineType(types: !7019)
!7019 = !{!32, !345, !7020}
!7020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7021, size: 64)
!7021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_modinfo", file: !264, line: 382, size: 352, elements: !7022)
!7022 = !{!7023, !7024, !7025, !7026}
!7023 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7021, file: !264, line: 383, baseType: !548, size: 32)
!7024 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7021, file: !264, line: 384, baseType: !548, size: 32, offset: 32)
!7025 = !DIDerivedType(tag: DW_TAG_member, name: "eeprom_len", scope: !7021, file: !264, line: 385, baseType: !548, size: 32, offset: 64)
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7021, file: !264, line: 386, baseType: !7027, size: 256, offset: 96)
!7027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !548, size: 256, elements: !2488)
!7028 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_eeprom", scope: !6618, file: !306, line: 486, baseType: !6698, size: 64, offset: 3008)
!7029 = !DIDerivedType(tag: DW_TAG_member, name: "get_eee", scope: !6618, file: !306, line: 488, baseType: !7030, size: 64, offset: 3072)
!7030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7031, size: 64)
!7031 = !DISubroutineType(types: !7032)
!7032 = !{!32, !345, !7033}
!7033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7034, size: 64)
!7034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eee", file: !264, line: 360, size: 320, elements: !7035)
!7035 = !{!7036, !7037, !7038, !7039, !7040, !7041, !7042, !7043, !7044}
!7036 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7034, file: !264, line: 361, baseType: !548, size: 32)
!7037 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !7034, file: !264, line: 362, baseType: !548, size: 32, offset: 32)
!7038 = !DIDerivedType(tag: DW_TAG_member, name: "advertised", scope: !7034, file: !264, line: 363, baseType: !548, size: 32, offset: 64)
!7039 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertised", scope: !7034, file: !264, line: 364, baseType: !548, size: 32, offset: 96)
!7040 = !DIDerivedType(tag: DW_TAG_member, name: "eee_active", scope: !7034, file: !264, line: 365, baseType: !548, size: 32, offset: 128)
!7041 = !DIDerivedType(tag: DW_TAG_member, name: "eee_enabled", scope: !7034, file: !264, line: 366, baseType: !548, size: 32, offset: 160)
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_enabled", scope: !7034, file: !264, line: 367, baseType: !548, size: 32, offset: 192)
!7043 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_timer", scope: !7034, file: !264, line: 368, baseType: !548, size: 32, offset: 224)
!7044 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7034, file: !264, line: 369, baseType: !2718, size: 64, offset: 256)
!7045 = !DIDerivedType(tag: DW_TAG_member, name: "set_eee", scope: !6618, file: !306, line: 489, baseType: !7030, size: 64, offset: 3136)
!7046 = !DIDerivedType(tag: DW_TAG_member, name: "get_tunable", scope: !6618, file: !306, line: 490, baseType: !7047, size: 64, offset: 3200)
!7047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7048, size: 64)
!7048 = !DISubroutineType(types: !7049)
!7049 = !{!32, !345, !7050, !646}
!7050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7051, size: 64)
!7051 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7052)
!7052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tunable", file: !264, line: 244, size: 128, elements: !7053)
!7053 = !{!7054, !7055, !7056, !7057, !7058}
!7054 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7052, file: !264, line: 245, baseType: !548, size: 32)
!7055 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7052, file: !264, line: 246, baseType: !548, size: 32, offset: 32)
!7056 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !7052, file: !264, line: 247, baseType: !548, size: 32, offset: 64)
!7057 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7052, file: !264, line: 248, baseType: !548, size: 32, offset: 96)
!7058 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7052, file: !264, line: 249, baseType: !7059, offset: 128)
!7059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !646, elements: !538)
!7060 = !DIDerivedType(tag: DW_TAG_member, name: "set_tunable", scope: !6618, file: !306, line: 492, baseType: !7061, size: 64, offset: 3264)
!7061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7062, size: 64)
!7062 = !DISubroutineType(types: !7063)
!7063 = !{!32, !345, !7050, !3313}
!7064 = !DIDerivedType(tag: DW_TAG_member, name: "get_per_queue_coalesce", scope: !6618, file: !306, line: 494, baseType: !7065, size: 64, offset: 3328)
!7065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7066, size: 64)
!7066 = !DISubroutineType(types: !7067)
!7067 = !{!32, !345, !1042, !6714}
!7068 = !DIDerivedType(tag: DW_TAG_member, name: "set_per_queue_coalesce", scope: !6618, file: !306, line: 496, baseType: !7065, size: 64, offset: 3392)
!7069 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ksettings", scope: !6618, file: !306, line: 498, baseType: !7070, size: 64, offset: 3456)
!7070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7071, size: 64)
!7071 = !DISubroutineType(types: !7072)
!7072 = !{!32, !345, !7073}
!7073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7074, size: 64)
!7074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ksettings", file: !306, line: 124, size: 768, elements: !7075)
!7075 = !{!7076, !7101}
!7076 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7074, file: !306, line: 125, baseType: !7077, size: 384)
!7077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_settings", file: !264, line: 1996, size: 384, elements: !7078)
!7078 = !{!7079, !7080, !7081, !7082, !7083, !7084, !7085, !7086, !7087, !7088, !7091, !7092, !7093, !7094, !7096, !7100}
!7079 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7077, file: !264, line: 1997, baseType: !548, size: 32)
!7080 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !7077, file: !264, line: 1998, baseType: !548, size: 32, offset: 32)
!7081 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !7077, file: !264, line: 1999, baseType: !536, size: 8, offset: 64)
!7082 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !7077, file: !264, line: 2000, baseType: !536, size: 8, offset: 72)
!7083 = !DIDerivedType(tag: DW_TAG_member, name: "phy_address", scope: !7077, file: !264, line: 2001, baseType: !536, size: 8, offset: 80)
!7084 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !7077, file: !264, line: 2002, baseType: !536, size: 8, offset: 88)
!7085 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_support", scope: !7077, file: !264, line: 2003, baseType: !536, size: 8, offset: 96)
!7086 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix", scope: !7077, file: !264, line: 2004, baseType: !536, size: 8, offset: 104)
!7087 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix_ctrl", scope: !7077, file: !264, line: 2005, baseType: !536, size: 8, offset: 112)
!7088 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks_nwords", scope: !7077, file: !264, line: 2006, baseType: !7089, size: 8, offset: 120)
!7089 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !389, line: 20, baseType: !7090)
!7090 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!7091 = !DIDerivedType(tag: DW_TAG_member, name: "transceiver", scope: !7077, file: !264, line: 2007, baseType: !536, size: 8, offset: 128)
!7092 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_cfg", scope: !7077, file: !264, line: 2008, baseType: !536, size: 8, offset: 136)
!7093 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_state", scope: !7077, file: !264, line: 2009, baseType: !536, size: 8, offset: 144)
!7094 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !7077, file: !264, line: 2010, baseType: !7095, size: 8, offset: 152)
!7095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !536, size: 8, elements: !2527)
!7096 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7077, file: !264, line: 2011, baseType: !7097, size: 224, offset: 160)
!7097 = !DICompositeType(tag: DW_TAG_array_type, baseType: !548, size: 224, elements: !7098)
!7098 = !{!7099}
!7099 = !DISubrange(count: 7)
!7100 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks", scope: !7077, file: !264, line: 2012, baseType: !547, offset: 384)
!7101 = !DIDerivedType(tag: DW_TAG_member, name: "link_modes", scope: !7074, file: !306, line: 130, baseType: !7102, size: 384, offset: 384)
!7102 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7074, file: !306, line: 126, size: 384, elements: !7103)
!7103 = !{!7104, !7106, !7107}
!7104 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !7102, file: !306, line: 127, baseType: !7105, size: 128)
!7105 = !DICompositeType(tag: DW_TAG_array_type, baseType: !367, size: 128, elements: !2719)
!7106 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !7102, file: !306, line: 128, baseType: !7105, size: 128, offset: 128)
!7107 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertising", scope: !7102, file: !306, line: 129, baseType: !7105, size: 128, offset: 256)
!7108 = !DIDerivedType(tag: DW_TAG_member, name: "set_link_ksettings", scope: !6618, file: !306, line: 500, baseType: !7109, size: 64, offset: 3520)
!7109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7110, size: 64)
!7110 = !DISubroutineType(types: !7111)
!7111 = !{!32, !345, !7112}
!7112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7113, size: 64)
!7113 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7074)
!7114 = !DIDerivedType(tag: DW_TAG_member, name: "get_fecparam", scope: !6618, file: !306, line: 502, baseType: !7115, size: 64, offset: 3584)
!7115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7116, size: 64)
!7116 = !DISubroutineType(types: !7117)
!7117 = !{!32, !345, !7118}
!7118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7119, size: 64)
!7119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_fecparam", file: !264, line: 1389, size: 128, elements: !7120)
!7120 = !{!7121, !7122, !7123, !7124}
!7121 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7119, file: !264, line: 1390, baseType: !548, size: 32)
!7122 = !DIDerivedType(tag: DW_TAG_member, name: "active_fec", scope: !7119, file: !264, line: 1392, baseType: !548, size: 32, offset: 32)
!7123 = !DIDerivedType(tag: DW_TAG_member, name: "fec", scope: !7119, file: !264, line: 1393, baseType: !548, size: 32, offset: 64)
!7124 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7119, file: !264, line: 1394, baseType: !548, size: 32, offset: 96)
!7125 = !DIDerivedType(tag: DW_TAG_member, name: "set_fecparam", scope: !6618, file: !306, line: 504, baseType: !7115, size: 64, offset: 3648)
!7126 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_phy_stats", scope: !6618, file: !306, line: 506, baseType: !6807, size: 64, offset: 3712)
!7127 = !DIDerivedType(tag: DW_TAG_member, name: "get_phy_tunable", scope: !6618, file: !306, line: 508, baseType: !7047, size: 64, offset: 3776)
!7128 = !DIDerivedType(tag: DW_TAG_member, name: "set_phy_tunable", scope: !6618, file: !306, line: 510, baseType: !7061, size: 64, offset: 3840)
!7129 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_ops", scope: !319, file: !31, line: 1922, baseType: !7130, size: 64, offset: 4096)
!7130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7131, size: 64)
!7131 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7132)
!7132 = !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_ops", file: !31, line: 1922, flags: DIFlagFwdDecl)
!7133 = !DIDerivedType(tag: DW_TAG_member, name: "header_ops", scope: !319, file: !31, line: 1933, baseType: !7134, size: 64, offset: 4160)
!7134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7135, size: 64)
!7135 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7136)
!7136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "header_ops", file: !31, line: 270, size: 384, elements: !7137)
!7137 = !{!7138, !7142, !7148, !7161, !7165, !7169}
!7138 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !7136, file: !31, line: 271, baseType: !7139, size: 64)
!7139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7140, size: 64)
!7140 = !DISubroutineType(types: !7141)
!7141 = !{!32, !470, !345, !531, !3313, !3313, !7}
!7142 = !DIDerivedType(tag: DW_TAG_member, name: "parse", scope: !7136, file: !31, line: 274, baseType: !7143, size: 64, offset: 64)
!7143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7144, size: 64)
!7144 = !DISubroutineType(types: !7145)
!7145 = !{!32, !7146, !619}
!7146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7147, size: 64)
!7147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !471)
!7148 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !7136, file: !31, line: 275, baseType: !7149, size: 64, offset: 128)
!7149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7150, size: 64)
!7150 = !DISubroutineType(types: !7151)
!7151 = !{!32, !7152, !7154, !590}
!7152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7153, size: 64)
!7153 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !979)
!7154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7155, size: 64)
!7155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hh_cache", file: !31, line: 244, size: 832, elements: !7156)
!7156 = !{!7157, !7158, !7159}
!7157 = !DIDerivedType(tag: DW_TAG_member, name: "hh_len", scope: !7155, file: !31, line: 245, baseType: !7, size: 32)
!7158 = !DIDerivedType(tag: DW_TAG_member, name: "hh_lock", scope: !7155, file: !31, line: 246, baseType: !3380, size: 32, offset: 32)
!7159 = !DIDerivedType(tag: DW_TAG_member, name: "hh_data", scope: !7155, file: !31, line: 254, baseType: !7160, size: 768, offset: 64)
!7160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !367, size: 768, elements: !4205)
!7161 = !DIDerivedType(tag: DW_TAG_member, name: "cache_update", scope: !7136, file: !31, line: 276, baseType: !7162, size: 64, offset: 192)
!7162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7163, size: 64)
!7163 = !DISubroutineType(types: !7164)
!7164 = !{null, !7154, !828, !1001}
!7165 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !7136, file: !31, line: 279, baseType: !7166, size: 64, offset: 256)
!7166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7167, size: 64)
!7167 = !DISubroutineType(types: !7168)
!7168 = !{!826, !347, !7}
!7169 = !DIDerivedType(tag: DW_TAG_member, name: "parse_protocol", scope: !7136, file: !31, line: 280, baseType: !7170, size: 64, offset: 320)
!7170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7171, size: 64)
!7171 = !DISubroutineType(types: !7172)
!7172 = !{!590, !7146}
!7173 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !319, file: !31, line: 1935, baseType: !7, size: 32, offset: 4224)
!7174 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !319, file: !31, line: 1936, baseType: !7, size: 32, offset: 4256)
!7175 = !DIDerivedType(tag: DW_TAG_member, name: "gflags", scope: !319, file: !31, line: 1938, baseType: !531, size: 16, offset: 4288)
!7176 = !DIDerivedType(tag: DW_TAG_member, name: "padded", scope: !319, file: !31, line: 1939, baseType: !531, size: 16, offset: 4304)
!7177 = !DIDerivedType(tag: DW_TAG_member, name: "operstate", scope: !319, file: !31, line: 1941, baseType: !537, size: 8, offset: 4320)
!7178 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode", scope: !319, file: !31, line: 1942, baseType: !537, size: 8, offset: 4328)
!7179 = !DIDerivedType(tag: DW_TAG_member, name: "if_port", scope: !319, file: !31, line: 1944, baseType: !537, size: 8, offset: 4336)
!7180 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !319, file: !31, line: 1945, baseType: !537, size: 8, offset: 4344)
!7181 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !319, file: !31, line: 1952, baseType: !7, size: 32, offset: 4352)
!7182 = !DIDerivedType(tag: DW_TAG_member, name: "min_mtu", scope: !319, file: !31, line: 1953, baseType: !7, size: 32, offset: 4384)
!7183 = !DIDerivedType(tag: DW_TAG_member, name: "max_mtu", scope: !319, file: !31, line: 1954, baseType: !7, size: 32, offset: 4416)
!7184 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !319, file: !31, line: 1955, baseType: !531, size: 16, offset: 4448)
!7185 = !DIDerivedType(tag: DW_TAG_member, name: "hard_header_len", scope: !319, file: !31, line: 1956, baseType: !531, size: 16, offset: 4464)
!7186 = !DIDerivedType(tag: DW_TAG_member, name: "min_header_len", scope: !319, file: !31, line: 1957, baseType: !537, size: 8, offset: 4480)
!7187 = !DIDerivedType(tag: DW_TAG_member, name: "name_assign_type", scope: !319, file: !31, line: 1958, baseType: !537, size: 8, offset: 4488)
!7188 = !DIDerivedType(tag: DW_TAG_member, name: "needed_headroom", scope: !319, file: !31, line: 1960, baseType: !531, size: 16, offset: 4496)
!7189 = !DIDerivedType(tag: DW_TAG_member, name: "needed_tailroom", scope: !319, file: !31, line: 1961, baseType: !531, size: 16, offset: 4512)
!7190 = !DIDerivedType(tag: DW_TAG_member, name: "perm_addr", scope: !319, file: !31, line: 1964, baseType: !1086, size: 256, offset: 4528)
!7191 = !DIDerivedType(tag: DW_TAG_member, name: "addr_assign_type", scope: !319, file: !31, line: 1965, baseType: !537, size: 8, offset: 4784)
!7192 = !DIDerivedType(tag: DW_TAG_member, name: "addr_len", scope: !319, file: !31, line: 1966, baseType: !537, size: 8, offset: 4792)
!7193 = !DIDerivedType(tag: DW_TAG_member, name: "upper_level", scope: !319, file: !31, line: 1967, baseType: !537, size: 8, offset: 4800)
!7194 = !DIDerivedType(tag: DW_TAG_member, name: "lower_level", scope: !319, file: !31, line: 1968, baseType: !537, size: 8, offset: 4808)
!7195 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_priv_len", scope: !319, file: !31, line: 1970, baseType: !531, size: 16, offset: 4816)
!7196 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !319, file: !31, line: 1971, baseType: !531, size: 16, offset: 4832)
!7197 = !DIDerivedType(tag: DW_TAG_member, name: "dev_port", scope: !319, file: !31, line: 1972, baseType: !531, size: 16, offset: 4848)
!7198 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list_lock", scope: !319, file: !31, line: 1973, baseType: !1725, offset: 4864)
!7199 = !DIDerivedType(tag: DW_TAG_member, name: "uc", scope: !319, file: !31, line: 1975, baseType: !7200, size: 192, offset: 4864)
!7200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr_list", file: !31, line: 224, size: 192, elements: !7201)
!7201 = !{!7202, !7203}
!7202 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7200, file: !31, line: 225, baseType: !339, size: 128)
!7203 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7200, file: !31, line: 226, baseType: !32, size: 32, offset: 128)
!7204 = !DIDerivedType(tag: DW_TAG_member, name: "mc", scope: !319, file: !31, line: 1976, baseType: !7200, size: 192, offset: 5056)
!7205 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addrs", scope: !319, file: !31, line: 1977, baseType: !7200, size: 192, offset: 5248)
!7206 = !DIDerivedType(tag: DW_TAG_member, name: "queues_kset", scope: !319, file: !31, line: 1980, baseType: !5822, size: 64, offset: 5440)
!7207 = !DIDerivedType(tag: DW_TAG_member, name: "promiscuity", scope: !319, file: !31, line: 1985, baseType: !7, size: 32, offset: 5504)
!7208 = !DIDerivedType(tag: DW_TAG_member, name: "allmulti", scope: !319, file: !31, line: 1986, baseType: !7, size: 32, offset: 5536)
!7209 = !DIDerivedType(tag: DW_TAG_member, name: "uc_promisc", scope: !319, file: !31, line: 1987, baseType: !826, size: 8, offset: 5568)
!7210 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_info", scope: !319, file: !31, line: 1996, baseType: !7211, size: 64, offset: 5632)
!7211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7212, size: 64)
!7212 = !DICompositeType(tag: DW_TAG_structure_type, name: "vlan_info", file: !31, line: 1996, flags: DIFlagFwdDecl)
!7213 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ptr", scope: !319, file: !31, line: 2007, baseType: !7214, size: 64, offset: 5696)
!7214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7215, size: 64)
!7215 = !DICompositeType(tag: DW_TAG_structure_type, name: "in_device", file: !31, line: 2007, flags: DIFlagFwdDecl)
!7216 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_ptr", scope: !319, file: !31, line: 2011, baseType: !7217, size: 64, offset: 5760)
!7217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7218, size: 64)
!7218 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet6_dev", file: !31, line: 2011, flags: DIFlagFwdDecl)
!7219 = !DIDerivedType(tag: DW_TAG_member, name: "ieee80211_ptr", scope: !319, file: !31, line: 2015, baseType: !7220, size: 64, offset: 5824)
!7220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7221, size: 64)
!7221 = !DICompositeType(tag: DW_TAG_structure_type, name: "wireless_dev", file: !31, line: 62, flags: DIFlagFwdDecl)
!7222 = !DIDerivedType(tag: DW_TAG_member, name: "ieee802154_ptr", scope: !319, file: !31, line: 2016, baseType: !7223, size: 64, offset: 5888)
!7223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7224, size: 64)
!7224 = !DICompositeType(tag: DW_TAG_structure_type, name: "wpan_dev", file: !31, line: 64, flags: DIFlagFwdDecl)
!7225 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr", scope: !319, file: !31, line: 2025, baseType: !619, size: 64, offset: 5952)
!7226 = !DIDerivedType(tag: DW_TAG_member, name: "_rx", scope: !319, file: !31, line: 2027, baseType: !7227, size: 64, offset: 6016)
!7227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7228, size: 64)
!7228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_rx_queue", file: !31, line: 736, size: 1536, elements: !7229)
!7229 = !{!7230, !7231, !7232}
!7230 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !7228, file: !31, line: 741, baseType: !5814, size: 512)
!7231 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7228, file: !31, line: 742, baseType: !345, size: 64, offset: 512)
!7232 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_rxq", scope: !7228, file: !31, line: 743, baseType: !7233, size: 512, align: 512, offset: 1024)
!7233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_rxq_info", file: !5541, line: 57, size: 512, align: 512, elements: !7234)
!7234 = !{!7235, !7236, !7237, !7238}
!7235 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7233, file: !5541, line: 58, baseType: !345, size: 64)
!7236 = !DIDerivedType(tag: DW_TAG_member, name: "queue_index", scope: !7233, file: !5541, line: 59, baseType: !1042, size: 32, offset: 64)
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !7233, file: !5541, line: 60, baseType: !1042, size: 32, offset: 96)
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !7233, file: !5541, line: 61, baseType: !5549, size: 64, offset: 128)
!7239 = !DIDerivedType(tag: DW_TAG_member, name: "num_rx_queues", scope: !319, file: !31, line: 2028, baseType: !7, size: 32, offset: 6080)
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_rx_queues", scope: !319, file: !31, line: 2029, baseType: !7, size: 32, offset: 6112)
!7241 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_prog", scope: !319, file: !31, line: 2031, baseType: !1143, size: 64, offset: 6144)
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "gro_flush_timeout", scope: !319, file: !31, line: 2032, baseType: !367, size: 64, offset: 6208)
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "napi_defer_hard_irqs", scope: !319, file: !31, line: 2033, baseType: !32, size: 32, offset: 6272)
!7244 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler", scope: !319, file: !31, line: 2034, baseType: !7245, size: 64, offset: 6336)
!7245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7246, size: 64)
!7246 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_func_t", file: !31, line: 430, baseType: !7247)
!7247 = !DISubroutineType(types: !7248)
!7248 = !{!7249, !7250}
!7249 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_result_t", file: !31, line: 429, baseType: !312)
!7250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 64)
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler_data", scope: !319, file: !31, line: 2035, baseType: !646, size: 64, offset: 6400)
!7252 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_queue", scope: !319, file: !31, line: 2040, baseType: !7253, size: 64, offset: 6464)
!7253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7254, size: 64)
!7254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_queue", file: !31, line: 584, size: 1600, elements: !7255)
!7255 = !{!7256, !7257, !7260, !7261, !7262, !7263, !7264, !7265, !7266, !7267, !7268, !7269}
!7256 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7254, file: !31, line: 588, baseType: !345, size: 64)
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !7254, file: !31, line: 589, baseType: !7258, size: 64, offset: 64)
!7258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7259, size: 64)
!7259 = !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc", file: !31, line: 589, flags: DIFlagFwdDecl)
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_sleeping", scope: !7254, file: !31, line: 590, baseType: !7258, size: 64, offset: 128)
!7261 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !7254, file: !31, line: 592, baseType: !5814, size: 512, offset: 192)
!7262 = !DIDerivedType(tag: DW_TAG_member, name: "tx_maxrate", scope: !7254, file: !31, line: 597, baseType: !367, size: 64, offset: 704)
!7263 = !DIDerivedType(tag: DW_TAG_member, name: "trans_timeout", scope: !7254, file: !31, line: 602, baseType: !367, size: 64, offset: 768)
!7264 = !DIDerivedType(tag: DW_TAG_member, name: "sb_dev", scope: !7254, file: !31, line: 605, baseType: !345, size: 64, offset: 832)
!7265 = !DIDerivedType(tag: DW_TAG_member, name: "_xmit_lock", scope: !7254, file: !31, line: 612, baseType: !1725, offset: 896)
!7266 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_lock_owner", scope: !7254, file: !31, line: 613, baseType: !32, size: 32, offset: 896)
!7267 = !DIDerivedType(tag: DW_TAG_member, name: "trans_start", scope: !7254, file: !31, line: 617, baseType: !367, size: 64, offset: 960)
!7268 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7254, file: !31, line: 619, baseType: !367, size: 64, offset: 1024)
!7269 = !DIDerivedType(tag: DW_TAG_member, name: "dql", scope: !7254, file: !31, line: 622, baseType: !7270, size: 512, offset: 1088)
!7270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dql", file: !7271, line: 43, size: 512, elements: !7272)
!7271 = !DIFile(filename: "./include/linux/dynamic_queue_limits.h", directory: "/home/lizy2001/genbc/linux")
!7272 = !{!7273, !7274, !7275, !7276, !7277, !7278, !7279, !7280, !7281, !7282, !7283, !7284, !7285}
!7273 = !DIDerivedType(tag: DW_TAG_member, name: "num_queued", scope: !7270, file: !7271, line: 45, baseType: !7, size: 32)
!7274 = !DIDerivedType(tag: DW_TAG_member, name: "adj_limit", scope: !7270, file: !7271, line: 46, baseType: !7, size: 32, offset: 32)
!7275 = !DIDerivedType(tag: DW_TAG_member, name: "last_obj_cnt", scope: !7270, file: !7271, line: 47, baseType: !7, size: 32, offset: 64)
!7276 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !7270, file: !7271, line: 51, baseType: !7, size: 32, offset: 96)
!7277 = !DIDerivedType(tag: DW_TAG_member, name: "num_completed", scope: !7270, file: !7271, line: 52, baseType: !7, size: 32, offset: 128)
!7278 = !DIDerivedType(tag: DW_TAG_member, name: "prev_ovlimit", scope: !7270, file: !7271, line: 54, baseType: !7, size: 32, offset: 160)
!7279 = !DIDerivedType(tag: DW_TAG_member, name: "prev_num_queued", scope: !7270, file: !7271, line: 55, baseType: !7, size: 32, offset: 192)
!7280 = !DIDerivedType(tag: DW_TAG_member, name: "prev_last_obj_cnt", scope: !7270, file: !7271, line: 56, baseType: !7, size: 32, offset: 224)
!7281 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_slack", scope: !7270, file: !7271, line: 58, baseType: !7, size: 32, offset: 256)
!7282 = !DIDerivedType(tag: DW_TAG_member, name: "slack_start_time", scope: !7270, file: !7271, line: 59, baseType: !367, size: 64, offset: 320)
!7283 = !DIDerivedType(tag: DW_TAG_member, name: "max_limit", scope: !7270, file: !7271, line: 62, baseType: !7, size: 32, offset: 384)
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "min_limit", scope: !7270, file: !7271, line: 63, baseType: !7, size: 32, offset: 416)
!7285 = !DIDerivedType(tag: DW_TAG_member, name: "slack_hold_time", scope: !7270, file: !7271, line: 64, baseType: !7, size: 32, offset: 448)
!7286 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !319, file: !31, line: 2045, baseType: !1086, size: 256, offset: 6528)
!7287 = !DIDerivedType(tag: DW_TAG_member, name: "index_hlist", scope: !319, file: !31, line: 2049, baseType: !331, size: 128, offset: 6784)
!7288 = !DIDerivedType(tag: DW_TAG_member, name: "_tx", scope: !319, file: !31, line: 2054, baseType: !7253, size: 64, offset: 6912)
!7289 = !DIDerivedType(tag: DW_TAG_member, name: "num_tx_queues", scope: !319, file: !31, line: 2055, baseType: !7, size: 32, offset: 6976)
!7290 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_tx_queues", scope: !319, file: !31, line: 2056, baseType: !7, size: 32, offset: 7008)
!7291 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !319, file: !31, line: 2057, baseType: !7258, size: 64, offset: 7040)
!7292 = !DIDerivedType(tag: DW_TAG_member, name: "tx_queue_len", scope: !319, file: !31, line: 2058, baseType: !7, size: 32, offset: 7104)
!7293 = !DIDerivedType(tag: DW_TAG_member, name: "tx_global_lock", scope: !319, file: !31, line: 2059, baseType: !1725, offset: 7136)
!7294 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_bulkq", scope: !319, file: !31, line: 2061, baseType: !7295, size: 64, offset: 7168)
!7295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7296, size: 64)
!7296 = !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_dev_bulk_queue", file: !31, line: 879, flags: DIFlagFwdDecl)
!7297 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timer", scope: !319, file: !31, line: 2075, baseType: !3290, size: 320, offset: 7232)
!7298 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timeo", scope: !319, file: !31, line: 2076, baseType: !32, size: 32, offset: 7552)
!7299 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down_reason", scope: !319, file: !31, line: 2078, baseType: !1042, size: 32, offset: 7584)
!7300 = !DIDerivedType(tag: DW_TAG_member, name: "todo_list", scope: !319, file: !31, line: 2080, baseType: !339, size: 128, offset: 7616)
!7301 = !DIDerivedType(tag: DW_TAG_member, name: "pcpu_refcnt", scope: !319, file: !31, line: 2081, baseType: !1056, size: 64, offset: 7744)
!7302 = !DIDerivedType(tag: DW_TAG_member, name: "link_watch_list", scope: !319, file: !31, line: 2083, baseType: !339, size: 128, offset: 7808)
!7303 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !319, file: !31, line: 2091, baseType: !318, size: 8, offset: 7936, flags: DIFlagBitField, extraData: i64 7936)
!7304 = !DIDerivedType(tag: DW_TAG_member, name: "dismantle", scope: !319, file: !31, line: 2093, baseType: !826, size: 8, offset: 7944)
!7305 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_state", scope: !319, file: !31, line: 2098, baseType: !7306, size: 16, offset: 7952, flags: DIFlagBitField, extraData: i64 7952)
!7306 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !319, file: !31, line: 2095, baseType: !7, size: 32, elements: !7307)
!7307 = !{!7308, !7309}
!7308 = !DIEnumerator(name: "RTNL_LINK_INITIALIZED", value: 0, isUnsigned: true)
!7309 = !DIEnumerator(name: "RTNL_LINK_INITIALIZING", value: 1, isUnsigned: true)
!7310 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free_netdev", scope: !319, file: !31, line: 2100, baseType: !826, size: 8, offset: 7968)
!7311 = !DIDerivedType(tag: DW_TAG_member, name: "priv_destructor", scope: !319, file: !31, line: 2101, baseType: !460, size: 64, offset: 8000)
!7312 = !DIDerivedType(tag: DW_TAG_member, name: "nd_net", scope: !319, file: !31, line: 2107, baseType: !6549, size: 64, offset: 8064)
!7313 = !DIDerivedType(tag: DW_TAG_member, scope: !319, file: !31, line: 2110, baseType: !7314, size: 64, offset: 8128)
!7314 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !319, file: !31, line: 2110, size: 64, elements: !7315)
!7315 = !{!7316, !7317, !7338, !7347}
!7316 = !DIDerivedType(tag: DW_TAG_member, name: "ml_priv", scope: !7314, file: !31, line: 2111, baseType: !646, size: 64)
!7317 = !DIDerivedType(tag: DW_TAG_member, name: "lstats", scope: !7314, file: !31, line: 2112, baseType: !7318, size: 64)
!7318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7319, size: 64)
!7319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_lstats", file: !31, line: 2542, size: 128, align: 128, elements: !7320)
!7320 = !{!7321, !7336, !7337}
!7321 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !7319, file: !31, line: 2543, baseType: !7322, size: 64)
!7322 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64_stats_t", file: !3127, line: 79, baseType: !7323)
!7323 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3127, line: 77, size: 64, elements: !7324)
!7324 = !{!7325}
!7325 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !7323, file: !3127, line: 78, baseType: !7326, size: 64)
!7326 = !DIDerivedType(tag: DW_TAG_typedef, name: "local64_t", file: !7327, line: 26, baseType: !7328)
!7327 = !DIFile(filename: "./include/asm-generic/local64.h", directory: "/home/lizy2001/genbc/linux")
!7328 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7327, line: 24, size: 64, elements: !7329)
!7329 = !{!7330}
!7330 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !7328, file: !7327, line: 25, baseType: !7331, size: 64)
!7331 = !DIDerivedType(tag: DW_TAG_typedef, name: "local_t", file: !7332, line: 12, baseType: !7333)
!7332 = !DIFile(filename: "./arch/x86/include/asm/local.h", directory: "/home/lizy2001/genbc/linux")
!7333 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7332, line: 10, size: 64, elements: !7334)
!7334 = !{!7335}
!7335 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !7333, file: !7332, line: 11, baseType: !426, size: 64)
!7336 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !7319, file: !31, line: 2544, baseType: !7322, size: 64, offset: 64)
!7337 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !7319, file: !31, line: 2545, baseType: !3126, offset: 128)
!7338 = !DIDerivedType(tag: DW_TAG_member, name: "tstats", scope: !7314, file: !31, line: 2113, baseType: !7339, size: 64)
!7339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7340, size: 64)
!7340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_sw_netstats", file: !31, line: 2534, size: 256, align: 256, elements: !7341)
!7341 = !{!7342, !7343, !7344, !7345, !7346}
!7342 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !7340, file: !31, line: 2535, baseType: !386, size: 64)
!7343 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !7340, file: !31, line: 2536, baseType: !386, size: 64, offset: 64)
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !7340, file: !31, line: 2537, baseType: !386, size: 64, offset: 128)
!7345 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !7340, file: !31, line: 2538, baseType: !386, size: 64, offset: 192)
!7346 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !7340, file: !31, line: 2539, baseType: !3126, offset: 256)
!7347 = !DIDerivedType(tag: DW_TAG_member, name: "dstats", scope: !7314, file: !31, line: 2114, baseType: !7348, size: 64)
!7348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7349, size: 64)
!7349 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_dstats", file: !31, line: 2114, flags: DIFlagFwdDecl)
!7350 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !319, file: !31, line: 2124, baseType: !5810, size: 5568, offset: 8192)
!7351 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_groups", scope: !319, file: !31, line: 2125, baseType: !7352, size: 256, offset: 13760)
!7352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5892, size: 256, elements: !2327)
!7353 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_rx_queue_group", scope: !319, file: !31, line: 2126, baseType: !5892, size: 64, offset: 14016)
!7354 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_ops", scope: !319, file: !31, line: 2128, baseType: !7355, size: 64, offset: 14080)
!7355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7356, size: 64)
!7356 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7357)
!7357 = !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_ops", file: !31, line: 2128, flags: DIFlagFwdDecl)
!7358 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_size", scope: !319, file: !31, line: 2132, baseType: !7, size: 32, offset: 14144)
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_segs", scope: !319, file: !31, line: 2134, baseType: !636, size: 16, offset: 14176)
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "num_tc", scope: !319, file: !31, line: 2139, baseType: !2369, size: 16, offset: 14192)
!7361 = !DIDerivedType(tag: DW_TAG_member, name: "tc_to_txq", scope: !319, file: !31, line: 2140, baseType: !7362, size: 512, offset: 14208)
!7362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7363, size: 512, elements: !324)
!7363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_tc_txq", file: !31, line: 793, size: 32, elements: !7364)
!7364 = !{!7365, !7366}
!7365 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7363, file: !31, line: 794, baseType: !636, size: 16)
!7366 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !7363, file: !31, line: 795, baseType: !636, size: 16, offset: 16)
!7367 = !DIDerivedType(tag: DW_TAG_member, name: "prio_tc_map", scope: !319, file: !31, line: 2141, baseType: !7368, size: 128, offset: 14720)
!7368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !849, size: 128, elements: !324)
!7369 = !DIDerivedType(tag: DW_TAG_member, name: "phydev", scope: !319, file: !31, line: 2149, baseType: !7370, size: 64, offset: 14848)
!7370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7371, size: 64)
!7371 = !DICompositeType(tag: DW_TAG_structure_type, name: "phy_device", file: !306, line: 536, flags: DIFlagFwdDecl)
!7372 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus", scope: !319, file: !31, line: 2150, baseType: !7373, size: 64, offset: 14912)
!7373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7374, size: 64)
!7374 = !DICompositeType(tag: DW_TAG_structure_type, name: "sfp_bus", file: !31, line: 60, flags: DIFlagFwdDecl)
!7375 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_tx_busylock", scope: !319, file: !31, line: 2151, baseType: !7376, size: 64, offset: 14976)
!7376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 64)
!7377 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_running_key", scope: !319, file: !31, line: 2152, baseType: !7376, size: 64, offset: 15040)
!7378 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down", scope: !319, file: !31, line: 2153, baseType: !826, size: 8, offset: 15104)
!7379 = !DIDerivedType(tag: DW_TAG_member, name: "wol_enabled", scope: !319, file: !31, line: 2154, baseType: !7, size: 1, offset: 15112, flags: DIFlagBitField, extraData: i64 15112)
!7380 = !DIDerivedType(tag: DW_TAG_member, name: "net_notifier_list", scope: !319, file: !31, line: 2156, baseType: !339, size: 128, offset: 15168)
!7381 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic_info", scope: !319, file: !31, line: 2162, baseType: !7382, size: 64, offset: 15296)
!7382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7383, size: 64)
!7383 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7384)
!7384 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_info", file: !31, line: 68, flags: DIFlagFwdDecl)
!7385 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic", scope: !319, file: !31, line: 2163, baseType: !7386, size: 64, offset: 15360)
!7386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7387, size: 64)
!7387 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic", file: !31, line: 69, flags: DIFlagFwdDecl)
!7388 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_state", scope: !319, file: !31, line: 2166, baseType: !7389, size: 384, offset: 15424)
!7389 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7390, size: 384, elements: !1647)
!7390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_entity", file: !31, line: 889, size: 128, elements: !7391)
!7391 = !{!7392, !7393}
!7392 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !7390, file: !31, line: 890, baseType: !1143, size: 64)
!7393 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !7390, file: !31, line: 891, baseType: !7394, size: 64, offset: 64)
!7394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7395, size: 64)
!7395 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_link", file: !31, line: 880, flags: DIFlagFwdDecl)
!7396 = !{!7397, !7398, !7399, !7400, !7401, !7402}
!7397 = !DIEnumerator(name: "NETREG_UNINITIALIZED", value: 0, isUnsigned: true)
!7398 = !DIEnumerator(name: "NETREG_REGISTERED", value: 1, isUnsigned: true)
!7399 = !DIEnumerator(name: "NETREG_UNREGISTERING", value: 2, isUnsigned: true)
!7400 = !DIEnumerator(name: "NETREG_UNREGISTERED", value: 3, isUnsigned: true)
!7401 = !DIEnumerator(name: "NETREG_RELEASED", value: 4, isUnsigned: true)
!7402 = !DIEnumerator(name: "NETREG_DUMMY", value: 5, isUnsigned: true)
!7403 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_pci_queue_type", file: !3, line: 30, baseType: !7, size: 32, elements: !7404)
!7404 = !{!7405, !7406, !7407, !7408}
!7405 = !DIEnumerator(name: "MLXSW_PCI_QUEUE_TYPE_SDQ", value: 0, isUnsigned: true)
!7406 = !DIEnumerator(name: "MLXSW_PCI_QUEUE_TYPE_RDQ", value: 1, isUnsigned: true)
!7407 = !DIEnumerator(name: "MLXSW_PCI_QUEUE_TYPE_CQ", value: 2, isUnsigned: true)
!7408 = !DIEnumerator(name: "MLXSW_PCI_QUEUE_TYPE_EQ", value: 3, isUnsigned: true)
!7409 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_pci_cqe_v", file: !7410, line: 107, baseType: !7, size: 32, elements: !7411)
!7410 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/pci_hw.h", directory: "/home/lizy2001/genbc/linux")
!7411 = !{!7412, !7413, !7414}
!7412 = !DIEnumerator(name: "MLXSW_PCI_CQE_V0", value: 0, isUnsigned: true)
!7413 = !DIEnumerator(name: "MLXSW_PCI_CQE_V1", value: 1, isUnsigned: true)
!7414 = !DIEnumerator(name: "MLXSW_PCI_CQE_V2", value: 2, isUnsigned: true)
!7415 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7416, line: 10, baseType: !7, size: 32, elements: !7417)
!7416 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!7417 = !{!7418, !7419}
!7418 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!7419 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!7420 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !7421, line: 305, baseType: !7, size: 32, elements: !7422)
!7421 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!7422 = !{!7423, !7424, !7425, !7426}
!7423 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!7424 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!7425 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!7426 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!7427 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_res_id", file: !7428, line: 10, baseType: !7, size: 32, elements: !7429)
!7428 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/resources.h", directory: "/home/lizy2001/genbc/linux")
!7429 = !{!7430, !7431, !7432, !7433, !7434, !7435, !7436, !7437, !7438, !7439, !7440, !7441, !7442, !7443, !7444, !7445, !7446, !7447, !7448, !7449, !7450, !7451, !7452, !7453, !7454, !7455, !7456, !7457, !7458, !7459, !7460, !7461, !7462, !7463, !7464, !7465, !7466, !7467, !7468, !7469, !7470, !7471, !7472, !7473, !7474, !7475, !7476, !7477, !7478, !7479, !7480}
!7430 = !DIEnumerator(name: "MLXSW_RES_ID_KVD_SIZE", value: 0, isUnsigned: true)
!7431 = !DIEnumerator(name: "MLXSW_RES_ID_KVD_SINGLE_MIN_SIZE", value: 1, isUnsigned: true)
!7432 = !DIEnumerator(name: "MLXSW_RES_ID_KVD_DOUBLE_MIN_SIZE", value: 2, isUnsigned: true)
!7433 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_KVD_LINEAR_RANGE", value: 3, isUnsigned: true)
!7434 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_KVD_ACTION_SETS", value: 4, isUnsigned: true)
!7435 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_TRAP_GROUPS", value: 5, isUnsigned: true)
!7436 = !DIEnumerator(name: "MLXSW_RES_ID_CQE_V0", value: 6, isUnsigned: true)
!7437 = !DIEnumerator(name: "MLXSW_RES_ID_CQE_V1", value: 7, isUnsigned: true)
!7438 = !DIEnumerator(name: "MLXSW_RES_ID_CQE_V2", value: 8, isUnsigned: true)
!7439 = !DIEnumerator(name: "MLXSW_RES_ID_COUNTER_POOL_SIZE", value: 9, isUnsigned: true)
!7440 = !DIEnumerator(name: "MLXSW_RES_ID_COUNTER_BANK_SIZE", value: 10, isUnsigned: true)
!7441 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_SPAN", value: 11, isUnsigned: true)
!7442 = !DIEnumerator(name: "MLXSW_RES_ID_COUNTER_SIZE_PACKETS_BYTES", value: 12, isUnsigned: true)
!7443 = !DIEnumerator(name: "MLXSW_RES_ID_COUNTER_SIZE_ROUTER_BASIC", value: 13, isUnsigned: true)
!7444 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_SYSTEM_PORT", value: 14, isUnsigned: true)
!7445 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_LAG", value: 15, isUnsigned: true)
!7446 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_LAG_MEMBERS", value: 16, isUnsigned: true)
!7447 = !DIEnumerator(name: "MLXSW_RES_ID_LOCAL_PORTS_IN_1X", value: 17, isUnsigned: true)
!7448 = !DIEnumerator(name: "MLXSW_RES_ID_LOCAL_PORTS_IN_2X", value: 18, isUnsigned: true)
!7449 = !DIEnumerator(name: "MLXSW_RES_ID_LOCAL_PORTS_IN_4X", value: 19, isUnsigned: true)
!7450 = !DIEnumerator(name: "MLXSW_RES_ID_GUARANTEED_SHARED_BUFFER", value: 20, isUnsigned: true)
!7451 = !DIEnumerator(name: "MLXSW_RES_ID_CELL_SIZE", value: 21, isUnsigned: true)
!7452 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_HEADROOM_SIZE", value: 22, isUnsigned: true)
!7453 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_TCAM_REGIONS", value: 23, isUnsigned: true)
!7454 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_TCAM_RULES", value: 24, isUnsigned: true)
!7455 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_REGIONS", value: 25, isUnsigned: true)
!7456 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_GROUPS", value: 26, isUnsigned: true)
!7457 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_GROUP_SIZE", value: 27, isUnsigned: true)
!7458 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_FLEX_KEYS", value: 28, isUnsigned: true)
!7459 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_ACTION_PER_RULE", value: 29, isUnsigned: true)
!7460 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_ACTIONS_PER_SET", value: 30, isUnsigned: true)
!7461 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_ERPT_BANKS", value: 31, isUnsigned: true)
!7462 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_ERPT_BANK_SIZE", value: 32, isUnsigned: true)
!7463 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_LARGE_KEY_ID", value: 33, isUnsigned: true)
!7464 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_ERPT_ENTRIES_2KB", value: 34, isUnsigned: true)
!7465 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_ERPT_ENTRIES_4KB", value: 35, isUnsigned: true)
!7466 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_ERPT_ENTRIES_8KB", value: 36, isUnsigned: true)
!7467 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_ERPT_ENTRIES_12KB", value: 37, isUnsigned: true)
!7468 = !DIEnumerator(name: "MLXSW_RES_ID_ACL_MAX_BF_LOG", value: 38, isUnsigned: true)
!7469 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_GLOBAL_POLICERS", value: 39, isUnsigned: true)
!7470 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_CPU_POLICERS", value: 40, isUnsigned: true)
!7471 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_VRS", value: 41, isUnsigned: true)
!7472 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_RIFS", value: 42, isUnsigned: true)
!7473 = !DIEnumerator(name: "MLXSW_RES_ID_MC_ERIF_LIST_ENTRIES", value: 43, isUnsigned: true)
!7474 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_LPM_TREES", value: 44, isUnsigned: true)
!7475 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_NVE_MC_ENTRIES_IPV4", value: 45, isUnsigned: true)
!7476 = !DIEnumerator(name: "MLXSW_RES_ID_MAX_NVE_MC_ENTRIES_IPV6", value: 46, isUnsigned: true)
!7477 = !DIEnumerator(name: "MLXSW_RES_ID_KVD_SINGLE_SIZE", value: 47, isUnsigned: true)
!7478 = !DIEnumerator(name: "MLXSW_RES_ID_KVD_DOUBLE_SIZE", value: 48, isUnsigned: true)
!7479 = !DIEnumerator(name: "MLXSW_RES_ID_KVD_LINEAR_SIZE", value: 49, isUnsigned: true)
!7480 = !DIEnumerator(name: "__MLXSW_RES_ID_MAX", value: 50, isUnsigned: true)
!7481 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_cmd_opcode", file: !7482, line: 58, baseType: !7, size: 32, elements: !7483)
!7482 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/cmd.h", directory: "/home/lizy2001/genbc/linux")
!7483 = !{!7484, !7485, !7486, !7487, !7488, !7489, !7490, !7491, !7492, !7493, !7494, !7495, !7496, !7497, !7498, !7499, !7500, !7501}
!7484 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_QUERY_FW", value: 4, isUnsigned: true)
!7485 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_QUERY_BOARDINFO", value: 6, isUnsigned: true)
!7486 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_QUERY_AQ_CAP", value: 3, isUnsigned: true)
!7487 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_MAP_FA", value: 4095, isUnsigned: true)
!7488 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_UNMAP_FA", value: 4094, isUnsigned: true)
!7489 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_CONFIG_PROFILE", value: 256, isUnsigned: true)
!7490 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_ACCESS_REG", value: 64, isUnsigned: true)
!7491 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_SW2HW_DQ", value: 513, isUnsigned: true)
!7492 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_HW2SW_DQ", value: 514, isUnsigned: true)
!7493 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_2ERR_DQ", value: 30, isUnsigned: true)
!7494 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_QUERY_DQ", value: 34, isUnsigned: true)
!7495 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_SW2HW_CQ", value: 22, isUnsigned: true)
!7496 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_HW2SW_CQ", value: 23, isUnsigned: true)
!7497 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_QUERY_CQ", value: 24, isUnsigned: true)
!7498 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_SW2HW_EQ", value: 19, isUnsigned: true)
!7499 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_HW2SW_EQ", value: 20, isUnsigned: true)
!7500 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_QUERY_EQ", value: 21, isUnsigned: true)
!7501 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_QUERY_RESOURCES", value: 257, isUnsigned: true)
!7502 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3067, line: 651, baseType: !7, size: 32, elements: !7503)
!7503 = !{!7504, !7505}
!7504 = !DIEnumerator(name: "TASKLET_STATE_SCHED", value: 0, isUnsigned: true)
!7505 = !DIEnumerator(name: "TASKLET_STATE_RUN", value: 1, isUnsigned: true)
!7506 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_cmd_mbox_sw2hw_cq_cqe_ver", file: !7482, line: 1040, baseType: !7, size: 32, elements: !7507)
!7507 = !{!7508, !7509}
!7508 = !DIEnumerator(name: "MLXSW_CMD_MBOX_SW2HW_CQ_CQE_VER_1", value: 0, isUnsigned: true)
!7509 = !DIEnumerator(name: "MLXSW_CMD_MBOX_SW2HW_CQ_CQE_VER_2", value: 1, isUnsigned: true)
!7510 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !7511, line: 5, baseType: !7, size: 32, elements: !7512)
!7511 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!7512 = !{!7513, !7514, !7515, !7516}
!7513 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!7514 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!7515 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!7516 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!7517 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !472, line: 423, baseType: !7, size: 32, elements: !7518)
!7518 = !{!7519, !7520, !7521, !7522, !7523, !7524, !7525}
!7519 = !DIEnumerator(name: "SKBTX_HW_TSTAMP", value: 1, isUnsigned: true)
!7520 = !DIEnumerator(name: "SKBTX_SW_TSTAMP", value: 2, isUnsigned: true)
!7521 = !DIEnumerator(name: "SKBTX_IN_PROGRESS", value: 4, isUnsigned: true)
!7522 = !DIEnumerator(name: "SKBTX_DEV_ZEROCOPY", value: 8, isUnsigned: true)
!7523 = !DIEnumerator(name: "SKBTX_WIFI_STATUS", value: 16, isUnsigned: true)
!7524 = !DIEnumerator(name: "SKBTX_SHARED_FRAG", value: 32, isUnsigned: true)
!7525 = !DIEnumerator(name: "SKBTX_SCHED_TSTAMP", value: 64, isUnsigned: true)
!7526 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "skb_free_reason", file: !31, line: 3780, baseType: !7, size: 32, elements: !7527)
!7527 = !{!7528, !7529}
!7528 = !DIEnumerator(name: "SKB_REASON_CONSUMED", value: 0, isUnsigned: true)
!7529 = !DIEnumerator(name: "SKB_REASON_DROPPED", value: 1, isUnsigned: true)
!7530 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7531, line: 7, baseType: !7, size: 32, elements: !7532)
!7531 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/trap.h", directory: "/home/lizy2001/genbc/linux")
!7532 = !{!7533, !7534, !7535, !7536, !7537, !7538, !7539, !7540, !7541, !7542, !7543, !7544, !7545, !7546, !7547, !7548, !7549, !7550, !7551, !7552, !7553, !7554, !7555, !7556, !7557, !7558, !7559, !7560, !7561, !7562, !7563, !7564, !7565, !7566, !7567, !7568, !7569, !7570, !7571, !7572, !7573, !7574, !7575, !7576, !7577, !7578, !7579, !7580, !7581, !7582, !7583, !7584, !7585, !7586, !7587, !7588, !7589, !7590, !7591, !7592, !7593, !7594, !7595, !7596, !7597, !7598, !7599, !7600, !7601, !7602, !7603, !7604, !7605, !7606, !7607, !7608, !7609, !7610, !7611, !7612, !7613, !7614, !7615, !7616, !7617, !7618, !7619, !7620, !7621, !7622, !7623, !7624, !7625, !7626, !7627, !7628, !7629, !7630, !7631, !7632, !7633, !7634, !7635, !7636, !7637, !7638, !7639}
!7533 = !DIEnumerator(name: "MLXSW_TRAP_ID_FDB_MC", value: 1, isUnsigned: true)
!7534 = !DIEnumerator(name: "MLXSW_TRAP_ID_ETHEMAD", value: 5, isUnsigned: true)
!7535 = !DIEnumerator(name: "MLXSW_TRAP_ID_STP", value: 16, isUnsigned: true)
!7536 = !DIEnumerator(name: "MLXSW_TRAP_ID_LACP", value: 17, isUnsigned: true)
!7537 = !DIEnumerator(name: "MLXSW_TRAP_ID_EAPOL", value: 18, isUnsigned: true)
!7538 = !DIEnumerator(name: "MLXSW_TRAP_ID_LLDP", value: 19, isUnsigned: true)
!7539 = !DIEnumerator(name: "MLXSW_TRAP_ID_MMRP", value: 20, isUnsigned: true)
!7540 = !DIEnumerator(name: "MLXSW_TRAP_ID_MVRP", value: 21, isUnsigned: true)
!7541 = !DIEnumerator(name: "MLXSW_TRAP_ID_RPVST", value: 22, isUnsigned: true)
!7542 = !DIEnumerator(name: "MLXSW_TRAP_ID_DHCP", value: 25, isUnsigned: true)
!7543 = !DIEnumerator(name: "MLXSW_TRAP_ID_PTP0", value: 40, isUnsigned: true)
!7544 = !DIEnumerator(name: "MLXSW_TRAP_ID_PTP1", value: 41, isUnsigned: true)
!7545 = !DIEnumerator(name: "MLXSW_TRAP_ID_IGMP_QUERY", value: 48, isUnsigned: true)
!7546 = !DIEnumerator(name: "MLXSW_TRAP_ID_IGMP_V1_REPORT", value: 49, isUnsigned: true)
!7547 = !DIEnumerator(name: "MLXSW_TRAP_ID_IGMP_V2_REPORT", value: 50, isUnsigned: true)
!7548 = !DIEnumerator(name: "MLXSW_TRAP_ID_IGMP_V2_LEAVE", value: 51, isUnsigned: true)
!7549 = !DIEnumerator(name: "MLXSW_TRAP_ID_IGMP_V3_REPORT", value: 52, isUnsigned: true)
!7550 = !DIEnumerator(name: "MLXSW_TRAP_ID_PKT_SAMPLE", value: 56, isUnsigned: true)
!7551 = !DIEnumerator(name: "MLXSW_TRAP_ID_FID_MISS", value: 61, isUnsigned: true)
!7552 = !DIEnumerator(name: "MLXSW_TRAP_ID_DECAP_ECN0", value: 64, isUnsigned: true)
!7553 = !DIEnumerator(name: "MLXSW_TRAP_ID_ARPBC", value: 80, isUnsigned: true)
!7554 = !DIEnumerator(name: "MLXSW_TRAP_ID_ARPUC", value: 81, isUnsigned: true)
!7555 = !DIEnumerator(name: "MLXSW_TRAP_ID_MTUERROR", value: 82, isUnsigned: true)
!7556 = !DIEnumerator(name: "MLXSW_TRAP_ID_TTLERROR", value: 83, isUnsigned: true)
!7557 = !DIEnumerator(name: "MLXSW_TRAP_ID_LBERROR", value: 84, isUnsigned: true)
!7558 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV4_OSPF", value: 85, isUnsigned: true)
!7559 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV4_PIM", value: 88, isUnsigned: true)
!7560 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV4_VRRP", value: 89, isUnsigned: true)
!7561 = !DIEnumerator(name: "MLXSW_TRAP_ID_RPF", value: 92, isUnsigned: true)
!7562 = !DIEnumerator(name: "MLXSW_TRAP_ID_IP2ME", value: 95, isUnsigned: true)
!7563 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV6_UNSPECIFIED_ADDRESS", value: 96, isUnsigned: true)
!7564 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV6_LINK_LOCAL_DEST", value: 97, isUnsigned: true)
!7565 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV6_LINK_LOCAL_SRC", value: 98, isUnsigned: true)
!7566 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV6_ALL_NODES_LINK", value: 99, isUnsigned: true)
!7567 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV6_OSPF", value: 100, isUnsigned: true)
!7568 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV6_MLDV12_LISTENER_QUERY", value: 101, isUnsigned: true)
!7569 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV6_MLDV1_LISTENER_REPORT", value: 102, isUnsigned: true)
!7570 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV6_MLDV1_LISTENER_DONE", value: 103, isUnsigned: true)
!7571 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV6_MLDV2_LISTENER_REPORT", value: 104, isUnsigned: true)
!7572 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV6_DHCP", value: 105, isUnsigned: true)
!7573 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV6_ALL_ROUTERS_LINK", value: 111, isUnsigned: true)
!7574 = !DIEnumerator(name: "MLXSW_TRAP_ID_RTR_INGRESS0", value: 112, isUnsigned: true)
!7575 = !DIEnumerator(name: "MLXSW_TRAP_ID_RTR_INGRESS1", value: 113, isUnsigned: true)
!7576 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV6_PIM", value: 121, isUnsigned: true)
!7577 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV6_VRRP", value: 122, isUnsigned: true)
!7578 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV4_BGP", value: 136, isUnsigned: true)
!7579 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV6_BGP", value: 137, isUnsigned: true)
!7580 = !DIEnumerator(name: "MLXSW_TRAP_ID_L3_IPV6_ROUTER_SOLICITATION", value: 138, isUnsigned: true)
!7581 = !DIEnumerator(name: "MLXSW_TRAP_ID_L3_IPV6_ROUTER_ADVERTISEMENT", value: 139, isUnsigned: true)
!7582 = !DIEnumerator(name: "MLXSW_TRAP_ID_L3_IPV6_NEIGHBOR_SOLICITATION", value: 140, isUnsigned: true)
!7583 = !DIEnumerator(name: "MLXSW_TRAP_ID_L3_IPV6_NEIGHBOR_ADVERTISEMENT", value: 141, isUnsigned: true)
!7584 = !DIEnumerator(name: "MLXSW_TRAP_ID_L3_IPV6_REDIRECTION", value: 142, isUnsigned: true)
!7585 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV4_DHCP", value: 143, isUnsigned: true)
!7586 = !DIEnumerator(name: "MLXSW_TRAP_ID_HOST_MISS_IPV4", value: 144, isUnsigned: true)
!7587 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV6_MC_LINK_LOCAL_DEST", value: 145, isUnsigned: true)
!7588 = !DIEnumerator(name: "MLXSW_TRAP_ID_HOST_MISS_IPV6", value: 146, isUnsigned: true)
!7589 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPIP_DECAP_ERROR", value: 177, isUnsigned: true)
!7590 = !DIEnumerator(name: "MLXSW_TRAP_ID_NVE_DECAP_ARP", value: 184, isUnsigned: true)
!7591 = !DIEnumerator(name: "MLXSW_TRAP_ID_NVE_ENCAP_ARP", value: 189, isUnsigned: true)
!7592 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV4_BFD", value: 208, isUnsigned: true)
!7593 = !DIEnumerator(name: "MLXSW_TRAP_ID_IPV6_BFD", value: 209, isUnsigned: true)
!7594 = !DIEnumerator(name: "MLXSW_TRAP_ID_ROUTER_ALERT_IPV4", value: 214, isUnsigned: true)
!7595 = !DIEnumerator(name: "MLXSW_TRAP_ID_ROUTER_ALERT_IPV6", value: 215, isUnsigned: true)
!7596 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_NON_ROUTABLE", value: 282, isUnsigned: true)
!7597 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ROUTER2", value: 304, isUnsigned: true)
!7598 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ROUTER3", value: 305, isUnsigned: true)
!7599 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ING_PACKET_SMAC_MC", value: 320, isUnsigned: true)
!7600 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ING_SWITCH_VTAG_ALLOW", value: 328, isUnsigned: true)
!7601 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ING_SWITCH_VLAN", value: 329, isUnsigned: true)
!7602 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ING_SWITCH_STP", value: 330, isUnsigned: true)
!7603 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_LOOKUP_SWITCH_UC", value: 336, isUnsigned: true)
!7604 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_LOOKUP_SWITCH_MC_NULL", value: 337, isUnsigned: true)
!7605 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_LOOKUP_SWITCH_LB", value: 338, isUnsigned: true)
!7606 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ING_ROUTER_NON_IP_PACKET", value: 352, isUnsigned: true)
!7607 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ING_ROUTER_UC_DIP_MC_DMAC", value: 353, isUnsigned: true)
!7608 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ING_ROUTER_DIP_LB", value: 354, isUnsigned: true)
!7609 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ING_ROUTER_SIP_MC", value: 355, isUnsigned: true)
!7610 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ING_ROUTER_SIP_CLASS_E", value: 356, isUnsigned: true)
!7611 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ING_ROUTER_SIP_LB", value: 357, isUnsigned: true)
!7612 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ING_ROUTER_CORRUPTED_IP_HDR", value: 359, isUnsigned: true)
!7613 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ING_ROUTER_MC_DMAC", value: 360, isUnsigned: true)
!7614 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ING_ROUTER_SIP_DIP", value: 361, isUnsigned: true)
!7615 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ING_ROUTER_IPV4_SIP_BC", value: 362, isUnsigned: true)
!7616 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ING_ROUTER_IPV4_DIP_LOCAL_NET", value: 363, isUnsigned: true)
!7617 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ING_ROUTER_DIP_LINK_LOCAL", value: 364, isUnsigned: true)
!7618 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ROUTER_IRIF_EN", value: 376, isUnsigned: true)
!7619 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ROUTER_ERIF_EN", value: 377, isUnsigned: true)
!7620 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ROUTER_LPM4", value: 379, isUnsigned: true)
!7621 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_ROUTER_LPM6", value: 380, isUnsigned: true)
!7622 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_DEC_PKT", value: 392, isUnsigned: true)
!7623 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_OVERLAY_SMAC_MC", value: 400, isUnsigned: true)
!7624 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_IPV6_MC_DIP_RESERVED_SCOPE", value: 432, isUnsigned: true)
!7625 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_IPV6_MC_DIP_INTERFACE_LOCAL_SCOPE", value: 433, isUnsigned: true)
!7626 = !DIEnumerator(name: "MLXSW_TRAP_ID_ACL0", value: 448, isUnsigned: true)
!7627 = !DIEnumerator(name: "MLXSW_TRAP_ID_ACL1", value: 449, isUnsigned: true)
!7628 = !DIEnumerator(name: "MLXSW_TRAP_ID_ACL2", value: 450, isUnsigned: true)
!7629 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_INGRESS_ACL", value: 451, isUnsigned: true)
!7630 = !DIEnumerator(name: "MLXSW_TRAP_ID_DISCARD_EGRESS_ACL", value: 452, isUnsigned: true)
!7631 = !DIEnumerator(name: "MLXSW_TRAP_ID_MIRROR_SESSION0", value: 544, isUnsigned: true)
!7632 = !DIEnumerator(name: "MLXSW_TRAP_ID_MIRROR_SESSION1", value: 545, isUnsigned: true)
!7633 = !DIEnumerator(name: "MLXSW_TRAP_ID_MIRROR_SESSION2", value: 546, isUnsigned: true)
!7634 = !DIEnumerator(name: "MLXSW_TRAP_ID_MIRROR_SESSION3", value: 547, isUnsigned: true)
!7635 = !DIEnumerator(name: "MLXSW_TRAP_ID_MIRROR_SESSION4", value: 548, isUnsigned: true)
!7636 = !DIEnumerator(name: "MLXSW_TRAP_ID_MIRROR_SESSION5", value: 549, isUnsigned: true)
!7637 = !DIEnumerator(name: "MLXSW_TRAP_ID_MIRROR_SESSION6", value: 550, isUnsigned: true)
!7638 = !DIEnumerator(name: "MLXSW_TRAP_ID_MIRROR_SESSION7", value: 551, isUnsigned: true)
!7639 = !DIEnumerator(name: "MLXSW_TRAP_ID_MAX", value: 1023, isUnsigned: true)
!7640 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7482, line: 884, baseType: !7, size: 32, elements: !7641)
!7641 = !{!7642, !7643}
!7642 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_MOD_SDQ", value: 0, isUnsigned: true)
!7643 = !DIEnumerator(name: "MLXSW_CMD_OPCODE_MOD_RDQ", value: 1, isUnsigned: true)
!7644 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !7645, line: 11, baseType: !7, size: 32, elements: !7646)
!7645 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!7646 = !{!7647, !7648, !7649}
!7647 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!7648 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!7649 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!7650 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlxsw_cmd_status", file: !7482, line: 123, baseType: !7, size: 32, elements: !7651)
!7651 = !{!7652, !7653, !7654, !7655, !7656, !7657, !7658, !7659, !7660, !7661, !7662, !7663, !7664}
!7652 = !DIEnumerator(name: "MLXSW_CMD_STATUS_OK", value: 0, isUnsigned: true)
!7653 = !DIEnumerator(name: "MLXSW_CMD_STATUS_INTERNAL_ERR", value: 1, isUnsigned: true)
!7654 = !DIEnumerator(name: "MLXSW_CMD_STATUS_BAD_OP", value: 2, isUnsigned: true)
!7655 = !DIEnumerator(name: "MLXSW_CMD_STATUS_BAD_PARAM", value: 3, isUnsigned: true)
!7656 = !DIEnumerator(name: "MLXSW_CMD_STATUS_BAD_SYS_STATE", value: 4, isUnsigned: true)
!7657 = !DIEnumerator(name: "MLXSW_CMD_STATUS_BAD_RESOURCE", value: 5, isUnsigned: true)
!7658 = !DIEnumerator(name: "MLXSW_CMD_STATUS_RESOURCE_BUSY", value: 6, isUnsigned: true)
!7659 = !DIEnumerator(name: "MLXSW_CMD_STATUS_EXCEED_LIM", value: 8, isUnsigned: true)
!7660 = !DIEnumerator(name: "MLXSW_CMD_STATUS_BAD_RES_STATE", value: 9, isUnsigned: true)
!7661 = !DIEnumerator(name: "MLXSW_CMD_STATUS_BAD_INDEX", value: 10, isUnsigned: true)
!7662 = !DIEnumerator(name: "MLXSW_CMD_STATUS_BAD_NVMEM", value: 11, isUnsigned: true)
!7663 = !DIEnumerator(name: "MLXSW_CMD_STATUS_RUNNING_RESET", value: 38, isUnsigned: true)
!7664 = !DIEnumerator(name: "MLXSW_CMD_STATUS_BAD_PKT", value: 48, isUnsigned: true)
!7665 = !{!1035, !1797, !646, !1053, !32, !7666, !548, !3263, !7667, !388, !7668, !7669, !386, !8069, !8071, !8072, !8093, !8105, !530, !590, !7510, !2091, !1774, !367, !636, !1042, !4100}
!7666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3263, size: 64)
!7667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7668, size: 64)
!7668 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be64", file: !580, line: 34, baseType: !388)
!7669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7670, size: 64)
!7670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_pci_queue", file: !3, line: 71, size: 896, elements: !7671)
!7671 = !{!7672, !7673, !7679, !7695, !7696, !7697, !7698, !7699, !7700, !7701, !7721, !8054}
!7672 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7670, file: !3, line: 72, baseType: !1725)
!7673 = !DIDerivedType(tag: DW_TAG_member, name: "mem_item", scope: !7670, file: !3, line: 73, baseType: !7674, size: 192)
!7674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_pci_mem_item", file: !3, line: 53, size: 192, elements: !7675)
!7675 = !{!7676, !7677, !7678}
!7676 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !7674, file: !3, line: 54, baseType: !1093, size: 64)
!7677 = !DIDerivedType(tag: DW_TAG_member, name: "mapaddr", scope: !7674, file: !3, line: 55, baseType: !2091, size: 64, offset: 64)
!7678 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7674, file: !3, line: 56, baseType: !1094, size: 64, offset: 128)
!7679 = !DIDerivedType(tag: DW_TAG_member, name: "elem_info", scope: !7670, file: !3, line: 74, baseType: !7680, size: 64, offset: 192)
!7680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7681, size: 64)
!7681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_pci_queue_elem_info", file: !3, line: 59, size: 128, elements: !7682)
!7682 = !{!7683, !7684}
!7683 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !7681, file: !3, line: 60, baseType: !1093, size: 64)
!7684 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !7681, file: !3, line: 68, baseType: !7685, size: 64, offset: 64)
!7685 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7681, file: !3, line: 61, size: 64, elements: !7686)
!7686 = !{!7687, !7691}
!7687 = !DIDerivedType(tag: DW_TAG_member, name: "sdq", scope: !7685, file: !3, line: 64, baseType: !7688, size: 64)
!7688 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7685, file: !3, line: 62, size: 64, elements: !7689)
!7689 = !{!7690}
!7690 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !7688, file: !3, line: 63, baseType: !470, size: 64)
!7691 = !DIDerivedType(tag: DW_TAG_member, name: "rdq", scope: !7685, file: !3, line: 67, baseType: !7692, size: 64)
!7692 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7685, file: !3, line: 65, size: 64, elements: !7693)
!7693 = !{!7694}
!7694 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !7692, file: !3, line: 66, baseType: !470, size: 64)
!7695 = !DIDerivedType(tag: DW_TAG_member, name: "producer_counter", scope: !7670, file: !3, line: 75, baseType: !636, size: 16, offset: 256)
!7696 = !DIDerivedType(tag: DW_TAG_member, name: "consumer_counter", scope: !7670, file: !3, line: 76, baseType: !636, size: 16, offset: 272)
!7697 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7670, file: !3, line: 77, baseType: !636, size: 16, offset: 288)
!7698 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !7670, file: !3, line: 78, baseType: !849, size: 8, offset: 304)
!7699 = !DIDerivedType(tag: DW_TAG_member, name: "elem_size", scope: !7670, file: !3, line: 79, baseType: !849, size: 8, offset: 312)
!7700 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7670, file: !3, line: 80, baseType: !7403, size: 32, offset: 320)
!7701 = !DIDerivedType(tag: DW_TAG_member, name: "tasklet", scope: !7670, file: !3, line: 81, baseType: !7702, size: 320, offset: 384)
!7702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tasklet_struct", file: !3067, line: 609, size: 320, elements: !7703)
!7703 = !{!7704, !7706, !7707, !7708, !7709, !7720}
!7704 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7702, file: !3067, line: 611, baseType: !7705, size: 64)
!7705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7702, size: 64)
!7706 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7702, file: !3067, line: 612, baseType: !367, size: 64, offset: 64)
!7707 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7702, file: !3067, line: 613, baseType: !438, size: 32, offset: 128)
!7708 = !DIDerivedType(tag: DW_TAG_member, name: "use_callback", scope: !7702, file: !3067, line: 614, baseType: !826, size: 8, offset: 160)
!7709 = !DIDerivedType(tag: DW_TAG_member, scope: !7702, file: !3067, line: 615, baseType: !7710, size: 64, offset: 192)
!7710 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7702, file: !3067, line: 615, size: 64, elements: !7711)
!7711 = !{!7712, !7716}
!7712 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !7710, file: !3067, line: 616, baseType: !7713, size: 64)
!7713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7714, size: 64)
!7714 = !DISubroutineType(types: !7715)
!7715 = !{null, !367}
!7716 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !7710, file: !3067, line: 617, baseType: !7717, size: 64)
!7717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7718, size: 64)
!7718 = !DISubroutineType(types: !7719)
!7719 = !{null, !7705}
!7720 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7702, file: !3067, line: 619, baseType: !367, size: 64, offset: 256)
!7721 = !DIDerivedType(tag: DW_TAG_member, name: "pci", scope: !7670, file: !3, line: 82, baseType: !7722, size: 64, offset: 704)
!7722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7723, size: 64)
!7723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_pci", file: !3, line: 102, size: 4160, elements: !7724)
!7724 = !{!7725, !7998, !7999, !8000, !8006, !8007, !8010, !8016, !8030, !8051, !8052, !8053}
!7725 = !DIDerivedType(tag: DW_TAG_member, name: "pdev", scope: !7723, file: !3, line: 103, baseType: !7726, size: 64)
!7726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7727, size: 64)
!7727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !7728, line: 309, size: 19264, elements: !7729)
!7728 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!7729 = !{!7730, !7731, !7800, !7801, !7802, !7803, !7814, !7815, !7816, !7817, !7818, !7819, !7820, !7821, !7822, !7823, !7824, !7825, !7826, !7827, !7828, !7829, !7830, !7895, !7896, !7897, !7899, !7900, !7901, !7902, !7903, !7904, !7905, !7906, !7907, !7908, !7909, !7910, !7911, !7912, !7913, !7914, !7915, !7916, !7917, !7918, !7921, !7922, !7923, !7924, !7925, !7926, !7927, !7928, !7932, !7933, !7934, !7935, !7936, !7937, !7938, !7939, !7940, !7941, !7942, !7943, !7944, !7945, !7946, !7947, !7948, !7949, !7950, !7951, !7952, !7953, !7954, !7955, !7956, !7957, !7958, !7959, !7960, !7961, !7962, !7963, !7964, !7965, !7966, !7967, !7968, !7969, !7971, !7972, !7974, !7975, !7976, !7977, !7979, !7980, !7981, !7984, !7991, !7992, !7993, !7994, !7995, !7996, !7997}
!7730 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !7727, file: !7728, line: 310, baseType: !339, size: 128)
!7731 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !7727, file: !7728, line: 311, baseType: !7732, size: 64, offset: 128)
!7732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7733, size: 64)
!7733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !7728, line: 605, size: 8064, elements: !7734)
!7734 = !{!7735, !7736, !7737, !7738, !7739, !7740, !7741, !7756, !7757, !7758, !7782, !7785, !7786, !7787, !7788, !7789, !7790, !7791, !7792, !7793, !7795, !7796, !7797, !7798, !7799}
!7735 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7733, file: !7728, line: 606, baseType: !339, size: 128)
!7736 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !7733, file: !7728, line: 607, baseType: !7732, size: 64, offset: 128)
!7737 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7733, file: !7728, line: 608, baseType: !339, size: 128, offset: 192)
!7738 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !7733, file: !7728, line: 609, baseType: !339, size: 128, offset: 320)
!7739 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !7733, file: !7728, line: 610, baseType: !7726, size: 64, offset: 448)
!7740 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !7733, file: !7728, line: 611, baseType: !339, size: 128, offset: 512)
!7741 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !7733, file: !7728, line: 613, baseType: !7742, size: 256, offset: 640)
!7742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7743, size: 256, elements: !2327)
!7743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7744, size: 64)
!7744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !7745, line: 20, size: 512, elements: !7746)
!7745 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!7746 = !{!7747, !7749, !7750, !7751, !7752, !7753, !7754, !7755}
!7747 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7744, file: !7745, line: 21, baseType: !7748, size: 64)
!7748 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !332, line: 158, baseType: !4100)
!7749 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !7744, file: !7745, line: 22, baseType: !7748, size: 64, offset: 64)
!7750 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7744, file: !7745, line: 23, baseType: !347, size: 64, offset: 128)
!7751 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7744, file: !7745, line: 24, baseType: !367, size: 64, offset: 192)
!7752 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !7744, file: !7745, line: 25, baseType: !367, size: 64, offset: 256)
!7753 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !7744, file: !7745, line: 26, baseType: !7743, size: 64, offset: 320)
!7754 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !7744, file: !7745, line: 26, baseType: !7743, size: 64, offset: 384)
!7755 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !7744, file: !7745, line: 26, baseType: !7743, size: 64, offset: 448)
!7756 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !7733, file: !7728, line: 614, baseType: !339, size: 128, offset: 896)
!7757 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !7733, file: !7728, line: 615, baseType: !7744, size: 512, offset: 1024)
!7758 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7733, file: !7728, line: 617, baseType: !7759, size: 64, offset: 1536)
!7759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7760, size: 64)
!7760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !7728, line: 731, size: 320, elements: !7761)
!7761 = !{!7762, !7766, !7770, !7774, !7778}
!7762 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !7760, file: !7728, line: 732, baseType: !7763, size: 64)
!7763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7764, size: 64)
!7764 = !DISubroutineType(types: !7765)
!7765 = !{!32, !7732}
!7766 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !7760, file: !7728, line: 733, baseType: !7767, size: 64, offset: 64)
!7767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7768, size: 64)
!7768 = !DISubroutineType(types: !7769)
!7769 = !{null, !7732}
!7770 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !7760, file: !7728, line: 734, baseType: !7771, size: 64, offset: 128)
!7771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7772, size: 64)
!7772 = !DISubroutineType(types: !7773)
!7773 = !{!646, !7732, !7, !32}
!7774 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !7760, file: !7728, line: 735, baseType: !7775, size: 64, offset: 192)
!7775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7776, size: 64)
!7776 = !DISubroutineType(types: !7777)
!7777 = !{!32, !7732, !7, !32, !32, !2571}
!7778 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !7760, file: !7728, line: 736, baseType: !7779, size: 64, offset: 256)
!7779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7780, size: 64)
!7780 = !DISubroutineType(types: !7781)
!7781 = !{!32, !7732, !7, !32, !32, !1042}
!7782 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !7733, file: !7728, line: 618, baseType: !7783, size: 64, offset: 1600)
!7783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7784, size: 64)
!7784 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !7728, line: 537, flags: DIFlagFwdDecl)
!7785 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !7733, file: !7728, line: 619, baseType: !646, size: 64, offset: 1664)
!7786 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !7733, file: !7728, line: 620, baseType: !3065, size: 64, offset: 1728)
!7787 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !7733, file: !7728, line: 622, baseType: !537, size: 8, offset: 1792)
!7788 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !7733, file: !7728, line: 623, baseType: !537, size: 8, offset: 1800)
!7789 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !7733, file: !7728, line: 624, baseType: !537, size: 8, offset: 1808)
!7790 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !7733, file: !7728, line: 625, baseType: !537, size: 8, offset: 1816)
!7791 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7733, file: !7728, line: 630, baseType: !512, size: 384, offset: 1824)
!7792 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !7733, file: !7728, line: 632, baseType: !531, size: 16, offset: 2208)
!7793 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !7733, file: !7728, line: 633, baseType: !7794, size: 16, offset: 2224)
!7794 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !7728, line: 237, baseType: !531)
!7795 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !7733, file: !7728, line: 634, baseType: !5809, size: 64, offset: 2240)
!7796 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7733, file: !7728, line: 635, baseType: !5810, size: 5568, offset: 2304)
!7797 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !7733, file: !7728, line: 636, baseType: !5905, size: 64, offset: 7872)
!7798 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !7733, file: !7728, line: 637, baseType: !5905, size: 64, offset: 7936)
!7799 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !7733, file: !7728, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!7800 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !7727, file: !7728, line: 312, baseType: !7732, size: 64, offset: 192)
!7801 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !7727, file: !7728, line: 314, baseType: !646, size: 64, offset: 256)
!7802 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !7727, file: !7728, line: 315, baseType: !3065, size: 64, offset: 320)
!7803 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !7727, file: !7728, line: 316, baseType: !7804, size: 64, offset: 384)
!7804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7805, size: 64)
!7805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !7728, line: 69, size: 832, elements: !7806)
!7806 = !{!7807, !7808, !7809, !7812, !7813}
!7807 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !7805, file: !7728, line: 70, baseType: !7732, size: 64)
!7808 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7805, file: !7728, line: 71, baseType: !339, size: 128, offset: 64)
!7809 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !7805, file: !7728, line: 72, baseType: !7810, size: 64, offset: 192)
!7810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7811, size: 64)
!7811 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !7728, line: 72, flags: DIFlagFwdDecl)
!7812 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !7805, file: !7728, line: 73, baseType: !537, size: 8, offset: 256)
!7813 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !7805, file: !7728, line: 74, baseType: !5814, size: 512, offset: 320)
!7814 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !7727, file: !7728, line: 318, baseType: !7, size: 32, offset: 448)
!7815 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !7727, file: !7728, line: 319, baseType: !531, size: 16, offset: 480)
!7816 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !7727, file: !7728, line: 320, baseType: !531, size: 16, offset: 496)
!7817 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !7727, file: !7728, line: 321, baseType: !531, size: 16, offset: 512)
!7818 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !7727, file: !7728, line: 322, baseType: !531, size: 16, offset: 528)
!7819 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !7727, file: !7728, line: 323, baseType: !7, size: 32, offset: 544)
!7820 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !7727, file: !7728, line: 324, baseType: !849, size: 8, offset: 576)
!7821 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !7727, file: !7728, line: 325, baseType: !849, size: 8, offset: 584)
!7822 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !7727, file: !7728, line: 330, baseType: !849, size: 8, offset: 592)
!7823 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !7727, file: !7728, line: 331, baseType: !849, size: 8, offset: 600)
!7824 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !7727, file: !7728, line: 332, baseType: !849, size: 8, offset: 608)
!7825 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !7727, file: !7728, line: 333, baseType: !849, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!7826 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !7727, file: !7728, line: 334, baseType: !849, size: 8, offset: 624)
!7827 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !7727, file: !7728, line: 335, baseType: !849, size: 8, offset: 632)
!7828 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !7727, file: !7728, line: 336, baseType: !636, size: 16, offset: 640)
!7829 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !7727, file: !7728, line: 337, baseType: !3494, size: 64, offset: 704)
!7830 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !7727, file: !7728, line: 339, baseType: !7831, size: 64, offset: 768)
!7831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7832, size: 64)
!7832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !7728, line: 858, size: 2048, elements: !7833)
!7833 = !{!7834, !7835, !7836, !7848, !7852, !7856, !7860, !7864, !7865, !7869, !7888, !7889, !7890}
!7834 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7832, file: !7728, line: 859, baseType: !339, size: 128)
!7835 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7832, file: !7728, line: 860, baseType: !347, size: 64, offset: 128)
!7836 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !7832, file: !7728, line: 861, baseType: !7837, size: 64, offset: 192)
!7837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7838, size: 64)
!7838 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7839)
!7839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !6184, line: 38, size: 256, elements: !7840)
!7840 = !{!7841, !7842, !7843, !7844, !7845, !7846, !7847}
!7841 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !7839, file: !6184, line: 39, baseType: !548, size: 32)
!7842 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !7839, file: !6184, line: 39, baseType: !548, size: 32, offset: 32)
!7843 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !7839, file: !6184, line: 40, baseType: !548, size: 32, offset: 64)
!7844 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !7839, file: !6184, line: 40, baseType: !548, size: 32, offset: 96)
!7845 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !7839, file: !6184, line: 41, baseType: !548, size: 32, offset: 128)
!7846 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !7839, file: !6184, line: 41, baseType: !548, size: 32, offset: 160)
!7847 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !7839, file: !6184, line: 42, baseType: !6198, size: 64, offset: 192)
!7848 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !7832, file: !7728, line: 862, baseType: !7849, size: 64, offset: 256)
!7849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7850, size: 64)
!7850 = !DISubroutineType(types: !7851)
!7851 = !{!32, !7726, !7837}
!7852 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !7832, file: !7728, line: 863, baseType: !7853, size: 64, offset: 320)
!7853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7854, size: 64)
!7854 = !DISubroutineType(types: !7855)
!7855 = !{null, !7726}
!7856 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !7832, file: !7728, line: 864, baseType: !7857, size: 64, offset: 384)
!7857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7858, size: 64)
!7858 = !DISubroutineType(types: !7859)
!7859 = !{!32, !7726, !6209}
!7860 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !7832, file: !7728, line: 865, baseType: !7861, size: 64, offset: 448)
!7861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7862, size: 64)
!7862 = !DISubroutineType(types: !7863)
!7863 = !{!32, !7726}
!7864 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !7832, file: !7728, line: 866, baseType: !7853, size: 64, offset: 512)
!7865 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !7832, file: !7728, line: 867, baseType: !7866, size: 64, offset: 576)
!7866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7867, size: 64)
!7867 = !DISubroutineType(types: !7868)
!7868 = !{!32, !7726, !32}
!7869 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !7832, file: !7728, line: 868, baseType: !7870, size: 64, offset: 640)
!7870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7871, size: 64)
!7871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7872)
!7872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !7728, line: 795, size: 384, elements: !7873)
!7873 = !{!7874, !7880, !7884, !7885, !7886, !7887}
!7874 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !7872, file: !7728, line: 797, baseType: !7875, size: 64)
!7875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7876, size: 64)
!7876 = !DISubroutineType(types: !7877)
!7877 = !{!7878, !7726, !7879}
!7878 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !7728, line: 772, baseType: !7)
!7879 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !7728, line: 180, baseType: !7)
!7880 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !7872, file: !7728, line: 801, baseType: !7881, size: 64, offset: 64)
!7881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7882, size: 64)
!7882 = !DISubroutineType(types: !7883)
!7883 = !{!7878, !7726}
!7884 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !7872, file: !7728, line: 804, baseType: !7881, size: 64, offset: 128)
!7885 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !7872, file: !7728, line: 807, baseType: !7853, size: 64, offset: 192)
!7886 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !7872, file: !7728, line: 808, baseType: !7853, size: 64, offset: 256)
!7887 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !7872, file: !7728, line: 811, baseType: !7853, size: 64, offset: 320)
!7888 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !7832, file: !7728, line: 869, baseType: !5891, size: 64, offset: 704)
!7889 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !7832, file: !7728, line: 870, baseType: !6166, size: 1152, offset: 768)
!7890 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !7832, file: !7728, line: 871, baseType: !7891, size: 128, offset: 1920)
!7891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !7728, line: 759, size: 128, elements: !7892)
!7892 = !{!7893, !7894}
!7893 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7891, file: !7728, line: 760, baseType: !1725)
!7894 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7891, file: !7728, line: 761, baseType: !339, size: 128)
!7895 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !7727, file: !7728, line: 340, baseType: !386, size: 64, offset: 832)
!7896 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !7727, file: !7728, line: 346, baseType: !6398, size: 128, offset: 896)
!7897 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !7727, file: !7728, line: 348, baseType: !7898, size: 32, offset: 1024)
!7898 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !7728, line: 155, baseType: !32)
!7899 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !7727, file: !7728, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!7900 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !7727, file: !7728, line: 352, baseType: !849, size: 8, offset: 1064)
!7901 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !7727, file: !7728, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!7902 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !7727, file: !7728, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!7903 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !7727, file: !7728, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!7904 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !7727, file: !7728, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!7905 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !7727, file: !7728, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!7906 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !7727, file: !7728, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!7907 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !7727, file: !7728, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!7908 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !7727, file: !7728, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!7909 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !7727, file: !7728, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!7910 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !7727, file: !7728, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!7911 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !7727, file: !7728, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!7912 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !7727, file: !7728, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!7913 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !7727, file: !7728, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!7914 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !7727, file: !7728, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!7915 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !7727, file: !7728, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!7916 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !7727, file: !7728, line: 376, baseType: !7, size: 32, offset: 1120)
!7917 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !7727, file: !7728, line: 377, baseType: !7, size: 32, offset: 1152)
!7918 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !7727, file: !7728, line: 380, baseType: !7919, size: 64, offset: 1216)
!7919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7920, size: 64)
!7920 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !7728, line: 303, flags: DIFlagFwdDecl)
!7921 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !7727, file: !7728, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!7922 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !7727, file: !7728, line: 383, baseType: !32, size: 32, offset: 1312)
!7923 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !7727, file: !7728, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!7924 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !7727, file: !7728, line: 387, baseType: !7879, size: 32, offset: 1376)
!7925 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7727, file: !7728, line: 388, baseType: !5810, size: 5568, offset: 1408)
!7926 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !7727, file: !7728, line: 390, baseType: !32, size: 32, offset: 6976)
!7927 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !7727, file: !7728, line: 396, baseType: !7, size: 32, offset: 7008)
!7928 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !7727, file: !7728, line: 397, baseType: !7929, size: 8704, offset: 7040)
!7929 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7744, size: 8704, elements: !7930)
!7930 = !{!7931}
!7931 = !DISubrange(count: 17)
!7932 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !7727, file: !7728, line: 399, baseType: !826, size: 8, offset: 15744)
!7933 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !7727, file: !7728, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!7934 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !7727, file: !7728, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!7935 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !7727, file: !7728, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!7936 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !7727, file: !7728, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!7937 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !7727, file: !7728, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!7938 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !7727, file: !7728, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!7939 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !7727, file: !7728, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!7940 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !7727, file: !7728, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!7941 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !7727, file: !7728, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!7942 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !7727, file: !7728, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!7943 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !7727, file: !7728, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!7944 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !7727, file: !7728, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!7945 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !7727, file: !7728, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!7946 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !7727, file: !7728, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!7947 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !7727, file: !7728, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!7948 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !7727, file: !7728, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!7949 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !7727, file: !7728, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!7950 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !7727, file: !7728, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!7951 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !7727, file: !7728, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!7952 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !7727, file: !7728, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!7953 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !7727, file: !7728, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!7954 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !7727, file: !7728, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!7955 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !7727, file: !7728, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!7956 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !7727, file: !7728, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!7957 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !7727, file: !7728, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!7958 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !7727, file: !7728, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!7959 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !7727, file: !7728, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!7960 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !7727, file: !7728, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!7961 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !7727, file: !7728, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!7962 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !7727, file: !7728, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!7963 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !7727, file: !7728, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!7964 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !7727, file: !7728, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!7965 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !7727, file: !7728, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!7966 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !7727, file: !7728, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!7967 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !7727, file: !7728, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!7968 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !7727, file: !7728, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!7969 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !7727, file: !7728, line: 450, baseType: !7970, size: 16, offset: 15792)
!7970 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !7728, line: 206, baseType: !531)
!7971 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !7727, file: !7728, line: 451, baseType: !438, size: 32, offset: 15808)
!7972 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !7727, file: !7728, line: 453, baseType: !7973, size: 512, offset: 15840)
!7973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1042, size: 512, elements: !324)
!7974 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !7727, file: !7728, line: 454, baseType: !1636, size: 64, offset: 16384)
!7975 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !7727, file: !7728, line: 455, baseType: !5905, size: 64, offset: 16448)
!7976 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !7727, file: !7728, line: 456, baseType: !32, size: 32, offset: 16512)
!7977 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !7727, file: !7728, line: 457, baseType: !7978, size: 1088, offset: 16576)
!7978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5905, size: 1088, elements: !7930)
!7979 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !7727, file: !7728, line: 458, baseType: !7978, size: 1088, offset: 17664)
!7980 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !7727, file: !7728, line: 469, baseType: !5891, size: 64, offset: 18752)
!7981 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !7727, file: !7728, line: 471, baseType: !7982, size: 64, offset: 18816)
!7982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7983, size: 64)
!7983 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !7728, line: 304, flags: DIFlagFwdDecl)
!7984 = !DIDerivedType(tag: DW_TAG_member, scope: !7727, file: !7728, line: 478, baseType: !7985, size: 64, offset: 18880)
!7985 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7727, file: !7728, line: 478, size: 64, elements: !7986)
!7986 = !{!7987, !7990}
!7987 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !7985, file: !7728, line: 479, baseType: !7988, size: 64)
!7988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7989, size: 64)
!7989 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !7728, line: 305, flags: DIFlagFwdDecl)
!7990 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !7985, file: !7728, line: 480, baseType: !7726, size: 64)
!7991 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !7727, file: !7728, line: 482, baseType: !636, size: 16, offset: 18944)
!7992 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !7727, file: !7728, line: 483, baseType: !849, size: 8, offset: 18960)
!7993 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !7727, file: !7728, line: 497, baseType: !636, size: 16, offset: 18976)
!7994 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !7727, file: !7728, line: 498, baseType: !4100, size: 64, offset: 19008)
!7995 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !7727, file: !7728, line: 499, baseType: !1094, size: 64, offset: 19072)
!7996 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !7727, file: !7728, line: 500, baseType: !1093, size: 64, offset: 19136)
!7997 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !7727, file: !7728, line: 502, baseType: !367, size: 64, offset: 19200)
!7998 = !DIDerivedType(tag: DW_TAG_member, name: "hw_addr", scope: !7723, file: !3, line: 104, baseType: !848, size: 64, offset: 64)
!7999 = !DIDerivedType(tag: DW_TAG_member, name: "free_running_clock_offset", scope: !7723, file: !3, line: 105, baseType: !386, size: 64, offset: 128)
!8000 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !7723, file: !3, line: 106, baseType: !8001, size: 512, offset: 192)
!8001 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8002, size: 512, elements: !2327)
!8002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_pci_queue_type_group", file: !3, line: 97, size: 128, elements: !8003)
!8003 = !{!8004, !8005}
!8004 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !8002, file: !3, line: 98, baseType: !7669, size: 64)
!8005 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !8002, file: !3, line: 99, baseType: !849, size: 8, offset: 64)
!8006 = !DIDerivedType(tag: DW_TAG_member, name: "doorbell_offset", scope: !7723, file: !3, line: 107, baseType: !1042, size: 32, offset: 704)
!8007 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !7723, file: !3, line: 108, baseType: !8008, size: 64, offset: 768)
!8008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8009, size: 64)
!8009 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_core", file: !7482, line: 26, flags: DIFlagFwdDecl)
!8010 = !DIDerivedType(tag: DW_TAG_member, name: "fw_area", scope: !7723, file: !3, line: 112, baseType: !8011, size: 128, offset: 832)
!8011 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7723, file: !3, line: 109, size: 128, elements: !8012)
!8012 = !{!8013, !8015}
!8013 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !8011, file: !3, line: 110, baseType: !8014, size: 64)
!8014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7674, size: 64)
!8015 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !8011, file: !3, line: 111, baseType: !7, size: 32, offset: 64)
!8016 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7723, file: !3, line: 124, baseType: !8017, size: 960, offset: 960)
!8017 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7723, file: !3, line: 113, size: 960, elements: !8018)
!8018 = !{!8019, !8020, !8021, !8022, !8023, !8024, !8025}
!8019 = !DIDerivedType(tag: DW_TAG_member, name: "out_mbox", scope: !8017, file: !3, line: 114, baseType: !7674, size: 192)
!8020 = !DIDerivedType(tag: DW_TAG_member, name: "in_mbox", scope: !8017, file: !3, line: 115, baseType: !7674, size: 192, offset: 192)
!8021 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8017, file: !3, line: 116, baseType: !1720, size: 192, offset: 384)
!8022 = !DIDerivedType(tag: DW_TAG_member, name: "nopoll", scope: !8017, file: !3, line: 117, baseType: !826, size: 8, offset: 576)
!8023 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !8017, file: !3, line: 118, baseType: !1944, size: 128, offset: 640)
!8024 = !DIDerivedType(tag: DW_TAG_member, name: "wait_done", scope: !8017, file: !3, line: 119, baseType: !826, size: 8, offset: 768)
!8025 = !DIDerivedType(tag: DW_TAG_member, name: "comp", scope: !8017, file: !3, line: 123, baseType: !8026, size: 128, offset: 832)
!8026 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8017, file: !3, line: 120, size: 128, elements: !8027)
!8027 = !{!8028, !8029}
!8028 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !8026, file: !3, line: 121, baseType: !849, size: 8)
!8029 = !DIDerivedType(tag: DW_TAG_member, name: "out_param", scope: !8026, file: !3, line: 122, baseType: !386, size: 64, offset: 64)
!8030 = !DIDerivedType(tag: DW_TAG_member, name: "bus_info", scope: !7723, file: !3, line: 125, baseType: !8031, size: 2112, offset: 1920)
!8031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_bus_info", file: !8032, line: 438, size: 2112, elements: !8033)
!8032 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/core.h", directory: "/home/lizy2001/genbc/linux")
!8033 = !{!8034, !8035, !8036, !8037, !8044, !8048, !8049, !8050}
!8034 = !DIDerivedType(tag: DW_TAG_member, name: "device_kind", scope: !8031, file: !8032, line: 439, baseType: !347, size: 64)
!8035 = !DIDerivedType(tag: DW_TAG_member, name: "device_name", scope: !8031, file: !8032, line: 440, baseType: !347, size: 64, offset: 64)
!8036 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8031, file: !8032, line: 441, baseType: !5809, size: 64, offset: 128)
!8037 = !DIDerivedType(tag: DW_TAG_member, name: "fw_rev", scope: !8031, file: !8032, line: 442, baseType: !8038, size: 64, offset: 192)
!8038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_fw_rev", file: !8032, line: 431, size: 64, elements: !8039)
!8039 = !{!8040, !8041, !8042, !8043}
!8040 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !8038, file: !8032, line: 432, baseType: !636, size: 16)
!8041 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !8038, file: !8032, line: 433, baseType: !636, size: 16, offset: 16)
!8042 = !DIDerivedType(tag: DW_TAG_member, name: "subminor", scope: !8038, file: !8032, line: 434, baseType: !636, size: 16, offset: 32)
!8043 = !DIDerivedType(tag: DW_TAG_member, name: "can_reset_minor", scope: !8038, file: !8032, line: 435, baseType: !636, size: 16, offset: 48)
!8044 = !DIDerivedType(tag: DW_TAG_member, name: "vsd", scope: !8031, file: !8032, line: 443, baseType: !8045, size: 1664, offset: 256)
!8045 = !DICompositeType(tag: DW_TAG_array_type, baseType: !849, size: 1664, elements: !8046)
!8046 = !{!8047}
!8047 = !DISubrange(count: 208)
!8048 = !DIDerivedType(tag: DW_TAG_member, name: "psid", scope: !8031, file: !8032, line: 444, baseType: !7368, size: 128, offset: 1920)
!8049 = !DIDerivedType(tag: DW_TAG_member, name: "low_frequency", scope: !8031, file: !8032, line: 445, baseType: !849, size: 1, offset: 2048, flags: DIFlagBitField, extraData: i64 2048)
!8050 = !DIDerivedType(tag: DW_TAG_member, name: "read_frc_capable", scope: !8031, file: !8032, line: 446, baseType: !849, size: 1, offset: 2049, flags: DIFlagBitField, extraData: i64 2048)
!8051 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7723, file: !3, line: 126, baseType: !7837, size: 64, offset: 4032)
!8052 = !DIDerivedType(tag: DW_TAG_member, name: "max_cqe_ver", scope: !7723, file: !3, line: 127, baseType: !7409, size: 32, offset: 4096)
!8053 = !DIDerivedType(tag: DW_TAG_member, name: "num_sdq_cqs", scope: !7723, file: !3, line: 128, baseType: !849, size: 8, offset: 4128)
!8054 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !7670, file: !3, line: 94, baseType: !8055, size: 96, offset: 768)
!8055 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7670, file: !3, line: 83, size: 96, elements: !8056)
!8056 = !{!8057, !8063}
!8057 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !8055, file: !3, line: 88, baseType: !8058, size: 96)
!8058 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8055, file: !3, line: 84, size: 96, elements: !8059)
!8059 = !{!8060, !8061, !8062}
!8060 = !DIDerivedType(tag: DW_TAG_member, name: "comp_sdq_count", scope: !8058, file: !3, line: 85, baseType: !1042, size: 32)
!8061 = !DIDerivedType(tag: DW_TAG_member, name: "comp_rdq_count", scope: !8058, file: !3, line: 86, baseType: !1042, size: 32, offset: 32)
!8062 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !8058, file: !3, line: 87, baseType: !7409, size: 32, offset: 64)
!8063 = !DIDerivedType(tag: DW_TAG_member, name: "eq", scope: !8055, file: !3, line: 93, baseType: !8064, size: 96)
!8064 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8055, file: !3, line: 89, size: 96, elements: !8065)
!8065 = !{!8066, !8067, !8068}
!8066 = !DIDerivedType(tag: DW_TAG_member, name: "ev_cmd_count", scope: !8064, file: !3, line: 90, baseType: !1042, size: 32)
!8067 = !DIDerivedType(tag: DW_TAG_member, name: "ev_comp_count", scope: !8064, file: !3, line: 91, baseType: !1042, size: 32, offset: 32)
!8068 = !DIDerivedType(tag: DW_TAG_member, name: "ev_other_count", scope: !8064, file: !3, line: 92, baseType: !1042, size: 32, offset: 64)
!8069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8070, size: 64)
!8070 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !323)
!8071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 64)
!8072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8073, size: 64)
!8073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "skb_shared_info", file: !472, line: 512, size: 2560, elements: !8074)
!8074 = !{!8075, !8076, !8077, !8078, !8079, !8080, !8081, !8082, !8086, !8087, !8088, !8089, !8090}
!8075 = !DIDerivedType(tag: DW_TAG_member, name: "__unused", scope: !8073, file: !472, line: 513, baseType: !536, size: 8)
!8076 = !DIDerivedType(tag: DW_TAG_member, name: "meta_len", scope: !8073, file: !472, line: 514, baseType: !536, size: 8, offset: 8)
!8077 = !DIDerivedType(tag: DW_TAG_member, name: "nr_frags", scope: !8073, file: !472, line: 515, baseType: !536, size: 8, offset: 16)
!8078 = !DIDerivedType(tag: DW_TAG_member, name: "tx_flags", scope: !8073, file: !472, line: 516, baseType: !536, size: 8, offset: 24)
!8079 = !DIDerivedType(tag: DW_TAG_member, name: "gso_size", scope: !8073, file: !472, line: 517, baseType: !531, size: 16, offset: 32)
!8080 = !DIDerivedType(tag: DW_TAG_member, name: "gso_segs", scope: !8073, file: !472, line: 519, baseType: !531, size: 16, offset: 48)
!8081 = !DIDerivedType(tag: DW_TAG_member, name: "frag_list", scope: !8073, file: !472, line: 520, baseType: !470, size: 64, offset: 64)
!8082 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamps", scope: !8073, file: !472, line: 521, baseType: !8083, size: 64, offset: 128)
!8083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "skb_shared_hwtstamps", file: !472, line: 418, size: 64, elements: !8084)
!8084 = !{!8085}
!8085 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamp", scope: !8083, file: !472, line: 419, baseType: !508, size: 64)
!8086 = !DIDerivedType(tag: DW_TAG_member, name: "gso_type", scope: !8073, file: !472, line: 522, baseType: !7, size: 32, offset: 192)
!8087 = !DIDerivedType(tag: DW_TAG_member, name: "tskey", scope: !8073, file: !472, line: 523, baseType: !1042, size: 32, offset: 224)
!8088 = !DIDerivedType(tag: DW_TAG_member, name: "dataref", scope: !8073, file: !472, line: 528, baseType: !438, size: 32, offset: 256)
!8089 = !DIDerivedType(tag: DW_TAG_member, name: "destructor_arg", scope: !8073, file: !472, line: 532, baseType: !646, size: 64, offset: 320)
!8090 = !DIDerivedType(tag: DW_TAG_member, name: "frags", scope: !8073, file: !472, line: 535, baseType: !8091, size: 2176, offset: 384)
!8091 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8092, size: 2176, elements: !7930)
!8092 = !DIDerivedType(tag: DW_TAG_typedef, name: "skb_frag_t", file: !472, line: 321, baseType: !1931)
!8093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8094, size: 64)
!8094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_skb_cb", file: !8032, line: 502, size: 32, elements: !8095)
!8095 = !{!8096}
!8096 = !DIDerivedType(tag: DW_TAG_member, scope: !8094, file: !8032, line: 503, baseType: !8097, size: 32)
!8097 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8094, file: !8032, line: 503, size: 32, elements: !8098)
!8098 = !{!8099, !8104}
!8099 = !DIDerivedType(tag: DW_TAG_member, name: "tx_info", scope: !8097, file: !8032, line: 504, baseType: !8100, size: 16)
!8100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_tx_info", file: !8032, line: 51, size: 16, elements: !8101)
!8101 = !{!8102, !8103}
!8102 = !DIDerivedType(tag: DW_TAG_member, name: "local_port", scope: !8100, file: !8032, line: 52, baseType: !849, size: 8)
!8103 = !DIDerivedType(tag: DW_TAG_member, name: "is_emad", scope: !8100, file: !8032, line: 53, baseType: !826, size: 8, offset: 8)
!8104 = !DIDerivedType(tag: DW_TAG_member, name: "cookie_index", scope: !8097, file: !8032, line: 505, baseType: !1042, size: 32)
!8105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !590, size: 64)
!8106 = !{!0, !8107, !8112, !8117, !8122, !8125, !8130, !8135, !8137, !8220, !8238, !8246, !8248, !8250, !8252, !8254, !8256, !8258, !8260, !8262, !8264, !8266, !8268, !8270, !8272, !8274, !8276, !8278, !8280, !8282, !8284, !8286, !8288, !8290, !8292, !8294, !8296, !8298, !8300, !8302, !8304, !8306, !8308, !8310, !8312, !8314, !8316, !8318, !8320, !8322, !8324, !8326, !8328, !8330, !8332, !8334, !8336, !8338, !8340, !8342, !8344, !8346, !8348, !8350, !8352, !8354, !8356, !8358, !8360, !8362, !8364, !8366, !8368, !8370, !8399, !8401, !8403, !8405, !8407, !8409, !8413, !8415, !8417, !8419, !8421, !8423, !8425, !8427, !8429, !8431, !8433, !8435, !8437, !8439, !8441, !8443, !8445, !8447, !8449, !8451, !8453, !8455, !8457, !8459, !8461, !8463, !8465, !8467, !8469, !8471, !8473, !8475, !8477, !8479, !8484, !8490, !8492, !8494, !8496, !8498, !8500, !8502, !8504, !8506}
!8107 = !DIGlobalVariableExpression(var: !8108, expr: !DIExpression())
!8108 = distinct !DIGlobalVariable(name: "__exitcall_mlxsw_pci_module_exit", scope: !2, file: !3, line: 1924, type: !8109, isLocal: true, isDefinition: true)
!8109 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !8110, line: 117, baseType: !8111)
!8110 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!8111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3864, size: 64)
!8112 = !DIGlobalVariableExpression(var: !8113, expr: !DIExpression())
!8113 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file345", scope: !2, file: !3, line: 1926, type: !8114, isLocal: true, isDefinition: true, align: 8)
!8114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 488, elements: !8115)
!8115 = !{!8116}
!8116 = !DISubrange(count: 61)
!8117 = !DIGlobalVariableExpression(var: !8118, expr: !DIExpression())
!8118 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license346", scope: !2, file: !3, line: 1926, type: !8119, isLocal: true, isDefinition: true, align: 8)
!8119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 248, elements: !8120)
!8120 = !{!8121}
!8121 = !DISubrange(count: 31)
!8122 = !DIGlobalVariableExpression(var: !8123, expr: !DIExpression())
!8123 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author347", scope: !2, file: !3, line: 1927, type: !8124, isLocal: true, isDefinition: true, align: 8)
!8124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 384, elements: !513)
!8125 = !DIGlobalVariableExpression(var: !8126, expr: !DIExpression())
!8126 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description348", scope: !2, file: !3, line: 1928, type: !8127, isLocal: true, isDefinition: true, align: 8)
!8127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 472, elements: !8128)
!8128 = !{!8129}
!8129 = !DISubrange(count: 59)
!8130 = !DIGlobalVariableExpression(var: !8131, expr: !DIExpression())
!8131 = distinct !DIGlobalVariable(name: "__key", scope: !8132, file: !3, line: 1771, type: !1640, isLocal: true, isDefinition: true)
!8132 = distinct !DISubprogram(name: "mlxsw_pci_cmd_init", scope: !3, file: !3, line: 1767, type: !8133, scopeLine: 1768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!8133 = !DISubroutineType(types: !8134)
!8134 = !{!32, !7722}
!8135 = !DIGlobalVariableExpression(var: !8136, expr: !DIExpression())
!8136 = distinct !DIGlobalVariable(name: "__key", scope: !8132, file: !3, line: 1772, type: !1640, isLocal: true, isDefinition: true)
!8137 = !DIGlobalVariableExpression(var: !8138, expr: !DIExpression())
!8138 = distinct !DIGlobalVariable(name: "mlxsw_pci_bus", scope: !2, file: !3, line: 1755, type: !8139, isLocal: true, isDefinition: true)
!8139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8140)
!8140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_bus", file: !8032, line: 411, size: 576, elements: !8141)
!8141 = !{!8142, !8143, !8202, !8203, !8209, !8213, !8217, !8218, !8219}
!8142 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !8140, file: !8032, line: 412, baseType: !347, size: 64)
!8143 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !8140, file: !8032, line: 413, baseType: !8144, size: 64, offset: 64)
!8144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8145, size: 64)
!8145 = !DISubroutineType(types: !8146)
!8146 = !{!32, !646, !8008, !8147, !8193}
!8147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8148, size: 64)
!8148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8149)
!8149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_config_profile", file: !8032, line: 245, size: 544, elements: !8150)
!8150 = !{!8151, !8152, !8153, !8154, !8155, !8156, !8157, !8158, !8159, !8160, !8161, !8162, !8163, !8164, !8165, !8166, !8167, !8168, !8169, !8170, !8171, !8172, !8173, !8174, !8175, !8176, !8177, !8178, !8179, !8180, !8181, !8182, !8183, !8184, !8185}
!8151 = !DIDerivedType(tag: DW_TAG_member, name: "used_max_vepa_channels", scope: !8149, file: !8032, line: 246, baseType: !636, size: 1, flags: DIFlagBitField, extraData: i64 0)
!8152 = !DIDerivedType(tag: DW_TAG_member, name: "used_max_mid", scope: !8149, file: !8032, line: 247, baseType: !636, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!8153 = !DIDerivedType(tag: DW_TAG_member, name: "used_max_pgt", scope: !8149, file: !8032, line: 248, baseType: !636, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!8154 = !DIDerivedType(tag: DW_TAG_member, name: "used_max_system_port", scope: !8149, file: !8032, line: 249, baseType: !636, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!8155 = !DIDerivedType(tag: DW_TAG_member, name: "used_max_vlan_groups", scope: !8149, file: !8032, line: 250, baseType: !636, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!8156 = !DIDerivedType(tag: DW_TAG_member, name: "used_max_regions", scope: !8149, file: !8032, line: 251, baseType: !636, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!8157 = !DIDerivedType(tag: DW_TAG_member, name: "used_flood_tables", scope: !8149, file: !8032, line: 252, baseType: !636, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!8158 = !DIDerivedType(tag: DW_TAG_member, name: "used_flood_mode", scope: !8149, file: !8032, line: 253, baseType: !636, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!8159 = !DIDerivedType(tag: DW_TAG_member, name: "used_max_ib_mc", scope: !8149, file: !8032, line: 254, baseType: !636, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!8160 = !DIDerivedType(tag: DW_TAG_member, name: "used_max_pkey", scope: !8149, file: !8032, line: 255, baseType: !636, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!8161 = !DIDerivedType(tag: DW_TAG_member, name: "used_ar_sec", scope: !8149, file: !8032, line: 256, baseType: !636, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!8162 = !DIDerivedType(tag: DW_TAG_member, name: "used_adaptive_routing_group_cap", scope: !8149, file: !8032, line: 257, baseType: !636, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!8163 = !DIDerivedType(tag: DW_TAG_member, name: "used_kvd_sizes", scope: !8149, file: !8032, line: 258, baseType: !636, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!8164 = !DIDerivedType(tag: DW_TAG_member, name: "max_vepa_channels", scope: !8149, file: !8032, line: 259, baseType: !849, size: 8, offset: 16)
!8165 = !DIDerivedType(tag: DW_TAG_member, name: "max_mid", scope: !8149, file: !8032, line: 260, baseType: !636, size: 16, offset: 32)
!8166 = !DIDerivedType(tag: DW_TAG_member, name: "max_pgt", scope: !8149, file: !8032, line: 261, baseType: !636, size: 16, offset: 48)
!8167 = !DIDerivedType(tag: DW_TAG_member, name: "max_system_port", scope: !8149, file: !8032, line: 262, baseType: !636, size: 16, offset: 64)
!8168 = !DIDerivedType(tag: DW_TAG_member, name: "max_vlan_groups", scope: !8149, file: !8032, line: 263, baseType: !636, size: 16, offset: 80)
!8169 = !DIDerivedType(tag: DW_TAG_member, name: "max_regions", scope: !8149, file: !8032, line: 264, baseType: !636, size: 16, offset: 96)
!8170 = !DIDerivedType(tag: DW_TAG_member, name: "max_flood_tables", scope: !8149, file: !8032, line: 265, baseType: !849, size: 8, offset: 112)
!8171 = !DIDerivedType(tag: DW_TAG_member, name: "max_vid_flood_tables", scope: !8149, file: !8032, line: 266, baseType: !849, size: 8, offset: 120)
!8172 = !DIDerivedType(tag: DW_TAG_member, name: "flood_mode", scope: !8149, file: !8032, line: 267, baseType: !849, size: 8, offset: 128)
!8173 = !DIDerivedType(tag: DW_TAG_member, name: "max_fid_offset_flood_tables", scope: !8149, file: !8032, line: 268, baseType: !849, size: 8, offset: 136)
!8174 = !DIDerivedType(tag: DW_TAG_member, name: "fid_offset_flood_table_size", scope: !8149, file: !8032, line: 269, baseType: !636, size: 16, offset: 144)
!8175 = !DIDerivedType(tag: DW_TAG_member, name: "max_fid_flood_tables", scope: !8149, file: !8032, line: 270, baseType: !849, size: 8, offset: 160)
!8176 = !DIDerivedType(tag: DW_TAG_member, name: "fid_flood_table_size", scope: !8149, file: !8032, line: 271, baseType: !636, size: 16, offset: 176)
!8177 = !DIDerivedType(tag: DW_TAG_member, name: "max_ib_mc", scope: !8149, file: !8032, line: 272, baseType: !636, size: 16, offset: 192)
!8178 = !DIDerivedType(tag: DW_TAG_member, name: "max_pkey", scope: !8149, file: !8032, line: 273, baseType: !636, size: 16, offset: 208)
!8179 = !DIDerivedType(tag: DW_TAG_member, name: "ar_sec", scope: !8149, file: !8032, line: 274, baseType: !849, size: 8, offset: 224)
!8180 = !DIDerivedType(tag: DW_TAG_member, name: "adaptive_routing_group_cap", scope: !8149, file: !8032, line: 275, baseType: !636, size: 16, offset: 240)
!8181 = !DIDerivedType(tag: DW_TAG_member, name: "arn", scope: !8149, file: !8032, line: 276, baseType: !849, size: 8, offset: 256)
!8182 = !DIDerivedType(tag: DW_TAG_member, name: "kvd_linear_size", scope: !8149, file: !8032, line: 277, baseType: !1042, size: 32, offset: 288)
!8183 = !DIDerivedType(tag: DW_TAG_member, name: "kvd_hash_single_parts", scope: !8149, file: !8032, line: 278, baseType: !849, size: 8, offset: 320)
!8184 = !DIDerivedType(tag: DW_TAG_member, name: "kvd_hash_double_parts", scope: !8149, file: !8032, line: 279, baseType: !849, size: 8, offset: 328)
!8185 = !DIDerivedType(tag: DW_TAG_member, name: "swid_config", scope: !8149, file: !8032, line: 280, baseType: !8186, size: 192, offset: 336)
!8186 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8187, size: 192, elements: !2488)
!8187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_swid_config", file: !8032, line: 238, size: 24, elements: !8188)
!8188 = !{!8189, !8190, !8191, !8192}
!8189 = !DIDerivedType(tag: DW_TAG_member, name: "used_type", scope: !8187, file: !8032, line: 239, baseType: !849, size: 1, flags: DIFlagBitField, extraData: i64 0)
!8190 = !DIDerivedType(tag: DW_TAG_member, name: "used_properties", scope: !8187, file: !8032, line: 240, baseType: !849, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!8191 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8187, file: !8032, line: 241, baseType: !849, size: 8, offset: 8)
!8192 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !8187, file: !8032, line: 242, baseType: !849, size: 8, offset: 16)
!8193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8194, size: 64)
!8194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_res", file: !7428, line: 119, size: 3648, elements: !8195)
!8195 = !{!8196, !8200}
!8196 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !8194, file: !7428, line: 120, baseType: !8197, size: 400)
!8197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !826, size: 400, elements: !8198)
!8198 = !{!8199}
!8199 = !DISubrange(count: 50)
!8200 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !8194, file: !7428, line: 121, baseType: !8201, size: 3200, offset: 448)
!8201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !386, size: 3200, elements: !8198)
!8202 = !DIDerivedType(tag: DW_TAG_member, name: "fini", scope: !8140, file: !8032, line: 416, baseType: !1470, size: 64, offset: 128)
!8203 = !DIDerivedType(tag: DW_TAG_member, name: "skb_transmit_busy", scope: !8140, file: !8032, line: 417, baseType: !8204, size: 64, offset: 192)
!8204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8205, size: 64)
!8205 = !DISubroutineType(types: !8206)
!8206 = !{!826, !646, !8207}
!8207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8208, size: 64)
!8208 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8100)
!8209 = !DIDerivedType(tag: DW_TAG_member, name: "skb_transmit", scope: !8140, file: !8032, line: 419, baseType: !8210, size: 64, offset: 256)
!8210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8211, size: 64)
!8211 = !DISubroutineType(types: !8212)
!8212 = !{!32, !646, !470, !8207}
!8213 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_exec", scope: !8140, file: !8032, line: 421, baseType: !8214, size: 64, offset: 320)
!8214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8215, size: 64)
!8215 = !DISubroutineType(types: !8216)
!8216 = !{!32, !646, !636, !849, !1042, !826, !1093, !1094, !1093, !1094, !848}
!8217 = !DIDerivedType(tag: DW_TAG_member, name: "read_frc_h", scope: !8140, file: !8032, line: 426, baseType: !5207, size: 64, offset: 384)
!8218 = !DIDerivedType(tag: DW_TAG_member, name: "read_frc_l", scope: !8140, file: !8032, line: 427, baseType: !5207, size: 64, offset: 448)
!8219 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !8140, file: !8032, line: 428, baseType: !849, size: 8, offset: 512)
!8220 = !DIGlobalVariableExpression(var: !8221, expr: !DIExpression())
!8221 = distinct !DIGlobalVariable(name: "mlxsw_reg_mrsr_command_item", scope: !2, file: !8222, line: 9132, type: !8223, isLocal: true, isDefinition: true)
!8222 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/reg.h", directory: "/home/lizy2001/genbc/linux")
!8223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_item", file: !8224, line: 11, size: 192, elements: !8225)
!8224 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlxsw/item.h", directory: "/home/lizy2001/genbc/linux")
!8225 = !{!8226, !8227, !8228, !8229, !8230, !8231, !8232, !8237}
!8226 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !8223, file: !8224, line: 12, baseType: !531, size: 16)
!8227 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !8223, file: !8224, line: 13, baseType: !680, size: 16, offset: 16)
!8228 = !DIDerivedType(tag: DW_TAG_member, name: "in_step_offset", scope: !8223, file: !8224, line: 14, baseType: !531, size: 16, offset: 32)
!8229 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !8223, file: !8224, line: 15, baseType: !537, size: 8, offset: 48)
!8230 = !DIDerivedType(tag: DW_TAG_member, name: "element_size", scope: !8223, file: !8224, line: 16, baseType: !537, size: 8, offset: 56)
!8231 = !DIDerivedType(tag: DW_TAG_member, name: "no_real_shift", scope: !8223, file: !8224, line: 17, baseType: !826, size: 8, offset: 64)
!8232 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8223, file: !8224, line: 21, baseType: !8233, size: 16, offset: 80)
!8233 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8223, file: !8224, line: 18, size: 16, elements: !8234)
!8234 = !{!8235, !8236}
!8235 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !8233, file: !8224, line: 19, baseType: !537, size: 8)
!8236 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !8233, file: !8224, line: 20, baseType: !531, size: 16)
!8237 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8223, file: !8224, line: 22, baseType: !347, size: 64, offset: 128)
!8238 = !DIGlobalVariableExpression(var: !8239, expr: !DIExpression())
!8239 = distinct !DIGlobalVariable(name: "mlxsw_reg_mrsr", scope: !2, file: !8222, line: 9124, type: !8240, isLocal: true, isDefinition: true)
!8240 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8241)
!8241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_reg_info", file: !8222, line: 15, size: 128, elements: !8242)
!8242 = !{!8243, !8244, !8245}
!8243 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8241, file: !8222, line: 16, baseType: !636, size: 16)
!8244 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8241, file: !8222, line: 17, baseType: !636, size: 16, offset: 16)
!8245 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8241, file: !8222, line: 18, baseType: !347, size: 64, offset: 64)
!8246 = !DIGlobalVariableExpression(var: !8247, expr: !DIExpression())
!8247 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_query_fw_fw_rev_major_item", scope: !2, file: !7482, line: 214, type: !8223, isLocal: true, isDefinition: true)
!8248 = !DIGlobalVariableExpression(var: !8249, expr: !DIExpression())
!8249 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_query_fw_fw_rev_minor_item", scope: !2, file: !7482, line: 224, type: !8223, isLocal: true, isDefinition: true)
!8250 = !DIGlobalVariableExpression(var: !8251, expr: !DIExpression())
!8251 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_query_fw_fw_rev_subminor_item", scope: !2, file: !7482, line: 219, type: !8223, isLocal: true, isDefinition: true)
!8252 = !DIGlobalVariableExpression(var: !8253, expr: !DIExpression())
!8253 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_query_fw_cmd_interface_rev_item", scope: !2, file: !7482, line: 236, type: !8223, isLocal: true, isDefinition: true)
!8254 = !DIGlobalVariableExpression(var: !8255, expr: !DIExpression())
!8255 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_query_fw_doorbell_page_bar_item", scope: !2, file: !7482, line: 318, type: !8223, isLocal: true, isDefinition: true)
!8256 = !DIGlobalVariableExpression(var: !8257, expr: !DIExpression())
!8257 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_query_fw_doorbell_page_offset_item", scope: !2, file: !7482, line: 312, type: !8223, isLocal: true, isDefinition: true)
!8258 = !DIGlobalVariableExpression(var: !8259, expr: !DIExpression())
!8259 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_query_fw_fr_rn_clk_bar_item", scope: !2, file: !7482, line: 330, type: !8223, isLocal: true, isDefinition: true)
!8260 = !DIGlobalVariableExpression(var: !8261, expr: !DIExpression())
!8261 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_query_fw_free_running_clock_offset_item", scope: !2, file: !7482, line: 323, type: !8223, isLocal: true, isDefinition: true)
!8262 = !DIGlobalVariableExpression(var: !8263, expr: !DIExpression())
!8263 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_query_fw_fw_pages_item", scope: !2, file: !7482, line: 209, type: !8223, isLocal: true, isDefinition: true)
!8264 = !DIGlobalVariableExpression(var: !8265, expr: !DIExpression())
!8265 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_map_fa_pa_item", scope: !2, file: !7482, line: 472, type: !8223, isLocal: true, isDefinition: true)
!8266 = !DIGlobalVariableExpression(var: !8267, expr: !DIExpression())
!8267 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_map_fa_log2size_item", scope: !2, file: !7482, line: 478, type: !8223, isLocal: true, isDefinition: true)
!8268 = !DIGlobalVariableExpression(var: !8269, expr: !DIExpression())
!8269 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_boardinfo_vsd_item", scope: !2, file: !7482, line: 365, type: !8223, isLocal: true, isDefinition: true)
!8270 = !DIGlobalVariableExpression(var: !8271, expr: !DIExpression())
!8271 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_boardinfo_psid_item", scope: !2, file: !7482, line: 373, type: !8223, isLocal: true, isDefinition: true)
!8272 = !DIGlobalVariableExpression(var: !8273, expr: !DIExpression())
!8273 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_set_max_vepa_channels_item", scope: !2, file: !7482, line: 555, type: !8223, isLocal: true, isDefinition: true)
!8274 = !DIGlobalVariableExpression(var: !8275, expr: !DIExpression())
!8275 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_max_vepa_channels_item", scope: !2, file: !7482, line: 664, type: !8223, isLocal: true, isDefinition: true)
!8276 = !DIGlobalVariableExpression(var: !8277, expr: !DIExpression())
!8277 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_set_max_mid_item", scope: !2, file: !7482, line: 573, type: !8223, isLocal: true, isDefinition: true)
!8278 = !DIGlobalVariableExpression(var: !8279, expr: !DIExpression())
!8279 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_max_mid_item", scope: !2, file: !7482, line: 680, type: !8223, isLocal: true, isDefinition: true)
!8280 = !DIGlobalVariableExpression(var: !8281, expr: !DIExpression())
!8281 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_set_max_pgt_item", scope: !2, file: !7482, line: 579, type: !8223, isLocal: true, isDefinition: true)
!8282 = !DIGlobalVariableExpression(var: !8283, expr: !DIExpression())
!8283 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_max_pgt_item", scope: !2, file: !7482, line: 686, type: !8223, isLocal: true, isDefinition: true)
!8284 = !DIGlobalVariableExpression(var: !8285, expr: !DIExpression())
!8285 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_set_max_system_port_item", scope: !2, file: !7482, line: 585, type: !8223, isLocal: true, isDefinition: true)
!8286 = !DIGlobalVariableExpression(var: !8287, expr: !DIExpression())
!8287 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_max_system_port_item", scope: !2, file: !7482, line: 691, type: !8223, isLocal: true, isDefinition: true)
!8288 = !DIGlobalVariableExpression(var: !8289, expr: !DIExpression())
!8289 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_set_max_vlan_groups_item", scope: !2, file: !7482, line: 591, type: !8223, isLocal: true, isDefinition: true)
!8290 = !DIGlobalVariableExpression(var: !8291, expr: !DIExpression())
!8291 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_max_vlan_groups_item", scope: !2, file: !7482, line: 696, type: !8223, isLocal: true, isDefinition: true)
!8292 = !DIGlobalVariableExpression(var: !8293, expr: !DIExpression())
!8293 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_set_max_regions_item", scope: !2, file: !7482, line: 597, type: !8223, isLocal: true, isDefinition: true)
!8294 = !DIGlobalVariableExpression(var: !8295, expr: !DIExpression())
!8295 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_max_regions_item", scope: !2, file: !7482, line: 701, type: !8223, isLocal: true, isDefinition: true)
!8296 = !DIGlobalVariableExpression(var: !8297, expr: !DIExpression())
!8297 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_set_flood_tables_item", scope: !2, file: !7482, line: 609, type: !8223, isLocal: true, isDefinition: true)
!8298 = !DIGlobalVariableExpression(var: !8299, expr: !DIExpression())
!8299 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_max_flood_tables_item", scope: !2, file: !7482, line: 707, type: !8223, isLocal: true, isDefinition: true)
!8300 = !DIGlobalVariableExpression(var: !8301, expr: !DIExpression())
!8301 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_max_vid_flood_tables_item", scope: !2, file: !7482, line: 714, type: !8223, isLocal: true, isDefinition: true)
!8302 = !DIGlobalVariableExpression(var: !8303, expr: !DIExpression())
!8303 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_max_fid_offset_flood_tables_item", scope: !2, file: !7482, line: 730, type: !8223, isLocal: true, isDefinition: true)
!8304 = !DIGlobalVariableExpression(var: !8305, expr: !DIExpression())
!8305 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_fid_offset_flood_table_size_item", scope: !2, file: !7482, line: 736, type: !8223, isLocal: true, isDefinition: true)
!8306 = !DIGlobalVariableExpression(var: !8307, expr: !DIExpression())
!8307 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_max_fid_flood_tables_item", scope: !2, file: !7482, line: 745, type: !8223, isLocal: true, isDefinition: true)
!8308 = !DIGlobalVariableExpression(var: !8309, expr: !DIExpression())
!8309 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_fid_flood_table_size_item", scope: !2, file: !7482, line: 750, type: !8223, isLocal: true, isDefinition: true)
!8310 = !DIGlobalVariableExpression(var: !8311, expr: !DIExpression())
!8311 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_set_flood_mode_item", scope: !2, file: !7482, line: 603, type: !8223, isLocal: true, isDefinition: true)
!8312 = !DIGlobalVariableExpression(var: !8313, expr: !DIExpression())
!8313 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_flood_mode_item", scope: !2, file: !7482, line: 725, type: !8223, isLocal: true, isDefinition: true)
!8314 = !DIGlobalVariableExpression(var: !8315, expr: !DIExpression())
!8315 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_set_max_ib_mc_item", scope: !2, file: !7482, line: 615, type: !8223, isLocal: true, isDefinition: true)
!8316 = !DIGlobalVariableExpression(var: !8317, expr: !DIExpression())
!8317 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_max_ib_mc_item", scope: !2, file: !7482, line: 756, type: !8223, isLocal: true, isDefinition: true)
!8318 = !DIGlobalVariableExpression(var: !8319, expr: !DIExpression())
!8319 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_set_max_pkey_item", scope: !2, file: !7482, line: 621, type: !8223, isLocal: true, isDefinition: true)
!8320 = !DIGlobalVariableExpression(var: !8321, expr: !DIExpression())
!8321 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_max_pkey_item", scope: !2, file: !7482, line: 761, type: !8223, isLocal: true, isDefinition: true)
!8322 = !DIGlobalVariableExpression(var: !8323, expr: !DIExpression())
!8323 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_set_ar_sec_item", scope: !2, file: !7482, line: 634, type: !8223, isLocal: true, isDefinition: true)
!8324 = !DIGlobalVariableExpression(var: !8325, expr: !DIExpression())
!8325 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_ar_sec_item", scope: !2, file: !7482, line: 771, type: !8223, isLocal: true, isDefinition: true)
!8326 = !DIGlobalVariableExpression(var: !8327, expr: !DIExpression())
!8327 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_set_adaptive_routing_group_cap_item", scope: !2, file: !7482, line: 627, type: !8223, isLocal: true, isDefinition: true)
!8328 = !DIGlobalVariableExpression(var: !8329, expr: !DIExpression())
!8329 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_adaptive_routing_group_cap_item", scope: !2, file: !7482, line: 778, type: !8223, isLocal: true, isDefinition: true)
!8330 = !DIGlobalVariableExpression(var: !8331, expr: !DIExpression())
!8331 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_set_kvd_linear_size_item", scope: !2, file: !7482, line: 640, type: !8223, isLocal: true, isDefinition: true)
!8332 = !DIGlobalVariableExpression(var: !8333, expr: !DIExpression())
!8333 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_kvd_linear_size_item", scope: !2, file: !7482, line: 791, type: !8223, isLocal: true, isDefinition: true)
!8334 = !DIGlobalVariableExpression(var: !8335, expr: !DIExpression())
!8335 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_set_kvd_hash_single_size_item", scope: !2, file: !7482, line: 646, type: !8223, isLocal: true, isDefinition: true)
!8336 = !DIGlobalVariableExpression(var: !8337, expr: !DIExpression())
!8337 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_kvd_hash_single_size_item", scope: !2, file: !7482, line: 800, type: !8223, isLocal: true, isDefinition: true)
!8338 = !DIGlobalVariableExpression(var: !8339, expr: !DIExpression())
!8339 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_set_kvd_hash_double_size_item", scope: !2, file: !7482, line: 652, type: !8223, isLocal: true, isDefinition: true)
!8340 = !DIGlobalVariableExpression(var: !8341, expr: !DIExpression())
!8341 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_kvd_hash_double_size_item", scope: !2, file: !7482, line: 809, type: !8223, isLocal: true, isDefinition: true)
!8342 = !DIGlobalVariableExpression(var: !8343, expr: !DIExpression())
!8343 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_swid_config_type_item", scope: !2, file: !7482, line: 830, type: !8223, isLocal: true, isDefinition: true)
!8344 = !DIGlobalVariableExpression(var: !8345, expr: !DIExpression())
!8345 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_swid_config_properties_item", scope: !2, file: !7482, line: 836, type: !8223, isLocal: true, isDefinition: true)
!8346 = !DIGlobalVariableExpression(var: !8347, expr: !DIExpression())
!8347 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_swid_config_mask_item", scope: !2, file: !7482, line: 819, type: !8223, isLocal: true, isDefinition: true)
!8348 = !DIGlobalVariableExpression(var: !8349, expr: !DIExpression())
!8349 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_set_cqe_version_item", scope: !2, file: !7482, line: 658, type: !8223, isLocal: true, isDefinition: true)
!8350 = !DIGlobalVariableExpression(var: !8351, expr: !DIExpression())
!8351 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_config_profile_cqe_version_item", scope: !2, file: !7482, line: 845, type: !8223, isLocal: true, isDefinition: true)
!8352 = !DIGlobalVariableExpression(var: !8353, expr: !DIExpression())
!8353 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_query_aq_cap_max_num_sdqs_item", scope: !2, file: !7482, line: 398, type: !8223, isLocal: true, isDefinition: true)
!8354 = !DIGlobalVariableExpression(var: !8355, expr: !DIExpression())
!8355 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_query_aq_cap_log_max_sdq_sz_item", scope: !2, file: !7482, line: 393, type: !8223, isLocal: true, isDefinition: true)
!8356 = !DIGlobalVariableExpression(var: !8357, expr: !DIExpression())
!8357 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_query_aq_cap_max_num_rdqs_item", scope: !2, file: !7482, line: 408, type: !8223, isLocal: true, isDefinition: true)
!8358 = !DIGlobalVariableExpression(var: !8359, expr: !DIExpression())
!8359 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_query_aq_cap_log_max_rdq_sz_item", scope: !2, file: !7482, line: 403, type: !8223, isLocal: true, isDefinition: true)
!8360 = !DIGlobalVariableExpression(var: !8361, expr: !DIExpression())
!8361 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_query_aq_cap_max_num_cqs_item", scope: !2, file: !7482, line: 423, type: !8223, isLocal: true, isDefinition: true)
!8362 = !DIGlobalVariableExpression(var: !8363, expr: !DIExpression())
!8363 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_query_aq_cap_log_max_cq_sz_item", scope: !2, file: !7482, line: 413, type: !8223, isLocal: true, isDefinition: true)
!8364 = !DIGlobalVariableExpression(var: !8365, expr: !DIExpression())
!8365 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_query_aq_cap_log_max_cqv2_sz_item", scope: !2, file: !7482, line: 418, type: !8223, isLocal: true, isDefinition: true)
!8366 = !DIGlobalVariableExpression(var: !8367, expr: !DIExpression())
!8367 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_query_aq_cap_max_num_eqs_item", scope: !2, file: !7482, line: 433, type: !8223, isLocal: true, isDefinition: true)
!8368 = !DIGlobalVariableExpression(var: !8369, expr: !DIExpression())
!8369 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_query_aq_cap_log_max_eq_sz_item", scope: !2, file: !7482, line: 428, type: !8223, isLocal: true, isDefinition: true)
!8370 = !DIGlobalVariableExpression(var: !8371, expr: !DIExpression())
!8371 = distinct !DIGlobalVariable(name: "mlxsw_pci_eq_ops", scope: !2, file: !3, line: 828, type: !8372, isLocal: true, isDefinition: true)
!8372 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8373)
!8373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_pci_queue_ops", file: !3, line: 786, size: 576, elements: !8374)
!8374 = !{!8375, !8376, !8377, !8381, !8385, !8386, !8387, !8393, !8397, !8398}
!8375 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8373, file: !3, line: 787, baseType: !347, size: 64)
!8376 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8373, file: !3, line: 788, baseType: !7403, size: 32, offset: 64)
!8377 = !DIDerivedType(tag: DW_TAG_member, name: "pre_init", scope: !8373, file: !3, line: 789, baseType: !8378, size: 64, offset: 128)
!8378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8379, size: 64)
!8379 = !DISubroutineType(types: !8380)
!8380 = !{null, !7722, !7669}
!8381 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !8373, file: !3, line: 791, baseType: !8382, size: 64, offset: 192)
!8382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8383, size: 64)
!8383 = !DISubroutineType(types: !8384)
!8384 = !{!32, !7722, !1093, !7669}
!8385 = !DIDerivedType(tag: DW_TAG_member, name: "fini", scope: !8373, file: !3, line: 793, baseType: !8378, size: 64, offset: 256)
!8386 = !DIDerivedType(tag: DW_TAG_member, name: "tasklet", scope: !8373, file: !3, line: 795, baseType: !7717, size: 64, offset: 320)
!8387 = !DIDerivedType(tag: DW_TAG_member, name: "elem_count_f", scope: !8373, file: !3, line: 796, baseType: !8388, size: 64, offset: 384)
!8388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8389, size: 64)
!8389 = !DISubroutineType(types: !8390)
!8390 = !{!636, !8391}
!8391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8392, size: 64)
!8392 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7670)
!8393 = !DIDerivedType(tag: DW_TAG_member, name: "elem_size_f", scope: !8373, file: !3, line: 797, baseType: !8394, size: 64, offset: 448)
!8394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8395, size: 64)
!8395 = !DISubroutineType(types: !8396)
!8396 = !{!849, !8391}
!8397 = !DIDerivedType(tag: DW_TAG_member, name: "elem_count", scope: !8373, file: !3, line: 798, baseType: !636, size: 16, offset: 512)
!8398 = !DIDerivedType(tag: DW_TAG_member, name: "elem_size", scope: !8373, file: !3, line: 799, baseType: !849, size: 8, offset: 528)
!8399 = !DIGlobalVariableExpression(var: !8400, expr: !DIExpression())
!8400 = distinct !DIGlobalVariable(name: "mlxsw_pci_eqe_owner_item", scope: !2, file: !7410, line: 248, type: !8223, isLocal: true, isDefinition: true)
!8401 = !DIGlobalVariableExpression(var: !8402, expr: !DIExpression())
!8402 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_sw2hw_eq_int_msix_item", scope: !2, file: !7482, line: 1135, type: !8223, isLocal: true, isDefinition: true)
!8403 = !DIGlobalVariableExpression(var: !8404, expr: !DIExpression())
!8404 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_sw2hw_eq_st_item", scope: !2, file: !7482, line: 1144, type: !8223, isLocal: true, isDefinition: true)
!8405 = !DIGlobalVariableExpression(var: !8406, expr: !DIExpression())
!8406 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_sw2hw_eq_log_eq_size_item", scope: !2, file: !7482, line: 1149, type: !8223, isLocal: true, isDefinition: true)
!8407 = !DIGlobalVariableExpression(var: !8408, expr: !DIExpression())
!8408 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_sw2hw_eq_pa_item", scope: !2, file: !7482, line: 1161, type: !8223, isLocal: true, isDefinition: true)
!8409 = !DIGlobalVariableExpression(var: !8410, expr: !DIExpression())
!8410 = distinct !DIGlobalVariable(name: "mlxsw_pci_doorbell_type_offset", scope: !2, file: !3, line: 39, type: !8411, isLocal: true, isDefinition: true)
!8411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8412, size: 64, elements: !2327)
!8412 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !636)
!8413 = !DIGlobalVariableExpression(var: !8414, expr: !DIExpression())
!8414 = distinct !DIGlobalVariable(name: "mlxsw_pci_doorbell_arm_type_offset", scope: !2, file: !3, line: 46, type: !8411, isLocal: true, isDefinition: true)
!8415 = !DIGlobalVariableExpression(var: !8416, expr: !DIExpression())
!8416 = distinct !DIGlobalVariable(name: "mlxsw_pci_eqe_cmd_status_item", scope: !2, file: !7410, line: 258, type: !8223, isLocal: true, isDefinition: true)
!8417 = !DIGlobalVariableExpression(var: !8418, expr: !DIExpression())
!8418 = distinct !DIGlobalVariable(name: "mlxsw_pci_eqe_cmd_out_param_h_item", scope: !2, file: !7410, line: 263, type: !8223, isLocal: true, isDefinition: true)
!8419 = !DIGlobalVariableExpression(var: !8420, expr: !DIExpression())
!8420 = distinct !DIGlobalVariable(name: "mlxsw_pci_eqe_cmd_out_param_l_item", scope: !2, file: !7410, line: 268, type: !8223, isLocal: true, isDefinition: true)
!8421 = !DIGlobalVariableExpression(var: !8422, expr: !DIExpression())
!8422 = distinct !DIGlobalVariable(name: "mlxsw_pci_eqe_cqn_item", scope: !2, file: !7410, line: 243, type: !8223, isLocal: true, isDefinition: true)
!8423 = !DIGlobalVariableExpression(var: !8424, expr: !DIExpression())
!8424 = distinct !DIGlobalVariable(name: "mlxsw_pci_cq_ops", scope: !2, file: !3, line: 818, type: !8372, isLocal: true, isDefinition: true)
!8425 = !DIGlobalVariableExpression(var: !8426, expr: !DIExpression())
!8426 = distinct !DIGlobalVariable(name: "mlxsw_pci_cqe01_owner_item", scope: !2, file: !7410, line: 224, type: !8223, isLocal: true, isDefinition: true)
!8427 = !DIGlobalVariableExpression(var: !8428, expr: !DIExpression())
!8428 = distinct !DIGlobalVariable(name: "mlxsw_pci_cqe2_owner_item", scope: !2, file: !7410, line: 225, type: !8223, isLocal: true, isDefinition: true)
!8429 = !DIGlobalVariableExpression(var: !8430, expr: !DIExpression())
!8430 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_sw2hw_cq_cqe_ver_item", scope: !2, file: !7482, line: 1048, type: !8223, isLocal: true, isDefinition: true)
!8431 = !DIGlobalVariableExpression(var: !8432, expr: !DIExpression())
!8432 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_sw2hw_cq_c_eqn_item", scope: !2, file: !7482, line: 1053, type: !8223, isLocal: true, isDefinition: true)
!8433 = !DIGlobalVariableExpression(var: !8434, expr: !DIExpression())
!8434 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_sw2hw_cq_st_item", scope: !2, file: !7482, line: 1060, type: !8223, isLocal: true, isDefinition: true)
!8435 = !DIGlobalVariableExpression(var: !8436, expr: !DIExpression())
!8436 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_sw2hw_cq_log_cq_size_item", scope: !2, file: !7482, line: 1065, type: !8223, isLocal: true, isDefinition: true)
!8437 = !DIGlobalVariableExpression(var: !8438, expr: !DIExpression())
!8438 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_sw2hw_cq_pa_item", scope: !2, file: !7482, line: 1077, type: !8223, isLocal: true, isDefinition: true)
!8439 = !DIGlobalVariableExpression(var: !8440, expr: !DIExpression())
!8440 = distinct !DIGlobalVariable(name: "mlxsw_pci_cqe_wqe_counter_item", scope: !2, file: !7410, line: 167, type: !8223, isLocal: true, isDefinition: true)
!8441 = !DIGlobalVariableExpression(var: !8442, expr: !DIExpression())
!8442 = distinct !DIGlobalVariable(name: "mlxsw_pci_cqe0_sr_item", scope: !2, file: !7410, line: 200, type: !8223, isLocal: true, isDefinition: true)
!8443 = !DIGlobalVariableExpression(var: !8444, expr: !DIExpression())
!8444 = distinct !DIGlobalVariable(name: "mlxsw_pci_cqe12_sr_item", scope: !2, file: !7410, line: 201, type: !8223, isLocal: true, isDefinition: true)
!8445 = !DIGlobalVariableExpression(var: !8446, expr: !DIExpression())
!8446 = distinct !DIGlobalVariable(name: "mlxsw_pci_cqe0_dqn_item", scope: !2, file: !7410, line: 207, type: !8223, isLocal: true, isDefinition: true)
!8447 = !DIGlobalVariableExpression(var: !8448, expr: !DIExpression())
!8448 = distinct !DIGlobalVariable(name: "mlxsw_pci_cqe12_dqn_item", scope: !2, file: !7410, line: 208, type: !8223, isLocal: true, isDefinition: true)
!8449 = !DIGlobalVariableExpression(var: !8450, expr: !DIExpression())
!8450 = distinct !DIGlobalVariable(name: "mlxsw_pci_wqe_byte_count_item", scope: !2, file: !7410, line: 99, type: !8223, isLocal: true, isDefinition: true)
!8451 = !DIGlobalVariableExpression(var: !8452, expr: !DIExpression())
!8452 = distinct !DIGlobalVariable(name: "mlxsw_pci_wqe_address_item", scope: !2, file: !7410, line: 105, type: !8223, isLocal: true, isDefinition: true)
!8453 = !DIGlobalVariableExpression(var: !8454, expr: !DIExpression())
!8454 = distinct !DIGlobalVariable(name: "mlxsw_pci_cqe0_lag_item", scope: !2, file: !7410, line: 146, type: !8223, isLocal: true, isDefinition: true)
!8455 = !DIGlobalVariableExpression(var: !8456, expr: !DIExpression())
!8456 = distinct !DIGlobalVariable(name: "mlxsw_pci_cqe12_lag_item", scope: !2, file: !7410, line: 147, type: !8223, isLocal: true, isDefinition: true)
!8457 = !DIGlobalVariableExpression(var: !8458, expr: !DIExpression())
!8458 = distinct !DIGlobalVariable(name: "mlxsw_pci_cqe0_lag_id_item", scope: !2, file: !7410, line: 157, type: !8223, isLocal: true, isDefinition: true)
!8459 = !DIGlobalVariableExpression(var: !8460, expr: !DIExpression())
!8460 = distinct !DIGlobalVariable(name: "mlxsw_pci_cqe12_lag_id_item", scope: !2, file: !7410, line: 158, type: !8223, isLocal: true, isDefinition: true)
!8461 = !DIGlobalVariableExpression(var: !8462, expr: !DIExpression())
!8462 = distinct !DIGlobalVariable(name: "mlxsw_pci_cqe0_lag_subport_item", scope: !2, file: !7410, line: 160, type: !8223, isLocal: true, isDefinition: true)
!8463 = !DIGlobalVariableExpression(var: !8464, expr: !DIExpression())
!8464 = distinct !DIGlobalVariable(name: "mlxsw_pci_cqe12_lag_subport_item", scope: !2, file: !7410, line: 161, type: !8223, isLocal: true, isDefinition: true)
!8465 = !DIGlobalVariableExpression(var: !8466, expr: !DIExpression())
!8466 = distinct !DIGlobalVariable(name: "mlxsw_pci_cqe_system_port_item", scope: !2, file: !7410, line: 156, type: !8223, isLocal: true, isDefinition: true)
!8467 = !DIGlobalVariableExpression(var: !8468, expr: !DIExpression())
!8468 = distinct !DIGlobalVariable(name: "mlxsw_pci_cqe_trap_id_item", scope: !2, file: !7410, line: 179, type: !8223, isLocal: true, isDefinition: true)
!8469 = !DIGlobalVariableExpression(var: !8470, expr: !DIExpression())
!8470 = distinct !DIGlobalVariable(name: "mlxsw_pci_cqe2_user_def_val_orig_pkt_len_item", scope: !2, file: !7410, line: 214, type: !8223, isLocal: true, isDefinition: true)
!8471 = !DIGlobalVariableExpression(var: !8472, expr: !DIExpression())
!8472 = distinct !DIGlobalVariable(name: "mlxsw_pci_cqe2_mirror_reason_item", scope: !2, file: !7410, line: 219, type: !8223, isLocal: true, isDefinition: true)
!8473 = !DIGlobalVariableExpression(var: !8474, expr: !DIExpression())
!8474 = distinct !DIGlobalVariable(name: "mlxsw_pci_cqe_byte_count_item", scope: !2, file: !7410, line: 174, type: !8223, isLocal: true, isDefinition: true)
!8475 = !DIGlobalVariableExpression(var: !8476, expr: !DIExpression())
!8476 = distinct !DIGlobalVariable(name: "mlxsw_pci_cqe0_crc_item", scope: !2, file: !7410, line: 185, type: !8223, isLocal: true, isDefinition: true)
!8477 = !DIGlobalVariableExpression(var: !8478, expr: !DIExpression())
!8478 = distinct !DIGlobalVariable(name: "mlxsw_pci_cqe12_crc_item", scope: !2, file: !7410, line: 186, type: !8223, isLocal: true, isDefinition: true)
!8479 = !DIGlobalVariableExpression(var: !8480, expr: !DIExpression())
!8480 = distinct !DIGlobalVariable(name: "_rs", scope: !8481, file: !3, line: 328, type: !2023, isLocal: true, isDefinition: true)
!8481 = distinct !DISubprogram(name: "mlxsw_pci_wqe_frag_map", scope: !3, file: !3, line: 319, type: !8482, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!8482 = !DISubroutineType(types: !8483)
!8483 = !{!32, !7722, !1093, !32, !1093, !1094, !32}
!8484 = !DIGlobalVariableExpression(var: !8485, expr: !DIExpression())
!8485 = distinct !DIGlobalVariable(name: "__warned", scope: !8486, file: !8487, line: 275, type: !826, isLocal: true, isDefinition: true)
!8486 = distinct !DISubprogram(name: "dma_map_single_attrs", scope: !8487, file: !8487, line: 271, type: !8488, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!8487 = !DIFile(filename: "./include/linux/dma-mapping.h", directory: "/home/lizy2001/genbc/linux")
!8488 = !DISubroutineType(types: !8489)
!8489 = !{!2091, !5809, !646, !1094, !7510, !367}
!8490 = !DIGlobalVariableExpression(var: !8491, expr: !DIExpression())
!8491 = distinct !DIGlobalVariable(name: "mlxsw_pci_sdq_ops", scope: !2, file: !3, line: 802, type: !8372, isLocal: true, isDefinition: true)
!8492 = !DIGlobalVariableExpression(var: !8493, expr: !DIExpression())
!8493 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_sw2hw_dq_cq_item", scope: !2, file: !7482, line: 906, type: !8223, isLocal: true, isDefinition: true)
!8494 = !DIGlobalVariableExpression(var: !8495, expr: !DIExpression())
!8495 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_sw2hw_dq_sdq_tclass_item", scope: !2, file: !7482, line: 912, type: !8223, isLocal: true, isDefinition: true)
!8496 = !DIGlobalVariableExpression(var: !8497, expr: !DIExpression())
!8497 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_sw2hw_dq_log2_dq_sz_item", scope: !2, file: !7482, line: 917, type: !8223, isLocal: true, isDefinition: true)
!8498 = !DIGlobalVariableExpression(var: !8499, expr: !DIExpression())
!8499 = distinct !DIGlobalVariable(name: "mlxsw_cmd_mbox_sw2hw_dq_pa_item", scope: !2, file: !7482, line: 922, type: !8223, isLocal: true, isDefinition: true)
!8500 = !DIGlobalVariableExpression(var: !8501, expr: !DIExpression())
!8501 = distinct !DIGlobalVariable(name: "mlxsw_pci_rdq_ops", scope: !2, file: !3, line: 810, type: !8372, isLocal: true, isDefinition: true)
!8502 = !DIGlobalVariableExpression(var: !8503, expr: !DIExpression())
!8503 = distinct !DIGlobalVariable(name: "mlxsw_pci_wqe_c_item", scope: !2, file: !7410, line: 77, type: !8223, isLocal: true, isDefinition: true)
!8504 = !DIGlobalVariableExpression(var: !8505, expr: !DIExpression())
!8505 = distinct !DIGlobalVariable(name: "mlxsw_pci_wqe_lp_item", scope: !2, file: !7410, line: 89, type: !8223, isLocal: true, isDefinition: true)
!8506 = !DIGlobalVariableExpression(var: !8507, expr: !DIExpression())
!8507 = distinct !DIGlobalVariable(name: "mlxsw_pci_wqe_type_item", scope: !2, file: !7410, line: 94, type: !8223, isLocal: true, isDefinition: true)
!8508 = !{i32 7, !"Dwarf Version", i32 4}
!8509 = !{i32 2, !"Debug Info Version", i32 3}
!8510 = !{i32 1, !"wchar_size", i32 2}
!8511 = !{i32 1, !"Code Model", i32 2}
!8512 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!8513 = distinct !DISubprogram(name: "mlxsw_pci_driver_register", scope: !3, file: !3, line: 1900, type: !8514, scopeLine: 1901, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!8514 = !DISubroutineType(types: !8515)
!8515 = !{!32, !7831}
!8516 = !DILocalVariable(name: "pci_driver", arg: 1, scope: !8513, file: !3, line: 1900, type: !7831)
!8517 = !DILocation(line: 1900, column: 50, scope: !8513)
!8518 = !DILocation(line: 1902, column: 2, scope: !8513)
!8519 = !DILocation(line: 1902, column: 14, scope: !8513)
!8520 = !DILocation(line: 1902, column: 20, scope: !8513)
!8521 = !DILocation(line: 1903, column: 2, scope: !8513)
!8522 = !DILocation(line: 1903, column: 14, scope: !8513)
!8523 = !DILocation(line: 1903, column: 21, scope: !8513)
!8524 = !DILocation(line: 1904, column: 9, scope: !8513)
!8525 = !DILocation(line: 1904, column: 2, scope: !8513)
!8526 = distinct !DISubprogram(name: "mlxsw_pci_probe", scope: !3, file: !3, line: 1798, type: !7850, scopeLine: 1799, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!8527 = !DILocalVariable(name: "pdev", arg: 1, scope: !8526, file: !3, line: 1798, type: !7726)
!8528 = !DILocation(line: 1798, column: 44, scope: !8526)
!8529 = !DILocalVariable(name: "id", arg: 2, scope: !8526, file: !3, line: 1798, type: !7837)
!8530 = !DILocation(line: 1798, column: 78, scope: !8526)
!8531 = !DILocalVariable(name: "driver_name", scope: !8526, file: !3, line: 1800, type: !347)
!8532 = !DILocation(line: 1800, column: 14, scope: !8526)
!8533 = !DILocation(line: 1800, column: 28, scope: !8526)
!8534 = !DILocation(line: 1800, column: 34, scope: !8526)
!8535 = !DILocation(line: 1800, column: 42, scope: !8526)
!8536 = !DILocalVariable(name: "mlxsw_pci", scope: !8526, file: !3, line: 1801, type: !7722)
!8537 = !DILocation(line: 1801, column: 20, scope: !8526)
!8538 = !DILocalVariable(name: "err", scope: !8526, file: !3, line: 1802, type: !32)
!8539 = !DILocation(line: 1802, column: 6, scope: !8526)
!8540 = !DILocation(line: 1804, column: 14, scope: !8526)
!8541 = !DILocation(line: 1804, column: 12, scope: !8526)
!8542 = !DILocation(line: 1805, column: 7, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8526, file: !3, line: 1805, column: 6)
!8544 = !DILocation(line: 1805, column: 6, scope: !8526)
!8545 = !DILocation(line: 1806, column: 3, scope: !8543)
!8546 = !DILocation(line: 1808, column: 26, scope: !8526)
!8547 = !DILocation(line: 1808, column: 8, scope: !8526)
!8548 = !DILocation(line: 1808, column: 6, scope: !8526)
!8549 = !DILocation(line: 1809, column: 6, scope: !8550)
!8550 = distinct !DILexicalBlock(scope: !8526, file: !3, line: 1809, column: 6)
!8551 = !DILocation(line: 1809, column: 6, scope: !8526)
!8552 = !DILocation(line: 1810, column: 3, scope: !8553)
!8553 = distinct !DILexicalBlock(scope: !8550, file: !3, line: 1809, column: 11)
!8554 = !DILocation(line: 1811, column: 3, scope: !8553)
!8555 = !DILocation(line: 1814, column: 28, scope: !8526)
!8556 = !DILocation(line: 1814, column: 34, scope: !8526)
!8557 = !DILocation(line: 1814, column: 8, scope: !8526)
!8558 = !DILocation(line: 1814, column: 6, scope: !8526)
!8559 = !DILocation(line: 1815, column: 6, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8526, file: !3, line: 1815, column: 6)
!8561 = !DILocation(line: 1815, column: 6, scope: !8526)
!8562 = !DILocation(line: 1816, column: 3, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8560, file: !3, line: 1815, column: 11)
!8564 = !DILocation(line: 1817, column: 3, scope: !8563)
!8565 = !DILocation(line: 1820, column: 25, scope: !8526)
!8566 = !DILocation(line: 1820, column: 8, scope: !8526)
!8567 = !DILocation(line: 1820, column: 6, scope: !8526)
!8568 = !DILocation(line: 1821, column: 7, scope: !8569)
!8569 = distinct !DILexicalBlock(scope: !8526, file: !3, line: 1821, column: 6)
!8570 = !DILocation(line: 1821, column: 6, scope: !8526)
!8571 = !DILocation(line: 1822, column: 37, scope: !8572)
!8572 = distinct !DILexicalBlock(scope: !8569, file: !3, line: 1821, column: 12)
!8573 = !DILocation(line: 1822, column: 9, scope: !8572)
!8574 = !DILocation(line: 1822, column: 7, scope: !8572)
!8575 = !DILocation(line: 1823, column: 7, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !8572, file: !3, line: 1823, column: 7)
!8577 = !DILocation(line: 1823, column: 7, scope: !8572)
!8578 = !DILocation(line: 1824, column: 4, scope: !8579)
!8579 = distinct !DILexicalBlock(scope: !8576, file: !3, line: 1823, column: 12)
!8580 = !DILocation(line: 1825, column: 4, scope: !8579)
!8581 = !DILocation(line: 1827, column: 2, scope: !8572)
!8582 = !DILocation(line: 1828, column: 26, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8569, file: !3, line: 1827, column: 9)
!8584 = !DILocation(line: 1828, column: 9, scope: !8583)
!8585 = !DILocation(line: 1828, column: 7, scope: !8583)
!8586 = !DILocation(line: 1829, column: 7, scope: !8587)
!8587 = distinct !DILexicalBlock(scope: !8583, file: !3, line: 1829, column: 7)
!8588 = !DILocation(line: 1829, column: 7, scope: !8583)
!8589 = !DILocation(line: 1830, column: 4, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !8587, file: !3, line: 1829, column: 12)
!8591 = !DILocation(line: 1831, column: 4, scope: !8590)
!8592 = !DILocation(line: 1835, column: 6, scope: !8593)
!8593 = distinct !DILexicalBlock(scope: !8526, file: !3, line: 1835, column: 6)
!8594 = !DILocation(line: 1835, column: 32, scope: !8593)
!8595 = !DILocation(line: 1835, column: 6, scope: !8526)
!8596 = !DILocation(line: 1836, column: 3, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8593, file: !3, line: 1835, column: 55)
!8598 = !DILocation(line: 1837, column: 7, scope: !8597)
!8599 = !DILocation(line: 1838, column: 3, scope: !8597)
!8600 = !DILocation(line: 1841, column: 31, scope: !8526)
!8601 = !DILocation(line: 1842, column: 10, scope: !8526)
!8602 = !DILocation(line: 1841, column: 23, scope: !8526)
!8603 = !DILocation(line: 1841, column: 2, scope: !8526)
!8604 = !DILocation(line: 1841, column: 13, scope: !8526)
!8605 = !DILocation(line: 1841, column: 21, scope: !8526)
!8606 = !DILocation(line: 1843, column: 7, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !8526, file: !3, line: 1843, column: 6)
!8608 = !DILocation(line: 1843, column: 18, scope: !8607)
!8609 = !DILocation(line: 1843, column: 6, scope: !8526)
!8610 = !DILocation(line: 1844, column: 3, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 1843, column: 27)
!8612 = !DILocation(line: 1845, column: 7, scope: !8611)
!8613 = !DILocation(line: 1846, column: 3, scope: !8611)
!8614 = !DILocation(line: 1848, column: 17, scope: !8526)
!8615 = !DILocation(line: 1848, column: 2, scope: !8526)
!8616 = !DILocation(line: 1850, column: 20, scope: !8526)
!8617 = !DILocation(line: 1850, column: 2, scope: !8526)
!8618 = !DILocation(line: 1850, column: 13, scope: !8526)
!8619 = !DILocation(line: 1850, column: 18, scope: !8526)
!8620 = !DILocation(line: 1851, column: 18, scope: !8526)
!8621 = !DILocation(line: 1851, column: 24, scope: !8526)
!8622 = !DILocation(line: 1851, column: 2, scope: !8526)
!8623 = !DILocation(line: 1853, column: 27, scope: !8526)
!8624 = !DILocation(line: 1853, column: 8, scope: !8526)
!8625 = !DILocation(line: 1853, column: 6, scope: !8526)
!8626 = !DILocation(line: 1854, column: 6, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8526, file: !3, line: 1854, column: 6)
!8628 = !DILocation(line: 1854, column: 6, scope: !8526)
!8629 = !DILocation(line: 1855, column: 3, scope: !8627)
!8630 = !DILocation(line: 1857, column: 36, scope: !8526)
!8631 = !DILocation(line: 1857, column: 2, scope: !8526)
!8632 = !DILocation(line: 1857, column: 13, scope: !8526)
!8633 = !DILocation(line: 1857, column: 22, scope: !8526)
!8634 = !DILocation(line: 1857, column: 34, scope: !8526)
!8635 = !DILocation(line: 1858, column: 45, scope: !8526)
!8636 = !DILocation(line: 1858, column: 56, scope: !8526)
!8637 = !DILocation(line: 1858, column: 36, scope: !8526)
!8638 = !DILocation(line: 1858, column: 2, scope: !8526)
!8639 = !DILocation(line: 1858, column: 13, scope: !8526)
!8640 = !DILocation(line: 1858, column: 22, scope: !8526)
!8641 = !DILocation(line: 1858, column: 34, scope: !8526)
!8642 = !DILocation(line: 1859, column: 29, scope: !8526)
!8643 = !DILocation(line: 1859, column: 35, scope: !8526)
!8644 = !DILocation(line: 1859, column: 2, scope: !8526)
!8645 = !DILocation(line: 1859, column: 13, scope: !8526)
!8646 = !DILocation(line: 1859, column: 22, scope: !8526)
!8647 = !DILocation(line: 1859, column: 26, scope: !8526)
!8648 = !DILocation(line: 1860, column: 2, scope: !8526)
!8649 = !DILocation(line: 1860, column: 13, scope: !8526)
!8650 = !DILocation(line: 1860, column: 22, scope: !8526)
!8651 = !DILocation(line: 1860, column: 39, scope: !8526)
!8652 = !DILocation(line: 1861, column: 18, scope: !8526)
!8653 = !DILocation(line: 1861, column: 2, scope: !8526)
!8654 = !DILocation(line: 1861, column: 13, scope: !8526)
!8655 = !DILocation(line: 1861, column: 16, scope: !8526)
!8656 = !DILocation(line: 1863, column: 40, scope: !8526)
!8657 = !DILocation(line: 1863, column: 51, scope: !8526)
!8658 = !DILocation(line: 1864, column: 27, scope: !8526)
!8659 = !DILocation(line: 1863, column: 8, scope: !8526)
!8660 = !DILocation(line: 1863, column: 6, scope: !8526)
!8661 = !DILocation(line: 1866, column: 6, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8526, file: !3, line: 1866, column: 6)
!8663 = !DILocation(line: 1866, column: 6, scope: !8526)
!8664 = !DILocation(line: 1867, column: 3, scope: !8665)
!8665 = distinct !DILexicalBlock(scope: !8662, file: !3, line: 1866, column: 11)
!8666 = !DILocation(line: 1868, column: 3, scope: !8665)
!8667 = !DILocation(line: 1871, column: 2, scope: !8526)
!8668 = !DILabel(scope: !8526, name: "err_bus_device_register", file: !3, line: 1873)
!8669 = !DILocation(line: 1873, column: 1, scope: !8526)
!8670 = !DILocation(line: 1874, column: 21, scope: !8526)
!8671 = !DILocation(line: 1874, column: 2, scope: !8526)
!8672 = !DILabel(scope: !8526, name: "err_pci_cmd_init", file: !3, line: 1875)
!8673 = !DILocation(line: 1875, column: 1, scope: !8526)
!8674 = !DILocation(line: 1876, column: 10, scope: !8526)
!8675 = !DILocation(line: 1876, column: 21, scope: !8526)
!8676 = !DILocation(line: 1876, column: 2, scope: !8526)
!8677 = !DILabel(scope: !8526, name: "err_ioremap", file: !3, line: 1877)
!8678 = !DILocation(line: 1877, column: 1, scope: !8526)
!8679 = !DILabel(scope: !8526, name: "err_pci_resource_len_check", file: !3, line: 1878)
!8680 = !DILocation(line: 1878, column: 1, scope: !8526)
!8681 = !DILabel(scope: !8526, name: "err_pci_set_dma_mask", file: !3, line: 1879)
!8682 = !DILocation(line: 1879, column: 1, scope: !8526)
!8683 = !DILocation(line: 1880, column: 22, scope: !8526)
!8684 = !DILocation(line: 1880, column: 2, scope: !8526)
!8685 = !DILabel(scope: !8526, name: "err_pci_request_regions", file: !3, line: 1881)
!8686 = !DILocation(line: 1881, column: 1, scope: !8526)
!8687 = !DILocation(line: 1882, column: 21, scope: !8526)
!8688 = !DILocation(line: 1882, column: 2, scope: !8526)
!8689 = !DILabel(scope: !8526, name: "err_pci_enable_device", file: !3, line: 1883)
!8690 = !DILocation(line: 1883, column: 1, scope: !8526)
!8691 = !DILocation(line: 1884, column: 8, scope: !8526)
!8692 = !DILocation(line: 1884, column: 2, scope: !8526)
!8693 = !DILocation(line: 1885, column: 9, scope: !8526)
!8694 = !DILocation(line: 1885, column: 2, scope: !8526)
!8695 = !DILocation(line: 1886, column: 1, scope: !8526)
!8696 = distinct !DISubprogram(name: "mlxsw_pci_remove", scope: !3, file: !3, line: 1888, type: !7854, scopeLine: 1889, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!8697 = !DILocalVariable(name: "pdev", arg: 1, scope: !8696, file: !3, line: 1888, type: !7726)
!8698 = !DILocation(line: 1888, column: 46, scope: !8696)
!8699 = !DILocalVariable(name: "mlxsw_pci", scope: !8696, file: !3, line: 1890, type: !7722)
!8700 = !DILocation(line: 1890, column: 20, scope: !8696)
!8701 = !DILocation(line: 1890, column: 48, scope: !8696)
!8702 = !DILocation(line: 1890, column: 32, scope: !8696)
!8703 = !DILocation(line: 1892, column: 35, scope: !8696)
!8704 = !DILocation(line: 1892, column: 46, scope: !8696)
!8705 = !DILocation(line: 1892, column: 2, scope: !8696)
!8706 = !DILocation(line: 1893, column: 21, scope: !8696)
!8707 = !DILocation(line: 1893, column: 2, scope: !8696)
!8708 = !DILocation(line: 1894, column: 10, scope: !8696)
!8709 = !DILocation(line: 1894, column: 21, scope: !8696)
!8710 = !DILocation(line: 1894, column: 2, scope: !8696)
!8711 = !DILocation(line: 1895, column: 22, scope: !8696)
!8712 = !DILocation(line: 1895, column: 33, scope: !8696)
!8713 = !DILocation(line: 1895, column: 2, scope: !8696)
!8714 = !DILocation(line: 1896, column: 21, scope: !8696)
!8715 = !DILocation(line: 1896, column: 32, scope: !8696)
!8716 = !DILocation(line: 1896, column: 2, scope: !8696)
!8717 = !DILocation(line: 1897, column: 8, scope: !8696)
!8718 = !DILocation(line: 1897, column: 2, scope: !8696)
!8719 = !DILocation(line: 1898, column: 1, scope: !8696)
!8720 = distinct !DISubprogram(name: "mlxsw_pci_driver_unregister", scope: !3, file: !3, line: 1908, type: !8721, scopeLine: 1909, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!8721 = !DISubroutineType(types: !8722)
!8722 = !{null, !7831}
!8723 = !DILocalVariable(name: "pci_driver", arg: 1, scope: !8720, file: !3, line: 1908, type: !7831)
!8724 = !DILocation(line: 1908, column: 53, scope: !8720)
!8725 = !DILocation(line: 1910, column: 24, scope: !8720)
!8726 = !DILocation(line: 1910, column: 2, scope: !8720)
!8727 = !DILocation(line: 1911, column: 1, scope: !8720)
!8728 = distinct !DISubprogram(name: "mlxsw_pci_module_exit", scope: !3, file: !3, line: 1919, type: !3864, scopeLine: 1920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!8729 = !DILocation(line: 1921, column: 1, scope: !8728)
!8730 = distinct !DISubprogram(name: "mlxsw_pci_module_init", scope: !3, file: !3, line: 1914, type: !8731, scopeLine: 1915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!8731 = !DISubroutineType(types: !8732)
!8732 = !{!32}
!8733 = !DILocation(line: 1916, column: 2, scope: !8730)
!8734 = distinct !DISubprogram(name: "kzalloc", scope: !7421, file: !7421, line: 662, type: !8735, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!8735 = !DISubroutineType(types: !8736)
!8736 = !{!646, !1094, !1797}
!8737 = !DILocalVariable(name: "s", arg: 1, scope: !8738, file: !7421, line: 445, type: !2106)
!8738 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !7421, file: !7421, line: 445, type: !8739, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!8739 = !DISubroutineType(types: !8740)
!8740 = !{!646, !2106, !1797, !1094}
!8741 = !DILocation(line: 445, column: 72, scope: !8738, inlinedAt: !8742)
!8742 = distinct !DILocation(line: 552, column: 10, scope: !8743, inlinedAt: !8746)
!8743 = distinct !DILexicalBlock(scope: !8744, file: !7421, line: 540, column: 34)
!8744 = distinct !DILexicalBlock(scope: !8745, file: !7421, line: 540, column: 6)
!8745 = distinct !DISubprogram(name: "kmalloc", scope: !7421, file: !7421, line: 538, type: !8735, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!8746 = distinct !DILocation(line: 664, column: 9, scope: !8734)
!8747 = !DILocalVariable(name: "flags", arg: 2, scope: !8738, file: !7421, line: 446, type: !1797)
!8748 = !DILocation(line: 446, column: 9, scope: !8738, inlinedAt: !8742)
!8749 = !DILocalVariable(name: "size", arg: 3, scope: !8738, file: !7421, line: 446, type: !1094)
!8750 = !DILocation(line: 446, column: 23, scope: !8738, inlinedAt: !8742)
!8751 = !DILocalVariable(name: "ret", scope: !8738, file: !7421, line: 448, type: !646)
!8752 = !DILocation(line: 448, column: 8, scope: !8738, inlinedAt: !8742)
!8753 = !DILocalVariable(name: "flags", arg: 1, scope: !8754, file: !7421, line: 318, type: !1797)
!8754 = distinct !DISubprogram(name: "kmalloc_type", scope: !7421, file: !7421, line: 318, type: !8755, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!8755 = !DISubroutineType(types: !8756)
!8756 = !{!7420, !1797}
!8757 = !DILocation(line: 318, column: 67, scope: !8754, inlinedAt: !8758)
!8758 = distinct !DILocation(line: 553, column: 20, scope: !8743, inlinedAt: !8746)
!8759 = !DILocalVariable(name: "size", arg: 1, scope: !8760, file: !7421, line: 346, type: !1094)
!8760 = distinct !DISubprogram(name: "kmalloc_index", scope: !7421, file: !7421, line: 346, type: !8761, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!8761 = !DISubroutineType(types: !8762)
!8762 = !{!7, !1094}
!8763 = !DILocation(line: 346, column: 58, scope: !8760, inlinedAt: !8764)
!8764 = distinct !DILocation(line: 547, column: 11, scope: !8743, inlinedAt: !8746)
!8765 = !DILocalVariable(name: "size", arg: 1, scope: !8766, file: !7421, line: 472, type: !1094)
!8766 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !7421, file: !7421, line: 472, type: !8767, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!8767 = !DISubroutineType(types: !8768)
!8768 = !{!646, !1094, !1797, !7}
!8769 = !DILocation(line: 472, column: 28, scope: !8766, inlinedAt: !8770)
!8770 = distinct !DILocation(line: 481, column: 9, scope: !8771, inlinedAt: !8772)
!8771 = distinct !DISubprogram(name: "kmalloc_large", scope: !7421, file: !7421, line: 478, type: !8735, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!8772 = distinct !DILocation(line: 545, column: 11, scope: !8773, inlinedAt: !8746)
!8773 = distinct !DILexicalBlock(scope: !8743, file: !7421, line: 544, column: 7)
!8774 = !DILocalVariable(name: "flags", arg: 2, scope: !8766, file: !7421, line: 472, type: !1797)
!8775 = !DILocation(line: 472, column: 40, scope: !8766, inlinedAt: !8770)
!8776 = !DILocalVariable(name: "order", arg: 3, scope: !8766, file: !7421, line: 472, type: !7)
!8777 = !DILocation(line: 472, column: 60, scope: !8766, inlinedAt: !8770)
!8778 = !DILocalVariable(name: "size", arg: 1, scope: !8771, file: !7421, line: 478, type: !1094)
!8779 = !DILocation(line: 478, column: 51, scope: !8771, inlinedAt: !8772)
!8780 = !DILocalVariable(name: "flags", arg: 2, scope: !8771, file: !7421, line: 478, type: !1797)
!8781 = !DILocation(line: 478, column: 63, scope: !8771, inlinedAt: !8772)
!8782 = !DILocalVariable(name: "order", scope: !8771, file: !7421, line: 480, type: !7)
!8783 = !DILocation(line: 480, column: 15, scope: !8771, inlinedAt: !8772)
!8784 = !DILocalVariable(name: "size", arg: 1, scope: !8745, file: !7421, line: 538, type: !1094)
!8785 = !DILocation(line: 538, column: 45, scope: !8745, inlinedAt: !8746)
!8786 = !DILocalVariable(name: "flags", arg: 2, scope: !8745, file: !7421, line: 538, type: !1797)
!8787 = !DILocation(line: 538, column: 57, scope: !8745, inlinedAt: !8746)
!8788 = !DILocalVariable(name: "index", scope: !8743, file: !7421, line: 542, type: !7)
!8789 = !DILocation(line: 542, column: 16, scope: !8743, inlinedAt: !8746)
!8790 = !DILocalVariable(name: "size", arg: 1, scope: !8734, file: !7421, line: 662, type: !1094)
!8791 = !DILocation(line: 662, column: 36, scope: !8734)
!8792 = !DILocalVariable(name: "flags", arg: 2, scope: !8734, file: !7421, line: 662, type: !1797)
!8793 = !DILocation(line: 662, column: 48, scope: !8734)
!8794 = !DILocation(line: 664, column: 17, scope: !8734)
!8795 = !DILocation(line: 664, column: 23, scope: !8734)
!8796 = !DILocation(line: 664, column: 29, scope: !8734)
!8797 = !DILocation(line: 540, column: 27, scope: !8744, inlinedAt: !8746)
!8798 = !DILocation(line: 540, column: 6, scope: !8744, inlinedAt: !8746)
!8799 = !DILocation(line: 540, column: 6, scope: !8745, inlinedAt: !8746)
!8800 = !DILocation(line: 544, column: 7, scope: !8773, inlinedAt: !8746)
!8801 = !DILocation(line: 544, column: 12, scope: !8773, inlinedAt: !8746)
!8802 = !DILocation(line: 544, column: 7, scope: !8743, inlinedAt: !8746)
!8803 = !DILocation(line: 545, column: 25, scope: !8773, inlinedAt: !8746)
!8804 = !DILocation(line: 545, column: 31, scope: !8773, inlinedAt: !8746)
!8805 = !DILocation(line: 480, column: 33, scope: !8771, inlinedAt: !8772)
!8806 = !DILocation(line: 480, column: 23, scope: !8771, inlinedAt: !8772)
!8807 = !DILocation(line: 481, column: 29, scope: !8771, inlinedAt: !8772)
!8808 = !DILocation(line: 481, column: 35, scope: !8771, inlinedAt: !8772)
!8809 = !DILocation(line: 481, column: 42, scope: !8771, inlinedAt: !8772)
!8810 = !DILocation(line: 474, column: 23, scope: !8766, inlinedAt: !8770)
!8811 = !DILocation(line: 474, column: 29, scope: !8766, inlinedAt: !8770)
!8812 = !DILocation(line: 474, column: 36, scope: !8766, inlinedAt: !8770)
!8813 = !DILocation(line: 474, column: 9, scope: !8766, inlinedAt: !8770)
!8814 = !DILocation(line: 545, column: 4, scope: !8773, inlinedAt: !8746)
!8815 = !DILocation(line: 547, column: 25, scope: !8743, inlinedAt: !8746)
!8816 = !DILocation(line: 348, column: 7, scope: !8817, inlinedAt: !8764)
!8817 = distinct !DILexicalBlock(scope: !8760, file: !7421, line: 348, column: 6)
!8818 = !DILocation(line: 348, column: 6, scope: !8760, inlinedAt: !8764)
!8819 = !DILocation(line: 349, column: 3, scope: !8817, inlinedAt: !8764)
!8820 = !DILocation(line: 351, column: 6, scope: !8821, inlinedAt: !8764)
!8821 = distinct !DILexicalBlock(scope: !8760, file: !7421, line: 351, column: 6)
!8822 = !DILocation(line: 351, column: 11, scope: !8821, inlinedAt: !8764)
!8823 = !DILocation(line: 351, column: 6, scope: !8760, inlinedAt: !8764)
!8824 = !DILocation(line: 352, column: 3, scope: !8821, inlinedAt: !8764)
!8825 = !DILocation(line: 354, column: 32, scope: !8826, inlinedAt: !8764)
!8826 = distinct !DILexicalBlock(scope: !8760, file: !7421, line: 354, column: 6)
!8827 = !DILocation(line: 354, column: 37, scope: !8826, inlinedAt: !8764)
!8828 = !DILocation(line: 354, column: 42, scope: !8826, inlinedAt: !8764)
!8829 = !DILocation(line: 354, column: 45, scope: !8826, inlinedAt: !8764)
!8830 = !DILocation(line: 354, column: 50, scope: !8826, inlinedAt: !8764)
!8831 = !DILocation(line: 354, column: 6, scope: !8760, inlinedAt: !8764)
!8832 = !DILocation(line: 355, column: 3, scope: !8826, inlinedAt: !8764)
!8833 = !DILocation(line: 356, column: 32, scope: !8834, inlinedAt: !8764)
!8834 = distinct !DILexicalBlock(scope: !8760, file: !7421, line: 356, column: 6)
!8835 = !DILocation(line: 356, column: 37, scope: !8834, inlinedAt: !8764)
!8836 = !DILocation(line: 356, column: 43, scope: !8834, inlinedAt: !8764)
!8837 = !DILocation(line: 356, column: 46, scope: !8834, inlinedAt: !8764)
!8838 = !DILocation(line: 356, column: 51, scope: !8834, inlinedAt: !8764)
!8839 = !DILocation(line: 356, column: 6, scope: !8760, inlinedAt: !8764)
!8840 = !DILocation(line: 357, column: 3, scope: !8834, inlinedAt: !8764)
!8841 = !DILocation(line: 358, column: 6, scope: !8842, inlinedAt: !8764)
!8842 = distinct !DILexicalBlock(scope: !8760, file: !7421, line: 358, column: 6)
!8843 = !DILocation(line: 358, column: 11, scope: !8842, inlinedAt: !8764)
!8844 = !DILocation(line: 358, column: 6, scope: !8760, inlinedAt: !8764)
!8845 = !DILocation(line: 358, column: 26, scope: !8842, inlinedAt: !8764)
!8846 = !DILocation(line: 359, column: 6, scope: !8847, inlinedAt: !8764)
!8847 = distinct !DILexicalBlock(scope: !8760, file: !7421, line: 359, column: 6)
!8848 = !DILocation(line: 359, column: 11, scope: !8847, inlinedAt: !8764)
!8849 = !DILocation(line: 359, column: 6, scope: !8760, inlinedAt: !8764)
!8850 = !DILocation(line: 359, column: 26, scope: !8847, inlinedAt: !8764)
!8851 = !DILocation(line: 360, column: 6, scope: !8852, inlinedAt: !8764)
!8852 = distinct !DILexicalBlock(scope: !8760, file: !7421, line: 360, column: 6)
!8853 = !DILocation(line: 360, column: 11, scope: !8852, inlinedAt: !8764)
!8854 = !DILocation(line: 360, column: 6, scope: !8760, inlinedAt: !8764)
!8855 = !DILocation(line: 360, column: 26, scope: !8852, inlinedAt: !8764)
!8856 = !DILocation(line: 361, column: 6, scope: !8857, inlinedAt: !8764)
!8857 = distinct !DILexicalBlock(scope: !8760, file: !7421, line: 361, column: 6)
!8858 = !DILocation(line: 361, column: 11, scope: !8857, inlinedAt: !8764)
!8859 = !DILocation(line: 361, column: 6, scope: !8760, inlinedAt: !8764)
!8860 = !DILocation(line: 361, column: 26, scope: !8857, inlinedAt: !8764)
!8861 = !DILocation(line: 362, column: 6, scope: !8862, inlinedAt: !8764)
!8862 = distinct !DILexicalBlock(scope: !8760, file: !7421, line: 362, column: 6)
!8863 = !DILocation(line: 362, column: 11, scope: !8862, inlinedAt: !8764)
!8864 = !DILocation(line: 362, column: 6, scope: !8760, inlinedAt: !8764)
!8865 = !DILocation(line: 362, column: 26, scope: !8862, inlinedAt: !8764)
!8866 = !DILocation(line: 363, column: 6, scope: !8867, inlinedAt: !8764)
!8867 = distinct !DILexicalBlock(scope: !8760, file: !7421, line: 363, column: 6)
!8868 = !DILocation(line: 363, column: 11, scope: !8867, inlinedAt: !8764)
!8869 = !DILocation(line: 363, column: 6, scope: !8760, inlinedAt: !8764)
!8870 = !DILocation(line: 363, column: 26, scope: !8867, inlinedAt: !8764)
!8871 = !DILocation(line: 364, column: 6, scope: !8872, inlinedAt: !8764)
!8872 = distinct !DILexicalBlock(scope: !8760, file: !7421, line: 364, column: 6)
!8873 = !DILocation(line: 364, column: 11, scope: !8872, inlinedAt: !8764)
!8874 = !DILocation(line: 364, column: 6, scope: !8760, inlinedAt: !8764)
!8875 = !DILocation(line: 364, column: 26, scope: !8872, inlinedAt: !8764)
!8876 = !DILocation(line: 365, column: 6, scope: !8877, inlinedAt: !8764)
!8877 = distinct !DILexicalBlock(scope: !8760, file: !7421, line: 365, column: 6)
!8878 = !DILocation(line: 365, column: 11, scope: !8877, inlinedAt: !8764)
!8879 = !DILocation(line: 365, column: 6, scope: !8760, inlinedAt: !8764)
!8880 = !DILocation(line: 365, column: 26, scope: !8877, inlinedAt: !8764)
!8881 = !DILocation(line: 366, column: 6, scope: !8882, inlinedAt: !8764)
!8882 = distinct !DILexicalBlock(scope: !8760, file: !7421, line: 366, column: 6)
!8883 = !DILocation(line: 366, column: 11, scope: !8882, inlinedAt: !8764)
!8884 = !DILocation(line: 366, column: 6, scope: !8760, inlinedAt: !8764)
!8885 = !DILocation(line: 366, column: 26, scope: !8882, inlinedAt: !8764)
!8886 = !DILocation(line: 367, column: 6, scope: !8887, inlinedAt: !8764)
!8887 = distinct !DILexicalBlock(scope: !8760, file: !7421, line: 367, column: 6)
!8888 = !DILocation(line: 367, column: 11, scope: !8887, inlinedAt: !8764)
!8889 = !DILocation(line: 367, column: 6, scope: !8760, inlinedAt: !8764)
!8890 = !DILocation(line: 367, column: 26, scope: !8887, inlinedAt: !8764)
!8891 = !DILocation(line: 368, column: 6, scope: !8892, inlinedAt: !8764)
!8892 = distinct !DILexicalBlock(scope: !8760, file: !7421, line: 368, column: 6)
!8893 = !DILocation(line: 368, column: 11, scope: !8892, inlinedAt: !8764)
!8894 = !DILocation(line: 368, column: 6, scope: !8760, inlinedAt: !8764)
!8895 = !DILocation(line: 368, column: 26, scope: !8892, inlinedAt: !8764)
!8896 = !DILocation(line: 369, column: 6, scope: !8897, inlinedAt: !8764)
!8897 = distinct !DILexicalBlock(scope: !8760, file: !7421, line: 369, column: 6)
!8898 = !DILocation(line: 369, column: 11, scope: !8897, inlinedAt: !8764)
!8899 = !DILocation(line: 369, column: 6, scope: !8760, inlinedAt: !8764)
!8900 = !DILocation(line: 369, column: 26, scope: !8897, inlinedAt: !8764)
!8901 = !DILocation(line: 370, column: 6, scope: !8902, inlinedAt: !8764)
!8902 = distinct !DILexicalBlock(scope: !8760, file: !7421, line: 370, column: 6)
!8903 = !DILocation(line: 370, column: 11, scope: !8902, inlinedAt: !8764)
!8904 = !DILocation(line: 370, column: 6, scope: !8760, inlinedAt: !8764)
!8905 = !DILocation(line: 370, column: 26, scope: !8902, inlinedAt: !8764)
!8906 = !DILocation(line: 371, column: 6, scope: !8907, inlinedAt: !8764)
!8907 = distinct !DILexicalBlock(scope: !8760, file: !7421, line: 371, column: 6)
!8908 = !DILocation(line: 371, column: 11, scope: !8907, inlinedAt: !8764)
!8909 = !DILocation(line: 371, column: 6, scope: !8760, inlinedAt: !8764)
!8910 = !DILocation(line: 371, column: 26, scope: !8907, inlinedAt: !8764)
!8911 = !DILocation(line: 372, column: 6, scope: !8912, inlinedAt: !8764)
!8912 = distinct !DILexicalBlock(scope: !8760, file: !7421, line: 372, column: 6)
!8913 = !DILocation(line: 372, column: 11, scope: !8912, inlinedAt: !8764)
!8914 = !DILocation(line: 372, column: 6, scope: !8760, inlinedAt: !8764)
!8915 = !DILocation(line: 372, column: 26, scope: !8912, inlinedAt: !8764)
!8916 = !DILocation(line: 373, column: 6, scope: !8917, inlinedAt: !8764)
!8917 = distinct !DILexicalBlock(scope: !8760, file: !7421, line: 373, column: 6)
!8918 = !DILocation(line: 373, column: 11, scope: !8917, inlinedAt: !8764)
!8919 = !DILocation(line: 373, column: 6, scope: !8760, inlinedAt: !8764)
!8920 = !DILocation(line: 373, column: 26, scope: !8917, inlinedAt: !8764)
!8921 = !DILocation(line: 374, column: 6, scope: !8922, inlinedAt: !8764)
!8922 = distinct !DILexicalBlock(scope: !8760, file: !7421, line: 374, column: 6)
!8923 = !DILocation(line: 374, column: 11, scope: !8922, inlinedAt: !8764)
!8924 = !DILocation(line: 374, column: 6, scope: !8760, inlinedAt: !8764)
!8925 = !DILocation(line: 374, column: 26, scope: !8922, inlinedAt: !8764)
!8926 = !DILocation(line: 375, column: 6, scope: !8927, inlinedAt: !8764)
!8927 = distinct !DILexicalBlock(scope: !8760, file: !7421, line: 375, column: 6)
!8928 = !DILocation(line: 375, column: 11, scope: !8927, inlinedAt: !8764)
!8929 = !DILocation(line: 375, column: 6, scope: !8760, inlinedAt: !8764)
!8930 = !DILocation(line: 375, column: 27, scope: !8927, inlinedAt: !8764)
!8931 = !DILocation(line: 376, column: 6, scope: !8932, inlinedAt: !8764)
!8932 = distinct !DILexicalBlock(scope: !8760, file: !7421, line: 376, column: 6)
!8933 = !DILocation(line: 376, column: 11, scope: !8932, inlinedAt: !8764)
!8934 = !DILocation(line: 376, column: 6, scope: !8760, inlinedAt: !8764)
!8935 = !DILocation(line: 376, column: 32, scope: !8932, inlinedAt: !8764)
!8936 = !DILocation(line: 377, column: 6, scope: !8937, inlinedAt: !8764)
!8937 = distinct !DILexicalBlock(scope: !8760, file: !7421, line: 377, column: 6)
!8938 = !DILocation(line: 377, column: 11, scope: !8937, inlinedAt: !8764)
!8939 = !DILocation(line: 377, column: 6, scope: !8760, inlinedAt: !8764)
!8940 = !DILocation(line: 377, column: 32, scope: !8937, inlinedAt: !8764)
!8941 = !DILocation(line: 378, column: 6, scope: !8942, inlinedAt: !8764)
!8942 = distinct !DILexicalBlock(scope: !8760, file: !7421, line: 378, column: 6)
!8943 = !DILocation(line: 378, column: 11, scope: !8942, inlinedAt: !8764)
!8944 = !DILocation(line: 378, column: 6, scope: !8760, inlinedAt: !8764)
!8945 = !DILocation(line: 378, column: 32, scope: !8942, inlinedAt: !8764)
!8946 = !DILocation(line: 379, column: 6, scope: !8947, inlinedAt: !8764)
!8947 = distinct !DILexicalBlock(scope: !8760, file: !7421, line: 379, column: 6)
!8948 = !DILocation(line: 379, column: 11, scope: !8947, inlinedAt: !8764)
!8949 = !DILocation(line: 379, column: 6, scope: !8760, inlinedAt: !8764)
!8950 = !DILocation(line: 379, column: 33, scope: !8947, inlinedAt: !8764)
!8951 = !DILocation(line: 380, column: 6, scope: !8952, inlinedAt: !8764)
!8952 = distinct !DILexicalBlock(scope: !8760, file: !7421, line: 380, column: 6)
!8953 = !DILocation(line: 380, column: 11, scope: !8952, inlinedAt: !8764)
!8954 = !DILocation(line: 380, column: 6, scope: !8760, inlinedAt: !8764)
!8955 = !DILocation(line: 380, column: 33, scope: !8952, inlinedAt: !8764)
!8956 = !DILocation(line: 381, column: 6, scope: !8957, inlinedAt: !8764)
!8957 = distinct !DILexicalBlock(scope: !8760, file: !7421, line: 381, column: 6)
!8958 = !DILocation(line: 381, column: 11, scope: !8957, inlinedAt: !8764)
!8959 = !DILocation(line: 381, column: 6, scope: !8760, inlinedAt: !8764)
!8960 = !DILocation(line: 381, column: 33, scope: !8957, inlinedAt: !8764)
!8961 = !DILocation(line: 382, column: 2, scope: !8962, inlinedAt: !8764)
!8962 = distinct !DILexicalBlock(scope: !8963, file: !7421, line: 382, column: 2)
!8963 = distinct !DILexicalBlock(scope: !8760, file: !7421, line: 382, column: 2)
!8964 = !{i32 -2143227605, i32 -2143227576, i32 -2143227530, i32 -2143227472, i32 -2143227418, i32 -2143227364, i32 -2143227309, i32 -2143227278}
!8965 = !DILocation(line: 382, column: 2, scope: !8966, inlinedAt: !8764)
!8966 = distinct !DILexicalBlock(scope: !8967, file: !7421, line: 382, column: 2)
!8967 = distinct !DILexicalBlock(scope: !8963, file: !7421, line: 382, column: 2)
!8968 = !{i32 -2143226835, i32 -2143226828, i32 -2143226774, i32 -2143226743, i32 -2143226713}
!8969 = !DILocation(line: 382, column: 2, scope: !8967, inlinedAt: !8764)
!8970 = !DILocation(line: 386, column: 1, scope: !8760, inlinedAt: !8764)
!8971 = !DILocation(line: 547, column: 9, scope: !8743, inlinedAt: !8746)
!8972 = !DILocation(line: 549, column: 8, scope: !8973, inlinedAt: !8746)
!8973 = distinct !DILexicalBlock(scope: !8743, file: !7421, line: 549, column: 7)
!8974 = !DILocation(line: 549, column: 7, scope: !8743, inlinedAt: !8746)
!8975 = !DILocation(line: 550, column: 4, scope: !8973, inlinedAt: !8746)
!8976 = !DILocation(line: 553, column: 33, scope: !8743, inlinedAt: !8746)
!8977 = !DILocation(line: 325, column: 6, scope: !8978, inlinedAt: !8758)
!8978 = distinct !DILexicalBlock(scope: !8754, file: !7421, line: 325, column: 6)
!8979 = !DILocation(line: 325, column: 6, scope: !8754, inlinedAt: !8758)
!8980 = !DILocation(line: 326, column: 3, scope: !8978, inlinedAt: !8758)
!8981 = !DILocation(line: 332, column: 9, scope: !8754, inlinedAt: !8758)
!8982 = !DILocation(line: 332, column: 15, scope: !8754, inlinedAt: !8758)
!8983 = !DILocation(line: 332, column: 2, scope: !8754, inlinedAt: !8758)
!8984 = !DILocation(line: 336, column: 1, scope: !8754, inlinedAt: !8758)
!8985 = !DILocation(line: 553, column: 5, scope: !8743, inlinedAt: !8746)
!8986 = !DILocation(line: 553, column: 41, scope: !8743, inlinedAt: !8746)
!8987 = !DILocation(line: 554, column: 5, scope: !8743, inlinedAt: !8746)
!8988 = !DILocation(line: 554, column: 12, scope: !8743, inlinedAt: !8746)
!8989 = !DILocation(line: 448, column: 31, scope: !8738, inlinedAt: !8742)
!8990 = !DILocation(line: 448, column: 34, scope: !8738, inlinedAt: !8742)
!8991 = !DILocation(line: 448, column: 14, scope: !8738, inlinedAt: !8742)
!8992 = !DILocation(line: 450, column: 22, scope: !8738, inlinedAt: !8742)
!8993 = !DILocation(line: 450, column: 25, scope: !8738, inlinedAt: !8742)
!8994 = !DILocation(line: 450, column: 30, scope: !8738, inlinedAt: !8742)
!8995 = !DILocation(line: 450, column: 36, scope: !8738, inlinedAt: !8742)
!8996 = !DILocation(line: 450, column: 8, scope: !8738, inlinedAt: !8742)
!8997 = !DILocation(line: 450, column: 6, scope: !8738, inlinedAt: !8742)
!8998 = !DILocation(line: 451, column: 9, scope: !8738, inlinedAt: !8742)
!8999 = !DILocation(line: 552, column: 3, scope: !8743, inlinedAt: !8746)
!9000 = !DILocation(line: 557, column: 19, scope: !8745, inlinedAt: !8746)
!9001 = !DILocation(line: 557, column: 25, scope: !8745, inlinedAt: !8746)
!9002 = !DILocation(line: 557, column: 9, scope: !8745, inlinedAt: !8746)
!9003 = !DILocation(line: 557, column: 2, scope: !8745, inlinedAt: !8746)
!9004 = !DILocation(line: 558, column: 1, scope: !8745, inlinedAt: !8746)
!9005 = !DILocation(line: 664, column: 2, scope: !8734)
!9006 = distinct !DISubprogram(name: "pci_set_dma_mask", scope: !9007, file: !9007, line: 113, type: !9008, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!9007 = !DIFile(filename: "./include/linux/pci-dma-compat.h", directory: "/home/lizy2001/genbc/linux")
!9008 = !DISubroutineType(types: !9009)
!9009 = !{!32, !7726, !386}
!9010 = !DILocalVariable(name: "dev", arg: 1, scope: !9006, file: !9007, line: 113, type: !7726)
!9011 = !DILocation(line: 113, column: 52, scope: !9006)
!9012 = !DILocalVariable(name: "mask", arg: 2, scope: !9006, file: !9007, line: 113, type: !386)
!9013 = !DILocation(line: 113, column: 61, scope: !9006)
!9014 = !DILocation(line: 115, column: 23, scope: !9006)
!9015 = !DILocation(line: 115, column: 28, scope: !9006)
!9016 = !DILocation(line: 115, column: 33, scope: !9006)
!9017 = !DILocation(line: 115, column: 9, scope: !9006)
!9018 = !DILocation(line: 115, column: 2, scope: !9006)
!9019 = distinct !DISubprogram(name: "pci_set_consistent_dma_mask", scope: !9007, file: !9007, line: 118, type: !9008, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!9020 = !DILocalVariable(name: "dev", arg: 1, scope: !9019, file: !9007, line: 118, type: !7726)
!9021 = !DILocation(line: 118, column: 63, scope: !9019)
!9022 = !DILocalVariable(name: "mask", arg: 2, scope: !9019, file: !9007, line: 118, type: !386)
!9023 = !DILocation(line: 118, column: 72, scope: !9019)
!9024 = !DILocation(line: 120, column: 32, scope: !9019)
!9025 = !DILocation(line: 120, column: 37, scope: !9019)
!9026 = !DILocation(line: 120, column: 42, scope: !9019)
!9027 = !DILocation(line: 120, column: 9, scope: !9019)
!9028 = !DILocation(line: 120, column: 2, scope: !9019)
!9029 = distinct !DISubprogram(name: "pci_set_drvdata", scope: !7728, file: !7728, line: 1870, type: !9030, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!9030 = !DISubroutineType(types: !9031)
!9031 = !{null, !7726, !646}
!9032 = !DILocalVariable(name: "pdev", arg: 1, scope: !9029, file: !7728, line: 1870, type: !7726)
!9033 = !DILocation(line: 1870, column: 52, scope: !9029)
!9034 = !DILocalVariable(name: "data", arg: 2, scope: !9029, file: !7728, line: 1870, type: !646)
!9035 = !DILocation(line: 1870, column: 64, scope: !9029)
!9036 = !DILocation(line: 1872, column: 19, scope: !9029)
!9037 = !DILocation(line: 1872, column: 25, scope: !9029)
!9038 = !DILocation(line: 1872, column: 30, scope: !9029)
!9039 = !DILocation(line: 1872, column: 2, scope: !9029)
!9040 = !DILocation(line: 1873, column: 1, scope: !9029)
!9041 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !8132, file: !3, line: 1767, type: !7722)
!9042 = !DILocation(line: 1767, column: 49, scope: !8132)
!9043 = !DILocalVariable(name: "err", scope: !8132, file: !3, line: 1769, type: !32)
!9044 = !DILocation(line: 1769, column: 6, scope: !8132)
!9045 = !DILocation(line: 1771, column: 2, scope: !8132)
!9046 = !DILocation(line: 1771, column: 2, scope: !9047)
!9047 = distinct !DILexicalBlock(scope: !8132, file: !3, line: 1771, column: 2)
!9048 = !DILocation(line: 1772, column: 2, scope: !8132)
!9049 = !DILocation(line: 1772, column: 2, scope: !9050)
!9050 = distinct !DILexicalBlock(scope: !8132, file: !3, line: 1772, column: 2)
!9051 = !DILocation(line: 1774, column: 29, scope: !8132)
!9052 = !DILocation(line: 1774, column: 41, scope: !8132)
!9053 = !DILocation(line: 1774, column: 52, scope: !8132)
!9054 = !DILocation(line: 1774, column: 56, scope: !8132)
!9055 = !DILocation(line: 1774, column: 8, scope: !8132)
!9056 = !DILocation(line: 1774, column: 6, scope: !8132)
!9057 = !DILocation(line: 1775, column: 6, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !8132, file: !3, line: 1775, column: 6)
!9059 = !DILocation(line: 1775, column: 6, scope: !8132)
!9060 = !DILocation(line: 1776, column: 3, scope: !9058)
!9061 = !DILocation(line: 1778, column: 29, scope: !8132)
!9062 = !DILocation(line: 1778, column: 41, scope: !8132)
!9063 = !DILocation(line: 1778, column: 52, scope: !8132)
!9064 = !DILocation(line: 1778, column: 56, scope: !8132)
!9065 = !DILocation(line: 1778, column: 8, scope: !8132)
!9066 = !DILocation(line: 1778, column: 6, scope: !8132)
!9067 = !DILocation(line: 1779, column: 6, scope: !9068)
!9068 = distinct !DILexicalBlock(scope: !8132, file: !3, line: 1779, column: 6)
!9069 = !DILocation(line: 1779, column: 6, scope: !8132)
!9070 = !DILocation(line: 1780, column: 3, scope: !9068)
!9071 = !DILocation(line: 1782, column: 2, scope: !8132)
!9072 = !DILabel(scope: !8132, name: "err_out_mbox_alloc", file: !3, line: 1784)
!9073 = !DILocation(line: 1784, column: 1, scope: !8132)
!9074 = !DILocation(line: 1785, column: 22, scope: !8132)
!9075 = !DILocation(line: 1785, column: 34, scope: !8132)
!9076 = !DILocation(line: 1785, column: 45, scope: !8132)
!9077 = !DILocation(line: 1785, column: 49, scope: !8132)
!9078 = !DILocation(line: 1785, column: 2, scope: !8132)
!9079 = !DILabel(scope: !8132, name: "err_in_mbox_alloc", file: !3, line: 1786)
!9080 = !DILocation(line: 1786, column: 1, scope: !8132)
!9081 = !DILocation(line: 1787, column: 17, scope: !8132)
!9082 = !DILocation(line: 1787, column: 28, scope: !8132)
!9083 = !DILocation(line: 1787, column: 32, scope: !8132)
!9084 = !DILocation(line: 1787, column: 2, scope: !8132)
!9085 = !DILocation(line: 1788, column: 9, scope: !8132)
!9086 = !DILocation(line: 1788, column: 2, scope: !8132)
!9087 = !DILocation(line: 1789, column: 1, scope: !8132)
!9088 = distinct !DISubprogram(name: "pci_name", scope: !7728, file: !7728, line: 1875, type: !9089, scopeLine: 1876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!9089 = !DISubroutineType(types: !9090)
!9090 = !{!347, !9091}
!9091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9092, size: 64)
!9092 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7727)
!9093 = !DILocalVariable(name: "pdev", arg: 1, scope: !9088, file: !7728, line: 1875, type: !9091)
!9094 = !DILocation(line: 1875, column: 58, scope: !9088)
!9095 = !DILocation(line: 1877, column: 19, scope: !9088)
!9096 = !DILocation(line: 1877, column: 25, scope: !9088)
!9097 = !DILocation(line: 1877, column: 9, scope: !9088)
!9098 = !DILocation(line: 1877, column: 2, scope: !9088)
!9099 = distinct !DISubprogram(name: "mlxsw_pci_cmd_fini", scope: !3, file: !3, line: 1791, type: !9100, scopeLine: 1792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!9100 = !DISubroutineType(types: !9101)
!9101 = !{null, !7722}
!9102 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !9099, file: !3, line: 1791, type: !7722)
!9103 = !DILocation(line: 1791, column: 50, scope: !9099)
!9104 = !DILocation(line: 1793, column: 22, scope: !9099)
!9105 = !DILocation(line: 1793, column: 34, scope: !9099)
!9106 = !DILocation(line: 1793, column: 45, scope: !9099)
!9107 = !DILocation(line: 1793, column: 49, scope: !9099)
!9108 = !DILocation(line: 1793, column: 2, scope: !9099)
!9109 = !DILocation(line: 1794, column: 22, scope: !9099)
!9110 = !DILocation(line: 1794, column: 34, scope: !9099)
!9111 = !DILocation(line: 1794, column: 45, scope: !9099)
!9112 = !DILocation(line: 1794, column: 49, scope: !9099)
!9113 = !DILocation(line: 1794, column: 2, scope: !9099)
!9114 = !DILocation(line: 1795, column: 17, scope: !9099)
!9115 = !DILocation(line: 1795, column: 28, scope: !9099)
!9116 = !DILocation(line: 1795, column: 32, scope: !9099)
!9117 = !DILocation(line: 1795, column: 2, scope: !9099)
!9118 = !DILocation(line: 1796, column: 1, scope: !9099)
!9119 = distinct !DISubprogram(name: "get_order", scope: !9120, file: !9120, line: 29, type: !9121, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!9120 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!9121 = !DISubroutineType(types: !9122)
!9122 = !{!32, !367}
!9123 = !DILocalVariable(name: "x", arg: 1, scope: !9124, file: !9125, line: 366, type: !388)
!9124 = distinct !DISubprogram(name: "fls64", scope: !9125, file: !9125, line: 366, type: !9126, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!9125 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!9126 = !DISubroutineType(types: !9127)
!9127 = !{!32, !388}
!9128 = !DILocation(line: 366, column: 40, scope: !9124, inlinedAt: !9129)
!9129 = distinct !DILocation(line: 46, column: 9, scope: !9119)
!9130 = !DILocalVariable(name: "bitpos", scope: !9124, file: !9125, line: 368, type: !32)
!9131 = !DILocation(line: 368, column: 6, scope: !9124, inlinedAt: !9129)
!9132 = !DILocalVariable(name: "size", arg: 1, scope: !9119, file: !9120, line: 29, type: !367)
!9133 = !DILocation(line: 29, column: 63, scope: !9119)
!9134 = !DILocation(line: 31, column: 27, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9119, file: !9120, line: 31, column: 6)
!9136 = !DILocation(line: 31, column: 6, scope: !9135)
!9137 = !DILocation(line: 31, column: 6, scope: !9119)
!9138 = !DILocation(line: 32, column: 8, scope: !9139)
!9139 = distinct !DILexicalBlock(scope: !9140, file: !9120, line: 32, column: 7)
!9140 = distinct !DILexicalBlock(scope: !9135, file: !9120, line: 31, column: 34)
!9141 = !DILocation(line: 32, column: 7, scope: !9140)
!9142 = !DILocation(line: 33, column: 4, scope: !9139)
!9143 = !DILocation(line: 35, column: 7, scope: !9144)
!9144 = distinct !DILexicalBlock(scope: !9140, file: !9120, line: 35, column: 7)
!9145 = !DILocation(line: 35, column: 12, scope: !9144)
!9146 = !DILocation(line: 35, column: 7, scope: !9140)
!9147 = !DILocation(line: 36, column: 4, scope: !9144)
!9148 = !DILocation(line: 38, column: 10, scope: !9140)
!9149 = !DILocation(line: 38, column: 28, scope: !9140)
!9150 = !DILocation(line: 38, column: 41, scope: !9140)
!9151 = !DILocation(line: 38, column: 3, scope: !9140)
!9152 = !DILocation(line: 41, column: 6, scope: !9119)
!9153 = !DILocation(line: 42, column: 7, scope: !9119)
!9154 = !DILocation(line: 46, column: 15, scope: !9119)
!9155 = !DILocation(line: 374, column: 2, scope: !9124, inlinedAt: !9129)
!9156 = !DILocation(line: 376, column: 14, scope: !9124, inlinedAt: !9129)
!9157 = !{i32 292052}
!9158 = !DILocation(line: 377, column: 9, scope: !9124, inlinedAt: !9129)
!9159 = !DILocation(line: 377, column: 16, scope: !9124, inlinedAt: !9129)
!9160 = !DILocation(line: 46, column: 2, scope: !9119)
!9161 = !DILocation(line: 48, column: 1, scope: !9119)
!9162 = distinct !DISubprogram(name: "__ilog2_u64", scope: !9163, file: !9163, line: 30, type: !9164, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!9163 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!9164 = !DISubroutineType(types: !9165)
!9165 = !{!32, !386}
!9166 = !DILocation(line: 366, column: 40, scope: !9124, inlinedAt: !9167)
!9167 = distinct !DILocation(line: 32, column: 9, scope: !9162)
!9168 = !DILocation(line: 368, column: 6, scope: !9124, inlinedAt: !9167)
!9169 = !DILocalVariable(name: "n", arg: 1, scope: !9162, file: !9163, line: 30, type: !386)
!9170 = !DILocation(line: 30, column: 21, scope: !9162)
!9171 = !DILocation(line: 32, column: 15, scope: !9162)
!9172 = !DILocation(line: 374, column: 2, scope: !9124, inlinedAt: !9167)
!9173 = !DILocation(line: 376, column: 14, scope: !9124, inlinedAt: !9167)
!9174 = !DILocation(line: 377, column: 9, scope: !9124, inlinedAt: !9167)
!9175 = !DILocation(line: 377, column: 16, scope: !9124, inlinedAt: !9167)
!9176 = !DILocation(line: 32, column: 18, scope: !9162)
!9177 = !DILocation(line: 32, column: 2, scope: !9162)
!9178 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !9179, file: !9179, line: 137, type: !9180, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!9179 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!9180 = !DISubroutineType(types: !9181)
!9181 = !{!646, !2106, !3313, !1094, !1797}
!9182 = !DILocalVariable(name: "s", arg: 1, scope: !9178, file: !9179, line: 137, type: !2106)
!9183 = !DILocation(line: 137, column: 54, scope: !9178)
!9184 = !DILocalVariable(name: "object", arg: 2, scope: !9178, file: !9179, line: 137, type: !3313)
!9185 = !DILocation(line: 137, column: 69, scope: !9178)
!9186 = !DILocalVariable(name: "size", arg: 3, scope: !9178, file: !9179, line: 138, type: !1094)
!9187 = !DILocation(line: 138, column: 12, scope: !9178)
!9188 = !DILocalVariable(name: "flags", arg: 4, scope: !9178, file: !9179, line: 138, type: !1797)
!9189 = !DILocation(line: 138, column: 24, scope: !9178)
!9190 = !DILocation(line: 140, column: 17, scope: !9178)
!9191 = !DILocation(line: 140, column: 2, scope: !9178)
!9192 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !5811, file: !5811, line: 660, type: !9193, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!9193 = !DISubroutineType(types: !9194)
!9194 = !{null, !5809, !646}
!9195 = !DILocalVariable(name: "dev", arg: 1, scope: !9192, file: !5811, line: 660, type: !5809)
!9196 = !DILocation(line: 660, column: 51, scope: !9192)
!9197 = !DILocalVariable(name: "data", arg: 2, scope: !9192, file: !5811, line: 660, type: !646)
!9198 = !DILocation(line: 660, column: 62, scope: !9192)
!9199 = !DILocation(line: 662, column: 21, scope: !9192)
!9200 = !DILocation(line: 662, column: 2, scope: !9192)
!9201 = !DILocation(line: 662, column: 7, scope: !9192)
!9202 = !DILocation(line: 662, column: 19, scope: !9192)
!9203 = !DILocation(line: 663, column: 1, scope: !9192)
!9204 = distinct !DISubprogram(name: "mlxsw_pci_mbox_alloc", scope: !3, file: !3, line: 1312, type: !9205, scopeLine: 1314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!9205 = !DISubroutineType(types: !9206)
!9206 = !{!32, !7722, !8014}
!9207 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !9204, file: !3, line: 1312, type: !7722)
!9208 = !DILocation(line: 1312, column: 51, scope: !9204)
!9209 = !DILocalVariable(name: "mbox", arg: 2, scope: !9204, file: !3, line: 1313, type: !8014)
!9210 = !DILocation(line: 1313, column: 32, scope: !9204)
!9211 = !DILocalVariable(name: "pdev", scope: !9204, file: !3, line: 1315, type: !7726)
!9212 = !DILocation(line: 1315, column: 18, scope: !9204)
!9213 = !DILocation(line: 1315, column: 25, scope: !9204)
!9214 = !DILocation(line: 1315, column: 36, scope: !9204)
!9215 = !DILocalVariable(name: "err", scope: !9204, file: !3, line: 1316, type: !32)
!9216 = !DILocation(line: 1316, column: 6, scope: !9204)
!9217 = !DILocation(line: 1318, column: 2, scope: !9204)
!9218 = !DILocation(line: 1318, column: 8, scope: !9204)
!9219 = !DILocation(line: 1318, column: 13, scope: !9204)
!9220 = !DILocation(line: 1319, column: 35, scope: !9204)
!9221 = !DILocation(line: 1320, column: 8, scope: !9204)
!9222 = !DILocation(line: 1320, column: 14, scope: !9204)
!9223 = !DILocation(line: 1319, column: 14, scope: !9204)
!9224 = !DILocation(line: 1319, column: 2, scope: !9204)
!9225 = !DILocation(line: 1319, column: 8, scope: !9204)
!9226 = !DILocation(line: 1319, column: 12, scope: !9204)
!9227 = !DILocation(line: 1321, column: 7, scope: !9228)
!9228 = distinct !DILexicalBlock(scope: !9204, file: !3, line: 1321, column: 6)
!9229 = !DILocation(line: 1321, column: 13, scope: !9228)
!9230 = !DILocation(line: 1321, column: 6, scope: !9204)
!9231 = !DILocation(line: 1322, column: 3, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !9228, file: !3, line: 1321, column: 18)
!9233 = !DILocation(line: 1323, column: 7, scope: !9232)
!9234 = !DILocation(line: 1324, column: 2, scope: !9232)
!9235 = !DILocation(line: 1326, column: 9, scope: !9204)
!9236 = !DILocation(line: 1326, column: 2, scope: !9204)
!9237 = distinct !DISubprogram(name: "mlxsw_pci_mbox_free", scope: !3, file: !3, line: 1329, type: !9238, scopeLine: 1331, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!9238 = !DISubroutineType(types: !9239)
!9239 = !{null, !7722, !8014}
!9240 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !9237, file: !3, line: 1329, type: !7722)
!9241 = !DILocation(line: 1329, column: 51, scope: !9237)
!9242 = !DILocalVariable(name: "mbox", arg: 2, scope: !9237, file: !3, line: 1330, type: !8014)
!9243 = !DILocation(line: 1330, column: 32, scope: !9237)
!9244 = !DILocalVariable(name: "pdev", scope: !9237, file: !3, line: 1332, type: !7726)
!9245 = !DILocation(line: 1332, column: 18, scope: !9237)
!9246 = !DILocation(line: 1332, column: 25, scope: !9237)
!9247 = !DILocation(line: 1332, column: 36, scope: !9237)
!9248 = !DILocation(line: 1334, column: 22, scope: !9237)
!9249 = !DILocation(line: 1334, column: 49, scope: !9237)
!9250 = !DILocation(line: 1334, column: 55, scope: !9237)
!9251 = !DILocation(line: 1335, column: 8, scope: !9237)
!9252 = !DILocation(line: 1335, column: 14, scope: !9237)
!9253 = !DILocation(line: 1334, column: 2, scope: !9237)
!9254 = !DILocation(line: 1336, column: 1, scope: !9237)
!9255 = distinct !DISubprogram(name: "mutex_destroy", scope: !1721, file: !1721, line: 103, type: !9256, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!9256 = !DISubroutineType(types: !9257)
!9257 = !{null, !9258}
!9258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 64)
!9259 = !DILocalVariable(name: "lock", arg: 1, scope: !9255, file: !1721, line: 103, type: !9258)
!9260 = !DILocation(line: 103, column: 48, scope: !9255)
!9261 = !DILocation(line: 103, column: 55, scope: !9255)
!9262 = distinct !DISubprogram(name: "pci_alloc_consistent", scope: !9007, file: !9007, line: 17, type: !9263, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!9263 = !DISubroutineType(types: !9264)
!9264 = !{!646, !7726, !1094, !9265}
!9265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 64)
!9266 = !DILocalVariable(name: "hwdev", arg: 1, scope: !9262, file: !9007, line: 17, type: !7726)
!9267 = !DILocation(line: 17, column: 38, scope: !9262)
!9268 = !DILocalVariable(name: "size", arg: 2, scope: !9262, file: !9007, line: 17, type: !1094)
!9269 = !DILocation(line: 17, column: 52, scope: !9262)
!9270 = !DILocalVariable(name: "dma_handle", arg: 3, scope: !9262, file: !9007, line: 18, type: !9265)
!9271 = !DILocation(line: 18, column: 20, scope: !9262)
!9272 = !DILocation(line: 20, column: 29, scope: !9262)
!9273 = !DILocation(line: 20, column: 36, scope: !9262)
!9274 = !DILocation(line: 20, column: 41, scope: !9262)
!9275 = !DILocation(line: 20, column: 47, scope: !9262)
!9276 = !DILocation(line: 20, column: 9, scope: !9262)
!9277 = !DILocation(line: 20, column: 2, scope: !9262)
!9278 = distinct !DISubprogram(name: "dma_alloc_coherent", scope: !8487, file: !8487, line: 392, type: !9279, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!9279 = !DISubroutineType(types: !9280)
!9280 = !{!646, !5809, !1094, !9265, !1797}
!9281 = !DILocalVariable(name: "dev", arg: 1, scope: !9278, file: !8487, line: 392, type: !5809)
!9282 = !DILocation(line: 392, column: 55, scope: !9278)
!9283 = !DILocalVariable(name: "size", arg: 2, scope: !9278, file: !8487, line: 392, type: !1094)
!9284 = !DILocation(line: 392, column: 67, scope: !9278)
!9285 = !DILocalVariable(name: "dma_handle", arg: 3, scope: !9278, file: !8487, line: 393, type: !9265)
!9286 = !DILocation(line: 393, column: 15, scope: !9278)
!9287 = !DILocalVariable(name: "gfp", arg: 4, scope: !9278, file: !8487, line: 393, type: !1797)
!9288 = !DILocation(line: 393, column: 33, scope: !9278)
!9289 = !DILocation(line: 396, column: 25, scope: !9278)
!9290 = !DILocation(line: 396, column: 30, scope: !9278)
!9291 = !DILocation(line: 396, column: 36, scope: !9278)
!9292 = !DILocation(line: 396, column: 48, scope: !9278)
!9293 = !DILocation(line: 397, column: 5, scope: !9278)
!9294 = !DILocation(line: 397, column: 9, scope: !9278)
!9295 = !DILocation(line: 397, column: 4, scope: !9278)
!9296 = !DILocation(line: 396, column: 9, scope: !9278)
!9297 = !DILocation(line: 396, column: 2, scope: !9278)
!9298 = distinct !DISubprogram(name: "pci_free_consistent", scope: !9007, file: !9007, line: 31, type: !9299, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!9299 = !DISubroutineType(types: !9300)
!9300 = !{null, !7726, !1094, !646, !2091}
!9301 = !DILocalVariable(name: "hwdev", arg: 1, scope: !9298, file: !9007, line: 31, type: !7726)
!9302 = !DILocation(line: 31, column: 37, scope: !9298)
!9303 = !DILocalVariable(name: "size", arg: 2, scope: !9298, file: !9007, line: 31, type: !1094)
!9304 = !DILocation(line: 31, column: 51, scope: !9298)
!9305 = !DILocalVariable(name: "vaddr", arg: 3, scope: !9298, file: !9007, line: 32, type: !646)
!9306 = !DILocation(line: 32, column: 13, scope: !9298)
!9307 = !DILocalVariable(name: "dma_handle", arg: 4, scope: !9298, file: !9007, line: 32, type: !2091)
!9308 = !DILocation(line: 32, column: 31, scope: !9298)
!9309 = !DILocation(line: 34, column: 21, scope: !9298)
!9310 = !DILocation(line: 34, column: 28, scope: !9298)
!9311 = !DILocation(line: 34, column: 33, scope: !9298)
!9312 = !DILocation(line: 34, column: 39, scope: !9298)
!9313 = !DILocation(line: 34, column: 46, scope: !9298)
!9314 = !DILocation(line: 34, column: 2, scope: !9298)
!9315 = !DILocation(line: 35, column: 1, scope: !9298)
!9316 = distinct !DISubprogram(name: "dma_free_coherent", scope: !8487, file: !8487, line: 400, type: !9317, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!9317 = !DISubroutineType(types: !9318)
!9318 = !{null, !5809, !1094, !646, !2091}
!9319 = !DILocalVariable(name: "dev", arg: 1, scope: !9316, file: !8487, line: 400, type: !5809)
!9320 = !DILocation(line: 400, column: 53, scope: !9316)
!9321 = !DILocalVariable(name: "size", arg: 2, scope: !9316, file: !8487, line: 400, type: !1094)
!9322 = !DILocation(line: 400, column: 65, scope: !9316)
!9323 = !DILocalVariable(name: "cpu_addr", arg: 3, scope: !9316, file: !8487, line: 401, type: !646)
!9324 = !DILocation(line: 401, column: 9, scope: !9316)
!9325 = !DILocalVariable(name: "dma_handle", arg: 4, scope: !9316, file: !8487, line: 401, type: !2091)
!9326 = !DILocation(line: 401, column: 30, scope: !9316)
!9327 = !DILocation(line: 403, column: 24, scope: !9316)
!9328 = !DILocation(line: 403, column: 29, scope: !9316)
!9329 = !DILocation(line: 403, column: 35, scope: !9316)
!9330 = !DILocation(line: 403, column: 45, scope: !9316)
!9331 = !DILocation(line: 403, column: 9, scope: !9316)
!9332 = !DILocation(line: 403, column: 2, scope: !9316)
!9333 = distinct !DISubprogram(name: "dev_name", scope: !5811, file: !5811, line: 609, type: !9334, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!9334 = !DISubroutineType(types: !9335)
!9335 = !{!347, !6439}
!9336 = !DILocalVariable(name: "dev", arg: 1, scope: !9333, file: !5811, line: 609, type: !6439)
!9337 = !DILocation(line: 609, column: 57, scope: !9333)
!9338 = !DILocation(line: 612, column: 6, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !9333, file: !5811, line: 612, column: 6)
!9340 = !DILocation(line: 612, column: 11, scope: !9339)
!9341 = !DILocation(line: 612, column: 6, scope: !9333)
!9342 = !DILocation(line: 613, column: 10, scope: !9339)
!9343 = !DILocation(line: 613, column: 15, scope: !9339)
!9344 = !DILocation(line: 613, column: 3, scope: !9339)
!9345 = !DILocation(line: 615, column: 23, scope: !9333)
!9346 = !DILocation(line: 615, column: 28, scope: !9333)
!9347 = !DILocation(line: 615, column: 9, scope: !9333)
!9348 = !DILocation(line: 615, column: 2, scope: !9333)
!9349 = !DILocation(line: 616, column: 1, scope: !9333)
!9350 = distinct !DISubprogram(name: "kobject_name", scope: !5815, file: !5815, line: 88, type: !9351, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!9351 = !DISubroutineType(types: !9352)
!9352 = !{!347, !9353}
!9353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9354, size: 64)
!9354 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5814)
!9355 = !DILocalVariable(name: "kobj", arg: 1, scope: !9350, file: !5815, line: 88, type: !9353)
!9356 = !DILocation(line: 88, column: 62, scope: !9350)
!9357 = !DILocation(line: 90, column: 9, scope: !9350)
!9358 = !DILocation(line: 90, column: 15, scope: !9350)
!9359 = !DILocation(line: 90, column: 2, scope: !9350)
!9360 = distinct !DISubprogram(name: "mlxsw_pci_init", scope: !3, file: !3, line: 1411, type: !8145, scopeLine: 1414, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!9361 = !DILocalVariable(name: "bus_priv", arg: 1, scope: !9360, file: !3, line: 1411, type: !646)
!9362 = !DILocation(line: 1411, column: 33, scope: !9360)
!9363 = !DILocalVariable(name: "mlxsw_core", arg: 2, scope: !9360, file: !3, line: 1411, type: !8008)
!9364 = !DILocation(line: 1411, column: 62, scope: !9360)
!9365 = !DILocalVariable(name: "profile", arg: 3, scope: !9360, file: !3, line: 1412, type: !8147)
!9366 = !DILocation(line: 1412, column: 41, scope: !9360)
!9367 = !DILocalVariable(name: "res", arg: 4, scope: !9360, file: !3, line: 1413, type: !8193)
!9368 = !DILocation(line: 1413, column: 24, scope: !9360)
!9369 = !DILocalVariable(name: "mlxsw_pci", scope: !9360, file: !3, line: 1415, type: !7722)
!9370 = !DILocation(line: 1415, column: 20, scope: !9360)
!9371 = !DILocation(line: 1415, column: 32, scope: !9360)
!9372 = !DILocalVariable(name: "pdev", scope: !9360, file: !3, line: 1416, type: !7726)
!9373 = !DILocation(line: 1416, column: 18, scope: !9360)
!9374 = !DILocation(line: 1416, column: 25, scope: !9360)
!9375 = !DILocation(line: 1416, column: 36, scope: !9360)
!9376 = !DILocalVariable(name: "mbox", scope: !9360, file: !3, line: 1417, type: !1093)
!9377 = !DILocation(line: 1417, column: 8, scope: !9360)
!9378 = !DILocalVariable(name: "num_pages", scope: !9360, file: !3, line: 1418, type: !636)
!9379 = !DILocation(line: 1418, column: 6, scope: !9360)
!9380 = !DILocalVariable(name: "err", scope: !9360, file: !3, line: 1419, type: !32)
!9381 = !DILocation(line: 1419, column: 6, scope: !9360)
!9382 = !DILocation(line: 1421, column: 20, scope: !9360)
!9383 = !DILocation(line: 1421, column: 2, scope: !9360)
!9384 = !DILocation(line: 1421, column: 13, scope: !9360)
!9385 = !DILocation(line: 1421, column: 18, scope: !9360)
!9386 = !DILocation(line: 1423, column: 9, scope: !9360)
!9387 = !DILocation(line: 1423, column: 7, scope: !9360)
!9388 = !DILocation(line: 1424, column: 7, scope: !9389)
!9389 = distinct !DILexicalBlock(scope: !9360, file: !3, line: 1424, column: 6)
!9390 = !DILocation(line: 1424, column: 6, scope: !9360)
!9391 = !DILocation(line: 1425, column: 3, scope: !9389)
!9392 = !DILocation(line: 1427, column: 27, scope: !9360)
!9393 = !DILocation(line: 1427, column: 38, scope: !9360)
!9394 = !DILocation(line: 1427, column: 49, scope: !9360)
!9395 = !DILocation(line: 1427, column: 8, scope: !9360)
!9396 = !DILocation(line: 1427, column: 6, scope: !9360)
!9397 = !DILocation(line: 1428, column: 6, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !9360, file: !3, line: 1428, column: 6)
!9399 = !DILocation(line: 1428, column: 6, scope: !9360)
!9400 = !DILocation(line: 1429, column: 3, scope: !9398)
!9401 = !DILocation(line: 1431, column: 36, scope: !9360)
!9402 = !DILocation(line: 1431, column: 8, scope: !9360)
!9403 = !DILocation(line: 1431, column: 6, scope: !9360)
!9404 = !DILocation(line: 1432, column: 6, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9360, file: !3, line: 1432, column: 6)
!9406 = !DILocation(line: 1432, column: 10, scope: !9405)
!9407 = !DILocation(line: 1432, column: 6, scope: !9360)
!9408 = !DILocation(line: 1433, column: 3, scope: !9409)
!9409 = distinct !DILexicalBlock(scope: !9405, file: !3, line: 1432, column: 15)
!9410 = !DILocation(line: 1434, column: 3, scope: !9409)
!9411 = !DILocation(line: 1437, column: 27, scope: !9360)
!9412 = !DILocation(line: 1437, column: 39, scope: !9360)
!9413 = !DILocation(line: 1437, column: 8, scope: !9360)
!9414 = !DILocation(line: 1437, column: 6, scope: !9360)
!9415 = !DILocation(line: 1438, column: 6, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9360, file: !3, line: 1438, column: 6)
!9417 = !DILocation(line: 1438, column: 6, scope: !9360)
!9418 = !DILocation(line: 1439, column: 3, scope: !9416)
!9419 = !DILocation(line: 1442, column: 44, scope: !9360)
!9420 = !DILocation(line: 1442, column: 3, scope: !9360)
!9421 = !DILocation(line: 1441, column: 2, scope: !9360)
!9422 = !DILocation(line: 1441, column: 13, scope: !9360)
!9423 = !DILocation(line: 1441, column: 22, scope: !9360)
!9424 = !DILocation(line: 1441, column: 29, scope: !9360)
!9425 = !DILocation(line: 1441, column: 35, scope: !9360)
!9426 = !DILocation(line: 1444, column: 44, scope: !9360)
!9427 = !DILocation(line: 1444, column: 3, scope: !9360)
!9428 = !DILocation(line: 1443, column: 2, scope: !9360)
!9429 = !DILocation(line: 1443, column: 13, scope: !9360)
!9430 = !DILocation(line: 1443, column: 22, scope: !9360)
!9431 = !DILocation(line: 1443, column: 29, scope: !9360)
!9432 = !DILocation(line: 1443, column: 35, scope: !9360)
!9433 = !DILocation(line: 1446, column: 47, scope: !9360)
!9434 = !DILocation(line: 1446, column: 3, scope: !9360)
!9435 = !DILocation(line: 1445, column: 2, scope: !9360)
!9436 = !DILocation(line: 1445, column: 13, scope: !9360)
!9437 = !DILocation(line: 1445, column: 22, scope: !9360)
!9438 = !DILocation(line: 1445, column: 29, scope: !9360)
!9439 = !DILocation(line: 1445, column: 38, scope: !9360)
!9440 = !DILocation(line: 1448, column: 52, scope: !9441)
!9441 = distinct !DILexicalBlock(scope: !9360, file: !3, line: 1448, column: 6)
!9442 = !DILocation(line: 1448, column: 6, scope: !9441)
!9443 = !DILocation(line: 1448, column: 58, scope: !9441)
!9444 = !DILocation(line: 1448, column: 6, scope: !9360)
!9445 = !DILocation(line: 1449, column: 3, scope: !9446)
!9446 = distinct !DILexicalBlock(scope: !9441, file: !3, line: 1448, column: 64)
!9447 = !DILocation(line: 1450, column: 7, scope: !9446)
!9448 = !DILocation(line: 1451, column: 3, scope: !9446)
!9449 = !DILocation(line: 1453, column: 52, scope: !9450)
!9450 = distinct !DILexicalBlock(scope: !9360, file: !3, line: 1453, column: 6)
!9451 = !DILocation(line: 1453, column: 6, scope: !9450)
!9452 = !DILocation(line: 1453, column: 58, scope: !9450)
!9453 = !DILocation(line: 1453, column: 6, scope: !9360)
!9454 = !DILocation(line: 1454, column: 3, scope: !9455)
!9455 = distinct !DILexicalBlock(scope: !9450, file: !3, line: 1453, column: 64)
!9456 = !DILocation(line: 1455, column: 7, scope: !9455)
!9457 = !DILocation(line: 1456, column: 3, scope: !9455)
!9458 = !DILocation(line: 1460, column: 52, scope: !9360)
!9459 = !DILocation(line: 1460, column: 3, scope: !9360)
!9460 = !DILocation(line: 1459, column: 2, scope: !9360)
!9461 = !DILocation(line: 1459, column: 13, scope: !9360)
!9462 = !DILocation(line: 1459, column: 29, scope: !9360)
!9463 = !DILocation(line: 1462, column: 48, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9360, file: !3, line: 1462, column: 6)
!9465 = !DILocation(line: 1462, column: 6, scope: !9464)
!9466 = !DILocation(line: 1462, column: 54, scope: !9464)
!9467 = !DILocation(line: 1462, column: 6, scope: !9360)
!9468 = !DILocation(line: 1463, column: 3, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9464, file: !3, line: 1462, column: 60)
!9470 = !DILocation(line: 1464, column: 7, scope: !9469)
!9471 = !DILocation(line: 1465, column: 3, scope: !9469)
!9472 = !DILocation(line: 1469, column: 57, scope: !9360)
!9473 = !DILocation(line: 1469, column: 3, scope: !9360)
!9474 = !DILocation(line: 1468, column: 2, scope: !9360)
!9475 = !DILocation(line: 1468, column: 13, scope: !9360)
!9476 = !DILocation(line: 1468, column: 39, scope: !9360)
!9477 = !DILocation(line: 1471, column: 51, scope: !9360)
!9478 = !DILocation(line: 1471, column: 14, scope: !9360)
!9479 = !DILocation(line: 1471, column: 12, scope: !9360)
!9480 = !DILocation(line: 1472, column: 31, scope: !9360)
!9481 = !DILocation(line: 1472, column: 42, scope: !9360)
!9482 = !DILocation(line: 1472, column: 48, scope: !9360)
!9483 = !DILocation(line: 1472, column: 8, scope: !9360)
!9484 = !DILocation(line: 1472, column: 6, scope: !9360)
!9485 = !DILocation(line: 1473, column: 6, scope: !9486)
!9486 = distinct !DILexicalBlock(scope: !9360, file: !3, line: 1473, column: 6)
!9487 = !DILocation(line: 1473, column: 6, scope: !9360)
!9488 = !DILocation(line: 1474, column: 3, scope: !9486)
!9489 = !DILocation(line: 1476, column: 28, scope: !9360)
!9490 = !DILocation(line: 1476, column: 39, scope: !9360)
!9491 = !DILocation(line: 1476, column: 8, scope: !9360)
!9492 = !DILocation(line: 1476, column: 6, scope: !9360)
!9493 = !DILocation(line: 1477, column: 6, scope: !9494)
!9494 = distinct !DILexicalBlock(scope: !9360, file: !3, line: 1477, column: 6)
!9495 = !DILocation(line: 1477, column: 6, scope: !9360)
!9496 = !DILocation(line: 1478, column: 3, scope: !9494)
!9497 = !DILocation(line: 1480, column: 35, scope: !9360)
!9498 = !DILocation(line: 1480, column: 47, scope: !9360)
!9499 = !DILocation(line: 1480, column: 53, scope: !9360)
!9500 = !DILocation(line: 1480, column: 8, scope: !9360)
!9501 = !DILocation(line: 1480, column: 6, scope: !9360)
!9502 = !DILocation(line: 1481, column: 6, scope: !9503)
!9503 = distinct !DILexicalBlock(scope: !9360, file: !3, line: 1481, column: 6)
!9504 = !DILocation(line: 1481, column: 6, scope: !9360)
!9505 = !DILocation(line: 1482, column: 3, scope: !9503)
!9506 = !DILocation(line: 1484, column: 6, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9360, file: !3, line: 1484, column: 6)
!9508 = !DILocation(line: 1484, column: 47, scope: !9507)
!9509 = !DILocation(line: 1485, column: 6, scope: !9507)
!9510 = !DILocation(line: 1484, column: 6, scope: !9360)
!9511 = !DILocation(line: 1486, column: 3, scope: !9507)
!9512 = !DILocation(line: 1486, column: 14, scope: !9507)
!9513 = !DILocation(line: 1486, column: 26, scope: !9507)
!9514 = !DILocation(line: 1487, column: 11, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !9507, file: !3, line: 1487, column: 11)
!9516 = !DILocation(line: 1487, column: 52, scope: !9515)
!9517 = !DILocation(line: 1488, column: 4, scope: !9515)
!9518 = !DILocation(line: 1487, column: 11, scope: !9507)
!9519 = !DILocation(line: 1489, column: 3, scope: !9515)
!9520 = !DILocation(line: 1489, column: 14, scope: !9515)
!9521 = !DILocation(line: 1489, column: 26, scope: !9515)
!9522 = !DILocation(line: 1490, column: 12, scope: !9523)
!9523 = distinct !DILexicalBlock(scope: !9515, file: !3, line: 1490, column: 11)
!9524 = !DILocation(line: 1490, column: 53, scope: !9523)
!9525 = !DILocation(line: 1491, column: 5, scope: !9523)
!9526 = !DILocation(line: 1491, column: 45, scope: !9523)
!9527 = !DILocation(line: 1492, column: 5, scope: !9523)
!9528 = !DILocation(line: 1490, column: 11, scope: !9515)
!9529 = !DILocation(line: 1493, column: 3, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !9523, file: !3, line: 1492, column: 47)
!9531 = !DILocation(line: 1493, column: 14, scope: !9530)
!9532 = !DILocation(line: 1493, column: 26, scope: !9530)
!9533 = !DILocation(line: 1494, column: 2, scope: !9530)
!9534 = !DILocation(line: 1495, column: 3, scope: !9535)
!9535 = distinct !DILexicalBlock(scope: !9523, file: !3, line: 1494, column: 9)
!9536 = !DILocation(line: 1496, column: 3, scope: !9535)
!9537 = !DILocation(line: 1499, column: 33, scope: !9360)
!9538 = !DILocation(line: 1499, column: 44, scope: !9360)
!9539 = !DILocation(line: 1499, column: 50, scope: !9360)
!9540 = !DILocation(line: 1499, column: 59, scope: !9360)
!9541 = !DILocation(line: 1499, column: 8, scope: !9360)
!9542 = !DILocation(line: 1499, column: 6, scope: !9360)
!9543 = !DILocation(line: 1500, column: 6, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9360, file: !3, line: 1500, column: 6)
!9545 = !DILocation(line: 1500, column: 6, scope: !9360)
!9546 = !DILocation(line: 1501, column: 3, scope: !9544)
!9547 = !DILocation(line: 1503, column: 27, scope: !9360)
!9548 = !DILocation(line: 1503, column: 38, scope: !9360)
!9549 = !DILocation(line: 1503, column: 8, scope: !9360)
!9550 = !DILocation(line: 1503, column: 6, scope: !9360)
!9551 = !DILocation(line: 1504, column: 6, scope: !9552)
!9552 = distinct !DILexicalBlock(scope: !9360, file: !3, line: 1504, column: 6)
!9553 = !DILocation(line: 1504, column: 6, scope: !9360)
!9554 = !DILocation(line: 1505, column: 3, scope: !9552)
!9555 = !DILocation(line: 1507, column: 35, scope: !9360)
!9556 = !DILocation(line: 1507, column: 20, scope: !9360)
!9557 = !DILocation(line: 1509, column: 6, scope: !9360)
!9558 = !DILocation(line: 1509, column: 17, scope: !9360)
!9559 = !DILocation(line: 1509, column: 26, scope: !9360)
!9560 = !DILocation(line: 1509, column: 39, scope: !9360)
!9561 = !DILocation(line: 1507, column: 8, scope: !9360)
!9562 = !DILocation(line: 1507, column: 6, scope: !9360)
!9563 = !DILocation(line: 1510, column: 6, scope: !9564)
!9564 = distinct !DILexicalBlock(scope: !9360, file: !3, line: 1510, column: 6)
!9565 = !DILocation(line: 1510, column: 6, scope: !9360)
!9566 = !DILocation(line: 1511, column: 3, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !9564, file: !3, line: 1510, column: 11)
!9568 = !DILocation(line: 1512, column: 3, scope: !9567)
!9569 = !DILocation(line: 1515, column: 2, scope: !9360)
!9570 = !DILabel(scope: !9360, name: "err_request_eq_irq", file: !3, line: 1517)
!9571 = !DILocation(line: 1517, column: 1, scope: !9360)
!9572 = !DILocation(line: 1518, column: 21, scope: !9360)
!9573 = !DILocation(line: 1518, column: 2, scope: !9360)
!9574 = !DILabel(scope: !9360, name: "err_aqs_init", file: !3, line: 1519)
!9575 = !DILocation(line: 1519, column: 1, scope: !9360)
!9576 = !DILabel(scope: !9360, name: "err_config_profile", file: !3, line: 1520)
!9577 = !DILocation(line: 1520, column: 1, scope: !9360)
!9578 = !DILabel(scope: !9360, name: "err_cqe_v_check", file: !3, line: 1521)
!9579 = !DILocation(line: 1521, column: 1, scope: !9360)
!9580 = !DILabel(scope: !9360, name: "err_query_resources", file: !3, line: 1522)
!9581 = !DILocation(line: 1522, column: 1, scope: !9360)
!9582 = !DILabel(scope: !9360, name: "err_boardinfo", file: !3, line: 1523)
!9583 = !DILocation(line: 1523, column: 1, scope: !9360)
!9584 = !DILocation(line: 1524, column: 25, scope: !9360)
!9585 = !DILocation(line: 1524, column: 2, scope: !9360)
!9586 = !DILabel(scope: !9360, name: "err_fw_area_init", file: !3, line: 1525)
!9587 = !DILocation(line: 1525, column: 1, scope: !9360)
!9588 = !DILabel(scope: !9360, name: "err_fr_rn_clk_bar", file: !3, line: 1526)
!9589 = !DILocation(line: 1526, column: 1, scope: !9360)
!9590 = !DILabel(scope: !9360, name: "err_doorbell_page_bar", file: !3, line: 1527)
!9591 = !DILocation(line: 1527, column: 1, scope: !9360)
!9592 = !DILabel(scope: !9360, name: "err_iface_rev", file: !3, line: 1528)
!9593 = !DILocation(line: 1528, column: 1, scope: !9360)
!9594 = !DILabel(scope: !9360, name: "err_query_fw", file: !3, line: 1529)
!9595 = !DILocation(line: 1529, column: 1, scope: !9360)
!9596 = !DILocation(line: 1530, column: 29, scope: !9360)
!9597 = !DILocation(line: 1530, column: 2, scope: !9360)
!9598 = !DILabel(scope: !9360, name: "err_alloc_irq", file: !3, line: 1531)
!9599 = !DILocation(line: 1531, column: 1, scope: !9360)
!9600 = !DILabel(scope: !9360, name: "err_sw_reset", file: !3, line: 1532)
!9601 = !DILocation(line: 1532, column: 1, scope: !9360)
!9602 = !DILabel(scope: !9360, name: "mbox_put", file: !3, line: 1533)
!9603 = !DILocation(line: 1533, column: 1, scope: !9360)
!9604 = !DILocation(line: 1534, column: 22, scope: !9360)
!9605 = !DILocation(line: 1534, column: 2, scope: !9360)
!9606 = !DILocation(line: 1535, column: 9, scope: !9360)
!9607 = !DILocation(line: 1535, column: 2, scope: !9360)
!9608 = !DILocation(line: 1536, column: 1, scope: !9360)
!9609 = distinct !DISubprogram(name: "mlxsw_pci_fini", scope: !3, file: !3, line: 1538, type: !1471, scopeLine: 1539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!9610 = !DILocalVariable(name: "bus_priv", arg: 1, scope: !9609, file: !3, line: 1538, type: !646)
!9611 = !DILocation(line: 1538, column: 34, scope: !9609)
!9612 = !DILocalVariable(name: "mlxsw_pci", scope: !9609, file: !3, line: 1540, type: !7722)
!9613 = !DILocation(line: 1540, column: 20, scope: !9609)
!9614 = !DILocation(line: 1540, column: 32, scope: !9609)
!9615 = !DILocation(line: 1542, column: 26, scope: !9609)
!9616 = !DILocation(line: 1542, column: 37, scope: !9609)
!9617 = !DILocation(line: 1542, column: 11, scope: !9609)
!9618 = !DILocation(line: 1542, column: 47, scope: !9609)
!9619 = !DILocation(line: 1542, column: 2, scope: !9609)
!9620 = !DILocation(line: 1543, column: 21, scope: !9609)
!9621 = !DILocation(line: 1543, column: 2, scope: !9609)
!9622 = !DILocation(line: 1544, column: 25, scope: !9609)
!9623 = !DILocation(line: 1544, column: 2, scope: !9609)
!9624 = !DILocation(line: 1545, column: 29, scope: !9609)
!9625 = !DILocation(line: 1545, column: 2, scope: !9609)
!9626 = !DILocation(line: 1546, column: 1, scope: !9609)
!9627 = distinct !DISubprogram(name: "mlxsw_pci_skb_transmit_busy", scope: !3, file: !3, line: 1565, type: !8205, scopeLine: 1567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!9628 = !DILocalVariable(name: "bus_priv", arg: 1, scope: !9627, file: !3, line: 1565, type: !646)
!9629 = !DILocation(line: 1565, column: 47, scope: !9627)
!9630 = !DILocalVariable(name: "tx_info", arg: 2, scope: !9627, file: !3, line: 1566, type: !8207)
!9631 = !DILocation(line: 1566, column: 34, scope: !9627)
!9632 = !DILocalVariable(name: "mlxsw_pci", scope: !9627, file: !3, line: 1568, type: !7722)
!9633 = !DILocation(line: 1568, column: 20, scope: !9627)
!9634 = !DILocation(line: 1568, column: 32, scope: !9627)
!9635 = !DILocalVariable(name: "q", scope: !9627, file: !3, line: 1569, type: !7669)
!9636 = !DILocation(line: 1569, column: 26, scope: !9627)
!9637 = !DILocation(line: 1569, column: 49, scope: !9627)
!9638 = !DILocation(line: 1569, column: 60, scope: !9627)
!9639 = !DILocation(line: 1569, column: 30, scope: !9627)
!9640 = !DILocation(line: 1571, column: 49, scope: !9627)
!9641 = !DILocation(line: 1571, column: 10, scope: !9627)
!9642 = !DILocation(line: 1571, column: 9, scope: !9627)
!9643 = !DILocation(line: 1571, column: 2, scope: !9627)
!9644 = distinct !DISubprogram(name: "mlxsw_pci_skb_transmit", scope: !3, file: !3, line: 1574, type: !8211, scopeLine: 1576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!9645 = !DILocalVariable(name: "bus_priv", arg: 1, scope: !9644, file: !3, line: 1574, type: !646)
!9646 = !DILocation(line: 1574, column: 41, scope: !9644)
!9647 = !DILocalVariable(name: "skb", arg: 2, scope: !9644, file: !3, line: 1574, type: !470)
!9648 = !DILocation(line: 1574, column: 67, scope: !9644)
!9649 = !DILocalVariable(name: "tx_info", arg: 3, scope: !9644, file: !3, line: 1575, type: !8207)
!9650 = !DILocation(line: 1575, column: 35, scope: !9644)
!9651 = !DILocalVariable(name: "mlxsw_pci", scope: !9644, file: !3, line: 1577, type: !7722)
!9652 = !DILocation(line: 1577, column: 20, scope: !9644)
!9653 = !DILocation(line: 1577, column: 32, scope: !9644)
!9654 = !DILocalVariable(name: "q", scope: !9644, file: !3, line: 1578, type: !7669)
!9655 = !DILocation(line: 1578, column: 26, scope: !9644)
!9656 = !DILocalVariable(name: "elem_info", scope: !9644, file: !3, line: 1579, type: !7680)
!9657 = !DILocation(line: 1579, column: 36, scope: !9644)
!9658 = !DILocalVariable(name: "wqe", scope: !9644, file: !3, line: 1580, type: !1093)
!9659 = !DILocation(line: 1580, column: 8, scope: !9644)
!9660 = !DILocalVariable(name: "i", scope: !9644, file: !3, line: 1581, type: !32)
!9661 = !DILocation(line: 1581, column: 6, scope: !9644)
!9662 = !DILocalVariable(name: "err", scope: !9644, file: !3, line: 1582, type: !32)
!9663 = !DILocation(line: 1582, column: 6, scope: !9644)
!9664 = !DILocation(line: 1584, column: 6, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !9644, file: !3, line: 1584, column: 6)
!9666 = !DILocation(line: 1584, column: 23, scope: !9665)
!9667 = !DILocation(line: 1584, column: 32, scope: !9665)
!9668 = !DILocation(line: 1584, column: 6, scope: !9644)
!9669 = !DILocation(line: 1585, column: 23, scope: !9670)
!9670 = distinct !DILexicalBlock(scope: !9665, file: !3, line: 1584, column: 64)
!9671 = !DILocation(line: 1585, column: 9, scope: !9670)
!9672 = !DILocation(line: 1585, column: 7, scope: !9670)
!9673 = !DILocation(line: 1586, column: 7, scope: !9674)
!9674 = distinct !DILexicalBlock(scope: !9670, file: !3, line: 1586, column: 7)
!9675 = !DILocation(line: 1586, column: 7, scope: !9670)
!9676 = !DILocation(line: 1587, column: 11, scope: !9674)
!9677 = !DILocation(line: 1587, column: 4, scope: !9674)
!9678 = !DILocation(line: 1588, column: 2, scope: !9670)
!9679 = !DILocation(line: 1590, column: 25, scope: !9644)
!9680 = !DILocation(line: 1590, column: 36, scope: !9644)
!9681 = !DILocation(line: 1590, column: 6, scope: !9644)
!9682 = !DILocation(line: 1590, column: 4, scope: !9644)
!9683 = !DILocation(line: 1591, column: 16, scope: !9644)
!9684 = !DILocation(line: 1591, column: 19, scope: !9644)
!9685 = !DILocation(line: 1591, column: 2, scope: !9644)
!9686 = !DILocation(line: 1592, column: 53, scope: !9644)
!9687 = !DILocation(line: 1592, column: 14, scope: !9644)
!9688 = !DILocation(line: 1592, column: 12, scope: !9644)
!9689 = !DILocation(line: 1593, column: 7, scope: !9690)
!9690 = distinct !DILexicalBlock(scope: !9644, file: !3, line: 1593, column: 6)
!9691 = !DILocation(line: 1593, column: 6, scope: !9644)
!9692 = !DILocation(line: 1595, column: 7, scope: !9693)
!9693 = distinct !DILexicalBlock(scope: !9690, file: !3, line: 1593, column: 18)
!9694 = !DILocation(line: 1596, column: 3, scope: !9693)
!9695 = !DILocation(line: 1598, column: 15, scope: !9644)
!9696 = !DILocation(line: 1598, column: 2, scope: !9644)
!9697 = !DILocation(line: 1598, column: 21, scope: !9644)
!9698 = !DILocation(line: 1598, column: 32, scope: !9644)
!9699 = !DILocation(line: 1598, column: 31, scope: !9644)
!9700 = !DILocation(line: 1599, column: 25, scope: !9644)
!9701 = !DILocation(line: 1599, column: 2, scope: !9644)
!9702 = !DILocation(line: 1599, column: 13, scope: !9644)
!9703 = !DILocation(line: 1599, column: 15, scope: !9644)
!9704 = !DILocation(line: 1599, column: 19, scope: !9644)
!9705 = !DILocation(line: 1599, column: 23, scope: !9644)
!9706 = !DILocation(line: 1601, column: 8, scope: !9644)
!9707 = !DILocation(line: 1601, column: 19, scope: !9644)
!9708 = !DILocation(line: 1601, column: 6, scope: !9644)
!9709 = !DILocation(line: 1602, column: 22, scope: !9644)
!9710 = !DILocation(line: 1602, column: 2, scope: !9644)
!9711 = !DILocation(line: 1603, column: 23, scope: !9644)
!9712 = !DILocation(line: 1603, column: 30, scope: !9644)
!9713 = !DILocation(line: 1603, column: 39, scope: !9644)
!9714 = !DILocation(line: 1603, column: 29, scope: !9644)
!9715 = !DILocation(line: 1603, column: 28, scope: !9644)
!9716 = !DILocation(line: 1603, column: 2, scope: !9644)
!9717 = !DILocation(line: 1604, column: 25, scope: !9644)
!9718 = !DILocation(line: 1604, column: 2, scope: !9644)
!9719 = !DILocation(line: 1606, column: 31, scope: !9644)
!9720 = !DILocation(line: 1606, column: 42, scope: !9644)
!9721 = !DILocation(line: 1606, column: 50, scope: !9644)
!9722 = !DILocation(line: 1606, column: 55, scope: !9644)
!9723 = !DILocation(line: 1607, column: 22, scope: !9644)
!9724 = !DILocation(line: 1607, column: 10, scope: !9644)
!9725 = !DILocation(line: 1606, column: 8, scope: !9644)
!9726 = !DILocation(line: 1606, column: 6, scope: !9644)
!9727 = !DILocation(line: 1608, column: 6, scope: !9728)
!9728 = distinct !DILexicalBlock(scope: !9644, file: !3, line: 1608, column: 6)
!9729 = !DILocation(line: 1608, column: 6, scope: !9644)
!9730 = !DILocation(line: 1609, column: 3, scope: !9728)
!9731 = !DILocation(line: 1611, column: 9, scope: !9732)
!9732 = distinct !DILexicalBlock(scope: !9644, file: !3, line: 1611, column: 2)
!9733 = !DILocation(line: 1611, column: 7, scope: !9732)
!9734 = !DILocation(line: 1611, column: 14, scope: !9735)
!9735 = distinct !DILexicalBlock(scope: !9732, file: !3, line: 1611, column: 2)
!9736 = !DILocation(line: 1611, column: 18, scope: !9735)
!9737 = !DILocation(line: 1611, column: 35, scope: !9735)
!9738 = !DILocation(line: 1611, column: 16, scope: !9735)
!9739 = !DILocation(line: 1611, column: 2, scope: !9732)
!9740 = !DILocalVariable(name: "frag", scope: !9741, file: !3, line: 1612, type: !9742)
!9741 = distinct !DILexicalBlock(scope: !9735, file: !3, line: 1611, column: 50)
!9742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9743, size: 64)
!9743 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8092)
!9744 = !DILocation(line: 1612, column: 21, scope: !9741)
!9745 = !DILocation(line: 1612, column: 29, scope: !9741)
!9746 = !DILocation(line: 1612, column: 46, scope: !9741)
!9747 = !DILocation(line: 1612, column: 52, scope: !9741)
!9748 = !DILocation(line: 1614, column: 32, scope: !9741)
!9749 = !DILocation(line: 1614, column: 43, scope: !9741)
!9750 = !DILocation(line: 1614, column: 48, scope: !9741)
!9751 = !DILocation(line: 1614, column: 50, scope: !9741)
!9752 = !DILocation(line: 1615, column: 28, scope: !9741)
!9753 = !DILocation(line: 1615, column: 11, scope: !9741)
!9754 = !DILocation(line: 1616, column: 25, scope: !9741)
!9755 = !DILocation(line: 1616, column: 11, scope: !9741)
!9756 = !DILocation(line: 1614, column: 9, scope: !9741)
!9757 = !DILocation(line: 1614, column: 7, scope: !9741)
!9758 = !DILocation(line: 1618, column: 7, scope: !9759)
!9759 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 1618, column: 7)
!9760 = !DILocation(line: 1618, column: 7, scope: !9741)
!9761 = !DILocation(line: 1619, column: 4, scope: !9759)
!9762 = !DILocation(line: 1620, column: 2, scope: !9741)
!9763 = !DILocation(line: 1611, column: 46, scope: !9735)
!9764 = !DILocation(line: 1611, column: 2, scope: !9735)
!9765 = distinct !{!9765, !9739, !9766}
!9766 = !DILocation(line: 1620, column: 2, scope: !9732)
!9767 = !DILocation(line: 1622, column: 6, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9644, file: !3, line: 1622, column: 6)
!9769 = !DILocation(line: 1622, column: 6, scope: !9644)
!9770 = !DILocation(line: 1623, column: 3, scope: !9768)
!9771 = !DILocation(line: 1623, column: 20, scope: !9768)
!9772 = !DILocation(line: 1623, column: 29, scope: !9768)
!9773 = !DILocation(line: 1626, column: 8, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !9644, file: !3, line: 1626, column: 2)
!9775 = !DILocation(line: 1626, column: 7, scope: !9774)
!9776 = !DILocation(line: 1626, column: 12, scope: !9777)
!9777 = distinct !DILexicalBlock(scope: !9774, file: !3, line: 1626, column: 2)
!9778 = !DILocation(line: 1626, column: 14, scope: !9777)
!9779 = !DILocation(line: 1626, column: 2, scope: !9774)
!9780 = !DILocation(line: 1627, column: 32, scope: !9777)
!9781 = !DILocation(line: 1627, column: 37, scope: !9777)
!9782 = !DILocation(line: 1627, column: 3, scope: !9777)
!9783 = !DILocation(line: 1626, column: 43, scope: !9777)
!9784 = !DILocation(line: 1626, column: 2, scope: !9777)
!9785 = distinct !{!9785, !9779, !9786}
!9786 = !DILocation(line: 1627, column: 41, scope: !9774)
!9787 = !DILocation(line: 1630, column: 2, scope: !9644)
!9788 = !DILocation(line: 1630, column: 5, scope: !9644)
!9789 = !DILocation(line: 1630, column: 21, scope: !9644)
!9790 = !DILocation(line: 1631, column: 41, scope: !9644)
!9791 = !DILocation(line: 1631, column: 52, scope: !9644)
!9792 = !DILocation(line: 1631, column: 2, scope: !9644)
!9793 = !DILocation(line: 1633, column: 2, scope: !9644)
!9794 = !DILabel(scope: !9644, name: "unmap_frags", file: !3, line: 1635)
!9795 = !DILocation(line: 1635, column: 1, scope: !9644)
!9796 = !DILocation(line: 1636, column: 2, scope: !9644)
!9797 = !DILocation(line: 1636, column: 9, scope: !9798)
!9798 = distinct !DILexicalBlock(scope: !9799, file: !3, line: 1636, column: 2)
!9799 = distinct !DILexicalBlock(scope: !9644, file: !3, line: 1636, column: 2)
!9800 = !DILocation(line: 1636, column: 11, scope: !9798)
!9801 = !DILocation(line: 1636, column: 2, scope: !9799)
!9802 = !DILocation(line: 1637, column: 28, scope: !9798)
!9803 = !DILocation(line: 1637, column: 39, scope: !9798)
!9804 = !DILocation(line: 1637, column: 44, scope: !9798)
!9805 = !DILocation(line: 1637, column: 3, scope: !9798)
!9806 = !DILocation(line: 1636, column: 18, scope: !9798)
!9807 = !DILocation(line: 1636, column: 2, scope: !9798)
!9808 = distinct !{!9808, !9801, !9809}
!9809 = !DILocation(line: 1637, column: 60, scope: !9799)
!9810 = !DILabel(scope: !9644, name: "unlock", file: !3, line: 1638)
!9811 = !DILocation(line: 1638, column: 1, scope: !9644)
!9812 = !DILocation(line: 1639, column: 18, scope: !9644)
!9813 = !DILocation(line: 1639, column: 21, scope: !9644)
!9814 = !DILocation(line: 1639, column: 2, scope: !9644)
!9815 = !DILocation(line: 1640, column: 9, scope: !9644)
!9816 = !DILocation(line: 1640, column: 2, scope: !9644)
!9817 = !DILocation(line: 1641, column: 1, scope: !9644)
!9818 = distinct !DISubprogram(name: "mlxsw_pci_cmd_exec", scope: !3, file: !3, line: 1643, type: !8215, scopeLine: 1648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!9819 = !DILocalVariable(name: "m", arg: 1, scope: !9820, file: !9821, line: 363, type: !4806)
!9820 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !9821, file: !9821, line: 363, type: !9822, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!9821 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!9822 = !DISubroutineType(types: !9823)
!9823 = !{!367, !4806}
!9824 = !DILocation(line: 363, column: 74, scope: !9820, inlinedAt: !9825)
!9825 = distinct !DILocation(line: 1652, column: 26, scope: !9818)
!9826 = !DILocalVariable(name: "bus_priv", arg: 1, scope: !9818, file: !3, line: 1643, type: !646)
!9827 = !DILocation(line: 1643, column: 37, scope: !9818)
!9828 = !DILocalVariable(name: "opcode", arg: 2, scope: !9818, file: !3, line: 1643, type: !636)
!9829 = !DILocation(line: 1643, column: 51, scope: !9818)
!9830 = !DILocalVariable(name: "opcode_mod", arg: 3, scope: !9818, file: !3, line: 1643, type: !849)
!9831 = !DILocation(line: 1643, column: 62, scope: !9818)
!9832 = !DILocalVariable(name: "in_mod", arg: 4, scope: !9818, file: !3, line: 1644, type: !1042)
!9833 = !DILocation(line: 1644, column: 14, scope: !9818)
!9834 = !DILocalVariable(name: "out_mbox_direct", arg: 5, scope: !9818, file: !3, line: 1644, type: !826)
!9835 = !DILocation(line: 1644, column: 27, scope: !9818)
!9836 = !DILocalVariable(name: "in_mbox", arg: 6, scope: !9818, file: !3, line: 1645, type: !1093)
!9837 = !DILocation(line: 1645, column: 16, scope: !9818)
!9838 = !DILocalVariable(name: "in_mbox_size", arg: 7, scope: !9818, file: !3, line: 1645, type: !1094)
!9839 = !DILocation(line: 1645, column: 32, scope: !9818)
!9840 = !DILocalVariable(name: "out_mbox", arg: 8, scope: !9818, file: !3, line: 1646, type: !1093)
!9841 = !DILocation(line: 1646, column: 16, scope: !9818)
!9842 = !DILocalVariable(name: "out_mbox_size", arg: 9, scope: !9818, file: !3, line: 1646, type: !1094)
!9843 = !DILocation(line: 1646, column: 33, scope: !9818)
!9844 = !DILocalVariable(name: "p_status", arg: 10, scope: !9818, file: !3, line: 1647, type: !848)
!9845 = !DILocation(line: 1647, column: 14, scope: !9818)
!9846 = !DILocalVariable(name: "mlxsw_pci", scope: !9818, file: !3, line: 1649, type: !7722)
!9847 = !DILocation(line: 1649, column: 20, scope: !9818)
!9848 = !DILocation(line: 1649, column: 32, scope: !9818)
!9849 = !DILocalVariable(name: "in_mapaddr", scope: !9818, file: !3, line: 1650, type: !2091)
!9850 = !DILocation(line: 1650, column: 13, scope: !9818)
!9851 = !DILocalVariable(name: "out_mapaddr", scope: !9818, file: !3, line: 1650, type: !2091)
!9852 = !DILocation(line: 1650, column: 29, scope: !9818)
!9853 = !DILocalVariable(name: "evreq", scope: !9818, file: !3, line: 1651, type: !826)
!9854 = !DILocation(line: 1651, column: 7, scope: !9818)
!9855 = !DILocation(line: 1651, column: 15, scope: !9818)
!9856 = !DILocation(line: 1651, column: 26, scope: !9818)
!9857 = !DILocation(line: 1651, column: 30, scope: !9818)
!9858 = !DILocalVariable(name: "timeout", scope: !9818, file: !3, line: 1652, type: !367)
!9859 = !DILocation(line: 1652, column: 16, scope: !9818)
!9860 = !DILocation(line: 365, column: 27, scope: !9861, inlinedAt: !9825)
!9861 = distinct !DILexicalBlock(scope: !9820, file: !9821, line: 365, column: 6)
!9862 = !DILocation(line: 365, column: 6, scope: !9861, inlinedAt: !9825)
!9863 = !DILocation(line: 365, column: 6, scope: !9820, inlinedAt: !9825)
!9864 = !DILocation(line: 366, column: 12, scope: !9865, inlinedAt: !9825)
!9865 = distinct !DILexicalBlock(scope: !9866, file: !9821, line: 366, column: 7)
!9866 = distinct !DILexicalBlock(scope: !9861, file: !9821, line: 365, column: 31)
!9867 = !DILocation(line: 366, column: 14, scope: !9865, inlinedAt: !9825)
!9868 = !DILocation(line: 366, column: 7, scope: !9866, inlinedAt: !9825)
!9869 = !DILocation(line: 367, column: 4, scope: !9865, inlinedAt: !9825)
!9870 = !DILocation(line: 368, column: 28, scope: !9866, inlinedAt: !9825)
!9871 = !DILocation(line: 368, column: 10, scope: !9866, inlinedAt: !9825)
!9872 = !DILocation(line: 368, column: 3, scope: !9866, inlinedAt: !9825)
!9873 = !DILocation(line: 370, column: 29, scope: !9874, inlinedAt: !9825)
!9874 = distinct !DILexicalBlock(scope: !9861, file: !9821, line: 369, column: 9)
!9875 = !DILocation(line: 370, column: 10, scope: !9874, inlinedAt: !9825)
!9876 = !DILocation(line: 370, column: 3, scope: !9874, inlinedAt: !9825)
!9877 = !DILocation(line: 372, column: 1, scope: !9820, inlinedAt: !9825)
!9878 = !DILocalVariable(name: "p_wait_done", scope: !9818, file: !3, line: 1653, type: !2062)
!9879 = !DILocation(line: 1653, column: 8, scope: !9818)
!9880 = !DILocation(line: 1653, column: 23, scope: !9818)
!9881 = !DILocation(line: 1653, column: 34, scope: !9818)
!9882 = !DILocation(line: 1653, column: 38, scope: !9818)
!9883 = !DILocalVariable(name: "err", scope: !9818, file: !3, line: 1654, type: !32)
!9884 = !DILocation(line: 1654, column: 6, scope: !9818)
!9885 = !DILocation(line: 1656, column: 3, scope: !9818)
!9886 = !DILocation(line: 1656, column: 12, scope: !9818)
!9887 = !DILocation(line: 1658, column: 34, scope: !9818)
!9888 = !DILocation(line: 1658, column: 45, scope: !9818)
!9889 = !DILocation(line: 1658, column: 49, scope: !9818)
!9890 = !DILocation(line: 1658, column: 8, scope: !9818)
!9891 = !DILocation(line: 1658, column: 6, scope: !9818)
!9892 = !DILocation(line: 1659, column: 6, scope: !9893)
!9893 = distinct !DILexicalBlock(scope: !9818, file: !3, line: 1659, column: 6)
!9894 = !DILocation(line: 1659, column: 6, scope: !9818)
!9895 = !DILocation(line: 1660, column: 10, scope: !9893)
!9896 = !DILocation(line: 1660, column: 3, scope: !9893)
!9897 = !DILocation(line: 1662, column: 6, scope: !9898)
!9898 = distinct !DILexicalBlock(scope: !9818, file: !3, line: 1662, column: 6)
!9899 = !DILocation(line: 1662, column: 6, scope: !9818)
!9900 = !DILocation(line: 1663, column: 10, scope: !9901)
!9901 = distinct !DILexicalBlock(scope: !9898, file: !3, line: 1662, column: 15)
!9902 = !DILocation(line: 1663, column: 21, scope: !9901)
!9903 = !DILocation(line: 1663, column: 25, scope: !9901)
!9904 = !DILocation(line: 1663, column: 33, scope: !9901)
!9905 = !DILocation(line: 1663, column: 38, scope: !9901)
!9906 = !DILocation(line: 1663, column: 47, scope: !9901)
!9907 = !DILocation(line: 1663, column: 3, scope: !9901)
!9908 = !DILocation(line: 1664, column: 16, scope: !9901)
!9909 = !DILocation(line: 1664, column: 27, scope: !9901)
!9910 = !DILocation(line: 1664, column: 31, scope: !9901)
!9911 = !DILocation(line: 1664, column: 39, scope: !9901)
!9912 = !DILocation(line: 1664, column: 14, scope: !9901)
!9913 = !DILocation(line: 1665, column: 2, scope: !9901)
!9914 = !DILocation(line: 1666, column: 2, scope: !9818)
!9915 = !DILocation(line: 1667, column: 2, scope: !9818)
!9916 = !DILocation(line: 1669, column: 6, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9818, file: !3, line: 1669, column: 6)
!9918 = !DILocation(line: 1669, column: 6, scope: !9818)
!9919 = !DILocation(line: 1670, column: 17, scope: !9917)
!9920 = !DILocation(line: 1670, column: 28, scope: !9917)
!9921 = !DILocation(line: 1670, column: 32, scope: !9917)
!9922 = !DILocation(line: 1670, column: 41, scope: !9917)
!9923 = !DILocation(line: 1670, column: 15, scope: !9917)
!9924 = !DILocation(line: 1670, column: 3, scope: !9917)
!9925 = !DILocation(line: 1671, column: 2, scope: !9818)
!9926 = !DILocation(line: 1672, column: 2, scope: !9818)
!9927 = !DILocation(line: 1674, column: 2, scope: !9818)
!9928 = !DILocation(line: 1675, column: 2, scope: !9818)
!9929 = !DILocation(line: 1677, column: 3, scope: !9818)
!9930 = !DILocation(line: 1677, column: 15, scope: !9818)
!9931 = !DILocation(line: 1679, column: 2, scope: !9818)
!9932 = !{i32 -2136883304}
!9933 = !DILocation(line: 1680, column: 2, scope: !9818)
!9934 = !DILocation(line: 1686, column: 7, scope: !9935)
!9935 = distinct !DILexicalBlock(scope: !9818, file: !3, line: 1686, column: 6)
!9936 = !DILocation(line: 1686, column: 6, scope: !9818)
!9937 = !DILocalVariable(name: "end", scope: !9938, file: !3, line: 1687, type: !367)
!9938 = distinct !DILexicalBlock(scope: !9935, file: !3, line: 1686, column: 14)
!9939 = !DILocation(line: 1687, column: 17, scope: !9938)
!9940 = !DILocation(line: 1689, column: 9, scope: !9938)
!9941 = !DILocation(line: 1689, column: 19, scope: !9938)
!9942 = !DILocation(line: 1689, column: 17, scope: !9938)
!9943 = !DILocation(line: 1689, column: 7, scope: !9938)
!9944 = !DILocation(line: 1690, column: 3, scope: !9938)
!9945 = !DILocalVariable(name: "ctrl", scope: !9946, file: !3, line: 1691, type: !1042)
!9946 = distinct !DILexicalBlock(scope: !9938, file: !3, line: 1690, column: 6)
!9947 = !DILocation(line: 1691, column: 8, scope: !9946)
!9948 = !DILocation(line: 1691, column: 15, scope: !9946)
!9949 = !DILocation(line: 1693, column: 10, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !9946, file: !3, line: 1693, column: 8)
!9951 = !DILocation(line: 1693, column: 15, scope: !9950)
!9952 = !DILocation(line: 1693, column: 8, scope: !9946)
!9953 = !DILocation(line: 1694, column: 6, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9950, file: !3, line: 1693, column: 45)
!9955 = !DILocation(line: 1694, column: 18, scope: !9954)
!9956 = !DILocation(line: 1695, column: 17, scope: !9954)
!9957 = !DILocation(line: 1695, column: 22, scope: !9954)
!9958 = !DILocation(line: 1695, column: 6, scope: !9954)
!9959 = !DILocation(line: 1695, column: 15, scope: !9954)
!9960 = !DILocation(line: 1696, column: 5, scope: !9954)
!9961 = !DILocation(line: 1698, column: 4, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9946, file: !3, line: 1698, column: 4)
!9963 = !DILocation(line: 1699, column: 3, scope: !9946)
!9964 = !DILocation(line: 1699, column: 12, scope: !9938)
!9965 = distinct !{!9965, !9944, !9966}
!9966 = !DILocation(line: 1699, column: 37, scope: !9938)
!9967 = !DILocation(line: 1700, column: 2, scope: !9938)
!9968 = !DILocalVariable(name: "__ret", scope: !9969, file: !3, line: 1701, type: !1053)
!9969 = distinct !DILexicalBlock(scope: !9970, file: !3, line: 1701, column: 3)
!9970 = distinct !DILexicalBlock(scope: !9935, file: !3, line: 1700, column: 9)
!9971 = !DILocation(line: 1701, column: 3, scope: !9969)
!9972 = !DILocation(line: 1701, column: 3, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9969, file: !3, line: 1701, column: 3)
!9974 = !DILocation(line: 1701, column: 3, scope: !9975)
!9975 = distinct !DILexicalBlock(scope: !9973, file: !3, line: 1701, column: 3)
!9976 = !DILocalVariable(name: "__cond", scope: !9977, file: !3, line: 1701, type: !826)
!9977 = distinct !DILexicalBlock(scope: !9978, file: !3, line: 1701, column: 3)
!9978 = distinct !DILexicalBlock(scope: !9969, file: !3, line: 1701, column: 3)
!9979 = !DILocation(line: 1701, column: 3, scope: !9977)
!9980 = !DILocation(line: 1701, column: 3, scope: !9981)
!9981 = distinct !DILexicalBlock(scope: !9977, file: !3, line: 1701, column: 3)
!9982 = !DILocation(line: 1701, column: 3, scope: !9978)
!9983 = !DILocalVariable(name: "__wq_entry", scope: !9984, file: !3, line: 1701, type: !9985)
!9984 = distinct !DILexicalBlock(scope: !9978, file: !3, line: 1701, column: 3)
!9985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1945, line: 29, size: 320, elements: !9986)
!9986 = !{!9987, !9988, !9989, !9995}
!9987 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9985, file: !1945, line: 30, baseType: !7, size: 32)
!9988 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !9985, file: !1945, line: 31, baseType: !646, size: 64, offset: 64)
!9989 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !9985, file: !1945, line: 32, baseType: !9990, size: 64, offset: 128)
!9990 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1945, line: 16, baseType: !9991)
!9991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9992, size: 64)
!9992 = !DISubroutineType(types: !9993)
!9993 = !{!32, !9994, !7, !32, !646}
!9994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9985, size: 64)
!9995 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !9985, file: !1945, line: 33, baseType: !339, size: 128, offset: 192)
!9996 = !DILocation(line: 1701, column: 3, scope: !9984)
!9997 = !DILocalVariable(name: "__ret", scope: !9984, file: !3, line: 1701, type: !1053)
!9998 = !DILocalVariable(name: "__int", scope: !9999, file: !3, line: 1701, type: !1053)
!9999 = distinct !DILexicalBlock(scope: !10000, file: !3, line: 1701, column: 3)
!10000 = distinct !DILexicalBlock(scope: !10001, file: !3, line: 1701, column: 3)
!10001 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 1701, column: 3)
!10002 = !DILocation(line: 1701, column: 3, scope: !9999)
!10003 = !DILocalVariable(name: "__cond", scope: !10004, file: !3, line: 1701, type: !826)
!10004 = distinct !DILexicalBlock(scope: !10005, file: !3, line: 1701, column: 3)
!10005 = distinct !DILexicalBlock(scope: !9999, file: !3, line: 1701, column: 3)
!10006 = !DILocation(line: 1701, column: 3, scope: !10004)
!10007 = !DILocation(line: 1701, column: 3, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 1701, column: 3)
!10009 = !DILocation(line: 1701, column: 3, scope: !10005)
!10010 = !DILocation(line: 1701, column: 3, scope: !10000)
!10011 = distinct !{!10011, !10012, !10012}
!10012 = !DILocation(line: 1701, column: 3, scope: !10001)
!10013 = !DILabel(scope: !9984, name: "__out", file: !3, line: 1701)
!10014 = !DILocation(line: 1702, column: 15, scope: !9970)
!10015 = !DILocation(line: 1702, column: 26, scope: !9970)
!10016 = !DILocation(line: 1702, column: 30, scope: !9970)
!10017 = !DILocation(line: 1702, column: 35, scope: !9970)
!10018 = !DILocation(line: 1702, column: 4, scope: !9970)
!10019 = !DILocation(line: 1702, column: 13, scope: !9970)
!10020 = !DILocation(line: 1705, column: 6, scope: !9818)
!10021 = !DILocation(line: 1706, column: 7, scope: !10022)
!10022 = distinct !DILexicalBlock(scope: !9818, file: !3, line: 1706, column: 6)
!10023 = !DILocation(line: 1706, column: 6, scope: !10022)
!10024 = !DILocation(line: 1706, column: 6, scope: !9818)
!10025 = !DILocation(line: 1707, column: 8, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10027, file: !3, line: 1707, column: 7)
!10027 = distinct !DILexicalBlock(scope: !10022, file: !3, line: 1706, column: 20)
!10028 = !DILocation(line: 1707, column: 7, scope: !10026)
!10029 = !DILocation(line: 1707, column: 7, scope: !10027)
!10030 = !DILocation(line: 1708, column: 8, scope: !10026)
!10031 = !DILocation(line: 1708, column: 4, scope: !10026)
!10032 = !DILocation(line: 1709, column: 2, scope: !10027)
!10033 = !DILocation(line: 1710, column: 7, scope: !10034)
!10034 = distinct !DILexicalBlock(scope: !10022, file: !3, line: 1709, column: 9)
!10035 = !DILocation(line: 1713, column: 7, scope: !10036)
!10036 = distinct !DILexicalBlock(scope: !9818, file: !3, line: 1713, column: 6)
!10037 = !DILocation(line: 1713, column: 11, scope: !10036)
!10038 = !DILocation(line: 1713, column: 14, scope: !10036)
!10039 = !DILocation(line: 1713, column: 23, scope: !10036)
!10040 = !DILocation(line: 1713, column: 26, scope: !10036)
!10041 = !DILocation(line: 1713, column: 6, scope: !9818)
!10042 = !DILocalVariable(name: "tmp", scope: !10043, file: !3, line: 1718, type: !3263)
!10043 = distinct !DILexicalBlock(scope: !10036, file: !3, line: 1713, column: 43)
!10044 = !DILocation(line: 1718, column: 10, scope: !10043)
!10045 = !DILocation(line: 1720, column: 8, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !10043, file: !3, line: 1720, column: 7)
!10047 = !DILocation(line: 1720, column: 7, scope: !10043)
!10048 = !DILocation(line: 1721, column: 10, scope: !10049)
!10049 = distinct !DILexicalBlock(scope: !10046, file: !3, line: 1720, column: 15)
!10050 = !DILocation(line: 1721, column: 8, scope: !10049)
!10051 = !DILocation(line: 1723, column: 11, scope: !10049)
!10052 = !DILocation(line: 1723, column: 4, scope: !10049)
!10053 = !DILocation(line: 1724, column: 10, scope: !10049)
!10054 = !DILocation(line: 1724, column: 8, scope: !10049)
!10055 = !DILocation(line: 1726, column: 11, scope: !10049)
!10056 = !DILocation(line: 1726, column: 20, scope: !10049)
!10057 = !DILocation(line: 1726, column: 4, scope: !10049)
!10058 = !DILocation(line: 1727, column: 3, scope: !10049)
!10059 = !DILocation(line: 1728, column: 2, scope: !10043)
!10060 = !DILocation(line: 1728, column: 14, scope: !10061)
!10061 = distinct !DILexicalBlock(scope: !10036, file: !3, line: 1728, column: 13)
!10062 = !DILocation(line: 1728, column: 18, scope: !10061)
!10063 = !DILocation(line: 1728, column: 21, scope: !10061)
!10064 = !DILocation(line: 1728, column: 13, scope: !10036)
!10065 = !DILocation(line: 1729, column: 10, scope: !10066)
!10066 = distinct !DILexicalBlock(scope: !10061, file: !3, line: 1728, column: 31)
!10067 = !DILocation(line: 1729, column: 20, scope: !10066)
!10068 = !DILocation(line: 1729, column: 31, scope: !10066)
!10069 = !DILocation(line: 1729, column: 35, scope: !10066)
!10070 = !DILocation(line: 1729, column: 44, scope: !10066)
!10071 = !DILocation(line: 1729, column: 49, scope: !10066)
!10072 = !DILocation(line: 1729, column: 3, scope: !10066)
!10073 = !DILocation(line: 1730, column: 2, scope: !10066)
!10074 = !DILocation(line: 1732, column: 16, scope: !9818)
!10075 = !DILocation(line: 1732, column: 27, scope: !9818)
!10076 = !DILocation(line: 1732, column: 31, scope: !9818)
!10077 = !DILocation(line: 1732, column: 2, scope: !9818)
!10078 = !DILocation(line: 1734, column: 9, scope: !9818)
!10079 = !DILocation(line: 1734, column: 2, scope: !9818)
!10080 = !DILocation(line: 1735, column: 1, scope: !9818)
!10081 = distinct !DISubprogram(name: "mlxsw_pci_read_frc_h", scope: !3, file: !3, line: 1737, type: !5208, scopeLine: 1738, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!10082 = !DILocalVariable(name: "bus_priv", arg: 1, scope: !10081, file: !3, line: 1737, type: !646)
!10083 = !DILocation(line: 1737, column: 39, scope: !10081)
!10084 = !DILocalVariable(name: "mlxsw_pci", scope: !10081, file: !3, line: 1739, type: !7722)
!10085 = !DILocation(line: 1739, column: 20, scope: !10081)
!10086 = !DILocation(line: 1739, column: 32, scope: !10081)
!10087 = !DILocalVariable(name: "frc_offset", scope: !10081, file: !3, line: 1740, type: !386)
!10088 = !DILocation(line: 1740, column: 6, scope: !10081)
!10089 = !DILocation(line: 1742, column: 15, scope: !10081)
!10090 = !DILocation(line: 1742, column: 26, scope: !10081)
!10091 = !DILocation(line: 1742, column: 13, scope: !10081)
!10092 = !DILocation(line: 1743, column: 9, scope: !10081)
!10093 = !DILocation(line: 1743, column: 2, scope: !10081)
!10094 = distinct !DISubprogram(name: "mlxsw_pci_read_frc_l", scope: !3, file: !3, line: 1746, type: !5208, scopeLine: 1747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!10095 = !DILocalVariable(name: "bus_priv", arg: 1, scope: !10094, file: !3, line: 1746, type: !646)
!10096 = !DILocation(line: 1746, column: 39, scope: !10094)
!10097 = !DILocalVariable(name: "mlxsw_pci", scope: !10094, file: !3, line: 1748, type: !7722)
!10098 = !DILocation(line: 1748, column: 20, scope: !10094)
!10099 = !DILocation(line: 1748, column: 32, scope: !10094)
!10100 = !DILocalVariable(name: "frc_offset", scope: !10094, file: !3, line: 1749, type: !386)
!10101 = !DILocation(line: 1749, column: 6, scope: !10094)
!10102 = !DILocation(line: 1751, column: 15, scope: !10094)
!10103 = !DILocation(line: 1751, column: 26, scope: !10094)
!10104 = !DILocation(line: 1751, column: 13, scope: !10094)
!10105 = !DILocation(line: 1752, column: 9, scope: !10094)
!10106 = !DILocation(line: 1752, column: 2, scope: !10094)
!10107 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_alloc", scope: !7482, file: !7482, line: 11, type: !10108, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!10108 = !DISubroutineType(types: !10109)
!10109 = !{!1093}
!10110 = !DILocation(line: 13, column: 9, scope: !10107)
!10111 = !DILocation(line: 13, column: 2, scope: !10107)
!10112 = distinct !DISubprogram(name: "mlxsw_pci_sw_reset", scope: !3, file: !3, line: 1366, type: !10113, scopeLine: 1368, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!10113 = !DISubroutineType(types: !10114)
!10114 = !{!32, !7722, !7837}
!10115 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !10112, file: !3, line: 1366, type: !7722)
!10116 = !DILocation(line: 1366, column: 49, scope: !10112)
!10117 = !DILocalVariable(name: "id", arg: 2, scope: !10112, file: !3, line: 1367, type: !7837)
!10118 = !DILocation(line: 1367, column: 38, scope: !10112)
!10119 = !DILocalVariable(name: "pdev", scope: !10112, file: !3, line: 1369, type: !7726)
!10120 = !DILocation(line: 1369, column: 18, scope: !10112)
!10121 = !DILocation(line: 1369, column: 25, scope: !10112)
!10122 = !DILocation(line: 1369, column: 36, scope: !10112)
!10123 = !DILocalVariable(name: "mrsr_pl", scope: !10112, file: !3, line: 1370, type: !4009)
!10124 = !DILocation(line: 1370, column: 7, scope: !10112)
!10125 = !DILocalVariable(name: "sys_status", scope: !10112, file: !3, line: 1371, type: !1042)
!10126 = !DILocation(line: 1371, column: 6, scope: !10112)
!10127 = !DILocalVariable(name: "err", scope: !10112, file: !3, line: 1372, type: !32)
!10128 = !DILocation(line: 1372, column: 6, scope: !10112)
!10129 = !DILocation(line: 1374, column: 33, scope: !10112)
!10130 = !DILocation(line: 1374, column: 44, scope: !10112)
!10131 = !DILocation(line: 1374, column: 8, scope: !10112)
!10132 = !DILocation(line: 1374, column: 6, scope: !10112)
!10133 = !DILocation(line: 1375, column: 6, scope: !10134)
!10134 = distinct !DILexicalBlock(scope: !10112, file: !3, line: 1375, column: 6)
!10135 = !DILocation(line: 1375, column: 6, scope: !10112)
!10136 = !DILocation(line: 1376, column: 3, scope: !10137)
!10137 = distinct !DILexicalBlock(scope: !10134, file: !3, line: 1375, column: 11)
!10138 = !DILocation(line: 1378, column: 10, scope: !10137)
!10139 = !DILocation(line: 1378, column: 3, scope: !10137)
!10140 = !DILocation(line: 1381, column: 22, scope: !10112)
!10141 = !DILocation(line: 1381, column: 2, scope: !10112)
!10142 = !DILocation(line: 1382, column: 24, scope: !10112)
!10143 = !DILocation(line: 1382, column: 35, scope: !10112)
!10144 = !DILocation(line: 1382, column: 58, scope: !10112)
!10145 = !DILocation(line: 1382, column: 8, scope: !10112)
!10146 = !DILocation(line: 1382, column: 6, scope: !10112)
!10147 = !DILocation(line: 1383, column: 6, scope: !10148)
!10148 = distinct !DILexicalBlock(scope: !10112, file: !3, line: 1383, column: 6)
!10149 = !DILocation(line: 1383, column: 6, scope: !10112)
!10150 = !DILocation(line: 1384, column: 10, scope: !10148)
!10151 = !DILocation(line: 1384, column: 3, scope: !10148)
!10152 = !DILocation(line: 1386, column: 33, scope: !10112)
!10153 = !DILocation(line: 1386, column: 44, scope: !10112)
!10154 = !DILocation(line: 1386, column: 8, scope: !10112)
!10155 = !DILocation(line: 1386, column: 6, scope: !10112)
!10156 = !DILocation(line: 1387, column: 6, scope: !10157)
!10157 = distinct !DILexicalBlock(scope: !10112, file: !3, line: 1387, column: 6)
!10158 = !DILocation(line: 1387, column: 6, scope: !10112)
!10159 = !DILocation(line: 1388, column: 3, scope: !10160)
!10160 = distinct !DILexicalBlock(scope: !10157, file: !3, line: 1387, column: 11)
!10161 = !DILocation(line: 1390, column: 10, scope: !10160)
!10162 = !DILocation(line: 1390, column: 3, scope: !10160)
!10163 = !DILocation(line: 1393, column: 2, scope: !10112)
!10164 = !DILocation(line: 1394, column: 1, scope: !10112)
!10165 = distinct !DISubprogram(name: "mlxsw_pci_alloc_irq_vectors", scope: !3, file: !3, line: 1396, type: !8133, scopeLine: 1397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!10166 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !10165, file: !3, line: 1396, type: !7722)
!10167 = !DILocation(line: 1396, column: 58, scope: !10165)
!10168 = !DILocalVariable(name: "err", scope: !10165, file: !3, line: 1398, type: !32)
!10169 = !DILocation(line: 1398, column: 6, scope: !10165)
!10170 = !DILocation(line: 1400, column: 30, scope: !10165)
!10171 = !DILocation(line: 1400, column: 41, scope: !10165)
!10172 = !DILocation(line: 1400, column: 8, scope: !10165)
!10173 = !DILocation(line: 1400, column: 6, scope: !10165)
!10174 = !DILocation(line: 1401, column: 6, scope: !10175)
!10175 = distinct !DILexicalBlock(scope: !10165, file: !3, line: 1401, column: 6)
!10176 = !DILocation(line: 1401, column: 10, scope: !10175)
!10177 = !DILocation(line: 1401, column: 6, scope: !10165)
!10178 = !DILocation(line: 1402, column: 3, scope: !10175)
!10179 = !DILocation(line: 1403, column: 9, scope: !10165)
!10180 = !DILocation(line: 1403, column: 2, scope: !10165)
!10181 = distinct !DISubprogram(name: "mlxsw_cmd_query_fw", scope: !7482, file: !7482, line: 199, type: !10182, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!10182 = !DISubroutineType(types: !10183)
!10183 = !{!32, !8008, !1093}
!10184 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !10181, file: !7482, line: 199, type: !8008)
!10185 = !DILocation(line: 199, column: 57, scope: !10181)
!10186 = !DILocalVariable(name: "out_mbox", arg: 2, scope: !10181, file: !7482, line: 200, type: !1093)
!10187 = !DILocation(line: 200, column: 16, scope: !10181)
!10188 = !DILocation(line: 202, column: 28, scope: !10181)
!10189 = !DILocation(line: 203, column: 20, scope: !10181)
!10190 = !DILocation(line: 202, column: 9, scope: !10181)
!10191 = !DILocation(line: 202, column: 2, scope: !10181)
!10192 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_query_fw_fw_rev_major_get", scope: !7482, file: !7482, line: 214, type: !10193, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!10193 = !DISubroutineType(types: !10194)
!10194 = !{!1042, !347}
!10195 = !DILocalVariable(name: "buf", arg: 1, scope: !10192, file: !7482, line: 214, type: !347)
!10196 = !DILocation(line: 214, column: 1, scope: !10192)
!10197 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_query_fw_fw_rev_minor_get", scope: !7482, file: !7482, line: 224, type: !10193, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!10198 = !DILocalVariable(name: "buf", arg: 1, scope: !10197, file: !7482, line: 224, type: !347)
!10199 = !DILocation(line: 224, column: 1, scope: !10197)
!10200 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_query_fw_fw_rev_subminor_get", scope: !7482, file: !7482, line: 219, type: !10193, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!10201 = !DILocalVariable(name: "buf", arg: 1, scope: !10200, file: !7482, line: 219, type: !347)
!10202 = !DILocation(line: 219, column: 1, scope: !10200)
!10203 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_query_fw_cmd_interface_rev_get", scope: !7482, file: !7482, line: 236, type: !10193, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!10204 = !DILocalVariable(name: "buf", arg: 1, scope: !10203, file: !7482, line: 236, type: !347)
!10205 = !DILocation(line: 236, column: 1, scope: !10203)
!10206 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_query_fw_doorbell_page_bar_get", scope: !7482, file: !7482, line: 318, type: !10193, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!10207 = !DILocalVariable(name: "buf", arg: 1, scope: !10206, file: !7482, line: 318, type: !347)
!10208 = !DILocation(line: 318, column: 1, scope: !10206)
!10209 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_query_fw_doorbell_page_offset_get", scope: !7482, file: !7482, line: 312, type: !10210, scopeLine: 312, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!10210 = !DISubroutineType(types: !10211)
!10211 = !{!386, !347}
!10212 = !DILocalVariable(name: "buf", arg: 1, scope: !10209, file: !7482, line: 312, type: !347)
!10213 = !DILocation(line: 312, column: 1, scope: !10209)
!10214 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_query_fw_fr_rn_clk_bar_get", scope: !7482, file: !7482, line: 330, type: !10193, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!10215 = !DILocalVariable(name: "buf", arg: 1, scope: !10214, file: !7482, line: 330, type: !347)
!10216 = !DILocation(line: 330, column: 1, scope: !10214)
!10217 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_query_fw_free_running_clock_offset_get", scope: !7482, file: !7482, line: 323, type: !10210, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!10218 = !DILocalVariable(name: "buf", arg: 1, scope: !10217, file: !7482, line: 323, type: !347)
!10219 = !DILocation(line: 323, column: 1, scope: !10217)
!10220 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_query_fw_fw_pages_get", scope: !7482, file: !7482, line: 209, type: !10193, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!10221 = !DILocalVariable(name: "buf", arg: 1, scope: !10220, file: !7482, line: 209, type: !347)
!10222 = !DILocation(line: 209, column: 1, scope: !10220)
!10223 = distinct !DISubprogram(name: "mlxsw_pci_fw_area_init", scope: !3, file: !3, line: 1226, type: !10224, scopeLine: 1228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!10224 = !DISubroutineType(types: !10225)
!10225 = !{!32, !7722, !1093, !636}
!10226 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !10223, file: !3, line: 1226, type: !7722)
!10227 = !DILocation(line: 1226, column: 53, scope: !10223)
!10228 = !DILocalVariable(name: "mbox", arg: 2, scope: !10223, file: !3, line: 1226, type: !1093)
!10229 = !DILocation(line: 1226, column: 70, scope: !10223)
!10230 = !DILocalVariable(name: "num_pages", arg: 3, scope: !10223, file: !3, line: 1227, type: !636)
!10231 = !DILocation(line: 1227, column: 11, scope: !10223)
!10232 = !DILocalVariable(name: "mem_item", scope: !10223, file: !3, line: 1229, type: !8014)
!10233 = !DILocation(line: 1229, column: 29, scope: !10223)
!10234 = !DILocalVariable(name: "nent", scope: !10223, file: !3, line: 1230, type: !32)
!10235 = !DILocation(line: 1230, column: 6, scope: !10223)
!10236 = !DILocalVariable(name: "i", scope: !10223, file: !3, line: 1231, type: !32)
!10237 = !DILocation(line: 1231, column: 6, scope: !10223)
!10238 = !DILocalVariable(name: "err", scope: !10223, file: !3, line: 1232, type: !32)
!10239 = !DILocation(line: 1232, column: 6, scope: !10223)
!10240 = !DILocation(line: 1234, column: 37, scope: !10223)
!10241 = !DILocation(line: 1234, column: 29, scope: !10223)
!10242 = !DILocation(line: 1234, column: 2, scope: !10223)
!10243 = !DILocation(line: 1234, column: 13, scope: !10223)
!10244 = !DILocation(line: 1234, column: 21, scope: !10223)
!10245 = !DILocation(line: 1234, column: 27, scope: !10223)
!10246 = !DILocation(line: 1236, column: 7, scope: !10247)
!10247 = distinct !DILexicalBlock(scope: !10223, file: !3, line: 1236, column: 6)
!10248 = !DILocation(line: 1236, column: 18, scope: !10247)
!10249 = !DILocation(line: 1236, column: 26, scope: !10247)
!10250 = !DILocation(line: 1236, column: 6, scope: !10223)
!10251 = !DILocation(line: 1237, column: 3, scope: !10247)
!10252 = !DILocation(line: 1238, column: 29, scope: !10223)
!10253 = !DILocation(line: 1238, column: 2, scope: !10223)
!10254 = !DILocation(line: 1238, column: 13, scope: !10223)
!10255 = !DILocation(line: 1238, column: 21, scope: !10223)
!10256 = !DILocation(line: 1238, column: 27, scope: !10223)
!10257 = !DILocation(line: 1240, column: 22, scope: !10223)
!10258 = !DILocation(line: 1240, column: 2, scope: !10223)
!10259 = !DILocation(line: 1241, column: 9, scope: !10260)
!10260 = distinct !DILexicalBlock(scope: !10223, file: !3, line: 1241, column: 2)
!10261 = !DILocation(line: 1241, column: 7, scope: !10260)
!10262 = !DILocation(line: 1241, column: 14, scope: !10263)
!10263 = distinct !DILexicalBlock(scope: !10260, file: !3, line: 1241, column: 2)
!10264 = !DILocation(line: 1241, column: 18, scope: !10263)
!10265 = !DILocation(line: 1241, column: 16, scope: !10263)
!10266 = !DILocation(line: 1241, column: 2, scope: !10260)
!10267 = !DILocation(line: 1242, column: 15, scope: !10268)
!10268 = distinct !DILexicalBlock(scope: !10263, file: !3, line: 1241, column: 34)
!10269 = !DILocation(line: 1242, column: 26, scope: !10268)
!10270 = !DILocation(line: 1242, column: 34, scope: !10268)
!10271 = !DILocation(line: 1242, column: 40, scope: !10268)
!10272 = !DILocation(line: 1242, column: 12, scope: !10268)
!10273 = !DILocation(line: 1244, column: 3, scope: !10268)
!10274 = !DILocation(line: 1244, column: 13, scope: !10268)
!10275 = !DILocation(line: 1244, column: 18, scope: !10268)
!10276 = !DILocation(line: 1245, column: 40, scope: !10268)
!10277 = !DILocation(line: 1245, column: 51, scope: !10268)
!10278 = !DILocation(line: 1246, column: 12, scope: !10268)
!10279 = !DILocation(line: 1246, column: 22, scope: !10268)
!10280 = !DILocation(line: 1247, column: 13, scope: !10268)
!10281 = !DILocation(line: 1247, column: 23, scope: !10268)
!10282 = !DILocation(line: 1245, column: 19, scope: !10268)
!10283 = !DILocation(line: 1245, column: 3, scope: !10268)
!10284 = !DILocation(line: 1245, column: 13, scope: !10268)
!10285 = !DILocation(line: 1245, column: 17, scope: !10268)
!10286 = !DILocation(line: 1248, column: 8, scope: !10287)
!10287 = distinct !DILexicalBlock(scope: !10268, file: !3, line: 1248, column: 7)
!10288 = !DILocation(line: 1248, column: 18, scope: !10287)
!10289 = !DILocation(line: 1248, column: 7, scope: !10268)
!10290 = !DILocation(line: 1249, column: 8, scope: !10291)
!10291 = distinct !DILexicalBlock(scope: !10287, file: !3, line: 1248, column: 23)
!10292 = !DILocation(line: 1250, column: 4, scope: !10291)
!10293 = !DILocation(line: 1252, column: 32, scope: !10268)
!10294 = !DILocation(line: 1252, column: 38, scope: !10268)
!10295 = !DILocation(line: 1252, column: 44, scope: !10268)
!10296 = !DILocation(line: 1252, column: 54, scope: !10268)
!10297 = !DILocation(line: 1252, column: 3, scope: !10268)
!10298 = !DILocation(line: 1253, column: 38, scope: !10268)
!10299 = !DILocation(line: 1253, column: 44, scope: !10268)
!10300 = !DILocation(line: 1253, column: 3, scope: !10268)
!10301 = !DILocation(line: 1254, column: 7, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !10268, file: !3, line: 1254, column: 7)
!10303 = !DILocation(line: 1254, column: 14, scope: !10302)
!10304 = !DILocation(line: 1254, column: 7, scope: !10268)
!10305 = !DILocation(line: 1255, column: 27, scope: !10306)
!10306 = distinct !DILexicalBlock(scope: !10302, file: !3, line: 1254, column: 51)
!10307 = !DILocation(line: 1255, column: 38, scope: !10306)
!10308 = !DILocation(line: 1255, column: 44, scope: !10306)
!10309 = !DILocation(line: 1255, column: 50, scope: !10306)
!10310 = !DILocation(line: 1255, column: 10, scope: !10306)
!10311 = !DILocation(line: 1255, column: 8, scope: !10306)
!10312 = !DILocation(line: 1256, column: 8, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !10306, file: !3, line: 1256, column: 8)
!10314 = !DILocation(line: 1256, column: 8, scope: !10306)
!10315 = !DILocation(line: 1257, column: 5, scope: !10313)
!10316 = !DILocation(line: 1258, column: 9, scope: !10306)
!10317 = !DILocation(line: 1259, column: 24, scope: !10306)
!10318 = !DILocation(line: 1259, column: 4, scope: !10306)
!10319 = !DILocation(line: 1260, column: 3, scope: !10306)
!10320 = !DILocation(line: 1261, column: 2, scope: !10268)
!10321 = !DILocation(line: 1241, column: 30, scope: !10263)
!10322 = !DILocation(line: 1241, column: 2, scope: !10263)
!10323 = distinct !{!10323, !10266, !10324}
!10324 = !DILocation(line: 1261, column: 2, scope: !10260)
!10325 = !DILocation(line: 1263, column: 6, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !10223, file: !3, line: 1263, column: 6)
!10327 = !DILocation(line: 1263, column: 6, scope: !10223)
!10328 = !DILocation(line: 1264, column: 26, scope: !10329)
!10329 = distinct !DILexicalBlock(scope: !10326, file: !3, line: 1263, column: 12)
!10330 = !DILocation(line: 1264, column: 37, scope: !10329)
!10331 = !DILocation(line: 1264, column: 43, scope: !10329)
!10332 = !DILocation(line: 1264, column: 49, scope: !10329)
!10333 = !DILocation(line: 1264, column: 9, scope: !10329)
!10334 = !DILocation(line: 1264, column: 7, scope: !10329)
!10335 = !DILocation(line: 1265, column: 7, scope: !10336)
!10336 = distinct !DILexicalBlock(scope: !10329, file: !3, line: 1265, column: 7)
!10337 = !DILocation(line: 1265, column: 7, scope: !10329)
!10338 = !DILocation(line: 1266, column: 4, scope: !10336)
!10339 = !DILocation(line: 1267, column: 2, scope: !10329)
!10340 = !DILocation(line: 1269, column: 2, scope: !10223)
!10341 = !DILabel(scope: !10223, name: "err_cmd_map_fa", file: !3, line: 1271)
!10342 = !DILocation(line: 1271, column: 1, scope: !10223)
!10343 = !DILabel(scope: !10223, name: "err_alloc", file: !3, line: 1272)
!10344 = !DILocation(line: 1272, column: 1, scope: !10223)
!10345 = !DILocation(line: 1273, column: 8, scope: !10346)
!10346 = distinct !DILexicalBlock(scope: !10223, file: !3, line: 1273, column: 2)
!10347 = !DILocation(line: 1273, column: 7, scope: !10346)
!10348 = !DILocation(line: 1273, column: 12, scope: !10349)
!10349 = distinct !DILexicalBlock(scope: !10346, file: !3, line: 1273, column: 2)
!10350 = !DILocation(line: 1273, column: 14, scope: !10349)
!10351 = !DILocation(line: 1273, column: 2, scope: !10346)
!10352 = !DILocation(line: 1274, column: 15, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10349, file: !3, line: 1273, column: 25)
!10354 = !DILocation(line: 1274, column: 26, scope: !10353)
!10355 = !DILocation(line: 1274, column: 34, scope: !10353)
!10356 = !DILocation(line: 1274, column: 40, scope: !10353)
!10357 = !DILocation(line: 1274, column: 12, scope: !10353)
!10358 = !DILocation(line: 1276, column: 23, scope: !10353)
!10359 = !DILocation(line: 1276, column: 34, scope: !10353)
!10360 = !DILocation(line: 1276, column: 40, scope: !10353)
!10361 = !DILocation(line: 1276, column: 50, scope: !10353)
!10362 = !DILocation(line: 1277, column: 9, scope: !10353)
!10363 = !DILocation(line: 1277, column: 19, scope: !10353)
!10364 = !DILocation(line: 1277, column: 24, scope: !10353)
!10365 = !DILocation(line: 1277, column: 34, scope: !10353)
!10366 = !DILocation(line: 1276, column: 3, scope: !10353)
!10367 = !DILocation(line: 1278, column: 2, scope: !10353)
!10368 = !DILocation(line: 1273, column: 21, scope: !10349)
!10369 = !DILocation(line: 1273, column: 2, scope: !10349)
!10370 = distinct !{!10370, !10351, !10371}
!10371 = !DILocation(line: 1278, column: 2, scope: !10346)
!10372 = !DILocation(line: 1279, column: 8, scope: !10223)
!10373 = !DILocation(line: 1279, column: 19, scope: !10223)
!10374 = !DILocation(line: 1279, column: 27, scope: !10223)
!10375 = !DILocation(line: 1279, column: 2, scope: !10223)
!10376 = !DILocation(line: 1280, column: 9, scope: !10223)
!10377 = !DILocation(line: 1280, column: 2, scope: !10223)
!10378 = !DILocation(line: 1281, column: 1, scope: !10223)
!10379 = distinct !DISubprogram(name: "mlxsw_pci_boardinfo", scope: !3, file: !3, line: 1212, type: !10380, scopeLine: 1213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!10380 = !DISubroutineType(types: !10381)
!10381 = !{!32, !7722, !1093}
!10382 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !10379, file: !3, line: 1212, type: !7722)
!10383 = !DILocation(line: 1212, column: 50, scope: !10379)
!10384 = !DILocalVariable(name: "mbox", arg: 2, scope: !10379, file: !3, line: 1212, type: !1093)
!10385 = !DILocation(line: 1212, column: 67, scope: !10379)
!10386 = !DILocalVariable(name: "bus_info", scope: !10379, file: !3, line: 1214, type: !10387)
!10387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8031, size: 64)
!10388 = !DILocation(line: 1214, column: 25, scope: !10379)
!10389 = !DILocation(line: 1214, column: 37, scope: !10379)
!10390 = !DILocation(line: 1214, column: 48, scope: !10379)
!10391 = !DILocalVariable(name: "err", scope: !10379, file: !3, line: 1215, type: !32)
!10392 = !DILocation(line: 1215, column: 6, scope: !10379)
!10393 = !DILocation(line: 1217, column: 22, scope: !10379)
!10394 = !DILocation(line: 1217, column: 2, scope: !10379)
!10395 = !DILocation(line: 1218, column: 28, scope: !10379)
!10396 = !DILocation(line: 1218, column: 39, scope: !10379)
!10397 = !DILocation(line: 1218, column: 45, scope: !10379)
!10398 = !DILocation(line: 1218, column: 8, scope: !10379)
!10399 = !DILocation(line: 1218, column: 6, scope: !10379)
!10400 = !DILocation(line: 1219, column: 6, scope: !10401)
!10401 = distinct !DILexicalBlock(scope: !10379, file: !3, line: 1219, column: 6)
!10402 = !DILocation(line: 1219, column: 6, scope: !10379)
!10403 = !DILocation(line: 1220, column: 10, scope: !10401)
!10404 = !DILocation(line: 1220, column: 3, scope: !10401)
!10405 = !DILocation(line: 1221, column: 43, scope: !10379)
!10406 = !DILocation(line: 1221, column: 49, scope: !10379)
!10407 = !DILocation(line: 1221, column: 59, scope: !10379)
!10408 = !DILocation(line: 1221, column: 2, scope: !10379)
!10409 = !DILocation(line: 1222, column: 44, scope: !10379)
!10410 = !DILocation(line: 1222, column: 50, scope: !10379)
!10411 = !DILocation(line: 1222, column: 60, scope: !10379)
!10412 = !DILocation(line: 1222, column: 2, scope: !10379)
!10413 = !DILocation(line: 1223, column: 2, scope: !10379)
!10414 = !DILocation(line: 1224, column: 1, scope: !10379)
!10415 = distinct !DISubprogram(name: "mlxsw_pci_config_profile", scope: !3, file: !3, line: 1091, type: !10416, scopeLine: 1094, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!10416 = !DISubroutineType(types: !10417)
!10417 = !{!32, !7722, !1093, !8147, !8193}
!10418 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !10415, file: !3, line: 1091, type: !7722)
!10419 = !DILocation(line: 1091, column: 55, scope: !10415)
!10420 = !DILocalVariable(name: "mbox", arg: 2, scope: !10415, file: !3, line: 1091, type: !1093)
!10421 = !DILocation(line: 1091, column: 72, scope: !10415)
!10422 = !DILocalVariable(name: "profile", arg: 3, scope: !10415, file: !3, line: 1092, type: !8147)
!10423 = !DILocation(line: 1092, column: 44, scope: !10415)
!10424 = !DILocalVariable(name: "res", arg: 4, scope: !10415, file: !3, line: 1093, type: !8193)
!10425 = !DILocation(line: 1093, column: 27, scope: !10415)
!10426 = !DILocalVariable(name: "i", scope: !10415, file: !3, line: 1095, type: !32)
!10427 = !DILocation(line: 1095, column: 6, scope: !10415)
!10428 = !DILocalVariable(name: "err", scope: !10415, file: !3, line: 1096, type: !32)
!10429 = !DILocation(line: 1096, column: 6, scope: !10415)
!10430 = !DILocation(line: 1098, column: 22, scope: !10415)
!10431 = !DILocation(line: 1098, column: 2, scope: !10415)
!10432 = !DILocation(line: 1100, column: 6, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10415, file: !3, line: 1100, column: 6)
!10434 = !DILocation(line: 1100, column: 15, scope: !10433)
!10435 = !DILocation(line: 1100, column: 6, scope: !10415)
!10436 = !DILocation(line: 1102, column: 4, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10433, file: !3, line: 1100, column: 39)
!10438 = !DILocation(line: 1101, column: 3, scope: !10437)
!10439 = !DILocation(line: 1104, column: 4, scope: !10437)
!10440 = !DILocation(line: 1104, column: 10, scope: !10437)
!10441 = !DILocation(line: 1104, column: 19, scope: !10437)
!10442 = !DILocation(line: 1103, column: 3, scope: !10437)
!10443 = !DILocation(line: 1105, column: 2, scope: !10437)
!10444 = !DILocation(line: 1106, column: 6, scope: !10445)
!10445 = distinct !DILexicalBlock(scope: !10415, file: !3, line: 1106, column: 6)
!10446 = !DILocation(line: 1106, column: 15, scope: !10445)
!10447 = !DILocation(line: 1106, column: 6, scope: !10415)
!10448 = !DILocation(line: 1108, column: 4, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10445, file: !3, line: 1106, column: 29)
!10450 = !DILocation(line: 1107, column: 3, scope: !10449)
!10451 = !DILocation(line: 1110, column: 4, scope: !10449)
!10452 = !DILocation(line: 1110, column: 10, scope: !10449)
!10453 = !DILocation(line: 1110, column: 19, scope: !10449)
!10454 = !DILocation(line: 1109, column: 3, scope: !10449)
!10455 = !DILocation(line: 1111, column: 2, scope: !10449)
!10456 = !DILocation(line: 1112, column: 6, scope: !10457)
!10457 = distinct !DILexicalBlock(scope: !10415, file: !3, line: 1112, column: 6)
!10458 = !DILocation(line: 1112, column: 15, scope: !10457)
!10459 = !DILocation(line: 1112, column: 6, scope: !10415)
!10460 = !DILocation(line: 1114, column: 4, scope: !10461)
!10461 = distinct !DILexicalBlock(scope: !10457, file: !3, line: 1112, column: 29)
!10462 = !DILocation(line: 1113, column: 3, scope: !10461)
!10463 = !DILocation(line: 1116, column: 4, scope: !10461)
!10464 = !DILocation(line: 1116, column: 10, scope: !10461)
!10465 = !DILocation(line: 1116, column: 19, scope: !10461)
!10466 = !DILocation(line: 1115, column: 3, scope: !10461)
!10467 = !DILocation(line: 1117, column: 2, scope: !10461)
!10468 = !DILocation(line: 1118, column: 6, scope: !10469)
!10469 = distinct !DILexicalBlock(scope: !10415, file: !3, line: 1118, column: 6)
!10470 = !DILocation(line: 1118, column: 15, scope: !10469)
!10471 = !DILocation(line: 1118, column: 6, scope: !10415)
!10472 = !DILocation(line: 1120, column: 4, scope: !10473)
!10473 = distinct !DILexicalBlock(scope: !10469, file: !3, line: 1118, column: 37)
!10474 = !DILocation(line: 1119, column: 3, scope: !10473)
!10475 = !DILocation(line: 1122, column: 4, scope: !10473)
!10476 = !DILocation(line: 1122, column: 10, scope: !10473)
!10477 = !DILocation(line: 1122, column: 19, scope: !10473)
!10478 = !DILocation(line: 1121, column: 3, scope: !10473)
!10479 = !DILocation(line: 1123, column: 2, scope: !10473)
!10480 = !DILocation(line: 1124, column: 6, scope: !10481)
!10481 = distinct !DILexicalBlock(scope: !10415, file: !3, line: 1124, column: 6)
!10482 = !DILocation(line: 1124, column: 15, scope: !10481)
!10483 = !DILocation(line: 1124, column: 6, scope: !10415)
!10484 = !DILocation(line: 1126, column: 4, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !10481, file: !3, line: 1124, column: 37)
!10486 = !DILocation(line: 1125, column: 3, scope: !10485)
!10487 = !DILocation(line: 1128, column: 4, scope: !10485)
!10488 = !DILocation(line: 1128, column: 10, scope: !10485)
!10489 = !DILocation(line: 1128, column: 19, scope: !10485)
!10490 = !DILocation(line: 1127, column: 3, scope: !10485)
!10491 = !DILocation(line: 1129, column: 2, scope: !10485)
!10492 = !DILocation(line: 1130, column: 6, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10415, file: !3, line: 1130, column: 6)
!10494 = !DILocation(line: 1130, column: 15, scope: !10493)
!10495 = !DILocation(line: 1130, column: 6, scope: !10415)
!10496 = !DILocation(line: 1132, column: 4, scope: !10497)
!10497 = distinct !DILexicalBlock(scope: !10493, file: !3, line: 1130, column: 33)
!10498 = !DILocation(line: 1131, column: 3, scope: !10497)
!10499 = !DILocation(line: 1134, column: 4, scope: !10497)
!10500 = !DILocation(line: 1134, column: 10, scope: !10497)
!10501 = !DILocation(line: 1134, column: 19, scope: !10497)
!10502 = !DILocation(line: 1133, column: 3, scope: !10497)
!10503 = !DILocation(line: 1135, column: 2, scope: !10497)
!10504 = !DILocation(line: 1136, column: 6, scope: !10505)
!10505 = distinct !DILexicalBlock(scope: !10415, file: !3, line: 1136, column: 6)
!10506 = !DILocation(line: 1136, column: 15, scope: !10505)
!10507 = !DILocation(line: 1136, column: 6, scope: !10415)
!10508 = !DILocation(line: 1138, column: 4, scope: !10509)
!10509 = distinct !DILexicalBlock(scope: !10505, file: !3, line: 1136, column: 34)
!10510 = !DILocation(line: 1137, column: 3, scope: !10509)
!10511 = !DILocation(line: 1140, column: 4, scope: !10509)
!10512 = !DILocation(line: 1140, column: 10, scope: !10509)
!10513 = !DILocation(line: 1140, column: 19, scope: !10509)
!10514 = !DILocation(line: 1139, column: 3, scope: !10509)
!10515 = !DILocation(line: 1142, column: 4, scope: !10509)
!10516 = !DILocation(line: 1142, column: 10, scope: !10509)
!10517 = !DILocation(line: 1142, column: 19, scope: !10509)
!10518 = !DILocation(line: 1141, column: 3, scope: !10509)
!10519 = !DILocation(line: 1144, column: 4, scope: !10509)
!10520 = !DILocation(line: 1144, column: 10, scope: !10509)
!10521 = !DILocation(line: 1144, column: 19, scope: !10509)
!10522 = !DILocation(line: 1143, column: 3, scope: !10509)
!10523 = !DILocation(line: 1146, column: 4, scope: !10509)
!10524 = !DILocation(line: 1146, column: 10, scope: !10509)
!10525 = !DILocation(line: 1146, column: 19, scope: !10509)
!10526 = !DILocation(line: 1145, column: 3, scope: !10509)
!10527 = !DILocation(line: 1148, column: 4, scope: !10509)
!10528 = !DILocation(line: 1148, column: 10, scope: !10509)
!10529 = !DILocation(line: 1148, column: 19, scope: !10509)
!10530 = !DILocation(line: 1147, column: 3, scope: !10509)
!10531 = !DILocation(line: 1150, column: 4, scope: !10509)
!10532 = !DILocation(line: 1150, column: 10, scope: !10509)
!10533 = !DILocation(line: 1150, column: 19, scope: !10509)
!10534 = !DILocation(line: 1149, column: 3, scope: !10509)
!10535 = !DILocation(line: 1151, column: 2, scope: !10509)
!10536 = !DILocation(line: 1152, column: 6, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !10415, file: !3, line: 1152, column: 6)
!10538 = !DILocation(line: 1152, column: 15, scope: !10537)
!10539 = !DILocation(line: 1152, column: 6, scope: !10415)
!10540 = !DILocation(line: 1154, column: 4, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10537, file: !3, line: 1152, column: 32)
!10542 = !DILocation(line: 1153, column: 3, scope: !10541)
!10543 = !DILocation(line: 1156, column: 4, scope: !10541)
!10544 = !DILocation(line: 1156, column: 10, scope: !10541)
!10545 = !DILocation(line: 1156, column: 19, scope: !10541)
!10546 = !DILocation(line: 1155, column: 3, scope: !10541)
!10547 = !DILocation(line: 1157, column: 2, scope: !10541)
!10548 = !DILocation(line: 1158, column: 6, scope: !10549)
!10549 = distinct !DILexicalBlock(scope: !10415, file: !3, line: 1158, column: 6)
!10550 = !DILocation(line: 1158, column: 15, scope: !10549)
!10551 = !DILocation(line: 1158, column: 6, scope: !10415)
!10552 = !DILocation(line: 1160, column: 4, scope: !10553)
!10553 = distinct !DILexicalBlock(scope: !10549, file: !3, line: 1158, column: 31)
!10554 = !DILocation(line: 1159, column: 3, scope: !10553)
!10555 = !DILocation(line: 1162, column: 4, scope: !10553)
!10556 = !DILocation(line: 1162, column: 10, scope: !10553)
!10557 = !DILocation(line: 1162, column: 19, scope: !10553)
!10558 = !DILocation(line: 1161, column: 3, scope: !10553)
!10559 = !DILocation(line: 1163, column: 2, scope: !10553)
!10560 = !DILocation(line: 1164, column: 6, scope: !10561)
!10561 = distinct !DILexicalBlock(scope: !10415, file: !3, line: 1164, column: 6)
!10562 = !DILocation(line: 1164, column: 15, scope: !10561)
!10563 = !DILocation(line: 1164, column: 6, scope: !10415)
!10564 = !DILocation(line: 1166, column: 4, scope: !10565)
!10565 = distinct !DILexicalBlock(scope: !10561, file: !3, line: 1164, column: 30)
!10566 = !DILocation(line: 1165, column: 3, scope: !10565)
!10567 = !DILocation(line: 1168, column: 4, scope: !10565)
!10568 = !DILocation(line: 1168, column: 10, scope: !10565)
!10569 = !DILocation(line: 1168, column: 19, scope: !10565)
!10570 = !DILocation(line: 1167, column: 3, scope: !10565)
!10571 = !DILocation(line: 1169, column: 2, scope: !10565)
!10572 = !DILocation(line: 1170, column: 6, scope: !10573)
!10573 = distinct !DILexicalBlock(scope: !10415, file: !3, line: 1170, column: 6)
!10574 = !DILocation(line: 1170, column: 15, scope: !10573)
!10575 = !DILocation(line: 1170, column: 6, scope: !10415)
!10576 = !DILocation(line: 1172, column: 4, scope: !10577)
!10577 = distinct !DILexicalBlock(scope: !10573, file: !3, line: 1170, column: 28)
!10578 = !DILocation(line: 1171, column: 3, scope: !10577)
!10579 = !DILocation(line: 1174, column: 4, scope: !10577)
!10580 = !DILocation(line: 1174, column: 10, scope: !10577)
!10581 = !DILocation(line: 1174, column: 19, scope: !10577)
!10582 = !DILocation(line: 1173, column: 3, scope: !10577)
!10583 = !DILocation(line: 1175, column: 2, scope: !10577)
!10584 = !DILocation(line: 1176, column: 6, scope: !10585)
!10585 = distinct !DILexicalBlock(scope: !10415, file: !3, line: 1176, column: 6)
!10586 = !DILocation(line: 1176, column: 15, scope: !10585)
!10587 = !DILocation(line: 1176, column: 6, scope: !10415)
!10588 = !DILocation(line: 1178, column: 4, scope: !10589)
!10589 = distinct !DILexicalBlock(scope: !10585, file: !3, line: 1176, column: 48)
!10590 = !DILocation(line: 1177, column: 3, scope: !10589)
!10591 = !DILocation(line: 1180, column: 4, scope: !10589)
!10592 = !DILocation(line: 1180, column: 10, scope: !10589)
!10593 = !DILocation(line: 1180, column: 19, scope: !10589)
!10594 = !DILocation(line: 1179, column: 3, scope: !10589)
!10595 = !DILocation(line: 1181, column: 2, scope: !10589)
!10596 = !DILocation(line: 1182, column: 6, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10415, file: !3, line: 1182, column: 6)
!10598 = !DILocation(line: 1182, column: 15, scope: !10597)
!10599 = !DILocation(line: 1182, column: 30, scope: !10597)
!10600 = !DILocation(line: 1182, column: 33, scope: !10597)
!10601 = !DILocation(line: 1182, column: 6, scope: !10415)
!10602 = !DILocation(line: 1183, column: 41, scope: !10603)
!10603 = distinct !DILexicalBlock(scope: !10597, file: !3, line: 1182, column: 65)
!10604 = !DILocation(line: 1183, column: 52, scope: !10603)
!10605 = !DILocation(line: 1183, column: 61, scope: !10603)
!10606 = !DILocation(line: 1183, column: 9, scope: !10603)
!10607 = !DILocation(line: 1183, column: 7, scope: !10603)
!10608 = !DILocation(line: 1184, column: 7, scope: !10609)
!10609 = distinct !DILexicalBlock(scope: !10603, file: !3, line: 1184, column: 7)
!10610 = !DILocation(line: 1184, column: 7, scope: !10603)
!10611 = !DILocation(line: 1185, column: 11, scope: !10609)
!10612 = !DILocation(line: 1185, column: 4, scope: !10609)
!10613 = !DILocation(line: 1187, column: 57, scope: !10603)
!10614 = !DILocation(line: 1187, column: 3, scope: !10603)
!10615 = !DILocation(line: 1188, column: 53, scope: !10603)
!10616 = !DILocation(line: 1189, column: 6, scope: !10603)
!10617 = !DILocation(line: 1188, column: 3, scope: !10603)
!10618 = !DILocation(line: 1190, column: 62, scope: !10603)
!10619 = !DILocation(line: 1190, column: 3, scope: !10603)
!10620 = !DILocation(line: 1192, column: 58, scope: !10603)
!10621 = !DILocation(line: 1193, column: 6, scope: !10603)
!10622 = !DILocation(line: 1192, column: 3, scope: !10603)
!10623 = !DILocation(line: 1195, column: 9, scope: !10603)
!10624 = !DILocation(line: 1194, column: 3, scope: !10603)
!10625 = !DILocation(line: 1196, column: 58, scope: !10603)
!10626 = !DILocation(line: 1197, column: 6, scope: !10603)
!10627 = !DILocation(line: 1196, column: 3, scope: !10603)
!10628 = !DILocation(line: 1198, column: 2, scope: !10603)
!10629 = !DILocation(line: 1200, column: 9, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10415, file: !3, line: 1200, column: 2)
!10631 = !DILocation(line: 1200, column: 7, scope: !10630)
!10632 = !DILocation(line: 1200, column: 14, scope: !10633)
!10633 = distinct !DILexicalBlock(scope: !10630, file: !3, line: 1200, column: 2)
!10634 = !DILocation(line: 1200, column: 16, scope: !10633)
!10635 = !DILocation(line: 1200, column: 2, scope: !10630)
!10636 = !DILocation(line: 1201, column: 40, scope: !10633)
!10637 = !DILocation(line: 1201, column: 51, scope: !10633)
!10638 = !DILocation(line: 1201, column: 57, scope: !10633)
!10639 = !DILocation(line: 1202, column: 13, scope: !10633)
!10640 = !DILocation(line: 1202, column: 22, scope: !10633)
!10641 = !DILocation(line: 1202, column: 34, scope: !10633)
!10642 = !DILocation(line: 1201, column: 3, scope: !10633)
!10643 = !DILocation(line: 1200, column: 52, scope: !10633)
!10644 = !DILocation(line: 1200, column: 2, scope: !10633)
!10645 = distinct !{!10645, !10635, !10646}
!10646 = !DILocation(line: 1202, column: 36, scope: !10630)
!10647 = !DILocation(line: 1204, column: 6, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10415, file: !3, line: 1204, column: 6)
!10649 = !DILocation(line: 1204, column: 17, scope: !10648)
!10650 = !DILocation(line: 1204, column: 29, scope: !10648)
!10651 = !DILocation(line: 1204, column: 6, scope: !10415)
!10652 = !DILocation(line: 1205, column: 53, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10648, file: !3, line: 1204, column: 49)
!10654 = !DILocation(line: 1205, column: 3, scope: !10653)
!10655 = !DILocation(line: 1206, column: 49, scope: !10653)
!10656 = !DILocation(line: 1206, column: 3, scope: !10653)
!10657 = !DILocation(line: 1207, column: 2, scope: !10653)
!10658 = !DILocation(line: 1209, column: 38, scope: !10415)
!10659 = !DILocation(line: 1209, column: 49, scope: !10415)
!10660 = !DILocation(line: 1209, column: 55, scope: !10415)
!10661 = !DILocation(line: 1209, column: 9, scope: !10415)
!10662 = !DILocation(line: 1209, column: 2, scope: !10415)
!10663 = !DILocation(line: 1210, column: 1, scope: !10415)
!10664 = distinct !DISubprogram(name: "mlxsw_pci_aqs_init", scope: !3, file: !3, line: 952, type: !10380, scopeLine: 953, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!10665 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !10664, file: !3, line: 952, type: !7722)
!10666 = !DILocation(line: 952, column: 49, scope: !10664)
!10667 = !DILocalVariable(name: "mbox", arg: 2, scope: !10664, file: !3, line: 952, type: !1093)
!10668 = !DILocation(line: 952, column: 66, scope: !10664)
!10669 = !DILocalVariable(name: "pdev", scope: !10664, file: !3, line: 954, type: !7726)
!10670 = !DILocation(line: 954, column: 18, scope: !10664)
!10671 = !DILocation(line: 954, column: 25, scope: !10664)
!10672 = !DILocation(line: 954, column: 36, scope: !10664)
!10673 = !DILocalVariable(name: "num_sdqs", scope: !10664, file: !3, line: 955, type: !849)
!10674 = !DILocation(line: 955, column: 5, scope: !10664)
!10675 = !DILocalVariable(name: "sdq_log2sz", scope: !10664, file: !3, line: 956, type: !849)
!10676 = !DILocation(line: 956, column: 5, scope: !10664)
!10677 = !DILocalVariable(name: "num_rdqs", scope: !10664, file: !3, line: 957, type: !849)
!10678 = !DILocation(line: 957, column: 5, scope: !10664)
!10679 = !DILocalVariable(name: "rdq_log2sz", scope: !10664, file: !3, line: 958, type: !849)
!10680 = !DILocation(line: 958, column: 5, scope: !10664)
!10681 = !DILocalVariable(name: "num_cqs", scope: !10664, file: !3, line: 959, type: !849)
!10682 = !DILocation(line: 959, column: 5, scope: !10664)
!10683 = !DILocalVariable(name: "cq_log2sz", scope: !10664, file: !3, line: 960, type: !849)
!10684 = !DILocation(line: 960, column: 5, scope: !10664)
!10685 = !DILocalVariable(name: "cqv2_log2sz", scope: !10664, file: !3, line: 961, type: !849)
!10686 = !DILocation(line: 961, column: 5, scope: !10664)
!10687 = !DILocalVariable(name: "num_eqs", scope: !10664, file: !3, line: 962, type: !849)
!10688 = !DILocation(line: 962, column: 5, scope: !10664)
!10689 = !DILocalVariable(name: "eq_log2sz", scope: !10664, file: !3, line: 963, type: !849)
!10690 = !DILocation(line: 963, column: 5, scope: !10664)
!10691 = !DILocalVariable(name: "err", scope: !10664, file: !3, line: 964, type: !32)
!10692 = !DILocation(line: 964, column: 6, scope: !10664)
!10693 = !DILocation(line: 966, column: 22, scope: !10664)
!10694 = !DILocation(line: 966, column: 2, scope: !10664)
!10695 = !DILocation(line: 967, column: 31, scope: !10664)
!10696 = !DILocation(line: 967, column: 42, scope: !10664)
!10697 = !DILocation(line: 967, column: 48, scope: !10664)
!10698 = !DILocation(line: 967, column: 8, scope: !10664)
!10699 = !DILocation(line: 967, column: 6, scope: !10664)
!10700 = !DILocation(line: 968, column: 6, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10664, file: !3, line: 968, column: 6)
!10702 = !DILocation(line: 968, column: 6, scope: !10664)
!10703 = !DILocation(line: 969, column: 10, scope: !10701)
!10704 = !DILocation(line: 969, column: 3, scope: !10701)
!10705 = !DILocation(line: 971, column: 58, scope: !10664)
!10706 = !DILocation(line: 971, column: 13, scope: !10664)
!10707 = !DILocation(line: 971, column: 11, scope: !10664)
!10708 = !DILocation(line: 972, column: 62, scope: !10664)
!10709 = !DILocation(line: 972, column: 15, scope: !10664)
!10710 = !DILocation(line: 972, column: 13, scope: !10664)
!10711 = !DILocation(line: 973, column: 58, scope: !10664)
!10712 = !DILocation(line: 973, column: 13, scope: !10664)
!10713 = !DILocation(line: 973, column: 11, scope: !10664)
!10714 = !DILocation(line: 974, column: 62, scope: !10664)
!10715 = !DILocation(line: 974, column: 15, scope: !10664)
!10716 = !DILocation(line: 974, column: 13, scope: !10664)
!10717 = !DILocation(line: 975, column: 56, scope: !10664)
!10718 = !DILocation(line: 975, column: 12, scope: !10664)
!10719 = !DILocation(line: 975, column: 10, scope: !10664)
!10720 = !DILocation(line: 976, column: 60, scope: !10664)
!10721 = !DILocation(line: 976, column: 14, scope: !10664)
!10722 = !DILocation(line: 976, column: 12, scope: !10664)
!10723 = !DILocation(line: 977, column: 64, scope: !10664)
!10724 = !DILocation(line: 977, column: 16, scope: !10664)
!10725 = !DILocation(line: 977, column: 14, scope: !10664)
!10726 = !DILocation(line: 978, column: 56, scope: !10664)
!10727 = !DILocation(line: 978, column: 12, scope: !10664)
!10728 = !DILocation(line: 978, column: 10, scope: !10664)
!10729 = !DILocation(line: 979, column: 60, scope: !10664)
!10730 = !DILocation(line: 979, column: 14, scope: !10664)
!10731 = !DILocation(line: 979, column: 12, scope: !10664)
!10732 = !DILocation(line: 981, column: 6, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !10664, file: !3, line: 981, column: 6)
!10734 = !DILocation(line: 981, column: 17, scope: !10733)
!10735 = !DILocation(line: 981, column: 15, scope: !10733)
!10736 = !DILocation(line: 981, column: 28, scope: !10733)
!10737 = !DILocation(line: 981, column: 26, scope: !10733)
!10738 = !DILocation(line: 981, column: 36, scope: !10733)
!10739 = !DILocation(line: 982, column: 6, scope: !10733)
!10740 = !DILocation(line: 982, column: 15, scope: !10733)
!10741 = !DILocation(line: 982, column: 36, scope: !10733)
!10742 = !DILocation(line: 983, column: 6, scope: !10733)
!10743 = !DILocation(line: 983, column: 14, scope: !10733)
!10744 = !DILocation(line: 983, column: 34, scope: !10733)
!10745 = !DILocation(line: 983, column: 37, scope: !10733)
!10746 = !DILocation(line: 983, column: 45, scope: !10733)
!10747 = !DILocation(line: 981, column: 6, scope: !10664)
!10748 = !DILocation(line: 984, column: 3, scope: !10749)
!10749 = distinct !DILexicalBlock(scope: !10733, file: !3, line: 983, column: 69)
!10750 = !DILocation(line: 985, column: 3, scope: !10749)
!10751 = !DILocation(line: 988, column: 12, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10664, file: !3, line: 988, column: 6)
!10753 = !DILocation(line: 988, column: 9, scope: !10752)
!10754 = !DILocation(line: 988, column: 23, scope: !10752)
!10755 = !DILocation(line: 988, column: 47, scope: !10752)
!10756 = !DILocation(line: 989, column: 12, scope: !10752)
!10757 = !DILocation(line: 989, column: 9, scope: !10752)
!10758 = !DILocation(line: 989, column: 23, scope: !10752)
!10759 = !DILocation(line: 989, column: 47, scope: !10752)
!10760 = !DILocation(line: 990, column: 12, scope: !10752)
!10761 = !DILocation(line: 990, column: 9, scope: !10752)
!10762 = !DILocation(line: 990, column: 22, scope: !10752)
!10763 = !DILocation(line: 990, column: 48, scope: !10752)
!10764 = !DILocation(line: 991, column: 7, scope: !10752)
!10765 = !DILocation(line: 991, column: 18, scope: !10752)
!10766 = !DILocation(line: 991, column: 30, scope: !10752)
!10767 = !DILocation(line: 991, column: 50, scope: !10752)
!10768 = !DILocation(line: 992, column: 13, scope: !10752)
!10769 = !DILocation(line: 992, column: 10, scope: !10752)
!10770 = !DILocation(line: 992, column: 25, scope: !10752)
!10771 = !DILocation(line: 992, column: 51, scope: !10752)
!10772 = !DILocation(line: 993, column: 12, scope: !10752)
!10773 = !DILocation(line: 993, column: 9, scope: !10752)
!10774 = !DILocation(line: 993, column: 22, scope: !10752)
!10775 = !DILocation(line: 988, column: 6, scope: !10664)
!10776 = !DILocation(line: 994, column: 3, scope: !10777)
!10777 = distinct !DILexicalBlock(scope: !10752, file: !3, line: 993, column: 47)
!10778 = !DILocation(line: 995, column: 3, scope: !10777)
!10779 = !DILocation(line: 998, column: 27, scope: !10664)
!10780 = !DILocation(line: 998, column: 2, scope: !10664)
!10781 = !DILocation(line: 998, column: 13, scope: !10664)
!10782 = !DILocation(line: 998, column: 25, scope: !10664)
!10783 = !DILocation(line: 1000, column: 35, scope: !10664)
!10784 = !DILocation(line: 1000, column: 46, scope: !10664)
!10785 = !DILocation(line: 1001, column: 7, scope: !10664)
!10786 = !DILocation(line: 1000, column: 8, scope: !10664)
!10787 = !DILocation(line: 1000, column: 6, scope: !10664)
!10788 = !DILocation(line: 1002, column: 6, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10664, file: !3, line: 1002, column: 6)
!10790 = !DILocation(line: 1002, column: 6, scope: !10664)
!10791 = !DILocation(line: 1003, column: 3, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10789, file: !3, line: 1002, column: 11)
!10793 = !DILocation(line: 1004, column: 10, scope: !10792)
!10794 = !DILocation(line: 1004, column: 3, scope: !10792)
!10795 = !DILocation(line: 1007, column: 35, scope: !10664)
!10796 = !DILocation(line: 1007, column: 46, scope: !10664)
!10797 = !DILocation(line: 1008, column: 7, scope: !10664)
!10798 = !DILocation(line: 1007, column: 8, scope: !10664)
!10799 = !DILocation(line: 1007, column: 6, scope: !10664)
!10800 = !DILocation(line: 1009, column: 6, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10664, file: !3, line: 1009, column: 6)
!10802 = !DILocation(line: 1009, column: 6, scope: !10664)
!10803 = !DILocation(line: 1010, column: 3, scope: !10804)
!10804 = distinct !DILexicalBlock(scope: !10801, file: !3, line: 1009, column: 11)
!10805 = !DILocation(line: 1011, column: 3, scope: !10804)
!10806 = !DILocation(line: 1014, column: 35, scope: !10664)
!10807 = !DILocation(line: 1014, column: 46, scope: !10664)
!10808 = !DILocation(line: 1015, column: 7, scope: !10664)
!10809 = !DILocation(line: 1014, column: 8, scope: !10664)
!10810 = !DILocation(line: 1014, column: 6, scope: !10664)
!10811 = !DILocation(line: 1016, column: 6, scope: !10812)
!10812 = distinct !DILexicalBlock(scope: !10664, file: !3, line: 1016, column: 6)
!10813 = !DILocation(line: 1016, column: 6, scope: !10664)
!10814 = !DILocation(line: 1017, column: 3, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10812, file: !3, line: 1016, column: 11)
!10816 = !DILocation(line: 1018, column: 3, scope: !10815)
!10817 = !DILocation(line: 1021, column: 35, scope: !10664)
!10818 = !DILocation(line: 1021, column: 46, scope: !10664)
!10819 = !DILocation(line: 1022, column: 7, scope: !10664)
!10820 = !DILocation(line: 1021, column: 8, scope: !10664)
!10821 = !DILocation(line: 1021, column: 6, scope: !10664)
!10822 = !DILocation(line: 1023, column: 6, scope: !10823)
!10823 = distinct !DILexicalBlock(scope: !10664, file: !3, line: 1023, column: 6)
!10824 = !DILocation(line: 1023, column: 6, scope: !10664)
!10825 = !DILocation(line: 1024, column: 3, scope: !10826)
!10826 = distinct !DILexicalBlock(scope: !10823, file: !3, line: 1023, column: 11)
!10827 = !DILocation(line: 1025, column: 3, scope: !10826)
!10828 = !DILocation(line: 1029, column: 2, scope: !10664)
!10829 = !DILocation(line: 1029, column: 13, scope: !10664)
!10830 = !DILocation(line: 1029, column: 17, scope: !10664)
!10831 = !DILocation(line: 1029, column: 24, scope: !10664)
!10832 = !DILocation(line: 1030, column: 2, scope: !10664)
!10833 = !DILabel(scope: !10664, name: "err_rdqs_init", file: !3, line: 1032)
!10834 = !DILocation(line: 1032, column: 1, scope: !10664)
!10835 = !DILocation(line: 1033, column: 29, scope: !10664)
!10836 = !DILocation(line: 1033, column: 2, scope: !10664)
!10837 = !DILabel(scope: !10664, name: "err_sdqs_init", file: !3, line: 1034)
!10838 = !DILocation(line: 1034, column: 1, scope: !10664)
!10839 = !DILocation(line: 1035, column: 29, scope: !10664)
!10840 = !DILocation(line: 1035, column: 2, scope: !10664)
!10841 = !DILabel(scope: !10664, name: "err_cqs_init", file: !3, line: 1036)
!10842 = !DILocation(line: 1036, column: 1, scope: !10664)
!10843 = !DILocation(line: 1037, column: 29, scope: !10664)
!10844 = !DILocation(line: 1037, column: 2, scope: !10664)
!10845 = !DILocation(line: 1038, column: 9, scope: !10664)
!10846 = !DILocation(line: 1038, column: 2, scope: !10664)
!10847 = !DILocation(line: 1039, column: 1, scope: !10664)
!10848 = distinct !DISubprogram(name: "request_irq", scope: !3067, file: !3067, line: 157, type: !10849, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!10849 = !DISubroutineType(types: !10850)
!10850 = !{!32, !7, !10851, !367, !347, !646}
!10851 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !3067, line: 92, baseType: !10852)
!10852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10853, size: 64)
!10853 = !DISubroutineType(types: !10854)
!10854 = !{!10855, !32, !646}
!10855 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !7645, line: 17, baseType: !7644)
!10856 = !DILocalVariable(name: "irq", arg: 1, scope: !10848, file: !3067, line: 157, type: !7)
!10857 = !DILocation(line: 157, column: 26, scope: !10848)
!10858 = !DILocalVariable(name: "handler", arg: 2, scope: !10848, file: !3067, line: 157, type: !10851)
!10859 = !DILocation(line: 157, column: 45, scope: !10848)
!10860 = !DILocalVariable(name: "flags", arg: 3, scope: !10848, file: !3067, line: 157, type: !367)
!10861 = !DILocation(line: 157, column: 68, scope: !10848)
!10862 = !DILocalVariable(name: "name", arg: 4, scope: !10848, file: !3067, line: 158, type: !347)
!10863 = !DILocation(line: 158, column: 18, scope: !10848)
!10864 = !DILocalVariable(name: "dev", arg: 5, scope: !10848, file: !3067, line: 158, type: !646)
!10865 = !DILocation(line: 158, column: 30, scope: !10848)
!10866 = !DILocation(line: 160, column: 30, scope: !10848)
!10867 = !DILocation(line: 160, column: 35, scope: !10848)
!10868 = !DILocation(line: 160, column: 50, scope: !10848)
!10869 = !DILocation(line: 160, column: 57, scope: !10848)
!10870 = !DILocation(line: 160, column: 63, scope: !10848)
!10871 = !DILocation(line: 160, column: 9, scope: !10848)
!10872 = !DILocation(line: 160, column: 2, scope: !10848)
!10873 = distinct !DISubprogram(name: "mlxsw_pci_eq_irq_handler", scope: !3, file: !3, line: 1299, type: !10853, scopeLine: 1300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!10874 = !DILocalVariable(name: "irq", arg: 1, scope: !10873, file: !3, line: 1299, type: !32)
!10875 = !DILocation(line: 1299, column: 49, scope: !10873)
!10876 = !DILocalVariable(name: "dev_id", arg: 2, scope: !10873, file: !3, line: 1299, type: !646)
!10877 = !DILocation(line: 1299, column: 60, scope: !10873)
!10878 = !DILocalVariable(name: "mlxsw_pci", scope: !10873, file: !3, line: 1301, type: !7722)
!10879 = !DILocation(line: 1301, column: 20, scope: !10873)
!10880 = !DILocation(line: 1301, column: 32, scope: !10873)
!10881 = !DILocalVariable(name: "q", scope: !10873, file: !3, line: 1302, type: !7669)
!10882 = !DILocation(line: 1302, column: 26, scope: !10873)
!10883 = !DILocalVariable(name: "i", scope: !10873, file: !3, line: 1303, type: !32)
!10884 = !DILocation(line: 1303, column: 6, scope: !10873)
!10885 = !DILocation(line: 1305, column: 9, scope: !10886)
!10886 = distinct !DILexicalBlock(scope: !10873, file: !3, line: 1305, column: 2)
!10887 = !DILocation(line: 1305, column: 7, scope: !10886)
!10888 = !DILocation(line: 1305, column: 14, scope: !10889)
!10889 = distinct !DILexicalBlock(scope: !10886, file: !3, line: 1305, column: 2)
!10890 = !DILocation(line: 1305, column: 16, scope: !10889)
!10891 = !DILocation(line: 1305, column: 2, scope: !10886)
!10892 = !DILocation(line: 1306, column: 24, scope: !10893)
!10893 = distinct !DILexicalBlock(scope: !10889, file: !3, line: 1305, column: 44)
!10894 = !DILocation(line: 1306, column: 35, scope: !10893)
!10895 = !DILocation(line: 1306, column: 7, scope: !10893)
!10896 = !DILocation(line: 1306, column: 5, scope: !10893)
!10897 = !DILocation(line: 1307, column: 36, scope: !10893)
!10898 = !DILocation(line: 1307, column: 3, scope: !10893)
!10899 = !DILocation(line: 1308, column: 2, scope: !10893)
!10900 = !DILocation(line: 1305, column: 40, scope: !10889)
!10901 = !DILocation(line: 1305, column: 2, scope: !10889)
!10902 = distinct !{!10902, !10891, !10903}
!10903 = !DILocation(line: 1308, column: 2, scope: !10886)
!10904 = !DILocation(line: 1309, column: 2, scope: !10873)
!10905 = distinct !DISubprogram(name: "mlxsw_pci_aqs_fini", scope: !3, file: !3, line: 1041, type: !9100, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!10906 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !10905, file: !3, line: 1041, type: !7722)
!10907 = !DILocation(line: 1041, column: 50, scope: !10905)
!10908 = !DILocation(line: 1043, column: 2, scope: !10905)
!10909 = !DILocation(line: 1043, column: 13, scope: !10905)
!10910 = !DILocation(line: 1043, column: 17, scope: !10905)
!10911 = !DILocation(line: 1043, column: 24, scope: !10905)
!10912 = !DILocation(line: 1044, column: 29, scope: !10905)
!10913 = !DILocation(line: 1044, column: 2, scope: !10905)
!10914 = !DILocation(line: 1045, column: 29, scope: !10905)
!10915 = !DILocation(line: 1045, column: 2, scope: !10905)
!10916 = !DILocation(line: 1046, column: 29, scope: !10905)
!10917 = !DILocation(line: 1046, column: 2, scope: !10905)
!10918 = !DILocation(line: 1047, column: 29, scope: !10905)
!10919 = !DILocation(line: 1047, column: 2, scope: !10905)
!10920 = !DILocation(line: 1048, column: 1, scope: !10905)
!10921 = distinct !DISubprogram(name: "mlxsw_pci_fw_area_fini", scope: !3, file: !3, line: 1283, type: !9100, scopeLine: 1284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!10922 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !10921, file: !3, line: 1283, type: !7722)
!10923 = !DILocation(line: 1283, column: 54, scope: !10921)
!10924 = !DILocalVariable(name: "mem_item", scope: !10921, file: !3, line: 1285, type: !8014)
!10925 = !DILocation(line: 1285, column: 29, scope: !10921)
!10926 = !DILocalVariable(name: "i", scope: !10921, file: !3, line: 1286, type: !32)
!10927 = !DILocation(line: 1286, column: 6, scope: !10921)
!10928 = !DILocation(line: 1288, column: 21, scope: !10921)
!10929 = !DILocation(line: 1288, column: 32, scope: !10921)
!10930 = !DILocation(line: 1288, column: 2, scope: !10921)
!10931 = !DILocation(line: 1290, column: 9, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10921, file: !3, line: 1290, column: 2)
!10933 = !DILocation(line: 1290, column: 7, scope: !10932)
!10934 = !DILocation(line: 1290, column: 14, scope: !10935)
!10935 = distinct !DILexicalBlock(scope: !10932, file: !3, line: 1290, column: 2)
!10936 = !DILocation(line: 1290, column: 18, scope: !10935)
!10937 = !DILocation(line: 1290, column: 29, scope: !10935)
!10938 = !DILocation(line: 1290, column: 37, scope: !10935)
!10939 = !DILocation(line: 1290, column: 16, scope: !10935)
!10940 = !DILocation(line: 1290, column: 2, scope: !10932)
!10941 = !DILocation(line: 1291, column: 15, scope: !10942)
!10942 = distinct !DILexicalBlock(scope: !10935, file: !3, line: 1290, column: 49)
!10943 = !DILocation(line: 1291, column: 26, scope: !10942)
!10944 = !DILocation(line: 1291, column: 34, scope: !10942)
!10945 = !DILocation(line: 1291, column: 40, scope: !10942)
!10946 = !DILocation(line: 1291, column: 12, scope: !10942)
!10947 = !DILocation(line: 1293, column: 23, scope: !10942)
!10948 = !DILocation(line: 1293, column: 34, scope: !10942)
!10949 = !DILocation(line: 1293, column: 40, scope: !10942)
!10950 = !DILocation(line: 1293, column: 50, scope: !10942)
!10951 = !DILocation(line: 1294, column: 9, scope: !10942)
!10952 = !DILocation(line: 1294, column: 19, scope: !10942)
!10953 = !DILocation(line: 1294, column: 24, scope: !10942)
!10954 = !DILocation(line: 1294, column: 34, scope: !10942)
!10955 = !DILocation(line: 1293, column: 3, scope: !10942)
!10956 = !DILocation(line: 1295, column: 2, scope: !10942)
!10957 = !DILocation(line: 1290, column: 45, scope: !10935)
!10958 = !DILocation(line: 1290, column: 2, scope: !10935)
!10959 = distinct !{!10959, !10940, !10960}
!10960 = !DILocation(line: 1295, column: 2, scope: !10932)
!10961 = !DILocation(line: 1296, column: 8, scope: !10921)
!10962 = !DILocation(line: 1296, column: 19, scope: !10921)
!10963 = !DILocation(line: 1296, column: 27, scope: !10921)
!10964 = !DILocation(line: 1296, column: 2, scope: !10921)
!10965 = !DILocation(line: 1297, column: 1, scope: !10921)
!10966 = distinct !DISubprogram(name: "mlxsw_pci_free_irq_vectors", scope: !3, file: !3, line: 1406, type: !9100, scopeLine: 1407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!10967 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !10966, file: !3, line: 1406, type: !7722)
!10968 = !DILocation(line: 1406, column: 58, scope: !10966)
!10969 = !DILocation(line: 1408, column: 23, scope: !10966)
!10970 = !DILocation(line: 1408, column: 34, scope: !10966)
!10971 = !DILocation(line: 1408, column: 2, scope: !10966)
!10972 = !DILocation(line: 1409, column: 1, scope: !10966)
!10973 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_free", scope: !7482, file: !7482, line: 16, type: !10974, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!10974 = !DISubroutineType(types: !10975)
!10975 = !{null, !1093}
!10976 = !DILocalVariable(name: "mbox", arg: 1, scope: !10973, file: !7482, line: 16, type: !1093)
!10977 = !DILocation(line: 16, column: 46, scope: !10973)
!10978 = !DILocation(line: 18, column: 8, scope: !10973)
!10979 = !DILocation(line: 18, column: 2, scope: !10973)
!10980 = !DILocation(line: 19, column: 1, scope: !10973)
!10981 = distinct !DISubprogram(name: "mlxsw_pci_sys_ready_wait", scope: !3, file: !3, line: 1338, type: !10982, scopeLine: 1341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!10982 = !DISubroutineType(types: !10983)
!10983 = !{!32, !7722, !7837, !2571}
!10984 = !DILocation(line: 363, column: 74, scope: !9820, inlinedAt: !10985)
!10985 = distinct !DILocation(line: 1353, column: 18, scope: !10981)
!10986 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !10981, file: !3, line: 1338, type: !7722)
!10987 = !DILocation(line: 1338, column: 55, scope: !10981)
!10988 = !DILocalVariable(name: "id", arg: 2, scope: !10981, file: !3, line: 1339, type: !7837)
!10989 = !DILocation(line: 1339, column: 37, scope: !10981)
!10990 = !DILocalVariable(name: "p_sys_status", arg: 3, scope: !10981, file: !3, line: 1340, type: !2571)
!10991 = !DILocation(line: 1340, column: 14, scope: !10981)
!10992 = !DILocalVariable(name: "end", scope: !10981, file: !3, line: 1342, type: !367)
!10993 = !DILocation(line: 1342, column: 16, scope: !10981)
!10994 = !DILocalVariable(name: "val", scope: !10981, file: !3, line: 1343, type: !1042)
!10995 = !DILocation(line: 1343, column: 6, scope: !10981)
!10996 = !DILocation(line: 1345, column: 6, scope: !10997)
!10997 = distinct !DILexicalBlock(scope: !10981, file: !3, line: 1345, column: 6)
!10998 = !DILocation(line: 1345, column: 10, scope: !10997)
!10999 = !DILocation(line: 1345, column: 17, scope: !10997)
!11000 = !DILocation(line: 1345, column: 6, scope: !10981)
!11001 = !DILocation(line: 1346, column: 3, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !10997, file: !3, line: 1345, column: 53)
!11003 = !DILocation(line: 1347, column: 3, scope: !11002)
!11004 = !DILocation(line: 1351, column: 2, scope: !10981)
!11005 = !DILocation(line: 1353, column: 8, scope: !10981)
!11006 = !DILocation(line: 365, column: 27, scope: !9861, inlinedAt: !10985)
!11007 = !DILocation(line: 365, column: 6, scope: !9861, inlinedAt: !10985)
!11008 = !DILocation(line: 365, column: 6, scope: !9820, inlinedAt: !10985)
!11009 = !DILocation(line: 366, column: 12, scope: !9865, inlinedAt: !10985)
!11010 = !DILocation(line: 366, column: 14, scope: !9865, inlinedAt: !10985)
!11011 = !DILocation(line: 366, column: 7, scope: !9866, inlinedAt: !10985)
!11012 = !DILocation(line: 367, column: 4, scope: !9865, inlinedAt: !10985)
!11013 = !DILocation(line: 368, column: 28, scope: !9866, inlinedAt: !10985)
!11014 = !DILocation(line: 368, column: 10, scope: !9866, inlinedAt: !10985)
!11015 = !DILocation(line: 368, column: 3, scope: !9866, inlinedAt: !10985)
!11016 = !DILocation(line: 370, column: 29, scope: !9874, inlinedAt: !10985)
!11017 = !DILocation(line: 370, column: 10, scope: !9874, inlinedAt: !10985)
!11018 = !DILocation(line: 370, column: 3, scope: !9874, inlinedAt: !10985)
!11019 = !DILocation(line: 372, column: 1, scope: !9820, inlinedAt: !10985)
!11020 = !DILocation(line: 1353, column: 16, scope: !10981)
!11021 = !DILocation(line: 1353, column: 6, scope: !10981)
!11022 = !DILocation(line: 1354, column: 2, scope: !10981)
!11023 = !DILocation(line: 1355, column: 9, scope: !11024)
!11024 = distinct !DILexicalBlock(scope: !10981, file: !3, line: 1354, column: 5)
!11025 = !DILocation(line: 1355, column: 7, scope: !11024)
!11026 = !DILocation(line: 1356, column: 8, scope: !11027)
!11027 = distinct !DILexicalBlock(scope: !11024, file: !3, line: 1356, column: 7)
!11028 = !DILocation(line: 1356, column: 12, scope: !11027)
!11029 = !DILocation(line: 1356, column: 39, scope: !11027)
!11030 = !DILocation(line: 1356, column: 7, scope: !11024)
!11031 = !DILocation(line: 1357, column: 4, scope: !11027)
!11032 = !DILocation(line: 1358, column: 3, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !11024, file: !3, line: 1358, column: 3)
!11034 = !DILocation(line: 1359, column: 2, scope: !11024)
!11035 = !DILocation(line: 1359, column: 11, scope: !10981)
!11036 = distinct !{!11036, !11022, !11037}
!11037 = !DILocation(line: 1359, column: 36, scope: !10981)
!11038 = !DILocation(line: 1361, column: 18, scope: !10981)
!11039 = !DILocation(line: 1361, column: 22, scope: !10981)
!11040 = !DILocation(line: 1361, column: 3, scope: !10981)
!11041 = !DILocation(line: 1361, column: 16, scope: !10981)
!11042 = !DILocation(line: 1363, column: 2, scope: !10981)
!11043 = !DILocation(line: 1364, column: 1, scope: !10981)
!11044 = distinct !DISubprogram(name: "mlxsw_reg_mrsr_pack", scope: !8222, file: !8222, line: 9134, type: !10974, scopeLine: 9135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11045 = !DILocalVariable(name: "payload", arg: 1, scope: !11044, file: !8222, line: 9134, type: !1093)
!11046 = !DILocation(line: 9134, column: 46, scope: !11044)
!11047 = !DILocation(line: 9136, column: 2, scope: !11044)
!11048 = !DILocation(line: 9137, column: 29, scope: !11044)
!11049 = !DILocation(line: 9137, column: 2, scope: !11044)
!11050 = !DILocation(line: 9138, column: 1, scope: !11044)
!11051 = distinct !DISubprogram(name: "___might_sleep", scope: !11052, file: !11052, line: 248, type: !11053, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11052 = !DIFile(filename: "./include/linux/kernel.h", directory: "/home/lizy2001/genbc/linux")
!11053 = !DISubroutineType(types: !11054)
!11054 = !{null, !347, !32, !32}
!11055 = !DILocalVariable(name: "file", arg: 1, scope: !11051, file: !11052, line: 248, type: !347)
!11056 = !DILocation(line: 248, column: 49, scope: !11051)
!11057 = !DILocalVariable(name: "line", arg: 2, scope: !11051, file: !11052, line: 248, type: !32)
!11058 = !DILocation(line: 248, column: 59, scope: !11051)
!11059 = !DILocalVariable(name: "preempt_offset", arg: 3, scope: !11051, file: !11052, line: 249, type: !32)
!11060 = !DILocation(line: 249, column: 12, scope: !11051)
!11061 = !DILocation(line: 249, column: 30, scope: !11051)
!11062 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !9821, file: !9821, line: 308, type: !9822, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11063 = !DILocalVariable(name: "m", arg: 1, scope: !11062, file: !9821, line: 308, type: !4806)
!11064 = !DILocation(line: 308, column: 66, scope: !11062)
!11065 = !DILocation(line: 310, column: 10, scope: !11062)
!11066 = !DILocation(line: 310, column: 12, scope: !11062)
!11067 = !DILocation(line: 310, column: 34, scope: !11062)
!11068 = !DILocation(line: 310, column: 39, scope: !11062)
!11069 = !DILocation(line: 310, column: 2, scope: !11062)
!11070 = distinct !DISubprogram(name: "mlxsw_reg_mrsr_command_set", scope: !8222, file: !8222, line: 9132, type: !11071, scopeLine: 9132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11071 = !DISubroutineType(types: !11072)
!11072 = !{null, !1093, !1042}
!11073 = !DILocalVariable(name: "buf", arg: 1, scope: !11070, file: !8222, line: 9132, type: !1093)
!11074 = !DILocation(line: 9132, column: 1, scope: !11070)
!11075 = !DILocalVariable(name: "val", arg: 2, scope: !11070, file: !8222, line: 9132, type: !1042)
!11076 = distinct !DISubprogram(name: "__mlxsw_item_set32", scope: !8224, file: !8224, line: 127, type: !11077, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11077 = !DISubroutineType(types: !11078)
!11078 = !{null, !1093, !11079, !531, !1042}
!11079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11080, size: 64)
!11080 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8223)
!11081 = !DILocalVariable(name: "buf", arg: 1, scope: !11076, file: !8224, line: 127, type: !1093)
!11082 = !DILocation(line: 127, column: 45, scope: !11076)
!11083 = !DILocalVariable(name: "item", arg: 2, scope: !11076, file: !8224, line: 127, type: !11079)
!11084 = !DILocation(line: 127, column: 75, scope: !11076)
!11085 = !DILocalVariable(name: "index", arg: 3, scope: !11076, file: !8224, line: 128, type: !531)
!11086 = !DILocation(line: 128, column: 26, scope: !11076)
!11087 = !DILocalVariable(name: "val", arg: 4, scope: !11076, file: !8224, line: 128, type: !1042)
!11088 = !DILocation(line: 128, column: 37, scope: !11076)
!11089 = !DILocalVariable(name: "offset", scope: !11076, file: !8224, line: 130, type: !7)
!11090 = !DILocation(line: 130, column: 15, scope: !11076)
!11091 = !DILocation(line: 130, column: 44, scope: !11076)
!11092 = !DILocation(line: 130, column: 50, scope: !11076)
!11093 = !DILocation(line: 130, column: 24, scope: !11076)
!11094 = !DILocalVariable(name: "b", scope: !11076, file: !8224, line: 132, type: !7666)
!11095 = !DILocation(line: 132, column: 10, scope: !11076)
!11096 = !DILocation(line: 132, column: 25, scope: !11076)
!11097 = !DILocation(line: 132, column: 14, scope: !11076)
!11098 = !DILocalVariable(name: "mask", scope: !11076, file: !8224, line: 133, type: !1042)
!11099 = !DILocation(line: 133, column: 6, scope: !11076)
!11100 = !DILocation(line: 133, column: 13, scope: !11076)
!11101 = !DILocation(line: 133, column: 48, scope: !11076)
!11102 = !DILocation(line: 133, column: 54, scope: !11076)
!11103 = !DILocation(line: 133, column: 45, scope: !11076)
!11104 = !DILocalVariable(name: "tmp", scope: !11076, file: !8224, line: 134, type: !1042)
!11105 = !DILocation(line: 134, column: 6, scope: !11076)
!11106 = !DILocation(line: 136, column: 7, scope: !11107)
!11107 = distinct !DILexicalBlock(scope: !11076, file: !8224, line: 136, column: 6)
!11108 = !DILocation(line: 136, column: 13, scope: !11107)
!11109 = !DILocation(line: 136, column: 6, scope: !11076)
!11110 = !DILocation(line: 137, column: 11, scope: !11107)
!11111 = !DILocation(line: 137, column: 17, scope: !11107)
!11112 = !DILocation(line: 137, column: 7, scope: !11107)
!11113 = !DILocation(line: 137, column: 3, scope: !11107)
!11114 = !DILocation(line: 138, column: 9, scope: !11076)
!11115 = !DILocation(line: 138, column: 6, scope: !11076)
!11116 = !DILocation(line: 139, column: 8, scope: !11076)
!11117 = !DILocation(line: 139, column: 6, scope: !11076)
!11118 = !DILocation(line: 140, column: 10, scope: !11076)
!11119 = !DILocation(line: 140, column: 9, scope: !11076)
!11120 = !DILocation(line: 140, column: 6, scope: !11076)
!11121 = !DILocation(line: 141, column: 9, scope: !11076)
!11122 = !DILocation(line: 141, column: 6, scope: !11076)
!11123 = !DILocation(line: 142, column: 14, scope: !11076)
!11124 = !DILocation(line: 142, column: 2, scope: !11076)
!11125 = !DILocation(line: 142, column: 4, scope: !11076)
!11126 = !DILocation(line: 142, column: 12, scope: !11076)
!11127 = !DILocation(line: 143, column: 1, scope: !11076)
!11128 = distinct !DISubprogram(name: "__mlxsw_item_offset", scope: !8224, file: !8224, line: 26, type: !11129, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11129 = !DISubroutineType(types: !11130)
!11130 = !{!7, !11079, !531, !1094}
!11131 = !DILocalVariable(name: "item", arg: 1, scope: !11128, file: !8224, line: 26, type: !11079)
!11132 = !DILocation(line: 26, column: 46, scope: !11128)
!11133 = !DILocalVariable(name: "index", arg: 2, scope: !11128, file: !8224, line: 26, type: !531)
!11134 = !DILocation(line: 26, column: 67, scope: !11128)
!11135 = !DILocalVariable(name: "typesize", arg: 3, scope: !11128, file: !8224, line: 27, type: !1094)
!11136 = !DILocation(line: 27, column: 14, scope: !11128)
!11137 = !DILocation(line: 29, column: 2, scope: !11128)
!11138 = !DILocation(line: 29, column: 2, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11140, file: !8224, line: 29, column: 2)
!11140 = distinct !DILexicalBlock(scope: !11128, file: !8224, line: 29, column: 2)
!11141 = !DILocation(line: 0, scope: !11139)
!11142 = !DILocation(line: 29, column: 2, scope: !11140)
!11143 = !DILocation(line: 29, column: 2, scope: !11144)
!11144 = distinct !DILexicalBlock(scope: !11139, file: !8224, line: 29, column: 2)
!11145 = !DILocation(line: 29, column: 2, scope: !11146)
!11146 = distinct !DILexicalBlock(scope: !11144, file: !8224, line: 29, column: 2)
!11147 = !DILocation(line: 29, column: 2, scope: !11148)
!11148 = distinct !DILexicalBlock(scope: !11144, file: !8224, line: 29, column: 2)
!11149 = !{i32 -2139685676, i32 -2139685647, i32 -2139685601, i32 -2139685543, i32 -2139685489, i32 -2139685435, i32 -2139685380, i32 -2139685349}
!11150 = !DILocation(line: 29, column: 2, scope: !11151)
!11151 = distinct !DILexicalBlock(scope: !11152, file: !8224, line: 29, column: 2)
!11152 = distinct !DILexicalBlock(scope: !11144, file: !8224, line: 29, column: 2)
!11153 = !{i32 -2139684885, i32 -2139684878, i32 -2139684824, i32 -2139684793, i32 -2139684763}
!11154 = !DILocation(line: 29, column: 2, scope: !11152)
!11155 = !DILocation(line: 30, column: 6, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11128, file: !8224, line: 30, column: 6)
!11157 = !DILocation(line: 30, column: 12, scope: !11156)
!11158 = !DILocation(line: 30, column: 21, scope: !11156)
!11159 = !DILocation(line: 30, column: 19, scope: !11156)
!11160 = !DILocation(line: 30, column: 30, scope: !11156)
!11161 = !DILocation(line: 30, column: 35, scope: !11156)
!11162 = !DILocation(line: 31, column: 6, scope: !11156)
!11163 = !DILocation(line: 31, column: 12, scope: !11156)
!11164 = !DILocation(line: 31, column: 19, scope: !11156)
!11165 = !DILocation(line: 31, column: 17, scope: !11156)
!11166 = !DILocation(line: 31, column: 28, scope: !11156)
!11167 = !DILocation(line: 31, column: 33, scope: !11156)
!11168 = !DILocation(line: 32, column: 6, scope: !11156)
!11169 = !DILocation(line: 32, column: 12, scope: !11156)
!11170 = !DILocation(line: 32, column: 29, scope: !11156)
!11171 = !DILocation(line: 32, column: 27, scope: !11156)
!11172 = !DILocation(line: 32, column: 38, scope: !11156)
!11173 = !DILocation(line: 30, column: 6, scope: !11128)
!11174 = !DILocation(line: 33, column: 3, scope: !11175)
!11175 = distinct !DILexicalBlock(scope: !11156, file: !8224, line: 32, column: 44)
!11176 = !DILocation(line: 36, column: 3, scope: !11175)
!11177 = !DILocation(line: 36, column: 3, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !11175, file: !8224, line: 36, column: 3)
!11179 = !DILocation(line: 36, column: 3, scope: !11180)
!11180 = distinct !DILexicalBlock(scope: !11178, file: !8224, line: 36, column: 3)
!11181 = !DILocation(line: 36, column: 3, scope: !11182)
!11182 = distinct !DILexicalBlock(scope: !11178, file: !8224, line: 36, column: 3)
!11183 = !{i32 -2139684254, i32 -2139684225, i32 -2139684179, i32 -2139684121, i32 -2139684067, i32 -2139684013, i32 -2139683958, i32 -2139683927}
!11184 = !DILocation(line: 36, column: 3, scope: !11185)
!11185 = distinct !DILexicalBlock(scope: !11186, file: !8224, line: 36, column: 3)
!11186 = distinct !DILexicalBlock(scope: !11178, file: !8224, line: 36, column: 3)
!11187 = !{i32 -2139683463, i32 -2139683456, i32 -2139683402, i32 -2139683371, i32 -2139683341}
!11188 = !DILocation(line: 36, column: 3, scope: !11186)
!11189 = !DILocation(line: 37, column: 2, scope: !11175)
!11190 = !DILocation(line: 39, column: 11, scope: !11128)
!11191 = !DILocation(line: 39, column: 17, scope: !11128)
!11192 = !DILocation(line: 39, column: 26, scope: !11128)
!11193 = !DILocation(line: 39, column: 32, scope: !11128)
!11194 = !DILocation(line: 39, column: 39, scope: !11128)
!11195 = !DILocation(line: 39, column: 37, scope: !11128)
!11196 = !DILocation(line: 39, column: 24, scope: !11128)
!11197 = !DILocation(line: 39, column: 47, scope: !11128)
!11198 = !DILocation(line: 39, column: 53, scope: !11128)
!11199 = !DILocation(line: 39, column: 45, scope: !11128)
!11200 = !DILocation(line: 39, column: 10, scope: !11128)
!11201 = !DILocation(line: 40, column: 3, scope: !11128)
!11202 = !DILocation(line: 39, column: 69, scope: !11128)
!11203 = !DILocation(line: 39, column: 9, scope: !11128)
!11204 = !DILocation(line: 39, column: 2, scope: !11128)
!11205 = distinct !DISubprogram(name: "__fswab32", scope: !11206, file: !11206, line: 57, type: !11207, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11206 = !DIFile(filename: "./include/uapi/linux/swab.h", directory: "/home/lizy2001/genbc/linux")
!11207 = !DISubroutineType(types: !11208)
!11208 = !{!548, !548}
!11209 = !DILocalVariable(name: "val", arg: 1, scope: !11205, file: !11206, line: 57, type: !548)
!11210 = !DILocation(line: 57, column: 57, scope: !11205)
!11211 = !DILocation(line: 60, column: 23, scope: !11205)
!11212 = !DILocation(line: 60, column: 9, scope: !11205)
!11213 = !DILocation(line: 60, column: 2, scope: !11205)
!11214 = distinct !DISubprogram(name: "__arch_swab32", scope: !11215, file: !11215, line: 8, type: !11207, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11215 = !DIFile(filename: "./arch/x86/include/uapi/asm/swab.h", directory: "/home/lizy2001/genbc/linux")
!11216 = !DILocalVariable(name: "val", arg: 1, scope: !11214, file: !11215, line: 8, type: !548)
!11217 = !DILocation(line: 8, column: 61, scope: !11214)
!11218 = !DILocation(line: 10, column: 38, scope: !11214)
!11219 = !DILocation(line: 10, column: 2, scope: !11214)
!11220 = !{i32 412276}
!11221 = !DILocation(line: 11, column: 9, scope: !11214)
!11222 = !DILocation(line: 11, column: 2, scope: !11214)
!11223 = distinct !DISubprogram(name: "pci_alloc_irq_vectors", scope: !7728, file: !7728, line: 1800, type: !11224, scopeLine: 1802, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11224 = !DISubroutineType(types: !11225)
!11225 = !{!32, !7726, !7, !7, !7}
!11226 = !DILocalVariable(name: "dev", arg: 1, scope: !11223, file: !7728, line: 1800, type: !7726)
!11227 = !DILocation(line: 1800, column: 39, scope: !11223)
!11228 = !DILocalVariable(name: "min_vecs", arg: 2, scope: !11223, file: !7728, line: 1800, type: !7)
!11229 = !DILocation(line: 1800, column: 57, scope: !11223)
!11230 = !DILocalVariable(name: "max_vecs", arg: 3, scope: !11223, file: !7728, line: 1801, type: !7)
!11231 = !DILocation(line: 1801, column: 22, scope: !11223)
!11232 = !DILocalVariable(name: "flags", arg: 4, scope: !11223, file: !7728, line: 1801, type: !7)
!11233 = !DILocation(line: 1801, column: 45, scope: !11223)
!11234 = !DILocation(line: 1803, column: 40, scope: !11223)
!11235 = !DILocation(line: 1803, column: 45, scope: !11223)
!11236 = !DILocation(line: 1803, column: 55, scope: !11223)
!11237 = !DILocation(line: 1803, column: 65, scope: !11223)
!11238 = !DILocation(line: 1803, column: 9, scope: !11223)
!11239 = !DILocation(line: 1803, column: 2, scope: !11223)
!11240 = distinct !DISubprogram(name: "mlxsw_cmd_exec_out", scope: !7482, file: !7482, line: 41, type: !11241, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11241 = !DISubroutineType(types: !11242)
!11242 = !{!32, !8008, !636, !849, !1042, !826, !1093, !1094}
!11243 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !11240, file: !7482, line: 41, type: !8008)
!11244 = !DILocation(line: 41, column: 57, scope: !11240)
!11245 = !DILocalVariable(name: "opcode", arg: 2, scope: !11240, file: !7482, line: 41, type: !636)
!11246 = !DILocation(line: 41, column: 73, scope: !11240)
!11247 = !DILocalVariable(name: "opcode_mod", arg: 3, scope: !11240, file: !7482, line: 42, type: !849)
!11248 = !DILocation(line: 42, column: 13, scope: !11240)
!11249 = !DILocalVariable(name: "in_mod", arg: 4, scope: !11240, file: !7482, line: 42, type: !1042)
!11250 = !DILocation(line: 42, column: 29, scope: !11240)
!11251 = !DILocalVariable(name: "out_mbox_direct", arg: 5, scope: !11240, file: !7482, line: 43, type: !826)
!11252 = !DILocation(line: 43, column: 15, scope: !11240)
!11253 = !DILocalVariable(name: "out_mbox", arg: 6, scope: !11240, file: !7482, line: 44, type: !1093)
!11254 = !DILocation(line: 44, column: 16, scope: !11240)
!11255 = !DILocalVariable(name: "out_mbox_size", arg: 7, scope: !11240, file: !7482, line: 44, type: !1094)
!11256 = !DILocation(line: 44, column: 33, scope: !11240)
!11257 = !DILocation(line: 46, column: 24, scope: !11240)
!11258 = !DILocation(line: 46, column: 36, scope: !11240)
!11259 = !DILocation(line: 46, column: 44, scope: !11240)
!11260 = !DILocation(line: 46, column: 56, scope: !11240)
!11261 = !DILocation(line: 47, column: 10, scope: !11240)
!11262 = !DILocation(line: 48, column: 10, scope: !11240)
!11263 = !DILocation(line: 48, column: 20, scope: !11240)
!11264 = !DILocation(line: 46, column: 9, scope: !11240)
!11265 = !DILocation(line: 46, column: 2, scope: !11240)
!11266 = distinct !DISubprogram(name: "__mlxsw_item_get32", scope: !8224, file: !8224, line: 111, type: !11267, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11267 = !DISubroutineType(types: !11268)
!11268 = !{!1042, !347, !11079, !531}
!11269 = !DILocalVariable(name: "buf", arg: 1, scope: !11266, file: !8224, line: 111, type: !347)
!11270 = !DILocation(line: 111, column: 50, scope: !11266)
!11271 = !DILocalVariable(name: "item", arg: 2, scope: !11266, file: !8224, line: 112, type: !11079)
!11272 = !DILocation(line: 112, column: 35, scope: !11266)
!11273 = !DILocalVariable(name: "index", arg: 3, scope: !11266, file: !8224, line: 113, type: !531)
!11274 = !DILocation(line: 113, column: 25, scope: !11266)
!11275 = !DILocalVariable(name: "offset", scope: !11266, file: !8224, line: 115, type: !7)
!11276 = !DILocation(line: 115, column: 15, scope: !11266)
!11277 = !DILocation(line: 115, column: 44, scope: !11266)
!11278 = !DILocation(line: 115, column: 50, scope: !11266)
!11279 = !DILocation(line: 115, column: 24, scope: !11266)
!11280 = !DILocalVariable(name: "b", scope: !11266, file: !8224, line: 116, type: !7666)
!11281 = !DILocation(line: 116, column: 10, scope: !11266)
!11282 = !DILocation(line: 116, column: 25, scope: !11266)
!11283 = !DILocation(line: 116, column: 14, scope: !11266)
!11284 = !DILocalVariable(name: "tmp", scope: !11266, file: !8224, line: 117, type: !1042)
!11285 = !DILocation(line: 117, column: 6, scope: !11266)
!11286 = !DILocation(line: 119, column: 8, scope: !11266)
!11287 = !DILocation(line: 119, column: 6, scope: !11266)
!11288 = !DILocation(line: 120, column: 10, scope: !11266)
!11289 = !DILocation(line: 120, column: 16, scope: !11266)
!11290 = !DILocation(line: 120, column: 6, scope: !11266)
!11291 = !DILocation(line: 121, column: 9, scope: !11266)
!11292 = !DILocation(line: 121, column: 6, scope: !11266)
!11293 = !DILocation(line: 122, column: 6, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11266, file: !8224, line: 122, column: 6)
!11295 = !DILocation(line: 122, column: 12, scope: !11294)
!11296 = !DILocation(line: 122, column: 6, scope: !11266)
!11297 = !DILocation(line: 123, column: 11, scope: !11294)
!11298 = !DILocation(line: 123, column: 17, scope: !11294)
!11299 = !DILocation(line: 123, column: 7, scope: !11294)
!11300 = !DILocation(line: 123, column: 3, scope: !11294)
!11301 = !DILocation(line: 124, column: 9, scope: !11266)
!11302 = !DILocation(line: 124, column: 2, scope: !11266)
!11303 = distinct !DISubprogram(name: "__mlxsw_item_get64", scope: !8224, file: !8224, line: 145, type: !11304, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11304 = !DISubroutineType(types: !11305)
!11305 = !{!386, !347, !11079, !531}
!11306 = !DILocalVariable(name: "buf", arg: 1, scope: !11303, file: !8224, line: 145, type: !347)
!11307 = !DILocation(line: 145, column: 50, scope: !11303)
!11308 = !DILocalVariable(name: "item", arg: 2, scope: !11303, file: !8224, line: 146, type: !11079)
!11309 = !DILocation(line: 146, column: 35, scope: !11303)
!11310 = !DILocalVariable(name: "index", arg: 3, scope: !11303, file: !8224, line: 147, type: !531)
!11311 = !DILocation(line: 147, column: 25, scope: !11303)
!11312 = !DILocalVariable(name: "offset", scope: !11303, file: !8224, line: 149, type: !7)
!11313 = !DILocation(line: 149, column: 15, scope: !11303)
!11314 = !DILocation(line: 149, column: 44, scope: !11303)
!11315 = !DILocation(line: 149, column: 50, scope: !11303)
!11316 = !DILocation(line: 149, column: 24, scope: !11303)
!11317 = !DILocalVariable(name: "b", scope: !11303, file: !8224, line: 150, type: !7667)
!11318 = !DILocation(line: 150, column: 10, scope: !11303)
!11319 = !DILocation(line: 150, column: 25, scope: !11303)
!11320 = !DILocation(line: 150, column: 14, scope: !11303)
!11321 = !DILocalVariable(name: "tmp", scope: !11303, file: !8224, line: 151, type: !386)
!11322 = !DILocation(line: 151, column: 6, scope: !11303)
!11323 = !DILocation(line: 153, column: 8, scope: !11303)
!11324 = !DILocation(line: 153, column: 6, scope: !11303)
!11325 = !DILocation(line: 154, column: 10, scope: !11303)
!11326 = !DILocation(line: 154, column: 16, scope: !11303)
!11327 = !DILocation(line: 154, column: 6, scope: !11303)
!11328 = !DILocation(line: 155, column: 9, scope: !11303)
!11329 = !DILocation(line: 155, column: 6, scope: !11303)
!11330 = !DILocation(line: 156, column: 6, scope: !11331)
!11331 = distinct !DILexicalBlock(scope: !11303, file: !8224, line: 156, column: 6)
!11332 = !DILocation(line: 156, column: 12, scope: !11331)
!11333 = !DILocation(line: 156, column: 6, scope: !11303)
!11334 = !DILocation(line: 157, column: 11, scope: !11331)
!11335 = !DILocation(line: 157, column: 17, scope: !11331)
!11336 = !DILocation(line: 157, column: 7, scope: !11331)
!11337 = !DILocation(line: 157, column: 3, scope: !11331)
!11338 = !DILocation(line: 158, column: 9, scope: !11303)
!11339 = !DILocation(line: 158, column: 2, scope: !11303)
!11340 = distinct !DISubprogram(name: "__fswab64", scope: !11206, file: !11206, line: 66, type: !11341, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11341 = !DISubroutineType(types: !11342)
!11342 = !{!388, !388}
!11343 = !DILocalVariable(name: "val", arg: 1, scope: !11340, file: !11206, line: 66, type: !388)
!11344 = !DILocation(line: 66, column: 57, scope: !11340)
!11345 = !DILocation(line: 69, column: 23, scope: !11340)
!11346 = !DILocation(line: 69, column: 9, scope: !11340)
!11347 = !DILocation(line: 69, column: 2, scope: !11340)
!11348 = distinct !DISubprogram(name: "__arch_swab64", scope: !11215, file: !11215, line: 15, type: !11341, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11349 = !DILocalVariable(name: "val", arg: 1, scope: !11348, file: !11215, line: 15, type: !388)
!11350 = !DILocation(line: 15, column: 61, scope: !11348)
!11351 = !DILocation(line: 31, column: 38, scope: !11348)
!11352 = !DILocation(line: 31, column: 2, scope: !11348)
!11353 = !{i32 412680}
!11354 = !DILocation(line: 32, column: 9, scope: !11348)
!11355 = !DILocation(line: 32, column: 2, scope: !11348)
!11356 = distinct !DISubprogram(name: "kcalloc", scope: !7421, file: !7421, line: 601, type: !11357, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11357 = !DISubroutineType(types: !11358)
!11358 = !{!646, !1094, !1094, !1797}
!11359 = !DILocalVariable(name: "n", arg: 1, scope: !11356, file: !7421, line: 601, type: !1094)
!11360 = !DILocation(line: 601, column: 36, scope: !11356)
!11361 = !DILocalVariable(name: "size", arg: 2, scope: !11356, file: !7421, line: 601, type: !1094)
!11362 = !DILocation(line: 601, column: 46, scope: !11356)
!11363 = !DILocalVariable(name: "flags", arg: 3, scope: !11356, file: !7421, line: 601, type: !1797)
!11364 = !DILocation(line: 601, column: 58, scope: !11356)
!11365 = !DILocation(line: 603, column: 23, scope: !11356)
!11366 = !DILocation(line: 603, column: 26, scope: !11356)
!11367 = !DILocation(line: 603, column: 32, scope: !11356)
!11368 = !DILocation(line: 603, column: 38, scope: !11356)
!11369 = !DILocation(line: 603, column: 9, scope: !11356)
!11370 = !DILocation(line: 603, column: 2, scope: !11356)
!11371 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_zero", scope: !7482, file: !7482, line: 21, type: !10974, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11372 = !DILocalVariable(name: "mbox", arg: 1, scope: !11371, file: !7482, line: 21, type: !1093)
!11373 = !DILocation(line: 21, column: 46, scope: !11371)
!11374 = !DILocation(line: 23, column: 9, scope: !11371)
!11375 = !DILocation(line: 23, column: 2, scope: !11371)
!11376 = !DILocation(line: 24, column: 1, scope: !11371)
!11377 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_map_fa_pa_set", scope: !7482, file: !7482, line: 472, type: !11378, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11378 = !DISubroutineType(types: !11379)
!11379 = !{null, !1093, !531, !386}
!11380 = !DILocalVariable(name: "buf", arg: 1, scope: !11377, file: !7482, line: 472, type: !1093)
!11381 = !DILocation(line: 472, column: 1, scope: !11377)
!11382 = !DILocalVariable(name: "index", arg: 2, scope: !11377, file: !7482, line: 472, type: !531)
!11383 = !DILocalVariable(name: "val", arg: 3, scope: !11377, file: !7482, line: 472, type: !386)
!11384 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_map_fa_log2size_set", scope: !7482, file: !7482, line: 478, type: !11385, scopeLine: 478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11385 = !DISubroutineType(types: !11386)
!11386 = !{null, !1093, !531, !1042}
!11387 = !DILocalVariable(name: "buf", arg: 1, scope: !11384, file: !7482, line: 478, type: !1093)
!11388 = !DILocation(line: 478, column: 1, scope: !11384)
!11389 = !DILocalVariable(name: "index", arg: 2, scope: !11384, file: !7482, line: 478, type: !531)
!11390 = !DILocalVariable(name: "val", arg: 3, scope: !11384, file: !7482, line: 478, type: !1042)
!11391 = distinct !DISubprogram(name: "mlxsw_cmd_map_fa", scope: !7482, file: !7482, line: 461, type: !11392, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11392 = !DISubroutineType(types: !11393)
!11393 = !{!32, !8008, !1093, !1042}
!11394 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !11391, file: !7482, line: 461, type: !8008)
!11395 = !DILocation(line: 461, column: 55, scope: !11391)
!11396 = !DILocalVariable(name: "in_mbox", arg: 2, scope: !11391, file: !7482, line: 462, type: !1093)
!11397 = !DILocation(line: 462, column: 14, scope: !11391)
!11398 = !DILocalVariable(name: "vpm_entries_count", arg: 3, scope: !11391, file: !7482, line: 462, type: !1042)
!11399 = !DILocation(line: 462, column: 27, scope: !11391)
!11400 = !DILocation(line: 464, column: 27, scope: !11391)
!11401 = !DILocation(line: 465, column: 9, scope: !11391)
!11402 = !DILocation(line: 466, column: 6, scope: !11391)
!11403 = !DILocation(line: 464, column: 9, scope: !11391)
!11404 = !DILocation(line: 464, column: 2, scope: !11391)
!11405 = distinct !DISubprogram(name: "kmalloc_array", scope: !7421, file: !7421, line: 584, type: !11357, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11406 = !DILocation(line: 445, column: 72, scope: !8738, inlinedAt: !11407)
!11407 = distinct !DILocation(line: 552, column: 10, scope: !8743, inlinedAt: !11408)
!11408 = distinct !DILocation(line: 591, column: 10, scope: !11409)
!11409 = distinct !DILexicalBlock(scope: !11405, file: !7421, line: 590, column: 6)
!11410 = !DILocation(line: 446, column: 9, scope: !8738, inlinedAt: !11407)
!11411 = !DILocation(line: 446, column: 23, scope: !8738, inlinedAt: !11407)
!11412 = !DILocation(line: 448, column: 8, scope: !8738, inlinedAt: !11407)
!11413 = !DILocation(line: 318, column: 67, scope: !8754, inlinedAt: !11414)
!11414 = distinct !DILocation(line: 553, column: 20, scope: !8743, inlinedAt: !11408)
!11415 = !DILocation(line: 346, column: 58, scope: !8760, inlinedAt: !11416)
!11416 = distinct !DILocation(line: 547, column: 11, scope: !8743, inlinedAt: !11408)
!11417 = !DILocation(line: 472, column: 28, scope: !8766, inlinedAt: !11418)
!11418 = distinct !DILocation(line: 481, column: 9, scope: !8771, inlinedAt: !11419)
!11419 = distinct !DILocation(line: 545, column: 11, scope: !8773, inlinedAt: !11408)
!11420 = !DILocation(line: 472, column: 40, scope: !8766, inlinedAt: !11418)
!11421 = !DILocation(line: 472, column: 60, scope: !8766, inlinedAt: !11418)
!11422 = !DILocation(line: 478, column: 51, scope: !8771, inlinedAt: !11419)
!11423 = !DILocation(line: 478, column: 63, scope: !8771, inlinedAt: !11419)
!11424 = !DILocation(line: 480, column: 15, scope: !8771, inlinedAt: !11419)
!11425 = !DILocation(line: 538, column: 45, scope: !8745, inlinedAt: !11408)
!11426 = !DILocation(line: 538, column: 57, scope: !8745, inlinedAt: !11408)
!11427 = !DILocation(line: 542, column: 16, scope: !8743, inlinedAt: !11408)
!11428 = !DILocalVariable(name: "n", arg: 1, scope: !11405, file: !7421, line: 584, type: !1094)
!11429 = !DILocation(line: 584, column: 42, scope: !11405)
!11430 = !DILocalVariable(name: "size", arg: 2, scope: !11405, file: !7421, line: 584, type: !1094)
!11431 = !DILocation(line: 584, column: 52, scope: !11405)
!11432 = !DILocalVariable(name: "flags", arg: 3, scope: !11405, file: !7421, line: 584, type: !1797)
!11433 = !DILocation(line: 584, column: 64, scope: !11405)
!11434 = !DILocalVariable(name: "bytes", scope: !11405, file: !7421, line: 586, type: !1094)
!11435 = !DILocation(line: 586, column: 9, scope: !11405)
!11436 = !DILocalVariable(name: "__a", scope: !11437, file: !7421, line: 588, type: !1094)
!11437 = distinct !DILexicalBlock(scope: !11438, file: !7421, line: 588, column: 6)
!11438 = distinct !DILexicalBlock(scope: !11405, file: !7421, line: 588, column: 6)
!11439 = !DILocation(line: 588, column: 6, scope: !11437)
!11440 = !DILocalVariable(name: "__b", scope: !11437, file: !7421, line: 588, type: !1094)
!11441 = !DILocalVariable(name: "__d", scope: !11437, file: !7421, line: 588, type: !2930)
!11442 = !DILocation(line: 588, column: 6, scope: !11438)
!11443 = !DILocation(line: 588, column: 6, scope: !11405)
!11444 = !DILocation(line: 589, column: 3, scope: !11438)
!11445 = !DILocation(line: 590, column: 27, scope: !11409)
!11446 = !DILocation(line: 590, column: 6, scope: !11409)
!11447 = !DILocation(line: 590, column: 30, scope: !11409)
!11448 = !DILocation(line: 590, column: 54, scope: !11409)
!11449 = !DILocation(line: 590, column: 33, scope: !11409)
!11450 = !DILocation(line: 590, column: 6, scope: !11405)
!11451 = !DILocation(line: 591, column: 18, scope: !11409)
!11452 = !DILocation(line: 591, column: 25, scope: !11409)
!11453 = !DILocation(line: 540, column: 27, scope: !8744, inlinedAt: !11408)
!11454 = !DILocation(line: 540, column: 6, scope: !8744, inlinedAt: !11408)
!11455 = !DILocation(line: 540, column: 6, scope: !8745, inlinedAt: !11408)
!11456 = !DILocation(line: 544, column: 7, scope: !8773, inlinedAt: !11408)
!11457 = !DILocation(line: 544, column: 12, scope: !8773, inlinedAt: !11408)
!11458 = !DILocation(line: 544, column: 7, scope: !8743, inlinedAt: !11408)
!11459 = !DILocation(line: 545, column: 25, scope: !8773, inlinedAt: !11408)
!11460 = !DILocation(line: 545, column: 31, scope: !8773, inlinedAt: !11408)
!11461 = !DILocation(line: 480, column: 33, scope: !8771, inlinedAt: !11419)
!11462 = !DILocation(line: 480, column: 23, scope: !8771, inlinedAt: !11419)
!11463 = !DILocation(line: 481, column: 29, scope: !8771, inlinedAt: !11419)
!11464 = !DILocation(line: 481, column: 35, scope: !8771, inlinedAt: !11419)
!11465 = !DILocation(line: 481, column: 42, scope: !8771, inlinedAt: !11419)
!11466 = !DILocation(line: 474, column: 23, scope: !8766, inlinedAt: !11418)
!11467 = !DILocation(line: 474, column: 29, scope: !8766, inlinedAt: !11418)
!11468 = !DILocation(line: 474, column: 36, scope: !8766, inlinedAt: !11418)
!11469 = !DILocation(line: 474, column: 9, scope: !8766, inlinedAt: !11418)
!11470 = !DILocation(line: 545, column: 4, scope: !8773, inlinedAt: !11408)
!11471 = !DILocation(line: 547, column: 25, scope: !8743, inlinedAt: !11408)
!11472 = !DILocation(line: 348, column: 7, scope: !8817, inlinedAt: !11416)
!11473 = !DILocation(line: 348, column: 6, scope: !8760, inlinedAt: !11416)
!11474 = !DILocation(line: 349, column: 3, scope: !8817, inlinedAt: !11416)
!11475 = !DILocation(line: 351, column: 6, scope: !8821, inlinedAt: !11416)
!11476 = !DILocation(line: 351, column: 11, scope: !8821, inlinedAt: !11416)
!11477 = !DILocation(line: 351, column: 6, scope: !8760, inlinedAt: !11416)
!11478 = !DILocation(line: 352, column: 3, scope: !8821, inlinedAt: !11416)
!11479 = !DILocation(line: 354, column: 32, scope: !8826, inlinedAt: !11416)
!11480 = !DILocation(line: 354, column: 37, scope: !8826, inlinedAt: !11416)
!11481 = !DILocation(line: 354, column: 42, scope: !8826, inlinedAt: !11416)
!11482 = !DILocation(line: 354, column: 45, scope: !8826, inlinedAt: !11416)
!11483 = !DILocation(line: 354, column: 50, scope: !8826, inlinedAt: !11416)
!11484 = !DILocation(line: 354, column: 6, scope: !8760, inlinedAt: !11416)
!11485 = !DILocation(line: 355, column: 3, scope: !8826, inlinedAt: !11416)
!11486 = !DILocation(line: 356, column: 32, scope: !8834, inlinedAt: !11416)
!11487 = !DILocation(line: 356, column: 37, scope: !8834, inlinedAt: !11416)
!11488 = !DILocation(line: 356, column: 43, scope: !8834, inlinedAt: !11416)
!11489 = !DILocation(line: 356, column: 46, scope: !8834, inlinedAt: !11416)
!11490 = !DILocation(line: 356, column: 51, scope: !8834, inlinedAt: !11416)
!11491 = !DILocation(line: 356, column: 6, scope: !8760, inlinedAt: !11416)
!11492 = !DILocation(line: 357, column: 3, scope: !8834, inlinedAt: !11416)
!11493 = !DILocation(line: 358, column: 6, scope: !8842, inlinedAt: !11416)
!11494 = !DILocation(line: 358, column: 11, scope: !8842, inlinedAt: !11416)
!11495 = !DILocation(line: 358, column: 6, scope: !8760, inlinedAt: !11416)
!11496 = !DILocation(line: 358, column: 26, scope: !8842, inlinedAt: !11416)
!11497 = !DILocation(line: 359, column: 6, scope: !8847, inlinedAt: !11416)
!11498 = !DILocation(line: 359, column: 11, scope: !8847, inlinedAt: !11416)
!11499 = !DILocation(line: 359, column: 6, scope: !8760, inlinedAt: !11416)
!11500 = !DILocation(line: 359, column: 26, scope: !8847, inlinedAt: !11416)
!11501 = !DILocation(line: 360, column: 6, scope: !8852, inlinedAt: !11416)
!11502 = !DILocation(line: 360, column: 11, scope: !8852, inlinedAt: !11416)
!11503 = !DILocation(line: 360, column: 6, scope: !8760, inlinedAt: !11416)
!11504 = !DILocation(line: 360, column: 26, scope: !8852, inlinedAt: !11416)
!11505 = !DILocation(line: 361, column: 6, scope: !8857, inlinedAt: !11416)
!11506 = !DILocation(line: 361, column: 11, scope: !8857, inlinedAt: !11416)
!11507 = !DILocation(line: 361, column: 6, scope: !8760, inlinedAt: !11416)
!11508 = !DILocation(line: 361, column: 26, scope: !8857, inlinedAt: !11416)
!11509 = !DILocation(line: 362, column: 6, scope: !8862, inlinedAt: !11416)
!11510 = !DILocation(line: 362, column: 11, scope: !8862, inlinedAt: !11416)
!11511 = !DILocation(line: 362, column: 6, scope: !8760, inlinedAt: !11416)
!11512 = !DILocation(line: 362, column: 26, scope: !8862, inlinedAt: !11416)
!11513 = !DILocation(line: 363, column: 6, scope: !8867, inlinedAt: !11416)
!11514 = !DILocation(line: 363, column: 11, scope: !8867, inlinedAt: !11416)
!11515 = !DILocation(line: 363, column: 6, scope: !8760, inlinedAt: !11416)
!11516 = !DILocation(line: 363, column: 26, scope: !8867, inlinedAt: !11416)
!11517 = !DILocation(line: 364, column: 6, scope: !8872, inlinedAt: !11416)
!11518 = !DILocation(line: 364, column: 11, scope: !8872, inlinedAt: !11416)
!11519 = !DILocation(line: 364, column: 6, scope: !8760, inlinedAt: !11416)
!11520 = !DILocation(line: 364, column: 26, scope: !8872, inlinedAt: !11416)
!11521 = !DILocation(line: 365, column: 6, scope: !8877, inlinedAt: !11416)
!11522 = !DILocation(line: 365, column: 11, scope: !8877, inlinedAt: !11416)
!11523 = !DILocation(line: 365, column: 6, scope: !8760, inlinedAt: !11416)
!11524 = !DILocation(line: 365, column: 26, scope: !8877, inlinedAt: !11416)
!11525 = !DILocation(line: 366, column: 6, scope: !8882, inlinedAt: !11416)
!11526 = !DILocation(line: 366, column: 11, scope: !8882, inlinedAt: !11416)
!11527 = !DILocation(line: 366, column: 6, scope: !8760, inlinedAt: !11416)
!11528 = !DILocation(line: 366, column: 26, scope: !8882, inlinedAt: !11416)
!11529 = !DILocation(line: 367, column: 6, scope: !8887, inlinedAt: !11416)
!11530 = !DILocation(line: 367, column: 11, scope: !8887, inlinedAt: !11416)
!11531 = !DILocation(line: 367, column: 6, scope: !8760, inlinedAt: !11416)
!11532 = !DILocation(line: 367, column: 26, scope: !8887, inlinedAt: !11416)
!11533 = !DILocation(line: 368, column: 6, scope: !8892, inlinedAt: !11416)
!11534 = !DILocation(line: 368, column: 11, scope: !8892, inlinedAt: !11416)
!11535 = !DILocation(line: 368, column: 6, scope: !8760, inlinedAt: !11416)
!11536 = !DILocation(line: 368, column: 26, scope: !8892, inlinedAt: !11416)
!11537 = !DILocation(line: 369, column: 6, scope: !8897, inlinedAt: !11416)
!11538 = !DILocation(line: 369, column: 11, scope: !8897, inlinedAt: !11416)
!11539 = !DILocation(line: 369, column: 6, scope: !8760, inlinedAt: !11416)
!11540 = !DILocation(line: 369, column: 26, scope: !8897, inlinedAt: !11416)
!11541 = !DILocation(line: 370, column: 6, scope: !8902, inlinedAt: !11416)
!11542 = !DILocation(line: 370, column: 11, scope: !8902, inlinedAt: !11416)
!11543 = !DILocation(line: 370, column: 6, scope: !8760, inlinedAt: !11416)
!11544 = !DILocation(line: 370, column: 26, scope: !8902, inlinedAt: !11416)
!11545 = !DILocation(line: 371, column: 6, scope: !8907, inlinedAt: !11416)
!11546 = !DILocation(line: 371, column: 11, scope: !8907, inlinedAt: !11416)
!11547 = !DILocation(line: 371, column: 6, scope: !8760, inlinedAt: !11416)
!11548 = !DILocation(line: 371, column: 26, scope: !8907, inlinedAt: !11416)
!11549 = !DILocation(line: 372, column: 6, scope: !8912, inlinedAt: !11416)
!11550 = !DILocation(line: 372, column: 11, scope: !8912, inlinedAt: !11416)
!11551 = !DILocation(line: 372, column: 6, scope: !8760, inlinedAt: !11416)
!11552 = !DILocation(line: 372, column: 26, scope: !8912, inlinedAt: !11416)
!11553 = !DILocation(line: 373, column: 6, scope: !8917, inlinedAt: !11416)
!11554 = !DILocation(line: 373, column: 11, scope: !8917, inlinedAt: !11416)
!11555 = !DILocation(line: 373, column: 6, scope: !8760, inlinedAt: !11416)
!11556 = !DILocation(line: 373, column: 26, scope: !8917, inlinedAt: !11416)
!11557 = !DILocation(line: 374, column: 6, scope: !8922, inlinedAt: !11416)
!11558 = !DILocation(line: 374, column: 11, scope: !8922, inlinedAt: !11416)
!11559 = !DILocation(line: 374, column: 6, scope: !8760, inlinedAt: !11416)
!11560 = !DILocation(line: 374, column: 26, scope: !8922, inlinedAt: !11416)
!11561 = !DILocation(line: 375, column: 6, scope: !8927, inlinedAt: !11416)
!11562 = !DILocation(line: 375, column: 11, scope: !8927, inlinedAt: !11416)
!11563 = !DILocation(line: 375, column: 6, scope: !8760, inlinedAt: !11416)
!11564 = !DILocation(line: 375, column: 27, scope: !8927, inlinedAt: !11416)
!11565 = !DILocation(line: 376, column: 6, scope: !8932, inlinedAt: !11416)
!11566 = !DILocation(line: 376, column: 11, scope: !8932, inlinedAt: !11416)
!11567 = !DILocation(line: 376, column: 6, scope: !8760, inlinedAt: !11416)
!11568 = !DILocation(line: 376, column: 32, scope: !8932, inlinedAt: !11416)
!11569 = !DILocation(line: 377, column: 6, scope: !8937, inlinedAt: !11416)
!11570 = !DILocation(line: 377, column: 11, scope: !8937, inlinedAt: !11416)
!11571 = !DILocation(line: 377, column: 6, scope: !8760, inlinedAt: !11416)
!11572 = !DILocation(line: 377, column: 32, scope: !8937, inlinedAt: !11416)
!11573 = !DILocation(line: 378, column: 6, scope: !8942, inlinedAt: !11416)
!11574 = !DILocation(line: 378, column: 11, scope: !8942, inlinedAt: !11416)
!11575 = !DILocation(line: 378, column: 6, scope: !8760, inlinedAt: !11416)
!11576 = !DILocation(line: 378, column: 32, scope: !8942, inlinedAt: !11416)
!11577 = !DILocation(line: 379, column: 6, scope: !8947, inlinedAt: !11416)
!11578 = !DILocation(line: 379, column: 11, scope: !8947, inlinedAt: !11416)
!11579 = !DILocation(line: 379, column: 6, scope: !8760, inlinedAt: !11416)
!11580 = !DILocation(line: 379, column: 33, scope: !8947, inlinedAt: !11416)
!11581 = !DILocation(line: 380, column: 6, scope: !8952, inlinedAt: !11416)
!11582 = !DILocation(line: 380, column: 11, scope: !8952, inlinedAt: !11416)
!11583 = !DILocation(line: 380, column: 6, scope: !8760, inlinedAt: !11416)
!11584 = !DILocation(line: 380, column: 33, scope: !8952, inlinedAt: !11416)
!11585 = !DILocation(line: 381, column: 6, scope: !8957, inlinedAt: !11416)
!11586 = !DILocation(line: 381, column: 11, scope: !8957, inlinedAt: !11416)
!11587 = !DILocation(line: 381, column: 6, scope: !8760, inlinedAt: !11416)
!11588 = !DILocation(line: 381, column: 33, scope: !8957, inlinedAt: !11416)
!11589 = !DILocation(line: 382, column: 2, scope: !8962, inlinedAt: !11416)
!11590 = !DILocation(line: 382, column: 2, scope: !8966, inlinedAt: !11416)
!11591 = !DILocation(line: 382, column: 2, scope: !8967, inlinedAt: !11416)
!11592 = !DILocation(line: 386, column: 1, scope: !8760, inlinedAt: !11416)
!11593 = !DILocation(line: 547, column: 9, scope: !8743, inlinedAt: !11408)
!11594 = !DILocation(line: 549, column: 8, scope: !8973, inlinedAt: !11408)
!11595 = !DILocation(line: 549, column: 7, scope: !8743, inlinedAt: !11408)
!11596 = !DILocation(line: 550, column: 4, scope: !8973, inlinedAt: !11408)
!11597 = !DILocation(line: 553, column: 33, scope: !8743, inlinedAt: !11408)
!11598 = !DILocation(line: 325, column: 6, scope: !8978, inlinedAt: !11414)
!11599 = !DILocation(line: 325, column: 6, scope: !8754, inlinedAt: !11414)
!11600 = !DILocation(line: 326, column: 3, scope: !8978, inlinedAt: !11414)
!11601 = !DILocation(line: 332, column: 9, scope: !8754, inlinedAt: !11414)
!11602 = !DILocation(line: 332, column: 15, scope: !8754, inlinedAt: !11414)
!11603 = !DILocation(line: 332, column: 2, scope: !8754, inlinedAt: !11414)
!11604 = !DILocation(line: 336, column: 1, scope: !8754, inlinedAt: !11414)
!11605 = !DILocation(line: 553, column: 5, scope: !8743, inlinedAt: !11408)
!11606 = !DILocation(line: 553, column: 41, scope: !8743, inlinedAt: !11408)
!11607 = !DILocation(line: 554, column: 5, scope: !8743, inlinedAt: !11408)
!11608 = !DILocation(line: 554, column: 12, scope: !8743, inlinedAt: !11408)
!11609 = !DILocation(line: 448, column: 31, scope: !8738, inlinedAt: !11407)
!11610 = !DILocation(line: 448, column: 34, scope: !8738, inlinedAt: !11407)
!11611 = !DILocation(line: 448, column: 14, scope: !8738, inlinedAt: !11407)
!11612 = !DILocation(line: 450, column: 22, scope: !8738, inlinedAt: !11407)
!11613 = !DILocation(line: 450, column: 25, scope: !8738, inlinedAt: !11407)
!11614 = !DILocation(line: 450, column: 30, scope: !8738, inlinedAt: !11407)
!11615 = !DILocation(line: 450, column: 36, scope: !8738, inlinedAt: !11407)
!11616 = !DILocation(line: 450, column: 8, scope: !8738, inlinedAt: !11407)
!11617 = !DILocation(line: 450, column: 6, scope: !8738, inlinedAt: !11407)
!11618 = !DILocation(line: 451, column: 9, scope: !8738, inlinedAt: !11407)
!11619 = !DILocation(line: 552, column: 3, scope: !8743, inlinedAt: !11408)
!11620 = !DILocation(line: 557, column: 19, scope: !8745, inlinedAt: !11408)
!11621 = !DILocation(line: 557, column: 25, scope: !8745, inlinedAt: !11408)
!11622 = !DILocation(line: 557, column: 9, scope: !8745, inlinedAt: !11408)
!11623 = !DILocation(line: 557, column: 2, scope: !8745, inlinedAt: !11408)
!11624 = !DILocation(line: 558, column: 1, scope: !8745, inlinedAt: !11408)
!11625 = !DILocation(line: 591, column: 3, scope: !11409)
!11626 = !DILocation(line: 592, column: 19, scope: !11405)
!11627 = !DILocation(line: 592, column: 26, scope: !11405)
!11628 = !DILocation(line: 592, column: 9, scope: !11405)
!11629 = !DILocation(line: 592, column: 2, scope: !11405)
!11630 = !DILocation(line: 593, column: 1, scope: !11405)
!11631 = distinct !DISubprogram(name: "__must_check_overflow", scope: !11632, file: !11632, line: 52, type: !11633, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11632 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!11633 = !DISubroutineType(types: !11634)
!11634 = !{!826, !826}
!11635 = !DILocalVariable(name: "overflow", arg: 1, scope: !11631, file: !11632, line: 52, type: !826)
!11636 = !DILocation(line: 52, column: 60, scope: !11631)
!11637 = !DILocation(line: 54, column: 9, scope: !11631)
!11638 = !DILocation(line: 54, column: 2, scope: !11631)
!11639 = distinct !DISubprogram(name: "__mlxsw_item_set64", scope: !8224, file: !8224, line: 161, type: !11640, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11640 = !DISubroutineType(types: !11641)
!11641 = !{null, !1093, !11079, !531, !386}
!11642 = !DILocalVariable(name: "buf", arg: 1, scope: !11639, file: !8224, line: 161, type: !1093)
!11643 = !DILocation(line: 161, column: 45, scope: !11639)
!11644 = !DILocalVariable(name: "item", arg: 2, scope: !11639, file: !8224, line: 161, type: !11079)
!11645 = !DILocation(line: 161, column: 75, scope: !11639)
!11646 = !DILocalVariable(name: "index", arg: 3, scope: !11639, file: !8224, line: 162, type: !531)
!11647 = !DILocation(line: 162, column: 26, scope: !11639)
!11648 = !DILocalVariable(name: "val", arg: 4, scope: !11639, file: !8224, line: 162, type: !386)
!11649 = !DILocation(line: 162, column: 37, scope: !11639)
!11650 = !DILocalVariable(name: "offset", scope: !11639, file: !8224, line: 164, type: !7)
!11651 = !DILocation(line: 164, column: 15, scope: !11639)
!11652 = !DILocation(line: 164, column: 44, scope: !11639)
!11653 = !DILocation(line: 164, column: 50, scope: !11639)
!11654 = !DILocation(line: 164, column: 24, scope: !11639)
!11655 = !DILocalVariable(name: "b", scope: !11639, file: !8224, line: 165, type: !7667)
!11656 = !DILocation(line: 165, column: 10, scope: !11639)
!11657 = !DILocation(line: 165, column: 25, scope: !11639)
!11658 = !DILocation(line: 165, column: 14, scope: !11639)
!11659 = !DILocalVariable(name: "mask", scope: !11639, file: !8224, line: 166, type: !386)
!11660 = !DILocation(line: 166, column: 6, scope: !11639)
!11661 = !DILocation(line: 166, column: 13, scope: !11639)
!11662 = !DILocation(line: 166, column: 52, scope: !11639)
!11663 = !DILocation(line: 166, column: 58, scope: !11639)
!11664 = !DILocation(line: 166, column: 49, scope: !11639)
!11665 = !DILocalVariable(name: "tmp", scope: !11639, file: !8224, line: 167, type: !386)
!11666 = !DILocation(line: 167, column: 6, scope: !11639)
!11667 = !DILocation(line: 169, column: 7, scope: !11668)
!11668 = distinct !DILexicalBlock(scope: !11639, file: !8224, line: 169, column: 6)
!11669 = !DILocation(line: 169, column: 13, scope: !11668)
!11670 = !DILocation(line: 169, column: 6, scope: !11639)
!11671 = !DILocation(line: 170, column: 11, scope: !11668)
!11672 = !DILocation(line: 170, column: 17, scope: !11668)
!11673 = !DILocation(line: 170, column: 7, scope: !11668)
!11674 = !DILocation(line: 170, column: 3, scope: !11668)
!11675 = !DILocation(line: 171, column: 9, scope: !11639)
!11676 = !DILocation(line: 171, column: 6, scope: !11639)
!11677 = !DILocation(line: 172, column: 8, scope: !11639)
!11678 = !DILocation(line: 172, column: 6, scope: !11639)
!11679 = !DILocation(line: 173, column: 10, scope: !11639)
!11680 = !DILocation(line: 173, column: 9, scope: !11639)
!11681 = !DILocation(line: 173, column: 6, scope: !11639)
!11682 = !DILocation(line: 174, column: 9, scope: !11639)
!11683 = !DILocation(line: 174, column: 6, scope: !11639)
!11684 = !DILocation(line: 175, column: 14, scope: !11639)
!11685 = !DILocation(line: 175, column: 2, scope: !11639)
!11686 = !DILocation(line: 175, column: 4, scope: !11639)
!11687 = !DILocation(line: 175, column: 12, scope: !11639)
!11688 = !DILocation(line: 176, column: 1, scope: !11639)
!11689 = distinct !DISubprogram(name: "mlxsw_cmd_exec_in", scope: !7482, file: !7482, line: 33, type: !11690, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11690 = !DISubroutineType(types: !11691)
!11691 = !{!32, !8008, !636, !849, !1042, !1093, !1094}
!11692 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !11689, file: !7482, line: 33, type: !8008)
!11693 = !DILocation(line: 33, column: 56, scope: !11689)
!11694 = !DILocalVariable(name: "opcode", arg: 2, scope: !11689, file: !7482, line: 33, type: !636)
!11695 = !DILocation(line: 33, column: 72, scope: !11689)
!11696 = !DILocalVariable(name: "opcode_mod", arg: 3, scope: !11689, file: !7482, line: 34, type: !849)
!11697 = !DILocation(line: 34, column: 12, scope: !11689)
!11698 = !DILocalVariable(name: "in_mod", arg: 4, scope: !11689, file: !7482, line: 34, type: !1042)
!11699 = !DILocation(line: 34, column: 28, scope: !11689)
!11700 = !DILocalVariable(name: "in_mbox", arg: 5, scope: !11689, file: !7482, line: 34, type: !1093)
!11701 = !DILocation(line: 34, column: 42, scope: !11689)
!11702 = !DILocalVariable(name: "in_mbox_size", arg: 6, scope: !11689, file: !7482, line: 35, type: !1094)
!11703 = !DILocation(line: 35, column: 16, scope: !11689)
!11704 = !DILocation(line: 37, column: 24, scope: !11689)
!11705 = !DILocation(line: 37, column: 36, scope: !11689)
!11706 = !DILocation(line: 37, column: 44, scope: !11689)
!11707 = !DILocation(line: 37, column: 56, scope: !11689)
!11708 = !DILocation(line: 38, column: 17, scope: !11689)
!11709 = !DILocation(line: 38, column: 26, scope: !11689)
!11710 = !DILocation(line: 37, column: 9, scope: !11689)
!11711 = !DILocation(line: 37, column: 2, scope: !11689)
!11712 = distinct !DISubprogram(name: "mlxsw_cmd_boardinfo", scope: !7482, file: !7482, line: 339, type: !10182, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11713 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !11712, file: !7482, line: 339, type: !8008)
!11714 = !DILocation(line: 339, column: 58, scope: !11712)
!11715 = !DILocalVariable(name: "out_mbox", arg: 2, scope: !11712, file: !7482, line: 340, type: !1093)
!11716 = !DILocation(line: 340, column: 17, scope: !11712)
!11717 = !DILocation(line: 342, column: 28, scope: !11712)
!11718 = !DILocation(line: 343, column: 20, scope: !11712)
!11719 = !DILocation(line: 342, column: 9, scope: !11712)
!11720 = !DILocation(line: 342, column: 2, scope: !11712)
!11721 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_boardinfo_vsd_memcpy_from", scope: !7482, file: !7482, line: 365, type: !11722, scopeLine: 365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11722 = !DISubroutineType(types: !11723)
!11723 = !{null, !347, !1093}
!11724 = !DILocalVariable(name: "buf", arg: 1, scope: !11721, file: !7482, line: 365, type: !347)
!11725 = !DILocation(line: 365, column: 1, scope: !11721)
!11726 = !DILocalVariable(name: "dst", arg: 2, scope: !11721, file: !7482, line: 365, type: !1093)
!11727 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_boardinfo_psid_memcpy_from", scope: !7482, file: !7482, line: 373, type: !11722, scopeLine: 373, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11728 = !DILocalVariable(name: "buf", arg: 1, scope: !11727, file: !7482, line: 373, type: !347)
!11729 = !DILocation(line: 373, column: 1, scope: !11727)
!11730 = !DILocalVariable(name: "dst", arg: 2, scope: !11727, file: !7482, line: 373, type: !1093)
!11731 = distinct !DISubprogram(name: "__mlxsw_item_memcpy_from", scope: !8224, file: !8224, line: 178, type: !11732, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11732 = !DISubroutineType(types: !11733)
!11733 = !{null, !347, !1093, !11079, !531}
!11734 = !DILocalVariable(name: "buf", arg: 1, scope: !11731, file: !8224, line: 178, type: !347)
!11735 = !DILocation(line: 178, column: 57, scope: !11731)
!11736 = !DILocalVariable(name: "dst", arg: 2, scope: !11731, file: !8224, line: 178, type: !1093)
!11737 = !DILocation(line: 178, column: 68, scope: !11731)
!11738 = !DILocalVariable(name: "item", arg: 3, scope: !11731, file: !8224, line: 179, type: !11079)
!11739 = !DILocation(line: 179, column: 35, scope: !11731)
!11740 = !DILocalVariable(name: "index", arg: 4, scope: !11731, file: !8224, line: 180, type: !531)
!11741 = !DILocation(line: 180, column: 25, scope: !11731)
!11742 = !DILocalVariable(name: "offset", scope: !11731, file: !8224, line: 182, type: !7)
!11743 = !DILocation(line: 182, column: 15, scope: !11731)
!11744 = !DILocation(line: 182, column: 44, scope: !11731)
!11745 = !DILocation(line: 182, column: 50, scope: !11731)
!11746 = !DILocation(line: 182, column: 24, scope: !11731)
!11747 = !DILocation(line: 184, column: 9, scope: !11731)
!11748 = !DILocation(line: 184, column: 15, scope: !11731)
!11749 = !DILocation(line: 184, column: 19, scope: !11731)
!11750 = !DILocation(line: 184, column: 28, scope: !11731)
!11751 = !DILocation(line: 184, column: 34, scope: !11731)
!11752 = !DILocation(line: 184, column: 39, scope: !11731)
!11753 = !DILocation(line: 184, column: 2, scope: !11731)
!11754 = !DILocation(line: 185, column: 1, scope: !11731)
!11755 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_set_max_vepa_channels_set", scope: !7482, file: !7482, line: 555, type: !11071, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11756 = !DILocalVariable(name: "buf", arg: 1, scope: !11755, file: !7482, line: 555, type: !1093)
!11757 = !DILocation(line: 555, column: 1, scope: !11755)
!11758 = !DILocalVariable(name: "val", arg: 2, scope: !11755, file: !7482, line: 555, type: !1042)
!11759 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_max_vepa_channels_set", scope: !7482, file: !7482, line: 664, type: !11071, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11760 = !DILocalVariable(name: "buf", arg: 1, scope: !11759, file: !7482, line: 664, type: !1093)
!11761 = !DILocation(line: 664, column: 1, scope: !11759)
!11762 = !DILocalVariable(name: "val", arg: 2, scope: !11759, file: !7482, line: 664, type: !1042)
!11763 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_set_max_mid_set", scope: !7482, file: !7482, line: 573, type: !11071, scopeLine: 573, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11764 = !DILocalVariable(name: "buf", arg: 1, scope: !11763, file: !7482, line: 573, type: !1093)
!11765 = !DILocation(line: 573, column: 1, scope: !11763)
!11766 = !DILocalVariable(name: "val", arg: 2, scope: !11763, file: !7482, line: 573, type: !1042)
!11767 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_max_mid_set", scope: !7482, file: !7482, line: 680, type: !11071, scopeLine: 680, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11768 = !DILocalVariable(name: "buf", arg: 1, scope: !11767, file: !7482, line: 680, type: !1093)
!11769 = !DILocation(line: 680, column: 1, scope: !11767)
!11770 = !DILocalVariable(name: "val", arg: 2, scope: !11767, file: !7482, line: 680, type: !1042)
!11771 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_set_max_pgt_set", scope: !7482, file: !7482, line: 579, type: !11071, scopeLine: 579, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11772 = !DILocalVariable(name: "buf", arg: 1, scope: !11771, file: !7482, line: 579, type: !1093)
!11773 = !DILocation(line: 579, column: 1, scope: !11771)
!11774 = !DILocalVariable(name: "val", arg: 2, scope: !11771, file: !7482, line: 579, type: !1042)
!11775 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_max_pgt_set", scope: !7482, file: !7482, line: 686, type: !11071, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11776 = !DILocalVariable(name: "buf", arg: 1, scope: !11775, file: !7482, line: 686, type: !1093)
!11777 = !DILocation(line: 686, column: 1, scope: !11775)
!11778 = !DILocalVariable(name: "val", arg: 2, scope: !11775, file: !7482, line: 686, type: !1042)
!11779 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_set_max_system_port_set", scope: !7482, file: !7482, line: 585, type: !11071, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11780 = !DILocalVariable(name: "buf", arg: 1, scope: !11779, file: !7482, line: 585, type: !1093)
!11781 = !DILocation(line: 585, column: 1, scope: !11779)
!11782 = !DILocalVariable(name: "val", arg: 2, scope: !11779, file: !7482, line: 585, type: !1042)
!11783 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_max_system_port_set", scope: !7482, file: !7482, line: 691, type: !11071, scopeLine: 691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11784 = !DILocalVariable(name: "buf", arg: 1, scope: !11783, file: !7482, line: 691, type: !1093)
!11785 = !DILocation(line: 691, column: 1, scope: !11783)
!11786 = !DILocalVariable(name: "val", arg: 2, scope: !11783, file: !7482, line: 691, type: !1042)
!11787 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_set_max_vlan_groups_set", scope: !7482, file: !7482, line: 591, type: !11071, scopeLine: 591, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11788 = !DILocalVariable(name: "buf", arg: 1, scope: !11787, file: !7482, line: 591, type: !1093)
!11789 = !DILocation(line: 591, column: 1, scope: !11787)
!11790 = !DILocalVariable(name: "val", arg: 2, scope: !11787, file: !7482, line: 591, type: !1042)
!11791 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_max_vlan_groups_set", scope: !7482, file: !7482, line: 696, type: !11071, scopeLine: 696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11792 = !DILocalVariable(name: "buf", arg: 1, scope: !11791, file: !7482, line: 696, type: !1093)
!11793 = !DILocation(line: 696, column: 1, scope: !11791)
!11794 = !DILocalVariable(name: "val", arg: 2, scope: !11791, file: !7482, line: 696, type: !1042)
!11795 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_set_max_regions_set", scope: !7482, file: !7482, line: 597, type: !11071, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11796 = !DILocalVariable(name: "buf", arg: 1, scope: !11795, file: !7482, line: 597, type: !1093)
!11797 = !DILocation(line: 597, column: 1, scope: !11795)
!11798 = !DILocalVariable(name: "val", arg: 2, scope: !11795, file: !7482, line: 597, type: !1042)
!11799 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_max_regions_set", scope: !7482, file: !7482, line: 701, type: !11071, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11800 = !DILocalVariable(name: "buf", arg: 1, scope: !11799, file: !7482, line: 701, type: !1093)
!11801 = !DILocation(line: 701, column: 1, scope: !11799)
!11802 = !DILocalVariable(name: "val", arg: 2, scope: !11799, file: !7482, line: 701, type: !1042)
!11803 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_set_flood_tables_set", scope: !7482, file: !7482, line: 609, type: !11071, scopeLine: 609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11804 = !DILocalVariable(name: "buf", arg: 1, scope: !11803, file: !7482, line: 609, type: !1093)
!11805 = !DILocation(line: 609, column: 1, scope: !11803)
!11806 = !DILocalVariable(name: "val", arg: 2, scope: !11803, file: !7482, line: 609, type: !1042)
!11807 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_max_flood_tables_set", scope: !7482, file: !7482, line: 707, type: !11071, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11808 = !DILocalVariable(name: "buf", arg: 1, scope: !11807, file: !7482, line: 707, type: !1093)
!11809 = !DILocation(line: 707, column: 1, scope: !11807)
!11810 = !DILocalVariable(name: "val", arg: 2, scope: !11807, file: !7482, line: 707, type: !1042)
!11811 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_max_vid_flood_tables_set", scope: !7482, file: !7482, line: 714, type: !11071, scopeLine: 714, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11812 = !DILocalVariable(name: "buf", arg: 1, scope: !11811, file: !7482, line: 714, type: !1093)
!11813 = !DILocation(line: 714, column: 1, scope: !11811)
!11814 = !DILocalVariable(name: "val", arg: 2, scope: !11811, file: !7482, line: 714, type: !1042)
!11815 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_max_fid_offset_flood_tables_set", scope: !7482, file: !7482, line: 730, type: !11071, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11816 = !DILocalVariable(name: "buf", arg: 1, scope: !11815, file: !7482, line: 730, type: !1093)
!11817 = !DILocation(line: 730, column: 1, scope: !11815)
!11818 = !DILocalVariable(name: "val", arg: 2, scope: !11815, file: !7482, line: 730, type: !1042)
!11819 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_fid_offset_flood_table_size_set", scope: !7482, file: !7482, line: 736, type: !11071, scopeLine: 736, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11820 = !DILocalVariable(name: "buf", arg: 1, scope: !11819, file: !7482, line: 736, type: !1093)
!11821 = !DILocation(line: 736, column: 1, scope: !11819)
!11822 = !DILocalVariable(name: "val", arg: 2, scope: !11819, file: !7482, line: 736, type: !1042)
!11823 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_max_fid_flood_tables_set", scope: !7482, file: !7482, line: 745, type: !11071, scopeLine: 745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11824 = !DILocalVariable(name: "buf", arg: 1, scope: !11823, file: !7482, line: 745, type: !1093)
!11825 = !DILocation(line: 745, column: 1, scope: !11823)
!11826 = !DILocalVariable(name: "val", arg: 2, scope: !11823, file: !7482, line: 745, type: !1042)
!11827 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_fid_flood_table_size_set", scope: !7482, file: !7482, line: 750, type: !11071, scopeLine: 750, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11828 = !DILocalVariable(name: "buf", arg: 1, scope: !11827, file: !7482, line: 750, type: !1093)
!11829 = !DILocation(line: 750, column: 1, scope: !11827)
!11830 = !DILocalVariable(name: "val", arg: 2, scope: !11827, file: !7482, line: 750, type: !1042)
!11831 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_set_flood_mode_set", scope: !7482, file: !7482, line: 603, type: !11071, scopeLine: 603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11832 = !DILocalVariable(name: "buf", arg: 1, scope: !11831, file: !7482, line: 603, type: !1093)
!11833 = !DILocation(line: 603, column: 1, scope: !11831)
!11834 = !DILocalVariable(name: "val", arg: 2, scope: !11831, file: !7482, line: 603, type: !1042)
!11835 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_flood_mode_set", scope: !7482, file: !7482, line: 725, type: !11071, scopeLine: 725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11836 = !DILocalVariable(name: "buf", arg: 1, scope: !11835, file: !7482, line: 725, type: !1093)
!11837 = !DILocation(line: 725, column: 1, scope: !11835)
!11838 = !DILocalVariable(name: "val", arg: 2, scope: !11835, file: !7482, line: 725, type: !1042)
!11839 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_set_max_ib_mc_set", scope: !7482, file: !7482, line: 615, type: !11071, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11840 = !DILocalVariable(name: "buf", arg: 1, scope: !11839, file: !7482, line: 615, type: !1093)
!11841 = !DILocation(line: 615, column: 1, scope: !11839)
!11842 = !DILocalVariable(name: "val", arg: 2, scope: !11839, file: !7482, line: 615, type: !1042)
!11843 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_max_ib_mc_set", scope: !7482, file: !7482, line: 756, type: !11071, scopeLine: 756, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11844 = !DILocalVariable(name: "buf", arg: 1, scope: !11843, file: !7482, line: 756, type: !1093)
!11845 = !DILocation(line: 756, column: 1, scope: !11843)
!11846 = !DILocalVariable(name: "val", arg: 2, scope: !11843, file: !7482, line: 756, type: !1042)
!11847 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_set_max_pkey_set", scope: !7482, file: !7482, line: 621, type: !11071, scopeLine: 621, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11848 = !DILocalVariable(name: "buf", arg: 1, scope: !11847, file: !7482, line: 621, type: !1093)
!11849 = !DILocation(line: 621, column: 1, scope: !11847)
!11850 = !DILocalVariable(name: "val", arg: 2, scope: !11847, file: !7482, line: 621, type: !1042)
!11851 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_max_pkey_set", scope: !7482, file: !7482, line: 761, type: !11071, scopeLine: 761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11852 = !DILocalVariable(name: "buf", arg: 1, scope: !11851, file: !7482, line: 761, type: !1093)
!11853 = !DILocation(line: 761, column: 1, scope: !11851)
!11854 = !DILocalVariable(name: "val", arg: 2, scope: !11851, file: !7482, line: 761, type: !1042)
!11855 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_set_ar_sec_set", scope: !7482, file: !7482, line: 634, type: !11071, scopeLine: 634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11856 = !DILocalVariable(name: "buf", arg: 1, scope: !11855, file: !7482, line: 634, type: !1093)
!11857 = !DILocation(line: 634, column: 1, scope: !11855)
!11858 = !DILocalVariable(name: "val", arg: 2, scope: !11855, file: !7482, line: 634, type: !1042)
!11859 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_ar_sec_set", scope: !7482, file: !7482, line: 771, type: !11071, scopeLine: 771, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11860 = !DILocalVariable(name: "buf", arg: 1, scope: !11859, file: !7482, line: 771, type: !1093)
!11861 = !DILocation(line: 771, column: 1, scope: !11859)
!11862 = !DILocalVariable(name: "val", arg: 2, scope: !11859, file: !7482, line: 771, type: !1042)
!11863 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_set_adaptive_routing_group_cap_set", scope: !7482, file: !7482, line: 627, type: !11071, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11864 = !DILocalVariable(name: "buf", arg: 1, scope: !11863, file: !7482, line: 627, type: !1093)
!11865 = !DILocation(line: 627, column: 1, scope: !11863)
!11866 = !DILocalVariable(name: "val", arg: 2, scope: !11863, file: !7482, line: 627, type: !1042)
!11867 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_adaptive_routing_group_cap_set", scope: !7482, file: !7482, line: 778, type: !11071, scopeLine: 778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11868 = !DILocalVariable(name: "buf", arg: 1, scope: !11867, file: !7482, line: 778, type: !1093)
!11869 = !DILocation(line: 778, column: 1, scope: !11867)
!11870 = !DILocalVariable(name: "val", arg: 2, scope: !11867, file: !7482, line: 778, type: !1042)
!11871 = distinct !DISubprogram(name: "mlxsw_res_valid", scope: !7428, file: !7428, line: 124, type: !11872, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11872 = !DISubroutineType(types: !11873)
!11873 = !{!826, !8193, !7427}
!11874 = !DILocalVariable(name: "res", arg: 1, scope: !11871, file: !7428, line: 124, type: !8193)
!11875 = !DILocation(line: 124, column: 54, scope: !11871)
!11876 = !DILocalVariable(name: "res_id", arg: 2, scope: !11871, file: !7428, line: 125, type: !7427)
!11877 = !DILocation(line: 125, column: 26, scope: !11871)
!11878 = !DILocation(line: 127, column: 9, scope: !11871)
!11879 = !DILocation(line: 127, column: 14, scope: !11871)
!11880 = !DILocation(line: 127, column: 20, scope: !11871)
!11881 = !DILocation(line: 127, column: 2, scope: !11871)
!11882 = distinct !DISubprogram(name: "mlxsw_pci_profile_get_kvd_sizes", scope: !3, file: !3, line: 1071, type: !11883, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11883 = !DISubroutineType(types: !11884)
!11884 = !{!32, !11885, !8147, !8193}
!11885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11886, size: 64)
!11886 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7723)
!11887 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !11882, file: !3, line: 1071, type: !11885)
!11888 = !DILocation(line: 1071, column: 57, scope: !11882)
!11889 = !DILocalVariable(name: "profile", arg: 2, scope: !11882, file: !3, line: 1072, type: !8147)
!11890 = !DILocation(line: 1072, column: 40, scope: !11882)
!11891 = !DILocalVariable(name: "res", arg: 3, scope: !11882, file: !3, line: 1073, type: !8193)
!11892 = !DILocation(line: 1073, column: 23, scope: !11882)
!11893 = !DILocalVariable(name: "single_size", scope: !11882, file: !3, line: 1075, type: !386)
!11894 = !DILocation(line: 1075, column: 6, scope: !11882)
!11895 = !DILocalVariable(name: "double_size", scope: !11882, file: !3, line: 1075, type: !386)
!11896 = !DILocation(line: 1075, column: 19, scope: !11882)
!11897 = !DILocalVariable(name: "linear_size", scope: !11882, file: !3, line: 1075, type: !386)
!11898 = !DILocation(line: 1075, column: 32, scope: !11882)
!11899 = !DILocalVariable(name: "err", scope: !11882, file: !3, line: 1076, type: !32)
!11900 = !DILocation(line: 1076, column: 6, scope: !11882)
!11901 = !DILocation(line: 1078, column: 33, scope: !11882)
!11902 = !DILocation(line: 1078, column: 44, scope: !11882)
!11903 = !DILocation(line: 1078, column: 50, scope: !11882)
!11904 = !DILocation(line: 1078, column: 8, scope: !11882)
!11905 = !DILocation(line: 1078, column: 6, scope: !11882)
!11906 = !DILocation(line: 1081, column: 6, scope: !11907)
!11907 = distinct !DILexicalBlock(scope: !11882, file: !3, line: 1081, column: 6)
!11908 = !DILocation(line: 1081, column: 6, scope: !11882)
!11909 = !DILocation(line: 1082, column: 10, scope: !11907)
!11910 = !DILocation(line: 1082, column: 3, scope: !11907)
!11911 = !DILocation(line: 1084, column: 2, scope: !11882)
!11912 = !DILocation(line: 1085, column: 2, scope: !11882)
!11913 = !DILocation(line: 1086, column: 2, scope: !11882)
!11914 = !DILocation(line: 1088, column: 2, scope: !11882)
!11915 = !DILocation(line: 1089, column: 1, scope: !11882)
!11916 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_set_kvd_linear_size_set", scope: !7482, file: !7482, line: 640, type: !11071, scopeLine: 640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11917 = !DILocalVariable(name: "buf", arg: 1, scope: !11916, file: !7482, line: 640, type: !1093)
!11918 = !DILocation(line: 640, column: 1, scope: !11916)
!11919 = !DILocalVariable(name: "val", arg: 2, scope: !11916, file: !7482, line: 640, type: !1042)
!11920 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_kvd_linear_size_set", scope: !7482, file: !7482, line: 791, type: !11071, scopeLine: 791, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11921 = !DILocalVariable(name: "buf", arg: 1, scope: !11920, file: !7482, line: 791, type: !1093)
!11922 = !DILocation(line: 791, column: 1, scope: !11920)
!11923 = !DILocalVariable(name: "val", arg: 2, scope: !11920, file: !7482, line: 791, type: !1042)
!11924 = distinct !DISubprogram(name: "mlxsw_res_get", scope: !7428, file: !7428, line: 133, type: !11925, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11925 = !DISubroutineType(types: !11926)
!11926 = !{!386, !8193, !7427}
!11927 = !DILocalVariable(name: "res", arg: 1, scope: !11924, file: !7428, line: 133, type: !8193)
!11928 = !DILocation(line: 133, column: 51, scope: !11924)
!11929 = !DILocalVariable(name: "res_id", arg: 2, scope: !11924, file: !7428, line: 134, type: !7427)
!11930 = !DILocation(line: 134, column: 23, scope: !11924)
!11931 = !DILocalVariable(name: "__ret_warn_on", scope: !11932, file: !7428, line: 136, type: !32)
!11932 = distinct !DILexicalBlock(scope: !11933, file: !7428, line: 136, column: 6)
!11933 = distinct !DILexicalBlock(scope: !11924, file: !7428, line: 136, column: 6)
!11934 = !DILocation(line: 136, column: 6, scope: !11932)
!11935 = !DILocation(line: 136, column: 6, scope: !11936)
!11936 = distinct !DILexicalBlock(scope: !11932, file: !7428, line: 136, column: 6)
!11937 = !DILocation(line: 136, column: 6, scope: !11938)
!11938 = distinct !DILexicalBlock(scope: !11936, file: !7428, line: 136, column: 6)
!11939 = !DILocation(line: 136, column: 6, scope: !11940)
!11940 = distinct !DILexicalBlock(scope: !11938, file: !7428, line: 136, column: 6)
!11941 = !DILocation(line: 136, column: 6, scope: !11942)
!11942 = distinct !DILexicalBlock(scope: !11938, file: !7428, line: 136, column: 6)
!11943 = !{i32 -2136907589, i32 -2136907560, i32 -2136907514, i32 -2136907456, i32 -2136907402, i32 -2136907348, i32 -2136907293, i32 -2136907262}
!11944 = !DILocation(line: 136, column: 6, scope: !11945)
!11945 = distinct !DILexicalBlock(scope: !11938, file: !7428, line: 136, column: 6)
!11946 = !{i32 -2136906833, i32 -2136906826, i32 -2136906774, i32 -2136906743, i32 -2136906713}
!11947 = !DILocation(line: 136, column: 6, scope: !11948)
!11948 = distinct !DILexicalBlock(scope: !11938, file: !7428, line: 136, column: 6)
!11949 = !DILocation(line: 136, column: 6, scope: !11933)
!11950 = !DILocation(line: 136, column: 6, scope: !11924)
!11951 = !DILocation(line: 137, column: 3, scope: !11933)
!11952 = !DILocation(line: 138, column: 9, scope: !11924)
!11953 = !DILocation(line: 138, column: 14, scope: !11924)
!11954 = !DILocation(line: 138, column: 21, scope: !11924)
!11955 = !DILocation(line: 138, column: 2, scope: !11924)
!11956 = !DILocation(line: 139, column: 1, scope: !11924)
!11957 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_set_kvd_hash_single_size_set", scope: !7482, file: !7482, line: 646, type: !11071, scopeLine: 646, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11958 = !DILocalVariable(name: "buf", arg: 1, scope: !11957, file: !7482, line: 646, type: !1093)
!11959 = !DILocation(line: 646, column: 1, scope: !11957)
!11960 = !DILocalVariable(name: "val", arg: 2, scope: !11957, file: !7482, line: 646, type: !1042)
!11961 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_kvd_hash_single_size_set", scope: !7482, file: !7482, line: 800, type: !11071, scopeLine: 800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11962 = !DILocalVariable(name: "buf", arg: 1, scope: !11961, file: !7482, line: 800, type: !1093)
!11963 = !DILocation(line: 800, column: 1, scope: !11961)
!11964 = !DILocalVariable(name: "val", arg: 2, scope: !11961, file: !7482, line: 800, type: !1042)
!11965 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_set_kvd_hash_double_size_set", scope: !7482, file: !7482, line: 652, type: !11071, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11966 = !DILocalVariable(name: "buf", arg: 1, scope: !11965, file: !7482, line: 652, type: !1093)
!11967 = !DILocation(line: 652, column: 1, scope: !11965)
!11968 = !DILocalVariable(name: "val", arg: 2, scope: !11965, file: !7482, line: 652, type: !1042)
!11969 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_kvd_hash_double_size_set", scope: !7482, file: !7482, line: 809, type: !11071, scopeLine: 809, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11970 = !DILocalVariable(name: "buf", arg: 1, scope: !11969, file: !7482, line: 809, type: !1093)
!11971 = !DILocation(line: 809, column: 1, scope: !11969)
!11972 = !DILocalVariable(name: "val", arg: 2, scope: !11969, file: !7482, line: 809, type: !1042)
!11973 = distinct !DISubprogram(name: "mlxsw_pci_config_profile_swid_config", scope: !3, file: !3, line: 1051, type: !11974, scopeLine: 1054, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!11974 = !DISubroutineType(types: !11975)
!11975 = !{null, !7722, !1093, !32, !11976}
!11976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11977, size: 64)
!11977 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8187)
!11978 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !11973, file: !3, line: 1051, type: !7722)
!11979 = !DILocation(line: 1051, column: 56, scope: !11973)
!11980 = !DILocalVariable(name: "mbox", arg: 2, scope: !11973, file: !3, line: 1052, type: !1093)
!11981 = !DILocation(line: 1052, column: 16, scope: !11973)
!11982 = !DILocalVariable(name: "index", arg: 3, scope: !11973, file: !3, line: 1052, type: !32)
!11983 = !DILocation(line: 1052, column: 26, scope: !11973)
!11984 = !DILocalVariable(name: "swid", arg: 4, scope: !11973, file: !3, line: 1053, type: !11976)
!11985 = !DILocation(line: 1053, column: 42, scope: !11973)
!11986 = !DILocalVariable(name: "mask", scope: !11973, file: !3, line: 1055, type: !849)
!11987 = !DILocation(line: 1055, column: 5, scope: !11973)
!11988 = !DILocation(line: 1057, column: 6, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !11973, file: !3, line: 1057, column: 6)
!11990 = !DILocation(line: 1057, column: 12, scope: !11989)
!11991 = !DILocation(line: 1057, column: 6, scope: !11973)
!11992 = !DILocation(line: 1059, column: 4, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11989, file: !3, line: 1057, column: 23)
!11994 = !DILocation(line: 1059, column: 10, scope: !11993)
!11995 = !DILocation(line: 1059, column: 17, scope: !11993)
!11996 = !DILocation(line: 1059, column: 23, scope: !11993)
!11997 = !DILocation(line: 1058, column: 3, scope: !11993)
!11998 = !DILocation(line: 1060, column: 8, scope: !11993)
!11999 = !DILocation(line: 1061, column: 2, scope: !11993)
!12000 = !DILocation(line: 1062, column: 6, scope: !12001)
!12001 = distinct !DILexicalBlock(scope: !11973, file: !3, line: 1062, column: 6)
!12002 = !DILocation(line: 1062, column: 12, scope: !12001)
!12003 = !DILocation(line: 1062, column: 6, scope: !11973)
!12004 = !DILocation(line: 1064, column: 4, scope: !12005)
!12005 = distinct !DILexicalBlock(scope: !12001, file: !3, line: 1062, column: 29)
!12006 = !DILocation(line: 1064, column: 10, scope: !12005)
!12007 = !DILocation(line: 1064, column: 17, scope: !12005)
!12008 = !DILocation(line: 1064, column: 23, scope: !12005)
!12009 = !DILocation(line: 1063, column: 3, scope: !12005)
!12010 = !DILocation(line: 1065, column: 8, scope: !12005)
!12011 = !DILocation(line: 1066, column: 2, scope: !12005)
!12012 = !DILocation(line: 1067, column: 53, scope: !11973)
!12013 = !DILocation(line: 1067, column: 59, scope: !11973)
!12014 = !DILocation(line: 1067, column: 66, scope: !11973)
!12015 = !DILocation(line: 1067, column: 2, scope: !11973)
!12016 = !DILocation(line: 1068, column: 1, scope: !11973)
!12017 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_set_cqe_version_set", scope: !7482, file: !7482, line: 658, type: !11071, scopeLine: 658, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12018 = !DILocalVariable(name: "buf", arg: 1, scope: !12017, file: !7482, line: 658, type: !1093)
!12019 = !DILocation(line: 658, column: 1, scope: !12017)
!12020 = !DILocalVariable(name: "val", arg: 2, scope: !12017, file: !7482, line: 658, type: !1042)
!12021 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_cqe_version_set", scope: !7482, file: !7482, line: 845, type: !11071, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12022 = !DILocalVariable(name: "buf", arg: 1, scope: !12021, file: !7482, line: 845, type: !1093)
!12023 = !DILocation(line: 845, column: 1, scope: !12021)
!12024 = !DILocalVariable(name: "val", arg: 2, scope: !12021, file: !7482, line: 845, type: !1042)
!12025 = distinct !DISubprogram(name: "mlxsw_cmd_config_profile_set", scope: !7482, file: !7482, line: 544, type: !10182, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12026 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !12025, file: !7482, line: 544, type: !8008)
!12027 = !DILocation(line: 544, column: 67, scope: !12025)
!12028 = !DILocalVariable(name: "in_mbox", arg: 2, scope: !12025, file: !7482, line: 545, type: !1093)
!12029 = !DILocation(line: 545, column: 19, scope: !12025)
!12030 = !DILocation(line: 547, column: 27, scope: !12025)
!12031 = !DILocation(line: 548, column: 12, scope: !12025)
!12032 = !DILocation(line: 547, column: 9, scope: !12025)
!12033 = !DILocation(line: 547, column: 2, scope: !12025)
!12034 = distinct !DISubprogram(name: "mlxsw_res_set", scope: !7428, file: !7428, line: 144, type: !12035, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12035 = !DISubroutineType(types: !12036)
!12036 = !{null, !8193, !7427, !386}
!12037 = !DILocalVariable(name: "res", arg: 1, scope: !12034, file: !7428, line: 144, type: !8193)
!12038 = !DILocation(line: 144, column: 52, scope: !12034)
!12039 = !DILocalVariable(name: "res_id", arg: 2, scope: !12034, file: !7428, line: 145, type: !7427)
!12040 = !DILocation(line: 145, column: 24, scope: !12034)
!12041 = !DILocalVariable(name: "value", arg: 3, scope: !12034, file: !7428, line: 145, type: !386)
!12042 = !DILocation(line: 145, column: 36, scope: !12034)
!12043 = !DILocation(line: 147, column: 2, scope: !12034)
!12044 = !DILocation(line: 147, column: 7, scope: !12034)
!12045 = !DILocation(line: 147, column: 13, scope: !12034)
!12046 = !DILocation(line: 147, column: 21, scope: !12034)
!12047 = !DILocation(line: 148, column: 24, scope: !12034)
!12048 = !DILocation(line: 148, column: 2, scope: !12034)
!12049 = !DILocation(line: 148, column: 7, scope: !12034)
!12050 = !DILocation(line: 148, column: 14, scope: !12034)
!12051 = !DILocation(line: 148, column: 22, scope: !12034)
!12052 = !DILocation(line: 149, column: 1, scope: !12034)
!12053 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_swid_config_type_set", scope: !7482, file: !7482, line: 830, type: !11385, scopeLine: 830, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12054 = !DILocalVariable(name: "buf", arg: 1, scope: !12053, file: !7482, line: 830, type: !1093)
!12055 = !DILocation(line: 830, column: 1, scope: !12053)
!12056 = !DILocalVariable(name: "index", arg: 2, scope: !12053, file: !7482, line: 830, type: !531)
!12057 = !DILocalVariable(name: "val", arg: 3, scope: !12053, file: !7482, line: 830, type: !1042)
!12058 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_swid_config_properties_set", scope: !7482, file: !7482, line: 836, type: !11385, scopeLine: 836, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12059 = !DILocalVariable(name: "buf", arg: 1, scope: !12058, file: !7482, line: 836, type: !1093)
!12060 = !DILocation(line: 836, column: 1, scope: !12058)
!12061 = !DILocalVariable(name: "index", arg: 2, scope: !12058, file: !7482, line: 836, type: !531)
!12062 = !DILocalVariable(name: "val", arg: 3, scope: !12058, file: !7482, line: 836, type: !1042)
!12063 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_config_profile_swid_config_mask_set", scope: !7482, file: !7482, line: 819, type: !11385, scopeLine: 819, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12064 = !DILocalVariable(name: "buf", arg: 1, scope: !12063, file: !7482, line: 819, type: !1093)
!12065 = !DILocation(line: 819, column: 1, scope: !12063)
!12066 = !DILocalVariable(name: "index", arg: 2, scope: !12063, file: !7482, line: 819, type: !531)
!12067 = !DILocalVariable(name: "val", arg: 3, scope: !12063, file: !7482, line: 819, type: !1042)
!12068 = distinct !DISubprogram(name: "mlxsw_cmd_query_aq_cap", scope: !7482, file: !7482, line: 383, type: !10182, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12069 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !12068, file: !7482, line: 383, type: !8008)
!12070 = !DILocation(line: 383, column: 61, scope: !12068)
!12071 = !DILocalVariable(name: "out_mbox", arg: 2, scope: !12068, file: !7482, line: 384, type: !1093)
!12072 = !DILocation(line: 384, column: 13, scope: !12068)
!12073 = !DILocation(line: 386, column: 28, scope: !12068)
!12074 = !DILocation(line: 387, column: 20, scope: !12068)
!12075 = !DILocation(line: 386, column: 9, scope: !12068)
!12076 = !DILocation(line: 386, column: 2, scope: !12068)
!12077 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_query_aq_cap_max_num_sdqs_get", scope: !7482, file: !7482, line: 398, type: !10193, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12078 = !DILocalVariable(name: "buf", arg: 1, scope: !12077, file: !7482, line: 398, type: !347)
!12079 = !DILocation(line: 398, column: 1, scope: !12077)
!12080 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_query_aq_cap_log_max_sdq_sz_get", scope: !7482, file: !7482, line: 393, type: !10193, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12081 = !DILocalVariable(name: "buf", arg: 1, scope: !12080, file: !7482, line: 393, type: !347)
!12082 = !DILocation(line: 393, column: 1, scope: !12080)
!12083 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_query_aq_cap_max_num_rdqs_get", scope: !7482, file: !7482, line: 408, type: !10193, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12084 = !DILocalVariable(name: "buf", arg: 1, scope: !12083, file: !7482, line: 408, type: !347)
!12085 = !DILocation(line: 408, column: 1, scope: !12083)
!12086 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_query_aq_cap_log_max_rdq_sz_get", scope: !7482, file: !7482, line: 403, type: !10193, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12087 = !DILocalVariable(name: "buf", arg: 1, scope: !12086, file: !7482, line: 403, type: !347)
!12088 = !DILocation(line: 403, column: 1, scope: !12086)
!12089 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_query_aq_cap_max_num_cqs_get", scope: !7482, file: !7482, line: 423, type: !10193, scopeLine: 423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12090 = !DILocalVariable(name: "buf", arg: 1, scope: !12089, file: !7482, line: 423, type: !347)
!12091 = !DILocation(line: 423, column: 1, scope: !12089)
!12092 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_query_aq_cap_log_max_cq_sz_get", scope: !7482, file: !7482, line: 413, type: !10193, scopeLine: 413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12093 = !DILocalVariable(name: "buf", arg: 1, scope: !12092, file: !7482, line: 413, type: !347)
!12094 = !DILocation(line: 413, column: 1, scope: !12092)
!12095 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_query_aq_cap_log_max_cqv2_sz_get", scope: !7482, file: !7482, line: 418, type: !10193, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12096 = !DILocalVariable(name: "buf", arg: 1, scope: !12095, file: !7482, line: 418, type: !347)
!12097 = !DILocation(line: 418, column: 1, scope: !12095)
!12098 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_query_aq_cap_max_num_eqs_get", scope: !7482, file: !7482, line: 433, type: !10193, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12099 = !DILocalVariable(name: "buf", arg: 1, scope: !12098, file: !7482, line: 433, type: !347)
!12100 = !DILocation(line: 433, column: 1, scope: !12098)
!12101 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_query_aq_cap_log_max_eq_sz_get", scope: !7482, file: !7482, line: 428, type: !10193, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12102 = !DILocalVariable(name: "buf", arg: 1, scope: !12101, file: !7482, line: 428, type: !347)
!12103 = !DILocation(line: 428, column: 1, scope: !12101)
!12104 = distinct !DISubprogram(name: "mlxsw_pci_queue_group_init", scope: !3, file: !3, line: 910, type: !12105, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12105 = !DISubroutineType(types: !12106)
!12106 = !{!32, !7722, !1093, !12107, !849}
!12107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8372, size: 64)
!12108 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !12104, file: !3, line: 910, type: !7722)
!12109 = !DILocation(line: 910, column: 57, scope: !12104)
!12110 = !DILocalVariable(name: "mbox", arg: 2, scope: !12104, file: !3, line: 910, type: !1093)
!12111 = !DILocation(line: 910, column: 74, scope: !12104)
!12112 = !DILocalVariable(name: "q_ops", arg: 3, scope: !12104, file: !3, line: 911, type: !12107)
!12113 = !DILocation(line: 911, column: 45, scope: !12104)
!12114 = !DILocalVariable(name: "num_qs", arg: 4, scope: !12104, file: !3, line: 912, type: !849)
!12115 = !DILocation(line: 912, column: 14, scope: !12104)
!12116 = !DILocalVariable(name: "queue_group", scope: !12104, file: !3, line: 914, type: !12117)
!12117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8002, size: 64)
!12118 = !DILocation(line: 914, column: 37, scope: !12104)
!12119 = !DILocalVariable(name: "i", scope: !12104, file: !3, line: 915, type: !32)
!12120 = !DILocation(line: 915, column: 6, scope: !12104)
!12121 = !DILocalVariable(name: "err", scope: !12104, file: !3, line: 916, type: !32)
!12122 = !DILocation(line: 916, column: 6, scope: !12104)
!12123 = !DILocation(line: 918, column: 47, scope: !12104)
!12124 = !DILocation(line: 918, column: 58, scope: !12104)
!12125 = !DILocation(line: 918, column: 65, scope: !12104)
!12126 = !DILocation(line: 918, column: 16, scope: !12104)
!12127 = !DILocation(line: 918, column: 14, scope: !12104)
!12128 = !DILocation(line: 919, column: 27, scope: !12104)
!12129 = !DILocation(line: 919, column: 19, scope: !12104)
!12130 = !DILocation(line: 919, column: 2, scope: !12104)
!12131 = !DILocation(line: 919, column: 15, scope: !12104)
!12132 = !DILocation(line: 919, column: 17, scope: !12104)
!12133 = !DILocation(line: 920, column: 7, scope: !12134)
!12134 = distinct !DILexicalBlock(scope: !12104, file: !3, line: 920, column: 6)
!12135 = !DILocation(line: 920, column: 20, scope: !12134)
!12136 = !DILocation(line: 920, column: 6, scope: !12104)
!12137 = !DILocation(line: 921, column: 3, scope: !12134)
!12138 = !DILocation(line: 923, column: 9, scope: !12139)
!12139 = distinct !DILexicalBlock(scope: !12104, file: !3, line: 923, column: 2)
!12140 = !DILocation(line: 923, column: 7, scope: !12139)
!12141 = !DILocation(line: 923, column: 14, scope: !12142)
!12142 = distinct !DILexicalBlock(scope: !12139, file: !3, line: 923, column: 2)
!12143 = !DILocation(line: 923, column: 18, scope: !12142)
!12144 = !DILocation(line: 923, column: 16, scope: !12142)
!12145 = !DILocation(line: 923, column: 2, scope: !12139)
!12146 = !DILocation(line: 924, column: 30, scope: !12147)
!12147 = distinct !DILexicalBlock(scope: !12142, file: !3, line: 923, column: 31)
!12148 = !DILocation(line: 924, column: 41, scope: !12147)
!12149 = !DILocation(line: 924, column: 47, scope: !12147)
!12150 = !DILocation(line: 925, column: 10, scope: !12147)
!12151 = !DILocation(line: 925, column: 23, scope: !12147)
!12152 = !DILocation(line: 925, column: 25, scope: !12147)
!12153 = !DILocation(line: 925, column: 29, scope: !12147)
!12154 = !DILocation(line: 924, column: 9, scope: !12147)
!12155 = !DILocation(line: 924, column: 7, scope: !12147)
!12156 = !DILocation(line: 926, column: 7, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12147, file: !3, line: 926, column: 7)
!12158 = !DILocation(line: 926, column: 7, scope: !12147)
!12159 = !DILocation(line: 927, column: 4, scope: !12157)
!12160 = !DILocation(line: 928, column: 2, scope: !12147)
!12161 = !DILocation(line: 923, column: 27, scope: !12142)
!12162 = !DILocation(line: 923, column: 2, scope: !12142)
!12163 = distinct !{!12163, !12145, !12164}
!12164 = !DILocation(line: 928, column: 2, scope: !12139)
!12165 = !DILocation(line: 929, column: 23, scope: !12104)
!12166 = !DILocation(line: 929, column: 2, scope: !12104)
!12167 = !DILocation(line: 929, column: 15, scope: !12104)
!12168 = !DILocation(line: 929, column: 21, scope: !12104)
!12169 = !DILocation(line: 931, column: 2, scope: !12104)
!12170 = !DILabel(scope: !12104, name: "err_queue_init", file: !3, line: 933)
!12171 = !DILocation(line: 933, column: 1, scope: !12104)
!12172 = !DILocation(line: 934, column: 8, scope: !12173)
!12173 = distinct !DILexicalBlock(scope: !12104, file: !3, line: 934, column: 2)
!12174 = !DILocation(line: 934, column: 7, scope: !12173)
!12175 = !DILocation(line: 934, column: 12, scope: !12176)
!12176 = distinct !DILexicalBlock(scope: !12173, file: !3, line: 934, column: 2)
!12177 = !DILocation(line: 934, column: 14, scope: !12176)
!12178 = !DILocation(line: 934, column: 2, scope: !12173)
!12179 = !DILocation(line: 935, column: 24, scope: !12176)
!12180 = !DILocation(line: 935, column: 35, scope: !12176)
!12181 = !DILocation(line: 935, column: 43, scope: !12176)
!12182 = !DILocation(line: 935, column: 56, scope: !12176)
!12183 = !DILocation(line: 935, column: 58, scope: !12176)
!12184 = !DILocation(line: 935, column: 3, scope: !12176)
!12185 = !DILocation(line: 934, column: 21, scope: !12176)
!12186 = !DILocation(line: 934, column: 2, scope: !12176)
!12187 = distinct !{!12187, !12178, !12188}
!12188 = !DILocation(line: 935, column: 60, scope: !12173)
!12189 = !DILocation(line: 936, column: 8, scope: !12104)
!12190 = !DILocation(line: 936, column: 21, scope: !12104)
!12191 = !DILocation(line: 936, column: 2, scope: !12104)
!12192 = !DILocation(line: 937, column: 9, scope: !12104)
!12193 = !DILocation(line: 937, column: 2, scope: !12104)
!12194 = !DILocation(line: 938, column: 1, scope: !12104)
!12195 = distinct !DISubprogram(name: "mlxsw_pci_queue_group_fini", scope: !3, file: !3, line: 940, type: !12196, scopeLine: 942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12196 = !DISubroutineType(types: !12197)
!12197 = !{null, !7722, !12107}
!12198 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !12195, file: !3, line: 940, type: !7722)
!12199 = !DILocation(line: 940, column: 58, scope: !12195)
!12200 = !DILocalVariable(name: "q_ops", arg: 2, scope: !12195, file: !3, line: 941, type: !12107)
!12201 = !DILocation(line: 941, column: 46, scope: !12195)
!12202 = !DILocalVariable(name: "queue_group", scope: !12195, file: !3, line: 943, type: !12117)
!12203 = !DILocation(line: 943, column: 37, scope: !12195)
!12204 = !DILocalVariable(name: "i", scope: !12195, file: !3, line: 944, type: !32)
!12205 = !DILocation(line: 944, column: 6, scope: !12195)
!12206 = !DILocation(line: 946, column: 47, scope: !12195)
!12207 = !DILocation(line: 946, column: 58, scope: !12195)
!12208 = !DILocation(line: 946, column: 65, scope: !12195)
!12209 = !DILocation(line: 946, column: 16, scope: !12195)
!12210 = !DILocation(line: 946, column: 14, scope: !12195)
!12211 = !DILocation(line: 947, column: 9, scope: !12212)
!12212 = distinct !DILexicalBlock(scope: !12195, file: !3, line: 947, column: 2)
!12213 = !DILocation(line: 947, column: 7, scope: !12212)
!12214 = !DILocation(line: 947, column: 14, scope: !12215)
!12215 = distinct !DILexicalBlock(scope: !12212, file: !3, line: 947, column: 2)
!12216 = !DILocation(line: 947, column: 18, scope: !12215)
!12217 = !DILocation(line: 947, column: 31, scope: !12215)
!12218 = !DILocation(line: 947, column: 16, scope: !12215)
!12219 = !DILocation(line: 947, column: 2, scope: !12212)
!12220 = !DILocation(line: 948, column: 24, scope: !12215)
!12221 = !DILocation(line: 948, column: 35, scope: !12215)
!12222 = !DILocation(line: 948, column: 43, scope: !12215)
!12223 = !DILocation(line: 948, column: 56, scope: !12215)
!12224 = !DILocation(line: 948, column: 58, scope: !12215)
!12225 = !DILocation(line: 948, column: 3, scope: !12215)
!12226 = !DILocation(line: 947, column: 39, scope: !12215)
!12227 = !DILocation(line: 947, column: 2, scope: !12215)
!12228 = distinct !{!12228, !12219, !12229}
!12229 = !DILocation(line: 948, column: 60, scope: !12212)
!12230 = !DILocation(line: 949, column: 8, scope: !12195)
!12231 = !DILocation(line: 949, column: 21, scope: !12195)
!12232 = !DILocation(line: 949, column: 2, scope: !12195)
!12233 = !DILocation(line: 950, column: 1, scope: !12195)
!12234 = distinct !DISubprogram(name: "mlxsw_pci_queue_type_group_get", scope: !3, file: !3, line: 177, type: !12235, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12235 = !DISubroutineType(types: !12236)
!12236 = !{!12117, !7722, !7403}
!12237 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !12234, file: !3, line: 177, type: !7722)
!12238 = !DILocation(line: 177, column: 50, scope: !12234)
!12239 = !DILocalVariable(name: "q_type", arg: 2, scope: !12234, file: !3, line: 178, type: !7403)
!12240 = !DILocation(line: 178, column: 37, scope: !12234)
!12241 = !DILocation(line: 180, column: 10, scope: !12234)
!12242 = !DILocation(line: 180, column: 21, scope: !12234)
!12243 = !DILocation(line: 180, column: 28, scope: !12234)
!12244 = !DILocation(line: 180, column: 2, scope: !12234)
!12245 = distinct !DISubprogram(name: "mlxsw_pci_queue_init", scope: !3, file: !3, line: 837, type: !12246, scopeLine: 840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12246 = !DISubroutineType(types: !12247)
!12247 = !{!32, !7722, !1093, !12107, !7669, !849}
!12248 = !DILocalVariable(name: "lock", arg: 1, scope: !12249, file: !12250, line: 327, type: !2236)
!12249 = distinct !DISubprogram(name: "spinlock_check", scope: !12250, file: !12250, line: 327, type: !12251, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12250 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!12251 = !DISubroutineType(types: !12252)
!12252 = !{!12253, !2236}
!12253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 64)
!12254 = !DILocation(line: 327, column: 67, scope: !12249, inlinedAt: !12255)
!12255 = distinct !DILocation(line: 849, column: 2, scope: !12256)
!12256 = distinct !DILexicalBlock(scope: !12245, file: !3, line: 849, column: 2)
!12257 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !12245, file: !3, line: 837, type: !7722)
!12258 = !DILocation(line: 837, column: 51, scope: !12245)
!12259 = !DILocalVariable(name: "mbox", arg: 2, scope: !12245, file: !3, line: 837, type: !1093)
!12260 = !DILocation(line: 837, column: 68, scope: !12245)
!12261 = !DILocalVariable(name: "q_ops", arg: 3, scope: !12245, file: !3, line: 838, type: !12107)
!12262 = !DILocation(line: 838, column: 39, scope: !12245)
!12263 = !DILocalVariable(name: "q", arg: 4, scope: !12245, file: !3, line: 839, type: !7669)
!12264 = !DILocation(line: 839, column: 29, scope: !12245)
!12265 = !DILocalVariable(name: "q_num", arg: 5, scope: !12245, file: !3, line: 839, type: !849)
!12266 = !DILocation(line: 839, column: 35, scope: !12245)
!12267 = !DILocalVariable(name: "mem_item", scope: !12245, file: !3, line: 841, type: !8014)
!12268 = !DILocation(line: 841, column: 29, scope: !12245)
!12269 = !DILocation(line: 841, column: 41, scope: !12245)
!12270 = !DILocation(line: 841, column: 44, scope: !12245)
!12271 = !DILocalVariable(name: "i", scope: !12245, file: !3, line: 842, type: !32)
!12272 = !DILocation(line: 842, column: 6, scope: !12245)
!12273 = !DILocalVariable(name: "err", scope: !12245, file: !3, line: 843, type: !32)
!12274 = !DILocation(line: 843, column: 6, scope: !12245)
!12275 = !DILocation(line: 845, column: 11, scope: !12245)
!12276 = !DILocation(line: 845, column: 2, scope: !12245)
!12277 = !DILocation(line: 845, column: 5, scope: !12245)
!12278 = !DILocation(line: 845, column: 9, scope: !12245)
!12279 = !DILocation(line: 846, column: 6, scope: !12280)
!12280 = distinct !DILexicalBlock(scope: !12245, file: !3, line: 846, column: 6)
!12281 = !DILocation(line: 846, column: 13, scope: !12280)
!12282 = !DILocation(line: 846, column: 6, scope: !12245)
!12283 = !DILocation(line: 847, column: 3, scope: !12280)
!12284 = !DILocation(line: 847, column: 10, scope: !12280)
!12285 = !DILocation(line: 847, column: 19, scope: !12280)
!12286 = !DILocation(line: 847, column: 30, scope: !12280)
!12287 = !DILocation(line: 849, column: 2, scope: !12245)
!12288 = !DILocation(line: 849, column: 2, scope: !12256)
!12289 = !DILocation(line: 329, column: 10, scope: !12249, inlinedAt: !12255)
!12290 = !DILocation(line: 329, column: 16, scope: !12249, inlinedAt: !12255)
!12291 = !DILocation(line: 850, column: 13, scope: !12245)
!12292 = !DILocation(line: 850, column: 20, scope: !12245)
!12293 = !DILocation(line: 850, column: 35, scope: !12245)
!12294 = !DILocation(line: 850, column: 42, scope: !12245)
!12295 = !DILocation(line: 850, column: 55, scope: !12245)
!12296 = !DILocation(line: 851, column: 7, scope: !12245)
!12297 = !DILocation(line: 851, column: 14, scope: !12245)
!12298 = !DILocation(line: 850, column: 2, scope: !12245)
!12299 = !DILocation(line: 850, column: 5, scope: !12245)
!12300 = !DILocation(line: 850, column: 11, scope: !12245)
!12301 = !DILocation(line: 852, column: 17, scope: !12245)
!12302 = !DILocation(line: 852, column: 24, scope: !12245)
!12303 = !DILocation(line: 852, column: 38, scope: !12245)
!12304 = !DILocation(line: 852, column: 45, scope: !12245)
!12305 = !DILocation(line: 852, column: 57, scope: !12245)
!12306 = !DILocation(line: 853, column: 10, scope: !12245)
!12307 = !DILocation(line: 853, column: 17, scope: !12245)
!12308 = !DILocation(line: 852, column: 2, scope: !12245)
!12309 = !DILocation(line: 852, column: 5, scope: !12245)
!12310 = !DILocation(line: 852, column: 15, scope: !12245)
!12311 = !DILocation(line: 854, column: 12, scope: !12245)
!12312 = !DILocation(line: 854, column: 19, scope: !12245)
!12313 = !DILocation(line: 854, column: 2, scope: !12245)
!12314 = !DILocation(line: 854, column: 5, scope: !12245)
!12315 = !DILocation(line: 854, column: 10, scope: !12245)
!12316 = !DILocation(line: 855, column: 11, scope: !12245)
!12317 = !DILocation(line: 855, column: 2, scope: !12245)
!12318 = !DILocation(line: 855, column: 5, scope: !12245)
!12319 = !DILocation(line: 855, column: 9, scope: !12245)
!12320 = !DILocation(line: 857, column: 6, scope: !12321)
!12321 = distinct !DILexicalBlock(scope: !12245, file: !3, line: 857, column: 6)
!12322 = !DILocation(line: 857, column: 13, scope: !12321)
!12323 = !DILocation(line: 857, column: 6, scope: !12245)
!12324 = !DILocation(line: 858, column: 18, scope: !12321)
!12325 = !DILocation(line: 858, column: 21, scope: !12321)
!12326 = !DILocation(line: 858, column: 30, scope: !12321)
!12327 = !DILocation(line: 858, column: 37, scope: !12321)
!12328 = !DILocation(line: 858, column: 3, scope: !12321)
!12329 = !DILocation(line: 860, column: 2, scope: !12245)
!12330 = !DILocation(line: 860, column: 12, scope: !12245)
!12331 = !DILocation(line: 860, column: 17, scope: !12245)
!12332 = !DILocation(line: 861, column: 39, scope: !12245)
!12333 = !DILocation(line: 861, column: 50, scope: !12245)
!12334 = !DILocation(line: 862, column: 11, scope: !12245)
!12335 = !DILocation(line: 862, column: 21, scope: !12245)
!12336 = !DILocation(line: 863, column: 12, scope: !12245)
!12337 = !DILocation(line: 863, column: 22, scope: !12245)
!12338 = !DILocation(line: 861, column: 18, scope: !12245)
!12339 = !DILocation(line: 861, column: 2, scope: !12245)
!12340 = !DILocation(line: 861, column: 12, scope: !12245)
!12341 = !DILocation(line: 861, column: 16, scope: !12245)
!12342 = !DILocation(line: 864, column: 7, scope: !12343)
!12343 = distinct !DILexicalBlock(scope: !12245, file: !3, line: 864, column: 6)
!12344 = !DILocation(line: 864, column: 17, scope: !12343)
!12345 = !DILocation(line: 864, column: 6, scope: !12245)
!12346 = !DILocation(line: 865, column: 3, scope: !12343)
!12347 = !DILocation(line: 867, column: 25, scope: !12245)
!12348 = !DILocation(line: 867, column: 28, scope: !12245)
!12349 = !DILocation(line: 867, column: 17, scope: !12245)
!12350 = !DILocation(line: 867, column: 2, scope: !12245)
!12351 = !DILocation(line: 867, column: 5, scope: !12245)
!12352 = !DILocation(line: 867, column: 15, scope: !12245)
!12353 = !DILocation(line: 868, column: 7, scope: !12354)
!12354 = distinct !DILexicalBlock(scope: !12245, file: !3, line: 868, column: 6)
!12355 = !DILocation(line: 868, column: 10, scope: !12354)
!12356 = !DILocation(line: 868, column: 6, scope: !12245)
!12357 = !DILocation(line: 869, column: 7, scope: !12358)
!12358 = distinct !DILexicalBlock(scope: !12354, file: !3, line: 868, column: 21)
!12359 = !DILocation(line: 870, column: 3, scope: !12358)
!12360 = !DILocation(line: 876, column: 9, scope: !12361)
!12361 = distinct !DILexicalBlock(scope: !12245, file: !3, line: 876, column: 2)
!12362 = !DILocation(line: 876, column: 7, scope: !12361)
!12363 = !DILocation(line: 876, column: 14, scope: !12364)
!12364 = distinct !DILexicalBlock(scope: !12361, file: !3, line: 876, column: 2)
!12365 = !DILocation(line: 876, column: 18, scope: !12364)
!12366 = !DILocation(line: 876, column: 21, scope: !12364)
!12367 = !DILocation(line: 876, column: 16, scope: !12364)
!12368 = !DILocation(line: 876, column: 2, scope: !12361)
!12369 = !DILocalVariable(name: "elem_info", scope: !12370, file: !3, line: 877, type: !7680)
!12370 = distinct !DILexicalBlock(scope: !12364, file: !3, line: 876, column: 33)
!12371 = !DILocation(line: 877, column: 37, scope: !12370)
!12372 = !DILocation(line: 879, column: 45, scope: !12370)
!12373 = !DILocation(line: 879, column: 48, scope: !12370)
!12374 = !DILocation(line: 879, column: 15, scope: !12370)
!12375 = !DILocation(line: 879, column: 13, scope: !12370)
!12376 = !DILocation(line: 881, column: 31, scope: !12370)
!12377 = !DILocation(line: 881, column: 34, scope: !12370)
!12378 = !DILocation(line: 881, column: 37, scope: !12370)
!12379 = !DILocation(line: 881, column: 48, scope: !12370)
!12380 = !DILocation(line: 881, column: 4, scope: !12370)
!12381 = !DILocation(line: 880, column: 3, scope: !12370)
!12382 = !DILocation(line: 880, column: 14, scope: !12370)
!12383 = !DILocation(line: 880, column: 19, scope: !12370)
!12384 = !DILocation(line: 882, column: 2, scope: !12370)
!12385 = !DILocation(line: 876, column: 29, scope: !12364)
!12386 = !DILocation(line: 876, column: 2, scope: !12364)
!12387 = distinct !{!12387, !12368, !12388}
!12388 = !DILocation(line: 882, column: 2, scope: !12361)
!12389 = !DILocation(line: 884, column: 22, scope: !12245)
!12390 = !DILocation(line: 884, column: 2, scope: !12245)
!12391 = !DILocation(line: 885, column: 8, scope: !12245)
!12392 = !DILocation(line: 885, column: 15, scope: !12245)
!12393 = !DILocation(line: 885, column: 20, scope: !12245)
!12394 = !DILocation(line: 885, column: 31, scope: !12245)
!12395 = !DILocation(line: 885, column: 37, scope: !12245)
!12396 = !DILocation(line: 885, column: 6, scope: !12245)
!12397 = !DILocation(line: 886, column: 6, scope: !12398)
!12398 = distinct !DILexicalBlock(scope: !12245, file: !3, line: 886, column: 6)
!12399 = !DILocation(line: 886, column: 6, scope: !12245)
!12400 = !DILocation(line: 887, column: 3, scope: !12398)
!12401 = !DILocation(line: 888, column: 2, scope: !12245)
!12402 = !DILabel(scope: !12245, name: "err_q_ops_init", file: !3, line: 890)
!12403 = !DILocation(line: 890, column: 1, scope: !12245)
!12404 = !DILocation(line: 891, column: 8, scope: !12245)
!12405 = !DILocation(line: 891, column: 11, scope: !12245)
!12406 = !DILocation(line: 891, column: 2, scope: !12245)
!12407 = !DILabel(scope: !12245, name: "err_elem_info_alloc", file: !3, line: 892)
!12408 = !DILocation(line: 892, column: 1, scope: !12245)
!12409 = !DILocation(line: 893, column: 22, scope: !12245)
!12410 = !DILocation(line: 893, column: 33, scope: !12245)
!12411 = !DILocation(line: 893, column: 39, scope: !12245)
!12412 = !DILocation(line: 893, column: 49, scope: !12245)
!12413 = !DILocation(line: 894, column: 8, scope: !12245)
!12414 = !DILocation(line: 894, column: 18, scope: !12245)
!12415 = !DILocation(line: 894, column: 23, scope: !12245)
!12416 = !DILocation(line: 894, column: 33, scope: !12245)
!12417 = !DILocation(line: 893, column: 2, scope: !12245)
!12418 = !DILocation(line: 895, column: 9, scope: !12245)
!12419 = !DILocation(line: 895, column: 2, scope: !12245)
!12420 = !DILocation(line: 896, column: 1, scope: !12245)
!12421 = distinct !DISubprogram(name: "mlxsw_pci_queue_fini", scope: !3, file: !3, line: 898, type: !12422, scopeLine: 901, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12422 = !DISubroutineType(types: !12423)
!12423 = !{null, !7722, !12107, !7669}
!12424 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !12421, file: !3, line: 898, type: !7722)
!12425 = !DILocation(line: 898, column: 52, scope: !12421)
!12426 = !DILocalVariable(name: "q_ops", arg: 2, scope: !12421, file: !3, line: 899, type: !12107)
!12427 = !DILocation(line: 899, column: 40, scope: !12421)
!12428 = !DILocalVariable(name: "q", arg: 3, scope: !12421, file: !3, line: 900, type: !7669)
!12429 = !DILocation(line: 900, column: 30, scope: !12421)
!12430 = !DILocalVariable(name: "mem_item", scope: !12421, file: !3, line: 902, type: !8014)
!12431 = !DILocation(line: 902, column: 29, scope: !12421)
!12432 = !DILocation(line: 902, column: 41, scope: !12421)
!12433 = !DILocation(line: 902, column: 44, scope: !12421)
!12434 = !DILocation(line: 904, column: 2, scope: !12421)
!12435 = !DILocation(line: 904, column: 9, scope: !12421)
!12436 = !DILocation(line: 904, column: 14, scope: !12421)
!12437 = !DILocation(line: 904, column: 25, scope: !12421)
!12438 = !DILocation(line: 905, column: 8, scope: !12421)
!12439 = !DILocation(line: 905, column: 11, scope: !12421)
!12440 = !DILocation(line: 905, column: 2, scope: !12421)
!12441 = !DILocation(line: 906, column: 22, scope: !12421)
!12442 = !DILocation(line: 906, column: 33, scope: !12421)
!12443 = !DILocation(line: 906, column: 39, scope: !12421)
!12444 = !DILocation(line: 906, column: 49, scope: !12421)
!12445 = !DILocation(line: 907, column: 8, scope: !12421)
!12446 = !DILocation(line: 907, column: 18, scope: !12421)
!12447 = !DILocation(line: 907, column: 23, scope: !12421)
!12448 = !DILocation(line: 907, column: 33, scope: !12421)
!12449 = !DILocation(line: 906, column: 2, scope: !12421)
!12450 = !DILocation(line: 908, column: 1, scope: !12421)
!12451 = distinct !DISubprogram(name: "mlxsw_pci_queue_elem_info_get", scope: !3, file: !3, line: 143, type: !12452, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12452 = !DISubroutineType(types: !12453)
!12453 = !{!7680, !7669, !32}
!12454 = !DILocalVariable(name: "q", arg: 1, scope: !12451, file: !3, line: 143, type: !7669)
!12455 = !DILocation(line: 143, column: 55, scope: !12451)
!12456 = !DILocalVariable(name: "elem_index", arg: 2, scope: !12451, file: !3, line: 143, type: !32)
!12457 = !DILocation(line: 143, column: 62, scope: !12451)
!12458 = !DILocation(line: 145, column: 10, scope: !12451)
!12459 = !DILocation(line: 145, column: 13, scope: !12451)
!12460 = !DILocation(line: 145, column: 23, scope: !12451)
!12461 = !DILocation(line: 145, column: 2, scope: !12451)
!12462 = distinct !DISubprogram(name: "__mlxsw_pci_queue_elem_get", scope: !3, file: !3, line: 136, type: !12463, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12463 = !DISubroutineType(types: !12464)
!12464 = !{!1093, !7669, !1094, !32}
!12465 = !DILocalVariable(name: "q", arg: 1, scope: !12462, file: !3, line: 136, type: !7669)
!12466 = !DILocation(line: 136, column: 65, scope: !12462)
!12467 = !DILocalVariable(name: "elem_size", arg: 2, scope: !12462, file: !3, line: 137, type: !1094)
!12468 = !DILocation(line: 137, column: 13, scope: !12462)
!12469 = !DILocalVariable(name: "elem_index", arg: 3, scope: !12462, file: !3, line: 137, type: !32)
!12470 = !DILocation(line: 137, column: 28, scope: !12462)
!12471 = !DILocation(line: 139, column: 9, scope: !12462)
!12472 = !DILocation(line: 139, column: 12, scope: !12462)
!12473 = !DILocation(line: 139, column: 21, scope: !12462)
!12474 = !DILocation(line: 139, column: 28, scope: !12462)
!12475 = !DILocation(line: 139, column: 40, scope: !12462)
!12476 = !DILocation(line: 139, column: 38, scope: !12462)
!12477 = !DILocation(line: 139, column: 25, scope: !12462)
!12478 = !DILocation(line: 139, column: 2, scope: !12462)
!12479 = distinct !DISubprogram(name: "mlxsw_pci_eq_init", scope: !3, file: !3, line: 674, type: !8383, scopeLine: 676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12480 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !12479, file: !3, line: 674, type: !7722)
!12481 = !DILocation(line: 674, column: 48, scope: !12479)
!12482 = !DILocalVariable(name: "mbox", arg: 2, scope: !12479, file: !3, line: 674, type: !1093)
!12483 = !DILocation(line: 674, column: 65, scope: !12479)
!12484 = !DILocalVariable(name: "q", arg: 3, scope: !12479, file: !3, line: 675, type: !7669)
!12485 = !DILocation(line: 675, column: 33, scope: !12479)
!12486 = !DILocalVariable(name: "i", scope: !12479, file: !3, line: 677, type: !32)
!12487 = !DILocation(line: 677, column: 6, scope: !12479)
!12488 = !DILocalVariable(name: "err", scope: !12479, file: !3, line: 678, type: !32)
!12489 = !DILocation(line: 678, column: 6, scope: !12479)
!12490 = !DILocation(line: 680, column: 2, scope: !12479)
!12491 = !DILocation(line: 680, column: 5, scope: !12479)
!12492 = !DILocation(line: 680, column: 22, scope: !12479)
!12493 = !DILocation(line: 682, column: 9, scope: !12494)
!12494 = distinct !DILexicalBlock(scope: !12479, file: !3, line: 682, column: 2)
!12495 = !DILocation(line: 682, column: 7, scope: !12494)
!12496 = !DILocation(line: 682, column: 14, scope: !12497)
!12497 = distinct !DILexicalBlock(scope: !12494, file: !3, line: 682, column: 2)
!12498 = !DILocation(line: 682, column: 18, scope: !12497)
!12499 = !DILocation(line: 682, column: 21, scope: !12497)
!12500 = !DILocation(line: 682, column: 16, scope: !12497)
!12501 = !DILocation(line: 682, column: 2, scope: !12494)
!12502 = !DILocalVariable(name: "elem", scope: !12503, file: !3, line: 683, type: !1093)
!12503 = distinct !DILexicalBlock(scope: !12497, file: !3, line: 682, column: 33)
!12504 = !DILocation(line: 683, column: 9, scope: !12503)
!12505 = !DILocation(line: 683, column: 41, scope: !12503)
!12506 = !DILocation(line: 683, column: 44, scope: !12503)
!12507 = !DILocation(line: 683, column: 16, scope: !12503)
!12508 = !DILocation(line: 685, column: 27, scope: !12503)
!12509 = !DILocation(line: 685, column: 3, scope: !12503)
!12510 = !DILocation(line: 686, column: 2, scope: !12503)
!12511 = !DILocation(line: 682, column: 29, scope: !12497)
!12512 = !DILocation(line: 682, column: 2, scope: !12497)
!12513 = distinct !{!12513, !12501, !12514}
!12514 = !DILocation(line: 686, column: 2, scope: !12494)
!12515 = !DILocation(line: 688, column: 39, scope: !12479)
!12516 = !DILocation(line: 688, column: 2, scope: !12479)
!12517 = !DILocation(line: 689, column: 33, scope: !12479)
!12518 = !DILocation(line: 689, column: 2, scope: !12479)
!12519 = !DILocation(line: 690, column: 42, scope: !12479)
!12520 = !DILocation(line: 690, column: 48, scope: !12479)
!12521 = !DILocation(line: 690, column: 2, scope: !12479)
!12522 = !DILocation(line: 691, column: 9, scope: !12523)
!12523 = distinct !DILexicalBlock(scope: !12479, file: !3, line: 691, column: 2)
!12524 = !DILocation(line: 691, column: 7, scope: !12523)
!12525 = !DILocation(line: 691, column: 14, scope: !12526)
!12526 = distinct !DILexicalBlock(scope: !12523, file: !3, line: 691, column: 2)
!12527 = !DILocation(line: 691, column: 16, scope: !12526)
!12528 = !DILocation(line: 691, column: 2, scope: !12523)
!12529 = !DILocalVariable(name: "mapaddr", scope: !12530, file: !3, line: 692, type: !2091)
!12530 = distinct !DILexicalBlock(scope: !12526, file: !3, line: 691, column: 43)
!12531 = !DILocation(line: 692, column: 14, scope: !12530)
!12532 = !DILocation(line: 692, column: 51, scope: !12530)
!12533 = !DILocation(line: 692, column: 54, scope: !12530)
!12534 = !DILocation(line: 692, column: 24, scope: !12530)
!12535 = !DILocation(line: 694, column: 34, scope: !12530)
!12536 = !DILocation(line: 694, column: 40, scope: !12530)
!12537 = !DILocation(line: 694, column: 43, scope: !12530)
!12538 = !DILocation(line: 694, column: 3, scope: !12530)
!12539 = !DILocation(line: 695, column: 2, scope: !12530)
!12540 = !DILocation(line: 691, column: 39, scope: !12526)
!12541 = !DILocation(line: 691, column: 2, scope: !12526)
!12542 = distinct !{!12542, !12528, !12543}
!12543 = !DILocation(line: 695, column: 2, scope: !12523)
!12544 = !DILocation(line: 696, column: 27, scope: !12479)
!12545 = !DILocation(line: 696, column: 38, scope: !12479)
!12546 = !DILocation(line: 696, column: 44, scope: !12479)
!12547 = !DILocation(line: 696, column: 50, scope: !12479)
!12548 = !DILocation(line: 696, column: 53, scope: !12479)
!12549 = !DILocation(line: 696, column: 8, scope: !12479)
!12550 = !DILocation(line: 696, column: 6, scope: !12479)
!12551 = !DILocation(line: 697, column: 6, scope: !12552)
!12552 = distinct !DILexicalBlock(scope: !12479, file: !3, line: 697, column: 6)
!12553 = !DILocation(line: 697, column: 6, scope: !12479)
!12554 = !DILocation(line: 698, column: 10, scope: !12552)
!12555 = !DILocation(line: 698, column: 3, scope: !12552)
!12556 = !DILocation(line: 699, column: 41, scope: !12479)
!12557 = !DILocation(line: 699, column: 52, scope: !12479)
!12558 = !DILocation(line: 699, column: 2, scope: !12479)
!12559 = !DILocation(line: 700, column: 45, scope: !12479)
!12560 = !DILocation(line: 700, column: 56, scope: !12479)
!12561 = !DILocation(line: 700, column: 2, scope: !12479)
!12562 = !DILocation(line: 701, column: 2, scope: !12479)
!12563 = !DILocation(line: 702, column: 1, scope: !12479)
!12564 = distinct !DISubprogram(name: "mlxsw_pci_eq_fini", scope: !3, file: !3, line: 704, type: !8379, scopeLine: 706, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12565 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !12564, file: !3, line: 704, type: !7722)
!12566 = !DILocation(line: 704, column: 49, scope: !12564)
!12567 = !DILocalVariable(name: "q", arg: 2, scope: !12564, file: !3, line: 705, type: !7669)
!12568 = !DILocation(line: 705, column: 34, scope: !12564)
!12569 = !DILocation(line: 707, column: 21, scope: !12564)
!12570 = !DILocation(line: 707, column: 32, scope: !12564)
!12571 = !DILocation(line: 707, column: 38, scope: !12564)
!12572 = !DILocation(line: 707, column: 41, scope: !12564)
!12573 = !DILocation(line: 707, column: 2, scope: !12564)
!12574 = !DILocation(line: 708, column: 1, scope: !12564)
!12575 = distinct !DISubprogram(name: "mlxsw_pci_eq_tasklet", scope: !3, file: !3, line: 736, type: !7718, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12576 = !DILocalVariable(name: "t", arg: 1, scope: !12575, file: !3, line: 736, type: !7705)
!12577 = !DILocation(line: 736, column: 57, scope: !12575)
!12578 = !DILocalVariable(name: "q", scope: !12575, file: !3, line: 738, type: !7669)
!12579 = !DILocation(line: 738, column: 26, scope: !12575)
!12580 = !DILocalVariable(name: "__mptr", scope: !12581, file: !3, line: 738, type: !646)
!12581 = distinct !DILexicalBlock(scope: !12575, file: !3, line: 738, column: 30)
!12582 = !DILocation(line: 738, column: 30, scope: !12581)
!12583 = !DILocation(line: 738, column: 30, scope: !12584)
!12584 = distinct !DILexicalBlock(scope: !12581, file: !3, line: 738, column: 30)
!12585 = !DILocalVariable(name: "mlxsw_pci", scope: !12575, file: !3, line: 739, type: !7722)
!12586 = !DILocation(line: 739, column: 20, scope: !12575)
!12587 = !DILocation(line: 739, column: 32, scope: !12575)
!12588 = !DILocation(line: 739, column: 35, scope: !12575)
!12589 = !DILocalVariable(name: "cq_count", scope: !12575, file: !3, line: 740, type: !849)
!12590 = !DILocation(line: 740, column: 5, scope: !12575)
!12591 = !DILocation(line: 740, column: 35, scope: !12575)
!12592 = !DILocation(line: 740, column: 16, scope: !12575)
!12593 = !DILocalVariable(name: "active_cqns", scope: !12575, file: !3, line: 741, type: !7105)
!12594 = !DILocation(line: 741, column: 16, scope: !12575)
!12595 = !DILocalVariable(name: "eqe", scope: !12575, file: !3, line: 742, type: !1093)
!12596 = !DILocation(line: 742, column: 8, scope: !12575)
!12597 = !DILocalVariable(name: "cqn", scope: !12575, file: !3, line: 743, type: !849)
!12598 = !DILocation(line: 743, column: 5, scope: !12575)
!12599 = !DILocalVariable(name: "cq_handle", scope: !12575, file: !3, line: 744, type: !826)
!12600 = !DILocation(line: 744, column: 7, scope: !12575)
!12601 = !DILocalVariable(name: "items", scope: !12575, file: !3, line: 745, type: !32)
!12602 = !DILocation(line: 745, column: 6, scope: !12575)
!12603 = !DILocalVariable(name: "credits", scope: !12575, file: !3, line: 746, type: !32)
!12604 = !DILocation(line: 746, column: 6, scope: !12575)
!12605 = !DILocation(line: 746, column: 16, scope: !12575)
!12606 = !DILocation(line: 746, column: 19, scope: !12575)
!12607 = !DILocation(line: 746, column: 25, scope: !12575)
!12608 = !DILocation(line: 748, column: 2, scope: !12575)
!12609 = !DILocation(line: 750, column: 2, scope: !12575)
!12610 = !DILocation(line: 750, column: 40, scope: !12575)
!12611 = !DILocation(line: 750, column: 16, scope: !12575)
!12612 = !DILocation(line: 750, column: 14, scope: !12575)
!12613 = !DILocation(line: 756, column: 11, scope: !12614)
!12614 = distinct !DILexicalBlock(scope: !12575, file: !3, line: 750, column: 45)
!12615 = !DILocation(line: 756, column: 14, scope: !12614)
!12616 = !DILocation(line: 756, column: 3, scope: !12614)
!12617 = !DILocation(line: 758, column: 27, scope: !12618)
!12618 = distinct !DILexicalBlock(scope: !12614, file: !3, line: 756, column: 19)
!12619 = !DILocation(line: 758, column: 38, scope: !12618)
!12620 = !DILocation(line: 758, column: 4, scope: !12618)
!12621 = !DILocation(line: 759, column: 4, scope: !12618)
!12622 = !DILocation(line: 759, column: 7, scope: !12618)
!12623 = !DILocation(line: 759, column: 9, scope: !12618)
!12624 = !DILocation(line: 759, column: 12, scope: !12618)
!12625 = !DILocation(line: 759, column: 24, scope: !12618)
!12626 = !DILocation(line: 760, column: 4, scope: !12618)
!12627 = !DILocation(line: 762, column: 32, scope: !12618)
!12628 = !DILocation(line: 762, column: 10, scope: !12618)
!12629 = !DILocation(line: 762, column: 8, scope: !12618)
!12630 = !DILocation(line: 763, column: 12, scope: !12618)
!12631 = !DILocation(line: 763, column: 17, scope: !12618)
!12632 = !DILocation(line: 763, column: 4, scope: !12618)
!12633 = !DILocation(line: 764, column: 14, scope: !12618)
!12634 = !DILocation(line: 765, column: 4, scope: !12618)
!12635 = !DILocation(line: 765, column: 7, scope: !12618)
!12636 = !DILocation(line: 765, column: 9, scope: !12618)
!12637 = !DILocation(line: 765, column: 12, scope: !12618)
!12638 = !DILocation(line: 765, column: 25, scope: !12618)
!12639 = !DILocation(line: 766, column: 4, scope: !12618)
!12640 = !DILocation(line: 768, column: 4, scope: !12618)
!12641 = !DILocation(line: 768, column: 7, scope: !12618)
!12642 = !DILocation(line: 768, column: 9, scope: !12618)
!12643 = !DILocation(line: 768, column: 12, scope: !12618)
!12644 = !DILocation(line: 768, column: 26, scope: !12618)
!12645 = !DILocation(line: 769, column: 3, scope: !12618)
!12646 = !DILocation(line: 770, column: 7, scope: !12647)
!12647 = distinct !DILexicalBlock(scope: !12614, file: !3, line: 770, column: 7)
!12648 = !DILocation(line: 770, column: 18, scope: !12647)
!12649 = !DILocation(line: 770, column: 15, scope: !12647)
!12650 = !DILocation(line: 770, column: 7, scope: !12614)
!12651 = !DILocation(line: 771, column: 4, scope: !12647)
!12652 = distinct !{!12652, !12609, !12653}
!12653 = !DILocation(line: 772, column: 2, scope: !12575)
!12654 = !DILocation(line: 773, column: 6, scope: !12655)
!12655 = distinct !DILexicalBlock(scope: !12575, file: !3, line: 773, column: 6)
!12656 = !DILocation(line: 773, column: 6, scope: !12575)
!12657 = !DILocation(line: 774, column: 42, scope: !12658)
!12658 = distinct !DILexicalBlock(scope: !12655, file: !3, line: 773, column: 13)
!12659 = !DILocation(line: 774, column: 53, scope: !12658)
!12660 = !DILocation(line: 774, column: 3, scope: !12658)
!12661 = !DILocation(line: 775, column: 46, scope: !12658)
!12662 = !DILocation(line: 775, column: 57, scope: !12658)
!12663 = !DILocation(line: 775, column: 3, scope: !12658)
!12664 = !DILocation(line: 776, column: 2, scope: !12658)
!12665 = !DILocation(line: 778, column: 7, scope: !12666)
!12666 = distinct !DILexicalBlock(scope: !12575, file: !3, line: 778, column: 6)
!12667 = !DILocation(line: 778, column: 6, scope: !12575)
!12668 = !DILocation(line: 779, column: 3, scope: !12666)
!12669 = !DILocation(line: 780, column: 2, scope: !12670)
!12670 = distinct !DILexicalBlock(scope: !12575, file: !3, line: 780, column: 2)
!12671 = !DILocation(line: 780, column: 2, scope: !12672)
!12672 = distinct !DILexicalBlock(scope: !12670, file: !3, line: 780, column: 2)
!12673 = !DILocation(line: 781, column: 24, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12672, file: !3, line: 780, column: 47)
!12675 = !DILocation(line: 781, column: 35, scope: !12674)
!12676 = !DILocation(line: 781, column: 7, scope: !12674)
!12677 = !DILocation(line: 781, column: 5, scope: !12674)
!12678 = !DILocation(line: 782, column: 36, scope: !12674)
!12679 = !DILocation(line: 782, column: 3, scope: !12674)
!12680 = !DILocation(line: 783, column: 2, scope: !12674)
!12681 = distinct !{!12681, !12669, !12682}
!12682 = !DILocation(line: 783, column: 2, scope: !12670)
!12683 = !DILocation(line: 784, column: 1, scope: !12575)
!12684 = distinct !DISubprogram(name: "mlxsw_pci_queue_elem_get", scope: !3, file: !3, line: 166, type: !12685, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12685 = !DISubroutineType(types: !12686)
!12686 = !{!1093, !7669, !32}
!12687 = !DILocalVariable(name: "q", arg: 1, scope: !12684, file: !3, line: 166, type: !7669)
!12688 = !DILocation(line: 166, column: 63, scope: !12684)
!12689 = !DILocalVariable(name: "elem_index", arg: 2, scope: !12684, file: !3, line: 166, type: !32)
!12690 = !DILocation(line: 166, column: 70, scope: !12684)
!12691 = !DILocation(line: 168, column: 39, scope: !12684)
!12692 = !DILocation(line: 168, column: 42, scope: !12684)
!12693 = !DILocation(line: 168, column: 9, scope: !12684)
!12694 = !DILocation(line: 168, column: 55, scope: !12684)
!12695 = !DILocation(line: 168, column: 2, scope: !12684)
!12696 = distinct !DISubprogram(name: "mlxsw_pci_eqe_owner_set", scope: !7410, file: !7410, line: 248, type: !11071, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12697 = !DILocalVariable(name: "buf", arg: 1, scope: !12696, file: !7410, line: 248, type: !1093)
!12698 = !DILocation(line: 248, column: 1, scope: !12696)
!12699 = !DILocalVariable(name: "val", arg: 2, scope: !12696, file: !7410, line: 248, type: !1042)
!12700 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_sw2hw_eq_int_msix_set", scope: !7482, file: !7482, line: 1135, type: !11071, scopeLine: 1135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12701 = !DILocalVariable(name: "buf", arg: 1, scope: !12700, file: !7482, line: 1135, type: !1093)
!12702 = !DILocation(line: 1135, column: 1, scope: !12700)
!12703 = !DILocalVariable(name: "val", arg: 2, scope: !12700, file: !7482, line: 1135, type: !1042)
!12704 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_sw2hw_eq_st_set", scope: !7482, file: !7482, line: 1144, type: !11071, scopeLine: 1144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12705 = !DILocalVariable(name: "buf", arg: 1, scope: !12704, file: !7482, line: 1144, type: !1093)
!12706 = !DILocation(line: 1144, column: 1, scope: !12704)
!12707 = !DILocalVariable(name: "val", arg: 2, scope: !12704, file: !7482, line: 1144, type: !1042)
!12708 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_sw2hw_eq_log_eq_size_set", scope: !7482, file: !7482, line: 1149, type: !11071, scopeLine: 1149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12709 = !DILocalVariable(name: "buf", arg: 1, scope: !12708, file: !7482, line: 1149, type: !1093)
!12710 = !DILocation(line: 1149, column: 1, scope: !12708)
!12711 = !DILocalVariable(name: "val", arg: 2, scope: !12708, file: !7482, line: 1149, type: !1042)
!12712 = distinct !DISubprogram(name: "__ilog2_u32", scope: !9163, file: !9163, line: 22, type: !12713, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12713 = !DISubroutineType(types: !12714)
!12714 = !{!32, !1042}
!12715 = !DILocalVariable(name: "x", arg: 1, scope: !12716, file: !9125, line: 324, type: !7)
!12716 = distinct !DISubprogram(name: "fls", scope: !9125, file: !9125, line: 324, type: !12717, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12717 = !DISubroutineType(types: !12718)
!12718 = !{!32, !7}
!12719 = !DILocation(line: 324, column: 45, scope: !12716, inlinedAt: !12720)
!12720 = distinct !DILocation(line: 24, column: 9, scope: !12712)
!12721 = !DILocalVariable(name: "r", scope: !12716, file: !9125, line: 326, type: !32)
!12722 = !DILocation(line: 326, column: 6, scope: !12716, inlinedAt: !12720)
!12723 = !DILocalVariable(name: "n", arg: 1, scope: !12712, file: !9163, line: 22, type: !1042)
!12724 = !DILocation(line: 22, column: 21, scope: !12712)
!12725 = !DILocation(line: 24, column: 13, scope: !12712)
!12726 = !DILocation(line: 340, column: 14, scope: !12716, inlinedAt: !12720)
!12727 = !DILocation(line: 338, column: 2, scope: !12716, inlinedAt: !12720)
!12728 = !{i32 291086}
!12729 = !DILocation(line: 351, column: 9, scope: !12716, inlinedAt: !12720)
!12730 = !DILocation(line: 351, column: 11, scope: !12716, inlinedAt: !12720)
!12731 = !DILocation(line: 24, column: 16, scope: !12712)
!12732 = !DILocation(line: 24, column: 2, scope: !12712)
!12733 = distinct !DISubprogram(name: "__mlxsw_pci_queue_page_get", scope: !3, file: !3, line: 278, type: !12734, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12734 = !DISubroutineType(types: !12735)
!12735 = !{!2091, !7669, !32}
!12736 = !DILocalVariable(name: "q", arg: 1, scope: !12733, file: !3, line: 278, type: !7669)
!12737 = !DILocation(line: 278, column: 70, scope: !12733)
!12738 = !DILocalVariable(name: "page_index", arg: 2, scope: !12733, file: !3, line: 279, type: !32)
!12739 = !DILocation(line: 279, column: 15, scope: !12733)
!12740 = !DILocation(line: 281, column: 9, scope: !12733)
!12741 = !DILocation(line: 281, column: 12, scope: !12733)
!12742 = !DILocation(line: 281, column: 21, scope: !12733)
!12743 = !DILocation(line: 281, column: 53, scope: !12733)
!12744 = !DILocation(line: 281, column: 51, scope: !12733)
!12745 = !DILocation(line: 281, column: 31, scope: !12733)
!12746 = !DILocation(line: 281, column: 29, scope: !12733)
!12747 = !DILocation(line: 281, column: 2, scope: !12733)
!12748 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_sw2hw_eq_pa_set", scope: !7482, file: !7482, line: 1161, type: !11378, scopeLine: 1161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12749 = !DILocalVariable(name: "buf", arg: 1, scope: !12748, file: !7482, line: 1161, type: !1093)
!12750 = !DILocation(line: 1161, column: 1, scope: !12748)
!12751 = !DILocalVariable(name: "index", arg: 2, scope: !12748, file: !7482, line: 1161, type: !531)
!12752 = !DILocalVariable(name: "val", arg: 3, scope: !12748, file: !7482, line: 1161, type: !386)
!12753 = distinct !DISubprogram(name: "mlxsw_cmd_sw2hw_eq", scope: !7482, file: !7482, line: 1124, type: !11392, scopeLine: 1126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12754 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !12753, file: !7482, line: 1124, type: !8008)
!12755 = !DILocation(line: 1124, column: 57, scope: !12753)
!12756 = !DILocalVariable(name: "in_mbox", arg: 2, scope: !12753, file: !7482, line: 1125, type: !1093)
!12757 = !DILocation(line: 1125, column: 16, scope: !12753)
!12758 = !DILocalVariable(name: "eq_number", arg: 3, scope: !12753, file: !7482, line: 1125, type: !1042)
!12759 = !DILocation(line: 1125, column: 29, scope: !12753)
!12760 = !DILocation(line: 1127, column: 27, scope: !12753)
!12761 = !DILocation(line: 1128, column: 9, scope: !12753)
!12762 = !DILocation(line: 1128, column: 20, scope: !12753)
!12763 = !DILocation(line: 1127, column: 9, scope: !12753)
!12764 = !DILocation(line: 1127, column: 2, scope: !12753)
!12765 = distinct !DISubprogram(name: "mlxsw_pci_queue_doorbell_consumer_ring", scope: !3, file: !3, line: 262, type: !8379, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12766 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !12765, file: !3, line: 262, type: !7722)
!12767 = !DILocation(line: 262, column: 70, scope: !12765)
!12768 = !DILocalVariable(name: "q", arg: 2, scope: !12765, file: !3, line: 263, type: !7669)
!12769 = !DILocation(line: 263, column: 34, scope: !12765)
!12770 = !DILocation(line: 265, column: 2, scope: !12765)
!12771 = !{i32 -2136904162}
!12772 = !DILocation(line: 266, column: 33, scope: !12765)
!12773 = !DILocation(line: 266, column: 44, scope: !12765)
!12774 = !DILocation(line: 267, column: 12, scope: !12765)
!12775 = !DILocation(line: 267, column: 15, scope: !12765)
!12776 = !DILocation(line: 267, column: 34, scope: !12765)
!12777 = !DILocation(line: 267, column: 37, scope: !12765)
!12778 = !DILocation(line: 267, column: 32, scope: !12765)
!12779 = !DILocation(line: 266, column: 2, scope: !12765)
!12780 = !DILocation(line: 268, column: 1, scope: !12765)
!12781 = distinct !DISubprogram(name: "mlxsw_pci_queue_doorbell_arm_consumer_ring", scope: !3, file: !3, line: 271, type: !8379, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12782 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !12781, file: !3, line: 271, type: !7722)
!12783 = !DILocation(line: 271, column: 62, scope: !12781)
!12784 = !DILocalVariable(name: "q", arg: 2, scope: !12781, file: !3, line: 272, type: !7669)
!12785 = !DILocation(line: 272, column: 33, scope: !12781)
!12786 = !DILocation(line: 274, column: 2, scope: !12781)
!12787 = !{i32 -2136904126}
!12788 = !DILocation(line: 275, column: 37, scope: !12781)
!12789 = !DILocation(line: 275, column: 48, scope: !12781)
!12790 = !DILocation(line: 275, column: 51, scope: !12781)
!12791 = !DILocation(line: 275, column: 54, scope: !12781)
!12792 = !DILocation(line: 275, column: 2, scope: !12781)
!12793 = !DILocation(line: 276, column: 1, scope: !12781)
!12794 = distinct !DISubprogram(name: "__mlxsw_pci_queue_doorbell_set", scope: !3, file: !3, line: 235, type: !12795, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12795 = !DISubroutineType(types: !12796)
!12796 = !{null, !7722, !7669, !636}
!12797 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !12794, file: !3, line: 235, type: !7722)
!12798 = !DILocation(line: 235, column: 62, scope: !12794)
!12799 = !DILocalVariable(name: "q", arg: 2, scope: !12794, file: !3, line: 236, type: !7669)
!12800 = !DILocation(line: 236, column: 33, scope: !12794)
!12801 = !DILocalVariable(name: "val", arg: 3, scope: !12794, file: !3, line: 237, type: !636)
!12802 = !DILocation(line: 237, column: 13, scope: !12794)
!12803 = !DILocation(line: 239, column: 2, scope: !12794)
!12804 = !DILocation(line: 243, column: 1, scope: !12794)
!12805 = distinct !DISubprogram(name: "__mlxsw_pci_queue_doorbell_arm_set", scope: !3, file: !3, line: 245, type: !12795, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12806 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !12805, file: !3, line: 245, type: !7722)
!12807 = !DILocation(line: 245, column: 66, scope: !12805)
!12808 = !DILocalVariable(name: "q", arg: 2, scope: !12805, file: !3, line: 246, type: !7669)
!12809 = !DILocation(line: 246, column: 37, scope: !12805)
!12810 = !DILocalVariable(name: "val", arg: 3, scope: !12805, file: !3, line: 247, type: !636)
!12811 = !DILocation(line: 247, column: 17, scope: !12805)
!12812 = !DILocation(line: 249, column: 2, scope: !12805)
!12813 = !DILocation(line: 253, column: 1, scope: !12805)
!12814 = distinct !DISubprogram(name: "mlxsw_cmd_hw2sw_eq", scope: !7482, file: !7482, line: 1169, type: !12815, scopeLine: 1171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12815 = !DISubroutineType(types: !12816)
!12816 = !{!32, !8008, !1042}
!12817 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !12814, file: !7482, line: 1169, type: !8008)
!12818 = !DILocation(line: 1169, column: 57, scope: !12814)
!12819 = !DILocalVariable(name: "eq_number", arg: 2, scope: !12814, file: !7482, line: 1170, type: !1042)
!12820 = !DILocation(line: 1170, column: 14, scope: !12814)
!12821 = !DILocation(line: 1172, column: 29, scope: !12814)
!12822 = !DILocation(line: 1173, column: 11, scope: !12814)
!12823 = !DILocation(line: 1172, column: 9, scope: !12814)
!12824 = !DILocation(line: 1172, column: 2, scope: !12814)
!12825 = distinct !DISubprogram(name: "mlxsw_cmd_exec_none", scope: !7482, file: !7482, line: 51, type: !12826, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12826 = !DISubroutineType(types: !12827)
!12827 = !{!32, !8008, !636, !849, !1042}
!12828 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !12825, file: !7482, line: 51, type: !8008)
!12829 = !DILocation(line: 51, column: 58, scope: !12825)
!12830 = !DILocalVariable(name: "opcode", arg: 2, scope: !12825, file: !7482, line: 51, type: !636)
!12831 = !DILocation(line: 51, column: 74, scope: !12825)
!12832 = !DILocalVariable(name: "opcode_mod", arg: 3, scope: !12825, file: !7482, line: 52, type: !849)
!12833 = !DILocation(line: 52, column: 14, scope: !12825)
!12834 = !DILocalVariable(name: "in_mod", arg: 4, scope: !12825, file: !7482, line: 52, type: !1042)
!12835 = !DILocation(line: 52, column: 30, scope: !12825)
!12836 = !DILocation(line: 54, column: 24, scope: !12825)
!12837 = !DILocation(line: 54, column: 36, scope: !12825)
!12838 = !DILocation(line: 54, column: 44, scope: !12825)
!12839 = !DILocation(line: 54, column: 56, scope: !12825)
!12840 = !DILocation(line: 54, column: 9, scope: !12825)
!12841 = !DILocation(line: 54, column: 2, scope: !12825)
!12842 = distinct !DISubprogram(name: "mlxsw_pci_cq_count", scope: !3, file: !3, line: 197, type: !12843, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12843 = !DISubroutineType(types: !12844)
!12844 = !{!849, !7722}
!12845 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !12842, file: !3, line: 197, type: !7722)
!12846 = !DILocation(line: 197, column: 48, scope: !12842)
!12847 = !DILocation(line: 199, column: 33, scope: !12842)
!12848 = !DILocation(line: 199, column: 9, scope: !12842)
!12849 = !DILocation(line: 199, column: 2, scope: !12842)
!12850 = distinct !DISubprogram(name: "mlxsw_pci_eq_sw_eqe_get", scope: !3, file: !3, line: 720, type: !12851, scopeLine: 721, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12851 = !DISubroutineType(types: !12852)
!12852 = !{!1093, !7669}
!12853 = !DILocalVariable(name: "q", arg: 1, scope: !12850, file: !3, line: 720, type: !7669)
!12854 = !DILocation(line: 720, column: 62, scope: !12850)
!12855 = !DILocalVariable(name: "elem_info", scope: !12850, file: !3, line: 722, type: !7680)
!12856 = !DILocation(line: 722, column: 36, scope: !12850)
!12857 = !DILocalVariable(name: "elem", scope: !12850, file: !3, line: 723, type: !1093)
!12858 = !DILocation(line: 723, column: 8, scope: !12850)
!12859 = !DILocalVariable(name: "owner_bit", scope: !12850, file: !3, line: 724, type: !826)
!12860 = !DILocation(line: 724, column: 7, scope: !12850)
!12861 = !DILocation(line: 726, column: 53, scope: !12850)
!12862 = !DILocation(line: 726, column: 14, scope: !12850)
!12863 = !DILocation(line: 726, column: 12, scope: !12850)
!12864 = !DILocation(line: 727, column: 9, scope: !12850)
!12865 = !DILocation(line: 727, column: 20, scope: !12850)
!12866 = !DILocation(line: 727, column: 7, scope: !12850)
!12867 = !DILocation(line: 728, column: 38, scope: !12850)
!12868 = !DILocation(line: 728, column: 14, scope: !12850)
!12869 = !DILocation(line: 728, column: 12, scope: !12850)
!12870 = !DILocation(line: 729, column: 30, scope: !12871)
!12871 = distinct !DILexicalBlock(scope: !12850, file: !3, line: 729, column: 6)
!12872 = !DILocation(line: 729, column: 33, scope: !12871)
!12873 = !DILocation(line: 729, column: 6, scope: !12871)
!12874 = !DILocation(line: 729, column: 6, scope: !12850)
!12875 = !DILocation(line: 730, column: 3, scope: !12871)
!12876 = !DILocation(line: 731, column: 2, scope: !12850)
!12877 = !DILocation(line: 731, column: 5, scope: !12850)
!12878 = !DILocation(line: 731, column: 21, scope: !12850)
!12879 = !DILocation(line: 732, column: 2, scope: !12850)
!12880 = !{i32 -2136893607}
!12881 = !DILocation(line: 733, column: 9, scope: !12850)
!12882 = !DILocation(line: 733, column: 2, scope: !12850)
!12883 = !DILocation(line: 734, column: 1, scope: !12850)
!12884 = distinct !DISubprogram(name: "mlxsw_pci_eq_cmd_event", scope: !3, file: !3, line: 710, type: !12885, scopeLine: 711, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12885 = !DISubroutineType(types: !12886)
!12886 = !{null, !7722, !1093}
!12887 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !12884, file: !3, line: 710, type: !7722)
!12888 = !DILocation(line: 710, column: 54, scope: !12884)
!12889 = !DILocalVariable(name: "eqe", arg: 2, scope: !12884, file: !3, line: 710, type: !1093)
!12890 = !DILocation(line: 710, column: 71, scope: !12884)
!12891 = !DILocation(line: 712, column: 60, scope: !12884)
!12892 = !DILocation(line: 712, column: 31, scope: !12884)
!12893 = !DILocation(line: 712, column: 2, scope: !12884)
!12894 = !DILocation(line: 712, column: 13, scope: !12884)
!12895 = !DILocation(line: 712, column: 17, scope: !12884)
!12896 = !DILocation(line: 712, column: 22, scope: !12884)
!12897 = !DILocation(line: 712, column: 29, scope: !12884)
!12898 = !DILocation(line: 714, column: 44, scope: !12884)
!12899 = !DILocation(line: 714, column: 10, scope: !12884)
!12900 = !DILocation(line: 714, column: 4, scope: !12884)
!12901 = !DILocation(line: 714, column: 50, scope: !12884)
!12902 = !DILocation(line: 715, column: 37, scope: !12884)
!12903 = !DILocation(line: 715, column: 3, scope: !12884)
!12904 = !DILocation(line: 714, column: 56, scope: !12884)
!12905 = !DILocation(line: 713, column: 2, scope: !12884)
!12906 = !DILocation(line: 713, column: 13, scope: !12884)
!12907 = !DILocation(line: 713, column: 17, scope: !12884)
!12908 = !DILocation(line: 713, column: 22, scope: !12884)
!12909 = !DILocation(line: 713, column: 32, scope: !12884)
!12910 = !DILocation(line: 716, column: 2, scope: !12884)
!12911 = !DILocation(line: 716, column: 13, scope: !12884)
!12912 = !DILocation(line: 716, column: 17, scope: !12884)
!12913 = !DILocation(line: 716, column: 27, scope: !12884)
!12914 = !DILocation(line: 717, column: 2, scope: !12884)
!12915 = !DILocation(line: 718, column: 1, scope: !12884)
!12916 = distinct !DISubprogram(name: "mlxsw_pci_eqe_cqn_get", scope: !7410, file: !7410, line: 243, type: !10193, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12917 = !DILocalVariable(name: "buf", arg: 1, scope: !12916, file: !7410, line: 243, type: !347)
!12918 = !DILocation(line: 243, column: 1, scope: !12916)
!12919 = distinct !DISubprogram(name: "set_bit", scope: !12920, file: !12920, line: 26, type: !12921, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12920 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!12921 = !DISubroutineType(types: !12922)
!12922 = !{null, !1053, !12923}
!12923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12924, size: 64)
!12924 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !367)
!12925 = !DILocalVariable(name: "nr", arg: 1, scope: !12926, file: !9125, line: 52, type: !1053)
!12926 = distinct !DISubprogram(name: "arch_set_bit", scope: !9125, file: !9125, line: 52, type: !12921, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12927 = !DILocation(line: 52, column: 19, scope: !12926, inlinedAt: !12928)
!12928 = distinct !DILocation(line: 29, column: 2, scope: !12919)
!12929 = !DILocalVariable(name: "addr", arg: 2, scope: !12926, file: !9125, line: 52, type: !12923)
!12930 = !DILocation(line: 52, column: 47, scope: !12926, inlinedAt: !12928)
!12931 = !DILocalVariable(name: "v", arg: 1, scope: !12932, file: !12933, line: 84, type: !12936)
!12932 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !12933, file: !12933, line: 84, type: !12934, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12933 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!12934 = !DISubroutineType(types: !12935)
!12935 = !{null, !12936, !1094}
!12936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12937, size: 64)
!12937 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12938)
!12938 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!12939 = !DILocation(line: 84, column: 74, scope: !12932, inlinedAt: !12940)
!12940 = distinct !DILocation(line: 28, column: 2, scope: !12919)
!12941 = !DILocalVariable(name: "size", arg: 2, scope: !12932, file: !12933, line: 84, type: !1094)
!12942 = !DILocation(line: 84, column: 84, scope: !12932, inlinedAt: !12940)
!12943 = !DILocalVariable(name: "nr", arg: 1, scope: !12919, file: !12920, line: 26, type: !1053)
!12944 = !DILocation(line: 26, column: 33, scope: !12919)
!12945 = !DILocalVariable(name: "addr", arg: 2, scope: !12919, file: !12920, line: 26, type: !12923)
!12946 = !DILocation(line: 26, column: 61, scope: !12919)
!12947 = !DILocation(line: 28, column: 26, scope: !12919)
!12948 = !DILocation(line: 28, column: 33, scope: !12919)
!12949 = !DILocation(line: 28, column: 31, scope: !12919)
!12950 = !DILocation(line: 86, column: 20, scope: !12932, inlinedAt: !12940)
!12951 = !DILocation(line: 86, column: 23, scope: !12932, inlinedAt: !12940)
!12952 = !DILocation(line: 86, column: 2, scope: !12932, inlinedAt: !12940)
!12953 = !DILocation(line: 87, column: 2, scope: !12932, inlinedAt: !12940)
!12954 = !DILocation(line: 29, column: 15, scope: !12919)
!12955 = !DILocation(line: 29, column: 19, scope: !12919)
!12956 = !DILocation(line: 54, column: 27, scope: !12957, inlinedAt: !12928)
!12957 = distinct !DILexicalBlock(scope: !12926, file: !9125, line: 54, column: 6)
!12958 = !DILocation(line: 54, column: 6, scope: !12957, inlinedAt: !12928)
!12959 = !DILocation(line: 54, column: 6, scope: !12926, inlinedAt: !12928)
!12960 = !DILocation(line: 56, column: 6, scope: !12961, inlinedAt: !12928)
!12961 = distinct !DILexicalBlock(scope: !12957, file: !9125, line: 54, column: 32)
!12962 = !DILocation(line: 57, column: 12, scope: !12961, inlinedAt: !12928)
!12963 = !DILocation(line: 55, column: 3, scope: !12961, inlinedAt: !12928)
!12964 = !{i32 -2147160169}
!12965 = !DILocation(line: 59, column: 2, scope: !12961, inlinedAt: !12928)
!12966 = !DILocation(line: 61, column: 8, scope: !12967, inlinedAt: !12928)
!12967 = distinct !DILexicalBlock(scope: !12957, file: !9125, line: 59, column: 9)
!12968 = !DILocation(line: 61, column: 32, scope: !12967, inlinedAt: !12928)
!12969 = !DILocation(line: 60, column: 3, scope: !12967, inlinedAt: !12928)
!12970 = !{i32 -2147160037}
!12971 = !DILocation(line: 30, column: 1, scope: !12919)
!12972 = distinct !DISubprogram(name: "mlxsw_pci_cq_get", scope: !3, file: !3, line: 223, type: !12973, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12973 = !DISubroutineType(types: !12974)
!12974 = !{!7669, !7722, !849}
!12975 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !12972, file: !3, line: 223, type: !7722)
!12976 = !DILocation(line: 223, column: 67, scope: !12972)
!12977 = !DILocalVariable(name: "q_num", arg: 2, scope: !12972, file: !3, line: 224, type: !849)
!12978 = !DILocation(line: 224, column: 10, scope: !12972)
!12979 = !DILocation(line: 226, column: 31, scope: !12972)
!12980 = !DILocation(line: 226, column: 67, scope: !12972)
!12981 = !DILocation(line: 226, column: 9, scope: !12972)
!12982 = !DILocation(line: 226, column: 2, scope: !12972)
!12983 = distinct !DISubprogram(name: "mlxsw_pci_queue_tasklet_schedule", scope: !3, file: !3, line: 131, type: !12984, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12984 = !DISubroutineType(types: !12985)
!12985 = !{null, !7669}
!12986 = !DILocalVariable(name: "q", arg: 1, scope: !12983, file: !3, line: 131, type: !7669)
!12987 = !DILocation(line: 131, column: 70, scope: !12983)
!12988 = !DILocation(line: 133, column: 20, scope: !12983)
!12989 = !DILocation(line: 133, column: 23, scope: !12983)
!12990 = !DILocation(line: 133, column: 2, scope: !12983)
!12991 = !DILocation(line: 134, column: 1, scope: !12983)
!12992 = distinct !DISubprogram(name: "__mlxsw_pci_queue_count", scope: !3, file: !3, line: 183, type: !12993, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!12993 = !DISubroutineType(types: !12994)
!12994 = !{!849, !7722, !7403}
!12995 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !12992, file: !3, line: 183, type: !7722)
!12996 = !DILocation(line: 183, column: 53, scope: !12992)
!12997 = !DILocalVariable(name: "q_type", arg: 2, scope: !12992, file: !3, line: 184, type: !7403)
!12998 = !DILocation(line: 184, column: 33, scope: !12992)
!12999 = !DILocalVariable(name: "queue_group", scope: !12992, file: !3, line: 186, type: !12117)
!13000 = !DILocation(line: 186, column: 37, scope: !12992)
!13001 = !DILocation(line: 188, column: 47, scope: !12992)
!13002 = !DILocation(line: 188, column: 58, scope: !12992)
!13003 = !DILocation(line: 188, column: 16, scope: !12992)
!13004 = !DILocation(line: 188, column: 14, scope: !12992)
!13005 = !DILocation(line: 189, column: 9, scope: !12992)
!13006 = !DILocation(line: 189, column: 22, scope: !12992)
!13007 = !DILocation(line: 189, column: 2, scope: !12992)
!13008 = distinct !DISubprogram(name: "mlxsw_pci_queue_elem_info_consumer_get", scope: !3, file: !3, line: 159, type: !13009, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13009 = !DISubroutineType(types: !13010)
!13010 = !{!7680, !7669}
!13011 = !DILocalVariable(name: "q", arg: 1, scope: !13008, file: !3, line: 159, type: !7669)
!13012 = !DILocation(line: 159, column: 64, scope: !13008)
!13013 = !DILocalVariable(name: "index", scope: !13008, file: !3, line: 161, type: !32)
!13014 = !DILocation(line: 161, column: 6, scope: !13008)
!13015 = !DILocation(line: 161, column: 14, scope: !13008)
!13016 = !DILocation(line: 161, column: 17, scope: !13008)
!13017 = !DILocation(line: 161, column: 37, scope: !13008)
!13018 = !DILocation(line: 161, column: 40, scope: !13008)
!13019 = !DILocation(line: 161, column: 46, scope: !13008)
!13020 = !DILocation(line: 161, column: 34, scope: !13008)
!13021 = !DILocation(line: 163, column: 39, scope: !13008)
!13022 = !DILocation(line: 163, column: 42, scope: !13008)
!13023 = !DILocation(line: 163, column: 9, scope: !13008)
!13024 = !DILocation(line: 163, column: 2, scope: !13008)
!13025 = distinct !DISubprogram(name: "mlxsw_pci_eqe_owner_get", scope: !7410, file: !7410, line: 248, type: !10193, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13026 = !DILocalVariable(name: "buf", arg: 1, scope: !13025, file: !7410, line: 248, type: !347)
!13027 = !DILocation(line: 248, column: 1, scope: !13025)
!13028 = distinct !DISubprogram(name: "mlxsw_pci_elem_hw_owned", scope: !3, file: !3, line: 171, type: !13029, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13029 = !DISubroutineType(types: !13030)
!13030 = !{!826, !7669, !826}
!13031 = !DILocalVariable(name: "q", arg: 1, scope: !13028, file: !3, line: 171, type: !7669)
!13032 = !DILocation(line: 171, column: 61, scope: !13028)
!13033 = !DILocalVariable(name: "owner_bit", arg: 2, scope: !13028, file: !3, line: 171, type: !826)
!13034 = !DILocation(line: 171, column: 69, scope: !13028)
!13035 = !DILocation(line: 173, column: 9, scope: !13028)
!13036 = !DILocation(line: 173, column: 25, scope: !13028)
!13037 = !DILocation(line: 173, column: 28, scope: !13028)
!13038 = !DILocation(line: 173, column: 47, scope: !13028)
!13039 = !DILocation(line: 173, column: 50, scope: !13028)
!13040 = !DILocation(line: 173, column: 45, scope: !13028)
!13041 = !DILocation(line: 173, column: 23, scope: !13028)
!13042 = !DILocation(line: 173, column: 22, scope: !13028)
!13043 = !DILocation(line: 173, column: 19, scope: !13028)
!13044 = !DILocation(line: 173, column: 2, scope: !13028)
!13045 = distinct !DISubprogram(name: "mlxsw_pci_eqe_cmd_status_get", scope: !7410, file: !7410, line: 258, type: !10193, scopeLine: 258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13046 = !DILocalVariable(name: "buf", arg: 1, scope: !13045, file: !7410, line: 258, type: !347)
!13047 = !DILocation(line: 258, column: 1, scope: !13045)
!13048 = distinct !DISubprogram(name: "mlxsw_pci_eqe_cmd_out_param_h_get", scope: !7410, file: !7410, line: 263, type: !10193, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13049 = !DILocalVariable(name: "buf", arg: 1, scope: !13048, file: !7410, line: 263, type: !347)
!13050 = !DILocation(line: 263, column: 1, scope: !13048)
!13051 = distinct !DISubprogram(name: "mlxsw_pci_eqe_cmd_out_param_l_get", scope: !7410, file: !7410, line: 268, type: !10193, scopeLine: 268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13052 = !DILocalVariable(name: "buf", arg: 1, scope: !13051, file: !7410, line: 268, type: !347)
!13053 = !DILocation(line: 268, column: 1, scope: !13051)
!13054 = distinct !DISubprogram(name: "kasan_check_write", scope: !13055, file: !13055, line: 38, type: !13056, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13055 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!13056 = !DISubroutineType(types: !13057)
!13057 = !{!826, !12936, !7}
!13058 = !DILocalVariable(name: "p", arg: 1, scope: !13054, file: !13055, line: 38, type: !12936)
!13059 = !DILocation(line: 38, column: 59, scope: !13054)
!13060 = !DILocalVariable(name: "size", arg: 2, scope: !13054, file: !13055, line: 38, type: !7)
!13061 = !DILocation(line: 38, column: 75, scope: !13054)
!13062 = !DILocation(line: 40, column: 2, scope: !13054)
!13063 = distinct !DISubprogram(name: "kcsan_check_access", scope: !13064, file: !13064, line: 178, type: !13065, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13064 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!13065 = !DISubroutineType(types: !13066)
!13066 = !{null, !12936, !1094, !32}
!13067 = !DILocalVariable(name: "ptr", arg: 1, scope: !13063, file: !13064, line: 178, type: !12936)
!13068 = !DILocation(line: 178, column: 60, scope: !13063)
!13069 = !DILocalVariable(name: "size", arg: 2, scope: !13063, file: !13064, line: 178, type: !1094)
!13070 = !DILocation(line: 178, column: 72, scope: !13063)
!13071 = !DILocalVariable(name: "type", arg: 3, scope: !13063, file: !13064, line: 179, type: !32)
!13072 = !DILocation(line: 179, column: 15, scope: !13063)
!13073 = !DILocation(line: 179, column: 23, scope: !13063)
!13074 = distinct !DISubprogram(name: "__mlxsw_pci_queue_get", scope: !3, file: !3, line: 203, type: !13075, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13075 = !DISubroutineType(types: !13076)
!13076 = !{!7669, !7722, !7403, !849}
!13077 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !13074, file: !3, line: 203, type: !7722)
!13078 = !DILocation(line: 203, column: 41, scope: !13074)
!13079 = !DILocalVariable(name: "q_type", arg: 2, scope: !13074, file: !3, line: 204, type: !7403)
!13080 = !DILocation(line: 204, column: 35, scope: !13074)
!13081 = !DILocalVariable(name: "q_num", arg: 3, scope: !13074, file: !3, line: 204, type: !849)
!13082 = !DILocation(line: 204, column: 46, scope: !13074)
!13083 = !DILocation(line: 206, column: 10, scope: !13074)
!13084 = !DILocation(line: 206, column: 21, scope: !13074)
!13085 = !DILocation(line: 206, column: 28, scope: !13074)
!13086 = !DILocation(line: 206, column: 36, scope: !13074)
!13087 = !DILocation(line: 206, column: 38, scope: !13074)
!13088 = !DILocation(line: 206, column: 2, scope: !13074)
!13089 = distinct !DISubprogram(name: "tasklet_schedule", scope: !3067, file: !3067, line: 681, type: !7718, scopeLine: 682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13090 = !DILocalVariable(name: "t", arg: 1, scope: !13089, file: !3067, line: 681, type: !7705)
!13091 = !DILocation(line: 681, column: 60, scope: !13089)
!13092 = !DILocation(line: 683, column: 46, scope: !13093)
!13093 = distinct !DILexicalBlock(scope: !13089, file: !3067, line: 683, column: 6)
!13094 = !DILocation(line: 683, column: 49, scope: !13093)
!13095 = !DILocation(line: 683, column: 7, scope: !13093)
!13096 = !DILocation(line: 683, column: 6, scope: !13089)
!13097 = !DILocation(line: 684, column: 22, scope: !13093)
!13098 = !DILocation(line: 684, column: 3, scope: !13093)
!13099 = !DILocation(line: 685, column: 1, scope: !13089)
!13100 = distinct !DISubprogram(name: "test_and_set_bit", scope: !12920, file: !12920, line: 68, type: !13101, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13101 = !DISubroutineType(types: !13102)
!13102 = !{!826, !1053, !12923}
!13103 = !DILocalVariable(name: "nr", arg: 1, scope: !13104, file: !9125, line: 136, type: !1053)
!13104 = distinct !DISubprogram(name: "arch_test_and_set_bit", scope: !9125, file: !9125, line: 136, type: !13101, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13105 = !DILocation(line: 136, column: 28, scope: !13104, inlinedAt: !13106)
!13106 = distinct !DILocation(line: 71, column: 9, scope: !13100)
!13107 = !DILocalVariable(name: "addr", arg: 2, scope: !13104, file: !9125, line: 136, type: !12923)
!13108 = !DILocation(line: 136, column: 56, scope: !13104, inlinedAt: !13106)
!13109 = !DILocalVariable(name: "c", scope: !13110, file: !9125, line: 138, type: !826)
!13110 = distinct !DILexicalBlock(scope: !13104, file: !9125, line: 138, column: 9)
!13111 = !DILocation(line: 138, column: 9, scope: !13110, inlinedAt: !13106)
!13112 = !DILocalVariable(name: "v", arg: 1, scope: !13113, file: !12933, line: 99, type: !12936)
!13113 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !12933, file: !12933, line: 99, type: !12934, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13114 = !DILocation(line: 99, column: 79, scope: !13113, inlinedAt: !13115)
!13115 = distinct !DILocation(line: 70, column: 2, scope: !13100)
!13116 = !DILocalVariable(name: "size", arg: 2, scope: !13113, file: !12933, line: 99, type: !1094)
!13117 = !DILocation(line: 99, column: 89, scope: !13113, inlinedAt: !13115)
!13118 = !DILocalVariable(name: "nr", arg: 1, scope: !13100, file: !12920, line: 68, type: !1053)
!13119 = !DILocation(line: 68, column: 42, scope: !13100)
!13120 = !DILocalVariable(name: "addr", arg: 2, scope: !13100, file: !12920, line: 68, type: !12923)
!13121 = !DILocation(line: 68, column: 70, scope: !13100)
!13122 = !DILocation(line: 70, column: 31, scope: !13100)
!13123 = !DILocation(line: 70, column: 38, scope: !13100)
!13124 = !DILocation(line: 70, column: 36, scope: !13100)
!13125 = !DILocation(line: 101, column: 20, scope: !13113, inlinedAt: !13115)
!13126 = !DILocation(line: 101, column: 23, scope: !13113, inlinedAt: !13115)
!13127 = !DILocation(line: 101, column: 2, scope: !13113, inlinedAt: !13115)
!13128 = !DILocation(line: 102, column: 2, scope: !13113, inlinedAt: !13115)
!13129 = !DILocation(line: 71, column: 31, scope: !13100)
!13130 = !DILocation(line: 71, column: 35, scope: !13100)
!13131 = !{i32 -2147155683, i32 -2147155587}
!13132 = !DILocation(line: 71, column: 2, scope: !13100)
!13133 = distinct !DISubprogram(name: "mlxsw_pci_cq_pre_init", scope: !3, file: !3, line: 453, type: !8379, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13134 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !13133, file: !3, line: 453, type: !7722)
!13135 = !DILocation(line: 453, column: 53, scope: !13133)
!13136 = !DILocalVariable(name: "q", arg: 2, scope: !13133, file: !3, line: 454, type: !7669)
!13137 = !DILocation(line: 454, column: 31, scope: !13133)
!13138 = !DILocation(line: 456, column: 14, scope: !13133)
!13139 = !DILocation(line: 456, column: 25, scope: !13133)
!13140 = !DILocation(line: 456, column: 2, scope: !13133)
!13141 = !DILocation(line: 456, column: 5, scope: !13133)
!13142 = !DILocation(line: 456, column: 7, scope: !13133)
!13143 = !DILocation(line: 456, column: 10, scope: !13133)
!13144 = !DILocation(line: 456, column: 12, scope: !13133)
!13145 = !DILocation(line: 459, column: 6, scope: !13146)
!13146 = distinct !DILexicalBlock(scope: !13133, file: !3, line: 459, column: 6)
!13147 = !DILocation(line: 459, column: 9, scope: !13146)
!13148 = !DILocation(line: 459, column: 11, scope: !13146)
!13149 = !DILocation(line: 459, column: 14, scope: !13146)
!13150 = !DILocation(line: 459, column: 16, scope: !13146)
!13151 = !DILocation(line: 459, column: 36, scope: !13146)
!13152 = !DILocation(line: 460, column: 6, scope: !13146)
!13153 = !DILocation(line: 460, column: 9, scope: !13146)
!13154 = !DILocation(line: 460, column: 15, scope: !13146)
!13155 = !DILocation(line: 460, column: 26, scope: !13146)
!13156 = !DILocation(line: 460, column: 13, scope: !13146)
!13157 = !DILocation(line: 459, column: 6, scope: !13133)
!13158 = !DILocation(line: 461, column: 3, scope: !13146)
!13159 = !DILocation(line: 461, column: 6, scope: !13146)
!13160 = !DILocation(line: 461, column: 8, scope: !13146)
!13161 = !DILocation(line: 461, column: 11, scope: !13146)
!13162 = !DILocation(line: 461, column: 13, scope: !13146)
!13163 = !DILocation(line: 462, column: 1, scope: !13133)
!13164 = distinct !DISubprogram(name: "mlxsw_pci_cq_init", scope: !3, file: !3, line: 464, type: !8383, scopeLine: 466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13165 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !13164, file: !3, line: 464, type: !7722)
!13166 = !DILocation(line: 464, column: 48, scope: !13164)
!13167 = !DILocalVariable(name: "mbox", arg: 2, scope: !13164, file: !3, line: 464, type: !1093)
!13168 = !DILocation(line: 464, column: 65, scope: !13164)
!13169 = !DILocalVariable(name: "q", arg: 3, scope: !13164, file: !3, line: 465, type: !7669)
!13170 = !DILocation(line: 465, column: 33, scope: !13164)
!13171 = !DILocalVariable(name: "i", scope: !13164, file: !3, line: 467, type: !32)
!13172 = !DILocation(line: 467, column: 6, scope: !13164)
!13173 = !DILocalVariable(name: "err", scope: !13164, file: !3, line: 468, type: !32)
!13174 = !DILocation(line: 468, column: 6, scope: !13164)
!13175 = !DILocation(line: 470, column: 2, scope: !13164)
!13176 = !DILocation(line: 470, column: 5, scope: !13164)
!13177 = !DILocation(line: 470, column: 22, scope: !13164)
!13178 = !DILocation(line: 472, column: 9, scope: !13179)
!13179 = distinct !DILexicalBlock(scope: !13164, file: !3, line: 472, column: 2)
!13180 = !DILocation(line: 472, column: 7, scope: !13179)
!13181 = !DILocation(line: 472, column: 14, scope: !13182)
!13182 = distinct !DILexicalBlock(scope: !13179, file: !3, line: 472, column: 2)
!13183 = !DILocation(line: 472, column: 18, scope: !13182)
!13184 = !DILocation(line: 472, column: 21, scope: !13182)
!13185 = !DILocation(line: 472, column: 16, scope: !13182)
!13186 = !DILocation(line: 472, column: 2, scope: !13179)
!13187 = !DILocalVariable(name: "elem", scope: !13188, file: !3, line: 473, type: !1093)
!13188 = distinct !DILexicalBlock(scope: !13182, file: !3, line: 472, column: 33)
!13189 = !DILocation(line: 473, column: 9, scope: !13188)
!13190 = !DILocation(line: 473, column: 41, scope: !13188)
!13191 = !DILocation(line: 473, column: 44, scope: !13188)
!13192 = !DILocation(line: 473, column: 16, scope: !13188)
!13193 = !DILocation(line: 475, column: 27, scope: !13188)
!13194 = !DILocation(line: 475, column: 30, scope: !13188)
!13195 = !DILocation(line: 475, column: 32, scope: !13188)
!13196 = !DILocation(line: 475, column: 35, scope: !13188)
!13197 = !DILocation(line: 475, column: 38, scope: !13188)
!13198 = !DILocation(line: 475, column: 3, scope: !13188)
!13199 = !DILocation(line: 476, column: 2, scope: !13188)
!13200 = !DILocation(line: 472, column: 29, scope: !13182)
!13201 = !DILocation(line: 472, column: 2, scope: !13182)
!13202 = distinct !{!13202, !13186, !13203}
!13203 = !DILocation(line: 476, column: 2, scope: !13179)
!13204 = !DILocation(line: 478, column: 6, scope: !13205)
!13205 = distinct !DILexicalBlock(scope: !13164, file: !3, line: 478, column: 6)
!13206 = !DILocation(line: 478, column: 9, scope: !13205)
!13207 = !DILocation(line: 478, column: 11, scope: !13205)
!13208 = !DILocation(line: 478, column: 14, scope: !13205)
!13209 = !DILocation(line: 478, column: 16, scope: !13205)
!13210 = !DILocation(line: 478, column: 6, scope: !13164)
!13211 = !DILocation(line: 479, column: 39, scope: !13205)
!13212 = !DILocation(line: 479, column: 3, scope: !13205)
!13213 = !DILocation(line: 481, column: 11, scope: !13214)
!13214 = distinct !DILexicalBlock(scope: !13205, file: !3, line: 481, column: 11)
!13215 = !DILocation(line: 481, column: 14, scope: !13214)
!13216 = !DILocation(line: 481, column: 16, scope: !13214)
!13217 = !DILocation(line: 481, column: 19, scope: !13214)
!13218 = !DILocation(line: 481, column: 21, scope: !13214)
!13219 = !DILocation(line: 481, column: 11, scope: !13205)
!13220 = !DILocation(line: 482, column: 39, scope: !13214)
!13221 = !DILocation(line: 482, column: 3, scope: !13214)
!13222 = !DILocation(line: 485, column: 36, scope: !13164)
!13223 = !DILocation(line: 485, column: 2, scope: !13164)
!13224 = !DILocation(line: 486, column: 33, scope: !13164)
!13225 = !DILocation(line: 486, column: 2, scope: !13164)
!13226 = !DILocation(line: 487, column: 42, scope: !13164)
!13227 = !DILocation(line: 487, column: 48, scope: !13164)
!13228 = !DILocation(line: 487, column: 2, scope: !13164)
!13229 = !DILocation(line: 488, column: 9, scope: !13230)
!13230 = distinct !DILexicalBlock(scope: !13164, file: !3, line: 488, column: 2)
!13231 = !DILocation(line: 488, column: 7, scope: !13230)
!13232 = !DILocation(line: 488, column: 14, scope: !13233)
!13233 = distinct !DILexicalBlock(scope: !13230, file: !3, line: 488, column: 2)
!13234 = !DILocation(line: 488, column: 16, scope: !13233)
!13235 = !DILocation(line: 488, column: 2, scope: !13230)
!13236 = !DILocalVariable(name: "mapaddr", scope: !13237, file: !3, line: 489, type: !2091)
!13237 = distinct !DILexicalBlock(scope: !13233, file: !3, line: 488, column: 43)
!13238 = !DILocation(line: 489, column: 14, scope: !13237)
!13239 = !DILocation(line: 489, column: 51, scope: !13237)
!13240 = !DILocation(line: 489, column: 54, scope: !13237)
!13241 = !DILocation(line: 489, column: 24, scope: !13237)
!13242 = !DILocation(line: 491, column: 34, scope: !13237)
!13243 = !DILocation(line: 491, column: 40, scope: !13237)
!13244 = !DILocation(line: 491, column: 43, scope: !13237)
!13245 = !DILocation(line: 491, column: 3, scope: !13237)
!13246 = !DILocation(line: 492, column: 2, scope: !13237)
!13247 = !DILocation(line: 488, column: 39, scope: !13233)
!13248 = !DILocation(line: 488, column: 2, scope: !13233)
!13249 = distinct !{!13249, !13235, !13250}
!13250 = !DILocation(line: 492, column: 2, scope: !13230)
!13251 = !DILocation(line: 493, column: 27, scope: !13164)
!13252 = !DILocation(line: 493, column: 38, scope: !13164)
!13253 = !DILocation(line: 493, column: 44, scope: !13164)
!13254 = !DILocation(line: 493, column: 50, scope: !13164)
!13255 = !DILocation(line: 493, column: 53, scope: !13164)
!13256 = !DILocation(line: 493, column: 8, scope: !13164)
!13257 = !DILocation(line: 493, column: 6, scope: !13164)
!13258 = !DILocation(line: 494, column: 6, scope: !13259)
!13259 = distinct !DILexicalBlock(scope: !13164, file: !3, line: 494, column: 6)
!13260 = !DILocation(line: 494, column: 6, scope: !13164)
!13261 = !DILocation(line: 495, column: 10, scope: !13259)
!13262 = !DILocation(line: 495, column: 3, scope: !13259)
!13263 = !DILocation(line: 496, column: 41, scope: !13164)
!13264 = !DILocation(line: 496, column: 52, scope: !13164)
!13265 = !DILocation(line: 496, column: 2, scope: !13164)
!13266 = !DILocation(line: 497, column: 45, scope: !13164)
!13267 = !DILocation(line: 497, column: 56, scope: !13164)
!13268 = !DILocation(line: 497, column: 2, scope: !13164)
!13269 = !DILocation(line: 498, column: 2, scope: !13164)
!13270 = !DILocation(line: 499, column: 1, scope: !13164)
!13271 = distinct !DISubprogram(name: "mlxsw_pci_cq_fini", scope: !3, file: !3, line: 501, type: !8379, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13272 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !13271, file: !3, line: 501, type: !7722)
!13273 = !DILocation(line: 501, column: 49, scope: !13271)
!13274 = !DILocalVariable(name: "q", arg: 2, scope: !13271, file: !3, line: 502, type: !7669)
!13275 = !DILocation(line: 502, column: 34, scope: !13271)
!13276 = !DILocation(line: 504, column: 21, scope: !13271)
!13277 = !DILocation(line: 504, column: 32, scope: !13271)
!13278 = !DILocation(line: 504, column: 38, scope: !13271)
!13279 = !DILocation(line: 504, column: 41, scope: !13271)
!13280 = !DILocation(line: 504, column: 2, scope: !13271)
!13281 = !DILocation(line: 505, column: 1, scope: !13271)
!13282 = distinct !DISubprogram(name: "mlxsw_pci_cq_tasklet", scope: !3, file: !3, line: 623, type: !7718, scopeLine: 624, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13283 = !DILocalVariable(name: "t", arg: 1, scope: !13282, file: !3, line: 623, type: !7705)
!13284 = !DILocation(line: 623, column: 57, scope: !13282)
!13285 = !DILocalVariable(name: "q", scope: !13282, file: !3, line: 625, type: !7669)
!13286 = !DILocation(line: 625, column: 26, scope: !13282)
!13287 = !DILocalVariable(name: "__mptr", scope: !13288, file: !3, line: 625, type: !646)
!13288 = distinct !DILexicalBlock(scope: !13282, file: !3, line: 625, column: 30)
!13289 = !DILocation(line: 625, column: 30, scope: !13288)
!13290 = !DILocation(line: 625, column: 30, scope: !13291)
!13291 = distinct !DILexicalBlock(scope: !13288, file: !3, line: 625, column: 30)
!13292 = !DILocalVariable(name: "mlxsw_pci", scope: !13282, file: !3, line: 626, type: !7722)
!13293 = !DILocation(line: 626, column: 20, scope: !13282)
!13294 = !DILocation(line: 626, column: 32, scope: !13282)
!13295 = !DILocation(line: 626, column: 35, scope: !13282)
!13296 = !DILocalVariable(name: "cqe", scope: !13282, file: !3, line: 627, type: !1093)
!13297 = !DILocation(line: 627, column: 8, scope: !13282)
!13298 = !DILocalVariable(name: "items", scope: !13282, file: !3, line: 628, type: !32)
!13299 = !DILocation(line: 628, column: 6, scope: !13282)
!13300 = !DILocalVariable(name: "credits", scope: !13282, file: !3, line: 629, type: !32)
!13301 = !DILocation(line: 629, column: 6, scope: !13282)
!13302 = !DILocation(line: 629, column: 16, scope: !13282)
!13303 = !DILocation(line: 629, column: 19, scope: !13282)
!13304 = !DILocation(line: 629, column: 25, scope: !13282)
!13305 = !DILocation(line: 631, column: 2, scope: !13282)
!13306 = !DILocation(line: 631, column: 40, scope: !13282)
!13307 = !DILocation(line: 631, column: 16, scope: !13282)
!13308 = !DILocation(line: 631, column: 14, scope: !13282)
!13309 = !DILocalVariable(name: "wqe_counter", scope: !13310, file: !3, line: 632, type: !636)
!13310 = distinct !DILexicalBlock(scope: !13282, file: !3, line: 631, column: 45)
!13311 = !DILocation(line: 632, column: 7, scope: !13310)
!13312 = !DILocation(line: 632, column: 51, scope: !13310)
!13313 = !DILocation(line: 632, column: 21, scope: !13310)
!13314 = !DILocalVariable(name: "sendq", scope: !13310, file: !3, line: 633, type: !849)
!13315 = !DILocation(line: 633, column: 6, scope: !13310)
!13316 = !DILocation(line: 633, column: 35, scope: !13310)
!13317 = !DILocation(line: 633, column: 38, scope: !13310)
!13318 = !DILocation(line: 633, column: 40, scope: !13310)
!13319 = !DILocation(line: 633, column: 43, scope: !13310)
!13320 = !DILocation(line: 633, column: 46, scope: !13310)
!13321 = !DILocation(line: 633, column: 14, scope: !13310)
!13322 = !DILocalVariable(name: "dqn", scope: !13310, file: !3, line: 634, type: !849)
!13323 = !DILocation(line: 634, column: 6, scope: !13310)
!13324 = !DILocation(line: 634, column: 34, scope: !13310)
!13325 = !DILocation(line: 634, column: 37, scope: !13310)
!13326 = !DILocation(line: 634, column: 39, scope: !13310)
!13327 = !DILocation(line: 634, column: 42, scope: !13310)
!13328 = !DILocation(line: 634, column: 45, scope: !13310)
!13329 = !DILocation(line: 634, column: 12, scope: !13310)
!13330 = !DILocalVariable(name: "ncqe", scope: !13310, file: !3, line: 635, type: !4680)
!13331 = !DILocation(line: 635, column: 8, scope: !13310)
!13332 = !DILocation(line: 637, column: 3, scope: !13310)
!13333 = !DILocation(line: 637, column: 16, scope: !13310)
!13334 = !DILocation(line: 637, column: 21, scope: !13310)
!13335 = !DILocation(line: 637, column: 24, scope: !13310)
!13336 = !DILocation(line: 638, column: 42, scope: !13310)
!13337 = !DILocation(line: 638, column: 53, scope: !13310)
!13338 = !DILocation(line: 638, column: 3, scope: !13310)
!13339 = !DILocation(line: 640, column: 7, scope: !13340)
!13340 = distinct !DILexicalBlock(scope: !13310, file: !3, line: 640, column: 7)
!13341 = !DILocation(line: 640, column: 7, scope: !13310)
!13342 = !DILocalVariable(name: "sdq", scope: !13343, file: !3, line: 641, type: !7669)
!13343 = distinct !DILexicalBlock(scope: !13340, file: !3, line: 640, column: 14)
!13344 = !DILocation(line: 641, column: 28, scope: !13343)
!13345 = !DILocation(line: 643, column: 28, scope: !13343)
!13346 = !DILocation(line: 643, column: 39, scope: !13343)
!13347 = !DILocation(line: 643, column: 10, scope: !13343)
!13348 = !DILocation(line: 643, column: 8, scope: !13343)
!13349 = !DILocation(line: 644, column: 29, scope: !13343)
!13350 = !DILocation(line: 644, column: 40, scope: !13343)
!13351 = !DILocation(line: 645, column: 8, scope: !13343)
!13352 = !DILocation(line: 645, column: 21, scope: !13343)
!13353 = !DILocation(line: 644, column: 4, scope: !13343)
!13354 = !DILocation(line: 646, column: 4, scope: !13343)
!13355 = !DILocation(line: 646, column: 7, scope: !13343)
!13356 = !DILocation(line: 646, column: 9, scope: !13343)
!13357 = !DILocation(line: 646, column: 12, scope: !13343)
!13358 = !DILocation(line: 646, column: 26, scope: !13343)
!13359 = !DILocation(line: 647, column: 3, scope: !13343)
!13360 = !DILocalVariable(name: "rdq", scope: !13361, file: !3, line: 648, type: !7669)
!13361 = distinct !DILexicalBlock(scope: !13340, file: !3, line: 647, column: 10)
!13362 = !DILocation(line: 648, column: 28, scope: !13361)
!13363 = !DILocation(line: 650, column: 28, scope: !13361)
!13364 = !DILocation(line: 650, column: 39, scope: !13361)
!13365 = !DILocation(line: 650, column: 10, scope: !13361)
!13366 = !DILocation(line: 650, column: 8, scope: !13361)
!13367 = !DILocation(line: 651, column: 29, scope: !13361)
!13368 = !DILocation(line: 651, column: 40, scope: !13361)
!13369 = !DILocation(line: 652, column: 8, scope: !13361)
!13370 = !DILocation(line: 652, column: 21, scope: !13361)
!13371 = !DILocation(line: 652, column: 24, scope: !13361)
!13372 = !DILocation(line: 652, column: 26, scope: !13361)
!13373 = !DILocation(line: 652, column: 29, scope: !13361)
!13374 = !DILocation(line: 652, column: 32, scope: !13361)
!13375 = !DILocation(line: 651, column: 4, scope: !13361)
!13376 = !DILocation(line: 653, column: 4, scope: !13361)
!13377 = !DILocation(line: 653, column: 7, scope: !13361)
!13378 = !DILocation(line: 653, column: 9, scope: !13361)
!13379 = !DILocation(line: 653, column: 12, scope: !13361)
!13380 = !DILocation(line: 653, column: 26, scope: !13361)
!13381 = !DILocation(line: 655, column: 7, scope: !13382)
!13382 = distinct !DILexicalBlock(scope: !13310, file: !3, line: 655, column: 7)
!13383 = !DILocation(line: 655, column: 18, scope: !13382)
!13384 = !DILocation(line: 655, column: 15, scope: !13382)
!13385 = !DILocation(line: 655, column: 7, scope: !13310)
!13386 = !DILocation(line: 656, column: 4, scope: !13382)
!13387 = distinct !{!13387, !13305, !13388}
!13388 = !DILocation(line: 657, column: 2, scope: !13282)
!13389 = !DILocation(line: 658, column: 6, scope: !13390)
!13390 = distinct !DILexicalBlock(scope: !13282, file: !3, line: 658, column: 6)
!13391 = !DILocation(line: 658, column: 6, scope: !13282)
!13392 = !DILocation(line: 659, column: 46, scope: !13390)
!13393 = !DILocation(line: 659, column: 57, scope: !13390)
!13394 = !DILocation(line: 659, column: 3, scope: !13390)
!13395 = !DILocation(line: 660, column: 1, scope: !13282)
!13396 = distinct !DISubprogram(name: "mlxsw_pci_cq_elem_count", scope: !3, file: !3, line: 662, type: !8389, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13397 = !DILocalVariable(name: "q", arg: 1, scope: !13396, file: !3, line: 662, type: !8391)
!13398 = !DILocation(line: 662, column: 66, scope: !13396)
!13399 = !DILocation(line: 664, column: 9, scope: !13396)
!13400 = !DILocation(line: 664, column: 12, scope: !13396)
!13401 = !DILocation(line: 664, column: 14, scope: !13396)
!13402 = !DILocation(line: 664, column: 17, scope: !13396)
!13403 = !DILocation(line: 664, column: 19, scope: !13396)
!13404 = !DILocation(line: 664, column: 2, scope: !13396)
!13405 = distinct !DISubprogram(name: "mlxsw_pci_cq_elem_size", scope: !3, file: !3, line: 668, type: !8395, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13406 = !DILocalVariable(name: "q", arg: 1, scope: !13405, file: !3, line: 668, type: !8391)
!13407 = !DILocation(line: 668, column: 64, scope: !13405)
!13408 = !DILocation(line: 670, column: 9, scope: !13405)
!13409 = !DILocation(line: 670, column: 12, scope: !13405)
!13410 = !DILocation(line: 670, column: 14, scope: !13405)
!13411 = !DILocation(line: 670, column: 17, scope: !13405)
!13412 = !DILocation(line: 670, column: 19, scope: !13405)
!13413 = !DILocation(line: 670, column: 2, scope: !13405)
!13414 = distinct !DISubprogram(name: "mlxsw_pci_cqe_owner_set", scope: !7410, file: !7410, line: 226, type: !13415, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13415 = !DISubroutineType(types: !13416)
!13416 = !{null, !7409, !1093, !1042}
!13417 = !DILocalVariable(name: "v", arg: 1, scope: !13414, file: !7410, line: 226, type: !7409)
!13418 = !DILocation(line: 226, column: 1, scope: !13414)
!13419 = !DILocalVariable(name: "cqe", arg: 2, scope: !13414, file: !7410, line: 226, type: !1093)
!13420 = !DILocalVariable(name: "val", arg: 3, scope: !13414, file: !7410, line: 226, type: !1042)
!13421 = !DILocation(line: 226, column: 1, scope: !13422)
!13422 = distinct !DILexicalBlock(scope: !13414, file: !7410, line: 226, column: 1)
!13423 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_sw2hw_cq_cqe_ver_set", scope: !7482, file: !7482, line: 1048, type: !11071, scopeLine: 1048, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13424 = !DILocalVariable(name: "buf", arg: 1, scope: !13423, file: !7482, line: 1048, type: !1093)
!13425 = !DILocation(line: 1048, column: 1, scope: !13423)
!13426 = !DILocalVariable(name: "val", arg: 2, scope: !13423, file: !7482, line: 1048, type: !1042)
!13427 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_sw2hw_cq_c_eqn_set", scope: !7482, file: !7482, line: 1053, type: !11071, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13428 = !DILocalVariable(name: "buf", arg: 1, scope: !13427, file: !7482, line: 1053, type: !1093)
!13429 = !DILocation(line: 1053, column: 1, scope: !13427)
!13430 = !DILocalVariable(name: "val", arg: 2, scope: !13427, file: !7482, line: 1053, type: !1042)
!13431 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_sw2hw_cq_st_set", scope: !7482, file: !7482, line: 1060, type: !11071, scopeLine: 1060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13432 = !DILocalVariable(name: "buf", arg: 1, scope: !13431, file: !7482, line: 1060, type: !1093)
!13433 = !DILocation(line: 1060, column: 1, scope: !13431)
!13434 = !DILocalVariable(name: "val", arg: 2, scope: !13431, file: !7482, line: 1060, type: !1042)
!13435 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_sw2hw_cq_log_cq_size_set", scope: !7482, file: !7482, line: 1065, type: !11071, scopeLine: 1065, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13436 = !DILocalVariable(name: "buf", arg: 1, scope: !13435, file: !7482, line: 1065, type: !1093)
!13437 = !DILocation(line: 1065, column: 1, scope: !13435)
!13438 = !DILocalVariable(name: "val", arg: 2, scope: !13435, file: !7482, line: 1065, type: !1042)
!13439 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_sw2hw_cq_pa_set", scope: !7482, file: !7482, line: 1077, type: !11378, scopeLine: 1077, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13440 = !DILocalVariable(name: "buf", arg: 1, scope: !13439, file: !7482, line: 1077, type: !1093)
!13441 = !DILocation(line: 1077, column: 1, scope: !13439)
!13442 = !DILocalVariable(name: "index", arg: 2, scope: !13439, file: !7482, line: 1077, type: !531)
!13443 = !DILocalVariable(name: "val", arg: 3, scope: !13439, file: !7482, line: 1077, type: !386)
!13444 = distinct !DISubprogram(name: "mlxsw_cmd_sw2hw_cq", scope: !7482, file: !7482, line: 1033, type: !11392, scopeLine: 1035, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13445 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !13444, file: !7482, line: 1033, type: !8008)
!13446 = !DILocation(line: 1033, column: 57, scope: !13444)
!13447 = !DILocalVariable(name: "in_mbox", arg: 2, scope: !13444, file: !7482, line: 1034, type: !1093)
!13448 = !DILocation(line: 1034, column: 16, scope: !13444)
!13449 = !DILocalVariable(name: "cq_number", arg: 3, scope: !13444, file: !7482, line: 1034, type: !1042)
!13450 = !DILocation(line: 1034, column: 29, scope: !13444)
!13451 = !DILocation(line: 1036, column: 27, scope: !13444)
!13452 = !DILocation(line: 1037, column: 9, scope: !13444)
!13453 = !DILocation(line: 1037, column: 20, scope: !13444)
!13454 = !DILocation(line: 1036, column: 9, scope: !13444)
!13455 = !DILocation(line: 1036, column: 2, scope: !13444)
!13456 = distinct !DISubprogram(name: "mlxsw_pci_cqe01_owner_set", scope: !7410, file: !7410, line: 224, type: !11071, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13457 = !DILocalVariable(name: "buf", arg: 1, scope: !13456, file: !7410, line: 224, type: !1093)
!13458 = !DILocation(line: 224, column: 1, scope: !13456)
!13459 = !DILocalVariable(name: "val", arg: 2, scope: !13456, file: !7410, line: 224, type: !1042)
!13460 = distinct !DISubprogram(name: "mlxsw_pci_cqe2_owner_set", scope: !7410, file: !7410, line: 225, type: !11071, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13461 = !DILocalVariable(name: "buf", arg: 1, scope: !13460, file: !7410, line: 225, type: !1093)
!13462 = !DILocation(line: 225, column: 1, scope: !13460)
!13463 = !DILocalVariable(name: "val", arg: 2, scope: !13460, file: !7410, line: 225, type: !1042)
!13464 = distinct !DISubprogram(name: "mlxsw_cmd_hw2sw_cq", scope: !7482, file: !7482, line: 1087, type: !12815, scopeLine: 1089, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13465 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !13464, file: !7482, line: 1087, type: !8008)
!13466 = !DILocation(line: 1087, column: 57, scope: !13464)
!13467 = !DILocalVariable(name: "cq_number", arg: 2, scope: !13464, file: !7482, line: 1088, type: !1042)
!13468 = !DILocation(line: 1088, column: 14, scope: !13464)
!13469 = !DILocation(line: 1090, column: 29, scope: !13464)
!13470 = !DILocation(line: 1091, column: 11, scope: !13464)
!13471 = !DILocation(line: 1090, column: 9, scope: !13464)
!13472 = !DILocation(line: 1090, column: 2, scope: !13464)
!13473 = distinct !DISubprogram(name: "mlxsw_pci_cq_sw_cqe_get", scope: !3, file: !3, line: 607, type: !12851, scopeLine: 608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13474 = !DILocalVariable(name: "q", arg: 1, scope: !13473, file: !3, line: 607, type: !7669)
!13475 = !DILocation(line: 607, column: 62, scope: !13473)
!13476 = !DILocalVariable(name: "elem_info", scope: !13473, file: !3, line: 609, type: !7680)
!13477 = !DILocation(line: 609, column: 36, scope: !13473)
!13478 = !DILocalVariable(name: "elem", scope: !13473, file: !3, line: 610, type: !1093)
!13479 = !DILocation(line: 610, column: 8, scope: !13473)
!13480 = !DILocalVariable(name: "owner_bit", scope: !13473, file: !3, line: 611, type: !826)
!13481 = !DILocation(line: 611, column: 7, scope: !13473)
!13482 = !DILocation(line: 613, column: 53, scope: !13473)
!13483 = !DILocation(line: 613, column: 14, scope: !13473)
!13484 = !DILocation(line: 613, column: 12, scope: !13473)
!13485 = !DILocation(line: 614, column: 9, scope: !13473)
!13486 = !DILocation(line: 614, column: 20, scope: !13473)
!13487 = !DILocation(line: 614, column: 7, scope: !13473)
!13488 = !DILocation(line: 615, column: 38, scope: !13473)
!13489 = !DILocation(line: 615, column: 41, scope: !13473)
!13490 = !DILocation(line: 615, column: 43, scope: !13473)
!13491 = !DILocation(line: 615, column: 46, scope: !13473)
!13492 = !DILocation(line: 615, column: 49, scope: !13473)
!13493 = !DILocation(line: 615, column: 14, scope: !13473)
!13494 = !DILocation(line: 615, column: 12, scope: !13473)
!13495 = !DILocation(line: 616, column: 30, scope: !13496)
!13496 = distinct !DILexicalBlock(scope: !13473, file: !3, line: 616, column: 6)
!13497 = !DILocation(line: 616, column: 33, scope: !13496)
!13498 = !DILocation(line: 616, column: 6, scope: !13496)
!13499 = !DILocation(line: 616, column: 6, scope: !13473)
!13500 = !DILocation(line: 617, column: 3, scope: !13496)
!13501 = !DILocation(line: 618, column: 2, scope: !13473)
!13502 = !DILocation(line: 618, column: 5, scope: !13473)
!13503 = !DILocation(line: 618, column: 21, scope: !13473)
!13504 = !DILocation(line: 619, column: 2, scope: !13473)
!13505 = !{i32 -2136898156}
!13506 = !DILocation(line: 620, column: 9, scope: !13473)
!13507 = !DILocation(line: 620, column: 2, scope: !13473)
!13508 = !DILocation(line: 621, column: 1, scope: !13473)
!13509 = distinct !DISubprogram(name: "mlxsw_pci_cqe_wqe_counter_get", scope: !7410, file: !7410, line: 167, type: !10193, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13510 = !DILocalVariable(name: "buf", arg: 1, scope: !13509, file: !7410, line: 167, type: !347)
!13511 = !DILocation(line: 167, column: 1, scope: !13509)
!13512 = distinct !DISubprogram(name: "mlxsw_pci_cqe_sr_get", scope: !7410, file: !7410, line: 202, type: !13513, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13513 = !DISubroutineType(types: !13514)
!13514 = !{!1042, !7409, !1093}
!13515 = !DILocalVariable(name: "v", arg: 1, scope: !13512, file: !7410, line: 202, type: !7409)
!13516 = !DILocation(line: 202, column: 1, scope: !13512)
!13517 = !DILocalVariable(name: "cqe", arg: 2, scope: !13512, file: !7410, line: 202, type: !1093)
!13518 = !DILocation(line: 202, column: 1, scope: !13519)
!13519 = distinct !DILexicalBlock(scope: !13512, file: !7410, line: 202, column: 1)
!13520 = distinct !DISubprogram(name: "mlxsw_pci_cqe_dqn_get", scope: !7410, file: !7410, line: 209, type: !13513, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13521 = !DILocalVariable(name: "v", arg: 1, scope: !13520, file: !7410, line: 209, type: !7409)
!13522 = !DILocation(line: 209, column: 1, scope: !13520)
!13523 = !DILocalVariable(name: "cqe", arg: 2, scope: !13520, file: !7410, line: 209, type: !1093)
!13524 = !DILocation(line: 209, column: 1, scope: !13525)
!13525 = distinct !DILexicalBlock(scope: !13520, file: !7410, line: 209, column: 1)
!13526 = distinct !DISubprogram(name: "mlxsw_pci_sdq_get", scope: !3, file: !3, line: 209, type: !12973, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13527 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !13526, file: !3, line: 209, type: !7722)
!13528 = !DILocation(line: 209, column: 68, scope: !13526)
!13529 = !DILocalVariable(name: "q_num", arg: 2, scope: !13526, file: !3, line: 210, type: !849)
!13530 = !DILocation(line: 210, column: 11, scope: !13526)
!13531 = !DILocation(line: 212, column: 31, scope: !13526)
!13532 = !DILocation(line: 213, column: 36, scope: !13526)
!13533 = !DILocation(line: 212, column: 9, scope: !13526)
!13534 = !DILocation(line: 212, column: 2, scope: !13526)
!13535 = distinct !DISubprogram(name: "mlxsw_pci_cqe_sdq_handle", scope: !3, file: !3, line: 507, type: !13536, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13536 = !DISubroutineType(types: !13537)
!13537 = !{null, !7722, !7669, !636, !1093}
!13538 = !DILocalVariable(name: "lock", arg: 1, scope: !13539, file: !12250, line: 392, type: !2236)
!13539 = distinct !DISubprogram(name: "spin_unlock", scope: !12250, file: !12250, line: 392, type: !13540, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13540 = !DISubroutineType(types: !13541)
!13541 = !{null, !2236}
!13542 = !DILocation(line: 392, column: 53, scope: !13539, inlinedAt: !13543)
!13543 = distinct !DILocation(line: 540, column: 2, scope: !13535)
!13544 = !DILocalVariable(name: "lock", arg: 1, scope: !13545, file: !12250, line: 352, type: !2236)
!13545 = distinct !DISubprogram(name: "spin_lock", scope: !12250, file: !12250, line: 352, type: !13540, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13546 = !DILocation(line: 352, column: 51, scope: !13545, inlinedAt: !13547)
!13547 = distinct !DILocation(line: 519, column: 2, scope: !13535)
!13548 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !13535, file: !3, line: 507, type: !7722)
!13549 = !DILocation(line: 507, column: 56, scope: !13535)
!13550 = !DILocalVariable(name: "q", arg: 2, scope: !13535, file: !3, line: 508, type: !7669)
!13551 = !DILocation(line: 508, column: 34, scope: !13535)
!13552 = !DILocalVariable(name: "consumer_counter_limit", arg: 3, scope: !13535, file: !3, line: 509, type: !636)
!13553 = !DILocation(line: 509, column: 14, scope: !13535)
!13554 = !DILocalVariable(name: "cqe", arg: 4, scope: !13535, file: !3, line: 510, type: !1093)
!13555 = !DILocation(line: 510, column: 16, scope: !13535)
!13556 = !DILocalVariable(name: "pdev", scope: !13535, file: !3, line: 512, type: !7726)
!13557 = !DILocation(line: 512, column: 18, scope: !13535)
!13558 = !DILocation(line: 512, column: 25, scope: !13535)
!13559 = !DILocation(line: 512, column: 36, scope: !13535)
!13560 = !DILocalVariable(name: "elem_info", scope: !13535, file: !3, line: 513, type: !7680)
!13561 = !DILocation(line: 513, column: 36, scope: !13535)
!13562 = !DILocalVariable(name: "tx_info", scope: !13535, file: !3, line: 514, type: !8100)
!13563 = !DILocation(line: 514, column: 23, scope: !13535)
!13564 = !DILocalVariable(name: "wqe", scope: !13535, file: !3, line: 515, type: !1093)
!13565 = !DILocation(line: 515, column: 8, scope: !13535)
!13566 = !DILocalVariable(name: "skb", scope: !13535, file: !3, line: 516, type: !470)
!13567 = !DILocation(line: 516, column: 18, scope: !13535)
!13568 = !DILocalVariable(name: "i", scope: !13535, file: !3, line: 517, type: !32)
!13569 = !DILocation(line: 517, column: 6, scope: !13535)
!13570 = !DILocation(line: 519, column: 13, scope: !13535)
!13571 = !DILocation(line: 519, column: 16, scope: !13535)
!13572 = !DILocation(line: 354, column: 2, scope: !13573, inlinedAt: !13547)
!13573 = distinct !DILexicalBlock(scope: !13545, file: !12250, line: 354, column: 2)
!13574 = !{i32 -2145429456}
!13575 = !DILocation(line: 354, column: 2, scope: !13576, inlinedAt: !13547)
!13576 = distinct !DILexicalBlock(scope: !13573, file: !12250, line: 354, column: 2)
!13577 = !DILocation(line: 520, column: 53, scope: !13535)
!13578 = !DILocation(line: 520, column: 14, scope: !13535)
!13579 = !DILocation(line: 520, column: 12, scope: !13535)
!13580 = !DILocation(line: 521, column: 25, scope: !13535)
!13581 = !DILocation(line: 521, column: 36, scope: !13535)
!13582 = !DILocation(line: 521, column: 38, scope: !13535)
!13583 = !DILocation(line: 521, column: 42, scope: !13535)
!13584 = !DILocation(line: 521, column: 12, scope: !13535)
!13585 = !DILocation(line: 521, column: 48, scope: !13535)
!13586 = !DILocation(line: 522, column: 8, scope: !13535)
!13587 = !DILocation(line: 522, column: 19, scope: !13535)
!13588 = !DILocation(line: 522, column: 21, scope: !13535)
!13589 = !DILocation(line: 522, column: 25, scope: !13535)
!13590 = !DILocation(line: 522, column: 6, scope: !13535)
!13591 = !DILocation(line: 523, column: 8, scope: !13535)
!13592 = !DILocation(line: 523, column: 19, scope: !13535)
!13593 = !DILocation(line: 523, column: 6, scope: !13535)
!13594 = !DILocation(line: 524, column: 9, scope: !13595)
!13595 = distinct !DILexicalBlock(scope: !13535, file: !3, line: 524, column: 2)
!13596 = !DILocation(line: 524, column: 7, scope: !13595)
!13597 = !DILocation(line: 524, column: 14, scope: !13598)
!13598 = distinct !DILexicalBlock(scope: !13595, file: !3, line: 524, column: 2)
!13599 = !DILocation(line: 524, column: 16, scope: !13598)
!13600 = !DILocation(line: 524, column: 2, scope: !13595)
!13601 = !DILocation(line: 525, column: 28, scope: !13598)
!13602 = !DILocation(line: 525, column: 39, scope: !13598)
!13603 = !DILocation(line: 525, column: 44, scope: !13598)
!13604 = !DILocation(line: 525, column: 3, scope: !13598)
!13605 = !DILocation(line: 524, column: 45, scope: !13598)
!13606 = !DILocation(line: 524, column: 2, scope: !13598)
!13607 = distinct !{!13607, !13600, !13608}
!13608 = !DILocation(line: 525, column: 60, scope: !13595)
!13609 = !DILocation(line: 527, column: 6, scope: !13610)
!13610 = distinct !DILexicalBlock(scope: !13535, file: !3, line: 527, column: 6)
!13611 = !DILocation(line: 0, scope: !13610)
!13612 = !DILocation(line: 527, column: 6, scope: !13535)
!13613 = !DILocation(line: 529, column: 30, scope: !13614)
!13614 = distinct !DILexicalBlock(scope: !13610, file: !3, line: 528, column: 54)
!13615 = !DILocation(line: 529, column: 41, scope: !13614)
!13616 = !DILocation(line: 529, column: 47, scope: !13614)
!13617 = !DILocation(line: 530, column: 17, scope: !13614)
!13618 = !DILocation(line: 529, column: 3, scope: !13614)
!13619 = !DILocation(line: 531, column: 7, scope: !13614)
!13620 = !DILocation(line: 532, column: 2, scope: !13614)
!13621 = !DILocation(line: 534, column: 6, scope: !13622)
!13622 = distinct !DILexicalBlock(scope: !13535, file: !3, line: 534, column: 6)
!13623 = !DILocation(line: 534, column: 6, scope: !13535)
!13624 = !DILocation(line: 535, column: 21, scope: !13622)
!13625 = !DILocation(line: 535, column: 3, scope: !13622)
!13626 = !DILocation(line: 536, column: 2, scope: !13535)
!13627 = !DILocation(line: 536, column: 13, scope: !13535)
!13628 = !DILocation(line: 536, column: 15, scope: !13535)
!13629 = !DILocation(line: 536, column: 19, scope: !13535)
!13630 = !DILocation(line: 536, column: 23, scope: !13535)
!13631 = !DILocation(line: 538, column: 6, scope: !13632)
!13632 = distinct !DILexicalBlock(scope: !13535, file: !3, line: 538, column: 6)
!13633 = !DILocation(line: 538, column: 9, scope: !13632)
!13634 = !DILocation(line: 538, column: 25, scope: !13632)
!13635 = !DILocation(line: 538, column: 31, scope: !13632)
!13636 = !DILocation(line: 538, column: 28, scope: !13632)
!13637 = !DILocation(line: 538, column: 6, scope: !13535)
!13638 = !DILocation(line: 539, column: 3, scope: !13632)
!13639 = !DILocation(line: 539, column: 3, scope: !13640)
!13640 = distinct !DILexicalBlock(scope: !13632, file: !3, line: 539, column: 3)
!13641 = !DILocation(line: 540, column: 15, scope: !13535)
!13642 = !DILocation(line: 540, column: 18, scope: !13535)
!13643 = !DILocation(line: 394, column: 2, scope: !13644, inlinedAt: !13543)
!13644 = distinct !DILexicalBlock(scope: !13539, file: !12250, line: 394, column: 2)
!13645 = !{i32 -2145427095}
!13646 = !DILocation(line: 394, column: 2, scope: !13647, inlinedAt: !13543)
!13647 = distinct !DILexicalBlock(scope: !13644, file: !12250, line: 394, column: 2)
!13648 = !DILocation(line: 541, column: 1, scope: !13535)
!13649 = distinct !DISubprogram(name: "mlxsw_pci_rdq_get", scope: !3, file: !3, line: 216, type: !12973, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13650 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !13649, file: !3, line: 216, type: !7722)
!13651 = !DILocation(line: 216, column: 68, scope: !13649)
!13652 = !DILocalVariable(name: "q_num", arg: 2, scope: !13649, file: !3, line: 217, type: !849)
!13653 = !DILocation(line: 217, column: 11, scope: !13649)
!13654 = !DILocation(line: 219, column: 31, scope: !13649)
!13655 = !DILocation(line: 220, column: 36, scope: !13649)
!13656 = !DILocation(line: 219, column: 9, scope: !13649)
!13657 = !DILocation(line: 219, column: 2, scope: !13649)
!13658 = distinct !DISubprogram(name: "mlxsw_pci_cqe_rdq_handle", scope: !3, file: !3, line: 543, type: !13659, scopeLine: 547, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13659 = !DISubroutineType(types: !13660)
!13660 = !{null, !7722, !7669, !636, !7409, !1093}
!13661 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !13658, file: !3, line: 543, type: !7722)
!13662 = !DILocation(line: 543, column: 56, scope: !13658)
!13663 = !DILocalVariable(name: "q", arg: 2, scope: !13658, file: !3, line: 544, type: !7669)
!13664 = !DILocation(line: 544, column: 34, scope: !13658)
!13665 = !DILocalVariable(name: "consumer_counter_limit", arg: 3, scope: !13658, file: !3, line: 545, type: !636)
!13666 = !DILocation(line: 545, column: 14, scope: !13658)
!13667 = !DILocalVariable(name: "cqe_v", arg: 4, scope: !13658, file: !3, line: 546, type: !7409)
!13668 = !DILocation(line: 546, column: 31, scope: !13658)
!13669 = !DILocalVariable(name: "cqe", arg: 5, scope: !13658, file: !3, line: 546, type: !1093)
!13670 = !DILocation(line: 546, column: 44, scope: !13658)
!13671 = !DILocalVariable(name: "pdev", scope: !13658, file: !3, line: 548, type: !7726)
!13672 = !DILocation(line: 548, column: 18, scope: !13658)
!13673 = !DILocation(line: 548, column: 25, scope: !13658)
!13674 = !DILocation(line: 548, column: 36, scope: !13658)
!13675 = !DILocalVariable(name: "elem_info", scope: !13658, file: !3, line: 549, type: !7680)
!13676 = !DILocation(line: 549, column: 36, scope: !13658)
!13677 = !DILocalVariable(name: "rx_info", scope: !13658, file: !3, line: 550, type: !13678)
!13678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlxsw_rx_info", file: !8032, line: 182, size: 96, elements: !13679)
!13679 = !{!13680, !13681, !13686, !13687, !13688}
!13680 = !DIDerivedType(tag: DW_TAG_member, name: "is_lag", scope: !13678, file: !8032, line: 183, baseType: !826, size: 8)
!13681 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !13678, file: !8032, line: 187, baseType: !13682, size: 16, offset: 16)
!13682 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13678, file: !8032, line: 184, size: 16, elements: !13683)
!13683 = !{!13684, !13685}
!13684 = !DIDerivedType(tag: DW_TAG_member, name: "sys_port", scope: !13682, file: !8032, line: 185, baseType: !636, size: 16)
!13685 = !DIDerivedType(tag: DW_TAG_member, name: "lag_id", scope: !13682, file: !8032, line: 186, baseType: !636, size: 16)
!13686 = !DIDerivedType(tag: DW_TAG_member, name: "lag_port_index", scope: !13678, file: !8032, line: 188, baseType: !849, size: 8, offset: 32)
!13687 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_reason", scope: !13678, file: !8032, line: 189, baseType: !849, size: 8, offset: 40)
!13688 = !DIDerivedType(tag: DW_TAG_member, name: "trap_id", scope: !13678, file: !8032, line: 190, baseType: !32, size: 32, offset: 64)
!13689 = !DILocation(line: 550, column: 23, scope: !13658)
!13690 = !DILocalVariable(name: "wqe", scope: !13658, file: !3, line: 551, type: !1093)
!13691 = !DILocation(line: 551, column: 8, scope: !13658)
!13692 = !DILocalVariable(name: "skb", scope: !13658, file: !3, line: 552, type: !470)
!13693 = !DILocation(line: 552, column: 18, scope: !13658)
!13694 = !DILocalVariable(name: "byte_count", scope: !13658, file: !3, line: 553, type: !636)
!13695 = !DILocation(line: 553, column: 6, scope: !13658)
!13696 = !DILocalVariable(name: "err", scope: !13658, file: !3, line: 554, type: !32)
!13697 = !DILocation(line: 554, column: 6, scope: !13658)
!13698 = !DILocation(line: 556, column: 53, scope: !13658)
!13699 = !DILocation(line: 556, column: 14, scope: !13658)
!13700 = !DILocation(line: 556, column: 12, scope: !13658)
!13701 = !DILocation(line: 557, column: 8, scope: !13658)
!13702 = !DILocation(line: 557, column: 19, scope: !13658)
!13703 = !DILocation(line: 557, column: 21, scope: !13658)
!13704 = !DILocation(line: 557, column: 25, scope: !13658)
!13705 = !DILocation(line: 557, column: 6, scope: !13658)
!13706 = !DILocation(line: 558, column: 7, scope: !13707)
!13707 = distinct !DILexicalBlock(scope: !13658, file: !3, line: 558, column: 6)
!13708 = !DILocation(line: 558, column: 6, scope: !13658)
!13709 = !DILocation(line: 559, column: 3, scope: !13707)
!13710 = !DILocation(line: 560, column: 8, scope: !13658)
!13711 = !DILocation(line: 560, column: 19, scope: !13658)
!13712 = !DILocation(line: 560, column: 6, scope: !13658)
!13713 = !DILocation(line: 561, column: 27, scope: !13658)
!13714 = !DILocation(line: 561, column: 38, scope: !13658)
!13715 = !DILocation(line: 561, column: 2, scope: !13658)
!13716 = !DILocation(line: 563, column: 6, scope: !13717)
!13717 = distinct !DILexicalBlock(scope: !13658, file: !3, line: 563, column: 6)
!13718 = !DILocation(line: 563, column: 9, scope: !13717)
!13719 = !DILocation(line: 563, column: 25, scope: !13717)
!13720 = !DILocation(line: 563, column: 31, scope: !13717)
!13721 = !DILocation(line: 563, column: 28, scope: !13717)
!13722 = !DILocation(line: 563, column: 6, scope: !13658)
!13723 = !DILocation(line: 564, column: 3, scope: !13717)
!13724 = !DILocation(line: 564, column: 3, scope: !13725)
!13725 = distinct !DILexicalBlock(scope: !13717, file: !3, line: 564, column: 3)
!13726 = !DILocation(line: 566, column: 28, scope: !13727)
!13727 = distinct !DILexicalBlock(scope: !13658, file: !3, line: 566, column: 6)
!13728 = !DILocation(line: 566, column: 35, scope: !13727)
!13729 = !DILocation(line: 566, column: 6, scope: !13727)
!13730 = !DILocation(line: 566, column: 6, scope: !13658)
!13731 = !DILocation(line: 567, column: 11, scope: !13732)
!13732 = distinct !DILexicalBlock(scope: !13727, file: !3, line: 566, column: 41)
!13733 = !DILocation(line: 567, column: 18, scope: !13732)
!13734 = !DILocation(line: 568, column: 47, scope: !13732)
!13735 = !DILocation(line: 568, column: 54, scope: !13732)
!13736 = !DILocation(line: 568, column: 22, scope: !13732)
!13737 = !DILocation(line: 568, column: 11, scope: !13732)
!13738 = !DILocation(line: 568, column: 13, scope: !13732)
!13739 = !DILocation(line: 568, column: 20, scope: !13732)
!13740 = !DILocation(line: 570, column: 34, scope: !13732)
!13741 = !DILocation(line: 570, column: 41, scope: !13732)
!13742 = !DILocation(line: 570, column: 4, scope: !13732)
!13743 = !DILocation(line: 569, column: 11, scope: !13732)
!13744 = !DILocation(line: 569, column: 26, scope: !13732)
!13745 = !DILocation(line: 571, column: 2, scope: !13732)
!13746 = !DILocation(line: 572, column: 11, scope: !13747)
!13747 = distinct !DILexicalBlock(scope: !13727, file: !3, line: 571, column: 9)
!13748 = !DILocation(line: 572, column: 18, scope: !13747)
!13749 = !DILocation(line: 573, column: 54, scope: !13747)
!13750 = !DILocation(line: 573, column: 24, scope: !13747)
!13751 = !DILocation(line: 573, column: 11, scope: !13747)
!13752 = !DILocation(line: 573, column: 13, scope: !13747)
!13753 = !DILocation(line: 573, column: 22, scope: !13747)
!13754 = !DILocation(line: 576, column: 46, scope: !13658)
!13755 = !DILocation(line: 576, column: 20, scope: !13658)
!13756 = !DILocation(line: 576, column: 10, scope: !13658)
!13757 = !DILocation(line: 576, column: 18, scope: !13658)
!13758 = !DILocation(line: 578, column: 14, scope: !13759)
!13759 = distinct !DILexicalBlock(scope: !13658, file: !3, line: 578, column: 6)
!13760 = !DILocation(line: 578, column: 22, scope: !13759)
!13761 = !DILocation(line: 578, column: 59, scope: !13759)
!13762 = !DILocation(line: 579, column: 14, scope: !13759)
!13763 = !DILocation(line: 579, column: 22, scope: !13759)
!13764 = !DILocation(line: 578, column: 6, scope: !13658)
!13765 = !DILocalVariable(name: "cookie_index", scope: !13766, file: !3, line: 580, type: !1042)
!13766 = distinct !DILexicalBlock(scope: !13759, file: !3, line: 579, column: 59)
!13767 = !DILocation(line: 580, column: 7, scope: !13766)
!13768 = !DILocation(line: 582, column: 7, scope: !13769)
!13769 = distinct !DILexicalBlock(scope: !13766, file: !3, line: 582, column: 7)
!13770 = !DILocation(line: 582, column: 18, scope: !13769)
!13771 = !DILocation(line: 582, column: 30, scope: !13769)
!13772 = !DILocation(line: 582, column: 7, scope: !13766)
!13773 = !DILocation(line: 583, column: 64, scope: !13769)
!13774 = !DILocation(line: 583, column: 19, scope: !13769)
!13775 = !DILocation(line: 583, column: 17, scope: !13769)
!13776 = !DILocation(line: 583, column: 4, scope: !13769)
!13777 = !DILocation(line: 584, column: 37, scope: !13766)
!13778 = !DILocation(line: 584, column: 16, scope: !13766)
!13779 = !DILocation(line: 584, column: 3, scope: !13766)
!13780 = !DILocation(line: 584, column: 22, scope: !13766)
!13781 = !DILocation(line: 584, column: 35, scope: !13766)
!13782 = !DILocation(line: 585, column: 2, scope: !13766)
!13783 = !DILocation(line: 585, column: 21, scope: !13784)
!13784 = distinct !DILexicalBlock(scope: !13759, file: !3, line: 585, column: 13)
!13785 = !DILocation(line: 585, column: 29, scope: !13784)
!13786 = !DILocation(line: 585, column: 62, scope: !13784)
!13787 = !DILocation(line: 586, column: 14, scope: !13784)
!13788 = !DILocation(line: 586, column: 22, scope: !13784)
!13789 = !DILocation(line: 586, column: 55, scope: !13784)
!13790 = !DILocation(line: 587, column: 6, scope: !13784)
!13791 = !DILocation(line: 587, column: 17, scope: !13784)
!13792 = !DILocation(line: 587, column: 29, scope: !13784)
!13793 = !DILocation(line: 585, column: 13, scope: !13759)
!13794 = !DILocation(line: 588, column: 60, scope: !13795)
!13795 = distinct !DILexicalBlock(scope: !13784, file: !3, line: 587, column: 50)
!13796 = !DILocation(line: 588, column: 27, scope: !13795)
!13797 = !DILocation(line: 588, column: 11, scope: !13795)
!13798 = !DILocation(line: 588, column: 25, scope: !13795)
!13799 = !DILocation(line: 589, column: 2, scope: !13795)
!13800 = !DILocation(line: 591, column: 44, scope: !13658)
!13801 = !DILocation(line: 591, column: 15, scope: !13658)
!13802 = !DILocation(line: 591, column: 13, scope: !13658)
!13803 = !DILocation(line: 592, column: 28, scope: !13804)
!13804 = distinct !DILexicalBlock(scope: !13658, file: !3, line: 592, column: 6)
!13805 = !DILocation(line: 592, column: 35, scope: !13804)
!13806 = !DILocation(line: 592, column: 6, scope: !13804)
!13807 = !DILocation(line: 592, column: 6, scope: !13658)
!13808 = !DILocation(line: 593, column: 14, scope: !13804)
!13809 = !DILocation(line: 593, column: 3, scope: !13804)
!13810 = !DILocation(line: 594, column: 10, scope: !13658)
!13811 = !DILocation(line: 594, column: 15, scope: !13658)
!13812 = !DILocation(line: 594, column: 2, scope: !13658)
!13813 = !DILocation(line: 595, column: 25, scope: !13658)
!13814 = !DILocation(line: 595, column: 36, scope: !13658)
!13815 = !DILocation(line: 595, column: 42, scope: !13658)
!13816 = !DILocation(line: 595, column: 2, scope: !13658)
!13817 = !DILocation(line: 597, column: 9, scope: !13658)
!13818 = !DILocation(line: 597, column: 17, scope: !13658)
!13819 = !DILocation(line: 597, column: 20, scope: !13658)
!13820 = !DILocation(line: 597, column: 2, scope: !13658)
!13821 = !DILocation(line: 598, column: 32, scope: !13658)
!13822 = !DILocation(line: 598, column: 43, scope: !13658)
!13823 = !DILocation(line: 598, column: 8, scope: !13658)
!13824 = !DILocation(line: 598, column: 6, scope: !13658)
!13825 = !DILocation(line: 599, column: 6, scope: !13826)
!13826 = distinct !DILexicalBlock(scope: !13658, file: !3, line: 599, column: 6)
!13827 = !DILocation(line: 599, column: 6, scope: !13658)
!13828 = !DILocation(line: 600, column: 3, scope: !13826)
!13829 = !DILocation(line: 600, column: 3, scope: !13830)
!13830 = distinct !DILexicalBlock(scope: !13826, file: !3, line: 600, column: 3)
!13831 = !DILocation(line: 602, column: 2, scope: !13658)
!13832 = !DILocation(line: 602, column: 5, scope: !13658)
!13833 = !DILocation(line: 602, column: 21, scope: !13658)
!13834 = !DILocation(line: 603, column: 41, scope: !13658)
!13835 = !DILocation(line: 603, column: 52, scope: !13658)
!13836 = !DILocation(line: 603, column: 2, scope: !13658)
!13837 = !DILocation(line: 604, column: 2, scope: !13658)
!13838 = !DILocation(line: 605, column: 1, scope: !13658)
!13839 = distinct !DISubprogram(name: "mlxsw_pci_cqe_owner_get", scope: !7410, file: !7410, line: 226, type: !13513, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13840 = !DILocalVariable(name: "v", arg: 1, scope: !13839, file: !7410, line: 226, type: !7409)
!13841 = !DILocation(line: 226, column: 1, scope: !13839)
!13842 = !DILocalVariable(name: "cqe", arg: 2, scope: !13839, file: !7410, line: 226, type: !1093)
!13843 = !DILocation(line: 226, column: 1, scope: !13844)
!13844 = distinct !DILexicalBlock(scope: !13839, file: !7410, line: 226, column: 1)
!13845 = distinct !DISubprogram(name: "mlxsw_pci_cqe01_owner_get", scope: !7410, file: !7410, line: 224, type: !10193, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13846 = !DILocalVariable(name: "buf", arg: 1, scope: !13845, file: !7410, line: 224, type: !347)
!13847 = !DILocation(line: 224, column: 1, scope: !13845)
!13848 = distinct !DISubprogram(name: "mlxsw_pci_cqe2_owner_get", scope: !7410, file: !7410, line: 225, type: !10193, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13849 = !DILocalVariable(name: "buf", arg: 1, scope: !13848, file: !7410, line: 225, type: !347)
!13850 = !DILocation(line: 225, column: 1, scope: !13848)
!13851 = distinct !DISubprogram(name: "mlxsw_pci_cqe0_sr_get", scope: !7410, file: !7410, line: 200, type: !10193, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13852 = !DILocalVariable(name: "buf", arg: 1, scope: !13851, file: !7410, line: 200, type: !347)
!13853 = !DILocation(line: 200, column: 1, scope: !13851)
!13854 = distinct !DISubprogram(name: "mlxsw_pci_cqe12_sr_get", scope: !7410, file: !7410, line: 201, type: !10193, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13855 = !DILocalVariable(name: "buf", arg: 1, scope: !13854, file: !7410, line: 201, type: !347)
!13856 = !DILocation(line: 201, column: 1, scope: !13854)
!13857 = distinct !DISubprogram(name: "mlxsw_pci_cqe0_dqn_get", scope: !7410, file: !7410, line: 207, type: !10193, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13858 = !DILocalVariable(name: "buf", arg: 1, scope: !13857, file: !7410, line: 207, type: !347)
!13859 = !DILocation(line: 207, column: 1, scope: !13857)
!13860 = distinct !DISubprogram(name: "mlxsw_pci_cqe12_dqn_get", scope: !7410, file: !7410, line: 208, type: !10193, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13861 = !DILocalVariable(name: "buf", arg: 1, scope: !13860, file: !7410, line: 208, type: !347)
!13862 = !DILocation(line: 208, column: 1, scope: !13860)
!13863 = distinct !DISubprogram(name: "mlxsw_skb_cb", scope: !8032, file: !8032, line: 509, type: !13864, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13864 = !DISubroutineType(types: !13865)
!13865 = !{!8093, !470}
!13866 = !DILocalVariable(name: "skb", arg: 1, scope: !13863, file: !8032, line: 509, type: !470)
!13867 = !DILocation(line: 509, column: 65, scope: !13863)
!13868 = !DILocation(line: 511, column: 2, scope: !13863)
!13869 = !DILocation(line: 511, column: 2, scope: !13870)
!13870 = distinct !DILexicalBlock(scope: !13863, file: !8032, line: 511, column: 2)
!13871 = !DILocation(line: 512, column: 33, scope: !13863)
!13872 = !DILocation(line: 512, column: 38, scope: !13863)
!13873 = !DILocation(line: 512, column: 9, scope: !13863)
!13874 = !DILocation(line: 512, column: 2, scope: !13863)
!13875 = distinct !DISubprogram(name: "mlxsw_pci_wqe_frag_unmap", scope: !3, file: !3, line: 336, type: !13876, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13876 = !DISubroutineType(types: !13877)
!13877 = !{null, !7722, !1093, !32, !32}
!13878 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !13875, file: !3, line: 336, type: !7722)
!13879 = !DILocation(line: 336, column: 56, scope: !13875)
!13880 = !DILocalVariable(name: "wqe", arg: 2, scope: !13875, file: !3, line: 336, type: !1093)
!13881 = !DILocation(line: 336, column: 73, scope: !13875)
!13882 = !DILocalVariable(name: "index", arg: 3, scope: !13875, file: !3, line: 337, type: !32)
!13883 = !DILocation(line: 337, column: 14, scope: !13875)
!13884 = !DILocalVariable(name: "direction", arg: 4, scope: !13875, file: !3, line: 337, type: !32)
!13885 = !DILocation(line: 337, column: 25, scope: !13875)
!13886 = !DILocalVariable(name: "pdev", scope: !13875, file: !3, line: 339, type: !7726)
!13887 = !DILocation(line: 339, column: 18, scope: !13875)
!13888 = !DILocation(line: 339, column: 25, scope: !13875)
!13889 = !DILocation(line: 339, column: 36, scope: !13875)
!13890 = !DILocalVariable(name: "frag_len", scope: !13875, file: !3, line: 340, type: !1094)
!13891 = !DILocation(line: 340, column: 9, scope: !13875)
!13892 = !DILocation(line: 340, column: 49, scope: !13875)
!13893 = !DILocation(line: 340, column: 54, scope: !13875)
!13894 = !DILocation(line: 340, column: 20, scope: !13875)
!13895 = !DILocalVariable(name: "mapaddr", scope: !13875, file: !3, line: 341, type: !2091)
!13896 = !DILocation(line: 341, column: 13, scope: !13875)
!13897 = !DILocation(line: 341, column: 49, scope: !13875)
!13898 = !DILocation(line: 341, column: 54, scope: !13875)
!13899 = !DILocation(line: 341, column: 23, scope: !13875)
!13900 = !DILocation(line: 343, column: 7, scope: !13901)
!13901 = distinct !DILexicalBlock(scope: !13875, file: !3, line: 343, column: 6)
!13902 = !DILocation(line: 343, column: 6, scope: !13875)
!13903 = !DILocation(line: 344, column: 3, scope: !13901)
!13904 = !DILocation(line: 345, column: 19, scope: !13875)
!13905 = !DILocation(line: 345, column: 25, scope: !13875)
!13906 = !DILocation(line: 345, column: 34, scope: !13875)
!13907 = !DILocation(line: 345, column: 44, scope: !13875)
!13908 = !DILocation(line: 345, column: 2, scope: !13875)
!13909 = !DILocation(line: 346, column: 1, scope: !13875)
!13910 = distinct !DISubprogram(name: "skb_end_pointer", scope: !472, file: !472, line: 1404, type: !13911, scopeLine: 1405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13911 = !DISubroutineType(types: !13912)
!13912 = !{!619, !7146}
!13913 = !DILocalVariable(name: "skb", arg: 1, scope: !13910, file: !472, line: 1404, type: !7146)
!13914 = !DILocation(line: 1404, column: 68, scope: !13910)
!13915 = !DILocation(line: 1406, column: 9, scope: !13910)
!13916 = !DILocation(line: 1406, column: 14, scope: !13910)
!13917 = !DILocation(line: 1406, column: 21, scope: !13910)
!13918 = !DILocation(line: 1406, column: 26, scope: !13910)
!13919 = !DILocation(line: 1406, column: 19, scope: !13910)
!13920 = !DILocation(line: 1406, column: 2, scope: !13910)
!13921 = distinct !DISubprogram(name: "dev_kfree_skb_any", scope: !31, file: !31, line: 3817, type: !524, scopeLine: 3818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13922 = !DILocalVariable(name: "skb", arg: 1, scope: !13921, file: !31, line: 3817, type: !470)
!13923 = !DILocation(line: 3817, column: 54, scope: !13921)
!13924 = !DILocation(line: 3819, column: 22, scope: !13921)
!13925 = !DILocation(line: 3819, column: 2, scope: !13921)
!13926 = !DILocation(line: 3820, column: 1, scope: !13921)
!13927 = distinct !DISubprogram(name: "mlxsw_pci_wqe_byte_count_get", scope: !7410, file: !7410, line: 99, type: !13928, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13928 = !DISubroutineType(types: !13929)
!13929 = !{!636, !347, !531}
!13930 = !DILocalVariable(name: "buf", arg: 1, scope: !13927, file: !7410, line: 99, type: !347)
!13931 = !DILocation(line: 99, column: 1, scope: !13927)
!13932 = !DILocalVariable(name: "index", arg: 2, scope: !13927, file: !7410, line: 99, type: !531)
!13933 = distinct !DISubprogram(name: "mlxsw_pci_wqe_address_get", scope: !7410, file: !7410, line: 105, type: !13934, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13934 = !DISubroutineType(types: !13935)
!13935 = !{!386, !347, !531}
!13936 = !DILocalVariable(name: "buf", arg: 1, scope: !13933, file: !7410, line: 105, type: !347)
!13937 = !DILocation(line: 105, column: 1, scope: !13933)
!13938 = !DILocalVariable(name: "index", arg: 2, scope: !13933, file: !7410, line: 105, type: !531)
!13939 = distinct !DISubprogram(name: "pci_unmap_single", scope: !9007, file: !9007, line: 44, type: !13940, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13940 = !DISubroutineType(types: !13941)
!13941 = !{null, !7726, !2091, !1094, !32}
!13942 = !DILocalVariable(name: "hwdev", arg: 1, scope: !13939, file: !9007, line: 44, type: !7726)
!13943 = !DILocation(line: 44, column: 34, scope: !13939)
!13944 = !DILocalVariable(name: "dma_addr", arg: 2, scope: !13939, file: !9007, line: 44, type: !2091)
!13945 = !DILocation(line: 44, column: 52, scope: !13939)
!13946 = !DILocalVariable(name: "size", arg: 3, scope: !13939, file: !9007, line: 45, type: !1094)
!13947 = !DILocation(line: 45, column: 11, scope: !13939)
!13948 = !DILocalVariable(name: "direction", arg: 4, scope: !13939, file: !9007, line: 45, type: !32)
!13949 = !DILocation(line: 45, column: 21, scope: !13939)
!13950 = !DILocation(line: 47, column: 2, scope: !13939)
!13951 = !DILocation(line: 48, column: 1, scope: !13939)
!13952 = distinct !DISubprogram(name: "__mlxsw_item_get16", scope: !8224, file: !8224, line: 77, type: !13953, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13953 = !DISubroutineType(types: !13954)
!13954 = !{!636, !347, !11079, !531}
!13955 = !DILocalVariable(name: "buf", arg: 1, scope: !13952, file: !8224, line: 77, type: !347)
!13956 = !DILocation(line: 77, column: 50, scope: !13952)
!13957 = !DILocalVariable(name: "item", arg: 2, scope: !13952, file: !8224, line: 78, type: !11079)
!13958 = !DILocation(line: 78, column: 35, scope: !13952)
!13959 = !DILocalVariable(name: "index", arg: 3, scope: !13952, file: !8224, line: 79, type: !531)
!13960 = !DILocation(line: 79, column: 25, scope: !13952)
!13961 = !DILocalVariable(name: "offset", scope: !13952, file: !8224, line: 81, type: !7)
!13962 = !DILocation(line: 81, column: 15, scope: !13952)
!13963 = !DILocation(line: 81, column: 44, scope: !13952)
!13964 = !DILocation(line: 81, column: 50, scope: !13952)
!13965 = !DILocation(line: 81, column: 24, scope: !13952)
!13966 = !DILocalVariable(name: "b", scope: !13952, file: !8224, line: 82, type: !8105)
!13967 = !DILocation(line: 82, column: 10, scope: !13952)
!13968 = !DILocation(line: 82, column: 25, scope: !13952)
!13969 = !DILocation(line: 82, column: 14, scope: !13952)
!13970 = !DILocalVariable(name: "tmp", scope: !13952, file: !8224, line: 83, type: !636)
!13971 = !DILocation(line: 83, column: 6, scope: !13952)
!13972 = !DILocation(line: 85, column: 8, scope: !13952)
!13973 = !DILocation(line: 85, column: 6, scope: !13952)
!13974 = !DILocation(line: 86, column: 10, scope: !13952)
!13975 = !DILocation(line: 86, column: 16, scope: !13952)
!13976 = !DILocation(line: 86, column: 6, scope: !13952)
!13977 = !DILocation(line: 87, column: 9, scope: !13952)
!13978 = !DILocation(line: 87, column: 6, scope: !13952)
!13979 = !DILocation(line: 88, column: 6, scope: !13980)
!13980 = distinct !DILexicalBlock(scope: !13952, file: !8224, line: 88, column: 6)
!13981 = !DILocation(line: 88, column: 12, scope: !13980)
!13982 = !DILocation(line: 88, column: 6, scope: !13952)
!13983 = !DILocation(line: 89, column: 11, scope: !13980)
!13984 = !DILocation(line: 89, column: 17, scope: !13980)
!13985 = !DILocation(line: 89, column: 7, scope: !13980)
!13986 = !DILocation(line: 89, column: 3, scope: !13980)
!13987 = !DILocation(line: 90, column: 9, scope: !13952)
!13988 = !DILocation(line: 90, column: 2, scope: !13952)
!13989 = distinct !DISubprogram(name: "__fswab16", scope: !11206, file: !11206, line: 48, type: !13990, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13990 = !DISubroutineType(types: !13991)
!13991 = !{!530, !530}
!13992 = !DILocalVariable(name: "val", arg: 1, scope: !13989, file: !11206, line: 48, type: !530)
!13993 = !DILocation(line: 48, column: 57, scope: !13989)
!13994 = !DILocation(line: 53, column: 9, scope: !13989)
!13995 = !DILocation(line: 53, column: 2, scope: !13989)
!13996 = distinct !DISubprogram(name: "dma_unmap_single_attrs", scope: !8487, file: !8487, line: 283, type: !13997, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!13997 = !DISubroutineType(types: !13998)
!13998 = !{null, !5809, !2091, !1094, !7510, !367}
!13999 = !DILocalVariable(name: "dev", arg: 1, scope: !13996, file: !8487, line: 283, type: !5809)
!14000 = !DILocation(line: 283, column: 58, scope: !13996)
!14001 = !DILocalVariable(name: "addr", arg: 2, scope: !13996, file: !8487, line: 283, type: !2091)
!14002 = !DILocation(line: 283, column: 74, scope: !13996)
!14003 = !DILocalVariable(name: "size", arg: 3, scope: !13996, file: !8487, line: 284, type: !1094)
!14004 = !DILocation(line: 284, column: 10, scope: !13996)
!14005 = !DILocalVariable(name: "dir", arg: 4, scope: !13996, file: !8487, line: 284, type: !7510)
!14006 = !DILocation(line: 284, column: 40, scope: !13996)
!14007 = !DILocalVariable(name: "attrs", arg: 5, scope: !13996, file: !8487, line: 284, type: !367)
!14008 = !DILocation(line: 284, column: 59, scope: !13996)
!14009 = !DILocation(line: 286, column: 30, scope: !13996)
!14010 = !DILocation(line: 286, column: 35, scope: !13996)
!14011 = !DILocation(line: 286, column: 41, scope: !13996)
!14012 = !DILocation(line: 286, column: 47, scope: !13996)
!14013 = !DILocation(line: 286, column: 52, scope: !13996)
!14014 = !DILocation(line: 286, column: 9, scope: !13996)
!14015 = !DILocation(line: 286, column: 2, scope: !13996)
!14016 = distinct !DISubprogram(name: "mlxsw_pci_cqe_lag_get", scope: !7410, file: !7410, line: 148, type: !13513, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14017 = !DILocalVariable(name: "v", arg: 1, scope: !14016, file: !7410, line: 148, type: !7409)
!14018 = !DILocation(line: 148, column: 1, scope: !14016)
!14019 = !DILocalVariable(name: "cqe", arg: 2, scope: !14016, file: !7410, line: 148, type: !1093)
!14020 = !DILocation(line: 148, column: 1, scope: !14021)
!14021 = distinct !DILexicalBlock(scope: !14016, file: !7410, line: 148, column: 1)
!14022 = distinct !DISubprogram(name: "mlxsw_pci_cqe_lag_id_get", scope: !7410, file: !7410, line: 159, type: !13513, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14023 = !DILocalVariable(name: "v", arg: 1, scope: !14022, file: !7410, line: 159, type: !7409)
!14024 = !DILocation(line: 159, column: 1, scope: !14022)
!14025 = !DILocalVariable(name: "cqe", arg: 2, scope: !14022, file: !7410, line: 159, type: !1093)
!14026 = !DILocation(line: 159, column: 1, scope: !14027)
!14027 = distinct !DILexicalBlock(scope: !14022, file: !7410, line: 159, column: 1)
!14028 = distinct !DISubprogram(name: "mlxsw_pci_cqe_lag_subport_get", scope: !7410, file: !7410, line: 162, type: !13513, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14029 = !DILocalVariable(name: "v", arg: 1, scope: !14028, file: !7410, line: 162, type: !7409)
!14030 = !DILocation(line: 162, column: 1, scope: !14028)
!14031 = !DILocalVariable(name: "cqe", arg: 2, scope: !14028, file: !7410, line: 162, type: !1093)
!14032 = !DILocation(line: 162, column: 1, scope: !14033)
!14033 = distinct !DILexicalBlock(scope: !14028, file: !7410, line: 162, column: 1)
!14034 = distinct !DISubprogram(name: "mlxsw_pci_cqe_system_port_get", scope: !7410, file: !7410, line: 156, type: !10193, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14035 = !DILocalVariable(name: "buf", arg: 1, scope: !14034, file: !7410, line: 156, type: !347)
!14036 = !DILocation(line: 156, column: 1, scope: !14034)
!14037 = distinct !DISubprogram(name: "mlxsw_pci_cqe_trap_id_get", scope: !7410, file: !7410, line: 179, type: !10193, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14038 = !DILocalVariable(name: "buf", arg: 1, scope: !14037, file: !7410, line: 179, type: !347)
!14039 = !DILocation(line: 179, column: 1, scope: !14037)
!14040 = distinct !DISubprogram(name: "mlxsw_pci_cqe2_user_def_val_orig_pkt_len_get", scope: !7410, file: !7410, line: 214, type: !10193, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14041 = !DILocalVariable(name: "buf", arg: 1, scope: !14040, file: !7410, line: 214, type: !347)
!14042 = !DILocation(line: 214, column: 1, scope: !14040)
!14043 = distinct !DISubprogram(name: "mlxsw_pci_cqe2_mirror_reason_get", scope: !7410, file: !7410, line: 219, type: !10193, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14044 = !DILocalVariable(name: "buf", arg: 1, scope: !14043, file: !7410, line: 219, type: !347)
!14045 = !DILocation(line: 219, column: 1, scope: !14043)
!14046 = distinct !DISubprogram(name: "mlxsw_pci_cqe_byte_count_get", scope: !7410, file: !7410, line: 174, type: !10193, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14047 = !DILocalVariable(name: "buf", arg: 1, scope: !14046, file: !7410, line: 174, type: !347)
!14048 = !DILocation(line: 174, column: 1, scope: !14046)
!14049 = distinct !DISubprogram(name: "mlxsw_pci_cqe_crc_get", scope: !7410, file: !7410, line: 187, type: !13513, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14050 = !DILocalVariable(name: "v", arg: 1, scope: !14049, file: !7410, line: 187, type: !7409)
!14051 = !DILocation(line: 187, column: 1, scope: !14049)
!14052 = !DILocalVariable(name: "cqe", arg: 2, scope: !14049, file: !7410, line: 187, type: !1093)
!14053 = !DILocation(line: 187, column: 1, scope: !14054)
!14054 = distinct !DILexicalBlock(scope: !14049, file: !7410, line: 187, column: 1)
!14055 = distinct !DISubprogram(name: "mlxsw_pci_rdq_skb_alloc", scope: !3, file: !3, line: 348, type: !14056, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14056 = !DISubroutineType(types: !14057)
!14057 = !{!32, !7722, !7680}
!14058 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !14055, file: !3, line: 348, type: !7722)
!14059 = !DILocation(line: 348, column: 54, scope: !14055)
!14060 = !DILocalVariable(name: "elem_info", arg: 2, scope: !14055, file: !3, line: 349, type: !7680)
!14061 = !DILocation(line: 349, column: 42, scope: !14055)
!14062 = !DILocalVariable(name: "buf_len", scope: !14055, file: !3, line: 351, type: !1094)
!14063 = !DILocation(line: 351, column: 9, scope: !14055)
!14064 = !DILocalVariable(name: "wqe", scope: !14055, file: !3, line: 352, type: !1093)
!14065 = !DILocation(line: 352, column: 8, scope: !14055)
!14066 = !DILocation(line: 352, column: 14, scope: !14055)
!14067 = !DILocation(line: 352, column: 25, scope: !14055)
!14068 = !DILocalVariable(name: "skb", scope: !14055, file: !3, line: 353, type: !470)
!14069 = !DILocation(line: 353, column: 18, scope: !14055)
!14070 = !DILocalVariable(name: "err", scope: !14055, file: !3, line: 354, type: !32)
!14071 = !DILocation(line: 354, column: 6, scope: !14055)
!14072 = !DILocation(line: 356, column: 2, scope: !14055)
!14073 = !DILocation(line: 356, column: 13, scope: !14055)
!14074 = !DILocation(line: 356, column: 15, scope: !14055)
!14075 = !DILocation(line: 356, column: 19, scope: !14055)
!14076 = !DILocation(line: 356, column: 23, scope: !14055)
!14077 = !DILocation(line: 357, column: 40, scope: !14055)
!14078 = !DILocation(line: 357, column: 8, scope: !14055)
!14079 = !DILocation(line: 357, column: 6, scope: !14055)
!14080 = !DILocation(line: 358, column: 7, scope: !14081)
!14081 = distinct !DILexicalBlock(scope: !14055, file: !3, line: 358, column: 6)
!14082 = !DILocation(line: 358, column: 6, scope: !14055)
!14083 = !DILocation(line: 359, column: 3, scope: !14081)
!14084 = !DILocation(line: 363, column: 31, scope: !14055)
!14085 = !DILocation(line: 363, column: 42, scope: !14055)
!14086 = !DILocation(line: 363, column: 50, scope: !14055)
!14087 = !DILocation(line: 363, column: 55, scope: !14055)
!14088 = !DILocation(line: 364, column: 10, scope: !14055)
!14089 = !DILocation(line: 363, column: 8, scope: !14055)
!14090 = !DILocation(line: 363, column: 6, scope: !14055)
!14091 = !DILocation(line: 365, column: 6, scope: !14092)
!14092 = distinct !DILexicalBlock(scope: !14055, file: !3, line: 365, column: 6)
!14093 = !DILocation(line: 365, column: 6, scope: !14055)
!14094 = !DILocation(line: 366, column: 3, scope: !14092)
!14095 = !DILocation(line: 368, column: 25, scope: !14055)
!14096 = !DILocation(line: 368, column: 2, scope: !14055)
!14097 = !DILocation(line: 368, column: 13, scope: !14055)
!14098 = !DILocation(line: 368, column: 15, scope: !14055)
!14099 = !DILocation(line: 368, column: 19, scope: !14055)
!14100 = !DILocation(line: 368, column: 23, scope: !14055)
!14101 = !DILocation(line: 369, column: 2, scope: !14055)
!14102 = !DILabel(scope: !14055, name: "err_frag_map", file: !3, line: 371)
!14103 = !DILocation(line: 371, column: 1, scope: !14055)
!14104 = !DILocation(line: 372, column: 20, scope: !14055)
!14105 = !DILocation(line: 372, column: 2, scope: !14055)
!14106 = !DILocation(line: 373, column: 9, scope: !14055)
!14107 = !DILocation(line: 373, column: 2, scope: !14055)
!14108 = !DILocation(line: 374, column: 1, scope: !14055)
!14109 = distinct !DISubprogram(name: "mlxsw_pci_queue_doorbell_producer_ring", scope: !3, file: !3, line: 255, type: !8379, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14110 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !14109, file: !3, line: 255, type: !7722)
!14111 = !DILocation(line: 255, column: 70, scope: !14109)
!14112 = !DILocalVariable(name: "q", arg: 2, scope: !14109, file: !3, line: 256, type: !7669)
!14113 = !DILocation(line: 256, column: 34, scope: !14109)
!14114 = !DILocation(line: 258, column: 2, scope: !14109)
!14115 = !{i32 -2136904198}
!14116 = !DILocation(line: 259, column: 33, scope: !14109)
!14117 = !DILocation(line: 259, column: 44, scope: !14109)
!14118 = !DILocation(line: 259, column: 47, scope: !14109)
!14119 = !DILocation(line: 259, column: 50, scope: !14109)
!14120 = !DILocation(line: 259, column: 2, scope: !14109)
!14121 = !DILocation(line: 260, column: 1, scope: !14109)
!14122 = distinct !DISubprogram(name: "mlxsw_pci_cqe0_lag_get", scope: !7410, file: !7410, line: 146, type: !10193, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14123 = !DILocalVariable(name: "buf", arg: 1, scope: !14122, file: !7410, line: 146, type: !347)
!14124 = !DILocation(line: 146, column: 1, scope: !14122)
!14125 = distinct !DISubprogram(name: "mlxsw_pci_cqe12_lag_get", scope: !7410, file: !7410, line: 147, type: !10193, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14126 = !DILocalVariable(name: "buf", arg: 1, scope: !14125, file: !7410, line: 147, type: !347)
!14127 = !DILocation(line: 147, column: 1, scope: !14125)
!14128 = distinct !DISubprogram(name: "mlxsw_pci_cqe0_lag_id_get", scope: !7410, file: !7410, line: 157, type: !10193, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14129 = !DILocalVariable(name: "buf", arg: 1, scope: !14128, file: !7410, line: 157, type: !347)
!14130 = !DILocation(line: 157, column: 1, scope: !14128)
!14131 = distinct !DISubprogram(name: "mlxsw_pci_cqe12_lag_id_get", scope: !7410, file: !7410, line: 158, type: !10193, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14132 = !DILocalVariable(name: "buf", arg: 1, scope: !14131, file: !7410, line: 158, type: !347)
!14133 = !DILocation(line: 158, column: 1, scope: !14131)
!14134 = distinct !DISubprogram(name: "mlxsw_pci_cqe0_lag_subport_get", scope: !7410, file: !7410, line: 160, type: !10193, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14135 = !DILocalVariable(name: "buf", arg: 1, scope: !14134, file: !7410, line: 160, type: !347)
!14136 = !DILocation(line: 160, column: 1, scope: !14134)
!14137 = distinct !DISubprogram(name: "mlxsw_pci_cqe12_lag_subport_get", scope: !7410, file: !7410, line: 161, type: !10193, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14138 = !DILocalVariable(name: "buf", arg: 1, scope: !14137, file: !7410, line: 161, type: !347)
!14139 = !DILocation(line: 161, column: 1, scope: !14137)
!14140 = distinct !DISubprogram(name: "mlxsw_pci_cqe0_crc_get", scope: !7410, file: !7410, line: 185, type: !10193, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14141 = !DILocalVariable(name: "buf", arg: 1, scope: !14140, file: !7410, line: 185, type: !347)
!14142 = !DILocation(line: 185, column: 1, scope: !14140)
!14143 = distinct !DISubprogram(name: "mlxsw_pci_cqe12_crc_get", scope: !7410, file: !7410, line: 186, type: !10193, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14144 = !DILocalVariable(name: "buf", arg: 1, scope: !14143, file: !7410, line: 186, type: !347)
!14145 = !DILocation(line: 186, column: 1, scope: !14143)
!14146 = distinct !DISubprogram(name: "netdev_alloc_skb_ip_align", scope: !472, file: !472, line: 2853, type: !14147, scopeLine: 2855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14147 = !DISubroutineType(types: !14148)
!14148 = !{!470, !345, !7}
!14149 = !DILocalVariable(name: "dev", arg: 1, scope: !14146, file: !472, line: 2853, type: !345)
!14150 = !DILocation(line: 2853, column: 76, scope: !14146)
!14151 = !DILocalVariable(name: "length", arg: 2, scope: !14146, file: !472, line: 2854, type: !7)
!14152 = !DILocation(line: 2854, column: 16, scope: !14146)
!14153 = !DILocation(line: 2856, column: 37, scope: !14146)
!14154 = !DILocation(line: 2856, column: 42, scope: !14146)
!14155 = !DILocation(line: 2856, column: 9, scope: !14146)
!14156 = !DILocation(line: 2856, column: 2, scope: !14146)
!14157 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !8481, file: !3, line: 319, type: !7722)
!14158 = !DILocation(line: 319, column: 53, scope: !8481)
!14159 = !DILocalVariable(name: "wqe", arg: 2, scope: !8481, file: !3, line: 319, type: !1093)
!14160 = !DILocation(line: 319, column: 70, scope: !8481)
!14161 = !DILocalVariable(name: "index", arg: 3, scope: !8481, file: !3, line: 320, type: !32)
!14162 = !DILocation(line: 320, column: 11, scope: !8481)
!14163 = !DILocalVariable(name: "frag_data", arg: 4, scope: !8481, file: !3, line: 320, type: !1093)
!14164 = !DILocation(line: 320, column: 24, scope: !8481)
!14165 = !DILocalVariable(name: "frag_len", arg: 5, scope: !8481, file: !3, line: 320, type: !1094)
!14166 = !DILocation(line: 320, column: 42, scope: !8481)
!14167 = !DILocalVariable(name: "direction", arg: 6, scope: !8481, file: !3, line: 321, type: !32)
!14168 = !DILocation(line: 321, column: 11, scope: !8481)
!14169 = !DILocalVariable(name: "pdev", scope: !8481, file: !3, line: 323, type: !7726)
!14170 = !DILocation(line: 323, column: 18, scope: !8481)
!14171 = !DILocation(line: 323, column: 25, scope: !8481)
!14172 = !DILocation(line: 323, column: 36, scope: !8481)
!14173 = !DILocalVariable(name: "mapaddr", scope: !8481, file: !3, line: 324, type: !2091)
!14174 = !DILocation(line: 324, column: 13, scope: !8481)
!14175 = !DILocation(line: 326, column: 27, scope: !8481)
!14176 = !DILocation(line: 326, column: 33, scope: !8481)
!14177 = !DILocation(line: 326, column: 44, scope: !8481)
!14178 = !DILocation(line: 326, column: 54, scope: !8481)
!14179 = !DILocation(line: 326, column: 12, scope: !8481)
!14180 = !DILocation(line: 326, column: 10, scope: !8481)
!14181 = !DILocation(line: 327, column: 6, scope: !14182)
!14182 = distinct !DILexicalBlock(scope: !8481, file: !3, line: 327, column: 6)
!14183 = !DILocation(line: 327, column: 6, scope: !8481)
!14184 = !DILocation(line: 328, column: 3, scope: !14185)
!14185 = distinct !DILexicalBlock(scope: !14182, file: !3, line: 327, column: 54)
!14186 = !DILocation(line: 328, column: 3, scope: !14187)
!14187 = distinct !DILexicalBlock(scope: !14188, file: !3, line: 328, column: 3)
!14188 = distinct !DILexicalBlock(scope: !14185, file: !3, line: 328, column: 3)
!14189 = !DILocation(line: 328, column: 3, scope: !14188)
!14190 = !DILocation(line: 329, column: 3, scope: !14185)
!14191 = !DILocation(line: 331, column: 28, scope: !8481)
!14192 = !DILocation(line: 331, column: 33, scope: !8481)
!14193 = !DILocation(line: 331, column: 40, scope: !8481)
!14194 = !DILocation(line: 331, column: 2, scope: !8481)
!14195 = !DILocation(line: 332, column: 31, scope: !8481)
!14196 = !DILocation(line: 332, column: 36, scope: !8481)
!14197 = !DILocation(line: 332, column: 43, scope: !8481)
!14198 = !DILocation(line: 332, column: 2, scope: !8481)
!14199 = !DILocation(line: 333, column: 2, scope: !8481)
!14200 = !DILocation(line: 334, column: 1, scope: !8481)
!14201 = distinct !DISubprogram(name: "__netdev_alloc_skb_ip_align", scope: !472, file: !472, line: 2843, type: !14202, scopeLine: 2845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14202 = !DISubroutineType(types: !14203)
!14203 = !{!470, !345, !7, !1797}
!14204 = !DILocalVariable(name: "dev", arg: 1, scope: !14201, file: !472, line: 2843, type: !345)
!14205 = !DILocation(line: 2843, column: 78, scope: !14201)
!14206 = !DILocalVariable(name: "length", arg: 2, scope: !14201, file: !472, line: 2844, type: !7)
!14207 = !DILocation(line: 2844, column: 16, scope: !14201)
!14208 = !DILocalVariable(name: "gfp", arg: 3, scope: !14201, file: !472, line: 2844, type: !1797)
!14209 = !DILocation(line: 2844, column: 30, scope: !14201)
!14210 = !DILocalVariable(name: "skb", scope: !14201, file: !472, line: 2846, type: !470)
!14211 = !DILocation(line: 2846, column: 18, scope: !14201)
!14212 = !DILocation(line: 2846, column: 43, scope: !14201)
!14213 = !DILocation(line: 2846, column: 48, scope: !14201)
!14214 = !DILocation(line: 2846, column: 55, scope: !14201)
!14215 = !DILocation(line: 2846, column: 71, scope: !14201)
!14216 = !DILocation(line: 2846, column: 24, scope: !14201)
!14217 = !DILocation(line: 2850, column: 9, scope: !14201)
!14218 = !DILocation(line: 2850, column: 2, scope: !14201)
!14219 = distinct !DISubprogram(name: "pci_map_single", scope: !9007, file: !9007, line: 38, type: !14220, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14220 = !DISubroutineType(types: !14221)
!14221 = !{!2091, !7726, !646, !1094, !32}
!14222 = !DILocalVariable(name: "hwdev", arg: 1, scope: !14219, file: !9007, line: 38, type: !7726)
!14223 = !DILocation(line: 38, column: 32, scope: !14219)
!14224 = !DILocalVariable(name: "ptr", arg: 2, scope: !14219, file: !9007, line: 38, type: !646)
!14225 = !DILocation(line: 38, column: 45, scope: !14219)
!14226 = !DILocalVariable(name: "size", arg: 3, scope: !14219, file: !9007, line: 38, type: !1094)
!14227 = !DILocation(line: 38, column: 57, scope: !14219)
!14228 = !DILocalVariable(name: "direction", arg: 4, scope: !14219, file: !9007, line: 38, type: !32)
!14229 = !DILocation(line: 38, column: 67, scope: !14219)
!14230 = !DILocation(line: 40, column: 9, scope: !14219)
!14231 = !DILocation(line: 40, column: 2, scope: !14219)
!14232 = distinct !DISubprogram(name: "pci_dma_mapping_error", scope: !9007, file: !9007, line: 107, type: !14233, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14233 = !DISubroutineType(types: !14234)
!14234 = !{!32, !7726, !2091}
!14235 = !DILocalVariable(name: "pdev", arg: 1, scope: !14232, file: !9007, line: 107, type: !7726)
!14236 = !DILocation(line: 107, column: 39, scope: !14232)
!14237 = !DILocalVariable(name: "dma_addr", arg: 2, scope: !14232, file: !9007, line: 107, type: !2091)
!14238 = !DILocation(line: 107, column: 56, scope: !14232)
!14239 = !DILocation(line: 109, column: 28, scope: !14232)
!14240 = !DILocation(line: 109, column: 34, scope: !14232)
!14241 = !DILocation(line: 109, column: 39, scope: !14232)
!14242 = !DILocation(line: 109, column: 9, scope: !14232)
!14243 = !DILocation(line: 109, column: 2, scope: !14232)
!14244 = distinct !DISubprogram(name: "mlxsw_pci_wqe_address_set", scope: !7410, file: !7410, line: 105, type: !11378, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14245 = !DILocalVariable(name: "buf", arg: 1, scope: !14244, file: !7410, line: 105, type: !1093)
!14246 = !DILocation(line: 105, column: 1, scope: !14244)
!14247 = !DILocalVariable(name: "index", arg: 2, scope: !14244, file: !7410, line: 105, type: !531)
!14248 = !DILocalVariable(name: "val", arg: 3, scope: !14244, file: !7410, line: 105, type: !386)
!14249 = distinct !DISubprogram(name: "mlxsw_pci_wqe_byte_count_set", scope: !7410, file: !7410, line: 99, type: !14250, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14250 = !DISubroutineType(types: !14251)
!14251 = !{null, !1093, !531, !636}
!14252 = !DILocalVariable(name: "buf", arg: 1, scope: !14249, file: !7410, line: 99, type: !1093)
!14253 = !DILocation(line: 99, column: 1, scope: !14249)
!14254 = !DILocalVariable(name: "index", arg: 2, scope: !14249, file: !7410, line: 99, type: !531)
!14255 = !DILocalVariable(name: "val", arg: 3, scope: !14249, file: !7410, line: 99, type: !636)
!14256 = !DILocalVariable(name: "dev", arg: 1, scope: !8486, file: !8487, line: 271, type: !5809)
!14257 = !DILocation(line: 271, column: 62, scope: !8486)
!14258 = !DILocalVariable(name: "ptr", arg: 2, scope: !8486, file: !8487, line: 271, type: !646)
!14259 = !DILocation(line: 271, column: 73, scope: !8486)
!14260 = !DILocalVariable(name: "size", arg: 3, scope: !8486, file: !8487, line: 272, type: !1094)
!14261 = !DILocation(line: 272, column: 10, scope: !8486)
!14262 = !DILocalVariable(name: "dir", arg: 4, scope: !8486, file: !8487, line: 272, type: !7510)
!14263 = !DILocation(line: 272, column: 40, scope: !8486)
!14264 = !DILocalVariable(name: "attrs", arg: 5, scope: !8486, file: !8487, line: 272, type: !367)
!14265 = !DILocation(line: 272, column: 59, scope: !8486)
!14266 = !DILocalVariable(name: "__ret_warn_once", scope: !14267, file: !8487, line: 275, type: !32)
!14267 = distinct !DILexicalBlock(scope: !14268, file: !8487, line: 275, column: 6)
!14268 = distinct !DILexicalBlock(scope: !8486, file: !8487, line: 275, column: 6)
!14269 = !DILocation(line: 275, column: 6, scope: !14267)
!14270 = !DILocation(line: 275, column: 6, scope: !14271)
!14271 = distinct !DILexicalBlock(scope: !14267, file: !8487, line: 275, column: 6)
!14272 = !DILocation(line: 0, scope: !14271)
!14273 = !DILocation(line: 275, column: 6, scope: !14274)
!14274 = distinct !DILexicalBlock(scope: !14271, file: !8487, line: 275, column: 6)
!14275 = !DILocalVariable(name: "__ret_warn_on", scope: !14276, file: !8487, line: 275, type: !32)
!14276 = distinct !DILexicalBlock(scope: !14274, file: !8487, line: 275, column: 6)
!14277 = !DILocation(line: 275, column: 6, scope: !14276)
!14278 = !DILocation(line: 275, column: 6, scope: !14279)
!14279 = distinct !DILexicalBlock(scope: !14276, file: !8487, line: 275, column: 6)
!14280 = !DILocation(line: 275, column: 6, scope: !14281)
!14281 = distinct !DILexicalBlock(scope: !14279, file: !8487, line: 275, column: 6)
!14282 = !DILocation(line: 275, column: 6, scope: !14283)
!14283 = distinct !DILexicalBlock(scope: !14281, file: !8487, line: 275, column: 6)
!14284 = !DILocation(line: 275, column: 6, scope: !14285)
!14285 = distinct !DILexicalBlock(scope: !14281, file: !8487, line: 275, column: 6)
!14286 = !DILocation(line: 275, column: 6, scope: !14287)
!14287 = distinct !DILexicalBlock(scope: !14285, file: !8487, line: 275, column: 6)
!14288 = !DILocation(line: 275, column: 6, scope: !14289)
!14289 = distinct !DILexicalBlock(scope: !14285, file: !8487, line: 275, column: 6)
!14290 = !{i32 -2141715259, i32 -2141715230, i32 -2141715184, i32 -2141715126, i32 -2141715072, i32 -2141715018, i32 -2141714963, i32 -2141714932}
!14291 = !DILocation(line: 275, column: 6, scope: !14292)
!14292 = distinct !DILexicalBlock(scope: !14285, file: !8487, line: 275, column: 6)
!14293 = !{i32 -2141714512, i32 -2141714505, i32 -2141714453, i32 -2141714422, i32 -2141714392}
!14294 = !DILocation(line: 275, column: 6, scope: !14295)
!14295 = distinct !DILexicalBlock(scope: !14285, file: !8487, line: 275, column: 6)
!14296 = !DILocation(line: 275, column: 6, scope: !14297)
!14297 = distinct !DILexicalBlock(scope: !14281, file: !8487, line: 275, column: 6)
!14298 = !DILocation(line: 275, column: 6, scope: !14268)
!14299 = !DILocation(line: 275, column: 6, scope: !8486)
!14300 = !DILocation(line: 277, column: 3, scope: !14268)
!14301 = !DILocation(line: 278, column: 23, scope: !8486)
!14302 = !DILocation(line: 278, column: 28, scope: !8486)
!14303 = !DILocation(line: 278, column: 33, scope: !8486)
!14304 = !DILocation(line: 278, column: 2, scope: !8486)
!14305 = !DILocation(line: 279, column: 28, scope: !8486)
!14306 = !DILocation(line: 279, column: 33, scope: !8486)
!14307 = !DILocation(line: 279, column: 52, scope: !8486)
!14308 = !DILocation(line: 280, column: 4, scope: !8486)
!14309 = !DILocation(line: 280, column: 10, scope: !8486)
!14310 = !DILocation(line: 280, column: 15, scope: !8486)
!14311 = !DILocation(line: 279, column: 9, scope: !8486)
!14312 = !DILocation(line: 279, column: 2, scope: !8486)
!14313 = !DILocation(line: 281, column: 1, scope: !8486)
!14314 = distinct !DISubprogram(name: "debug_dma_map_single", scope: !8487, file: !8487, line: 87, type: !14315, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14315 = !DISubroutineType(types: !14316)
!14316 = !{null, !5809, !3313, !367}
!14317 = !DILocalVariable(name: "dev", arg: 1, scope: !14314, file: !8487, line: 87, type: !5809)
!14318 = !DILocation(line: 87, column: 56, scope: !14314)
!14319 = !DILocalVariable(name: "addr", arg: 2, scope: !14314, file: !8487, line: 87, type: !3313)
!14320 = !DILocation(line: 87, column: 73, scope: !14314)
!14321 = !DILocalVariable(name: "len", arg: 3, scope: !14314, file: !8487, line: 88, type: !367)
!14322 = !DILocation(line: 88, column: 17, scope: !14314)
!14323 = !DILocation(line: 90, column: 1, scope: !14314)
!14324 = distinct !DISubprogram(name: "__phys_addr_nodebug", scope: !14325, file: !14325, line: 18, type: !14326, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14325 = !DIFile(filename: "./arch/x86/include/asm/page_64.h", directory: "/home/lizy2001/genbc/linux")
!14326 = !DISubroutineType(types: !14327)
!14327 = !{!367, !367}
!14328 = !DILocalVariable(name: "x", arg: 1, scope: !14324, file: !14325, line: 18, type: !367)
!14329 = !DILocation(line: 18, column: 63, scope: !14324)
!14330 = !DILocalVariable(name: "y", scope: !14324, file: !14325, line: 20, type: !367)
!14331 = !DILocation(line: 20, column: 16, scope: !14324)
!14332 = !DILocation(line: 20, column: 20, scope: !14324)
!14333 = !DILocation(line: 20, column: 22, scope: !14324)
!14334 = !DILocation(line: 23, column: 6, scope: !14324)
!14335 = !DILocation(line: 23, column: 12, scope: !14324)
!14336 = !DILocation(line: 23, column: 16, scope: !14324)
!14337 = !DILocation(line: 23, column: 14, scope: !14324)
!14338 = !DILocation(line: 23, column: 11, scope: !14324)
!14339 = !DILocation(line: 23, column: 21, scope: !14324)
!14340 = !DILocation(line: 23, column: 55, scope: !14324)
!14341 = !DILocation(line: 23, column: 53, scope: !14324)
!14342 = !DILocation(line: 23, column: 8, scope: !14324)
!14343 = !DILocation(line: 23, column: 4, scope: !14324)
!14344 = !DILocation(line: 25, column: 9, scope: !14324)
!14345 = !DILocation(line: 25, column: 2, scope: !14324)
!14346 = distinct !DISubprogram(name: "dma_mapping_error", scope: !8487, file: !8487, line: 94, type: !14347, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14347 = !DISubroutineType(types: !14348)
!14348 = !{!32, !5809, !2091}
!14349 = !DILocalVariable(name: "dev", arg: 1, scope: !14346, file: !8487, line: 94, type: !5809)
!14350 = !DILocation(line: 94, column: 52, scope: !14346)
!14351 = !DILocalVariable(name: "dma_addr", arg: 2, scope: !14346, file: !8487, line: 94, type: !2091)
!14352 = !DILocation(line: 94, column: 68, scope: !14346)
!14353 = !DILocation(line: 96, column: 26, scope: !14346)
!14354 = !DILocation(line: 96, column: 31, scope: !14346)
!14355 = !DILocation(line: 96, column: 2, scope: !14346)
!14356 = !DILocation(line: 98, column: 6, scope: !14357)
!14357 = distinct !DILexicalBlock(scope: !14346, file: !8487, line: 98, column: 6)
!14358 = !DILocation(line: 98, column: 15, scope: !14357)
!14359 = !DILocation(line: 98, column: 6, scope: !14346)
!14360 = !DILocation(line: 99, column: 3, scope: !14357)
!14361 = !DILocation(line: 100, column: 2, scope: !14346)
!14362 = !DILocation(line: 101, column: 1, scope: !14346)
!14363 = distinct !DISubprogram(name: "debug_dma_mapping_error", scope: !8487, file: !8487, line: 83, type: !14364, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14364 = !DISubroutineType(types: !14365)
!14365 = !{null, !5809, !2091}
!14366 = !DILocalVariable(name: "dev", arg: 1, scope: !14363, file: !8487, line: 83, type: !5809)
!14367 = !DILocation(line: 83, column: 59, scope: !14363)
!14368 = !DILocalVariable(name: "dma_addr", arg: 2, scope: !14363, file: !8487, line: 84, type: !2091)
!14369 = !DILocation(line: 84, column: 14, scope: !14363)
!14370 = !DILocation(line: 86, column: 1, scope: !14363)
!14371 = distinct !DISubprogram(name: "__mlxsw_item_set16", scope: !8224, file: !8224, line: 93, type: !14372, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14372 = !DISubroutineType(types: !14373)
!14373 = !{null, !1093, !11079, !531, !636}
!14374 = !DILocalVariable(name: "buf", arg: 1, scope: !14371, file: !8224, line: 93, type: !1093)
!14375 = !DILocation(line: 93, column: 45, scope: !14371)
!14376 = !DILocalVariable(name: "item", arg: 2, scope: !14371, file: !8224, line: 93, type: !11079)
!14377 = !DILocation(line: 93, column: 75, scope: !14371)
!14378 = !DILocalVariable(name: "index", arg: 3, scope: !14371, file: !8224, line: 94, type: !531)
!14379 = !DILocation(line: 94, column: 26, scope: !14371)
!14380 = !DILocalVariable(name: "val", arg: 4, scope: !14371, file: !8224, line: 94, type: !636)
!14381 = !DILocation(line: 94, column: 37, scope: !14371)
!14382 = !DILocalVariable(name: "offset", scope: !14371, file: !8224, line: 96, type: !7)
!14383 = !DILocation(line: 96, column: 15, scope: !14371)
!14384 = !DILocation(line: 96, column: 44, scope: !14371)
!14385 = !DILocation(line: 96, column: 50, scope: !14371)
!14386 = !DILocation(line: 96, column: 24, scope: !14371)
!14387 = !DILocalVariable(name: "b", scope: !14371, file: !8224, line: 98, type: !8105)
!14388 = !DILocation(line: 98, column: 10, scope: !14371)
!14389 = !DILocation(line: 98, column: 25, scope: !14371)
!14390 = !DILocation(line: 98, column: 14, scope: !14371)
!14391 = !DILocalVariable(name: "mask", scope: !14371, file: !8224, line: 99, type: !636)
!14392 = !DILocation(line: 99, column: 6, scope: !14371)
!14393 = !DILocation(line: 99, column: 13, scope: !14371)
!14394 = !DILocation(line: 99, column: 48, scope: !14371)
!14395 = !DILocation(line: 99, column: 54, scope: !14371)
!14396 = !DILocation(line: 99, column: 45, scope: !14371)
!14397 = !DILocalVariable(name: "tmp", scope: !14371, file: !8224, line: 100, type: !636)
!14398 = !DILocation(line: 100, column: 6, scope: !14371)
!14399 = !DILocation(line: 102, column: 7, scope: !14400)
!14400 = distinct !DILexicalBlock(scope: !14371, file: !8224, line: 102, column: 6)
!14401 = !DILocation(line: 102, column: 13, scope: !14400)
!14402 = !DILocation(line: 102, column: 6, scope: !14371)
!14403 = !DILocation(line: 103, column: 11, scope: !14400)
!14404 = !DILocation(line: 103, column: 17, scope: !14400)
!14405 = !DILocation(line: 103, column: 7, scope: !14400)
!14406 = !DILocation(line: 103, column: 3, scope: !14400)
!14407 = !DILocation(line: 104, column: 9, scope: !14371)
!14408 = !DILocation(line: 104, column: 6, scope: !14371)
!14409 = !DILocation(line: 105, column: 8, scope: !14371)
!14410 = !DILocation(line: 105, column: 6, scope: !14371)
!14411 = !DILocation(line: 106, column: 10, scope: !14371)
!14412 = !DILocation(line: 106, column: 9, scope: !14371)
!14413 = !DILocation(line: 106, column: 6, scope: !14371)
!14414 = !DILocation(line: 107, column: 9, scope: !14371)
!14415 = !DILocation(line: 107, column: 6, scope: !14371)
!14416 = !DILocation(line: 108, column: 14, scope: !14371)
!14417 = !DILocation(line: 108, column: 2, scope: !14371)
!14418 = !DILocation(line: 108, column: 4, scope: !14371)
!14419 = !DILocation(line: 108, column: 12, scope: !14371)
!14420 = !DILocation(line: 109, column: 1, scope: !14371)
!14421 = distinct !DISubprogram(name: "mlxsw_pci_sdq_init", scope: !3, file: !3, line: 284, type: !8383, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14422 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !14421, file: !3, line: 284, type: !7722)
!14423 = !DILocation(line: 284, column: 49, scope: !14421)
!14424 = !DILocalVariable(name: "mbox", arg: 2, scope: !14421, file: !3, line: 284, type: !1093)
!14425 = !DILocation(line: 284, column: 66, scope: !14421)
!14426 = !DILocalVariable(name: "q", arg: 3, scope: !14421, file: !3, line: 285, type: !7669)
!14427 = !DILocation(line: 285, column: 34, scope: !14421)
!14428 = !DILocalVariable(name: "tclass", scope: !14421, file: !3, line: 287, type: !32)
!14429 = !DILocation(line: 287, column: 6, scope: !14421)
!14430 = !DILocalVariable(name: "i", scope: !14421, file: !3, line: 288, type: !32)
!14431 = !DILocation(line: 288, column: 6, scope: !14421)
!14432 = !DILocalVariable(name: "err", scope: !14421, file: !3, line: 289, type: !32)
!14433 = !DILocation(line: 289, column: 6, scope: !14421)
!14434 = !DILocation(line: 291, column: 2, scope: !14421)
!14435 = !DILocation(line: 291, column: 5, scope: !14421)
!14436 = !DILocation(line: 291, column: 22, scope: !14421)
!14437 = !DILocation(line: 292, column: 2, scope: !14421)
!14438 = !DILocation(line: 292, column: 5, scope: !14421)
!14439 = !DILocation(line: 292, column: 22, scope: !14421)
!14440 = !DILocation(line: 293, column: 11, scope: !14421)
!14441 = !DILocation(line: 293, column: 14, scope: !14421)
!14442 = !DILocation(line: 293, column: 18, scope: !14421)
!14443 = !DILocation(line: 293, column: 9, scope: !14421)
!14444 = !DILocation(line: 297, column: 33, scope: !14421)
!14445 = !DILocation(line: 297, column: 39, scope: !14421)
!14446 = !DILocation(line: 297, column: 42, scope: !14421)
!14447 = !DILocation(line: 297, column: 2, scope: !14421)
!14448 = !DILocation(line: 298, column: 41, scope: !14421)
!14449 = !DILocation(line: 298, column: 47, scope: !14421)
!14450 = !DILocation(line: 298, column: 2, scope: !14421)
!14451 = !DILocation(line: 299, column: 41, scope: !14421)
!14452 = !DILocation(line: 299, column: 2, scope: !14421)
!14453 = !DILocation(line: 300, column: 9, scope: !14454)
!14454 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 300, column: 2)
!14455 = !DILocation(line: 300, column: 7, scope: !14454)
!14456 = !DILocation(line: 300, column: 14, scope: !14457)
!14457 = distinct !DILexicalBlock(scope: !14454, file: !3, line: 300, column: 2)
!14458 = !DILocation(line: 300, column: 16, scope: !14457)
!14459 = !DILocation(line: 300, column: 2, scope: !14454)
!14460 = !DILocalVariable(name: "mapaddr", scope: !14461, file: !3, line: 301, type: !2091)
!14461 = distinct !DILexicalBlock(scope: !14457, file: !3, line: 300, column: 43)
!14462 = !DILocation(line: 301, column: 14, scope: !14461)
!14463 = !DILocation(line: 301, column: 51, scope: !14461)
!14464 = !DILocation(line: 301, column: 54, scope: !14461)
!14465 = !DILocation(line: 301, column: 24, scope: !14461)
!14466 = !DILocation(line: 303, column: 34, scope: !14461)
!14467 = !DILocation(line: 303, column: 40, scope: !14461)
!14468 = !DILocation(line: 303, column: 43, scope: !14461)
!14469 = !DILocation(line: 303, column: 3, scope: !14461)
!14470 = !DILocation(line: 304, column: 2, scope: !14461)
!14471 = !DILocation(line: 300, column: 39, scope: !14457)
!14472 = !DILocation(line: 300, column: 2, scope: !14457)
!14473 = distinct !{!14473, !14459, !14474}
!14474 = !DILocation(line: 304, column: 2, scope: !14454)
!14475 = !DILocation(line: 306, column: 28, scope: !14421)
!14476 = !DILocation(line: 306, column: 39, scope: !14421)
!14477 = !DILocation(line: 306, column: 45, scope: !14421)
!14478 = !DILocation(line: 306, column: 51, scope: !14421)
!14479 = !DILocation(line: 306, column: 54, scope: !14421)
!14480 = !DILocation(line: 306, column: 8, scope: !14421)
!14481 = !DILocation(line: 306, column: 6, scope: !14421)
!14482 = !DILocation(line: 307, column: 6, scope: !14483)
!14483 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 307, column: 6)
!14484 = !DILocation(line: 307, column: 6, scope: !14421)
!14485 = !DILocation(line: 308, column: 10, scope: !14483)
!14486 = !DILocation(line: 308, column: 3, scope: !14483)
!14487 = !DILocation(line: 309, column: 41, scope: !14421)
!14488 = !DILocation(line: 309, column: 52, scope: !14421)
!14489 = !DILocation(line: 309, column: 2, scope: !14421)
!14490 = !DILocation(line: 310, column: 2, scope: !14421)
!14491 = !DILocation(line: 311, column: 1, scope: !14421)
!14492 = distinct !DISubprogram(name: "mlxsw_pci_sdq_fini", scope: !3, file: !3, line: 313, type: !8379, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14493 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !14492, file: !3, line: 313, type: !7722)
!14494 = !DILocation(line: 313, column: 50, scope: !14492)
!14495 = !DILocalVariable(name: "q", arg: 2, scope: !14492, file: !3, line: 314, type: !7669)
!14496 = !DILocation(line: 314, column: 35, scope: !14492)
!14497 = !DILocation(line: 316, column: 22, scope: !14492)
!14498 = !DILocation(line: 316, column: 33, scope: !14492)
!14499 = !DILocation(line: 316, column: 39, scope: !14492)
!14500 = !DILocation(line: 316, column: 42, scope: !14492)
!14501 = !DILocation(line: 316, column: 2, scope: !14492)
!14502 = !DILocation(line: 317, column: 1, scope: !14492)
!14503 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_sw2hw_dq_cq_set", scope: !7482, file: !7482, line: 906, type: !11071, scopeLine: 906, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14504 = !DILocalVariable(name: "buf", arg: 1, scope: !14503, file: !7482, line: 906, type: !1093)
!14505 = !DILocation(line: 906, column: 1, scope: !14503)
!14506 = !DILocalVariable(name: "val", arg: 2, scope: !14503, file: !7482, line: 906, type: !1042)
!14507 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_sw2hw_dq_sdq_tclass_set", scope: !7482, file: !7482, line: 912, type: !11071, scopeLine: 912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14508 = !DILocalVariable(name: "buf", arg: 1, scope: !14507, file: !7482, line: 912, type: !1093)
!14509 = !DILocation(line: 912, column: 1, scope: !14507)
!14510 = !DILocalVariable(name: "val", arg: 2, scope: !14507, file: !7482, line: 912, type: !1042)
!14511 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_sw2hw_dq_log2_dq_sz_set", scope: !7482, file: !7482, line: 917, type: !11071, scopeLine: 917, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14512 = !DILocalVariable(name: "buf", arg: 1, scope: !14511, file: !7482, line: 917, type: !1093)
!14513 = !DILocation(line: 917, column: 1, scope: !14511)
!14514 = !DILocalVariable(name: "val", arg: 2, scope: !14511, file: !7482, line: 917, type: !1042)
!14515 = distinct !DISubprogram(name: "mlxsw_cmd_mbox_sw2hw_dq_pa_set", scope: !7482, file: !7482, line: 922, type: !11378, scopeLine: 922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14516 = !DILocalVariable(name: "buf", arg: 1, scope: !14515, file: !7482, line: 922, type: !1093)
!14517 = !DILocation(line: 922, column: 1, scope: !14515)
!14518 = !DILocalVariable(name: "index", arg: 2, scope: !14515, file: !7482, line: 922, type: !531)
!14519 = !DILocalVariable(name: "val", arg: 3, scope: !14515, file: !7482, line: 922, type: !386)
!14520 = distinct !DISubprogram(name: "mlxsw_cmd_sw2hw_sdq", scope: !7482, file: !7482, line: 889, type: !11392, scopeLine: 891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14521 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !14520, file: !7482, line: 889, type: !8008)
!14522 = !DILocation(line: 889, column: 58, scope: !14520)
!14523 = !DILocalVariable(name: "in_mbox", arg: 2, scope: !14520, file: !7482, line: 890, type: !1093)
!14524 = !DILocation(line: 890, column: 17, scope: !14520)
!14525 = !DILocalVariable(name: "dq_number", arg: 3, scope: !14520, file: !7482, line: 890, type: !1042)
!14526 = !DILocation(line: 890, column: 30, scope: !14520)
!14527 = !DILocation(line: 892, column: 30, scope: !14520)
!14528 = !DILocation(line: 892, column: 42, scope: !14520)
!14529 = !DILocation(line: 892, column: 51, scope: !14520)
!14530 = !DILocation(line: 892, column: 9, scope: !14520)
!14531 = !DILocation(line: 892, column: 2, scope: !14520)
!14532 = distinct !DISubprogram(name: "__mlxsw_cmd_sw2hw_dq", scope: !7482, file: !7482, line: 875, type: !14533, scopeLine: 878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14533 = !DISubroutineType(types: !14534)
!14534 = !{!32, !8008, !1093, !1042, !849}
!14535 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !14532, file: !7482, line: 875, type: !8008)
!14536 = !DILocation(line: 875, column: 59, scope: !14532)
!14537 = !DILocalVariable(name: "in_mbox", arg: 2, scope: !14532, file: !7482, line: 876, type: !1093)
!14538 = !DILocation(line: 876, column: 18, scope: !14532)
!14539 = !DILocalVariable(name: "dq_number", arg: 3, scope: !14532, file: !7482, line: 876, type: !1042)
!14540 = !DILocation(line: 876, column: 31, scope: !14532)
!14541 = !DILocalVariable(name: "opcode_mod", arg: 4, scope: !14532, file: !7482, line: 877, type: !849)
!14542 = !DILocation(line: 877, column: 15, scope: !14532)
!14543 = !DILocation(line: 879, column: 27, scope: !14532)
!14544 = !DILocation(line: 880, column: 6, scope: !14532)
!14545 = !DILocation(line: 880, column: 18, scope: !14532)
!14546 = !DILocation(line: 881, column: 6, scope: !14532)
!14547 = !DILocation(line: 879, column: 9, scope: !14532)
!14548 = !DILocation(line: 879, column: 2, scope: !14532)
!14549 = distinct !DISubprogram(name: "mlxsw_cmd_hw2sw_sdq", scope: !7482, file: !7482, line: 941, type: !12815, scopeLine: 943, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14550 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !14549, file: !7482, line: 941, type: !8008)
!14551 = !DILocation(line: 941, column: 58, scope: !14549)
!14552 = !DILocalVariable(name: "dq_number", arg: 2, scope: !14549, file: !7482, line: 942, type: !1042)
!14553 = !DILocation(line: 942, column: 15, scope: !14549)
!14554 = !DILocation(line: 944, column: 30, scope: !14549)
!14555 = !DILocation(line: 944, column: 42, scope: !14549)
!14556 = !DILocation(line: 944, column: 9, scope: !14549)
!14557 = !DILocation(line: 944, column: 2, scope: !14549)
!14558 = distinct !DISubprogram(name: "__mlxsw_cmd_hw2sw_dq", scope: !7482, file: !7482, line: 934, type: !14559, scopeLine: 936, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14559 = !DISubroutineType(types: !14560)
!14560 = !{!32, !8008, !1042, !849}
!14561 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !14558, file: !7482, line: 934, type: !8008)
!14562 = !DILocation(line: 934, column: 59, scope: !14558)
!14563 = !DILocalVariable(name: "dq_number", arg: 2, scope: !14558, file: !7482, line: 935, type: !1042)
!14564 = !DILocation(line: 935, column: 16, scope: !14558)
!14565 = !DILocalVariable(name: "opcode_mod", arg: 3, scope: !14558, file: !7482, line: 935, type: !849)
!14566 = !DILocation(line: 935, column: 30, scope: !14558)
!14567 = !DILocation(line: 937, column: 29, scope: !14558)
!14568 = !DILocation(line: 938, column: 8, scope: !14558)
!14569 = !DILocation(line: 938, column: 20, scope: !14558)
!14570 = !DILocation(line: 937, column: 9, scope: !14558)
!14571 = !DILocation(line: 937, column: 2, scope: !14558)
!14572 = distinct !DISubprogram(name: "mlxsw_pci_rdq_init", scope: !3, file: !3, line: 389, type: !8383, scopeLine: 391, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14573 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !14572, file: !3, line: 389, type: !7722)
!14574 = !DILocation(line: 389, column: 49, scope: !14572)
!14575 = !DILocalVariable(name: "mbox", arg: 2, scope: !14572, file: !3, line: 389, type: !1093)
!14576 = !DILocation(line: 389, column: 66, scope: !14572)
!14577 = !DILocalVariable(name: "q", arg: 3, scope: !14572, file: !3, line: 390, type: !7669)
!14578 = !DILocation(line: 390, column: 34, scope: !14572)
!14579 = !DILocalVariable(name: "elem_info", scope: !14572, file: !3, line: 392, type: !7680)
!14580 = !DILocation(line: 392, column: 36, scope: !14572)
!14581 = !DILocalVariable(name: "sdq_count", scope: !14572, file: !3, line: 393, type: !849)
!14582 = !DILocation(line: 393, column: 5, scope: !14572)
!14583 = !DILocation(line: 393, column: 37, scope: !14572)
!14584 = !DILocation(line: 393, column: 17, scope: !14572)
!14585 = !DILocalVariable(name: "i", scope: !14572, file: !3, line: 394, type: !32)
!14586 = !DILocation(line: 394, column: 6, scope: !14572)
!14587 = !DILocalVariable(name: "err", scope: !14572, file: !3, line: 395, type: !32)
!14588 = !DILocation(line: 395, column: 6, scope: !14572)
!14589 = !DILocation(line: 397, column: 2, scope: !14572)
!14590 = !DILocation(line: 397, column: 5, scope: !14572)
!14591 = !DILocation(line: 397, column: 22, scope: !14572)
!14592 = !DILocation(line: 398, column: 2, scope: !14572)
!14593 = !DILocation(line: 398, column: 5, scope: !14572)
!14594 = !DILocation(line: 398, column: 22, scope: !14572)
!14595 = !DILocation(line: 403, column: 33, scope: !14572)
!14596 = !DILocation(line: 403, column: 39, scope: !14572)
!14597 = !DILocation(line: 403, column: 51, scope: !14572)
!14598 = !DILocation(line: 403, column: 54, scope: !14572)
!14599 = !DILocation(line: 403, column: 49, scope: !14572)
!14600 = !DILocation(line: 403, column: 2, scope: !14572)
!14601 = !DILocation(line: 404, column: 41, scope: !14572)
!14602 = !DILocation(line: 404, column: 2, scope: !14572)
!14603 = !DILocation(line: 405, column: 9, scope: !14604)
!14604 = distinct !DILexicalBlock(scope: !14572, file: !3, line: 405, column: 2)
!14605 = !DILocation(line: 405, column: 7, scope: !14604)
!14606 = !DILocation(line: 405, column: 14, scope: !14607)
!14607 = distinct !DILexicalBlock(scope: !14604, file: !3, line: 405, column: 2)
!14608 = !DILocation(line: 405, column: 16, scope: !14607)
!14609 = !DILocation(line: 405, column: 2, scope: !14604)
!14610 = !DILocalVariable(name: "mapaddr", scope: !14611, file: !3, line: 406, type: !2091)
!14611 = distinct !DILexicalBlock(scope: !14607, file: !3, line: 405, column: 43)
!14612 = !DILocation(line: 406, column: 14, scope: !14611)
!14613 = !DILocation(line: 406, column: 51, scope: !14611)
!14614 = !DILocation(line: 406, column: 54, scope: !14611)
!14615 = !DILocation(line: 406, column: 24, scope: !14611)
!14616 = !DILocation(line: 408, column: 34, scope: !14611)
!14617 = !DILocation(line: 408, column: 40, scope: !14611)
!14618 = !DILocation(line: 408, column: 43, scope: !14611)
!14619 = !DILocation(line: 408, column: 3, scope: !14611)
!14620 = !DILocation(line: 409, column: 2, scope: !14611)
!14621 = !DILocation(line: 405, column: 39, scope: !14607)
!14622 = !DILocation(line: 405, column: 2, scope: !14607)
!14623 = distinct !{!14623, !14609, !14624}
!14624 = !DILocation(line: 409, column: 2, scope: !14604)
!14625 = !DILocation(line: 411, column: 28, scope: !14572)
!14626 = !DILocation(line: 411, column: 39, scope: !14572)
!14627 = !DILocation(line: 411, column: 45, scope: !14572)
!14628 = !DILocation(line: 411, column: 51, scope: !14572)
!14629 = !DILocation(line: 411, column: 54, scope: !14572)
!14630 = !DILocation(line: 411, column: 8, scope: !14572)
!14631 = !DILocation(line: 411, column: 6, scope: !14572)
!14632 = !DILocation(line: 412, column: 6, scope: !14633)
!14633 = distinct !DILexicalBlock(scope: !14572, file: !3, line: 412, column: 6)
!14634 = !DILocation(line: 412, column: 6, scope: !14572)
!14635 = !DILocation(line: 413, column: 10, scope: !14633)
!14636 = !DILocation(line: 413, column: 3, scope: !14633)
!14637 = !DILocation(line: 415, column: 41, scope: !14572)
!14638 = !DILocation(line: 415, column: 52, scope: !14572)
!14639 = !DILocation(line: 415, column: 2, scope: !14572)
!14640 = !DILocation(line: 417, column: 9, scope: !14641)
!14641 = distinct !DILexicalBlock(scope: !14572, file: !3, line: 417, column: 2)
!14642 = !DILocation(line: 417, column: 7, scope: !14641)
!14643 = !DILocation(line: 417, column: 14, scope: !14644)
!14644 = distinct !DILexicalBlock(scope: !14641, file: !3, line: 417, column: 2)
!14645 = !DILocation(line: 417, column: 18, scope: !14644)
!14646 = !DILocation(line: 417, column: 21, scope: !14644)
!14647 = !DILocation(line: 417, column: 16, scope: !14644)
!14648 = !DILocation(line: 417, column: 2, scope: !14641)
!14649 = !DILocation(line: 418, column: 54, scope: !14650)
!14650 = distinct !DILexicalBlock(scope: !14644, file: !3, line: 417, column: 33)
!14651 = !DILocation(line: 418, column: 15, scope: !14650)
!14652 = !DILocation(line: 418, column: 13, scope: !14650)
!14653 = !DILocation(line: 419, column: 3, scope: !14650)
!14654 = !DILocation(line: 419, column: 3, scope: !14655)
!14655 = distinct !DILexicalBlock(scope: !14656, file: !3, line: 419, column: 3)
!14656 = distinct !DILexicalBlock(scope: !14650, file: !3, line: 419, column: 3)
!14657 = !DILocation(line: 419, column: 3, scope: !14656)
!14658 = !DILocation(line: 419, column: 3, scope: !14659)
!14659 = distinct !DILexicalBlock(scope: !14655, file: !3, line: 419, column: 3)
!14660 = !DILocation(line: 419, column: 3, scope: !14661)
!14661 = distinct !DILexicalBlock(scope: !14659, file: !3, line: 419, column: 3)
!14662 = !DILocation(line: 419, column: 3, scope: !14663)
!14663 = distinct !DILexicalBlock(scope: !14659, file: !3, line: 419, column: 3)
!14664 = !{i32 -2136902721, i32 -2136902692, i32 -2136902646, i32 -2136902588, i32 -2136902534, i32 -2136902480, i32 -2136902425, i32 -2136902394}
!14665 = !DILocation(line: 419, column: 3, scope: !14666)
!14666 = distinct !DILexicalBlock(scope: !14667, file: !3, line: 419, column: 3)
!14667 = distinct !DILexicalBlock(scope: !14659, file: !3, line: 419, column: 3)
!14668 = !{i32 -2136901930, i32 -2136901923, i32 -2136901869, i32 -2136901838, i32 -2136901808}
!14669 = !DILocation(line: 419, column: 3, scope: !14667)
!14670 = !DILocation(line: 420, column: 33, scope: !14650)
!14671 = !DILocation(line: 420, column: 44, scope: !14650)
!14672 = !DILocation(line: 420, column: 9, scope: !14650)
!14673 = !DILocation(line: 420, column: 7, scope: !14650)
!14674 = !DILocation(line: 421, column: 7, scope: !14675)
!14675 = distinct !DILexicalBlock(scope: !14650, file: !3, line: 421, column: 7)
!14676 = !DILocation(line: 421, column: 7, scope: !14650)
!14677 = !DILocation(line: 422, column: 4, scope: !14675)
!14678 = !DILocation(line: 424, column: 3, scope: !14650)
!14679 = !DILocation(line: 424, column: 6, scope: !14650)
!14680 = !DILocation(line: 424, column: 22, scope: !14650)
!14681 = !DILocation(line: 425, column: 42, scope: !14650)
!14682 = !DILocation(line: 425, column: 53, scope: !14650)
!14683 = !DILocation(line: 425, column: 3, scope: !14650)
!14684 = !DILocation(line: 426, column: 2, scope: !14650)
!14685 = !DILocation(line: 417, column: 29, scope: !14644)
!14686 = !DILocation(line: 417, column: 2, scope: !14644)
!14687 = distinct !{!14687, !14648, !14688}
!14688 = !DILocation(line: 426, column: 2, scope: !14641)
!14689 = !DILocation(line: 428, column: 2, scope: !14572)
!14690 = !DILabel(scope: !14572, name: "rollback", file: !3, line: 430)
!14691 = !DILocation(line: 430, column: 1, scope: !14572)
!14692 = !DILocation(line: 431, column: 8, scope: !14693)
!14693 = distinct !DILexicalBlock(scope: !14572, file: !3, line: 431, column: 2)
!14694 = !DILocation(line: 431, column: 7, scope: !14693)
!14695 = !DILocation(line: 431, column: 12, scope: !14696)
!14696 = distinct !DILexicalBlock(scope: !14693, file: !3, line: 431, column: 2)
!14697 = !DILocation(line: 431, column: 14, scope: !14696)
!14698 = !DILocation(line: 431, column: 2, scope: !14693)
!14699 = !DILocation(line: 432, column: 45, scope: !14700)
!14700 = distinct !DILexicalBlock(scope: !14696, file: !3, line: 431, column: 25)
!14701 = !DILocation(line: 432, column: 48, scope: !14700)
!14702 = !DILocation(line: 432, column: 15, scope: !14700)
!14703 = !DILocation(line: 432, column: 13, scope: !14700)
!14704 = !DILocation(line: 433, column: 26, scope: !14700)
!14705 = !DILocation(line: 433, column: 37, scope: !14700)
!14706 = !DILocation(line: 433, column: 3, scope: !14700)
!14707 = !DILocation(line: 434, column: 2, scope: !14700)
!14708 = !DILocation(line: 431, column: 21, scope: !14696)
!14709 = !DILocation(line: 431, column: 2, scope: !14696)
!14710 = distinct !{!14710, !14698, !14711}
!14711 = !DILocation(line: 434, column: 2, scope: !14693)
!14712 = !DILocation(line: 435, column: 22, scope: !14572)
!14713 = !DILocation(line: 435, column: 33, scope: !14572)
!14714 = !DILocation(line: 435, column: 39, scope: !14572)
!14715 = !DILocation(line: 435, column: 42, scope: !14572)
!14716 = !DILocation(line: 435, column: 2, scope: !14572)
!14717 = !DILocation(line: 437, column: 9, scope: !14572)
!14718 = !DILocation(line: 437, column: 2, scope: !14572)
!14719 = !DILocation(line: 438, column: 1, scope: !14572)
!14720 = distinct !DISubprogram(name: "mlxsw_pci_rdq_fini", scope: !3, file: !3, line: 440, type: !8379, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14721 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !14720, file: !3, line: 440, type: !7722)
!14722 = !DILocation(line: 440, column: 50, scope: !14720)
!14723 = !DILocalVariable(name: "q", arg: 2, scope: !14720, file: !3, line: 441, type: !7669)
!14724 = !DILocation(line: 441, column: 35, scope: !14720)
!14725 = !DILocalVariable(name: "elem_info", scope: !14720, file: !3, line: 443, type: !7680)
!14726 = !DILocation(line: 443, column: 36, scope: !14720)
!14727 = !DILocalVariable(name: "i", scope: !14720, file: !3, line: 444, type: !32)
!14728 = !DILocation(line: 444, column: 6, scope: !14720)
!14729 = !DILocation(line: 446, column: 22, scope: !14720)
!14730 = !DILocation(line: 446, column: 33, scope: !14720)
!14731 = !DILocation(line: 446, column: 39, scope: !14720)
!14732 = !DILocation(line: 446, column: 42, scope: !14720)
!14733 = !DILocation(line: 446, column: 2, scope: !14720)
!14734 = !DILocation(line: 447, column: 9, scope: !14735)
!14735 = distinct !DILexicalBlock(scope: !14720, file: !3, line: 447, column: 2)
!14736 = !DILocation(line: 447, column: 7, scope: !14735)
!14737 = !DILocation(line: 447, column: 14, scope: !14738)
!14738 = distinct !DILexicalBlock(scope: !14735, file: !3, line: 447, column: 2)
!14739 = !DILocation(line: 447, column: 18, scope: !14738)
!14740 = !DILocation(line: 447, column: 21, scope: !14738)
!14741 = !DILocation(line: 447, column: 16, scope: !14738)
!14742 = !DILocation(line: 447, column: 2, scope: !14735)
!14743 = !DILocation(line: 448, column: 45, scope: !14744)
!14744 = distinct !DILexicalBlock(scope: !14738, file: !3, line: 447, column: 33)
!14745 = !DILocation(line: 448, column: 48, scope: !14744)
!14746 = !DILocation(line: 448, column: 15, scope: !14744)
!14747 = !DILocation(line: 448, column: 13, scope: !14744)
!14748 = !DILocation(line: 449, column: 26, scope: !14744)
!14749 = !DILocation(line: 449, column: 37, scope: !14744)
!14750 = !DILocation(line: 449, column: 3, scope: !14744)
!14751 = !DILocation(line: 450, column: 2, scope: !14744)
!14752 = !DILocation(line: 447, column: 29, scope: !14738)
!14753 = !DILocation(line: 447, column: 2, scope: !14738)
!14754 = distinct !{!14754, !14742, !14755}
!14755 = !DILocation(line: 450, column: 2, scope: !14735)
!14756 = !DILocation(line: 451, column: 1, scope: !14720)
!14757 = distinct !DISubprogram(name: "mlxsw_pci_sdq_count", scope: !3, file: !3, line: 192, type: !12843, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14758 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !14757, file: !3, line: 192, type: !7722)
!14759 = !DILocation(line: 192, column: 49, scope: !14757)
!14760 = !DILocation(line: 194, column: 33, scope: !14757)
!14761 = !DILocation(line: 194, column: 9, scope: !14757)
!14762 = !DILocation(line: 194, column: 2, scope: !14757)
!14763 = distinct !DISubprogram(name: "mlxsw_cmd_sw2hw_rdq", scope: !7482, file: !7482, line: 896, type: !11392, scopeLine: 898, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14764 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !14763, file: !7482, line: 896, type: !8008)
!14765 = !DILocation(line: 896, column: 58, scope: !14763)
!14766 = !DILocalVariable(name: "in_mbox", arg: 2, scope: !14763, file: !7482, line: 897, type: !1093)
!14767 = !DILocation(line: 897, column: 17, scope: !14763)
!14768 = !DILocalVariable(name: "dq_number", arg: 3, scope: !14763, file: !7482, line: 897, type: !1042)
!14769 = !DILocation(line: 897, column: 30, scope: !14763)
!14770 = !DILocation(line: 899, column: 30, scope: !14763)
!14771 = !DILocation(line: 899, column: 42, scope: !14763)
!14772 = !DILocation(line: 899, column: 51, scope: !14763)
!14773 = !DILocation(line: 899, column: 9, scope: !14763)
!14774 = !DILocation(line: 899, column: 2, scope: !14763)
!14775 = distinct !DISubprogram(name: "mlxsw_pci_queue_elem_info_producer_get", scope: !3, file: !3, line: 149, type: !13009, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14776 = !DILocalVariable(name: "q", arg: 1, scope: !14775, file: !3, line: 149, type: !7669)
!14777 = !DILocation(line: 149, column: 64, scope: !14775)
!14778 = !DILocalVariable(name: "index", scope: !14775, file: !3, line: 151, type: !32)
!14779 = !DILocation(line: 151, column: 6, scope: !14775)
!14780 = !DILocation(line: 151, column: 14, scope: !14775)
!14781 = !DILocation(line: 151, column: 17, scope: !14775)
!14782 = !DILocation(line: 151, column: 37, scope: !14775)
!14783 = !DILocation(line: 151, column: 40, scope: !14775)
!14784 = !DILocation(line: 151, column: 46, scope: !14775)
!14785 = !DILocation(line: 151, column: 34, scope: !14775)
!14786 = !DILocation(line: 153, column: 13, scope: !14787)
!14787 = distinct !DILexicalBlock(scope: !14775, file: !3, line: 153, column: 6)
!14788 = !DILocation(line: 153, column: 16, scope: !14787)
!14789 = !DILocation(line: 153, column: 35, scope: !14787)
!14790 = !DILocation(line: 153, column: 38, scope: !14787)
!14791 = !DILocation(line: 153, column: 33, scope: !14787)
!14792 = !DILocation(line: 153, column: 6, scope: !14787)
!14793 = !DILocation(line: 153, column: 59, scope: !14787)
!14794 = !DILocation(line: 153, column: 62, scope: !14787)
!14795 = !DILocation(line: 153, column: 56, scope: !14787)
!14796 = !DILocation(line: 153, column: 6, scope: !14775)
!14797 = !DILocation(line: 154, column: 3, scope: !14787)
!14798 = !DILocation(line: 155, column: 39, scope: !14775)
!14799 = !DILocation(line: 155, column: 42, scope: !14775)
!14800 = !DILocation(line: 155, column: 9, scope: !14775)
!14801 = !DILocation(line: 155, column: 2, scope: !14775)
!14802 = !DILocation(line: 156, column: 1, scope: !14775)
!14803 = distinct !DISubprogram(name: "mlxsw_pci_rdq_skb_free", scope: !3, file: !3, line: 376, type: !14804, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14804 = !DISubroutineType(types: !14805)
!14805 = !{null, !7722, !7680}
!14806 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !14803, file: !3, line: 376, type: !7722)
!14807 = !DILocation(line: 376, column: 54, scope: !14803)
!14808 = !DILocalVariable(name: "elem_info", arg: 2, scope: !14803, file: !3, line: 377, type: !7680)
!14809 = !DILocation(line: 377, column: 42, scope: !14803)
!14810 = !DILocalVariable(name: "skb", scope: !14803, file: !3, line: 379, type: !470)
!14811 = !DILocation(line: 379, column: 18, scope: !14803)
!14812 = !DILocalVariable(name: "wqe", scope: !14803, file: !3, line: 380, type: !1093)
!14813 = !DILocation(line: 380, column: 8, scope: !14803)
!14814 = !DILocation(line: 382, column: 8, scope: !14803)
!14815 = !DILocation(line: 382, column: 19, scope: !14803)
!14816 = !DILocation(line: 382, column: 21, scope: !14803)
!14817 = !DILocation(line: 382, column: 25, scope: !14803)
!14818 = !DILocation(line: 382, column: 6, scope: !14803)
!14819 = !DILocation(line: 383, column: 8, scope: !14803)
!14820 = !DILocation(line: 383, column: 19, scope: !14803)
!14821 = !DILocation(line: 383, column: 6, scope: !14803)
!14822 = !DILocation(line: 385, column: 27, scope: !14803)
!14823 = !DILocation(line: 385, column: 38, scope: !14803)
!14824 = !DILocation(line: 385, column: 2, scope: !14803)
!14825 = !DILocation(line: 386, column: 20, scope: !14803)
!14826 = !DILocation(line: 386, column: 2, scope: !14803)
!14827 = !DILocation(line: 387, column: 1, scope: !14803)
!14828 = distinct !DISubprogram(name: "mlxsw_cmd_hw2sw_rdq", scope: !7482, file: !7482, line: 948, type: !12815, scopeLine: 950, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14829 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !14828, file: !7482, line: 948, type: !8008)
!14830 = !DILocation(line: 948, column: 58, scope: !14828)
!14831 = !DILocalVariable(name: "dq_number", arg: 2, scope: !14828, file: !7482, line: 949, type: !1042)
!14832 = !DILocation(line: 949, column: 15, scope: !14828)
!14833 = !DILocation(line: 951, column: 30, scope: !14828)
!14834 = !DILocation(line: 951, column: 42, scope: !14828)
!14835 = !DILocation(line: 951, column: 9, scope: !14828)
!14836 = !DILocation(line: 951, column: 2, scope: !14828)
!14837 = distinct !DISubprogram(name: "mlxsw_pci_eq_get", scope: !3, file: !3, line: 229, type: !12973, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14838 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !14837, file: !3, line: 229, type: !7722)
!14839 = !DILocation(line: 229, column: 67, scope: !14837)
!14840 = !DILocalVariable(name: "q_num", arg: 2, scope: !14837, file: !3, line: 230, type: !849)
!14841 = !DILocation(line: 230, column: 10, scope: !14837)
!14842 = !DILocation(line: 232, column: 31, scope: !14837)
!14843 = !DILocation(line: 232, column: 67, scope: !14837)
!14844 = !DILocation(line: 232, column: 9, scope: !14837)
!14845 = !DILocation(line: 232, column: 2, scope: !14837)
!14846 = distinct !DISubprogram(name: "mlxsw_cmd_unmap_fa", scope: !7482, file: !7482, line: 490, type: !14847, scopeLine: 491, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14847 = !DISubroutineType(types: !14848)
!14848 = !{!32, !8008}
!14849 = !DILocalVariable(name: "mlxsw_core", arg: 1, scope: !14846, file: !7482, line: 490, type: !8008)
!14850 = !DILocation(line: 490, column: 57, scope: !14846)
!14851 = !DILocation(line: 492, column: 29, scope: !14846)
!14852 = !DILocation(line: 492, column: 9, scope: !14846)
!14853 = !DILocation(line: 492, column: 2, scope: !14846)
!14854 = distinct !DISubprogram(name: "mlxsw_pci_sdq_pick", scope: !3, file: !3, line: 1549, type: !14855, scopeLine: 1551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14855 = !DISubroutineType(types: !14856)
!14856 = !{!7669, !7722, !8207}
!14857 = !DILocalVariable(name: "mlxsw_pci", arg: 1, scope: !14854, file: !3, line: 1549, type: !7722)
!14858 = !DILocation(line: 1549, column: 38, scope: !14854)
!14859 = !DILocalVariable(name: "tx_info", arg: 2, scope: !14854, file: !3, line: 1550, type: !8207)
!14860 = !DILocation(line: 1550, column: 34, scope: !14854)
!14861 = !DILocalVariable(name: "ctl_sdq_count", scope: !14854, file: !3, line: 1552, type: !849)
!14862 = !DILocation(line: 1552, column: 5, scope: !14854)
!14863 = !DILocation(line: 1552, column: 41, scope: !14854)
!14864 = !DILocation(line: 1552, column: 21, scope: !14854)
!14865 = !DILocation(line: 1552, column: 52, scope: !14854)
!14866 = !DILocalVariable(name: "sdqn", scope: !14854, file: !3, line: 1553, type: !849)
!14867 = !DILocation(line: 1553, column: 5, scope: !14854)
!14868 = !DILocation(line: 1555, column: 6, scope: !14869)
!14869 = distinct !DILexicalBlock(scope: !14854, file: !3, line: 1555, column: 6)
!14870 = !DILocation(line: 1555, column: 15, scope: !14869)
!14871 = !DILocation(line: 1555, column: 6, scope: !14854)
!14872 = !DILocation(line: 1556, column: 8, scope: !14873)
!14873 = distinct !DILexicalBlock(scope: !14869, file: !3, line: 1555, column: 24)
!14874 = !DILocation(line: 1557, column: 2, scope: !14873)
!14875 = !DILocation(line: 1558, column: 3, scope: !14876)
!14876 = distinct !DILexicalBlock(scope: !14869, file: !3, line: 1557, column: 9)
!14877 = !DILocation(line: 1558, column: 3, scope: !14878)
!14878 = distinct !DILexicalBlock(scope: !14876, file: !3, line: 1558, column: 3)
!14879 = !DILocation(line: 1559, column: 15, scope: !14876)
!14880 = !DILocation(line: 1559, column: 24, scope: !14876)
!14881 = !DILocation(line: 1559, column: 37, scope: !14876)
!14882 = !DILocation(line: 1559, column: 35, scope: !14876)
!14883 = !DILocation(line: 1559, column: 12, scope: !14876)
!14884 = !DILocation(line: 1559, column: 10, scope: !14876)
!14885 = !DILocation(line: 1559, column: 8, scope: !14876)
!14886 = !DILocation(line: 1562, column: 27, scope: !14854)
!14887 = !DILocation(line: 1562, column: 38, scope: !14854)
!14888 = !DILocation(line: 1562, column: 9, scope: !14854)
!14889 = !DILocation(line: 1562, column: 2, scope: !14854)
!14890 = distinct !DISubprogram(name: "skb_linearize", scope: !472, file: !472, line: 3306, type: !14891, scopeLine: 3307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14891 = !DISubroutineType(types: !14892)
!14892 = !{!32, !470}
!14893 = !DILocalVariable(name: "skb", arg: 1, scope: !14890, file: !472, line: 3306, type: !470)
!14894 = !DILocation(line: 3306, column: 49, scope: !14890)
!14895 = !DILocation(line: 3308, column: 26, scope: !14890)
!14896 = !DILocation(line: 3308, column: 9, scope: !14890)
!14897 = !DILocation(line: 3308, column: 49, scope: !14890)
!14898 = !DILocation(line: 3308, column: 33, scope: !14890)
!14899 = !DILocation(line: 3308, column: 2, scope: !14890)
!14900 = distinct !DISubprogram(name: "spin_lock_bh", scope: !12250, file: !12250, line: 357, type: !13540, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14901 = !DILocalVariable(name: "val", arg: 1, scope: !14902, file: !14903, line: 77, type: !32)
!14902 = distinct !DISubprogram(name: "__preempt_count_add", scope: !14903, file: !14903, line: 77, type: !3857, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14903 = !DIFile(filename: "./arch/x86/include/asm/preempt.h", directory: "/home/lizy2001/genbc/linux")
!14904 = !DILocation(line: 77, column: 53, scope: !14902, inlinedAt: !14905)
!14905 = distinct !DILocation(line: 12, column: 2, scope: !14906, inlinedAt: !14910)
!14906 = distinct !DISubprogram(name: "__local_bh_disable_ip", scope: !14907, file: !14907, line: 10, type: !14908, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14907 = !DIFile(filename: "./include/linux/bottom_half.h", directory: "/home/lizy2001/genbc/linux")
!14908 = !DISubroutineType(types: !14909)
!14909 = !{null, !367, !7}
!14910 = distinct !DILocation(line: 359, column: 2, scope: !14911)
!14911 = distinct !DILexicalBlock(scope: !14900, file: !12250, line: 359, column: 2)
!14912 = !DILocalVariable(name: "pao_ID__", scope: !14913, file: !14903, line: 79, type: !14914)
!14913 = distinct !DILexicalBlock(scope: !14902, file: !14903, line: 79, column: 2)
!14914 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!14915 = !DILocation(line: 79, column: 2, scope: !14913, inlinedAt: !14905)
!14916 = !DILocalVariable(name: "pto_val__", scope: !14917, file: !14903, line: 79, type: !1042)
!14917 = distinct !DILexicalBlock(scope: !14918, file: !14903, line: 79, column: 2)
!14918 = distinct !DILexicalBlock(scope: !14919, file: !14903, line: 79, column: 2)
!14919 = distinct !DILexicalBlock(scope: !14913, file: !14903, line: 79, column: 2)
!14920 = !DILocation(line: 79, column: 2, scope: !14917, inlinedAt: !14905)
!14921 = !DILocalVariable(name: "ip", arg: 1, scope: !14906, file: !14907, line: 10, type: !367)
!14922 = !DILocation(line: 10, column: 65, scope: !14906, inlinedAt: !14910)
!14923 = !DILocalVariable(name: "cnt", arg: 2, scope: !14906, file: !14907, line: 10, type: !7)
!14924 = !DILocation(line: 10, column: 82, scope: !14906, inlinedAt: !14910)
!14925 = !DILocalVariable(name: "lock", arg: 1, scope: !14900, file: !12250, line: 357, type: !2236)
!14926 = !DILocation(line: 357, column: 54, scope: !14900)
!14927 = !DILocation(line: 359, column: 2, scope: !14900)
!14928 = !DILocation(line: 359, column: 2, scope: !14929)
!14929 = distinct !DILexicalBlock(scope: !14911, file: !12250, line: 359, column: 2)
!14930 = !DILabel(scope: !14929, name: "__here", file: !12250, line: 359)
!14931 = !DILocation(line: 12, column: 2, scope: !14906, inlinedAt: !14910)
!14932 = !{i32 -2145499266}
!14933 = !DILocation(line: 13, column: 2, scope: !14906, inlinedAt: !14910)
!14934 = !{i32 -2145489664}
!14935 = !DILocation(line: 359, column: 2, scope: !14911)
!14936 = !DILocation(line: 359, column: 2, scope: !14937)
!14937 = distinct !DILexicalBlock(scope: !14911, file: !12250, line: 359, column: 2)
!14938 = !DILocation(line: 360, column: 1, scope: !14900)
!14939 = distinct !DISubprogram(name: "mlxsw_pci_wqe_c_set", scope: !7410, file: !7410, line: 77, type: !11071, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14940 = !DILocalVariable(name: "buf", arg: 1, scope: !14939, file: !7410, line: 77, type: !1093)
!14941 = !DILocation(line: 77, column: 1, scope: !14939)
!14942 = !DILocalVariable(name: "val", arg: 2, scope: !14939, file: !7410, line: 77, type: !1042)
!14943 = distinct !DISubprogram(name: "mlxsw_pci_wqe_lp_set", scope: !7410, file: !7410, line: 89, type: !11071, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14944 = !DILocalVariable(name: "buf", arg: 1, scope: !14943, file: !7410, line: 89, type: !1093)
!14945 = !DILocation(line: 89, column: 1, scope: !14943)
!14946 = !DILocalVariable(name: "val", arg: 2, scope: !14943, file: !7410, line: 89, type: !1042)
!14947 = distinct !DISubprogram(name: "mlxsw_pci_wqe_type_set", scope: !7410, file: !7410, line: 94, type: !11071, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14948 = !DILocalVariable(name: "buf", arg: 1, scope: !14947, file: !7410, line: 94, type: !1093)
!14949 = !DILocation(line: 94, column: 1, scope: !14947)
!14950 = !DILocalVariable(name: "val", arg: 2, scope: !14947, file: !7410, line: 94, type: !1042)
!14951 = distinct !DISubprogram(name: "skb_headlen", scope: !472, file: !472, line: 2110, type: !14952, scopeLine: 2111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14952 = !DISubroutineType(types: !14953)
!14953 = !{!7, !7146}
!14954 = !DILocalVariable(name: "skb", arg: 1, scope: !14951, file: !472, line: 2110, type: !7146)
!14955 = !DILocation(line: 2110, column: 62, scope: !14951)
!14956 = !DILocation(line: 2112, column: 9, scope: !14951)
!14957 = !DILocation(line: 2112, column: 14, scope: !14951)
!14958 = !DILocation(line: 2112, column: 20, scope: !14951)
!14959 = !DILocation(line: 2112, column: 25, scope: !14951)
!14960 = !DILocation(line: 2112, column: 18, scope: !14951)
!14961 = !DILocation(line: 2112, column: 2, scope: !14951)
!14962 = distinct !DISubprogram(name: "skb_frag_address", scope: !472, file: !472, line: 3041, type: !14963, scopeLine: 3042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14963 = !DISubroutineType(types: !14964)
!14964 = !{!646, !9742}
!14965 = !DILocalVariable(name: "page", arg: 1, scope: !14966, file: !14, line: 1514, type: !14969)
!14966 = distinct !DISubprogram(name: "lowmem_page_address", scope: !14, file: !14, line: 1514, type: !14967, scopeLine: 1515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14967 = !DISubroutineType(types: !14968)
!14968 = !{!646, !14969}
!14969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14970, size: 64)
!14970 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1775)
!14971 = !DILocation(line: 1514, column: 69, scope: !14966, inlinedAt: !14972)
!14972 = distinct !DILocation(line: 3043, column: 9, scope: !14962)
!14973 = !DILocalVariable(name: "frag", arg: 1, scope: !14962, file: !472, line: 3041, type: !9742)
!14974 = !DILocation(line: 3041, column: 56, scope: !14962)
!14975 = !DILocation(line: 3043, column: 9, scope: !14962)
!14976 = !DILocation(line: 1516, column: 9, scope: !14966, inlinedAt: !14972)
!14977 = !DILocation(line: 3043, column: 58, scope: !14962)
!14978 = !DILocation(line: 3043, column: 45, scope: !14962)
!14979 = !DILocation(line: 3043, column: 43, scope: !14962)
!14980 = !DILocation(line: 3043, column: 2, scope: !14962)
!14981 = distinct !DISubprogram(name: "skb_frag_size", scope: !472, file: !472, line: 327, type: !14982, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14982 = !DISubroutineType(types: !14983)
!14983 = !{!7, !9742}
!14984 = !DILocalVariable(name: "frag", arg: 1, scope: !14981, file: !472, line: 327, type: !9742)
!14985 = !DILocation(line: 327, column: 60, scope: !14981)
!14986 = !DILocation(line: 329, column: 9, scope: !14981)
!14987 = !DILocation(line: 329, column: 15, scope: !14981)
!14988 = !DILocation(line: 329, column: 2, scope: !14981)
!14989 = distinct !DISubprogram(name: "spin_unlock_bh", scope: !12250, file: !12250, line: 397, type: !13540, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!14990 = !DILocalVariable(name: "lock", arg: 1, scope: !14989, file: !12250, line: 397, type: !2236)
!14991 = !DILocation(line: 397, column: 56, scope: !14989)
!14992 = !DILocation(line: 399, column: 2, scope: !14989)
!14993 = !DILocation(line: 399, column: 2, scope: !14994)
!14994 = distinct !DILexicalBlock(scope: !14995, file: !12250, line: 399, column: 2)
!14995 = distinct !DILexicalBlock(scope: !14989, file: !12250, line: 399, column: 2)
!14996 = !DILabel(scope: !14994, name: "__here", file: !12250, line: 399)
!14997 = !DILocation(line: 399, column: 2, scope: !14995)
!14998 = !DILocation(line: 399, column: 2, scope: !14999)
!14999 = distinct !DILexicalBlock(scope: !14995, file: !12250, line: 399, column: 2)
!15000 = !DILocation(line: 400, column: 1, scope: !14989)
!15001 = distinct !DISubprogram(name: "skb_is_nonlinear", scope: !472, file: !472, line: 2105, type: !15002, scopeLine: 2106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!15002 = !DISubroutineType(types: !15003)
!15003 = !{!826, !7146}
!15004 = !DILocalVariable(name: "skb", arg: 1, scope: !15001, file: !472, line: 2105, type: !7146)
!15005 = !DILocation(line: 2105, column: 59, scope: !15001)
!15006 = !DILocation(line: 2107, column: 9, scope: !15001)
!15007 = !DILocation(line: 2107, column: 14, scope: !15001)
!15008 = !DILocation(line: 2107, column: 2, scope: !15001)
!15009 = distinct !DISubprogram(name: "__skb_linearize", scope: !472, file: !472, line: 3294, type: !14891, scopeLine: 3295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!15010 = !DILocalVariable(name: "skb", arg: 1, scope: !15009, file: !472, line: 3294, type: !470)
!15011 = !DILocation(line: 3294, column: 51, scope: !15009)
!15012 = !DILocation(line: 3296, column: 26, scope: !15009)
!15013 = !DILocation(line: 3296, column: 31, scope: !15009)
!15014 = !DILocation(line: 3296, column: 36, scope: !15009)
!15015 = !DILocation(line: 3296, column: 9, scope: !15009)
!15016 = !DILocation(line: 3296, column: 2, scope: !15009)
!15017 = distinct !DISubprogram(name: "skb_frag_page", scope: !472, file: !472, line: 2983, type: !15018, scopeLine: 2984, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!15018 = !DISubroutineType(types: !15019)
!15019 = !{!1774, !9742}
!15020 = !DILocalVariable(name: "frag", arg: 1, scope: !15017, file: !472, line: 2983, type: !9742)
!15021 = !DILocation(line: 2983, column: 60, scope: !15017)
!15022 = !DILocation(line: 2985, column: 9, scope: !15017)
!15023 = !DILocation(line: 2985, column: 15, scope: !15017)
!15024 = !DILocation(line: 2985, column: 2, scope: !15017)
!15025 = distinct !DISubprogram(name: "skb_frag_off", scope: !472, file: !472, line: 2941, type: !14982, scopeLine: 2942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!15026 = !DILocalVariable(name: "frag", arg: 1, scope: !15025, file: !472, line: 2941, type: !9742)
!15027 = !DILocation(line: 2941, column: 59, scope: !15025)
!15028 = !DILocation(line: 2943, column: 9, scope: !15025)
!15029 = !DILocation(line: 2943, column: 15, scope: !15025)
!15030 = !DILocation(line: 2943, column: 2, scope: !15025)
!15031 = distinct !DISubprogram(name: "pci_get_drvdata", scope: !7728, file: !7728, line: 1865, type: !15032, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!15032 = !DISubroutineType(types: !15033)
!15033 = !{!646, !7726}
!15034 = !DILocalVariable(name: "pdev", arg: 1, scope: !15031, file: !7728, line: 1865, type: !7726)
!15035 = !DILocation(line: 1865, column: 53, scope: !15031)
!15036 = !DILocation(line: 1867, column: 26, scope: !15031)
!15037 = !DILocation(line: 1867, column: 32, scope: !15031)
!15038 = !DILocation(line: 1867, column: 9, scope: !15031)
!15039 = !DILocation(line: 1867, column: 2, scope: !15031)
!15040 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !5811, file: !5811, line: 655, type: !15041, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1642)
!15041 = !DISubroutineType(types: !15042)
!15042 = !{!646, !6439}
!15043 = !DILocalVariable(name: "dev", arg: 1, scope: !15040, file: !5811, line: 655, type: !6439)
!15044 = !DILocation(line: 655, column: 58, scope: !15040)
!15045 = !DILocation(line: 657, column: 9, scope: !15040)
!15046 = !DILocation(line: 657, column: 14, scope: !15040)
!15047 = !DILocation(line: 657, column: 2, scope: !15040)
